uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_23(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_25(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_26(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_27(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_29(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1C1326C50(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_1C136E1C8(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for Activity, &qword_1ED797B00);
}

uint64_t type metadata accessor for Activity()
{
  uint64_t result;

  result = qword_1ED797508;
  if (!qword_1ED797508)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C1326CA0(uint64_t a1, uint64_t a2)
{
  return sub_1C1328478(a1, a2, MEMORY[0x1E0D8CF68]);
}

_QWORD *sub_1C1326CEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797B90);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1C1326D50()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)(*(_QWORD *)v0 + 32) + 16);
  os_unfair_lock_lock(v1);
  v2 = sub_1C1426200();
  os_unfair_lock_unlock(v1);
  return v2;
}

uint64_t sub_1C1326D94(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  _QWORD *v36;
  __int128 v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED791E20);
  v6 = a2;
  v7 = sub_1C1426FB0();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v22 = v21 | (v14 << 6);
      }
      else
      {
        v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35)
          goto LABEL_33;
        v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          v14 = v23 + 1;
          if (v23 + 1 >= v35)
            goto LABEL_33;
          v24 = v36[v14];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v6 & 1) != 0)
              {
                v34 = 1 << *(_BYTE *)(v5 + 32);
                if (v34 >= 64)
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v34;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                v14 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_40;
                if (v14 >= v35)
                  goto LABEL_33;
                v24 = v36[v14];
                ++v25;
                if (v24)
                  goto LABEL_30;
              }
            }
            v14 = v25;
          }
        }
LABEL_30:
        v11 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      v30 = 16 * v22;
      v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v30);
      v33 = *v31;
      v32 = v31[1];
      v37 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_1C133177C(v37, *((unint64_t *)&v37 + 1));
      }
      sub_1C14270E8();
      sub_1C1426AD0();
      result = sub_1C1427100();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v17 == v27;
          if (v17 == v27)
            v17 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 16 * v18;
      v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
      *v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(_QWORD *)(v8 + 56) + v19) = v37;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v3 = v8;
  return result;
}

uint64_t sub_1C13270A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  BOOL v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  BOOL v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v5 = sub_1C1426320();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v36 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v34 - v9;
  result = MEMORY[0x1E0DEE9D8];
  v43 = MEMORY[0x1E0DEE9D8];
  v39 = *(_QWORD *)(a1 + 16);
  if (v39)
  {
    v12 = 0;
    v13 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v14 = *(_QWORD *)(v6 + 72);
    v34 = v2;
    v35 = v13;
    v38 = a1 + v13;
    v37 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v42 = a2;
    v40 = v14;
    v41 = a2 + 56;
    while (1)
    {
      v15 = v5;
      v37(v10, v38 + v40 * v12, v5);
      v16 = sub_1C14262E4();
      v18 = v17;
      if (*(_QWORD *)(v42 + 16))
      {
        v19 = v16;
        v20 = v42;
        sub_1C14270E8();
        sub_1C1426AD0();
        v21 = sub_1C1427100();
        v22 = -1 << *(_BYTE *)(v20 + 32);
        v23 = v21 & ~v22;
        if (((*(_QWORD *)(v41 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) != 0)
        {
          v24 = *(_QWORD *)(v42 + 48);
          v25 = (_QWORD *)(v24 + 16 * v23);
          v26 = *v25 == v19 && v25[1] == v18;
          if (v26 || (sub_1C1427064() & 1) != 0)
          {
LABEL_12:
            swift_bridgeObjectRelease();
            v27 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
            v5 = v15;
            v27(v36, v10, v15);
            v28 = v43;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1C1336B44(0, *(_QWORD *)(v28 + 16) + 1, 1);
              v28 = v43;
            }
            v30 = *(_QWORD *)(v28 + 16);
            v29 = *(_QWORD *)(v28 + 24);
            if (v30 >= v29 >> 1)
            {
              sub_1C1336B44(v29 > 1, v30 + 1, 1);
              v28 = v43;
            }
            *(_QWORD *)(v28 + 16) = v30 + 1;
            v27((char *)(v28 + v35 + v30 * v40), v36, v15);
            v43 = v28;
            goto LABEL_4;
          }
          v31 = ~v22;
          while (1)
          {
            v23 = (v23 + 1) & v31;
            if (((*(_QWORD *)(v41 + ((v23 >> 3) & 0xFFFFFFFFFFFFF8)) >> v23) & 1) == 0)
              break;
            v32 = (_QWORD *)(v24 + 16 * v23);
            v33 = *v32 == v19 && v32[1] == v18;
            if (v33 || (sub_1C1427064() & 1) != 0)
              goto LABEL_12;
          }
        }
      }
      swift_bridgeObjectRelease();
      v5 = v15;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v15);
LABEL_4:
      if (++v12 == v39)
        return v43;
    }
  }
  return result;
}

unint64_t sub_1C1327378(unsigned int a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = MEMORY[0x1C3BACDAC](*(_QWORD *)(v1 + 40), a1, 4);
  return sub_1C1330674(a1, v3);
}

double sub_1C13273AC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1C13277A0(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1C13BBCCC();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    *a3 = *(_OWORD *)(*(_QWORD *)(v11 + 56) + 16 * v8);
    sub_1C13C1BB8(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a3 = xmmword_1C142A0D0;
  }
  return result;
}

uint64_t type metadata accessor for AuthorizationManager()
{
  return objc_opt_self();
}

id sub_1C13274B0(void *a1)
{
  objc_msgSend(a1, sel_selector);
  if ((sub_1C142524C() & 1) != 0)
    return objc_msgSend(a1, sel_copyAsOnewayVoid);
  else
    return a1;
}

id sub_1C1327530(void *a1)
{
  objc_msgSend(a1, sel_selector);
  if ((sub_1C142524C() & 1) != 0)
    return objc_msgSend(a1, sel_copyAsOnewayVoid);
  else
    return a1;
}

uint64_t sub_1C1327584(uint64_t a1, uint64_t a2)
{
  _QWORD **v2;
  _QWORD *v5;
  os_unfair_lock_s *v6;
  uint64_t v8;

  v5 = *v2;
  v6 = *(os_unfair_lock_s **)(v5[6] + 16);
  os_unfair_lock_lock(v6);
  sub_1C13291A0(v5, a1, a2, &v8);
  os_unfair_lock_unlock(v6);
  return v8;
}

uint64_t _s11SessionCore6ClientCMa_1()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for PushFrequentUpdatesObservationClient()
{
  return objc_opt_self();
}

uint64_t sub_1C132762C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v6 = v5;
  v12 = *v5;
  v14 = sub_1C13277A0(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1C13BBCCC();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7] + 16 * v14;
      result = sub_1C13282B4(*(_QWORD *)v21, *(_QWORD *)(v21 + 8));
      *(_QWORD *)v21 = a1;
      *(_QWORD *)(v21 + 8) = a2;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = (uint64_t *)(v20[6] + 16 * v14);
    *v25 = a3;
    v25[1] = a4;
    v26 = (_QWORD *)(v20[7] + 16 * v14);
    *v26 = a1;
    v26[1] = a2;
    v27 = v20[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v20[2] = v29;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1C1326D94(v17, a5 & 1);
  v23 = sub_1C13277A0(a3, a4);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1C142707C();
  __break(1u);
  return result;
}

unint64_t sub_1C13277A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1C14270E8();
  sub_1C1426AD0();
  v4 = sub_1C1427100();
  return sub_1C1327804(a1, a2, v4);
}

unint64_t sub_1C1327804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1C1427064() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1C1427064() & 1) == 0);
    }
  }
  return v6;
}

id sub_1C13278E4(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = (void *)sub_1C1426A7C();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  v6 = objc_msgSend(v3, sel_initWithBundleIdentifier_allowPlaceholder_error_, v5, a3 & 1, v10);

  if (v6)
  {
    v7 = v10[0];
  }
  else
  {
    v8 = v10[0];
    sub_1C1425078();

    swift_willThrow();
  }
  return v6;
}

uint64_t sub_1C13279BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6DC0E8);
    v2 = sub_1C1426EF0();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E8];
  }
  v3 = a1 + 56;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v7 = (unint64_t)(63 - v4) >> 6;
  v8 = v2 + 56;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v10 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_28;
    }
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v7)
      goto LABEL_37;
    v14 = *(_QWORD *)(v3 + 8 * v13);
    v15 = v10 + 1;
    if (!v14)
    {
      v15 = v10 + 2;
      if (v10 + 2 >= v7)
        goto LABEL_37;
      v14 = *(_QWORD *)(v3 + 8 * v15);
      if (!v14)
      {
        v15 = v10 + 3;
        if (v10 + 3 >= v7)
          goto LABEL_37;
        v14 = *(_QWORD *)(v3 + 8 * v15);
        if (!v14)
        {
          v15 = v10 + 4;
          if (v10 + 4 >= v7)
            goto LABEL_37;
          v14 = *(_QWORD *)(v3 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v6 = (v14 - 1) & v14;
    v10 = v15;
LABEL_28:
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    result = sub_1C1426EA8();
    v17 = -1 << *(_BYTE *)(v2 + 32);
    v18 = result & ~v17;
    v19 = v18 >> 6;
    if (((-1 << v18) & ~*(_QWORD *)(v8 + 8 * (v18 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v8 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v20 = 0;
      v21 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v21 && (v20 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v22 = v19 == v21;
        if (v19 == v21)
          v19 = 0;
        v20 |= v22;
        v23 = *(_QWORD *)(v8 + 8 * v19);
      }
      while (v23 == -1);
      v11 = __clz(__rbit64(~v23)) + (v19 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = *(_QWORD *)(v2 + 48) + 40 * v11;
    *(_OWORD *)v12 = v24;
    *(_OWORD *)(v12 + 16) = v25;
    *(_QWORD *)(v12 + 32) = v26;
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v10 + 5;
  if (v10 + 5 >= v7)
  {
LABEL_37:
    swift_release();
    sub_1C133F908();
    return v2;
  }
  v14 = *(_QWORD *)(v3 + 8 * v16);
  if (v14)
  {
    v15 = v10 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v7)
      goto LABEL_37;
    v14 = *(_QWORD *)(v3 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1C1327CAC()
{
  uint64_t *v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = *(os_unfair_lock_s **)(*(_QWORD *)(v1 + 32) + 16);
  os_unfair_lock_lock(v2);
  v3 = *(_QWORD *)(v1 + 16);
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v2);
  return v4;
}

uint64_t sub_1C1327D10(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v3(a2);
  return swift_unknownObjectRelease();
}

uint64_t sub_1C1327D4C(uint64_t a1)
{
  uint64_t v1;

  return sub_1C1327D74(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1C1327D54()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C1327D74(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1C1327D94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  unint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793600);
  MEMORY[0x1E0C80A78](v3);
  v47 = (uint64_t)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C1425714();
  v48 = *(_QWORD *)(v5 - 8);
  v49 = v5;
  v6 = MEMORY[0x1E0C80A78](v5);
  v42 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v41 = (char *)&v40 - v8;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
  v9 = MEMORY[0x1E0C80A78](v46);
  v11 = (uint64_t *)((char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v9);
  v13 = (uint64_t *)((char *)&v40 - v12);
  v14 = *(_QWORD *)(a1 + 64);
  v44 = a1 + 64;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v45 = (unint64_t)(v15 + 63) >> 6;
  v50 = a1;
  result = swift_bridgeObjectRetain();
  v19 = 0;
  v43 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v17)
    {
      v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v21 = v20 | (v19 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v19++, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v19 >= v45)
      goto LABEL_32;
    v23 = *(_QWORD *)(v44 + 8 * v19);
    if (!v23)
      break;
LABEL_18:
    v17 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v19 << 6);
LABEL_19:
    v25 = *(_QWORD *)(v50 + 56);
    v26 = (uint64_t *)(*(_QWORD *)(v50 + 48) + 16 * v21);
    v28 = *v26;
    v27 = v26[1];
    v29 = type metadata accessor for Activity();
    sub_1C1338F24(v25 + *(_QWORD *)(*(_QWORD *)(v29 - 8) + 72) * v21, (uint64_t)v13 + *(int *)(v46 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    *v13 = v28;
    v13[1] = v27;
    sub_1C132A724((uint64_t)v13, (uint64_t)v11, &qword_1ED7939D8);
    swift_bridgeObjectRetain();
    v30 = v47;
    sub_1C13E2820(v11, v47);
    if (v1)
    {
      sub_1C132C860((uint64_t)v11, &qword_1ED7939D8);
      v39 = v43;
      swift_bridgeObjectRelease();
LABEL_33:
      swift_release();
      return v39;
    }
    sub_1C132C860((uint64_t)v11, &qword_1ED7939D8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v30, 1, v49) == 1)
    {
      result = sub_1C132C860(v30, &qword_1ED793600);
    }
    else
    {
      v31 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 32);
      v32 = v41;
      v33 = v30;
      v34 = v49;
      v31(v41, v33, v49);
      v31(v42, (uint64_t)v32, v34);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v43 = sub_1C136CA24(0, *(_QWORD *)(v43 + 16) + 1, 1, v43);
      v36 = *(_QWORD *)(v43 + 16);
      v35 = *(_QWORD *)(v43 + 24);
      if (v36 >= v35 >> 1)
        v43 = sub_1C136CA24(v35 > 1, v36 + 1, 1, v43);
      v37 = v42;
      v38 = v43;
      *(_QWORD *)(v43 + 16) = v36 + 1;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v31)(v38+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(_QWORD *)(v48 + 72) * v36, v37, v49);
    }
  }
  v24 = v19 + 1;
  if (v19 + 1 >= v45)
    goto LABEL_32;
  v23 = *(_QWORD *)(v44 + 8 * v24);
  if (v23)
    goto LABEL_17;
  v24 = v19 + 2;
  if (v19 + 2 >= v45)
    goto LABEL_32;
  v23 = *(_QWORD *)(v44 + 8 * v24);
  if (v23)
    goto LABEL_17;
  v24 = v19 + 3;
  if (v19 + 3 >= v45)
    goto LABEL_32;
  v23 = *(_QWORD *)(v44 + 8 * v24);
  if (v23)
    goto LABEL_17;
  v24 = v19 + 4;
  if (v19 + 4 >= v45)
  {
LABEL_32:
    v39 = v43;
    goto LABEL_33;
  }
  v23 = *(_QWORD *)(v44 + 8 * v24);
  if (v23)
  {
LABEL_17:
    v19 = v24;
    goto LABEL_18;
  }
  while (1)
  {
    v19 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v19 >= v45)
      goto LABEL_32;
    v23 = *(_QWORD *)(v44 + 8 * v19);
    ++v24;
    if (v23)
      goto LABEL_18;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1C13282B4(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1C1328478(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3;
  os_unfair_lock_s *v5;
  uint64_t v6;

  v5 = *(os_unfair_lock_s **)(*(_QWORD *)(*(_QWORD *)v3 + 24) + 16);
  os_unfair_lock_lock(v5);
  v6 = a3();
  os_unfair_lock_unlock(v5);
  return v6;
}

id sub_1C13284C8(uint64_t a1, void *a2)
{
  uint64_t (*v2)(void);
  id v3;
  void *v4;

  v2 = *(uint64_t (**)(void))(a1 + 32);
  v3 = a2;
  v4 = (void *)v2();

  return v4;
}

uint64_t sub_1C1328584(uint64_t a1, void *a2)
{
  uint64_t v2;
  char v4;
  unsigned int v5;
  unint64_t v6;
  uint64_t isStackAllocationSafe;
  void *v8;
  char *v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  _QWORD v15[2];

  v15[1] = *MEMORY[0x1E0C80C00];
  v4 = *(_BYTE *)(a1 + 32);
  v5 = v4 & 0x3F;
  v6 = (unint64_t)((1 << v4) + 63) >> 6;
  isStackAllocationSafe = a2;
  v8 = (void *)isStackAllocationSafe;
  if (v5 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v9 = (char *)v15 - ((8 * v6 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v9, 8 * v6);
    v10 = v8;
    v11 = sub_1C13308B4((unint64_t *)v9, v6, a1);

    if (v2)
      swift_willThrow();

  }
  else
  {
    v12 = (void *)swift_slowAlloc();
    bzero(v12, 8 * v6);
    v13 = v8;
    v11 = sub_1C13308B4((unint64_t *)v12, v6, a1);

    MEMORY[0x1C3BAD3F4](v12, -1, -1);
  }
  return v11;
}

uint64_t sub_1C1328798(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char isUniquelyReferenced_nonNull_native;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1C1426E6C();

    if (v9)
    {
      swift_bridgeObjectRelease();

      type metadata accessor for Client();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      result = 0;
      *a1 = v26;
      return result;
    }
    result = sub_1C1426E60();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1C13509BC(v7, result + 1);
    v27 = v21;
    if (*(_QWORD *)(v21 + 24) <= *(_QWORD *)(v21 + 16))
    {
      v25 = v8;
      sub_1C1351058();
      v22 = v27;
    }
    else
    {
      v22 = v21;
      v23 = v8;
    }
    sub_1C1351C2C((uint64_t)v8, v22);
    *v3 = v22;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1C1426D88();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      type metadata accessor for Client();
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1C1426D94();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1C1426D94();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v28 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1C1330D78((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v28;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t type metadata accessor for ProcessManager()
{
  return objc_opt_self();
}

uint64_t sub_1C1328AE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void (*v25)(char *, unint64_t, uint64_t);
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char isUniquelyReferenced_nonNull_native;
  char v36;
  unint64_t v37;
  uint64_t v38;
  _BOOL8 v39;
  uint64_t v40;
  char v41;
  unint64_t v42;
  char v43;
  uint64_t *v44;
  uint64_t *v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t result;
  _QWORD v50[2];
  uint64_t v51;
  void (*v52)(char *, unint64_t, uint64_t);
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;

  v7 = sub_1C1426494();
  v54 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v53 = (char *)v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Activity();
  MEMORY[0x1E0C80A78](v9);
  v12 = (_QWORD *)((char *)v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = MEMORY[0x1E0DEE9E8];
  v58 = MEMORY[0x1E0DEE9E8];
  v14 = *(_QWORD *)(a1 + 16);
  v55 = v7;
  if (v14)
  {
    v56 = v3;
    v15 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v16 = *(_QWORD *)(v10 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1C13DCA10(v15, (uint64_t)v12);
      v17 = *v12;
      v18 = v12[1];
      swift_bridgeObjectRetain();
      sub_1C132FAD4((uint64_t *)&v57, v17, v18);
      swift_bridgeObjectRelease();
      sub_1C13DCA54((uint64_t)v12);
      v15 += v16;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
    v13 = v58;
    v7 = v55;
    v3 = v56;
  }
  v19 = sub_1C1426518();
  v20 = sub_1C13270A0(v19, v13);
  swift_bridgeObjectRelease();
  v21 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v21);
  v50[-4] = a2;
  v50[-3] = a3;
  v50[-2] = v3;
  v22 = sub_1C1331290((void (*)(_QWORD))sub_1C13DCA90, (uint64_t)&v50[-6], v20);
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(v22 + 16);
  if (!v23)
  {
    v26 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_22:
    swift_bridgeObjectRelease();
    return (uint64_t)v26;
  }
  v24 = v22 + ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80));
  v25 = *(void (**)(char *, unint64_t, uint64_t))(v54 + 16);
  v51 = *(_QWORD *)(v54 + 72);
  v52 = v25;
  v50[1] = v22;
  swift_bridgeObjectRetain();
  v26 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v27 = v53;
  while (1)
  {
    v56 = v23;
    v52(v27, v24, v7);
    v29 = sub_1C1426470();
    v31 = v30;
    v32 = sub_1C142647C();
    v34 = v33;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v57 = v26;
    v37 = sub_1C13277A0(v29, v31);
    v38 = v26[2];
    v39 = (v36 & 1) == 0;
    v40 = v38 + v39;
    if (__OFADD__(v38, v39))
      break;
    v41 = v36;
    if (v26[3] >= v40)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v26 = v57;
        if ((v36 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        sub_1C13BBCCC();
        v26 = v57;
        if ((v41 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      sub_1C1326D94(v40, isUniquelyReferenced_nonNull_native);
      v42 = sub_1C13277A0(v29, v31);
      if ((v41 & 1) != (v43 & 1))
        goto LABEL_25;
      v37 = v42;
      v26 = v57;
      if ((v41 & 1) != 0)
      {
LABEL_7:
        v28 = v26[7] + 16 * v37;
        sub_1C13282B4(*(_QWORD *)v28, *(_QWORD *)(v28 + 8));
        *(_QWORD *)v28 = v32;
        *(_QWORD *)(v28 + 8) = v34;
        goto LABEL_8;
      }
    }
    v26[(v37 >> 6) + 8] |= 1 << v37;
    v44 = (uint64_t *)(v26[6] + 16 * v37);
    *v44 = v29;
    v44[1] = v31;
    v45 = (uint64_t *)(v26[7] + 16 * v37);
    *v45 = v32;
    v45[1] = v34;
    v46 = v26[2];
    v47 = __OFADD__(v46, 1);
    v48 = v46 + 1;
    if (v47)
      goto LABEL_24;
    v26[2] = v48;
    swift_bridgeObjectRetain();
LABEL_8:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v27 = v53;
    v7 = v55;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v53, v55);
    v24 += v51;
    v23 = v56 - 1;
    if (v56 == 1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_22;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  result = sub_1C142707C();
  __break(1u);
  return result;
}

uint64_t sub_1C1328EA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  uint64_t v12;
  void (*v13)(_QWORD *, uint64_t, uint64_t);
  uint64_t (*v14)(_QWORD *, uint64_t);
  uint64_t result;
  void *v16;
  id v17;
  void *v18;
  id v19;
  _QWORD *v20;
  char v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  unsigned int *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v38 = a3;
  v37 = a2;
  v7 = sub_1C14269F8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (id *)((char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(void **)(a1 + 72);
  *v10 = v11;
  v12 = *MEMORY[0x1E0DEF740];
  v13 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v8 + 104);
  v13(v10, v12, v7);
  v34 = v11;
  LOBYTE(v11) = sub_1C1426A10();
  v14 = *(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8);
  result = v14(v10, v7);
  if ((v11 & 1) == 0)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    return result;
  }
  v35 = a4;
  v36 = v4;
  v16 = (void *)objc_opt_self();
  v17 = objc_msgSend(v16, sel_standardUserDefaults);
  v18 = (void *)sub_1C1426A7C();
  v19 = objc_msgSend(v17, sel_stringArrayForKey_, v18);

  if (v19)
  {
    v20 = (_QWORD *)sub_1C1426B90();

  }
  else
  {
    v20 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v21 = sub_1C13311CC(v37, v38, v20);
  swift_bridgeObjectRelease();
  if ((v21 & 1) == 0)
  {
    v28 = *MEMORY[0x1E0C8FB48];
    v29 = sub_1C142575C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v35, v28, v29);
  }
  v22 = v34;
  *v10 = v34;
  v13(v10, v12, v7);
  v23 = v22;
  LOBYTE(v22) = sub_1C1426A10();
  result = v14(v10, v7);
  if ((v22 & 1) == 0)
    goto LABEL_16;
  v24 = objc_msgSend(v16, sel_standardUserDefaults);
  v25 = (void *)sub_1C1426A7C();
  v26 = objc_msgSend(v24, sel_stringArrayForKey_, v25);

  if (v26)
  {
    v27 = (_QWORD *)sub_1C1426B90();

  }
  else
  {
    v27 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v30 = v35;
  v31 = sub_1C13311CC(v37, v38, v27);
  swift_bridgeObjectRelease();
  v32 = sub_1C142575C();
  if ((v31 & 1) != 0)
    v33 = (unsigned int *)MEMORY[0x1E0C8FB58];
  else
    v33 = (unsigned int *)MEMORY[0x1E0C8FB50];
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v30, *v33, v32);
}

void sub_1C13291A0(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  unint64_t v9;
  char v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  char v27;
  id v28;
  char isUniquelyReferenced_nonNull_native;
  char v30;
  id v31;
  void *v32;
  unsigned int v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  id v37[7];

  v37[6] = *(id *)MEMORY[0x1E0C80C00];
  swift_beginAccess();
  v8 = a1[4];
  if (*(_QWORD *)(v8 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = sub_1C13277A0(a2, a3);
    if ((v10 & 1) != 0)
    {
      v11 = *(_DWORD *)(*(_QWORD *)(v8 + 56) + 4 * v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      v12 = a1[5];
      if (*(_QWORD *)(v12 + 16))
      {
        v13 = sub_1C1327378(v11);
        if ((v14 & 1) != 0)
        {
          v15 = *(void **)(*(_QWORD *)(v12 + 56) + 8 * v13);
          *a4 = v15;
          v16 = v15;
          return;
        }
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRetain();
  v17 = (void *)sub_1C1426A7C();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend((id)objc_opt_self(), sel_predicateMatchingBundleIdentifier_, v17);

  v19 = (void *)objc_opt_self();
  v37[0] = 0;
  v20 = v18;
  v21 = objc_msgSend(v19, sel_handleForPredicate_error_, v20, v37);
  if (v21)
  {
    v22 = v21;
    v23 = v37[0];

    v24 = v22;
    v25 = objc_msgSend(v24, sel_currentState);
    if (v25)
    {
      v34 = a4;
      v26 = a1[3];
      swift_bridgeObjectRetain();
      v27 = sub_1C1330FE4(a2, a3, v26);
      swift_bridgeObjectRelease();
      if ((v27 & 1) != 0)
      {
        v33 = objc_msgSend(v24, sel_pid);
        swift_beginAccess();
        v28 = v25;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v35 = a1[5];
        a1[5] = 0x8000000000000000;
        sub_1C13C24B4((uint64_t)v28, v33, isUniquelyReferenced_nonNull_native);
        a1[5] = v35;
        swift_bridgeObjectRelease();
        swift_endAccess();
        swift_bridgeObjectRetain();
        LODWORD(v28) = objc_msgSend(v24, sel_pid);
        swift_beginAccess();
        v30 = swift_isUniquelyReferenced_nonNull_native();
        v36 = a1[4];
        a1[4] = 0x8000000000000000;
        sub_1C13C2364((int)v28, a2, a3, v30);
        a1[4] = v36;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
      }

      a4 = v34;
    }
    else
    {

    }
  }
  else
  {
    v31 = v37[0];
    v32 = (void *)sub_1C1425078();

    swift_willThrow();
    v25 = 0;
  }

  *a4 = v25;
}

void sub_1C1329530(void *a1)
{
  uint64_t v1;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1C132F33C();
  if (!v1)
  {
    sub_1C1425A74();
    v3 = (void *)sub_1C1426A7C();
    objc_msgSend(a1, sel_hasEntitlement_, v3);

    sub_1C1425A8C();
    v4 = (void *)sub_1C1426A7C();
    objc_msgSend(a1, sel_hasEntitlement_, v4);

    sub_1C1425AB0();
    v5 = (void *)sub_1C1426A7C();
    objc_msgSend(a1, sel_hasEntitlement_, v5);

    sub_1C1425A68();
    sub_1C132F33C();
    v6 = objc_allocWithZone(MEMORY[0x1E0CA5848]);
    v7 = sub_1C132F678();
    v8 = objc_msgSend(v7, sel_extensionPointRecord);
    v9 = objc_msgSend(v8, sel_identifier);

    v10 = sub_1C1426A88();
    v12 = v11;

    if (v10 == 0xD00000000000001ELL && v12 == 0x80000001C142E150)
    {

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C1427064();

      swift_bridgeObjectRelease();
    }
    sub_1C1425AA4();
    sub_1C132FF60();
    sub_1C1425AD4();
  }

}

void sub_1C13297A4(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, void (*a5)(_QWORD))
{
  uint64_t *v5;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  id v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v9 = *(_QWORD *)(*v5 + 16);
  v10 = *(_QWORD *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0)
    goto LABEL_14;
  v11 = v9 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1C1351994(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_1C1352E84(a4);
      goto LABEL_14;
    }
    sub_1C1353B54(v11, a4);
  }
  v12 = *v5;
  v13 = sub_1C1426D88();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    a5(0);
    v15 = *(id *)(*(_QWORD *)(v12 + 48) + 8 * a2);
    v16 = sub_1C1426D94();

    if ((v16 & 1) != 0)
    {
LABEL_13:
      sub_1C1427070();
      __break(1u);
    }
    else
    {
      v17 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v17;
        if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v18 = *(id *)(*(_QWORD *)(v12 + 48) + 8 * a2);
        v19 = sub_1C1426D94();

        if ((v19 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v20 + 48) + 8 * a2) = a1;
  v21 = *(_QWORD *)(v20 + 16);
  v22 = __OFADD__(v21, 1);
  v23 = v21 + 1;
  if (v22)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v23;
}

uint64_t sub_1C1329928()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  uint64_t v12;
  uint64_t v13;

  v2 = sub_1C1425378();
  v13 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C14256B4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (void *)sub_1C14250CC();
  sub_1C1329AD0((unint64_t *)&unk_1ED793BB0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FAB8], MEMORY[0x1E0C8FAB0]);
  sub_1C1425BAC();

  sub_1C1329B10((uint64_t)v8, (uint64_t)v4);
  if (!v1)
  {
    sub_1C1329AD0((unint64_t *)&unk_1ED793B80, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F478], MEMORY[0x1E0C8F470]);
    v10 = (void *)sub_1C1425BB8();
    v0 = sub_1C14250D8();

    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v2);
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v0;
}

uint64_t sub_1C1329AD0(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1C3BAD334](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C1329B10(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  os_unfair_lock_s *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  unint64_t v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(_QWORD, _QWORD, _QWORD);
  int *v55;
  uint64_t v56;
  char *v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  void (*v61)(_QWORD, _QWORD, _QWORD);
  int v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  unint64_t v72;
  unint64_t v73;
  void (*v74)(_QWORD, _QWORD, _QWORD);
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  os_unfair_lock_s *v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  uint64_t v86;
  int v87;
  int v88;
  char *v89;
  unsigned int v90;
  unsigned int v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  void (*v95)(_QWORD, _QWORD, _QWORD);
  void (*v96)(char *, _QWORD, uint64_t);
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int64_t v120;

  v111 = a1;
  v118 = a2;
  v101 = sub_1C14258AC();
  v100 = *(_QWORD *)(v101 - 8);
  MEMORY[0x1E0C80A78](v101);
  v110 = (char *)&v81 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_1C14251B0();
  v98 = *(_QWORD *)(v99 - 8);
  MEMORY[0x1E0C80A78](v99);
  v109 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C1425678();
  MEMORY[0x1E0C80A78](v5);
  v108 = (char *)&v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C1425A08();
  MEMORY[0x1E0C80A78](v7);
  v107 = (uint64_t)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C1425594();
  MEMORY[0x1E0C80A78](v9);
  v106 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = sub_1C1425888();
  v105 = *(_QWORD *)(v113 - 8);
  v11 = MEMORY[0x1E0C80A78](v113);
  v97 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v103 = (char *)&v81 - v14;
  MEMORY[0x1E0C80A78](v13);
  v104 = (char *)&v81 - v15;
  v102 = type metadata accessor for Activity();
  v116 = *(_QWORD *)(v102 - 8);
  MEMORY[0x1E0C80A78](v102);
  v17 = (char *)&v81 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7939E0);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (os_unfair_lock_s **)((char *)&v81 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v81 - v22;
  v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793BC0);
  v25 = MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v81 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v29 = (char *)&v81 - v28;
  v120 = *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client_lock)
                   + 16);
  os_unfair_lock_lock((os_unfair_lock_t)v120);
  v30 = sub_1C14256B4();
  v31 = *(_QWORD *)(v30 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v29, v111, v30);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v29, 0, 1, v30);
  sub_1C132A724((uint64_t)v29, (uint64_t)v27, (uint64_t *)&unk_1ED793BC0);
  v32 = v2 + OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client__lock_subscriptionOptions;
  swift_beginAccess();
  sub_1C1331720((uint64_t)v27, v32);
  swift_endAccess();
  os_unfair_lock_unlock((os_unfair_lock_t)v120);
  v119 = v2;
  v33 = MEMORY[0x1C3BAD4B4](v2 + OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client_delegate);
  if (!v33)
  {
    sub_1C142536C();
    return;
  }
  v34 = v33;
  v35 = *(os_unfair_lock_s **)(*(_QWORD *)(v33 + OBJC_IVAR____TtC11SessionCore12OutputServer_lock) + 16);
  os_unfair_lock_lock(v35);
  v92 = v34;
  v36 = (uint64_t *)(v34 + OBJC_IVAR____TtC11SessionCore12OutputServer__lock_activities);
  swift_beginAccess();
  v37 = *v36;
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v35);
  v120 = 0;
  v38 = *(_QWORD *)(v37 + 64);
  v114 = v37 + 64;
  v117 = v37;
  v39 = 1 << *(_BYTE *)(v37 + 32);
  v40 = -1;
  if (v39 < 64)
    v40 = ~(-1 << v39);
  v41 = v40 & v38;
  v91 = *MEMORY[0x1E0C8FD20];
  v84 = *MEMORY[0x1E0C8FCA0];
  v83 = *MEMORY[0x1E0C8FC98];
  v82 = *MEMORY[0x1E0C8FCA8];
  v90 = *MEMORY[0x1E0C8FD28];
  v85 = *MEMORY[0x1E0C8FD30];
  v115 = (unint64_t)(v39 + 63) >> 6;
  v81 = (os_unfair_lock_s *)(v115 - 1);
  v112 = MEMORY[0x1E0DEE9D8];
  if ((v40 & v38) == 0)
    goto LABEL_7;
LABEL_5:
  v42 = __clz(__rbit64(v41));
  v41 &= v41 - 1;
  v43 = v42 | (v120 << 6);
  while (2)
  {
    v44 = *(_QWORD *)(v117 + 56);
    v45 = (_QWORD *)(*(_QWORD *)(v117 + 48) + 16 * v43);
    v46 = v45[1];
    *v21 = *v45;
    v21[1] = v46;
    v47 = v44 + *(_QWORD *)(v116 + 72) * v43;
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
    sub_1C1338F24(v47, (uint64_t)v21 + *(int *)(v48 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v21, 0, 1, v48);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1C132A724((uint64_t)v21, (uint64_t)v23, (uint64_t *)&unk_1ED7939E0);
      v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 48))(v23, 1, v53) == 1)
      {
        swift_release();
        sub_1C142536C();
        swift_unknownObjectRelease();
        return;
      }
      sub_1C13A78FC((uint64_t)&v23[*(int *)(v53 + 48)], (uint64_t)v17);
      if ((sub_1C13DFA84((uint64_t)v17) & 1) != 0)
      {
        v54 = (void (*)(_QWORD, _QWORD, _QWORD))*((_QWORD *)v17 + 1);
        v96 = *(void (**)(char *, _QWORD, uint64_t))v17;
        v95 = v54;
        v55 = (int *)v102;
        swift_bridgeObjectRetain();
        sub_1C1425924();
        v94 = sub_1C142590C();
        v93 = v56;
        sub_1C1338F24((uint64_t)&v17[v55[6]], v107, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
        sub_1C1425948();
        v89 = *(char **)&v17[v55[7]];
        swift_bridgeObjectRetain();
        v88 = sub_1C14258DC();
        v87 = sub_1C14258E8();
        (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v109, &v17[v55[8]], v99);
        v86 = *(_QWORD *)&v17[v55[10]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v57 = v104;
        sub_1C1425474();
        v96 = *(void (**)(char *, _QWORD, uint64_t))(v105 + 104);
        v96(v57, v91, v113);
        v58 = sub_1C136C9FC(0, 1, 1, MEMORY[0x1E0DEE9D8]);
        v60 = *(_QWORD *)(v58 + 16);
        v59 = *(_QWORD *)(v58 + 24);
        v61 = (void (*)(_QWORD, _QWORD, _QWORD))(v60 + 1);
        if (v60 >= v59 >> 1)
        {
          v95 = (void (*)(_QWORD, _QWORD, _QWORD))(v60 + 1);
          v78 = sub_1C136C9FC(v59 > 1, v60 + 1, 1, v58);
          v61 = v95;
          v58 = v78;
        }
        *(_QWORD *)(v58 + 16) = v61;
        v94 = (*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80);
        v93 = *(_QWORD *)(v105 + 72);
        v95 = *(void (**)(_QWORD, _QWORD, _QWORD))(v105 + 32);
        v95(v58 + v94 + v93 * v60, v104, v113);
        v62 = sub_1C1406964();
        if (v62)
        {
          v63 = v103;
          if (v62 == 1)
          {
            v64 = sub_1C1425858();
            (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v64 - 8) + 104))(v63, v83, v64);
          }
          else
          {
            v66 = sub_1C1425858();
            (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v66 - 8) + 104))(v63, v84, v66);
          }
        }
        else
        {
          v65 = sub_1C1425858();
          v63 = v103;
          (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v65 - 8) + 104))(v103, v82, v65);
        }
        v96(v63, v90, v113);
        v68 = *(_QWORD *)(v58 + 16);
        v67 = *(_QWORD *)(v58 + 24);
        v69 = (char *)(v68 + 1);
        if (v68 >= v67 >> 1)
        {
          v89 = (char *)(v68 + 1);
          v79 = sub_1C136C9FC(v67 > 1, v68 + 1, 1, v58);
          v69 = v89;
          v58 = v79;
        }
        *(_QWORD *)(v58 + 16) = v69;
        v95(v58 + v94 + v68 * v93, v103, v113);
        if ((sub_1C14256A8() & 1) != 0)
        {
          v89 = &v17[*(int *)(v102 + 44)];
          v70 = sub_1C1425450();
          v71 = v97;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v97, v89, v70);
          v96(v71, v85, v113);
          v73 = *(_QWORD *)(v58 + 16);
          v72 = *(_QWORD *)(v58 + 24);
          v74 = (void (*)(_QWORD, _QWORD, _QWORD))(v73 + 1);
          if (v73 >= v72 >> 1)
          {
            v96 = (void (*)(char *, _QWORD, uint64_t))(v73 + 1);
            v80 = sub_1C136C9FC(v72 > 1, v73 + 1, 1, v58);
            v74 = (void (*)(_QWORD, _QWORD, _QWORD))v96;
            v58 = v80;
          }
          *(_QWORD *)(v58 + 16) = v74;
          v95(v58 + v94 + v73 * v93, v97, v113);
        }
        sub_1C1425894();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v112 = sub_1C136CA10(0, *(_QWORD *)(v112 + 16) + 1, 1, v112);
        v76 = *(_QWORD *)(v112 + 16);
        v75 = *(_QWORD *)(v112 + 24);
        if (v76 >= v75 >> 1)
          v112 = sub_1C136CA10(v75 > 1, v76 + 1, 1, v112);
        v77 = v112;
        *(_QWORD *)(v112 + 16) = v76 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v100 + 32))(v77+ ((*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80))+ *(_QWORD *)(v100 + 72) * v76, v110, v101);
        sub_1C13DCA54((uint64_t)v17);
        if (v41)
          goto LABEL_5;
      }
      else
      {
        sub_1C13DCA54((uint64_t)v17);
        swift_bridgeObjectRelease();
        if (v41)
          goto LABEL_5;
      }
LABEL_7:
      v49 = v120 + 1;
      if (__OFADD__(v120, 1))
      {
        __break(1u);
        goto LABEL_51;
      }
      if (v49 < v115)
      {
        v50 = *(_QWORD *)(v114 + 8 * v49);
        if (v50)
          goto LABEL_10;
        v51 = v120 + 2;
        ++v120;
        if (v49 + 1 < v115)
        {
          v50 = *(_QWORD *)(v114 + 8 * v51);
          if (v50)
            goto LABEL_13;
          v120 = v49 + 1;
          if (v49 + 2 < v115)
          {
            v50 = *(_QWORD *)(v114 + 8 * (v49 + 2));
            if (v50)
            {
              v49 += 2;
              goto LABEL_10;
            }
            v51 = v49 + 3;
            v120 = v49 + 2;
            if (v49 + 3 < v115)
              break;
          }
        }
      }
LABEL_24:
      v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v21, 1, 1, v52);
      v41 = 0;
    }
    v50 = *(_QWORD *)(v114 + 8 * v51);
    if (v50)
    {
LABEL_13:
      v49 = v51;
LABEL_10:
      v41 = (v50 - 1) & v50;
      v43 = __clz(__rbit64(v50)) + (v49 << 6);
      v120 = v49;
      continue;
    }
    break;
  }
  while (1)
  {
    v49 = v51 + 1;
    if (__OFADD__(v51, 1))
      break;
    if (v49 >= v115)
    {
      v120 = (int64_t)v81;
      goto LABEL_24;
    }
    v50 = *(_QWORD *)(v114 + 8 * v49);
    ++v51;
    if (v50)
      goto LABEL_10;
  }
LABEL_51:
  __break(1u);
}

uint64_t sub_1C132A724(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1C132A768(void *a1)
{
  char *v1;
  char *v2;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  id v9;
  os_unfair_lock_s *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  char *v16;
  _QWORD aBlock[6];
  id v18;

  v2 = v1;
  v4 = *(void **)&v1[OBJC_IVAR____TtC11SessionCore36PushFrequentUpdatesObservationServer_pushServer];
  v5 = *(_QWORD *)&v1[OBJC_IVAR____TtC11SessionCore36PushFrequentUpdatesObservationServer_authorizationManager];
  v6 = objc_allocWithZone((Class)type metadata accessor for PushFrequentUpdatesObservationClient());
  v7 = a1;
  v8 = v4;
  swift_retain();
  v9 = sub_1C132C388(v7, v8, v5);
  v10 = *(os_unfair_lock_s **)(*(_QWORD *)&v2[OBJC_IVAR____TtC11SessionCore36PushFrequentUpdatesObservationServer_lock]
                             + 16);
  os_unfair_lock_lock(v10);
  swift_beginAccess();
  v11 = v9;
  sub_1C133112C(&v18, v11);
  swift_endAccess();
  os_unfair_lock_unlock(v10);

  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v2;
  *(_QWORD *)(v12 + 24) = v11;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_1C13315C8;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = sub_1C1327D4C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1327D10;
  aBlock[3] = &block_descriptor_22;
  v14 = _Block_copy(aBlock);
  v15 = v11;
  v16 = v2;
  swift_retain();
  swift_release();
  objc_msgSend(v7, sel_configureConnection_, v14);
  _Block_release(v14);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v2 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(v7, sel_activate);
    swift_release();

  }
}

uint64_t sub_1C132A978(void *a1, uint64_t a2, unint64_t a3, void *a4)
{
  _QWORD *v7;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  void *v25;
  uint64_t v27;

  v7 = &unk_1ED793000;
  if (a1)
  {
    v9 = a1;
    if (qword_1ED7939B0 != -1)
      swift_once();
    v10 = sub_1C1426854();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ED798628);
    v11 = a1;
    swift_bridgeObjectRetain();
    v12 = a1;
    swift_bridgeObjectRetain();
    v13 = sub_1C1426848();
    v14 = sub_1C1426C80();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc();
      v16 = swift_slowAlloc();
      v27 = v16;
      *(_DWORD *)v15 = 136380931;
      swift_bridgeObjectRetain();
      sub_1C132AD90(a2, a3, &v27);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v15 + 12) = 2082;
      v17 = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797BA0);
      v18 = sub_1C1426AA0();
      sub_1C132AD90(v18, v19, &v27);
      sub_1C1426DB8();
      v7 = (_QWORD *)&unk_1ED793000;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C1324000, v13, v14, "Did not provide extra runtime to process %{private}s for push token delivery: %{public}s", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v16, -1, -1);
      MEMORY[0x1C3BAD3F4](v15, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  if (v7[310] != -1)
    swift_once();
  v20 = sub_1C1426854();
  __swift_project_value_buffer(v20, (uint64_t)qword_1ED798628);
  swift_bridgeObjectRetain_n();
  v21 = sub_1C1426848();
  v22 = sub_1C1426C80();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    v24 = swift_slowAlloc();
    v27 = v24;
    *(_DWORD *)v23 = 136380675;
    swift_bridgeObjectRetain();
    sub_1C132AD90(a2, a3, &v27);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C1324000, v21, v22, "Delivering push tokens for: %{private}s", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v24, -1, -1);
    MEMORY[0x1C3BAD3F4](v23, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v25 = (void *)sub_1C1426A1C();
  objc_msgSend(a4, sel_pushTokensChanged_, v25);

  return sub_1C1425EE8();
}

uint64_t sub_1C132AD90(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1C132AE9C(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1C132AE60((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1C132AE60((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_1C132AE60(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1C132AE9C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1C1426DC4();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1C1330CE4(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1C1426F2C();
  if (!v8)
  {
    sub_1C1426F80();
    __break(1u);
LABEL_17:
    result = sub_1C1426FC8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

void sub_1C132B054(void *a1)
{
  uint64_t v1;
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  os_unfair_lock_s *v16;
  id v17;
  id v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t inited;
  os_unfair_lock_s *v28;
  uint64_t v29;
  _QWORD *v30;
  void *v31;
  id v32;
  _BYTE v33[48];
  _QWORD aBlock[7];
  _BYTE v35[24];
  uint64_t v36;
  _BYTE v37[40];
  id v38[5];

  isEscapingClosureAtFileLocation = v1;
  sub_1C132E0A8(isEscapingClosureAtFileLocation + OBJC_IVAR____TtC11SessionCore15PushTokenServer_pushServer, (uint64_t)aBlock);
  sub_1C132E0A8(isEscapingClosureAtFileLocation + OBJC_IVAR____TtC11SessionCore15PushTokenServer_processManager, (uint64_t)v38);
  sub_1C132E0A8(isEscapingClosureAtFileLocation + OBJC_IVAR____TtC11SessionCore15PushTokenServer_activityStore, (uint64_t)v37);
  sub_1C132E0A8(isEscapingClosureAtFileLocation + OBJC_IVAR____TtC11SessionCore15PushTokenServer_authorizationManager, (uint64_t)v35);
  v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, (uint64_t)v38[3]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)&v33[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *))(v7 + 16))(v6);
  v8 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v35, v36);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)&v33[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *))(v11 + 16))(v10);
  v12 = *v6;
  v13 = *v10;
  v14 = a1;
  v15 = sub_1C13DC524((uint64_t)v14, (uint64_t)aBlock, v12, (uint64_t)v37, v13);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  v16 = *(os_unfair_lock_s **)(*(_QWORD *)(isEscapingClosureAtFileLocation
                                         + OBJC_IVAR____TtC11SessionCore15PushTokenServer_lock)
                             + 16);
  os_unfair_lock_lock(v16);
  swift_beginAccess();
  v17 = v15;
  sub_1C1331118(v38, v17);
  swift_endAccess();
  os_unfair_lock_unlock(v16);

  v18 = objc_msgSend(v14, sel_remoteProcess);
  v23 = sub_1C132F33C();
  v25 = v24;

  v26 = *(_QWORD *)(isEscapingClosureAtFileLocation + OBJC_IVAR____TtC11SessionCore15PushTokenServer_knownClientStore);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797B80);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1427F50;
  *(_QWORD *)(inited + 32) = v23;
  *(_QWORD *)(inited + 40) = v25;
  v28 = *(os_unfair_lock_s **)(*(_QWORD *)(v26 + 40) + 16);
  os_unfair_lock_lock(v28);
  sub_1C132F740(inited, v26);
  os_unfair_lock_unlock(v28);
  swift_setDeallocating();
  swift_arrayDestroy();
  while (1)
  {
    v29 = swift_allocObject();
    *(_QWORD *)(v29 + 16) = v17;
    *(_QWORD *)(v29 + 24) = isEscapingClosureAtFileLocation;
    v30 = (_QWORD *)swift_allocObject();
    v30[2] = sub_1C1331700;
    v30[3] = v29;
    aBlock[4] = sub_1C1327D4C;
    aBlock[5] = v30;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C1327D10;
    aBlock[3] = &block_descriptor_20;
    v31 = _Block_copy(aBlock);
    v17 = v17;
    v32 = (id)isEscapingClosureAtFileLocation;
    swift_retain();
    swift_release();
    objc_msgSend(v14, sel_configureConnection_, v31);
    _Block_release(v31);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      break;
    __break(1u);
    swift_once();
    v19 = sub_1C1426854();
    __swift_project_value_buffer(v19, (uint64_t)qword_1ED798628);
    v20 = sub_1C1426848();
    v21 = sub_1C1426C68();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v22 = 0;
      _os_log_impl(&dword_1C1324000, v20, v21, "Could not get process identifier for client; not adding to known client store",
        v22,
        2u);
      MEMORY[0x1C3BAD3F4](v22, -1, -1);
    }

  }
  objc_msgSend(v14, sel_activate);
  swift_release();

}

void sub_1C132B4AC(void *a1, char *a2, void *a3)
{
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char *v15;
  id v16;
  uint64_t v17;
  void *v18;
  char *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, void *);
  void *v24;
  void (*v25)(uint64_t);
  uint64_t v26;

  sub_1C142581C();
  v6 = (void *)sub_1C1426A7C();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithIdentifier_, v6);

  v8 = (void *)objc_opt_self();
  v9 = objc_msgSend(v8, sel_protocolForProtocol_, &unk_1EF6E3050);
  objc_msgSend(v7, sel_setClient_, v9);

  v10 = objc_msgSend(v8, sel_protocolForProtocol_, &unk_1EF6E1630);
  objc_msgSend(v7, sel_setServer_, v10);

  v11 = objc_msgSend((id)objc_opt_self(), sel_utility);
  objc_msgSend(a1, sel_setServiceQuality_, v11);

  objc_msgSend(a1, sel_setInterface_, v7);
  objc_msgSend(a1, sel_setInterfaceTarget_, a2);
  objc_msgSend(a1, sel_setTargetQueue_, *(_QWORD *)&a2[OBJC_IVAR____TtC11SessionCore36PushFrequentUpdatesObservationServer_requestProcessingQueue]);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a2;
  *(_QWORD *)(v12 + 24) = a3;
  v25 = sub_1C13E5C04;
  v26 = v12;
  v13 = MEMORY[0x1E0C809B0];
  v21 = MEMORY[0x1E0C809B0];
  v22 = 1107296256;
  v23 = sub_1C141AFCC;
  v24 = &block_descriptor_10_4;
  v14 = _Block_copy(&v21);
  v15 = a2;
  v16 = a3;
  swift_release();
  objc_msgSend(a1, sel_setInterruptionHandler_, v14);
  _Block_release(v14);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v15;
  *(_QWORD *)(v17 + 24) = v16;
  v25 = sub_1C13E5C24;
  v26 = v17;
  v21 = v13;
  v22 = 1107296256;
  v23 = sub_1C141AFCC;
  v24 = &block_descriptor_16_2;
  v18 = _Block_copy(&v21);
  v19 = v15;
  v20 = v16;
  swift_release();
  objc_msgSend(a1, sel_setInvalidationHandler_, v18);
  _Block_release(v18);

}

void sub_1C132B74C(void *a1, void *a2, uint64_t a3)
{
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, void *);
  void *v24;
  void (*v25)(uint64_t);
  uint64_t v26;

  sub_1C1425720();
  v6 = (void *)sub_1C1426A7C();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithIdentifier_, v6);

  v8 = (void *)objc_opt_self();
  v9 = objc_msgSend(v8, sel_protocolForProtocol_, &unk_1EF6E3350);
  objc_msgSend(v7, sel_setClient_, v9);

  v10 = objc_msgSend(v8, sel_protocolForProtocol_, &unk_1EF6DF930);
  objc_msgSend(v7, sel_setServer_, v10);

  v11 = objc_msgSend((id)objc_opt_self(), sel_userInteractive);
  objc_msgSend(a1, sel_setServiceQuality_, v11);

  objc_msgSend(a1, sel_setInterface_, v7);
  objc_msgSend(a1, sel_setInterfaceTarget_, a2);
  objc_msgSend(a1, sel_setTargetQueue_, a3);
  v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = a2;
  v25 = sub_1C13390D0;
  v26 = v13;
  v14 = MEMORY[0x1E0C809B0];
  v21 = MEMORY[0x1E0C809B0];
  v22 = 1107296256;
  v23 = sub_1C141AFCC;
  v24 = &block_descriptor_26;
  v15 = _Block_copy(&v21);
  v16 = a2;
  swift_release();
  objc_msgSend(a1, sel_setInterruptionHandler_, v15);
  _Block_release(v15);
  v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v17;
  *(_QWORD *)(v18 + 24) = v16;
  v25 = sub_1C1339120;
  v26 = v18;
  v21 = v14;
  v22 = 1107296256;
  v23 = sub_1C141AFCC;
  v24 = &block_descriptor_33;
  v19 = _Block_copy(&v21);
  v20 = v16;
  swift_release();
  objc_msgSend(a1, sel_setInvalidationHandler_, v19);
  _Block_release(v19);

}

void sub_1C132BA2C(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;

  sub_1C1425738();
  v8 = (void *)sub_1C1426A7C();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithIdentifier_, v8);

  v27 = sub_1C13274B0;
  v28 = 0;
  v10 = MEMORY[0x1E0C809B0];
  v23 = MEMORY[0x1E0C809B0];
  v24 = 1107296256;
  v25 = sub_1C13284C8;
  v26 = &block_descriptor_19_2;
  v11 = _Block_copy(&v23);
  v12 = &unk_1EF6E2ED0;
  swift_release();
  v13 = (void *)objc_opt_self();
  v14 = objc_msgSend(v13, sel_protocolForProtocol_interpreter_, v12, v11);

  _Block_release(v11);
  objc_msgSend(v9, sel_setClient_, v14);

  v15 = objc_msgSend(v13, sel_protocolForProtocol_, &unk_1EF6E1580);
  objc_msgSend(v9, sel_setServer_, v15);

  v16 = objc_msgSend((id)objc_opt_self(), sel_main);
  objc_msgSend(a1, sel_setServiceQuality_, v16);

  objc_msgSend(a1, sel_setInterface_, v9);
  objc_msgSend(a1, sel_setInterfaceTarget_, a2);
  objc_msgSend(a1, sel_setTargetQueue_, *(_QWORD *)(a3 + OBJC_IVAR____TtC11SessionCore12OutputServer_requestProcessingQueue));
  v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v17;
  *(_DWORD *)(v18 + 24) = a4;
  v27 = sub_1C13E3648;
  v28 = v18;
  v23 = v10;
  v24 = 1107296256;
  v25 = sub_1C141AFCC;
  v26 = &block_descriptor_28_0;
  v19 = _Block_copy(&v23);
  swift_release();
  objc_msgSend(a1, sel_setInterruptionHandler_, v19);
  _Block_release(v19);
  v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v20;
  *(_DWORD *)(v21 + 24) = a4;
  v27 = sub_1C13E366C;
  v28 = v21;
  v23 = v10;
  v24 = 1107296256;
  v25 = sub_1C141AFCC;
  v26 = &block_descriptor_35;
  v22 = _Block_copy(&v23);
  swift_release();
  objc_msgSend(a1, sel_setInvalidationHandler_, v22);
  _Block_release(v22);

}

uint64_t sub_1C132BD64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  void (*v34)(char *, uint64_t);
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  void (*v46)(char *, unint64_t, uint64_t);
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v59[4];
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;

  v68 = a2;
  v69 = a1;
  v7 = sub_1C1426494();
  v66 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v65 = (char *)v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7978D0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v61 = (char *)v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v62 = (char *)v59 - v12;
  v13 = sub_1C1426320();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)v59 - v19;
  MEMORY[0x1E0C80A78](v18);
  v67 = (char *)v59 - v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7978C0);
  v23 = MEMORY[0x1E0C80A78](v22);
  v64 = (char *)v59 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)v59 - v25;
  v27 = sub_1C1426518();
  v28 = *(_QWORD *)(v27 + 16);
  v63 = v26;
  if (!v28)
  {
    v38 = 1;
    v39 = (uint64_t)v64;
    goto LABEL_15;
  }
  v59[1] = a3;
  v59[2] = v4;
  v59[3] = a4;
  v60 = v7;
  v29 = v27 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  v30 = v14;
  v31 = *(_QWORD *)(v14 + 72);
  v32 = v30;
  v33 = *(void (**)(char *, unint64_t, uint64_t))(v30 + 16);
  v59[0] = v27;
  swift_bridgeObjectRetain();
  while (1)
  {
    v33(v20, v29, v13);
    v35 = sub_1C1426254();
    v33(v17, (unint64_t)v20, v13);
    if ((v35 & 1) == 0)
    {
      v34 = *(void (**)(char *, uint64_t))(v32 + 8);
      v34(v17, v13);
      goto LABEL_4;
    }
    if (sub_1C14262E4() == v69 && v36 == v68)
      break;
    v37 = sub_1C1427064();
    swift_bridgeObjectRelease();
    v34 = *(void (**)(char *, uint64_t))(v32 + 8);
    v34(v17, v13);
    if ((v37 & 1) != 0)
      goto LABEL_13;
LABEL_4:
    v34(v20, v13);
    v29 += v31;
    if (!--v28)
    {
      swift_bridgeObjectRelease();
      v38 = 1;
      v7 = v60;
      v14 = v32;
      v26 = v63;
      goto LABEL_14;
    }
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v17, v13);
LABEL_13:
  swift_bridgeObjectRelease();
  v14 = v32;
  v26 = v63;
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v63, v20, v13);
  v38 = 0;
  v7 = v60;
LABEL_14:
  v39 = (uint64_t)v64;
LABEL_15:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v26, v38, 1, v13);
  swift_bridgeObjectRelease();
  sub_1C132C344((uint64_t)v26, v39, (uint64_t *)&unk_1ED7978C0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v39, 1, v13) == 1)
  {
    v40 = (uint64_t *)&unk_1ED7978C0;
    sub_1C132C860((uint64_t)v26, (uint64_t *)&unk_1ED7978C0);
    v41 = v39;
    goto LABEL_30;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v67, v39, v13);
  v42 = sub_1C14264E8();
  v43 = *(_QWORD *)(v42 + 16);
  if (v43)
  {
    v69 = v14;
    v44 = v42 + ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80));
    v45 = *(_QWORD *)(v66 + 72);
    v46 = *(void (**)(char *, unint64_t, uint64_t))(v66 + 16);
    swift_bridgeObjectRetain();
    v47 = v65;
    while (1)
    {
      v46(v47, v44, v7);
      v48 = sub_1C1426470();
      v50 = v49;
      if (v48 == sub_1C14262E4() && v50 == v51)
        break;
      v52 = sub_1C1427064();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v52 & 1) != 0)
        goto LABEL_26;
      v47 = v65;
      (*(void (**)(char *, uint64_t))(v66 + 8))(v65, v7);
      v44 += v45;
      if (!--v43)
      {
        swift_bridgeObjectRelease();
        v53 = 1;
        v54 = v66;
        v55 = (uint64_t)v61;
        v56 = (uint64_t)v62;
        goto LABEL_27;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_26:
    v55 = (uint64_t)v61;
    swift_bridgeObjectRelease();
    v54 = v66;
    v56 = (uint64_t)v62;
    (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v62, v65, v7);
    v53 = 0;
LABEL_27:
    v14 = v69;
    v26 = v63;
  }
  else
  {
    v53 = 1;
    v54 = v66;
    v55 = (uint64_t)v61;
    v56 = (uint64_t)v62;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56))(v56, v53, 1, v7);
  swift_bridgeObjectRelease();
  sub_1C132C344(v56, v55, &qword_1ED7978D0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48))(v55, 1, v7) == 1)
  {
    v40 = &qword_1ED7978D0;
    sub_1C132C860(v56, &qword_1ED7978D0);
    sub_1C132C860((uint64_t)v26, (uint64_t *)&unk_1ED7978C0);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v67, v13);
    v41 = v55;
LABEL_30:
    sub_1C132C860(v41, v40);
    return 0;
  }
  else
  {
    v57 = sub_1C142647C();
    sub_1C132C860(v56, &qword_1ED7978D0);
    sub_1C132C860((uint64_t)v26, (uint64_t *)&unk_1ED7978C0);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v67, v13);
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v55, v7);
  }
  return v57;
}

uint64_t sub_1C132C344(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

id sub_1C132C388(void *a1, void *a2, uint64_t a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  objc_class *v16;
  id v17;
  id v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  id v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  objc_super v35;

  v29 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791ED0);
  v8 = *(_QWORD *)(v7 - 8);
  v31 = v7;
  v32 = v8;
  MEMORY[0x1E0C80A78](v7);
  v27 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793A00);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793110);
  v26 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v3[OBJC_IVAR____TtC11SessionCoreP33_4F2D4625D323D26671D2A7737A69A19536PushFrequentUpdatesObservationClient_cancellables] = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&v3[OBJC_IVAR____TtC11SessionCoreP33_4F2D4625D323D26671D2A7737A69A19536PushFrequentUpdatesObservationClient_connection] = a1;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11SessionCoreP33_4F2D4625D323D26671D2A7737A69A19536PushFrequentUpdatesObservationClient_pushServer] = a2;
  *(_QWORD *)&v3[OBJC_IVAR____TtC11SessionCoreP33_4F2D4625D323D26671D2A7737A69A19536PushFrequentUpdatesObservationClient_authorizationManager] = a3;
  v16 = (objc_class *)type metadata accessor for PushFrequentUpdatesObservationClient();
  v35.receiver = v3;
  v35.super_class = v16;
  v30 = a1;
  v28 = a2;
  swift_retain();
  v17 = objc_msgSendSuper2(&v35, sel_init);
  v25 = OBJC_IVAR____TtC11SessionCoreP33_4F2D4625D323D26671D2A7737A69A19536PushFrequentUpdatesObservationClient_pushServer;
  v18 = v17;
  v33 = sub_1C14264C4();
  sub_1C1330F6C();
  v34 = (id)sub_1C1426CE0();
  v19 = sub_1C1426CA4();
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v24(v12, 1, 1, v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793140);
  sub_1C132C820(&qword_1ED793138, &qword_1ED793140, MEMORY[0x1E0C95D90]);
  v23 = sub_1C1329AD0((unint64_t *)&qword_1ED797AA0, (uint64_t (*)(uint64_t))sub_1C1330F6C, MEMORY[0x1E0DEF7F8]);
  sub_1C1426914();
  sub_1C132C860((uint64_t)v12, (uint64_t *)&unk_1ED793A00);

  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C132C820(&qword_1ED793108, &qword_1ED793110, MEMORY[0x1E0C95CB8]);
  sub_1C1426938();
  swift_release();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v15, v13);
  swift_beginAccess();
  sub_1C14268A8();
  swift_endAccess();
  swift_release();
  v33 = sub_1C14264AC();
  v34 = (id)sub_1C1426CE0();
  v24(v12, 1, 1, v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793160);
  sub_1C132C820(&qword_1ED793158, &qword_1ED793160, MEMORY[0x1E0C95D90]);
  v20 = v27;
  sub_1C1426914();
  sub_1C132C860((uint64_t)v12, (uint64_t *)&unk_1ED793A00);

  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C132C820(&qword_1ED793130, &qword_1ED791ED0, MEMORY[0x1E0C95CB8]);
  v21 = v31;
  sub_1C1426938();
  swift_release();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v20, v21);
  swift_beginAccess();
  sub_1C14268A8();
  swift_endAccess();
  swift_release();

  swift_release();
  return v18;
}

uint64_t sub_1C132C820(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1C3BAD334](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C132C860(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C132C89C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  size_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t, unint64_t, uint64_t, uint64_t);
  unint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  void *v59;
  _QWORD *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  _OWORD v79[2];
  __int128 v80;
  uint64_t v81;

  v1 = v0;
  v2 = sub_1C142671C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C142575C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void **)(v0 + OBJC_IVAR____TtC11SessionCoreP33_4CCBD309304C86708E1086DB2B0619886Client_connection);
  if (objc_msgSend(v10, sel_remoteTarget))
  {
    sub_1C1426DE8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v79, 0, sizeof(v79));
  }
  sub_1C1330398((uint64_t)v79, (uint64_t)&v80);
  if (v81)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791F08);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v77 = v7;
      v11 = v78;
      v12 = objc_msgSend(v10, sel_remoteProcess);
      v13 = sub_1C132F33C();
      v19 = v18;
      v73 = v11;
      v74 = v3;
      v75 = v2;
      v20 = v6;
      v21 = v13;

      v22 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v1+ OBJC_IVAR____TtC11SessionCoreP33_4CCBD309304C86708E1086DB2B0619886Client_authorizationManager), *(_QWORD *)(v1+ OBJC_IVAR____TtC11SessionCoreP33_4CCBD309304C86708E1086DB2B0619886Client_authorizationManager+ 24));
      MEMORY[0x1E0C80A78](v22);
      *(&v64 - 4) = v23;
      *(&v64 - 3) = v21;
      v76 = v21;
      v63 = v19;
      v71 = v20;
      sub_1C1426CEC();
      v24 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11SessionCoreP33_4CCBD309304C86708E1086DB2B0619886Client_activityStore + 24);
      v25 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11SessionCoreP33_4CCBD309304C86708E1086DB2B0619886Client_activityStore + 32);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC11SessionCoreP33_4CCBD309304C86708E1086DB2B0619886Client_activityStore), v24);
      v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v24, v25);
      MEMORY[0x1E0C80A78](v26);
      *(&v64 - 4) = v21;
      *(&v64 - 3) = (uint64_t)v19;
      v63 = v9;
      v27 = sub_1C133085C((uint64_t)sub_1C13DC3EC, (uint64_t)(&v64 - 6), v26);
      swift_bridgeObjectRelease();
      v28 = (_QWORD *)(v1 + OBJC_IVAR____TtC11SessionCoreP33_4CCBD309304C86708E1086DB2B0619886Client_pushServer);
      v29 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11SessionCoreP33_4CCBD309304C86708E1086DB2B0619886Client_pushServer + 24);
      v30 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11SessionCoreP33_4CCBD309304C86708E1086DB2B0619886Client_pushServer + 32);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC11SessionCoreP33_4CCBD309304C86708E1086DB2B0619886Client_pushServer), v29);
      v31 = swift_retain();
      v32 = sub_1C1330554(v31);
      v70 = v27;
      swift_release();
      v33 = sub_1C1328AE8(v32, v29, v30);
      swift_release();
      *(_QWORD *)&v79[0] = v33;
      swift_bridgeObjectRetain();
      v72 = (unint64_t)v19;
      sub_1C1426728();
      v34 = sub_1C1426248();
      v36 = v35;
      v37 = v28[3];
      v38 = v28[4];
      __swift_project_boxed_opaque_existential_1(v28, v37);
      v39 = sub_1C132BD64(v34, v36, v37, v38);
      v68 = v40;
      v69 = v39;
      v65 = v5;
      if (v40 >> 60 == 15)
      {
        sub_1C13273AC(v34, v36, &v80);
        swift_bridgeObjectRelease();
        sub_1C132D03C(v80, *((unint64_t *)&v80 + 1));
      }
      else
      {
        v41 = v39;
        v42 = v40;
        sub_1C133177C(v39, v40);
        v43 = *(_QWORD *)&v79[0];
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v80 = v43;
        *(_QWORD *)&v79[0] = 0x8000000000000000;
        sub_1C132762C(v41, v42, v34, v36, isUniquelyReferenced_nonNull_native);
        *(_QWORD *)&v79[0] = v80;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_1C1425F0C();
      swift_allocObject();
      v45 = sub_1C1425EF4();
      v46 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC11SessionCoreP33_4CCBD309304C86708E1086DB2B0619886Client_processManager), *(_QWORD *)(v1+ OBJC_IVAR____TtC11SessionCoreP33_4CCBD309304C86708E1086DB2B0619886Client_processManager+ 24));
      v47 = *(_QWORD *)&v79[0];
      v48 = *v46;
      v49 = *(_QWORD *)(*v46 + 40);
      v50 = *(_QWORD *)(*v46 + 48);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(*v46 + 16), v49);
      v51 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v50 + 32);
      v52 = v72;
      swift_bridgeObjectRetain_n();
      v53 = v73;
      swift_unknownObjectRetain_n();
      v67 = (void (*)(char *, uint64_t))v45;
      swift_retain_n();
      v66 = v47;
      swift_bridgeObjectRetain_n();
      v54 = v76;
      v55 = v51(v76, v52, v49, v50);
      if (v55)
      {
        v56 = (void *)v55;
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        v57 = v67;
        swift_retain();
        v58 = v66;
        swift_bridgeObjectRetain();
        sub_1C132E0EC(v56, 0xD000000000000013, 0x80000001C14303A0, 1, v48, v54, v52, v53, 10.0, v58, v57);

        swift_bridgeObjectRelease_n();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_release();
      }
      else
      {
        sub_1C13316BC();
        v59 = (void *)swift_allocError();
        *v60 = 2;
        sub_1C132A978(v59, v54, v52, v53);

        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      v61 = v74;
      v62 = v65;
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_release_n();
      swift_bridgeObjectRelease_n();
      sub_1C132D03C(v69, v68);
      swift_release();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v75);
      (*(void (**)(char *, uint64_t))(v77 + 8))(v9, v71);
      return;
    }
  }
  else
  {
    sub_1C132C860((uint64_t)&v80, (uint64_t *)&unk_1ED797BB0);
  }
  if (qword_1ED7939B0 != -1)
    swift_once();
  v14 = sub_1C1426854();
  __swift_project_value_buffer(v14, (uint64_t)qword_1ED798628);
  v15 = sub_1C1426848();
  v16 = sub_1C1426C68();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_1C1324000, v15, v16, "Cannot send push tokens to bad remote target", v17, 2u);
    MEMORY[0x1C3BAD3F4](v17, -1, -1);
  }

}

uint64_t sub_1C132D03C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1C13282B4(a1, a2);
  return a1;
}

void sub_1C132D050(void *a1, void *a2, uint64_t a3)
{
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;

  sub_1C1425780();
  v6 = (void *)sub_1C1426A7C();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithIdentifier_, v6);

  v27 = sub_1C1327530;
  v28 = 0;
  v8 = MEMORY[0x1E0C809B0];
  v23 = MEMORY[0x1E0C809B0];
  v24 = 1107296256;
  v25 = sub_1C13284C8;
  v26 = &block_descriptor_10_3;
  v9 = _Block_copy(&v23);
  v10 = &unk_1EF6E30B0;
  swift_release();
  v11 = (void *)objc_opt_self();
  v12 = objc_msgSend(v11, sel_protocolForProtocol_interpreter_, v10, v9);

  _Block_release(v9);
  objc_msgSend(v7, sel_setClient_, v12);

  v13 = objc_msgSend(v11, sel_protocolForProtocol_, &unk_1EF6E1470);
  objc_msgSend(v7, sel_setServer_, v13);

  v14 = objc_msgSend((id)objc_opt_self(), sel_utility);
  objc_msgSend(a1, sel_setServiceQuality_, v14);

  objc_msgSend(a1, sel_setInterface_, v7);
  objc_msgSend(a1, sel_setInterfaceTarget_, a2);
  objc_msgSend(a1, sel_setTargetQueue_, *(_QWORD *)(a3 + OBJC_IVAR____TtC11SessionCore15PushTokenServer_requestProcessingQueue));
  v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = a2;
  v27 = sub_1C13DCB98;
  v28 = v16;
  v23 = v8;
  v24 = 1107296256;
  v25 = sub_1C141AFCC;
  v26 = &block_descriptor_19_1;
  v17 = _Block_copy(&v23);
  v18 = a2;
  swift_release();
  objc_msgSend(a1, sel_setInterruptionHandler_, v17);
  _Block_release(v17);
  v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v19;
  *(_QWORD *)(v20 + 24) = v18;
  v27 = sub_1C13DCBBC;
  v28 = v20;
  v23 = v8;
  v24 = 1107296256;
  v25 = sub_1C141AFCC;
  v26 = &block_descriptor_26_0;
  v21 = _Block_copy(&v23);
  v22 = v18;
  swift_release();
  objc_msgSend(a1, sel_setInvalidationHandler_, v21);
  _Block_release(v21);

}

char *sub_1C132D390(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  char *v9;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  char *v29;
  uint64_t v30;
  id v31;
  id v32;
  objc_class *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  objc_super v45;
  uint64_t v46;

  v43 = a6;
  v38 = a7;
  v39 = a8;
  v40 = a5;
  v41 = a4;
  v44 = a3;
  v12 = sub_1C1425AEC();
  v36 = *(_QWORD *)(v12 - 8);
  v37 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v9[OBJC_IVAR____TtC11SessionCoreP33_F0FA238C64D38D6BA2E43F90C1B188B06Client_delegate];
  *(_QWORD *)&v9[OBJC_IVAR____TtC11SessionCoreP33_F0FA238C64D38D6BA2E43F90C1B188B06Client_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v16 = (uint64_t)&v9[OBJC_IVAR____TtC11SessionCoreP33_F0FA238C64D38D6BA2E43F90C1B188B06Client_backoffBudget];
  v17 = v9;
  sub_1C1425108();
  v18 = (int *)type metadata accessor for DefaultInputBackoffBudget();
  *(_QWORD *)(v16 + v18[6]) = 0x4008000000000000;
  *(_QWORD *)(v16 + v18[7]) = 10;
  *(_QWORD *)(v16 + v18[5]) = 10;
  *(_QWORD *)&v17[OBJC_IVAR____TtC11SessionCoreP33_F0FA238C64D38D6BA2E43F90C1B188B06Client_ephemeralActivityIdentifiers] = MEMORY[0x1E0DEE9E8];
  v19 = &v17[OBJC_IVAR____TtC11SessionCoreP33_F0FA238C64D38D6BA2E43F90C1B188B06Client_uuid];
  sub_1C14251E0();
  v20 = (uint64_t)&v17[OBJC_IVAR____TtC11SessionCoreP33_F0FA238C64D38D6BA2E43F90C1B188B06Client_activityAuthorizer];
  v46 = a2;
  sub_1C132E0A8(a2, (uint64_t)&v17[OBJC_IVAR____TtC11SessionCoreP33_F0FA238C64D38D6BA2E43F90C1B188B06Client_activityAuthorizer]);
  v21 = OBJC_IVAR____TtC11SessionCoreP33_F0FA238C64D38D6BA2E43F90C1B188B06Client_connection;
  *(_QWORD *)&v17[OBJC_IVAR____TtC11SessionCoreP33_F0FA238C64D38D6BA2E43F90C1B188B06Client_connection] = a1;
  v22 = a1;
  v23 = objc_msgSend(v22, sel_remoteProcess);
  v24 = v42;
  sub_1C1329530(v23);
  v42 = v24;
  if (v24)
  {

    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v44);
    __swift_destroy_boxed_opaque_existential_1(v46);
    sub_1C1339040(v15);

    __swift_destroy_boxed_opaque_existential_1(v20);
    sub_1C1339004(v16, (uint64_t (*)(_QWORD))type metadata accessor for DefaultInputBackoffBudget);
    swift_bridgeObjectRelease();
    v25 = sub_1C14251EC();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(v19, v25);

    type metadata accessor for Client();
    swift_deallocPartialClassInstance();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(&v17[OBJC_IVAR____TtC11SessionCoreP33_F0FA238C64D38D6BA2E43F90C1B188B06Client_requester], v14, v37);
    v26 = v44;
    sub_1C132E0A8(v44, (uint64_t)&v17[OBJC_IVAR____TtC11SessionCoreP33_F0FA238C64D38D6BA2E43F90C1B188B06Client_backoffPolicy]);
    v27 = v40;
    v28 = v41;
    *(_QWORD *)&v17[OBJC_IVAR____TtC11SessionCoreP33_F0FA238C64D38D6BA2E43F90C1B188B06Client_targetQueue] = v40;
    *(_QWORD *)&v17[OBJC_IVAR____TtC11SessionCoreP33_F0FA238C64D38D6BA2E43F90C1B188B06Client_queue] = v28;
    v29 = &v17[OBJC_IVAR____TtC11SessionCoreP33_F0FA238C64D38D6BA2E43F90C1B188B06Client_pushServer];
    v30 = v38;
    *(_QWORD *)v29 = v43;
    *((_QWORD *)v29 + 1) = v30;
    *((_QWORD *)v29 + 2) = v39;
    *((_QWORD *)v29 + 3) = a9;
    v31 = v27;
    v32 = v28;
    swift_unknownObjectRetain();

    v33 = (objc_class *)type metadata accessor for Client();
    v45.receiver = v17;
    v45.super_class = v33;
    v19 = (char *)objc_msgSendSuper2(&v45, sel_init);

    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v26);
    __swift_destroy_boxed_opaque_existential_1(v46);
  }
  return v19;
}

void sub_1C132D68C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  id v9;
  unsigned int v10;
  char *v11;
  id v12;
  char *v13;
  void *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  char *v24;
  char *v25;
  char *v26;
  os_unfair_lock_s *v27;
  char *v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t inited;
  uint64_t v38;
  os_unfair_lock_s *v39;
  _QWORD *v40;
  _QWORD *v41;
  void *v42;
  id v43;
  char *v44;
  _QWORD v45[5];
  uint64_t v46;
  char *v47;
  uint64_t v48;
  id v49;
  unint64_t aBlock;
  unint64_t v51;
  uint64_t (*v52)(uint64_t, uint64_t);
  void *v53;
  uint64_t (*v54)(uint64_t);
  _QWORD *v55;
  id v56[6];

  v49 = a1;
  v48 = sub_1C1426854();
  v45[3] = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v45[2] = (char *)v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_1C1426CD4();
  v3 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v5 = (char *)v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C1426C8C();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v6);
  v8 = sub_1C14269B0();
  MEMORY[0x1E0C80A78](v8);
  v9 = objc_msgSend(a1, sel_remoteProcess);
  v10 = objc_msgSend(v9, sel_pid);

  v45[4] = sub_1C1330EEC(0, (unint64_t *)&qword_1ED797AA8);
  aBlock = 0;
  v51 = 0xE000000000000000;
  sub_1C1426F08();
  swift_bridgeObjectRelease();
  aBlock = 0xD000000000000030;
  v51 = 0x80000001C142C6F0;
  LODWORD(v56[0]) = v10;
  sub_1C1427058();
  sub_1C14252D0();
  swift_bridgeObjectRelease();
  sub_1C1426998();
  aBlock = MEMORY[0x1E0DEE9D8];
  sub_1C1329AD0((unint64_t *)&qword_1ED7939F0, v7, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A70);
  sub_1C1331140((unint64_t *)&qword_1ED797A80, (uint64_t *)&unk_1ED797A70);
  sub_1C1426DF4();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF8D8], v46);
  v11 = v47;
  v12 = *(id *)&v47[OBJC_IVAR____TtC11SessionCore11InputServer_queue];
  v13 = v11;
  v14 = (void *)sub_1C1426D04();
  sub_1C132E0A8((uint64_t)&v11[OBJC_IVAR____TtC11SessionCore11InputServer_activityAuthorizer], (uint64_t)&aBlock);
  sub_1C132E0A8((uint64_t)&v11[OBJC_IVAR____TtC11SessionCore11InputServer_backoffPolicy], (uint64_t)v56);
  v15 = &v11[OBJC_IVAR____TtC11SessionCore11InputServer_pushServer];
  v16 = *(_QWORD *)&v11[OBJC_IVAR____TtC11SessionCore11InputServer_pushServer];
  v17 = *(_QWORD *)&v11[OBJC_IVAR____TtC11SessionCore11InputServer_pushServer + 8];
  v19 = *(_QWORD *)&v11[OBJC_IVAR____TtC11SessionCore11InputServer_pushServer + 16];
  v18 = *((_QWORD *)v15 + 3);
  v20 = objc_allocWithZone((Class)type metadata accessor for Client());
  v21 = v12;
  v22 = v49;
  v23 = v14;
  swift_unknownObjectRetain();
  v49 = v22;
  v24 = sub_1C132D390(v22, (uint64_t)&aBlock, (uint64_t)v56, v23, v21, v16, v17, v19, v18);
  v25 = &v13[OBJC_IVAR____TtC11SessionCore11InputServer_delegate];
  MEMORY[0x1C3BAD4B4](&v13[OBJC_IVAR____TtC11SessionCore11InputServer_delegate]);
  *(_QWORD *)&v24[OBJC_IVAR____TtC11SessionCoreP33_F0FA238C64D38D6BA2E43F90C1B188B06Client_delegate + 8] = *((_QWORD *)v25 + 1);
  swift_unknownObjectWeakAssign();
  v26 = v24;
  swift_unknownObjectRelease();
  v27 = *(os_unfair_lock_s **)(*(_QWORD *)&v13[OBJC_IVAR____TtC11SessionCore11InputServer_lock] + 16);
  os_unfair_lock_lock(v27);
  swift_beginAccess();
  v28 = v26;
  sub_1C1328798(v56, v28);
  swift_endAccess();
  os_unfair_lock_unlock(v27);

  v29 = objc_msgSend(v49, sel_remoteProcess);
  v33 = sub_1C132F33C();
  v35 = v34;

  sub_1C132E0A8((uint64_t)&v13[OBJC_IVAR____TtC11SessionCore11InputServer_knownClientStore], (uint64_t)&aBlock);
  v36 = __swift_project_boxed_opaque_existential_1(&aBlock, (uint64_t)v53);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797B80);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1427F50;
  *(_QWORD *)(inited + 32) = v33;
  *(_QWORD *)(inited + 40) = v35;
  v38 = *v36;
  v39 = *(os_unfair_lock_s **)(*(_QWORD *)(*v36 + 40) + 16);
  os_unfair_lock_lock(v39);
  sub_1C132F740(inited, v38);
  os_unfair_lock_unlock(v39);
  swift_setDeallocating();
  swift_arrayDestroy();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
  while (1)
  {
    v40 = (_QWORD *)swift_allocObject();
    v40[2] = v28;
    v40[3] = v23;
    v40[4] = v13;
    v41 = (_QWORD *)swift_allocObject();
    v41[2] = sub_1C1331714;
    v41[3] = v40;
    v54 = sub_1C1327D4C;
    v55 = v41;
    aBlock = MEMORY[0x1E0C809B0];
    v51 = 1107296256;
    v52 = sub_1C1327D10;
    v53 = &block_descriptor_17;
    v42 = _Block_copy(&aBlock);
    v43 = v23;
    v44 = v13;
    swift_retain();
    swift_release();
    objc_msgSend(v49, sel_configureConnection_, v42);
    _Block_release(v42);
    LOBYTE(v42) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v42 & 1) == 0)
      break;
    __break(1u);
    swift_once();
    __swift_project_value_buffer(v48, (uint64_t)qword_1ED798628);
    v30 = sub_1C1426848();
    v31 = sub_1C1426C68();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v32 = 0;
      _os_log_impl(&dword_1C1324000, v30, v31, "Could not get process identifier for client; not adding to known client store",
        v32,
        2u);
      MEMORY[0x1C3BAD3F4](v32, -1, -1);
    }

  }
  objc_msgSend(v49, sel_activate);
  swift_release();

}

uint64_t sub_1C132E0A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_1C132E0EC(void *a1, uint64_t a2, unint64_t a3, int a4, uint64_t a5, uint64_t a6, unint64_t a7, void *a8, double a9, uint64_t a10, void (*a11)(char *, uint64_t))
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  BOOL v34;
  uint64_t v35;
  void *v36;
  unsigned int v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  void *v42;
  _QWORD *v43;
  void *v44;
  void *v45;
  id v46;
  id v47;
  uint64_t v48;
  id v49;
  void *v50;
  id v51;
  id v52;
  void *v53;
  void *v54;
  id v55;
  id v56;
  uint64_t v57;
  char *v58;
  double v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  _QWORD *v64;
  void *v65;
  id v66;
  char *v67;
  char *v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  void *v72;
  _QWORD *v73;
  void *v74;
  NSObject *v75;
  NSObject *v76;
  os_log_type_t v77;
  BOOL v78;
  uint64_t v79;
  uint8_t *v80;
  unint64_t v81;
  void *v82;
  _QWORD *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  id v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  void (*v105)(char *, uint64_t);
  uint64_t v106;
  id aBlock[8];

  v88 = a5;
  LODWORD(v103) = a4;
  v104 = a2;
  v105 = a11;
  aBlock[6] = *(id *)MEMORY[0x1E0C80C00];
  v17 = sub_1C1426950();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v84 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_1C14269B0();
  v95 = *(_QWORD *)(v96 - 8);
  MEMORY[0x1E0C80A78](v96);
  v94 = (char *)&v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_1C1426944();
  v91 = *(_QWORD *)(v92 - 8);
  MEMORY[0x1E0C80A78](v92);
  v90 = (uint64_t *)((char *)&v84 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v102 = sub_1C14269D4();
  v89 = *(_QWORD *)(v102 - 8);
  v23 = MEMORY[0x1E0C80A78](v102);
  v97 = (char *)&v84 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v93 = (char *)&v84 - v25;
  v98 = a1;
  v26 = objc_msgSend(a1, sel_process);
  if (v26)
  {
    v27 = v26;
    v85 = v20;
    v87 = v17;
    v100 = a6;
    v101 = a10;
    if (qword_1ED793998 != -1)
      swift_once();
    v28 = sub_1C1426854();
    v29 = __swift_project_value_buffer(v28, (uint64_t)qword_1ED7985F8);
    v30 = v27;
    swift_bridgeObjectRetain_n();
    v31 = v30;
    v84 = v29;
    v32 = sub_1C1426848();
    v33 = sub_1C1426C80();
    v34 = os_log_type_enabled(v32, v33);
    v99 = a7;
    v86 = v18;
    if (v34)
    {
      v35 = swift_slowAlloc();
      v36 = (void *)swift_slowAlloc();
      aBlock[0] = v36;
      *(_DWORD *)v35 = 67240450;
      v37 = objc_msgSend(v31, sel_pid);

      LODWORD(v106) = v37;
      sub_1C1426DB8();

      *(_WORD *)(v35 + 8) = 2082;
      swift_bridgeObjectRetain();
      v106 = sub_1C132AD90(v104, a3, (uint64_t *)aBlock);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v32, v33, "Executing task for %{public}d with explanation \"%{public}s\"", (uint8_t *)v35, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v36, -1, -1);
      MEMORY[0x1C3BAD3F4](v35, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    if ((_BYTE)v103)
    {
      v44 = (void *)sub_1C1426A7C();
      v45 = (void *)sub_1C1426A7C();
      v46 = objc_msgSend((id)objc_opt_self(), sel_attributeWithDomain_name_, v44, v45);

      v47 = objc_msgSend((id)objc_opt_self(), sel_targetWithPid_, objc_msgSend(v31, (SEL)0x1E7A9CFC8));
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797B98);
      v48 = swift_allocObject();
      *(_OWORD *)(v48 + 16) = xmmword_1C1428510;
      *(_QWORD *)(v48 + 32) = v46;
      aBlock[0] = (id)v48;
      sub_1C1426BA8();
      v49 = objc_allocWithZone(MEMORY[0x1E0D87C98]);
      swift_bridgeObjectRetain();
      v50 = v31;
      v51 = v47;
      v52 = v46;
      v53 = (void *)sub_1C1426A7C();
      swift_bridgeObjectRelease();
      sub_1C1330FA8();
      v54 = (void *)sub_1C1426B84();
      swift_bridgeObjectRelease();
      v55 = objc_msgSend(v49, sel_initWithExplanation_target_attributes_, v53, v51, v54);

      aBlock[0] = 0;
      if ((objc_msgSend(v55, sel_acquireWithError_, aBlock) & 1) != 0)
      {
        v98 = v52;
        v103 = v50;
        v56 = aBlock[0];
        sub_1C132A978(0, v100, v99, a8);
        sub_1C1425F0C();
        swift_allocObject();
        swift_bridgeObjectRetain();
        v57 = sub_1C1425EF4();
        v58 = v97;
        sub_1C14269BC();
        v59 = a9 * 1000.0;
        if ((~COERCE__INT64(a9 * 1000.0) & 0x7FF0000000000000) != 0)
        {
          if (v59 > -9.22337204e18)
          {
            if (v59 < 9.22337204e18)
            {
              v60 = v90;
              *v90 = (uint64_t)v59;
              v61 = v91;
              v62 = v92;
              (*(void (**)(_QWORD *, _QWORD, uint64_t))(v91 + 104))(v60, *MEMORY[0x1E0DEF490], v92);
              v63 = v93;
              sub_1C14269C8();
              (*(void (**)(_QWORD *, uint64_t))(v61 + 8))(v60, v62);
              v105 = *(void (**)(char *, uint64_t))(v89 + 8);
              v105(v58, v102);
              v104 = *(_QWORD *)(v88 + 104);
              v64 = (_QWORD *)swift_allocObject();
              v64[2] = v55;
              v64[3] = v57;
              aBlock[4] = sub_1C1379BC0;
              aBlock[5] = v64;
              aBlock[0] = (id)MEMORY[0x1E0C809B0];
              aBlock[1] = (id)1107296256;
              aBlock[2] = sub_1C13A7F4C;
              aBlock[3] = &block_descriptor_23;
              v65 = _Block_copy(aBlock);
              v66 = v55;
              swift_retain();
              v67 = v94;
              sub_1C1426974();
              v106 = MEMORY[0x1E0DEE9D8];
              sub_1C1331508();
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A50);
              sub_1C1331180();
              v68 = v85;
              v69 = v87;
              sub_1C1426DF4();
              MEMORY[0x1C3BAC974](v63, v67, v68, v65);
              _Block_release(v65);

              swift_release();
              (*(void (**)(char *, uint64_t))(v86 + 8))(v68, v69);
              (*(void (**)(char *, uint64_t))(v95 + 8))(v67, v96);
              v105(v63, v102);
              swift_release();
              return;
            }
LABEL_28:
            __break(1u);
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_28;
      }
      v70 = aBlock[0];
      v71 = sub_1C1425078();

      swift_willThrow();
      sub_1C13316BC();
      v72 = (void *)swift_allocError();
      *v73 = 0;
      sub_1C132A978(v72, v100, v99, a8);

      v74 = (void *)v71;
    }
    else
    {
      if (objc_msgSend(v98, sel_taskState) == 4)
      {
        sub_1C132A978(0, v100, v99, a8);

        return;
      }
      v75 = v31;
      v76 = sub_1C1426848();
      v77 = sub_1C1426C68();
      v78 = os_log_type_enabled(v76, v77);
      v79 = v100;
      if (v78)
      {
        v80 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v80 = 67240192;
        LODWORD(aBlock[0]) = objc_msgSend(v75, (SEL)0x1E7A9CFC8);
        sub_1C1426DB8();

        _os_log_impl(&dword_1C1324000, v76, v77, "Rejecting low-priority task for %{public}d because process is unavailable", v80, 8u);
        MEMORY[0x1C3BAD3F4](v80, -1, -1);
      }
      else
      {

        v76 = v75;
      }
      v81 = v99;

      sub_1C13316BC();
      v82 = (void *)swift_allocError();
      *v83 = 2;
      sub_1C132A978(v82, v79, v81, a8);

      v74 = v82;
    }

  }
  else
  {
    if (qword_1ED793998 != -1)
      swift_once();
    v38 = sub_1C1426854();
    __swift_project_value_buffer(v38, (uint64_t)qword_1ED7985F8);
    v39 = sub_1C1426848();
    v40 = sub_1C1426C80();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v41 = 0;
      _os_log_impl(&dword_1C1324000, v39, v40, "Cannot execute task; process does not exist", v41, 2u);
      MEMORY[0x1C3BAD3F4](v41, -1, -1);
    }

    sub_1C13316BC();
    v42 = (void *)swift_allocError();
    *v43 = 2;
    sub_1C132A978(v42, a6, a7, a8);

  }
}

void sub_1C132EC10(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  unsigned int v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  char *v31;
  id v32;
  void *v33;
  os_unfair_lock_s *v34;
  char *v35;
  id v36;
  char isUniquelyReferenced_nonNull_native;
  id v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t inited;
  uint64_t v48;
  os_unfair_lock_s *v49;
  uint64_t v50;
  _QWORD *v51;
  void *v52;
  char *v53;
  id v54;
  _BYTE v55[12];
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int v59;
  _QWORD aBlock[3];
  void *v61;
  uint64_t (*v62)(uint64_t);
  _QWORD *v63;
  _QWORD v64[3];
  uint64_t v65;
  _UNKNOWN **v66;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7930F0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v55[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = objc_msgSend(a1, sel_remoteProcess);
  v9 = objc_msgSend(v8, sel_pid);

  v10 = objc_msgSend(a1, sel_remoteProcess);
  v57 = sub_1C132F33C();
  v58 = v11;

  *v7 = a1;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0D8CDD0], v4);
  v12 = a1;
  v13 = objc_msgSend(v12, byte_1E7A9C039);
  v14 = sub_1C1426A7C();
  v59 = v9;
  v15 = (void *)v14;
  v56 = objc_msgSend(v13, sel_hasEntitlement_, v14);

  v16 = objc_msgSend(v12, byte_1E7A9C039);
  v17 = (void *)sub_1C1426A7C();
  v18 = objc_msgSend(v16, sel_hasEntitlement_, v17);

  sub_1C132E0A8((uint64_t)v2 + OBJC_IVAR____TtC11SessionCore12OutputServer_processManager, (uint64_t)aBlock);
  v19 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)aBlock, (uint64_t)v61);
  MEMORY[0x1E0C80A78](v19);
  v21 = (uint64_t *)&v55[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t *))(v22 + 16))(v21);
  v23 = *v21;
  v65 = type metadata accessor for ProcessManager();
  v66 = &off_1E7A8AFC8;
  v64[0] = v23;
  v24 = (char *)objc_allocWithZone((Class)_s11SessionCore6ClientCMa_2());
  v25 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v64, v65);
  MEMORY[0x1E0C80A78](v25);
  v27 = (uint64_t *)&v55[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v29 = v59;
  (*(void (**)(uint64_t *))(v28 + 16))(v27);
  v30 = *v27;
  v31 = v2;
  v32 = sub_1C13E33CC((uint64_t)v7, v29, v56, v18, v57, v58, v30, (uint64_t)v31, v24);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
  v33 = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
  v34 = *(os_unfair_lock_s **)(*(_QWORD *)&v31[OBJC_IVAR____TtC11SessionCore12OutputServer_lock] + 16);
  os_unfair_lock_lock(v34);
  v35 = &v31[OBJC_IVAR____TtC11SessionCore12OutputServer__lock_clients];
  swift_beginAccess();
  v36 = v32;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v64[0] = *(_QWORD *)v35;
  *(_QWORD *)v35 = 0x8000000000000000;
  sub_1C1330850((uint64_t)v36, v29, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)v35 = v64[0];
  swift_bridgeObjectRelease();
  swift_endAccess();
  os_unfair_lock_unlock(v34);
  v38 = objc_msgSend(v12, sel_remoteProcess);
  v43 = sub_1C132F33C();
  v45 = v44;

  v46 = __swift_project_boxed_opaque_existential_1(&v31[OBJC_IVAR____TtC11SessionCore12OutputServer_knownClientStore], *(_QWORD *)&v31[OBJC_IVAR____TtC11SessionCore12OutputServer_knownClientStore + 24]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797B80);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1427F50;
  *(_QWORD *)(inited + 32) = v43;
  *(_QWORD *)(inited + 40) = v45;
  v48 = *v46;
  v49 = *(os_unfair_lock_s **)(*(_QWORD *)(v48 + 40) + 16);
  os_unfair_lock_lock(v49);
  sub_1C132F740(inited, v48);
  os_unfair_lock_unlock(v49);
  swift_setDeallocating();
  swift_arrayDestroy();
  while (1)
  {
    v50 = swift_allocObject();
    *(_QWORD *)(v50 + 16) = v36;
    *(_QWORD *)(v50 + 24) = v31;
    *(_DWORD *)(v50 + 32) = v29;
    v51 = (_QWORD *)swift_allocObject();
    v51[2] = sub_1C1331708;
    v51[3] = v50;
    v62 = sub_1C1327D4C;
    v63 = v51;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C1327D10;
    v61 = &block_descriptor_16_1;
    v52 = _Block_copy(aBlock);
    v53 = v31;
    v54 = v36;
    swift_retain();
    swift_release();
    objc_msgSend(v33, sel_configureConnection_, v52);
    _Block_release(v52);
    LOBYTE(v52) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v52 & 1) == 0)
      break;
    __break(1u);
    swift_once();
    v39 = sub_1C1426854();
    __swift_project_value_buffer(v39, (uint64_t)qword_1ED798628);
    v40 = sub_1C1426848();
    v41 = sub_1C1426C68();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v42 = 0;
      _os_log_impl(&dword_1C1324000, v40, v41, "Could not get process identifier for client; not adding to known client store",
        v42,
        2u);
      MEMORY[0x1C3BAD3F4](v42, -1, -1);
    }

  }
  objc_msgSend(v33, sel_activate);
  swift_release();

}

uint64_t type metadata accessor for UnfairLock()
{
  return objc_opt_self();
}

uint64_t sub_1C132F33C()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  id v21[2];

  v21[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = objc_msgSend(v0, sel_bundleIdentifier);
  if (v1)
  {
    v2 = v1;
    v3 = sub_1C1426A88();

    return v3;
  }
  v5 = objc_msgSend((id)objc_opt_self(), sel_identifierWithPid_, objc_msgSend(v0, sel_pid));
  if (!v5)
  {
    if (qword_1ED7939A0 != -1)
      swift_once();
    v13 = sub_1C1426854();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ED7986C8);
    v14 = v0;
    v15 = sub_1C1426848();
    v16 = sub_1C1426C68();
    v10 = v16;
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v17 = 67240192;
      LODWORD(v21[0]) = objc_msgSend(v14, sel_pid);
      sub_1C1426DB8();

      _os_log_impl(&dword_1C1324000, v15, (os_log_type_t)v10, "Couldn't fetch an identifier for pid: %{public}d", v17, 8u);
      MEMORY[0x1C3BAD3F4](v17, -1, -1);

    }
    else
    {

    }
    v18 = objc_msgSend(v14, sel_pid, v21[0]);
    sub_1C135C2F8();
    swift_allocError();
    *(_DWORD *)v19 = v18;
    *(_BYTE *)(v19 + 4) = 0;
    swift_willThrow();
    return v10;
  }
  v6 = v5;
  v7 = (void *)objc_opt_self();
  v21[0] = 0;
  v8 = v6;
  v9 = objc_msgSend(v7, sel_handleForIdentifier_error_, v8, v21);
  if (!v9)
  {
    v10 = (uint64_t)v21[0];
    sub_1C1425078();

    swift_willThrow();
LABEL_15:

    return v10;
  }
  v10 = (uint64_t)v9;
  v11 = v21[0];

  v12 = objc_msgSend((id)v10, sel_name);
  if (!v12)
  {
    sub_1C135C2F8();
    swift_allocError();
    *(_DWORD *)v20 = 0;
    *(_BYTE *)(v20 + 4) = 1;
    swift_willThrow();
    goto LABEL_15;
  }
  v10 = sub_1C1426A88();

  return v10;
}

id sub_1C132F678()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = (void *)sub_1C1426A7C();
  swift_bridgeObjectRelease();
  v6[0] = 0;
  v2 = objc_msgSend(v0, sel_initWithBundleIdentifier_error_, v1, v6);

  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_1C1425078();

    swift_willThrow();
  }
  return v2;
}

void sub_1C132F740(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  char v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  void *v20;
  uint64_t v22;
  uint64_t v23[3];
  uint64_t v24;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = 0;
    v4 = 0;
    v5 = swift_bridgeObjectRetain() + 40;
    v22 = v5;
    while (2)
    {
      if (v4 <= v2)
        v6 = v2;
      else
        v6 = v4;
      v7 = -(uint64_t)v6;
      v8 = (unint64_t *)(v5 + 16 * v4++);
      while (1)
      {
        if (v7 + v4 == 1)
        {
          __break(1u);
          return;
        }
        v10 = *(v8 - 1);
        v9 = *v8;
        swift_beginAccess();
        swift_bridgeObjectRetain_n();
        v11 = sub_1C132FAD4(&v24, v10, v9);
        swift_endAccess();
        swift_bridgeObjectRelease();
        if ((v11 & 1) != 0)
          break;
        swift_bridgeObjectRelease();
        ++v4;
        v8 += 2;
        if (v4 - v2 == 1)
        {
          swift_bridgeObjectRelease();
          if ((*(_BYTE *)(a2 + 32) & 1) != 0)
            goto LABEL_23;
          if ((v3 & 1) != 0)
            goto LABEL_24;
          return;
        }
      }
      if (qword_1ED791DC0 != -1)
        swift_once();
      v12 = sub_1C1426854();
      __swift_project_value_buffer(v12, (uint64_t)qword_1ED798508);
      swift_bridgeObjectRetain();
      v13 = sub_1C1426848();
      v14 = sub_1C1426C80();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = swift_slowAlloc();
        v16 = swift_slowAlloc();
        v23[0] = v16;
        *(_DWORD *)v15 = 136380675;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v15 + 4) = sub_1C132AD90(v10, v9, v23);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C1324000, v13, v14, "%{private}s is now a known client", (uint8_t *)v15, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v16, -1, -1);
        MEMORY[0x1C3BAD3F4](v15, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v5 = v22;
      v3 = 1;
      if (v4 != v2)
        continue;
      break;
    }
    swift_bridgeObjectRelease();
    if (*(_BYTE *)(a2 + 32) == 1)
      goto LABEL_23;
    goto LABEL_24;
  }
  if ((*(_BYTE *)(a2 + 32) & 1) != 0)
  {
    v3 = 0;
LABEL_23:
    swift_beginAccess();
    v17 = swift_bridgeObjectRetain();
    sub_1C132FC80(v17);
    v18 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v19 = (void *)sub_1C1426B84();
    swift_release();
    v20 = (void *)sub_1C1426A7C();
    objc_msgSend(v18, sel_setObject_forKey_, v19, v20);
    swift_bridgeObjectRelease();

    if ((v3 & 1) != 0)
    {
LABEL_24:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791EF8);
      sub_1C13CF154(&qword_1ED791EF0, MEMORY[0x1E0C95F40]);
      sub_1C14268FC();
    }
  }
}

uint64_t sub_1C132FAD4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_1C14270E8();
  swift_bridgeObjectRetain();
  sub_1C1426AD0();
  v8 = sub_1C1427100();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1C1427064() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1C1427064() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1C1351CAC(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

_QWORD *sub_1C132FC80(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797B80);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 17;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  v6 = sub_1C132FD64((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1C133F908();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1C132FD64(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 56;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1C132FF60()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  char v22;

  v1 = objc_msgSend(v0, sel_bundleIdentifier);
  if (v1)
  {
    v2 = v1;
    v3 = sub_1C1426A88();
    v5 = v4;

    sub_1C132F33C();
    v6 = objc_allocWithZone(MEMORY[0x1E0CA5848]);
    v8 = sub_1C132F678();
    v9 = objc_msgSend(v8, sel_extensionPointRecord);
    v10 = objc_msgSend(v9, sel_identifier);

    v11 = sub_1C1426A88();
    v13 = v12;

    if (v11 == 0xD00000000000001ELL && v13 == 0x80000001C142E150)
    {

      swift_bridgeObjectRelease();
      return v3;
    }
    v22 = sub_1C1427064();

    swift_bridgeObjectRelease();
    if ((v22 & 1) != 0)
      return v3;
    sub_1C132F33C();
    swift_bridgeObjectRelease();
    v14 = objc_allocWithZone(MEMORY[0x1E0CA5870]);
    v15 = sub_1C13278E4(v3, v5, 0);
    v16 = objc_msgSend(v15, sel_applicationExtensionRecords);
    sub_1C135C78C();
    sub_1C1330F24();
    v17 = sub_1C1426BFC();

    sub_1C135C34C(v17);
    v19 = v18;
    swift_bridgeObjectRelease();
    if (v19)
    {
      v20 = objc_msgSend(v19, sel_bundleIdentifier);
      if (v20)
      {
        v21 = v20;
        v3 = sub_1C1426A88();

        return v3;
      }

    }
    else
    {

    }
  }
  return 0;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1C3BAD31C]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t block_destroy_helper_20()
{
  return swift_release();
}

uint64_t block_destroy_helper_21()
{
  return swift_release();
}

uint64_t block_destroy_helper_22()
{
  return swift_release();
}

uint64_t block_destroy_helper_23()
{
  return swift_release();
}

uint64_t block_destroy_helper_24()
{
  return swift_release();
}

uint64_t block_destroy_helper_25()
{
  return swift_release();
}

uint64_t block_destroy_helper_26()
{
  return swift_release();
}

uint64_t block_destroy_helper_27()
{
  return swift_release();
}

uint64_t block_destroy_helper_28()
{
  return swift_release();
}

uint64_t block_destroy_helper_29()
{
  return swift_release();
}

uint64_t sub_1C1330398(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797BB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C13303E0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1C1326CEC(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1C1426F14();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1C1426F80();
      __break(1u);
LABEL_10:
      v2 = sub_1C1426B00();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1C1426FC8();
    __break(1u);
LABEL_14:
    result = sub_1C1426F80();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

size_t sub_1C1330554(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7931A8);
  v3 = *(_QWORD *)(type metadata accessor for Activity() - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      v9 = sub_1C136F0F8(&v10, (uint64_t)v6 + v5, v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      swift_bridgeObjectRetain();
      sub_1C133F908();
      if (v9 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_1C1330674(int a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1)
          break;
      }
    }
  }
  return result;
}

void sub_1C1330710(uint64_t a1, unsigned int a2, char a3, uint64_t *a4)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v6 = v4;
  v10 = *v4;
  v12 = sub_1C1327378(a2);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a3 & 1) == 0)
  {
    sub_1C13BC060(a4);
LABEL_7:
    v18 = (_QWORD *)*v6;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_DWORD *)(v18[6] + 4 * v12) = a2;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v22 = v18[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return;
    }
    goto LABEL_14;
  }
  sub_1C13BFC84(v15, a3 & 1, a4);
  v20 = sub_1C1327378(a2);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v6;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1C142707C();
  __break(1u);
}

void sub_1C1330850(uint64_t a1, unsigned int a2, char a3)
{
  sub_1C1330710(a1, a2, a3, (uint64_t *)&unk_1ED797B28);
}

uint64_t sub_1C133085C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C136CDA4(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for Activity, &qword_1ED797B00);
}

uint64_t sub_1C13308B4(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v25;
  unint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;

  v25 = a2;
  v26 = a1;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
  MEMORY[0x1E0C80A78](v31);
  v5 = (uint64_t *)((char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for Activity();
  v30 = *(_QWORD *)(v6 - 8);
  result = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 0;
  v32 = (_QWORD *)a3;
  v11 = *(_QWORD *)(a3 + 64);
  v27 = 0;
  v28 = a3 + 64;
  v12 = 1 << *(_BYTE *)(a3 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v29 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_5;
    }
    v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v21 >= v29)
      return sub_1C1326C50(v26, v25, v27, v32);
    v22 = *(_QWORD *)(v28 + 8 * v21);
    ++v10;
    if (!v22)
    {
      v10 = v21 + 1;
      if (v21 + 1 >= v29)
        return sub_1C1326C50(v26, v25, v27, v32);
      v22 = *(_QWORD *)(v28 + 8 * v10);
      if (!v22)
      {
        v10 = v21 + 2;
        if (v21 + 2 >= v29)
          return sub_1C1326C50(v26, v25, v27, v32);
        v22 = *(_QWORD *)(v28 + 8 * v10);
        if (!v22)
          break;
      }
    }
LABEL_20:
    v14 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_5:
    v17 = (uint64_t *)(v32[6] + 16 * v16);
    v19 = *v17;
    v18 = v17[1];
    sub_1C1338F24(v32[7] + *(_QWORD *)(v30 + 72) * v16, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    *v5 = v19;
    v5[1] = v18;
    v20 = (uint64_t)v5 + *(int *)(v31 + 48);
    sub_1C1338F24((uint64_t)v9, v20, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    swift_bridgeObjectRetain_n();
    LOBYTE(v20) = sub_1C13DFA84(v20);
    sub_1C132C860((uint64_t)v5, &qword_1ED7939D8);
    sub_1C13DCA54((uint64_t)v9);
    result = swift_bridgeObjectRelease();
    if ((v20 & 1) != 0)
    {
      *(unint64_t *)((char *)v26 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      if (__OFADD__(v27++, 1))
      {
        __break(1u);
        return sub_1C1326C50(v26, v25, v27, v32);
      }
    }
  }
  v23 = v21 + 3;
  if (v23 >= v29)
    return sub_1C1326C50(v26, v25, v27, v32);
  v22 = *(_QWORD *)(v28 + 8 * v23);
  if (v22)
  {
    v10 = v23;
    goto LABEL_20;
  }
  while (1)
  {
    v10 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v10 >= v29)
      return sub_1C1326C50(v26, v25, v27, v32);
    v22 = *(_QWORD *)(v28 + 8 * v10);
    ++v23;
    if (v22)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1C1330B68(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, unint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v9;
  char v10;
  unint64_t v11;
  size_t v12;
  uint64_t v13;
  void *v14;
  _QWORD v16[2];

  v6 = v4;
  v9 = isStackAllocationSafe;
  v16[1] = *MEMORY[0x1E0C80C00];
  v10 = *(_BYTE *)(a3 + 32);
  v11 = (unint64_t)((1 << v10) + 63) >> 6;
  v12 = 8 * v11;
  if ((v10 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v16 - ((v12 + 15) & 0x3FFFFFFFFFFFFFF0), v12);
    v13 = a4((char *)v16 - ((v12 + 15) & 0x3FFFFFFFFFFFFFF0), v11, a3, v9, a2);
    if (v4)
      swift_willThrow();
    else
      return v13;
  }
  else
  {
    v14 = (void *)swift_slowAlloc();
    bzero(v14, v12);
    v6 = a4((char *)v14, v11, a3, v9, a2);
    MEMORY[0x1C3BAD3F4](v14, -1, -1);
  }
  return v6;
}

uint64_t sub_1C1330CE4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1C13303E0(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1C13B2A2C(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1C13B2A2C(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

void sub_1C1330D78(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1C1351058();
  }
  else
  {
    if (v7 > v6)
    {
      sub_1C1352900();
      goto LABEL_14;
    }
    sub_1C13532AC();
  }
  v8 = *v3;
  v9 = sub_1C1426D88();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  a2 = v9 & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    type metadata accessor for Client();
    v11 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * a2);
    v12 = sub_1C1426D94();

    if ((v12 & 1) != 0)
    {
LABEL_13:
      sub_1C1427070();
      __break(1u);
    }
    else
    {
      v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v14 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * a2);
        v15 = sub_1C1426D94();

        if ((v15 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v16 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * a2) = a1;
  v17 = *(_QWORD *)(v16 + 16);
  v18 = __OFADD__(v17, 1);
  v19 = v17 + 1;
  if (v18)
    __break(1u);
  else
    *(_QWORD *)(v16 + 16) = v19;
}

uint64_t sub_1C1330EEC(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_1C1330F24()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1ED793188;
  if (!qword_1ED793188)
  {
    v1 = sub_1C135C78C();
    result = MEMORY[0x1C3BAD334](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED793188);
  }
  return result;
}

unint64_t sub_1C1330F6C()
{
  unint64_t result;

  result = qword_1ED797AA8;
  if (!qword_1ED797AA8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED797AA8);
  }
  return result;
}

unint64_t sub_1C1330FA8()
{
  unint64_t result;

  result = qword_1ED797A90;
  if (!qword_1ED797A90)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED797A90);
  }
  return result;
}

uint64_t sub_1C1330FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1C14270E8();
    sub_1C1426AD0();
    v6 = sub_1C1427100();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1C1427064() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1C1427064() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1C1331118(_QWORD *a1, void *a2)
{
  return sub_1C1350710(a1, a2, (void (*)(_QWORD))_s11SessionCore6ClientCMa_1, &qword_1ED797AB8);
}

uint64_t sub_1C133112C(_QWORD *a1, void *a2)
{
  return sub_1C1350710(a1, a2, (void (*)(_QWORD))type metadata accessor for PushFrequentUpdatesObservationClient, &qword_1ED791F28);
}

uint64_t sub_1C1331140(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1C3BAD334](MEMORY[0x1E0DEAF38], v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C1331180()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED797A60;
  if (!qword_1ED797A60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED797A50);
    result = MEMORY[0x1C3BAD334](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED797A60);
  }
  return result;
}

uint64_t sub_1C13311CC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_1C1427064();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1C1427064() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

unint64_t sub_1C1331290(void (*a1)(_QWORD), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  char *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v24;
  void (*v25)(_QWORD);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;

  v30 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7978D0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1C1426494();
  v9 = *(_QWORD *)(v27 - 8);
  v10 = MEMORY[0x1E0C80A78](v27);
  v29 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v26 = (char *)&v24 - v12;
  v13 = *(_QWORD *)(a3 + 16);
  if (!v13)
    return MEMORY[0x1E0DEE9D8];
  v14 = *(_QWORD *)(sub_1C1426320() - 8);
  v15 = a3 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  v28 = *(_QWORD *)(v14 + 72);
  v24 = a3;
  swift_bridgeObjectRetain();
  v16 = MEMORY[0x1E0DEE9D8];
  v25 = a1;
  v17 = v27;
  do
  {
    a1(v15);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v16;
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v17) == 1)
    {
      sub_1C132C860((uint64_t)v8, &qword_1ED7978D0);
    }
    else
    {
      v18 = v9;
      v19 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v20 = v26;
      v19(v26, v8, v17);
      v19(v29, v20, v17);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v16 = sub_1C136C60C(0, *(_QWORD *)(v16 + 16) + 1, 1, v16);
      v22 = *(_QWORD *)(v16 + 16);
      v21 = *(_QWORD *)(v16 + 24);
      if (v22 >= v21 >> 1)
        v16 = sub_1C136C60C(v21 > 1, v22 + 1, 1, v16);
      *(_QWORD *)(v16 + 16) = v22 + 1;
      v17 = v27;
      v19((char *)(v16+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(_QWORD *)(v18 + 72) * v22), v29, v27);
      v9 = v18;
      a1 = v25;
    }
    v15 += v28;
    --v13;
  }
  while (v13);
  swift_bridgeObjectRelease();
  return v16;
}

unint64_t sub_1C1331508()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED7979D0;
  if (!qword_1ED7979D0)
  {
    v1 = sub_1C1426950();
    result = MEMORY[0x1C3BAD334](MEMORY[0x1E0DEF510], v1);
    atomic_store(result, (unint64_t *)&qword_1ED7979D0);
  }
  return result;
}

uint64_t type metadata accessor for Client()
{
  uint64_t result;

  result = qword_1ED7974F8;
  if (!qword_1ED7974F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t _s11SessionCore6ClientCMa_2()
{
  uint64_t result;

  result = qword_1ED7974B0;
  if (!qword_1ED7974B0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1C13315C8(void *a1)
{
  uint64_t v1;

  sub_1C132B4AC(a1, *(char **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t type metadata accessor for DefaultInputBackoffBudget()
{
  uint64_t result;

  result = qword_1ED793758;
  if (!qword_1ED793758)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C133160C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1C1328EA8(v1[2], v1[3], v1[4], a1);
}

void destroy for ProcessManagerError(void **a1)
{
  void *v1;
  int v2;

  v1 = *a1;
  v2 = -1;
  if ((unint64_t)v1 < 0xFFFFFFFF)
    v2 = (int)v1;
  if ((v2 + 1) <= 1)

}

uint64_t sub_1C1331650(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  if ((v1 + 1) >= 2)
    return v1;
  else
    return 0;
}

_QWORD *sub_1C1331674(_QWORD *a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  if (((_DWORD)v4 + 1) <= 1)
    v5 = v3;
  *a1 = v3;
  return a1;
}

unint64_t sub_1C13316BC()
{
  unint64_t result;

  result = qword_1ED7936F0;
  if (!qword_1ED7936F0)
  {
    result = MEMORY[0x1C3BAD334](&unk_1C1428C04, &type metadata for ProcessManagerError);
    atomic_store(result, (unint64_t *)&qword_1ED7936F0);
  }
  return result;
}

void sub_1C1331700(void *a1)
{
  uint64_t v1;

  sub_1C132D050(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1C1331708(void *a1)
{
  uint64_t v1;

  sub_1C132BA2C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_DWORD *)(v1 + 32));
}

void sub_1C1331714(void *a1)
{
  uint64_t v1;

  sub_1C132B74C(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1C1331720(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793BC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1331768(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1C133177C(a1, a2);
  return a1;
}

uint64_t sub_1C133177C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t SNCEffectiveArtworkSubtype()
{
  if (SNCEffectiveArtworkSubtype_onceToken != -1)
    dispatch_once(&SNCEffectiveArtworkSubtype_onceToken, &__block_literal_global);
  return SNCEffectiveArtworkSubtype_deviceSubtype;
}

id sub_1C1331880(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v10;

  v4 = sub_1C1425EDC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  sub_1C142572C();
  sub_1C1426D70();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1C1425720();
  v8 = (void *)sub_1C1426A7C();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setService_, v8);

  return objc_msgSend(a1, sel_setDelegate_, a2);
}

void sub_1C1331960(uint64_t a1, uint64_t a2, void *a3, const char *a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  os_unfair_lock_s *v13;
  void *v14;

  v6 = a2 + 16;
  swift_beginAccess();
  v7 = MEMORY[0x1C3BAD4B4](v6);
  if (v7)
  {
    v8 = (char *)v7;
    if (qword_1ED793940 != -1)
      swift_once();
    v9 = sub_1C1426854();
    __swift_project_value_buffer(v9, (uint64_t)qword_1ED798580);
    v10 = sub_1C1426848();
    v11 = sub_1C1426C80();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_1C1324000, v10, v11, a4, v12, 2u);
      MEMORY[0x1C3BAD3F4](v12, -1, -1);
    }

    v13 = *(os_unfair_lock_s **)(*(_QWORD *)&v8[OBJC_IVAR____TtC11SessionCore11InputServer_lock] + 16);
    os_unfair_lock_lock(v13);
    swift_beginAccess();
    v14 = (void *)sub_1C1353DC8(a3);
    swift_endAccess();
    os_unfair_lock_unlock(v13);

  }
}

id sub_1C1331AF0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InputServer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C1331BC8()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char *v19;
  void *v20;
  id v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  void (*v34)(uint64_t *, _QWORD);
  _QWORD *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t result;
  uint64_t v39;
  os_unfair_lock_s *lock;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;

  lock = *(os_unfair_lock_s **)(*(_QWORD *)(v0 + OBJC_IVAR____TtC11SessionCore11InputServer_lock) + 16);
  os_unfair_lock_lock(lock);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793A60);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1427F50;
  *(_QWORD *)(inited + 32) = 0x73746E65696C63;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  v39 = inited;
  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC11SessionCore11InputServer_clients);
  swift_beginAccess();
  v3 = *v2;
  v4 = *v2 & 0xC000000000000001;
  if (v4)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1C1426E60();
    if (v5)
      goto LABEL_3;
LABEL_6:
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
    {
LABEL_22:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797AD0);
      v9 = sub_1C1426FBC();
      goto LABEL_23;
    }
LABEL_7:
    v9 = MEMORY[0x1E0DEE9E0];
LABEL_23:
    v41 = v9;
    v35 = (_QWORD *)swift_bridgeObjectRetain();
    sub_1C1336588(v35, 1, &v41);
    swift_bridgeObjectRelease();
    v36 = v41;
    *(_QWORD *)(v39 + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7979D8);
    *(_QWORD *)(v39 + 48) = v36;
    v37 = sub_1C133204C(v39);
    os_unfair_lock_unlock(lock);
    return v37;
  }
  v5 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRetain();
  if (!v5)
    goto LABEL_6;
LABEL_3:
  v47 = MEMORY[0x1E0DEE9D8];
  sub_1C1336948(0, v5 & ~(v5 >> 63), 0);
  if (v4)
  {
    v6 = sub_1C1426E24();
    v8 = 1;
  }
  else
  {
    v6 = sub_1C1337718(v3);
    v8 = v10 & 1;
  }
  v44 = v6;
  v45 = v7;
  v46 = v8;
  if ((v5 & 0x8000000000000000) == 0)
  {
    do
    {
      while (1)
      {
        sub_1C13374C4(v44, v45, v46, v3);
        v20 = v19;
        v21 = objc_msgSend(*(id *)&v19[OBJC_IVAR____TtC11SessionCoreP33_F0FA238C64D38D6BA2E43F90C1B188B06Client_connection], sel_remoteProcess);
        v22 = objc_msgSend(v21, sel_pid);

        sub_1C1425A80();
        v43 = v22;
        v41 = sub_1C1427058();
        v42 = v23;
        sub_1C14252D0();
        sub_1C14252D0();
        swift_bridgeObjectRelease();
        sub_1C14252D0();
        sub_1C14251C8();
        sub_1C14252D0();
        swift_bridgeObjectRelease();
        v24 = v41;
        v25 = v42;
        v26 = objc_msgSend(v20, sel_description);
        v27 = sub_1C1426A88();
        v29 = v28;

        v30 = v47;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C1336948(0, *(_QWORD *)(v30 + 16) + 1, 1);
          v30 = v47;
        }
        v32 = *(_QWORD *)(v30 + 16);
        v31 = *(_QWORD *)(v30 + 24);
        if (v32 >= v31 >> 1)
        {
          sub_1C1336948(v31 > 1, v32 + 1, 1);
          v30 = v47;
        }
        *(_QWORD *)(v30 + 16) = v32 + 1;
        v33 = (_QWORD *)(v30 + 32 * v32);
        v33[4] = v24;
        v33[5] = v25;
        v33[6] = v27;
        v33[7] = v29;
        if (v4)
          break;
        v11 = v44;
        v12 = v45;
        v13 = v46;
        v14 = sub_1C13373E0(v44, v45, v46, v3);
        v16 = v15;
        v18 = v17;
        sub_1C133770C(v11, v12, v13);
        v44 = v14;
        v45 = v16;
        v46 = v18 & 1;
        if (!--v5)
          goto LABEL_21;
      }
      if ((v46 & 1) == 0)
        goto LABEL_25;
      if (sub_1C1426E3C())
        swift_isUniquelyReferenced_nonNull_native();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6DA9E8);
      v34 = (void (*)(uint64_t *, _QWORD))sub_1C1426C20();
      sub_1C1426E9C();
      v34(&v41, 0);
      --v5;
    }
    while (v5);
LABEL_21:
    sub_1C133770C(v44, v45, v46);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v47 + 16))
      goto LABEL_22;
    goto LABEL_7;
  }
  __break(1u);
LABEL_25:
  __break(1u);
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

unint64_t sub_1C133204C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797B20);
  v2 = sub_1C1426FBC();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1C132C344(v6, (uint64_t)&v15, &qword_1ED797A28);
    v7 = v15;
    v8 = v16;
    result = sub_1C13277A0(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_1C13377A0(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C1332180(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793308);
  v2 = sub_1C1426FBC();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1C132C344(v6, (uint64_t)v15, &qword_1ED793300);
    result = sub_1C13B99E8((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_1C13377A0(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C13322C0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DACA8);
  v2 = (_QWORD *)sub_1C1426FBC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_BYTE *)(a1 + 48);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 2);
    v6 = *((_QWORD *)v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_1C13277A0(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_BYTE *)(v2[7] + result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C13323D0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DACB0);
  v2 = (_QWORD *)sub_1C1426FBC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 48);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 2);
    v6 = (uint64_t)*(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    v8 = v7;
    result = sub_1C13277A0(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v8;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C13324E8(uint64_t a1)
{
  return sub_1C133252C(a1, (uint64_t *)&unk_1EF6DAC98, &qword_1ED791E30, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FB68]);
}

unint64_t sub_1C1332504(uint64_t a1)
{
  return sub_1C13328A4(a1, &qword_1ED797AE8);
}

unint64_t sub_1C1332510(uint64_t a1)
{
  return sub_1C133252C(a1, &qword_1ED797A08, &qword_1ED797AE0, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8F968]);
}

unint64_t sub_1C133252C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t result;
  char v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v29[2];
  uint64_t (*v30)(_QWORD);
  uint64_t *v31;

  v30 = a4;
  v31 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (_QWORD *)((char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v11 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v10 = sub_1C1426FBC();
  v11 = (_QWORD *)v10;
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v11;
  }
  v13 = (char *)v9 + *(int *)(v6 + 48);
  v14 = v10 + 64;
  v15 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v29[1] = a1;
  v16 = a1 + v15;
  v17 = *(_QWORD *)(v7 + 72);
  swift_retain();
  while (1)
  {
    sub_1C132C344(v16, (uint64_t)v9, v31);
    v18 = *v9;
    v19 = v9[1];
    result = sub_1C13277A0(*v9, v19);
    if ((v21 & 1) != 0)
      break;
    v22 = result;
    *(_QWORD *)(v14 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v23 = (uint64_t *)(v11[6] + 16 * result);
    *v23 = v18;
    v23[1] = v19;
    v24 = v11[7];
    v25 = v30(0);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v22, v13, v25);
    v26 = v11[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_11;
    v11[2] = v28;
    v16 += v17;
    if (!--v12)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C13326C8(uint64_t a1)
{
  return sub_1C1332700(a1, (uint64_t *)&unk_1ED793590, (uint64_t *)&unk_1ED7935A8, (uint64_t (*)(_QWORD))type metadata accessor for XPCInputParticipant.ActivityUpdate);
}

unint64_t sub_1C13326E4(uint64_t a1)
{
  return sub_1C1332700(a1, &qword_1ED7935A0, &qword_1ED7935B8, (uint64_t (*)(_QWORD))type metadata accessor for SlidingWindowExponentialBackoff);
}

unint64_t sub_1C1332700(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t result;
  char v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD v29[2];
  uint64_t v30;
  uint64_t *v31;

  v31 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (_QWORD *)((char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v12 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v11 = sub_1C1426FBC();
  v12 = (_QWORD *)v11;
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v12;
  }
  v14 = (uint64_t)v10 + *(int *)(v7 + 48);
  v29[1] = a1;
  v30 = v14;
  v15 = v11 + 64;
  v16 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v17 = *(_QWORD *)(v8 + 72);
  swift_retain();
  while (1)
  {
    sub_1C132C344(v16, (uint64_t)v10, v31);
    v18 = *v10;
    v19 = v10[1];
    result = sub_1C13277A0(*v10, v19);
    if ((v21 & 1) != 0)
      break;
    v22 = result;
    *(_QWORD *)(v15 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v23 = (uint64_t *)(v12[6] + 16 * result);
    *v23 = v18;
    v23[1] = v19;
    v24 = v12[7];
    v25 = a4(0);
    result = sub_1C1339140(v30, v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v22, a4);
    v26 = v12[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_11;
    v12[2] = v28;
    v16 += v17;
    if (!--v13)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C1332898(uint64_t a1)
{
  return sub_1C13328A4(a1, &qword_1EF6DAD50);
}

unint64_t sub_1C13328A4(uint64_t a1, uint64_t *a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v3 = (_QWORD *)sub_1C1426FBC();
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v6 = *(v5 - 2);
    v7 = *(v5 - 1);
    v8 = *v5;
    swift_bridgeObjectRetain();
    result = sub_1C13277A0(v6, v7);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v6;
    v11[1] = v7;
    *(_QWORD *)(v3[7] + 8 * result) = v8;
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v5 += 3;
    v3[2] = v14;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C13329B0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DAA80);
  v2 = (_QWORD *)sub_1C1426FBC();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1C13277A0(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C1332AC8(uint64_t a1)
{
  return sub_1C133252C(a1, &qword_1EF6DAA88, &qword_1EF6DAA90, (uint64_t (*)(_QWORD))MEMORY[0x1E0D8D3C0]);
}

uint64_t sub_1C1332AE4()
{
  return sub_1C1331BC8();
}

uint64_t sub_1C1332B04()
{
  uint64_t v0;
  id v1;
  uint64_t v3;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11SessionCoreP33_F0FA238C64D38D6BA2E43F90C1B188B06Client_connection), sel_remoteProcess);
  objc_msgSend(v1, sel_pid);

  sub_1C1425A80();
  v3 = sub_1C1427058();
  sub_1C14252D0();
  sub_1C14252D0();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1C1332C1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v1 = type metadata accessor for DefaultInputBackoffBudget();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = 0;
  v8 = 0xE000000000000000;
  sub_1C1426F08();
  v9 = v7;
  v10 = v8;
  sub_1C14252D0();
  sub_1C1332B04();
  sub_1C14252D0();
  swift_bridgeObjectRelease();
  sub_1C14252D0();
  v4 = v0 + OBJC_IVAR____TtC11SessionCoreP33_F0FA238C64D38D6BA2E43F90C1B188B06Client_backoffBudget;
  swift_beginAccess();
  sub_1C1338F24(v4, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for DefaultInputBackoffBudget);
  sub_1C1426F74();
  sub_1C1339004((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for DefaultInputBackoffBudget);
  return v9;
}

id sub_1C1332D68()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  objc_class *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  objc_super v24;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791E48);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C1425630();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1C142557C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C1425558();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = &v0[OBJC_IVAR____TtC11SessionCoreP33_F0FA238C64D38D6BA2E43F90C1B188B06Client_requester];
  v14 = sub_1C1425AEC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0C8F788], v9);
  if (MEMORY[0x1C3BAD4B4](&v0[OBJC_IVAR____TtC11SessionCoreP33_F0FA238C64D38D6BA2E43F90C1B188B06Client_delegate]))
  {
    v23 = v5;
    swift_beginAccess();
    v15 = swift_bridgeObjectRetain();
    v16 = sub_1C132FC80(v15);
    v22 = v6;
    v17 = (uint64_t)v16;
    swift_bridgeObjectRelease();
    sub_1C1425624();
    sub_1C1425570();
    v18 = sub_1C1425450();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v3, 1, 1, v18);
    sub_1C137E350(v17, (uint64_t)v12, (uint64_t)v8, (uint64_t)v3);
    swift_unknownObjectRelease();
    swift_release();
    sub_1C132C860((uint64_t)v3, &qword_1ED791E48);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v23);
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v19 = (objc_class *)type metadata accessor for Client();
  v24.receiver = v0;
  v24.super_class = v19;
  return objc_msgSendSuper2(&v24, sel_dealloc);
}

void sub_1C13332B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = sub_1C142506C();
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);

}

uint64_t sub_1C1333458()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  void *v10;
  uint64_t v12;
  uint64_t v13;

  v2 = sub_1C1425498();
  v13 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C1425978();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (void *)sub_1C14250CC();
  sub_1C1329AD0(&qword_1ED793608, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FE28], MEMORY[0x1E0C8FE20]);
  sub_1C1425BAC();

  sub_1C1333600((uint64_t)v8, (uint64_t)v4);
  if (!v1)
  {
    sub_1C1329AD0(&qword_1ED793BA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F670], MEMORY[0x1E0C8F668]);
    v10 = (void *)sub_1C1425BB8();
    v0 = sub_1C14250D8();

    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v2);
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v0;
}

uint64_t sub_1C1333600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  id v43;
  unsigned int v44;
  id v45;
  void *v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[2];
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v68 = a2;
  v5 = sub_1C14255C4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C1425978();
  v66 = *(_QWORD *)(v9 - 8);
  v67 = v9;
  MEMORY[0x1E0C80A78](v9);
  v65 = (char *)v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C1425A08();
  MEMORY[0x1E0C80A78](v11);
  v70 = (uint64_t)v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1C14251EC();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1334914(a1);
  v17 = MEMORY[0x1C3BAD4B4](v2 + OBJC_IVAR____TtC11SessionCoreP33_F0FA238C64D38D6BA2E43F90C1B188B06Client_delegate);
  if (!v17)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0C8F8C0], v5);
    sub_1C14255DC();
    sub_1C1329AD0((unint64_t *)&unk_1EF6DACB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F8E0], MEMORY[0x1E0C8F8E8]);
    swift_allocError();
    sub_1C14255D0();
    return swift_willThrow();
  }
  v69 = v5;
  v76 = v17;
  v18 = sub_1C1335368();
  if (v3)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0C8F8A8], v69);
    sub_1C14255DC();
    sub_1C1329AD0((unint64_t *)&unk_1EF6DACB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F8E0], MEMORY[0x1E0C8F8E8]);
    swift_allocError();
    v19 = v3;
    sub_1C14255D0();
    swift_willThrow();

    return swift_unknownObjectRelease();
  }
  v63 = v2;
  v64 = a1;
  if (!*((_QWORD *)v18 + 2))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0C8F8A8], v69);
    sub_1C14255DC();
    sub_1C1329AD0((unint64_t *)&unk_1EF6DACB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F8E0], MEMORY[0x1E0C8F8E8]);
    swift_allocError();
    sub_1C14255D0();
    swift_willThrow();
    return swift_unknownObjectRelease();
  }
  v62 = v18;
  v21 = v64;
  v22 = sub_1C14258DC();
  v60 = v6;
  if ((v22 & 1) == 0)
  {
    sub_1C14251E0();
    v61 = sub_1C14251C8();
    v25 = v27;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    v26 = v70;
    goto LABEL_12;
  }
  v23 = sub_1C14258D0();
  if (v24)
  {
    v61 = v23;
    v25 = v24;
    v26 = v70;
    v21 = v64;
LABEL_12:
    v28 = v63;
    goto LABEL_13;
  }
  sub_1C14251E0();
  v38 = sub_1C14251C8();
  v40 = v39;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v72 = v38;
  v73 = v40;
  swift_bridgeObjectRetain();
  sub_1C14252D0();
  swift_bridgeObjectRelease();
  v42 = v72;
  v41 = v73;
  v28 = v63;
  v43 = objc_msgSend(*(id *)(v63 + OBJC_IVAR____TtC11SessionCoreP33_F0FA238C64D38D6BA2E43F90C1B188B06Client_connection), sel_remoteProcess);
  v44 = objc_msgSend(v43, sel_pid);

  LODWORD(v72) = v44;
  sub_1C1427058();
  v72 = v42;
  v73 = v41;
  swift_bridgeObjectRetain();
  sub_1C14252D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v25 = v73;
  v61 = v72;
  v26 = v70;
  v21 = v64;
LABEL_13:
  sub_1C13359B4(v26);
  sub_1C132E0A8(v28 + OBJC_IVAR____TtC11SessionCoreP33_F0FA238C64D38D6BA2E43F90C1B188B06Client_activityAuthorizer, (uint64_t)&v72);
  v29 = v75;
  v59 = v74;
  v30 = v21;
  v58[1] = __swift_project_boxed_opaque_existential_1(&v72, v74);
  v31 = v26;
  v32 = *(void **)(v28 + OBJC_IVAR____TtC11SessionCoreP33_F0FA238C64D38D6BA2E43F90C1B188B06Client_connection);
  v33 = objc_msgSend(v32, sel_remoteProcess);
  v34 = v31;
  v35 = v61;
  v36 = (void *)(*(uint64_t (**)(uint64_t, id, uint64_t, uint64_t, char *, uint64_t, uint64_t))(v29 + 8))(v30, v33, v34, v61, v25, v59, v29);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v72);
  if (v36)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, _QWORD, uint64_t))(v60 + 104))(v8, *MEMORY[0x1E0C8F8B8], v69);
    sub_1C14255DC();
    sub_1C1329AD0((unint64_t *)&unk_1EF6DACB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F8E0], MEMORY[0x1E0C8F8E8]);
    swift_allocError();
    v37 = v36;
    sub_1C14255D0();
    swift_willThrow();
    swift_unknownObjectRelease();

    return sub_1C1339004(v70, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
  }
  else
  {
    v45 = objc_msgSend(v32, sel_remoteProcess);
    v46 = (void *)sub_1C1426A7C();
    v47 = objc_msgSend(v45, sel_hasEntitlement_, v46);

    v48 = v64;
    v49 = v35;
    v50 = v70;
    sub_1C137BDF4(v64, v49, v25, (uint64_t)v62, v70, v47, v68);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    LOBYTE(v45) = sub_1C14258DC();
    v51 = v65;
    v52 = v66;
    v53 = v67;
    (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v65, v48, v67);
    if ((v45 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v52 + 8))(v51, v53);
    }
    else
    {
      v54 = sub_1C14258E8();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v51, v53);
      if ((v54 & 1) == 0)
      {
        sub_1C1339004(v50, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
        return swift_unknownObjectRelease();
      }
    }
    v55 = sub_1C142548C();
    v57 = v56;
    swift_beginAccess();
    sub_1C132FAD4(&v71, v55, v57);
    swift_endAccess();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1C1339004(v50, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
  }
}

uint64_t sub_1C1333E80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  _QWORD v26[2];
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791DA0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C1425558();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1C3BAD4B4](v3 + OBJC_IVAR____TtC11SessionCoreP33_F0FA238C64D38D6BA2E43F90C1B188B06Client_delegate);
  if (result)
  {
    v26[0] = a3;
    v26[1] = result;
    v15 = a2;
    v16 = *(void **)(v3 + OBJC_IVAR____TtC11SessionCoreP33_F0FA238C64D38D6BA2E43F90C1B188B06Client_connection);
    sub_1C1329530(objc_msgSend(v16, sel_remoteProcess));
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v9, *MEMORY[0x1E0C8F788], v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    sub_1C132E0A8(v3 + OBJC_IVAR____TtC11SessionCoreP33_F0FA238C64D38D6BA2E43F90C1B188B06Client_activityAuthorizer, (uint64_t)v27);
    v17 = v28;
    v18 = v29;
    __swift_project_boxed_opaque_existential_1(v27, v28);
    v19 = objc_msgSend(v16, sel_remoteProcess);
    v20 = v26[0];
    v21 = (*(uint64_t (**)(_QWORD, id, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 16))(v26[0], v19, a1, v15, v17, v18);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
    if ((v21 & 1) != 0)
    {
      sub_1C137C900(a1, v15, (uint64_t)v13, v20);
      swift_unknownObjectRelease();
    }
    else
    {
      if (qword_1ED793940 != -1)
        swift_once();
      v22 = sub_1C1426854();
      __swift_project_value_buffer(v22, (uint64_t)qword_1ED798580);
      v23 = sub_1C1426848();
      v24 = sub_1C1426C68();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v25 = 0;
        _os_log_impl(&dword_1C1324000, v23, v24, "Client is not permitted to update activity", v25, 2u);
        MEMORY[0x1C3BAD3F4](v25, -1, -1);
      }
      swift_unknownObjectRelease();

    }
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  return result;
}

uint64_t sub_1C1334364(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v22;

  v22 = a2;
  v6 = sub_1C142557C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791E48);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v22 - v14;
  if (a4 >> 60 == 15 || (v16 = sub_1C14250CC()) == 0)
  {
    v19 = sub_1C1425450();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v13, 1, 1, v19);
  }
  else
  {
    v17 = (void *)v16;
    v18 = sub_1C1425450();
    sub_1C1329AD0((unint64_t *)&unk_1ED792708, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F570], MEMORY[0x1E0C8F568]);
    sub_1C1425BAC();

    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v13, 0, 1, v18);
  }
  sub_1C1337B24((uint64_t)v13, (uint64_t)v15);
  v20 = (void *)sub_1C14250CC();
  sub_1C1329AD0(&qword_1ED7935E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F7D8], MEMORY[0x1E0C8F7D0]);
  sub_1C1425BAC();

  sub_1C1334570(a1, v22, (uint64_t)v15, (uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return sub_1C132C860((uint64_t)v15, &qword_1ED791E48);
}

uint64_t sub_1C1334570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t inited;
  uint64_t v18;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791DA0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1C1425558();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1C3BAD4B4](v4 + OBJC_IVAR____TtC11SessionCoreP33_F0FA238C64D38D6BA2E43F90C1B188B06Client_delegate);
  if (result)
  {
    v18 = a4;
    sub_1C1329530(objc_msgSend(*(id *)(v4 + OBJC_IVAR____TtC11SessionCoreP33_F0FA238C64D38D6BA2E43F90C1B188B06Client_connection), sel_remoteProcess));
    (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v11, *MEMORY[0x1E0C8F788], v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797B80);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C1427F50;
    *(_QWORD *)(inited + 32) = a1;
    *(_QWORD *)(inited + 40) = a2;
    swift_bridgeObjectRetain();
    sub_1C137E350(inited, (uint64_t)v15, v18, a3);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_unknownObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  return result;
}

uint64_t sub_1C1334914(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t result;
  char v30;
  uint64_t v31;
  char v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t *boxed_opaque_existential_1;
  char v40;
  uint64_t v41;
  char *v42;
  NSObject *v43;
  os_log_type_t v44;
  int v45;
  _BOOL4 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  double v53;
  double v54;
  double v55;
  uint64_t v56;
  _BYTE *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  void (*v62)(_BYTE *, uint64_t);
  uint64_t v63;
  uint64_t v64;
  void *v65;
  char *v66;
  _BYTE *v67;
  _BYTE *v68;
  uint64_t v69;
  _BYTE v70[12];
  int v71;
  uint64_t (*v72)(_BYTE *, uint64_t);
  _BYTE *v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE *v78;
  uint64_t v79;
  _BYTE *v80;
  uint64_t v81;
  uint64_t v82;
  _BYTE *v83;
  uint64_t v84;
  uint64_t v85;
  _BYTE *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t aBlock[3];
  void *v90;
  void (*v91)();
  uint64_t v92;

  v2 = v1;
  v4 = sub_1C1426950();
  v84 = *(_QWORD *)(v4 - 8);
  v85 = v4;
  MEMORY[0x1E0C80A78](v4);
  v83 = &v70[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_1C14269B0();
  v81 = *(_QWORD *)(v6 - 8);
  v82 = v6;
  MEMORY[0x1E0C80A78](v6);
  v80 = &v70[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_1C1426944();
  v76 = *(_QWORD *)(v8 - 8);
  v77 = v8;
  MEMORY[0x1E0C80A78](v8);
  v75 = (uint64_t *)&v70[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v79 = sub_1C14269D4();
  v74 = *(_QWORD *)(v79 - 8);
  v10 = MEMORY[0x1E0C80A78](v79);
  v73 = &v70[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v10);
  v78 = &v70[-v12];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B60);
  MEMORY[0x1E0C80A78](v13);
  v15 = &v70[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v87 = sub_1C14251B0();
  v16 = *(_QWORD *)(v87 - 8);
  v17 = MEMORY[0x1E0C80A78](v87);
  v19 = &v70[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = MEMORY[0x1E0C80A78](v17);
  v22 = &v70[-v21];
  MEMORY[0x1E0C80A78](v20);
  v86 = &v70[-v23];
  v24 = sub_1C1425978();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v27 = &v70[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v28 = sub_1C14258DC();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v25 + 16))(v27, a1, v24);
  if ((v28 & 1) != 0)
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v25 + 8))(v27, v24);
  v30 = sub_1C14258E8();
  result = (*(uint64_t (**)(_BYTE *, uint64_t))(v25 + 8))(v27, v24);
  if ((v30 & 1) == 0)
  {
    v31 = (uint64_t)v2 + OBJC_IVAR____TtC11SessionCoreP33_F0FA238C64D38D6BA2E43F90C1B188B06Client_backoffBudget;
    swift_beginAccess();
    sub_1C140D0D4();
    v32 = sub_1C140CDDC();
    v33 = v86;
    v34 = v87;
    if ((v32 & 1) == 0)
    {
      v35 = *(int *)(type metadata accessor for DefaultInputBackoffBudget() + 20);
      v36 = *(_QWORD *)(v31 + v35);
      v37 = __OFSUB__(v36, 1);
      v38 = v36 - 1;
      if (v37)
      {
        __break(1u);
LABEL_22:
        swift_once();
LABEL_12:
        v41 = sub_1C1426854();
        __swift_project_value_buffer(v41, (uint64_t)qword_1ED798580);
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v16 + 16))(v19, v33, v34);
        v42 = v2;
        v43 = sub_1C1426848();
        v44 = sub_1C1426C68();
        v45 = v44;
        v46 = os_log_type_enabled(v43, v44);
        v72 = (uint64_t (*)(_BYTE *, uint64_t))v28;
        if (v46)
        {
          v47 = swift_slowAlloc();
          v48 = swift_slowAlloc();
          aBlock[0] = v48;
          *(_DWORD *)v47 = 136446466;
          v71 = v45;
          sub_1C1425AEC();
          sub_1C1329AD0(&qword_1ED793BE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C900E0], MEMORY[0x1E0C900F8]);
          v49 = sub_1C1427058();
          v88 = sub_1C132AD90(v49, v50, aBlock);
          sub_1C1426DB8();

          swift_bridgeObjectRelease();
          *(_WORD *)(v47 + 12) = 2082;
          sub_1C1329AD0((unint64_t *)&unk_1ED793B50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
          v51 = sub_1C1427058();
          v88 = sub_1C132AD90(v51, v52, aBlock);
          v34 = v87;
          v28 = (uint64_t)v72;
          sub_1C1426DB8();
          swift_bridgeObjectRelease();
          ((void (*)(_BYTE *, uint64_t))v28)(v19, v34);
          _os_log_impl(&dword_1C1324000, v43, (os_log_type_t)v71, "Client %{public}s has exceeded request budget; timeout until %{public}s",
            (uint8_t *)v47,
            0x16u);
          swift_arrayDestroy();
          MEMORY[0x1C3BAD3F4](v48, -1, -1);
          MEMORY[0x1C3BAD3F4](v47, -1, -1);
        }
        else
        {

          ((void (*)(_BYTE *, uint64_t))v28)(v19, v34);
        }

        sub_1C142518C();
        sub_1C1425120();
        v54 = v53;
        result = ((uint64_t (*)(_BYTE *, uint64_t))v28)(v22, v34);
        v55 = v54 * 1000.0;
        if ((~COERCE__INT64(v54 * 1000.0) & 0x7FF0000000000000) != 0)
        {
          if (v55 > -9.22337204e18)
          {
            if (v55 < 9.22337204e18)
            {
              v56 = (uint64_t)v55;
              v57 = v73;
              sub_1C14269BC();
              v58 = v75;
              *v75 = v56;
              v60 = v76;
              v59 = v77;
              (*(void (**)(uint64_t *, _QWORD, uint64_t))(v76 + 104))(v58, *MEMORY[0x1E0DEF490], v77);
              v61 = v78;
              sub_1C14269C8();
              (*(void (**)(uint64_t *, uint64_t))(v60 + 8))(v58, v59);
              v62 = *(void (**)(_BYTE *, uint64_t))(v74 + 8);
              v63 = v79;
              v62(v57, v79);
              v77 = *(_QWORD *)&v42[OBJC_IVAR____TtC11SessionCoreP33_F0FA238C64D38D6BA2E43F90C1B188B06Client_targetQueue];
              v64 = swift_allocObject();
              *(_QWORD *)(v64 + 16) = v42;
              v91 = sub_1C1338F8C;
              v92 = v64;
              aBlock[0] = MEMORY[0x1E0C809B0];
              aBlock[1] = 1107296256;
              aBlock[2] = (uint64_t)sub_1C13A7F4C;
              v90 = &block_descriptor;
              v65 = _Block_copy(aBlock);
              v66 = v42;
              v67 = v80;
              sub_1C1426974();
              v88 = MEMORY[0x1E0DEE9D8];
              sub_1C1329AD0((unint64_t *)&qword_1ED7979D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A50);
              sub_1C1331140((unint64_t *)&qword_1ED797A60, (uint64_t *)&unk_1ED797A50);
              v68 = v83;
              v69 = v85;
              sub_1C1426DF4();
              MEMORY[0x1C3BAC974](v61, v67, v68, v65);
              _Block_release(v65);
              (*(void (**)(_BYTE *, uint64_t))(v84 + 8))(v68, v69);
              (*(void (**)(_BYTE *, uint64_t))(v81 + 8))(v67, v82);
              swift_release();
              dispatch_suspend(*(dispatch_object_t *)&v66[OBJC_IVAR____TtC11SessionCoreP33_F0FA238C64D38D6BA2E43F90C1B188B06Client_queue]);
              v62(v61, v63);
              return v72(v86, v87);
            }
            goto LABEL_25;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
LABEL_25:
        __break(1u);
        return result;
      }
      *(_QWORD *)(v31 + v35) = v38;
    }
    swift_endAccess();
    v90 = (void *)type metadata accessor for DefaultInputBackoffBudget();
    v91 = (void (*)())&off_1E7A8EFB0;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(aBlock);
    sub_1C1338F24(v31, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for DefaultInputBackoffBudget);
    __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v90);
    sub_1C140CF7C((uint64_t)v15);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v16 + 48))(v15, 1, v34) == 1)
    {
      sub_1C1425108();
      sub_1C132C860((uint64_t)v15, &qword_1ED793B60);
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v16 + 32))(v33, v15, v34);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
    sub_1C142518C();
    v40 = sub_1C1425144();
    v28 = *(_QWORD *)(v16 + 8);
    ((void (*)(_BYTE *, uint64_t))v28)(v22, v34);
    if ((v40 & 1) != 0)
    {
      if (qword_1ED793940 == -1)
        goto LABEL_12;
      goto LABEL_22;
    }
    return ((uint64_t (*)(_BYTE *, uint64_t))v28)(v33, v34);
  }
  return result;
}

void sub_1C1335184(void *a1)
{
  uint64_t v2;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (qword_1ED793940 != -1)
    swift_once();
  v2 = sub_1C1426854();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED798580);
  v3 = a1;
  v4 = sub_1C1426848();
  v5 = sub_1C1426C68();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    *(_DWORD *)v6 = 136446210;
    v10 = v7;
    sub_1C1425AEC();
    sub_1C1329AD0(&qword_1ED793BE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C900E0], MEMORY[0x1E0C900F8]);
    v8 = sub_1C1427058();
    sub_1C132AD90(v8, v9, &v10);
    sub_1C1426DB8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1324000, v4, v5, "Client %{public}s is out of timeout", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v7, -1, -1);
    MEMORY[0x1C3BAD3F4](v6, -1, -1);

  }
  else
  {

  }
  dispatch_resume(*(dispatch_object_t *)&v3[OBJC_IVAR____TtC11SessionCoreP33_F0FA238C64D38D6BA2E43F90C1B188B06Client_queue]);
}

char *sub_1C1335368()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  os_log_t v45;
  uint64_t v46;
  int *v47;
  int v48;
  os_log_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v52 = sub_1C1425AEC();
  v2 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v4 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)type metadata accessor for ContentSourceResolver();
  v6 = MEMORY[0x1E0C80A78](v5);
  v51 = (uint64_t)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v47 - v9;
  MEMORY[0x1E0C80A78](v8);
  v53 = (uint64_t)&v47 - v11;
  if (sub_1C1425930() == 4)
    sub_1C14255B8();
  v12 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC11SessionCoreP33_F0FA238C64D38D6BA2E43F90C1B188B06Client_connection), sel_remoteProcess);
  *(_QWORD *)&v10[v5[6]] = MEMORY[0x1E0DEE9D8];
  v13 = (uint64_t)&v10[v5[7]];
  v14 = sub_1C14253C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v15 = v12;
  sub_1C1329530(v15);
  if (v1)
  {

    sub_1C132C860(v13, &qword_1ED793B90);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v10, v4, v52);
    v16 = sub_1C140F67C(v15);
    v17 = &v10[v5[5]];
    *(_QWORD *)v17 = v16;
    *((_QWORD *)v17 + 1) = v18;
    v17[16] = v19 & 1;
    v17[17] = v20 & 1;
    v17[18] = v21;
    v22 = v53;
    sub_1C1339140((uint64_t)v10, v53, (uint64_t (*)(_QWORD))type metadata accessor for ContentSourceResolver);
    v23 = sub_1C1425960();
    v24 = sub_1C1336138(v23);
    sub_1C1336370(v24, (uint64_t (*)(void))sub_1C136C1AC, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8F798]);
    v4 = (char *)sub_1C140D7B0();
    if (qword_1ED793958 != -1)
      swift_once();
    v26 = sub_1C1426854();
    __swift_project_value_buffer(v26, (uint64_t)qword_1ED798668);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v27 = sub_1C1426848();
    v28 = sub_1C1426C80();
    v29 = v28;
    if (os_log_type_enabled(v27, v28))
    {
      v30 = swift_slowAlloc();
      v50 = swift_slowAlloc();
      v57 = v50;
      *(_DWORD *)v30 = 136446723;
      v49 = v27;
      v31 = sub_1C1425540();
      v32 = swift_bridgeObjectRetain();
      v33 = MEMORY[0x1C3BAC878](v32, v31);
      v47 = v5;
      v34 = v33;
      v48 = v29;
      v36 = v35;
      swift_bridgeObjectRelease();
      v56 = sub_1C132AD90(v34, v36, &v57);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2081;
      v37 = sub_1C1425558();
      v38 = swift_bridgeObjectRetain();
      v39 = MEMORY[0x1C3BAC878](v38, v37);
      v41 = v40;
      swift_bridgeObjectRelease();
      v56 = sub_1C132AD90(v39, v41, &v57);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 22) = 2082;
      swift_beginAccess();
      v42 = v51;
      sub_1C1338F24(v22, v51, (uint64_t (*)(_QWORD))type metadata accessor for ContentSourceResolver);
      v54 = 0;
      v55 = 0xE000000000000000;
      sub_1C1426F08();
      sub_1C14252D0();
      sub_1C1329AD0(&qword_1ED793BE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C900E0], MEMORY[0x1E0C900F8]);
      sub_1C1427058();
      sub_1C14252D0();
      swift_bridgeObjectRelease();
      sub_1C14252D0();
      swift_bridgeObjectRetain();
      sub_1C140D5D8();
      sub_1C14252D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C14252D0();
      v43 = v54;
      v44 = v55;
      sub_1C1339004(v42, (uint64_t (*)(_QWORD))type metadata accessor for ContentSourceResolver);
      v54 = sub_1C132AD90(v43, v44, &v57);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      v45 = v49;
      _os_log_impl(&dword_1C1324000, v49, (os_log_type_t)v48, "Content source resolution: %{public}s -> %{private}s (resolver: %{public}s)", (uint8_t *)v30, 0x20u);
      v46 = v50;
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v46, -1, -1);
      MEMORY[0x1C3BAD3F4](v30, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    sub_1C1339004(v22, (uint64_t (*)(_QWORD))type metadata accessor for ContentSourceResolver);
  }
  return v4;
}

void sub_1C13359B4(uint64_t a1@<X8>)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  unsigned __int8 v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  id v48;
  uint64_t v49;
  id v50;
  id v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v54 = a1;
  v2 = sub_1C1425A08();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C1425AEC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for PlatterTargetResolver();
  v9 = MEMORY[0x1E0C80A78](v53);
  v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v50 - v12;
  v14 = sub_1C1425900();
  v56 = v15;
  v57 = v14;
  v55 = v16 & 1;
  v17 = v1;
  v18 = *(void **)&v1[OBJC_IVAR____TtC11SessionCoreP33_F0FA238C64D38D6BA2E43F90C1B188B06Client_connection];
  v19 = objc_msgSend(v18, sel_remoteProcess);
  v20 = v58;
  sub_1C1329530(v19);
  v58 = v20;
  if (v20)
  {

    sub_1C1337B6C(v57, v56, v55);
  }
  else
  {
    v51 = v17;
    v52 = v4;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v8, v5);
    v21 = (void *)sub_1C1426A7C();
    v22 = objc_msgSend(v19, sel_hasEntitlement_, v21);

    v23 = v53;
    v11[*(int *)(v53 + 20)] = v22;
    sub_1C1339140((uint64_t)v11, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for PlatterTargetResolver);
    v24 = v13[*(int *)(v23 + 20)];
    v25 = v54;
    v27 = v56;
    v26 = v57;
    v28 = v55;
    sub_1C13CE670((uint64_t)v13, v24, v56, v55, v54);
    sub_1C1339004((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for PlatterTargetResolver);
    if (qword_1ED793958 != -1)
      swift_once();
    v29 = sub_1C1426854();
    __swift_project_value_buffer(v29, (uint64_t)qword_1ED798668);
    v30 = v25;
    v31 = (uint64_t)v52;
    sub_1C1338F24(v30, (uint64_t)v52, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
    v32 = v51;
    sub_1C1337B84(v26, v27, v28);
    v33 = sub_1C1426848();
    v34 = sub_1C1426C80();
    v35 = v34;
    if (os_log_type_enabled(v33, v34))
    {
      v36 = swift_slowAlloc();
      v50 = v18;
      v37 = v36;
      v54 = swift_slowAlloc();
      v60 = v54;
      *(_DWORD *)v37 = 136446723;
      LODWORD(v53) = v35;
      sub_1C1337B84(v26, v27, v28);
      v38 = sub_1C14259FC();
      v51 = v32;
      v39 = v38;
      v41 = v40;
      sub_1C1337B6C(v26, v27, v28);
      v59 = sub_1C132AD90(v39, v41, &v60);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      sub_1C1337B6C(v26, v27, v28);
      sub_1C1337B6C(v26, v27, v28);
      *(_WORD *)(v37 + 12) = 2081;
      v42 = sub_1C14259E4();
      v59 = sub_1C132AD90(v42, v43, &v60);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      sub_1C1339004(v31, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
      *(_WORD *)(v37 + 22) = 2082;
      v44 = objc_msgSend(v50, sel_remoteProcess);
      v45 = sub_1C1335EB4();
      v47 = v46;

      v59 = sub_1C132AD90(v45, v47, &v60);
      sub_1C1426DB8();
      v48 = v51;

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1324000, v33, (os_log_type_t)v53, "Platter target resolution: %{public}s -> %{private}s (requester: %{public}s)", (uint8_t *)v37, 0x20u);
      v49 = v54;
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v49, -1, -1);
      MEMORY[0x1C3BAD3F4](v37, -1, -1);

    }
    else
    {
      sub_1C1337B6C(v26, v27, v28);
      sub_1C1337B6C(v26, v27, v28);
      sub_1C1339004(v31, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);

    }
  }
}

uint64_t sub_1C1335EB4()
{
  sub_1C1426F08();
  sub_1C14252D0();
  sub_1C132F33C();
  sub_1C14252D0();
  swift_bridgeObjectRelease();
  sub_1C14252D0();
  return 0;
}

uint64_t sub_1C1335FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t))(a9 + 8))(a1);
}

uint64_t sub_1C1336004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t sub_1C133600C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 24))();
}

uint64_t type metadata accessor for InputServer()
{
  return objc_opt_self();
}

uint64_t sub_1C1336034()
{
  return type metadata accessor for Client();
}

uint64_t sub_1C133603C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_1C1425AEC();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for DefaultInputBackoffBudget();
    if (v2 <= 0x3F)
    {
      result = sub_1C14251EC();
      if (v3 <= 0x3F)
        return swift_updateClassMetadata2();
    }
  }
  return result;
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_1C13391B0(a1, &qword_1ED797A98);
}

unint64_t sub_1C1336138(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  char *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;

  v28 = sub_1C1425558();
  v29 = *(_QWORD *)(v28 - 8);
  v3 = MEMORY[0x1E0C80A78](v28);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v27 = (char *)&v23 - v7;
  MEMORY[0x1E0C80A78](v6);
  v26 = (char *)&v23 - v8;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    return MEMORY[0x1E0DEE9D8];
  v10 = *(_QWORD *)(sub_1C1425540() - 8);
  v11 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  v12 = *(_QWORD *)(v10 + 72);
  v23 = a1;
  v24 = v12;
  swift_bridgeObjectRetain();
  v13 = MEMORY[0x1E0DEE9D8];
  v25 = v5;
  v14 = v26;
  while (1)
  {
    v15 = v27;
    sub_1C140DF90(v11, (void (*)(_QWORD, _QWORD, _QWORD))v27);
    if (v1)
      break;
    v16 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
    v17 = v15;
    v18 = v28;
    v16(v14, v17, v28);
    v16(v5, v14, v18);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_1C136C1AC(0, *(_QWORD *)(v13 + 16) + 1, 1, v13);
    v20 = *(_QWORD *)(v13 + 16);
    v19 = *(_QWORD *)(v13 + 24);
    if (v20 >= v19 >> 1)
      v13 = sub_1C136C1AC(v19 > 1, v20 + 1, 1, v13);
    *(_QWORD *)(v13 + 16) = v20 + 1;
    v21 = v13
        + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))
        + *(_QWORD *)(v29 + 72) * v20;
    v5 = v25;
    v16((char *)v21, v25, v28);
    v11 += v24;
    if (!--v9)
    {
      swift_bridgeObjectRelease();
      return v13;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1C133635C(uint64_t a1)
{
  return sub_1C1336370(a1, (uint64_t (*)(void))sub_1C136C8A8, type metadata accessor for ActivityParticipantEvent);
}

uint64_t sub_1C1336370(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(_QWORD *)(v5 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_15;
  }
  v5 = a2();
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
LABEL_5:
  v10 = *(_QWORD *)(v5 + 16);
  v11 = (*(_QWORD *)(v5 + 24) >> 1) - v10;
  v12 = a3(0);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(v13 + 72);
  v16 = v5 + v14 + v15 * v10;
  v17 = a1 + v14;
  v18 = v15 * v4;
  v19 = v16 + v18;
  v20 = v17 + v18;
  if (v17 < v19 && v16 < v20)
    goto LABEL_21;
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    result = swift_bridgeObjectRelease();
    *v3 = v5;
    return result;
  }
  v22 = *(_QWORD *)(v5 + 16);
  v23 = __OFADD__(v22, v4);
  v24 = v22 + v4;
  if (!v23)
  {
    *(_QWORD *)(v5 + 16) = v24;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_1C1426FC8();
  __break(1u);
  return result;
}

void sub_1C13364E8(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_1C13364F0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

BOOL sub_1C1336504(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_1C1336534(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_1C1336548(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

BOOL sub_1C133655C(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

_QWORD *sub_1C1336570@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_1C133657C(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

void sub_1C1336588(_QWORD *a1, char a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  void *v18;
  id v19;
  _QWORD *v20;
  uint64_t *v21;
  _QWORD *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  char v38;
  char v39;
  _QWORD *v40;
  uint64_t *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  if (!a1[2])
    goto LABEL_22;
  v45 = a1[2];
  v6 = a1[4];
  v5 = a1[5];
  v7 = a1[6];
  v8 = a1[7];
  v9 = (_QWORD *)*a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = sub_1C13277A0(v6, v5);
  v12 = v9[2];
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v15 = v10;
  if (v9[3] >= v14)
  {
    if ((a2 & 1) != 0)
    {
      if ((v10 & 1) == 0)
        goto LABEL_13;
    }
    else
    {
      sub_1C13BA288();
      if ((v15 & 1) == 0)
        goto LABEL_13;
    }
    goto LABEL_10;
  }
  sub_1C13BCF38(v14, a2 & 1);
  v16 = sub_1C13277A0(v6, v5);
  if ((v15 & 1) == (v17 & 1))
  {
    v11 = v16;
    if ((v15 & 1) == 0)
    {
LABEL_13:
      v20 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
      v21 = (uint64_t *)(v20[6] + 16 * v11);
      *v21 = v6;
      v21[1] = v5;
      v22 = (_QWORD *)(v20[7] + 16 * v11);
      *v22 = v7;
      v22[1] = v8;
      v23 = v20[2];
      v24 = __OFADD__(v23, 1);
      v25 = v23 + 1;
      if (v24)
      {
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
      v20[2] = v25;
      v26 = v45 - 1;
      if (v45 != 1)
      {
        v27 = a1 + 11;
        do
        {
          v29 = *(v27 - 3);
          v28 = *(v27 - 2);
          v30 = *(v27 - 1);
          v31 = *v27;
          v32 = (_QWORD *)*a3;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v33 = sub_1C13277A0(v29, v28);
          v35 = v32[2];
          v36 = (v34 & 1) == 0;
          v24 = __OFADD__(v35, v36);
          v37 = v35 + v36;
          if (v24)
            goto LABEL_23;
          v38 = v34;
          if (v32[3] < v37)
          {
            sub_1C13BCF38(v37, 1);
            v33 = sub_1C13277A0(v29, v28);
            if ((v38 & 1) != (v39 & 1))
              goto LABEL_25;
          }
          if ((v38 & 1) != 0)
            goto LABEL_10;
          v40 = (_QWORD *)*a3;
          *(_QWORD *)(*a3 + 8 * (v33 >> 6) + 64) |= 1 << v33;
          v41 = (uint64_t *)(v40[6] + 16 * v33);
          *v41 = v29;
          v41[1] = v28;
          v42 = (_QWORD *)(v40[7] + 16 * v33);
          *v42 = v30;
          v42[1] = v31;
          v43 = v40[2];
          v24 = __OFADD__(v43, 1);
          v44 = v43 + 1;
          if (v24)
            goto LABEL_24;
          v27 += 4;
          v40[2] = v44;
        }
        while (--v26);
      }
LABEL_22:
      swift_bridgeObjectRelease();
      return;
    }
LABEL_10:
    v18 = (void *)swift_allocError();
    swift_willThrow();
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797BA0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_1C142707C();
  __break(1u);
LABEL_26:
  sub_1C1426F08();
  sub_1C14252D0();
  sub_1C1426F74();
  sub_1C14252D0();
  sub_1C1426F8C();
  __break(1u);
}

uint64_t sub_1C133691C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1C13371FC(a1, a2, a3, (_QWORD *)*v3, &qword_1ED793A58, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
  *v3 = result;
  return result;
}

uint64_t sub_1C1336948(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1C1336BF4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1C1336964(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1C13371FC(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_1ED797B40, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8F798]);
  *v3 = result;
  return result;
}

uint64_t sub_1C1336990(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1C1336D7C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1C13369AC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1C1336EE4(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1C13369C8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1C13371FC(a1, a2, a3, (_QWORD *)*v3, &qword_1ED797B60, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FF58]);
  *v3 = result;
  return result;
}

uint64_t sub_1C13369F4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1C13371FC(a1, a2, a3, (_QWORD *)*v3, &qword_1EF6DAAF8, (uint64_t (*)(_QWORD))MEMORY[0x1E0D8CB40]);
  *v3 = result;
  return result;
}

uint64_t sub_1C1336A20(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1C13371FC(a1, a2, a3, (_QWORD *)*v3, &qword_1ED797B38, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8F6C8]);
  *v3 = result;
  return result;
}

uint64_t sub_1C1336A4C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1C13371FC(a1, a2, a3, (_QWORD *)*v3, &qword_1EF6DAC30, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
  *v3 = result;
  return result;
}

uint64_t sub_1C1336A78(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1C13371FC(a1, a2, a3, (_QWORD *)*v3, &qword_1EF6DAA60, type metadata accessor for ReplicatorParticipant.RelationshipSchedule);
  *v3 = result;
  return result;
}

uint64_t sub_1C1336AA4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1C13371FC(a1, a2, a3, (_QWORD *)*v3, &qword_1EF6DAD48, (uint64_t (*)(_QWORD))MEMORY[0x1E0D87A00]);
  *v3 = result;
  return result;
}

uint64_t sub_1C1336AD0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1C13371FC(a1, a2, a3, (_QWORD *)*v3, &qword_1EF6DAA58, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0998]);
  *v3 = result;
  return result;
}

uint64_t sub_1C1336AFC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1C1337088(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1C1336B18(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1C13371FC(a1, a2, a3, (_QWORD *)*v3, &qword_1ED7931A8, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
  *v3 = result;
  return result;
}

uint64_t sub_1C1336B44(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1C13371FC(a1, a2, a3, (_QWORD *)*v3, &qword_1ED797DA8, (uint64_t (*)(_QWORD))MEMORY[0x1E0D8CF30]);
  *v3 = result;
  return result;
}

uint64_t sub_1C1336B70(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1C13371FC(a1, a2, a3, (_QWORD *)*v3, &qword_1ED797B58, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FD58]);
  *v3 = result;
  return result;
}

uint64_t sub_1C1336B9C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1C13371FC(a1, a2, a3, (_QWORD *)*v3, &qword_1ED797B50, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FD38]);
  *v3 = result;
  return result;
}

uint64_t sub_1C1336BC8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1C13371FC(a1, a2, a3, (_QWORD *)*v3, &qword_1EF6DABC0, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8F670]);
  *v3 = result;
  return result;
}

uint64_t sub_1C1336BF4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797B88);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8)
      memmove(v10 + 4, a4 + 4, 32 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797A20);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1C1426FC8();
  __break(1u);
  return result;
}

uint64_t sub_1C1336D7C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797B80);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1C1426FC8();
  __break(1u);
  return result;
}

uint64_t sub_1C1336EE4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793A60);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 48 * v8)
      memmove(v10 + 4, a4 + 4, 48 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 48 * v8 || v12 >= v13 + 48 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797A28);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1C1426FC8();
  __break(1u);
  return result;
}

uint64_t sub_1C1337088(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DAA78);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  v14 = 40 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v12, v13, v14);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1C1426FC8();
  __break(1u);
  return result;
}

uint64_t sub_1C13371FC(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_1C1426FC8();
  __break(1u);
  return result;
}

int64_t sub_1C13373E0(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_1C13374C4(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  void *v4;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  id v13;
  char v14;
  id v15;
  void *v16;

  v6 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (sub_1C1426E48() == *(_DWORD *)(a4 + 36))
      {
        sub_1C1426E54();
        type metadata accessor for Client();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v4 = v16;
        swift_unknownObjectRelease();
        v8 = sub_1C1426D88();
        v9 = -1 << *(_BYTE *)(a4 + 32);
        v6 = v8 & ~v9;
        if (((*(_QWORD *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
        {
          v10 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
          v11 = sub_1C1426D94();

          if ((v11 & 1) == 0)
          {
            v12 = ~v9;
            do
            {
              v6 = (v6 + 1) & v12;
              if (((*(_QWORD *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
                goto LABEL_24;
              v13 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
              v14 = sub_1C1426D94();

            }
            while ((v14 & 1) == 0);
          }

LABEL_20:
          v15 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v7 = a4;
  else
    v7 = a4 & 0xFFFFFFFFFFFFFF8;
  MEMORY[0x1C3BACB54](a1, a2, v7);
  type metadata accessor for Client();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
}

uint64_t sub_1C133770C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1C1337718(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

_OWORD *sub_1C13377A0(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_1C13377B0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t i;
  unsigned int v5;
  unint64_t result;
  char v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  unsigned int v11;
  __int128 v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793A30);
    v3 = (_QWORD *)sub_1C1426FBC();
    for (i = a1 + 32; ; i += 48)
    {
      sub_1C132C344(i, (uint64_t)&v11, &qword_1EF6DAD68);
      v5 = v11;
      result = sub_1C1327378(v11);
      if ((v7 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_DWORD *)(v3[6] + 4 * result) = v5;
      result = sub_1C1339184(&v12, v3[7] + 40 * result);
      v8 = v3[2];
      v9 = __OFADD__(v8, 1);
      v10 = v8 + 1;
      if (v9)
        goto LABEL_10;
      v3[2] = v10;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

unint64_t sub_1C13378BC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  unsigned int v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char v14;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6DAD58);
  v3 = (_QWORD *)sub_1C1426FBC();
  v4 = *(_DWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  result = sub_1C1327378(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  v8 = (_QWORD *)(a1 + 56);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_DWORD *)(v3[6] + 4 * result) = v4;
    *(_QWORD *)(v3[7] + 8 * result) = v5;
    v9 = v3[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      break;
    v3[2] = v11;
    if (!--v1)
      goto LABEL_8;
    v12 = v8 + 2;
    v4 = *((_DWORD *)v8 - 2);
    v13 = *v8;
    swift_retain();
    result = sub_1C1327378(v4);
    v8 = v12;
    v5 = v13;
    if ((v14 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_1C13379BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t result;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DAA68);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DAA70);
    v7 = (_QWORD *)sub_1C1426FBC();
    v8 = (char *)v5 + *(int *)(v2 + 48);
    v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v10 = *(_QWORD *)(v3 + 72);
    while (1)
    {
      sub_1C132C344(v9, (uint64_t)v5, &qword_1EF6DAA68);
      v11 = *v5;
      result = sub_1C13C3934(*v5);
      if ((v13 & 1) != 0)
        break;
      v14 = result;
      *(_QWORD *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_QWORD *)(v7[6] + 8 * result) = v11;
      v15 = v7[7];
      v16 = sub_1C142617C();
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v15 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v14, v8, v16);
      v17 = v7[2];
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
        goto LABEL_10;
      v7[2] = v19;
      v9 += v10;
      if (!--v6)
        return (unint64_t)v7;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E0];
  }
  return result;
}

uint64_t sub_1C1337B24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791E48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1337B70(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1C1337B88(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 2)
    return swift_bridgeObjectRetain();
  return result;
}

unint64_t sub_1C1337B9C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  unsigned int v4;
  void *v5;
  unint64_t result;
  char v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  char v15;
  id v16;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793A40);
  v3 = (_QWORD *)sub_1C1426FBC();
  v4 = *(_DWORD *)(a1 + 32);
  v5 = *(void **)(a1 + 40);
  result = sub_1C1327378(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    v16 = v5;
    return (unint64_t)v3;
  }
  v8 = (_QWORD *)(a1 + 56);
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_DWORD *)(v3[6] + 4 * result) = v4;
    *(_QWORD *)(v3[7] + 8 * result) = v5;
    v9 = v3[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      break;
    v3[2] = v11;
    if (!--v1)
      goto LABEL_8;
    v12 = v8 + 2;
    v4 = *((_DWORD *)v8 - 2);
    v13 = (void *)*v8;
    v14 = v5;
    result = sub_1C1327378(v4);
    v8 = v12;
    v5 = v13;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

void sub_1C1337C94(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, id a10, uint64_t a11, void (*a12)(void *, void *), uint64_t a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  unsigned int v36;
  uint64_t v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  id v50;
  char *v51;
  void (*v52)(void *, void *);
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  BOOL v56;
  uint64_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  unint64_t v69;
  void *v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  BOOL v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  _QWORD *v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  NSObject *v101;
  os_log_type_t v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(char *, uint64_t, uint64_t);
  char *v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(void *, void *);
  void *v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  void *v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  void (*v140)(void *, void *);
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144[2];

  v127 = a8;
  v125 = a7;
  v134 = a5;
  v135 = a6;
  v130 = a4;
  v124 = a3;
  v136 = a2;
  v131 = a1;
  v139 = a13;
  v140 = a12;
  v13 = sub_1C1425A44();
  v141 = *(_QWORD *)(v13 - 8);
  v142 = v13;
  MEMORY[0x1E0C80A78](v13);
  v138 = (char *)&v121 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1C142671C();
  v132 = *(_QWORD *)(v15 - 8);
  v133 = v15;
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v121 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v121 - v19;
  v126 = sub_1C14265E4();
  v129 = *(_QWORD *)(v126 - 8);
  v21 = MEMORY[0x1E0C80A78](v126);
  v23 = (char *)&v121 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0C80A78](v21);
  v26 = (char *)&v121 - v25;
  MEMORY[0x1E0C80A78](v24);
  v128 = (char *)&v121 - v27;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DACC8);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v121 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1C14267DC();
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v137 = (char *)&v121 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = a11;
  v34 = objc_msgSend(*(id *)(a11 + OBJC_IVAR____TtC11SessionCoreP33_F0FA238C64D38D6BA2E43F90C1B188B06Client_connection), sel_remoteProcess);
  v35 = (void *)sub_1C1426A7C();
  v36 = objc_msgSend(v34, sel_hasEntitlement_, v35);

  if (!v36)
  {
    if (qword_1ED793940 != -1)
      swift_once();
    v53 = sub_1C1426854();
    __swift_project_value_buffer(v53, (uint64_t)qword_1ED798580);
    v54 = sub_1C1426848();
    v55 = sub_1C1426C68();
    v56 = os_log_type_enabled(v54, v55);
    v57 = v142;
    if (v56)
    {
      v58 = (uint8_t *)swift_slowAlloc();
      v59 = swift_slowAlloc();
      v137 = (char *)v59;
      *(_DWORD *)v58 = 136315138;
      v144[0] = v59;
      v136 = (unint64_t)(v58 + 4);
      v60 = *MEMORY[0x1E0C90010];
      v61 = v141;
      v62 = v138;
      (*(void (**)(char *, uint64_t, uint64_t))(v141 + 104))(v138, v60, v57);
      v63 = sub_1C1425A38();
      v65 = v64;
      (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v57);
      v143 = sub_1C132AD90(v63, v65, v144);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1324000, v54, v55, "%s", v58, 0xCu);
      v66 = v137;
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v66, -1, -1);
      MEMORY[0x1C3BAD3F4](v58, -1, -1);

    }
    else
    {

      v60 = *MEMORY[0x1E0C90010];
      v61 = v141;
    }
    sub_1C1329AD0((unint64_t *)&unk_1EF6DACD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C90038], MEMORY[0x1E0C90040]);
    v70 = (void *)swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 104))(v71, v60, v57);
    sub_1C1330EEC(0, (unint64_t *)&qword_1EF6DC5A0);
    v72 = (void *)sub_1C1426D7C();
    v140(v72, v70);
    goto LABEL_18;
  }
  objc_msgSend(a10, sel_integerValue);
  sub_1C14267D0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31) == 1)
  {
    sub_1C132C860((uint64_t)v30, &qword_1EF6DACC8);
    if (qword_1ED793940 != -1)
      swift_once();
    v37 = sub_1C1426854();
    __swift_project_value_buffer(v37, (uint64_t)qword_1ED798580);
    v38 = a10;
    v39 = sub_1C1426848();
    v40 = sub_1C1426C68();
    v41 = os_log_type_enabled(v39, v40);
    v42 = v142;
    if (v41)
    {
      v43 = swift_slowAlloc();
      v137 = (char *)swift_slowAlloc();
      v144[0] = (uint64_t)v137;
      *(_DWORD *)v43 = 136315394;
      v136 = v43 + 4;
      v44 = *MEMORY[0x1E0C90020];
      v45 = v141;
      v46 = v138;
      (*(void (**)(char *, uint64_t, uint64_t))(v141 + 104))(v138, v44, v42);
      v47 = sub_1C1425A38();
      v49 = v48;
      (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v42);
      v143 = sub_1C132AD90(v47, v49, v144);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2048;
      v50 = objc_msgSend(v38, sel_integerValue);

      v143 = (uint64_t)v50;
      sub_1C1426DB8();

      _os_log_impl(&dword_1C1324000, v39, v40, "%s. Value: %ld", (uint8_t *)v43, 0x16u);
      v51 = v137;
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v51, -1, -1);
      MEMORY[0x1C3BAD3F4](v43, -1, -1);

      v52 = v140;
    }
    else
    {

      v44 = *MEMORY[0x1E0C90020];
      v52 = v140;
      v45 = v141;
    }
    sub_1C1329AD0((unint64_t *)&unk_1EF6DACD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C90038], MEMORY[0x1E0C90040]);
    v70 = (void *)swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 104))(v73, v44, v42);
    sub_1C1330EEC(0, (unint64_t *)&qword_1EF6DC5A0);
    v72 = (void *)sub_1C1426D7C();
    v52(v72, v70);
LABEL_18:

    return;
  }
  v67 = v31;
  v68 = v137;
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v137, v30, v31);
  v69 = v136;
  v122 = v32;
  if (v136 >> 60 == 15)
  {
    if (!v130)
    {
      if (qword_1ED793940 != -1)
        swift_once();
      v75 = sub_1C1426854();
      __swift_project_value_buffer(v75, (uint64_t)qword_1ED798580);
      swift_bridgeObjectRetain_n();
      v76 = sub_1C1426848();
      v77 = sub_1C1426C68();
      v78 = os_log_type_enabled(v76, v77);
      v80 = v141;
      v79 = v142;
      if (v78)
      {
        v81 = swift_slowAlloc();
        v82 = swift_slowAlloc();
        v136 = v67;
        v83 = (_QWORD *)v82;
        v138 = (char *)swift_slowAlloc();
        v144[0] = (uint64_t)v138;
        *(_DWORD *)v81 = 138412546;
        sub_1C1329AD0((unint64_t *)&unk_1EF6DACD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C90038], MEMORY[0x1E0C90040]);
        swift_allocError();
        v84 = *MEMORY[0x1E0C90030];
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 104))(v85, v84, v79);
        v86 = _swift_stdlib_bridgeErrorToNSError();
        v143 = v86;
        sub_1C1426DB8();
        *v83 = v86;
        *(_WORD *)(v81 + 12) = 2080;
        v87 = sub_1C1426A40();
        v143 = sub_1C132AD90(v87, v88, v144);
        sub_1C1426DB8();
        swift_bridgeObjectRelease_n();
        v80 = v141;
        v79 = v142;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C1324000, v76, v77, "%@\n%s", (uint8_t *)v81, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DACE0);
        swift_arrayDestroy();
        v89 = v83;
        v67 = v136;
        MEMORY[0x1C3BAD3F4](v89, -1, -1);
        v90 = v138;
        v68 = v137;
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v90, -1, -1);
        MEMORY[0x1C3BAD3F4](v81, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        v84 = *MEMORY[0x1E0C90030];
      }
      v113 = v140;
      sub_1C1329AD0((unint64_t *)&unk_1EF6DACD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C90038], MEMORY[0x1E0C90040]);
      v114 = (void *)swift_allocError();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 104))(v115, v84, v79);
      sub_1C1330EEC(0, (unint64_t *)&qword_1EF6DC5A0);
      v116 = (void *)sub_1C1426D7C();
      v113(v116, v114);

      goto LABEL_34;
    }
    sub_1C1426638();
    swift_bridgeObjectRetain();
    sub_1C1426728();
    sub_1C142662C();
    (*(void (**)(char *, uint64_t))(v132 + 8))(v18, v133);
    v26 = v23;
  }
  else
  {
    sub_1C1426638();
    v74 = v131;
    sub_1C1331768(v131, v69);
    swift_bridgeObjectRetain();
    sub_1C1426728();
    sub_1C133177C(v74, v69);
    sub_1C142662C();
    (*(void (**)(char *, uint64_t))(v132 + 8))(v20, v133);
    sub_1C132D03C(v74, v69);
    sub_1C132D03C(v74, v69);
  }
  v91 = v128;
  v92 = v129;
  v93 = v126;
  (*(void (**)(char *, char *, uint64_t))(v129 + 32))(v128, v26, v126);
  v94 = *(_QWORD *)(v123 + OBJC_IVAR____TtC11SessionCoreP33_F0FA238C64D38D6BA2E43F90C1B188B06Client_pushServer);
  swift_getObjectType();
  v144[0] = v94;
  swift_unknownObjectRetain();
  v95 = sub_1C14261B8();
  swift_unknownObjectRelease();
  if (v95)
  {
    sub_1C14263A4();
    sub_1C1330EEC(0, (unint64_t *)&qword_1EF6DC5A0);
    v96 = (void *)sub_1C1426D7C();
    v140(v96, 0);
    swift_unknownObjectRelease();

    (*(void (**)(char *, uint64_t))(v92 + 8))(v91, v93);
  }
  else
  {
    v97 = v141;
    v98 = v142;
    if (qword_1ED793940 != -1)
      swift_once();
    v99 = sub_1C1426854();
    __swift_project_value_buffer(v99, (uint64_t)qword_1ED798580);
    v100 = v127;
    swift_bridgeObjectRetain_n();
    v101 = sub_1C1426848();
    v102 = sub_1C1426C68();
    v103 = v102;
    if (os_log_type_enabled(v101, v102))
    {
      v104 = swift_slowAlloc();
      v135 = swift_slowAlloc();
      v136 = v67;
      v144[0] = v135;
      *(_DWORD *)v104 = 136315394;
      v105 = *MEMORY[0x1E0C90018];
      v106 = *(void (**)(char *, uint64_t, uint64_t))(v97 + 104);
      LODWORD(v134) = v103;
      v107 = v138;
      v106(v138, v105, v98);
      v108 = sub_1C1425A38();
      v110 = v109;
      (*(void (**)(char *, uint64_t))(v97 + 8))(v107, v98);
      v143 = sub_1C132AD90(v108, v110, v144);
      sub_1C1426DB8();
      v93 = v126;
      swift_bridgeObjectRelease();
      *(_WORD *)(v104 + 12) = 2080;
      swift_bridgeObjectRetain();
      v143 = sub_1C132AD90(v125, v100, v144);
      v111 = v105;
      v68 = v137;
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v101, (os_log_type_t)v134, "%s: %s", (uint8_t *)v104, 0x16u);
      v112 = v135;
      swift_arrayDestroy();
      v67 = v136;
      MEMORY[0x1C3BAD3F4](v112, -1, -1);
      MEMORY[0x1C3BAD3F4](v104, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      v111 = *MEMORY[0x1E0C90018];
    }
    v117 = v129;
    sub_1C1329AD0((unint64_t *)&unk_1EF6DACD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C90038], MEMORY[0x1E0C90040]);
    v118 = (void *)swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v97 + 104))(v119, v111, v98);
    sub_1C1330EEC(0, (unint64_t *)&qword_1EF6DC5A0);
    v120 = (void *)sub_1C1426D7C();
    v140(v120, v118);

    (*(void (**)(char *, uint64_t))(v117 + 8))(v128, v93);
  }
LABEL_34:
  (*(void (**)(char *, uint64_t))(v122 + 8))(v68, v67);
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_1C1338F24(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C1338F68()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1C1338F8C()
{
  uint64_t v0;

  sub_1C1335184(*(void **)(v0 + 16));
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1C3BAD328](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_1C1338FD8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1C1338FFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1C13332B4(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1C1339004(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C1339040(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t sub_1C1339064()
{
  id *v0;

  return swift_deallocObject();
}

uint64_t sub_1C1339098()
{
  return swift_deallocObject();
}

uint64_t sub_1C13390A8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1C13390D0(uint64_t a1)
{
  uint64_t v1;

  sub_1C1331960(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), "Connection interrupted");
}

uint64_t objectdestroy_22Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1C1339120(uint64_t a1)
{
  uint64_t v1;

  sub_1C1331960(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), "Connection invalidated");
}

uint64_t sub_1C1339140(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C1339184(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void type metadata accessor for Result(uint64_t a1)
{
  sub_1C13391B0(a1, (unint64_t *)&unk_1EF6DAD70);
}

void sub_1C13391B0(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_1C1339218(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1C1339220(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1C1339228(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1C1339230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t sub_1C1339238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t sub_1C1339240()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 128))
  {
    v1 = *(_QWORD *)(v0 + 128);
  }
  else
  {
    v2 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791EF8);
    sub_1C132C820(&qword_1ED7927F0, &qword_1ED791EF8, MEMORY[0x1E0C95F48]);
    v1 = sub_1C1426908();
    *(_QWORD *)(v2 + 128) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1C13392E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 136))
  {
    v1 = *(_QWORD *)(v0 + 136);
  }
  else
  {
    v2 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791EE8);
    sub_1C132C820((unint64_t *)&unk_1ED793168, &qword_1ED791EE8, MEMORY[0x1E0C95F48]);
    v1 = sub_1C1426908();
    *(_QWORD *)(v2 + 136) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1C1339388()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 144))
  {
    v1 = *(_QWORD *)(v0 + 144);
  }
  else
  {
    v2 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791EE8);
    sub_1C132C820((unint64_t *)&unk_1ED793168, &qword_1ED791EE8, MEMORY[0x1E0C95F48]);
    v1 = sub_1C1426908();
    *(_QWORD *)(v2 + 144) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1C133942C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 152))
  {
    v1 = *(_QWORD *)(v0 + 152);
  }
  else
  {
    v2 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791EE0);
    sub_1C132C820(&qword_1ED7927E8, &qword_1ED791EE0, MEMORY[0x1E0C95F48]);
    v1 = sub_1C1426908();
    *(_QWORD *)(v2 + 152) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1C13394D0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = *a1;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1C133C86C(0, v1);
    swift_release();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1C133C86C(1, v1);
    swift_release();
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C133CE5C(v1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C13395A4()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = swift_bridgeObjectRetain();
  sub_1C1339668(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1C1339668(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C1426E30();
    sub_1C14268C0();
    sub_1C133FF24((unint64_t *)&qword_1EF6DAEE0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], MEMORY[0x1E0C95E18]);
    result = sub_1C1426C2C();
    v1 = v18;
    v17 = v19;
    v3 = v20;
    v4 = v21;
    v5 = v22;
  }
  else
  {
    v6 = -1 << *(_BYTE *)(a1 + 32);
    v17 = a1 + 56;
    v3 = ~v6;
    v7 = -v6;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v5 = v8 & *(_QWORD *)(a1 + 56);
    result = swift_bridgeObjectRetain();
    v4 = 0;
  }
  v9 = (unint64_t)(v3 + 64) >> 6;
  if (v1 < 0)
    goto LABEL_10;
  while (1)
  {
    if (v5)
    {
      v10 = (v5 - 1) & v5;
      v11 = __clz(__rbit64(v5)) | (v4 << 6);
      v12 = v4;
      goto LABEL_29;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (v13 >= v9)
      return sub_1C133F908();
    v14 = *(_QWORD *)(v17 + 8 * v13);
    v12 = v4 + 1;
    if (!v14)
    {
      v12 = v4 + 2;
      if (v4 + 2 >= v9)
        return sub_1C133F908();
      v14 = *(_QWORD *)(v17 + 8 * v12);
      if (!v14)
      {
        v12 = v4 + 3;
        if (v4 + 3 >= v9)
          return sub_1C133F908();
        v14 = *(_QWORD *)(v17 + 8 * v12);
        if (!v14)
        {
          v12 = v4 + 4;
          if (v4 + 4 >= v9)
            return sub_1C133F908();
          v14 = *(_QWORD *)(v17 + 8 * v12);
          if (!v14)
          {
            v12 = v4 + 5;
            if (v4 + 5 >= v9)
              return sub_1C133F908();
            v14 = *(_QWORD *)(v17 + 8 * v12);
            if (!v14)
            {
              v15 = v4 + 6;
              while (v9 != v15)
              {
                v14 = *(_QWORD *)(v17 + 8 * v15++);
                if (v14)
                {
                  v12 = v15 - 1;
                  goto LABEL_28;
                }
              }
              return sub_1C133F908();
            }
          }
        }
      }
    }
LABEL_28:
    v10 = (v14 - 1) & v14;
    v11 = __clz(__rbit64(v14)) + (v12 << 6);
LABEL_29:
    v16 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v11);
    swift_retain();
    if (!v16)
      return sub_1C133F908();
    while (1)
    {
      sub_1C14268B4();
      result = swift_release();
      v4 = v12;
      v5 = v10;
      if ((v1 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      if (sub_1C1426E84())
      {
        sub_1C14268C0();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_unknownObjectRelease();
        v12 = v4;
        v10 = v5;
        if (v23)
          continue;
      }
      return sub_1C133F908();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C133990C()
{
  sub_1C13395A4();
  return swift_deallocClassInstance();
}

uint64_t sub_1C133992C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  uint64_t result;
  char v15;
  char v16;
  uint64_t v17;

  v8 = sub_1C14269F8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(void **)(a1 + 72);
  *v11 = v12;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF740], v8);
  v13 = v12;
  LOBYTE(v12) = sub_1C1426A10();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) != 0)
  {
    if (*(_QWORD *)(sub_1C133DB4C() + 16))
    {
      swift_bridgeObjectRetain();
      sub_1C13277A0(a2, a3);
      v16 = v15;
      swift_bridgeObjectRelease();
    }
    else
    {
      v16 = 0;
    }
    result = swift_bridgeObjectRelease();
    *a4 = v16 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C1339A54(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t result;
  _QWORD aBlock[6];

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DAEB0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v12 = *(NSObject **)(v4 + 72);
  sub_1C133F868(a4, (uint64_t)aBlock - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = (*(unsigned __int8 *)(v10 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v4;
  *(_BYTE *)(v14 + 24) = a1;
  *(_QWORD *)(v14 + 32) = a2;
  *(_QWORD *)(v14 + 40) = a3;
  sub_1C132A724((uint64_t)aBlock - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13, &qword_1EF6DAEB0);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_1C133FEC0;
  *(_QWORD *)(v15 + 24) = v14;
  aBlock[4] = sub_1C133FF1C;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C137B458;
  aBlock[3] = &block_descriptor_69;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v12, v16);
  _Block_release(v16);
  LOBYTE(a3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((a3 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1C1339C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C133AB60(a2, a3);
}

uint64_t sub_1C1339C34@<X0>(uint64_t a1@<X1>, unint64_t a2@<X2>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C133B8DC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C1339C78@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _DWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;

  v36 = a1;
  v40 = a2;
  v2 = sub_1C14253E4();
  MEMORY[0x1E0C80A78](v2);
  v42 = (char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C1425594();
  MEMORY[0x1E0C80A78](v4);
  v41 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1C1425AEC();
  v6 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C1425A08();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1C142575C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1C1425678();
  v38 = *(_QWORD *)(v16 - 8);
  v39 = v16;
  v17 = MEMORY[0x1E0C80A78](v16);
  v37 = (char *)v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v32 - v19;
  sub_1C1425948();
  sub_1C133FD44(v36, (uint64_t)v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0C8FB48], v12);
    sub_1C133FDDC((uint64_t)v11);
  }
  else
  {
    v21 = v34;
    v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v34);
    MEMORY[0x1E0C80A78](v22);
    sub_1C1426CEC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v21);
  }
  sub_1C1425654();
  sub_1C1425924();
  v23 = sub_1C142590C();
  v35 = v24;
  v36 = v23;
  sub_1C1425954();
  v25 = sub_1C1425900();
  v33 = v26;
  v34 = v25;
  v32[1] = v27 & 1;
  v28 = v20;
  v29 = v38;
  v30 = v39;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v37, v28, v39);
  sub_1C1425960();
  sub_1C14258DC();
  sub_1C14258F4();
  sub_1C14258E8();
  sub_1C14258D0();
  sub_1C1425918();
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v28, v30);
}

uint64_t sub_1C1339FCC(uint64_t a1, int a2, uint64_t a3, unint64_t a4)
{
  return sub_1C133BB84(a2, a3, a4);
}

uint64_t sub_1C1339FF8@<X0>(uint64_t a1@<X1>, unint64_t a2@<X2>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C133C5E8(a1, a2);
  *a3 = result & 1;
  return result;
}

BOOL sub_1C133A03C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  id v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  char v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD v32[2];
  _BYTE v33[24];
  uint64_t v34;

  v0 = sub_1C142521C();
  v30 = *(_QWORD *)(v0 - 8);
  v31 = v0;
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v28 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1C1425030();
  v28 = *(_QWORD *)(v3 - 8);
  v29 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B60);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C14251B0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v28 - v14;
  v16 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v17 = (void *)sub_1C1426A7C();
  v18 = objc_msgSend(v16, sel_objectForKey_, v17);

  if (v18)
  {
    sub_1C1426DE8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v32, 0, sizeof(v32));
  }
  sub_1C132A724((uint64_t)v32, (uint64_t)v33, (uint64_t *)&unk_1ED797BB0);
  if (!v34)
  {
    sub_1C132C860((uint64_t)v33, (uint64_t *)&unk_1ED797BB0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    goto LABEL_9;
  }
  v19 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, v19 ^ 1u, 1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
LABEL_9:
    sub_1C132C860((uint64_t)v8, &qword_1ED793B60);
    return 1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
  sub_1C1425204();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791F38);
  v20 = sub_1C1425210();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1C1427F50;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v21 + 104))(v23 + v22, *MEMORY[0x1E0CB1140], v20);
  sub_1C133FAD4(v23);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1C14251A4();
  sub_1C14251F8();
  swift_bridgeObjectRelease();
  v24 = *(void (**)(char *, uint64_t))(v10 + 8);
  v24(v13, v9);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v2, v31);
  v25 = sub_1C1425024();
  LOBYTE(v20) = v26;
  (*(void (**)(char *, uint64_t))(v28 + 8))(v5, v29);
  v24(v15, v9);
  return (v20 & 1) == 0 && v25 > 24;
}

void sub_1C133A3EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _BOOL8 v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  void *v20;
  void *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  id v25;
  char *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD aBlock[7];

  v1 = sub_1C14251B0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C133A03C();
  if (!v5)
    return;
  v30 = v4;
  v31 = v2;
  v32 = v1;
  MEMORY[0x1E0C80A78](v5);
  v33 = v0;
  *(&v29 - 2) = v0;
  *((_BYTE *)&v29 - 8) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7979E8);
  sub_1C1426CEC();
  v6 = 0;
  v7 = aBlock[0];
  v8 = aBlock[0] + 64;
  v9 = 1 << *(_BYTE *)(aBlock[0] + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(aBlock[0] + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v6 << 6);
      goto LABEL_6;
    }
    v22 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v22 >= v12)
      goto LABEL_22;
    v23 = *(_QWORD *)(v8 + 8 * v22);
    ++v6;
    if (!v23)
    {
      v6 = v22 + 1;
      if (v22 + 1 >= v12)
        goto LABEL_22;
      v23 = *(_QWORD *)(v8 + 8 * v6);
      if (!v23)
      {
        v6 = v22 + 2;
        if (v22 + 2 >= v12)
          goto LABEL_22;
        v23 = *(_QWORD *)(v8 + 8 * v6);
        if (!v23)
          break;
      }
    }
LABEL_21:
    v11 = (v23 - 1) & v23;
    v14 = __clz(__rbit64(v23)) + (v6 << 6);
LABEL_6:
    v15 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    v17 = *v15;
    v16 = v15[1];
    v18 = *(_BYTE *)(*(_QWORD *)(v7 + 56) + v14);
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = v17;
    *(_QWORD *)(v19 + 24) = v16;
    *(_BYTE *)(v19 + 32) = v18;
    swift_bridgeObjectRetain();
    v20 = (void *)sub_1C1426A7C();
    aBlock[4] = sub_1C133FAC8;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C133A808;
    aBlock[3] = &block_descriptor_60;
    v21 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v21);
    swift_release();

  }
  v24 = v22 + 3;
  if (v24 >= v12)
  {
LABEL_22:
    swift_release();
    v25 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v26 = v30;
    sub_1C14251A4();
    v27 = (void *)sub_1C1425138();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v26, v32);
    v28 = (void *)sub_1C1426A7C();
    objc_msgSend(v25, sel_setObject_forKey_, v27, v28);

    return;
  }
  v23 = *(_QWORD *)(v8 + 8 * v24);
  if (v23)
  {
    v6 = v24;
    goto LABEL_21;
  }
  while (1)
  {
    v6 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v6 >= v12)
      goto LABEL_22;
    v23 = *(_QWORD *)(v8 + 8 * v6);
    ++v24;
    if (v23)
      goto LABEL_21;
  }
LABEL_25:
  __break(1u);
}

unint64_t sub_1C133A728()
{
  uint64_t inited;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DAED0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1428070;
  *(_QWORD *)(inited + 32) = 0x6449656C646E7562;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  *(_QWORD *)(inited + 48) = sub_1C1426A7C();
  *(_QWORD *)(inited + 56) = 0x64656C62616E65;
  *(_QWORD *)(inited + 64) = 0xE700000000000000;
  v1 = sub_1C1426A7C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 72) = v1;
  return sub_1C13323D0(inited);
}

id sub_1C133A808(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_1C133FA4C();
    v4 = (void *)sub_1C1426A1C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

uint64_t sub_1C133A87C(char a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  id v20;
  uint64_t result;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  void *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD aBlock[6];

  v5 = v4;
  v10 = sub_1C1426950();
  v30 = *(_QWORD *)(v10 - 8);
  v31 = v10;
  MEMORY[0x1E0C80A78](v10);
  v29 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1C14269B0();
  v27 = *(_QWORD *)(v12 - 8);
  v28 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1C14269F8();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (uint64_t *)((char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = *(void **)(v5 + 72);
  *v18 = v19;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v16 + 104))(v18, *MEMORY[0x1E0DEF740], v15);
  v20 = v19;
  LOBYTE(v19) = sub_1C1426A10();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v16 + 8))(v18, v15);
  if ((v19 & 1) != 0)
  {
    v22 = sub_1C133DB4C();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    aBlock[0] = v22;
    sub_1C13C220C(a4 & 1, a2, a3, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C133D9DC();
    result = swift_bridgeObjectRelease();
    if ((a1 & 1) != 0)
    {
      aBlock[4] = sub_1C133F958;
      aBlock[5] = v5;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1C13A7F4C;
      aBlock[3] = &block_descriptor_54;
      v24 = _Block_copy(aBlock);
      swift_retain();
      sub_1C1426974();
      v32 = MEMORY[0x1E0DEE9D8];
      sub_1C133FF24((unint64_t *)&qword_1ED7979D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A50);
      sub_1C132C820((unint64_t *)&qword_1ED797A60, (uint64_t *)&unk_1ED797A50, MEMORY[0x1E0DEAF38]);
      v25 = v29;
      v26 = v31;
      sub_1C1426DF4();
      MEMORY[0x1C3BAC9D4](0, v14, v25, v24);
      _Block_release(v24);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v25, v26);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v28);
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C133AB60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  id v10;
  uint64_t result;
  uint64_t inited;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  v5 = sub_1C14269F8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (_QWORD *)((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(void **)(v2 + 72);
  *v8 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DEF740], v5);
  v10 = v9;
  LOBYTE(v9) = sub_1C1426A10();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797B80);
    inited = swift_initStackObject();
    v15 = xmmword_1C1427F50;
    *(_OWORD *)(inited + 16) = xmmword_1C1427F50;
    *(_QWORD *)(inited + 32) = a1;
    *(_QWORD *)(inited + 40) = a2;
    swift_bridgeObjectRetain();
    sub_1C133C86C(0, inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    v13 = swift_initStackObject();
    *(_OWORD *)(v13 + 16) = v15;
    *(_QWORD *)(v13 + 32) = a1;
    *(_QWORD *)(v13 + 40) = a2;
    swift_bridgeObjectRetain();
    sub_1C133C86C(1, v13);
    swift_setDeallocating();
    swift_arrayDestroy();
    v14 = swift_initStackObject();
    *(_OWORD *)(v14 + 16) = v15;
    *(_QWORD *)(v14 + 32) = a1;
    *(_QWORD *)(v14 + 40) = a2;
    swift_bridgeObjectRetain();
    sub_1C133CE5C(v14);
    swift_setDeallocating();
    return swift_arrayDestroy();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C133AD2C(char a1, uint64_t a2, unint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  uint64_t v14;
  void (*v15)(_QWORD *, uint64_t, uint64_t);
  id v16;
  void (*v17)(_QWORD *, uint64_t);
  uint64_t result;
  uint64_t v19;
  unint64_t v20;
  char v21;
  int v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  uint64_t v27;
  NSObject *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  void *v47;
  char isUniquelyReferenced_nonNull_native;
  char v49;
  void *v50;
  id v51;
  char v52;
  id v53;
  void *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  unint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  void *v68;
  uint64_t v69;
  NSObject *v70;
  int v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t aBlock;
  uint64_t v85;
  void *v86;
  void *v87;
  void *v88;
  uint64_t v89;

  v80 = a4;
  v81 = a2;
  v74 = sub_1C1426950();
  v78 = *(_QWORD *)(v74 - 8);
  MEMORY[0x1E0C80A78](v74);
  v77 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_1C14269B0();
  v76 = *(_QWORD *)(v79 - 8);
  MEMORY[0x1E0C80A78](v79);
  v75 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C14269F8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)((char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v82 = v4;
  v13 = *(void **)(v4 + 72);
  *v12 = v13;
  v14 = *MEMORY[0x1E0DEF740];
  v15 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v10 + 104);
  v15(v12, v14, v9);
  v16 = v13;
  LOBYTE(v13) = sub_1C1426A10();
  v17 = *(void (**)(_QWORD *, uint64_t))(v10 + 8);
  v17(v12, v9);
  if ((v13 & 1) == 0)
  {
    __break(1u);
LABEL_23:
    swift_once();
    goto LABEL_12;
  }
  sub_1C142587C();
  result = MEMORY[0x1C3BAB540]();
  if ((result & 1) == 0)
    return result;
  v19 = sub_1C133DB4C();
  if (*(_QWORD *)(v19 + 16))
  {
    v73 = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = sub_1C13277A0(v81, a3);
    if ((v21 & 1) != 0)
    {
      v22 = *(unsigned __int8 *)(*(_QWORD *)(v19 + 56) + v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v22 == (a1 & 1))
      {
        swift_bridgeObjectRelease();
        v47 = v80;
        v46 = v81;
      }
      else
      {
        if (qword_1ED791EA8 != -1)
          swift_once();
        v23 = sub_1C1426854();
        __swift_project_value_buffer(v23, (uint64_t)qword_1ED798520);
        swift_bridgeObjectRetain_n();
        v24 = sub_1C1426848();
        v25 = sub_1C1426C80();
        v26 = v25;
        if (os_log_type_enabled(v24, v25))
        {
          v27 = swift_slowAlloc();
          v71 = v26;
          v28 = v24;
          v70 = v24;
          v29 = v27;
          v72 = swift_slowAlloc();
          aBlock = v72;
          *(_DWORD *)v29 = 136446466;
          v69 = v29 + 4;
          swift_bridgeObjectRetain();
          v83 = sub_1C132AD90(v81, a3, &aBlock);
          sub_1C1426DB8();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v29 + 12) = 1026;
          LODWORD(v83) = a1 & 1;
          sub_1C1426DB8();
          _os_log_impl(&dword_1C1324000, v28, (os_log_type_t)v71, "Activity authorization for bundleid: %{public}s changed to: %{BOOL,public}d", (uint8_t *)v29, 0x12u);
          LOBYTE(v28) = a1;
          v30 = v72;
          swift_arrayDestroy();
          v31 = v30;
          a1 = (char)v28;
          MEMORY[0x1C3BAD3F4](v31, -1, -1);
          MEMORY[0x1C3BAD3F4](v29, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        aBlock = v19;
        v49 = a1 & 1;
        sub_1C13C220C(v49, v81, a3, isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v50 = v73;
        *v12 = v73;
        v15(v12, v14, v9);
        v51 = v50;
        v52 = sub_1C1426A10();
        result = ((uint64_t (*)(_QWORD *, uint64_t))v17)(v12, v9);
        if ((v52 & 1) == 0)
        {
          __break(1u);
          return result;
        }
        v53 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
        v54 = (void *)sub_1C1426A1C();
        v55 = (void *)sub_1C1426A7C();
        objc_msgSend(v53, sel_setValue_forKey_, v54, v55);
        swift_bridgeObjectRelease();

        v56 = v82;
        v73 = *(id *)(v82 + 80);
        v57 = swift_allocObject();
        v58 = v81;
        *(_QWORD *)(v57 + 16) = v56;
        *(_QWORD *)(v57 + 24) = v58;
        *(_QWORD *)(v57 + 32) = a3;
        *(_BYTE *)(v57 + 40) = v49;
        v88 = sub_1C133F9FC;
        v89 = v57;
        aBlock = MEMORY[0x1E0C809B0];
        v85 = 1107296256;
        v86 = sub_1C13A7F4C;
        v87 = &block_descriptor_45;
        v59 = _Block_copy(&aBlock);
        swift_bridgeObjectRetain();
        swift_retain();
        v60 = a3;
        v61 = v75;
        sub_1C1426974();
        v83 = MEMORY[0x1E0DEE9D8];
        sub_1C133FF24((unint64_t *)&qword_1ED7979D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A50);
        sub_1C132C820((unint64_t *)&qword_1ED797A60, (uint64_t *)&unk_1ED797A50, MEMORY[0x1E0DEAF38]);
        v62 = v77;
        v63 = v74;
        sub_1C1426DF4();
        MEMORY[0x1C3BAC9D4](0, v61, v62, v59);
        _Block_release(v59);
        (*(void (**)(char *, uint64_t))(v78 + 8))(v62, v63);
        v64 = v61;
        a3 = v60;
        (*(void (**)(char *, uint64_t))(v76 + 8))(v64, v79);
        swift_release();
        v65 = swift_allocObject();
        v66 = v58;
        *(_QWORD *)(v65 + 16) = v58;
        *(_QWORD *)(v65 + 24) = v60;
        *(_BYTE *)(v65 + 32) = v49;
        swift_bridgeObjectRetain();
        v67 = (void *)sub_1C1426A7C();
        v88 = sub_1C133FA40;
        v89 = v65;
        aBlock = MEMORY[0x1E0C809B0];
        v85 = 1107296256;
        v86 = sub_1C133A808;
        v87 = &block_descriptor_51;
        v68 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        AnalyticsSendEventLazy();
        _Block_release(v68);
        swift_release();

        v47 = v80;
        v46 = v66;
      }
      return sub_1C133E058(v46, a3, v47);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (qword_1ED791EA8 != -1)
    goto LABEL_23;
LABEL_12:
  v32 = sub_1C1426854();
  __swift_project_value_buffer(v32, (uint64_t)qword_1ED798520);
  v33 = a3;
  swift_bridgeObjectRetain_n();
  v34 = sub_1C1426848();
  v35 = sub_1C1426C80();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = swift_slowAlloc();
    v37 = swift_slowAlloc();
    aBlock = v37;
    *(_DWORD *)v36 = 136446466;
    swift_bridgeObjectRetain();
    v38 = v81;
    v83 = sub_1C132AD90(v81, a3, &aBlock);
    v33 = a3;
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v36 + 12) = 1026;
    LODWORD(v83) = a1 & 1;
    sub_1C1426DB8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1324000, v34, v35, "Activity authorization for bundleid: %{public}s changed to: %{BOOL,public}d", (uint8_t *)v36, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v37, -1, -1);
    MEMORY[0x1C3BAD3F4](v36, -1, -1);

  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    v38 = v81;
  }
  v39 = v74;
  v40 = v82;
  sub_1C133A87C(0, v38, v33, a1 & 1);
  v82 = *(_QWORD *)(v40 + 80);
  v41 = swift_allocObject();
  *(_QWORD *)(v41 + 16) = v40;
  *(_QWORD *)(v41 + 24) = v38;
  *(_QWORD *)(v41 + 32) = v33;
  *(_BYTE *)(v41 + 40) = a1 & 1;
  v88 = sub_1C133FF64;
  v89 = v41;
  aBlock = MEMORY[0x1E0C809B0];
  v85 = 1107296256;
  v86 = sub_1C13A7F4C;
  v87 = &block_descriptor_39;
  v42 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  v43 = v75;
  sub_1C1426974();
  v83 = MEMORY[0x1E0DEE9D8];
  sub_1C133FF24((unint64_t *)&qword_1ED7979D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A50);
  sub_1C132C820((unint64_t *)&qword_1ED797A60, (uint64_t *)&unk_1ED797A50, MEMORY[0x1E0DEAF38]);
  v44 = v77;
  sub_1C1426DF4();
  MEMORY[0x1C3BAC9D4](0, v43, v44, v42);
  _Block_release(v42);
  v45 = v44;
  a3 = v33;
  (*(void (**)(char *, uint64_t))(v78 + 8))(v45, v39);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v43, v79);
  swift_release();
  v46 = v38;
  v47 = v80;
  return sub_1C133E058(v46, a3, v47);
}

uint64_t sub_1C133B768(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DAEC8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1427F50;
  *(_QWORD *)(inited + 32) = a2;
  *(_QWORD *)(inited + 40) = a3;
  *(_BYTE *)(inited + 48) = a4;
  swift_bridgeObjectRetain();
  sub_1C13322C0(inited);
  sub_1C14268CC();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1C133B7FC()
{
  uint64_t inited;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DAED0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1428070;
  *(_QWORD *)(inited + 32) = 0x6469656C646E7562;
  *(_QWORD *)(inited + 40) = 0xE800000000000000;
  *(_QWORD *)(inited + 48) = sub_1C1426A7C();
  *(_QWORD *)(inited + 56) = 0x64656C62616E65;
  *(_QWORD *)(inited + 64) = 0xE700000000000000;
  v1 = sub_1C1426A7C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 72) = v1;
  return sub_1C13323D0(inited);
}

uint64_t sub_1C133B8DC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v3 = v2;
  v6 = sub_1C14269F8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)(v3 + 72);
  *v9 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF740], v6);
  v11 = v10;
  LOBYTE(v10) = sub_1C1426A10();
  (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) == 0)
  {
    __break(1u);
LABEL_14:
    swift_once();
    goto LABEL_9;
  }
  sub_1C142587C();
  if ((MEMORY[0x1C3BAB540]() & 1) == 0)
    return 0;
  v12 = sub_1C133DB4C();
  if (*(_QWORD *)(v12 + 16))
  {
    swift_bridgeObjectRetain();
    v13 = sub_1C13277A0(a1, a2);
    if ((v14 & 1) != 0)
    {
      v15 = *(unsigned __int8 *)(*(_QWORD *)(v12 + 56) + v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v15;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (qword_1ED791EA8 != -1)
    goto LABEL_14;
LABEL_9:
  v16 = sub_1C1426854();
  __swift_project_value_buffer(v16, (uint64_t)qword_1ED798520);
  swift_bridgeObjectRetain_n();
  v17 = sub_1C1426848();
  v18 = sub_1C1426C80();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v23 = v20;
    *(_DWORD *)v19 = 136315138;
    swift_bridgeObjectRetain();
    v22 = sub_1C132AD90(a1, a2, &v23);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C1324000, v17, v18, "No record for %s found", v19, 0xCu);
    v15 = 1;
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v20, -1, -1);
    MEMORY[0x1C3BAD3F4](v19, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    return 1;
  }
  return v15;
}

uint64_t sub_1C133BB84(int a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  uint64_t v15;
  void (*v16)(_QWORD *, uint64_t, uint64_t);
  void (*v17)(_QWORD *, uint64_t);
  uint64_t v18;
  unint64_t v19;
  char v20;
  int v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  void *v45;
  id v46;
  char v47;
  id v48;
  void *v49;
  void *v50;
  uint64_t v51;
  void *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t aBlock;
  uint64_t v70;
  uint64_t (*v71)(uint64_t);
  void *v72;
  uint64_t (*v73)();
  uint64_t v74;

  v4 = v3;
  v67 = a1;
  v7 = sub_1C1426950();
  v66 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v65 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_1C14269B0();
  v64 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v63 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C14269F8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (uint64_t *)((char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = *(void **)(v3 + 72);
  *v13 = v14;
  v15 = *MEMORY[0x1E0DEF740];
  v16 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v11 + 104);
  v16(v13, v15, v10);
  v60 = v14;
  LOBYTE(v14) = sub_1C1426A10();
  v17 = *(void (**)(_QWORD *, uint64_t))(v11 + 8);
  v17(v13, v10);
  if ((v14 & 1) == 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  v61 = v7;
  v18 = sub_1C133DB4C();
  if (!*(_QWORD *)(v18 + 16))
  {
LABEL_10:
    if (qword_1ED791EA8 == -1)
    {
LABEL_11:
      v31 = sub_1C1426854();
      __swift_project_value_buffer(v31, (uint64_t)qword_1ED798520);
      swift_bridgeObjectRetain_n();
      v32 = sub_1C1426848();
      v33 = sub_1C1426C80();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = swift_slowAlloc();
        v35 = swift_slowAlloc();
        aBlock = v35;
        *(_DWORD *)v34 = 136446466;
        swift_bridgeObjectRetain();
        v68 = sub_1C132AD90(a2, a3, &aBlock);
        sub_1C1426DB8();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v34 + 12) = 1026;
        v36 = v67;
        LODWORD(v68) = v67 & 1;
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C1324000, v32, v33, "Activity frequent updates for bundleid: %{public}s changed to: %{BOOL,public}d", (uint8_t *)v34, 0x12u);
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v35, -1, -1);
        MEMORY[0x1C3BAD3F4](v34, -1, -1);

        v37 = v62;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();

        v37 = v62;
        v36 = v67;
      }
      sub_1C133A87C(1, a2, a3, v36 & 1);
      v38 = swift_allocObject();
      *(_QWORD *)(v38 + 16) = v4;
      *(_QWORD *)(v38 + 24) = a2;
      *(_QWORD *)(v38 + 32) = a3;
      *(_BYTE *)(v38 + 40) = v36 & 1;
      v73 = sub_1C133F98C;
      v74 = v38;
      aBlock = MEMORY[0x1E0C809B0];
      v70 = 1107296256;
      v71 = sub_1C13A7F4C;
      v72 = &block_descriptor_27;
      v39 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      v40 = v63;
      sub_1C1426974();
      v68 = MEMORY[0x1E0DEE9D8];
      sub_1C133FF24((unint64_t *)&qword_1ED7979D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A50);
      sub_1C132C820((unint64_t *)&qword_1ED797A60, (uint64_t *)&unk_1ED797A50, MEMORY[0x1E0DEAF38]);
      v41 = v65;
      v42 = v61;
      sub_1C1426DF4();
      MEMORY[0x1C3BAC9D4](0, v40, v41, v39);
      _Block_release(v39);
      (*(void (**)(char *, uint64_t))(v66 + 8))(v41, v42);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v40, v37);
      return swift_release();
    }
LABEL_21:
    swift_once();
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = sub_1C13277A0(a2, a3);
  if ((v20 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v21 = *(unsigned __int8 *)(*(_QWORD *)(v18 + 56) + v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v21 == (v67 & 1))
    return swift_bridgeObjectRelease();
  if (qword_1ED791EA8 != -1)
    swift_once();
  v22 = sub_1C1426854();
  __swift_project_value_buffer(v22, (uint64_t)qword_1ED798520);
  swift_bridgeObjectRetain_n();
  v23 = sub_1C1426848();
  v24 = sub_1C1426C80();
  LODWORD(v58) = v24;
  if (os_log_type_enabled(v23, v24))
  {
    v25 = swift_slowAlloc();
    v59 = v23;
    v26 = v25;
    v57 = swift_slowAlloc();
    aBlock = v57;
    *(_DWORD *)v26 = 136446466;
    v56 = v26 + 4;
    swift_bridgeObjectRetain();
    v68 = sub_1C132AD90(a2, a3, &aBlock);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v26 + 12) = 1026;
    LODWORD(v68) = v67 & 1;
    sub_1C1426DB8();
    _os_log_impl(&dword_1C1324000, v59, (os_log_type_t)v58, "Activity frequent updates for bundleid: %{public}s changed to: %{BOOL,public}d", (uint8_t *)v26, 0x12u);
    v58 = a2;
    v27 = v57;
    swift_arrayDestroy();
    v28 = v27;
    a2 = v58;
    MEMORY[0x1C3BAD3F4](v28, -1, -1);
    v29 = v26;
    v30 = v67;
    MEMORY[0x1C3BAD3F4](v29, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    v30 = v67;
  }
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  aBlock = v18;
  v67 = v30 & 1;
  sub_1C13C220C(v30 & 1, a2, a3, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v45 = v60;
  *v13 = v60;
  v16(v13, v15, v10);
  v46 = v45;
  v47 = sub_1C1426A10();
  result = ((uint64_t (*)(_QWORD *, uint64_t))v17)(v13, v10);
  if ((v47 & 1) != 0)
  {
    v48 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v49 = (void *)sub_1C1426A1C();
    v50 = (void *)sub_1C1426A7C();
    objc_msgSend(v48, sel_setValue_forKey_, v49, v50);
    swift_bridgeObjectRelease();

    v51 = swift_allocObject();
    *(_QWORD *)(v51 + 16) = v4;
    *(_QWORD *)(v51 + 24) = a2;
    *(_QWORD *)(v51 + 32) = a3;
    *(_BYTE *)(v51 + 40) = v67;
    v73 = sub_1C133F9A4;
    v74 = v51;
    aBlock = MEMORY[0x1E0C809B0];
    v70 = 1107296256;
    v71 = sub_1C13A7F4C;
    v72 = &block_descriptor_33_0;
    v52 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    v53 = v63;
    sub_1C1426974();
    v68 = MEMORY[0x1E0DEE9D8];
    sub_1C133FF24((unint64_t *)&qword_1ED7979D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A50);
    sub_1C132C820((unint64_t *)&qword_1ED797A60, (uint64_t *)&unk_1ED797A50, MEMORY[0x1E0DEAF38]);
    v54 = v65;
    v55 = v61;
    sub_1C1426DF4();
    MEMORY[0x1C3BAC9D4](0, v53, v54, v52);
    _Block_release(v52);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v54, v55);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v53, v62);
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C133C478(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DAEC8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1427F50;
  *(_QWORD *)(inited + 32) = a2;
  *(_QWORD *)(inited + 40) = a3;
  *(_BYTE *)(inited + 48) = a4;
  swift_bridgeObjectRetain();
  sub_1C13322C0(inited);
  sub_1C14268CC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C133C50C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791EF8);
  sub_1C132C820(&qword_1ED791EF0, &qword_1ED791EF8, MEMORY[0x1E0C95F40]);
  sub_1C14268FC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DAEC8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1427F50;
  *(_QWORD *)(inited + 32) = a2;
  *(_QWORD *)(inited + 40) = a3;
  *(_BYTE *)(inited + 48) = a4;
  swift_bridgeObjectRetain();
  sub_1C13322C0(inited);
  sub_1C14268CC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C133C5E8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v5 = sub_1C14269F8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *(void **)(v2 + 72);
  *v8 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DEF740], v5);
  v10 = v9;
  LOBYTE(v9) = sub_1C1426A10();
  (*(void (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) == 0)
  {
    __break(1u);
LABEL_12:
    swift_once();
    goto LABEL_7;
  }
  v11 = sub_1C133DB4C();
  if (*(_QWORD *)(v11 + 16))
  {
    swift_bridgeObjectRetain();
    v12 = sub_1C13277A0(a1, a2);
    if ((v13 & 1) != 0)
    {
      v14 = *(unsigned __int8 *)(*(_QWORD *)(v11 + 56) + v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v14;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (qword_1ED791EA8 != -1)
    goto LABEL_12;
LABEL_7:
  v15 = sub_1C1426854();
  __swift_project_value_buffer(v15, (uint64_t)qword_1ED798520);
  swift_bridgeObjectRetain_n();
  v16 = sub_1C1426848();
  v17 = sub_1C1426C80();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v22 = v19;
    *(_DWORD *)v18 = 136315138;
    swift_bridgeObjectRetain();
    v21 = sub_1C132AD90(a1, a2, &v22);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C1324000, v16, v17, "No record for %s found", v18, 0xCu);
    v14 = 1;
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v19, -1, -1);
    MEMORY[0x1C3BAD3F4](v18, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    return 1;
  }
  return v14;
}

uint64_t sub_1C133C86C(char a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  id v15;
  char v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  unint64_t v26;
  char v27;
  char v28;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v30;
  void *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void *v35;
  _QWORD *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t aBlock;
  uint64_t v52;
  uint64_t (*v53)(uint64_t);
  void *v54;
  uint64_t (*v55)();
  _QWORD *v56;

  v3 = v2;
  v6 = sub_1C1426950();
  v46 = *(_QWORD *)(v6 - 8);
  v47 = v6;
  MEMORY[0x1E0C80A78](v6);
  v45 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C14269B0();
  v43 = *(_QWORD *)(v8 - 8);
  v44 = v8;
  MEMORY[0x1E0C80A78](v8);
  v42 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C14269F8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (uint64_t *)((char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = (void *)v3[9];
  *v13 = v14;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DEF740], v10);
  v15 = v14;
  v16 = sub_1C1426A10();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
  if ((v16 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  v49 = a1 & 1;
  v18 = sub_1C133DB4C();
  v19 = *(_QWORD *)(a2 + 16);
  if (!v19)
    goto LABEL_18;
  swift_bridgeObjectRetain();
  v41 = a2;
  v20 = (uint64_t *)(a2 + 40);
  do
  {
    if (*(_QWORD *)(v18 + 16))
    {
      v22 = *(v20 - 1);
      v21 = *v20;
      swift_bridgeObjectRetain();
      v23 = sub_1C13277A0(v22, v21);
      if ((v24 & 1) == 0)
        goto LABEL_4;
      v25 = *(_BYTE *)(*(_QWORD *)(v18 + 56) + v23);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v26 = sub_1C13277A0(v22, v21);
      v28 = v27;
      swift_bridgeObjectRelease();
      if ((v28 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        aBlock = v18;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1C13BA440();
          v18 = aBlock;
        }
        swift_bridgeObjectRelease();
        sub_1C13C0988(v26, v18);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      if (v49)
      {
        swift_bridgeObjectRelease();
        v48 = v3[10];
        v55 = sub_1C133F958;
        v56 = v3;
        aBlock = MEMORY[0x1E0C809B0];
        v52 = 1107296256;
        v53 = sub_1C13A7F4C;
        v54 = &block_descriptor_15;
        v35 = _Block_copy(&aBlock);
        swift_retain();
        v36 = v3;
        v37 = v42;
        sub_1C1426974();
        v50 = MEMORY[0x1E0DEE9D8];
        sub_1C133FF24((unint64_t *)&qword_1ED7979D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A50);
        sub_1C132C820((unint64_t *)&qword_1ED797A60, (uint64_t *)&unk_1ED797A50, MEMORY[0x1E0DEAF38]);
        v38 = v45;
        v39 = v47;
        sub_1C1426DF4();
        MEMORY[0x1C3BAC9D4](0, v37, v38, v35);
        _Block_release(v35);
        (*(void (**)(char *, uint64_t))(v46 + 8))(v38, v39);
        v40 = v37;
        v3 = v36;
        (*(void (**)(char *, uint64_t))(v43 + 8))(v40, v44);
      }
      else
      {
        if ((v25 & 1) != 0)
        {
LABEL_4:
          swift_bridgeObjectRelease();
          goto LABEL_5;
        }
        v48 = v3[10];
        v30 = (_QWORD *)swift_allocObject();
        v30[2] = v3;
        v30[3] = v22;
        v30[4] = v21;
        v55 = sub_1C133F978;
        v56 = v30;
        aBlock = MEMORY[0x1E0C809B0];
        v52 = 1107296256;
        v53 = sub_1C13A7F4C;
        v54 = &block_descriptor_21;
        v31 = _Block_copy(&aBlock);
        swift_retain();
        v32 = v42;
        sub_1C1426974();
        v50 = MEMORY[0x1E0DEE9D8];
        sub_1C133FF24((unint64_t *)&qword_1ED7979D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A50);
        sub_1C132C820((unint64_t *)&qword_1ED797A60, (uint64_t *)&unk_1ED797A50, MEMORY[0x1E0DEAF38]);
        v33 = v45;
        v34 = v47;
        sub_1C1426DF4();
        MEMORY[0x1C3BAC9D4](0, v32, v33, v31);
        _Block_release(v31);
        (*(void (**)(char *, uint64_t))(v46 + 8))(v33, v34);
        (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v44);
      }
      swift_release();
    }
LABEL_5:
    v20 += 2;
    --v19;
  }
  while (v19);
  swift_bridgeObjectRelease();
LABEL_18:
  swift_bridgeObjectRetain();
  sub_1C133D9DC();
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_1C133CD74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t inited;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DAEC8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1427F50;
  *(_QWORD *)(inited + 32) = a2;
  *(_QWORD *)(inited + 40) = a3;
  *(_BYTE *)(inited + 48) = 1;
  swift_bridgeObjectRetain();
  sub_1C13322C0(inited);
  sub_1C14268CC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C133CE00()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791EF8);
  sub_1C132C820(&qword_1ED791EF0, &qword_1ED791EF8, MEMORY[0x1E0C95F40]);
  return sub_1C14268FC();
}

void sub_1C133CE5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  uint64_t v13;
  void (*v14)(_QWORD *, uint64_t, uint64_t);
  id v15;
  char v16;
  void (*v17)(_QWORD *, uint64_t);
  id v18;
  char v19;
  id v20;
  void *v21;
  id v22;
  _QWORD *v23;
  _QWORD *v24;
  void (*v25)(_QWORD *, _QWORD, uint64_t);
  void (*v26)(_QWORD *, uint64_t);
  id v27;
  char v28;
  id v29;
  void *v30;
  id v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  void (*v52)(char *, char *, uint64_t);
  char *v53;
  uint64_t v54;
  int isUniquelyReferenced_nonNull_native;
  char v56;
  unint64_t v57;
  uint64_t v58;
  _BOOL8 v59;
  uint64_t v60;
  char v61;
  unint64_t v62;
  char v63;
  _QWORD *v64;
  uint64_t *v65;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  BOOL v69;
  _QWORD *v70;
  uint64_t v71;
  char v73;
  _QWORD *v74;
  uint64_t v75;
  char v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  _QWORD *v84;
  void *v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  char v89;
  id v90;
  void *v91;
  _QWORD *v92;
  void *v93;
  id v94;
  char v95;
  id v96;
  void *v97;
  void *v98;
  const char *v99;
  id v100;
  uint64_t v101;
  const char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unsigned int v111;
  _QWORD *v112;
  id v113;
  void (*v114)(_QWORD *, uint64_t);
  void (*v115)(_QWORD *, _QWORD, uint64_t);
  unsigned int v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  _QWORD *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD aBlock[7];

  v110 = a1;
  v109 = sub_1C1426950();
  v108 = *(_QWORD *)(v109 - 8);
  MEMORY[0x1E0C80A78](v109);
  v107 = (char *)&v99 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_1C14269B0();
  v105 = *(_QWORD *)(v106 - 8);
  MEMORY[0x1E0C80A78](v106);
  v104 = (char *)&v99 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C142575C();
  v122 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v121 = (char *)&v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v119 = (char *)&v99 - v7;
  v8 = sub_1C14269F8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (const char **)((char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v103 = v1;
  v12 = *(void **)(v1 + 72);
  *v11 = v12;
  v13 = *MEMORY[0x1E0DEF740];
  v14 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v9 + 104);
  v14(v11, v13, v8);
  v15 = v12;
  v16 = sub_1C1426A10();
  v17 = *(void (**)(_QWORD *, uint64_t))(v9 + 8);
  v17(v11, v8);
  if ((v16 & 1) == 0)
    goto LABEL_86;
  *v11 = v15;
  v14(v11, v13, v8);
  v18 = v15;
  v19 = sub_1C1426A10();
  v17(v11, v8);
  if ((v19 & 1) == 0)
  {
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  v114 = v17;
  v115 = v14;
  v111 = v13;
  v112 = v11;
  v113 = (id)objc_opt_self();
  v20 = objc_msgSend(v113, sel_standardUserDefaults);
  v102 = "apps-firstPermissionResponse";
  v21 = (void *)sub_1C1426A7C();
  v22 = objc_msgSend(v20, sel_stringArrayForKey_, v21);

  if (v22)
  {
    v23 = (_QWORD *)sub_1C1426B90();

  }
  else
  {
    v23 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v24 = v112;
  v26 = v114;
  v25 = v115;
  *v112 = v18;
  v25(v24, v111, v8);
  v27 = v18;
  v28 = sub_1C1426A10();
  v26(v24, v8);
  if ((v28 & 1) == 0)
    goto LABEL_88;
  v29 = objc_msgSend(v113, sel_standardUserDefaults);
  v99 = "apps-secondPermissionResponse";
  v30 = (void *)sub_1C1426A7C();
  v31 = objc_msgSend(v29, sel_stringArrayForKey_, v30);

  v32 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v31)
  {
    v32 = (_QWORD *)sub_1C1426B90();

  }
  v100 = v27;
  v101 = v8;
  v118 = *(_QWORD *)(v110 + 16);
  if (v118)
  {
    v117 = v110 + 32;
    v116 = *MEMORY[0x1E0C8FB48];
    swift_bridgeObjectRetain();
    v33 = 0;
    v34 = MEMORY[0x1E0DEE9E0];
    while (1)
    {
      v35 = (uint64_t *)(v117 + 16 * v33);
      v36 = *v35;
      v37 = v35[1];
      v38 = v23[2];
      if (!v38)
        goto LABEL_24;
      v39 = v23[4] == v36 && v23[5] == v37;
      if (v39 || (sub_1C1427064() & 1) != 0)
      {
        swift_bridgeObjectRetain();
        v40 = 0;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          goto LABEL_65;
      }
      else
      {
        if (v38 == 1)
          goto LABEL_24;
        v69 = v23[6] == v36 && v23[7] == v37;
        if (!v69 && (sub_1C1427064() & 1) == 0)
        {
          v70 = v23 + 9;
          v71 = 2;
          while (v38 != v71)
          {
            v40 = v71;
            if (*(v70 - 1) != v36 || *v70 != v37)
            {
              v73 = sub_1C1427064();
              v71 = v40 + 1;
              v70 += 2;
              if ((v73 & 1) == 0)
                continue;
            }
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
              goto LABEL_20;
            goto LABEL_65;
          }
LABEL_24:
          swift_bridgeObjectRetain();
          goto LABEL_25;
        }
        swift_bridgeObjectRetain();
        v40 = 1;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
LABEL_65:
          v23 = sub_1C133F910(v23);
          goto LABEL_20;
        }
        v40 = 1;
      }
LABEL_20:
      v41 = v23[2];
      if (v40 >= v41)
        goto LABEL_83;
      v42 = v41 - 1;
      v43 = v41 - 1 - v40;
      if (v43 < 0)
        goto LABEL_91;
      memmove(&v23[2 * v40 + 4], &v23[2 * v40 + 6], 16 * v43);
      v23[2] = v42;
      swift_bridgeObjectRelease();
LABEL_25:
      v44 = v32[2];
      v120 = v23;
      if (!v44)
        goto LABEL_35;
      v45 = v32[4] == v36 && v32[5] == v37;
      if (v45 || (sub_1C1427064() & 1) != 0)
      {
        v46 = 0;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          goto LABEL_74;
      }
      else
      {
        if (v44 == 1)
          goto LABEL_35;
        if ((v32[6] != v36 || v32[7] != v37) && (sub_1C1427064() & 1) == 0)
        {
          v74 = v32 + 9;
          v75 = 2;
          while (v44 != v75)
          {
            v46 = v75;
            if (*(v74 - 1) != v36 || *v74 != v37)
            {
              v77 = sub_1C1427064();
              v75 = v46 + 1;
              v74 += 2;
              if ((v77 & 1) == 0)
                continue;
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
              goto LABEL_32;
            goto LABEL_74;
          }
          goto LABEL_35;
        }
        v46 = 1;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
LABEL_74:
          v32 = sub_1C133F910(v32);
          goto LABEL_32;
        }
        v46 = 1;
      }
LABEL_32:
      v47 = v32[2];
      if (v46 >= v47)
        goto LABEL_84;
      v48 = v47 - 1;
      v49 = v47 - 1 - v46;
      if (v49 < 0)
        goto LABEL_91;
      memmove(&v32[2 * v46 + 4], &v32[2 * v46 + 6], 16 * v49);
      v32[2] = v48;
      swift_bridgeObjectRelease();
LABEL_35:
      v50 = v122;
      v51 = v119;
      (*(void (**)(char *, _QWORD, uint64_t))(v122 + 104))(v119, v116, v4);
      v52 = *(void (**)(char *, char *, uint64_t))(v50 + 32);
      v53 = v51;
      v54 = v4;
      v52(v121, v53, v4);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      aBlock[0] = v34;
      v57 = sub_1C13277A0(v36, v37);
      v58 = *(_QWORD *)(v34 + 16);
      v59 = (v56 & 1) == 0;
      v60 = v58 + v59;
      if (__OFADD__(v58, v59))
      {
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        __break(1u);
LABEL_85:
        __break(1u);
LABEL_86:
        __break(1u);
        goto LABEL_87;
      }
      v61 = v56;
      if (*(_QWORD *)(v34 + 24) >= v60)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v64 = (_QWORD *)aBlock[0];
          if ((v56 & 1) != 0)
            goto LABEL_11;
        }
        else
        {
          sub_1C13BA5E8();
          v64 = (_QWORD *)aBlock[0];
          if ((v61 & 1) != 0)
            goto LABEL_11;
        }
      }
      else
      {
        sub_1C13BD564(v60, isUniquelyReferenced_nonNull_native);
        v62 = sub_1C13277A0(v36, v37);
        if ((v61 & 1) != (v63 & 1))
          goto LABEL_92;
        v57 = v62;
        v64 = (_QWORD *)aBlock[0];
        if ((v61 & 1) != 0)
        {
LABEL_11:
          v4 = v54;
          (*(void (**)(unint64_t, char *, uint64_t))(v122 + 40))(v64[7] + *(_QWORD *)(v122 + 72) * v57, v121, v54);
          goto LABEL_12;
        }
      }
      v64[(v57 >> 6) + 8] |= 1 << v57;
      v65 = (uint64_t *)(v64[6] + 16 * v57);
      *v65 = v36;
      v65[1] = v37;
      v4 = v54;
      v52((char *)(v64[7] + *(_QWORD *)(v122 + 72) * v57), v121, v54);
      v66 = v64[2];
      v67 = __OFADD__(v66, 1);
      v68 = v66 + 1;
      if (v67)
        goto LABEL_85;
      v64[2] = v68;
      swift_bridgeObjectRetain();
LABEL_12:
      ++v33;
      v34 = aBlock[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v23 = v120;
      if (v33 == v118)
      {
        swift_bridgeObjectRelease();
        goto LABEL_79;
      }
    }
  }
  v34 = MEMORY[0x1E0DEE9E0];
LABEL_79:
  v78 = v103;
  v79 = swift_allocObject();
  *(_QWORD *)(v79 + 16) = v78;
  *(_QWORD *)(v79 + 24) = v34;
  aBlock[4] = sub_1C133F950;
  aBlock[5] = v79;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C13A7F4C;
  aBlock[3] = &block_descriptor_12;
  v80 = _Block_copy(aBlock);
  swift_retain();
  v81 = v104;
  sub_1C1426974();
  v123 = MEMORY[0x1E0DEE9D8];
  sub_1C133FF24((unint64_t *)&qword_1ED7979D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A50);
  sub_1C132C820((unint64_t *)&qword_1ED797A60, (uint64_t *)&unk_1ED797A50, MEMORY[0x1E0DEAF38]);
  v82 = v107;
  v83 = v109;
  sub_1C1426DF4();
  MEMORY[0x1C3BAC9D4](0, v81, v82, v80);
  _Block_release(v80);
  (*(void (**)(char *, uint64_t))(v108 + 8))(v82, v83);
  (*(void (**)(char *, uint64_t))(v105 + 8))(v81, v106);
  swift_release();
  v84 = v112;
  v85 = v100;
  *v112 = v100;
  v86 = v111;
  v87 = v101;
  v115(v84, v111, v101);
  v88 = v85;
  v89 = sub_1C1426A10();
  v114(v84, v87);
  if ((v89 & 1) == 0)
    goto LABEL_89;
  v90 = objc_msgSend(v113, sel_standardUserDefaults);
  v91 = (void *)sub_1C1426B84();
  v92 = v84;
  v93 = (void *)sub_1C1426A7C();
  objc_msgSend(v90, sel_setObject_forKey_, v91, v93);
  swift_bridgeObjectRelease();

  *v92 = v88;
  v115(v92, v86, v87);
  v94 = v88;
  v95 = sub_1C1426A10();
  v114(v92, v87);
  if ((v95 & 1) != 0)
  {
    v96 = objc_msgSend(v113, sel_standardUserDefaults);
    v97 = (void *)sub_1C1426B84();
    v98 = (void *)sub_1C1426A7C();
    objc_msgSend(v96, sel_setObject_forKey_, v97, v98);
    swift_bridgeObjectRelease();

    return;
  }
LABEL_90:
  __break(1u);
LABEL_91:
  sub_1C1426FC8();
  __break(1u);
LABEL_92:
  sub_1C142707C();
  __break(1u);
}

uint64_t sub_1C133D998()
{
  swift_bridgeObjectRetain();
  sub_1C14268CC();
  return swift_bridgeObjectRelease();
}

void sub_1C133D9DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  uint64_t v10;

  v1 = sub_1C14269F8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (uint64_t *)((char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)(v0 + 72);
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEF740], v1);
  v6 = v5;
  LOBYTE(v5) = sub_1C1426A10();
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) != 0)
  {
    v7 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v8 = (void *)sub_1C1426A1C();
    v9 = (void *)sub_1C1426A7C();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setValue_forKey_, v8, v9);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1C133DB4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  uint64_t result;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v1 = sub_1C14269F8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (uint64_t *)((char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)(v0 + 72);
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEF740], v1);
  v6 = v5;
  LOBYTE(v5) = sub_1C1426A10();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) != 0)
  {
    v8 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v9 = (void *)sub_1C1426A7C();
    swift_bridgeObjectRelease();
    v10 = objc_msgSend(v8, sel_dictionaryForKey_, v9);

    if (!v10)
      return sub_1C13322C0(MEMORY[0x1E0DEE9D8]);
    v11 = sub_1C1426A34();

    v12 = sub_1C133DCF4(v11);
    swift_bridgeObjectRelease();
    if (!v12)
      return sub_1C13322C0(MEMORY[0x1E0DEE9D8]);
    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1C133DCF4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  unint64_t result;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  char v35;
  char v36[32];
  _QWORD v37[2];
  uint64_t v38;

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DACA8);
    v2 = (_QWORD *)sub_1C1426FBC();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v32 = v1 + 64;
  v3 = -1;
  v4 = -1 << *(_BYTE *)(v1 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & *(_QWORD *)(v1 + 64);
  v6 = &v38;
  v31 = (unint64_t)(63 - v4) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  v9 = (uint64_t *)&unk_1EF6DAEC0;
  v10 = MEMORY[0x1E0DEE9B8] + 8;
  while (1)
  {
    if (v5)
    {
      v33 = (v5 - 1) & v5;
      v34 = v8;
      v16 = __clz(__rbit64(v5)) | (v8 << 6);
    }
    else
    {
      v17 = v8 + 1;
      if (__OFADD__(v8, 1))
        goto LABEL_37;
      if (v17 >= v31)
      {
LABEL_33:
        sub_1C133F908();
        return (unint64_t)v2;
      }
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = v8 + 1;
      if (!v18)
      {
        v19 = v8 + 2;
        if (v8 + 2 >= v31)
          goto LABEL_33;
        v18 = *(_QWORD *)(v32 + 8 * v19);
        if (!v18)
        {
          v19 = v8 + 3;
          if (v8 + 3 >= v31)
            goto LABEL_33;
          v18 = *(_QWORD *)(v32 + 8 * v19);
          if (!v18)
          {
            v19 = v8 + 4;
            if (v8 + 4 >= v31)
              goto LABEL_33;
            v18 = *(_QWORD *)(v32 + 8 * v19);
            if (!v18)
            {
              v20 = v8 + 5;
              if (v8 + 5 >= v31)
                goto LABEL_33;
              v18 = *(_QWORD *)(v32 + 8 * v20);
              if (!v18)
              {
                while (1)
                {
                  v19 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_38;
                  if (v19 >= v31)
                    goto LABEL_33;
                  v18 = *(_QWORD *)(v32 + 8 * v19);
                  ++v20;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v19 = v8 + 5;
            }
          }
        }
      }
LABEL_26:
      v33 = (v18 - 1) & v18;
      v34 = v19;
      v16 = __clz(__rbit64(v18)) + (v19 << 6);
    }
    v21 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v16);
    v23 = *v21;
    v22 = v21[1];
    sub_1C132AE60(*(_QWORD *)(v1 + 56) + 32 * v16, (uint64_t)v6);
    v37[0] = v23;
    v37[1] = v22;
    sub_1C132AE60((uint64_t)v6, (uint64_t)v36);
    swift_bridgeObjectRetain_n();
    sub_1C132C860((uint64_t)v37, v9);
    if (!swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      sub_1C133F908();
      swift_release();
      return 0;
    }
    v24 = v35 & 1;
    result = sub_1C13277A0(v23, v22);
    v25 = result;
    if ((v26 & 1) != 0)
    {
      v11 = v10;
      v12 = v6;
      v13 = v1;
      v14 = v9;
      v15 = (uint64_t *)(v2[6] + 16 * result);
      result = swift_bridgeObjectRelease();
      *v15 = v23;
      v15[1] = v22;
      v9 = v14;
      v1 = v13;
      v6 = v12;
      v10 = v11;
      *(_BYTE *)(v2[7] + v25) = v24;
      goto LABEL_8;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v27 = (uint64_t *)(v2[6] + 16 * result);
    *v27 = v23;
    v27[1] = v22;
    *(_BYTE *)(v2[7] + result) = v24;
    v28 = v2[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
      goto LABEL_36;
    v2[2] = v30;
LABEL_8:
    v5 = v33;
    v8 = v34;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1C133E058(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  void (*v20)(_QWORD);
  id v21;
  uint64_t v22;
  uint64_t result;
  char *v24;
  char v25;
  _QWORD *v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  _QWORD *v31;
  char v32;
  id v33;
  void *v34;
  id v35;
  _QWORD *v36;
  char v37;
  char v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  void *v46;
  char *v47;
  void *v48;
  _QWORD *v49;
  id v50;
  id v51;
  void *v52;
  void *v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  void *v61;
  char *v62;
  char *v63;
  _QWORD *v64;
  void *v65;
  _QWORD *v66;
  id v67;
  id v68;
  void *v69;
  const char *v70;
  uint64_t v71;
  const char *v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  void (*v83)(_QWORD *, _QWORD *);
  _QWORD *v84;
  unsigned int v85;
  void (*v86)(_QWORD *, _QWORD, _QWORD *);
  _QWORD *v87;
  char *v88;
  id v89;
  id v90;
  uint64_t aBlock;
  uint64_t v92;
  uint64_t (*v93)(uint64_t);
  void *v94;
  uint64_t (*v95)();
  _QWORD *v96;

  v89 = a3;
  v81 = a1;
  v82 = (_QWORD *)a2;
  v74 = sub_1C1426950();
  v79 = *(_QWORD *)(v74 - 8);
  MEMORY[0x1E0C80A78](v74);
  v78 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = sub_1C14269B0();
  v77 = *(_QWORD *)(v80 - 8);
  MEMORY[0x1E0C80A78](v80);
  v76 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DAEB0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C1425774();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (uint64_t)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v88 = (char *)&v70 - v14;
  v15 = (_QWORD *)sub_1C14269F8();
  v16 = *(v15 - 1);
  MEMORY[0x1E0C80A78](v15);
  v18 = (const char **)((char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v75 = v3;
  v19 = *(void **)(v3 + 72);
  *v18 = v19;
  v20 = *(void (**)(_QWORD))(v16 + 104);
  v85 = *MEMORY[0x1E0DEF740];
  v86 = (void (*)(_QWORD *, _QWORD, _QWORD *))v20;
  v20(v18);
  v21 = v19;
  v22 = sub_1C1426A10();
  v83 = *(void (**)(_QWORD *, _QWORD *))(v16 + 8);
  v84 = v18;
  v87 = v15;
  v83(v18, v15);
  if ((v22 & 1) == 0)
  {
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  sub_1C133F868((uint64_t)v89, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_1C132C860((uint64_t)v8, &qword_1EF6DAEB0);
  v16 = v9;
  v24 = v88;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v88, v8, v16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v10 + 104))(v13, *MEMORY[0x1E0C8FB80], v16);
  v25 = sub_1C1425768();
  v22 = *(_QWORD *)(v10 + 8);
  ((void (*)(uint64_t, uint64_t))v22)(v13, v16);
  if ((v25 & 1) == 0)
    return ((uint64_t (*)(char *, uint64_t))v22)(v24, v16);
  v15 = v84;
  *v84 = v21;
  v26 = v87;
  v86(v15, v85, v87);
  v27 = v21;
  v13 = sub_1C1426A10();
  v3 = (uint64_t)v83;
  v83(v15, v26);
  if ((v13 & 1) == 0)
    goto LABEL_29;
  v89 = (id)objc_opt_self();
  v28 = objc_msgSend(v89, sel_standardUserDefaults);
  v72 = "apps-firstPermissionResponse";
  v29 = (void *)sub_1C1426A7C();
  v30 = objc_msgSend(v28, sel_stringArrayForKey_, v29);

  if (v30)
  {
    v13 = sub_1C1426B90();

  }
  else
  {
    v13 = MEMORY[0x1E0DEE9D8];
  }
  *v15 = v27;
  v31 = v87;
  v86(v15, v85, v87);
  v21 = v27;
  swift_bridgeObjectRetain();
  v32 = sub_1C1426A10();
  ((void (*)(_QWORD *, _QWORD *))v3)(v15, v31);
  if ((v32 & 1) == 0)
    goto LABEL_30;
  v73 = v21;
  v33 = objc_msgSend(v89, sel_standardUserDefaults);
  v70 = "apps-secondPermissionResponse";
  v34 = (void *)sub_1C1426A7C();
  v35 = objc_msgSend(v33, sel_stringArrayForKey_, v34);

  v21 = (id)MEMORY[0x1E0DEE9D8];
  if (v35)
  {
    v36 = (_QWORD *)sub_1C1426B90();

  }
  else
  {
    v36 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v3 = v81;
  v15 = v82;
  v37 = sub_1C13311CC(v81, (uint64_t)v82, (_QWORD *)v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if ((v37 & 1) == 0)
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
LABEL_17:
      v39 = v74;
      v41 = *(_QWORD *)(v13 + 16);
      v40 = *(_QWORD *)(v13 + 24);
      v71 = v22;
      if (v41 >= v40 >> 1)
        v13 = (uint64_t)sub_1C136C3E0((_QWORD *)(v40 > 1), v41 + 1, 1, (_QWORD *)v13);
      *(_QWORD *)(v13 + 16) = v41 + 1;
      v42 = v13 + 16 * v41;
      *(_QWORD *)(v42 + 32) = v3;
      *(_QWORD *)(v42 + 40) = v15;
      v43 = v3;
      v44 = v75;
      v45 = (_QWORD *)swift_allocObject();
      v45[2] = v44;
      v45[3] = v43;
      v45[4] = v15;
      v95 = sub_1C133F8B8;
      v96 = v45;
      aBlock = MEMORY[0x1E0C809B0];
      v92 = 1107296256;
      v93 = sub_1C13A7F4C;
      v94 = &block_descriptor_0;
      v46 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      v15 = v76;
      sub_1C1426974();
      v90 = v21;
      v21 = (id)sub_1C133FF24((unint64_t *)&qword_1ED7979D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
      v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A50);
      sub_1C132C820((unint64_t *)&qword_1ED797A60, (uint64_t *)&unk_1ED797A50, MEMORY[0x1E0DEAF38]);
      v47 = v78;
      sub_1C1426DF4();
      MEMORY[0x1C3BAC9D4](0, v15, v47, v46);
      _Block_release(v46);
      (*(void (**)(char *, uint64_t))(v79 + 8))(v47, v39);
      (*(void (**)(_QWORD *, uint64_t))(v77 + 8))(v15, v80);
      swift_release();
      v36 = v84;
      v48 = v73;
      *v84 = v73;
      v49 = v87;
      v86(v36, v85, v87);
      v50 = v48;
      v3 = sub_1C1426A10();
      v83(v36, v49);
      if ((v3 & 1) != 0)
      {
        v51 = objc_msgSend(v89, sel_standardUserDefaults);
        v52 = (void *)sub_1C1426B84();
        v53 = (void *)sub_1C1426A7C();
        objc_msgSend(v51, sel_setObject_forKey_, v52, v53);
        swift_bridgeObjectRelease();

LABEL_26:
        v24 = v88;
        v22 = v71;
        return ((uint64_t (*)(char *, uint64_t))v22)(v24, v16);
      }
      __break(1u);
      goto LABEL_33;
    }
LABEL_31:
    v13 = (uint64_t)sub_1C136C3E0(0, *(_QWORD *)(v13 + 16) + 1, 1, (_QWORD *)v13);
    goto LABEL_17;
  }
  swift_bridgeObjectRelease();
  v38 = sub_1C13311CC(v3, (uint64_t)v15, v36);
  swift_bridgeObjectRelease();
  if ((v38 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(_QWORD, _QWORD))v22)(v24, v16);
  }
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_33:
    v36 = sub_1C136C3E0(0, v36[2] + 1, 1, v36);
  v54 = v74;
  v56 = v36[2];
  v55 = v36[3];
  v71 = v22;
  if (v56 >= v55 >> 1)
    v36 = sub_1C136C3E0((_QWORD *)(v55 > 1), v56 + 1, 1, v36);
  v36[2] = v56 + 1;
  v57 = &v36[2 * v56];
  v57[4] = v3;
  v57[5] = v15;
  v58 = v3;
  v59 = v75;
  v60 = (_QWORD *)swift_allocObject();
  v60[2] = v59;
  v60[3] = v58;
  v60[4] = v15;
  v95 = sub_1C133F8E4;
  v96 = v60;
  aBlock = MEMORY[0x1E0C809B0];
  v92 = 1107296256;
  v93 = sub_1C13A7F4C;
  v94 = &block_descriptor_6;
  v61 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  v62 = v76;
  sub_1C1426974();
  v90 = v21;
  sub_1C133FF24((unint64_t *)&qword_1ED7979D0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A50);
  sub_1C132C820((unint64_t *)&qword_1ED797A60, (uint64_t *)&unk_1ED797A50, MEMORY[0x1E0DEAF38]);
  v63 = v78;
  sub_1C1426DF4();
  MEMORY[0x1C3BAC9D4](0, v62, v63, v61);
  _Block_release(v61);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v63, v54);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v62, v80);
  swift_release();
  v64 = v84;
  v65 = v73;
  *v84 = v73;
  v66 = v87;
  v86(v64, v85, v87);
  v67 = v65;
  LOBYTE(v65) = sub_1C1426A10();
  result = ((uint64_t (*)(_QWORD *, _QWORD *))v83)(v64, v66);
  if ((v65 & 1) != 0)
  {
    v68 = objc_msgSend(v89, sel_standardUserDefaults);
    v69 = (void *)sub_1C1426B84();
    v53 = (void *)sub_1C1426A7C();
    objc_msgSend(v68, sel_setObject_forKey_, v69, v53);
    swift_bridgeObjectRelease();

    goto LABEL_26;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C133EA74(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DAEB8);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6DAC98);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(v7 - 8) + 80);
  v9 = (v8 + 32) & ~v8;
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C1427F50;
  v11 = (_QWORD *)(v10 + v9);
  v12 = v10 + v9 + *(int *)(v7 + 48);
  *v11 = a2;
  v11[1] = a3;
  v13 = *a4;
  v14 = sub_1C142575C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
  swift_bridgeObjectRetain();
  sub_1C13324E8(v10);
  sub_1C14268CC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C133EB6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  uint64_t v12;
  void (*v13)(_QWORD *, uint64_t, uint64_t);
  id v14;
  uint64_t (*v15)(_QWORD *, uint64_t);
  uint64_t result;
  id v17;
  char v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  _QWORD *v23;
  id v24;
  char v25;
  uint64_t v26;
  id v27;
  void *v28;
  id v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  unsigned int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v7 = sub_1C14269F8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(void **)(v3 + 72);
  *v10 = v11;
  v12 = *MEMORY[0x1E0DEF740];
  v13 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v8 + 104);
  v13(v10, v12, v7);
  v14 = v11;
  LOBYTE(v11) = sub_1C1426A10();
  v15 = *(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8);
  result = v15(v10, v7);
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  v42 = a2;
  *v10 = v14;
  v13(v10, v12, v7);
  v17 = v14;
  v18 = sub_1C1426A10();
  result = v15(v10, v7);
  if ((v18 & 1) == 0)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    return result;
  }
  v40 = a3;
  v41 = a1;
  v19 = (void *)objc_opt_self();
  v20 = objc_msgSend(v19, sel_standardUserDefaults);
  v21 = (void *)sub_1C1426A7C();
  v22 = objc_msgSend(v20, sel_stringArrayForKey_, v21);

  if (v22)
  {
    v23 = (_QWORD *)sub_1C1426B90();

  }
  else
  {
    v23 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  *v10 = v17;
  v13(v10, v12, v7);
  v24 = v17;
  v25 = sub_1C1426A10();
  result = v15(v10, v7);
  v26 = v41;
  if ((v25 & 1) == 0)
    goto LABEL_19;
  v27 = objc_msgSend(v19, sel_standardUserDefaults);
  v28 = (void *)sub_1C1426A7C();
  v29 = objc_msgSend(v27, sel_stringArrayForKey_, v28);

  if (v29)
  {
    v30 = (_QWORD *)sub_1C1426B90();

  }
  else
  {
    v30 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v31 = v40;
  v32 = v42;
  v33 = sub_1C13311CC(v26, v42, v23);
  swift_bridgeObjectRelease();
  if ((v33 & 1) != 0)
  {
    v34 = sub_1C13311CC(v26, v32, v30);
    swift_bridgeObjectRelease();
    v35 = sub_1C142575C();
    if ((v34 & 1) != 0)
      v36 = (unsigned int *)MEMORY[0x1E0C8FB48];
    else
      v36 = (unsigned int *)MEMORY[0x1E0C8FB58];
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v35 - 8) + 104))(v31, *v36, v35);
  }
  else
  {
    v37 = *MEMORY[0x1E0C8FB50];
    v38 = sub_1C142575C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 104))(v31, v37, v38);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C133EEA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  id v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  unsigned int *v19;
  id v20;
  id v21;
  unsigned int *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  unsigned __int8 v26;
  uint64_t v27;

  v7 = sub_1C14269F8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(void **)(v3 + 72);
  *v10 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF740], v7);
  v12 = v11;
  LOBYTE(v11) = sub_1C1426A10();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  v14 = sub_1C133DB4C();
  if (*(_QWORD *)(v14 + 16))
  {
    swift_bridgeObjectRetain();
    v15 = sub_1C13277A0(a1, a2);
    if ((v16 & 1) != 0)
    {
      v17 = *(_BYTE *)(*(_QWORD *)(v14 + 56) + v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = sub_1C1426788();
      if ((v17 & 1) != 0)
        v19 = (unsigned int *)MEMORY[0x1E0D8D378];
      else
        v19 = (unsigned int *)MEMORY[0x1E0D8D370];
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 104))(a3, *v19, v18);
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v20 = objc_allocWithZone(MEMORY[0x1E0CA5870]);
  swift_bridgeObjectRetain();
  v21 = sub_1C13278E4(a1, a2, 0);
  v25 = v21;
  if (v21
    && (v26 = objc_msgSend(v21, sel_supportsLiveActivitiesFrequentUpdates),
        v25,
        (v26 & 1) != 0))
  {
    v22 = (unsigned int *)MEMORY[0x1E0D8D378];
  }
  else
  {
    v22 = (unsigned int *)MEMORY[0x1E0D8D370];
  }
  v23 = *v22;
  v24 = sub_1C1426788();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(a3, v23, v24);
}

uint64_t sub_1C133F088@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  os_log_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v31[12];
  int v32;
  os_log_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;

  v37 = a3;
  v36 = a1;
  v4 = sub_1C142671C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v38 = &v31[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1C1426788();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = &v31[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v9);
  v13 = &v31[-v12];
  v14 = sub_1C14266EC();
  sub_1C133EEA0(v14, v15, (uint64_t)v13);
  swift_bridgeObjectRelease();
  if (qword_1ED791EA8 != -1)
    swift_once();
  v16 = sub_1C1426854();
  __swift_project_value_buffer(v16, (uint64_t)qword_1ED798520);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v38, a2, v4);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v11, v13, v7);
  v17 = sub_1C1426848();
  v18 = sub_1C1426C80();
  v19 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    v20 = swift_slowAlloc();
    v36 = v7;
    v33 = v17;
    v21 = v20;
    v34 = swift_slowAlloc();
    v40 = v34;
    *(_DWORD *)v21 = 136380931;
    v35 = v13;
    v22 = v38;
    v32 = v19;
    v23 = sub_1C14266EC();
    v39 = sub_1C132AD90(v23, v24, &v40);
    sub_1C1426DB8();
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v22, v4);
    *(_WORD *)(v21 + 12) = 2082;
    sub_1C133FF24(&qword_1EF6DAEA8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8D388], MEMORY[0x1E0D8D398]);
    v25 = sub_1C1427058();
    v39 = sub_1C132AD90(v25, v26, &v40);
    v13 = v35;
    sub_1C1426DB8();
    swift_bridgeObjectRelease();
    v7 = v36;
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v36);
    v27 = v33;
    _os_log_impl(&dword_1C1324000, v33, (os_log_type_t)v32, "AuthorizationManager thinks %{private}s should have level %{public}s, privacy: .public)", (uint8_t *)v21, 0x16u);
    v28 = v34;
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v28, -1, -1);
    MEMORY[0x1C3BAD3F4](v21, -1, -1);

  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v38, v4);
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);

  }
  v29 = v37;
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v8 + 32))(v37, v13, v7);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v29, 0, 1, v7);
}

uint64_t sub_1C133F3E4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DAEA0);
  return sub_1C1426CEC();
}

uint64_t sub_1C133F444()
{
  return sub_1C1339240();
}

unint64_t sub_1C133F464@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void (*v12)(_QWORD);
  id v13;
  uint64_t (*v14)(_QWORD *, uint64_t);
  unint64_t result;
  void *v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  char v23;
  id v24;
  void *v25;
  id v26;
  uint64_t v27;
  unint64_t *v28;
  unsigned int v29;
  void (*v30)(_QWORD *, _QWORD, uint64_t);

  v4 = sub_1C14269F8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (unint64_t **)((char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793A60);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1428080;
  *(_QWORD *)(inited + 32) = 0xD000000000000012;
  *(_QWORD *)(inited + 40) = 0x80000001C142C9D0;
  v9 = sub_1C133DB4C();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7979E8);
  *(_QWORD *)(inited + 48) = v9;
  *(_QWORD *)(inited + 72) = v10;
  *(_QWORD *)(inited + 80) = 0xD000000000000013;
  *(_QWORD *)(inited + 88) = 0x80000001C142C9F0;
  *(_QWORD *)(inited + 96) = sub_1C133DB4C();
  *(_QWORD *)(inited + 120) = v10;
  *(_QWORD *)(inited + 128) = 0xD00000000000001CLL;
  *(_QWORD *)(inited + 136) = 0x80000001C142CA10;
  v11 = *(void **)(a1 + 72);
  *v7 = v11;
  v12 = *(void (**)(_QWORD))(v5 + 104);
  v29 = *MEMORY[0x1E0DEF740];
  v30 = (void (*)(_QWORD *, _QWORD, uint64_t))v12;
  v12(v7);
  v13 = v11;
  LOBYTE(v11) = sub_1C1426A10();
  v14 = *(uint64_t (**)(_QWORD *, uint64_t))(v5 + 8);
  result = v14(v7, v4);
  if ((v11 & 1) == 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    return result;
  }
  v28 = a2;
  v16 = (void *)objc_opt_self();
  v17 = objc_msgSend(v16, sel_standardUserDefaults);
  v18 = (void *)sub_1C1426A7C();
  v19 = objc_msgSend(v17, sel_stringArrayForKey_, v18);

  if (v19)
  {
    v20 = sub_1C1426B90();

  }
  else
  {
    v20 = MEMORY[0x1E0DEE9D8];
  }
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797A68);
  *(_QWORD *)(inited + 144) = v20;
  *(_QWORD *)(inited + 168) = v21;
  *(_QWORD *)(inited + 176) = 0xD00000000000001DLL;
  *(_QWORD *)(inited + 184) = 0x80000001C142CA50;
  *v7 = v13;
  v30(v7, v29, v4);
  v22 = v13;
  v23 = sub_1C1426A10();
  result = v14(v7, v4);
  if ((v23 & 1) == 0)
    goto LABEL_11;
  v24 = objc_msgSend(v16, sel_standardUserDefaults);
  v25 = (void *)sub_1C1426A7C();
  v26 = objc_msgSend(v24, sel_stringArrayForKey_, v25);

  if (v26)
  {
    v27 = sub_1C1426B90();

  }
  else
  {
    v27 = MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)(inited + 216) = v21;
  *(_QWORD *)(inited + 192) = v27;
  result = sub_1C133204C(inited);
  *v28 = result;
  return result;
}

uint64_t sub_1C133F7B0()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7979F0);
  sub_1C1426CEC();
  return v1;
}

uint64_t sub_1C133F80C(uint64_t a1, uint64_t a2)
{
  return sub_1C133FF24((unint64_t *)&unk_1ED792740, a2, (uint64_t (*)(uint64_t))type metadata accessor for AuthorizationManager, (uint64_t)&unk_1C1428148);
}

uint64_t sub_1C133F838@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1C133F088(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_1C133F850@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1C133F464(v1, a1);
}

uint64_t sub_1C133F868(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DAEB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C133F8B0()
{
  return objectdestroyTm();
}

uint64_t sub_1C133F8B8()
{
  uint64_t *v0;

  return sub_1C133EA74(v0[2], v0[3], v0[4], MEMORY[0x1E0C8FB50]);
}

uint64_t sub_1C133F8DC()
{
  return objectdestroyTm();
}

uint64_t sub_1C133F8E4()
{
  uint64_t *v0;

  return sub_1C133EA74(v0[2], v0[3], v0[4], MEMORY[0x1E0C8FB58]);
}

uint64_t sub_1C133F908()
{
  return swift_release();
}

_QWORD *sub_1C133F910(_QWORD *a1)
{
  return sub_1C136C3E0(0, a1[2], 0, a1);
}

uint64_t sub_1C133F924()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C133F950()
{
  return sub_1C133D998();
}

uint64_t sub_1C133F958()
{
  return sub_1C133CE00();
}

uint64_t sub_1C133F970()
{
  return objectdestroyTm();
}

uint64_t sub_1C133F978()
{
  uint64_t *v0;

  return sub_1C133CD74(v0[2], v0[3], v0[4]);
}

uint64_t sub_1C133F984()
{
  return objectdestroyTm();
}

uint64_t sub_1C133F98C()
{
  uint64_t v0;

  return sub_1C133C478(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t sub_1C133F99C()
{
  return objectdestroyTm();
}

uint64_t sub_1C133F9A4()
{
  uint64_t v0;

  return sub_1C133C50C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t sub_1C133F9B4()
{
  return objectdestroyTm();
}

uint64_t sub_1C133F9BC()
{
  return objectdestroyTm();
}

uint64_t objectdestroyTm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C133F9FC()
{
  uint64_t v0;

  return sub_1C133B768(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t sub_1C133FA1C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1C133FA40()
{
  return sub_1C133B7FC();
}

unint64_t sub_1C133FA4C()
{
  unint64_t result;

  result = qword_1ED7932D8;
  if (!qword_1ED7932D8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED7932D8);
  }
  return result;
}

uint64_t sub_1C133FA88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1C133DB4C();
  *a1 = result;
  return result;
}

unint64_t sub_1C133FAC8()
{
  return sub_1C133A728();
}

uint64_t sub_1C133FAD4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;

  v2 = sub_1C1425210();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793198);
    v10 = sub_1C1426EF0();
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v28 = v9;
    v29 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v32 = v10 + 56;
    while (1)
    {
      v30 = v11;
      v31(v8, v29 + v13 * v11, v2);
      sub_1C133FF24(&qword_1ED791E40, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D0]);
      v14 = sub_1C1426A4C();
      v15 = ~(-1 << *(_BYTE *)(v10 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v31(v6, *(_QWORD *)(v10 + 48) + v16 * v13, v2);
          sub_1C133FF24(&qword_1EF6DAED8, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D8]);
          v20 = sub_1C1426A70();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v6, v2);
          if ((v20 & 1) != 0)
          {
            v22(v8, v2);
            v3 = v21;
            v9 = v28;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v9 = v28;
      }
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v16 * v13, v8, v2);
      v24 = *(_QWORD *)(v10 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        break;
      *(_QWORD *)(v10 + 16) = v26;
LABEL_4:
      v11 = v30 + 1;
      if (v30 + 1 == v9)
        return v10;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E8];
  }
  return result;
}

uint64_t sub_1C133FD44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C1425A08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C133FD88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1C1425A80();
  sub_1C133EB6C(v2, v3, a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C133FDDC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C1425A08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C133FE18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DAEB0) - 8) + 80);
  v2 = (v1 + 48) & ~v1;
  swift_release();
  swift_bridgeObjectRelease();
  v3 = sub_1C1425774();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  return swift_deallocObject();
}

uint64_t sub_1C133FEC0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DAEB0) - 8) + 80);
  return sub_1C133AD2C(*(_BYTE *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), (void *)(v0 + ((v1 + 48) & ~v1)));
}

uint64_t sub_1C133FF0C()
{
  return swift_deallocObject();
}

uint64_t sub_1C133FF1C()
{
  uint64_t v0;

  return sub_1C137B438(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1C133FF24(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x1C3BAD334](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C133FFC8()
{
  uint64_t v0;
  uint64_t v1;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935C8);
  __swift_allocate_value_buffer(v0, qword_1ED793668);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED793668);
  sub_1C1340014(v1);
}

void sub_1C1340014(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  unsigned int v16;
  void (*v17)(char *, uint64_t);
  id v18;
  id v19;
  void *v20;
  id v21;
  void (*v22)(char *, uint64_t);
  id v23;
  void *v24;
  uint64_t v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  id v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  void *v48;
  void *v49;
  uint64_t v50;
  unint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60[2];

  v60[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = sub_1C14250B4();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v53 - v7;
  v9 = (void *)objc_opt_self();
  v10 = objc_msgSend(v9, sel_defaultManager);
  v60[0] = 0;
  v11 = objc_msgSend(v10, sel_URLForDirectory_inDomain_appropriateForURL_create_error_, 5, 1, 0, 1, v60);

  v12 = v60[0];
  if (v11)
  {
    sub_1C14250A8();
    v13 = v12;

    sub_1C142509C();
    v14 = objc_msgSend(v9, sel_defaultManager);
    v15 = (void *)sub_1C1425090();
    v60[0] = 0;
    v16 = objc_msgSend(v14, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v15, 1, 0, v60);

    if (v16)
    {
      v17 = *(void (**)(char *, uint64_t))(v3 + 8);
      v18 = v60[0];
      v17(v8, v2);
      (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v6, v2);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(a1, 0, 1, v2);
      return;
    }
    v21 = v60[0];
    v20 = (void *)sub_1C1425078();

    swift_willThrow();
    v22 = *(void (**)(char *, uint64_t))(v3 + 8);
    v22(v6, v2);
    v22(v8, v2);
  }
  else
  {
    v19 = v60[0];
    v20 = (void *)sub_1C1425078();

    swift_willThrow();
  }
  v60[0] = v20;
  v23 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797BA0);
  sub_1C1330EEC(0, &qword_1EF6DAF50);
  if (swift_dynamicCast())
  {

    v24 = (void *)v58;
    if (qword_1ED7939A0 != -1)
      swift_once();
    v25 = sub_1C1426854();
    __swift_project_value_buffer(v25, (uint64_t)qword_1ED7986C8);
    v26 = v24;
    v27 = sub_1C1426848();
    v28 = sub_1C1426C74();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc();
      v54 = swift_slowAlloc();
      v59 = v54;
      *(_DWORD *)v29 = 136446722;
      v30 = objc_msgSend(v26, sel_domain);
      v56 = v3;
      v31 = v30;
      v32 = sub_1C1426A88();
      v55 = a1;
      v33 = v32;
      v35 = v34;

      v57 = sub_1C132AD90(v33, v35, &v59);
      sub_1C1426DB8();

      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2050;
      v36 = objc_msgSend(v26, sel_code);

      v57 = (uint64_t)v36;
      sub_1C1426DB8();

      *(_WORD *)(v29 + 22) = 2082;
      v37 = objc_msgSend(v26, sel_localizedDescription);
      v38 = sub_1C1426A88();
      v40 = v39;

      v57 = sub_1C132AD90(v38, v40, &v59);
      sub_1C1426DB8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1324000, v27, v28, "Couldn't access path: (%{public}s: %{public}ld): %{public}s", (uint8_t *)v29, 0x20u);
      v41 = v54;
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v41, -1, -1);
      MEMORY[0x1C3BAD3F4](v29, -1, -1);

      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 56))(v55, 1, 1, v2);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, 1, 1, v2);
    }

  }
  else
  {

    if (qword_1ED7939A0 != -1)
      swift_once();
    v42 = sub_1C1426854();
    __swift_project_value_buffer(v42, (uint64_t)qword_1ED7986C8);
    v43 = v20;
    v44 = v20;
    v45 = sub_1C1426848();
    v46 = sub_1C1426C74();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc();
      v48 = (void *)swift_slowAlloc();
      v56 = v3;
      v49 = v48;
      v60[0] = v48;
      *(_DWORD *)v47 = 136446210;
      swift_getErrorValue();
      v50 = sub_1C1427088();
      v58 = sub_1C132AD90(v50, v51, (uint64_t *)v60);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C1324000, v45, v46, "Couldn't access path: %{public}s", v47, 0xCu);
      swift_arrayDestroy();
      v52 = v49;
      v3 = v56;
      MEMORY[0x1C3BAD3F4](v52, -1, -1);
      MEMORY[0x1C3BAD3F4](v47, -1, -1);

    }
    else
    {

    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(a1, 1, 1, v2);
  }
}

_QWORD *sub_1C1340710(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _DWORD *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v29[2];
  uint64_t v30;

  v3 = v1;
  v29[1] = *v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793B68);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C1425288();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UnfairLock();
  v12 = swift_allocObject();
  v13 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v12 + 16) = v13;
  *v13 = 0;
  v3[12] = v12;
  sub_1C14252AC();
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v30 = a1;
  v14(v11, a1, v8);
  if (qword_1ED795398 != -1)
    swift_once();
  v15 = sub_1C1425318();
  v16 = __swift_project_value_buffer(v15, (uint64_t)qword_1ED795380);
  v17 = *(_QWORD *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v7, v16, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v7, 0, 1, v15);
  v18 = sub_1C14252A0();
  if (v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v30, v8);
    swift_release();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v3[2] = v18;
    type metadata accessor for ActivityDatabase.PushSubscriptionStore();
    v19 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    v3[3] = v19;
    type metadata accessor for ActivityDatabase.PushTokenStore();
    v20 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    v3[4] = v20;
    type metadata accessor for ActivityDatabase.PublicTokenStore();
    v21 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    v3[5] = v21;
    type metadata accessor for ActivityDatabase.PushBudgetStore();
    v22 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    v3[6] = v22;
    type metadata accessor for ActivityDatabase.ActivityStore();
    v23 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    v3[7] = v23;
    type metadata accessor for ActivityDatabase.SyncEngineRecordMetadataStore();
    v24 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    v3[8] = v24;
    type metadata accessor for ActivityDatabase.SyncEnginePairedDeviceIdentifierStore();
    v25 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    v3[9] = v25;
    type metadata accessor for ActivityDatabase.SyncEngineRecordIDSyncDateStore();
    v26 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    v3[10] = v26;
    type metadata accessor for ActivityDatabase.AssertionStore();
    v27 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v30, v8);
    v3[11] = v27;
  }
  return v3;
}

uint64_t sub_1C1340A90()
{
  uint64_t v0;

  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  sub_1C1425270();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1C1340BA0()
{
  sub_1C1340A90();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ActivityDatabase()
{
  return objc_opt_self();
}

uint64_t sub_1C1340BE0()
{
  uint64_t v0;

  v0 = sub_1C1425318();
  __swift_allocate_value_buffer(v0, qword_1ED795380);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED795380);
  return sub_1C142530C();
}

uint64_t sub_1C1340C34(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  void (*v37)(char *, uint64_t);
  char *v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;

  v2 = sub_1C14252E8();
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1C1425300();
  v4 = *(_QWORD *)(v3 - 8);
  v41 = v3;
  v42 = v4;
  v5 = MEMORY[0x1E0C80A78](v3);
  v53 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v54 = (char *)&v40 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v47 = (char *)&v40 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v48 = (char *)&v40 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v49 = (char *)&v40 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v50 = (char *)&v40 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v51 = (char *)&v40 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v40 - v20;
  MEMORY[0x1E0C80A78](v19);
  v52 = (char *)&v40 - v22;
  v45 = *a1;
  sub_1C14252DC();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252F4();
  sub_1C14252DC();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  v46 = v21;
  sub_1C14252F4();
  sub_1C14252DC();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252F4();
  sub_1C14252DC();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  v43 = 0xD000000000000024;
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252F4();
  sub_1C14252DC();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252F4();
  sub_1C14252DC();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252F4();
  sub_1C14252DC();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252F4();
  sub_1C14252DC();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252F4();
  sub_1C14252DC();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252F4();
  v23 = v44;
  sub_1C1425294();
  if (v23)
  {
    v24 = v41;
    v26 = v46;
    v25 = v47;
    v28 = v50;
    v27 = v51;
    v30 = v48;
    v29 = v49;
    v37 = *(void (**)(char *, uint64_t))(v42 + 8);
    v37(v53, v41);
    v37(v54, v24);
    v37(v25, v24);
    v37(v30, v24);
    v37(v29, v24);
    v37(v28, v24);
    v37(v27, v24);
    v38 = v26;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1C1425294();
    v31 = v47;
    v32 = v48;
    v33 = v42;
    swift_bridgeObjectRelease();
    v34 = v51;
    sub_1C1425294();
    v36 = v49;
    v35 = v50;
    swift_bridgeObjectRelease();
    sub_1C1425294();
    swift_bridgeObjectRelease();
    sub_1C1425294();
    swift_bridgeObjectRelease();
    sub_1C1425294();
    swift_bridgeObjectRelease();
    sub_1C1425294();
    swift_bridgeObjectRelease();
    sub_1C1425294();
    swift_bridgeObjectRelease();
    sub_1C1425294();
    swift_bridgeObjectRelease();
    v37 = *(void (**)(char *, uint64_t))(v33 + 8);
    v24 = v41;
    v37(v53, v41);
    v37(v54, v24);
    v37(v31, v24);
    v37(v32, v24);
    v37(v36, v24);
    v37(v35, v24);
    v37(v34, v24);
    v38 = v46;
  }
  v37(v38, v24);
  return ((uint64_t (*)(char *, uint64_t))v37)(v52, v24);
}

uint64_t sub_1C1341CC8()
{
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  return swift_weakAssign();
}

uint64_t sub_1C1341D64()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1C1341DC0()
{
  sub_1C1341D64();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ActivityDatabase.MutableStore()
{
  return objc_opt_self();
}

uint64_t sub_1C1341E00(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  a1(a3);
  return 1;
}

uint64_t sub_1C1341E2C()
{
  swift_weakDestroy();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ActivityDatabase.DatabaseAccessor()
{
  return objc_opt_self();
}

uint64_t sub_1C1341E70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v1 = sub_1C14252E8();
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1C1425300();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C14252DC();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252F4();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v7 = Strong;
    v8 = sub_1C1425294();
    if (v0)
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      swift_release();
    }
    else
    {
      v9 = v8;
      swift_release();
      v7 = sub_1C134BFD0(v9, (uint64_t *)&unk_1ED7978C0, (uint64_t (*)(_QWORD))MEMORY[0x1E0D8CF30], (void (*)(_QWORD))sub_1C13421CC, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_1C136C5F8);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      swift_bridgeObjectRelease();
    }
    return v7;
  }
  else
  {
    result = sub_1C1426F8C();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C13421CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  int v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  unint64_t *v30;
  unint64_t v31;
  unsigned int *v32;
  unint64_t v33;
  _QWORD v35[2];
  unint64_t v36;
  char *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;

  v3 = sub_1C14267DC();
  v42 = *(_QWORD *)(v3 - 8);
  v43 = v3;
  MEMORY[0x1E0C80A78](v3);
  v45 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C142626C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v41 = (_QWORD *)((char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_1C1426320();
  v52 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v44 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C142671C();
  v11 = *(_QWORD *)(v10 - 8);
  v46 = v10;
  v47 = v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)v35 - v15;
  sub_1C1425330();
  if (!v51)
    goto LABEL_44;
  v48 = v8;
  v49 = a1;
  sub_1C1425330();
  if ((v51 & 1) != 0 || (v40 = v1, v17 = v50, sub_1C1425330(), v51 == 1))
  {
LABEL_19:
    swift_bridgeObjectRelease();
    v22 = 1;
    a1 = v49;
    goto LABEL_20;
  }
  sub_1C1425330();
  v35[1] = v50;
  v38 = v51;
  sub_1C1425330();
  v36 = v50;
  v37 = v16;
  v39 = v51;
  sub_1C1426704();
  sub_1C1425330();
  v18 = v51;
  v35[0] = v50;
  if (v17 == 1)
    v19 = 1;
  else
    v19 = 2;
  if (v17)
    v20 = v19;
  else
    v20 = 0;
  sub_1C1425330();
  v21 = v50;
  if (v51 & 1 | (v50 > 2))
    v21 = 3;
  if (v20 == 2)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v37, v46);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  if (!v20)
  {
    a1 = v49;
    if (v51 & 1 | (v50 > 2))
    {
      (*(void (**)(char *, uint64_t))(v47 + 8))(v37, v46);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_16:
      swift_bridgeObjectRelease();
LABEL_17:
      v22 = 1;
LABEL_20:
      v8 = v48;
LABEL_45:
      v23 = v52;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(a1, v22, 1, v8);
    }
    if (!v21)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v28 = v37;
      if (!v38)
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v37, v46);
        goto LABEL_17;
      }
      v29 = v46;
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v14, v37, v46);
      (*(void (**)(unint64_t *, _QWORD, uint64_t))(v6 + 104))(v41, *MEMORY[0x1E0D8CEA8], v5);
      (*(void (**)(char *, _QWORD, uint64_t))(v42 + 104))(v45, *MEMORY[0x1E0D8D3D0], v43);
      v27 = v44;
      sub_1C14262CC();
      v8 = v48;
      goto LABEL_36;
    }
    v28 = v37;
    if (v21 == 1)
    {
      swift_bridgeObjectRelease();
      if (!v39)
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v28, v46);
        goto LABEL_16;
      }
      v8 = v48;
      v29 = v46;
      if (v38)
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v14, v28, v46);
        v30 = v41;
        v31 = v39;
        *v41 = v36;
        v30[1] = v31;
        v32 = (unsigned int *)MEMORY[0x1E0D8CE98];
LABEL_35:
        (*(void (**)(unint64_t *, _QWORD, uint64_t))(v6 + 104))(v30, *v32, v5);
        (*(void (**)(char *, _QWORD, uint64_t))(v42 + 104))(v45, *MEMORY[0x1E0D8D3D0], v43);
        v27 = v44;
        sub_1C14262CC();
LABEL_36:
        v23 = v52;
        goto LABEL_37;
      }
      (*(void (**)(char *, uint64_t))(v47 + 8))(v28, v46);
    }
    else
    {
      if (!v18)
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v37, v46);
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      v8 = v48;
      if (v39 && v38)
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v14, v37, v46);
        v30 = v41;
        v33 = v39;
        *v41 = v36;
        v30[1] = v33;
        v30[2] = v35[0];
        v30[3] = v18;
        v29 = v46;
        v32 = (unsigned int *)MEMORY[0x1E0D8CEA0];
        goto LABEL_35;
      }
      (*(void (**)(char *, uint64_t))(v47 + 8))(v37, v46);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
LABEL_44:
    v22 = 1;
    goto LABEL_45;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1 = v49;
  v23 = v52;
  if (v39)
  {
    v25 = v42;
    v24 = v43;
    v26 = v45;
    (*(void (**)(char *, _QWORD, uint64_t))(v42 + 104))(v45, *MEMORY[0x1E0D8D3D0], v43);
    v27 = v44;
    v28 = v37;
    sub_1C142623C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v24);
    v8 = v48;
    v29 = v46;
LABEL_37:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v28, v29);
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v27, v8);
    v22 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(a1, v22, 1, v8);
  }
  (*(void (**)(char *, uint64_t))(v47 + 8))(v37, v46);
  v22 = 1;
  v8 = v48;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56))(a1, v22, 1, v8);
}

uint64_t type metadata accessor for ActivityDatabase.PushSubscriptionStore()
{
  return objc_opt_self();
}

uint64_t sub_1C13428F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  int v18;
  int v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  _BOOL8 v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  char *v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  _BOOL8 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v70 = a1;
  v2 = sub_1C142671C();
  v56 = *(_QWORD *)(v2 - 8);
  v57 = v2;
  MEMORY[0x1E0C80A78](v2);
  v55 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C14252E8();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1C1425300();
  v60 = *(_QWORD *)(v5 - 8);
  v61 = v5;
  MEMORY[0x1E0C80A78](v5);
  v59 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C142626C();
  v52 = *(_QWORD *)(v7 - 8);
  v53 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_1C1426284();
  v10 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1C1426290();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = v1 + 16;
  if (!swift_weakLoadStrong())
    goto LABEL_33;
  v17 = sub_1C1425264();
  swift_release();
  if ((v17 & 1) == 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  sub_1C14262C0();
  v18 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v16, v13);
  v19 = *MEMORY[0x1E0D8CE88];
  v54 = v18;
  if (v18 == v19)
  {
    (*(void (**)(char *, uint64_t))(v14 + 96))(v16, v13);
    swift_bridgeObjectRelease();
    v20 = 0;
    v53 = 3;
  }
  else
  {
    if (v18 != *MEMORY[0x1E0D8CEC8])
      goto LABEL_29;
    (*(void (**)(char *, uint64_t))(v14 + 96))(v16, v13);
    v21 = v51;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v16, v51);
    v20 = sub_1C1426278();
    sub_1C1426260();
    v23 = v52;
    v22 = v53;
    v24 = (*(uint64_t (**)(char *, uint64_t))(v52 + 88))(v9, v53);
    if (v24 == *MEMORY[0x1E0D8CE98])
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v21);
      (*(void (**)(char *, uint64_t))(v23 + 96))(v9, v22);
      swift_bridgeObjectRelease();
      v53 = 1;
    }
    else if (v24 == *MEMORY[0x1E0D8CEA0])
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v21);
      (*(void (**)(char *, uint64_t))(v23 + 96))(v9, v22);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v53 = 2;
    }
    else
    {
      if (v24 != *MEMORY[0x1E0D8CEA8])
        goto LABEL_29;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v21);
      v53 = 0;
    }
  }
  sub_1C14252DC();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  v25 = sub_1C14262E4();
  v26 = MEMORY[0x1E0DEA968];
  v27 = MEMORY[0x1E0D8D4B0];
  v68 = MEMORY[0x1E0DEA968];
  v69 = MEMORY[0x1E0D8D4B0];
  v66 = v25;
  v67 = v28;
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
  sub_1C14252D0();
  v29 = sub_1C14262D8();
  if (v30)
  {
    v64 = v26;
    v65 = v27;
    *(_QWORD *)&v63 = v29;
    *((_QWORD *)&v63 + 1) = v30;
    sub_1C1339184(&v63, (uint64_t)&v66);
  }
  else
  {
    v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E38]), sel_init);
    v68 = sub_1C1330EEC(0, &qword_1ED797AB0);
    v69 = MEMORY[0x1E0D8D4C0];
    v66 = (_BOOL8)v31;
  }
  v32 = v20 & 1;
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
  sub_1C14252D0();
  v33 = sub_1C14262A8();
  if (v34)
  {
    v64 = v26;
    v65 = v27;
    *(_QWORD *)&v63 = v33;
    *((_QWORD *)&v63 + 1) = v34;
    sub_1C1339184(&v63, (uint64_t)&v66);
  }
  else
  {
    v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E38]), sel_init);
    v68 = sub_1C1330EEC(0, &qword_1ED797AB0);
    v69 = MEMORY[0x1E0D8D4C0];
    v66 = (_BOOL8)v35;
  }
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
  sub_1C14252D0();
  v36 = v55;
  sub_1C14262FC();
  v37 = sub_1C1426710();
  v39 = v38;
  (*(void (**)(char *, uint64_t))(v56 + 8))(v36, v57);
  v68 = v26;
  v69 = v27;
  v66 = v37;
  v67 = v39;
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
  sub_1C14252D0();
  v40 = sub_1C1426308();
  if (v41)
  {
    v64 = v26;
    v65 = v27;
    *(_QWORD *)&v63 = v40;
    *((_QWORD *)&v63 + 1) = v41;
    sub_1C1339184(&v63, (uint64_t)&v66);
  }
  else
  {
    v42 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E38]), sel_init);
    v68 = sub_1C1330EEC(0, &qword_1ED797AB0);
    v69 = MEMORY[0x1E0D8D4C0];
    v66 = (_BOOL8)v42;
  }
  v43 = v54;
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
  sub_1C14252D0();
  v44 = MEMORY[0x1E0DEDC60];
  v45 = MEMORY[0x1E0D8D4C8];
  v68 = MEMORY[0x1E0DEDC60];
  v69 = MEMORY[0x1E0D8D4C8];
  v66 = v32;
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
  sub_1C14252D0();
  v68 = v44;
  v69 = v45;
  v66 = v43 == v19;
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
  sub_1C14252D0();
  if (v43 == v19)
  {
    v46 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E38]), sel_init);
    v68 = sub_1C1330EEC(0, &qword_1ED797AB0);
    v69 = MEMORY[0x1E0D8D4C0];
    v66 = (_BOOL8)v46;
  }
  else
  {
    v64 = v44;
    v65 = v45;
    *(_QWORD *)&v63 = v53;
    sub_1C1339184(&v63, (uint64_t)&v66);
  }
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v66);
  sub_1C14252D0();
  v47 = v59;
  sub_1C14252F4();
  if (!swift_weakLoadStrong())
  {
LABEL_33:
    while (1)
    {
LABEL_29:
      sub_1C1426F8C();
      __break(1u);
    }
  }
  v48 = v62;
  sub_1C1425294();
  if (v48)
  {
    (*(void (**)(char *, uint64_t))(v60 + 8))(v47, v61);
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v47, v61);
  }
}

uint64_t sub_1C1343288(uint64_t a1, uint64_t a2)
{
  return sub_1C1348DA8(a1, a2, (uint64_t)"PushSubscriptions", 17, (uint64_t)"activityIdentifier", 18);
}

uint64_t type metadata accessor for ActivityDatabase.MutablePushSubscriptionStore()
{
  return objc_opt_self();
}

uint64_t sub_1C13432D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v1 = sub_1C14252E8();
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1C1425300();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C14252DC();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252F4();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v7 = Strong;
    v8 = sub_1C1425294();
    if (v0)
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      swift_release();
    }
    else
    {
      v9 = v8;
      swift_release();
      v7 = sub_1C134B700(v9);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      swift_bridgeObjectRelease();
    }
    return v7;
  }
  else
  {
    result = sub_1C1426F8C();
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for ActivityDatabase.PushTokenStore()
{
  return objc_opt_self();
}

uint64_t sub_1C13436A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t result;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B60);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C14252E8();
  MEMORY[0x1E0C80A78](v4);
  v25 = sub_1C1425300();
  v5 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!swift_weakLoadStrong())
    goto LABEL_12;
  v8 = sub_1C1425264();
  swift_release();
  if ((v8 & 1) == 0)
  {
    __break(1u);
LABEL_12:
    result = sub_1C1426F8C();
    __break(1u);
    return result;
  }
  sub_1C14252DC();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  v9 = sub_1C1426470();
  v23 = MEMORY[0x1E0DEA968];
  v24 = MEMORY[0x1E0D8D4B0];
  v21 = v9;
  v22 = v10;
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  sub_1C14252D0();
  v11 = sub_1C142647C();
  v23 = MEMORY[0x1E0CB0338];
  v24 = MEMORY[0x1E0D8D400];
  v21 = v11;
  v22 = v12;
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  sub_1C14252D0();
  sub_1C1426458();
  v13 = sub_1C14251B0();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v3, 1, v13) == 1)
  {
    sub_1C132C860((uint64_t)v3, &qword_1ED793B60);
    v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E38]), sel_init);
    v23 = sub_1C1330EEC(0, &qword_1ED797AB0);
    v24 = MEMORY[0x1E0D8D4C0];
    v21 = (uint64_t)v15;
  }
  else
  {
    sub_1C14250FC();
    v19 = MEMORY[0x1E0DEB070];
    v20 = MEMORY[0x1E0D8D4B8];
    *(_QWORD *)&v18 = v16;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v3, v13);
    sub_1C1339184(&v18, (uint64_t)&v21);
  }
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252F4();
  if (!swift_weakLoadStrong())
    goto LABEL_12;
  sub_1C1425294();
  if (v0)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v25);
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v25);
  }
}

uint64_t sub_1C1343BD8(uint64_t a1, uint64_t a2)
{
  return sub_1C1348DA8(a1, a2, (uint64_t)"PushTokens", 10, (uint64_t)"subscriptionIdentifier", 22);
}

uint64_t sub_1C1343C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v22 = a3;
  v17 = a1;
  v5 = sub_1C14252E8();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1C1425300();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!swift_weakLoadStrong())
    goto LABEL_9;
  v10 = sub_1C1425264();
  swift_release();
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1C14252DC();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  v11 = MEMORY[0x1E0DEA968];
  v12 = MEMORY[0x1E0D8D4B0];
  v20 = MEMORY[0x1E0DEA968];
  v21 = MEMORY[0x1E0D8D4B0];
  v18 = v17;
  v19 = a2;
  swift_bridgeObjectRetain();
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  v13 = sub_1C1426710();
  v20 = v11;
  v21 = v12;
  v18 = v13;
  v19 = v14;
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
  sub_1C14252D0();
  sub_1C14252F4();
  if (!swift_weakLoadStrong())
  {
LABEL_9:
    result = sub_1C1426F8C();
    __break(1u);
    return result;
  }
  sub_1C1425294();
  if (v3)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_1C1343F70()
{
  return sub_1C134B11C();
}

uint64_t type metadata accessor for ActivityDatabase.MutablePushTokenStore()
{
  return objc_opt_self();
}

uint64_t sub_1C1343FB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v1 = sub_1C14252E8();
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1C1425300();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C14252DC();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252F4();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v7 = Strong;
    v8 = sub_1C1425294();
    if (v0)
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      swift_release();
    }
    else
    {
      v9 = v8;
      swift_release();
      v7 = sub_1C134BC90(v9);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      swift_bridgeObjectRelease();
    }
    return v7;
  }
  else
  {
    result = sub_1C1426F8C();
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for ActivityDatabase.PublicTokenStore()
{
  return objc_opt_self();
}

uint64_t sub_1C134421C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = sub_1C14252E8();
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1C1425300();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!swift_weakLoadStrong())
    goto LABEL_9;
  v6 = sub_1C1425264();
  swift_release();
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  v13 = v2;
  sub_1C14252DC();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  v7 = sub_1C1426584();
  v16 = MEMORY[0x1E0DEA968];
  v17 = MEMORY[0x1E0D8D4B0];
  v14 = v7;
  v15 = v8;
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v14);
  sub_1C14252D0();
  v9 = sub_1C1426590();
  v16 = MEMORY[0x1E0CB0338];
  v17 = MEMORY[0x1E0D8D400];
  v14 = v9;
  v15 = v10;
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v14);
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252F4();
  if (!swift_weakLoadStrong())
  {
LABEL_9:
    result = sub_1C1426F8C();
    __break(1u);
    return result;
  }
  sub_1C1425294();
  v11 = v13;
  if (v0)
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v13);
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v11);
  }
}

uint64_t type metadata accessor for ActivityDatabase.MutablePublicTokenStore()
{
  return objc_opt_self();
}

uint64_t sub_1C13445C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v1 = sub_1C14252E8();
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1C1425300();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C14252DC();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252F4();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v7 = Strong;
    v8 = sub_1C1425294();
    if (v0)
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      swift_release();
    }
    else
    {
      v9 = v8;
      swift_release();
      v7 = sub_1C134BFD0(v9, &qword_1ED791DB8, (uint64_t (*)(_QWORD))MEMORY[0x1E0D8D3C0], (void (*)(_QWORD))sub_1C1344920, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_1C136C634);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      swift_bridgeObjectRelease();
    }
    return v7;
  }
  else
  {
    result = sub_1C1426F8C();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C1344920@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v22;
  unsigned int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v46 = a1;
  v36 = sub_1C142674C();
  v34 = *(_QWORD *)(v36 - 8);
  v2 = MEMORY[0x1E0C80A78](v36);
  v33 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v35 = (char *)&v27 - v4;
  v42 = sub_1C1426788();
  v40 = *(_QWORD *)(v42 - 8);
  v5 = MEMORY[0x1E0C80A78](v42);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v27 - v8;
  v41 = sub_1C14251B0();
  v38 = *(_QWORD *)(v41 - 8);
  v10 = MEMORY[0x1E0C80A78](v41);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v27 - v13;
  v39 = sub_1C142671C();
  v37 = *(_QWORD *)(v39 - 8);
  v15 = MEMORY[0x1E0C80A78](v39);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v27 - v18;
  sub_1C1425330();
  if (!v45)
    goto LABEL_11;
  v43 = v1;
  v32 = v44;
  sub_1C1425330();
  if (!v45)
    goto LABEL_10;
  v31 = v44;
  sub_1C1425330();
  if ((v45 & 1) != 0)
    goto LABEL_9;
  v30 = v44;
  sub_1C1425330();
  if (v45 == 1
    || (v29 = v44, sub_1C1425330(), (v45 & 1) != 0)
    || (sub_1C1425330(), (v45 & 1) != 0)
    || (v28 = v44, sub_1C1425330(), (v45 & 1) != 0)
    || (sub_1C1425330(), (v45 & 1) != 0))
  {
LABEL_9:
    swift_bridgeObjectRelease();
LABEL_10:
    swift_bridgeObjectRelease();
LABEL_11:
    v20 = sub_1C14267C4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v46, 1, 1, v20);
  }
  v22 = v44;
  sub_1C1426704();
  sub_1C14250F0();
  if (v28 >= 3)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v14, v41);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v19, v39);
    v24 = sub_1C14267C4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v46, 1, 1, v24);
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v40 + 104))(v9, **((unsigned int **)&unk_1E7A8A960 + v28), v42);
    if (v30)
    {
      if (v30 != 1)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v40 + 8))(v9, v42);
        (*(void (**)(char *, uint64_t))(v38 + 8))(v14, v41);
        (*(void (**)(char *, uint64_t))(v37 + 8))(v19, v39);
        goto LABEL_11;
      }
      v31 = v22;
      v23 = (unsigned int *)MEMORY[0x1E0D8D338];
    }
    else
    {
      v31 = v22;
      v23 = (unsigned int *)MEMORY[0x1E0D8D340];
    }
    v25 = v34;
    (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v35, *v23, v36);
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v17, v19, v39);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v33, v35, v36);
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v12, v14, v41);
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v7, v9, v42);
    sub_1C14267A0();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v9, v42);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v14, v41);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v19, v39);
    v26 = sub_1C14267C4();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v46, 0, 1, v26);
  }
}

uint64_t type metadata accessor for ActivityDatabase.PushBudgetStore()
{
  return objc_opt_self();
}

uint64_t sub_1C1344F24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  char *v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t result;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v53 = a1;
  v2 = sub_1C142671C();
  v50 = *(_QWORD *)(v2 - 8);
  v51 = v2;
  MEMORY[0x1E0C80A78](v2);
  v49 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C14252E8();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1C1425300();
  v55 = *(_QWORD *)(v5 - 8);
  v56 = v5;
  MEMORY[0x1E0C80A78](v5);
  v54 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C142674C();
  v47 = *(_QWORD *)(v7 - 8);
  v48 = v7;
  MEMORY[0x1E0C80A78](v7);
  v46 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C1426788();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1C14251B0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = v1 + 16;
  if (!swift_weakLoadStrong())
    goto LABEL_18;
  v17 = sub_1C1425264();
  swift_release();
  if ((v17 & 1) == 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  sub_1C14267B8();
  sub_1C14250FC();
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v20 = sub_1C1426740();
  sub_1C1426794();
  v21 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
  if (v21 == *MEMORY[0x1E0D8D380])
  {
    v22 = 0;
  }
  else if (v21 == *MEMORY[0x1E0D8D370])
  {
    v22 = 1;
  }
  else
  {
    if (v21 != *MEMORY[0x1E0D8D378])
      goto LABEL_18;
    v22 = 2;
  }
  v23 = v46;
  sub_1C1426758();
  v24 = (*(uint64_t (**)(char *, uint64_t))(v47 + 88))(v23, v48);
  v25 = *MEMORY[0x1E0D8D338];
  v45 = v22;
  if (v24 == v25)
  {
    v26 = v20;
    v27 = 1;
    goto LABEL_13;
  }
  if (v24 != *MEMORY[0x1E0D8D340])
  {
LABEL_18:
    result = sub_1C1426F8C();
    __break(1u);
    return result;
  }
  v26 = v20;
  v27 = 0;
LABEL_13:
  sub_1C14252DC();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  v28 = sub_1C1426770();
  v29 = MEMORY[0x1E0DEA968];
  v30 = MEMORY[0x1E0D8D4B0];
  v60 = MEMORY[0x1E0DEA968];
  v61 = MEMORY[0x1E0D8D4B0];
  v58 = v28;
  v59 = v31;
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v58);
  sub_1C14252D0();
  v32 = v49;
  sub_1C14267AC();
  v33 = sub_1C1426710();
  v35 = v34;
  (*(void (**)(char *, uint64_t))(v50 + 8))(v32, v51);
  v60 = v29;
  v61 = v30;
  v58 = v33;
  v59 = v35;
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v58);
  sub_1C14252D0();
  v36 = MEMORY[0x1E0DEDC60];
  v37 = MEMORY[0x1E0D8D4C8];
  v60 = MEMORY[0x1E0DEDC60];
  v61 = MEMORY[0x1E0D8D4C8];
  v58 = v27;
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v58);
  sub_1C14252D0();
  v38 = MEMORY[0x1E0DEB070];
  v39 = MEMORY[0x1E0D8D4B8];
  v60 = MEMORY[0x1E0DEB070];
  v61 = MEMORY[0x1E0D8D4B8];
  v58 = v19;
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v58);
  sub_1C14252D0();
  v60 = v36;
  v61 = v37;
  v58 = v26;
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v58);
  sub_1C14252D0();
  v60 = v36;
  v61 = v37;
  v58 = v45;
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v58);
  sub_1C14252D0();
  sub_1C142677C();
  v60 = v38;
  v61 = v39;
  v58 = v40;
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v58);
  sub_1C14252D0();
  v41 = sub_1C1426734();
  v60 = v36;
  v61 = v37;
  v58 = v41;
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v58);
  sub_1C14252D0();
  v42 = v54;
  sub_1C14252F4();
  if (!swift_weakLoadStrong())
    goto LABEL_18;
  v43 = v57;
  sub_1C1425294();
  if (v43)
  {
    (*(void (**)(char *, uint64_t))(v55 + 8))(v42, v56);
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v42, v56);
  }
}

uint64_t sub_1C13456C8(uint64_t a1, uint64_t a2)
{
  return sub_1C1348DA8(a1, a2, (uint64_t)"PushBudgets", 11, (uint64_t)"subscriptionIdentifier", 22);
}

uint64_t type metadata accessor for ActivityDatabase.MutablePushBudgetStore()
{
  return objc_opt_self();
}

uint64_t sub_1C1345714()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v1 = sub_1C14252E8();
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1C1425300();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C14252DC();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252F4();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v7 = Strong;
    v8 = sub_1C1425294();
    if (v0)
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      swift_release();
    }
    else
    {
      v9 = v8;
      swift_release();
      v7 = sub_1C134D59C(v9, &qword_1ED797560, (uint64_t (*)(_QWORD))type metadata accessor for Activity, (void (*)(_QWORD))sub_1C1345A98, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_1C136C648);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      swift_bridgeObjectRelease();
    }
    return v7;
  }
  else
  {
    result = sub_1C1426F8C();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C1345A98@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  int *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;

  v97 = a1;
  v2 = type metadata accessor for Activity();
  v95 = *(_QWORD *)(v2 - 8);
  v96 = (int *)v2;
  MEMORY[0x1E0C80A78](v2);
  v81 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C1425450();
  v83 = *(_QWORD *)(v4 - 8);
  v84 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v82 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v86 = (char *)&v63 - v7;
  v8 = sub_1C1425630();
  MEMORY[0x1E0C80A78](v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v85 = (uint64_t)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v87 = (uint64_t)&v63 - v12;
  v13 = sub_1C1425A08();
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v89 = (uint64_t)&v63 - v17;
  v91 = sub_1C1425978();
  v88 = *(_QWORD *)(v91 - 8);
  v18 = MEMORY[0x1E0C80A78](v91);
  v20 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v90 = (char *)&v63 - v21;
  v22 = sub_1C14251B0();
  v92 = *(_QWORD *)(v22 - 8);
  v93 = v22;
  v23 = MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v63 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v94 = (char *)&v63 - v26;
  sub_1C1425330();
  v27 = v99;
  if (!v99)
    goto LABEL_20;
  v80 = v98;
  sub_1C1425330();
  if ((v99 & 1) != 0)
    goto LABEL_19;
  sub_1C1425330();
  if (v99 >> 60 == 15)
    goto LABEL_19;
  v77 = v16;
  v79 = v99;
  v28 = v98;
  sub_1C1425330();
  if (v99 >> 60 == 15)
  {
    v29 = v28;
LABEL_18:
    sub_1C132D03C(v29, v79);
LABEL_19:
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  v76 = v99;
  v78 = v28;
  v30 = v98;
  sub_1C1425330();
  if (v99 >> 60 == 15)
  {
    v31 = v30;
LABEL_17:
    sub_1C132D03C(v31, v76);
    v29 = v78;
    goto LABEL_18;
  }
  v74 = v30;
  v75 = v99;
  v32 = v98;
  sub_1C1425330();
  if (v99 >> 60 == 15)
  {
    v33 = v32;
LABEL_16:
    sub_1C132D03C(v33, v75);
    v31 = v74;
    goto LABEL_17;
  }
  v73 = v32;
  v71 = v99;
  v34 = v98;
  sub_1C1425330();
  if (!v99)
  {
    sub_1C132D03C(v34, v71);
    v33 = v73;
    goto LABEL_16;
  }
  v70 = v34;
  v69 = v99;
  v67 = v98;
  v35 = sub_1C1424FF4();
  swift_allocObject();
  v72 = sub_1C1424FE8();
  sub_1C1425330();
  v36 = v98;
  v68 = v99;
  if (!v99)
    v36 = 0;
  v66 = v36;
  sub_1C14250F0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797A30);
  sub_1C134D7EC(&qword_1EF6DAF20, &qword_1EF6DAF28, MEMORY[0x1E0C8F7B8], MEMORY[0x1E0DEAF40]);
  sub_1C1424FDC();
  if (v1)
  {
    (*(void (**)(char *, uint64_t))(v92 + 8))(v94, v93);
    swift_bridgeObjectRelease();
    sub_1C132D03C(v78, v79);
    sub_1C132D03C(v74, v76);
    sub_1C132D03C(v73, v75);
    sub_1C132D03C(v70, v71);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();

LABEL_20:
    v37 = 1;
    v39 = v96;
    v38 = v97;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v95 + 56))(v38, v37, 1, v39);
  }
  v64 = v35;
  v65 = v98;
  sub_1C1329AD0(&qword_1EF6DAF30, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FE28], MEMORY[0x1E0C8FE40]);
  sub_1C1424FDC();
  sub_1C1329AD0(&qword_1EF6DAF38, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FFB8], MEMORY[0x1E0C8FFD0]);
  sub_1C1424FDC();
  sub_1C1425330();
  v41 = v99;
  v42 = sub_1C1426FD4();
  swift_bridgeObjectRelease();
  v67 = v42;
  if ((v41 & 1) != 0)
  {
    v43 = sub_1C142557C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v87, 1, 1, v43);
  }
  else
  {
    sub_1C14250F0();
    sub_1C142560C();
    (*(void (**)(char *, uint64_t))(v92 + 8))(v25, v93);
    v44 = v85;
    sub_1C1425570();
    v45 = sub_1C142557C();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v44, 0, 1, v45);
    sub_1C132A724(v44, v87, &qword_1ED7935E8);
  }
  v46 = v86;
  v47 = (uint64_t)v77;
  swift_allocObject();
  v48 = sub_1C1424FE8();
  sub_1C1329AD0(&qword_1EF6DAF40, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F570], MEMORY[0x1E0C8F588]);
  v49 = v84;
  v69 = v48;
  sub_1C1424FDC();
  LODWORD(v64) = v67 == 1;
  (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v20, v90, v91);
  sub_1C133FD44(v89, v47);
  (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v82, v46, v49);
  v50 = v93;
  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v25, v94, v93);
  sub_1C132C344(v87, v85, &qword_1ED7935E8);
  v51 = v96;
  v52 = v81;
  v53 = (uint64_t)&v81[v96[12]];
  v54 = sub_1C142557C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v53, 1, 1, v54);
  v55 = v51[13];
  v67 = 0;
  v56 = &v52[v55];
  *(_QWORD *)v56 = 0;
  *((_QWORD *)v56 + 1) = 0;
  *(_QWORD *)v52 = v80;
  *((_QWORD *)v52 + 1) = v27;
  v57 = &v52[v51[10]];
  v58 = v68;
  *(_QWORD *)v57 = v66;
  *((_QWORD *)v57 + 1) = v58;
  v59 = v20;
  v39 = v51;
  (*(void (**)(char *, char *, uint64_t))(v88 + 32))(&v52[v51[5]], v59, v91);
  *(_QWORD *)&v52[v51[7]] = v65;
  sub_1C1339140((uint64_t)v77, (uint64_t)&v52[v51[6]], (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
  v60 = v83;
  (*(void (**)(char *, char *, uint64_t))(v83 + 32))(&v52[v51[11]], v82, v49);
  v61 = &v52[v51[8]];
  v62 = v92;
  (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v61, v25, v50);
  v52[v39[9]] = v64;
  sub_1C134D870(v85, v53);
  swift_bridgeObjectRelease();
  *(_QWORD *)v56 = 0;
  *((_QWORD *)v56 + 1) = 0;
  v38 = v97;
  sub_1C1339140((uint64_t)v52, v97, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
  sub_1C132D03C(v78, v79);
  sub_1C132D03C(v74, v76);
  sub_1C132D03C(v73, v75);
  sub_1C132D03C(v70, v71);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v86, v49);
  sub_1C132C860(v87, &qword_1ED7935E8);
  sub_1C133FDDC(v89);
  (*(void (**)(char *, uint64_t))(v88 + 8))(v90, v91);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v94, v93);
  v37 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v95 + 56))(v38, v37, 1, v39);
}

uint64_t type metadata accessor for ActivityDatabase.ActivityStore()
{
  return objc_opt_self();
}

uint64_t sub_1C13467CC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  int *v26;
  _QWORD *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t result;
  unint64_t v32;
  unint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  BOOL v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int *v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  _QWORD *v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;

  v92 = a1;
  v3 = sub_1C14251B0();
  v88 = *(_QWORD *)(v3 - 8);
  v89 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C14252E8();
  MEMORY[0x1E0C80A78](v6);
  v91 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C1425300();
  v85 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v84 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7928A0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1C1425630();
  v86 = *(_QWORD *)(v16 - 8);
  v87 = v16;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B60);
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v90 = (uint64_t)&v68 - v23;
  v83 = v1 + 16;
  if (!swift_weakLoadStrong())
    goto LABEL_24;
  v24 = sub_1C1425264();
  swift_release();
  if ((v24 & 1) == 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  v81 = v15;
  v80 = v5;
  v82 = v8;
  sub_1C1425018();
  swift_allocObject();
  v25 = sub_1C142500C();
  v26 = (int *)type metadata accessor for Activity();
  v27 = v92;
  sub_1C1425978();
  sub_1C1329AD0(&qword_1ED793BD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FE28], MEMORY[0x1E0C8FE38]);
  v28 = sub_1C1425000();
  if (v2)
    return swift_release();
  v78 = v28;
  v79 = v29;
  v96 = *(_QWORD *)((char *)v27 + v26[7]);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797A30);
  sub_1C134D7EC(&qword_1ED797A38, &qword_1ED793BA8, MEMORY[0x1E0C8F7A8], MEMORY[0x1E0DEAF10]);
  v76 = sub_1C1425000();
  v77 = v30;
  swift_bridgeObjectRelease();
  sub_1C1425A08();
  sub_1C1329AD0(&qword_1ED793BE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FFB8], MEMORY[0x1E0C8FFC8]);
  v74 = sub_1C1425000();
  v75 = v32;
  sub_1C1425450();
  v73 = v25;
  sub_1C1329AD0((unint64_t *)&unk_1ED792888, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F570], MEMORY[0x1E0C8F580]);
  v71 = sub_1C1425000();
  v72 = v33;
  v34 = (_QWORD *)((char *)v27 + v26[10]);
  v35 = *v34;
  v36 = (uint64_t)v27 + v26[12];
  v37 = v34[1];
  sub_1C132C344(v36, (uint64_t)v12, &qword_1ED7935E8);
  v38 = sub_1C142557C();
  v39 = *(_QWORD *)(v38 - 8);
  v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48))(v12, 1, v38);
  swift_bridgeObjectRetain();
  v70 = v26;
  v69 = v35;
  if (v40 == 1)
  {
    sub_1C132C860((uint64_t)v12, &qword_1ED7935E8);
    v41 = (uint64_t)v81;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v86 + 56))(v81, 1, 1, v87);
LABEL_9:
    sub_1C132C860(v41, &qword_1ED7928A0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v88 + 56))(v90, 1, 1, v89);
    goto LABEL_11;
  }
  v41 = (uint64_t)v81;
  sub_1C1425564();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v12, v38);
  v43 = v86;
  v42 = v87;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v86 + 56))(v41, 0, 1, v87);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42) == 1)
    goto LABEL_9;
  (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v18, v41, v42);
  sub_1C1425600();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v18, v42);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v22, 0, 1, v89);
  sub_1C132A724((uint64_t)v22, v90, &qword_1ED793B60);
LABEL_11:
  sub_1C14252DC();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  v45 = *v92;
  v44 = v92[1];
  v46 = MEMORY[0x1E0DEA968];
  v47 = MEMORY[0x1E0D8D4B0];
  v98 = MEMORY[0x1E0DEA968];
  v99 = MEMORY[0x1E0D8D4B0];
  v96 = v45;
  v97 = v44;
  swift_bridgeObjectRetain();
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v96);
  sub_1C14252D0();
  if (v37)
  {
    v48 = v46;
    v94 = v46;
    v95 = v47;
    v49 = v47;
    *(_QWORD *)&v93 = v69;
    *((_QWORD *)&v93 + 1) = v37;
    sub_1C1339184(&v93, (uint64_t)&v96);
  }
  else
  {
    v49 = v47;
    v48 = v46;
    v50 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E38]), sel_init);
    v98 = sub_1C1330EEC(0, &qword_1ED797AB0);
    v99 = MEMORY[0x1E0D8D4C0];
    v96 = (uint64_t)v50;
  }
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v96);
  sub_1C14252D0();
  sub_1C14250FC();
  v51 = MEMORY[0x1E0DEB070];
  v52 = MEMORY[0x1E0D8D4B8];
  v98 = MEMORY[0x1E0DEB070];
  v99 = MEMORY[0x1E0D8D4B8];
  v96 = v53;
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v96);
  sub_1C14252D0();
  v54 = MEMORY[0x1E0CB0338];
  v55 = MEMORY[0x1E0D8D400];
  v98 = MEMORY[0x1E0CB0338];
  v99 = MEMORY[0x1E0D8D400];
  v96 = v78;
  v97 = v79;
  sub_1C133177C(v78, v79);
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v96);
  sub_1C14252D0();
  v98 = v54;
  v99 = v55;
  v96 = v74;
  v97 = v75;
  sub_1C133177C(v74, v75);
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v96);
  sub_1C14252D0();
  v98 = v54;
  v99 = v55;
  v96 = v76;
  v97 = v77;
  sub_1C133177C(v76, v77);
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v96);
  sub_1C14252D0();
  v98 = v54;
  v99 = v55;
  v96 = v71;
  v97 = v72;
  sub_1C133177C(v71, v72);
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v96);
  sub_1C14252D0();
  v57 = v88;
  v56 = v89;
  v58 = v90;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48))(v90, 1, v89))
  {
    v59 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E38]), sel_init);
    v98 = sub_1C1330EEC(0, &qword_1ED797AB0);
    v99 = MEMORY[0x1E0D8D4C0];
    v96 = (uint64_t)v59;
  }
  else
  {
    v60 = v80;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v80, v58, v56);
    sub_1C14250FC();
    v62 = v61;
    (*(void (**)(char *, uint64_t))(v57 + 8))(v60, v56);
    v94 = v51;
    v95 = v52;
    *(_QWORD *)&v93 = v62;
    sub_1C1339184(&v93, (uint64_t)&v96);
  }
  v63 = v84;
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v96);
  sub_1C14252D0();
  v64 = *((_BYTE *)v92 + v70[9]) == 0;
  v65 = 6910049;
  if (*((_BYTE *)v92 + v70[9]))
    v65 = 1752397168;
  v66 = 0xE300000000000000;
  v98 = v48;
  v99 = v49;
  if (!v64)
    v66 = 0xE400000000000000;
  v96 = v65;
  v97 = v66;
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v96);
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252F4();
  if (swift_weakLoadStrong())
  {
    sub_1C1425294();
    v67 = v82;
    swift_release();
    swift_release();
    sub_1C13282B4(v71, v72);
    sub_1C13282B4(v76, v77);
    sub_1C13282B4(v74, v75);
    sub_1C13282B4(v78, v79);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v85 + 8))(v63, v67);
    return sub_1C132C860(v58, &qword_1ED793B60);
  }
LABEL_24:
  result = sub_1C1426F8C();
  __break(1u);
  return result;
}

uint64_t sub_1C1347800(uint64_t a1, uint64_t a2)
{
  return sub_1C1348DA8(a1, a2, (uint64_t)"Activities", 10, (uint64_t)"activityIdentifier", 18);
}

uint64_t type metadata accessor for ActivityDatabase.MutableActivityStore()
{
  return objc_opt_self();
}

uint64_t sub_1C134784C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v1 = sub_1C14252E8();
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1C1425300();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C14252DC();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252F4();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v7 = Strong;
    v8 = sub_1C1425294();
    if (v0)
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      swift_release();
    }
    else
    {
      v9 = v8;
      swift_release();
      v7 = sub_1C134C22C(v9);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      swift_bridgeObjectRelease();
    }
    return v7;
  }
  else
  {
    result = sub_1C1426F8C();
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for ActivityDatabase.SyncEngineRecordMetadataStore()
{
  return objc_opt_self();
}

uint64_t sub_1C1347B08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  double v28;
  char *v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v36 = a1;
  v34 = sub_1C14251B0();
  v3 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v35 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C1426008();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C14252E8();
  MEMORY[0x1E0C80A78](v9);
  v10 = sub_1C1425300();
  v39 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v37 = v1 + 16;
  v38 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!swift_weakLoadStrong())
    goto LABEL_10;
  v12 = sub_1C1425264();
  swift_release();
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    result = sub_1C1426F8C();
    __break(1u);
    return result;
  }
  v33 = v10;
  sub_1C14252DC();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C1425F9C();
  *(double *)&v13 = COERCE_DOUBLE(sub_1C1425FF0());
  v15 = v14;
  v16 = *(void (**)(char *, uint64_t))(v6 + 8);
  v16(v8, v5);
  v32 = v3;
  v17 = MEMORY[0x1E0DEA968];
  v18 = MEMORY[0x1E0D8D4B0];
  v42 = MEMORY[0x1E0DEA968];
  v43 = MEMORY[0x1E0D8D4B0];
  v40 = *(double *)&v13;
  v41 = v15;
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
  sub_1C14252D0();
  sub_1C1425F9C();
  *(double *)&v19 = COERCE_DOUBLE(sub_1C1425FFC());
  v21 = v20;
  v16(v8, v5);
  v42 = v17;
  v43 = v18;
  v40 = *(double *)&v19;
  v41 = v21;
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
  sub_1C14252D0();
  v22 = v35;
  sub_1C1425F84();
  sub_1C14250FC();
  v24 = v23;
  (*(void (**)(char *, uint64_t))(v32 + 8))(v22, v34);
  v25 = MEMORY[0x1E0DEB070];
  v26 = MEMORY[0x1E0D8D4B8];
  v42 = MEMORY[0x1E0DEB070];
  v43 = MEMORY[0x1E0D8D4B8];
  v40 = v24;
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
  sub_1C14252D0();
  v27 = sub_1C1425FA8();
  v28 = 0.0;
  if ((v27 & 1) != 0)
    v28 = 1.0;
  v42 = v25;
  v43 = v26;
  v40 = v28;
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  v29 = v38;
  sub_1C14252F4();
  if (!swift_weakLoadStrong())
    goto LABEL_10;
  sub_1C1425294();
  v30 = v33;
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v39 + 8))(v29, v33);
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v29, v30);
  }
}

uint64_t sub_1C134818C()
{
  return sub_1C1349030();
}

uint64_t sub_1C13481AC()
{
  return sub_1C134B11C();
}

uint64_t type metadata accessor for ActivityDatabase.MutableSyncEngineRecordMetadataStore()
{
  return objc_opt_self();
}

uint64_t sub_1C13481EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v1 = sub_1C14252E8();
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1C1425300();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C14252DC();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252F4();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v7 = Strong;
    v8 = sub_1C1425294();
    if (v0)
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      swift_release();
    }
    else
    {
      v9 = v8;
      swift_release();
      v7 = sub_1C134C748(v9);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      swift_bridgeObjectRelease();
    }
    return v7;
  }
  else
  {
    result = sub_1C1426F8C();
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for ActivityDatabase.SyncEnginePairedDeviceIdentifierStore()
{
  return objc_opt_self();
}

uint64_t sub_1C1348430(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t result;
  _QWORD v13[7];

  v4 = sub_1C14252E8();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1C1425300();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!swift_weakLoadStrong())
    goto LABEL_9;
  v9 = sub_1C1425264();
  swift_release();
  if ((v9 & 1) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1C14252DC();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  v13[3] = MEMORY[0x1E0DEA968];
  v13[4] = MEMORY[0x1E0D8D4B0];
  v13[0] = a1;
  v13[1] = a2;
  swift_bridgeObjectRetain();
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  sub_1C14252D0();
  sub_1C14252F4();
  if (!swift_weakLoadStrong())
  {
LABEL_9:
    result = sub_1C1426F8C();
    __break(1u);
    return result;
  }
  v10 = v13[6];
  sub_1C1425294();
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_1C13486B0(uint64_t a1, uint64_t a2)
{
  return sub_1C1348DA8(a1, a2, (uint64_t)"SyncEnginePairedDeviceIdentifiers", 33, (uint64_t)"pairedDeviceIdentifier", 22);
}

uint64_t type metadata accessor for ActivityDatabase.MutableSyncEnginePairedDeviceIdentifierStore()
{
  return objc_opt_self();
}

uint64_t sub_1C13486FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v1 = sub_1C14252E8();
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1C1425300();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C14252DC();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252F4();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v7 = Strong;
    v8 = sub_1C1425294();
    if (v0)
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      swift_release();
    }
    else
    {
      v9 = v8;
      swift_release();
      v7 = sub_1C134C910(v9);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      swift_bridgeObjectRelease();
    }
    return v7;
  }
  else
  {
    result = sub_1C1426F8C();
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for ActivityDatabase.SyncEngineRecordIDSyncDateStore()
{
  return objc_opt_self();
}

uint64_t sub_1C13489B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v19[1] = a4;
  v7 = sub_1C14252E8();
  MEMORY[0x1E0C80A78](v7);
  v25 = sub_1C1425300();
  v20 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!swift_weakLoadStrong())
    goto LABEL_9;
  v10 = sub_1C1425264();
  swift_release();
  if ((v10 & 1) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1C14252DC();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  v11 = MEMORY[0x1E0DEA968];
  v12 = MEMORY[0x1E0D8D4B0];
  v23 = MEMORY[0x1E0DEA968];
  v24 = MEMORY[0x1E0D8D4B0];
  v21 = a1;
  v22 = a2;
  swift_bridgeObjectRetain();
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  sub_1C14252D0();
  v13 = sub_1C1425FF0();
  v23 = v11;
  v24 = v12;
  v21 = v13;
  v22 = v14;
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  sub_1C14252D0();
  v15 = sub_1C1425FFC();
  v23 = v11;
  v24 = v12;
  v21 = v15;
  v22 = v16;
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  sub_1C14252D0();
  sub_1C14250FC();
  v23 = MEMORY[0x1E0DEB070];
  v24 = MEMORY[0x1E0D8D4B8];
  v21 = v17;
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  sub_1C14252D0();
  sub_1C14252F4();
  if (!swift_weakLoadStrong())
  {
LABEL_9:
    result = sub_1C1426F8C();
    __break(1u);
    return result;
  }
  sub_1C1425294();
  if (v4)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v25);
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v9, v25);
  }
}

uint64_t sub_1C1348D7C(uint64_t a1, uint64_t a2)
{
  return sub_1C1348DA8(a1, a2, (uint64_t)"SyncEngineRecordIDSyncDates", 27, (uint64_t)"pairedDeviceIdentifier", 22);
}

uint64_t sub_1C1348DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t result;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[5];
  uint64_t v18;

  v14[1] = a5;
  v14[2] = a6;
  v15 = a1;
  v7 = sub_1C14252E8();
  MEMORY[0x1E0C80A78](v7);
  v18 = sub_1C1425300();
  v8 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!swift_weakLoadStrong())
    goto LABEL_9;
  v11 = sub_1C1425264();
  swift_release();
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1C14252DC();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  v17[3] = MEMORY[0x1E0DEA968];
  v17[4] = MEMORY[0x1E0D8D4B0];
  v17[0] = v15;
  v17[1] = a2;
  swift_bridgeObjectRetain();
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  sub_1C14252D0();
  sub_1C14252F4();
  if (!swift_weakLoadStrong())
  {
LABEL_9:
    result = sub_1C1426F8C();
    __break(1u);
    return result;
  }
  v12 = v16;
  sub_1C1425294();
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v18);
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v18);
  }
}

uint64_t sub_1C1349010()
{
  return sub_1C1349030();
}

uint64_t sub_1C1349030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v0 = sub_1C14252E8();
  MEMORY[0x1E0C80A78](v0);
  v18 = sub_1C1425300();
  v1 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!swift_weakLoadStrong())
    goto LABEL_9;
  v4 = sub_1C1425264();
  swift_release();
  if ((v4 & 1) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1C14252DC();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  v5 = sub_1C1425FF0();
  v6 = MEMORY[0x1E0DEA968];
  v7 = MEMORY[0x1E0D8D4B0];
  v16 = MEMORY[0x1E0DEA968];
  v17 = MEMORY[0x1E0D8D4B0];
  v14 = v5;
  v15 = v8;
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v14);
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  v9 = sub_1C1425FFC();
  v16 = v6;
  v17 = v7;
  v14 = v9;
  v15 = v10;
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v14);
  sub_1C14252D0();
  sub_1C14252F4();
  if (!swift_weakLoadStrong())
  {
LABEL_9:
    result = sub_1C1426F8C();
    __break(1u);
    return result;
  }
  v11 = v13;
  sub_1C1425294();
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v18);
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v18);
  }
}

uint64_t type metadata accessor for ActivityDatabase.MutableSyncEngineRecordIDSyncDateStore()
{
  return objc_opt_self();
}

uint64_t sub_1C1349318()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v1 = sub_1C14252E8();
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1C1425300();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C14252DC();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252F4();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v7 = Strong;
    v8 = sub_1C1425294();
    if (v0)
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      swift_release();
    }
    else
    {
      v9 = v8;
      swift_release();
      v7 = sub_1C134D59C(v9, qword_1ED797768, (uint64_t (*)(_QWORD))type metadata accessor for Assertion, (void (*)(_QWORD))sub_1C134964C, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_1C136C1C0);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      swift_bridgeObjectRelease();
    }
    return v7;
  }
  else
  {
    result = sub_1C1426F8C();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C134964C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  BOOL v44;
  uint64_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  int *v73;
  uint8_t **v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t, char *, uint64_t);
  void (*v78)(uint64_t, char *, uint64_t);
  int v79;
  uint64_t v80;
  uint8_t *v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  id v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;

  v97 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797898);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v77 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v77 - v5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DAEF8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C1425E4C();
  v90 = *(_QWORD *)(v10 - 8);
  v91 = v10;
  MEMORY[0x1E0C80A78](v10);
  v89 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DAF00);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1C1425DF8();
  v93 = *(_QWORD *)(v15 - 8);
  v94 = v15;
  MEMORY[0x1E0C80A78](v15);
  v92 = (char *)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797890);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v77 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1C1425CC0();
  v96 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v95 = (char *)&v77 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1425330();
  v22 = v101;
  if (!v101)
    goto LABEL_10;
  v88 = v100;
  sub_1C1425330();
  if (v101 >> 60 == 15)
  {
LABEL_9:
    swift_bridgeObjectRelease();
LABEL_10:
    v26 = type metadata accessor for Assertion();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v97, 1, 1, v26);
  }
  v85 = v20;
  v87 = v101;
  v23 = v100;
  sub_1C1425330();
  if (!v101)
  {
    v25 = v23;
    goto LABEL_8;
  }
  v84 = v101;
  v86 = v23;
  v24 = v100;
  sub_1C1425330();
  if ((v101 & 1) != 0 || (sub_1C1425330(), v101 >> 60 == 15))
  {
    swift_bridgeObjectRelease();
    v25 = v86;
LABEL_8:
    sub_1C132D03C(v25, v87);
    goto LABEL_9;
  }
  v83 = v101;
  v81 = (uint8_t *)v24;
  v82 = v100;
  sub_1C1425330();
  v80 = v100;
  v79 = v101;
  swift_bridgeObjectRetain();
  sub_1C1425CCC();
  v28 = v96;
  v29 = v85;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v96 + 48))(v19, 1, v85) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1C132C860((uint64_t)v19, &qword_1ED797890);
    if (qword_1ED7939A0 != -1)
      swift_once();
    v30 = sub_1C1426854();
    __swift_project_value_buffer(v30, (uint64_t)qword_1ED7986C8);
    swift_bridgeObjectRetain();
    v31 = sub_1C1426848();
    v32 = sub_1C1426C68();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      v100 = v34;
      *(_DWORD *)v33 = 136446210;
      swift_bridgeObjectRetain();
      v99 = sub_1C132AD90(v88, v22, &v100);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v31, v32, "Unable to parse assertion identifier: %{public}s", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v34, -1, -1);
      MEMORY[0x1C3BAD3F4](v33, -1, -1);

      sub_1C132D03C(v82, v83);
      sub_1C132D03C(v86, v87);
    }
    else
    {
      sub_1C132D03C(v86, v87);
      swift_bridgeObjectRelease_n();
      sub_1C132D03C(v82, v83);

    }
    goto LABEL_22;
  }
  swift_bridgeObjectRelease();
  v35 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
  v35(v95, v19, v29);
  sub_1C1424FF4();
  swift_allocObject();
  v36 = sub_1C1424FE8();
  sub_1C1329AD0(&qword_1EF6DAF08, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8CC78], MEMORY[0x1E0D8CC90]);
  v37 = v94;
  v38 = v98;
  sub_1C1424FDC();
  v88 = v36;
  if (v38)
  {

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v93 + 56))(v14, 1, 1, v37);
    swift_bridgeObjectRelease();
    sub_1C132C860((uint64_t)v14, &qword_1EF6DAF00);
    if (qword_1ED7939A0 != -1)
      swift_once();
    v39 = sub_1C1426854();
    __swift_project_value_buffer(v39, (uint64_t)qword_1ED7986C8);
    v40 = v86;
    v41 = v87;
    sub_1C1331768(v86, v87);
    sub_1C133177C(v40, v41);
    v42 = sub_1C1426848();
    v43 = sub_1C1426C68();
    v44 = os_log_type_enabled(v42, v43);
    v45 = v85;
    if (v44)
    {
      v46 = (uint8_t *)swift_slowAlloc();
      v47 = swift_slowAlloc();
      v100 = v47;
      *(_DWORD *)v46 = 136446210;
      v98 = v46 + 4;
      sub_1C133177C(v40, v41);
      v48 = v40;
      v49 = sub_1C14250C0();
      v51 = v50;
      sub_1C132D03C(v48, v41);
      v99 = sub_1C132AD90(v49, v51, &v100);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      sub_1C132D03C(v48, v41);
      sub_1C132D03C(v48, v41);
      _os_log_impl(&dword_1C1324000, v42, v43, "Unable to parse attribute: %{public}s", v46, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v47, -1, -1);
      MEMORY[0x1C3BAD3F4](v46, -1, -1);

      swift_release();
      sub_1C132D03C(v82, v83);
      sub_1C132D03C(v48, v41);
      (*(void (**)(char *, uint64_t))(v96 + 8))(v95, v85);
LABEL_22:
      v52 = v97;
      v53 = type metadata accessor for Assertion();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v52, 1, 1, v53);
    }

    swift_release();
    sub_1C132D03C(v82, v83);
    sub_1C132D03C(v40, v41);
    sub_1C132D03C(v40, v41);
    sub_1C13282B4(v40, v41);
LABEL_36:
    (*(void (**)(char *, uint64_t))(v96 + 8))(v95, v45);
    goto LABEL_22;
  }
  v78 = (void (*)(uint64_t, char *, uint64_t))v35;
  v54 = v93;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v14, 0, 1, v37);
  v55 = *(void (**)(char *, char *, uint64_t))(v54 + 32);
  v55(v92, v14, v37);
  sub_1C1329AD0(&qword_1EF6DAF10, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8CCD8], MEMORY[0x1E0D8CCF0]);
  v56 = v91;
  sub_1C1424FDC();
  v77 = (void (*)(uint64_t, char *, uint64_t))v55;
  v98 = 0;
  v57 = v90;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v9, 0, 1, v56);
  v58 = *(void (**)(char *, char *, uint64_t))(v57 + 32);
  v58(v89, v9, v56);
  sub_1C1425330();
  v60 = v100;
  v59 = v101;
  v61 = sub_1C1425CFC();
  v62 = v61;
  v45 = v85;
  if (v59 >> 60 == 15)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v6, 1, 1, v61);
    v63 = v97;
  }
  else
  {
    sub_1C133177C(v60, v59);
    sub_1C1329AD0(&qword_1EF6DAF18, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8CB90], MEMORY[0x1E0D8CBA8]);
    v64 = v98;
    sub_1C1424FDC();
    v98 = v64;
    if (v64)
    {
      swift_bridgeObjectRelease();
      if (qword_1ED7939A0 != -1)
        swift_once();
      v65 = sub_1C1426854();
      __swift_project_value_buffer(v65, (uint64_t)qword_1ED7986C8);
      sub_1C1331768(v60, v59);
      sub_1C133177C(v60, v59);
      v66 = sub_1C1426848();
      v67 = sub_1C1426C68();
      if (os_log_type_enabled(v66, v67))
      {
        v68 = (uint8_t *)swift_slowAlloc();
        v84 = swift_slowAlloc();
        v100 = v84;
        *(_DWORD *)v68 = 136446210;
        v81 = v68 + 4;
        sub_1C133177C(v60, v59);
        v69 = sub_1C14250C0();
        v71 = v70;
        sub_1C132D03C(v60, v59);
        v99 = sub_1C132AD90(v69, v71, &v100);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        sub_1C132D03C(v60, v59);
        sub_1C132D03C(v60, v59);
        _os_log_impl(&dword_1C1324000, v66, v67, "Unable to parse invalidation state: %{public}s", v68, 0xCu);
        v72 = v84;
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v72, -1, -1);
        MEMORY[0x1C3BAD3F4](v68, -1, -1);
        swift_release();

        sub_1C132D03C(v60, v59);
        sub_1C132D03C(v60, v59);
      }
      else
      {
        swift_release();

        sub_1C132D03C(v60, v59);
        sub_1C132D03C(v60, v59);
        sub_1C13282B4(v60, v59);
        sub_1C13282B4(v60, v59);
      }
      sub_1C132D03C(v82, v83);
      sub_1C132D03C(v86, v87);
      (*(void (**)(char *, uint64_t))(v90 + 8))(v89, v91);
      (*(void (**)(char *, uint64_t))(v93 + 8))(v92, v94);
      goto LABEL_36;
    }
    sub_1C132D03C(v60, v59);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v4, 0, 1, v62);
    sub_1C132A724((uint64_t)v4, (uint64_t)v6, &qword_1ED797898);
    v63 = v97;
  }
  v73 = (int *)type metadata accessor for Assertion();
  sub_1C14250F0();
  swift_release();
  sub_1C132D03C(v60, v59);
  sub_1C132D03C(v82, v83);
  sub_1C132D03C(v86, v87);
  v78(v63, v95, v45);
  v58((char *)(v63 + v73[10]), v89, v91);
  v77(v63 + v73[5], v92, v94);
  sub_1C132A724((uint64_t)v6, v63 + v73[6], &qword_1ED797898);
  v74 = (uint8_t **)(v63 + v73[7]);
  v75 = v84;
  *v74 = v81;
  v74[1] = (uint8_t *)v75;
  v76 = v63 + v73[9];
  *(_QWORD *)v76 = v80;
  *(_BYTE *)(v76 + 8) = v79;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v73 - 1) + 56))(v63, 0, 1, v73);
}

uint64_t type metadata accessor for ActivityDatabase.AssertionStore()
{
  return objc_opt_self();
}

uint64_t sub_1C134A678(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t Strong;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v72 = a1;
  v3 = sub_1C14252E8();
  MEMORY[0x1E0C80A78](v3);
  v64 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C1425300();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797898);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = v1 + 16;
  if (swift_weakLoadStrong())
  {
    v12 = sub_1C1425264();
    swift_release();
    if ((v12 & 1) != 0)
    {
      v61 = v8;
      v62 = v6;
      sub_1C1425018();
      swift_allocObject();
      v13 = sub_1C142500C();
      v14 = type metadata accessor for Assertion();
      v15 = v72;
      sub_1C1425DF8();
      sub_1C1329AD0(&qword_1ED7978A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8CC78], MEMORY[0x1E0D8CC88]);
      v16 = sub_1C1425000();
      if (v2)
        return swift_release();
      v58 = v13;
      v59 = v16;
      v60 = v17;
      v57 = v5;
      v18 = v14;
      sub_1C132C344(v15 + *(int *)(v14 + 24), (uint64_t)v11, &qword_1ED797898);
      v19 = sub_1C1425CFC();
      v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v11, 1, v19);
      sub_1C132C860((uint64_t)v11, &qword_1ED797898);
      if (v20 == 1)
      {
        v21 = 0;
        v22 = 0xF000000000000000;
      }
      else
      {
        sub_1C134B684();
        v21 = sub_1C1425000();
        v22 = v23;
      }
      sub_1C1425E4C();
      sub_1C1329AD0(&qword_1ED7978B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8CCD8], MEMORY[0x1E0D8CCE8]);
      v24 = sub_1C1425000();
      v27 = v26;
      v55 = v24;
      v56 = v22;
      sub_1C14252DC();
      sub_1C14252D0();
      sub_1C14252C4();
      sub_1C14252D0();
      sub_1C14252C4();
      sub_1C14252D0();
      sub_1C14252C4();
      sub_1C14252D0();
      sub_1C14252C4();
      sub_1C14252D0();
      sub_1C14252C4();
      sub_1C14252D0();
      sub_1C14252C4();
      sub_1C14252D0();
      sub_1C14252C4();
      sub_1C14252D0();
      sub_1C14252C4();
      sub_1C14252D0();
      v28 = sub_1C1425C84();
      v29 = MEMORY[0x1E0D8D4B0];
      v70 = MEMORY[0x1E0DEA968];
      v71 = MEMORY[0x1E0D8D4B0];
      v68 = v28;
      v69 = v30;
      sub_1C14252B8();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v68);
      sub_1C14252D0();
      v31 = MEMORY[0x1E0CB0338];
      v32 = MEMORY[0x1E0D8D400];
      v70 = MEMORY[0x1E0CB0338];
      v71 = MEMORY[0x1E0D8D400];
      v68 = v59;
      v69 = v60;
      sub_1C133177C(v59, v60);
      sub_1C14252B8();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v68);
      v33 = v56;
      sub_1C14252D0();
      v53 = v27;
      if (v33 >> 60 == 15)
      {
        v34 = v32;
        v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E38]), sel_init);
        v70 = sub_1C1330EEC(0, &qword_1ED797AB0);
        v71 = MEMORY[0x1E0D8D4C0];
        v68 = (uint64_t)v35;
      }
      else
      {
        v66 = v31;
        v67 = v32;
        *(_QWORD *)&v65 = v21;
        *((_QWORD *)&v65 + 1) = v33;
        sub_1C1339184(&v65, (uint64_t)&v68);
        v34 = v32;
      }
      v54 = v21;
      sub_1C1331768(v21, v33);
      sub_1C14252B8();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v68);
      sub_1C14252D0();
      v36 = v72;
      v37 = (uint64_t *)(v72 + *(int *)(v18 + 28));
      v39 = *v37;
      v38 = v37[1];
      v70 = MEMORY[0x1E0DEA968];
      v71 = v29;
      v68 = v39;
      v69 = v38;
      swift_bridgeObjectRetain();
      sub_1C14252B8();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v68);
      sub_1C14252D0();
      sub_1C14250FC();
      v40 = MEMORY[0x1E0DEB070];
      v41 = MEMORY[0x1E0D8D4B8];
      v70 = MEMORY[0x1E0DEB070];
      v71 = MEMORY[0x1E0D8D4B8];
      v68 = v42;
      sub_1C14252B8();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v68);
      sub_1C14252D0();
      v70 = v31;
      v71 = v34;
      v68 = v55;
      v69 = v53;
      v43 = v53;
      sub_1C133177C(v55, v53);
      sub_1C14252B8();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v68);
      sub_1C14252D0();
      v44 = (uint64_t *)(v36 + *(int *)(v18 + 36));
      if ((v44[1] & 1) != 0)
      {
        v45 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E38]), sel_init);
        v70 = sub_1C1330EEC(0, &qword_1ED797AB0);
        v71 = MEMORY[0x1E0D8D4C0];
        v68 = (uint64_t)v45;
      }
      else
      {
        v46 = *v44;
        v66 = v40;
        v67 = v41;
        *(_QWORD *)&v65 = v46;
        sub_1C1339184(&v65, (uint64_t)&v68);
      }
      v47 = v57;
      v49 = v61;
      v48 = v62;
      sub_1C14252B8();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v68);
      sub_1C14252D0();
      sub_1C14252F4();
      Strong = swift_weakLoadStrong();
      v51 = v56;
      if (Strong)
      {
        sub_1C1425294();
        swift_release();
        swift_release();
        sub_1C13282B4(v55, v43);
        sub_1C132D03C(v54, v51);
        sub_1C13282B4(v59, v60);
        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v49, v47);
      }
    }
    else
    {
      __break(1u);
    }
  }
  result = sub_1C1426F8C();
  __break(1u);
  return result;
}

uint64_t sub_1C134AE94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v11[5];

  v1 = sub_1C14252E8();
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1C1425300();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!swift_weakLoadStrong())
    goto LABEL_9;
  v6 = sub_1C1425264();
  swift_release();
  if ((v6 & 1) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1C14252DC();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  v7 = sub_1C1425C84();
  v11[3] = MEMORY[0x1E0DEA968];
  v11[4] = MEMORY[0x1E0D8D4B0];
  v11[0] = v7;
  v11[1] = v8;
  sub_1C14252B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  sub_1C14252D0();
  sub_1C14252F4();
  if (!swift_weakLoadStrong())
  {
LABEL_9:
    result = sub_1C1426F8C();
    __break(1u);
    return result;
  }
  sub_1C1425294();
  if (v0)
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_1C134B0FC()
{
  return sub_1C134B11C();
}

uint64_t sub_1C134B11C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char v5;
  uint64_t v6;
  uint64_t result;
  _QWORD v8[2];

  v0 = sub_1C14252E8();
  MEMORY[0x1E0C80A78](v0);
  v1 = sub_1C1425300();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!swift_weakLoadStrong())
    goto LABEL_9;
  v5 = sub_1C1425264();
  swift_release();
  if ((v5 & 1) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1C14252DC();
  sub_1C14252D0();
  sub_1C14252C4();
  sub_1C14252D0();
  sub_1C14252F4();
  if (!swift_weakLoadStrong())
  {
LABEL_9:
    result = sub_1C1426F8C();
    __break(1u);
    return result;
  }
  v6 = v8[1];
  sub_1C1425294();
  if (v6)
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

uint64_t type metadata accessor for ActivityDatabase.MutableAssertionStore()
{
  return objc_opt_self();
}

uint64_t sub_1C134B330()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935C8);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1C14250B4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED794660 != -1)
    swift_once();
  v7 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED793668);
  sub_1C132C344(v7, (uint64_t)v2, &qword_1ED7935C8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1C132C860((uint64_t)v2, &qword_1ED7935C8);
    result = sub_1C1426F8C();
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
    v8 = sub_1C134DFA4((uint64_t)v6, 4);
    result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    qword_1ED798640 = v8;
  }
  return result;
}

_QWORD *sub_1C134B4D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  type metadata accessor for ActivityDatabase.MutablePushSubscriptionStore();
  v1 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  v0[2] = v1;
  type metadata accessor for ActivityDatabase.MutablePushTokenStore();
  v2 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  v0[3] = v2;
  type metadata accessor for ActivityDatabase.MutablePublicTokenStore();
  v3 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  v0[4] = v3;
  type metadata accessor for ActivityDatabase.MutablePushBudgetStore();
  v4 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  v0[5] = v4;
  type metadata accessor for ActivityDatabase.MutableActivityStore();
  v5 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  v0[6] = v5;
  type metadata accessor for ActivityDatabase.MutableSyncEngineRecordMetadataStore();
  v6 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  v0[7] = v6;
  type metadata accessor for ActivityDatabase.MutableSyncEnginePairedDeviceIdentifierStore();
  v7 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  v0[8] = v7;
  type metadata accessor for ActivityDatabase.MutableSyncEngineRecordIDSyncDateStore();
  v8 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  v0[9] = v8;
  type metadata accessor for ActivityDatabase.MutableAssertionStore();
  v9 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  v0[10] = v9;
  return v0;
}

unint64_t sub_1C134B684()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1EF6DAEE8;
  if (!qword_1EF6DAEE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED797898);
    v2 = sub_1C1329AD0(&qword_1EF6DAEF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8CB90], MEMORY[0x1E0D8CBA0]);
    result = MEMORY[0x1C3BAD334](MEMORY[0x1E0DEE988], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EF6DAEE8);
  }
  return result;
}

unint64_t sub_1C134B700(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  _QWORD v35[3];
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;

  v3 = sub_1C142671C();
  MEMORY[0x1E0C80A78](v3);
  v38 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B60);
  v6 = MEMORY[0x1E0C80A78](v5);
  v37 = (uint64_t)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v35 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7978D0);
  MEMORY[0x1E0C80A78](v10);
  v50 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1C1426494();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v51 = (char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v42 = (char *)v35 - v16;
  v45 = sub_1C1425324();
  MEMORY[0x1E0C80A78](v45);
  v19 = (char *)v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(a1 + 16);
  if (v20)
  {
    v35[1] = a1;
    v35[2] = v1;
    v21 = a1 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    v48 = *(_QWORD *)(v17 + 72);
    v49 = v17;
    v47 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
    swift_bridgeObjectRetain();
    v54 = MEMORY[0x1E0DEE9D8];
    v22 = v45;
    v43 = v13;
    v46 = v12;
    v36 = v9;
    while (1)
    {
      v47(v19, v21, v22);
      sub_1C1425330();
      if (v53)
        break;
      v23 = 1;
      v24 = (uint64_t)v50;
LABEL_20:
      v27 = v46;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v24, v23, 1, v46);
      (*(void (**)(char *, uint64_t))(v49 + 8))(v19, v22);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v24, 1, v27) == 1)
      {
        sub_1C132C860(v24, &qword_1ED7978D0);
      }
      else
      {
        v28 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 32);
        v29 = v42;
        v28(v42, v24, v27);
        v28(v51, (uint64_t)v29, v27);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v30 = v54;
        else
          v30 = sub_1C136C60C(0, *(_QWORD *)(v54 + 16) + 1, 1, v54);
        v32 = *(_QWORD *)(v30 + 16);
        v31 = *(_QWORD *)(v30 + 24);
        if (v32 >= v31 >> 1)
          v30 = sub_1C136C60C(v31 > 1, v32 + 1, 1, v30);
        *(_QWORD *)(v30 + 16) = v32 + 1;
        v33 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
        v54 = v30;
        v28((char *)(v30 + v33 + *(_QWORD *)(v13 + 72) * v32), (uint64_t)v51, v27);
        v22 = v45;
      }
      v21 += v48;
      if (!--v20)
      {
        swift_bridgeObjectRelease();
        return v54;
      }
    }
    v44 = v52;
    sub_1C1425330();
    if (!v53)
    {
      swift_bridgeObjectRelease();
      v23 = 1;
      v24 = (uint64_t)v50;
LABEL_19:
      v13 = v43;
      goto LABEL_20;
    }
    v41 = v52;
    sub_1C1425330();
    if (v53)
    {
      sub_1C1425330();
      if (v53 >> 60 != 15)
      {
        v39 = v52;
        v40 = v53;
        sub_1C1425330();
        if ((v53 & 1) != 0)
        {
          v25 = sub_1C14251B0();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v9, 1, 1, v25);
        }
        else
        {
          sub_1C14250F0();
          v26 = sub_1C14251B0();
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v9, 0, 1, v26);
        }
        sub_1C1426704();
        sub_1C132C344((uint64_t)v9, v37, &qword_1ED793B60);
        v24 = (uint64_t)v50;
        sub_1C1426464();
        v9 = v36;
        sub_1C132C860((uint64_t)v36, &qword_1ED793B60);
        v23 = 0;
        goto LABEL_18;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v23 = 1;
    v24 = (uint64_t)v50;
LABEL_18:
    v22 = v45;
    goto LABEL_19;
  }
  return MEMORY[0x1E0DEE9D8];
}

unint64_t sub_1C134BC90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  char *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _QWORD v25[2];
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  unint64_t v32;
  unint64_t v33;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793928);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C142659C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v31 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v26 = (char *)v25 - v10;
  v27 = sub_1C1425324();
  MEMORY[0x1E0C80A78](v27);
  v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a1 + 16);
  if (v14)
  {
    v25[0] = a1;
    v25[1] = v1;
    v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v29 = *(_QWORD *)(v11 + 72);
    v30 = v11;
    v28 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    swift_bridgeObjectRetain();
    v33 = MEMORY[0x1E0DEE9D8];
    v16 = v27;
    while (1)
    {
      v28(v13, v15, v16);
      sub_1C1425330();
      if (v32)
      {
        sub_1C1425330();
        if (v32 >> 60 != 15)
        {
          sub_1C1426578();
          v17 = 0;
          goto LABEL_10;
        }
        swift_bridgeObjectRelease();
      }
      v17 = 1;
LABEL_10:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, v17, 1, v6);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v16);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
      {
        sub_1C132C860((uint64_t)v5, (uint64_t *)&unk_1ED793928);
      }
      else
      {
        v18 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
        v19 = v26;
        v18(v26, v5, v6);
        v18(v31, v19, v6);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v20 = v33;
        else
          v20 = sub_1C136C620(0, *(_QWORD *)(v33 + 16) + 1, 1, v33);
        v22 = *(_QWORD *)(v20 + 16);
        v21 = *(_QWORD *)(v20 + 24);
        if (v22 >= v21 >> 1)
          v20 = sub_1C136C620(v21 > 1, v22 + 1, 1, v20);
        *(_QWORD *)(v20 + 16) = v22 + 1;
        v23 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
        v33 = v20;
        v18((char *)(v20 + v23 + *(_QWORD *)(v7 + 72) * v22), v31, v6);
        v16 = v27;
      }
      v15 += v29;
      if (!--v14)
      {
        swift_bridgeObjectRelease();
        return v33;
      }
    }
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1C134BFD0(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD), void (*a4)(_QWORD), uint64_t (*a5)(BOOL, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v29;
  unint64_t v30;
  uint64_t v32;
  uint64_t (*v33)(BOOL, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  void (*v36)(_QWORD);
  char *v37;
  uint64_t *v38;
  uint64_t v39;
  char *v40;

  v9 = v5;
  v38 = a2;
  v11 = __swift_instantiateConcreteTypeFromMangledName(a2);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a3(0);
  v15 = a1;
  v16 = v14;
  v17 = *(_QWORD *)(v14 - 8);
  v18 = MEMORY[0x1E0C80A78](v14);
  v40 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v37 = (char *)&v32 - v20;
  v21 = *(_QWORD *)(v15 + 16);
  if (!v21)
    return MEMORY[0x1E0DEE9D8];
  v33 = a5;
  v22 = *(_QWORD *)(sub_1C1425324() - 8);
  v23 = v15 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
  v24 = *(_QWORD *)(v22 + 72);
  v34 = v15;
  swift_bridgeObjectRetain();
  v25 = MEMORY[0x1E0DEE9D8];
  v35 = v24;
  v36 = a4;
  do
  {
    a4(v23);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v13, 1, v16) == 1)
    {
      sub_1C132C860((uint64_t)v13, v38);
    }
    else
    {
      v26 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
      v27 = v37;
      v26(v37, v13, v16);
      v26(v40, v27, v16);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v39 = v9;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v25 = v33(0, *(_QWORD *)(v25 + 16) + 1, 1, v25);
      v30 = *(_QWORD *)(v25 + 16);
      v29 = *(_QWORD *)(v25 + 24);
      if (v30 >= v29 >> 1)
        v25 = v33(v29 > 1, v30 + 1, 1, v25);
      *(_QWORD *)(v25 + 16) = v30 + 1;
      v26((char *)(v25+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(_QWORD *)(v17 + 72) * v30), v40, v16);
      v9 = v39;
      v24 = v35;
      a4 = v36;
    }
    v23 += v24;
    --v21;
  }
  while (v21);
  swift_bridgeObjectRelease();
  return v25;
}

unint64_t sub_1C134C22C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD v32[3];
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v3 = sub_1C1426008();
  v37 = *(_QWORD *)(v3 - 8);
  v38 = v3;
  v4 = MEMORY[0x1E0C80A78](v3);
  v35 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v41 = (char *)v32 - v6;
  v34 = sub_1C14251B0();
  v36 = *(_QWORD *)(v34 - 8);
  v7 = MEMORY[0x1E0C80A78](v34);
  v33 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v40 = (char *)v32 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7978B8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1C1425FB4();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v47 = (char *)v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v43 = (char *)v32 - v17;
  v51 = sub_1C1425324();
  MEMORY[0x1E0C80A78](v51);
  v20 = (char *)v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)(a1 + 16);
  if (v21)
  {
    v32[1] = a1;
    v32[2] = v1;
    v22 = a1 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    v45 = *(_QWORD *)(v18 + 72);
    v46 = v18;
    v44 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
    swift_bridgeObjectRetain();
    v48 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      v44(v20, v22, v51);
      sub_1C1425330();
      if (v50)
      {
        sub_1C1425330();
        if (v50)
        {
          v42 = v49;
          sub_1C1425330();
          if ((v50 & 1) == 0)
          {
            v39 = v49;
            sub_1C1425330();
            if ((v50 & 1) == 0)
            {
              sub_1C14250F0();
              sub_1C1425FE4();
              LODWORD(v42) = v39 == 1;
              (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v35, v41, v38);
              v30 = v34;
              (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v40, v34);
              sub_1C1425F90();
              (*(void (**)(char *, uint64_t))(v37 + 8))(v41, v38);
              (*(void (**)(char *, uint64_t))(v36 + 8))(v40, v30);
              v23 = 0;
              goto LABEL_12;
            }
          }
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        v23 = 1;
      }
      else
      {
        v23 = 1;
      }
LABEL_12:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, v23, 1, v13);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v20, v51);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
      {
        sub_1C132C860((uint64_t)v12, &qword_1ED7978B8);
      }
      else
      {
        v24 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
        v25 = v43;
        v24(v43, v12, v13);
        v24(v47, v25, v13);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v26 = v48;
        else
          v26 = sub_1C136C65C(0, *(_QWORD *)(v48 + 16) + 1, 1, v48);
        v28 = *(_QWORD *)(v26 + 16);
        v27 = *(_QWORD *)(v26 + 24);
        if (v28 >= v27 >> 1)
          v26 = sub_1C136C65C(v27 > 1, v28 + 1, 1, v26);
        *(_QWORD *)(v26 + 16) = v28 + 1;
        v29 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
        v48 = v26;
        v24((char *)(v26 + v29 + *(_QWORD *)(v14 + 72) * v28), v47, v13);
      }
      v22 += v45;
      if (!--v21)
      {
        swift_bridgeObjectRelease();
        return v48;
      }
    }
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1C134C748(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD v17[2];
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v3 = sub_1C1425324();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v17[0] = a1;
    v17[1] = v1;
    v8 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v22 = *(_QWORD *)(v4 + 72);
    v19 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    swift_bridgeObjectRetain();
    v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v18 = v4;
    do
    {
      v19(v6, v8, v3);
      sub_1C1425330();
      v11 = v20;
      v12 = v21;
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      if (v12)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v9 = sub_1C136C3E0(0, v9[2] + 1, 1, v9);
        v14 = v9[2];
        v13 = v9[3];
        if (v14 >= v13 >> 1)
          v9 = sub_1C136C3E0((_QWORD *)(v13 > 1), v14 + 1, 1, v9);
        v9[2] = v14 + 1;
        v10 = &v9[2 * v14];
        v10[4] = v11;
        v10[5] = v12;
        v4 = v18;
      }
      v8 += v22;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v15 = sub_1C1375140((uint64_t)v9);
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1C134C910(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  _QWORD *v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  _QWORD *v65;
  uint64_t v66;
  void (*v67)(uint64_t, char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v71;
  char v72;
  char v73;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(unint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  char v84;
  unint64_t v85;
  uint64_t v86;
  _BOOL8 v87;
  uint64_t v88;
  char v89;
  unint64_t v90;
  char v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  char v95;
  unint64_t v96;
  uint64_t v97;
  _BOOL8 v98;
  uint64_t v99;
  char v100;
  unint64_t v101;
  char v102;
  uint64_t *v103;
  uint64_t v104;
  BOOL v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  char v112;
  char v113;
  char v114;
  uint64_t v115;
  uint64_t result;
  _QWORD v117[3];
  char *v118;
  char *v119;
  _QWORD *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  _QWORD *v125;
  char *v126;
  _QWORD *v127;
  uint64_t *v128;
  uint64_t *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  _QWORD *v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B60);
  v3 = MEMORY[0x1E0C80A78](v2);
  v121 = (char *)v117 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v130 = (char *)v117 - v5;
  v6 = sub_1C1426008();
  v144 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v117 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)v117 - v11;
  MEMORY[0x1E0C80A78](v10);
  v119 = (char *)v117 - v13;
  v141 = sub_1C14251B0();
  v139 = *(_QWORD *)(v141 - 8);
  v14 = MEMORY[0x1E0C80A78](v141);
  v126 = (char *)v117 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v135 = (char *)v117 - v17;
  MEMORY[0x1E0C80A78](v16);
  v118 = (char *)v117 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797A18);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v117 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v136 = (_QWORD *)sub_1C1425324();
  v22 = *(v136 - 1);
  MEMORY[0x1E0C80A78](v136);
  v24 = (char *)v117 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797A10);
  v123 = *(_QWORD *)(v134 - 8);
  v25 = MEMORY[0x1E0C80A78](v134);
  v133 = (uint64_t)v117 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v25);
  v122 = (uint64_t)v117 - v28;
  MEMORY[0x1E0C80A78](v27);
  v129 = (_QWORD *)((char *)v117 - v29);
  v30 = *(_QWORD *)(a1 + 16);
  v140 = v6;
  v137 = v12;
  v138 = v9;
  if (v30)
  {
    v31 = v22;
    v32 = a1 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
    v131 = *(_QWORD *)(v31 + 72);
    v132 = v31;
    v128 = *(uint64_t **)(v31 + 16);
    v117[1] = a1;
    swift_bridgeObjectRetain();
    v33 = MEMORY[0x1E0DEE9D8];
    v34 = v123;
    v127 = v21;
    while (1)
    {
      ((void (*)(char *, uint64_t, _QWORD *))v128)(v24, v32, v136);
      sub_1C1425330();
      v35 = v143;
      if (v143)
      {
        v125 = v142;
        sub_1C1425330();
        if (v143)
        {
          v124 = v33;
          v120 = v142;
          sub_1C1425330();
          if (v143)
          {
            sub_1C1425330();
            if ((v143 & 1) == 0)
            {
              v42 = v118;
              sub_1C14250F0();
              v43 = v119;
              sub_1C1425FE4();
              v44 = v127;
              v45 = (char *)v127 + *(int *)(v134 + 48);
              v46 = (char *)v127 + *(int *)(v134 + 64);
              *v127 = v125;
              v44[1] = v35;
              v37 = (uint64_t)v44;
              v47 = v43;
              v34 = v123;
              (*(void (**)(char *, char *, uint64_t))(v144 + 32))(v45, v47, v140);
              (*(void (**)(char *, char *, uint64_t))(v139 + 32))(v46, v42, v141);
              v36 = 0;
              v12 = v137;
              v33 = v124;
              goto LABEL_15;
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          v36 = 1;
          v12 = v137;
          v33 = v124;
        }
        else
        {
          swift_bridgeObjectRelease();
          v36 = 1;
          v12 = v137;
        }
      }
      else
      {
        v36 = 1;
      }
      v37 = (uint64_t)v127;
LABEL_15:
      v38 = v134;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56))(v37, v36, 1, v134);
      (*(void (**)(char *, _QWORD *))(v132 + 8))(v24, v136);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v37, 1, v38) == 1)
      {
        sub_1C132C860(v37, &qword_1ED797A18);
      }
      else
      {
        v39 = v122;
        sub_1C132A724(v37, v122, &qword_1ED797A10);
        sub_1C132A724(v39, v133, &qword_1ED797A10);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v33 = sub_1C136C670(0, *(_QWORD *)(v33 + 16) + 1, 1, v33);
        v41 = *(_QWORD *)(v33 + 16);
        v40 = *(_QWORD *)(v33 + 24);
        if (v41 >= v40 >> 1)
          v33 = sub_1C136C670(v40 > 1, v41 + 1, 1, v33);
        *(_QWORD *)(v33 + 16) = v41 + 1;
        v34 = v123;
        sub_1C132A724(v133, v33+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(_QWORD *)(v123 + 72) * v41, &qword_1ED797A10);
        v12 = v137;
      }
      v32 += v131;
      if (!--v30)
      {
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
    }
  }
  v33 = MEMORY[0x1E0DEE9D8];
  v34 = v123;
LABEL_24:
  v48 = *(_QWORD *)(v33 + 16);
  v49 = (uint64_t)v130;
  v50 = v135;
  if (!v48)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9E0];
  }
  v128 = (uint64_t *)((char *)v129 + *(int *)(v134 + 48));
  v127 = (uint64_t *)((char *)v129 + *(int *)(v134 + 64));
  v51 = v33 + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
  v52 = *(_QWORD **)(v34 + 72);
  v124 = v33;
  v125 = v52;
  v53 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v54 = v141;
  v55 = v139;
  while (1)
  {
    v131 = v51;
    v132 = v48;
    v57 = v129;
    sub_1C132C344(v51, (uint64_t)v129, &qword_1ED797A10);
    v58 = v12;
    v59 = *v57;
    v60 = v57[1];
    v61 = v58;
    (*(void (**)(void))(v144 + 32))();
    v136 = *(_QWORD **)(v55 + 32);
    ((void (*)(char *, _QWORD *, uint64_t))v136)(v50, v127, v54);
    v62 = v53[2];
    swift_bridgeObjectRetain();
    v133 = v59;
    v134 = v60;
    if (!v62)
      goto LABEL_33;
    v63 = sub_1C13277A0(v59, v60);
    v49 = (uint64_t)v130;
    if ((v64 & 1) != 0)
    {
      v65 = *(_QWORD **)(v53[7] + 8 * v63);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v66 = (uint64_t)v138;
      if (v65)
        goto LABEL_35;
    }
    else
    {
LABEL_33:
      swift_bridgeObjectRelease();
      v66 = (uint64_t)v138;
    }
    v65 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_35:
    v67 = *(void (**)(uint64_t, char *, uint64_t))(v144 + 16);
    v67(v66, v61, v140);
    v68 = v139;
    v69 = v141;
    (*(void (**)(uint64_t, char *, uint64_t))(v139 + 16))(v49, v135, v141);
    v70 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 56);
    v70(v49, 0, 1, v69);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v49, 1, v69) != 1)
      break;
    sub_1C132C860(v49, &qword_1ED793B60);
    swift_bridgeObjectRetain();
    v71 = sub_1C13B9A18(v66);
    v73 = v72;
    swift_bridgeObjectRelease();
    if ((v73 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v142 = v65;
      v75 = v144;
      v50 = v135;
      v76 = v140;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v115 = v144;
        sub_1C13BA608();
        v75 = v115;
        v65 = v142;
      }
      v77 = v76;
      v78 = *(void (**)(unint64_t, uint64_t))(v75 + 8);
      v78(v65[6] + *(_QWORD *)(v75 + 72) * v71, v77);
      v79 = v141;
      v65 = v142;
      v80 = (uint64_t)v121;
      ((void (*)(char *, unint64_t, uint64_t))v136)(v121, v142[7] + *(_QWORD *)(v139 + 72) * v71, v141);
      sub_1C13C0D34(v71, (uint64_t)v65);
      swift_bridgeObjectRelease();
      v81 = v79;
      v82 = v140;
      v70(v80, 0, 1, v81);
    }
    else
    {
      v80 = (uint64_t)v121;
      v70((uint64_t)v121, 1, 1, v141);
      v78 = *(void (**)(unint64_t, uint64_t))(v144 + 8);
      v50 = v135;
      v82 = v140;
    }
    v136 = v78;
    v78((unint64_t)v138, v82);
    sub_1C132C860(v80, &qword_1ED793B60);
    v92 = v134;
    if (v65)
      goto LABEL_46;
LABEL_62:
    swift_bridgeObjectRetain();
    v111 = sub_1C13277A0(v133, v92);
    v113 = v112;
    swift_bridgeObjectRelease();
    if ((v113 & 1) == 0)
      goto LABEL_28;
    v114 = swift_isUniquelyReferenced_nonNull_native();
    v142 = v53;
    if ((v114 & 1) == 0)
    {
      sub_1C13BA5FC();
      v53 = v142;
    }
    swift_bridgeObjectRelease();
    sub_1C13C0B5C(v111, v53);
    swift_bridgeObjectRelease();
LABEL_27:
    swift_bridgeObjectRelease();
LABEL_28:
    swift_bridgeObjectRelease();
    v49 = (uint64_t)v130;
    v12 = v137;
    v55 = v139;
    v54 = v141;
    (*(void (**)(char *, uint64_t))(v139 + 8))(v50, v141);
    ((void (*)(char *, uint64_t))v136)(v12, v82);
    swift_bridgeObjectRelease();
    v51 = (uint64_t)v125 + v131;
    v48 = v132 - 1;
    if (v132 == 1)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v53;
    }
  }
  ((void (*)(char *, uint64_t, uint64_t))v136)(v126, v49, v69);
  v83 = swift_isUniquelyReferenced_nonNull_native();
  v142 = v65;
  v85 = sub_1C13B9A18(v66);
  v86 = v65[2];
  v87 = (v84 & 1) == 0;
  v88 = v86 + v87;
  if (__OFADD__(v86, v87))
    goto LABEL_71;
  v89 = v84;
  if (v65[3] >= v88)
  {
    v92 = v134;
    if ((v83 & 1) == 0)
      sub_1C13BA608();
  }
  else
  {
    sub_1C13BD584(v88, v83);
    v90 = sub_1C13B9A18((uint64_t)v138);
    v92 = v134;
    if ((v89 & 1) != (v91 & 1))
      goto LABEL_75;
    v85 = v90;
  }
  v82 = v140;
  v107 = v142;
  if ((v89 & 1) != 0)
  {
    (*(void (**)(unint64_t, char *, uint64_t))(v139 + 40))(v142[7] + *(_QWORD *)(v139 + 72) * v85, v126, v141);
    v108 = (uint64_t)v138;
  }
  else
  {
    v142[(v85 >> 6) + 8] |= 1 << v85;
    v108 = (uint64_t)v138;
    v67(v107[6] + *(_QWORD *)(v144 + 72) * v85, v138, v82);
    ((void (*)(unint64_t, char *, uint64_t))v136)(v107[7] + *(_QWORD *)(v139 + 72) * v85, v126, v141);
    v109 = v107[2];
    v105 = __OFADD__(v109, 1);
    v110 = v109 + 1;
    if (v105)
      goto LABEL_73;
    v107[2] = v110;
  }
  v65 = v142;
  swift_bridgeObjectRelease();
  v136 = *(_QWORD **)(v144 + 8);
  ((void (*)(uint64_t, uint64_t))v136)(v108, v82);
  v50 = v135;
  if (!v65)
    goto LABEL_62;
LABEL_46:
  swift_bridgeObjectRetain();
  v93 = swift_isUniquelyReferenced_nonNull_native();
  v142 = v53;
  v94 = v133;
  v96 = sub_1C13277A0(v133, v92);
  v97 = v53[2];
  v98 = (v95 & 1) == 0;
  v99 = v97 + v98;
  if (!__OFADD__(v97, v98))
  {
    v100 = v95;
    if (v53[3] >= v99)
    {
      if ((v93 & 1) == 0)
        sub_1C13BA5FC();
    }
    else
    {
      sub_1C13BD578(v99, v93);
      v101 = sub_1C13277A0(v94, v92);
      if ((v100 & 1) != (v102 & 1))
        goto LABEL_74;
      v96 = v101;
    }
    v82 = v140;
    v53 = v142;
    if ((v100 & 1) != 0)
    {
      v56 = v142[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v56 + 8 * v96) = v65;
    }
    else
    {
      v142[(v96 >> 6) + 8] |= 1 << v96;
      v103 = (uint64_t *)(v53[6] + 16 * v96);
      *v103 = v94;
      v103[1] = v92;
      *(_QWORD *)(v53[7] + 8 * v96) = v65;
      v104 = v53[2];
      v105 = __OFADD__(v104, 1);
      v106 = v104 + 1;
      if (v105)
        goto LABEL_72;
      v53[2] = v106;
      swift_bridgeObjectRetain();
    }
    goto LABEL_27;
  }
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  sub_1C142707C();
  __break(1u);
LABEL_75:
  result = sub_1C142707C();
  __break(1u);
  return result;
}

uint64_t sub_1C134D59C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD), void (*a4)(_QWORD), uint64_t (*a5)(BOOL, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(_QWORD);
  unint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t (*v27)(BOOL, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  void (*v29)(_QWORD);
  uint64_t v30;
  uint64_t *v31;
  uint64_t (*v32)(_QWORD);
  uint64_t v33;
  uint64_t v34;

  v31 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(a2);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = a3;
  v34 = a3(0);
  v12 = *(_QWORD *)(v34 - 8);
  v13 = MEMORY[0x1E0C80A78](v34);
  v33 = (uint64_t)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v30 = (uint64_t)&v26 - v15;
  v16 = *(_QWORD *)(a1 + 16);
  if (!v16)
    return MEMORY[0x1E0DEE9D8];
  v27 = a5;
  v17 = *(_QWORD *)(sub_1C1425324() - 8);
  v18 = a1 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
  v19 = *(_QWORD *)(v17 + 72);
  v28 = a1;
  swift_bridgeObjectRetain();
  v20 = MEMORY[0x1E0DEE9D8];
  v29 = a4;
  do
  {
    a4(v18);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v34) == 1)
    {
      sub_1C132C860((uint64_t)v11, v31);
    }
    else
    {
      v21 = v30;
      v22 = v32;
      sub_1C1339140((uint64_t)v11, v30, v32);
      sub_1C1339140(v21, v33, v22);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v20 = v27(0, *(_QWORD *)(v20 + 16) + 1, 1, v20);
      v24 = *(_QWORD *)(v20 + 16);
      v23 = *(_QWORD *)(v20 + 24);
      if (v24 >= v23 >> 1)
        v20 = v27(v23 > 1, v24 + 1, 1, v20);
      *(_QWORD *)(v20 + 16) = v24 + 1;
      sub_1C1339140(v33, v20+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v24, v32);
      a4 = v29;
    }
    v18 += v19;
    --v16;
  }
  while (v16);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_1C134D7EC(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED797A30);
    v10 = sub_1C1329AD0(a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F798], a3);
    result = MEMORY[0x1C3BAD334](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C134D870(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1C134D8B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_QWORD, _QWORD, _QWORD);
  char *v24;
  char *v25;
  id v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  id v37;
  void *v38;
  unsigned int v39;
  id v40;
  void *v41;
  id v42;
  void *v43;
  uint64_t v44;
  id v45;
  id v46;
  NSObject *v47;
  uint64_t v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  void (*v59)(_QWORD, _QWORD, _QWORD);
  uint64_t v60;
  char *v61;
  uint64_t v62;
  id v63;
  char *v64;
  char *v65;
  uint64_t v66;
  id v67[3];

  v67[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = sub_1C14250B4();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v65 = (char *)&v56 - v8;
  MEMORY[0x1E0C80A78](v7);
  v64 = (char *)&v56 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935C8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = (id)objc_opt_self();
  v13 = objc_msgSend(v63, sel_defaultManager);
  v14 = (void *)sub_1C1425090();
  v67[0] = 0;
  v15 = objc_msgSend(v13, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v14, 0, 0, v67);

  v16 = v67[0];
  if (v15)
  {
    v17 = sub_1C1426B90();
    v18 = v16;

    v20 = *(_QWORD *)(v17 + 16);
    if (v20)
    {
      v21 = *(unsigned __int8 *)(v3 + 80);
      v56 = v17;
      v22 = v17 + ((v21 + 32) & ~v21);
      v60 = *(_QWORD *)(v3 + 72);
      v23 = *(void (**)(_QWORD, _QWORD, _QWORD))(v3 + 16);
      *(_QWORD *)&v19 = 136446210;
      v58 = v19;
      v57 = MEMORY[0x1E0DEE9B8] + 8;
      v61 = v12;
      v62 = v3;
      v24 = v64;
      v25 = v65;
      v59 = v23;
      v23(v12, v22, v2);
      while (1)
      {
        v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
        v27(v12, 0, 1, v2);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v12, 1, v2) == 1)
          break;
        (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v24, v12, v2);
        if (qword_1ED7939A0 != -1)
          swift_once();
        v28 = sub_1C1426854();
        __swift_project_value_buffer(v28, (uint64_t)qword_1ED7986C8);
        v23(v25, v24, v2);
        v29 = sub_1C1426848();
        v30 = sub_1C1426C80();
        if (os_log_type_enabled(v29, v30))
        {
          v31 = swift_slowAlloc();
          v32 = (void *)swift_slowAlloc();
          v67[0] = v32;
          *(_DWORD *)v31 = v58;
          sub_1C1329AD0(&qword_1EF6DAF48, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
          v33 = sub_1C1427058();
          *(_QWORD *)(v31 + 4) = sub_1C132AD90(v33, v34, (uint64_t *)v67);
          swift_bridgeObjectRelease();
          v35 = *(void (**)(char *, uint64_t))(v3 + 8);
          v35(v65, v2);
          _os_log_impl(&dword_1C1324000, v29, v30, "Removing %{public}s", (uint8_t *)v31, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3BAD3F4](v32, -1, -1);
          v36 = v31;
          v25 = v65;
          MEMORY[0x1C3BAD3F4](v36, -1, -1);
        }
        else
        {
          v35 = *(void (**)(char *, uint64_t))(v3 + 8);
          v35(v25, v2);
        }

        v37 = objc_msgSend(v63, sel_defaultManager, v56, v57);
        v24 = v64;
        v38 = (void *)sub_1C1425090();
        v67[0] = 0;
        v39 = objc_msgSend(v37, sel_removeItemAtURL_error_, v38, v67);

        if (v39)
        {
          v26 = v67[0];
        }
        else
        {
          v40 = v67[0];
          v41 = (void *)sub_1C1425078();

          swift_willThrow();
        }
        v23 = v59;
        v35(v24, v2);
        v12 = v61;
        v22 += v60;
        --v20;
        v3 = v62;
        if (!v20)
        {
          v27(v61, 1, 1, v2);
          break;
        }
        v23(v61, v22, v2);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v12, 1, 1, v2);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v42 = v67[0];
    v43 = (void *)sub_1C1425078();

    swift_willThrow();
    if (qword_1ED7939A0 != -1)
      swift_once();
    v44 = sub_1C1426854();
    __swift_project_value_buffer(v44, (uint64_t)qword_1ED7986C8);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, a1, v2);
    v45 = v43;
    v46 = v43;
    v47 = sub_1C1426848();
    v48 = v3;
    v49 = sub_1C1426C80();
    if (os_log_type_enabled(v47, v49))
    {
      v50 = swift_slowAlloc();
      v65 = (char *)swift_slowAlloc();
      v67[0] = v65;
      *(_DWORD *)v50 = 136446466;
      sub_1C1329AD0(&qword_1EF6DAF48, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      v51 = sub_1C1427058();
      v66 = sub_1C132AD90(v51, v52, (uint64_t *)v67);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v6, v2);
      *(_WORD *)(v50 + 12) = 2082;
      swift_getErrorValue();
      v53 = sub_1C1427088();
      v66 = sub_1C132AD90(v53, v54, (uint64_t *)v67);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C1324000, v47, v49, "Unable to clean up %{public}s: %{public}s", (uint8_t *)v50, 0x16u);
      v55 = v65;
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v55, -1, -1);
      MEMORY[0x1C3BAD3F4](v50, -1, -1);

    }
    else
    {

      (*(void (**)(char *, uint64_t))(v48 + 8))(v6, v2);
    }
  }
}

uint64_t sub_1C134DFA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  __int128 v16;
  uint64_t *v17;
  uint64_t v18;
  __int128 v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  v4 = sub_1C1425288();
  MEMORY[0x1E0C80A78](v4);
  v26 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C14250B4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v25 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v16 - v10;
  if (a2 < 1)
  {
    __break(1u);
    result = sub_1C1426F80();
    __break(1u);
  }
  else
  {
    v17 = &v27;
    v24 = 0x80000001C142D790;
    *(_QWORD *)&v11 = 136446210;
    v19 = v11;
    v18 = MEMORY[0x1E0DEE9B8] + 8;
    *(_QWORD *)&v11 = 136315138;
    v16 = v11;
    v22 = v6;
    v23 = a1;
    v20 = (char *)&v16 - v10;
    v21 = v7;
    sub_1C142509C();
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v25, v12, v6);
    v13 = (uint64_t)v26;
    sub_1C142527C();
    type metadata accessor for ActivityDatabase();
    v14 = swift_allocObject();
    sub_1C1340710(v13);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    return v14;
  }
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_1C134E518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1C134E520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;

  v4 = (*(uint64_t (**)(void))(a4 + 16))();
  return v4 | ((HIDWORD(v4) & 1) << 32);
}

uint64_t sub_1C134E54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_1C134E554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

void sub_1C134E55C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  int64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = a1;
    v34 = MEMORY[0x1E0DEE9D8];
    sub_1C13369AC(0, v1, 0);
    v4 = sub_1C1358340(v2);
    v5 = 0;
    v6 = v2 + 64;
    v26 = v2 + 80;
    v27 = v1;
    v28 = v3;
    v29 = v2 + 64;
    v30 = v2;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(_BYTE *)(v2 + 32))
    {
      v9 = (unint64_t)v4 >> 6;
      if ((*(_QWORD *)(v6 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0)
        goto LABEL_23;
      if (*(_DWORD *)(v2 + 36) != v3)
        goto LABEL_24;
      v31 = v5;
      v10 = *(void **)(*(_QWORD *)(v2 + 56) + 8 * v4);
      sub_1C13582F8();
      v11 = v10;
      v12 = sub_1C1426DDC();
      v32 = v13;
      v33 = v12;
      v14 = objc_msgSend(v11, sel_description);
      v15 = sub_1C1426A88();
      v17 = v16;

      v19 = *(_QWORD *)(v34 + 16);
      v18 = *(_QWORD *)(v34 + 24);
      if (v19 >= v18 >> 1)
        sub_1C13369AC(v18 > 1, v19 + 1, 1);
      *(_QWORD *)(v34 + 16) = v19 + 1;
      v20 = (_QWORD *)(v34 + 48 * v19);
      v20[4] = v33;
      v20[5] = v32;
      v20[6] = v15;
      v20[7] = v17;
      v20[9] = MEMORY[0x1E0DEA968];
      v2 = v30;
      v7 = 1 << *(_BYTE *)(v30 + 32);
      if (v4 >= v7)
        goto LABEL_25;
      v6 = v29;
      v21 = *(_QWORD *)(v29 + 8 * v9);
      if ((v21 & (1 << v4)) == 0)
        goto LABEL_26;
      v3 = v28;
      if (*(_DWORD *)(v30 + 36) != v28)
        goto LABEL_27;
      v22 = v21 & (-2 << (v4 & 0x3F));
      if (v22)
      {
        v7 = __clz(__rbit64(v22)) | v4 & 0xFFFFFFFFFFFFFFC0;
        v8 = v27;
      }
      else
      {
        v23 = v9 + 1;
        v24 = (unint64_t)(v7 + 63) >> 6;
        v8 = v27;
        if (v9 + 1 < v24)
        {
          v25 = *(_QWORD *)(v29 + 8 * v23);
          if (v25)
          {
LABEL_20:
            v7 = __clz(__rbit64(v25)) + (v23 << 6);
          }
          else
          {
            while (v24 - 2 != v9)
            {
              v25 = *(_QWORD *)(v26 + 8 * v9++);
              if (v25)
              {
                v23 = v9 + 1;
                goto LABEL_20;
              }
            }
          }
        }
      }
      v5 = v31 + 1;
      v4 = v7;
      if (v31 + 1 == v8)
        return;
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
  }
}

uint64_t sub_1C134E7DC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ProcessMonitor()
{
  return objc_opt_self();
}

void sub_1C134E840(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  os_unfair_lock_s *v12;
  uint64_t v13;

  v2 = v1;
  if (qword_1ED793998 != -1)
    swift_once();
  v4 = sub_1C1426854();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED7985F8);
  swift_bridgeObjectRetain_n();
  v5 = sub_1C1426848();
  v6 = sub_1C1426C80();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v13 = v8;
    *(_DWORD *)v7 = 136380675;
    swift_bridgeObjectRetain();
    v9 = sub_1C1426C08();
    v11 = v10;
    swift_bridgeObjectRelease();
    sub_1C132AD90(v9, v11, &v13);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1324000, v5, v6, "Monitoring new bundle identifiers: %{private}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v8, -1, -1);
    MEMORY[0x1C3BAD3F4](v7, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v12 = *(os_unfair_lock_s **)(v2[6] + 16);
  os_unfair_lock_lock(v12);
  sub_1C134EA34(a1, v2);
  os_unfair_lock_unlock(v12);
}

void sub_1C134EA34(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  unsigned int v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  void *v32;
  unint64_t v33;
  char v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t *v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = a2[3];
  if (*(_QWORD *)(a1 + 16) <= *(_QWORD *)(v4 + 16) >> 3)
  {
    swift_bridgeObjectRetain();
    sub_1C13559B4(a1);
    v5 = v4;
  }
  else
  {
    swift_bridgeObjectRetain();
    v5 = sub_1C1355F5C(a1, v4);
  }
  v6 = v5 + 56;
  v7 = 1 << *(_BYTE *)(v5 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(v5 + 56);
  v10 = a2 + 4;
  v39 = a2;
  v11 = a2 + 5;
  swift_beginAccess();
  v12 = 0;
  v40 = v5;
  v41 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v12 << 6);
      goto LABEL_24;
    }
    v15 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v15 >= v41)
      goto LABEL_36;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v12;
    if (!v16)
    {
      v12 = v15 + 1;
      if (v15 + 1 >= v41)
        goto LABEL_36;
      v16 = *(_QWORD *)(v6 + 8 * v12);
      if (!v16)
      {
        v12 = v15 + 2;
        if (v15 + 2 >= v41)
          goto LABEL_36;
        v16 = *(_QWORD *)(v6 + 8 * v12);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v12 << 6);
LABEL_24:
    v18 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v14);
    v20 = *v18;
    v19 = v18[1];
    v21 = *v10;
    v22 = *(_QWORD *)(*v10 + 16);
    swift_bridgeObjectRetain();
    if (v22)
    {
      swift_bridgeObjectRetain();
      v23 = sub_1C13277A0(v20, v19);
      if ((v24 & 1) != 0)
      {
        v25 = *(_DWORD *)(*(_QWORD *)(v21 + 56) + 4 * v23);
        swift_bridgeObjectRelease();
        swift_beginAccess();
        v26 = sub_1C1327378(v25);
        if ((v27 & 1) != 0)
        {
          v28 = v26;
          v29 = v6;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v31 = *v11;
          v42 = *v11;
          *v11 = 0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1C13BAA94();
            v31 = v42;
          }
          v32 = *(void **)(*(_QWORD *)(v31 + 56) + 8 * v28);
          sub_1C13C11F8(v28, v31);
          *v11 = v31;

          swift_bridgeObjectRelease();
          v6 = v29;
          v5 = v40;
        }
        swift_endAccess();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v33 = sub_1C13277A0(v20, v19);
    v35 = v34;
    swift_bridgeObjectRelease();
    if ((v35 & 1) != 0)
    {
      v36 = swift_isUniquelyReferenced_nonNull_native();
      v37 = *v10;
      v43 = *v10;
      *v10 = 0x8000000000000000;
      if ((v36 & 1) == 0)
      {
        sub_1C13BA8E8();
        v37 = v43;
      }
      swift_bridgeObjectRelease();
      sub_1C13C1024(v33, v37);
      *v10 = v37;
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  v17 = v15 + 3;
  if (v17 >= v41)
  {
LABEL_36:
    swift_release();
    v39[3] = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1C134EDA8();
    return;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v12 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v12 >= v41)
      goto LABEL_36;
    v16 = *(_QWORD *)(v6 + 8 * v12);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_38:
  __break(1u);
}

void sub_1C134EDA8()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  void *v14;
  uint64_t (*v15)();
  _QWORD *v16;

  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v0[6] + 16));
  v1 = sub_1C134F204();
  v2 = (void *)v0[2];
  if (v2)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    v0 = (_QWORD *)swift_allocObject();
    v0[2] = sub_1C1357F30;
    v0[3] = v3;
    v15 = sub_1C13584CC;
    v16 = v0;
    v11 = MEMORY[0x1E0C809B0];
    v12 = 1107296256;
    v13 = sub_1C1327D10;
    v14 = &block_descriptor_10;
    v4 = _Block_copy(&v11);
    v5 = v2;
    swift_retain();
    swift_release();
    objc_msgSend(v5, sel_updateConfiguration_, v4);

    _Block_release(v4);
    LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((v4 & 1) == 0)
      return;
    __break(1u);
  }
  swift_bridgeObjectRelease();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_1C1357EF4;
  *(_QWORD *)(v6 + 24) = v0;
  v15 = sub_1C1327D54;
  v16 = (_QWORD *)v6;
  v11 = MEMORY[0x1E0C809B0];
  v12 = 1107296256;
  v13 = sub_1C1327D10;
  v14 = &block_descriptor_1;
  v7 = _Block_copy(&v11);
  v8 = (void *)objc_opt_self();
  swift_retain();
  v9 = objc_msgSend(v8, sel_monitorWithConfiguration_, v7);
  _Block_release(v7);
  swift_release();
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v7 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v10 = (void *)v0[2];
    v0[2] = v9;

  }
}

void sub_1C134EFE8(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  unint64_t v7;
  char v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21[5];

  v21[4] = *(id *)MEMORY[0x1E0C80C00];
  swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 40);
  if (*(_QWORD *)(v6 + 16))
  {
    v7 = sub_1C1327378(a2);
    if ((v8 & 1) != 0)
    {
      v9 = *(void **)(*(_QWORD *)(v6 + 56) + 8 * v7);
      *a3 = v9;
      v10 = v9;
      return;
    }
  }
  v11 = objc_msgSend((id)objc_opt_self(), sel_identifierWithPid_, a2);
  if (v11)
  {
    v12 = v11;
    v13 = (void *)objc_opt_self();
    v21[0] = 0;
    v14 = v12;
    v15 = objc_msgSend(v13, sel_handleForIdentifier_error_, v14, v21);
    if (v15)
    {
      v16 = v15;
      v17 = v21[0];

      v18 = objc_msgSend(v16, sel_currentState);
      *a3 = v18;
      return;
    }
    v19 = v21[0];
    v20 = (void *)sub_1C1425078();

    swift_willThrow();
  }
  *a3 = 0;
}

void sub_1C134F184(uint64_t a1)
{
  sub_1C134E840(a1);
}

uint64_t sub_1C134F1A4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v6;

  v3 = *v1;
  v4 = *(os_unfair_lock_s **)(*(_QWORD *)(v3 + 48) + 16);
  os_unfair_lock_lock(v4);
  sub_1C134EFE8(v3, a1, &v6);
  os_unfair_lock_unlock(v4);
  return v6;
}

uint64_t sub_1C134F204()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20[3];

  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v0 + 48) + 16));
  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 32);
  v20[2] = MEMORY[0x1E0DEE9E8];
  v2 = v1 + 64;
  v3 = 1 << *(_BYTE *)(v1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain_n();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v14 >= v6)
      goto LABEL_25;
    v15 = *(_QWORD *)(v2 + 8 * v14);
    ++v8;
    if (!v15)
    {
      v8 = v14 + 1;
      if (v14 + 1 >= v6)
        goto LABEL_25;
      v15 = *(_QWORD *)(v2 + 8 * v8);
      if (!v15)
      {
        v8 = v14 + 2;
        if (v14 + 2 >= v6)
          goto LABEL_25;
        v15 = *(_QWORD *)(v2 + 8 * v8);
        if (!v15)
        {
          v8 = v14 + 3;
          if (v14 + 3 >= v6)
            goto LABEL_25;
          v15 = *(_QWORD *)(v2 + 8 * v8);
          if (!v15)
          {
            v8 = v14 + 4;
            if (v14 + 4 >= v6)
              goto LABEL_25;
            v15 = *(_QWORD *)(v2 + 8 * v8);
            if (!v15)
              break;
          }
        }
      }
    }
LABEL_24:
    v5 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain_n();
    sub_1C132FAD4(v20, v12, v13);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 5;
  if (v16 >= v6)
  {
LABEL_25:
    swift_release();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797B98);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1C1428510;
    v18 = (void *)sub_1C1426BF0();
    swift_bridgeObjectRelease();
    v19 = objc_msgSend((id)objc_opt_self(), sel_predicateMatchingBundleIdentifiers_, v18);

    *(_QWORD *)(v17 + 32) = v19;
    v20[0] = v17;
    sub_1C1426BA8();
    return v20[0];
  }
  v15 = *(_QWORD *)(v2 + 8 * v16);
  if (v15)
  {
    v8 = v16;
    goto LABEL_24;
  }
  while (1)
  {
    v8 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v8 >= v6)
      goto LABEL_25;
    v15 = *(_QWORD *)(v2 + 8 * v8);
    ++v16;
    if (v15)
      goto LABEL_24;
  }
LABEL_27:
  __break(1u);
  return result;
}

void sub_1C134F46C(void *a1)
{
  id v2;

  sub_1C1357F48();
  v2 = (id)sub_1C1426B84();
  objc_msgSend(a1, sel_setPredicates_, v2);

}

void sub_1C134F4C4(void *a1)
{
  id v2;
  uint64_t v3;
  void *v4;
  _QWORD v5[6];

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D87DC0]), sel_init);
  objc_msgSend(v2, sel_setValues_, 1);
  objc_msgSend(a1, sel_setStateDescriptor_, v2);
  objc_msgSend(a1, sel_setServiceClass_, 33);
  v3 = swift_allocObject();
  swift_weakInit();
  v5[4] = sub_1C1357FA8;
  v5[5] = v3;
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 1107296256;
  v5[2] = sub_1C134F900;
  v5[3] = &block_descriptor_16;
  v4 = _Block_copy(v5);
  swift_release();
  objc_msgSend(a1, sel_setUpdateHandler_, v4);
  _Block_release(v4);

}

uint64_t sub_1C134F5D8(uint64_t a1, void *a2, void *a3)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C134F648(a3, a2);
    return swift_release();
  }
  return result;
}

void sub_1C134F648(void *a1, id a2)
{
  uint64_t v2;
  uint64_t v3;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  os_unfair_lock_s *v20;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v5 = objc_msgSend(a2, sel_bundle);
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, sel_identifier);

    if (v7)
    {
      v8 = sub_1C1426A88();
      v10 = v9;

      if (qword_1ED793998 != -1)
        swift_once();
      v11 = sub_1C1426854();
      __swift_project_value_buffer(v11, (uint64_t)qword_1ED7985F8);
      swift_bridgeObjectRetain_n();
      v12 = a1;
      v13 = sub_1C1426848();
      v14 = sub_1C1426C80();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = swift_slowAlloc();
        v16 = swift_slowAlloc();
        v22 = v16;
        *(_DWORD *)v15 = 136380931;
        swift_bridgeObjectRetain();
        v21 = sub_1C132AD90(v8, v10, &v22);
        sub_1C1426DB8();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v15 + 12) = 2082;
        v17 = objc_msgSend(v12, sel_state, v21, v22);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DAFB8);
        v18 = sub_1C1426AA0();
        sub_1C132AD90(v18, v19, &v22);
        sub_1C1426DB8();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C1324000, v13, v14, "Received state update for %{private}s with state \"%{public}s", (uint8_t *)v15, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v16, -1, -1);
        MEMORY[0x1C3BAD3F4](v15, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v20 = *(os_unfair_lock_s **)(*(_QWORD *)(v3 + 48) + 16);
      os_unfair_lock_lock(v20);
      sub_1C134F988(v12, v3, v8, v10);
      os_unfair_lock_unlock(v20);
      swift_bridgeObjectRelease();
    }
  }
}

void sub_1C134F900(uint64_t a1, void *a2, void *a3, void *a4)
{
  void (*v7)(id, id, id);
  id v8;
  id v9;
  id v10;

  v7 = *(void (**)(id, id, id))(a1 + 32);
  swift_retain();
  v10 = a2;
  v8 = a3;
  v9 = a4;
  v7(v10, v8, v9);
  swift_release();

}

void sub_1C134F988(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8;
  void *v9;
  unsigned int v10;
  id v11;
  void *v12;
  id v13;
  unsigned int v14;
  char isUniquelyReferenced_nonNull_native;
  id v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  unsigned int v20;
  uint64_t *v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;

  v8 = objc_msgSend(a1, sel_state);
  if (v8 && (v9 = v8, v10 = objc_msgSend(v8, sel_taskState), v9, v10 - 2 <= 2))
  {
    v11 = objc_msgSend(a1, sel_state);
    if (v11)
    {
      v12 = v11;
      v13 = objc_msgSend(v11, sel_process);

      if (v13)
      {
        v14 = objc_msgSend(v13, sel_pid);

        swift_beginAccess();
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v29 = *(_QWORD *)(a2 + 32);
        *(_QWORD *)(a2 + 32) = 0x8000000000000000;
        sub_1C13C2364(v14, a3, a4, isUniquelyReferenced_nonNull_native);
        *(_QWORD *)(a2 + 32) = v29;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_endAccess();
        v16 = objc_msgSend(a1, sel_state);
        swift_beginAccess();
        sub_1C13B3988((uint64_t)v16, v14);
LABEL_12:
        swift_endAccess();
      }
    }
  }
  else
  {
    swift_beginAccess();
    v17 = *(_QWORD *)(a2 + 32);
    if (!*(_QWORD *)(v17 + 16))
      return;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18 = sub_1C13277A0(a3, a4);
    if ((v19 & 1) != 0)
    {
      v20 = *(_DWORD *)(*(_QWORD *)(v17 + 56) + 4 * v18);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_1C13C05C0(a3, a4);
      swift_endAccess();
      swift_bridgeObjectRelease();
      v21 = (uint64_t *)(a2 + 40);
      swift_beginAccess();
      v22 = sub_1C1327378(v20);
      if ((v23 & 1) != 0)
      {
        v24 = v22;
        v25 = swift_isUniquelyReferenced_nonNull_native();
        v26 = *v21;
        v28 = *v21;
        *v21 = 0x8000000000000000;
        if ((v25 & 1) == 0)
        {
          sub_1C13BAA94();
          v26 = v28;
        }
        v27 = *(void **)(*(_QWORD *)(v26 + 56) + 8 * v24);
        sub_1C13C11F8(v24, v26);
        *v21 = v26;

        swift_bridgeObjectRelease();
      }
      goto LABEL_12;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C134FC4C()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)(v0 + 48) + 16);
  os_unfair_lock_lock(v1);
  swift_beginAccess();
  v2 = swift_bridgeObjectRetain();
  sub_1C134E55C(v2);
  v4 = v3;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v4 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797B20);
    v5 = sub_1C1426FBC();
  }
  else
  {
    v5 = MEMORY[0x1E0DEE9E0];
  }
  v9 = v5;
  v6 = swift_bridgeObjectRetain();
  sub_1C13555F8(v6, 1, &v9);
  swift_bridgeObjectRelease();
  v7 = v9;
  os_unfair_lock_unlock(v1);
  return v7;
}

uint64_t sub_1C134FD40()
{
  return sub_1C134FC4C();
}

uint64_t sub_1C134FD60(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1C1425CC0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1C1329AD0(&qword_1ED797878, v11, MEMORY[0x1E0D8CB50]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_1C1426A4C();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_1C1329AD0(&qword_1ED797880, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8CB40], MEMORY[0x1E0D8CB58]);
      v21 = sub_1C1426A70();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_1C1351E44((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1C134FFBC(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1C142614C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1C1329AD0(&qword_1ED793558, v11, MEMORY[0x1E0D87A10]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_1C1426A4C();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_1C1329AD0(&qword_1EF6DAFD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D87A00], MEMORY[0x1E0D87A18]);
      v21 = sub_1C1426A70();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_1C1352098((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1C1350218(_QWORD *a1, void *a2)
{
  return sub_1C1350710(a1, a2, (void (*)(_QWORD))_s11SessionCore6ClientCMa_0, &qword_1ED793A18);
}

uint64_t sub_1C135022C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  BOOL v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  __int128 v28;
  uint64_t v29;
  uint64_t *v30;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v5 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v8 = *v2;
  sub_1C14270E8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C1426AD0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v33 = v7;
  sub_1C1426AD0();
  v34 = v6;
  swift_bridgeObjectRelease();
  v29 = a2;
  v32 = *(unsigned __int8 *)(a2 + 32);
  sub_1C14270F4();
  v9 = sub_1C1427100();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  v11 = v9 & ~v10;
  v12 = v8 + 56;
  if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v13 = ~v10;
    v14 = *(_QWORD *)(v8 + 48);
    do
    {
      v15 = v14 + 40 * v11;
      v16 = *(_QWORD *)(v15 + 16);
      v17 = *(_QWORD *)(v15 + 24);
      v18 = *(unsigned __int8 *)(v15 + 32);
      v19 = *(_QWORD *)v15 == v5 && *(_QWORD *)(v15 + 8) == v4;
      if (v19 || (sub_1C1427064() & 1) != 0)
      {
        if (v16 == v33 && v17 == v34)
        {
          if (v32 == v18)
            goto LABEL_16;
        }
        else if ((sub_1C1427064() & 1) != 0 && ((v32 ^ v18) & 1) == 0)
        {
LABEL_16:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v21 = *(_QWORD *)(*v30 + 48) + 40 * v11;
          v23 = *(_QWORD *)v21;
          v22 = *(_QWORD *)(v21 + 8);
          v24 = *(_QWORD *)(v21 + 16);
          v25 = *(_QWORD *)(v21 + 24);
          LOBYTE(v21) = *(_BYTE *)(v21 + 32);
          *(_QWORD *)a1 = v23;
          *(_QWORD *)(a1 + 8) = v22;
          *(_QWORD *)(a1 + 16) = v24;
          *(_QWORD *)(a1 + 24) = v25;
          *(_BYTE *)(a1 + 32) = v21;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          return 0;
        }
      }
      v11 = (v11 + 1) & v13;
    }
    while (((*(_QWORD *)(v12 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v35 = *v30;
  *v30 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C13522EC(v29, v11, isUniquelyReferenced_nonNull_native);
  *v30 = v35;
  swift_bridgeObjectRelease();
  v28 = *(_OWORD *)(v29 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v29;
  *(_OWORD *)(a1 + 16) = v28;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(v29 + 32);
  return 1;
}

uint64_t sub_1C135048C(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1C1426494();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1C1329AD0((unint64_t *)&unk_1ED793250, v11, MEMORY[0x1E0D8D0B8]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_1C1426A4C();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_1C1329AD0(&qword_1ED793920, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8D0A8], MEMORY[0x1E0D8D0C0]);
      v21 = sub_1C1426A70();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_1C1352510((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1C13506E8(_QWORD *a1, void *a2)
{
  return sub_1C1350710(a1, a2, (void (*)(_QWORD))_s11SessionCore6ClientCMa_3, &qword_1ED7932D0);
}

uint64_t sub_1C13506FC(_QWORD *a1, void *a2)
{
  return sub_1C1350710(a1, a2, (void (*)(_QWORD))type metadata accessor for AuthorizationServiceClient, &qword_1ED791F20);
}

uint64_t sub_1C1350710(_QWORD *a1, void *a2, void (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v7;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  char v19;
  uint64_t v20;
  id v21;
  char v22;
  void *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  char isUniquelyReferenced_nonNull_native;
  id v30;
  uint64_t v31;
  id v32;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v7 = v4;
  v10 = *v4;
  if ((*v4 & 0xC000000000000001) != 0)
  {
    if (v10 < 0)
      v11 = *v4;
    else
      v11 = v10 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v12 = a2;
    v13 = sub_1C1426E6C();

    if (v13)
    {
      swift_bridgeObjectRelease();

      a3(0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v35;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1C1426E60();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v25 = sub_1C1350BA0(v11, result + 1, a4, a3);
    v36 = v25;
    v26 = *(_QWORD *)(v25 + 16);
    if (*(_QWORD *)(v25 + 24) <= v26)
    {
      v31 = v26 + 1;
      v32 = v12;
      sub_1C1351994(v31, a4);
      v27 = v36;
    }
    else
    {
      v27 = v25;
      v28 = v12;
    }
    sub_1C1351C2C((uint64_t)v12, v27);
    *v7 = v27;
    swift_bridgeObjectRelease();
    *a1 = v12;
  }
  else
  {
    swift_bridgeObjectRetain();
    v15 = sub_1C1426D88();
    v16 = -1 << *(_BYTE *)(v10 + 32);
    v17 = v15 & ~v16;
    if (((*(_QWORD *)(v10 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0)
    {
      a3(0);
      v18 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * v17);
      v19 = sub_1C1426D94();

      if ((v19 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v23 = *(void **)(*(_QWORD *)(*v4 + 48) + 8 * v17);
        *a1 = v23;
        v24 = v23;
        return 0;
      }
      v20 = ~v16;
      while (1)
      {
        v17 = (v17 + 1) & v20;
        if (((*(_QWORD *)(v10 + 56 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
          break;
        v21 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * v17);
        v22 = sub_1C1426D94();

        if ((v22 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v37 = *v4;
    *v4 = 0x8000000000000000;
    v30 = a2;
    sub_1C13297A4((uint64_t)v30, v17, isUniquelyReferenced_nonNull_native, a4, a3);
    *v4 = v37;
    swift_bridgeObjectRelease();
    *a1 = v30;
  }
  return 1;
}

uint64_t sub_1C13509BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797AC0);
    v2 = sub_1C1426EE4();
    v14 = v2;
    sub_1C1426E30();
    if (sub_1C1426E84())
    {
      type metadata accessor for Client();
      do
      {
        swift_dynamicCast();
        v2 = v14;
        if (*(_QWORD *)(v14 + 24) <= *(_QWORD *)(v14 + 16))
        {
          sub_1C1351058();
          v2 = v14;
        }
        result = sub_1C1426D88();
        v4 = v2 + 56;
        v5 = -1 << *(_BYTE *)(v2 + 32);
        v6 = result & ~v5;
        v7 = v6 >> 6;
        if (((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v9 = 0;
          v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v11 = v7 == v10;
            if (v7 == v10)
              v7 = 0;
            v9 |= v11;
            v12 = *(_QWORD *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v13;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_1C1426E84());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v2;
}

uint64_t sub_1C1350BA0(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(_QWORD))
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    v6 = sub_1C1426EE4();
    v19 = v6;
    sub_1C1426E30();
    if (sub_1C1426E84())
    {
      a4(0);
      do
      {
        swift_dynamicCast();
        v6 = v19;
        v13 = *(_QWORD *)(v19 + 16);
        if (*(_QWORD *)(v19 + 24) <= v13)
        {
          sub_1C1351994(v13 + 1, a3);
          v6 = v19;
        }
        result = sub_1C1426D88();
        v8 = v6 + 56;
        v9 = -1 << *(_BYTE *)(v6 + 32);
        v10 = result & ~v9;
        v11 = v10 >> 6;
        if (((-1 << v10) & ~*(_QWORD *)(v6 + 56 + 8 * (v10 >> 6))) != 0)
        {
          v12 = __clz(__rbit64((-1 << v10) & ~*(_QWORD *)(v6 + 56 + 8 * (v10 >> 6)))) | v10 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v14 = 0;
          v15 = (unint64_t)(63 - v9) >> 6;
          do
          {
            if (++v11 == v15 && (v14 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v16 = v11 == v15;
            if (v11 == v15)
              v11 = 0;
            v14 |= v16;
            v17 = *(_QWORD *)(v8 + 8 * v11);
          }
          while (v17 == -1);
          v12 = __clz(__rbit64(~v17)) + (v11 << 6);
        }
        *(_QWORD *)(v8 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v12) = v18;
        ++*(_QWORD *)(v6 + 16);
      }
      while (sub_1C1426E84());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v6;
}

uint64_t sub_1C1350D94()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  _QWORD *v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793A20);
  v3 = sub_1C1426ED8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
    goto LABEL_37;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v31 = v0;
  v32 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v7)
    {
      v14 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_22;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      return result;
    }
    if (v16 >= v8)
      break;
    v17 = (_QWORD *)(v2 + 56);
    v18 = *(_QWORD *)(v32 + 8 * v16);
    ++v11;
    if (!v18)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v8)
        goto LABEL_31;
      v18 = *(_QWORD *)(v32 + 8 * v11);
      if (!v18)
      {
        v19 = v16 + 2;
        if (v19 >= v8)
        {
LABEL_31:
          swift_release();
          v1 = v31;
          goto LABEL_33;
        }
        v18 = *(_QWORD *)(v32 + 8 * v19);
        if (!v18)
        {
          while (1)
          {
            v11 = v19 + 1;
            if (__OFADD__(v19, 1))
              goto LABEL_39;
            if (v11 >= v8)
              goto LABEL_31;
            v18 = *(_QWORD *)(v32 + 8 * v11);
            ++v19;
            if (v18)
              goto LABEL_21;
          }
        }
        v11 = v19;
      }
    }
LABEL_21:
    v7 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v11 << 6);
LABEL_22:
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v21 = *v20;
    v22 = v20[1];
    sub_1C14270E8();
    sub_1C1426AD0();
    result = sub_1C1427100();
    v23 = -1 << *(_BYTE *)(v4 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v9 + 8 * (v24 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v9 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v9 + 8 * v25);
      }
      while (v29 == -1);
      v12 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v21;
    v13[1] = v22;
    ++*(_QWORD *)(v4 + 16);
  }
  swift_release();
  v1 = v31;
  v17 = (_QWORD *)(v2 + 56);
LABEL_33:
  v30 = 1 << *(_BYTE *)(v2 + 32);
  if (v30 > 63)
    bzero(v17, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v17 = -1 << v30;
  *(_QWORD *)(v2 + 16) = 0;
LABEL_37:
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1C1351058()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797AC0);
  v3 = sub_1C1426ED8();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v28 = v0;
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_31;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_31;
          v17 = v6[v12];
          if (!v17)
          {
            v18 = v16 + 2;
            if (v18 >= v9)
            {
LABEL_31:
              swift_release();
              v1 = v28;
              v27 = 1 << *(_BYTE *)(v2 + 32);
              if (v27 > 63)
                bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v6 = -1 << v27;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v17 = v6[v18];
            if (!v17)
            {
              while (1)
              {
                v12 = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_37;
                if (v12 >= v9)
                  goto LABEL_31;
                v17 = v6[v12];
                ++v18;
                if (v17)
                  goto LABEL_21;
              }
            }
            v12 = v18;
          }
        }
LABEL_21:
        v8 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
      result = sub_1C1426D88();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_36;
          }
          v25 = v22 == v24;
          if (v22 == v24)
            v22 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1C13512E0(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  unint64_t *v45;
  uint64_t v46;

  v45 = a4;
  v46 = a5;
  v7 = v5;
  v44 = a2;
  v8 = a2(0);
  v43 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v39 - v9;
  v11 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v12 = sub_1C1426ED8();
  v13 = v12;
  if (*(_QWORD *)(v11 + 16))
  {
    v14 = 1 << *(_BYTE *)(v11 + 32);
    v15 = *(_QWORD *)(v11 + 56);
    v42 = (_QWORD *)(v11 + 56);
    if (v14 < 64)
      v16 = ~(-1 << v14);
    else
      v16 = -1;
    v17 = v16 & v15;
    v40 = v5;
    v41 = (unint64_t)(v14 + 63) >> 6;
    v18 = v12 + 56;
    result = swift_retain();
    v20 = 0;
    while (1)
    {
      if (v17)
      {
        v22 = __clz(__rbit64(v17));
        v17 &= v17 - 1;
        v23 = v22 | (v20 << 6);
      }
      else
      {
        v24 = v20 + 1;
        if (__OFADD__(v20, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v24 >= v41)
          goto LABEL_33;
        v25 = v42[v24];
        ++v20;
        if (!v25)
        {
          v20 = v24 + 1;
          if (v24 + 1 >= v41)
            goto LABEL_33;
          v25 = v42[v20];
          if (!v25)
          {
            v20 = v24 + 2;
            if (v24 + 2 >= v41)
              goto LABEL_33;
            v25 = v42[v20];
            if (!v25)
            {
              v26 = v24 + 3;
              if (v26 >= v41)
              {
LABEL_33:
                swift_release();
                v7 = v40;
                v38 = 1 << *(_BYTE *)(v11 + 32);
                if (v38 > 63)
                  bzero(v42, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v42 = -1 << v38;
                *(_QWORD *)(v11 + 16) = 0;
                break;
              }
              v25 = v42[v26];
              if (!v25)
              {
                while (1)
                {
                  v20 = v26 + 1;
                  if (__OFADD__(v26, 1))
                    goto LABEL_39;
                  if (v20 >= v41)
                    goto LABEL_33;
                  v25 = v42[v20];
                  ++v26;
                  if (v25)
                    goto LABEL_23;
                }
              }
              v20 = v26;
            }
          }
        }
LABEL_23:
        v17 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v20 << 6);
      }
      v27 = v11;
      v28 = *(_QWORD *)(v11 + 48);
      v29 = *(_QWORD *)(v43 + 72);
      v30 = *(void (**)(char *, unint64_t, uint64_t))(v43 + 32);
      v30(v10, v28 + v29 * v23, v8);
      sub_1C1329AD0(v45, v44, v46);
      result = sub_1C1426A4C();
      v31 = -1 << *(_BYTE *)(v13 + 32);
      v32 = result & ~v31;
      v33 = v32 >> 6;
      if (((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6))) != 0)
      {
        v21 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v34 = 0;
        v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v36 = v33 == v35;
          if (v33 == v35)
            v33 = 0;
          v34 |= v36;
          v37 = *(_QWORD *)(v18 + 8 * v33);
        }
        while (v37 == -1);
        v21 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v30)(*(_QWORD *)(v13 + 48) + v21 * v29, v10, v8);
      ++*(_QWORD *)(v13 + 16);
      v11 = v27;
    }
  }
  result = swift_release();
  *v7 = v13;
  return result;
}

uint64_t sub_1C1351640()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  _QWORD *v33;
  uint64_t i;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DAFC0);
  v3 = sub_1C1426ED8();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v33 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v32 = (unint64_t)(v5 + 63) >> 6;
    v8 = v3 + 56;
    result = swift_retain();
    v10 = 0;
    for (i = v2; ; v2 = i)
    {
      if (v7)
      {
        v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v14 = v13 | (v10 << 6);
      }
      else
      {
        v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v32)
          goto LABEL_33;
        v16 = v33[v15];
        ++v10;
        if (!v16)
        {
          v10 = v15 + 1;
          if (v15 + 1 >= v32)
            goto LABEL_33;
          v16 = v33[v10];
          if (!v16)
          {
            v10 = v15 + 2;
            if (v15 + 2 >= v32)
              goto LABEL_33;
            v16 = v33[v10];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v32)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v31 = 1 << *(_BYTE *)(v2 + 32);
                if (v31 > 63)
                  bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v31;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v33[v17];
              if (!v16)
              {
                while (1)
                {
                  v10 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v10 >= v32)
                    goto LABEL_33;
                  v16 = v33[v10];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v10 = v17;
            }
          }
        }
LABEL_23:
        v7 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      v18 = *(_QWORD *)(v2 + 48) + 40 * v14;
      v19 = *(_QWORD *)v18;
      v20 = *(_QWORD *)(v18 + 8);
      v21 = *(_QWORD *)(v18 + 16);
      v22 = *(_QWORD *)(v18 + 24);
      v23 = *(_BYTE *)(v18 + 32);
      sub_1C14270E8();
      swift_bridgeObjectRetain();
      sub_1C1426AD0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1C1426AD0();
      swift_bridgeObjectRelease();
      sub_1C14270F4();
      result = sub_1C1427100();
      v24 = -1 << *(_BYTE *)(v4 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v8 + 8 * (v25 >> 6))) != 0)
      {
        v11 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v8 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v8 + 8 * v26);
        }
        while (v30 == -1);
        v11 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = *(_QWORD *)(v4 + 48) + 40 * v11;
      *(_QWORD *)v12 = v19;
      *(_QWORD *)(v12 + 8) = v20;
      *(_QWORD *)(v12 + 16) = v21;
      *(_QWORD *)(v12 + 24) = v22;
      *(_BYTE *)(v12 + 32) = v23;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1C1351994(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_1C1426ED8();
  v6 = v5;
  if (*(_QWORD *)(v4 + 16))
  {
    v30 = v2;
    v7 = 1 << *(_BYTE *)(v4 + 32);
    v8 = (_QWORD *)(v4 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v4 + 56);
    v11 = (unint64_t)(v7 + 63) >> 6;
    v12 = v5 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11)
          goto LABEL_33;
        v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v11)
            goto LABEL_33;
          v19 = v8[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v11)
              goto LABEL_33;
            v19 = v8[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                v3 = v30;
                v29 = 1 << *(_BYTE *)(v4 + 32);
                if (v29 > 63)
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v29;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v11)
                    goto LABEL_33;
                  v19 = v8[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17);
      result = sub_1C1426D88();
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

unint64_t sub_1C1351C2C(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_1C1426D88();
  result = sub_1C1426E18();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_1C1351CAC(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1C1350D94();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1C1352764();
      goto LABEL_22;
    }
    sub_1C1353024();
  }
  v11 = *v4;
  sub_1C14270E8();
  sub_1C1426AD0();
  result = sub_1C1427100();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1C1427064(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1C1427070();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1C1427064();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_1C1351E44(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1C1425CC0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1C13512E0(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8CB40], &qword_1EF6DAFC8, &qword_1ED797878, MEMORY[0x1E0D8CB50]);
  }
  else
  {
    if (v11 > v10)
    {
      sub_1C1352C60((uint64_t (*)(_QWORD))MEMORY[0x1E0D8CB40], &qword_1EF6DAFC8);
      goto LABEL_12;
    }
    sub_1C1353510(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8CB40], &qword_1EF6DAFC8, &qword_1ED797878, MEMORY[0x1E0D8CB50]);
  }
  v13 = *v3;
  sub_1C1329AD0(&qword_1ED797878, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8CB40], MEMORY[0x1E0D8CB50]);
  v14 = sub_1C1426A4C();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1C1329AD0(&qword_1ED797880, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8CB40], MEMORY[0x1E0D8CB58]);
      v19 = sub_1C1426A70();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1C1427070();
  __break(1u);
  return result;
}

uint64_t sub_1C1352098(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1C142614C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1C13512E0(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D87A00], &qword_1EF6DAFD8, &qword_1ED793558, MEMORY[0x1E0D87A10]);
  }
  else
  {
    if (v11 > v10)
    {
      sub_1C1352C60((uint64_t (*)(_QWORD))MEMORY[0x1E0D87A00], &qword_1EF6DAFD8);
      goto LABEL_12;
    }
    sub_1C1353510(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D87A00], &qword_1EF6DAFD8, &qword_1ED793558, MEMORY[0x1E0D87A10]);
  }
  v13 = *v3;
  sub_1C1329AD0(&qword_1ED793558, (uint64_t (*)(uint64_t))MEMORY[0x1E0D87A00], MEMORY[0x1E0D87A10]);
  v14 = sub_1C1426A4C();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1C1329AD0(&qword_1EF6DAFD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D87A00], MEMORY[0x1E0D87A18]);
      v19 = sub_1C1426A70();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1C1427070();
  __break(1u);
  return result;
}

uint64_t sub_1C13522EC(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  BOOL v21;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  v30 = result;
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_24;
  if ((a3 & 1) != 0)
  {
    sub_1C1351640();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1C1352A94();
      goto LABEL_24;
    }
    sub_1C135382C();
  }
  v8 = *v3;
  sub_1C14270E8();
  v9 = *(_QWORD *)v5;
  v10 = *(_QWORD *)(v5 + 8);
  swift_bridgeObjectRetain();
  sub_1C1426AD0();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v5 + 16);
  v12 = *(_QWORD *)(v5 + 24);
  swift_bridgeObjectRetain();
  v32 = v11;
  sub_1C1426AD0();
  swift_bridgeObjectRelease();
  v31 = *(unsigned __int8 *)(v5 + 32);
  sub_1C14270F4();
  result = sub_1C1427100();
  v13 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v13;
  v14 = v8 + 56;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v13;
    v16 = *(_QWORD *)(v8 + 48);
    do
    {
      v17 = v16 + 40 * a2;
      result = *(_QWORD *)v17;
      v18 = *(_QWORD *)(v17 + 16);
      v19 = *(_QWORD *)(v17 + 24);
      v20 = *(unsigned __int8 *)(v17 + 32);
      v21 = *(_QWORD *)v17 == v9 && *(_QWORD *)(v17 + 8) == v10;
      if (v21 || (result = sub_1C1427064(), (result & 1) != 0))
      {
        if (v18 == v32 && v19 == v12)
        {
          if (v31 == v20)
            goto LABEL_23;
        }
        else
        {
          result = sub_1C1427064();
          if ((result & 1) != 0 && ((v31 ^ v20) & 1) == 0)
          {
LABEL_23:
            result = sub_1C1427070();
            __break(1u);
            break;
          }
        }
      }
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v14 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_24:
  v23 = *v29;
  *(_QWORD *)(*v29 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  v24 = *(_QWORD *)(v23 + 48) + 40 * a2;
  v25 = *(_OWORD *)(v30 + 16);
  *(_OWORD *)v24 = *(_OWORD *)v30;
  *(_OWORD *)(v24 + 16) = v25;
  *(_BYTE *)(v24 + 32) = *(_BYTE *)(v30 + 32);
  v26 = *(_QWORD *)(v23 + 16);
  v27 = __OFADD__(v26, 1);
  v28 = v26 + 1;
  if (v27)
    __break(1u);
  else
    *(_QWORD *)(v23 + 16) = v28;
  return result;
}

uint64_t sub_1C1352510(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1C1426494();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1C13512E0(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8D0A8], &qword_1ED7933C0, (unint64_t *)&unk_1ED793250, MEMORY[0x1E0D8D0B8]);
  }
  else
  {
    if (v11 > v10)
    {
      sub_1C1352C60((uint64_t (*)(_QWORD))MEMORY[0x1E0D8D0A8], &qword_1ED7933C0);
      goto LABEL_12;
    }
    sub_1C1353510(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8D0A8], &qword_1ED7933C0, (unint64_t *)&unk_1ED793250, MEMORY[0x1E0D8D0B8]);
  }
  v13 = *v3;
  sub_1C1329AD0((unint64_t *)&unk_1ED793250, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8D0A8], MEMORY[0x1E0D8D0B8]);
  v14 = sub_1C1426A4C();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1C1329AD0(&qword_1ED793920, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8D0A8], MEMORY[0x1E0D8D0C0]);
      v19 = sub_1C1426A70();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1C1427070();
  __break(1u);
  return result;
}

void *sub_1C1352764()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793A20);
  v2 = *v0;
  v3 = sub_1C1426ECC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1C1352900()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797AC0);
  v2 = *v0;
  v3 = sub_1C1426ECC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C1352A94()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DAFC0);
  v2 = *v0;
  v3 = sub_1C1426ECC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v13)
      goto LABEL_28;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_28;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
      {
        v9 = v23 + 2;
        if (v23 + 2 >= v13)
          goto LABEL_28;
        v24 = *(_QWORD *)(v6 + 8 * v9);
        if (!v24)
          break;
      }
    }
LABEL_27:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v19 = *(_QWORD *)v17;
    v18 = *(_QWORD *)(v17 + 8);
    v20 = *(_QWORD *)(v17 + 16);
    v21 = *(_QWORD *)(v17 + 24);
    LOBYTE(v17) = *(_BYTE *)(v17 + 32);
    v22 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v22 = v19;
    *(_QWORD *)(v22 + 8) = v18;
    *(_QWORD *)(v22 + 16) = v20;
    *(_QWORD *)(v22 + 24) = v21;
    *(_BYTE *)(v22 + 32) = v17;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 3;
  if (v25 >= v13)
    goto LABEL_28;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C1352C60(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *result;
  uint64_t v13;
  unint64_t v14;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v4 = v2;
  v5 = a1(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v27 - v7;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v9 = *v2;
  v10 = sub_1C1426ECC();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v4 = v11;
    return result;
  }
  v28 = v4;
  result = (void *)(v10 + 56);
  v13 = v9 + 56;
  v14 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v14)
    result = memmove(result, (const void *)(v9 + 56), 8 * v14);
  v16 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v17 = 1 << *(_BYTE *)(v9 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(v9 + 56);
  v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v22 = v21 | (v16 << 6);
      goto LABEL_12;
    }
    v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v24 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v24);
    ++v16;
    if (!v25)
    {
      v16 = v24 + 1;
      if (v24 + 1 >= v20)
        goto LABEL_28;
      v25 = *(_QWORD *)(v13 + 8 * v16);
      if (!v25)
      {
        v16 = v24 + 2;
        if (v24 + 2 >= v20)
          goto LABEL_28;
        v25 = *(_QWORD *)(v13 + 8 * v16);
        if (!v25)
          break;
      }
    }
LABEL_27:
    v19 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v16 << 6);
LABEL_12:
    v23 = *(_QWORD *)(v6 + 72) * v22;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(_QWORD *)(v9 + 48) + v23, v5);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v23, v8, v5);
  }
  v26 = v24 + 3;
  if (v26 >= v20)
  {
LABEL_28:
    result = (void *)swift_release();
    v4 = v28;
    goto LABEL_30;
  }
  v25 = *(_QWORD *)(v13 + 8 * v26);
  if (v25)
  {
    v16 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    v16 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v16 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v16);
    ++v26;
    if (v25)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

id sub_1C1352E84(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1C1426ECC();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 56);
  v7 = v3 + 56;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v14)
        goto LABEL_28;
      v20 = *(_QWORD *)(v7 + 8 * v10);
      if (!v20)
      {
        v10 = v19 + 2;
        if (v19 + 2 >= v14)
          goto LABEL_28;
        v20 = *(_QWORD *)(v7 + 8 * v10);
        if (!v20)
          break;
      }
    }
LABEL_27:
    v13 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + v17);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    result = v18;
  }
  v21 = v19 + 3;
  if (v21 >= v14)
    goto LABEL_28;
  v20 = *(_QWORD *)(v7 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v14)
      goto LABEL_28;
    v20 = *(_QWORD *)(v7 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C1353024()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793A20);
  v3 = sub_1C1426ED8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_32:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain_n();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_21;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    if (v16 >= v29)
      goto LABEL_30;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_30;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v18 = v16 + 2;
        if (v18 >= v29)
        {
LABEL_30:
          result = swift_release_n();
          v1 = v0;
          goto LABEL_32;
        }
        v17 = *(_QWORD *)(v6 + 8 * v18);
        v11 = v18;
        if (!v17)
          break;
      }
    }
LABEL_20:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_21:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_1C14270E8();
    swift_bridgeObjectRetain();
    sub_1C1426AD0();
    result = sub_1C1427100();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_33;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_30;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_20;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1C13532AC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797AC0);
  v3 = sub_1C1426ED8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_32:
    *v1 = v4;
    return result;
  }
  v27 = v0;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain_n();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_21;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    if (v16 >= v9)
      goto LABEL_30;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_30;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v18 = v16 + 2;
        if (v18 >= v9)
        {
LABEL_30:
          result = swift_release_n();
          v1 = v27;
          goto LABEL_32;
        }
        v17 = *(_QWORD *)(v6 + 8 * v18);
        v12 = v18;
        if (!v17)
          break;
      }
    }
LABEL_20:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_21:
    v19 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    result = sub_1C1426D88();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_33;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_30;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_20;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1C1353510(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  int64_t v38;
  uint64_t (*v39)(uint64_t);
  unint64_t *v40;
  uint64_t v41;

  v40 = a4;
  v41 = a5;
  v7 = v5;
  v39 = a2;
  v8 = a2(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v36 - v10;
  v12 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v13 = sub_1C1426ED8();
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
  {
    result = swift_release();
LABEL_35:
    *v7 = v14;
    return result;
  }
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 56);
  v36 = v5;
  v37 = v12 + 56;
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v38 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 56;
  result = swift_retain();
  v21 = 0;
  while (1)
  {
    if (v18)
    {
      v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v24 = v23 | (v21 << 6);
      goto LABEL_24;
    }
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v25 >= v38)
      goto LABEL_33;
    v26 = *(_QWORD *)(v37 + 8 * v25);
    ++v21;
    if (!v26)
    {
      v21 = v25 + 1;
      if (v25 + 1 >= v38)
        goto LABEL_33;
      v26 = *(_QWORD *)(v37 + 8 * v21);
      if (!v26)
      {
        v21 = v25 + 2;
        if (v25 + 2 >= v38)
          goto LABEL_33;
        v26 = *(_QWORD *)(v37 + 8 * v21);
        if (!v26)
          break;
      }
    }
LABEL_23:
    v18 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v21 << 6);
LABEL_24:
    v28 = *(_QWORD *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v11, *(_QWORD *)(v12 + 48) + v28 * v24, v8);
    sub_1C1329AD0(v40, v39, v41);
    result = sub_1C1426A4C();
    v29 = -1 << *(_BYTE *)(v14 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v19 + 8 * (v30 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v19 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v19 + 8 * v31);
      }
      while (v35 == -1);
      v22 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32))(*(_QWORD *)(v14 + 48) + v22 * v28, v11, v8);
    ++*(_QWORD *)(v14 + 16);
  }
  v27 = v25 + 3;
  if (v27 >= v38)
  {
LABEL_33:
    result = swift_release_n();
    v7 = v36;
    goto LABEL_35;
  }
  v26 = *(_QWORD *)(v37 + 8 * v27);
  if (v26)
  {
    v21 = v27;
    goto LABEL_23;
  }
  while (1)
  {
    v21 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v21 >= v38)
      goto LABEL_33;
    v26 = *(_QWORD *)(v37 + 8 * v21);
    ++v27;
    if (v26)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C135382C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t i;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DAFC0);
  v3 = sub_1C1426ED8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v31 = v2 + 56;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(v2 + 56);
  v32 = (unint64_t)(v5 + 63) >> 6;
  v8 = v3 + 56;
  result = swift_retain();
  v10 = 0;
  for (i = v2; ; v2 = i)
  {
    if (v7)
    {
      v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v32)
      goto LABEL_33;
    v16 = *(_QWORD *)(v31 + 8 * v15);
    ++v10;
    if (!v16)
    {
      v10 = v15 + 1;
      if (v15 + 1 >= v32)
        goto LABEL_33;
      v16 = *(_QWORD *)(v31 + 8 * v10);
      if (!v16)
      {
        v10 = v15 + 2;
        if (v15 + 2 >= v32)
          goto LABEL_33;
        v16 = *(_QWORD *)(v31 + 8 * v10);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v7 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    v18 = *(_QWORD *)(v2 + 48) + 40 * v14;
    v19 = *(_QWORD *)v18;
    v20 = *(_QWORD *)(v18 + 8);
    v21 = *(_QWORD *)(v18 + 16);
    v22 = *(_QWORD *)(v18 + 24);
    v23 = *(_BYTE *)(v18 + 32);
    sub_1C14270E8();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1C1426AD0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C1426AD0();
    swift_bridgeObjectRelease();
    sub_1C14270F4();
    result = sub_1C1427100();
    v24 = -1 << *(_BYTE *)(v4 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v8 + 8 * (v25 >> 6))) != 0)
    {
      v11 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v8 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v29 = v26 == v28;
        if (v26 == v28)
          v26 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v8 + 8 * v26);
      }
      while (v30 == -1);
      v11 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(_QWORD *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    v12 = *(_QWORD *)(v4 + 48) + 40 * v11;
    *(_QWORD *)v12 = v19;
    *(_QWORD *)(v12 + 8) = v20;
    *(_QWORD *)(v12 + 16) = v21;
    *(_QWORD *)(v12 + 24) = v22;
    *(_BYTE *)(v12 + 32) = v23;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v32)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v31 + 8 * v17);
  if (v16)
  {
    v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v10 >= v32)
      goto LABEL_33;
    v16 = *(_QWORD *)(v31 + 8 * v10);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C1353B54(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_1C1426ED8();
  v6 = v5;
  if (!*(_QWORD *)(v4 + 16))
  {
    result = swift_release();
LABEL_35:
    *v3 = v6;
    return result;
  }
  v29 = v2;
  v7 = 1 << *(_BYTE *)(v4 + 32);
  v8 = v4 + 56;
  if (v7 < 64)
    v9 = ~(-1 << v7);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v4 + 56);
  v11 = (unint64_t)(v7 + 63) >> 6;
  v12 = v5 + 56;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_33;
      v19 = *(_QWORD *)(v8 + 8 * v14);
      if (!v19)
      {
        v14 = v18 + 2;
        if (v18 + 2 >= v11)
          goto LABEL_33;
        v19 = *(_QWORD *)(v8 + 8 * v14);
        if (!v19)
          break;
      }
    }
LABEL_23:
    v10 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    v21 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v17);
    result = sub_1C1426D88();
    v22 = -1 << *(_BYTE *)(v6 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
    ++*(_QWORD *)(v6 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    result = swift_release_n();
    v3 = v29;
    goto LABEL_35;
  }
  v19 = *(_QWORD *)(v8 + 8 * v20);
  if (v19)
  {
    v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v11)
      goto LABEL_33;
    v19 = *(_QWORD *)(v8 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C1353DC8(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v19;

  v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    if (v3 < 0)
      v4 = *v1;
    else
      v4 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v5 = a1;
    v6 = sub_1C1426E90();

    if ((v6 & 1) != 0)
    {
      v7 = sub_1C1354A74(v4, v5);
      swift_bridgeObjectRelease();
      return v7;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v8 = sub_1C1426D88();
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v3 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
    goto LABEL_15;
  type metadata accessor for Client();
  v11 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v10);
  v12 = sub_1C1426D94();

  if ((v12 & 1) == 0)
  {
    v13 = ~v9;
    do
    {
      v10 = (v10 + 1) & v13;
      if (((*(_QWORD *)(v3 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        goto LABEL_15;
      v14 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v10);
      v15 = sub_1C1426D94();

    }
    while ((v15 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v17 = *v1;
  v19 = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1C1352900();
    v17 = v19;
  }
  v7 = *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * v10);
  sub_1C1355458(v10);
  *v1 = v19;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C1353F8C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v19;

  v5 = *v2;
  sub_1C14270E8();
  swift_bridgeObjectRetain();
  sub_1C1426AD0();
  v6 = sub_1C1427100();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_1C1427064() & 1) == 0)
  {
    v15 = ~v7;
    do
    {
      v8 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v16 = (_QWORD *)(v9 + 16 * v8);
      v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_1C1427064() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v2;
  v19 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1C1352764();
    v13 = v19;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v8);
  sub_1C1354DB0(v8);
  *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1C1354118@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v6 = sub_1C1425CC0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1C1329AD0(&qword_1ED797878, v11, MEMORY[0x1E0D8CB50]);
  swift_bridgeObjectRetain();
  v29 = a1;
  v12 = sub_1C1426A4C();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a2;
    v15 = ~v13;
    v16 = *(_QWORD *)(v7 + 72);
    v30 = v7;
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v18 = v16 * v14;
      v17(v9, *(_QWORD *)(v10 + 48) + v16 * v14, v6);
      sub_1C1329AD0(&qword_1ED797880, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8CB40], MEMORY[0x1E0D8CB58]);
      v19 = sub_1C1426A70();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        break;
      v14 = (v14 + 1) & v15;
      if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v20 = 1;
        a2 = v28;
        v7 = v30;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
      }
    }
    swift_bridgeObjectRelease();
    v21 = v27;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v21;
    v31 = *v21;
    *v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1C1352C60((uint64_t (*)(_QWORD))MEMORY[0x1E0D8CB40], &qword_1EF6DAFC8);
      v23 = v31;
    }
    v24 = *(_QWORD *)(v23 + 48) + v18;
    v7 = v30;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v30 + 32))(v28, v24, v6);
    sub_1C13551D0(v14, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8CB40], &qword_1ED797878, MEMORY[0x1E0D8CB50]);
    *v21 = v31;
    swift_bridgeObjectRelease();
    v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
}

uint64_t sub_1C135437C(void *a1)
{
  return sub_1C1354390(a1, (void (*)(_QWORD))_s11SessionCore6ClientCMa_0, &qword_1ED793A18);
}

uint64_t sub_1C1354390(void *a1, void (*a2)(_QWORD), uint64_t *a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  id v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  char v16;
  uint64_t v17;
  id v18;
  char v19;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t v23;

  v7 = *v3;
  if ((*v3 & 0xC000000000000001) != 0)
  {
    if (v7 < 0)
      v8 = *v3;
    else
      v8 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v9 = a1;
    v10 = sub_1C1426E90();

    if ((v10 & 1) != 0)
    {
      v11 = sub_1C1354C18(v8, (uint64_t)v9, a3, a2);
      swift_bridgeObjectRelease();
      return v11;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v12 = sub_1C1426D88();
  v13 = -1 << *(_BYTE *)(v7 + 32);
  v14 = v12 & ~v13;
  if (((*(_QWORD *)(v7 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
    goto LABEL_15;
  a2(0);
  v15 = *(id *)(*(_QWORD *)(v7 + 48) + 8 * v14);
  v16 = sub_1C1426D94();

  if ((v16 & 1) == 0)
  {
    v17 = ~v13;
    do
    {
      v14 = (v14 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
        goto LABEL_15;
      v18 = *(id *)(*(_QWORD *)(v7 + 48) + 8 * v14);
      v19 = sub_1C1426D94();

    }
    while ((v19 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  v23 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1C1352E84(a3);
    v21 = v23;
  }
  v11 = *(_QWORD *)(*(_QWORD *)(v21 + 48) + 8 * v14);
  sub_1C1355458(v14);
  *v3 = v23;
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1C1354568@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  BOOL v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t result;
  uint64_t *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;

  v3 = v2;
  v6 = *v3;
  sub_1C14270E8();
  v7 = *a1;
  v8 = a1[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C1426AD0();
  swift_bridgeObjectRelease();
  v9 = a1[2];
  v10 = a1[3];
  swift_bridgeObjectRetain();
  sub_1C1426AD0();
  swift_bridgeObjectRelease();
  v33 = *((unsigned __int8 *)a1 + 32);
  sub_1C14270F4();
  v11 = sub_1C1427100();
  v12 = -1 << *(_BYTE *)(v6 + 32);
  v13 = v11 & ~v12;
  v34 = v6 + 56;
  if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
  {
    result = swift_bridgeObjectRelease();
    v25 = 0;
    v26 = 0;
    v27 = 0;
    v28 = 0;
    v29 = 0;
    goto LABEL_22;
  }
  v31 = v3;
  v32 = a2;
  v14 = ~v12;
  v15 = *(_QWORD *)(v6 + 48);
  while (1)
  {
    v16 = v15 + 40 * v13;
    v17 = *(_QWORD *)(v16 + 16);
    v18 = *(_QWORD *)(v16 + 24);
    v19 = *(unsigned __int8 *)(v16 + 32);
    v20 = *(_QWORD *)v16 == v7 && *(_QWORD *)(v16 + 8) == v8;
    if (!v20 && (sub_1C1427064() & 1) == 0)
      goto LABEL_4;
    if (v17 != v9 || v18 != v10)
      break;
    if (v33 == v19)
      goto LABEL_16;
LABEL_4:
    v13 = (v13 + 1) & v14;
    if (((*(_QWORD *)(v34 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
    {
      result = swift_bridgeObjectRelease();
      v25 = 0;
      v26 = 0;
      v27 = 0;
      v28 = 0;
      v29 = 0;
      goto LABEL_21;
    }
  }
  if ((sub_1C1427064() & 1) == 0 || ((v33 ^ v19) & 1) != 0)
    goto LABEL_4;
LABEL_16:
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v23 = *v31;
  v35 = *v31;
  *v31 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_1C1352A94();
    v23 = v35;
  }
  v24 = *(_QWORD *)(v23 + 48) + 40 * v13;
  v25 = *(_QWORD *)v24;
  v26 = *(_QWORD *)(v24 + 8);
  v27 = *(_QWORD *)(v24 + 16);
  v28 = *(_QWORD *)(v24 + 24);
  v29 = *(_BYTE *)(v24 + 32);
  sub_1C1354F74(v13);
  *v31 = v35;
  result = swift_bridgeObjectRelease();
LABEL_21:
  a2 = v32;
LABEL_22:
  *(_QWORD *)a2 = v25;
  *(_QWORD *)(a2 + 8) = v26;
  *(_QWORD *)(a2 + 16) = v27;
  *(_QWORD *)(a2 + 24) = v28;
  *(_BYTE *)(a2 + 32) = v29;
  return result;
}

uint64_t sub_1C13547C0(void *a1)
{
  return sub_1C1354390(a1, (void (*)(_QWORD))_s11SessionCore6ClientCMa_1, &qword_1ED797AB8);
}

uint64_t sub_1C13547D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v6 = sub_1C1426494();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1C1329AD0((unint64_t *)&unk_1ED793250, v11, MEMORY[0x1E0D8D0B8]);
  swift_bridgeObjectRetain();
  v29 = a1;
  v12 = sub_1C1426A4C();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a2;
    v15 = ~v13;
    v16 = *(_QWORD *)(v7 + 72);
    v30 = v7;
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v18 = v16 * v14;
      v17(v9, *(_QWORD *)(v10 + 48) + v16 * v14, v6);
      sub_1C1329AD0(&qword_1ED793920, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8D0A8], MEMORY[0x1E0D8D0C0]);
      v19 = sub_1C1426A70();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        break;
      v14 = (v14 + 1) & v15;
      if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v20 = 1;
        a2 = v28;
        v7 = v30;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
      }
    }
    swift_bridgeObjectRelease();
    v21 = v27;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v21;
    v31 = *v21;
    *v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1C1352C60((uint64_t (*)(_QWORD))MEMORY[0x1E0D8D0A8], &qword_1ED7933C0);
      v23 = v31;
    }
    v24 = *(_QWORD *)(v23 + 48) + v18;
    v7 = v30;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v30 + 32))(v28, v24, v6);
    sub_1C13551D0(v14, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8D0A8], (unint64_t *)&unk_1ED793250, MEMORY[0x1E0D8D0B8]);
    *v21 = v31;
    swift_bridgeObjectRelease();
    v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
}

uint64_t sub_1C1354A38(void *a1)
{
  return sub_1C1354390(a1, (void (*)(_QWORD))type metadata accessor for PushFrequentUpdatesObservationClient, &qword_1ED791F28);
}

uint64_t sub_1C1354A4C(void *a1)
{
  return sub_1C1354390(a1, (void (*)(_QWORD))_s11SessionCore6ClientCMa_3, &qword_1ED7932D0);
}

uint64_t sub_1C1354A60(void *a1)
{
  return sub_1C1354390(a1, (void (*)(_QWORD))type metadata accessor for AuthorizationServiceClient, &qword_1ED791F20);
}

uint64_t sub_1C1354A74(uint64_t a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  void *v16;
  id v17;
  id v18;
  char v19;
  uint64_t result;
  uint64_t v21;

  v3 = v2;
  swift_bridgeObjectRelease();
  v5 = sub_1C1426E60();
  v6 = swift_unknownObjectRetain();
  v7 = sub_1C13509BC(v6, v5);
  v21 = v7;
  swift_retain();
  v8 = sub_1C1426D88();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    type metadata accessor for Client();
    v11 = *(id *)(*(_QWORD *)(v7 + 48) + 8 * v10);
    v12 = sub_1C1426D94();

    if ((v12 & 1) != 0)
    {
LABEL_6:
      swift_release();
      v16 = *(void **)(*(_QWORD *)(v7 + 48) + 8 * v10);
      sub_1C1355458(v10);
      v17 = a2;
      v18 = v16;
      v19 = sub_1C1426D94();

      if ((v19 & 1) != 0)
      {
        *v3 = v21;
        return (uint64_t)v18;
      }
      __break(1u);
    }
    else
    {
      v13 = ~v9;
      while (1)
      {
        v10 = (v10 + 1) & v13;
        if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
          break;
        v14 = *(id *)(*(_QWORD *)(v7 + 48) + 8 * v10);
        v15 = sub_1C1426D94();

        if ((v15 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release();
    __break(1u);
  }
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1C1354C18(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(_QWORD))
{
  uint64_t *v4;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;

  v7 = v4;
  swift_bridgeObjectRelease();
  v8 = sub_1C1426E60();
  v9 = swift_unknownObjectRetain();
  v10 = sub_1C1350BA0(v9, v8, a3, a4);
  v21 = v10;
  swift_retain();
  v11 = sub_1C1426D88();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    a4(0);
    v14 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * v13);
    v15 = sub_1C1426D94();

    if ((v15 & 1) != 0)
    {
LABEL_6:
      swift_release();
      v19 = *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v13);
      sub_1C1355458(v13);
      if ((sub_1C1426D94() & 1) != 0)
      {
        *v7 = v21;
        return v19;
      }
      __break(1u);
    }
    else
    {
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v10 + 48) + 8 * v13);
        v18 = sub_1C1426D94();

        if ((v18 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release();
    __break(1u);
  }
  result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_1C1354DB0(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1C1426E00();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_1C14270E8();
        swift_bridgeObjectRetain();
        sub_1C1426AD0();
        v10 = sub_1C1427100();
        swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_OWORD *)(v12 + 16 * v2);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1C1354F74(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  __int128 *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1C1426E00();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      v22 = v3;
      v23 = v4;
      do
      {
        v12 = 40 * v6;
        v13 = v2;
        sub_1C14270E8();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C1426AD0();
        swift_bridgeObjectRetain();
        sub_1C1426AD0();
        swift_bridgeObjectRelease();
        sub_1C14270F4();
        v14 = sub_1C1427100();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v15 = v14 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v15 < v9)
          {
            v3 = v22;
            v4 = v23;
          }
          else
          {
            v3 = v22;
            v4 = v23;
            if (v2 >= (uint64_t)v15)
              goto LABEL_12;
          }
        }
        else
        {
          v3 = v22;
          v4 = v23;
          if (v15 >= v9 || v2 >= (uint64_t)v15)
          {
LABEL_12:
            v16 = *(_QWORD *)(v3 + 48);
            v17 = v16 + 40 * v2;
            v18 = (__int128 *)(v16 + v12);
            if (40 * v2 < v12 || v17 >= (unint64_t)v18 + 40 || (v2 = v6, v13 != v6))
            {
              v10 = *v18;
              v11 = v18[1];
              *(_QWORD *)(v17 + 32) = *((_QWORD *)v18 + 4);
              *(_OWORD *)v17 = v10;
              *(_OWORD *)(v17 + 16) = v11;
              v2 = v6;
            }
          }
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v19 = *(_QWORD *)(v3 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v21;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_1C13551D0(int64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  unint64_t v21;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  void (*v31)(char *, unint64_t, uint64_t);
  unint64_t v32;
  uint64_t (*v33)(uint64_t);
  unint64_t *v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a3;
  v35 = a4;
  v33 = a2;
  v6 = a2(0);
  v36 = *(_QWORD *)(v6 - 8);
  result = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v29 - v8;
  v10 = *v4;
  v11 = *v4 + 56;
  v12 = -1 << *(_BYTE *)(*v4 + 32);
  v13 = (a1 + 1) & ~v12;
  if (((1 << v13) & *(_QWORD *)(v11 + 8 * (v13 >> 6))) != 0)
  {
    v30 = v4;
    v14 = ~v12;
    swift_retain();
    v15 = sub_1C1426E00();
    if ((*(_QWORD *)(v11 + 8 * (v13 >> 6)) & (1 << v13)) != 0)
    {
      v32 = (v15 + 1) & v14;
      v16 = *(_QWORD *)(v36 + 72);
      v31 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 16);
      do
      {
        v17 = v11;
        v18 = v16;
        v19 = v16 * v13;
        v31(v9, *(_QWORD *)(v10 + 48) + v16 * v13, v6);
        sub_1C1329AD0(v34, v33, v35);
        v20 = sub_1C1426A4C();
        (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v6);
        v21 = v20 & v14;
        if (a1 >= (uint64_t)v32)
        {
          if (v21 >= v32 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            v16 = v18;
            v24 = v18 * a1;
            if (v18 * a1 < v19
              || *(_QWORD *)(v10 + 48) + v18 * a1 >= (unint64_t)(*(_QWORD *)(v10 + 48) + v19 + v18))
            {
              swift_arrayInitWithTakeFrontToBack();
              a1 = v13;
            }
            else
            {
              a1 = v13;
              if (v24 != v19)
              {
                swift_arrayInitWithTakeBackToFront();
                a1 = v13;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v32 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        v16 = v18;
LABEL_5:
        v13 = (v13 + 1) & v14;
        v11 = v17;
      }
      while (((*(_QWORD *)(v17 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
    }
    *(_QWORD *)(v11 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    result = swift_release();
    v4 = v30;
  }
  else
  {
    *(_QWORD *)(v11 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v25 = *v4;
  v26 = *(_QWORD *)(*v4 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v25 + 16) = v28;
    ++*(_DWORD *)(v25 + 36);
  }
  return result;
}

unint64_t sub_1C1355458(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1C1426E00();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v6);
        v11 = sub_1C1426D88();

        v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(v3 + 48);
            v16 = (_QWORD *)(v15 + 8 * v2);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v2 != v6 || (v2 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void sub_1C13555F8(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  void *v18;
  id v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  char v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _OWORD v46[2];
  id v47;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  sub_1C1357FB0(a1 + 32, (uint64_t)&v44);
  v7 = v44;
  v8 = v45;
  v42 = v44;
  v43 = v45;
  sub_1C13377A0(v46, v41);
  v9 = (_QWORD *)*a3;
  v11 = sub_1C13277A0(v7, v8);
  v12 = v9[2];
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
    goto LABEL_23;
  v15 = v10;
  if (v9[3] >= v14)
  {
    if ((a2 & 1) != 0)
    {
      if ((v10 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_1C13BAAA0();
      if ((v15 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v20 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    v21 = (uint64_t *)(v20[6] + 16 * v11);
    *v21 = v7;
    v21[1] = v8;
    sub_1C13377A0(v41, (_OWORD *)(v20[7] + 32 * v11));
    v22 = v20[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v20[2] = v24;
    v25 = v4 - 1;
    if (!v25)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    v26 = a1 + 80;
    while (1)
    {
      sub_1C1357FB0(v26, (uint64_t)&v44);
      v27 = v44;
      v28 = v45;
      v42 = v44;
      v43 = v45;
      sub_1C13377A0(v46, v41);
      v29 = (_QWORD *)*a3;
      v30 = sub_1C13277A0(v27, v28);
      v32 = v29[2];
      v33 = (v31 & 1) == 0;
      v23 = __OFADD__(v32, v33);
      v34 = v32 + v33;
      if (v23)
        break;
      v35 = v31;
      if (v29[3] < v34)
      {
        sub_1C13BDC84(v34, 1);
        v30 = sub_1C13277A0(v27, v28);
        if ((v35 & 1) != (v36 & 1))
          goto LABEL_25;
      }
      if ((v35 & 1) != 0)
        goto LABEL_10;
      v37 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v30 >> 6) + 64) |= 1 << v30;
      v38 = (uint64_t *)(v37[6] + 16 * v30);
      *v38 = v27;
      v38[1] = v28;
      sub_1C13377A0(v41, (_OWORD *)(v37[7] + 32 * v30));
      v39 = v37[2];
      v23 = __OFADD__(v39, 1);
      v40 = v39 + 1;
      if (v23)
        goto LABEL_24;
      v37[2] = v40;
      v26 += 48;
      if (!--v25)
        goto LABEL_22;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1C13BDC84(v14, a2 & 1);
  v16 = sub_1C13277A0(v7, v8);
  if ((v15 & 1) == (v17 & 1))
  {
    v11 = v16;
    if ((v15 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v18 = (void *)swift_allocError();
    swift_willThrow();
    v47 = v18;
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797BA0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_1C142707C();
  __break(1u);
LABEL_26:
  sub_1C1426F08();
  sub_1C14252D0();
  sub_1C1426F74();
  sub_1C14252D0();
  sub_1C1426F8C();
  __break(1u);
}

uint64_t sub_1C13559B4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v14 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      v8 = v14 + 1;
      if (v14 + 1 >= v7)
        return swift_release();
      v15 = *(_QWORD *)(v3 + 8 * v8);
      if (!v15)
      {
        v8 = v14 + 2;
        if (v14 + 2 >= v7)
          return swift_release();
        v15 = *(_QWORD *)(v3 + 8 * v8);
        if (!v15)
        {
          v8 = v14 + 3;
          if (v14 + 3 >= v7)
            return swift_release();
          v15 = *(_QWORD *)(v3 + 8 * v8);
          if (!v15)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1C1353F8C(v12, v13);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v7)
    return swift_release();
  v15 = *(_QWORD *)(v3 + 8 * v16);
  if (v15)
  {
    v8 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v8);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C1355B48(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __int128 v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16[5];
  _OWORD v17[2];
  char v18;
  __int128 v19;
  __int128 v20;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v13 >= v7)
      return swift_release();
    v14 = *(_QWORD *)(v3 + 8 * v13);
    ++v8;
    if (!v14)
    {
      v8 = v13 + 1;
      if (v13 + 1 >= v7)
        return swift_release();
      v14 = *(_QWORD *)(v3 + 8 * v8);
      if (!v14)
      {
        v8 = v13 + 2;
        if (v13 + 2 >= v7)
          return swift_release();
        v14 = *(_QWORD *)(v3 + 8 * v8);
        if (!v14)
        {
          v8 = v13 + 3;
          if (v13 + 3 >= v7)
            return swift_release();
          v14 = *(_QWORD *)(v3 + 8 * v8);
          if (!v14)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v14 - 1) & v14;
    v10 = __clz(__rbit64(v14)) + (v8 << 6);
LABEL_6:
    v11 = *(_QWORD *)(v2 + 48) + 40 * v10;
    v18 = *(_BYTE *)(v11 + 32);
    v12 = *(_OWORD *)(v11 + 16);
    v17[0] = *(_OWORD *)v11;
    v17[1] = v12;
    v19 = v17[0];
    v20 = v12;
    sub_1C13583C8((uint64_t)&v19);
    sub_1C13583C8((uint64_t)&v20);
    sub_1C1354568((uint64_t *)v17, (uint64_t)v16);
    sub_1C13583F0(v16);
    sub_1C1358454((uint64_t)&v19);
    result = sub_1C1358454((uint64_t)&v20);
  }
  v15 = v13 + 4;
  if (v15 >= v7)
    return swift_release();
  v14 = *(_QWORD *)(v3 + 8 * v15);
  if (v14)
  {
    v8 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v14 = *(_QWORD *)(v3 + 8 * v8);
    ++v15;
    if (v14)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C1355D00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7978D0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C1426494();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v25 - v12;
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v14 = *(_QWORD *)(a1 + 56);
  v26 = a1 + 56;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v18 = (unint64_t)(v15 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v19 = 0;
  while (1)
  {
    if (v17)
    {
      v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v21 = v20 | (v19 << 6);
      goto LABEL_6;
    }
    v22 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v18)
      return swift_release();
    v23 = *(_QWORD *)(v26 + 8 * v22);
    ++v19;
    if (!v23)
    {
      v19 = v22 + 1;
      if (v22 + 1 >= v18)
        return swift_release();
      v23 = *(_QWORD *)(v26 + 8 * v19);
      if (!v23)
      {
        v19 = v22 + 2;
        if (v22 + 2 >= v18)
          return swift_release();
        v23 = *(_QWORD *)(v26 + 8 * v19);
        if (!v23)
        {
          v19 = v22 + 3;
          if (v22 + 3 >= v18)
            return swift_release();
          v23 = *(_QWORD *)(v26 + 8 * v19);
          if (!v23)
            break;
        }
      }
    }
LABEL_23:
    v17 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v19 << 6);
LABEL_6:
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v13, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v7 + 72) * v21, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v13, v6);
    sub_1C13547D4((uint64_t)v10, (uint64_t)v5);
    sub_1C135847C((uint64_t)v5);
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  v24 = v22 + 4;
  if (v24 >= v18)
    return swift_release();
  v23 = *(_QWORD *)(v26 + 8 * v24);
  if (v23)
  {
    v19 = v24;
    goto LABEL_23;
  }
  while (1)
  {
    v19 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v19 >= v18)
      return swift_release();
    v23 = *(_QWORD *)(v26 + 8 * v19);
    ++v24;
    if (v23)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C1355F5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t isStackAllocationSafe;
  char v29;
  unint64_t v30;
  size_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  unint64_t v42;
  uint64_t v43;

  v2 = a2;
  v43 = *MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = *(_QWORD *)(a1 + 56);
    v37 = a1 + 56;
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v35 = ~v5;
    if (-v5 < 64)
      v6 = ~(-1 << -(char)v5);
    else
      v6 = -1;
    v7 = v6 & v4;
    v36 = (unint64_t)(63 - v5) >> 6;
    v8 = a2 + 56;
    swift_bridgeObjectRetain();
    v9 = 0;
    while (1)
    {
      if (v7)
      {
        v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v11 = v10 | (v9 << 6);
      }
      else
      {
        v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v36)
          goto LABEL_47;
        v13 = *(_QWORD *)(v37 + 8 * v12);
        v14 = v9 + 1;
        if (!v13)
        {
          v14 = v9 + 2;
          if (v9 + 2 >= v36)
            goto LABEL_47;
          v13 = *(_QWORD *)(v37 + 8 * v14);
          if (!v13)
          {
            v14 = v9 + 3;
            if (v9 + 3 >= v36)
              goto LABEL_47;
            v13 = *(_QWORD *)(v37 + 8 * v14);
            if (!v13)
            {
              v14 = v9 + 4;
              if (v9 + 4 >= v36)
                goto LABEL_47;
              v13 = *(_QWORD *)(v37 + 8 * v14);
              if (!v13)
              {
                v15 = v9 + 5;
                if (v9 + 5 >= v36)
                {
LABEL_47:
                  sub_1C133F908();
                  return v2;
                }
                v13 = *(_QWORD *)(v37 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    v14 = v15 + 1;
                    if (__OFADD__(v15, 1))
                      break;
                    if (v14 >= v36)
                      goto LABEL_47;
                    v13 = *(_QWORD *)(v37 + 8 * v14);
                    ++v15;
                    if (v13)
                      goto LABEL_24;
                  }
LABEL_49:
                  __break(1u);
                }
                v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        v7 = (v13 - 1) & v13;
        v11 = __clz(__rbit64(v13)) + (v14 << 6);
        v9 = v14;
      }
      v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
      v18 = *v16;
      v17 = v16[1];
      sub_1C14270E8();
      swift_bridgeObjectRetain();
      sub_1C1426AD0();
      v19 = sub_1C1427100();
      v20 = -1 << *(_BYTE *)(v2 + 32);
      v21 = v19 & ~v20;
      if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
        break;
LABEL_6:
      swift_bridgeObjectRelease();
    }
    v22 = *(_QWORD *)(v2 + 48);
    v23 = (_QWORD *)(v22 + 16 * v21);
    v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_1C1427064() & 1) != 0)
    {
      isStackAllocationSafe = swift_bridgeObjectRelease();
      v38 = a1;
      v39 = v37;
      v40 = v35;
      v41 = v9;
      v42 = v7;
    }
    else
    {
      v25 = ~v20;
      do
      {
        v21 = (v21 + 1) & v25;
        if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          goto LABEL_6;
        v26 = (_QWORD *)(v22 + 16 * v21);
        v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_1C1427064() & 1) == 0);
      v38 = a1;
      v39 = v37;
      v40 = v35;
      v41 = v9;
      v42 = v7;
      isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    v29 = *(_BYTE *)(v2 + 32);
    v30 = (unint64_t)((1 << v29) + 63) >> 6;
    v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
    {
      MEMORY[0x1E0C80A78](isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      v32 = sub_1C1356ED0((uint64_t)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), v30, v2, v21, &v38);
      swift_release();
      sub_1C133F908();
    }
    else
    {
      v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      v32 = sub_1C1356ED0((uint64_t)v33, v30, v2, v21, &v38);
      swift_release();
      sub_1C133F908();
      MEMORY[0x1C3BAD3F4](v33, -1, -1);
    }
    return v32;
  }
  else
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
}

uint64_t sub_1C13563C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  BOOL v28;
  uint64_t isStackAllocationSafe;
  uint64_t v31;
  char v32;
  unint64_t v33;
  size_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  _QWORD v47[7];

  v2 = a2;
  v47[5] = *MEMORY[0x1E0C80C00];
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  v3 = *(_QWORD *)(a1 + 56);
  v40 = a1 + 56;
  v4 = -1 << *(_BYTE *)(a1 + 32);
  v38 = ~v4;
  if (-v4 < 64)
    v5 = ~(-1 << -(char)v4);
  else
    v5 = -1;
  v6 = v5 & v3;
  v39 = (unint64_t)(63 - v4) >> 6;
  v46 = (char *)(a2 + 56);
  v7 = swift_bridgeObjectRetain();
  v42 = v2;
  v43 = 0;
  v41 = v7;
  while (1)
  {
    if (v6)
    {
      v44 = (v6 - 1) & v6;
      v8 = __clz(__rbit64(v6)) | (v43 << 6);
    }
    else
    {
      v9 = v43 + 1;
      if (__OFADD__(v43, 1))
      {
        __break(1u);
        goto LABEL_48;
      }
      if (v9 >= v39)
        goto LABEL_45;
      v10 = *(_QWORD *)(v40 + 8 * v9);
      v11 = v43 + 1;
      if (!v10)
      {
        v11 = v43 + 2;
        if (v43 + 2 >= v39)
          goto LABEL_45;
        v10 = *(_QWORD *)(v40 + 8 * v11);
        if (!v10)
        {
          v11 = v43 + 3;
          if (v43 + 3 >= v39)
            goto LABEL_45;
          v10 = *(_QWORD *)(v40 + 8 * v11);
          if (!v10)
          {
            v11 = v43 + 4;
            if (v43 + 4 >= v39)
              goto LABEL_45;
            v10 = *(_QWORD *)(v40 + 8 * v11);
            if (!v10)
            {
              v12 = v43 + 5;
              if (v43 + 5 >= v39)
              {
LABEL_45:
                sub_1C133F908();
                return v2;
              }
              v10 = *(_QWORD *)(v40 + 8 * v12);
              if (!v10)
              {
                while (1)
                {
                  v11 = v12 + 1;
                  if (__OFADD__(v12, 1))
                    break;
                  if (v11 >= v39)
                    goto LABEL_45;
                  v10 = *(_QWORD *)(v40 + 8 * v11);
                  ++v12;
                  if (v10)
                    goto LABEL_24;
                }
LABEL_48:
                __break(1u);
              }
              v11 = v43 + 5;
            }
          }
        }
      }
LABEL_24:
      v43 = v11;
      v44 = (v10 - 1) & v10;
      v8 = __clz(__rbit64(v10)) + (v11 << 6);
    }
    v13 = *(_QWORD *)(v7 + 48) + 40 * v8;
    v15 = *(_QWORD *)v13;
    v14 = *(_QWORD *)(v13 + 8);
    v16 = *(_QWORD *)(v13 + 16);
    v17 = *(_QWORD *)(v13 + 24);
    v18 = *(unsigned __int8 *)(v13 + 32);
    sub_1C14270E8();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1C1426AD0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C1426AD0();
    swift_bridgeObjectRelease();
    v45 = v18;
    sub_1C14270F4();
    v19 = sub_1C1427100();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = v19 & ~v20;
    if (((*(_QWORD *)&v46[(v21 >> 3) & 0xFFFFFFFFFFFFF8] >> v21) & 1) != 0)
      break;
LABEL_6:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v2 = v42;
    v7 = v41;
    v6 = v44;
  }
  v22 = ~v20;
  v23 = *(_QWORD *)(v42 + 48);
  while (1)
  {
    v24 = v23 + 40 * v21;
    v26 = *(_QWORD *)(v24 + 16);
    v25 = *(_QWORD *)(v24 + 24);
    v27 = *(unsigned __int8 *)(v24 + 32);
    v28 = *(_QWORD *)v24 == v15 && *(_QWORD *)(v24 + 8) == v14;
    if (v28 || (sub_1C1427064() & 1) != 0)
    {
      if (v26 == v16 && v25 == v17)
      {
        if ((_DWORD)v45 == v27)
          break;
        goto LABEL_28;
      }
      if ((sub_1C1427064() & 1) != 0 && ((v45 ^ v27) & 1) == 0)
        break;
    }
LABEL_28:
    v21 = (v21 + 1) & v22;
    if (((*(_QWORD *)&v46[(v21 >> 3) & 0xFFFFFFFFFFFFF8] >> v21) & 1) == 0)
      goto LABEL_6;
  }
  v47[0] = v41;
  v47[1] = v40;
  v47[2] = v38;
  v47[3] = v43;
  v47[4] = v44;
  swift_bridgeObjectRelease();
  isStackAllocationSafe = swift_bridgeObjectRelease();
  v31 = v42;
  v32 = *(_BYTE *)(v42 + 32);
  v33 = (unint64_t)((1 << v32) + 63) >> 6;
  v34 = 8 * v33;
  if ((v32 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    memcpy((char *)&v38 - ((v34 + 15) & 0x3FFFFFFFFFFFFFF0), v46, v34);
    v35 = sub_1C13571C4((uint64_t)&v38 - ((v34 + 15) & 0x3FFFFFFFFFFFFFF0), v33, v31, v21, v47);
    swift_release();
    sub_1C133F908();
    return v35;
  }
  else
  {
    v36 = (void *)swift_slowAlloc();
    memcpy(v36, v46, v34);
    v2 = sub_1C13571C4((uint64_t)v36, v33, v42, v21, v47);
    swift_release();
    sub_1C133F908();
    MEMORY[0x1C3BAD3F4](v36, -1, -1);
  }
  return v2;
}

uint64_t sub_1C135691C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, unint64_t, uint64_t);
  char v40;
  void (*v41)(char *, uint64_t);
  uint64_t isStackAllocationSafe;
  char v43;
  unint64_t v44;
  size_t v45;
  uint64_t v46;
  void *v48;
  uint64_t v49;
  char *v50;
  unint64_t v51;
  int64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;
  unint64_t v60;
  uint64_t v61;

  v61 = *MEMORY[0x1E0C80C00];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7978D0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C1426494();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v55 = (char *)&v49 - v12;
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  v13 = -1 << *(_BYTE *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 56);
  v15 = ~v13;
  v16 = -v13;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v56 = a1;
  v57 = a1 + 56;
  v18 = a1;
  v19 = a1 + 56;
  v20 = v17 & v14;
  v21 = v15;
  v58 = v15;
  v59 = 0;
  v60 = v17 & v14;
  v54 = (char *)(a2 + 56);
  v22 = v18;
  swift_bridgeObjectRetain();
  v23 = 0;
  v50 = v6;
  v53 = a2;
  v51 = v20;
  v52 = 0;
  if (!v20)
    goto LABEL_8;
LABEL_6:
  v24 = (v20 - 1) & v20;
  v25 = __clz(__rbit64(v20)) | (v23 << 6);
  v26 = v23;
  v27 = v19;
LABEL_7:
  (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v6, *(_QWORD *)(v22 + 48) + *(_QWORD *)(v8 + 72) * v25, v7);
  v28 = 0;
  while (1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v28, 1, v7);
    v56 = v22;
    v57 = v27;
    v58 = v21;
    v59 = v26;
    v60 = v24;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_1C133F908();
      sub_1C135847C((uint64_t)v6);
      return v53;
    }
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v55, v6, v7);
    v32 = v53;
    sub_1C1329AD0((unint64_t *)&unk_1ED793250, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8D0A8], MEMORY[0x1E0D8D0B8]);
    v33 = sub_1C1426A4C();
    v34 = -1 << *(_BYTE *)(v32 + 32);
    v35 = v33 & ~v34;
    if (((*(_QWORD *)&v54[(v35 >> 3) & 0xFFFFFFFFFFFFF8] >> v35) & 1) != 0)
      break;
    v41 = *(void (**)(char *, uint64_t))(v8 + 8);
LABEL_34:
    v41(v55, v7);
    v23 = v59;
    v20 = v60;
    v22 = v56;
    v19 = v57;
    v21 = v58;
    v6 = v50;
    v51 = v60;
    v52 = v59;
    if (v60)
      goto LABEL_6;
LABEL_8:
    v26 = v23 + 1;
    if (__OFADD__(v23, 1))
      __break(1u);
    v27 = v19;
    v29 = (unint64_t)(v21 + 64) >> 6;
    if (v26 >= v29)
      goto LABEL_26;
    v30 = *(_QWORD *)(v19 + 8 * v26);
    if (v30)
      goto LABEL_11;
    v23 += 2;
    if (v26 + 1 >= v29)
      goto LABEL_36;
    v30 = *(_QWORD *)(v19 + 8 * v23);
    if (v30)
      goto LABEL_14;
    if (v26 + 2 >= v29)
    {
LABEL_26:
      v24 = 0;
      v28 = 1;
      v26 = v23;
    }
    else
    {
      v30 = *(_QWORD *)(v19 + 8 * (v26 + 2));
      if (v30)
      {
        v26 += 2;
        goto LABEL_11;
      }
      v23 = v26 + 3;
      if (v26 + 3 >= v29)
      {
        v24 = 0;
        v28 = 1;
        v26 += 2;
      }
      else
      {
        v30 = *(_QWORD *)(v19 + 8 * v23);
        if (v30)
        {
LABEL_14:
          v26 = v23;
LABEL_11:
          v24 = (v30 - 1) & v30;
          v25 = __clz(__rbit64(v30)) + (v26 << 6);
          goto LABEL_7;
        }
        v26 += 4;
        if (v26 >= v29)
          goto LABEL_26;
        v30 = *(_QWORD *)(v19 + 8 * v26);
        if (v30)
          goto LABEL_11;
        v26 = v29 - 1;
        v31 = v52 + 6;
        while (v29 != v31)
        {
          v30 = *(_QWORD *)(v19 + 8 * v31++);
          if (v30)
          {
            v26 = v31 - 1;
            goto LABEL_11;
          }
        }
LABEL_36:
        v24 = 0;
        v28 = 1;
      }
    }
  }
  v36 = v32;
  v37 = ~v34;
  v38 = *(_QWORD *)(v8 + 72);
  v39 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  while (1)
  {
    v39(v11, *(_QWORD *)(v36 + 48) + v38 * v35, v7);
    sub_1C1329AD0(&qword_1ED793920, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8D0A8], MEMORY[0x1E0D8D0C0]);
    v40 = sub_1C1426A70();
    v41 = *(void (**)(char *, uint64_t))(v8 + 8);
    v41(v11, v7);
    if ((v40 & 1) != 0)
      break;
    v35 = (v35 + 1) & v37;
    if (((*(_QWORD *)&v54[(v35 >> 3) & 0xFFFFFFFFFFFFF8] >> v35) & 1) == 0)
      goto LABEL_34;
  }
  isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v41)(v55, v7);
  v43 = *(_BYTE *)(v36 + 32);
  v44 = (unint64_t)((1 << v43) + 63) >> 6;
  v45 = 8 * v44;
  if ((v43 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    memcpy((char *)&v49 - ((v45 + 15) & 0x3FFFFFFFFFFFFFF0), v54, v45);
    v46 = sub_1C1357528((unint64_t *)((char *)&v49 - ((v45 + 15) & 0x3FFFFFFFFFFFFFF0)), v44, v36, v35, &v56);
    swift_release();
    sub_1C133F908();
  }
  else
  {
    v48 = (void *)swift_slowAlloc();
    memcpy(v48, v54, v45);
    v46 = sub_1C1357528((unint64_t *)v48, v44, v36, v35, &v56);
    swift_release();
    sub_1C133F908();
    MEMORY[0x1C3BAD3F4](v48, -1, -1);
  }
  return v46;
}

uint64_t sub_1C1356ED0(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t i;
  unint64_t v33;
  _QWORD *v34;
  BOOL v35;
  int64_t v36;
  uint64_t v38;
  unint64_t *v39;
  uint64_t v40;

  v7 = *(_QWORD *)(a3 + 16);
  v39 = (unint64_t *)result;
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v8 = v7 - 1;
  v40 = a3 + 56;
  while (2)
  {
    v38 = v8;
    do
    {
      while (1)
      {
        v9 = a5[3];
        v10 = a5[4];
        if (v10)
        {
          v11 = (v10 - 1) & v10;
          v12 = __clz(__rbit64(v10)) | (v9 << 6);
          goto LABEL_16;
        }
        v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_47;
        }
        v14 = (unint64_t)(a5[2] + 64) >> 6;
        v15 = a5[3];
        if (v13 >= v14)
          goto LABEL_45;
        v16 = a5[1];
        v17 = *(_QWORD *)(v16 + 8 * v13);
        if (!v17)
        {
          v18 = v9 + 2;
          v15 = v9 + 1;
          if (v9 + 2 >= v14)
            goto LABEL_45;
          v17 = *(_QWORD *)(v16 + 8 * v18);
          if (!v17)
          {
            v15 = v9 + 2;
            if (v9 + 3 >= v14)
              goto LABEL_45;
            v17 = *(_QWORD *)(v16 + 8 * (v9 + 3));
            if (v17)
            {
              v13 = v9 + 3;
              goto LABEL_15;
            }
            v18 = v9 + 4;
            v15 = v9 + 3;
            if (v9 + 4 >= v14)
              goto LABEL_45;
            v17 = *(_QWORD *)(v16 + 8 * v18);
            if (!v17)
            {
              v13 = v9 + 5;
              v15 = v9 + 4;
              if (v9 + 5 >= v14)
                goto LABEL_45;
              v17 = *(_QWORD *)(v16 + 8 * v13);
              if (!v17)
              {
                v15 = v14 - 1;
                v36 = v9 + 6;
                while (v14 != v36)
                {
                  v17 = *(_QWORD *)(v16 + 8 * v36++);
                  if (v17)
                  {
                    v13 = v36 - 1;
                    goto LABEL_15;
                  }
                }
LABEL_45:
                a5[3] = v15;
                a5[4] = 0;
                swift_retain();
                return sub_1C1357C60(v39, a2, v38, a3);
              }
              goto LABEL_15;
            }
          }
          v13 = v18;
        }
LABEL_15:
        v11 = (v17 - 1) & v17;
        v12 = __clz(__rbit64(v17)) + (v13 << 6);
        v9 = v13;
LABEL_16:
        v19 = (uint64_t *)(*(_QWORD *)(*a5 + 48) + 16 * v12);
        v21 = *v19;
        v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_1C14270E8();
        swift_bridgeObjectRetain();
        sub_1C1426AD0();
        v22 = sub_1C1427100();
        v23 = -1 << *(_BYTE *)(a3 + 32);
        v24 = v22 & ~v23;
        v25 = v24 >> 6;
        v26 = 1 << v24;
        if (((1 << v24) & *(_QWORD *)(v40 + 8 * (v24 >> 6))) == 0)
          goto LABEL_3;
        v27 = *(_QWORD *)(a3 + 48);
        v28 = (_QWORD *)(v27 + 16 * v24);
        v29 = *v28 == v21 && v28[1] == v20;
        if (v29 || (sub_1C1427064() & 1) != 0)
          break;
        v31 = ~v23;
        for (i = v24 + 1; ; i = v33 + 1)
        {
          v33 = i & v31;
          if (((*(_QWORD *)(v40 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0)
            break;
          v34 = (_QWORD *)(v27 + 16 * v33);
          v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_1C1427064() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v25 = v33 >> 6;
            v26 = 1 << v33;
            goto LABEL_23;
          }
        }
LABEL_3:
        result = swift_bridgeObjectRelease();
      }
      result = swift_bridgeObjectRelease();
LABEL_23:
      v30 = v39[v25];
      v39[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    v8 = v38 - 1;
    if (__OFSUB__(v38, 1))
    {
LABEL_47:
      __break(1u);
      return result;
    }
    if (v38 != 1)
      continue;
    return MEMORY[0x1E0DEE9E8];
  }
}

uint64_t sub_1C13571C4(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  BOOL v32;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v38;
  unint64_t *v39;
  _QWORD *v40;
  int v42;
  uint64_t v43;
  uint64_t v44;

  v5 = a3;
  v6 = *(_QWORD *)(a3 + 16);
  v39 = (unint64_t *)result;
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v7 = v6 - 1;
  v44 = a3 + 56;
  v40 = a5;
LABEL_2:
  v38 = v7;
LABEL_4:
  while (2)
  {
    v9 = a5[3];
    v8 = a5[4];
    if (v8)
    {
      v10 = (v8 - 1) & v8;
      v11 = __clz(__rbit64(v8)) | (v9 << 6);
LABEL_16:
      v17 = *(_QWORD *)(*a5 + 48) + 40 * v11;
      v18 = *(_QWORD *)v17;
      v19 = *(_QWORD *)(v17 + 8);
      v20 = *(_QWORD *)(v17 + 16);
      v21 = *(_QWORD *)(v17 + 24);
      v22 = *(unsigned __int8 *)(v17 + 32);
      a5[3] = v9;
      a5[4] = v10;
      sub_1C14270E8();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C1426AD0();
      swift_bridgeObjectRetain();
      v43 = v20;
      sub_1C1426AD0();
      swift_bridgeObjectRelease();
      v42 = v22;
      sub_1C14270F4();
      v23 = sub_1C1427100();
      v24 = -1 << *(_BYTE *)(v5 + 32);
      v25 = v23 & ~v24;
      if (((*(_QWORD *)(v44 + ((v25 >> 3) & 0xFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
      {
LABEL_3:
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        a5 = v40;
        v5 = a3;
        continue;
      }
      v26 = ~v24;
      v27 = *(_QWORD *)(v5 + 48);
      while (1)
      {
        v28 = v27 + 40 * v25;
        v29 = *(_QWORD *)(v28 + 16);
        v30 = *(_QWORD *)(v28 + 24);
        v31 = *(unsigned __int8 *)(v28 + 32);
        v32 = *(_QWORD *)v28 == v18 && *(_QWORD *)(v28 + 8) == v19;
        if (v32 || (sub_1C1427064() & 1) != 0)
        {
          if (v29 == v43 && v30 == v21)
          {
            if (v42 == v31)
              goto LABEL_31;
          }
          else if ((sub_1C1427064() & 1) != 0 && ((v42 ^ v31) & 1) == 0)
          {
LABEL_31:
            swift_bridgeObjectRelease();
            result = swift_bridgeObjectRelease();
            v34 = (v25 >> 3) & 0x1FFFFFFFFFFFFFF8;
            a5 = v40;
            v35 = *(unint64_t *)((char *)v39 + v34);
            *(unint64_t *)((char *)v39 + v34) = v35 & ~(1 << v25);
            v5 = a3;
            if ((v35 & (1 << v25)) != 0)
            {
              v7 = v38 - 1;
              if (__OFSUB__(v38, 1))
                goto LABEL_49;
              if (v38 == 1)
                return MEMORY[0x1E0DEE9E8];
              goto LABEL_2;
            }
            goto LABEL_4;
          }
        }
        v25 = (v25 + 1) & v26;
        if (((*(_QWORD *)(v44 + ((v25 >> 3) & 0xFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
          goto LABEL_3;
      }
    }
    break;
  }
  v12 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    v13 = (unint64_t)(a5[2] + 64) >> 6;
    if (v12 >= v13)
    {
      v12 = a5[3];
LABEL_45:
      a5[3] = v12;
      a5[4] = 0;
      swift_retain();
      return sub_1C1357964(v39, a2, v38, v5);
    }
    v14 = a5[1];
    v15 = *(_QWORD *)(v14 + 8 * v12);
    if (v15)
      goto LABEL_15;
    v16 = v9 + 2;
    if (v9 + 2 >= v13)
      goto LABEL_45;
    v15 = *(_QWORD *)(v14 + 8 * v16);
    if (!v15)
    {
      if (v9 + 3 >= v13)
        goto LABEL_46;
      v15 = *(_QWORD *)(v14 + 8 * (v9 + 3));
      if (v15)
      {
        v12 = v9 + 3;
        goto LABEL_15;
      }
      v16 = v9 + 4;
      if (v9 + 4 >= v13)
      {
        v12 = v9 + 3;
        goto LABEL_45;
      }
      v15 = *(_QWORD *)(v14 + 8 * v16);
      if (!v15)
      {
        v12 = v9 + 5;
        if (v9 + 5 >= v13)
        {
LABEL_46:
          v12 = v16;
          goto LABEL_45;
        }
        v15 = *(_QWORD *)(v14 + 8 * v12);
        if (!v15)
        {
          v12 = v13 - 1;
          v36 = v9 + 6;
          while (v13 != v36)
          {
            v15 = *(_QWORD *)(v14 + 8 * v36++);
            if (v15)
            {
              v12 = v36 - 1;
              goto LABEL_15;
            }
          }
          goto LABEL_45;
        }
        goto LABEL_15;
      }
    }
    v12 = v16;
LABEL_15:
    v10 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + (v12 << 6);
    v9 = v12;
    goto LABEL_16;
  }
  __break(1u);
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_1C1357528(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, unint64_t, uint64_t);
  char v39;
  int64_t v40;
  int64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t *v50;
  char *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;

  v48 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7978D0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1C1426494();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v14);
  v56 = (char *)&v47 - v18;
  v19 = *(_QWORD *)(a3 + 16);
  v20 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  v21 = *(unint64_t *)((char *)a1 + v20) & ((-1 << a4) - 1);
  v50 = a1;
  v51 = v11;
  *(unint64_t *)((char *)a1 + v20) = v21;
  v22 = v19 - 1;
  v54 = a3 + 56;
  v55 = a3;
  v52 = a5;
  while (2)
  {
    v49 = v22;
    do
    {
      while (1)
      {
        v25 = *a5;
        v24 = a5[1];
        v27 = a5[2];
        v26 = a5[3];
        v28 = a5[4];
        v53 = v27;
        if (v28)
        {
          v29 = (v28 - 1) & v28;
          v30 = __clz(__rbit64(v28)) | (v26 << 6);
LABEL_7:
          (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v11, *(_QWORD *)(v25 + 48) + *(_QWORD *)(v13 + 72) * v30, v12);
          v31 = 0;
          goto LABEL_8;
        }
        v40 = v26 + 1;
        if (__OFADD__(v26, 1))
        {
          __break(1u);
          goto LABEL_42;
        }
        v41 = (unint64_t)(v27 + 64) >> 6;
        if (v40 >= v41)
        {
          v29 = 0;
          v31 = 1;
          goto LABEL_8;
        }
        v42 = *(_QWORD *)(v24 + 8 * v40);
        if (v42)
          goto LABEL_17;
        if (v26 + 2 >= v41)
          goto LABEL_34;
        v42 = *(_QWORD *)(v24 + 8 * (v26 + 2));
        if (v42)
        {
          v40 = v26 + 2;
LABEL_17:
          v29 = (v42 - 1) & v42;
          v30 = __clz(__rbit64(v42)) + (v40 << 6);
          v26 = v40;
          goto LABEL_7;
        }
        if (v26 + 3 >= v41)
        {
          v29 = 0;
          v31 = 1;
          v26 += 2;
          goto LABEL_8;
        }
        v42 = *(_QWORD *)(v24 + 8 * (v26 + 3));
        if (v42)
        {
          v40 = v26 + 3;
          goto LABEL_17;
        }
        v40 = v26 + 4;
        if (v26 + 4 < v41)
        {
          v42 = *(_QWORD *)(v24 + 8 * v40);
          if (v42)
            goto LABEL_17;
          v40 = v41 - 1;
          v45 = v26 + 5;
          while (v41 != v45)
          {
            v42 = *(_QWORD *)(v24 + 8 * v45++);
            if (v42)
            {
              v40 = v45 - 1;
              goto LABEL_17;
            }
          }
LABEL_34:
          v29 = 0;
          v31 = 1;
          v26 = v40;
          goto LABEL_8;
        }
        v29 = 0;
        v31 = 1;
        v26 += 3;
LABEL_8:
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v31, 1, v12);
        *a5 = v25;
        a5[1] = v24;
        a5[2] = v53;
        a5[3] = v26;
        a5[4] = v29;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
        {
          sub_1C135847C((uint64_t)v11);
          v46 = v55;
          swift_retain();
          return sub_1C1357FF8(v50, v48, v49, v46);
        }
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v56, v11, v12);
        v32 = v55;
        sub_1C1329AD0((unint64_t *)&unk_1ED793250, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8D0A8], MEMORY[0x1E0D8D0B8]);
        v33 = sub_1C1426A4C();
        v34 = -1 << *(_BYTE *)(v32 + 32);
        v35 = v33 & ~v34;
        if (((*(_QWORD *)(v54 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) != 0)
          break;
        v23 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
LABEL_4:
        result = v23(v56, v12);
        v11 = v51;
        a5 = v52;
      }
      v36 = ~v34;
      v37 = *(_QWORD *)(v13 + 72);
      v38 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
      while (1)
      {
        v38(v16, *(_QWORD *)(v55 + 48) + v37 * v35, v12);
        sub_1C1329AD0(&qword_1ED793920, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8D0A8], MEMORY[0x1E0D8D0C0]);
        v39 = sub_1C1426A70();
        v23 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
        v23(v16, v12);
        if ((v39 & 1) != 0)
          break;
        v35 = (v35 + 1) & v36;
        if (((*(_QWORD *)(v54 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) == 0)
          goto LABEL_4;
      }
      result = v23(v56, v12);
      v43 = (v35 >> 3) & 0x1FFFFFFFFFFFFFF8;
      v11 = v51;
      v44 = *(unint64_t *)((char *)v50 + v43);
      *(unint64_t *)((char *)v50 + v43) = v44 & ~(1 << v35);
      a5 = v52;
    }
    while ((v44 & (1 << v35)) == 0);
    v22 = v49 - 1;
    if (__OFSUB__(v49, 1))
    {
LABEL_42:
      __break(1u);
      return result;
    }
    if (v49 != 1)
      continue;
    return MEMORY[0x1E0DEE9E8];
  }
}

uint64_t sub_1C1357964(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;

  v4 = a4;
  if (!a3)
  {
    v8 = MEMORY[0x1E0DEE9E8];
LABEL_36:
    swift_release();
    return v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DAFC0);
  result = sub_1C1426EF0();
  v8 = result;
  v34 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  v36 = v4;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v37 = v10;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v34)
      goto LABEL_36;
    v15 = a1[v14];
    v16 = v10 + 1;
    if (!v15)
    {
      v16 = v10 + 2;
      if (v10 + 2 >= v34)
        goto LABEL_36;
      v15 = a1[v16];
      if (!v15)
      {
        v16 = v10 + 3;
        if (v10 + 3 >= v34)
          goto LABEL_36;
        v15 = a1[v16];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v37 = v16;
    v13 = __clz(__rbit64(v15)) + (v16 << 6);
LABEL_24:
    v18 = *(_QWORD *)(v4 + 48) + 40 * v13;
    v19 = *(_QWORD *)v18;
    v20 = *(_QWORD *)(v18 + 8);
    v21 = *(_QWORD *)(v18 + 16);
    v22 = *(_QWORD *)(v18 + 24);
    v23 = *(_BYTE *)(v18 + 32);
    sub_1C14270E8();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1C1426AD0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C1426AD0();
    swift_bridgeObjectRelease();
    sub_1C14270F4();
    result = sub_1C1427100();
    v24 = -1 << *(_BYTE *)(v8 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) != 0)
    {
      v27 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v30 = v26 == v29;
        if (v26 == v29)
          v26 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v11 + 8 * v26);
      }
      while (v31 == -1);
      v27 = __clz(__rbit64(~v31)) + (v26 << 6);
    }
    *(_QWORD *)(v11 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
    v32 = *(_QWORD *)(v8 + 48) + 40 * v27;
    *(_QWORD *)v32 = v19;
    *(_QWORD *)(v32 + 8) = v20;
    *(_QWORD *)(v32 + 16) = v21;
    *(_QWORD *)(v32 + 24) = v22;
    *(_BYTE *)(v32 + 32) = v23;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v4 = v36;
    v10 = v37;
    if (!v5)
      goto LABEL_36;
  }
  v17 = v10 + 4;
  if (v10 + 4 >= v34)
    goto LABEL_36;
  v15 = a1[v17];
  if (v15)
  {
    v16 = v10 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v34)
      goto LABEL_36;
    v15 = a1[v16];
    ++v17;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1C1357C60(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;

  v4 = a4;
  if (!a3)
  {
    v8 = MEMORY[0x1E0DEE9E8];
LABEL_36:
    swift_release();
    return v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793A20);
  result = sub_1C1426EF0();
  v8 = result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v30)
      goto LABEL_36;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_36;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_36;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    sub_1C14270E8();
    swift_bridgeObjectRetain();
    sub_1C1426AD0();
    result = sub_1C1427100();
    v20 = -1 << *(_BYTE *)(v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_36;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_36;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

void sub_1C1357EF4(void *a1)
{
  sub_1C134F4C4(a1);
}

uint64_t sub_1C1357EFC()
{
  return swift_deallocObject();
}

uint64_t sub_1C1357F0C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1C1357F30(void *a1)
{
  sub_1C134F46C(a1);
}

uint64_t sub_1C1357F38()
{
  return swift_deallocObject();
}

unint64_t sub_1C1357F48()
{
  unint64_t result;

  result = qword_1ED7932F8;
  if (!qword_1ED7932F8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED7932F8);
  }
  return result;
}

uint64_t sub_1C1357F84()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C1357FA8(uint64_t a1, void *a2, void *a3)
{
  return sub_1C134F5D8(a1, a2, a3);
}

uint64_t sub_1C1357FB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797A28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1357FF8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v35;
  unint64_t *v36;
  uint64_t v37;
  uint64_t v38;

  v8 = sub_1C1426494();
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
  if (*(_QWORD *)(a4 + 16) == a3)
    return a4;
  v38 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7933C0);
  result = sub_1C1426EF0();
  v12 = result;
  v36 = a1;
  v37 = a2;
  if (a2 < 1)
    v14 = 0;
  else
    v14 = *a1;
  v15 = 0;
  v16 = result + 56;
  v17 = v38;
  while (1)
  {
    if (v14)
    {
      v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v19 = v18 | (v15 << 6);
    }
    else
    {
      v20 = v15 + 1;
      if (__OFADD__(v15, 1))
        goto LABEL_40;
      if (v20 >= v37)
      {
LABEL_37:
        swift_release();
        return v12;
      }
      v21 = v36[v20];
      ++v15;
      if (!v21)
      {
        v15 = v20 + 1;
        if (v20 + 1 >= v37)
          goto LABEL_37;
        v21 = v36[v15];
        if (!v21)
        {
          v15 = v20 + 2;
          if (v20 + 2 >= v37)
            goto LABEL_37;
          v21 = v36[v15];
          if (!v21)
          {
            v22 = v20 + 3;
            if (v22 >= v37)
              goto LABEL_37;
            v21 = v36[v22];
            if (!v21)
            {
              while (1)
              {
                v15 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_41;
                if (v15 >= v37)
                  goto LABEL_37;
                v21 = v36[v15];
                ++v22;
                if (v21)
                  goto LABEL_24;
              }
            }
            v15 = v22;
          }
        }
      }
LABEL_24:
      v14 = (v21 - 1) & v21;
      v19 = __clz(__rbit64(v21)) + (v15 << 6);
    }
    v23 = a4;
    v24 = *(_QWORD *)(a4 + 48);
    v25 = *(_QWORD *)(v17 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v11, v24 + v25 * v19, v8);
    sub_1C1329AD0((unint64_t *)&unk_1ED793250, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8D0A8], MEMORY[0x1E0D8D0B8]);
    result = sub_1C1426A4C();
    v26 = -1 << *(_BYTE *)(v12 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6))) != 0)
    {
      v29 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      v17 = v38;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v26) >> 6;
      v17 = v38;
      do
      {
        if (++v28 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v32 = v28 == v31;
        if (v28 == v31)
          v28 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v16 + 8 * v28);
      }
      while (v33 == -1);
      v29 = __clz(__rbit64(~v33)) + (v28 << 6);
    }
    *(_QWORD *)(v16 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v17 + 32))(*(_QWORD *)(v12 + 48) + v29 * v25, v11, v8);
    ++*(_QWORD *)(v12 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v23;
    if (!a3)
      goto LABEL_37;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

unint64_t sub_1C13582F8()
{
  unint64_t result;

  result = qword_1ED797BA8;
  if (!qword_1ED797BA8)
  {
    result = MEMORY[0x1C3BAD334](MEMORY[0x1E0DEDC00], MEMORY[0x1E0DEDBC8]);
    atomic_store(result, (unint64_t *)&qword_1ED797BA8);
  }
  return result;
}

uint64_t sub_1C1358340(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1C13583C8(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_1C13583F0(uint64_t *a1)
{
  sub_1C1358424(*a1, a1[1]);
  return a1;
}

uint64_t sub_1C1358424(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C1358454(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C135847C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7978D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C13584D0(uint64_t a1)
{
  return sub_1C13586B0(a1, qword_1ED798598, MEMORY[0x1E0C8FE98]);
}

uint64_t sub_1C13584E4(uint64_t a1)
{
  return sub_1C13586B0(a1, qword_1ED7986C8, MEMORY[0x1E0C8FF18]);
}

uint64_t sub_1C13584F8(uint64_t a1)
{
  return sub_1C13586B0(a1, qword_1ED7985B0, MEMORY[0x1E0C8FEE8]);
}

uint64_t sub_1C135850C(uint64_t a1)
{
  return sub_1C13586B0(a1, qword_1ED798580, MEMORY[0x1E0C8FE90]);
}

uint64_t sub_1C1358520(uint64_t a1)
{
  return sub_1C13586B0(a1, qword_1ED798650, MEMORY[0x1E0C8FE78]);
}

uint64_t sub_1C1358534(uint64_t a1)
{
  return sub_1C13586B0(a1, qword_1ED798680, MEMORY[0x1E0C8FEB0]);
}

uint64_t sub_1C1358548(uint64_t a1)
{
  return sub_1C13586B0(a1, qword_1ED798698, MEMORY[0x1E0C8FEB8]);
}

uint64_t sub_1C135855C(uint64_t a1)
{
  return sub_1C13586B0(a1, qword_1ED7984D8, MEMORY[0x1E0C8FEC0]);
}

uint64_t sub_1C1358570(uint64_t a1)
{
  return sub_1C13586B0(a1, qword_1ED798668, MEMORY[0x1E0C8FEA0]);
}

uint64_t sub_1C1358584(uint64_t a1)
{
  return sub_1C13586B0(a1, qword_1ED798610, MEMORY[0x1E0C8FF20]);
}

uint64_t sub_1C1358598(uint64_t a1)
{
  return sub_1C13586B0(a1, qword_1ED7985E0, MEMORY[0x1E0C8FEF8]);
}

uint64_t sub_1C13585AC(uint64_t a1)
{
  return sub_1C13586B0(a1, qword_1ED7985C8, MEMORY[0x1E0C8FEF0]);
}

uint64_t sub_1C13585C0(uint64_t a1)
{
  return sub_1C13586B0(a1, qword_1ED7985F8, MEMORY[0x1E0C8FF08]);
}

uint64_t sub_1C13585D4(uint64_t a1)
{
  return sub_1C13586B0(a1, qword_1ED7986B0, MEMORY[0x1E0C8FEE0]);
}

uint64_t sub_1C13585E8(uint64_t a1)
{
  return sub_1C13586B0(a1, qword_1EF6DC630, MEMORY[0x1E0C8FED0]);
}

uint64_t sub_1C13585FC(uint64_t a1)
{
  return sub_1C13586B0(a1, qword_1EF6DC648, MEMORY[0x1E0C8FF10]);
}

uint64_t sub_1C1358610(uint64_t a1)
{
  return sub_1C13586B0(a1, qword_1ED798568, MEMORY[0x1E0C8FE70]);
}

uint64_t sub_1C1358624(uint64_t a1)
{
  return sub_1C13586B0(a1, qword_1EF6DC660, MEMORY[0x1E0C8FE50]);
}

uint64_t sub_1C1358638(uint64_t a1)
{
  return sub_1C13586B0(a1, qword_1ED798520, MEMORY[0x1E0C8FE88]);
}

uint64_t sub_1C135864C(uint64_t a1)
{
  return sub_1C13586B0(a1, qword_1ED798550, MEMORY[0x1E0C8FEA8]);
}

uint64_t sub_1C1358660(uint64_t a1)
{
  return sub_1C13586B0(a1, qword_1ED798538, MEMORY[0x1E0C8FED8]);
}

uint64_t sub_1C1358674(uint64_t a1)
{
  return sub_1C13586B0(a1, qword_1ED798508, MEMORY[0x1E0C8FE68]);
}

uint64_t sub_1C1358688(uint64_t a1)
{
  return sub_1C13586B0(a1, qword_1ED7984F0, MEMORY[0x1E0C8FEC8]);
}

uint64_t sub_1C135869C(uint64_t a1)
{
  return sub_1C13586B0(a1, qword_1EF6DC678, MEMORY[0x1E0C8FE80]);
}

uint64_t sub_1C13586B0(uint64_t a1, uint64_t *a2, unsigned int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v5 = sub_1C1425984();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C1426854();
  __swift_allocate_value_buffer(v9, a2);
  __swift_project_value_buffer(v9, (uint64_t)a2);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *a3, v5);
  return sub_1C1426830();
}

uint64_t sub_1C1358760@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 40);
  return result;
}

uint64_t sub_1C135876C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = sub_1C1426CD4();
  v9 = *(_QWORD *)(v1 - 8);
  v10 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C1426C8C();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1C14269B0();
  MEMORY[0x1E0C80A78](v5);
  *(_DWORD *)(v0 + 24) = -1;
  LOBYTE(v11) = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7979C0);
  swift_allocObject();
  v6 = sub_1C14268F0();
  *(_QWORD *)(v0 + 32) = v6;
  v8 = sub_1C1330F6C();
  sub_1C1426980();
  v11 = MEMORY[0x1E0DEE9D8];
  sub_1C1358EF0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A70);
  sub_1C132C820((unint64_t *)&qword_1ED797A80, (uint64_t *)&unk_1ED797A70, MEMORY[0x1E0DEAF38]);
  sub_1C1426DF4();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v3, *MEMORY[0x1E0DEF8D8], v10);
  *(_QWORD *)(v0 + 48) = sub_1C1426D04();
  v11 = v6;
  sub_1C132C820(&qword_1ED7979B8, (uint64_t *)&unk_1ED7979C0, MEMORY[0x1E0C95FB8]);
  *(_QWORD *)(v0 + 16) = sub_1C1426908();
  *(_BYTE *)(v0 + 40) = 0;
  sub_1C135899C();
  sub_1C1358B80();
  return v0;
}

void sub_1C135899C()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD v8[6];

  v1 = *(NSObject **)(v0 + 48);
  v2 = swift_allocObject();
  swift_weakInit();
  v8[4] = sub_1C1358EE8;
  v8[5] = v2;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 1107296256;
  v8[2] = sub_1C1382B1C;
  v8[3] = &block_descriptor_2;
  v3 = _Block_copy(v8);
  swift_release();
  swift_beginAccess();
  LODWORD(v1) = notify_register_dispatch("com.apple.springboard.lockstate", (int *)(v0 + 24), v1, v3);
  swift_endAccess();
  _Block_release(v3);
  if ((_DWORD)v1)
  {
    if (qword_1ED793978 != -1)
      swift_once();
    v4 = sub_1C1426854();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED7985B0);
    v5 = sub_1C1426848();
    v6 = sub_1C1426C68();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_1C1324000, v5, v6, "Could not register for lock state notifications", v7, 2u);
      MEMORY[0x1C3BAD3F4](v7, -1, -1);
    }

  }
}

uint64_t sub_1C1358B2C()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C1358B80();
    return swift_release();
  }
  return result;
}

void sub_1C1358B80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t state64;
  uint64_t v14[5];

  v1 = v0;
  v14[4] = *MEMORY[0x1E0C80C00];
  state64 = 0;
  swift_beginAccess();
  if (notify_get_state(*(_DWORD *)(v0 + 24), &state64))
  {
    if (qword_1ED793978 != -1)
      swift_once();
    v2 = sub_1C1426854();
    __swift_project_value_buffer(v2, (uint64_t)qword_1ED7985B0);
    v3 = sub_1C1426848();
    v4 = sub_1C1426C68();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_1C1324000, v3, v4, "Could not fetch lock state", v5, 2u);
      MEMORY[0x1C3BAD3F4](v5, -1, -1);
    }

  }
  else
  {
    *(_BYTE *)(v0 + 40) = state64 != 0;
    if (qword_1ED793978 != -1)
      swift_once();
    v6 = sub_1C1426854();
    __swift_project_value_buffer(v6, (uint64_t)qword_1ED7985B0);
    swift_retain_n();
    v7 = sub_1C1426848();
    v8 = sub_1C1426C80();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = swift_slowAlloc();
      v14[0] = v10;
      *(_DWORD *)v9 = 136446210;
      if (*(_BYTE *)(v1 + 40))
        v11 = 0x64656B636F6CLL;
      else
        v11 = 0x64656B636F6C6E75;
      if (*(_BYTE *)(v1 + 40))
        v12 = 0xE600000000000000;
      else
        v12 = 0xE800000000000000;
      sub_1C132AD90(v11, v12, v14);
      sub_1C1426DB8();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1324000, v7, v8, "UI lock state is %{public}s", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v10, -1, -1);
      MEMORY[0x1C3BAD3F4](v9, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    LOBYTE(v14[0]) = *(_BYTE *)(v1 + 40);
    sub_1C14268E4();
  }
}

uint64_t sub_1C1358E70()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LockStateObserver()
{
  return objc_opt_self();
}

uint64_t sub_1C1358EC4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C1358EE8()
{
  return sub_1C1358B2C();
}

unint64_t sub_1C1358EF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED7939F0;
  if (!qword_1ED7939F0)
  {
    v1 = sub_1C1426C8C();
    result = MEMORY[0x1C3BAD334](MEMORY[0x1E0DEF828], v1);
    atomic_store(result, (unint64_t *)&qword_1ED7939F0);
  }
  return result;
}

void sub_1C1358F38(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  os_unfair_lock_s *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1C3BAD4B4](v3);
  if (!v4)
    return;
  v5 = (char *)v4;
  v6 = *(os_unfair_lock_s **)(*(_QWORD *)(v4 + OBJC_IVAR____TtC11SessionCore34ProminenceObservationServiceServer_lock)
                            + 16);
  swift_retain();
  os_unfair_lock_lock(v6);
  *(_QWORD *)&v5[OBJC_IVAR____TtC11SessionCore34ProminenceObservationServiceServer__lock_prominentActivityIdentifiers] = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = &v5[OBJC_IVAR____TtC11SessionCore34ProminenceObservationServiceServer__lock_clients];
  swift_beginAccess();
  v8 = *(_QWORD *)v7;
  v9 = *(_QWORD *)v7 + 64;
  v10 = 1 << *(_BYTE *)(*(_QWORD *)v7 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(*(_QWORD *)v7 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain();
  v14 = 0;
  while (1)
  {
    if (v12)
    {
      v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v16 = v15 | (v14 << 6);
      goto LABEL_6;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v18 >= v13)
      goto LABEL_22;
    v19 = *(_QWORD *)(v9 + 8 * v18);
    ++v14;
    if (!v19)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_22;
      v19 = *(_QWORD *)(v9 + 8 * v14);
      if (!v19)
      {
        v14 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_22;
        v19 = *(_QWORD *)(v9 + 8 * v14);
        if (!v19)
          break;
      }
    }
LABEL_21:
    v12 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_6:
    v17 = *(id *)(*(_QWORD *)(v8 + 56) + 8 * v16);
    sub_1C1359870(v2);

  }
  v20 = v18 + 3;
  if (v20 >= v13)
  {
LABEL_22:
    swift_release();
    os_unfair_lock_unlock(v6);

    swift_release();
    return;
  }
  v19 = *(_QWORD *)(v9 + 8 * v20);
  if (v19)
  {
    v14 = v20;
    goto LABEL_21;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v13)
      goto LABEL_22;
    v19 = *(_QWORD *)(v9 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_21;
  }
LABEL_25:
  __break(1u);
}

id sub_1C1359134(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v10;

  v4 = sub_1C1425EDC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  sub_1C14257D4();
  sub_1C1426D70();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1C14257C8();
  v8 = (void *)sub_1C1426A7C();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setService_, v8);

  return objc_msgSend(a1, sel_setDelegate_, a2);
}

void sub_1C1359214(void *a1, uint64_t a2, char *a3, int a4)
{
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  char *v19;
  uint64_t v20;
  void *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;

  sub_1C14257C8();
  v8 = (void *)sub_1C1426A7C();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithIdentifier_, v8);

  v27 = sub_1C1359518;
  v28 = 0;
  v10 = MEMORY[0x1E0C809B0];
  v23 = MEMORY[0x1E0C809B0];
  v24 = 1107296256;
  v25 = sub_1C13284C8;
  v26 = &block_descriptor_13;
  v11 = _Block_copy(&v23);
  v12 = &unk_1EF6E3170;
  swift_release();
  v13 = (void *)objc_opt_self();
  v14 = objc_msgSend(v13, sel_protocolForProtocol_interpreter_, v12, v11);

  _Block_release(v11);
  objc_msgSend(v9, sel_setClient_, v14);

  v15 = objc_msgSend(v13, sel_protocolForProtocol_, &unk_1EF6E0558);
  objc_msgSend(v9, sel_setServer_, v15);

  v16 = objc_msgSend((id)objc_opt_self(), sel_userInitiated);
  objc_msgSend(a1, sel_setServiceQuality_, v16);

  objc_msgSend(a1, sel_setInterface_, v9);
  objc_msgSend(a1, sel_setInterfaceTarget_, a2);
  objc_msgSend(a1, sel_setTargetQueue_, *(_QWORD *)&a3[OBJC_IVAR____TtC11SessionCore34ProminenceObservationServiceServer_requestProcessingQueue]);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a3;
  *(_DWORD *)(v17 + 24) = a4;
  v27 = sub_1C135A984;
  v28 = v17;
  v23 = v10;
  v24 = 1107296256;
  v25 = sub_1C141AFCC;
  v26 = &block_descriptor_19;
  v18 = _Block_copy(&v23);
  v19 = a3;
  swift_release();
  objc_msgSend(a1, sel_setInterruptionHandler_, v18);
  _Block_release(v18);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v19;
  *(_DWORD *)(v20 + 24) = a4;
  v27 = sub_1C135A9A8;
  v28 = v20;
  v23 = v10;
  v24 = 1107296256;
  v25 = sub_1C141AFCC;
  v26 = &block_descriptor_25;
  v21 = _Block_copy(&v23);
  v22 = v19;
  swift_release();
  objc_msgSend(a1, sel_setInvalidationHandler_, v21);
  _Block_release(v21);

}

id sub_1C1359518(void *a1)
{
  objc_msgSend(a1, sel_selector);
  if ((sub_1C142524C() & 1) != 0)
    return objc_msgSend(a1, sel_copyAsOnewayVoid);
  else
    return a1;
}

void sub_1C135956C(uint64_t a1, uint64_t a2, unsigned int a3, const char *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  os_unfair_lock_s *v14;
  uint64_t *v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  void *v21;
  uint64_t v22;

  v7 = sub_1C1426854();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C142683C();
  v11 = sub_1C1426848();
  v12 = sub_1C1426C68();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_1C1324000, v11, v12, a4, v13, 2u);
    MEMORY[0x1C3BAD3F4](v13, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v14 = *(os_unfair_lock_s **)(*(_QWORD *)(a2 + OBJC_IVAR____TtC11SessionCore34ProminenceObservationServiceServer_lock)
                             + 16);
  os_unfair_lock_lock(v14);
  v15 = (uint64_t *)(a2 + OBJC_IVAR____TtC11SessionCore34ProminenceObservationServiceServer__lock_clients);
  swift_beginAccess();
  v16 = sub_1C1327378(a3);
  if ((v17 & 1) != 0)
  {
    v18 = v16;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v20 = *v15;
    v22 = *v15;
    *v15 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1C13BAC84();
      v20 = v22;
    }
    v21 = *(void **)(*(_QWORD *)(v20 + 56) + 8 * v18);
    sub_1C13C11F8(v18, v20);
    *v15 = v20;

    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  os_unfair_lock_unlock(v14);
}

id sub_1C13597CC(uint64_t a1)
{
  return sub_1C1359EC8(a1, type metadata accessor for ProminenceObservationServiceServer);
}

uint64_t type metadata accessor for ProminenceObservationServiceServer()
{
  return objc_opt_self();
}

uint64_t sub_1C1359870(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  os_unfair_lock_s *v13;
  void *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char *v22;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  _QWORD aBlock[3];
  void *v29;
  uint64_t (*v30)(uint64_t);
  uint64_t v31;
  void *v32;
  _OWORD v33[2];

  v2 = v1;
  v4 = sub_1C1426854();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C14254B0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11SessionCoreP33_4DC64229D2ABB0B5306670C4AE3A9EED34ProminenceObservationServiceClient_connection], sel_remoteTarget))
  {
    sub_1C1426DE8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v33, 0, sizeof(v33));
  }
  sub_1C1330398((uint64_t)v33, (uint64_t)aBlock);
  if (v29)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793190);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v12 = v32;
      *(_QWORD *)&v33[0] = 0;
      v13 = *(os_unfair_lock_s **)(*(_QWORD *)&v2[OBJC_IVAR____TtC11SessionCoreP33_4DC64229D2ABB0B5306670C4AE3A9EED34ProminenceObservationServiceClient_lock]
                                 + 16);
      os_unfair_lock_lock(v13);
      sub_1C1359BFC((uint64_t)v2, a1, (uint64_t *)v33);
      os_unfair_lock_unlock(v13);
      if (!*(_QWORD *)&v33[0])
        return swift_unknownObjectRelease();
      swift_bridgeObjectRetain();
      sub_1C14254A4();
      sub_1C1329AD0(&qword_1ED792898, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F6B8], MEMORY[0x1E0C8F6B0]);
      v14 = (void *)sub_1C1425BB8();
      v27 = sub_1C14250D8();
      v16 = v15;

      sub_1C1425F0C();
      swift_allocObject();
      v17 = sub_1C1425EF4();
      v18 = (void *)sub_1C14250CC();
      v19 = swift_allocObject();
      *(_QWORD *)(v19 + 16) = v2;
      *(_QWORD *)(v19 + 24) = v17;
      v30 = sub_1C135A408;
      v31 = v19;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1C13DCF7C;
      v29 = &block_descriptor_3;
      v20 = v9;
      v21 = _Block_copy(aBlock);
      v22 = v2;
      swift_retain();
      swift_release();
      objc_msgSend(v12, sel_activityProminenceDidChange_completion_, v18, v21);
      sub_1C13282B4(v27, v16);
      _Block_release(v21);
      swift_release();
      swift_unknownObjectRelease();

      (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v8);
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1C132C860((uint64_t)aBlock, (uint64_t *)&unk_1ED797BB0);
  }
  sub_1C142683C();
  v24 = sub_1C1426848();
  v25 = sub_1C1426C68();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v26 = 0;
    _os_log_impl(&dword_1C1324000, v24, v25, "Client does not implement expected interface", v26, 2u);
    MEMORY[0x1C3BAD3F4](v26, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C1359BFC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7928B0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C142569C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1
      + OBJC_IVAR____TtC11SessionCoreP33_4DC64229D2ABB0B5306670C4AE3A9EED34ProminenceObservationServiceClient__lock_predicate;
  swift_beginAccess();
  sub_1C135A410(v13, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_1C132C860((uint64_t)v8, (uint64_t *)&unk_1ED7928B0);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  if ((*(_BYTE *)(a1
                 + OBJC_IVAR____TtC11SessionCoreP33_4DC64229D2ABB0B5306670C4AE3A9EED34ProminenceObservationServiceClient__lock_pendingAck) & 1) != 0)
  {
    *(_QWORD *)(a1
              + OBJC_IVAR____TtC11SessionCoreP33_4DC64229D2ABB0B5306670C4AE3A9EED34ProminenceObservationServiceClient__lock_bufferedProminenceUpdate) = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  else
  {
    *(_BYTE *)(a1
             + OBJC_IVAR____TtC11SessionCoreP33_4DC64229D2ABB0B5306670C4AE3A9EED34ProminenceObservationServiceClient__lock_pendingAck) = 1;
    v15 = sub_1C1425684();
    v16 = swift_bridgeObjectRelease();
    if (v15)
    {
      MEMORY[0x1E0C80A78](v16);
      *(&v18 - 2) = (uint64_t)v12;
      swift_bridgeObjectRetain();
      v17 = sub_1C135D7DC((uint64_t)sub_1C135A458, (uint64_t)(&v18 - 4), a2);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      *a3 = v17;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      *a3 = a2;
      swift_bridgeObjectRetain();
    }
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C1359E0C(uint64_t a1, uint64_t a2)
{
  os_unfair_lock_s *v3;
  uint64_t v4;

  v3 = *(os_unfair_lock_s **)(*(_QWORD *)(a2
                                        + OBJC_IVAR____TtC11SessionCoreP33_4DC64229D2ABB0B5306670C4AE3A9EED34ProminenceObservationServiceClient_lock)
                            + 16);
  os_unfair_lock_lock(v3);
  *(_BYTE *)(a2
           + OBJC_IVAR____TtC11SessionCoreP33_4DC64229D2ABB0B5306670C4AE3A9EED34ProminenceObservationServiceClient__lock_pendingAck) = 0;
  v4 = *(_QWORD *)(a2
                 + OBJC_IVAR____TtC11SessionCoreP33_4DC64229D2ABB0B5306670C4AE3A9EED34ProminenceObservationServiceClient__lock_bufferedProminenceUpdate);
  *(_QWORD *)(a2
            + OBJC_IVAR____TtC11SessionCoreP33_4DC64229D2ABB0B5306670C4AE3A9EED34ProminenceObservationServiceClient__lock_bufferedProminenceUpdate) = 0;
  os_unfair_lock_unlock(v3);
  if (v4)
  {
    sub_1C1359870(v4);
    swift_bridgeObjectRelease();
  }
  return sub_1C1425EE8();
}

id sub_1C1359EB8()
{
  return sub_1C1359EC8(0, type metadata accessor for ProminenceObservationServiceClient);
}

id sub_1C1359EC8(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_1C1359F6C()
{
  return type metadata accessor for ProminenceObservationServiceClient();
}

uint64_t type metadata accessor for ProminenceObservationServiceClient()
{
  uint64_t result;

  result = qword_1ED7930B0;
  if (!qword_1ED7930B0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1C1359FB0()
{
  unint64_t v0;

  sub_1C135A054();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_1C135A054()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED7928C0)
  {
    sub_1C142569C();
    v0 = sub_1C1426DAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED7928C0);
  }
}

uint64_t sub_1C135A0A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  os_unfair_lock_s *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  uint64_t v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7928B0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1C3BAD4B4](v1+ OBJC_IVAR____TtC11SessionCoreP33_4DC64229D2ABB0B5306670C4AE3A9EED34ProminenceObservationServiceClient_delegate);
  if (result)
  {
    v7 = result;
    v8 = *(os_unfair_lock_s **)(*(_QWORD *)(v1
                                          + OBJC_IVAR____TtC11SessionCoreP33_4DC64229D2ABB0B5306670C4AE3A9EED34ProminenceObservationServiceClient_lock)
                              + 16);
    os_unfair_lock_lock(v8);
    v9 = sub_1C142569C();
    v10 = *(_QWORD *)(v9 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v5, a1, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
    v11 = v1
        + OBJC_IVAR____TtC11SessionCoreP33_4DC64229D2ABB0B5306670C4AE3A9EED34ProminenceObservationServiceClient__lock_predicate;
    swift_beginAccess();
    sub_1C135A394((uint64_t)v5, v11);
    swift_endAccess();
    os_unfair_lock_unlock(v8);
    v12 = *(os_unfair_lock_s **)(*(_QWORD *)(v7 + OBJC_IVAR____TtC11SessionCore34ProminenceObservationServiceServer_lock)
                               + 16);
    os_unfair_lock_lock(v12);
    v13 = *(_QWORD *)(v7
                    + OBJC_IVAR____TtC11SessionCore34ProminenceObservationServiceServer__lock_prominentActivityIdentifiers);
    swift_bridgeObjectRetain();
    os_unfair_lock_unlock(v12);
    sub_1C1359870(v13);
    swift_unknownObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C135A394(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7928B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C135A3DC()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C135A408(uint64_t a1)
{
  uint64_t v1;

  return sub_1C1359E0C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1C135A410(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7928B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C135A458()
{
  return sub_1C1425690() & 1;
}

id sub_1C135A48C(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _DWORD *v6;
  char *v7;
  uint64_t v8;
  id v9;
  objc_super v11;

  *(_QWORD *)&v1[OBJC_IVAR____TtC11SessionCoreP33_4DC64229D2ABB0B5306670C4AE3A9EED34ProminenceObservationServiceClient_delegate
               + 8] = 0;
  swift_unknownObjectWeakInit();
  v3 = OBJC_IVAR____TtC11SessionCoreP33_4DC64229D2ABB0B5306670C4AE3A9EED34ProminenceObservationServiceClient_lock;
  type metadata accessor for UnfairLock();
  v4 = swift_allocObject();
  v5 = v1;
  v6 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v4 + 16) = v6;
  *(_QWORD *)&v1[v3] = v4;
  *v6 = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC11SessionCoreP33_4DC64229D2ABB0B5306670C4AE3A9EED34ProminenceObservationServiceClient__lock_bufferedProminenceUpdate] = 0;
  v5[OBJC_IVAR____TtC11SessionCoreP33_4DC64229D2ABB0B5306670C4AE3A9EED34ProminenceObservationServiceClient__lock_pendingAck] = 0;
  v7 = &v5[OBJC_IVAR____TtC11SessionCoreP33_4DC64229D2ABB0B5306670C4AE3A9EED34ProminenceObservationServiceClient__lock_predicate];
  v8 = sub_1C142569C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *(_QWORD *)&v5[OBJC_IVAR____TtC11SessionCoreP33_4DC64229D2ABB0B5306670C4AE3A9EED34ProminenceObservationServiceClient_connection] = a1;
  v9 = a1;

  v11.receiver = v5;
  v11.super_class = (Class)type metadata accessor for ProminenceObservationServiceClient();
  return objc_msgSendSuper2(&v11, sel_init);
}

void sub_1C135A590(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  unsigned int v10;
  id v11;
  id v12;
  char *v13;
  id v14;
  unsigned int v15;
  os_unfair_lock_s *v16;
  char *v17;
  char *v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  char *v23;
  char *v24;
  char isEscapingClosureAtFileLocation;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  _QWORD aBlock[6];
  uint64_t v31;

  v2 = v1;
  v4 = sub_1C1426854();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(a1, sel_remoteProcess);
  v9 = (void *)sub_1C1426A7C();
  v10 = objc_msgSend(v8, sel_hasEntitlement_, v9);

  if (v10)
  {
    v11 = objc_allocWithZone((Class)type metadata accessor for ProminenceObservationServiceClient());
    v12 = a1;
    v13 = (char *)sub_1C135A48C(v12);

    v14 = objc_msgSend(v12, sel_remoteProcess);
    v15 = objc_msgSend(v14, sel_pid);

    *(_QWORD *)&v13[OBJC_IVAR____TtC11SessionCoreP33_4DC64229D2ABB0B5306670C4AE3A9EED34ProminenceObservationServiceClient_delegate
                  + 8] = &off_1E7A8AB48;
    swift_unknownObjectWeakAssign();
    v16 = *(os_unfair_lock_s **)(*(_QWORD *)&v2[OBJC_IVAR____TtC11SessionCore34ProminenceObservationServiceServer_lock]
                               + 16);
    os_unfair_lock_lock(v16);
    v17 = &v2[OBJC_IVAR____TtC11SessionCore34ProminenceObservationServiceServer__lock_clients];
    swift_beginAccess();
    v18 = v13;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v31 = *(_QWORD *)v17;
    *(_QWORD *)v17 = 0x8000000000000000;
    sub_1C13C24C0((uint64_t)v18, v15, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)v17 = v31;
    swift_bridgeObjectRelease();
    swift_endAccess();
    os_unfair_lock_unlock(v16);
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = v18;
    *(_QWORD *)(v20 + 24) = v2;
    *(_DWORD *)(v20 + 32) = v15;
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = sub_1C135A944;
    *(_QWORD *)(v21 + 24) = v20;
    aBlock[4] = sub_1C1327D4C;
    aBlock[5] = v21;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C1327D10;
    aBlock[3] = &block_descriptor_10_0;
    v22 = _Block_copy(aBlock);
    v23 = v18;
    v24 = v2;
    swift_retain();
    swift_release();
    objc_msgSend(v12, sel_configureConnection_, v22);
    _Block_release(v22);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      objc_msgSend(v12, sel_activate);
      swift_release();

    }
  }
  else
  {
    sub_1C142683C();
    v26 = sub_1C1426848();
    v27 = sub_1C1426C68();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_1C1324000, v26, v27, "Process is not entitled to listen to the prominence service", v28, 2u);
      MEMORY[0x1C3BAD3F4](v28, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    objc_msgSend(a1, sel_invalidate);
  }
}

uint64_t sub_1C135A918()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1C135A944(void *a1)
{
  uint64_t v1;

  sub_1C1359214(a1, *(_QWORD *)(v1 + 16), *(char **)(v1 + 24), *(_DWORD *)(v1 + 32));
}

uint64_t sub_1C135A950()
{
  return swift_deallocObject();
}

uint64_t sub_1C135A960()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1C135A984(uint64_t a1)
{
  uint64_t v1;

  sub_1C135956C(a1, *(_QWORD *)(v1 + 16), *(_DWORD *)(v1 + 24), "Connection interrupted");
}

void sub_1C135A9A8(uint64_t a1)
{
  uint64_t v1;

  sub_1C135956C(a1, *(_QWORD *)(v1 + 16), *(_DWORD *)(v1 + 24), "Connection invalidated");
}

uint64_t sub_1C135A9F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

_DWORD *sub_1C135A9F8(uint64_t a1)
{
  return sub_1C135AA10(a1, (uint64_t *)&off_1ED7957F8);
}

_DWORD *sub_1C135AA04(uint64_t a1)
{
  return sub_1C135AA10(a1, (uint64_t *)&off_1ED796998);
}

_DWORD *sub_1C135AA10(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  _DWORD *result;

  type metadata accessor for UnfairLock();
  v3 = swift_allocObject();
  result = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v3 + 16) = result;
  *result = 0;
  *a2 = v3;
  return result;
}

void sub_1C135AA5C()
{
  qword_1ED797200 = MEMORY[0x1E0DEE9E0];
}

uint64_t sub_1C135AA70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t result;
  _QWORD v8[2];

  v0 = sub_1C1426CD4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C1426C8C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1C14269B0();
  MEMORY[0x1E0C80A78](v6);
  sub_1C1330F6C();
  sub_1C14269A4();
  v8[1] = MEMORY[0x1E0DEE9D8];
  sub_1C1329AD0((unint64_t *)&qword_1ED7939F0, v5, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A70);
  sub_1C135C2A8();
  sub_1C1426DF4();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D8], v0);
  result = sub_1C1426D04();
  qword_1ED7936E0 = result;
  return result;
}

uint64_t sub_1C135AC1C()
{
  uint64_t v0;
  uint64_t result;
  os_unfair_lock_s *v2;
  uint64_t v3;

  if ((*(_BYTE *)(v0 + 16) & 1) == 0)
  {
    result = *(_QWORD *)(v0 + 24);
    if (result)
    {
      os_state_remove_handler();
      if (qword_1ED7969A0 != -1)
        swift_once();
      v2 = (os_unfair_lock_s *)*((_QWORD *)off_1ED796998 + 2);
      os_unfair_lock_lock(v2);
      if (qword_1ED797208 != -1)
        swift_once();
      v3 = *(_QWORD *)(v0 + 24);
      swift_beginAccess();
      sub_1C13C06A4(v3);
      swift_endAccess();
      os_unfair_lock_unlock(v2);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1C135AD04()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StateCaptureInvalidator()
{
  return objc_opt_self();
}

_QWORD *sub_1C135AD34(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v19;
  uint64_t v20;

  v6 = v5;
  if (qword_1ED7978D8 != -1)
    swift_once();
  v12 = sub_1C1426854();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED798650);
  swift_bridgeObjectRetain_n();
  v13 = sub_1C1426848();
  v14 = sub_1C1426C80();
  if (os_log_type_enabled(v13, v14))
  {
    v19 = a5;
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v20 = v16;
    *(_DWORD *)v15 = 136446210;
    swift_bridgeObjectRetain();
    sub_1C132AD90(a1, a2, &v20);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C1324000, v13, v14, "[state-capture] StateCaptureEntry created with title: %{public}s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v16, -1, -1);
    v17 = v15;
    a5 = v19;
    MEMORY[0x1C3BAD3F4](v17, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  v6[5] = a4;
  v6[6] = a5;
  return v6;
}

uint64_t sub_1C135AF10()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StateCaptureEntry()
{
  return objc_opt_self();
}

double sub_1C135AF64@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  _QWORD *v12;
  void *v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;
  double result;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  _QWORD aBlock[6];

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a1;
  v12[3] = a2;
  v12[4] = a3;
  v12[5] = a4;
  aBlock[4] = sub_1C135C270;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C135BAE0;
  aBlock[3] = &block_descriptor_4;
  v13 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  v14 = os_state_add_handler();
  _Block_release(v13);
  if (v14)
  {
    if (qword_1ED7969A0 != -1)
      swift_once();
    v15 = (os_unfair_lock_s *)*((_QWORD *)off_1ED796998 + 2);
    os_unfair_lock_lock(v15);
    type metadata accessor for StateCaptureEntry();
    v16 = swift_allocObject();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C135AD34(a3, a4, (uint64_t)a5, a1, a2);
    if (qword_1ED797208 != -1)
      swift_once();
    swift_beginAccess();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = qword_1ED797200;
    qword_1ED797200 = 0x8000000000000000;
    sub_1C13C24CC(v16, v14, isUniquelyReferenced_nonNull_native);
    qword_1ED797200 = v25;
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    os_unfair_lock_unlock(v15);
    v18 = type metadata accessor for StateCaptureInvalidator();
    v19 = swift_allocObject();
    *(_BYTE *)(v19 + 16) = 0;
    *(_QWORD *)(v19 + 24) = v14;
    *(_QWORD *)(a6 + 24) = v18;
    *(_QWORD *)(a6 + 32) = &off_1E7A8ACE8;
    *(_QWORD *)a6 = v19;
  }
  else
  {
    if (qword_1ED7978D8 != -1)
      swift_once();
    v21 = sub_1C1426854();
    __swift_project_value_buffer(v21, (uint64_t)qword_1ED798650);
    v22 = sub_1C1426848();
    v23 = sub_1C1426C68();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_1C1324000, v22, v23, "[state-capture] os_state_add_handler() failed to return a handle", v24, 2u);
      MEMORY[0x1C3BAD3F4](v24, -1, -1);
    }

    *(_QWORD *)(a6 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a6 = 0u;
    *(_OWORD *)(a6 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1C135B25C(uint64_t a1, void (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;

  a2();
  v2 = sub_1C135B524();
  v4 = v3;
  swift_bridgeObjectRelease();
  if (v4 >= 0x8000)
  {
    if (qword_1ED7978D8 != -1)
      swift_once();
    v5 = sub_1C1426854();
    __swift_project_value_buffer(v5, (uint64_t)qword_1ED798650);
    v6 = sub_1C1426848();
    v7 = sub_1C1426C68();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1C1324000, v6, v7, "[state-capture] cannot capture state data larger than 32KB", v8, 2u);
      MEMORY[0x1C3BAD3F4](v8, -1, -1);
    }

    return 0;
  }
  return v2;
}

uint64_t sub_1C135B524()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v9[27];

  v9[25] = *(id *)MEMORY[0x1E0C80C00];
  v0 = sub_1C1424FD0();
  MEMORY[0x1E0C80A78](v0);
  v1 = (void *)objc_opt_self();
  v2 = (void *)sub_1C1426A1C();
  v9[0] = 0;
  v3 = objc_msgSend(v1, sel_dataWithPropertyList_format_options_error_, v2, 200, 0, v9);

  v4 = v9[0];
  if (v3)
  {
    sub_1C14250D8();
    v6 = v5;

    __asm { BR              X10 }
  }
  v7 = v4;
  sub_1C1425078();

  swift_willThrow();
  return 0;
}

uint64_t sub_1C135BAE0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v3)(uint64_t);
  uint64_t v4;

  v3 = *(uint64_t (**)(uint64_t))(a1 + 32);
  swift_retain();
  v4 = v3(a2);
  swift_release();
  return v4;
}

uint64_t sub_1C135BB28(uint64_t result, uint64_t a2, char *__dst, uint64_t a4)
{
  char *v6;
  size_t v7;
  char *v8;
  char __src[8];
  uint64_t v10;

  if ((a2 & 0x1000000000000000) != 0 || !(a2 & 0x2000000000000000 | result & 0x1000000000000000))
    return sub_1C1426EFC();
  if ((a2 & 0x2000000000000000) != 0)
  {
    *(_QWORD *)__src = result;
    v10 = a2 & 0xFFFFFFFFFFFFFFLL;
    if (__dst)
    {
      v7 = a4 - (_QWORD)__dst;
      v6 = __src;
      goto LABEL_10;
    }
    __break(1u);
    goto LABEL_18;
  }
  if ((result & 0x1000000000000000) != 0)
  {
    v6 = (char *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    result = sub_1C1426F2C();
    v6 = (char *)result;
    if (!result)
    {
      if (__dst)
      {
        v7 = a4 - (_QWORD)__dst;
        v8 = __dst;
        v6 = 0;
        return (uint64_t)strncpy(v8, v6, v7);
      }
LABEL_19:
      __break(1u);
      return result;
    }
  }
  if (!__dst)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v7 = a4 - (_QWORD)__dst;
LABEL_10:
  v8 = __dst;
  return (uint64_t)strncpy(v8, v6, v7);
}

uint64_t sub_1C135BC18()
{
  uint64_t v0;
  _QWORD v2[3];
  uint64_t v3;

  sub_1C132C344(v0 + 64, (uint64_t)v2, &qword_1EF6DB170);
  if (v3)
  {
    __swift_project_boxed_opaque_existential_1(v2, v3);
    sub_1C135AC1C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  }
  else
  {
    sub_1C135BF28((uint64_t)v2);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1C135BF28(v0 + 64);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StateCaptureItem()
{
  return objc_opt_self();
}

_QWORD *sub_1C135BCD8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v1 = sub_1C1426CD4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C1426C8C();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v5);
  v7 = sub_1C14269B0();
  MEMORY[0x1E0C80A78](v7);
  v8 = MEMORY[0x1E0DEE9E0];
  v0[2] = MEMORY[0x1E0DEE9E0];
  v0[3] = v8;
  sub_1C1330F6C();
  sub_1C1426968();
  v10[1] = MEMORY[0x1E0DEE9D8];
  sub_1C1329AD0((unint64_t *)&qword_1ED7939F0, v6, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A70);
  sub_1C135C2A8();
  sub_1C1426DF4();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEF8D8], v1);
  v0[4] = sub_1C1426D04();
  return v0;
}

uint64_t sub_1C135BE94(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t sub_1C135BED4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StateCaptureService()
{
  return objc_opt_self();
}

uint64_t sub_1C135BF28(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DB170);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1C135BF68(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797B20);
  v2 = sub_1C1426FBC();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1C132C344(v6, (uint64_t)&v15, &qword_1ED797A28);
    v7 = v15;
    v8 = v16;
    result = sub_1C135C09C(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_1C13377A0(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C135C09C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1C14270E8();
  sub_1C1426AD0();
  v4 = sub_1C1427100();
  return sub_1C135C100(a1, a2, v4);
}

unint64_t sub_1C135C100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v15;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_1C1427064() & 1) == 0)
    {
      v12 = ~v5;
      i = (i + 1) & v12;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v13 = (_QWORD *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_1C1427064() & 1) == 0)
        {
          for (i = (i + 1) & v12; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v12)
          {
            v15 = (_QWORD *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2)
              break;
            if ((sub_1C1427064() & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_1C135C244()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C135C270(uint64_t a1)
{
  uint64_t v1;

  return sub_1C135B25C(a1, *(void (**)(void))(v1 + 16));
}

char *sub_1C135C27C(char *__src)
{
  uint64_t v1;
  char *result;

  result = *(char **)(v1 + 16);
  if (result)
    return strncpy(result, __src, *(_QWORD *)(v1 + 24) - (_QWORD)result);
  __break(1u);
  return result;
}

unint64_t sub_1C135C2A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED797A80;
  if (!qword_1ED797A80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED797A70);
    result = MEMORY[0x1C3BAD334](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED797A80);
  }
  return result;
}

unint64_t sub_1C135C2F8()
{
  unint64_t result;

  result = qword_1EF6DB180;
  if (!qword_1EF6DB180)
  {
    result = MEMORY[0x1C3BAD334]("%%f&P", &type metadata for RunningBoardError);
    atomic_store(result, (unint64_t *)&qword_1EF6DB180);
  }
  return result;
}

void sub_1C135C34C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  unint64_t v29;
  void *v30;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C1426E30();
    sub_1C135C78C();
    sub_1C1330F24();
    sub_1C1426C2C();
    v1 = v25;
    v24 = v26;
    v2 = v27;
    v3 = v28;
    v4 = v29;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v24 = a1 + 56;
    v6 = ~v5;
    v7 = -v5;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v4 = v8 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v2 = v6;
    v3 = 0;
  }
  v22 = v2;
  v23 = (unint64_t)(v2 + 64) >> 6;
  if (v1 < 0)
    goto LABEL_10;
LABEL_8:
  if (v4)
  {
    v9 = (v4 - 1) & v4;
    v10 = __clz(__rbit64(v4)) | (v3 << 6);
    goto LABEL_29;
  }
  v12 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v12 < v23)
    {
      v13 = v3;
      v14 = *(_QWORD *)(v24 + 8 * v12);
      ++v3;
      if (v14)
        goto LABEL_28;
      v3 = v12 + 1;
      if (v12 + 1 >= v23)
        goto LABEL_36;
      v14 = *(_QWORD *)(v24 + 8 * v3);
      if (v14)
        goto LABEL_28;
      v3 = v12 + 2;
      if (v12 + 2 >= v23)
        goto LABEL_36;
      v14 = *(_QWORD *)(v24 + 8 * v3);
      if (v14)
        goto LABEL_28;
      v3 = v12 + 3;
      if (v12 + 3 >= v23)
        goto LABEL_36;
      v14 = *(_QWORD *)(v24 + 8 * v3);
      if (v14)
      {
LABEL_28:
        v9 = (v14 - 1) & v14;
        v10 = __clz(__rbit64(v14)) + (v3 << 6);
LABEL_29:
        v11 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v10);
        if (v11)
        {
          while (1)
          {
            v16 = objc_msgSend(v11, sel_extensionPointRecord, v22);
            v17 = objc_msgSend(v16, sel_identifier);

            v18 = sub_1C1426A88();
            v20 = v19;

            if (v18 == 0xD00000000000001ELL && v20 == 0x80000001C142E150)
              break;
            v21 = sub_1C1427064();
            swift_bridgeObjectRelease();
            if ((v21 & 1) != 0)
              goto LABEL_36;

            v4 = v9;
            if ((v1 & 0x8000000000000000) == 0)
              goto LABEL_8;
LABEL_10:
            if (sub_1C1426E84())
            {
              sub_1C135C78C();
              swift_unknownObjectRetain();
              swift_dynamicCast();
              v11 = v30;
              swift_unknownObjectRelease();
              v9 = v4;
              if (v30)
                continue;
            }
            goto LABEL_36;
          }
          swift_bridgeObjectRelease();
        }
        goto LABEL_36;
      }
      v3 = v12 + 4;
      if (v12 + 4 < v23)
      {
        v14 = *(_QWORD *)(v24 + 8 * v3);
        if (!v14)
        {
          v15 = v13 + 6;
          while (v23 != v15)
          {
            v14 = *(_QWORD *)(v24 + 8 * v15++);
            if (v14)
            {
              v3 = v15 - 1;
              goto LABEL_28;
            }
          }
          goto LABEL_36;
        }
        goto LABEL_28;
      }
    }
LABEL_36:
    sub_1C133F908();
    return;
  }
  __break(1u);
}

uint64_t sub_1C135C6D0@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

void *sub_1C135C6F8(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  uint64_t v4;

  if (__src)
    v4 = a2 - (_QWORD)__src;
  else
    v4 = 0;
  if (!__dst)
  {
    if (v4 <= 0)
      return __src;
LABEL_10:
    __src = (void *)sub_1C1426FC8();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v4)
    goto LABEL_10;
  if (__src)
    return memmove(__dst, __src, a2 - (_QWORD)__src);
  return __src;
}

unint64_t sub_1C135C78C()
{
  unint64_t result;

  result = qword_1ED793180;
  if (!qword_1ED793180)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED793180);
  }
  return result;
}

uint64_t __swift_memcpy5_4(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_BYTE *)(result + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for RunningBoardError(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 5))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for RunningBoardError(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 5) = v3;
  return result;
}

uint64_t sub_1C135C82C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 4))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1C135C848(uint64_t result, int a2)
{
  if (a2)
  {
    *(_DWORD *)result = a2 - 1;
    *(_BYTE *)(result + 4) = 1;
  }
  else
  {
    *(_BYTE *)(result + 4) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for RunningBoardError()
{
  return &type metadata for RunningBoardError;
}

uint64_t sub_1C135C878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1C135C880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_1C135C898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t sub_1C135C8B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t sub_1C135C8C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t sub_1C135C8D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1C135C8D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_1C135C8E0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_1C135C8E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, unint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  int64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797868);
  v3 = MEMORY[0x1E0C80A78](v68);
  v67 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v66 = (char *)&v58 - v6;
  v7 = MEMORY[0x1E0C80A78](v5);
  v65 = (char *)&v58 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v78 = (uint64_t)&v58 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v64 = (char *)&v58 - v12;
  MEMORY[0x1E0C80A78](v11);
  v63 = (char *)&v58 - v13;
  v14 = *(_QWORD *)(a1 + 16);
  v15 = MEMORY[0x1E0DEE9D8];
  if (!v14)
    return v15;
  v58 = v1;
  v79 = MEMORY[0x1E0DEE9D8];
  sub_1C13369AC(0, v14, 0);
  result = sub_1C135833C(a1);
  v18 = result;
  v19 = 0;
  v20 = a1 + 64;
  v69 = a1 + 80;
  v61 = a1 + 64;
  v62 = a1;
  v59 = v14;
  v60 = v17;
  while ((v18 & 0x8000000000000000) == 0 && (uint64_t)v18 < 1 << *(_BYTE *)(a1 + 32))
  {
    v22 = v18 >> 6;
    if ((*(_QWORD *)(v20 + 8 * (v18 >> 6)) & (1 << v18)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v17)
      goto LABEL_26;
    v70 = v19;
    v71 = 1 << v18;
    v23 = v68;
    v24 = (uint64_t)v63;
    v25 = (uint64_t)&v63[*(int *)(v68 + 48)];
    v26 = *(_QWORD *)(a1 + 48);
    v27 = sub_1C1425CC0();
    v73 = *(_QWORD **)(v27 - 8);
    v28 = (void (*)(uint64_t, unint64_t, uint64_t))v73[2];
    v28(v24, v26 + v73[9] * v18, v27);
    v29 = *(_QWORD *)(a1 + 56);
    v74 = type metadata accessor for Assertion();
    v30 = *(_QWORD *)(*(_QWORD *)(v74 - 8) + 72);
    v77 = v18;
    sub_1C1338F24(v29 + v30 * v18, v25, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    v31 = (uint64_t)v64;
    v28((uint64_t)v64, v24, v27);
    sub_1C1338F24(v25, v31 + *(int *)(v23 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    v32 = v78;
    sub_1C132A724(v31, v78, &qword_1ED797868);
    sub_1C132C860(v24, &qword_1ED797868);
    v33 = *(int *)(v23 + 48);
    v34 = v32;
    v35 = v32 + v33;
    v36 = (uint64_t)v65;
    v37 = (uint64_t)&v65[v33];
    v28((uint64_t)v65, v34, v27);
    sub_1C1338F24(v35, v37, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    v38 = v66;
    v72 = &v66[*(int *)(v23 + 48)];
    v39 = (uint64_t)v72;
    v28((uint64_t)v66, v36, v27);
    sub_1C1338F24(v37, v39, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    v40 = sub_1C1425C84();
    v75 = v41;
    v76 = v40;
    v42 = (void (*)(char *, uint64_t))v73[1];
    v42(v38, v27);
    v43 = *(int *)(v23 + 48);
    v44 = v67;
    v45 = (uint64_t)&v67[v43];
    v28((uint64_t)v67, v36, v27);
    sub_1C1338F24(v37, v45, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    v74 = sub_1C1426AA0();
    v47 = v46;
    sub_1C132C860(v36, &qword_1ED797868);
    v42(v44, v27);
    sub_1C1339004((uint64_t)v72, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    sub_1C132C860(v78, &qword_1ED797868);
    v15 = v79;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_1C13369AC(0, *(_QWORD *)(v15 + 16) + 1, 1);
      v15 = v79;
    }
    v49 = *(_QWORD *)(v15 + 16);
    v48 = *(_QWORD *)(v15 + 24);
    v50 = v77;
    if (v49 >= v48 >> 1)
    {
      result = sub_1C13369AC(v48 > 1, v49 + 1, 1);
      v15 = v79;
    }
    *(_QWORD *)(v15 + 16) = v49 + 1;
    v51 = (_QWORD *)(v15 + 48 * v49);
    v52 = v75;
    v51[4] = v76;
    v51[5] = v52;
    v51[6] = v74;
    v51[7] = v47;
    v51[9] = MEMORY[0x1E0DEA968];
    a1 = v62;
    v18 = 1 << *(_BYTE *)(v62 + 32);
    if (v50 >= (uint64_t)v18)
      goto LABEL_27;
    v20 = v61;
    v53 = *(_QWORD *)(v61 + 8 * v22);
    if ((v53 & v71) == 0)
      goto LABEL_28;
    LODWORD(v17) = v60;
    if (*(_DWORD *)(v62 + 36) != (_DWORD)v60)
      goto LABEL_29;
    v54 = v53 & (-2 << (v50 & 0x3F));
    if (v54)
    {
      v18 = __clz(__rbit64(v54)) | v50 & 0xFFFFFFFFFFFFFFC0;
      v21 = v59;
    }
    else
    {
      v55 = v22 + 1;
      v56 = (v18 + 63) >> 6;
      v21 = v59;
      if (v22 + 1 < v56)
      {
        v57 = *(_QWORD *)(v61 + 8 * v55);
        if (v57)
        {
LABEL_22:
          v18 = __clz(__rbit64(v57)) + (v55 << 6);
        }
        else
        {
          while (v56 - 2 != v22)
          {
            v57 = *(_QWORD *)(v69 + 8 * v22++);
            if (v57)
            {
              v55 = v22 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    v19 = v70 + 1;
    if (v70 + 1 == v21)
      return v15;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1C135CDD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v3 = sub_1C14259A8();
  v31 = *(_QWORD *)(v3 - 8);
  v32 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x1E0DEE9D8];
  if (!v6)
    return v7;
  v34 = v1;
  v35 = MEMORY[0x1E0DEE9D8];
  sub_1C13369C8(0, v6, 0);
  v7 = v35;
  result = sub_1C135833C(a1);
  v10 = result;
  v11 = 0;
  v12 = a1 + 64;
  v27 = a1 + 80;
  v28 = v6;
  v29 = v9;
  v30 = a1 + 64;
  while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << *(_BYTE *)(a1 + 32))
  {
    v15 = (unint64_t)v10 >> 6;
    if ((*(_QWORD *)(v12 + 8 * ((unint64_t)v10 >> 6)) & (1 << v10)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v9)
      goto LABEL_24;
    v33 = v11;
    v16 = a1;
    swift_bridgeObjectRetain_n();
    v17 = swift_bridgeObjectRetain();
    v18 = v34;
    sub_1C135D08C(v17);
    v34 = v18;
    sub_1C1425990();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v35 = v7;
    v20 = *(_QWORD *)(v7 + 16);
    v19 = *(_QWORD *)(v7 + 24);
    if (v20 >= v19 >> 1)
    {
      sub_1C13369C8(v19 > 1, v20 + 1, 1);
      v7 = v35;
    }
    *(_QWORD *)(v7 + 16) = v20 + 1;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v31 + 32))(v7+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(_QWORD *)(v31 + 72) * v20, v5, v32);
    v13 = 1 << *(_BYTE *)(v16 + 32);
    if (v10 >= v13)
      goto LABEL_25;
    v12 = v30;
    v21 = *(_QWORD *)(v30 + 8 * v15);
    if ((v21 & (1 << v10)) == 0)
      goto LABEL_26;
    a1 = v16;
    LODWORD(v9) = v29;
    if (*(_DWORD *)(v16 + 36) != (_DWORD)v29)
      goto LABEL_27;
    v22 = v21 & (-2 << (v10 & 0x3F));
    if (v22)
    {
      v13 = __clz(__rbit64(v22)) | v10 & 0xFFFFFFFFFFFFFFC0;
      v14 = v28;
    }
    else
    {
      v23 = v15 + 1;
      v24 = (unint64_t)(v13 + 63) >> 6;
      v14 = v28;
      if (v15 + 1 < v24)
      {
        v25 = *(_QWORD *)(v30 + 8 * v23);
        if (v25)
        {
LABEL_20:
          v13 = __clz(__rbit64(v25)) + (v23 << 6);
        }
        else
        {
          while (v24 - 2 != v15)
          {
            v25 = *(_QWORD *)(v27 + 8 * v15++);
            if (v25)
            {
              v23 = v15 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v11 = v33 + 1;
    v10 = v13;
    if (v33 + 1 == v14)
      return v7;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

unint64_t sub_1C135D08C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  unint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  int64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, unint64_t, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD v44[2];
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  uint64_t v63;

  v3 = sub_1C14255F4();
  v57 = *(_QWORD *)(v3 - 8);
  v58 = v3;
  MEMORY[0x1E0C80A78](v3);
  v56 = (char *)v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7979F8);
  v5 = MEMORY[0x1E0C80A78](v55);
  v54 = (uint64_t)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v53 = (char *)v44 - v8;
  MEMORY[0x1E0C80A78](v7);
  v52 = (char *)v44 - v9;
  v10 = sub_1C14254C8();
  v50 = *(_QWORD *)(v10 - 8);
  v51 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = MEMORY[0x1E0DEE9D8];
  if (!v13)
    return v14;
  v44[1] = v1;
  v63 = MEMORY[0x1E0DEE9D8];
  sub_1C1336A20(0, v13, 0);
  result = sub_1C135833C(a1);
  v17 = 0;
  v18 = a1 + 64;
  v59 = a1 + 80;
  v48 = v12;
  v49 = a1;
  v45 = v13;
  v46 = v16;
  v47 = a1 + 64;
  while ((result & 0x8000000000000000) == 0 && (uint64_t)result < 1 << *(_BYTE *)(a1 + 32))
  {
    v21 = result >> 6;
    if ((*(_QWORD *)(v18 + 8 * (result >> 6)) & (1 << result)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v16)
      goto LABEL_26;
    v60 = v17;
    v61 = 1 << result;
    v22 = v55;
    v23 = v52;
    v24 = &v52[*(int *)(v55 + 48)];
    v25 = *(_QWORD *)(a1 + 56);
    v26 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * result);
    v28 = *v26;
    v27 = v26[1];
    v29 = v58;
    v30 = *(_QWORD *)(v57 + 72);
    v62 = result;
    v31 = *(void (**)(char *, unint64_t, uint64_t))(v57 + 16);
    v31(v24, v25 + v30 * result, v58);
    *v23 = v28;
    v23[1] = v27;
    v32 = v53;
    *(_QWORD *)v53 = v28;
    *((_QWORD *)v32 + 1) = v27;
    v31(&v32[*(int *)(v22 + 48)], (unint64_t)v24, v29);
    v33 = (uint64_t)v32;
    v34 = v54;
    sub_1C132A724(v33, v54, &qword_1ED7979F8);
    swift_bridgeObjectRetain_n();
    sub_1C132C860((uint64_t)v23, &qword_1ED7979F8);
    v35 = *(int *)(v22 + 48);
    v36 = v48;
    v31(v56, v34 + v35, v29);
    swift_bridgeObjectRetain();
    sub_1C14254BC();
    sub_1C132C860(v34, &qword_1ED7979F8);
    v14 = v63;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C1336A20(0, *(_QWORD *)(v14 + 16) + 1, 1);
      v14 = v63;
    }
    v38 = *(_QWORD *)(v14 + 16);
    v37 = *(_QWORD *)(v14 + 24);
    a1 = v49;
    if (v38 >= v37 >> 1)
    {
      sub_1C1336A20(v37 > 1, v38 + 1, 1);
      v14 = v63;
    }
    *(_QWORD *)(v14 + 16) = v38 + 1;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v50 + 32))(v14+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(_QWORD *)(v50 + 72) * v38, v36, v51);
    v63 = v14;
    v19 = 1 << *(_BYTE *)(a1 + 32);
    if (v62 >= v19)
      goto LABEL_27;
    v18 = v47;
    v39 = *(_QWORD *)(v47 + 8 * v21);
    if ((v39 & v61) == 0)
      goto LABEL_28;
    LODWORD(v16) = v46;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v46)
      goto LABEL_29;
    v40 = v39 & (-2 << (v62 & 0x3F));
    if (v40)
    {
      v19 = __clz(__rbit64(v40)) | v62 & 0xFFFFFFFFFFFFFFC0;
      v20 = v45;
    }
    else
    {
      v41 = v21 + 1;
      v42 = (unint64_t)(v19 + 63) >> 6;
      v20 = v45;
      if (v21 + 1 < v42)
      {
        v43 = *(_QWORD *)(v47 + 8 * v41);
        if (v43)
        {
LABEL_22:
          v19 = __clz(__rbit64(v43)) + (v41 << 6);
        }
        else
        {
          while (v42 - 2 != v21)
          {
            v43 = *(_QWORD *)(v59 + 8 * v21++);
            if (v43)
            {
              v41 = v21 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    v17 = v60 + 1;
    result = v19;
    if (v60 + 1 == v20)
      return v14;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1C135D4B0(uint64_t a1)
{
  uint64_t result;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;

  result = sub_1C1426C14();
  v3 = 0;
  v18 = result;
  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v3);
      if (!v15)
      {
        v3 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v3);
        if (!v15)
        {
          v3 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v3);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1C132FAD4(&v17, v12, v13);
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v3);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1C135D648(uint64_t a1)
{
  uint64_t result;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;

  result = sub_1C1426C14();
  v3 = 0;
  v18 = result;
  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v3);
      if (!v15)
      {
        v3 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v3);
        if (!v15)
        {
          v3 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v3);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1C132FAD4(&v17, v12, v13);
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v3);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1C135D7DC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD *);
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD *);
  uint64_t v17;
  _QWORD v18[2];
  uint64_t v19;

  v4 = a3;
  v17 = *(_QWORD *)(a3 + 16);
  if (v17)
  {
    v5 = (uint64_t (*)(_QWORD *))result;
    v6 = 0;
    v7 = (uint64_t *)(a3 + 40);
    v8 = MEMORY[0x1E0DEE9D8];
    v15 = (uint64_t (*)(_QWORD *))result;
    while (v6 < *(_QWORD *)(v4 + 16))
    {
      v10 = *(v7 - 1);
      v9 = *v7;
      v18[0] = v10;
      v18[1] = v9;
      swift_bridgeObjectRetain();
      v11 = v5(v18);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      if ((v11 & 1) != 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v19 = v8;
        if ((result & 1) == 0)
        {
          result = sub_1C1336990(0, *(_QWORD *)(v8 + 16) + 1, 1);
          v8 = v19;
        }
        v13 = *(_QWORD *)(v8 + 16);
        v12 = *(_QWORD *)(v8 + 24);
        if (v13 >= v12 >> 1)
        {
          result = sub_1C1336990(v12 > 1, v13 + 1, 1);
          v8 = v19;
        }
        *(_QWORD *)(v8 + 16) = v13 + 1;
        v14 = v8 + 16 * v13;
        *(_QWORD *)(v14 + 32) = v10;
        *(_QWORD *)(v14 + 40) = v9;
        v4 = a3;
        v5 = v15;
      }
      else
      {
        result = swift_bridgeObjectRelease();
      }
      ++v6;
      v7 += 2;
      if (v17 == v6)
        goto LABEL_16;
    }
    __break(1u);
  }
  else
  {
    v8 = MEMORY[0x1E0DEE9D8];
LABEL_16:
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

uint64_t sub_1C135D94C(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  char *v19;
  char v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t (*v33)(char *);
  uint64_t v34;
  char *v35;
  uint64_t v36;

  v4 = v3;
  v33 = a1;
  v34 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B60);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C14251B0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v31 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v11);
  v35 = (char *)&v26 - v14;
  v36 = MEMORY[0x1E0DEE9D8];
  v32 = *(_QWORD *)(a3 + 16);
  if (v32)
  {
    v15 = 0;
    v30 = a3;
    while (v15 < *(_QWORD *)(a3 + 16))
    {
      v16 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      v17 = *(_QWORD *)(v10 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v8, a3 + v16 + v17 * v15, v9);
      v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v29(v8, 0, 1, v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
        goto LABEL_17;
      v18 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v19 = v35;
      v18(v35, v8, v9);
      v20 = v33(v19);
      if (v4)
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
        swift_bridgeObjectRelease();
        return swift_release();
      }
      if ((v20 & 1) != 0)
      {
        v18(v31, v35, v9);
        v21 = v36;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v28 = 0;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1C1336A4C(0, *(_QWORD *)(v21 + 16) + 1, 1);
          v21 = v36;
        }
        v24 = *(_QWORD *)(v21 + 16);
        v23 = *(_QWORD *)(v21 + 24);
        v25 = v24 + 1;
        if (v24 >= v23 >> 1)
        {
          v27 = v24 + 1;
          sub_1C1336A4C(v23 > 1, v24 + 1, 1);
          v25 = v27;
          v21 = v36;
        }
        *(_QWORD *)(v21 + 16) = v25;
        result = ((uint64_t (*)(unint64_t, char *, uint64_t))v18)(v21 + v16 + v24 * v17, v31, v9);
        v36 = v21;
        v4 = v28;
      }
      else
      {
        result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v35, v9);
      }
      a3 = v30;
      if (v32 == ++v15)
      {
        v29(v8, 1, 1, v9);
        goto LABEL_17;
      }
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
LABEL_17:
    swift_bridgeObjectRelease();
    sub_1C132C860((uint64_t)v8, &qword_1ED793B60);
    return v36;
  }
  return result;
}

uint64_t sub_1C135DC18(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_1C135DC3C(a1, a2, a3, type metadata accessor for ReplicatorParticipant.RelationshipSchedule, (void (*)(BOOL, uint64_t, uint64_t))sub_1C1336A78);
}

uint64_t sub_1C135DC3C(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), void (*a5)(BOOL, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  void (*v22)(BOOL, uint64_t, uint64_t);
  uint64_t (*v23)(_QWORD);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *);
  uint64_t v29;
  uint64_t v30;

  v22 = a5;
  v6 = a4;
  v28 = a1;
  v29 = a2;
  v8 = a4(0);
  v27 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v26 = (uint64_t)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v22 - v12;
  v14 = MEMORY[0x1E0DEE9D8];
  v30 = MEMORY[0x1E0DEE9D8];
  v25 = *(_QWORD *)(a3 + 16);
  if (v25)
  {
    v15 = 0;
    v16 = MEMORY[0x1E0DEE9D8];
    v23 = v6;
    v24 = a3;
    while (v15 < *(_QWORD *)(a3 + 16))
    {
      v17 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
      v18 = *(_QWORD *)(v27 + 72);
      sub_1C1338F24(a3 + v17 + v18 * v15, (uint64_t)v13, v6);
      v14 = v29;
      v19 = v28(v13);
      if (v5)
      {
        sub_1C1339004((uint64_t)v13, v6);
        swift_release();
        swift_bridgeObjectRelease();
        return v14;
      }
      if ((v19 & 1) != 0)
      {
        sub_1C1339140((uint64_t)v13, v26, v6);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v22(0, *(_QWORD *)(v16 + 16) + 1, 1);
        v16 = v30;
        v21 = *(_QWORD *)(v30 + 16);
        v20 = *(_QWORD *)(v30 + 24);
        if (v21 >= v20 >> 1)
        {
          v22(v20 > 1, v21 + 1, 1);
          v16 = v30;
        }
        *(_QWORD *)(v16 + 16) = v21 + 1;
        v6 = v23;
        result = sub_1C1339140(v26, v16 + v17 + v21 * v18, v23);
        a3 = v24;
      }
      else
      {
        result = sub_1C1339004((uint64_t)v13, v6);
      }
      if (v25 == ++v15)
      {
        v14 = v30;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v14;
  }
  return result;
}

void sub_1C135DE4C()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  NSObject *oslog;

  v1 = v0;
  v2 = v0 + 16;
  v3 = v0[19];
  v4 = v0[20];
  __swift_project_boxed_opaque_existential_1(v0 + 16, v3);
  v5 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4) + 16);
  swift_bridgeObjectRelease();
  if (v5)
  {
    if (qword_1ED795CA8 != -1)
      swift_once();
    if ((*((_BYTE *)off_1ED7936E8 + 16) & 1) != 0)
    {
      if (qword_1ED7978F0 != -1)
        swift_once();
      v6 = sub_1C1426854();
      __swift_project_value_buffer(v6, (uint64_t)qword_1ED798610);
      v7 = sub_1C1426848();
      v8 = sub_1C1426C80();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v9 = 0;
        _os_log_impl(&dword_1C1324000, v7, v8, "Assertions are obsolete; purging", v9, 2u);
        MEMORY[0x1C3BAD3F4](v9, -1, -1);
      }

      v11 = v1[19];
      v10 = v1[20];
      __swift_project_boxed_opaque_existential_1(v2, v11);
      (*(void (**)(uint64_t, uint64_t))(v10 + 40))(v11, v10);
    }
    else
    {
      sub_1C13657A4();
    }
  }
  else
  {
    if (qword_1ED7978F0 != -1)
      swift_once();
    v12 = sub_1C1426854();
    __swift_project_value_buffer(v12, (uint64_t)qword_1ED798610);
    oslog = sub_1C1426848();
    v13 = sub_1C1426C80();
    if (os_log_type_enabled(oslog, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_1C1324000, oslog, v13, "No assertions to restore", v14, 2u);
      MEMORY[0x1C3BAD3F4](v14, -1, -1);
    }

  }
}

uint64_t sub_1C135E098()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 176);
  __swift_destroy_boxed_opaque_existential_1(v0 + 216);
  return v0;
}

uint64_t sub_1C135E13C()
{
  sub_1C135E098();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AssertionManager()
{
  return objc_opt_self();
}

uint64_t sub_1C135E17C(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  char v31;
  _QWORD *v32;
  unint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t (*v95)(uint64_t, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  unsigned int v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  int64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  char *v126;
  char *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  _QWORD *v140;
  uint64_t v141;
  _QWORD *v142;
  _OWORD v143[2];
  uint64_t v144;

  v119 = sub_1C1425E4C();
  v118 = *(_QWORD *)(v119 - 8);
  MEMORY[0x1E0C80A78](v119);
  v117 = (char *)&v113 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C1425CC0();
  v139 = *(_QWORD **)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v113 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797868);
  v8 = MEMORY[0x1E0C80A78](v130);
  v129 = (char *)&v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v128 = (uint64_t)&v113 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v127 = (char *)&v113 - v13;
  MEMORY[0x1E0C80A78](v12);
  v126 = (char *)&v113 - v14;
  v131 = type metadata accessor for Assertion();
  v138 = *(_QWORD *)(v131 - 8);
  v15 = MEMORY[0x1E0C80A78](v131);
  v116 = (char *)&v113 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v136 = (uint64_t)&v113 - v18;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v113 - v19;
  v21 = a1[19];
  v22 = a1[20];
  v132 = a1;
  __swift_project_boxed_opaque_existential_1(a1 + 16, v21);
  v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v21, v22);
  v114 = a2;
  v24 = sub_1C136CC40(v23, a2);
  swift_bridgeObjectRelease();
  v25 = *(_QWORD *)(v24 + 16);
  v140 = a1 + 16;
  v115 = 0;
  v137 = v5;
  if (v25)
  {
    *(_QWORD *)&v143[0] = MEMORY[0x1E0DEE9D8];
    sub_1C133691C(0, v25, 0);
    result = sub_1C135833C(v24);
    v28 = result;
    v29 = 0;
    v30 = v24 + 64;
    v31 = *(_BYTE *)(v24 + 32);
    v113 = v24 + 88;
    v32 = v139;
    v125 = v20;
    v124 = v7;
    v123 = v24;
    v120 = v25;
    v121 = v27;
    v122 = v24 + 64;
    while (1)
    {
      if (v28 < 0 || v28 >= 1 << v31)
      {
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
        return result;
      }
      v35 = (unint64_t)v28 >> 6;
      if ((*(_QWORD *)(v30 + 8 * ((unint64_t)v28 >> 6)) & (1 << v28)) == 0)
        goto LABEL_47;
      if (*(_DWORD *)(v24 + 36) != (_DWORD)v27)
        goto LABEL_48;
      v133 = v29;
      v134 = 1 << v28;
      v36 = v130;
      v37 = (uint64_t)v126;
      v38 = (uint64_t)&v126[*(int *)(v130 + 48)];
      v39 = *(_QWORD *)(v24 + 48) + v32[9] * v28;
      v40 = v24;
      v41 = (void (*)(char *, uint64_t, uint64_t))v32[2];
      v41(v126, v39, v5);
      v42 = *(_QWORD *)(v40 + 56);
      v135 = *(_QWORD *)(v138 + 72);
      sub_1C1338F24(v42 + v135 * v28, v38, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      v43 = v127;
      v41(v127, v37, v5);
      sub_1C1338F24(v38, (uint64_t)&v43[*(int *)(v36 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      v44 = (uint64_t)v43;
      v45 = v128;
      sub_1C132A724(v44, v128, &qword_1ED797868);
      sub_1C132C860(v37, &qword_1ED797868);
      v46 = *(int *)(v36 + 48);
      v47 = v129;
      v48 = (uint64_t)&v129[v46];
      v49 = v45 + v46;
      v41(v129, v45, v5);
      sub_1C1338F24(v49, v48, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      sub_1C1339140(v48, v136, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      ((void (*)(char *, uint64_t))v139[1])(v47, v5);
      sub_1C132C860(v45, &qword_1ED797868);
      v50 = *(_QWORD *)&v143[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C133691C(0, *(_QWORD *)(v50 + 16) + 1, 1);
        v50 = *(_QWORD *)&v143[0];
      }
      v52 = *(_QWORD *)(v50 + 16);
      v51 = *(_QWORD *)(v50 + 24);
      v53 = v124;
      v20 = v125;
      if (v52 >= v51 >> 1)
      {
        v59 = v124;
        sub_1C133691C(v51 > 1, v52 + 1, 1);
        v53 = v59;
        v50 = *(_QWORD *)&v143[0];
      }
      *(_QWORD *)(v50 + 16) = v52 + 1;
      result = sub_1C1339140(v136, v50+ ((*(unsigned __int8 *)(v138 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v138 + 80))+ v52 * v135, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      v24 = v123;
      v31 = *(_BYTE *)(v123 + 32);
      v33 = 1 << v31;
      if (v28 >= 1 << v31)
        goto LABEL_49;
      v30 = v122;
      v54 = *(_QWORD *)(v122 + 8 * v35);
      if ((v54 & v134) == 0)
        goto LABEL_50;
      LODWORD(v27) = v121;
      if (*(_DWORD *)(v123 + 36) != (_DWORD)v121)
        goto LABEL_51;
      v55 = v54 & (-2 << (v28 & 0x3F));
      if (v55)
      {
        v33 = __clz(__rbit64(v55)) | v28 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        v56 = v35 + 1;
        v57 = (v33 + 63) >> 6;
        if (v35 + 1 < v57)
        {
          v58 = *(_QWORD *)(v122 + 8 * v56);
          v5 = v137;
          v34 = (_QWORD *)v120;
          if (v58)
            goto LABEL_20;
          v56 = v35 + 2;
          if (v35 + 2 < v57)
          {
            v58 = *(_QWORD *)(v122 + 8 * v56);
            if (v58)
            {
LABEL_20:
              v33 = __clz(__rbit64(v58)) + (v56 << 6);
            }
            else
            {
              while (v57 - 3 != v35)
              {
                v58 = *(_QWORD *)(v113 + 8 * v35++);
                if (v58)
                {
                  v56 = v35 + 2;
                  goto LABEL_20;
                }
              }
            }
          }
          v32 = v139;
          goto LABEL_5;
        }
      }
      v5 = v137;
      v32 = v139;
      v34 = (_QWORD *)v120;
LABEL_5:
      v29 = (_QWORD *)((char *)v133 + 1);
      v28 = v33;
      if ((_QWORD *)((char *)v133 + 1) == v34)
      {
        swift_release();
        v60 = *(_QWORD *)(v50 + 16);
        if (!v60)
          goto LABEL_41;
LABEL_28:
        v61 = v50 + ((*(unsigned __int8 *)(v138 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v138 + 80));
        v138 = *(_QWORD *)(v138 + 72);
        v136 = v50;
        swift_bridgeObjectRetain();
        v134 = v61;
        v135 = v60;
        v62 = (uint64_t)v20;
        v63 = v60;
        v64 = v139;
        v65 = v137;
        do
        {
          sub_1C1338F24(v61, v62, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
          v66 = v132[19];
          v67 = v132[20];
          __swift_project_boxed_opaque_existential_1(v140, v66);
          ((void (*)(char *, uint64_t, uint64_t))v64[2])(v53, v62, v65);
          sub_1C1339004(v62, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
          (*(void (**)(char *, uint64_t, uint64_t))(v67 + 32))(v53, v66, v67);
          ((void (*)(char *, uint64_t))v64[1])(v53, v65);
          v61 += v138;
          --v63;
        }
        while (v63);
        swift_bridgeObjectRelease();
        v68 = *MEMORY[0x1E0D8CCD0];
        swift_bridgeObjectRetain();
        v69 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        v70 = v119;
        v71 = v118;
        v72 = (uint64_t *)v117;
        v73 = (uint64_t)v116;
        v74 = v132;
        v75 = v134;
        v76 = v135;
        do
        {
          sub_1C1338F24(v75, v73, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
          (*(void (**)(uint64_t *, uint64_t, uint64_t))(v71 + 16))(v72, v73 + *(int *)(v131 + 40), v70);
          if ((*(unsigned int (**)(uint64_t *, uint64_t))(v71 + 88))(v72, v70) == v68)
          {
            (*(void (**)(uint64_t *, uint64_t))(v71 + 96))(v72, v70);
            v78 = v73;
            v79 = *v72;
            v80 = v72[1];
            sub_1C1339004(v78, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v69 = sub_1C136C3E0(0, v69[2] + 1, 1, v69);
            v82 = v69[2];
            v81 = v69[3];
            v77 = v138;
            if (v82 >= v81 >> 1)
            {
              v84 = sub_1C136C3E0((_QWORD *)(v81 > 1), v82 + 1, 1, v69);
              v77 = v138;
              v69 = v84;
            }
            v69[2] = v82 + 1;
            v83 = &v69[2 * v82];
            v83[4] = v79;
            v83[5] = v80;
            v70 = v119;
            v71 = v118;
            v72 = (uint64_t *)v117;
            v73 = (uint64_t)v116;
          }
          else
          {
            (*(void (**)(uint64_t *, uint64_t))(v71 + 8))(v72, v70);
            sub_1C1339004(v73, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
            v77 = v138;
          }
          v75 += v77;
          --v76;
        }
        while (v76);
        swift_bridgeObjectRelease_n();
        goto LABEL_42;
      }
    }
  }
  swift_release();
  v50 = MEMORY[0x1E0DEE9D8];
  v53 = v7;
  v60 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
  if (v60)
    goto LABEL_28;
LABEL_41:
  swift_bridgeObjectRelease();
  v69 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v74 = v132;
LABEL_42:
  v144 = 0;
  memset(v143, 0, sizeof(v143));
  swift_beginAccess();
  sub_1C13B3A74((uint64_t)v143, v114);
  swift_endAccess();
  v133 = v69;
  v85 = v69[2];
  v86 = v140;
  v87 = v115;
  if (v85)
  {
    v138 = v74[6];
    v139 = v74 + 8;
    v88 = v74[2];
    v136 = v74[3];
    v137 = v88;
    v89 = v74[4];
    v134 = v74[5];
    v135 = v89;
    swift_beginAccess();
    v90 = v133 + 5;
    do
    {
      v91 = *(v90 - 1);
      v92 = *v90;
      v93 = v74[19];
      v94 = v74[20];
      __swift_project_boxed_opaque_existential_1(v86, v93);
      v95 = *(uint64_t (**)(uint64_t, uint64_t))(v94 + 8);
      swift_bridgeObjectRetain();
      v96 = v95(v93, v94);
      swift_bridgeObjectRetain();
      v97 = v87;
      v98 = sub_1C1373C0C(1, v96, v91, v92);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v141 = v74[8];
      v74[8] = 0x8000000000000000;
      sub_1C13C2760(v98, v91, v92, isUniquelyReferenced_nonNull_native);
      v74[8] = v141;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      v142 = (_QWORD *)v74[8];
      swift_bridgeObjectRetain();
      sub_1C14268E4();
      swift_bridgeObjectRelease();
      v74[13] = sub_1C135ED50();
      swift_bridgeObjectRelease();
      v142 = (_QWORD *)v74[13];
      swift_bridgeObjectRetain();
      sub_1C14268E4();
      swift_bridgeObjectRelease();
      v100 = v138;
      os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v138 + 16));
      v101 = v74[19];
      v102 = v74[20];
      __swift_project_boxed_opaque_existential_1(v140, v101);
      v103 = (*(uint64_t (**)(uint64_t, uint64_t))(v102 + 8))(v101, v102);
      v104 = sub_1C1366850(v103);
      swift_bridgeObjectRelease();
      v74[9] = sub_1C135D4B0(v104);
      swift_bridgeObjectRelease();
      v105 = swift_bridgeObjectRetain();
      v106 = sub_1C132FC80(v105);
      swift_bridgeObjectRelease();
      v142 = v106;
      sub_1C14268E4();
      swift_release();
      os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v100 + 16));
      v142 = (_QWORD *)MEMORY[0x1E0DEE9E8];
      v107 = v74[19];
      v108 = v74[20];
      __swift_project_boxed_opaque_existential_1(v140, v107);
      v109 = (*(uint64_t (**)(uint64_t, uint64_t))(v108 + 8))(v107, v108);
      v110 = MEMORY[0x1E0C80A78](v109);
      *(&v113 - 2) = (uint64_t)&v142;
      sub_1C1373824(v110, (void (*)(char *, uint64_t))sub_1C1375C98);
      v87 = v97;
      swift_bridgeObjectRelease();
      v74[14] = v142;
      swift_bridgeObjectRelease();
      v111 = swift_bridgeObjectRetain();
      v112 = sub_1C132FC80(v111);
      swift_bridgeObjectRelease();
      v142 = v112;
      sub_1C14268E4();
      v86 = v140;
      swift_release();
      v90 += 2;
      --v85;
    }
    while (v85);
  }
  swift_bridgeObjectRelease();
  return sub_1C135EE08();
}

uint64_t sub_1C135ED50()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v0[6] + 16));
  v1 = v0[19];
  v2 = v0[20];
  __swift_project_boxed_opaque_existential_1(v0 + 16, v1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  sub_1C1373824(v3, (void (*)(char *, uint64_t))sub_1C1374894);
  swift_bridgeObjectRelease();
  v4 = swift_bridgeObjectRetain();
  v5 = sub_1C135CDD8(v4);
  swift_bridgeObjectRelease_n();
  return v5;
}

uint64_t sub_1C135EE08()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  double v20;
  double v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v32;
  os_unfair_lock_s *v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  os_unfair_lock_s *v36;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = v0;
  v2 = sub_1C14251B0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)v37 - v8;
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v37 - v10;
  if (qword_1ED7978F0 != -1)
    swift_once();
  v12 = sub_1C1426854();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED798610);
  v13 = sub_1C1426848();
  v14 = sub_1C1426C80();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_1C1324000, v13, v14, "Scheduling expiration timer", v15, 2u);
    MEMORY[0x1C3BAD3F4](v15, -1, -1);
  }

  v16 = v1[19];
  v17 = v1[20];
  __swift_project_boxed_opaque_existential_1(v1 + 16, v16);
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);
  sub_1C1425114();
  sub_1C1364A74((uint64_t)v9, v18, v11);
  v19 = *(void (**)(char *, uint64_t))(v3 + 8);
  v19(v9, v2);
  swift_bridgeObjectRelease();
  sub_1C1425114();
  LOBYTE(v18) = sub_1C1425150();
  v19(v9, v2);
  if ((v18 & 1) != 0)
  {
    sub_1C142518C();
    sub_1C1425120();
    v21 = v20;
    v19(v9, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v11, v2);
    v22 = sub_1C1426848();
    v23 = sub_1C1426C80();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      v38 = swift_slowAlloc();
      v40 = v38;
      *(_DWORD *)v24 = 136446210;
      v37[1] = v24 + 4;
      sub_1C1329AD0((unint64_t *)&unk_1ED793B50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
      v25 = sub_1C1427058();
      v39 = sub_1C132AD90(v25, v26, &v40);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      v19(v6, v2);
      _os_log_impl(&dword_1C1324000, v22, v23, "Expiration timer will fire at %{public}s", v24, 0xCu);
      v27 = v38;
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v27, -1, -1);
      MEMORY[0x1C3BAD3F4](v24, -1, -1);
    }
    else
    {
      v19(v6, v2);
    }

    v32 = v1[21];
    v33 = *(os_unfair_lock_s **)(*(_QWORD *)(v32 + 24) + 16);
    swift_retain();
    os_unfair_lock_lock(v33);
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v32 + 24) + 16));
    if (*(_QWORD *)(v32 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_1C1426D40();
      swift_unknownObjectRelease();
      *(_QWORD *)(v32 + 16) = 0;
      swift_unknownObjectRelease();
    }
    os_unfair_lock_unlock(v33);
    swift_release();
    v34 = (void (*)(char *, uint64_t))v1[15];
    v35 = swift_allocObject();
    swift_weakInit();
    v36 = *(os_unfair_lock_s **)(*(_QWORD *)(v32 + 24) + 16);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock(v36);
    sub_1C13A7940(v34, (uint64_t)sub_1C13748C0, v35, v21);
    os_unfair_lock_unlock(v36);
    swift_release();
    swift_release();
    v19(v11, v2);
    return swift_release();
  }
  else
  {
    v28 = sub_1C1426848();
    v29 = sub_1C1426C80();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_1C1324000, v28, v29, "Expiration timer does not need to restart", v30, 2u);
      MEMORY[0x1C3BAD3F4](v30, -1, -1);
    }

    return ((uint64_t (*)(char *, uint64_t))v19)(v11, v2);
  }
}

uint64_t sub_1C135F2F0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  _QWORD *v36;
  void (*v37)(char *, uint64_t);
  id v38;
  void *v39;
  int v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  id v48;
  void *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int *v67;
  void (*v68)(char *, uint64_t);
  id v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t);
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int *v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  char v91;
  char v92;
  uint64_t *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  char v97;
  void (*v98)(char *, uint64_t);
  char *v99;
  uint64_t v100;
  uint64_t v101;
  NSObject *v102;
  os_log_type_t v103;
  uint8_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t result;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  NSObject *v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  id v116;
  void *v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  _QWORD *v145;
  void *v146;
  char *v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  uint64_t v155;
  _QWORD v156[3];
  uint64_t v157;
  uint64_t v158;

  v144 = a3;
  v139 = sub_1C14251B0();
  v138 = *(_QWORD *)(v139 - 8);
  v5 = MEMORY[0x1E0C80A78](v139);
  v137 = (char *)&v128 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v136 = (char *)&v128 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797898);
  MEMORY[0x1E0C80A78](v8);
  v151 = (uint64_t)&v128 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C1425CC0();
  v152 = *(_QWORD *)(v10 - 8);
  v153 = v10;
  MEMORY[0x1E0C80A78](v10);
  v150 = (char *)&v128 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = type metadata accessor for Assertion();
  v12 = MEMORY[0x1E0C80A78](v141);
  v131 = (uint64_t)&v128 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v133 = (uint64_t)&v128 - v15;
  MEMORY[0x1E0C80A78](v14);
  v143 = (char *)&v128 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797560);
  MEMORY[0x1E0C80A78](v17);
  v132 = (char *)&v128 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1C1425E4C();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x1E0C80A78](v19);
  v149 = (char *)&v128 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v24 = (uint64_t *)((char *)&v128 - v23);
  v25 = sub_1C1425DF8();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = MEMORY[0x1E0C80A78](v25);
  v140 = (char *)&v128 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x1E0C80A78](v27);
  v134 = (char *)&v128 - v30;
  v31 = MEMORY[0x1E0C80A78](v29);
  v147 = (char *)&v128 - v32;
  MEMORY[0x1E0C80A78](v31);
  v34 = (char *)&v128 - v33;
  v35 = a2[3];
  v154 = a2;
  v36 = __swift_project_boxed_opaque_existential_1(a2, v35);
  v142 = a1;
  sub_1C1425D8C();
  sub_1C1360290();
  v148 = v26;
  v37 = *(void (**)(char *, uint64_t))(v26 + 8);
  v135 = v25;
  v37(v34, v25);
  v38 = objc_msgSend(*(id *)(*v36 + OBJC_IVAR____TtC11SessionCore22AssertionServiceClient_connection), sel_remoteProcess);
  v39 = (void *)sub_1C1426A7C();
  LODWORD(v34) = objc_msgSend(v38, sel_hasEntitlement_, v39);
  swift_bridgeObjectRelease();

  if (!(_DWORD)v34)
  {
    if (qword_1ED7978F0 != -1)
      swift_once();
    v43 = sub_1C1426854();
    __swift_project_value_buffer(v43, (uint64_t)qword_1ED798610);
    sub_1C132E0A8((uint64_t)v154, (uint64_t)v156);
    v44 = sub_1C1426848();
    v45 = sub_1C1426C68();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc();
      v47 = swift_slowAlloc();
      v158 = v47;
      *(_DWORD *)v46 = 136380675;
      v48 = objc_msgSend(*(id *)(*__swift_project_boxed_opaque_existential_1(v156, v157)+ OBJC_IVAR____TtC11SessionCore22AssertionServiceClient_connection), sel_remoteProcess);
      v49 = v146;
      v50 = sub_1C132F33C();
      if (v49)
      {
        v52 = 0x6E776F6E6B6E753CLL;

        v53 = 0xE90000000000003ELL;
      }
      else
      {
        v52 = v50;
        v53 = v51;

      }
      v155 = sub_1C132AD90(v52, v53, &v158);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v156);
      _os_log_impl(&dword_1C1324000, v44, v45, "Client %{private}s is not entitled to request assertion", v46, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v47, -1, -1);
      MEMORY[0x1C3BAD3F4](v46, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v156);
    }

    v64 = sub_1C142584C();
    sub_1C1329AD0(&qword_1ED7932F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FC80], MEMORY[0x1E0C8FC88]);
    swift_allocError();
    v66 = v122;
    v67 = (unsigned int *)MEMORY[0x1E0C8FC68];
    goto LABEL_39;
  }
  sub_1C1425D68();
  v40 = (*(uint64_t (**)(uint64_t *, uint64_t))(v20 + 88))(v24, v19);
  v41 = v40 == *MEMORY[0x1E0D8CCC8];
  v130 = v19;
  v129 = v20;
  if (v41)
  {
    (*(void (**)(uint64_t *, uint64_t))(v20 + 96))(v24, v19);
    swift_bridgeObjectRelease();
    v42 = (uint64_t)v143;
  }
  else
  {
    v42 = (uint64_t)v143;
    if (v40 != *MEMORY[0x1E0D8CCD0])
    {
      result = sub_1C1426F8C();
      __break(1u);
      return result;
    }
    (*(void (**)(uint64_t *, uint64_t))(v20 + 96))(v24, v19);
    v54 = *v24;
    v55 = v24[1];
    v56 = v145[30];
    v57 = v145[31];
    __swift_project_boxed_opaque_existential_1(v145 + 27, v56);
    v58 = (uint64_t)v132;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 16))(v54, v55, v56, v57);
    swift_bridgeObjectRelease();
    v59 = type metadata accessor for Activity();
    LODWORD(v54) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 48))(v58, 1, v59);
    sub_1C132C860(v58, &qword_1ED797560);
    if ((_DWORD)v54 == 1)
    {
      if (qword_1ED7978F0 != -1)
        swift_once();
      v60 = sub_1C1426854();
      __swift_project_value_buffer(v60, (uint64_t)qword_1ED798610);
      v61 = sub_1C1426848();
      v62 = sub_1C1426C68();
      if (os_log_type_enabled(v61, v62))
      {
        v63 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v63 = 0;
        _os_log_impl(&dword_1C1324000, v61, v62, "Assertion targets an activity that does not exist", v63, 2u);
        MEMORY[0x1C3BAD3F4](v63, -1, -1);
      }

      v64 = sub_1C142584C();
      sub_1C1329AD0(&qword_1ED7932F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FC80], MEMORY[0x1E0C8FC88]);
      swift_allocError();
      v66 = v65;
      v67 = (unsigned int *)MEMORY[0x1E0C8FC70];
LABEL_39:
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v64 - 8) + 104))(v66, *v67, v64);
      return swift_willThrow();
    }
  }
  getpid();
  v68 = v37;
  v69 = objc_msgSend(*(id *)(*__swift_project_boxed_opaque_existential_1(v154, v154[3])+ OBJC_IVAR____TtC11SessionCore22AssertionServiceClient_connection), sel_remoteProcess);
  objc_msgSend(v69, sel_pid);

  sub_1C1425CA8();
  v70 = v144;
  sub_1C1425CB4();
  v71 = v70;
  v72 = v68;
  (*(void (**)(char *, uint64_t, uint64_t))(v152 + 16))(v150, v71, v153);
  sub_1C1425D68();
  sub_1C1425D8C();
  v73 = v134;
  sub_1C1425D8C();
  v74 = v148;
  v75 = v140;
  v76 = v135;
  (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v140, v73, v135);
  v77 = (*(uint64_t (**)(char *, uint64_t))(v74 + 88))(v75, v76);
  v78 = v151;
  if (v77 == *MEMORY[0x1E0D8CC70])
    goto LABEL_18;
  if (v77 == *MEMORY[0x1E0D8CC58])
  {
    sub_1C1425E1C();
    v80 = *MEMORY[0x1E0D8CB88];
    v81 = sub_1C1425CFC();
    v82 = *(_QWORD *)(v81 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 104))(v78, v80, v81);
    v83 = v81;
    v72 = v68;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v82 + 56))(v78, 0, 1, v83);
    goto LABEL_22;
  }
  if (v77 == *MEMORY[0x1E0D8CC50])
  {
    v68(v140, v76);
LABEL_18:
    v79 = sub_1C1425CFC();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(v78, 1, 1, v79);
    goto LABEL_22;
  }
  if (v77 == *MEMORY[0x1E0D8CC68] || v77 == *MEMORY[0x1E0D8CC60])
    goto LABEL_18;
  v123 = sub_1C1425CFC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v123 - 8) + 56))(v78, 1, 1, v123);
  v68(v140, v76);
LABEL_22:
  v72(v73, v76);
  v84 = sub_1C1425D44();
  v86 = v85;
  v87 = (int *)v141;
  sub_1C1425D50();
  v88 = v76;
  v89 = sub_1C1425D74();
  v91 = v90;
  v92 = v90 & 1;
  (*(void (**)(uint64_t, char *, uint64_t))(v152 + 32))(v42, v150, v153);
  (*(void (**)(uint64_t, char *, uint64_t))(v148 + 32))(v42 + v87[5], v147, v88);
  sub_1C132A724(v151, v42 + v87[6], &qword_1ED797898);
  v93 = (uint64_t *)(v42 + v87[7]);
  *v93 = v84;
  v93[1] = v86;
  v94 = v42 + v87[9];
  *(_QWORD *)v94 = v89;
  *(_BYTE *)(v94 + 8) = v92;
  (*(void (**)(uint64_t, char *, uint64_t))(v129 + 32))(v42 + v87[10], v149, v130);
  v95 = v136;
  if ((v91 & 1) != 0)
    sub_1C1425114();
  else
    sub_1C142512C();
  v96 = v137;
  sub_1C142518C();
  v97 = sub_1C1425150();
  v98 = *(void (**)(char *, uint64_t))(v138 + 8);
  v99 = v96;
  v100 = v139;
  v98(v99, v139);
  v98(v95, v100);
  if ((v97 & 1) != 0)
  {
    if (qword_1ED7978F0 != -1)
      swift_once();
    v101 = sub_1C1426854();
    __swift_project_value_buffer(v101, (uint64_t)qword_1ED798610);
    v102 = sub_1C1426848();
    v103 = sub_1C1426C68();
    if (os_log_type_enabled(v102, v103))
    {
      v104 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v104 = 0;
      _os_log_impl(&dword_1C1324000, v102, v103, "Assertion has already expired", v104, 2u);
      MEMORY[0x1C3BAD3F4](v104, -1, -1);
    }

    v105 = sub_1C142584C();
    sub_1C1329AD0(&qword_1ED7932F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FC80], MEMORY[0x1E0C8FC88]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v105 - 8) + 104))(v106, *MEMORY[0x1E0C8FC70], v105);
    swift_willThrow();
    sub_1C1339004(v42, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v152 + 8))(v144, v153);
  }
  else
  {
    v108 = v145[19];
    v109 = v145[20];
    __swift_project_boxed_opaque_existential_1(v145 + 16, v108);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v109 + 24))(v42, v108, v109);
    if (qword_1ED7978F0 != -1)
      swift_once();
    v110 = sub_1C1426854();
    __swift_project_value_buffer(v110, (uint64_t)qword_1ED798610);
    sub_1C132E0A8((uint64_t)v154, (uint64_t)v156);
    v111 = v133;
    sub_1C1338F24(v42, v133, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    v112 = sub_1C1426848();
    v113 = sub_1C1426C80();
    if (os_log_type_enabled(v112, (os_log_type_t)v113))
    {
      v114 = swift_slowAlloc();
      v115 = swift_slowAlloc();
      v158 = v115;
      *(_DWORD *)v114 = 136380931;
      v116 = objc_msgSend(*(id *)(*__swift_project_boxed_opaque_existential_1(v156, v157)+ OBJC_IVAR____TtC11SessionCore22AssertionServiceClient_connection), sel_remoteProcess);
      v117 = v146;
      v118 = sub_1C132F33C();
      LODWORD(v154) = v113;
      v153 = v115;
      if (v117)
      {
        v120 = 0x6E776F6E6B6E753CLL;

        v146 = 0;
        v121 = 0xE90000000000003ELL;
      }
      else
      {
        v120 = v118;
        v121 = v119;
        v146 = 0;

      }
      v155 = sub_1C132AD90(v120, v121, &v158);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v156);
      *(_WORD *)(v114 + 12) = 2081;
      v124 = v133;
      sub_1C1338F24(v133, v131, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      v125 = sub_1C1426AA0();
      v155 = sub_1C132AD90(v125, v126, &v158);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      sub_1C1339004(v124, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      _os_log_impl(&dword_1C1324000, v112, (os_log_type_t)v154, "Client %{private}s has acquired assertion: %{private}s", (uint8_t *)v114, 0x16u);
      v127 = v153;
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v127, -1, -1);
      MEMORY[0x1C3BAD3F4](v114, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v156);
      sub_1C1339004(v111, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    }

    sub_1C1360440(v42);
    return sub_1C1339004(v42, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
  }
}

uint64_t sub_1C1360290()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  uint64_t result;
  uint64_t v8;

  v1 = v0;
  v2 = sub_1C1425DF8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x1E0D8CC70])
    return 0xD000000000000032;
  if (v6 == *MEMORY[0x1E0D8CC58])
    return 0xD00000000000002FLL;
  if (v6 == *MEMORY[0x1E0D8CC50])
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 0xD00000000000003BLL;
  }
  else if (v6 == *MEMORY[0x1E0D8CC68])
  {
    return 0xD000000000000044;
  }
  else if (v6 == *MEMORY[0x1E0D8CC60])
  {
    return 0xD000000000000035;
  }
  else
  {
    result = sub_1C1426F8C();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C1360440(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  os_unfair_lock_s *v21;
  uint64_t result;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  os_unfair_lock_s *v26;
  uint64_t v27;

  v2 = v1;
  v4 = sub_1C1425DF8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Assertion();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1 + *(int *)(v8 + 20), v4);
  v9 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v9 == *MEMORY[0x1E0D8CC70])
  {
    v10 = sub_1C1425E40();
    v12 = v11;
    v13 = *(os_unfair_lock_s **)(v2[6] + 16);
    os_unfair_lock_lock(v13);
    sub_1C1363F44(v2, v10, v12);
LABEL_3:
    os_unfair_lock_unlock(v13);
    swift_bridgeObjectRelease();
    return sub_1C135EE08();
  }
  if (v9 == *MEMORY[0x1E0D8CC58])
  {
    v14 = sub_1C1425E40();
    sub_1C1373A70(v14, v15);
LABEL_6:
    swift_bridgeObjectRelease();
    return sub_1C135EE08();
  }
  if (v9 == *MEMORY[0x1E0D8CC50])
  {
    sub_1C1425E40();
    v16 = v2[6];
    v17 = *(os_unfair_lock_s **)(v16 + 16);
    os_unfair_lock_lock(v17);
    sub_1C136455C((uint64_t)v2);
    os_unfair_lock_unlock(v17);
    swift_bridgeObjectRelease();
    v18 = sub_1C1425E40();
    v20 = v19;
    v21 = *(os_unfair_lock_s **)(v16 + 16);
    os_unfair_lock_lock(v21);
    sub_1C1363F44(v2, v18, v20);
    os_unfair_lock_unlock(v21);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return sub_1C135EE08();
  }
  if (v9 == *MEMORY[0x1E0D8CC68])
  {
    v23 = sub_1C1425E40();
    v25 = v24;
    v13 = *(os_unfair_lock_s **)(v2[6] + 16);
    os_unfair_lock_lock(v13);
    sub_1C1364104(v2, v23, v25);
    goto LABEL_3;
  }
  if (v9 == *MEMORY[0x1E0D8CC60])
  {
    sub_1C1425E40();
    v26 = *(os_unfair_lock_s **)(v2[6] + 16);
    os_unfair_lock_lock(v26);
    sub_1C13647C8(v2);
    os_unfair_lock_unlock(v26);
    goto LABEL_6;
  }
  result = sub_1C1426F8C();
  __break(1u);
  return result;
}

uint64_t sub_1C13606FC(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  void *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  id v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  id v52;
  void *v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  char *v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char *v66;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint8_t *v71;
  uint64_t v72;
  id v73;
  void *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  char *v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96[3];
  uint64_t v97;
  uint64_t v98;

  v4 = v2;
  v90 = sub_1C1425CC0();
  v92 = *(_QWORD *)(v90 - 8);
  v7 = MEMORY[0x1E0C80A78](v90);
  v91 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v87 = (char *)&v85 - v9;
  v10 = type metadata accessor for Assertion();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v88 = (uint64_t)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED797768);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v93 = (uint64_t)&v85 - v17;
  v18 = objc_msgSend(*(id *)(*__swift_project_boxed_opaque_existential_1(a2, a2[3])+ OBJC_IVAR____TtC11SessionCore22AssertionServiceClient_connection), sel_remoteProcess);
  v19 = objc_msgSend(v18, sel_pid);

  v94 = a1;
  if (v19 == sub_1C1425C9C())
  {
    v89 = v3;
    v20 = v4[19];
    v21 = v4[20];
    v86 = v4 + 16;
    __swift_project_boxed_opaque_existential_1(v4 + 16, v20);
    v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v20, v21);
    v23 = (char *)v4;
    if (*(_QWORD *)(v22 + 16))
    {
      v24 = sub_1C13B9950(v94);
      v25 = v93;
      v26 = v91;
      if ((v27 & 1) != 0)
      {
        sub_1C1338F24(*(_QWORD *)(v22 + 56) + *(_QWORD *)(v11 + 72) * v24, v93, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
        v28 = 0;
      }
      else
      {
        v28 = 1;
      }
      v39 = v89;
    }
    else
    {
      v28 = 1;
      v39 = v89;
      v25 = v93;
      v26 = v91;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v25, v28, 1, v10);
    swift_bridgeObjectRelease();
    sub_1C132C344(v25, (uint64_t)v16, qword_1ED797768);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v16, 1, v10) == 1)
    {
      sub_1C132C860((uint64_t)v16, qword_1ED797768);
      if (qword_1ED7978F0 != -1)
        swift_once();
      v40 = sub_1C1426854();
      __swift_project_value_buffer(v40, (uint64_t)qword_1ED798610);
      v41 = v92;
      v42 = v90;
      (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v26, v94, v90);
      v43 = sub_1C1426848();
      v44 = sub_1C1426C68();
      if (os_log_type_enabled(v43, v44))
      {
        v45 = (uint8_t *)swift_slowAlloc();
        v46 = swift_slowAlloc();
        v96[0] = v46;
        *(_DWORD *)v45 = 136446210;
        sub_1C1329AD0(&qword_1ED797888, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8CB40], MEMORY[0x1E0D8CB60]);
        v47 = sub_1C1427058();
        v98 = sub_1C132AD90(v47, v48, v96);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v92 + 8))(v26, v42);
        _os_log_impl(&dword_1C1324000, v43, v44, "Invalidated assertion does not exist: %{public}s", v45, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v46, -1, -1);
        MEMORY[0x1C3BAD3F4](v45, -1, -1);

        v49 = v93;
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v41 + 8))(v26, v42);
        v49 = v25;
      }
      return sub_1C132C860(v49, qword_1ED797768);
    }
    else
    {
      v50 = v88;
      sub_1C1339140((uint64_t)v16, v88, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      v51 = __swift_project_boxed_opaque_existential_1(a2, a2[3]);
      sub_1C1360290();
      v52 = objc_msgSend(*(id *)(*v51 + OBJC_IVAR____TtC11SessionCore22AssertionServiceClient_connection), sel_remoteProcess);
      v53 = (void *)sub_1C1426A7C();
      v54 = objc_msgSend(v52, sel_hasEntitlement_, v53);
      swift_bridgeObjectRelease();

      if (v54)
      {
        v91 = v23;
        if (qword_1ED7978F0 != -1)
          swift_once();
        v55 = sub_1C1426854();
        __swift_project_value_buffer(v55, (uint64_t)qword_1ED798610);
        v56 = v92;
        v57 = v87;
        v58 = v90;
        (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v87, v94, v90);
        v59 = sub_1C1426848();
        v60 = sub_1C1426C80();
        if (os_log_type_enabled(v59, v60))
        {
          v61 = v57;
          v62 = (uint8_t *)swift_slowAlloc();
          v63 = swift_slowAlloc();
          v96[0] = v63;
          *(_DWORD *)v62 = 136446210;
          sub_1C1329AD0(&qword_1ED797888, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8CB40], MEMORY[0x1E0D8CB60]);
          v64 = sub_1C1427058();
          v98 = sub_1C132AD90(v64, v65, v96);
          v25 = v93;
          sub_1C1426DB8();
          swift_bridgeObjectRelease();
          v66 = v61;
          v50 = v88;
          (*(void (**)(char *, uint64_t))(v92 + 8))(v66, v58);
          _os_log_impl(&dword_1C1324000, v59, v60, "Invalidated: %{public}s", v62, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3BAD3F4](v63, -1, -1);
          MEMORY[0x1C3BAD3F4](v62, -1, -1);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v56 + 8))(v57, v58);
        }

        v81 = *((_QWORD *)v91 + 19);
        v82 = *((_QWORD *)v91 + 20);
        __swift_project_boxed_opaque_existential_1(v86, v81);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 32))(v94, v81, v82);
        sub_1C1360440(v50);
      }
      else
      {
        if (qword_1ED7978F0 != -1)
          swift_once();
        v68 = sub_1C1426854();
        __swift_project_value_buffer(v68, (uint64_t)qword_1ED798610);
        sub_1C132E0A8((uint64_t)a2, (uint64_t)v96);
        v69 = sub_1C1426848();
        v70 = sub_1C1426C68();
        if (os_log_type_enabled(v69, v70))
        {
          v71 = (uint8_t *)swift_slowAlloc();
          v72 = swift_slowAlloc();
          v98 = v72;
          *(_DWORD *)v71 = 136380675;
          v73 = objc_msgSend(*(id *)(*__swift_project_boxed_opaque_existential_1(v96, v97)+ OBJC_IVAR____TtC11SessionCore22AssertionServiceClient_connection), sel_remoteProcess);
          v74 = v39;
          v75 = sub_1C132F33C();
          if (v39)
          {
            v77 = 0x6E776F6E6B6E753CLL;

            v78 = 0xE90000000000003ELL;
          }
          else
          {
            v77 = v75;
            v78 = v76;

          }
          v95 = sub_1C132AD90(v77, v78, &v98);
          sub_1C1426DB8();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v96);
          _os_log_impl(&dword_1C1324000, v69, v70, "Client %{private}s is not entitled to invalidate assertion", v71, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3BAD3F4](v72, -1, -1);
          MEMORY[0x1C3BAD3F4](v71, -1, -1);

          v25 = v93;
        }
        else
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v96);

        }
        v83 = sub_1C142584C();
        sub_1C1329AD0(&qword_1ED7932F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FC80], MEMORY[0x1E0C8FC88]);
        swift_allocError();
        (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v83 - 8) + 104))(v84, *MEMORY[0x1E0C8FC68], v83);
        swift_willThrow();
      }
      sub_1C1339004(v50, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      return sub_1C132C860(v25, qword_1ED797768);
    }
  }
  else
  {
    if (qword_1ED7978F0 != -1)
      swift_once();
    v29 = sub_1C1426854();
    __swift_project_value_buffer(v29, (uint64_t)qword_1ED798610);
    sub_1C132E0A8((uint64_t)a2, (uint64_t)v96);
    v30 = sub_1C1426848();
    v31 = sub_1C1426C68();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = swift_slowAlloc();
      v98 = v33;
      *(_DWORD *)v32 = 136380675;
      v34 = objc_msgSend(*(id *)(*__swift_project_boxed_opaque_existential_1(v96, v97)+ OBJC_IVAR____TtC11SessionCore22AssertionServiceClient_connection), sel_remoteProcess);
      v35 = sub_1C132F33C();
      if (v3)
      {
        v37 = 0x6E776F6E6B6E753CLL;

        v38 = 0xE90000000000003ELL;
      }
      else
      {
        v37 = v35;
        v38 = v36;

      }
      v95 = sub_1C132AD90(v37, v38, &v98);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v96);
      _os_log_impl(&dword_1C1324000, v30, v31, "Client %{private}s is not permitted to invalidate another client's assertion", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v33, -1, -1);
      MEMORY[0x1C3BAD3F4](v32, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v96);
    }

    v79 = sub_1C142584C();
    sub_1C1329AD0(&qword_1ED7932F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FC80], MEMORY[0x1E0C8FC88]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v79 - 8) + 104))(v80, *MEMORY[0x1E0C8FC68], v79);
    return swift_willThrow();
  }
}

uint64_t sub_1C1361264(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  unint64_t v43;
  int64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  os_unfair_lock_s *v50;
  unsigned int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  int64_t v55;
  uint64_t v56;
  int64_t v57;
  uint64_t v58;
  uint64_t i;
  _QWORD *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int64_t v66;
  uint64_t v67;
  _QWORD *v68;
  __int128 v69;
  uint64_t v70;
  _QWORD v71[5];
  _OWORD v72[2];
  uint64_t v73;

  v4 = v3;
  v65 = a3;
  v67 = a2;
  v68 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797898);
  MEMORY[0x1E0C80A78](v5);
  v64 = (uint64_t)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_1C1425DC8();
  v62 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C1425CC0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v61 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v55 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797870);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v55 - v19;
  v22 = v3[19];
  v21 = v3[20];
  v60 = v3 + 16;
  __swift_project_boxed_opaque_existential_1(v3 + 16, v22);
  v23 = v22;
  v24 = (uint64_t)v8;
  v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v23, v21);
  v26 = v67;
  swift_bridgeObjectRetain();
  v27 = sub_1C1374DA0(v25, (uint64_t)v68, v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v28 = *(_QWORD *)(v27 + 64);
  v56 = v27 + 64;
  v58 = v27;
  v29 = 1 << *(_BYTE *)(v27 + 32);
  v30 = -1;
  if (v29 < 64)
    v30 = ~(-1 << v29);
  v31 = v30 & v28;
  v68 = v4;
  result = swift_beginAccess();
  v66 = 0;
  v57 = (unint64_t)(v29 + 63) >> 6;
  v55 = v57 - 1;
  v67 = v24;
  for (i = v9; ; result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v14, i))
  {
    if (v31)
    {
      v36 = __clz(__rbit64(v31));
      v31 &= v31 - 1;
      v37 = v36 | (v66 << 6);
LABEL_8:
      v38 = v58;
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v18, *(_QWORD *)(v58 + 48) + *(_QWORD *)(v10 + 72) * v37, v9);
      v39 = *(_QWORD *)(v38 + 56);
      v40 = v39 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for Assertion() - 8) + 72) * v37;
      v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797868);
      sub_1C1338F24(v40, (uint64_t)&v18[*(int *)(v41 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v18, 0, 1, v41);
      goto LABEL_27;
    }
    v42 = v66 + 1;
    if (__OFADD__(v66, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v42 < v57)
    {
      v43 = *(_QWORD *)(v56 + 8 * v42);
      if (v43)
        goto LABEL_12;
      v44 = v66 + 2;
      ++v66;
      if (v42 + 1 < v57)
      {
        v43 = *(_QWORD *)(v56 + 8 * v44);
        if (v43)
          goto LABEL_15;
        v66 = v42 + 1;
        if (v42 + 2 < v57)
        {
          v43 = *(_QWORD *)(v56 + 8 * (v42 + 2));
          if (v43)
          {
            v42 += 2;
            goto LABEL_12;
          }
          v44 = v42 + 3;
          v66 = v42 + 2;
          if (v42 + 3 < v57)
            break;
        }
      }
    }
LABEL_26:
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797868);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v18, 1, 1, v45);
    v31 = 0;
LABEL_27:
    sub_1C132A724((uint64_t)v18, (uint64_t)v20, &qword_1ED797870);
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797868);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 48))(v20, 1, v46) == 1)
      return swift_release();
    v47 = (uint64_t)&v20[*(int *)(v46 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v20, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v61, v14, v9);
    v48 = type metadata accessor for Assertion();
    sub_1C132C344(v47 + *(int *)(v48 + 24), v64, &qword_1ED797898);
    sub_1C1339004(v47, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    sub_1C1425DA4();
    v49 = v68;
    v50 = *(os_unfair_lock_s **)(v68[6] + 16);
    os_unfair_lock_lock(v50);
    v51 = sub_1C1425C9C();
    v52 = v49[7];
    if (*(_QWORD *)(v52 + 16) && (v53 = sub_1C1327378(v51), (v54 & 1) != 0))
    {
      sub_1C132E0A8(*(_QWORD *)(v52 + 56) + 40 * v53, (uint64_t)v72);
    }
    else
    {
      v73 = 0;
      memset(v72, 0, sizeof(v72));
    }
    os_unfair_lock_unlock(v50);
    sub_1C132C344((uint64_t)v72, (uint64_t)&v69, &qword_1ED792CA8);
    if (v70)
    {
      sub_1C1339184(&v69, (uint64_t)v71);
      __swift_project_boxed_opaque_existential_1(v71, v71[3]);
      v33 = v67;
      sub_1C1419434(v67);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
    }
    else
    {
      sub_1C132C860((uint64_t)&v69, &qword_1ED792CA8);
      v33 = v67;
    }
    v35 = v68[19];
    v34 = v68[20];
    __swift_project_boxed_opaque_existential_1(v60, v35);
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v14, v35, v34);
    sub_1C132C860((uint64_t)v72, &qword_1ED792CA8);
    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v33, v63);
    v9 = i;
  }
  v43 = *(_QWORD *)(v56 + 8 * v44);
  if (v43)
  {
LABEL_15:
    v42 = v44;
LABEL_12:
    v31 = (v43 - 1) & v43;
    v37 = __clz(__rbit64(v43)) + (v42 << 6);
    v66 = v42;
    goto LABEL_8;
  }
  while (1)
  {
    v42 = v44 + 1;
    if (__OFADD__(v44, 1))
      break;
    if (v42 >= v57)
    {
      v66 = v55;
      goto LABEL_26;
    }
    v43 = *(_QWORD *)(v56 + 8 * v42);
    ++v44;
    if (v43)
      goto LABEL_12;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1C13618EC@<X0>(NSObject *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BOOL4 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  id v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  os_log_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  NSObject *v85;
  unint64_t v86;
  unint64_t v87;
  char v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t, uint64_t);
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(uint64_t, uint64_t);
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  __int128 v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  id v121;
  void (*v122)(char *, uint64_t);
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void *v127;
  char v128;
  _QWORD *v129;
  uint64_t v130;
  char *v131;
  void (*v132)(uint64_t, uint64_t);
  uint64_t v133;
  uint64_t v134;
  id v135;
  void *v136;
  unsigned int v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  char *v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  id v149;
  char *v150;
  uint64_t v151;
  NSObject *v152;
  os_log_type_t v153;
  uint8_t *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  unint64_t v159;
  os_log_type_t v160;
  uint64_t v161;
  char *v162;
  NSObject *v163;
  os_log_type_t v164;
  uint8_t *v165;
  char *v166;
  uint64_t v167;
  unint64_t v168;
  unint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  NSObject *v173;
  int v174;
  uint8_t *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  unint64_t v180;
  os_log_type_t v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  void (*v187)(char *, char *, uint64_t);
  char *v188;
  NSObject *v189;
  os_log_type_t v190;
  int v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  unint64_t v195;
  unint64_t v196;
  char *v197;
  uint64_t v198;
  unint64_t v199;
  char *v200;
  void (*v201)(uint64_t, uint64_t);
  os_log_t v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v210;
  __int128 v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  unint64_t v216;
  unint64_t v217;
  BOOL v218;
  uint64_t v219;
  unint64_t v220;
  uint64_t v221;
  void (*v222)(char *, unint64_t, uint64_t);
  char *v223;
  uint64_t v224;
  NSObject *v225;
  os_log_type_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  unint64_t v230;
  uint64_t v231;
  uint64_t v232;
  id v233;
  uint64_t v235;
  uint64_t v236;
  __int128 v237;
  uint64_t v238;
  char *v239;
  char *v240;
  uint64_t v241;
  char *v242;
  char *v243;
  char *v244;
  _QWORD *v245;
  uint64_t v246;
  char *v247;
  char *v248;
  char *v249;
  char *v250;
  char *v251;
  char *v252;
  char *v253;
  char *v254;
  uint64_t v255;
  char *v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  char *v261;
  char *v262;
  uint64_t v263;
  os_log_t v264;
  unint64_t v265;
  __int128 v266;
  NSObject *v267;
  __int128 v268;
  char *v269;
  void (*v270)(uint64_t, uint64_t);
  char *v271;
  uint64_t v272;
  NSObject *v273;
  uint64_t v274;
  uint64_t v275;
  __int128 v276;
  unint64_t v277;
  int64_t v278;
  unint64_t v279;
  char *v280;
  uint64_t v281;
  _QWORD *v282;
  uint64_t v283;
  _QWORD *v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  id v288;
  uint64_t v289;
  uint64_t v290;
  _QWORD v291[5];
  NSObject *v292;

  v238 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797890);
  MEMORY[0x1E0C80A78](v5);
  v241 = (uint64_t)&v235 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C1425E4C();
  MEMORY[0x1E0C80A78](v7);
  v252 = (char *)&v235 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C14251B0();
  MEMORY[0x1E0C80A78](v9);
  v251 = (char *)&v235 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v258 = sub_1C1425DF8();
  v257 = *(_QWORD *)(v258 - 8);
  MEMORY[0x1E0C80A78](v258);
  v256 = (char *)&v235 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v260 = sub_1C1425D98();
  v255 = *(_QWORD *)(v260 - 8);
  v12 = MEMORY[0x1E0C80A78](v260);
  v250 = (char *)&v235 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v249 = (char *)&v235 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v248 = (char *)&v235 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v247 = (char *)&v235 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v254 = (char *)&v235 - v21;
  MEMORY[0x1E0C80A78](v20);
  *(_QWORD *)&v276 = (char *)&v235 - v22;
  v259 = sub_1C1425DEC();
  v274 = *(_QWORD *)(v259 - 8);
  v23 = MEMORY[0x1E0C80A78](v259);
  v244 = (char *)&v235 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v23);
  v261 = (char *)&v235 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v253 = (char *)&v235 - v28;
  v29 = MEMORY[0x1E0C80A78](v27);
  v240 = (char *)&v235 - v30;
  MEMORY[0x1E0C80A78](v29);
  v32 = (uint64_t)&v235 - v31;
  v272 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797868);
  v33 = MEMORY[0x1E0C80A78](v272);
  v271 = (char *)&v235 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x1E0C80A78](v33);
  v270 = (void (*)(uint64_t, uint64_t))((char *)&v235 - v36);
  v37 = MEMORY[0x1E0C80A78](v35);
  v269 = (char *)&v235 - v38;
  MEMORY[0x1E0C80A78](v37);
  *(_QWORD *)&v268 = (char *)&v235 - v39;
  v289 = sub_1C1425CC0();
  v287 = *(_QWORD *)(v289 - 8);
  v40 = MEMORY[0x1E0C80A78](v289);
  v42 = (uint64_t)&v235 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = MEMORY[0x1E0C80A78](v40);
  v283 = (uint64_t)&v235 - v44;
  v45 = MEMORY[0x1E0C80A78](v43);
  v280 = (char *)&v235 - v46;
  v47 = MEMORY[0x1E0C80A78](v45);
  v239 = (char *)&v235 - v48;
  v49 = MEMORY[0x1E0C80A78](v47);
  v242 = (char *)&v235 - v50;
  v51 = MEMORY[0x1E0C80A78](v49);
  v246 = (uint64_t)&v235 - v52;
  v53 = MEMORY[0x1E0C80A78](v51);
  v243 = (char *)&v235 - v54;
  v55 = MEMORY[0x1E0C80A78](v53);
  v262 = (char *)&v235 - v56;
  MEMORY[0x1E0C80A78](v55);
  v267 = ((char *)&v235 - v57);
  v58 = sub_1C1425CF0();
  v59 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v61 = (unint64_t)&v235 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED7978F0 != -1)
    goto LABEL_94;
  while (1)
  {
    v62 = sub_1C1426854();
    v63 = __swift_project_value_buffer(v62, (uint64_t)qword_1ED798610);
    sub_1C132E0A8((uint64_t)a2, (uint64_t)v291);
    (*(void (**)(unint64_t, NSObject *, unint64_t))(v59 + 16))(v61, a1, v58);
    v285 = v63;
    v64 = v59;
    v59 = sub_1C1426848();
    LODWORD(v286) = sub_1C1426C80();
    v65 = os_log_type_enabled((os_log_t)v59, (os_log_type_t)v286);
    v281 = v42;
    v282 = a2;
    v275 = v32;
    v273 = a1;
    v66 = v276;
    if (v65)
    {
      v278 = v59;
      v279 = v64;
      v67 = swift_slowAlloc();
      v68 = swift_slowAlloc();
      v292 = v68;
      *(_DWORD *)v67 = 136380931;
      v69 = objc_msgSend(*(id *)(*__swift_project_boxed_opaque_existential_1(v291, v291[3])+ OBJC_IVAR____TtC11SessionCore22AssertionServiceClient_connection), (SEL)0x1F2D56039);
      v70 = v288;
      v71 = sub_1C132F33C();
      if (v70)
      {
        v59 = v68;

        v288 = 0;
        v73 = 0xE90000000000003ELL;
        v74 = 0x6E776F6E6B6E753CLL;
      }
      else
      {
        v74 = v71;
        v73 = v72;
        v59 = v68;
        v288 = 0;

      }
      v76 = v61;
      v290 = sub_1C132AD90(v74, v73, (uint64_t *)&v292);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v291);
      *(_WORD *)(v67 + 12) = 2082;
      sub_1C1425CD8();
      v77 = MEMORY[0x1C3BAC878]();
      v79 = v78;
      swift_bridgeObjectRelease();
      v290 = sub_1C132AD90(v77, v79, (uint64_t *)&v292);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, unint64_t))(v279 + 8))(v76, v58);
      v80 = (os_log_t)v278;
      _os_log_impl(&dword_1C1324000, (os_log_t)v278, (os_log_type_t)v286, "Client %{private}s reconnecting assertions: %{public}s", (uint8_t *)v67, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v59, -1, -1);
      MEMORY[0x1C3BAD3F4](v67, -1, -1);

      v75 = v282;
      v66 = v276;
      v32 = v275;
      a1 = v273;
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v291);
      (*(void (**)(unint64_t, unint64_t))(v64 + 8))(v61, v58);

      v75 = a2;
    }
    v81 = v284[19];
    v61 = v284[20];
    v245 = v284 + 16;
    __swift_project_boxed_opaque_existential_1(v284 + 16, v81);
    v82 = (*(uint64_t (**)(uint64_t, unint64_t))(v61 + 8))(v81, v61);
    MEMORY[0x1E0C80A78](v82);
    *(&v235 - 2) = (uint64_t)v75;
    v83 = v288;
    v58 = sub_1C1330B68((uint64_t)sub_1C1375A44, (uint64_t)(&v235 - 4), v82, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t, uint64_t))sub_1C136D3EC);
    v288 = v83;
    swift_bridgeObjectRelease();
    a2 = *(_QWORD **)(v58 + 16);
    v84 = v289;
    if (!a2)
      break;
    v291[0] = MEMORY[0x1E0DEE9D8];
    sub_1C13369F4(0, (int64_t)a2, 0);
    v42 = sub_1C135833C(v58);
    v86 = 0;
    v87 = v58 + 64;
    v88 = *(_BYTE *)(v58 + 32);
    *(_QWORD *)&v237 = v58 + 88;
    v32 = 1;
    *(_QWORD *)&v266 = v58;
    v263 = (uint64_t)a2;
    v264 = v85;
    v265 = v58 + 64;
    while ((v42 & 0x8000000000000000) == 0 && v42 < 1 << v88)
    {
      if ((*(_QWORD *)(v87 + 8 * ((unint64_t)v42 >> 6)) & (1 << v42)) == 0)
        goto LABEL_87;
      if (*(_DWORD *)(v58 + 36) != (_DWORD)v85)
        goto LABEL_88;
      v278 = 1 << v42;
      v279 = (unint64_t)v42 >> 6;
      v277 = v86;
      v90 = v272;
      v91 = v268;
      v92 = v268 + *(int *)(v272 + 48);
      v93 = *(_QWORD *)(v58 + 48);
      v94 = v287;
      v286 = *(_QWORD *)(v287 + 72);
      v95 = *(void (**)(char *, uint64_t, uint64_t))(v287 + 16);
      v96 = v58;
      v97 = v289;
      v95((char *)v268, v93 + v286 * v42, v289);
      v98 = *(_QWORD *)(v96 + 56);
      v99 = type metadata accessor for Assertion();
      sub_1C1338F24(v98 + *(_QWORD *)(*(_QWORD *)(v99 - 8) + 72) * v42, v92, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      v100 = (uint64_t)v269;
      v95(v269, v91, v97);
      sub_1C1338F24(v92, v100 + *(int *)(v90 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      v101 = v270;
      sub_1C132A724(v100, (uint64_t)v270, &qword_1ED797868);
      sub_1C132C860(v91, &qword_1ED797868);
      v102 = *(int *)(v90 + 48);
      v103 = v271;
      v104 = (uint64_t)&v271[v102];
      v105 = (uint64_t)v101 + v102;
      v95(v271, (uint64_t)v101, v97);
      sub_1C1338F24(v105, v104, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      v59 = *(_QWORD *)(v94 + 32);
      a1 = v267;
      ((void (*)(NSObject *, char *, uint64_t))v59)(v267, v103, v97);
      sub_1C1339004(v104, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      sub_1C132C860((uint64_t)v101, &qword_1ED797868);
      v106 = v291[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C13369F4(0, *(_QWORD *)(v106 + 16) + 1, 1);
        v106 = v291[0];
      }
      v32 = 1;
      v61 = *(_QWORD *)(v106 + 16);
      v107 = *(_QWORD *)(v106 + 24);
      a2 = (_QWORD *)(v61 + 1);
      v58 = v266;
      if (v61 >= v107 >> 1)
      {
        sub_1C13369F4(v107 > 1, v61 + 1, 1);
        v106 = v291[0];
      }
      *(_QWORD *)(v106 + 16) = a2;
      ((void (*)(unint64_t, NSObject *, uint64_t))v59)(v106+ ((*(unsigned __int8 *)(v287 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v287 + 80))+ v61 * v286, a1, v289);
      v291[0] = v106;
      v88 = *(_BYTE *)(v58 + 32);
      v89 = 1 << v88;
      if (v42 >= 1 << v88)
        goto LABEL_89;
      v87 = v265;
      v108 = v279;
      v109 = *(_QWORD *)(v265 + 8 * v279);
      if ((v109 & v278) == 0)
        goto LABEL_90;
      LODWORD(v85) = (_DWORD)v264;
      if (*(_DWORD *)(v58 + 36) != (_DWORD)v264)
        goto LABEL_91;
      v110 = v109 & (-2 << (v42 & 0x3F));
      if (!v110)
      {
        v111 = v279 + 1;
        v112 = (v89 + 63) >> 6;
        v84 = v289;
        a2 = (_QWORD *)v263;
        if (v279 + 1 < v112)
        {
          v113 = *(_QWORD *)(v265 + 8 * v111);
          if (v113)
            goto LABEL_26;
          v111 = v279 + 2;
          if (v279 + 2 < v112)
          {
            v113 = *(_QWORD *)(v265 + 8 * v111);
            if (v113)
            {
LABEL_26:
              v89 = __clz(__rbit64(v113)) + (v111 << 6);
            }
            else
            {
              while (v112 - 3 != v108)
              {
                v113 = *(_QWORD *)(v237 + 8 * v108++);
                if (v113)
                {
                  v111 = v108 + 2;
                  goto LABEL_26;
                }
              }
            }
          }
        }
        a1 = v273;
        goto LABEL_11;
      }
      v89 = __clz(__rbit64(v110)) | v42 & 0xFFFFFFFFFFFFFFC0;
      v84 = v289;
      a1 = v273;
      a2 = (_QWORD *)v263;
LABEL_11:
      v86 = v277 + 1;
      v42 = v89;
      if ((_QWORD *)(v277 + 1) == a2)
      {
        swift_release();
        v114 = v276;
        v32 = v275;
        goto LABEL_35;
      }
    }
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    swift_once();
  }
  v114 = v66;
  swift_release();
  v106 = MEMORY[0x1E0DEE9D8];
LABEL_35:
  v61 = sub_1C13751F8(v106, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8CB40], &qword_1ED797878, MEMORY[0x1E0D8CB50], (void (*)(char *, char *))sub_1C134FD60);
  swift_bridgeObjectRelease();
  v291[0] = v61;
  v115 = sub_1C1425CD8();
  v117 = *(_QWORD *)(v115 + 16);
  a2 = &loc_1C1427000;
  v42 = v283;
  if (v117)
  {
    v118 = (*(unsigned __int8 *)(v274 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v274 + 80);
    v235 = v115;
    v119 = v115 + v118;
    v277 = *(_QWORD *)(v274 + 72);
    v273 = v291;
    v267 = MEMORY[0x1E0DEE9E0];
    a1 = *(NSObject **)(v274 + 16);
    *(_QWORD *)&v116 = 136446466;
    v237 = v116;
    v236 = MEMORY[0x1E0DEE9B8] + 8;
    *(_QWORD *)&v116 = 136446210;
    v268 = v116;
    *(_QWORD *)&v116 = 136380675;
    v266 = v116;
    v120 = v259;
    v121 = v288;
    v278 = (int64_t)a1;
    while (1)
    {
      v279 = v117;
      v286 = v119;
      v125 = ((uint64_t (*)(uint64_t))a1)(v32);
      v126 = v291[0];
      MEMORY[0x1E0C80A78](v125);
      *(&v235 - 2) = v32;
      swift_bridgeObjectRetain();
      v127 = v121;
      v128 = sub_1C1363CC4((uint64_t (*)(char *))sub_1C1375A60, (char)(&v235 - 4), v126);
      v288 = v127;
      swift_bridgeObjectRelease();
      if ((v128 & 1) != 0)
      {
        v129 = __swift_project_boxed_opaque_existential_1(v282, v282[3]);
        v130 = v114;
        sub_1C1425DE0();
        v131 = v256;
        sub_1C1425D8C();
        v132 = *(void (**)(uint64_t, uint64_t))(v255 + 8);
        v133 = v32;
        v134 = v260;
        v132(v130, v260);
        sub_1C1360290();
        (*(void (**)(char *, uint64_t))(v257 + 8))(v131, v258);
        v135 = objc_msgSend(*(id *)(*v129 + OBJC_IVAR____TtC11SessionCore22AssertionServiceClient_connection), sel_remoteProcess, v235, v236);
        v136 = (void *)sub_1C1426A7C();
        v137 = objc_msgSend(v135, sel_hasEntitlement_, v136);
        swift_bridgeObjectRelease();

        if (v137)
        {
          v138 = v284[19];
          v139 = v284[20];
          __swift_project_boxed_opaque_existential_1(v245, v138);
          v140 = v262;
          sub_1C1425DD4();
          (*(void (**)(char *, uint64_t, uint64_t))(v139 + 32))(v140, v138, v139);
          v269 = *(char **)(v287 + 8);
          ((void (*)(char *, uint64_t))v269)(v140, v289);
          v141 = v276;
          sub_1C1425DE0();
          sub_1C1425D8C();
          v132(v141, v134);
          v142 = v247;
          sub_1C1425DE0();
          v272 = sub_1C1425D44();
          v271 = v143;
          v132((uint64_t)v142, v134);
          v144 = v248;
          sub_1C1425DE0();
          sub_1C1425D50();
          v132((uint64_t)v144, v134);
          v145 = v249;
          sub_1C1425DE0();
          sub_1C1425D68();
          v132((uint64_t)v145, v134);
          v146 = v250;
          sub_1C1425DE0();
          sub_1C1425D74();
          v132((uint64_t)v146, v134);
          v147 = (uint64_t)v254;
          sub_1C1425D80();
          v148 = v246;
          v149 = v288;
          sub_1C135F2F0(v147, v282, v246);
          v288 = v149;
          v270 = v132;
          if (v149)
          {
            v150 = v244;
            v151 = v259;
            ((void (*)(char *, uint64_t, uint64_t))v278)(v244, v133, v259);
            v152 = sub_1C1426848();
            v153 = sub_1C1426C68();
            if (os_log_type_enabled(v152, v153))
            {
              v154 = (uint8_t *)swift_slowAlloc();
              v272 = swift_slowAlloc();
              v292 = v272;
              *(_DWORD *)v154 = v268;
              v271 = (char *)(v154 + 4);
              v155 = v262;
              sub_1C1425DD4();
              sub_1C1329AD0(&qword_1ED797888, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8CB40], MEMORY[0x1E0D8CB60]);
              v156 = v289;
              v157 = sub_1C1427058();
              v159 = v158;
              ((void (*)(char *, uint64_t))v269)(v155, v156);
              v290 = sub_1C132AD90(v157, v159, (uint64_t *)&v292);
              sub_1C1426DB8();
              swift_bridgeObjectRelease();
              v122 = *(void (**)(char *, uint64_t))(v274 + 8);
              v122(v244, v151);
              v160 = v153;
              v84 = v156;
              _os_log_impl(&dword_1C1324000, v152, v160, "Failed tried to reconnect assertion: %{public}s", v154, 0xCu);
              v161 = v272;
              swift_arrayDestroy();
              MEMORY[0x1C3BAD3F4](v161, -1, -1);
              MEMORY[0x1C3BAD3F4](v154, -1, -1);

              v270((uint64_t)v254, v260);
              v121 = 0;
            }
            else
            {

              v122 = *(void (**)(char *, uint64_t))(v274 + 8);
              v122(v150, v151);
              v270((uint64_t)v254, v260);
              v121 = 0;
              v84 = v289;
            }
            v42 = v283;
            v120 = v151;
            goto LABEL_39;
          }
          v183 = v287;
          v184 = v243;
          v84 = v289;
          (*(void (**)(char *, uint64_t, uint64_t))(v287 + 32))(v243, v148, v289);
          v185 = v240;
          v186 = v259;
          ((void (*)(char *, uint64_t, uint64_t))v278)(v240, v133, v259);
          v187 = *(void (**)(char *, char *, uint64_t))(v183 + 16);
          v188 = v242;
          v272 = (uint64_t)v187;
          v187(v242, v184, v84);
          v189 = sub_1C1426848();
          v190 = sub_1C1426C80();
          v191 = v190;
          if (os_log_type_enabled(v189, v190))
          {
            v192 = swift_slowAlloc();
            v271 = (char *)swift_slowAlloc();
            v292 = v271;
            *(_DWORD *)v192 = v237;
            v264 = v189;
            v193 = v262;
            LODWORD(v265) = v191;
            sub_1C1425DD4();
            v263 = sub_1C1329AD0(&qword_1ED797888, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8CB40], MEMORY[0x1E0D8CB60]);
            v194 = sub_1C1427058();
            v196 = v195;
            ((void (*)(char *, uint64_t))v269)(v193, v84);
            v290 = sub_1C132AD90(v194, v196, (uint64_t *)&v292);
            sub_1C1426DB8();
            swift_bridgeObjectRelease();
            v122 = *(void (**)(char *, uint64_t))(v274 + 8);
            v122(v185, v186);
            *(_WORD *)(v192 + 12) = 2082;
            v197 = v242;
            v198 = sub_1C1427058();
            v290 = sub_1C132AD90(v198, v199, (uint64_t *)&v292);
            v200 = v193;
            sub_1C1426DB8();
            swift_bridgeObjectRelease();
            v201 = (void (*)(uint64_t, uint64_t))v269;
            ((void (*)(char *, uint64_t))v269)(v197, v84);
            v202 = v264;
            _os_log_impl(&dword_1C1324000, v264, (os_log_type_t)v265, "Mapped %{public}s to %{public}s", (uint8_t *)v192, 0x16u);
            v203 = v271;
            swift_arrayDestroy();
            MEMORY[0x1C3BAD3F4](v203, -1, -1);
            MEMORY[0x1C3BAD3F4](v192, -1, -1);

            v204 = v260;
          }
          else
          {
            v122 = *(void (**)(char *, uint64_t))(v274 + 8);
            v122(v185, v186);
            v201 = (void (*)(uint64_t, uint64_t))v269;
            ((void (*)(char *, uint64_t))v269)(v188, v84);

            v204 = v260;
            v200 = v262;
          }
          sub_1C1425DD4();
          v205 = (uint64_t)v200;
          v206 = (uint64_t)v239;
          v207 = v243;
          ((void (*)(char *, char *, uint64_t))v272)(v239, v243, v84);
          v208 = (uint64_t)v267;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v292 = v208;
          sub_1C13C28B0(v206, v205, isUniquelyReferenced_nonNull_native);
          v267 = v292;
          swift_bridgeObjectRelease();
          v201(v205, v84);
          sub_1C1425DD4();
          v210 = v241;
          sub_1C1354118(v205, v241);
          v201(v205, v84);
          sub_1C132C860(v210, &qword_1ED797890);
          v201((uint64_t)v207, v84);
          v270((uint64_t)v254, v204);
          v42 = v283;
          v120 = v259;
        }
        else
        {
          v171 = v253;
          v172 = v259;
          ((void (*)(char *, uint64_t, uint64_t))v278)(v253, v133, v259);
          v173 = sub_1C1426848();
          v174 = sub_1C1426C68();
          if (os_log_type_enabled(v173, (os_log_type_t)v174))
          {
            v175 = (uint8_t *)swift_slowAlloc();
            v272 = swift_slowAlloc();
            v292 = v272;
            *(_DWORD *)v175 = v266;
            v271 = (char *)(v175 + 4);
            v176 = v262;
            sub_1C1425DD4();
            sub_1C1329AD0(&qword_1ED797888, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8CB40], MEMORY[0x1E0D8CB60]);
            v177 = v289;
            v178 = sub_1C1427058();
            v180 = v179;
            (*(void (**)(char *, uint64_t))(v287 + 8))(v176, v177);
            v290 = sub_1C132AD90(v178, v180, (uint64_t *)&v292);
            sub_1C1426DB8();
            v42 = v283;
            swift_bridgeObjectRelease();
            v122 = *(void (**)(char *, uint64_t))(v274 + 8);
            v122(v253, v172);
            v181 = v174;
            v84 = v177;
            _os_log_impl(&dword_1C1324000, v173, v181, "Process is not entitled to reconnect assertion: %{private}s", v175, 0xCu);
            v182 = v272;
            swift_arrayDestroy();
            MEMORY[0x1C3BAD3F4](v182, -1, -1);
            MEMORY[0x1C3BAD3F4](v175, -1, -1);

          }
          else
          {
            v122 = *(void (**)(char *, uint64_t))(v274 + 8);
            v122(v171, v172);

            v84 = v289;
          }
          v120 = v172;
        }
      }
      else
      {
        v162 = v261;
        ((void (*)(char *, uint64_t, uint64_t))a1)(v261, v32, v120);
        v163 = sub_1C1426848();
        v164 = sub_1C1426C68();
        if (os_log_type_enabled(v163, v164))
        {
          v165 = (uint8_t *)swift_slowAlloc();
          v272 = swift_slowAlloc();
          v292 = v272;
          *(_DWORD *)v165 = v268;
          v271 = (char *)(v165 + 4);
          v166 = v262;
          sub_1C1425DD4();
          sub_1C1329AD0(&qword_1ED797888, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8CB40], MEMORY[0x1E0D8CB60]);
          v84 = v289;
          v167 = sub_1C1427058();
          v169 = v168;
          (*(void (**)(char *, uint64_t))(v287 + 8))(v166, v84);
          v290 = sub_1C132AD90(v167, v169, (uint64_t *)&v292);
          sub_1C1426DB8();
          swift_bridgeObjectRelease();
          v122 = *(void (**)(char *, uint64_t))(v274 + 8);
          v122(v261, v120);
          _os_log_impl(&dword_1C1324000, v163, v164, "Process tried to reconnect an assertion that does not exist: %{public}s", v165, 0xCu);
          v170 = v272;
          swift_arrayDestroy();
          v42 = v283;
          MEMORY[0x1C3BAD3F4](v170, -1, -1);
          MEMORY[0x1C3BAD3F4](v165, -1, -1);

        }
        else
        {
          v122 = *(void (**)(char *, uint64_t))(v274 + 8);
          v122(v162, v120);

          v84 = v289;
        }
      }
      v121 = v288;
LABEL_39:
      v123 = v279;
      v124 = v275;
      v122((char *)v275, v120);
      v32 = v124;
      a1 = v278;
      v119 = v286 + v277;
      v117 = v123 - 1;
      v114 = v276;
      if (!v117)
      {
        swift_bridgeObjectRelease();
        v61 = v291[0];
        v32 = (uint64_t)v282;
        a2 = (_QWORD *)&loc_1C1427000;
        goto LABEL_59;
      }
    }
  }
  swift_bridgeObjectRelease();
  v267 = MEMORY[0x1E0DEE9E0];
  v32 = (uint64_t)v282;
  v121 = v288;
LABEL_59:
  v212 = 0;
  v213 = *(_QWORD *)(v61 + 56);
  v277 = v61 + 56;
  v214 = 1 << *(_BYTE *)(v61 + 32);
  v215 = -1;
  if (v214 < 64)
    v215 = ~(-1 << v214);
  v58 = v215 & v213;
  v278 = (unint64_t)(v214 + 63) >> 6;
  *(_QWORD *)&v211 = a2[483];
  v276 = v211;
  v275 = MEMORY[0x1E0DEE9B8] + 8;
  v279 = v61;
  v59 = v287;
  while (1)
  {
    if (v58)
    {
      v288 = v121;
      v216 = __clz(__rbit64(v58));
      v58 &= v58 - 1;
      v286 = v212;
      v217 = v216 | (v212 << 6);
      goto LABEL_76;
    }
    v218 = __OFADD__(v212, 1);
    v219 = v212 + 1;
    if (v218)
      goto LABEL_92;
    if (v219 >= v278)
      break;
    v220 = *(_QWORD *)(v277 + 8 * v219);
    if (!v220)
    {
      v221 = v219 + 1;
      if (v219 + 1 >= v278)
        break;
      v220 = *(_QWORD *)(v277 + 8 * v221);
      if (!v220)
      {
        v221 = v219 + 2;
        if (v219 + 2 >= v278)
          break;
        v220 = *(_QWORD *)(v277 + 8 * v221);
        if (!v220)
        {
          v221 = v219 + 3;
          if (v219 + 3 >= v278)
            break;
          v220 = *(_QWORD *)(v277 + 8 * v221);
          if (!v220)
          {
            while (1)
            {
              v219 = v221 + 1;
              if (__OFADD__(v221, 1))
                goto LABEL_93;
              if (v219 >= v278)
                goto LABEL_85;
              v220 = *(_QWORD *)(v277 + 8 * v219);
              ++v221;
              if (v220)
                goto LABEL_75;
            }
          }
        }
      }
      v219 = v221;
    }
LABEL_75:
    v288 = v121;
    v58 = (v220 - 1) & v220;
    v286 = v219;
    v217 = __clz(__rbit64(v220)) + (v219 << 6);
LABEL_76:
    v222 = *(void (**)(char *, unint64_t, uint64_t))(v59 + 16);
    v223 = v280;
    v222(v280, *(_QWORD *)(v61 + 48) + *(_QWORD *)(v59 + 72) * v217, v84);
    (*(void (**)(uint64_t, char *, uint64_t))(v59 + 32))(v42, v223, v84);
    v224 = v281;
    v222((char *)v281, v42, v84);
    v225 = sub_1C1426848();
    v226 = sub_1C1426C80();
    a1 = v226;
    if (os_log_type_enabled(v225, v226))
    {
      v227 = swift_slowAlloc();
      v228 = swift_slowAlloc();
      v292 = v228;
      *(_DWORD *)v227 = v276;
      sub_1C1329AD0(&qword_1ED797888, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8CB40], MEMORY[0x1E0D8CB60]);
      v229 = sub_1C1427058();
      *(_QWORD *)(v227 + 4) = sub_1C132AD90(v229, v230, (uint64_t *)&v292);
      swift_bridgeObjectRelease();
      a2 = *(_QWORD **)(v59 + 8);
      ((void (*)(uint64_t, uint64_t))a2)(v224, v289);
      _os_log_impl(&dword_1C1324000, v225, (os_log_type_t)a1, "Removing unclaimed assertion: %{public}s", (uint8_t *)v227, 0xCu);
      swift_arrayDestroy();
      v231 = v228;
      v32 = (uint64_t)v282;
      MEMORY[0x1C3BAD3F4](v231, -1, -1);
      v232 = v227;
      v84 = v289;
      MEMORY[0x1C3BAD3F4](v232, -1, -1);
    }
    else
    {
      a2 = *(_QWORD **)(v59 + 8);
      ((void (*)(uint64_t, uint64_t))a2)(v224, v84);
    }

    v42 = v283;
    v233 = v288;
    sub_1C13606FC(v283, (_QWORD *)v32);
    v121 = v233;
    v61 = v279;
    if (v233)
    {

      v121 = 0;
    }
    ((void (*)(uint64_t, uint64_t))a2)(v42, v84);
    v212 = v286;
  }
LABEL_85:
  swift_release();
  return sub_1C1425D14();
}

BOOL sub_1C13636A4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  id v17;
  uint64_t v19;
  uint64_t v20;

  v20 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797868);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v19 - v10;
  v12 = (char *)&v19 + *(int *)(v9 + 48) - v10;
  v13 = sub_1C1425CC0();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v15(v11, a1, v13);
  sub_1C1338F24(v20, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
  v16 = (uint64_t)&v8[*(int *)(v5 + 48)];
  v15(v8, (uint64_t)v11, v13);
  sub_1C1338F24((uint64_t)v12, v16, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
  LODWORD(v15) = sub_1C1425C9C();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v13);
  v17 = objc_msgSend(*(id *)(*__swift_project_boxed_opaque_existential_1(a3, a3[3])+ OBJC_IVAR____TtC11SessionCore22AssertionServiceClient_connection), sel_remoteProcess);
  LODWORD(a3) = objc_msgSend(v17, sel_pid);

  sub_1C132C860((uint64_t)v11, &qword_1ED797868);
  sub_1C1339004(v16, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
  return (_DWORD)v15 == (_DWORD)a3;
}

uint64_t sub_1C136384C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char v4;
  uint64_t v6;

  v0 = sub_1C1425CC0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1425DD4();
  v4 = sub_1C1425C90();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4 & 1;
}

uint64_t sub_1C13638EC(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  id v15;

  if (a3 >> 62)
    goto LABEL_16;
  v5 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; v5 = sub_1C1426F98())
  {
    v6 = 4;
    while (1)
    {
      v7 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C3BACBFC](v6 - 4, a3) : *(id *)(a3 + 8 * v6);
      v8 = v7;
      v9 = v6 - 3;
      if (__OFADD__(v6 - 4, 1))
        break;
      v15 = v7;
      v10 = a1(&v15);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v12 & 1;
      }
      v11 = v10;

      if ((v11 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v12 = 1;
        return v12 & 1;
      }
      ++v6;
      if (v9 == v5)
        goto LABEL_11;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  v12 = 0;
  return v12 & 1;
}

uint64_t sub_1C1363A1C(uint64_t (*a1)(char *), char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t (*v31)(char *);

  v31 = a1;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797868);
  v6 = MEMORY[0x1E0C80A78](v30);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v27 - v9;
  v11 = *(_QWORD *)(a3 + 64);
  v28 = a3 + 64;
  v12 = 1 << *(_BYTE *)(a3 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v29 = (unint64_t)(v12 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v16 = 0;
  while (v14)
  {
    v17 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    v18 = v17 | (v16 << 6);
LABEL_19:
    v22 = *(_QWORD *)(a3 + 48);
    v23 = sub_1C1425CC0();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v10, v22 + *(_QWORD *)(*(_QWORD *)(v23 - 8) + 72) * v18, v23);
    v24 = *(_QWORD *)(a3 + 56);
    v25 = type metadata accessor for Assertion();
    sub_1C1338F24(v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v18, (uint64_t)&v10[*(int *)(v30 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    sub_1C132A724((uint64_t)v10, (uint64_t)v8, &qword_1ED797868);
    v26 = v31(v8);
    result = sub_1C132C860((uint64_t)v8, &qword_1ED797868);
    if (v3)
      goto LABEL_28;
    if ((v26 & 1) != 0)
    {
      a2 = 1;
LABEL_28:
      swift_release();
      return a2 & 1;
    }
  }
  if (__OFADD__(v16++, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v16 >= v29)
    goto LABEL_27;
  v20 = *(_QWORD *)(v28 + 8 * v16);
  if (v20)
  {
LABEL_18:
    v14 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v16 << 6);
    goto LABEL_19;
  }
  v21 = v16 + 1;
  if (v16 + 1 >= v29)
    goto LABEL_27;
  v20 = *(_QWORD *)(v28 + 8 * v21);
  if (v20)
    goto LABEL_17;
  v21 = v16 + 2;
  if (v16 + 2 >= v29)
    goto LABEL_27;
  v20 = *(_QWORD *)(v28 + 8 * v21);
  if (v20)
    goto LABEL_17;
  v21 = v16 + 3;
  if (v16 + 3 >= v29)
    goto LABEL_27;
  v20 = *(_QWORD *)(v28 + 8 * v21);
  if (v20)
    goto LABEL_17;
  v21 = v16 + 4;
  if (v16 + 4 >= v29)
  {
LABEL_27:
    a2 = 0;
    goto LABEL_28;
  }
  v20 = *(_QWORD *)(v28 + 8 * v21);
  if (v20)
  {
LABEL_17:
    v16 = v21;
    goto LABEL_18;
  }
  while (1)
  {
    v16 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v16 >= v29)
      goto LABEL_27;
    v20 = *(_QWORD *)(v28 + 8 * v16);
    ++v21;
    if (v20)
      goto LABEL_18;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C1363CC4(uint64_t (*a1)(char *), char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v22;
  int64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t (*v29)(char *);
  uint64_t v30;

  v29 = a1;
  v6 = sub_1C1425CC0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v26 - v11;
  v13 = *(_QWORD *)(a3 + 56);
  v27 = a3 + 56;
  v14 = 1 << *(_BYTE *)(a3 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v28 = (unint64_t)(v14 + 63) >> 6;
  v30 = a3;
  result = swift_bridgeObjectRetain();
  v18 = 0;
  while (1)
  {
    if (v16)
    {
      v19 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v20 = v19 | (v18 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v18++, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v18 >= v28)
      goto LABEL_27;
    v22 = *(_QWORD *)(v27 + 8 * v18);
    if (!v22)
      break;
LABEL_18:
    v16 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v18 << 6);
LABEL_19:
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v12, *(_QWORD *)(v30 + 48) + *(_QWORD *)(v7 + 72) * v20, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v12, v6);
    v24 = v29(v10);
    if (v3)
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      swift_release();
      return a2 & 1;
    }
    v25 = v24;
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    if ((v25 & 1) != 0)
    {
      a2 = 1;
      goto LABEL_28;
    }
  }
  v23 = v18 + 1;
  if (v18 + 1 >= v28)
    goto LABEL_27;
  v22 = *(_QWORD *)(v27 + 8 * v23);
  if (v22)
    goto LABEL_17;
  v23 = v18 + 2;
  if (v18 + 2 >= v28)
    goto LABEL_27;
  v22 = *(_QWORD *)(v27 + 8 * v23);
  if (v22)
    goto LABEL_17;
  v23 = v18 + 3;
  if (v18 + 3 >= v28)
    goto LABEL_27;
  v22 = *(_QWORD *)(v27 + 8 * v23);
  if (v22)
    goto LABEL_17;
  v23 = v18 + 4;
  if (v18 + 4 >= v28)
  {
LABEL_27:
    a2 = 0;
LABEL_28:
    swift_release();
    return a2 & 1;
  }
  v22 = *(_QWORD *)(v27 + 8 * v23);
  if (v22)
  {
LABEL_17:
    v18 = v23;
    goto LABEL_18;
  }
  while (1)
  {
    v18 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v18 >= v28)
      goto LABEL_27;
    v22 = *(_QWORD *)(v27 + 8 * v18);
    ++v23;
    if (v22)
      goto LABEL_18;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1C1363F44(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v6 = a1[19];
  v7 = a1[20];
  __swift_project_boxed_opaque_existential_1(a1 + 16, v6);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
  swift_bridgeObjectRetain();
  v9 = sub_1C1373C0C(1, v8, a2, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  if (!*(_QWORD *)(a1[8] + 16))
    goto LABEL_6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C13277A0(a2, a3);
  if ((v10 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = sub_1C14257F8();
  result = sub_1C14257F8();
  if (v11 != result)
  {
LABEL_6:
    swift_beginAccess();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = a1[8];
    a1[8] = 0x8000000000000000;
    sub_1C13C2760(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    a1[8] = v14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_bridgeObjectRetain();
    sub_1C14268E4();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C1364104(_QWORD *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24[3];

  v5 = a1[19];
  v6 = a1[20];
  __swift_project_boxed_opaque_existential_1(a1 + 16, v5);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
  swift_bridgeObjectRetain();
  v8 = sub_1C1374194(v7, a2, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  v9 = swift_bridgeObjectRetain();
  LODWORD(v5) = sub_1C137471C(v9, a2, a3) & 1;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v8 & 1) != (_DWORD)v5)
  {
    if ((v8 & 1) != 0)
    {
      if (qword_1ED7978F0 != -1)
        swift_once();
      v11 = sub_1C1426854();
      __swift_project_value_buffer(v11, (uint64_t)qword_1ED798610);
      swift_bridgeObjectRetain_n();
      v12 = sub_1C1426848();
      v13 = sub_1C1426C80();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        v15 = swift_slowAlloc();
        v24[0] = v15;
        *(_DWORD *)v14 = 136446210;
        swift_bridgeObjectRetain();
        v23 = sub_1C132AD90(a2, a3, v24);
        sub_1C1426DB8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C1324000, v12, v13, "Activity is prominently presented: %{public}s", v14, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v15, -1, -1);
        MEMORY[0x1C3BAD3F4](v14, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_1C132FAD4(&v23, a2, a3);
      swift_endAccess();
    }
    else
    {
      if (qword_1ED7978F0 != -1)
        swift_once();
      v16 = sub_1C1426854();
      __swift_project_value_buffer(v16, (uint64_t)qword_1ED798610);
      swift_bridgeObjectRetain_n();
      v17 = sub_1C1426848();
      v18 = sub_1C1426C80();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc();
        v20 = swift_slowAlloc();
        v24[0] = v20;
        *(_DWORD *)v19 = 136446210;
        swift_bridgeObjectRetain();
        v23 = sub_1C132AD90(a2, a3, v24);
        sub_1C1426DB8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C1324000, v17, v18, "Activity is no longer prominently presented: %{public}s", v19, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v20, -1, -1);
        MEMORY[0x1C3BAD3F4](v19, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      swift_beginAccess();
      sub_1C1353F8C(a2, a3);
      swift_endAccess();
    }
    swift_bridgeObjectRelease();
    v21 = swift_bridgeObjectRetain();
    v22 = sub_1C132FC80(v21);
    swift_bridgeObjectRelease();
    v24[0] = (uint64_t)v22;
    sub_1C14268E4();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C136455C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v2 = sub_1C135ED50();
  v3 = *(_QWORD *)(a1 + 104);
  swift_bridgeObjectRetain();
  v4 = sub_1C136BA1C(v2, v3, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FF58], &qword_1EF6DB188, MEMORY[0x1E0C8FF68]);
  swift_bridgeObjectRelease();
  if ((v4 & 1) != 0)
    return swift_bridgeObjectRelease();
  if (qword_1ED7978F0 != -1)
    swift_once();
  v6 = sub_1C1426854();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED798610);
  swift_bridgeObjectRetain_n();
  v7 = sub_1C1426848();
  v8 = sub_1C1426C80();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v16 = v10;
    *(_DWORD *)v9 = 136446210;
    v11 = sub_1C14259A8();
    v12 = swift_bridgeObjectRetain();
    v13 = MEMORY[0x1C3BAC878](v12, v11);
    v15 = v14;
    swift_bridgeObjectRelease();
    sub_1C132AD90(v13, v15, &v16);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1324000, v7, v8, "Activity presenters have changed: %{public}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v10, -1, -1);
    MEMORY[0x1C3BAD3F4](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  *(_QWORD *)(a1 + 104) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = v2;
  sub_1C14268E4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C13647C8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(a1[6] + 16));
  v17 = (_QWORD *)MEMORY[0x1E0DEE9E8];
  v2 = a1[19];
  v3 = a1[20];
  __swift_project_boxed_opaque_existential_1(a1 + 16, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  sub_1C1373824(v4, (void (*)(char *, uint64_t))sub_1C13759DC);
  swift_bridgeObjectRelease();
  v5 = (uint64_t)v17;
  v6 = a1[14];
  swift_bridgeObjectRetain();
  LOBYTE(v3) = sub_1C136BBC0((uint64_t)v17, v6);
  swift_bridgeObjectRelease();
  if ((v3 & 1) != 0)
    return swift_bridgeObjectRelease();
  if (qword_1ED7978F0 != -1)
    swift_once();
  v8 = sub_1C1426854();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED798610);
  swift_bridgeObjectRetain_n();
  v9 = sub_1C1426848();
  v10 = sub_1C1426C80();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v17 = (_QWORD *)v12;
    *(_DWORD *)v11 = 136446210;
    swift_bridgeObjectRetain();
    v13 = sub_1C1426C08();
    v15 = v14;
    swift_bridgeObjectRelease();
    sub_1C132AD90(v13, v15, (uint64_t *)&v17);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1324000, v9, v10, "Unthrottled activities have changed: %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v12, -1, -1);
    MEMORY[0x1C3BAD3F4](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  a1[14] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = sub_1C132FC80(v5);
  swift_bridgeObjectRelease();
  v17 = v16;
  sub_1C14268E4();
  return swift_release();
}

uint64_t sub_1C1364A74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t result;
  int64_t i;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  unint64_t v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(void);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  int64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t);
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int64_t v64;
  uint64_t v65;
  char *v66;

  v59 = a3;
  v6 = sub_1C14251B0();
  v55 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v58 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v57 = (char *)&v52 - v10;
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797868);
  v11 = MEMORY[0x1E0C80A78](v61);
  v66 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v65 = (uint64_t)&v52 - v14;
  MEMORY[0x1E0C80A78](v13);
  v60 = (char *)&v52 - v15;
  v62 = v7;
  v56 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v56(a3, a1, v6);
  v16 = *(_QWORD *)(a2 + 64);
  v53 = a2 + 64;
  v17 = 1 << *(_BYTE *)(a2 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v54 = (unint64_t)(v17 + 63) >> 6;
  v63 = a2;
  result = swift_bridgeObjectRetain();
  for (i = 0; ; i = v64)
  {
    if (v19)
    {
      v27 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v64 = i;
      v28 = v27 | (i << 6);
      goto LABEL_24;
    }
    v29 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v29 >= v54)
      return swift_release();
    v30 = *(_QWORD *)(v53 + 8 * v29);
    v31 = i + 1;
    if (!v30)
    {
      v31 = i + 2;
      if (i + 2 >= v54)
        return swift_release();
      v30 = *(_QWORD *)(v53 + 8 * v31);
      if (!v30)
      {
        v31 = i + 3;
        if (i + 3 >= v54)
          return swift_release();
        v30 = *(_QWORD *)(v53 + 8 * v31);
        if (!v30)
        {
          v31 = i + 4;
          if (i + 4 >= v54)
            return swift_release();
          v30 = *(_QWORD *)(v53 + 8 * v31);
          if (!v30)
            break;
        }
      }
    }
LABEL_23:
    v19 = (v30 - 1) & v30;
    v64 = v31;
    v28 = __clz(__rbit64(v30)) + (v31 << 6);
LABEL_24:
    v33 = v63;
    v34 = *(_QWORD *)(v63 + 48);
    v35 = sub_1C1425CC0();
    v36 = *(_QWORD *)(v35 - 8);
    v37 = *(void (**)(void))(v36 + 16);
    v38 = v60;
    ((void (*)(char *, unint64_t, uint64_t))v37)(v60, v34 + *(_QWORD *)(v36 + 72) * v28, v35);
    v39 = *(_QWORD *)(v33 + 56);
    v40 = type metadata accessor for Assertion();
    v41 = v39 + *(_QWORD *)(*(_QWORD *)(v40 - 8) + 72) * v28;
    v42 = v61;
    sub_1C1338F24(v41, (uint64_t)&v38[*(int *)(v61 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    v43 = (uint64_t)v38;
    v44 = v65;
    sub_1C132A724(v43, v65, &qword_1ED797868);
    v45 = *(int *)(v42 + 48);
    v46 = (uint64_t)&v66[v45];
    v47 = v44 + v45;
    v37();
    sub_1C1338F24(v47, v46, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    v48 = v58;
    if ((*(_BYTE *)(v46 + *(int *)(v40 + 36) + 8) & 1) != 0)
      sub_1C1425114();
    else
      sub_1C142512C();
    v49 = v59;
    v50 = v55;
    sub_1C1339004(v46, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    sub_1C1329AD0((unint64_t *)&qword_1ED7935D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
    v51 = v48;
    if ((sub_1C1426A58() & 1) != 0)
    {
      v22 = v57;
      v23 = v57;
      v24 = v48;
    }
    else
    {
      v22 = v57;
      v23 = v57;
      v24 = v49;
    }
    v56(v23, (uint64_t)v24, v50);
    v25 = v62;
    v26 = *(void (**)(char *, uint64_t))(v62 + 8);
    v26(v51, v50);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v66, v35);
    sub_1C132C860(v65, &qword_1ED797868);
    v26(v49, v50);
    result = (*(uint64_t (**)(char *, char *, uint64_t))(v25 + 32))(v49, v22, v50);
  }
  v32 = i + 5;
  if (i + 5 >= v54)
    return swift_release();
  v30 = *(_QWORD *)(v53 + 8 * v32);
  if (v30)
  {
    v31 = i + 5;
    goto LABEL_23;
  }
  while (1)
  {
    v31 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v31 >= v54)
      return swift_release();
    v30 = *(_QWORD *)(v53 + 8 * v31);
    ++v32;
    if (v30)
      goto LABEL_23;
  }
LABEL_31:
  __break(1u);
  return result;
}

void sub_1C1364ED8()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;

  if (qword_1ED7978F0 != -1)
    swift_once();
  v0 = sub_1C1426854();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED798610);
  v1 = sub_1C1426848();
  v2 = sub_1C1426C80();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1C1324000, v1, v2, "Expiration timer fired", v3, 2u);
    MEMORY[0x1C3BAD3F4](v3, -1, -1);
  }

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v4 = sub_1C1365060();
    sub_1C135EE08(v4);
    swift_release();
  }
  else
  {
    v5 = sub_1C1426848();
    v6 = sub_1C1426C80();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_1C1324000, v5, v6, "Client has disappeared", v7, 2u);
      MEMORY[0x1C3BAD3F4](v7, -1, -1);
    }

  }
}

uint64_t sub_1C1365060()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(char *, uint64_t);
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  size_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  os_unfair_lock_s *v42;
  unsigned int v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  _QWORD v48[2];
  uint64_t (*v49)(char *, uint64_t);
  char *v50;
  uint64_t v51;
  uint8_t *v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  char v63[16];
  char *v64;
  __int128 v65;
  uint64_t v66;
  _QWORD v67[5];
  _OWORD v68[2];
  uint64_t v69;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797898);
  MEMORY[0x1E0C80A78](v2);
  v60 = (uint64_t)v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_1C1425CC0();
  v58 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  v57 = (char *)v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_1C1425DC8();
  v55 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v6 = (char *)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = type metadata accessor for Assertion();
  v7 = *(_QWORD **)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v9 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C14251B0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)v48 - v15;
  sub_1C142518C();
  sub_1C142512C();
  v17 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
  v51 = v10;
  v49 = v17;
  v17(v14, v10);
  v18 = v1 + 16;
  v62 = v1;
  v19 = v1[19];
  v20 = v1[20];
  v54 = v18;
  __swift_project_boxed_opaque_existential_1(v18, v19);
  v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20);
  v22 = sub_1C136CA38(v21);
  swift_bridgeObjectRelease();
  v50 = v16;
  v64 = v16;
  v23 = sub_1C135DC3C((uint64_t (*)(char *))sub_1C13748C8, (uint64_t)v63, v22, (uint64_t (*)(_QWORD))type metadata accessor for Assertion, (void (*)(BOOL, uint64_t, uint64_t))sub_1C133691C);
  if (qword_1ED7978F0 != -1)
    swift_once();
  v24 = sub_1C1426854();
  __swift_project_value_buffer(v24, (uint64_t)qword_1ED798610);
  swift_bridgeObjectRetain_n();
  v25 = sub_1C1426848();
  v26 = sub_1C1426C80();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc();
    *(_QWORD *)&v68[0] = swift_slowAlloc();
    v53 = v7;
    v28 = *(_QWORD *)&v68[0];
    *(_DWORD *)v27 = 136446210;
    v52 = v27 + 4;
    v29 = swift_bridgeObjectRetain();
    v30 = v23;
    v31 = MEMORY[0x1C3BAC878](v29, v61);
    v33 = v32;
    swift_bridgeObjectRelease();
    v34 = v31;
    v23 = v30;
    v67[0] = sub_1C132AD90(v34, v33, (uint64_t *)v68);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1324000, v25, v26, "Invalidating expired assertions: %{public}s", v27, 0xCu);
    swift_arrayDestroy();
    v35 = v28;
    v7 = v53;
    MEMORY[0x1C3BAD3F4](v35, -1, -1);
    MEMORY[0x1C3BAD3F4](v27, -1, -1);

    v36 = *(_QWORD *)(v30 + 16);
    if (!v36)
      goto LABEL_16;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v36 = *(_QWORD *)(v23 + 16);
    if (!v36)
      goto LABEL_16;
  }
  v52 = (uint8_t *)v62[6];
  v37 = (*((unsigned __int8 *)v7 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v7 + 80);
  v48[1] = v23;
  v38 = v23 + v37;
  v53 = v62 + 7;
  swift_beginAccess();
  v39 = v7[9];
  do
  {
    sub_1C1338F24(v38, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v57, v9, v59);
    sub_1C132C344((uint64_t)&v9[*(int *)(v61 + 24)], v60, &qword_1ED797898);
    sub_1C1425DA4();
    v42 = (os_unfair_lock_s *)*((_QWORD *)v52 + 2);
    os_unfair_lock_lock(v42);
    v43 = sub_1C1425C9C();
    v44 = *v53;
    if (*(_QWORD *)(*v53 + 16) && (v45 = sub_1C1327378(v43), (v46 & 1) != 0))
    {
      sub_1C132E0A8(*(_QWORD *)(v44 + 56) + 40 * v45, (uint64_t)v68);
    }
    else
    {
      v69 = 0;
      memset(v68, 0, sizeof(v68));
    }
    os_unfair_lock_unlock(v42);
    sub_1C132C344((uint64_t)v68, (uint64_t)&v65, &qword_1ED792CA8);
    if (v66)
    {
      sub_1C1339184(&v65, (uint64_t)v67);
      __swift_project_boxed_opaque_existential_1(v67, v67[3]);
      sub_1C1419434((uint64_t)v6);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
    }
    else
    {
      sub_1C132C860((uint64_t)&v65, &qword_1ED792CA8);
    }
    v40 = v62[19];
    v41 = v62[20];
    __swift_project_boxed_opaque_existential_1(v54, v40);
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(v9, v40, v41);
    sub_1C132C860((uint64_t)v68, &qword_1ED792CA8);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v6, v56);
    sub_1C1339004((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    v38 += v39;
    --v36;
  }
  while (v36);
LABEL_16:
  swift_bridgeObjectRelease();
  sub_1C13657A4();
  return v49(v50, v51);
}

BOOL sub_1C13656A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char v6;
  uint64_t v8;

  v2 = sub_1C14251B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(a1 + *(int *)(type metadata accessor for Assertion() + 36) + 8) & 1) != 0)
    sub_1C1425114();
  else
    sub_1C142512C();
  sub_1C1329AD0((unint64_t *)&qword_1ED7935D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
  v6 = sub_1C1426A58();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (v6 & 1) == 0;
}

uint64_t sub_1C13657A4()
{
  uint64_t (*v0)();
  uint64_t (*v1)();
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (**v9)(uint64_t (**)(), uint64_t);
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (**v15)(uint64_t (**)(), uint64_t);
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  uint8_t *v31;
  uint8_t *v32;
  uint64_t v33;
  os_unfair_lock *v34;
  _QWORD *v35;
  uint64_t (*v36)();
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int64_t v47;
  uint64_t (**v48)(uint64_t (**)(), uint64_t);
  unint64_t v49;
  BOOL v50;
  int64_t v51;
  unint64_t v52;
  int64_t v53;
  int64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  void (*v58)(void);
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(uint64_t (**)(), uint64_t);
  uint64_t (**v68)();
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  void (*v73)(void);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  unint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t (**v90)(uint64_t (**)(), uint64_t);
  uint64_t v91;
  _BOOL8 v92;
  uint64_t v93;
  unint64_t v94;
  char v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(char *, uint64_t, uint64_t);
  uint64_t v101;
  NSObject *v102;
  os_log_type_t v103;
  uint8_t *v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  void (*v109)(char *, uint64_t);
  uint64_t (**v110)(uint64_t (**)(), uint64_t);
  NSObject *v111;
  os_log_type_t v112;
  uint8_t *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  NSObject *v123;
  os_log_type_t v124;
  uint8_t *v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  unint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  uint64_t v134;
  uint64_t result;
  os_unfair_lock_t v136;
  char *v137;
  uint64_t (**v138)(uint64_t (**)(), uint64_t);
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t (*v143)();
  uint64_t (**v144)(uint64_t (**)(), uint64_t);
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  int64_t v149;
  uint64_t (*v150)();
  void (*v151)(char *, uint64_t, uint64_t);
  char *v152;
  unint64_t v153;
  int v154;
  char *v155;
  char *v156;
  uint64_t (**v157)();
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  void (*v162)(void);
  uint64_t v163;
  int64_t v164;
  char *v165;
  uint64_t v166;
  _QWORD *v167;
  _QWORD *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  _QWORD *v172;
  _QWORD *v173;
  uint64_t v174;
  uint64_t v175;

  v1 = v0;
  v2 = sub_1C1426854();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (os_unfair_lock_t *)((char *)&v136 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (uint64_t (**)(uint64_t (**)(), uint64_t))((char *)&v136 - v8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v136 - v10;
  v159 = sub_1C1425E4C();
  v147 = *(_QWORD *)(v159 - 8);
  v12 = MEMORY[0x1E0C80A78](v159);
  v146 = (char *)&v136 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v145 = (char *)&v136 - v14;
  v158 = sub_1C1425DF8();
  v15 = *(uint64_t (***)(uint64_t (**)(), uint64_t))(v158 - 8);
  MEMORY[0x1E0C80A78](v158);
  v157 = (uint64_t (**)())((char *)&v136 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797868);
  v18 = MEMORY[0x1E0C80A78](v17);
  v152 = (char *)&v136 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v18);
  v156 = (char *)&v136 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v165 = (char *)&v136 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  isUniquelyReferenced_nonNull_native = (uint64_t)&v136 - v25;
  MEMORY[0x1E0C80A78](v24);
  v155 = (char *)&v136 - v27;
  if (qword_1ED7978F0 != -1)
LABEL_67:
    swift_once();
  v141 = v11;
  v142 = v3;
  v138 = v9;
  v137 = (char *)v6;
  v139 = v2;
  v140 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED798610);
  v28 = sub_1C1426848();
  v29 = sub_1C1426C80();
  v30 = os_log_type_enabled(v28, v29);
  v143 = v1;
  if (v30)
  {
    v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v31 = 0;
    _os_log_impl(&dword_1C1324000, v28, v29, "Resolving all assertions", v31, 2u);
    v32 = v31;
    v1 = v143;
    MEMORY[0x1C3BAD3F4](v32, -1, -1);
  }

  v173 = 0;
  v33 = *((_QWORD *)v1 + 6);
  v34 = *(os_unfair_lock **)(v33 + 16);
  os_unfair_lock_lock(v34);
  v136 = v34;
  os_unfair_lock_assert_owner(v34);
  v35 = (_QWORD *)((char *)v1 + 128);
  v36 = v1;
  v37 = *((_QWORD *)v1 + 19);
  v38 = *((_QWORD *)v36 + 20);
  __swift_project_boxed_opaque_existential_1(v35, v37);
  v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8))(v37, v38);
  v40 = sub_1C1366850(v39);
  swift_bridgeObjectRelease();
  v175 = sub_1C135D4B0(v40);
  v174 = sub_1C135ED50();
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v33 + 16));
  v1 = (uint64_t (*)())*((_QWORD *)v36 + 19);
  v41 = *((_QWORD *)v36 + 20);
  __swift_project_boxed_opaque_existential_1(v35, (uint64_t)v1);
  v42 = (*(uint64_t (**)(uint64_t (*)(), uint64_t))(v41 + 8))(v1, v41);
  v43 = *(_QWORD *)(v42 + 64);
  v148 = v42 + 64;
  v44 = 1 << *(_BYTE *)(v42 + 32);
  v45 = -1;
  if (v44 < 64)
    v45 = ~(-1 << v44);
  v46 = v45 & v43;
  v149 = (unint64_t)(v44 + 63) >> 6;
  v154 = *MEMORY[0x1E0D8CC70];
  v160 = v42;
  swift_bridgeObjectRetain();
  v47 = 0;
  v6 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v166 = isUniquelyReferenced_nonNull_native;
  v9 = v15;
  v144 = v15;
  v153 = v17;
  while (1)
  {
    v167 = v6;
    if (v46)
    {
      v48 = v9;
      v163 = (v46 - 1) & v46;
      v164 = v47;
      v49 = __clz(__rbit64(v46)) | (v47 << 6);
      goto LABEL_27;
    }
    v50 = __OFADD__(v47, 1);
    v51 = v47 + 1;
    v2 = (uint64_t)v143;
    v3 = v142;
    v11 = v141;
    if (v50)
      goto LABEL_64;
    if (v51 >= v149)
      goto LABEL_45;
    v52 = *(_QWORD *)(v148 + 8 * v51);
    v53 = v51;
    if (!v52)
    {
      v53 = v51 + 1;
      if (v51 + 1 >= v149)
        goto LABEL_45;
      v52 = *(_QWORD *)(v148 + 8 * v53);
      if (!v52)
      {
        v53 = v51 + 2;
        if (v51 + 2 >= v149)
          goto LABEL_45;
        v52 = *(_QWORD *)(v148 + 8 * v53);
        if (!v52)
        {
          v53 = v51 + 3;
          if (v51 + 3 >= v149)
            goto LABEL_45;
          v52 = *(_QWORD *)(v148 + 8 * v53);
          if (!v52)
            break;
        }
      }
    }
LABEL_26:
    v48 = v9;
    v163 = (v52 - 1) & v52;
    v164 = v53;
    v49 = __clz(__rbit64(v52)) + (v53 << 6);
LABEL_27:
    v55 = v160;
    v56 = *(_QWORD *)(v160 + 48);
    isUniquelyReferenced_nonNull_native = sub_1C1425CC0();
    v57 = *(_QWORD **)(isUniquelyReferenced_nonNull_native - 8);
    v58 = (void (*)(void))v57[2];
    v59 = v155;
    ((void (*)(char *, unint64_t, uint64_t))v58)(v155, v56 + v57[9] * v49, isUniquelyReferenced_nonNull_native);
    v60 = *(_QWORD *)(v55 + 56);
    v61 = type metadata accessor for Assertion();
    sub_1C1338F24(v60 + *(_QWORD *)(*(_QWORD *)(v61 - 8) + 72) * v49, (uint64_t)&v59[*(int *)(v17 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    v62 = (uint64_t)v59;
    v63 = v166;
    sub_1C132A724(v62, v166, &qword_1ED797868);
    v64 = *(int *)(v17 + 48);
    v65 = (uint64_t)&v165[v64];
    v66 = v63 + v64;
    v162 = v58;
    v58();
    v161 = v66;
    sub_1C1338F24(v66, v65, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    v9 = v48;
    v67 = v48[2];
    v68 = v157;
    v69 = v158;
    ((void (*)(uint64_t (**)(), uint64_t, uint64_t))v67)(v157, v65 + *(int *)(v61 + 20), v158);
    v70 = v65;
    v1 = type metadata accessor for Assertion;
    sub_1C1339004(v70, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    v71 = v9[11](v68, v69);
    if (v71 == v154)
    {
      v9[12](v68, v69);
      v150 = *v68;
      v72 = (uint64_t)&v156[*(int *)(v17 + 48)];
      v73 = v162;
      v162();
      v74 = v161;
      sub_1C1338F24(v161, v72, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      v75 = v72 + *(int *)(v61 + 40);
      v76 = v147;
      v77 = v145;
      v78 = v159;
      v151 = *(void (**)(char *, uint64_t, uint64_t))(v147 + 16);
      v151(v145, v75, v159);
      sub_1C1339004(v72, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      v79 = sub_1C1425E40();
      v81 = v80;
      v2 = *(_QWORD *)(v76 + 8);
      ((void (*)(char *, uint64_t))v2)(v77, v78);
      v82 = v167;
      v15 = (uint64_t (**)(uint64_t (**)(), uint64_t))isUniquelyReferenced_nonNull_native;
      if (v167[2] && (v83 = sub_1C13277A0(v79, v81), (v84 & 1) != 0))
        v85 = *(_QWORD *)(v82[7] + 8 * v83);
      else
        v85 = 1;
      swift_bridgeObjectRelease();
      v3 = v57[1];
      ((void (*)(char *, uint64_t))v3)(v156, isUniquelyReferenced_nonNull_native);
      v1 = v150;
      if ((sub_1C14257EC() & 1) != 0)
        v1 = (uint64_t (*)())v85;
      v86 = (uint64_t)&v152[*(int *)(v153 + 48)];
      v73();
      sub_1C1338F24(v74, v86, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      v87 = v146;
      v9 = (uint64_t (**)(uint64_t (**)(), uint64_t))v159;
      v151(v146, v86 + *(int *)(v61 + 40), v159);
      sub_1C1339004(v86, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      v88 = sub_1C1425E40();
      v11 = v89;
      ((void (*)(char *, uint64_t (**)(uint64_t (**)(), uint64_t)))v2)(v87, v9);
      v6 = v167;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v172 = v6;
      v17 = sub_1C13277A0(v88, (uint64_t)v11);
      v91 = v6[2];
      v92 = (v90 & 1) == 0;
      v93 = v91 + v92;
      if (__OFADD__(v91, v92))
      {
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
        goto LABEL_67;
      }
      v9 = v90;
      if (v6[3] >= v93)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1C13BB1A8();
      }
      else
      {
        sub_1C13BE810(v93, isUniquelyReferenced_nonNull_native);
        v94 = sub_1C13277A0(v88, (uint64_t)v11);
        if ((v9 & 1) != (v95 & 1))
          goto LABEL_76;
        v17 = v94;
      }
      v2 = v166;
      v6 = v172;
      if ((v9 & 1) != 0)
      {
        *(_QWORD *)(v172[7] + 8 * v17) = v1;
      }
      else
      {
        v172[(v17 >> 6) + 8] |= 1 << v17;
        v96 = (uint64_t *)(v6[6] + 16 * v17);
        *v96 = v88;
        v96[1] = (uint64_t)v11;
        *(_QWORD *)(v6[7] + 8 * v17) = v1;
        v97 = v6[2];
        v50 = __OFADD__(v97, 1);
        v98 = v97 + 1;
        if (v50)
          goto LABEL_65;
        v6[2] = v98;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t (**)(uint64_t (**)(), uint64_t)))v3)(v152, v15);
      v9 = v144;
      v17 = v153;
      v47 = v164;
    }
    else
    {
      v9[1](v68, v69);
      v3 = v57[1];
      v2 = v63;
      v6 = v167;
      v47 = v164;
      v15 = (uint64_t (**)(uint64_t (**)(), uint64_t))isUniquelyReferenced_nonNull_native;
    }
    ((void (*)(char *, uint64_t (**)(uint64_t (**)(), uint64_t)))v3)(v165, v15);
    sub_1C132C860(v2, &qword_1ED797868);
    v46 = v163;
  }
  v54 = v51 + 4;
  if (v54 < v149)
  {
    v52 = *(_QWORD *)(v148 + 8 * v54);
    if (!v52)
    {
      while (1)
      {
        v53 = v54 + 1;
        if (__OFADD__(v54, 1))
          goto LABEL_66;
        if (v53 >= v149)
          goto LABEL_45;
        v52 = *(_QWORD *)(v148 + 8 * v53);
        ++v54;
        if (v52)
          goto LABEL_26;
      }
    }
    v53 = v54;
    goto LABEL_26;
  }
LABEL_45:
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v173 = v6;
  v99 = v175;
  if (!v175)
  {
    __break(1u);
    goto LABEL_69;
  }
  swift_beginAccess();
  *(_QWORD *)(v2 + 72) = v99;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!v174)
  {
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  *(_QWORD *)(v2 + 104) = v174;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(_QWORD *)(v2 + 64) = v167;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v136);
  v100 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v101 = v139;
  v100(v11, v140, v139);
  v102 = sub_1C1426848();
  v103 = sub_1C1426C80();
  if (!os_log_type_enabled(v102, v103))
  {

    v109 = *(void (**)(char *, uint64_t))(v3 + 8);
    v109(v11, v101);
LABEL_51:
    v110 = v138;
    v100((char *)v138, v140, v101);
    v111 = sub_1C1426848();
    v112 = sub_1C1426C80();
    if (os_log_type_enabled(v111, v112))
    {
      v113 = (uint8_t *)swift_slowAlloc();
      v114 = swift_slowAlloc();
      v171 = v114;
      *(_DWORD *)v113 = 136446210;
      swift_beginAccess();
      if (!v174)
        goto LABEL_74;
      v115 = sub_1C14259A8();
      v116 = swift_bridgeObjectRetain();
      v117 = MEMORY[0x1C3BAC878](v116, v115);
      v119 = v118;
      swift_bridgeObjectRelease();
      v170 = sub_1C132AD90(v117, v119, &v171);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1324000, v111, v112, "Resolved presenters: %{public}s", v113, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v114, -1, -1);
      MEMORY[0x1C3BAD3F4](v113, -1, -1);

      v120 = v139;
      v109((char *)v138, v139);
    }
    else
    {

      v109((char *)v110, v101);
      v120 = v101;
    }
    v121 = v137;
    v100(v137, v140, v120);
    v122 = v120;
    v123 = sub_1C1426848();
    v124 = sub_1C1426C80();
    if (os_log_type_enabled(v123, v124))
    {
      v125 = (uint8_t *)swift_slowAlloc();
      v126 = swift_slowAlloc();
      v171 = v126;
      *(_DWORD *)v125 = 136446210;
      swift_beginAccess();
      if (!v173)
        goto LABEL_75;
      swift_bridgeObjectRetain();
      v127 = sub_1C1426A40();
      v129 = v128;
      swift_bridgeObjectRelease();
      v170 = sub_1C132AD90(v127, v129, &v171);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1324000, v123, v124, "Resolved QoS: %{public}s", v125, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v126, -1, -1);
      MEMORY[0x1C3BAD3F4](v125, -1, -1);

      v130 = v137;
      v131 = v139;
    }
    else
    {

      v130 = v121;
      v131 = v122;
    }
    v109(v130, v131);
    swift_beginAccess();
    if (v175)
    {
      v132 = swift_bridgeObjectRetain();
      v133 = sub_1C132FC80(v132);
      swift_bridgeObjectRelease();
      v170 = (uint64_t)v133;
      sub_1C14268E4();
      swift_release();
      swift_beginAccess();
      if (v174)
      {
        v169 = v174;
        swift_bridgeObjectRetain();
        sub_1C14268E4();
        swift_bridgeObjectRelease();
        swift_beginAccess();
        if (v173)
        {
          v168 = v173;
          swift_bridgeObjectRetain();
          sub_1C14268E4();
          v134 = swift_bridgeObjectRelease();
          sub_1C135EE08(v134);
          sub_1C13673D0();
          sub_1C1367600();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        goto LABEL_72;
      }
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
      goto LABEL_73;
    }
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  v104 = (uint8_t *)swift_slowAlloc();
  v105 = swift_slowAlloc();
  v171 = v105;
  *(_DWORD *)v104 = 136446210;
  swift_beginAccess();
  if (v175)
  {
    swift_bridgeObjectRetain();
    v106 = sub_1C1426C08();
    v108 = v107;
    swift_bridgeObjectRelease();
    v170 = sub_1C132AD90(v106, v108, &v171);
    sub_1C1426DB8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1324000, v102, v103, "Resolved prominent activities: %{public}s", v104, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v105, -1, -1);
    MEMORY[0x1C3BAD3F4](v104, -1, -1);

    v109 = *(void (**)(char *, uint64_t))(v142 + 8);
    v101 = v139;
    v109(v141, v139);
    goto LABEL_51;
  }
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  result = sub_1C142707C();
  __break(1u);
  return result;
}

uint64_t sub_1C1366850(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t result;
  int64_t v15;
  uint64_t (*v16)();
  unint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  void (*v28)(char *, unint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)();
  uint64_t *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  uint64_t (*v46)();
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  char v55;
  unint64_t v56;
  BOOL v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  int64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v2 = sub_1C1425DF8();
  v71 = *(_QWORD *)(v2 - 8);
  v72 = v2;
  MEMORY[0x1E0C80A78](v2);
  v70 = (char *)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = &qword_1ED797868;
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797868);
  v5 = MEMORY[0x1E0C80A78](v74);
  v63 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v78 = (uint64_t)&v62 - v8;
  MEMORY[0x1E0C80A78](v7);
  v69 = (char *)&v62 - v9;
  v79 = MEMORY[0x1E0DEE9E0];
  v10 = *(_QWORD *)(a1 + 64);
  v64 = a1 + 64;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  if (v11 < 64)
    v12 = ~(-1 << v11);
  else
    v12 = -1;
  v13 = v12 & v10;
  v65 = (unint64_t)(v11 + 63) >> 6;
  v68 = *MEMORY[0x1E0D8CC68];
  v73 = a1;
  result = swift_bridgeObjectRetain();
  v15 = 0;
  v16 = type metadata accessor for Assertion;
  while (1)
  {
    if (v13)
    {
      v75 = (v13 - 1) & v13;
      v76 = v15;
      v17 = __clz(__rbit64(v13)) | (v15 << 6);
      v18 = v78;
      goto LABEL_22;
    }
    v19 = v15 + 1;
    v18 = v78;
    if (__OFADD__(v15, 1))
    {
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    if (v19 >= v65)
      goto LABEL_36;
    v20 = *(_QWORD *)(v64 + 8 * v19);
    v21 = v15 + 1;
    if (!v20)
    {
      v21 = v15 + 2;
      if (v15 + 2 >= v65)
        goto LABEL_36;
      v20 = *(_QWORD *)(v64 + 8 * v21);
      if (!v20)
      {
        v21 = v15 + 3;
        if (v15 + 3 >= v65)
          goto LABEL_36;
        v20 = *(_QWORD *)(v64 + 8 * v21);
        if (!v20)
        {
          v22 = v15 + 4;
          if (v15 + 4 >= v65)
          {
LABEL_36:
            swift_release();
            return v79;
          }
          v20 = *(_QWORD *)(v64 + 8 * v22);
          v21 = v15 + 4;
          if (!v20)
            break;
        }
      }
    }
LABEL_21:
    v75 = (v20 - 1) & v20;
    v76 = v21;
    v17 = __clz(__rbit64(v20)) + (v21 << 6);
LABEL_22:
    v23 = v73;
    v24 = *(_QWORD *)(v73 + 48);
    v25 = sub_1C1425CC0();
    v26 = *(_QWORD **)(v25 - 8);
    v27 = v26[9];
    v28 = (void (*)(char *, unint64_t))v26[2];
    v29 = (uint64_t)v69;
    v77 = v25;
    v28(v69, v24 + v27 * v17);
    v30 = *(_QWORD *)(v23 + 56);
    v31 = type metadata accessor for Assertion();
    v32 = v30 + *(_QWORD *)(*(_QWORD *)(v31 - 8) + 72) * v17;
    v33 = v74;
    sub_1C1338F24(v32, v29 + *(int *)(v74 + 48), (uint64_t (*)(_QWORD))v16);
    sub_1C132A724(v29, v18, v4);
    v34 = v18 + *(int *)(v33 + 48);
    v35 = v16;
    v36 = v4;
    v38 = v70;
    v37 = v71;
    v39 = v72;
    (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v70, v34 + *(int *)(v31 + 20), v72);
    v40 = (*(uint64_t (**)(char *, uint64_t))(v37 + 88))(v38, v39);
    if (v40 == v68)
    {
      v66 = v27;
      v4 = v36;
      v41 = sub_1C1425E40();
      v67 = v42;
      v43 = v63;
      v44 = (uint64_t)&v63[*(int *)(v74 + 48)];
      v45 = (void (*)(char *, uint64_t, uint64_t))v26[4];
      v45(v63, v78, v77);
      v46 = v35;
      sub_1C1339140(v34, v44, (uint64_t (*)(_QWORD))v35);
      v47 = v79;
      v48 = *(_QWORD *)(v79 + 16);
      if (*(_QWORD *)(v79 + 24) <= v48)
      {
        sub_1C13BCB78(v48 + 1, 1);
        v47 = v79;
      }
      sub_1C1329AD0(&qword_1ED797878, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8CB40], MEMORY[0x1E0D8CB50]);
      v49 = v77;
      result = sub_1C1426A4C();
      v50 = v47 + 64;
      v51 = -1 << *(_BYTE *)(v47 + 32);
      v52 = result & ~v51;
      v53 = v52 >> 6;
      if (((-1 << v52) & ~*(_QWORD *)(v47 + 64 + 8 * (v52 >> 6))) != 0)
      {
        v54 = __clz(__rbit64((-1 << v52) & ~*(_QWORD *)(v47 + 64 + 8 * (v52 >> 6)))) | v52 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v55 = 0;
        v56 = (unint64_t)(63 - v51) >> 6;
        do
        {
          if (++v53 == v56 && (v55 & 1) != 0)
          {
            __break(1u);
            goto LABEL_37;
          }
          v57 = v53 == v56;
          if (v53 == v56)
            v53 = 0;
          v55 |= v57;
          v58 = *(_QWORD *)(v50 + 8 * v53);
        }
        while (v58 == -1);
        v54 = __clz(__rbit64(~v58)) + (v53 << 6);
      }
      v59 = v66;
      *(_QWORD *)(v50 + ((v54 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v54;
      v45((char *)(*(_QWORD *)(v47 + 48) + v54 * v59), (uint64_t)v43, v49);
      v60 = (uint64_t *)(*(_QWORD *)(v47 + 56) + 16 * v54);
      v61 = v67;
      *v60 = v41;
      v60[1] = v61;
      ++*(_QWORD *)(v47 + 16);
      v16 = v46;
      result = sub_1C1339004(v44, (uint64_t (*)(_QWORD))v46);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v39);
      result = sub_1C132C860(v78, v36);
      v4 = v36;
      v16 = v35;
    }
    v13 = v75;
    v15 = v76;
  }
  while (1)
  {
    v21 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v21 >= v65)
      goto LABEL_36;
    v20 = *(_QWORD *)(v64 + 8 * v21);
    ++v22;
    if (v20)
      goto LABEL_21;
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1C1366D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = sub_1C1425DF8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Assertion();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2 + *(int *)(v7 + 20), v3);
  if ((*(unsigned int (**)(char *, uint64_t))(v4 + 88))(v6, v3) != *MEMORY[0x1E0D8CC60])
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v8 = sub_1C1425E40();
  sub_1C132FAD4(&v11, v8, v9);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1366E48(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  void (*v25)(char *, char *);
  uint64_t v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  unint64_t v31;
  char v32;
  id v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v61;
  char v62;
  void (*v63)(char *, uint64_t);
  void (*v64)(char *, uint64_t, uint64_t);
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77[2];
  _QWORD v78[6];

  v73 = a4;
  v75 = a1;
  v76 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935F8);
  MEMORY[0x1E0C80A78](v5);
  v71 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_1C14255F4();
  v74 = *(_QWORD *)(v72 - 8);
  v7 = MEMORY[0x1E0C80A78](v72);
  v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v64 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v64 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v64 - v16;
  v18 = sub_1C1425DF8();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for Assertion();
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, a2 + *(int *)(v22 + 20), v18);
  if ((*(unsigned int (**)(char *, uint64_t))(v19 + 88))(v21, v18) != *MEMORY[0x1E0D8CC50])
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  v66 = v22;
  v67 = a2;
  v68 = v9;
  v69 = v15;
  v70 = v12;
  v23 = v73;
  (*(void (**)(char *, uint64_t))(v19 + 96))(v21, v18);
  v24 = v74;
  v25 = *(void (**)(char *, char *))(v74 + 32);
  v26 = v72;
  v25(v17, v21);
  v27 = sub_1C1425C9C();
  v28 = v76;
  swift_beginAccess();
  v29 = *(_QWORD *)(v28 + 56);
  v30 = v17;
  if (!*(_QWORD *)(v29 + 16))
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v17, v26);
  v31 = sub_1C1327378(v27);
  if ((v32 & 1) == 0)
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v17, v26);
  v64 = (void (*)(char *, uint64_t, uint64_t))v25;
  sub_1C132E0A8(*(_QWORD *)(v29 + 56) + 40 * v31, (uint64_t)v77);
  sub_1C1339184(v77, (uint64_t)v78);
  v33 = objc_msgSend(*(id *)(*__swift_project_boxed_opaque_existential_1(v78, v78[3])+ OBJC_IVAR____TtC11SessionCore22AssertionServiceClient_connection), sel_remoteProcess);
  v34 = sub_1C132F33C();
  v37 = v36;
  v76 = v34;

  v38 = v23;
  v39 = v26;
  v40 = v69;
  v41 = *v23;
  if (!*(_QWORD *)(*v23 + 16))
    goto LABEL_12;
  swift_bridgeObjectRetain();
  v42 = sub_1C13277A0(v76, v37);
  if ((v43 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_12:
    v44 = sub_1C1332510(MEMORY[0x1E0DEE9D8]);
    goto LABEL_13;
  }
  v44 = *(_QWORD *)(*(_QWORD *)(v41 + 56) + 8 * v42);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_13:
  v45 = sub_1C1425E40();
  v47 = *(_QWORD *)(v44 + 16);
  v75 = v37;
  if (v47)
  {
    v48 = sub_1C13277A0(v45, v46);
    v49 = (uint64_t)v71;
    if ((v50 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v24 + 16))(v71, *(_QWORD *)(v44 + 56) + *(_QWORD *)(v24 + 72) * v48, v39);
      v51 = 0;
    }
    else
    {
      v51 = 1;
    }
  }
  else
  {
    v51 = 1;
    v49 = (uint64_t)v71;
  }
  v52 = v24;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v49, v51, 1, v39);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v49, 1, v39) == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v24 + 104))(v40, *MEMORY[0x1E0C8F918], v39);
    sub_1C132C860(v49, &qword_1ED7935F8);
  }
  else
  {
    v64(v40, v49, v39);
  }
  v53 = (uint64_t)v68;
  v54 = v40;
  v55 = v70;
  v65 = v30;
  v56 = v54;
  sub_1C14255E8();
  v57 = sub_1C1425E40();
  v59 = v58;
  (*(void (**)(uint64_t, char *, uint64_t))(v52 + 16))(v53, v55, v39);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v77[0] = v44;
  sub_1C13C2BAC(v53, v57, v59, isUniquelyReferenced_nonNull_native);
  v61 = *(_QWORD *)&v77[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v62 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v77[0] = *v38;
  *v38 = 0x8000000000000000;
  sub_1C13C2A2C(v61, v76, v75, v62);
  *v38 = *(_QWORD *)&v77[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v63 = *(void (**)(char *, uint64_t))(v52 + 8);
  v63(v55, v39);
  v63(v56, v39);
  v63(v65, v39);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v78);
}

uint64_t sub_1C13673D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  void *v11;
  _QWORD v12[2];

  v1 = sub_1C1426CD4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C1426C8C();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1C14269B0();
  MEMORY[0x1E0C80A78](v6);
  v7 = v0[19];
  v8 = v0[20];
  __swift_project_boxed_opaque_existential_1(v0 + 16, v7);
  v9 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8) + 16);
  result = swift_bridgeObjectRelease();
  if (v9)
  {
    sub_1C1330F6C();
    sub_1C1426974();
    v12[1] = MEMORY[0x1E0DEE9D8];
    sub_1C1329AD0((unint64_t *)&qword_1ED7939F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A70);
    sub_1C135C2A8();
    sub_1C1426DF4();
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEF8D0], v1);
    v11 = (void *)sub_1C1426D04();
    sub_1C1425F0C();
    swift_retain();
    sub_1C1425F00();

    return swift_release();
  }
  return result;
}

uint64_t sub_1C1367600()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;

  v1 = v0[19];
  v2 = v0[20];
  __swift_project_boxed_opaque_existential_1(v0 + 16, v1);
  v3 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2) + 16);
  result = swift_bridgeObjectRelease();
  if (v3)
  {
    if (qword_1ED7978F0 != -1)
      swift_once();
    v5 = sub_1C1426854();
    __swift_project_value_buffer(v5, (uint64_t)qword_1ED798610);
    v6 = sub_1C1426848();
    v7 = sub_1C1426C80();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1C1324000, v6, v7, "Scheduling assertion purge", v8, 2u);
      MEMORY[0x1C3BAD3F4](v8, -1, -1);
    }

    sub_1C1425F0C();
    swift_retain();
    sub_1C1425F00();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C136776C(uint64_t (*a1)(uint64_t), uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;

  if (qword_1ED7978F0 != -1)
LABEL_30:
    swift_once();
  v4 = sub_1C1426854();
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED798610);
  v6 = sub_1C1426848();
  v7 = sub_1C1426C80();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1C1324000, v6, v7, "Purging assertions with missing activities", v8, 2u);
    MEMORY[0x1C3BAD3F4](v8, -1, -1);
  }

  v9 = a3[19];
  v10 = a3[20];
  __swift_project_boxed_opaque_existential_1(a3 + 16, v9);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
  swift_retain();
  v12 = sub_1C1375508(MEMORY[0x1E0DEE9E8], v11, (uint64_t)a3);
  swift_bridgeObjectRelease();
  swift_release();
  v13 = 0;
  v36 = v12 + 56;
  v14 = 1 << *(_BYTE *)(v12 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v12 + 56);
  v37 = (unint64_t)(v14 + 63) >> 6;
  v35 = v12;
  while (1)
  {
    if (v16)
    {
      v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v18 = v17 | (v13 << 6);
      goto LABEL_25;
    }
    v19 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v37)
      goto LABEL_27;
    v20 = *(_QWORD *)(v36 + 8 * v19);
    ++v13;
    if (!v20)
    {
      v13 = v19 + 1;
      if (v19 + 1 >= v37)
        goto LABEL_27;
      v20 = *(_QWORD *)(v36 + 8 * v13);
      if (!v20)
      {
        v13 = v19 + 2;
        if (v19 + 2 >= v37)
          goto LABEL_27;
        v20 = *(_QWORD *)(v36 + 8 * v13);
        if (!v20)
          break;
      }
    }
LABEL_24:
    v16 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_25:
    v22 = (uint64_t *)(*(_QWORD *)(v12 + 48) + 16 * v18);
    v23 = *v22;
    v24 = v22[1];
    swift_bridgeObjectRetain_n();
    v25 = sub_1C1426848();
    v26 = sub_1C1426C80();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = a3;
      v28 = v5;
      v29 = swift_slowAlloc();
      v30 = swift_slowAlloc();
      v38 = v30;
      *(_DWORD *)v29 = 136446210;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v29 + 4) = sub_1C132AD90(v23, v24, &v38);
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v25, v26, "Removing invalid assertion %{public}s", (uint8_t *)v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v30, -1, -1);
      v31 = v29;
      v5 = v28;
      a3 = v27;
      v12 = v35;
      MEMORY[0x1C3BAD3F4](v31, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1C1367B34(v23, v24, 2);
    swift_bridgeObjectRelease();
  }
  v21 = v19 + 3;
  if (v21 < v37)
  {
    v20 = *(_QWORD *)(v36 + 8 * v21);
    if (!v20)
    {
      while (1)
      {
        v13 = v21 + 1;
        if (__OFADD__(v21, 1))
          goto LABEL_29;
        if (v13 >= v37)
          goto LABEL_27;
        v20 = *(_QWORD *)(v36 + 8 * v13);
        ++v21;
        if (v20)
          goto LABEL_24;
      }
    }
    v13 = v21;
    goto LABEL_24;
  }
LABEL_27:
  v32 = swift_release();
  return a1(v32);
}

uint64_t sub_1C1367B34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  size_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t (*v35)();
  uint64_t (*v36)();
  uint64_t v37;
  uint64_t v38;
  os_unfair_lock_s *v39;
  unsigned int v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  _QWORD v60[5];
  _OWORD v61[2];
  uint64_t v62;

  v4 = v3;
  v56 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797898);
  MEMORY[0x1E0C80A78](v7);
  v55 = (uint64_t)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_1C1425CC0();
  v53 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v52 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_1C1425DC8();
  v50 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = type metadata accessor for Assertion();
  v12 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v3[19];
  v16 = v3[20];
  v49 = v3 + 16;
  __swift_project_boxed_opaque_existential_1(v3 + 16, v15);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v15, v16);
  v18 = sub_1C136CA38(v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v19 = sub_1C13734C0(v18, a1, a2);
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_1ED7978F0 != -1)
    swift_once();
  v20 = sub_1C1426854();
  __swift_project_value_buffer(v20, (uint64_t)qword_1ED798610);
  swift_bridgeObjectRetain_n();
  v21 = sub_1C1426848();
  v22 = sub_1C1426C80();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = v19;
    v24 = swift_slowAlloc();
    v48 = v12;
    v25 = (uint8_t *)v24;
    v47 = swift_slowAlloc();
    *(_QWORD *)&v61[0] = v47;
    *(_DWORD *)v25 = 136446210;
    v46 = v25 + 4;
    v26 = swift_bridgeObjectRetain();
    v27 = MEMORY[0x1C3BAC878](v26, v57);
    v29 = v28;
    swift_bridgeObjectRelease();
    v60[0] = sub_1C132AD90(v27, v29, (uint64_t *)v61);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    v19 = v23;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1324000, v21, v22, "Invalidating assertions for activity: %{public}s", v25, 0xCu);
    v30 = v47;
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v30, -1, -1);
    v31 = v25;
    v12 = v48;
    MEMORY[0x1C3BAD3F4](v31, -1, -1);

    v32 = *(_QWORD *)(v23 + 16);
    if (!v32)
      goto LABEL_16;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v32 = *(_QWORD *)(v19 + 16);
    if (!v32)
      goto LABEL_16;
  }
  v48 = v4[6];
  v33 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v46 = (uint8_t *)v19;
  v34 = v19 + v33;
  swift_beginAccess();
  v47 = *(_QWORD *)(v12 + 72);
  v35 = type metadata accessor for Assertion;
  do
  {
    v36 = v35;
    sub_1C1338F24(v34, (uint64_t)v14, (uint64_t (*)(_QWORD))v35);
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v52, v14, v54);
    sub_1C132C344((uint64_t)&v14[*(int *)(v57 + 24)], v55, &qword_1ED797898);
    sub_1C1425DA4();
    v38 = v4[19];
    v37 = v4[20];
    __swift_project_boxed_opaque_existential_1(v49, v38);
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v14, v38, v37);
    v39 = *(os_unfair_lock_s **)(v48 + 16);
    os_unfair_lock_lock(v39);
    v40 = sub_1C1425C9C();
    v41 = v4[7];
    if (*(_QWORD *)(v41 + 16) && (v42 = sub_1C1327378(v40), (v43 & 1) != 0))
    {
      sub_1C132E0A8(*(_QWORD *)(v41 + 56) + 40 * v42, (uint64_t)v61);
    }
    else
    {
      v62 = 0;
      memset(v61, 0, sizeof(v61));
    }
    os_unfair_lock_unlock(v39);
    sub_1C132C344((uint64_t)v61, (uint64_t)&v58, &qword_1ED792CA8);
    if (v59)
    {
      sub_1C1339184(&v58, (uint64_t)v60);
      __swift_project_boxed_opaque_existential_1(v60, v60[3]);
      sub_1C1419434((uint64_t)v11);
      sub_1C132C860((uint64_t)v61, &qword_1ED792CA8);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v11, v51);
      v35 = v36;
      sub_1C1339004((uint64_t)v14, (uint64_t (*)(_QWORD))v36);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v60);
    }
    else
    {
      sub_1C132C860((uint64_t)v61, &qword_1ED792CA8);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v11, v51);
      v35 = v36;
      sub_1C1339004((uint64_t)v14, (uint64_t (*)(_QWORD))v36);
      sub_1C132C860((uint64_t)&v58, &qword_1ED792CA8);
    }
    v34 += v47;
    --v32;
  }
  while (v32);
LABEL_16:
  v44 = swift_bridgeObjectRelease();
  return sub_1C13657A4(v44);
}

uint64_t sub_1C13680FC(uint64_t (*a1)(uint64_t), uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  _BOOL4 v34;
  uint64_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  void (*v46)(unint64_t, unint64_t, uint64_t);
  __int128 v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v60[3];
  uint64_t (*v61)(uint64_t);
  _QWORD *v62;
  uint64_t v63;
  unint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  char *v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v65 = a3;
  v60[2] = a2;
  v61 = a1;
  v3 = sub_1C1425CC0();
  v70 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v67 = (char *)v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v7 = (unint64_t)v60 - v6;
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797868);
  v8 = MEMORY[0x1E0C80A78](v69);
  v10 = (char *)v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v60 - v11;
  if (qword_1ED7978F0 == -1)
    goto LABEL_2;
LABEL_41:
  swift_once();
LABEL_2:
  v64 = v7;
  v13 = sub_1C1426854();
  v63 = __swift_project_value_buffer(v13, (uint64_t)qword_1ED798610);
  v14 = sub_1C1426848();
  v15 = sub_1C1426C80();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_1C1324000, v14, v15, "Purging assertions with missing owners", v16, 2u);
    MEMORY[0x1C3BAD3F4](v16, -1, -1);
  }

  v17 = v65[19];
  v18 = v65[20];
  v62 = v65 + 16;
  __swift_project_boxed_opaque_existential_1(v65 + 16, v17);
  v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);
  v72 = MEMORY[0x1E0DEE9D8];
  v20 = *(_QWORD *)(v19 + 64);
  v66 = v19 + 64;
  v21 = 1 << *(_BYTE *)(v19 + 32);
  v22 = -1;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  v7 = v22 & v20;
  *(_QWORD *)&v68 = (unint64_t)(v21 + 63) >> 6;
  swift_bridgeObjectRetain();
  v23 = 0;
  if (v7)
  {
LABEL_7:
    v24 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v25 = v24 | (v23 << 6);
    goto LABEL_21;
  }
  while (1)
  {
    if (__OFADD__(v23++, 1))
    {
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    if (v23 >= (uint64_t)v68)
      goto LABEL_27;
    v27 = *(_QWORD *)(v66 + 8 * v23);
    if (!v27)
      break;
LABEL_20:
    v7 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v23 << 6);
LABEL_21:
    (*(void (**)(char *, unint64_t, uint64_t))(v70 + 16))(v12, *(_QWORD *)(v19 + 48) + *(_QWORD *)(v70 + 72) * v25, v3);
    v29 = *(_QWORD *)(v19 + 56);
    v30 = type metadata accessor for Assertion();
    sub_1C1338F24(v29 + *(_QWORD *)(*(_QWORD *)(v30 - 8) + 72) * v25, (uint64_t)&v12[*(int *)(v69 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    sub_1C132A724((uint64_t)v12, (uint64_t)v10, &qword_1ED797868);
    sub_1C1368838((unint64_t *)&v72, (uint64_t)v10);
    sub_1C132C860((uint64_t)v10, &qword_1ED797868);
    if (v7)
      goto LABEL_7;
  }
  v28 = v23 + 1;
  if (v23 + 1 >= (uint64_t)v68)
    goto LABEL_27;
  v27 = *(_QWORD *)(v66 + 8 * v28);
  if (v27)
    goto LABEL_19;
  v28 = v23 + 2;
  if (v23 + 2 >= (uint64_t)v68)
    goto LABEL_27;
  v27 = *(_QWORD *)(v66 + 8 * v28);
  if (v27)
    goto LABEL_19;
  v28 = v23 + 3;
  if (v23 + 3 >= (uint64_t)v68)
    goto LABEL_27;
  v27 = *(_QWORD *)(v66 + 8 * v28);
  if (v27)
  {
LABEL_19:
    v23 = v28;
    goto LABEL_20;
  }
  v28 = v23 + 4;
  if (v23 + 4 < (uint64_t)v68)
  {
    v27 = *(_QWORD *)(v66 + 8 * v28);
    if (!v27)
    {
      while (1)
      {
        v23 = v28 + 1;
        if (__OFADD__(v28, 1))
          goto LABEL_40;
        if (v23 >= (uint64_t)v68)
          goto LABEL_27;
        v27 = *(_QWORD *)(v66 + 8 * v23);
        ++v28;
        if (v27)
          goto LABEL_20;
      }
    }
    goto LABEL_19;
  }
LABEL_27:
  swift_release();
  swift_bridgeObjectRelease();
  v31 = v72;
  swift_bridgeObjectRetain_n();
  v32 = sub_1C1426848();
  v33 = sub_1C1426C80();
  v34 = os_log_type_enabled(v32, v33);
  v35 = MEMORY[0x1E0DEE9B8];
  if (v34)
  {
    v36 = (uint8_t *)swift_slowAlloc();
    v37 = swift_slowAlloc();
    v72 = v37;
    *(_DWORD *)v36 = 136446210;
    v38 = swift_bridgeObjectRetain();
    v39 = MEMORY[0x1C3BAC878](v38, v3);
    v41 = v40;
    swift_bridgeObjectRelease();
    v71 = sub_1C132AD90(v39, v41, &v72);
    v35 = MEMORY[0x1E0DEE9B8];
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1324000, v32, v33, "Identifiers to purge: %{public}s", v36, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v37, -1, -1);
    MEMORY[0x1C3BAD3F4](v36, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v42 = v67;
  v43 = *(_QWORD *)(v31 + 16);
  v44 = v64;
  if (v43)
  {
    v45 = v31 + ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80));
    v69 = *(_QWORD *)(v70 + 72);
    v46 = *(void (**)(unint64_t, unint64_t, uint64_t))(v70 + 16);
    v60[1] = v31;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v47 = 136446210;
    v68 = v47;
    v66 = v35 + 8;
    do
    {
      v46(v44, v45, v3);
      v46((unint64_t)v42, v44, v3);
      v50 = sub_1C1426848();
      v51 = sub_1C1426C80();
      if (os_log_type_enabled(v50, v51))
      {
        v52 = swift_slowAlloc();
        v53 = swift_slowAlloc();
        v72 = v53;
        *(_DWORD *)v52 = v68;
        sub_1C1329AD0(&qword_1ED797888, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8CB40], MEMORY[0x1E0D8CB60]);
        v54 = sub_1C1427058();
        *(_QWORD *)(v52 + 4) = sub_1C132AD90(v54, v55, &v72);
        swift_bridgeObjectRelease();
        v48 = *(void (**)(char *, uint64_t))(v70 + 8);
        v48(v67, v3);
        _os_log_impl(&dword_1C1324000, v50, v51, "Removing invalid assertion %{public}s", (uint8_t *)v52, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v53, -1, -1);
        v56 = v52;
        v42 = v67;
        MEMORY[0x1C3BAD3F4](v56, -1, -1);
      }
      else
      {
        v48 = *(void (**)(char *, uint64_t))(v70 + 8);
        v48(v42, v3);
      }

      v49 = v65[20];
      __swift_project_boxed_opaque_existential_1(v62, v65[19]);
      v44 = v64;
      (*(void (**)(void))(v49 + 32))();
      v48((char *)v44, v3);
      v45 += v69;
      --v43;
    }
    while (v43);
    v57 = swift_bridgeObjectRelease_n();
    v58 = sub_1C13657A4(v57);
  }
  else
  {
    v58 = swift_bridgeObjectRelease();
  }
  return v61(v58);
}

void sub_1C1368838(unint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  NSObject *v55;
  char *v56;
  id v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint8_t *v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  uint8_t *v67;
  os_log_type_t v68;
  int v69;
  uint64_t v70;
  uint8_t *v71;
  void *v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint8_t *v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t *v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  unint64_t *v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  _QWORD v97[2];
  uint8_t *v98;
  void *v99;
  uint8_t *v100;
  NSObject *v101;
  char *v102;
  void (*v103)(char *, uint64_t);
  char *v104;
  char *v105;
  unint64_t *v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(char *, uint64_t, uint64_t);
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  id v114[2];

  v106 = a1;
  v114[1] = *(id *)MEMORY[0x1E0C80C00];
  v3 = sub_1C1425CC0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v104 = (char *)v97 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797868);
  v7 = MEMORY[0x1E0C80A78](v6);
  v102 = (char *)v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v97 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v105 = (char *)v97 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v101 = ((char *)v97 - v15);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)v97 - v17;
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)v97 - v20;
  v22 = MEMORY[0x1E0C80A78](v19);
  v24 = (char *)v97 - v23;
  v108 = v22;
  v25 = *(int *)(v22 + 48);
  v26 = (char *)v97 + v25 - v23;
  v27 = a2 + v25;
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v112 = a2;
  v110 = v28;
  v28((char *)v97 - v23, a2, v3);
  v111 = v27;
  sub_1C1338F24(v27, (uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
  v29 = sub_1C1425C9C();
  v109 = v4;
  v30 = *(void (**)(char *, uint64_t))(v4 + 8);
  v31 = v3;
  v103 = v30;
  v30(v24, v3);
  v32 = objc_msgSend((id)objc_opt_self(), sel_identifierWithPid_, v29);
  sub_1C1339004((uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
  if (v32)
  {
    v33 = (void *)objc_opt_self();
    v114[0] = 0;
    v34 = v32;
    v35 = objc_msgSend(v33, sel_handleForIdentifier_error_, v34, v114);
    if (v35)
    {
      v36 = v35;
      v37 = v114[0];

    }
    else
    {
      v57 = v114[0];
      v58 = (void *)sub_1C1425078();

      v107 = v58;
      swift_willThrow();

      if (qword_1ED7978F0 != -1)
        swift_once();
      v59 = sub_1C1426854();
      __swift_project_value_buffer(v59, (uint64_t)qword_1ED798610);
      v60 = v108;
      v61 = (uint8_t *)v101;
      v62 = (uint8_t *)v101 + *(int *)(v108 + 48);
      v63 = v31;
      v64 = v31;
      v65 = v110;
      v110((char *)v101, v112, v64);
      sub_1C1338F24(v111, (uint64_t)v62, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      v66 = (uint64_t)v105;
      sub_1C132A724((uint64_t)v61, (uint64_t)v105, &qword_1ED797868);
      v67 = (uint8_t *)sub_1C1426848();
      v68 = sub_1C1426C80();
      v69 = v68;
      if (os_log_type_enabled((os_log_t)v67, v68))
      {
        v101 = v67;
        v70 = swift_slowAlloc();
        LODWORD(v100) = v69;
        v71 = (uint8_t *)v70;
        v72 = (void *)swift_slowAlloc();
        v99 = v72;
        *(_DWORD *)v71 = 136446210;
        v114[0] = v72;
        v97[1] = v71 + 4;
        v98 = v71;
        v73 = *(int *)(v60 + 48);
        v74 = v65;
        v75 = (uint64_t)&v24[v73];
        v76 = v66 + v73;
        v74(v24, v66, v63);
        v77 = v76;
        v60 = v108;
        sub_1C1338F24(v77, v75, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
        v78 = v104;
        (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v104, v24, v63);
        sub_1C1339004(v75, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
        sub_1C1329AD0(&qword_1ED797888, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8CB40], MEMORY[0x1E0D8CB60]);
        v79 = sub_1C1427058();
        v81 = v80;
        v103(v78, v63);
        v82 = v79;
        v65 = v74;
        v113 = sub_1C132AD90(v82, v81, (uint64_t *)v114);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        sub_1C132C860((uint64_t)v105, &qword_1ED797868);
        v67 = (uint8_t *)v101;
        v83 = v98;
        _os_log_impl(&dword_1C1324000, v101, (os_log_type_t)v100, "Assertion originator is missing: %{public}s", v98, 0xCu);
        v84 = v99;
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v84, -1, -1);
        MEMORY[0x1C3BAD3F4](v83, -1, -1);
      }
      else
      {
        sub_1C132C860(v66, &qword_1ED797868);
      }

      v91 = v102;
      v92 = (uint64_t)&v102[*(int *)(v60 + 48)];
      v65(v102, v112, v63);
      sub_1C1338F24(v111, v92, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      v93 = v106;
      v94 = *v106;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v94 = sub_1C136C1D4(0, *(_QWORD *)(v94 + 16) + 1, 1, v94, &qword_1EF6DAAF8, (uint64_t (*)(_QWORD))MEMORY[0x1E0D8CB40]);
      v96 = *(_QWORD *)(v94 + 16);
      v95 = *(_QWORD *)(v94 + 24);
      if (v96 >= v95 >> 1)
        v94 = sub_1C136C1D4(v95 > 1, v96 + 1, 1, v94, &qword_1EF6DAAF8, (uint64_t (*)(_QWORD))MEMORY[0x1E0D8CB40]);
      *(_QWORD *)(v94 + 16) = v96 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v109 + 32))(v94+ ((*(unsigned __int8 *)(v109 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80))+ *(_QWORD *)(v109 + 72) * v96, v91, v63);

      *v93 = v94;
      sub_1C1339004(v92, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    }
  }
  else
  {
    v38 = (uint64_t)v18;
    v105 = v11;
    if (qword_1ED7978F0 != -1)
      swift_once();
    v39 = sub_1C1426854();
    __swift_project_value_buffer(v39, (uint64_t)qword_1ED798610);
    v40 = v108;
    v41 = (uint64_t)&v21[*(int *)(v108 + 48)];
    v42 = v31;
    v43 = v110;
    v110(v21, v112, v31);
    sub_1C1338F24(v111, v41, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    sub_1C132A724((uint64_t)v21, v38, &qword_1ED797868);
    v44 = sub_1C1426848();
    v45 = sub_1C1426C80();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc();
      v47 = (char *)swift_slowAlloc();
      v102 = v47;
      *(_DWORD *)v46 = 136446210;
      v114[0] = v47;
      v100 = v46 + 4;
      v101 = v46;
      v48 = *(int *)(v40 + 48);
      v49 = (uint64_t)&v24[v48];
      v50 = v38 + v48;
      v110(v24, v38, v42);
      sub_1C1338F24(v50, v49, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      v51 = v104;
      (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v104, v24, v42);
      v40 = v108;
      sub_1C1339004(v49, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      sub_1C1329AD0(&qword_1ED797888, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8CB40], MEMORY[0x1E0D8CB60]);
      v52 = sub_1C1427058();
      v54 = v53;
      v103(v51, v42);
      v113 = sub_1C132AD90(v52, v54, (uint64_t *)v114);
      v43 = v110;
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      sub_1C132C860(v38, &qword_1ED797868);
      v55 = v101;
      _os_log_impl(&dword_1C1324000, v44, v45, "Could not create a process identifier from assertion identifier: %{public}s", (uint8_t *)v101, 0xCu);
      v56 = v102;
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v56, -1, -1);
      MEMORY[0x1C3BAD3F4](v55, -1, -1);
    }
    else
    {
      sub_1C132C860(v38, &qword_1ED797868);
    }

    v85 = (uint64_t)v105;
    v86 = (uint64_t)&v105[*(int *)(v40 + 48)];
    v43(v105, v112, v42);
    sub_1C1338F24(v111, v86, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    v87 = v106;
    v88 = *v106;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v88 = sub_1C136C1D4(0, *(_QWORD *)(v88 + 16) + 1, 1, v88, &qword_1EF6DAAF8, (uint64_t (*)(_QWORD))MEMORY[0x1E0D8CB40]);
    v90 = *(_QWORD *)(v88 + 16);
    v89 = *(_QWORD *)(v88 + 24);
    if (v90 >= v89 >> 1)
      v88 = sub_1C136C1D4(v89 > 1, v90 + 1, 1, v88, &qword_1EF6DAAF8, (uint64_t (*)(_QWORD))MEMORY[0x1E0D8CB40]);
    *(_QWORD *)(v88 + 16) = v90 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v109 + 32))(v88+ ((*(unsigned __int8 *)(v109 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80))+ *(_QWORD *)(v109 + 72) * v90, v85, v42);
    *v87 = v88;
    sub_1C1339004(v86, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
  }
}

uint64_t sub_1C13691CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char *v33;
  void (*v34)(char *, uint64_t);
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;

  v43 = a2;
  v3 = sub_1C1425E4C();
  v41 = *(_QWORD *)(v3 - 8);
  v42 = v3;
  MEMORY[0x1E0C80A78](v3);
  v40 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C1425DF8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797868);
  v10 = MEMORY[0x1E0C80A78](v9);
  v38 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v36 - v13;
  v15 = *(int *)(v12 + 48);
  v16 = (char *)&v36 + v15 - v13;
  v17 = a1 + v15;
  v18 = sub_1C1425CC0();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  v44 = v14;
  v39 = a1;
  v45 = v18;
  v36 = v20;
  ((void (*)(char *, uint64_t))v20)(v14, a1);
  v37 = v17;
  sub_1C1338F24(v17, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
  v21 = type metadata accessor for Assertion();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, &v16[*(int *)(v21 + 20)], v5);
  sub_1C1339004((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
  if ((*(unsigned int (**)(char *, uint64_t))(v6 + 88))(v8, v5) == *MEMORY[0x1E0D8CC58])
  {
    v22 = v38;
    v23 = (uint64_t)&v38[*(int *)(v9 + 48)];
    v24 = v45;
    v36(v38, v39, v45);
    sub_1C1338F24(v37, v23, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    v26 = v40;
    v25 = v41;
    v27 = v42;
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v40, v23 + *(int *)(v21 + 40), v42);
    sub_1C1339004(v23, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    v28 = sub_1C1425E40();
    v30 = v29;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v27);
    if (v28 == sub_1C1425A80() && v30 == v31)
      v32 = 1;
    else
      v32 = sub_1C1427064();
    v33 = v44;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v34 = *(void (**)(char *, uint64_t))(v19 + 8);
    v34(v22, v24);
    v34(v33, v24);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v32 = 0;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v44, v45);
  }
  return v32 & 1;
}

uint64_t sub_1C13694B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int64_t v56;
  unint64_t v57;
  int64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int (*v62)(char *, uint64_t, uint64_t);
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(unsigned __int8 *, uint64_t, uint64_t);
  int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  _QWORD *v80;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  char *v85;
  _QWORD *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  void (*v114)(uint64_t, uint64_t);
  unint64_t v115;
  char v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  void (*v120)(char *, uint64_t);
  uint64_t v121;
  void (*v122)(char *, uint64_t);
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  unint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t i;
  int64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  void (*v141)(uint64_t, uint64_t, uint64_t);
  uint64_t v142;
  uint64_t v143;
  int64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t (*v149)();
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t (*v153)();
  _QWORD *v154;
  uint64_t v155;
  uint64_t v156;
  os_unfair_lock_s *v157;
  unsigned int v158;
  uint64_t v159;
  unint64_t v160;
  char v161;
  uint64_t v162;
  uint64_t v163;
  int v164;
  int64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  unsigned int v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  unsigned __int8 *v177;
  uint64_t v178;
  unint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  int64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  int v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  char *v196;
  int64_t v197;
  uint64_t v198;
  int *v199;
  uint64_t v200;
  _QWORD *v201;
  _QWORD *v202;
  unint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char v206[8];
  uint64_t v207;
  __int128 v208;
  uint64_t v209;
  _QWORD v210[4];
  _OWORD v211[2];
  uint64_t v212;

  v169 = a2;
  v166 = a1;
  v183 = sub_1C1425DC8();
  v182 = *(_QWORD *)(v183 - 8);
  MEMORY[0x1E0C80A78](v183);
  v181 = (char *)&v162 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = sub_1C1425E34();
  v174 = *(_QWORD *)(v175 - 8);
  v6 = MEMORY[0x1E0C80A78](v175);
  v172 = (char *)&v162 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v171 = (char *)&v162 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797898);
  v10 = MEMORY[0x1E0C80A78](v9);
  v185 = (uint64_t)&v162 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v170 = (uint64_t)&v162 - v13;
  MEMORY[0x1E0C80A78](v12);
  v178 = (uint64_t)&v162 - v14;
  v193 = sub_1C1425DF8();
  v191 = *(_QWORD *)(v193 - 8);
  MEMORY[0x1E0C80A78](v193);
  v16 = (unsigned __int8 *)&v162 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v199 = (int *)type metadata accessor for Assertion();
  v200 = *((_QWORD *)v199 - 1);
  v17 = MEMORY[0x1E0C80A78](v199);
  v198 = (uint64_t)&v162 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v167 = (uint64_t)&v162 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v192 = (uint64_t)&v162 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v168 = (uint64_t)&v162 - v24;
  MEMORY[0x1E0C80A78](v23);
  v194 = (uint64_t)&v162 - v25;
  v26 = sub_1C1425CC0();
  v205 = *(_QWORD *)(v26 - 8);
  v27 = MEMORY[0x1E0C80A78](v26);
  v184 = (char *)&v162 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v30 = (char *)&v162 - v29;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797870);
  v32 = MEMORY[0x1E0C80A78](v31);
  v196 = (char *)&v162 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x1E0C80A78](v32);
  v195 = (char *)&v162 - v35;
  v36 = MEMORY[0x1E0C80A78](v34);
  v38 = (char *)&v162 - v37;
  MEMORY[0x1E0C80A78](v36);
  v40 = (char *)&v162 - v39;
  v41 = v3[19];
  v42 = v3[20];
  v202 = v3;
  v201 = v3 + 16;
  __swift_project_boxed_opaque_existential_1(v3 + 16, v41);
  v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 8))(v41, v42);
  v207 = a3;
  v44 = sub_1C1330B68((uint64_t)sub_1C1375C9C, (uint64_t)v206, v43, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t, uint64_t))sub_1C136D3EC);
  result = swift_bridgeObjectRelease();
  v197 = 0;
  v46 = *(_QWORD *)(v44 + 64);
  v180 = v44 + 64;
  v187 = v44;
  v47 = 1 << *(_BYTE *)(v44 + 32);
  v48 = -1;
  if (v47 < 64)
    v48 = ~(-1 << v47);
  v49 = v48 & v46;
  v190 = *MEMORY[0x1E0D8CC58];
  v173 = *MEMORY[0x1E0D8CB88];
  v186 = (unint64_t)(v47 + 63) >> 6;
  v165 = v186 - 1;
  v179 = MEMORY[0x1E0DEE9D8];
  v188 = MEMORY[0x1E0DEE9E0];
  v204 = v26;
  v189 = v40;
  while (1)
  {
    if (v49)
    {
      v50 = __clz(__rbit64(v49));
      v51 = (v49 - 1) & v49;
      v52 = v50 | (v197 << 6);
LABEL_6:
      v53 = v187;
      (*(void (**)(char *, unint64_t, uint64_t))(v205 + 16))(v38, *(_QWORD *)(v187 + 48) + *(_QWORD *)(v205 + 72) * v52, v26);
      v54 = *(_QWORD *)(v53 + 56) + *(_QWORD *)(v200 + 72) * v52;
      v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797868);
      sub_1C1338F24(v54, (uint64_t)&v38[*(int *)(v55 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v38, 0, 1, v55);
      goto LABEL_25;
    }
    v56 = v197 + 1;
    if (__OFADD__(v197, 1))
    {
      __break(1u);
LABEL_88:
      __break(1u);
LABEL_89:
      __break(1u);
      goto LABEL_90;
    }
    if (v56 < v186)
    {
      v57 = *(_QWORD *)(v180 + 8 * v56);
      if (v57)
        goto LABEL_10;
      v58 = v197 + 2;
      ++v197;
      if (v56 + 1 < v186)
      {
        v57 = *(_QWORD *)(v180 + 8 * v58);
        if (v57)
          goto LABEL_13;
        v197 = v56 + 1;
        if (v56 + 2 < v186)
        {
          v57 = *(_QWORD *)(v180 + 8 * (v56 + 2));
          if (v57)
          {
            v56 += 2;
            goto LABEL_10;
          }
          v58 = v56 + 3;
          v197 = v56 + 2;
          if (v56 + 3 < v186)
          {
            v57 = *(_QWORD *)(v180 + 8 * v58);
            if (v57)
            {
LABEL_13:
              v56 = v58;
LABEL_10:
              v51 = (v57 - 1) & v57;
              v52 = __clz(__rbit64(v57)) + (v56 << 6);
              v197 = v56;
              goto LABEL_6;
            }
            while (1)
            {
              v56 = v58 + 1;
              if (__OFADD__(v58, 1))
                goto LABEL_89;
              if (v56 >= v186)
                break;
              v57 = *(_QWORD *)(v180 + 8 * v56);
              ++v58;
              if (v57)
                goto LABEL_10;
            }
            v197 = v165;
          }
        }
      }
    }
    v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797868);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v38, 1, 1, v59);
    v51 = 0;
LABEL_25:
    sub_1C132A724((uint64_t)v38, (uint64_t)v40, &qword_1ED797870);
    v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797868);
    v61 = *(_QWORD *)(v60 - 8);
    v62 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48);
    if (v62(v40, 1, v60) == 1)
      break;
    v203 = v51;
    v63 = v38;
    v64 = &v40[*(int *)(v60 + 48)];
    v26 = v204;
    (*(void (**)(char *, char *, uint64_t))(v205 + 32))(v30, v40, v204);
    v65 = (uint64_t)v64;
    v66 = v193;
    v67 = v30;
    v68 = v194;
    sub_1C1339140(v65, v194, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    v69 = v68 + v199[5];
    v70 = v191;
    v71 = *(void (**)(unsigned __int8 *, uint64_t, uint64_t))(v191 + 16);
    v71(v16, v69, v66);
    v72 = (*(uint64_t (**)(unsigned __int8 *, uint64_t))(v70 + 88))(v16, v66);
    if (v72 == v190)
    {
      v176 = v67;
      (*(void (**)(unsigned __int8 *, uint64_t))(v70 + 96))(v16, v66);
      v177 = v16;
      v73 = *v16;
      v74 = v178;
      sub_1C132C344(v68 + v199[6], v178, &qword_1ED797898);
      v75 = sub_1C1425CFC();
      v76 = *(_QWORD *)(v75 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75) == 1)
      {
        sub_1C1339004(v68, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
        v30 = v176;
        (*(void (**)(char *, uint64_t))(v205 + 8))(v176, v26);
LABEL_42:
        v16 = v177;
        v38 = v63;
LABEL_43:
        v40 = v189;
        v49 = v203;
        goto LABEL_44;
      }
      v77 = v74;
      v78 = v170;
      sub_1C132C344(v77, v170, &qword_1ED797898);
      v79 = (*(uint64_t (**)(uint64_t, uint64_t))(v76 + 88))(v78, v75);
      if (v79 != v173)
      {
        sub_1C1339004(v68, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
        v30 = v176;
        (*(void (**)(char *, uint64_t))(v205 + 8))(v176, v26);
        (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v78, v75);
        goto LABEL_42;
      }
      v164 = v73;
      (*(void (**)(uint64_t, uint64_t))(v76 + 96))(v78, v75);
      (*(void (**)(char *, uint64_t, uint64_t))(v174 + 32))(v171, v78, v175);
      v80 = (_QWORD *)sub_1C1425E28();
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v163 = v76;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v80 = sub_1C136C3E0(0, v80[2] + 1, 1, v80);
      v82 = v168;
      v30 = v176;
      v84 = v80[2];
      v83 = v80[3];
      v85 = v172;
      v38 = v63;
      if (v84 >= v83 >> 1)
      {
        v80 = sub_1C136C3E0((_QWORD *)(v83 > 1), v84 + 1, 1, v80);
        v85 = v172;
      }
      v80[2] = v84 + 1;
      v86 = &v80[2 * v84];
      v87 = v169;
      v86[4] = v166;
      v86[5] = v87;
      v88 = v85;
      sub_1C1425E1C();
      v89 = v185;
      (*(void (**)(uint64_t, char *, uint64_t))(v174 + 16))(v185, v88, v175);
      v90 = v163;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v163 + 104))(v89, v173, v75);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v90 + 56))(v89, 0, 1, v75);
      v176 = *(char **)(v205 + 16);
      v91 = v194;
      ((void (*)(uint64_t, uint64_t, uint64_t))v176)(v82, v194, v204);
      v92 = v199;
      v93 = v199[10];
      v94 = v91 + v93;
      v95 = v82 + v93;
      v96 = sub_1C1425E4C();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 16))(v95, v94, v96);
      v71((unsigned __int8 *)(v82 + v92[5]), v69, v193);
      v97 = v91;
      sub_1C132C344(v89, v82 + v92[6], &qword_1ED797898);
      v98 = v92[8];
      v99 = (uint64_t *)(v91 + v92[7]);
      v101 = *v99;
      v100 = v99[1];
      v102 = v97 + v98;
      v103 = v82 + v98;
      v104 = sub_1C14251B0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 16))(v103, v102, v104);
      v105 = v97 + v92[9];
      v106 = *(_QWORD *)v105;
      LOBYTE(v105) = *(_BYTE *)(v105 + 8);
      v107 = (_QWORD *)(v82 + v92[7]);
      *v107 = v101;
      v107[1] = v100;
      v108 = v82 + v92[9];
      *(_QWORD *)v108 = v106;
      *(_BYTE *)(v108 + 8) = v105;
      swift_bridgeObjectRetain();
      v109 = v89;
      v26 = v204;
      sub_1C132C860(v109, &qword_1ED797898);
      v110 = (uint64_t)v184;
      ((void (*)(char *, char *, uint64_t))v176)(v184, v30, v26);
      v111 = v192;
      sub_1C1338F24(v82, v192, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      v112 = v188;
      v113 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v211[0] = v112;
      sub_1C13C207C(v111, v110, v113);
      v188 = *(_QWORD *)&v211[0];
      swift_bridgeObjectRelease();
      v114 = *(void (**)(uint64_t, uint64_t))(v205 + 8);
      v114(v110, v26);
      if (!v164)
      {
        sub_1C1339004(v82, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
        v122 = *(void (**)(char *, uint64_t))(v174 + 8);
        v123 = v175;
        v122(v172, v175);
        v122(v171, v123);
        sub_1C1339004(v97, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
        v114((uint64_t)v30, v26);
        v16 = v177;
        goto LABEL_43;
      }
      sub_1C1338F24(v82, v167, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      v115 = v179;
      v116 = swift_isUniquelyReferenced_nonNull_native();
      v16 = v177;
      v40 = v189;
      v49 = v203;
      if ((v116 & 1) == 0)
        v115 = sub_1C136C1D4(0, *(_QWORD *)(v115 + 16) + 1, 1, v115, &qword_1ED793A58, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      v179 = v115;
      v118 = *(_QWORD *)(v115 + 16);
      v117 = *(_QWORD *)(v115 + 24);
      if (v118 >= v117 >> 1)
        v179 = sub_1C136C1D4(v117 > 1, v118 + 1, 1, v179, &qword_1ED793A58, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      v119 = v179;
      *(_QWORD *)(v179 + 16) = v118 + 1;
      sub_1C1339140(v167, v119+ ((*(unsigned __int8 *)(v200 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v200 + 80))+ *(_QWORD *)(v200 + 72) * v118, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      sub_1C1339004(v168, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      v120 = *(void (**)(char *, uint64_t))(v174 + 8);
      v121 = v175;
      v120(v172, v175);
      v120(v171, v121);
      sub_1C1339004(v194, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      v26 = v204;
      v114((uint64_t)v30, v204);
LABEL_44:
      result = sub_1C132C860(v178, &qword_1ED797898);
    }
    else
    {
      sub_1C1339004(v68, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      (*(void (**)(char *, uint64_t))(v205 + 8))(v67, v26);
      result = (*(uint64_t (**)(unsigned __int8 *, uint64_t))(v70 + 8))(v16, v66);
      v30 = v67;
      v38 = v63;
      v40 = v189;
      v49 = v203;
    }
  }
  v203 = v60;
  swift_release();
  v124 = *(_QWORD *)(v188 + 64);
  v194 = v188 + 64;
  v125 = 1 << *(_BYTE *)(v188 + 32);
  v126 = -1;
  if (v125 < 64)
    v126 = ~(-1 << v125);
  v127 = v126 & v124;
  v197 = (unint64_t)(v125 + 63) >> 6;
  v193 = v197 - 1;
  result = swift_bridgeObjectRetain();
  v128 = 0;
  v129 = (uint64_t)v195;
  v130 = v192;
  if (!v127)
    goto LABEL_51;
LABEL_49:
  v131 = __clz(__rbit64(v127));
  v127 &= v127 - 1;
  v132 = v131 | (v128 << 6);
  v133 = (uint64_t)v196;
  v134 = v203;
LABEL_50:
  v135 = v188;
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v205 + 16))(v133, *(_QWORD *)(v188 + 48) + *(_QWORD *)(v205 + 72) * v132, v204);
  sub_1C1338F24(*(_QWORD *)(v135 + 56) + *(_QWORD *)(v200 + 72) * v132, v133 + *(int *)(v134 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
  for (i = 0; ; i = 1)
  {
    while (1)
    {
LABEL_63:
      (*(void (**)(uint64_t, uint64_t, uint64_t, unint64_t))(v61 + 56))(v133, i, 1, v134);
      sub_1C132A724(v133, v129, &qword_1ED797870);
      if (v62((char *)v129, 1, v134) == 1)
      {
        swift_release();
        v145 = *(_QWORD *)(v179 + 16);
        if (v145)
        {
          v203 = v202[6];
          v146 = v200;
          v147 = v179 + ((*(unsigned __int8 *)(v200 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v200 + 80));
          swift_bridgeObjectRetain();
          swift_beginAccess();
          v148 = *(_QWORD *)(v146 + 72);
          v149 = type metadata accessor for Assertion;
          do
          {
            v152 = v198;
            v153 = v149;
            sub_1C1338F24(v147, v198, (uint64_t (*)(_QWORD))v149);
            v154 = v202;
            v155 = v202[19];
            v156 = v202[20];
            __swift_project_boxed_opaque_existential_1(v201, v155);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v156 + 32))(v152, v155, v156);
            sub_1C1360440(v152);
            v157 = *(os_unfair_lock_s **)(v203 + 16);
            os_unfair_lock_lock(v157);
            v158 = sub_1C1425C9C();
            v159 = v154[7];
            if (*(_QWORD *)(v159 + 16) && (v160 = sub_1C1327378(v158), (v161 & 1) != 0))
            {
              sub_1C132E0A8(*(_QWORD *)(v159 + 56) + 40 * v160, (uint64_t)v211);
            }
            else
            {
              v212 = 0;
              memset(v211, 0, sizeof(v211));
            }
            v149 = v153;
            os_unfair_lock_unlock(v157);
            sub_1C132C344((uint64_t)v211, (uint64_t)&v208, &qword_1ED792CA8);
            if (v209)
            {
              sub_1C1339184(&v208, (uint64_t)v210);
              v150 = v198;
              (*(void (**)(char *, uint64_t, uint64_t))(v205 + 16))(v184, v198, v204);
              sub_1C132C344(v150 + v199[6], v185, &qword_1ED797898);
              v151 = (uint64_t)v181;
              sub_1C1425DA4();
              __swift_project_boxed_opaque_existential_1(v210, v210[3]);
              sub_1C1419434(v151);
              (*(void (**)(uint64_t, uint64_t))(v182 + 8))(v151, v183);
              sub_1C132C860((uint64_t)v211, &qword_1ED792CA8);
              sub_1C1339004(v150, (uint64_t (*)(_QWORD))v153);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v210);
            }
            else
            {
              sub_1C132C860((uint64_t)v211, &qword_1ED792CA8);
              sub_1C1339004(v198, (uint64_t (*)(_QWORD))v153);
              sub_1C132C860((uint64_t)&v208, &qword_1ED792CA8);
            }
            v147 += v148;
            --v145;
          }
          while (v145);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      sub_1C1339140(v129 + *(int *)(v134 + 48), v130, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      v139 = v202[19];
      v140 = v202[20];
      __swift_project_boxed_opaque_existential_1(v201, v139);
      v141 = *(void (**)(uint64_t, uint64_t, uint64_t))(v140 + 24);
      v142 = v140;
      v129 = (uint64_t)v195;
      v141(v130, v139, v142);
      v143 = v205;
      sub_1C1339004(v130, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      result = (*(uint64_t (**)(uint64_t, uint64_t))(v143 + 8))(v129, v204);
      if (v127)
        goto LABEL_49;
LABEL_51:
      v137 = v128 + 1;
      v133 = (uint64_t)v196;
      v134 = v203;
      if (__OFADD__(v128, 1))
        goto LABEL_88;
      if (v137 < v197)
      {
        v138 = *(_QWORD *)(v194 + 8 * v137);
        if (v138)
          goto LABEL_54;
        v128 += 2;
        if (v137 + 1 >= v197)
        {
          v127 = 0;
          i = 1;
          v128 = v137;
          continue;
        }
        v138 = *(_QWORD *)(v194 + 8 * v128);
        if (v138)
        {
          ++v137;
LABEL_54:
          v127 = (v138 - 1) & v138;
          v132 = __clz(__rbit64(v138)) + (v137 << 6);
          v128 = v137;
          goto LABEL_50;
        }
        if (v137 + 2 < v197)
          break;
      }
      v127 = 0;
      i = 1;
    }
    v138 = *(_QWORD *)(v194 + 8 * (v137 + 2));
    if (v138)
    {
      v137 += 2;
      goto LABEL_54;
    }
    v144 = v137 + 3;
    if (v137 + 3 < v197)
      break;
    v127 = 0;
    v128 = v137 + 2;
  }
  v138 = *(_QWORD *)(v194 + 8 * v144);
  if (v138)
  {
    v137 += 3;
    goto LABEL_54;
  }
  while (1)
  {
    v137 = v144 + 1;
    if (__OFADD__(v144, 1))
      break;
    if (v137 >= v197)
    {
      v127 = 0;
      i = 1;
      v128 = v193;
      goto LABEL_63;
    }
    v138 = *(_QWORD *)(v194 + 8 * v137);
    ++v144;
    if (v138)
      goto LABEL_54;
  }
LABEL_90:
  __break(1u);
  return result;
}

uint64_t sub_1C136A8F4(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t result;
  unint64_t v27;
  unint64_t v28;
  uint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  os_unfair_lock_s *v48;
  unsigned int v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t);
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  int64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  _QWORD *v73;
  _QWORD *v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char v79[16];
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  _QWORD v83[4];
  _OWORD v84[2];
  uint64_t v85;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797898);
  MEMORY[0x1E0C80A78](v4);
  v69 = (uint64_t)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_1C1425DC8();
  v67 = *(_QWORD *)(v68 - 8);
  MEMORY[0x1E0C80A78](v68);
  v66 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for Assertion();
  v70 = *(_QWORD *)(v65 - 8);
  MEMORY[0x1E0C80A78](v65);
  v77 = (uint64_t)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C1425CC0();
  v78 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v64 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v76 = (char *)&v59 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797870);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v59 - v16;
  v19 = v1[19];
  v18 = v1[20];
  v73 = v1 + 16;
  __swift_project_boxed_opaque_existential_1(v1 + 16, v19);
  v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v19, v18);
  v80 = a1;
  v21 = sub_1C1330B68((uint64_t)sub_1C136B9E4, (uint64_t)v79, v20, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t, uint64_t))sub_1C136D3EC);
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(v21 + 64);
  v62 = v21 + 64;
  v23 = 1 << *(_BYTE *)(v21 + 32);
  v24 = -1;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  v25 = v24 & v22;
  v74 = v2;
  result = swift_beginAccess();
  v27 = 0;
  v28 = (unint64_t)(v23 + 63) >> 6;
  v59 = v28 - 1;
  v63 = v28;
  v61 = v28 - 5;
  v71 = v21;
  v60 = v21 + 104;
  v29 = &qword_1ED792CA8;
  v72 = v15;
  while (1)
  {
    if (v25)
    {
      v30 = __clz(__rbit64(v25));
      v25 &= v25 - 1;
      v31 = v30 | (v27 << 6);
      goto LABEL_8;
    }
    v35 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v35 >= v63)
    {
      v37 = v27;
    }
    else
    {
      v36 = *(_QWORD *)(v62 + 8 * v35);
      if (v36)
        goto LABEL_12;
      v37 = v27 + 1;
      if ((uint64_t)(v27 + 2) < v63)
      {
        v36 = *(_QWORD *)(v62 + 8 * (v27 + 2));
        if (v36)
        {
          v35 = v27 + 2;
          goto LABEL_12;
        }
        v37 = v27 + 2;
        if ((uint64_t)(v27 + 3) < v63)
        {
          v36 = *(_QWORD *)(v62 + 8 * (v27 + 3));
          if (v36)
          {
            v35 = v27 + 3;
LABEL_12:
            v25 = (v36 - 1) & v36;
            v31 = __clz(__rbit64(v36)) + (v35 << 6);
            v27 = v35;
LABEL_8:
            v32 = v71;
            (*(void (**)(char *, unint64_t, uint64_t))(v78 + 16))(v15, *(_QWORD *)(v71 + 48) + *(_QWORD *)(v78 + 72) * v31, v8);
            v33 = *(_QWORD *)(v32 + 56) + *(_QWORD *)(v70 + 72) * v31;
            v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797868);
            sub_1C1338F24(v33, (uint64_t)&v15[*(int *)(v34 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v15, 0, 1, v34);
            goto LABEL_15;
          }
          v35 = v27 + 4;
          v37 = v27 + 3;
          if ((uint64_t)(v27 + 4) < v63)
          {
            v36 = *(_QWORD *)(v62 + 8 * v35);
            if (v36)
              goto LABEL_12;
            while (v61 != v27)
            {
              v36 = *(_QWORD *)(v60 + 8 * v27++);
              if (v36)
              {
                v35 = v27 + 4;
                goto LABEL_12;
              }
            }
            v37 = v59;
          }
        }
      }
    }
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797868);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v15, 1, 1, v38);
    v25 = 0;
    v27 = v37;
LABEL_15:
    sub_1C132A724((uint64_t)v15, (uint64_t)v17, &qword_1ED797870);
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797868);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 48))(v17, 1, v39) == 1)
      return swift_release();
    v75 = v27;
    v40 = v29;
    v41 = (uint64_t)&v17[*(int *)(v39 + 48)];
    v42 = v76;
    v43 = v8;
    (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v76, v17, v8);
    v44 = v77;
    sub_1C1339140(v41, v77, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    v45 = v74;
    v46 = v74[19];
    v47 = v74[20];
    __swift_project_boxed_opaque_existential_1(v73, v46);
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v42, v46, v47);
    sub_1C1360440(v44);
    v48 = *(os_unfair_lock_s **)(v45[6] + 16);
    os_unfair_lock_lock(v48);
    v49 = sub_1C1425C9C();
    v50 = v45[7];
    if (*(_QWORD *)(v50 + 16) && (v51 = sub_1C1327378(v49), (v52 & 1) != 0))
    {
      sub_1C132E0A8(*(_QWORD *)(v50 + 56) + 40 * v51, (uint64_t)v84);
    }
    else
    {
      v85 = 0;
      memset(v84, 0, sizeof(v84));
    }
    v8 = v43;
    v29 = v40;
    os_unfair_lock_unlock(v48);
    sub_1C132C344((uint64_t)v84, (uint64_t)&v81, v40);
    if (v82)
    {
      sub_1C1339184(&v81, (uint64_t)v83);
      v53 = v17;
      v54 = v78;
      v55 = v76;
      (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v64, v76, v8);
      v56 = v77;
      sub_1C132C344(v77 + *(int *)(v65 + 24), v69, &qword_1ED797898);
      v57 = (uint64_t)v66;
      v29 = v40;
      sub_1C1425DA4();
      __swift_project_boxed_opaque_existential_1(v83, v83[3]);
      sub_1C1419434(v57);
      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v57, v68);
      sub_1C132C860((uint64_t)v84, v40);
      sub_1C1339004(v56, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      v58 = *(void (**)(char *, uint64_t))(v54 + 8);
      v17 = v53;
      v58(v55, v8);
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v83);
    }
    else
    {
      sub_1C132C860((uint64_t)v84, v40);
      sub_1C1339004(v77, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      (*(void (**)(char *, uint64_t))(v78 + 8))(v76, v8);
      result = sub_1C132C860((uint64_t)&v81, v40);
    }
    v15 = v72;
    v27 = v75;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C136B068(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;

  v29 = a1;
  v27 = a3;
  v30 = (char *)a2;
  v3 = sub_1C1425E4C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (uint64_t *)((char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797868);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v27 - v12;
  v14 = (char *)&v27 + *(int *)(v11 + 48) - v12;
  v15 = sub_1C1425CC0();
  v28 = *(_QWORD *)(v15 - 8);
  v16 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
  v16(v13, v29, v15);
  sub_1C1338F24((uint64_t)v30, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
  v17 = (uint64_t)&v10[*(int *)(v7 + 48)];
  v29 = v10;
  v30 = v13;
  v16(v10, v13, v15);
  sub_1C1338F24((uint64_t)v14, v17, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
  v18 = type metadata accessor for Assertion();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v4 + 16))(v6, v17 + *(int *)(v18 + 40), v3);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v4 + 88))(v6, v3) == *MEMORY[0x1E0D8CCC8])
  {
    (*(void (**)(uint64_t *, uint64_t))(v4 + 96))(v6, v3);
    v20 = *v6;
    v19 = v6[1];
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
    v20 = 0;
    v19 = 0;
  }
  v21 = v29;
  v22 = v28;
  sub_1C1339004(v17, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
  v23 = sub_1C1425A80();
  if (v19)
  {
    if (v20 == v23 && v19 == v24)
      v25 = 1;
    else
      v25 = sub_1C1427064();
    swift_bridgeObjectRelease();
    sub_1C132C860((uint64_t)v30, &qword_1ED797868);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C132C860((uint64_t)v30, &qword_1ED797868);
    swift_bridgeObjectRelease();
    v25 = 0;
  }
  (*(void (**)(char *, uint64_t))(v22 + 8))(v21, v15);
  return v25 & 1;
}

uint64_t sub_1C136B2E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[4];

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 160);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v1 + 128), v3);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  v7[2] = a1;
  LOBYTE(a1) = sub_1C1363A1C((uint64_t (*)(char *))sub_1C13759E4, (char)v7, v5);
  swift_bridgeObjectRelease();
  return a1 & 1;
}

uint64_t sub_1C136B364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C13694B8(a1, a2, a3);
}

uint64_t sub_1C136B384(uint64_t a1)
{
  return sub_1C136A8F4(a1);
}

uint64_t sub_1C136B3A4(uint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  unint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;

  result = type metadata accessor for ActivityManagerEvent(0);
  if (*((_BYTE *)a1 + *(int *)(result + 20)))
  {
    if (*((_BYTE *)a1 + *(int *)(result + 20)) == 3)
      return sub_1C1367B34(*a1, a1[1], 2);
  }
  else
  {
    v5 = *a1;
    v6 = a1[1];
    v7 = *(os_unfair_lock_s **)(*(_QWORD *)(a2 + 16) + 16);
    os_unfair_lock_lock(v7);
    v8 = swift_retain();
    sub_1C1372D1C(v8, v5, v6, a2);
    swift_release();
    os_unfair_lock_unlock(v7);
    return sub_1C136B460(a1);
  }
  return result;
}

uint64_t sub_1C136B460(uint64_t *a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint8_t *v41;
  char *v42;
  uint64_t v43;
  _QWORD v44[2];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;

  v2 = (int *)type metadata accessor for Assertion();
  v3 = MEMORY[0x1E0C80A78](v2);
  v50 = (uint64_t)v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v51 = (uint64_t)v44 - v6;
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v44 - v7;
  v9 = sub_1C1425CC0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1C1425DF8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Activity();
  result = sub_1C14258E8();
  if ((result & 1) != 0)
  {
    getpid();
    (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0D8CC68], v13);
    sub_1C1425CA8();
    sub_1C1425CB4();
    v48 = v12;
    v49 = v10;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v8, v12, v9);
    v18 = &v8[v2[10]];
    v19 = *a1;
    v20 = a1[1];
    *(_QWORD *)v18 = v19;
    *((_QWORD *)v18 + 1) = v20;
    v21 = *MEMORY[0x1E0D8CCD0];
    v22 = sub_1C1425E4C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v18, v21, v22);
    v23 = &v8[v2[5]];
    v47 = v14;
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v23, v16, v13);
    v24 = &v8[v2[6]];
    v25 = sub_1C1425CFC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
    swift_bridgeObjectRetain();
    sub_1C142518C();
    v26 = &v8[v2[7]];
    *(_QWORD *)v26 = 0xD00000000000001DLL;
    *((_QWORD *)v26 + 1) = 0x80000001C142E470;
    v27 = &v8[v2[9]];
    *(_QWORD *)v27 = 0;
    v27[8] = 1;
    v28 = v52[19];
    v29 = v52[20];
    __swift_project_boxed_opaque_existential_1(v52 + 16, v28);
    (*(void (**)(char *, uint64_t, uint64_t))(v29 + 24))(v8, v28, v29);
    if (qword_1ED7978F0 != -1)
      swift_once();
    v30 = sub_1C1426854();
    __swift_project_value_buffer(v30, (uint64_t)qword_1ED798610);
    v31 = v51;
    sub_1C1338F24((uint64_t)v8, v51, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    v32 = sub_1C1426848();
    v33 = sub_1C1426C80();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = swift_slowAlloc();
      v45 = v13;
      v35 = (uint8_t *)v34;
      v36 = swift_slowAlloc();
      v46 = v9;
      v37 = v36;
      v54 = v36;
      *(_DWORD *)v35 = 136380675;
      v44[1] = v35 + 4;
      sub_1C1338F24(v31, v50, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      v38 = sub_1C1426AA0();
      v53 = sub_1C132AD90(v38, v39, &v54);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      sub_1C1339004(v31, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      _os_log_impl(&dword_1C1324000, v32, v33, "Acquired momentary activity prominence assertion: %{private}s", v35, 0xCu);
      swift_arrayDestroy();
      v40 = v37;
      v9 = v46;
      MEMORY[0x1C3BAD3F4](v40, -1, -1);
      v41 = v35;
      v13 = v45;
      MEMORY[0x1C3BAD3F4](v41, -1, -1);
    }
    else
    {
      sub_1C1339004(v31, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    }

    v43 = v47;
    v42 = v48;
    sub_1C1360440((uint64_t)v8);
    sub_1C1339004((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v42, v9);
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v16, v13);
  }
  return result;
}

uint64_t sub_1C136B8E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = v0[19];
  v2 = v0[20];
  __swift_project_boxed_opaque_existential_1(v0 + 16, v1);
  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  v4 = sub_1C135C8E8(v3);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v4 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797B20);
    v5 = sub_1C1426FBC();
  }
  else
  {
    v5 = MEMORY[0x1E0DEE9E0];
  }
  v8 = v5;
  v6 = swift_bridgeObjectRetain();
  sub_1C13555F8(v6, 1, &v8);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1C136B9C4()
{
  return sub_1C136B8E4();
}

uint64_t sub_1C136B9E4(char *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C136B068(a1, a2, *(_QWORD *)(v2 + 16)) & 1;
}

uint64_t sub_1C136BA00(uint64_t a1, uint64_t a2)
{
  return sub_1C136BA1C(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F798], &qword_1EF6DB190, MEMORY[0x1E0C8F7B0]);
}

uint64_t sub_1C136BA1C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, unint64_t, uint64_t);
  uint64_t v21;
  unint64_t *v22;
  unint64_t *v23;
  uint64_t v24;
  char v25;
  void (*v26)(uint64_t, uint64_t);
  BOOL v28;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, unint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);

  v10 = a3(0);
  v11 = MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v30 - v14;
  v16 = *(_QWORD *)(a1 + 16);
  if (v16 == *(_QWORD *)(a2 + 16))
  {
    if (!v16 || a1 == a2)
    {
      v25 = 1;
    }
    else
    {
      v33 = v13;
      v34 = v12;
      v35 = a3;
      v17 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      v30 = *(_QWORD *)(v12 + 72);
      v31 = a1;
      v32 = *(void (**)(uint64_t, unint64_t, uint64_t))(v12 + 16);
      v18 = v16 - 1;
      v19 = v13;
      do
      {
        v20 = v32;
        v32((uint64_t)v15, a1 + v17, v10);
        v21 = a2;
        v20(v19, a2 + v17, v10);
        v22 = a4;
        v23 = a4;
        v24 = a5;
        sub_1C1329AD0(v23, v35, a5);
        v25 = sub_1C1426A70();
        v26 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
        v26(v19, v10);
        v26((uint64_t)v15, v10);
        v28 = v18-- != 0;
        if ((v25 & 1) == 0)
          break;
        v17 += v30;
        a5 = v24;
        a4 = v22;
        a2 = v21;
        a1 = v31;
      }
      while (v28);
    }
  }
  else
  {
    v25 = 0;
  }
  return v25 & 1;
}

uint64_t sub_1C136BBC0(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  BOOL v23;
  uint64_t v24;
  unint64_t i;
  uint64_t v26;
  _QWORD *v27;
  BOOL v28;
  uint64_t v29;
  int64_t v30;
  int64_t v31;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v29 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(result + 56);
  v30 = (unint64_t)(v4 + 63) >> 6;
  v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v31 = v3;
      v9 = v8 | (v3 << 6);
      goto LABEL_26;
    }
    v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v10 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v10);
    v12 = v3 + 1;
    if (!v11)
    {
      v12 = v3 + 2;
      if (v3 + 2 >= v30)
        return 1;
      v11 = *(_QWORD *)(v29 + 8 * v12);
      if (!v11)
      {
        v12 = v3 + 3;
        if (v3 + 3 >= v30)
          return 1;
        v11 = *(_QWORD *)(v29 + 8 * v12);
        if (!v11)
        {
          v12 = v3 + 4;
          if (v3 + 4 >= v30)
            return 1;
          v11 = *(_QWORD *)(v29 + 8 * v12);
          if (!v11)
            break;
        }
      }
    }
LABEL_25:
    v6 = (v11 - 1) & v11;
    v31 = v12;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_26:
    v14 = result;
    v15 = (uint64_t *)(*(_QWORD *)(result + 48) + 16 * v9);
    v17 = *v15;
    v16 = v15[1];
    sub_1C14270E8();
    swift_bridgeObjectRetain();
    sub_1C1426AD0();
    v18 = sub_1C1427100();
    v19 = -1 << *(_BYTE *)(a2 + 32);
    v20 = v18 & ~v19;
    if (((*(_QWORD *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
      goto LABEL_41;
    v21 = *(_QWORD *)(a2 + 48);
    v22 = (_QWORD *)(v21 + 16 * v20);
    v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_1C1427064() & 1) == 0)
    {
      v24 = ~v19;
      for (i = v20 + 1; ; i = v26 + 1)
      {
        v26 = i & v24;
        if (((*(_QWORD *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0)
          break;
        v27 = (_QWORD *)(v21 + 16 * v26);
        v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_1C1427064() & 1) != 0)
          goto LABEL_7;
      }
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    result = v14;
    v3 = v31;
  }
  v13 = v3 + 5;
  if (v3 + 5 >= v30)
    return 1;
  v11 = *(_QWORD *)(v29 + 8 * v13);
  if (v11)
  {
    v12 = v3 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v12 >= v30)
      return 1;
    v11 = *(_QWORD *)(v29 + 8 * v12);
    ++v13;
    if (v11)
      goto LABEL_25;
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_1C136BE60(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t i;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  BOOL v27;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  int64_t v33;
  int v35;
  uint64_t v36;

  if (result == a2)
    return 1;
  v2 = a2;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v29 = result;
  v30 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(result + 56);
  v31 = (unint64_t)(v4 + 63) >> 6;
  v36 = a2 + 56;
  if (v6)
    goto LABEL_7;
LABEL_8:
  v8 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    goto LABEL_45;
  }
  if (v8 >= v31)
    return 1;
  v9 = *(_QWORD *)(v30 + 8 * v8);
  v10 = v3 + 1;
  if (!v9)
  {
    v10 = v8 + 1;
    if (v8 + 1 >= v31)
      return 1;
    v9 = *(_QWORD *)(v30 + 8 * v10);
    if (!v9)
    {
      v10 = v8 + 2;
      if (v8 + 2 >= v31)
        return 1;
      v9 = *(_QWORD *)(v30 + 8 * v10);
      if (!v9)
      {
        v10 = v8 + 3;
        if (v8 + 3 >= v31)
          return 1;
        v9 = *(_QWORD *)(v30 + 8 * v10);
        if (!v9)
        {
          v11 = v8 + 4;
          if (v11 < v31)
          {
            v9 = *(_QWORD *)(v30 + 8 * v11);
            if (v9)
            {
              v10 = v11;
              goto LABEL_23;
            }
            while (1)
            {
              v10 = v11 + 1;
              if (__OFADD__(v11, 1))
                break;
              if (v10 >= v31)
                return 1;
              v9 = *(_QWORD *)(v30 + 8 * v10);
              ++v11;
              if (v9)
                goto LABEL_23;
            }
LABEL_45:
            __break(1u);
            return result;
          }
          return 1;
        }
      }
    }
  }
LABEL_23:
  v32 = (v9 - 1) & v9;
  v33 = v10;
  for (i = __clz(__rbit64(v9)) + (v10 << 6); ; i = __clz(__rbit64(v6)) | (v3 << 6))
  {
    v12 = *(_QWORD *)(result + 48) + 40 * i;
    v14 = *(_QWORD *)v12;
    v13 = *(_QWORD *)(v12 + 8);
    v16 = *(_QWORD *)(v12 + 16);
    v15 = *(_QWORD *)(v12 + 24);
    v17 = *(unsigned __int8 *)(v12 + 32);
    sub_1C14270E8();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1C1426AD0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C1426AD0();
    swift_bridgeObjectRelease();
    v35 = v17;
    sub_1C14270F4();
    v18 = sub_1C1427100();
    v19 = -1 << *(_BYTE *)(v2 + 32);
    v20 = v18 & ~v19;
    if (((*(_QWORD *)(v36 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
      break;
    v21 = ~v19;
    v22 = *(_QWORD *)(a2 + 48);
    while (1)
    {
      v23 = v22 + 40 * v20;
      v24 = *(_QWORD *)(v23 + 16);
      v25 = *(_QWORD *)(v23 + 24);
      v26 = *(unsigned __int8 *)(v23 + 32);
      v27 = *(_QWORD *)v23 == v14 && *(_QWORD *)(v23 + 8) == v13;
      if (!v27 && (sub_1C1427064() & 1) == 0)
        goto LABEL_27;
      if (v24 != v16 || v25 != v15)
        break;
      if (v35 == v26)
        goto LABEL_39;
LABEL_27:
      v20 = (v20 + 1) & v21;
      if (((*(_QWORD *)(v36 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
        goto LABEL_42;
    }
    if ((sub_1C1427064() & 1) == 0 || ((v35 ^ v26) & 1) != 0)
      goto LABEL_27;
LABEL_39:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = v33;
    v2 = a2;
    result = v29;
    v6 = v32;
    if (!v32)
      goto LABEL_8;
LABEL_7:
    v32 = (v6 - 1) & v6;
    v33 = v3;
  }
LABEL_42:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

_QWORD *sub_1C136C198(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C136C8E4(a1, a2, a3, a4, &qword_1ED797B68, &qword_1ED7966B8);
}

uint64_t sub_1C136C1AC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C136C1D4(a1, a2, a3, a4, (uint64_t *)&unk_1ED797B40, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8F798]);
}

uint64_t sub_1C136C1C0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C136C1D4(a1, a2, a3, a4, &qword_1ED793A58, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
}

uint64_t sub_1C136C1D4(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_1C1426F80();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1C1375A7C(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_1C136C3E0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797B80);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C1375050(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1C136C4EC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DB198);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C1374F60(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C136C5F8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C136C1D4(a1, a2, a3, a4, &qword_1ED797DA8, (uint64_t (*)(_QWORD))MEMORY[0x1E0D8CF30]);
}

uint64_t sub_1C136C60C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C136C1D4(a1, a2, a3, a4, &qword_1ED797B78, (uint64_t (*)(_QWORD))MEMORY[0x1E0D8D0A8]);
}

uint64_t sub_1C136C620(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C136C1D4(a1, a2, a3, a4, &qword_1ED791F40, (uint64_t (*)(_QWORD))MEMORY[0x1E0D8D1A8]);
}

uint64_t sub_1C136C634(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C136C1D4(a1, a2, a3, a4, &qword_1EF6DB1B0, (uint64_t (*)(_QWORD))MEMORY[0x1E0D8D3C0]);
}

uint64_t sub_1C136C648(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C136C1D4(a1, a2, a3, a4, &qword_1ED7931A8, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
}

uint64_t sub_1C136C65C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C136C1D4(a1, a2, a3, a4, &qword_1ED7932E8, (uint64_t (*)(_QWORD))MEMORY[0x1E0D8D588]);
}

uint64_t sub_1C136C670(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DB1A8);
  v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED797A10) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_29:
    result = sub_1C1426F80();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED797A10) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (unint64_t)v13 + v17;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(_QWORD *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1C13753EC(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_1C136C880(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C136C1D4(a1, a2, a3, a4, &qword_1EF6DAC30, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
}

uint64_t sub_1C136C894(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C136C1D4(a1, a2, a3, a4, &qword_1ED7935C0, (uint64_t (*)(_QWORD))type metadata accessor for XPCInputParticipant.ActivityUpdate);
}

uint64_t sub_1C136C8A8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C136C1D4(a1, a2, a3, a4, &qword_1EF6DB1A0, type metadata accessor for ActivityParticipantEvent);
}

uint64_t sub_1C136C8BC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C136C1D4(a1, a2, a3, a4, &qword_1EF6DAD48, (uint64_t (*)(_QWORD))MEMORY[0x1E0D87A00]);
}

_QWORD *sub_1C136C8D0(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1C136C8E4(a1, a2, a3, a4, &qword_1ED797B70, &qword_1ED797028);
}

_QWORD *sub_1C136C8E4(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v15 = v14 - 32;
      if (v14 < 32)
        v15 = v14 - 17;
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 4);
      v16 = v13 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v16 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[2 * v11 + 4])
          memmove(v16, a4 + 4, 16 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C1375B94(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C136C9FC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C136C1D4(a1, a2, a3, a4, &qword_1ED797B50, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FD38]);
}

uint64_t sub_1C136CA10(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C136C1D4(a1, a2, a3, a4, &qword_1ED797B58, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FD58]);
}

uint64_t sub_1C136CA24(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C136C1D4(a1, a2, a3, a4, &qword_1ED792868, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FB18]);
}

size_t sub_1C136CA38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793A58);
  v3 = *(_QWORD *)(type metadata accessor for Assertion() - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      v9 = sub_1C136F0F8(&v10, (uint64_t)v6 + v5, v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      swift_bridgeObjectRetain();
      sub_1C133F908();
      if (v9 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_1C136CB58(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797B98);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 25;
  v3[2] = v1;
  v3[3] = (2 * (v5 >> 3)) | 1;
  v6 = sub_1C136EEF4(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1C133F908();
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1C136CC40(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  unint64_t v6;
  size_t v7;
  uint64_t v8;
  void *v9;
  _QWORD v11[2];

  v4 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_BYTE *)(isStackAllocationSafe + 32);
  v6 = (unint64_t)((1 << v5) + 63) >> 6;
  v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    v8 = sub_1C136D034((_QWORD *)((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, v4, a2);
    if (v2)
      swift_willThrow();
    else
      return v8;
  }
  else
  {
    v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    a2 = sub_1C136D034((unint64_t *)v9, v6, v4, a2);
    MEMORY[0x1C3BAD3F4](v9, -1, -1);
  }
  return a2;
}

uint64_t sub_1C136CDA4(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t *a5)
{
  uint64_t v5;
  uint64_t (*v10)(_QWORD *, char *);
  char v11;
  unint64_t v12;
  size_t v13;
  uint64_t v14;
  void *v15;
  _QWORD v17[2];

  v10 = (uint64_t (*)(_QWORD *, char *))isStackAllocationSafe;
  v17[1] = *MEMORY[0x1E0C80C00];
  v11 = *(_BYTE *)(a3 + 32);
  v12 = (unint64_t)((1 << v11) + 63) >> 6;
  v13 = 8 * v12;
  if ((v11 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    v17[0] = v17;
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v17 - ((v13 + 15) & 0x3FFFFFFFFFFFFFF0), v13);
    v14 = sub_1C136D6E0((_QWORD *)((char *)v17 - ((v13 + 15) & 0x3FFFFFFFFFFFFFF0)), v12, a3, v10, a2, a4, a5);
    if (v5)
      swift_willThrow();
    else
      return v14;
  }
  else
  {
    v15 = (void *)swift_slowAlloc();
    bzero(v15, v13);
    a2 = sub_1C136D6E0((unint64_t *)v15, v12, a3, v10, a2, a4, a5);
    MEMORY[0x1C3BAD3F4](v15, -1, -1);
  }
  return a2;
}

uint64_t sub_1C136CF3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C136CDA4(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for SlidingWindowExponentialBackoff, &qword_1ED7935B8);
}

uint64_t sub_1C136CF94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C1330B68(a1, a2, a3, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t, uint64_t))sub_1C136D940);
}

uint64_t sub_1C136CFE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C1330B68(a1, a2, a3, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t, uint64_t))sub_1C136DBDC);
}

uint64_t sub_1C136D034(unint64_t *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t result;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v39;
  unint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  unint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  int64_t v56;

  v39 = a2;
  v52 = a4;
  v40 = a1;
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797868);
  v5 = MEMORY[0x1E0C80A78](v51);
  v44 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v48 = (char *)&v39 - v7;
  v8 = type metadata accessor for Assertion();
  v50 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v49 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C1425CC0();
  v11 = *(_QWORD **)(v10 - 8);
  v46 = v10;
  v47 = v11;
  result = MEMORY[0x1E0C80A78](v10);
  v45 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = 0;
  v54 = (_QWORD *)a3;
  v15 = *(_QWORD *)(a3 + 64);
  v41 = 0;
  v42 = a3 + 64;
  v16 = 1 << *(_BYTE *)(a3 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v15;
  v43 = (unint64_t)(v16 + 63) >> 6;
  v19 = v46;
  v20 = v47;
  v21 = v45;
  v22 = (uint64_t)v48;
  v23 = (uint64_t)v49;
  while (1)
  {
    if (v18)
    {
      v55 = (v18 - 1) & v18;
      v56 = v14;
      v24 = __clz(__rbit64(v18)) | (v14 << 6);
      goto LABEL_5;
    }
    v34 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v34 >= v43)
      return sub_1C136DDD8(v40, v39, v41, v54);
    v35 = *(_QWORD *)(v42 + 8 * v34);
    v36 = v14 + 1;
    if (!v35)
    {
      v36 = v14 + 2;
      if (v14 + 2 >= v43)
        return sub_1C136DDD8(v40, v39, v41, v54);
      v35 = *(_QWORD *)(v42 + 8 * v36);
      if (!v35)
      {
        v36 = v14 + 3;
        if (v14 + 3 >= v43)
          return sub_1C136DDD8(v40, v39, v41, v54);
        v35 = *(_QWORD *)(v42 + 8 * v36);
        if (!v35)
          break;
      }
    }
LABEL_20:
    v55 = (v35 - 1) & v35;
    v56 = v36;
    v24 = __clz(__rbit64(v35)) + (v36 << 6);
LABEL_5:
    v25 = v54;
    v26 = (void (*)(char *, unint64_t, uint64_t))v20[2];
    v26(v21, v54[6] + v20[9] * v24, v19);
    v27 = v25[7];
    v28 = *(_QWORD *)(v50 + 72);
    v53 = v24;
    sub_1C1338F24(v27 + v28 * v24, v23, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    v29 = v51;
    v30 = v22 + *(int *)(v51 + 48);
    v26((char *)v22, (unint64_t)v21, v19);
    sub_1C1338F24(v23, v30, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    v31 = v44;
    v32 = (uint64_t)&v44[*(int *)(v29 + 48)];
    v26(v44, v22, v19);
    sub_1C1338F24(v30, v32, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    LODWORD(v30) = sub_1C1425C9C();
    sub_1C132C860(v22, &qword_1ED797868);
    v33 = (void (*)(char *, uint64_t))v20[1];
    v33(v31, v19);
    sub_1C1339004(v32, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    sub_1C1339004(v23, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    result = ((uint64_t (*)(char *, uint64_t))v33)(v21, v19);
    v14 = v56;
    v18 = v55;
    if ((_DWORD)v30 == v52)
    {
      *(unint64_t *)((char *)v40 + ((v53 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v53;
      if (__OFADD__(v41++, 1))
      {
        __break(1u);
        return sub_1C136DDD8(v40, v39, v41, v54);
      }
    }
  }
  v37 = v14 + 4;
  if (v14 + 4 >= v43)
    return sub_1C136DDD8(v40, v39, v41, v54);
  v35 = *(_QWORD *)(v42 + 8 * v37);
  if (v35)
  {
    v36 = v14 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v36 = v37 + 1;
    if (__OFADD__(v37, 1))
      break;
    if (v36 >= v43)
      return sub_1C136DDD8(v40, v39, v41, v54);
    v35 = *(_QWORD *)(v42 + 8 * v36);
    ++v37;
    if (v35)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1C136D3EC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  BOOL v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  unint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(char *, uint64_t);
  _QWORD *v38;
  int64_t v39;
  uint64_t v40;

  v37 = a4;
  v28 = a2;
  v29 = a1;
  v5 = type metadata accessor for Assertion();
  v36 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v34 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_1C1425CC0();
  v7 = *(_QWORD *)(v35 - 8);
  result = MEMORY[0x1E0C80A78](v35);
  v33 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 0;
  v38 = (_QWORD *)a3;
  v11 = *(_QWORD *)(a3 + 64);
  v30 = 0;
  v31 = a3 + 64;
  v12 = 1 << *(_BYTE *)(a3 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v32 = (unint64_t)(v12 + 63) >> 6;
  v15 = (uint64_t)v34;
  while (v14)
  {
    v16 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    v39 = v10;
    v17 = v16 | (v10 << 6);
LABEL_17:
    v22 = v35;
    v23 = v33;
    v24 = v38;
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v33, v38[6] + *(_QWORD *)(v7 + 72) * v17, v35);
    sub_1C1338F24(v24[7] + *(_QWORD *)(v36 + 72) * v17, v15, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    v25 = v40;
    v26 = v37(v23, v15);
    v40 = v25;
    if (v25)
    {
      sub_1C1339004(v15, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v23, v22);
    }
    v27 = v26;
    sub_1C1339004(v15, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v23, v22);
    v10 = v39;
    if ((v27 & 1) != 0)
    {
      *(unint64_t *)((char *)v29 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = __OFADD__(v30++, 1);
      if (v18)
        goto LABEL_31;
    }
  }
  v18 = __OFADD__(v10, 1);
  v19 = v10 + 1;
  if (v18)
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v19 >= v32)
    return sub_1C136DDD8(v29, v28, v30, v38);
  v20 = *(_QWORD *)(v31 + 8 * v19);
  if (v20)
  {
LABEL_16:
    v14 = (v20 - 1) & v20;
    v39 = v19;
    v17 = __clz(__rbit64(v20)) + (v19 << 6);
    goto LABEL_17;
  }
  v21 = v19 + 1;
  if (v19 + 1 >= v32)
    return sub_1C136DDD8(v29, v28, v30, v38);
  v20 = *(_QWORD *)(v31 + 8 * v21);
  if (v20)
    goto LABEL_15;
  v21 = v19 + 2;
  if (v19 + 2 >= v32)
    return sub_1C136DDD8(v29, v28, v30, v38);
  v20 = *(_QWORD *)(v31 + 8 * v21);
  if (v20)
    goto LABEL_15;
  v21 = v19 + 3;
  if (v19 + 3 >= v32)
    return sub_1C136DDD8(v29, v28, v30, v38);
  v20 = *(_QWORD *)(v31 + 8 * v21);
  if (v20)
  {
LABEL_15:
    v19 = v21;
    goto LABEL_16;
  }
  while (1)
  {
    v19 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v19 >= v32)
      return sub_1C136DDD8(v29, v28, v30, v38);
    v20 = *(_QWORD *)(v31 + 8 * v19);
    ++v21;
    if (v20)
      goto LABEL_16;
  }
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1C136D6E0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *, char *), uint64_t a5, uint64_t (*a6)(_QWORD), uint64_t *a7)
{
  uint64_t v7;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  BOOL v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  unint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  _QWORD v36[2];
  uint64_t (*v37)(_QWORD *, char *);

  v29 = a2;
  v30 = a7;
  v37 = a4;
  v31 = a1;
  v10 = a6(0);
  v35 = *(_QWORD *)(v10 - 8);
  result = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v28 - v12;
  v14 = 0;
  v15 = *(_QWORD *)(a3 + 64);
  v32 = 0;
  v33 = a3 + 64;
  v16 = 1 << *(_BYTE *)(a3 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v15;
  v34 = (unint64_t)(v16 + 63) >> 6;
  while (v18)
  {
    v19 = __clz(__rbit64(v18));
    v18 &= v18 - 1;
    v20 = v19 | (v14 << 6);
LABEL_17:
    v24 = *(_QWORD *)(a3 + 56);
    v25 = (_QWORD *)(*(_QWORD *)(a3 + 48) + 16 * v20);
    v26 = v25[1];
    v36[0] = *v25;
    v36[1] = v26;
    sub_1C1338F24(v24 + *(_QWORD *)(v35 + 72) * v20, (uint64_t)v13, a6);
    swift_bridgeObjectRetain();
    v27 = v37(v36, v13);
    sub_1C1339004((uint64_t)v13, a6);
    result = swift_bridgeObjectRelease();
    if (v7)
      return result;
    if ((v27 & 1) != 0)
    {
      *(unint64_t *)((char *)v31 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      v21 = __OFADD__(v32++, 1);
      if (v21)
        goto LABEL_30;
    }
  }
  v21 = __OFADD__(v14++, 1);
  if (v21)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v14 >= v34)
    return sub_1C136E1C8(v31, v29, v32, (_QWORD *)a3, a6, v30);
  v22 = *(_QWORD *)(v33 + 8 * v14);
  if (v22)
  {
LABEL_16:
    v18 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v14 << 6);
    goto LABEL_17;
  }
  v23 = v14 + 1;
  if (v14 + 1 >= v34)
    return sub_1C136E1C8(v31, v29, v32, (_QWORD *)a3, a6, v30);
  v22 = *(_QWORD *)(v33 + 8 * v23);
  if (v22)
    goto LABEL_15;
  v23 = v14 + 2;
  if (v14 + 2 >= v34)
    return sub_1C136E1C8(v31, v29, v32, (_QWORD *)a3, a6, v30);
  v22 = *(_QWORD *)(v33 + 8 * v23);
  if (v22)
    goto LABEL_15;
  v23 = v14 + 3;
  if (v14 + 3 >= v34)
    return sub_1C136E1C8(v31, v29, v32, (_QWORD *)a3, a6, v30);
  v22 = *(_QWORD *)(v33 + 8 * v23);
  if (v22)
  {
LABEL_15:
    v14 = v23;
    goto LABEL_16;
  }
  while (1)
  {
    v14 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v14 >= v34)
      return sub_1C136E1C8(v31, v29, v32, (_QWORD *)a3, a6, v30);
    v22 = *(_QWORD *)(v33 + 8 * v14);
    ++v23;
    if (v22)
      goto LABEL_16;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C136D940(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, char *))
{
  uint64_t result;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  BOOL v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  unint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t (*v33)(char *, char *);
  uint64_t v34;
  _QWORD *v35;
  char v36[8];
  uint64_t v37;
  uint64_t v38;

  v33 = a4;
  v26 = a2;
  v27 = a1;
  v34 = sub_1C14251EC();
  v32 = *(_QWORD *)(v34 - 8);
  result = MEMORY[0x1E0C80A78](v34);
  v31 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = 0;
  v35 = (_QWORD *)a3;
  v8 = *(_QWORD *)(a3 + 64);
  v28 = 0;
  v29 = a3 + 64;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v30 = (unint64_t)(v9 + 63) >> 6;
  v12 = v31;
  v13 = v32;
  v14 = v34;
  while (v11)
  {
    v15 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    v16 = v15 | (v7 << 6);
LABEL_17:
    v20 = v35;
    (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v12, v35[6] + *(_QWORD *)(v13 + 72) * v16, v14);
    v21 = v20[7] + 16 * v16;
    v22 = *(_QWORD *)(v21 + 8);
    v36[0] = *(_BYTE *)v21;
    v37 = v22;
    swift_bridgeObjectRetain();
    v23 = v38;
    v24 = v33(v12, v36);
    v38 = v23;
    if (v23)
    {
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v12, v14);
    }
    v25 = v24;
    swift_bridgeObjectRelease();
    result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v12, v14);
    if ((v25 & 1) != 0)
    {
      *(unint64_t *)((char *)v27 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = __OFADD__(v28++, 1);
      if (v17)
        goto LABEL_31;
    }
  }
  v17 = __OFADD__(v7++, 1);
  if (v17)
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v7 >= v30)
    return sub_1C136E500(v27, v26, v28, v35);
  v18 = *(_QWORD *)(v29 + 8 * v7);
  if (v18)
  {
LABEL_16:
    v11 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v7 << 6);
    goto LABEL_17;
  }
  v19 = v7 + 1;
  if (v7 + 1 >= v30)
    return sub_1C136E500(v27, v26, v28, v35);
  v18 = *(_QWORD *)(v29 + 8 * v19);
  if (v18)
    goto LABEL_15;
  v19 = v7 + 2;
  if (v7 + 2 >= v30)
    return sub_1C136E500(v27, v26, v28, v35);
  v18 = *(_QWORD *)(v29 + 8 * v19);
  if (v18)
    goto LABEL_15;
  v19 = v7 + 3;
  if (v7 + 3 >= v30)
    return sub_1C136E500(v27, v26, v28, v35);
  v18 = *(_QWORD *)(v29 + 8 * v19);
  if (v18)
  {
LABEL_15:
    v7 = v19;
    goto LABEL_16;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v30)
      return sub_1C136E500(v27, v26, v28, v35);
    v18 = *(_QWORD *)(v29 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_16;
  }
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1C136DBDC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *, uint64_t *))
{
  uint64_t v4;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  BOOL v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char v19;
  unint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  _QWORD v25[2];
  uint64_t v26;

  v21 = (unint64_t *)result;
  v7 = 0;
  v22 = 0;
  v23 = a3 + 64;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a3 + 64);
  v24 = (unint64_t)(v8 + 63) >> 6;
  while (v10)
  {
    v11 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v12 = v11 | (v7 << 6);
LABEL_17:
    v16 = *(_QWORD *)(a3 + 56);
    v17 = (_QWORD *)(*(_QWORD *)(a3 + 48) + 16 * v12);
    v18 = v17[1];
    v25[0] = *v17;
    v25[1] = v18;
    v26 = *(_QWORD *)(v16 + 8 * v12);
    swift_bridgeObjectRetain();
    v19 = a4(v25, &v26);
    result = swift_bridgeObjectRelease();
    if (v4)
      return result;
    if ((v19 & 1) != 0)
    {
      *(unint64_t *)((char *)v21 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = __OFADD__(v22++, 1);
      if (v13)
        goto LABEL_30;
    }
  }
  v13 = __OFADD__(v7++, 1);
  if (v13)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v7 >= v24)
    return sub_1C136EC50(v21, a2, v22, a3);
  v14 = *(_QWORD *)(v23 + 8 * v7);
  if (v14)
  {
LABEL_16:
    v10 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v7 << 6);
    goto LABEL_17;
  }
  v15 = v7 + 1;
  if (v7 + 1 >= v24)
    return sub_1C136EC50(v21, a2, v22, a3);
  v14 = *(_QWORD *)(v23 + 8 * v15);
  if (v14)
    goto LABEL_15;
  v15 = v7 + 2;
  if (v7 + 2 >= v24)
    return sub_1C136EC50(v21, a2, v22, a3);
  v14 = *(_QWORD *)(v23 + 8 * v15);
  if (v14)
    goto LABEL_15;
  v15 = v7 + 3;
  if (v7 + 3 >= v24)
    return sub_1C136EC50(v21, a2, v22, a3);
  v14 = *(_QWORD *)(v23 + 8 * v15);
  if (v14)
  {
LABEL_15:
    v7 = v15;
    goto LABEL_16;
  }
  while (1)
  {
    v7 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v7 >= v24)
      return sub_1C136EC50(v21, a2, v22, a3);
    v14 = *(_QWORD *)(v23 + 8 * v7);
    ++v15;
    if (v14)
      goto LABEL_16;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C136DDD8(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  unint64_t *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;

  v8 = type metadata accessor for Assertion();
  v50 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v54 = (uint64_t)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v49 = (uint64_t)&v43 - v11;
  v12 = sub_1C1425CC0();
  v48 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v53 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v47 = (char *)&v43 - v15;
  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793A28);
  result = sub_1C1426FBC();
  v17 = result;
  v43 = a1;
  v44 = a2;
  if (a2 < 1)
    v18 = 0;
  else
    v18 = *a1;
  v19 = 0;
  v20 = result + 64;
  v45 = a4;
  v46 = result;
  v21 = v47;
  while (1)
  {
    if (v18)
    {
      v51 = (v18 - 1) & v18;
      v52 = v19;
      v22 = __clz(__rbit64(v18)) | (v19 << 6);
    }
    else
    {
      v23 = v19 + 1;
      if (__OFADD__(v19, 1))
        goto LABEL_40;
      if (v23 >= v44)
        return v17;
      v24 = v43[v23];
      v25 = v19 + 1;
      if (!v24)
      {
        v25 = v19 + 2;
        if (v19 + 2 >= v44)
          return v17;
        v24 = v43[v25];
        if (!v24)
        {
          v25 = v19 + 3;
          if (v19 + 3 >= v44)
            return v17;
          v24 = v43[v25];
          if (!v24)
          {
            v26 = v19 + 4;
            if (v19 + 4 >= v44)
              return v17;
            v24 = v43[v26];
            if (!v24)
            {
              while (1)
              {
                v25 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_41;
                if (v25 >= v44)
                  return v17;
                v24 = v43[v25];
                ++v26;
                if (v24)
                  goto LABEL_24;
              }
            }
            v25 = v19 + 4;
          }
        }
      }
LABEL_24:
      v51 = (v24 - 1) & v24;
      v52 = v25;
      v22 = __clz(__rbit64(v24)) + (v25 << 6);
    }
    v27 = v48;
    v28 = *(_QWORD *)(v48 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v48 + 16))(v21, a4[6] + v28 * v22, v12);
    v29 = a4[7];
    v30 = *(_QWORD *)(v50 + 72);
    v31 = v29 + v30 * v22;
    v32 = v49;
    sub_1C1338F24(v31, v49, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    v33 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
    v33(v53, v21, v12);
    sub_1C1339140(v32, v54, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    v17 = v46;
    sub_1C1329AD0(&qword_1ED797878, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8CB40], MEMORY[0x1E0D8CB50]);
    result = sub_1C1426A4C();
    v34 = -1 << *(_BYTE *)(v17 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v20 + 8 * (v35 >> 6))) != 0)
    {
      v37 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v20 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v38 = 0;
      v39 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v40 = v36 == v39;
        if (v36 == v39)
          v36 = 0;
        v38 |= v40;
        v41 = *(_QWORD *)(v20 + 8 * v36);
      }
      while (v41 == -1);
      v37 = __clz(__rbit64(~v41)) + (v36 << 6);
    }
    *(_QWORD *)(v20 + ((v37 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v37;
    v33((char *)(*(_QWORD *)(v17 + 48) + v37 * v28), v53, v12);
    result = sub_1C1339140(v54, *(_QWORD *)(v17 + 56) + v37 * v30, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    ++*(_QWORD *)(v17 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v45;
    v18 = v51;
    v19 = v52;
    if (!a3)
      return v17;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1C136E1C8(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD), uint64_t *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(_QWORD);
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  BOOL v40;
  uint64_t v41;
  _QWORD *v42;
  unint64_t *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(_QWORD);

  v50 = a5;
  v11 = a5(0);
  v47 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x1E0C80A78](v11);
  v49 = (uint64_t)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v46 = (char *)&v44 - v14;
  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(a6);
  result = sub_1C1426FBC();
  v16 = result;
  v44 = a1;
  v45 = a2;
  if (a2 < 1)
    v17 = 0;
  else
    v17 = *a1;
  v18 = 0;
  v19 = result + 64;
  v20 = (uint64_t)v46;
  while (1)
  {
    if (v17)
    {
      v21 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v48 = v18;
      v22 = v21 | (v18 << 6);
    }
    else
    {
      v23 = v18 + 1;
      if (__OFADD__(v18, 1))
        goto LABEL_40;
      if (v23 >= v45)
        return v16;
      v24 = v44[v23];
      v25 = v18 + 1;
      if (!v24)
      {
        v25 = v18 + 2;
        if (v18 + 2 >= v45)
          return v16;
        v24 = v44[v25];
        if (!v24)
        {
          v25 = v18 + 3;
          if (v18 + 3 >= v45)
            return v16;
          v24 = v44[v25];
          if (!v24)
          {
            v26 = v18 + 4;
            if (v18 + 4 >= v45)
              return v16;
            v24 = v44[v26];
            if (!v24)
            {
              while (1)
              {
                v25 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_41;
                if (v25 >= v45)
                  return v16;
                v24 = v44[v25];
                ++v26;
                if (v24)
                  goto LABEL_24;
              }
            }
            v25 = v18 + 4;
          }
        }
      }
LABEL_24:
      v17 = (v24 - 1) & v24;
      v48 = v25;
      v22 = __clz(__rbit64(v24)) + (v25 << 6);
    }
    v27 = a4[7];
    v28 = a4;
    v29 = (uint64_t *)(a4[6] + 16 * v22);
    v30 = *v29;
    v31 = v29[1];
    v32 = *(_QWORD *)(v47 + 72);
    v33 = v50;
    sub_1C1338F24(v27 + v32 * v22, v20, v50);
    sub_1C1339140(v20, v49, v33);
    sub_1C14270E8();
    swift_bridgeObjectRetain();
    sub_1C1426AD0();
    result = sub_1C1427100();
    v34 = -1 << *(_BYTE *)(v16 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v19 + 8 * (v35 >> 6))) != 0)
    {
      v37 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v19 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v38 = 0;
      v39 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v40 = v36 == v39;
        if (v36 == v39)
          v36 = 0;
        v38 |= v40;
        v41 = *(_QWORD *)(v19 + 8 * v36);
      }
      while (v41 == -1);
      v37 = __clz(__rbit64(~v41)) + (v36 << 6);
    }
    *(_QWORD *)(v19 + ((v37 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v37;
    v42 = (_QWORD *)(*(_QWORD *)(v16 + 48) + 16 * v37);
    *v42 = v30;
    v42[1] = v31;
    result = sub_1C1339140(v49, *(_QWORD *)(v16 + 56) + v37 * v32, v50);
    ++*(_QWORD *)(v16 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v28;
    v18 = v48;
    if (!a3)
      return v16;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1C136E500(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t *v38;
  uint64_t v39;
  _QWORD *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  char *v46;
  uint64_t v47;

  v47 = sub_1C14251EC();
  v42 = *(_QWORD *)(v47 - 8);
  v8 = MEMORY[0x1E0C80A78](v47);
  v46 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v41 = (char *)&v38 - v10;
  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DB1C0);
  result = sub_1C1426FBC();
  v12 = result;
  v38 = a1;
  v39 = a2;
  if (a2 < 1)
    v13 = 0;
  else
    v13 = *a1;
  v14 = 0;
  v15 = result + 64;
  v40 = a4;
  v16 = v47;
  while (1)
  {
    if (v13)
    {
      v43 = (v13 - 1) & v13;
      v44 = v14;
      v17 = __clz(__rbit64(v13)) | (v14 << 6);
    }
    else
    {
      v18 = v14 + 1;
      if (__OFADD__(v14, 1))
        goto LABEL_40;
      if (v18 >= v39)
        return v12;
      v19 = v38[v18];
      v20 = v14 + 1;
      if (!v19)
      {
        v20 = v14 + 2;
        if (v14 + 2 >= v39)
          return v12;
        v19 = v38[v20];
        if (!v19)
        {
          v20 = v14 + 3;
          if (v14 + 3 >= v39)
            return v12;
          v19 = v38[v20];
          if (!v19)
          {
            v21 = v14 + 4;
            if (v14 + 4 >= v39)
              return v12;
            v19 = v38[v21];
            if (!v19)
            {
              while (1)
              {
                v20 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_41;
                if (v20 >= v39)
                  return v12;
                v19 = v38[v20];
                ++v21;
                if (v19)
                  goto LABEL_24;
              }
            }
            v20 = v14 + 4;
          }
        }
      }
LABEL_24:
      v43 = (v19 - 1) & v19;
      v44 = v20;
      v17 = __clz(__rbit64(v19)) + (v20 << 6);
    }
    v22 = v41;
    v23 = v42;
    v24 = *(_QWORD *)(v42 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v42 + 16))(v41, a4[6] + v24 * v17, v16);
    v25 = (unsigned __int8 *)(a4[7] + 16 * v17);
    v45 = *v25;
    v26 = *((_QWORD *)v25 + 1);
    v27 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v27(v46, v22, v16);
    sub_1C1329AD0(&qword_1EF6DB1C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    swift_bridgeObjectRetain();
    result = sub_1C1426A4C();
    v28 = -1 << *(_BYTE *)(v12 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      v31 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v34 = v30 == v33;
        if (v30 == v33)
          v30 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v15 + 8 * v30);
      }
      while (v35 == -1);
      v31 = __clz(__rbit64(~v35)) + (v30 << 6);
    }
    *(_QWORD *)(v15 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v27)(*(_QWORD *)(v12 + 48) + v31 * v24, v46, v47);
    v36 = *(_QWORD *)(v12 + 56) + 16 * v31;
    *(_BYTE *)v36 = v45;
    *(_QWORD *)(v36 + 8) = v26;
    ++*(_QWORD *)(v12 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v40;
    v13 = v43;
    v14 = v44;
    if (!a3)
      return v12;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1C136E864(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  unint64_t *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;

  v57 = sub_1C14251EC();
  v51 = *(_QWORD *)(v57 - 8);
  v8 = MEMORY[0x1E0C80A78](v57);
  v56 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v50 = (char *)&v44 - v10;
  v11 = sub_1C142614C();
  v49 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x1E0C80A78](v11);
  v55 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v48 = (char *)&v44 - v14;
  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DB1B8);
  result = sub_1C1426FBC();
  v16 = result;
  v44 = a1;
  v45 = a2;
  if (a2 < 1)
    v17 = 0;
  else
    v17 = *a1;
  v18 = 0;
  v19 = result + 64;
  v46 = a4;
  v47 = result;
  v20 = v50;
  while (1)
  {
    v54 = a3;
    if (v17)
    {
      v52 = (v17 - 1) & v17;
      v53 = v18;
      v21 = __clz(__rbit64(v17)) | (v18 << 6);
    }
    else
    {
      v22 = v18 + 1;
      if (__OFADD__(v18, 1))
        goto LABEL_40;
      if (v22 >= v45)
        return v16;
      v23 = v44[v22];
      v24 = v18 + 1;
      if (!v23)
      {
        v24 = v18 + 2;
        if (v18 + 2 >= v45)
          return v16;
        v23 = v44[v24];
        if (!v23)
        {
          v24 = v18 + 3;
          if (v18 + 3 >= v45)
            return v16;
          v23 = v44[v24];
          if (!v23)
          {
            v25 = v18 + 4;
            if (v18 + 4 >= v45)
              return v16;
            v23 = v44[v25];
            if (!v23)
            {
              while (1)
              {
                v24 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_41;
                if (v24 >= v45)
                  return v16;
                v23 = v44[v24];
                ++v25;
                if (v23)
                  goto LABEL_24;
              }
            }
            v24 = v18 + 4;
          }
        }
      }
LABEL_24:
      v52 = (v23 - 1) & v23;
      v53 = v24;
      v21 = __clz(__rbit64(v23)) + (v24 << 6);
    }
    v26 = v48;
    v27 = v49;
    v28 = *(_QWORD *)(v49 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v49 + 16))(v48, a4[6] + v28 * v21, v11);
    v29 = a4[7];
    v30 = v51;
    v31 = *(_QWORD *)(v51 + 72);
    v32 = v29 + v31 * v21;
    v33 = v57;
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v20, v32, v57);
    v34 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
    v34(v55, v26, v11);
    v35 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
    v35(v56, v20, v33);
    v16 = v47;
    sub_1C1329AD0(&qword_1ED793558, (uint64_t (*)(uint64_t))MEMORY[0x1E0D87A00], MEMORY[0x1E0D87A10]);
    result = sub_1C1426A4C();
    v36 = -1 << *(_BYTE *)(v16 + 32);
    v37 = result & ~v36;
    v38 = v37 >> 6;
    if (((-1 << v37) & ~*(_QWORD *)(v19 + 8 * (v37 >> 6))) != 0)
    {
      v39 = __clz(__rbit64((-1 << v37) & ~*(_QWORD *)(v19 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v40 = 0;
      v41 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v41 && (v40 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v42 = v38 == v41;
        if (v38 == v41)
          v38 = 0;
        v40 |= v42;
        v43 = *(_QWORD *)(v19 + 8 * v38);
      }
      while (v43 == -1);
      v39 = __clz(__rbit64(~v43)) + (v38 << 6);
    }
    *(_QWORD *)(v19 + ((v39 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v39;
    v34((char *)(*(_QWORD *)(v16 + 48) + v39 * v28), v55, v11);
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v35)(*(_QWORD *)(v16 + 56) + v39 * v31, v56, v57);
    ++*(_QWORD *)(v16 + 16);
    a3 = v54 - 1;
    if (__OFSUB__(v54, 1))
      break;
    a4 = v46;
    v17 = v52;
    v18 = v53;
    if (v54 == 1)
      return v16;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1C136EC50(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v31;

  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797AE8);
  result = sub_1C1426FBC();
  v8 = result;
  v31 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
    }
    else
    {
      v14 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_40;
      if (v14 >= v31)
        return v8;
      v15 = a1[v14];
      ++v10;
      if (!v15)
      {
        v10 = v14 + 1;
        if (v14 + 1 >= v31)
          return v8;
        v15 = a1[v10];
        if (!v15)
        {
          v10 = v14 + 2;
          if (v14 + 2 >= v31)
            return v8;
          v15 = a1[v10];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v31)
              return v8;
            v15 = a1[v16];
            if (!v15)
            {
              while (1)
              {
                v10 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_41;
                if (v10 >= v31)
                  return v8;
                v15 = a1[v10];
                ++v16;
                if (v15)
                  goto LABEL_24;
              }
            }
            v10 = v16;
          }
        }
      }
LABEL_24:
      v9 = (v15 - 1) & v15;
      v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v19 = *v17;
    v18 = v17[1];
    v20 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v13);
    sub_1C14270E8();
    swift_bridgeObjectRetain();
    sub_1C1426AD0();
    result = sub_1C1427100();
    v21 = -1 << *(_BYTE *)(v8 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v11 + 8 * (v22 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v11 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v23 == v26;
        if (v23 == v26)
          v23 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v23);
      }
      while (v28 == -1);
      v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(_QWORD *)(v11 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    v29 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v24);
    *v29 = v19;
    v29[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v24) = v20;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      return v8;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

_QWORD *sub_1C136EEF4(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  id v21;

  v5 = result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(void **)(*(_QWORD *)(a4 + 56) + 8 * v16);
    *v11 = v20;
    if (v13 == v10)
    {
      v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    result = v20;
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1C136F0EC(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C136F0F8(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
}

uint64_t sub_1C136F0F8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  _QWORD *v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;

  v10 = a5(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v33 - v16;
  v38 = a4;
  v20 = *(_QWORD *)(a4 + 64);
  v19 = a4 + 64;
  v18 = v20;
  v37 = v19;
  v21 = -1 << *(_BYTE *)(v19 - 32);
  if (-v21 < 64)
    v22 = ~(-1 << -(char)v21);
  else
    v22 = -1;
  v23 = v22 & v18;
  if (!a2)
  {
    v24 = 0;
    a3 = 0;
LABEL_38:
    v32 = v37;
    *a1 = v38;
    a1[1] = v32;
    a1[2] = ~v21;
    a1[3] = v24;
    a1[4] = v23;
    return a3;
  }
  if (!a3)
  {
    v24 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v34 = -1 << *(_BYTE *)(v19 - 32);
  v35 = a1;
  v24 = 0;
  v25 = 0;
  v36 = (unint64_t)(63 - v21) >> 6;
  v33 = v36 - 1;
  if (!v23)
    goto LABEL_9;
LABEL_8:
  v26 = __clz(__rbit64(v23));
  v23 &= v23 - 1;
  v27 = v26 | (v24 << 6);
  while (1)
  {
    ++v25;
    v31 = *(_QWORD *)(v11 + 72);
    sub_1C1338F24(*(_QWORD *)(v38 + 56) + v31 * v27, (uint64_t)v14, a5);
    sub_1C1339140((uint64_t)v14, (uint64_t)v17, a5);
    result = sub_1C1339140((uint64_t)v17, a2, a5);
    if (v25 == a3)
      goto LABEL_37;
    a2 += v31;
    if (v23)
      goto LABEL_8;
LABEL_9:
    v28 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v28 >= v36)
      goto LABEL_32;
    v29 = *(_QWORD *)(v37 + 8 * v28);
    if (!v29)
      break;
LABEL_18:
    v23 = (v29 - 1) & v29;
    v27 = __clz(__rbit64(v29)) + (v28 << 6);
    v24 = v28;
  }
  v24 += 2;
  if (v28 + 1 >= v36)
  {
    v23 = 0;
    v24 = v28;
    goto LABEL_36;
  }
  v29 = *(_QWORD *)(v37 + 8 * v24);
  if (v29)
    goto LABEL_14;
  v30 = v28 + 2;
  if (v28 + 2 >= v36)
    goto LABEL_32;
  v29 = *(_QWORD *)(v37 + 8 * v30);
  if (v29)
    goto LABEL_17;
  v24 = v28 + 3;
  if (v28 + 3 >= v36)
  {
    v23 = 0;
    v24 = v28 + 2;
    goto LABEL_36;
  }
  v29 = *(_QWORD *)(v37 + 8 * v24);
  if (v29)
  {
LABEL_14:
    v28 = v24;
    goto LABEL_18;
  }
  v30 = v28 + 4;
  if (v28 + 4 >= v36)
  {
LABEL_32:
    v23 = 0;
LABEL_36:
    a3 = v25;
LABEL_37:
    v21 = v34;
    a1 = v35;
    goto LABEL_38;
  }
  v29 = *(_QWORD *)(v37 + 8 * v30);
  if (v29)
  {
LABEL_17:
    v28 = v30;
    goto LABEL_18;
  }
  while (1)
  {
    v28 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v28 >= v36)
    {
      v23 = 0;
      v24 = v33;
      goto LABEL_36;
    }
    v29 = *(_QWORD *)(v37 + 8 * v28);
    ++v30;
    if (v29)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1C136F3B0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[3];
  uint64_t v27;
  _UNKNOWN **v28;

  if (qword_1ED793948 != -1)
    swift_once();
  v8 = sub_1C1426854();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED798598);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v9 = sub_1C1426848();
  v10 = sub_1C1426C80();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v26[0] = v24;
    *(_DWORD *)v11 = 136446466;
    v27 = a1;
    v28 = &off_1E7A8CA88;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7966B8);
    v12 = sub_1C1426AA0();
    v27 = sub_1C132AD90(v12, v13, v26);
    sub_1C1426DB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    swift_bridgeObjectRetain();
    v27 = sub_1C132AD90(a2, a3, v26);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C1324000, v9, v10, "Subscribing participant %{public}s to activity: %{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v24, -1, -1);
    MEMORY[0x1C3BAD3F4](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  v14 = (uint64_t *)(a4 + 32);
  swift_beginAccess();
  v15 = *(_QWORD *)(a4 + 32);
  if (*(_QWORD *)(v15 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_1C13277A0(a2, a3);
    if ((v17 & 1) != 0)
    {
      v18 = *(_QWORD **)(*(_QWORD *)(v15 + 56) + 8 * v16);
      swift_bridgeObjectRetain();
    }
    else
    {
      v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v18 = sub_1C136C8E4(0, v18[2] + 1, 1, v18, &qword_1ED797B68, &qword_1ED7966B8);
  v20 = v18[2];
  v19 = v18[3];
  if (v20 >= v19 >> 1)
    v18 = sub_1C136C8E4((_QWORD *)(v19 > 1), v20 + 1, 1, v18, &qword_1ED797B68, &qword_1ED7966B8);
  v18[2] = v20 + 1;
  v21 = &v18[2 * v20];
  v21[4] = a1;
  v21[5] = &off_1E7A8CA88;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = *v14;
  *v14 = 0x8000000000000000;
  sub_1C13C1F24((uint64_t)v18, a2, a3, isUniquelyReferenced_nonNull_native);
  *v14 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C136F784(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[3];
  uint64_t v27;
  _UNKNOWN **v28;

  if (qword_1ED793948 != -1)
    swift_once();
  v8 = sub_1C1426854();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED798598);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v9 = sub_1C1426848();
  v10 = sub_1C1426C80();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v26[0] = v24;
    *(_DWORD *)v11 = 136446466;
    v27 = a1;
    v28 = &off_1E7A8AF70;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7966B8);
    v12 = sub_1C1426AA0();
    v27 = sub_1C132AD90(v12, v13, v26);
    sub_1C1426DB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    swift_bridgeObjectRetain();
    v27 = sub_1C132AD90(a2, a3, v26);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C1324000, v9, v10, "Subscribing participant %{public}s to activity: %{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v24, -1, -1);
    MEMORY[0x1C3BAD3F4](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  v14 = (uint64_t *)(a4 + 32);
  swift_beginAccess();
  v15 = *(_QWORD *)(a4 + 32);
  if (*(_QWORD *)(v15 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_1C13277A0(a2, a3);
    if ((v17 & 1) != 0)
    {
      v18 = *(_QWORD **)(*(_QWORD *)(v15 + 56) + 8 * v16);
      swift_bridgeObjectRetain();
    }
    else
    {
      v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v18 = sub_1C136C8E4(0, v18[2] + 1, 1, v18, &qword_1ED797B68, &qword_1ED7966B8);
  v20 = v18[2];
  v19 = v18[3];
  if (v20 >= v19 >> 1)
    v18 = sub_1C136C8E4((_QWORD *)(v19 > 1), v20 + 1, 1, v18, &qword_1ED797B68, &qword_1ED7966B8);
  v18[2] = v20 + 1;
  v21 = &v18[2 * v20];
  v21[4] = a1;
  v21[5] = &off_1E7A8AF70;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = *v14;
  *v14 = 0x8000000000000000;
  sub_1C13C1F24((uint64_t)v18, a2, a3, isUniquelyReferenced_nonNull_native);
  *v14 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C136FB58(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[3];
  uint64_t v27;
  _UNKNOWN **v28;

  if (qword_1ED793948 != -1)
    swift_once();
  v8 = sub_1C1426854();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED798598);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v9 = sub_1C1426848();
  v10 = sub_1C1426C80();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v26[0] = v24;
    *(_DWORD *)v11 = 136446466;
    v27 = a1;
    v28 = &off_1E7A8E420;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7966B8);
    v12 = sub_1C1426AA0();
    v27 = sub_1C132AD90(v12, v13, v26);
    sub_1C1426DB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    swift_bridgeObjectRetain();
    v27 = sub_1C132AD90(a2, a3, v26);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C1324000, v9, v10, "Subscribing participant %{public}s to activity: %{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v24, -1, -1);
    MEMORY[0x1C3BAD3F4](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  v14 = (uint64_t *)(a4 + 32);
  swift_beginAccess();
  v15 = *(_QWORD *)(a4 + 32);
  if (*(_QWORD *)(v15 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_1C13277A0(a2, a3);
    if ((v17 & 1) != 0)
    {
      v18 = *(_QWORD **)(*(_QWORD *)(v15 + 56) + 8 * v16);
      swift_bridgeObjectRetain();
    }
    else
    {
      v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v18 = sub_1C136C8E4(0, v18[2] + 1, 1, v18, &qword_1ED797B68, &qword_1ED7966B8);
  v20 = v18[2];
  v19 = v18[3];
  if (v20 >= v19 >> 1)
    v18 = sub_1C136C8E4((_QWORD *)(v19 > 1), v20 + 1, 1, v18, &qword_1ED797B68, &qword_1ED7966B8);
  v18[2] = v20 + 1;
  v21 = &v18[2 * v20];
  v21[4] = a1;
  v21[5] = &off_1E7A8E420;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = *v14;
  *v14 = 0x8000000000000000;
  sub_1C13C1F24((uint64_t)v18, a2, a3, isUniquelyReferenced_nonNull_native);
  *v14 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C136FF2C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[3];
  uint64_t v27;
  _UNKNOWN **v28;

  if (qword_1ED793948 != -1)
    swift_once();
  v8 = sub_1C1426854();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED798598);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v9 = sub_1C1426848();
  v10 = sub_1C1426C80();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v26[0] = v24;
    *(_DWORD *)v11 = 136446466;
    v27 = a1;
    v28 = &off_1E7A8CE70;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7966B8);
    v12 = sub_1C1426AA0();
    v27 = sub_1C132AD90(v12, v13, v26);
    sub_1C1426DB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    swift_bridgeObjectRetain();
    v27 = sub_1C132AD90(a2, a3, v26);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C1324000, v9, v10, "Subscribing participant %{public}s to activity: %{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v24, -1, -1);
    MEMORY[0x1C3BAD3F4](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  v14 = (uint64_t *)(a4 + 32);
  swift_beginAccess();
  v15 = *(_QWORD *)(a4 + 32);
  if (*(_QWORD *)(v15 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_1C13277A0(a2, a3);
    if ((v17 & 1) != 0)
    {
      v18 = *(_QWORD **)(*(_QWORD *)(v15 + 56) + 8 * v16);
      swift_bridgeObjectRetain();
    }
    else
    {
      v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v18 = sub_1C136C8E4(0, v18[2] + 1, 1, v18, &qword_1ED797B68, &qword_1ED7966B8);
  v20 = v18[2];
  v19 = v18[3];
  if (v20 >= v19 >> 1)
    v18 = sub_1C136C8E4((_QWORD *)(v19 > 1), v20 + 1, 1, v18, &qword_1ED797B68, &qword_1ED7966B8);
  v18[2] = v20 + 1;
  v21 = &v18[2 * v20];
  v21[4] = a1;
  v21[5] = &off_1E7A8CE70;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = *v14;
  *v14 = 0x8000000000000000;
  sub_1C13C1F24((uint64_t)v18, a2, a3, isUniquelyReferenced_nonNull_native);
  *v14 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1370300(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[3];
  uint64_t v27;
  _UNKNOWN **v28;

  if (qword_1ED793948 != -1)
    swift_once();
  v8 = sub_1C1426854();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED798598);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v9 = sub_1C1426848();
  v10 = sub_1C1426C80();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v26[0] = v24;
    *(_DWORD *)v11 = 136446466;
    v27 = a1;
    v28 = &off_1E7A8BE28;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7966B8);
    v12 = sub_1C1426AA0();
    v27 = sub_1C132AD90(v12, v13, v26);
    sub_1C1426DB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    swift_bridgeObjectRetain();
    v27 = sub_1C132AD90(a2, a3, v26);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C1324000, v9, v10, "Subscribing participant %{public}s to activity: %{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v24, -1, -1);
    MEMORY[0x1C3BAD3F4](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  v14 = (uint64_t *)(a4 + 32);
  swift_beginAccess();
  v15 = *(_QWORD *)(a4 + 32);
  if (*(_QWORD *)(v15 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_1C13277A0(a2, a3);
    if ((v17 & 1) != 0)
    {
      v18 = *(_QWORD **)(*(_QWORD *)(v15 + 56) + 8 * v16);
      swift_bridgeObjectRetain();
    }
    else
    {
      v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v18 = sub_1C136C8E4(0, v18[2] + 1, 1, v18, &qword_1ED797B68, &qword_1ED7966B8);
  v20 = v18[2];
  v19 = v18[3];
  if (v20 >= v19 >> 1)
    v18 = sub_1C136C8E4((_QWORD *)(v19 > 1), v20 + 1, 1, v18, &qword_1ED797B68, &qword_1ED7966B8);
  v18[2] = v20 + 1;
  v21 = &v18[2 * v20];
  v21[4] = a1;
  v21[5] = &off_1E7A8BE28;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = *v14;
  *v14 = 0x8000000000000000;
  sub_1C13C1F24((uint64_t)v18, a2, a3, isUniquelyReferenced_nonNull_native);
  *v14 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C13706D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[3];
  uint64_t v27;
  _UNKNOWN **v28;

  if (qword_1ED793948 != -1)
    swift_once();
  v8 = sub_1C1426854();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED798598);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v9 = sub_1C1426848();
  v10 = sub_1C1426C80();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v26[0] = v24;
    *(_DWORD *)v11 = 136446466;
    v27 = a1;
    v28 = &off_1E7A8F400;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7966B8);
    v12 = sub_1C1426AA0();
    v27 = sub_1C132AD90(v12, v13, v26);
    sub_1C1426DB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    swift_bridgeObjectRetain();
    v27 = sub_1C132AD90(a2, a3, v26);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C1324000, v9, v10, "Subscribing participant %{public}s to activity: %{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v24, -1, -1);
    MEMORY[0x1C3BAD3F4](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  v14 = (uint64_t *)(a4 + 32);
  swift_beginAccess();
  v15 = *(_QWORD *)(a4 + 32);
  if (*(_QWORD *)(v15 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_1C13277A0(a2, a3);
    if ((v17 & 1) != 0)
    {
      v18 = *(_QWORD **)(*(_QWORD *)(v15 + 56) + 8 * v16);
      swift_bridgeObjectRetain();
    }
    else
    {
      v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v18 = sub_1C136C8E4(0, v18[2] + 1, 1, v18, &qword_1ED797B68, &qword_1ED7966B8);
  v20 = v18[2];
  v19 = v18[3];
  if (v20 >= v19 >> 1)
    v18 = sub_1C136C8E4((_QWORD *)(v19 > 1), v20 + 1, 1, v18, &qword_1ED797B68, &qword_1ED7966B8);
  v18[2] = v20 + 1;
  v21 = &v18[2 * v20];
  v21[4] = a1;
  v21[5] = &off_1E7A8F400;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = *v14;
  *v14 = 0x8000000000000000;
  sub_1C13C1F24((uint64_t)v18, a2, a3, isUniquelyReferenced_nonNull_native);
  *v14 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1370AA8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[3];
  uint64_t v27;
  _UNKNOWN **v28;

  if (qword_1ED793948 != -1)
    swift_once();
  v8 = sub_1C1426854();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED798598);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v9 = sub_1C1426848();
  v10 = sub_1C1426C80();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v26[0] = v24;
    *(_DWORD *)v11 = 136446466;
    v27 = a1;
    v28 = &off_1E7A8B3F0;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7966B8);
    v12 = sub_1C1426AA0();
    v27 = sub_1C132AD90(v12, v13, v26);
    sub_1C1426DB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    swift_bridgeObjectRetain();
    v27 = sub_1C132AD90(a2, a3, v26);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C1324000, v9, v10, "Subscribing participant %{public}s to activity: %{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v24, -1, -1);
    MEMORY[0x1C3BAD3F4](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  v14 = (uint64_t *)(a4 + 32);
  swift_beginAccess();
  v15 = *(_QWORD *)(a4 + 32);
  if (*(_QWORD *)(v15 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_1C13277A0(a2, a3);
    if ((v17 & 1) != 0)
    {
      v18 = *(_QWORD **)(*(_QWORD *)(v15 + 56) + 8 * v16);
      swift_bridgeObjectRetain();
    }
    else
    {
      v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v18 = sub_1C136C8E4(0, v18[2] + 1, 1, v18, &qword_1ED797B68, &qword_1ED7966B8);
  v20 = v18[2];
  v19 = v18[3];
  if (v20 >= v19 >> 1)
    v18 = sub_1C136C8E4((_QWORD *)(v19 > 1), v20 + 1, 1, v18, &qword_1ED797B68, &qword_1ED7966B8);
  v18[2] = v20 + 1;
  v21 = &v18[2 * v20];
  v21[4] = a1;
  v21[5] = &off_1E7A8B3F0;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = *v14;
  *v14 = 0x8000000000000000;
  sub_1C13C1F24((uint64_t)v18, a2, a3, isUniquelyReferenced_nonNull_native);
  *v14 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1370E7C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[3];
  uint64_t v27;
  _UNKNOWN **v28;

  if (qword_1ED793948 != -1)
    swift_once();
  v8 = sub_1C1426854();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED798598);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v9 = sub_1C1426848();
  v10 = sub_1C1426C80();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v26[0] = v24;
    *(_DWORD *)v11 = 136446466;
    v27 = a1;
    v28 = &off_1E7A8D658;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7966B8);
    v12 = sub_1C1426AA0();
    v27 = sub_1C132AD90(v12, v13, v26);
    sub_1C1426DB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    swift_bridgeObjectRetain();
    v27 = sub_1C132AD90(a2, a3, v26);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C1324000, v9, v10, "Subscribing participant %{public}s to activity: %{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v24, -1, -1);
    MEMORY[0x1C3BAD3F4](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  v14 = (uint64_t *)(a4 + 32);
  swift_beginAccess();
  v15 = *(_QWORD *)(a4 + 32);
  if (*(_QWORD *)(v15 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_1C13277A0(a2, a3);
    if ((v17 & 1) != 0)
    {
      v18 = *(_QWORD **)(*(_QWORD *)(v15 + 56) + 8 * v16);
      swift_bridgeObjectRetain();
    }
    else
    {
      v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v18 = sub_1C136C8E4(0, v18[2] + 1, 1, v18, &qword_1ED797B68, &qword_1ED7966B8);
  v20 = v18[2];
  v19 = v18[3];
  if (v20 >= v19 >> 1)
    v18 = sub_1C136C8E4((_QWORD *)(v19 > 1), v20 + 1, 1, v18, &qword_1ED797B68, &qword_1ED7966B8);
  v18[2] = v20 + 1;
  v21 = &v18[2 * v20];
  v21[4] = a1;
  v21[5] = &off_1E7A8D658;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = *v14;
  *v14 = 0x8000000000000000;
  sub_1C13C1F24((uint64_t)v18, a2, a3, isUniquelyReferenced_nonNull_native);
  *v14 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1371250(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[3];
  uint64_t v27;
  _UNKNOWN **v28;

  if (qword_1ED793948 != -1)
    swift_once();
  v8 = sub_1C1426854();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED798598);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v9 = sub_1C1426848();
  v10 = sub_1C1426C80();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v26[0] = v24;
    *(_DWORD *)v11 = 136446466;
    v27 = a1;
    v28 = &off_1E7A8EF88;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7966B8);
    v12 = sub_1C1426AA0();
    v27 = sub_1C132AD90(v12, v13, v26);
    sub_1C1426DB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    swift_bridgeObjectRetain();
    v27 = sub_1C132AD90(a2, a3, v26);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C1324000, v9, v10, "Subscribing participant %{public}s to activity: %{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v24, -1, -1);
    MEMORY[0x1C3BAD3F4](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  v14 = (uint64_t *)(a4 + 32);
  swift_beginAccess();
  v15 = *(_QWORD *)(a4 + 32);
  if (*(_QWORD *)(v15 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_1C13277A0(a2, a3);
    if ((v17 & 1) != 0)
    {
      v18 = *(_QWORD **)(*(_QWORD *)(v15 + 56) + 8 * v16);
      swift_bridgeObjectRetain();
    }
    else
    {
      v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v18 = sub_1C136C8E4(0, v18[2] + 1, 1, v18, &qword_1ED797B68, &qword_1ED7966B8);
  v20 = v18[2];
  v19 = v18[3];
  if (v20 >= v19 >> 1)
    v18 = sub_1C136C8E4((_QWORD *)(v19 > 1), v20 + 1, 1, v18, &qword_1ED797B68, &qword_1ED7966B8);
  v18[2] = v20 + 1;
  v21 = &v18[2 * v20];
  v21[4] = a1;
  v21[5] = &off_1E7A8EF88;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = *v14;
  *v14 = 0x8000000000000000;
  sub_1C13C1F24((uint64_t)v18, a2, a3, isUniquelyReferenced_nonNull_native);
  *v14 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1371624(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[3];
  uint64_t v27;
  _UNKNOWN **v28;

  if (qword_1ED793948 != -1)
    swift_once();
  v8 = sub_1C1426854();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED798598);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v9 = sub_1C1426848();
  v10 = sub_1C1426C80();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v26[0] = v24;
    *(_DWORD *)v11 = 136446466;
    v27 = a1;
    v28 = &off_1E7A8EEE8;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7966B8);
    v12 = sub_1C1426AA0();
    v27 = sub_1C132AD90(v12, v13, v26);
    sub_1C1426DB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    swift_bridgeObjectRetain();
    v27 = sub_1C132AD90(a2, a3, v26);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C1324000, v9, v10, "Subscribing participant %{public}s to activity: %{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v24, -1, -1);
    MEMORY[0x1C3BAD3F4](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  v14 = (uint64_t *)(a4 + 32);
  swift_beginAccess();
  v15 = *(_QWORD *)(a4 + 32);
  if (*(_QWORD *)(v15 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_1C13277A0(a2, a3);
    if ((v17 & 1) != 0)
    {
      v18 = *(_QWORD **)(*(_QWORD *)(v15 + 56) + 8 * v16);
      swift_bridgeObjectRetain();
    }
    else
    {
      v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v18 = sub_1C136C8E4(0, v18[2] + 1, 1, v18, &qword_1ED797B68, &qword_1ED7966B8);
  v20 = v18[2];
  v19 = v18[3];
  if (v20 >= v19 >> 1)
    v18 = sub_1C136C8E4((_QWORD *)(v19 > 1), v20 + 1, 1, v18, &qword_1ED797B68, &qword_1ED7966B8);
  v18[2] = v20 + 1;
  v21 = &v18[2 * v20];
  v21[4] = a1;
  v21[5] = &off_1E7A8EEE8;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = *v14;
  *v14 = 0x8000000000000000;
  sub_1C13C1F24((uint64_t)v18, a2, a3, isUniquelyReferenced_nonNull_native);
  *v14 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C13719F8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[3];
  uint64_t v27;
  _UNKNOWN **v28;

  if (qword_1ED793948 != -1)
    swift_once();
  v8 = sub_1C1426854();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED798598);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v9 = sub_1C1426848();
  v10 = sub_1C1426C80();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v26[0] = v24;
    *(_DWORD *)v11 = 136446466;
    v27 = a1;
    v28 = &off_1E7A8B7D8;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7966B8);
    v12 = sub_1C1426AA0();
    v27 = sub_1C132AD90(v12, v13, v26);
    sub_1C1426DB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    swift_bridgeObjectRetain();
    v27 = sub_1C132AD90(a2, a3, v26);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C1324000, v9, v10, "Subscribing participant %{public}s to activity: %{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v24, -1, -1);
    MEMORY[0x1C3BAD3F4](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  v14 = (uint64_t *)(a4 + 32);
  swift_beginAccess();
  v15 = *(_QWORD *)(a4 + 32);
  if (*(_QWORD *)(v15 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_1C13277A0(a2, a3);
    if ((v17 & 1) != 0)
    {
      v18 = *(_QWORD **)(*(_QWORD *)(v15 + 56) + 8 * v16);
      swift_bridgeObjectRetain();
    }
    else
    {
      v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v18 = sub_1C136C8E4(0, v18[2] + 1, 1, v18, &qword_1ED797B68, &qword_1ED7966B8);
  v20 = v18[2];
  v19 = v18[3];
  if (v20 >= v19 >> 1)
    v18 = sub_1C136C8E4((_QWORD *)(v19 > 1), v20 + 1, 1, v18, &qword_1ED797B68, &qword_1ED7966B8);
  v18[2] = v20 + 1;
  v21 = &v18[2 * v20];
  v21[4] = a1;
  v21[5] = &off_1E7A8B7D8;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = *v14;
  *v14 = 0x8000000000000000;
  sub_1C13C1F24((uint64_t)v18, a2, a3, isUniquelyReferenced_nonNull_native);
  *v14 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1371DCC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[3];
  uint64_t v27;
  _UNKNOWN **v28;

  if (qword_1ED793948 != -1)
    swift_once();
  v8 = sub_1C1426854();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED798598);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v9 = sub_1C1426848();
  v10 = sub_1C1426C80();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v26[0] = v24;
    *(_DWORD *)v11 = 136446466;
    v27 = a1;
    v28 = &off_1E7A8BD30;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7966B8);
    v12 = sub_1C1426AA0();
    v27 = sub_1C132AD90(v12, v13, v26);
    sub_1C1426DB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    swift_bridgeObjectRetain();
    v27 = sub_1C132AD90(a2, a3, v26);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C1324000, v9, v10, "Subscribing participant %{public}s to activity: %{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v24, -1, -1);
    MEMORY[0x1C3BAD3F4](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  v14 = (uint64_t *)(a4 + 32);
  swift_beginAccess();
  v15 = *(_QWORD *)(a4 + 32);
  if (*(_QWORD *)(v15 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_1C13277A0(a2, a3);
    if ((v17 & 1) != 0)
    {
      v18 = *(_QWORD **)(*(_QWORD *)(v15 + 56) + 8 * v16);
      swift_bridgeObjectRetain();
    }
    else
    {
      v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v18 = sub_1C136C8E4(0, v18[2] + 1, 1, v18, &qword_1ED797B68, &qword_1ED7966B8);
  v20 = v18[2];
  v19 = v18[3];
  if (v20 >= v19 >> 1)
    v18 = sub_1C136C8E4((_QWORD *)(v19 > 1), v20 + 1, 1, v18, &qword_1ED797B68, &qword_1ED7966B8);
  v18[2] = v20 + 1;
  v21 = &v18[2 * v20];
  v21[4] = a1;
  v21[5] = &off_1E7A8BD30;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = *v14;
  *v14 = 0x8000000000000000;
  sub_1C13C1F24((uint64_t)v18, a2, a3, isUniquelyReferenced_nonNull_native);
  *v14 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C13721A0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[3];
  uint64_t v27;
  _UNKNOWN **v28;

  if (qword_1ED793948 != -1)
    swift_once();
  v8 = sub_1C1426854();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED798598);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v9 = sub_1C1426848();
  v10 = sub_1C1426C80();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v26[0] = v24;
    *(_DWORD *)v11 = 136446466;
    v27 = a1;
    v28 = &off_1E7A8D5A0;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7966B8);
    v12 = sub_1C1426AA0();
    v27 = sub_1C132AD90(v12, v13, v26);
    sub_1C1426DB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    swift_bridgeObjectRetain();
    v27 = sub_1C132AD90(a2, a3, v26);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C1324000, v9, v10, "Subscribing participant %{public}s to activity: %{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v24, -1, -1);
    MEMORY[0x1C3BAD3F4](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  v14 = (uint64_t *)(a4 + 32);
  swift_beginAccess();
  v15 = *(_QWORD *)(a4 + 32);
  if (*(_QWORD *)(v15 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_1C13277A0(a2, a3);
    if ((v17 & 1) != 0)
    {
      v18 = *(_QWORD **)(*(_QWORD *)(v15 + 56) + 8 * v16);
      swift_bridgeObjectRetain();
    }
    else
    {
      v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v18 = sub_1C136C8E4(0, v18[2] + 1, 1, v18, &qword_1ED797B68, &qword_1ED7966B8);
  v20 = v18[2];
  v19 = v18[3];
  if (v20 >= v19 >> 1)
    v18 = sub_1C136C8E4((_QWORD *)(v19 > 1), v20 + 1, 1, v18, &qword_1ED797B68, &qword_1ED7966B8);
  v18[2] = v20 + 1;
  v21 = &v18[2 * v20];
  v21[4] = a1;
  v21[5] = &off_1E7A8D5A0;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = *v14;
  *v14 = 0x8000000000000000;
  sub_1C13C1F24((uint64_t)v18, a2, a3, isUniquelyReferenced_nonNull_native);
  *v14 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1372574(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[3];
  uint64_t v27;
  _UNKNOWN **v28;

  if (qword_1ED793948 != -1)
    swift_once();
  v8 = sub_1C1426854();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED798598);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v9 = sub_1C1426848();
  v10 = sub_1C1426C80();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v26[0] = v24;
    *(_DWORD *)v11 = 136446466;
    v27 = a1;
    v28 = &off_1E7A8C670;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7966B8);
    v12 = sub_1C1426AA0();
    v27 = sub_1C132AD90(v12, v13, v26);
    sub_1C1426DB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    swift_bridgeObjectRetain();
    v27 = sub_1C132AD90(a2, a3, v26);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C1324000, v9, v10, "Subscribing participant %{public}s to activity: %{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v24, -1, -1);
    MEMORY[0x1C3BAD3F4](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  v14 = (uint64_t *)(a4 + 32);
  swift_beginAccess();
  v15 = *(_QWORD *)(a4 + 32);
  if (*(_QWORD *)(v15 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_1C13277A0(a2, a3);
    if ((v17 & 1) != 0)
    {
      v18 = *(_QWORD **)(*(_QWORD *)(v15 + 56) + 8 * v16);
      swift_bridgeObjectRetain();
    }
    else
    {
      v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v18 = sub_1C136C8E4(0, v18[2] + 1, 1, v18, &qword_1ED797B68, &qword_1ED7966B8);
  v20 = v18[2];
  v19 = v18[3];
  if (v20 >= v19 >> 1)
    v18 = sub_1C136C8E4((_QWORD *)(v19 > 1), v20 + 1, 1, v18, &qword_1ED797B68, &qword_1ED7966B8);
  v18[2] = v20 + 1;
  v21 = &v18[2 * v20];
  v21[4] = a1;
  v21[5] = &off_1E7A8C670;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = *v14;
  *v14 = 0x8000000000000000;
  sub_1C13C1F24((uint64_t)v18, a2, a3, isUniquelyReferenced_nonNull_native);
  *v14 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1372948(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[3];
  uint64_t v27;
  _UNKNOWN **v28;

  if (qword_1ED793948 != -1)
    swift_once();
  v8 = sub_1C1426854();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED798598);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v9 = sub_1C1426848();
  v10 = sub_1C1426C80();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v26[0] = v24;
    *(_DWORD *)v11 = 136446466;
    v27 = a1;
    v28 = &off_1E7A8C118;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7966B8);
    v12 = sub_1C1426AA0();
    v27 = sub_1C132AD90(v12, v13, v26);
    sub_1C1426DB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    swift_bridgeObjectRetain();
    v27 = sub_1C132AD90(a2, a3, v26);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C1324000, v9, v10, "Subscribing participant %{public}s to activity: %{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v24, -1, -1);
    MEMORY[0x1C3BAD3F4](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  v14 = (uint64_t *)(a4 + 32);
  swift_beginAccess();
  v15 = *(_QWORD *)(a4 + 32);
  if (*(_QWORD *)(v15 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_1C13277A0(a2, a3);
    if ((v17 & 1) != 0)
    {
      v18 = *(_QWORD **)(*(_QWORD *)(v15 + 56) + 8 * v16);
      swift_bridgeObjectRetain();
    }
    else
    {
      v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v18 = sub_1C136C8E4(0, v18[2] + 1, 1, v18, &qword_1ED797B68, &qword_1ED7966B8);
  v20 = v18[2];
  v19 = v18[3];
  if (v20 >= v19 >> 1)
    v18 = sub_1C136C8E4((_QWORD *)(v19 > 1), v20 + 1, 1, v18, &qword_1ED797B68, &qword_1ED7966B8);
  v18[2] = v20 + 1;
  v21 = &v18[2 * v20];
  v21[4] = a1;
  v21[5] = &off_1E7A8C118;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = *v14;
  *v14 = 0x8000000000000000;
  sub_1C13C1F24((uint64_t)v18, a2, a3, isUniquelyReferenced_nonNull_native);
  *v14 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1372D1C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[3];
  uint64_t v27;
  _UNKNOWN **v28;

  if (qword_1ED793948 != -1)
    swift_once();
  v8 = sub_1C1426854();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED798598);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v9 = sub_1C1426848();
  v10 = sub_1C1426C80();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v26[0] = v24;
    *(_DWORD *)v11 = 136446466;
    v27 = a1;
    v28 = &off_1E7A8AE50;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7966B8);
    v12 = sub_1C1426AA0();
    v27 = sub_1C132AD90(v12, v13, v26);
    sub_1C1426DB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    swift_bridgeObjectRetain();
    v27 = sub_1C132AD90(a2, a3, v26);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C1324000, v9, v10, "Subscribing participant %{public}s to activity: %{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v24, -1, -1);
    MEMORY[0x1C3BAD3F4](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  v14 = (uint64_t *)(a4 + 32);
  swift_beginAccess();
  v15 = *(_QWORD *)(a4 + 32);
  if (*(_QWORD *)(v15 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_1C13277A0(a2, a3);
    if ((v17 & 1) != 0)
    {
      v18 = *(_QWORD **)(*(_QWORD *)(v15 + 56) + 8 * v16);
      swift_bridgeObjectRetain();
    }
    else
    {
      v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v18 = sub_1C136C8E4(0, v18[2] + 1, 1, v18, &qword_1ED797B68, &qword_1ED7966B8);
  v20 = v18[2];
  v19 = v18[3];
  if (v20 >= v19 >> 1)
    v18 = sub_1C136C8E4((_QWORD *)(v19 > 1), v20 + 1, 1, v18, &qword_1ED797B68, &qword_1ED7966B8);
  v18[2] = v20 + 1;
  v21 = &v18[2 * v20];
  v21[4] = a1;
  v21[5] = &off_1E7A8AE50;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = *v14;
  *v14 = 0x8000000000000000;
  sub_1C13C1F24((uint64_t)v18, a2, a3, isUniquelyReferenced_nonNull_native);
  *v14 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C13730EC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[3];
  uint64_t v27;
  _UNKNOWN **v28;

  if (qword_1ED793948 != -1)
    swift_once();
  v8 = sub_1C1426854();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED798598);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v9 = sub_1C1426848();
  v10 = sub_1C1426C80();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v26[0] = v24;
    *(_DWORD *)v11 = 136446466;
    v27 = a1;
    v28 = &off_1E7A8B420;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7966B8);
    v12 = sub_1C1426AA0();
    v27 = sub_1C132AD90(v12, v13, v26);
    sub_1C1426DB8();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    swift_bridgeObjectRetain();
    v27 = sub_1C132AD90(a2, a3, v26);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C1324000, v9, v10, "Subscribing participant %{public}s to activity: %{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v24, -1, -1);
    MEMORY[0x1C3BAD3F4](v11, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  v14 = (uint64_t *)(a4 + 32);
  swift_beginAccess();
  v15 = *(_QWORD *)(a4 + 32);
  if (*(_QWORD *)(v15 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_1C13277A0(a2, a3);
    if ((v17 & 1) != 0)
    {
      v18 = *(_QWORD **)(*(_QWORD *)(v15 + 56) + 8 * v16);
      swift_bridgeObjectRetain();
    }
    else
    {
      v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v18 = sub_1C136C8E4(0, v18[2] + 1, 1, v18, &qword_1ED797B68, &qword_1ED7966B8);
  v20 = v18[2];
  v19 = v18[3];
  if (v20 >= v19 >> 1)
    v18 = sub_1C136C8E4((_QWORD *)(v19 > 1), v20 + 1, 1, v18, &qword_1ED797B68, &qword_1ED7966B8);
  v18[2] = v20 + 1;
  v21 = &v18[2 * v20];
  v21[4] = a1;
  v21[5] = &off_1E7A8B420;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = *v14;
  *v14 = 0x8000000000000000;
  sub_1C13C1F24((uint64_t)v18, a2, a3, isUniquelyReferenced_nonNull_native);
  *v14 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C13734C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  char v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  int v31;
  int v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v35 = a2;
  v6 = sub_1C1425DF8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for Assertion();
  v10 = MEMORY[0x1E0C80A78](v39);
  v38 = (uint64_t)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v28 - v13;
  result = MEMORY[0x1E0DEE9D8];
  v40 = MEMORY[0x1E0DEE9D8];
  v16 = *(_QWORD *)(a1 + 16);
  if (v16)
  {
    v28 = v3;
    v17 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v37 = *(_QWORD *)(v12 + 72);
    v33 = v17;
    v18 = a1 + v17;
    v36 = *MEMORY[0x1E0D8CC70];
    v32 = *MEMORY[0x1E0D8CC58];
    v31 = *MEMORY[0x1E0D8CC50];
    v30 = *MEMORY[0x1E0D8CC68];
    v29 = *MEMORY[0x1E0D8CC60];
    v34 = a3;
    while (1)
    {
      sub_1C1338F24(v18, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, &v14[*(int *)(v39 + 20)], v6);
      v20 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v9, v6);
      if (v20 != v36)
      {
        if (v20 == v32)
          goto LABEL_3;
        if (v20 == v31)
        {
          (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        }
        else if (v20 != v30 && v20 != v29)
        {
          result = sub_1C1426F8C();
          __break(1u);
          return result;
        }
      }
      if (sub_1C1425E40() == v35 && v21 == a3)
      {
        swift_bridgeObjectRelease();
LABEL_16:
        sub_1C1339140((uint64_t)v14, v38, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
        v24 = v40;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C133691C(0, *(_QWORD *)(v24 + 16) + 1, 1);
          v24 = v40;
        }
        v26 = *(_QWORD *)(v24 + 16);
        v25 = *(_QWORD *)(v24 + 24);
        if (v26 >= v25 >> 1)
        {
          sub_1C133691C(v25 > 1, v26 + 1, 1);
          v24 = v40;
        }
        *(_QWORD *)(v24 + 16) = v26 + 1;
        v27 = v24 + v33;
        v19 = v37;
        sub_1C1339140(v38, v27 + v26 * v37, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
        a3 = v34;
        goto LABEL_4;
      }
      v23 = sub_1C1427064();
      swift_bridgeObjectRelease();
      if ((v23 & 1) != 0)
        goto LABEL_16;
LABEL_3:
      sub_1C1339004((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      v19 = v37;
LABEL_4:
      v18 += v19;
      if (!--v16)
        return v40;
    }
  }
  return result;
}

uint64_t sub_1C1373824(uint64_t a1, void (*a2)(char *, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797868);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 64);
  v24 = a1 + 64;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v7;
  v25 = (unint64_t)(v8 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v12 = 0;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v12 << 6);
      goto LABEL_5;
    }
    v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v20 >= v25)
      return swift_release();
    v21 = *(_QWORD *)(v24 + 8 * v20);
    ++v12;
    if (!v21)
    {
      v12 = v20 + 1;
      if (v20 + 1 >= v25)
        return swift_release();
      v21 = *(_QWORD *)(v24 + 8 * v12);
      if (!v21)
      {
        v12 = v20 + 2;
        if (v20 + 2 >= v25)
          return swift_release();
        v21 = *(_QWORD *)(v24 + 8 * v12);
        if (!v21)
        {
          v12 = v20 + 3;
          if (v20 + 3 >= v25)
            return swift_release();
          v21 = *(_QWORD *)(v24 + 8 * v12);
          if (!v21)
            break;
        }
      }
    }
LABEL_22:
    v10 = (v21 - 1) & v21;
    v14 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_5:
    v15 = *(_QWORD *)(a1 + 48);
    v16 = sub_1C1425CC0();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v6, v15 + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v14, v16);
    v17 = *(_QWORD *)(a1 + 56);
    v18 = v17 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for Assertion() - 8) + 72) * v14;
    v19 = (uint64_t)&v6[*(int *)(v4 + 48)];
    sub_1C1338F24(v18, v19, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    a2(v6, v19);
    result = sub_1C132C860((uint64_t)v6, &qword_1ED797868);
  }
  v22 = v20 + 4;
  if (v22 >= v25)
    return swift_release();
  v21 = *(_QWORD *)(v24 + 8 * v22);
  if (v21)
  {
    v12 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    v12 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v12 >= v25)
      return swift_release();
    v21 = *(_QWORD *)(v24 + 8 * v12);
    ++v22;
    if (v21)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1C1373A70(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;

  if (qword_1ED7978F0 != -1)
    swift_once();
  v4 = sub_1C1426854();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED798610);
  swift_bridgeObjectRetain_n();
  v5 = sub_1C1426848();
  v6 = sub_1C1426C80();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v9 = v8;
    *(_DWORD *)v7 = 136380675;
    swift_bridgeObjectRetain();
    sub_1C132AD90(a1, a2, &v9);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C1324000, v5, v6, "Fake foreground assertions have changed for bundle identifier: %{private}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v8, -1, -1);
    MEMORY[0x1C3BAD3F4](v7, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1C1373C0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t result;
  int64_t v22;
  void (*v23)(char *, uint64_t);
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(void);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  int v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(void);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  int64_t v83;

  v64 = a4;
  v67 = a3;
  v68 = a1;
  v5 = sub_1C1425E4C();
  v62 = *(_QWORD *)(v5 - 8);
  v63 = v5;
  MEMORY[0x1E0C80A78](v5);
  v61 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C1425DF8();
  v76 = *(_QWORD *)(v7 - 8);
  v77 = v7;
  MEMORY[0x1E0C80A78](v7);
  v75 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797868);
  v9 = MEMORY[0x1E0C80A78](v79);
  v71 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v60 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v80 = (uint64_t)&v60 - v15;
  MEMORY[0x1E0C80A78](v14);
  v74 = (char *)&v60 - v16;
  v17 = *(_QWORD *)(a2 + 64);
  v65 = a2 + 64;
  v18 = 1 << *(_BYTE *)(a2 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & v17;
  v66 = (unint64_t)(v18 + 63) >> 6;
  v73 = *MEMORY[0x1E0D8CC70];
  result = swift_bridgeObjectRetain();
  v22 = 0;
  v72 = a2;
  v70 = v13;
  while (1)
  {
    if (v20)
    {
      v82 = (v20 - 1) & v20;
      v83 = v22;
      v24 = __clz(__rbit64(v20)) | (v22 << 6);
      goto LABEL_24;
    }
    v25 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v25 >= v66)
      goto LABEL_33;
    v26 = *(_QWORD *)(v65 + 8 * v25);
    v27 = v22 + 1;
    if (!v26)
    {
      v27 = v22 + 2;
      if (v22 + 2 >= v66)
        goto LABEL_33;
      v26 = *(_QWORD *)(v65 + 8 * v27);
      if (!v26)
      {
        v27 = v22 + 3;
        if (v22 + 3 >= v66)
          goto LABEL_33;
        v26 = *(_QWORD *)(v65 + 8 * v27);
        if (!v26)
        {
          v27 = v22 + 4;
          if (v22 + 4 >= v66)
            goto LABEL_33;
          v26 = *(_QWORD *)(v65 + 8 * v27);
          if (!v26)
            break;
        }
      }
    }
LABEL_23:
    v82 = (v26 - 1) & v26;
    v83 = v27;
    v24 = __clz(__rbit64(v26)) + (v27 << 6);
LABEL_24:
    v29 = *(_QWORD *)(a2 + 48);
    v30 = sub_1C1425CC0();
    v31 = *(_QWORD *)(v30 - 8);
    v32 = v29 + *(_QWORD *)(v31 + 72) * v24;
    v81 = v31;
    v33 = *(void (**)(void))(v31 + 16);
    v34 = v74;
    ((void (*)(char *, uint64_t, uint64_t))v33)(v74, v32, v30);
    v35 = *(_QWORD *)(a2 + 56);
    v36 = type metadata accessor for Assertion();
    v37 = v35 + *(_QWORD *)(*(_QWORD *)(v36 - 8) + 72) * v24;
    v38 = v79;
    sub_1C1338F24(v37, (uint64_t)&v34[*(int *)(v79 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    v39 = (uint64_t)v34;
    v40 = v80;
    sub_1C132A724(v39, v80, &qword_1ED797868);
    v41 = *(int *)(v38 + 48);
    v42 = (uint64_t)&v13[v41];
    v43 = v40 + v41;
    v78 = v33;
    ((void (*)(char *, uint64_t, uint64_t))v33)(v13, v40, v30);
    sub_1C1338F24(v43, v42, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    v44 = v75;
    v45 = v76;
    v46 = v77;
    (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v75, v42 + *(int *)(v36 + 20), v77);
    sub_1C1339004(v42, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    v47 = (*(uint64_t (**)(char *, uint64_t))(v45 + 88))(v44, v46);
    if (v47 != v73)
    {
      (*(void (**)(char *, uint64_t))(v45 + 8))(v44, v46);
      v23 = *(void (**)(char *, uint64_t))(v81 + 8);
      v13 = v70;
      a2 = v72;
      v22 = v83;
      goto LABEL_5;
    }
    (*(void (**)(char *, uint64_t))(v45 + 96))(v44, v46);
    v69 = *(_QWORD *)v44;
    v48 = (uint64_t)&v71[*(int *)(v79 + 48)];
    v49 = v30;
    v78();
    sub_1C1338F24(v43, v48, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    v50 = v48 + *(int *)(v36 + 40);
    v51 = v62;
    v52 = v63;
    v53 = v61;
    (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v61, v50, v63);
    sub_1C1339004(v48, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    v54 = sub_1C1425E40();
    v56 = v55;
    (*(void (**)(char *, uint64_t))(v51 + 8))(v53, v52);
    if (v54 == v67 && v56 == v64)
    {
      swift_bridgeObjectRelease();
      v23 = *(void (**)(char *, uint64_t))(v81 + 8);
      v30 = v49;
      v23(v71, v49);
      v13 = v70;
      v22 = v83;
LABEL_29:
      v59 = v68;
      v58 = v69;
      if ((sub_1C14257EC() & 1) == 0)
        v59 = v58;
      v68 = v59;
      goto LABEL_32;
    }
    v57 = sub_1C1427064();
    swift_bridgeObjectRelease();
    v23 = *(void (**)(char *, uint64_t))(v81 + 8);
    v30 = v49;
    v23(v71, v49);
    v13 = v70;
    v22 = v83;
    if ((v57 & 1) != 0)
      goto LABEL_29;
LABEL_32:
    a2 = v72;
    v40 = v80;
LABEL_5:
    v20 = v82;
    v23(v13, v30);
    result = sub_1C132C860(v40, &qword_1ED797868);
  }
  v28 = v22 + 5;
  if (v22 + 5 >= v66)
  {
LABEL_33:
    swift_release();
    return v68;
  }
  v26 = *(_QWORD *)(v65 + 8 * v28);
  if (v26)
  {
    v27 = v22 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    v27 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v27 >= v66)
      goto LABEL_33;
    v26 = *(_QWORD *)(v65 + 8 * v27);
    ++v28;
    if (v26)
      goto LABEL_23;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1C1374194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t result;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int64_t v70;
  uint64_t v71;
  int v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t, uint64_t);
  char *v81;
  uint64_t v82;
  int64_t v83;
  uint64_t v84;
  uint64_t v85;

  v68 = a3;
  v71 = a2;
  v4 = sub_1C1425E4C();
  v66 = *(_QWORD *)(v4 - 8);
  v67 = v4;
  MEMORY[0x1E0C80A78](v4);
  v65 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C1425DF8();
  v75 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v74 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797868);
  v9 = MEMORY[0x1E0C80A78](v8);
  v64 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v62 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v85 = (uint64_t)&v62 - v15;
  MEMORY[0x1E0C80A78](v14);
  v73 = (char *)&v62 - v16;
  v17 = *(_QWORD *)(a1 + 64);
  v69 = a1 + 64;
  v18 = 1 << *(_BYTE *)(a1 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & v17;
  v70 = (unint64_t)(v18 + 63) >> 6;
  v72 = *MEMORY[0x1E0D8CC68];
  v77 = a1;
  result = swift_bridgeObjectRetain();
  v22 = 0;
  v76 = v6;
  v63 = v8;
  v81 = v13;
  while (v20)
  {
    v23 = v8;
    v82 = (v20 - 1) & v20;
    v83 = v22;
    v24 = __clz(__rbit64(v20)) | (v22 << 6);
LABEL_23:
    v29 = v77;
    v30 = *(_QWORD *)(v77 + 48);
    v31 = sub_1C1425CC0();
    v32 = *(_QWORD *)(v31 - 8);
    v33 = v30 + *(_QWORD *)(v32 + 72) * v24;
    v84 = v32;
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 16);
    v35 = (uint64_t)v73;
    v34(v73, v33, v31);
    v36 = *(_QWORD *)(v29 + 56);
    v37 = type metadata accessor for Assertion();
    sub_1C1338F24(v36 + *(_QWORD *)(*(_QWORD *)(v37 - 8) + 72) * v24, v35 + *(int *)(v23 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    v38 = v85;
    sub_1C132A724(v35, v85, &qword_1ED797868);
    v39 = *(int *)(v23 + 48);
    v40 = v81;
    v41 = (uint64_t)&v81[v39];
    v42 = v38 + v39;
    v80 = v34;
    v34(v81, v38, v31);
    v78 = v42;
    sub_1C1338F24(v42, v41, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    v79 = v37;
    v43 = v41 + *(int *)(v37 + 20);
    v44 = v74;
    v45 = v75;
    v8 = v23;
    v46 = v76;
    (*(void (**)(char *, uint64_t, uint64_t))(v75 + 16))(v74, v43, v76);
    sub_1C1339004(v41, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    v47 = (*(uint64_t (**)(char *, uint64_t))(v45 + 88))(v44, v46);
    if (v47 == v72)
    {
      v48 = v84;
      v49 = v64;
      v50 = (uint64_t)&v64[*(int *)(v23 + 48)];
      v51 = v31;
      v80(v64, v85, v31);
      sub_1C1338F24(v78, v50, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      v52 = v65;
      v53 = v66;
      v54 = v67;
      (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v65, v50 + *(int *)(v79 + 40), v67);
      sub_1C1339004(v50, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      v55 = sub_1C1425E40();
      v57 = v56;
      (*(void (**)(char *, uint64_t))(v53 + 8))(v52, v54);
      if (v55 == v71 && v57 == v68)
      {
        swift_bridgeObjectRelease();
        v61 = *(void (**)(char *, uint64_t))(v48 + 8);
        v61(v49, v51);
        v61(v81, v51);
        sub_1C132C860(v85, &qword_1ED797868);
LABEL_30:
        v60 = 1;
LABEL_31:
        swift_release();
        return v60;
      }
      v58 = sub_1C1427064();
      swift_bridgeObjectRelease();
      v59 = *(void (**)(char *, uint64_t))(v48 + 8);
      v59(v49, v31);
      v59(v81, v31);
      result = sub_1C132C860(v85, &qword_1ED797868);
      v8 = v63;
      v20 = v82;
      v22 = v83;
      if ((v58 & 1) != 0)
        goto LABEL_30;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v45 + 8))(v44, v46);
      (*(void (**)(char *, uint64_t))(v84 + 8))(v40, v31);
      result = sub_1C132C860(v85, &qword_1ED797868);
      v20 = v82;
      v22 = v83;
    }
  }
  v25 = v22 + 1;
  if (__OFADD__(v22, 1))
  {
    __break(1u);
    goto LABEL_33;
  }
  if (v25 >= v70)
    goto LABEL_28;
  v26 = *(_QWORD *)(v69 + 8 * v25);
  v27 = v22 + 1;
  if (v26)
    goto LABEL_22;
  v27 = v22 + 2;
  if (v22 + 2 >= v70)
    goto LABEL_28;
  v26 = *(_QWORD *)(v69 + 8 * v27);
  if (v26)
    goto LABEL_22;
  v27 = v22 + 3;
  if (v22 + 3 >= v70)
    goto LABEL_28;
  v26 = *(_QWORD *)(v69 + 8 * v27);
  if (v26)
    goto LABEL_22;
  v27 = v22 + 4;
  if (v22 + 4 >= v70)
    goto LABEL_28;
  v26 = *(_QWORD *)(v69 + 8 * v27);
  if (v26)
  {
LABEL_22:
    v23 = v8;
    v82 = (v26 - 1) & v26;
    v83 = v27;
    v24 = __clz(__rbit64(v26)) + (v27 << 6);
    goto LABEL_23;
  }
  v28 = v22 + 5;
  if (v22 + 5 >= v70)
  {
LABEL_28:
    v60 = 0;
    goto LABEL_31;
  }
  v26 = *(_QWORD *)(v69 + 8 * v28);
  if (v26)
  {
    v27 = v22 + 5;
    goto LABEL_22;
  }
  while (1)
  {
    v27 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v27 >= v70)
      goto LABEL_28;
    v26 = *(_QWORD *)(v69 + 8 * v27);
    ++v28;
    if (v26)
      goto LABEL_22;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1C137471C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  _QWORD *v17;

  v5 = result;
  v6 = 0;
  v7 = result + 56;
  v8 = 1 << *(_BYTE *)(result + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(result + 56);
  v11 = (unint64_t)(v8 + 63) >> 6;
  while (v10)
  {
    v12 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v13 = v12 | (v6 << 6);
LABEL_22:
    v17 = (_QWORD *)(*(_QWORD *)(v5 + 48) + 16 * v13);
    if (*v17 != a2 || v17[1] != a3)
    {
      result = sub_1C1427064();
      if ((result & 1) == 0)
        continue;
    }
    return 1;
  }
  v14 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v14 >= v11)
    return 0;
  v15 = *(_QWORD *)(v7 + 8 * v14);
  ++v6;
  if (v15)
    goto LABEL_21;
  v6 = v14 + 1;
  if (v14 + 1 >= v11)
    return 0;
  v15 = *(_QWORD *)(v7 + 8 * v6);
  if (v15)
    goto LABEL_21;
  v6 = v14 + 2;
  if (v14 + 2 >= v11)
    return 0;
  v15 = *(_QWORD *)(v7 + 8 * v6);
  if (v15)
    goto LABEL_21;
  v6 = v14 + 3;
  if (v14 + 3 >= v11)
    return 0;
  v15 = *(_QWORD *)(v7 + 8 * v6);
  if (v15)
  {
LABEL_21:
    v10 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v6 << 6);
    goto LABEL_22;
  }
  v16 = v14 + 4;
  if (v16 >= v11)
    return 0;
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
  {
    v6 = v16;
    goto LABEL_21;
  }
  while (1)
  {
    v6 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v6 >= v11)
      return 0;
    v15 = *(_QWORD *)(v7 + 8 * v6);
    ++v16;
    if (v15)
      goto LABEL_21;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C1374894(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C1366E48(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD **)(v2 + 24));
}

uint64_t sub_1C137489C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_1C13748C0()
{
  sub_1C1364ED8();
}

BOOL sub_1C13748C8(uint64_t a1)
{
  return sub_1C13656A8(a1);
}

uint64_t sub_1C13748E4(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  _QWORD *v2;

  return sub_1C136776C(a1, a2, v2);
}

uint64_t sub_1C13748EC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  char *v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t (*v25)();
  char v26;
  void (*v27)(char *, uint64_t);
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  _QWORD *v33;
  void (*v34)(char *, unint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)();
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v53;
  unint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  int64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int64_t v72;
  char *v73;

  v53 = a2;
  v67 = a5;
  v70 = a4;
  v54 = a1;
  v6 = sub_1C1425E4C();
  v65 = *(_QWORD *)(v6 - 8);
  v66 = v6;
  MEMORY[0x1E0C80A78](v6);
  v64 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797868);
  v8 = MEMORY[0x1E0C80A78](v63);
  v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v73 = (char *)&v53 - v11;
  v12 = type metadata accessor for Assertion();
  v61 = *(_QWORD *)(v12 - 8);
  v62 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1C1425CC0();
  v16 = *(_QWORD *)(v15 - 8);
  result = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = 0;
  v68 = (_QWORD *)a3;
  v21 = *(_QWORD *)(a3 + 64);
  v55 = 0;
  v56 = a3 + 64;
  v22 = 1 << *(_BYTE *)(a3 + 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v21;
  v57 = (unint64_t)(v22 + 63) >> 6;
  v25 = type metadata accessor for Assertion;
  v59 = v16;
  v60 = v14;
  v58 = v19;
  while (v24)
  {
    v71 = (v24 - 1) & v24;
    v72 = v20;
    v28 = __clz(__rbit64(v24)) | (v20 << 6);
LABEL_21:
    v33 = v68;
    v34 = *(void (**)(char *, unint64_t, uint64_t))(v16 + 16);
    v34(v19, v68[6] + *(_QWORD *)(v16 + 72) * v28, v15);
    v35 = v33[7];
    v36 = *(_QWORD *)(v61 + 72);
    v69 = v28;
    sub_1C1338F24(v35 + v36 * v28, (uint64_t)v14, (uint64_t (*)(_QWORD))v25);
    v37 = v63;
    v38 = v25;
    v39 = v15;
    v40 = (uint64_t)v73;
    v41 = (uint64_t)&v73[*(int *)(v63 + 48)];
    v34(v73, (unint64_t)v19, v39);
    sub_1C1338F24((uint64_t)v14, v41, (uint64_t (*)(_QWORD))v38);
    v42 = (uint64_t)&v10[*(int *)(v37 + 48)];
    v43 = v10;
    v44 = v40;
    v15 = v39;
    v25 = v38;
    v34(v10, v44, v15);
    sub_1C1338F24(v41, v42, (uint64_t (*)(_QWORD))v38);
    v45 = v64;
    v46 = v65;
    v47 = v66;
    (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v64, v42 + *(int *)(v62 + 40), v66);
    sub_1C1339004(v42, (uint64_t (*)(_QWORD))v38);
    v48 = sub_1C1425E40();
    v50 = v49;
    (*(void (**)(char *, uint64_t))(v46 + 8))(v45, v47);
    if (v48 == v70 && v50 == v67)
    {
      swift_bridgeObjectRelease();
      sub_1C132C860((uint64_t)v73, &qword_1ED797868);
      v16 = v59;
      v51 = *(void (**)(char *, uint64_t))(v59 + 8);
      v10 = v43;
      v51(v43, v15);
      v14 = v60;
      sub_1C1339004((uint64_t)v60, (uint64_t (*)(_QWORD))v38);
      v19 = v58;
      result = ((uint64_t (*)(char *, uint64_t))v51)(v58, v15);
      v24 = v71;
      v20 = v72;
      goto LABEL_24;
    }
    v26 = sub_1C1427064();
    swift_bridgeObjectRelease();
    sub_1C132C860((uint64_t)v73, &qword_1ED797868);
    v16 = v59;
    v27 = *(void (**)(char *, uint64_t))(v59 + 8);
    v10 = v43;
    v27(v43, v15);
    v14 = v60;
    sub_1C1339004((uint64_t)v60, (uint64_t (*)(_QWORD))v38);
    v19 = v58;
    result = ((uint64_t (*)(char *, uint64_t))v27)(v58, v15);
    v24 = v71;
    v20 = v72;
    if ((v26 & 1) != 0)
    {
LABEL_24:
      *(unint64_t *)((char *)v54 + ((v69 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v69;
      if (__OFADD__(v55++, 1))
      {
        __break(1u);
        return sub_1C136DDD8(v54, v53, v55, v68);
      }
    }
  }
  v29 = v20 + 1;
  if (__OFADD__(v20, 1))
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v29 >= v57)
    return sub_1C136DDD8(v54, v53, v55, v68);
  v30 = *(_QWORD *)(v56 + 8 * v29);
  v31 = v20 + 1;
  if (v30)
    goto LABEL_20;
  v31 = v20 + 2;
  if (v20 + 2 >= v57)
    return sub_1C136DDD8(v54, v53, v55, v68);
  v30 = *(_QWORD *)(v56 + 8 * v31);
  if (v30)
    goto LABEL_20;
  v31 = v20 + 3;
  if (v20 + 3 >= v57)
    return sub_1C136DDD8(v54, v53, v55, v68);
  v30 = *(_QWORD *)(v56 + 8 * v31);
  if (v30)
  {
LABEL_20:
    v71 = (v30 - 1) & v30;
    v72 = v31;
    v28 = __clz(__rbit64(v30)) + (v31 << 6);
    goto LABEL_21;
  }
  v32 = v20 + 4;
  if (v20 + 4 >= v57)
    return sub_1C136DDD8(v54, v53, v55, v68);
  v30 = *(_QWORD *)(v56 + 8 * v32);
  if (v30)
  {
    v31 = v20 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v31 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v31 >= v57)
      return sub_1C136DDD8(v54, v53, v55, v68);
    v30 = *(_QWORD *)(v56 + 8 * v31);
    ++v32;
    if (v30)
      goto LABEL_20;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1C1374DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v7;
  unsigned int v8;
  unint64_t v9;
  size_t v10;
  uint64_t isStackAllocationSafe;
  uint64_t v12;
  void *v13;
  _QWORD v15[2];

  v15[1] = *MEMORY[0x1E0C80C00];
  v7 = *(_BYTE *)(a1 + 32);
  v8 = v7 & 0x3F;
  v9 = (unint64_t)((1 << v7) + 63) >> 6;
  v10 = 8 * v9;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v8 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    swift_bridgeObjectRetain();
    v12 = sub_1C13748EC((_QWORD *)((char *)v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0)), v9, a1, a2, a3);
    swift_bridgeObjectRelease();
    if (v3)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v13 = (void *)swift_slowAlloc();
    bzero(v13, v10);
    swift_bridgeObjectRetain();
    v12 = sub_1C13748EC((unint64_t *)v13, v9, a1, a2, a3);
    swift_bridgeObjectRelease();
    MEMORY[0x1C3BAD3F4](v13, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v12;
}

uint64_t sub_1C1374F60(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1C1426FC8();
  __break(1u);
  return result;
}

uint64_t sub_1C1375050(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1C1426FC8();
  __break(1u);
  return result;
}

uint64_t sub_1C1375140(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_1C1426C14();
  v8 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1C132FAD4(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1C13751D4(uint64_t a1)
{
  return sub_1C13751F8(a1, (uint64_t (*)(uint64_t))MEMORY[0x1E0D87A00], &qword_1ED793558, MEMORY[0x1E0D87A10], (void (*)(char *, char *))sub_1C134FFBC);
}

uint64_t sub_1C13751F8(uint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4, void (*a5)(char *, char *))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;

  v10 = a2(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v22 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  sub_1C1329AD0(a3, a2, a4);
  result = sub_1C1426C14();
  v23 = result;
  if (v17)
  {
    v19 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v20 = *(_QWORD *)(v11 + 72);
    v21 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    do
    {
      v21(v14, v19, v10);
      a5(v16, v14);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      v19 += v20;
      --v17;
    }
    while (v17);
    return v23;
  }
  return result;
}

uint64_t sub_1C1375324(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _BYTE v10[8];
  uint64_t v11;
  _QWORD v12[4];
  char v13;

  v2 = *(_QWORD *)(a1 + 16);
  sub_1C1375A00();
  result = sub_1C1426C14();
  v11 = result;
  if (v2)
  {
    v4 = (_BYTE *)(a1 + 64);
    do
    {
      v6 = *((_QWORD *)v4 - 4);
      v5 = *((_QWORD *)v4 - 3);
      v7 = *((_QWORD *)v4 - 2);
      v8 = *((_QWORD *)v4 - 1);
      v9 = *v4;
      v4 += 40;
      v12[0] = v6;
      v12[1] = v5;
      v12[2] = v7;
      v12[3] = v8;
      v13 = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C135022C((uint64_t)v10, (uint64_t)v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v2;
    }
    while (v2);
    return v11;
  }
  return result;
}

uint64_t sub_1C13753C8(uint64_t a1)
{
  return sub_1C13751F8(a1, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8D0A8], (unint64_t *)&unk_1ED793250, MEMORY[0x1E0D8D0B8], (void (*)(char *, char *))sub_1C135048C);
}

uint64_t sub_1C13753EC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED797A10) - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  result = sub_1C1426FC8();
  __break(1u);
  return result;
}

uint64_t sub_1C1375508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t result;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, unint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  int64_t v58;
  int v59;
  char *v60;
  uint64_t *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797560);
  MEMORY[0x1E0C80A78](v6);
  v55 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C1425E4C();
  v64 = *(_QWORD *)(v8 - 8);
  v65 = v8;
  MEMORY[0x1E0C80A78](v8);
  v61 = (uint64_t *)((char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797868);
  v10 = MEMORY[0x1E0C80A78](v63);
  v62 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v69 = (uint64_t)&v53 - v13;
  MEMORY[0x1E0C80A78](v12);
  v60 = (char *)&v53 - v14;
  v71 = a1;
  v15 = *(_QWORD *)(a2 + 64);
  v56 = a3;
  v57 = a2 + 64;
  v16 = 1 << *(_BYTE *)(a2 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v15;
  v54 = (_QWORD *)(a3 + 216);
  v58 = (unint64_t)(v16 + 63) >> 6;
  v59 = *MEMORY[0x1E0D8CCD0];
  v66 = a2;
  result = swift_bridgeObjectRetain();
  v20 = 0;
  v21 = v69;
  while (1)
  {
    if (v18)
    {
      v67 = (v18 - 1) & v18;
      v68 = v20;
      v22 = __clz(__rbit64(v18)) | (v20 << 6);
      goto LABEL_24;
    }
    v23 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v58)
      goto LABEL_28;
    v24 = *(_QWORD *)(v57 + 8 * v23);
    v25 = v20 + 1;
    if (!v24)
    {
      v25 = v20 + 2;
      if (v20 + 2 >= v58)
        goto LABEL_28;
      v24 = *(_QWORD *)(v57 + 8 * v25);
      if (!v24)
      {
        v25 = v20 + 3;
        if (v20 + 3 >= v58)
          goto LABEL_28;
        v24 = *(_QWORD *)(v57 + 8 * v25);
        if (!v24)
        {
          v25 = v20 + 4;
          if (v20 + 4 >= v58)
            goto LABEL_28;
          v24 = *(_QWORD *)(v57 + 8 * v25);
          if (!v24)
            break;
        }
      }
    }
LABEL_23:
    v67 = (v24 - 1) & v24;
    v68 = v25;
    v22 = __clz(__rbit64(v24)) + (v25 << 6);
LABEL_24:
    v27 = v66;
    v28 = *(_QWORD *)(v66 + 48);
    v29 = sub_1C1425CC0();
    v30 = *(_QWORD *)(v29 - 8);
    v31 = *(void (**)(char *, unint64_t, uint64_t))(v30 + 16);
    v32 = (uint64_t)v60;
    v31(v60, v28 + *(_QWORD *)(v30 + 72) * v22, v29);
    v33 = *(_QWORD *)(v27 + 56);
    v34 = type metadata accessor for Assertion();
    v35 = v33 + *(_QWORD *)(*(_QWORD *)(v34 - 8) + 72) * v22;
    v36 = v63;
    sub_1C1338F24(v35, v32 + *(int *)(v63 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    sub_1C132A724(v32, v21, &qword_1ED797868);
    v37 = *(int *)(v36 + 48);
    v38 = v62;
    v39 = (uint64_t)&v62[v37];
    v40 = v21 + v37;
    v31(v62, v21, v29);
    sub_1C1338F24(v40, v39, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    v41 = v39 + *(int *)(v34 + 40);
    v43 = v64;
    v42 = v65;
    v44 = v61;
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v64 + 16))(v61, v41, v65);
    v45 = (*(uint64_t (**)(uint64_t *, uint64_t))(v43 + 88))(v44, v42);
    if (v45 == v59)
    {
      (*(void (**)(uint64_t *, uint64_t))(v43 + 96))(v44, v42);
      v46 = *v44;
      v47 = v44[1];
      sub_1C1339004(v39, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v38, v29);
      v48 = *(_QWORD *)(v56 + 240);
      v49 = *(_QWORD *)(v56 + 248);
      __swift_project_boxed_opaque_existential_1(v54, v48);
      v50 = v48;
      v51 = (uint64_t)v55;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 16))(v46, v47, v50, v49);
      v52 = type metadata accessor for Activity();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 48))(v51, 1, v52) == 1)
      {
        sub_1C132C860(v51, &qword_1ED797560);
        sub_1C132FAD4(&v70, v46, v47);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1C132C860(v51, &qword_1ED797560);
      }
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t))(v43 + 8))(v44, v42);
      sub_1C1339004(v39, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v38, v29);
    }
    v18 = v67;
    v20 = v68;
    result = sub_1C132C860(v69, &qword_1ED797868);
  }
  v26 = v20 + 5;
  if (v20 + 5 >= v58)
  {
LABEL_28:
    swift_release();
    return v71;
  }
  v24 = *(_QWORD *)(v57 + 8 * v26);
  if (v24)
  {
    v25 = v20 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    v25 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v25 >= v58)
      goto LABEL_28;
    v24 = *(_QWORD *)(v57 + 8 * v25);
    ++v26;
    if (v24)
      goto LABEL_23;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C13759D4(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  _QWORD *v2;

  return sub_1C13680FC(a1, a2, v2);
}

uint64_t sub_1C13759DC(uint64_t a1, uint64_t a2)
{
  return sub_1C1366D4C(a1, a2);
}

uint64_t sub_1C13759E4(uint64_t a1)
{
  uint64_t v1;

  return sub_1C13691CC(a1, *(_QWORD *)(v1 + 16)) & 1;
}

unint64_t sub_1C1375A00()
{
  unint64_t result;

  result = qword_1ED793510;
  if (!qword_1ED793510)
  {
    result = MEMORY[0x1C3BAD334](&unk_1C142A478, &type metadata for AppRestriction);
    atomic_store(result, (unint64_t *)&qword_1ED793510);
  }
  return result;
}

BOOL sub_1C1375A44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C13636A4(a1, a2, *(_QWORD **)(v2 + 16));
}

uint64_t sub_1C1375A60()
{
  return sub_1C136384C() & 1;
}

uint64_t sub_1C1375A7C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_1C1426FC8();
  __break(1u);
  return result;
}

uint64_t sub_1C1375B94(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 16 * a1 + 32;
    v7 = a3 + 16 * v5;
    if (v6 >= v7 || v6 + 16 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_1C1426FC8();
  __break(1u);
  return result;
}

uint64_t sub_1C1375C9C(char *a1, uint64_t a2)
{
  return sub_1C136B9E4(a1, a2) & 1;
}

uint64_t sub_1C1375CB4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t (**v54)(char *, uint64_t);
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  NSObject *v59;
  os_log_type_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t *v87;
  uint64_t v88;
  NSObject *v89;
  os_log_type_t v90;
  _BOOL4 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  int v103;
  int v104;
  uint64_t v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  NSObject *v110;
  os_log_type_t v111;
  _BOOL4 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  char *v123;
  NSObject *v124;
  os_log_type_t v125;
  int v126;
  _BOOL4 v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t (*v144)(void);
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  unint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t *v158;
  uint64_t v159;
  char *v160;
  char *v161;
  char *v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t *v177;
  char *v178;
  char *v179;
  uint64_t *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t (**v189)(char *, uint64_t);
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793508);
  MEMORY[0x1E0C80A78](v2);
  v173 = (uint64_t)&v156 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C1425B04();
  MEMORY[0x1E0C80A78](v4);
  v172 = (char *)&v156 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = sub_1C1425AEC();
  v168 = *(_QWORD *)(v170 - 8);
  MEMORY[0x1E0C80A78](v170);
  v167 = (char *)&v156 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = sub_1C1425A08();
  v169 = *(_QWORD *)(v171 - 8);
  MEMORY[0x1E0C80A78](v171);
  v166 = (uint64_t)&v156 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C1425A2C();
  v175 = *(_QWORD *)(v8 - 8);
  v176 = v8;
  MEMORY[0x1E0C80A78](v8);
  v174 = (char *)&v156 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C1425084();
  MEMORY[0x1E0C80A78](v10);
  v164 = (char *)&v156 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1C14251EC();
  v185 = *(_QWORD *)(v12 - 8);
  v186 = v12;
  v13 = MEMORY[0x1E0C80A78](v12);
  v165 = (char *)&v156 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v184 = (char *)&v156 - v15;
  v190 = sub_1C1426854();
  v187 = *(_QWORD *)(v190 - 8);
  v16 = MEMORY[0x1E0C80A78](v190);
  v162 = (char *)&v156 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v16);
  v189 = (uint64_t (**)(char *, uint64_t))((char *)&v156 - v19);
  MEMORY[0x1E0C80A78](v18);
  v179 = (char *)&v156 - v20;
  v21 = (int *)type metadata accessor for ActivityManagerEvent(0);
  v22 = MEMORY[0x1E0C80A78](v21);
  v161 = (char *)&v156 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0C80A78](v22);
  v160 = (char *)&v156 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v183 = (uint64_t)&v156 - v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v30 = (uint64_t *)((char *)&v156 - v29);
  v31 = MEMORY[0x1E0C80A78](v28);
  v182 = (uint64_t)&v156 - v32;
  v33 = MEMORY[0x1E0C80A78](v31);
  v35 = (uint64_t *)((char *)&v156 - v34);
  v36 = MEMORY[0x1E0C80A78](v33);
  v181 = (uint64_t)&v156 - v37;
  v38 = MEMORY[0x1E0C80A78](v36);
  v180 = (uint64_t *)((char *)&v156 - v39);
  v40 = MEMORY[0x1E0C80A78](v38);
  v159 = (uint64_t)&v156 - v41;
  v42 = MEMORY[0x1E0C80A78](v40);
  v158 = (uint64_t *)((char *)&v156 - v43);
  v44 = MEMORY[0x1E0C80A78](v42);
  v178 = (char *)&v156 - v45;
  v46 = MEMORY[0x1E0C80A78](v44);
  v177 = (uint64_t *)((char *)&v156 - v47);
  MEMORY[0x1E0C80A78](v46);
  v49 = (char *)&v156 - v48;
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793BF8);
  MEMORY[0x1E0C80A78](v50);
  v52 = (char *)&v156 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_1C1425B40();
  v54 = *(uint64_t (***)(char *, uint64_t))(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v56 = (char *)&v156 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v188 = type metadata accessor for Activity();
  v163 = a1 + *(int *)(v188 + 44);
  sub_1C14253F0();
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v54[6])(v52, 1, v53) != 1)
  {
    v189 = v54;
    ((void (*)(char *, char *, uint64_t))v54[4])(v56, v52, v53);
    v70 = *(_QWORD *)(a1 + v21[6]);
    swift_getObjectType();
    if (swift_conformsToProtocol2())
      v71 = v70;
    else
      v71 = 0;
    if (v71)
    {
      if (qword_1ED793948 != -1)
        swift_once();
      __swift_project_value_buffer(v190, (uint64_t)qword_1ED798598);
      sub_1C1338F24(a1, (uint64_t)v35, type metadata accessor for ActivityManagerEvent);
      v72 = v182;
      sub_1C1338F24(a1, v182, type metadata accessor for ActivityManagerEvent);
      v73 = sub_1C1426848();
      v74 = sub_1C1426C80();
      if (!os_log_type_enabled(v73, v74))
      {

        sub_1C13776C8(v72);
        sub_1C13776C8((uint64_t)v35);
        return v189[1](v56, v53);
      }
      v75 = swift_slowAlloc();
      v76 = swift_slowAlloc();
      v156 = v56;
      v190 = v76;
      v192 = v76;
      *(_DWORD *)v75 = 136446466;
      v77 = *v35;
      v78 = v35[1];
      swift_bridgeObjectRetain();
      v191 = sub_1C132AD90(v77, v78, &v192);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      sub_1C13776C8((uint64_t)v35);
      *(_WORD *)(v75 + 12) = 2082;
      v157 = v53;
      v79 = v184;
      sub_1C1425420();
      sub_1C1329AD0(&qword_1ED792880, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v80 = v72;
      v81 = v186;
      v82 = sub_1C1427058();
      v84 = v83;
      (*(void (**)(char *, uint64_t))(v185 + 8))(v79, v81);
      v191 = sub_1C132AD90(v82, v84, &v192);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      sub_1C13776C8(v80);
      _os_log_impl(&dword_1C1324000, v73, v74, "Alert coordinator is not interested in event from persistent input: %{public}s.%{public}s", (uint8_t *)v75, 0x16u);
      v85 = v190;
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v85, -1, -1);
      MEMORY[0x1C3BAD3F4](v75, -1, -1);

      return v189[1](v156, v157);
    }
    v157 = v53;
    if (*(_QWORD *)(a1 + v21[7] + 8))
    {
      if (qword_1ED793948 != -1)
        swift_once();
      __swift_project_value_buffer(v190, (uint64_t)qword_1ED798598);
      v87 = v180;
      sub_1C1338F24(a1, (uint64_t)v180, type metadata accessor for ActivityManagerEvent);
      v88 = v181;
      sub_1C1338F24(a1, v181, type metadata accessor for ActivityManagerEvent);
      v89 = sub_1C1426848();
      v90 = sub_1C1426C80();
      v91 = os_log_type_enabled(v89, v90);
      v92 = v157;
      if (v91)
      {
        v93 = swift_slowAlloc();
        v190 = swift_slowAlloc();
        v192 = v190;
        *(_DWORD *)v93 = 136446466;
        v94 = *v87;
        v95 = v87[1];
        swift_bridgeObjectRetain();
        v191 = sub_1C132AD90(v94, v95, &v192);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        sub_1C13776C8((uint64_t)v87);
        *(_WORD *)(v93 + 12) = 2082;
        v156 = v56;
        v96 = v184;
        sub_1C1425420();
        sub_1C1329AD0(&qword_1ED792880, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
        v97 = v88;
        v98 = v186;
        v99 = sub_1C1427058();
        v101 = v100;
        (*(void (**)(char *, uint64_t))(v185 + 8))(v96, v98);
        v191 = sub_1C132AD90(v99, v101, &v192);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        sub_1C13776C8(v97);
        _os_log_impl(&dword_1C1324000, v89, v90, "Alert coordinator is not interested in remote event: %{public}s.%{public}s", (uint8_t *)v93, 0x16u);
        v102 = v190;
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v102, -1, -1);
        MEMORY[0x1C3BAD3F4](v93, -1, -1);

        return v189[1](v156, v157);
      }

      sub_1C13776C8(v88);
      v122 = (uint64_t)v87;
      goto LABEL_27;
    }
    v103 = *(unsigned __int8 *)(a1 + v21[5]);
    sub_1C1338F24(a1, (uint64_t)v49, type metadata accessor for ActivityManagerEvent);
    if (v103 == 2)
    {
      v104 = sub_1C1406964();
      sub_1C13776C8((uint64_t)v49);
      v105 = v188;
      v106 = v177;
      v107 = (uint64_t)v178;
      if (v104 == 2)
      {
        if (qword_1ED793948 != -1)
          swift_once();
        __swift_project_value_buffer(v190, (uint64_t)qword_1ED798598);
        v108 = v158;
        sub_1C1338F24(a1, (uint64_t)v158, type metadata accessor for ActivityManagerEvent);
        v109 = v159;
        sub_1C1338F24(a1, v159, type metadata accessor for ActivityManagerEvent);
        v110 = sub_1C1426848();
        v111 = sub_1C1426C80();
        v112 = os_log_type_enabled(v110, v111);
        v92 = v157;
        if (v112)
        {
          v113 = swift_slowAlloc();
          v114 = swift_slowAlloc();
          v192 = v114;
          *(_DWORD *)v113 = 136446466;
          v156 = v56;
          v115 = *v108;
          v116 = v108[1];
          swift_bridgeObjectRetain();
          v191 = sub_1C132AD90(v115, v116, &v192);
          sub_1C1426DB8();
          swift_bridgeObjectRelease();
          sub_1C13776C8((uint64_t)v108);
          *(_WORD *)(v113 + 12) = 2082;
          v117 = v184;
          sub_1C1425420();
          sub_1C1329AD0(&qword_1ED792880, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
          v118 = v186;
          v119 = sub_1C1427058();
          v121 = v120;
          (*(void (**)(char *, uint64_t))(v185 + 8))(v117, v118);
          v191 = sub_1C132AD90(v119, v121, &v192);
          sub_1C1426DB8();
          swift_bridgeObjectRelease();
          sub_1C13776C8(v159);
          _os_log_impl(&dword_1C1324000, v110, v111, "Alert coordinator is not interested in stale updates: %{public}s.%{public}s", (uint8_t *)v113, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1C3BAD3F4](v114, -1, -1);
          MEMORY[0x1C3BAD3F4](v113, -1, -1);

          return v189[1](v156, v157);
        }

        sub_1C13776C8(v109);
        v122 = (uint64_t)v108;
LABEL_27:
        sub_1C13776C8(v122);
        return v189[1](v56, v92);
      }
    }
    else
    {
      sub_1C13776C8((uint64_t)v49);
      v105 = v188;
      v106 = v177;
      v107 = (uint64_t)v178;
    }
    v123 = v179;
    sub_1C142683C();
    sub_1C1338F24(a1, (uint64_t)v106, type metadata accessor for ActivityManagerEvent);
    v183 = a1;
    sub_1C1338F24(a1, v107, type metadata accessor for ActivityManagerEvent);
    v124 = sub_1C1426848();
    v125 = sub_1C1426C80();
    v126 = v125;
    v127 = os_log_type_enabled(v124, v125);
    v156 = v56;
    if (v127)
    {
      v128 = swift_slowAlloc();
      v182 = swift_slowAlloc();
      v192 = v182;
      *(_DWORD *)v128 = 136446466;
      LODWORD(v181) = v126;
      v129 = *v106;
      v130 = v106[1];
      swift_bridgeObjectRetain();
      v191 = sub_1C132AD90(v129, v130, &v192);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      sub_1C13776C8((uint64_t)v106);
      *(_WORD *)(v128 + 12) = 2082;
      v131 = v184;
      sub_1C1425420();
      sub_1C1329AD0(&qword_1ED792880, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v132 = v107;
      v133 = v186;
      v134 = sub_1C1427058();
      v136 = v135;
      (*(void (**)(char *, uint64_t))(v185 + 8))(v131, v133);
      v191 = sub_1C132AD90(v134, v136, &v192);
      sub_1C1426DB8();
      v105 = v188;
      swift_bridgeObjectRelease();
      sub_1C13776C8(v132);
      _os_log_impl(&dword_1C1324000, v124, (os_log_type_t)v181, "AlertPresenter is presenting alert: %{public}s.%{public}s", (uint8_t *)v128, 0x16u);
      v137 = v182;
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v137, -1, -1);
      MEMORY[0x1C3BAD3F4](v128, -1, -1);

      v138 = *(char **)(v187 + 8);
      v139 = v179;
    }
    else
    {
      sub_1C13776C8((uint64_t)v106);
      sub_1C13776C8(v107);

      v138 = *(char **)(v187 + 8);
      v139 = v123;
    }
    v179 = v138;
    ((void (*)(char *, uint64_t))v138)(v139, v190);
    sub_1C1425B34();
    v187 = sub_1C1426A94();
    v182 = v140;
    sub_1C1425B10();
    v141 = sub_1C1426A94();
    v180 = (uint64_t *)v142;
    v181 = v141;
    sub_1C1425420();
    v143 = v183 + *(int *)(v105 + 24);
    v144 = MEMORY[0x1E0C8FFB8];
    v145 = v166;
    sub_1C1338F24(v143, v166, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
    v146 = v168;
    v147 = v167;
    v148 = v145;
    v149 = v170;
    (*(void (**)(char *, uint64_t, uint64_t))(v168 + 32))(v167, v148, v170);
    sub_1C1425A80();
    (*(void (**)(char *, uint64_t))(v146 + 8))(v147, v149);
    sub_1C1425B1C();
    v150 = v173;
    sub_1C1338F24(v143, v173, (uint64_t (*)(_QWORD))v144);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v169 + 56))(v150, 0, 1, v171);
    swift_bridgeObjectRetain();
    v151 = v174;
    sub_1C1425A20();
    sub_1C1425018();
    swift_allocObject();
    sub_1C142500C();
    sub_1C1329AD0(&qword_1EF6DB1D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FFF0], MEMORY[0x1E0C90000]);
    v152 = v176;
    v153 = sub_1C1425000();
    v155 = v154;
    swift_getObjectType();
    sub_1C1425C78();
    sub_1C13282B4(v153, v155);
    swift_release();
    (*(void (**)(char *, uint64_t))(v175 + 8))(v151, v152);
    return v189[1](v156, v157);
  }
  sub_1C1377704((uint64_t)v52);
  sub_1C142683C();
  sub_1C1338F24(a1, (uint64_t)v30, type metadata accessor for ActivityManagerEvent);
  v57 = a1;
  v58 = v183;
  sub_1C1338F24(v57, v183, type metadata accessor for ActivityManagerEvent);
  v59 = sub_1C1426848();
  v60 = sub_1C1426C80();
  if (os_log_type_enabled(v59, v60))
  {
    v61 = swift_slowAlloc();
    v182 = swift_slowAlloc();
    v192 = v182;
    *(_DWORD *)v61 = 136446466;
    v62 = *v30;
    v63 = v30[1];
    swift_bridgeObjectRetain();
    v191 = sub_1C132AD90(v62, v63, &v192);
    sub_1C1426DB8();
    swift_bridgeObjectRelease();
    sub_1C13776C8((uint64_t)v30);
    *(_WORD *)(v61 + 12) = 2082;
    v64 = v184;
    sub_1C1425420();
    sub_1C1329AD0(&qword_1ED792880, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v65 = v186;
    v66 = sub_1C1427058();
    v68 = v67;
    (*(void (**)(char *, uint64_t))(v185 + 8))(v64, v65);
    v191 = sub_1C132AD90(v66, v68, &v192);
    sub_1C1426DB8();
    swift_bridgeObjectRelease();
    sub_1C13776C8(v58);
    _os_log_impl(&dword_1C1324000, v59, v60, "AlertPresenter is ignoring non-alerting update: %{public}s.%{public}s", (uint8_t *)v61, 0x16u);
    v69 = v182;
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v69, -1, -1);
    MEMORY[0x1C3BAD3F4](v61, -1, -1);
  }
  else
  {
    sub_1C13776C8((uint64_t)v30);
    sub_1C13776C8(v58);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v187 + 8))((char *)v189, v190);
}

uint64_t sub_1C13772EC()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AlertParticipant()
{
  return objc_opt_self();
}

uint64_t sub_1C1377338(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  unint64_t v20;
  os_unfair_lock_s *v21;
  uint64_t v22;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  os_log_t v33;
  uint64_t v34;
  _BYTE v35[12];
  int v36;
  os_log_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v4 = sub_1C14251EC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v35[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = type metadata accessor for ActivityManagerEvent(0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = &v35[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v9);
  v13 = (uint64_t *)&v35[-v12];
  v14 = sub_1C1426854();
  v15 = MEMORY[0x1E0C80A78](v14);
  v18 = &v35[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*((_BYTE *)a1 + *(int *)(v8 + 20)) == 2)
    return sub_1C1375CB4((uint64_t)a1);
  if (!*((_BYTE *)a1 + *(int *)(v8 + 20)))
  {
    v19 = *a1;
    v20 = a1[1];
    v21 = *(os_unfair_lock_s **)(*(_QWORD *)(a2 + 16) + 16);
    os_unfair_lock_lock(v21);
    v22 = swift_retain();
    sub_1C136F784(v22, v19, v20, a2);
    swift_release();
    os_unfair_lock_unlock(v21);
    return sub_1C1375CB4((uint64_t)a1);
  }
  v39 = v16;
  v40 = v15;
  sub_1C142683C();
  sub_1C1338F24((uint64_t)a1, (uint64_t)v13, type metadata accessor for ActivityManagerEvent);
  sub_1C1338F24((uint64_t)a1, (uint64_t)v11, type metadata accessor for ActivityManagerEvent);
  v24 = sub_1C1426848();
  v25 = sub_1C1426C80();
  v26 = v25;
  if (os_log_type_enabled(v24, v25))
  {
    v27 = swift_slowAlloc();
    v38 = swift_slowAlloc();
    v42 = v38;
    *(_DWORD *)v27 = 136446466;
    v37 = v24;
    v36 = v26;
    v29 = *v13;
    v28 = v13[1];
    swift_bridgeObjectRetain();
    v41 = sub_1C132AD90(v29, v28, &v42);
    sub_1C1426DB8();
    swift_bridgeObjectRelease();
    sub_1C13776C8((uint64_t)v13);
    *(_WORD *)(v27 + 12) = 2082;
    type metadata accessor for Activity();
    sub_1C1425420();
    sub_1C1329AD0(&qword_1ED792880, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v30 = sub_1C1427058();
    v32 = v31;
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    v41 = sub_1C132AD90(v30, v32, &v42);
    sub_1C1426DB8();
    swift_bridgeObjectRelease();
    sub_1C13776C8((uint64_t)v11);
    v33 = v37;
    _os_log_impl(&dword_1C1324000, v37, (os_log_type_t)v36, "AlertParticipant is ignoring non-updating event: %{public}s.%{public}s", (uint8_t *)v27, 0x16u);
    v34 = v38;
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v34, -1, -1);
    MEMORY[0x1C3BAD3F4](v27, -1, -1);

  }
  else
  {
    sub_1C13776C8((uint64_t)v13);
    sub_1C13776C8((uint64_t)v11);

  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v39 + 8))(v18, v40);
}

uint64_t sub_1C13776C8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ActivityManagerEvent(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C1377704(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793BF8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C1377744(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, unint64_t))(a10 + 16))(a1, a2, a3 | ((HIDWORD(a3) & 1) << 32));
}

BOOL sub_1C1377764(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1C1377778()
{
  sub_1C14270E8();
  sub_1C14270F4();
  return sub_1C1427100();
}

uint64_t sub_1C13777BC()
{
  return sub_1C14270F4();
}

uint64_t sub_1C13777E4()
{
  sub_1C14270E8();
  sub_1C14270F4();
  return sub_1C1427100();
}

uint64_t sub_1C1377824()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_release();

  return swift_deallocClassInstance();
}

void sub_1C1377860(void *a1, void *a2, void *a3, int a4, void (*a5)(char *, uint64_t), uint64_t a6, double a7)
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  unint64_t v28;
  id v29;
  NSObject *v30;
  os_log_type_t v31;
  _BOOL4 v32;
  uint64_t v33;
  NSObject *v34;
  uint64_t v35;
  void *v36;
  unsigned int v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  void *v42;
  _QWORD *v43;
  void *v44;
  void *v45;
  id v46;
  id v47;
  uint64_t v48;
  id v49;
  id v50;
  id v51;
  void *v52;
  void *v53;
  id v54;
  id v55;
  uint64_t v56;
  char *v57;
  double v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  _QWORD *v63;
  void *v64;
  id v65;
  char *v66;
  char *v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  void *v71;
  _QWORD *v72;
  void *v73;
  NSObject *v74;
  NSObject *v75;
  os_log_type_t v76;
  uint8_t *v77;
  uint64_t v78;
  _QWORD *v79;
  _QWORD v80[2];
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  int v96;
  id v97;
  uint64_t v98;
  void (*v99)(char *, uint64_t);
  id v100;
  uint64_t v101;
  id aBlock[8];

  v98 = a6;
  v99 = a5;
  v96 = a4;
  v100 = a3;
  v97 = a2;
  aBlock[6] = *(id *)MEMORY[0x1E0C80C00];
  v10 = sub_1C1426950();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1C14269B0();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1C1426944();
  v91 = *(_QWORD *)(v18 - 8);
  v92 = v18;
  MEMORY[0x1E0C80A78](v18);
  v90 = (_QWORD *)((char *)v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v95 = sub_1C14269D4();
  v89 = *(_QWORD *)(v95 - 8);
  v20 = MEMORY[0x1E0C80A78](v95);
  v94 = (char *)v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v93 = (char *)v80 - v22;
  v23 = objc_msgSend(a1, sel_process);
  if (v23)
  {
    v24 = v23;
    v81 = v7;
    v82 = v17;
    v87 = v10;
    if (qword_1ED793998 != -1)
      swift_once();
    v88 = a1;
    v25 = sub_1C1426854();
    v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1ED7985F8);
    v27 = v24;
    v28 = (unint64_t)v100;
    swift_bridgeObjectRetain_n();
    v29 = v27;
    v30 = sub_1C1426848();
    v31 = sub_1C1426C80();
    v32 = os_log_type_enabled(v30, v31);
    v86 = v11;
    v85 = v13;
    v84 = v14;
    v83 = v15;
    if (v32)
    {
      v33 = swift_slowAlloc();
      v80[1] = v26;
      v34 = v30;
      v35 = v33;
      v36 = (void *)swift_slowAlloc();
      aBlock[0] = v36;
      *(_DWORD *)v35 = 67240450;
      v37 = objc_msgSend(v29, sel_pid);

      LODWORD(v101) = v37;
      sub_1C1426DB8();

      *(_WORD *)(v35 + 8) = 2082;
      swift_bridgeObjectRetain();
      v101 = sub_1C132AD90((uint64_t)v97, v28, (uint64_t *)aBlock);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v34, v31, "Executing task for %{public}d with explanation \"%{public}s\"", (uint8_t *)v35, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v36, -1, -1);
      MEMORY[0x1C3BAD3F4](v35, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    if ((_BYTE)v96)
    {
      v44 = (void *)sub_1C1426A7C();
      v45 = (void *)sub_1C1426A7C();
      v46 = objc_msgSend((id)objc_opt_self(), sel_attributeWithDomain_name_, v44, v45);

      v47 = objc_msgSend((id)objc_opt_self(), sel_targetWithPid_, objc_msgSend(v29, sel_pid));
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797B98);
      v48 = swift_allocObject();
      *(_OWORD *)(v48 + 16) = xmmword_1C1428510;
      *(_QWORD *)(v48 + 32) = v46;
      aBlock[0] = (id)v48;
      sub_1C1426BA8();
      v49 = objc_allocWithZone(MEMORY[0x1E0D87C98]);
      swift_bridgeObjectRetain();
      v50 = v47;
      v51 = v46;
      v52 = (void *)sub_1C1426A7C();
      swift_bridgeObjectRelease();
      sub_1C1330FA8();
      v53 = (void *)sub_1C1426B84();
      swift_bridgeObjectRelease();
      v54 = objc_msgSend(v49, sel_initWithExplanation_target_attributes_, v52, v50, v53);

      aBlock[0] = 0;
      if (objc_msgSend(v54, sel_acquireWithError_, aBlock))
      {
        v97 = v51;
        v55 = aBlock[0];
        ((void (*)(_QWORD))v99)(0);
        sub_1C1425F0C();
        swift_allocObject();
        swift_bridgeObjectRetain();
        v56 = sub_1C1425EF4();
        v57 = v94;
        sub_1C14269BC();
        v58 = a7 * 1000.0;
        if ((~COERCE__INT64(a7 * 1000.0) & 0x7FF0000000000000) != 0)
        {
          if (v58 > -9.22337204e18)
          {
            v100 = v29;
            if (v58 < 9.22337204e18)
            {
              v59 = v90;
              *v90 = (uint64_t)v58;
              v61 = v91;
              v60 = v92;
              (*(void (**)(_QWORD *, _QWORD, uint64_t))(v91 + 104))(v59, *MEMORY[0x1E0DEF490], v92);
              v62 = v93;
              sub_1C14269C8();
              (*(void (**)(_QWORD *, uint64_t))(v61 + 8))(v59, v60);
              v99 = *(void (**)(char *, uint64_t))(v89 + 8);
              v99(v57, v95);
              v98 = *(_QWORD *)(v81 + 104);
              v63 = (_QWORD *)swift_allocObject();
              v63[2] = v54;
              v63[3] = v56;
              aBlock[4] = sub_1C1379BC0;
              aBlock[5] = v63;
              aBlock[0] = (id)MEMORY[0x1E0C809B0];
              aBlock[1] = (id)1107296256;
              aBlock[2] = sub_1C13A7F4C;
              aBlock[3] = &block_descriptor_7;
              v64 = _Block_copy(aBlock);
              v65 = v54;
              swift_retain();
              v66 = v82;
              sub_1C1426974();
              v101 = MEMORY[0x1E0DEE9D8];
              sub_1C1331508();
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A50);
              sub_1C1331180();
              v67 = v85;
              v68 = v87;
              sub_1C1426DF4();
              MEMORY[0x1C3BAC974](v62, v66, v67, v64);
              _Block_release(v64);

              swift_release();
              (*(void (**)(char *, uint64_t))(v86 + 8))(v67, v68);
              (*(void (**)(char *, uint64_t))(v83 + 8))(v66, v84);
              v99(v62, v95);
              swift_release();
              return;
            }
LABEL_28:
            __break(1u);
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_28;
      }
      v69 = aBlock[0];
      v70 = sub_1C1425078();

      swift_willThrow();
      sub_1C13316BC();
      v71 = (void *)swift_allocError();
      *v72 = 0;
      ((void (*)(void))v99)();

      v73 = (void *)v70;
    }
    else
    {
      if (objc_msgSend(v88, sel_taskState) == 4)
      {
        ((void (*)(_QWORD))v99)(0);

        return;
      }
      v74 = v29;
      v75 = sub_1C1426848();
      v76 = sub_1C1426C68();
      if (os_log_type_enabled(v75, v76))
      {
        v77 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v77 = 67240192;
        LODWORD(aBlock[0]) = -[NSObject pid](v74, sel_pid);
        sub_1C1426DB8();

        _os_log_impl(&dword_1C1324000, v75, v76, "Rejecting low-priority task for %{public}d because process is unavailable", v77, 8u);
        MEMORY[0x1C3BAD3F4](v77, -1, -1);
      }
      else
      {

        v75 = v74;
      }

      sub_1C13316BC();
      v78 = swift_allocError();
      *v79 = 2;
      ((void (*)(void))v99)();

      v73 = (void *)v78;
    }

  }
  else
  {
    if (qword_1ED793998 != -1)
      swift_once();
    v38 = sub_1C1426854();
    __swift_project_value_buffer(v38, (uint64_t)qword_1ED7985F8);
    v39 = sub_1C1426848();
    v40 = sub_1C1426C80();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v41 = 0;
      _os_log_impl(&dword_1C1324000, v39, v40, "Cannot execute task; process does not exist", v41, 2u);
      MEMORY[0x1C3BAD3F4](v41, -1, -1);
    }

    sub_1C13316BC();
    v42 = (void *)swift_allocError();
    *v43 = 2;
    ((void (*)(void))v99)();

  }
}

void sub_1C1378318(id a1, char a2, double a3, uint64_t a4, void *a5, void *a6, int a7, void (*a8)(char *, uint64_t), uint64_t a9)
{
  id v11;

  if ((a2 & 1) != 0)
  {
    v11 = a1;
    ((void (*)(id))a8)(a1);
  }
  else
  {
    sub_1C1377860(a1, a5, a6, a7, a8, a9, a3);
  }
  sub_1C1379C64(a1);
}

uint64_t sub_1C13783B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v1 + 16), v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, v3, v4);
}

uint64_t sub_1C1378408(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(*(_QWORD *)v2 + 40);
  v6 = *(_QWORD *)(*(_QWORD *)v2 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v2 + 16), v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 32))(a1, a2, v5, v6);
}

uint64_t sub_1C1378468(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v1 + 16), v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 40))(a1, v3, v4);
}

void sub_1C13784B8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unint64_t a5, void (*a6)(_QWORD, _QWORD), uint64_t a7, _QWORD *a8)
{
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  void (*v18)(_QWORD, _QWORD);
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  id v27;
  void *v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  const char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  id v38;
  uint64_t v39;

  sub_1C1425EE8();
  if (a2)
  {
    if (qword_1ED793998 != -1)
      swift_once();
    v14 = sub_1C1426854();
    __swift_project_value_buffer(v14, (uint64_t)qword_1ED7985F8);
    swift_bridgeObjectRetain_n();
    v15 = sub_1C1426848();
    v16 = sub_1C1426C68();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = a6;
      v19 = swift_slowAlloc();
      v39 = v19;
      *(_DWORD *)v17 = 136380675;
      swift_bridgeObjectRetain();
      sub_1C132AD90(a4, a5, &v39);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v15, v16, "Error launching app %{private}s", v17, 0xCu);
      swift_arrayDestroy();
      v20 = v19;
      a6 = v18;
      MEMORY[0x1C3BAD3F4](v20, -1, -1);
      MEMORY[0x1C3BAD3F4](v17, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1C13316BC();
    v25 = swift_allocError();
    *v26 = a2;
    v27 = a2;
    a6(v25, 1);
    v28 = (void *)v25;
    goto LABEL_22;
  }
  if (a1)
  {
    v21 = a8 + 2;
    v22 = a8[5];
    v23 = a8[6];
    __swift_project_boxed_opaque_existential_1(v21, v22);
    v24 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v23 + 32))(a4, a5, v22, v23);
    if (v24)
    {
      v38 = (id)v24;
      a6(v24, 0);

      return;
    }
    if (qword_1ED793998 != -1)
      swift_once();
    v35 = sub_1C1426854();
    __swift_project_value_buffer(v35, (uint64_t)qword_1ED7985F8);
    swift_bridgeObjectRetain_n();
    v30 = sub_1C1426848();
    v31 = sub_1C1426C68();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = swift_slowAlloc();
      v39 = v33;
      *(_DWORD *)v32 = 136380675;
      swift_bridgeObjectRetain();
      sub_1C132AD90(a4, a5, &v39);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      v34 = "Could not retrieve RBSProcessState for BSHandle %{private}s";
      goto LABEL_19;
    }
LABEL_20:

    swift_bridgeObjectRelease_n();
    goto LABEL_21;
  }
  if (qword_1ED793998 != -1)
    swift_once();
  v29 = sub_1C1426854();
  __swift_project_value_buffer(v29, (uint64_t)qword_1ED7985F8);
  swift_bridgeObjectRetain_n();
  v30 = sub_1C1426848();
  v31 = sub_1C1426C68();
  if (!os_log_type_enabled(v30, v31))
    goto LABEL_20;
  v32 = (uint8_t *)swift_slowAlloc();
  v33 = swift_slowAlloc();
  v39 = v33;
  *(_DWORD *)v32 = 136380675;
  swift_bridgeObjectRetain();
  sub_1C132AD90(a4, a5, &v39);
  sub_1C1426DB8();
  swift_bridgeObjectRelease_n();
  v34 = "App may have launched but no handle was returned %{private}s";
LABEL_19:
  _os_log_impl(&dword_1C1324000, v30, v31, v34, v32, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1C3BAD3F4](v33, -1, -1);
  MEMORY[0x1C3BAD3F4](v32, -1, -1);

LABEL_21:
  sub_1C13316BC();
  v36 = swift_allocError();
  *v37 = 0;
  a6(v36, 1);
  v28 = (void *)v36;
LABEL_22:

}

void sub_1C13789F0(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

void sub_1C1378A64(uint64_t a1, unint64_t a2, _QWORD *a3, uint64_t a4, void *a5, void *a6, int a7, void (*a8)(char *, uint64_t), double a9, uint64_t a10)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  os_unfair_lock_s *v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  void *v39;
  uint64_t *v40;
  void *v41;
  uint64_t v42;
  id v43;
  id v44;
  void *v45;
  uint64_t v46;
  uint64_t inited;
  uint64_t v48;
  void *v49;
  id v50;
  void *v51;
  _QWORD *v52;
  void *v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  void (*v57)(char *, uint64_t);
  void *v58;
  void *v59;
  int v60;
  uint64_t aBlock;
  uint64_t v62;
  void (*v63)(uint64_t, void *, void *);
  void *v64;
  void (*v65)(uint64_t, void *);
  _QWORD *v66;
  uint64_t v67;

  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a4;
  *(_QWORD *)(v19 + 24) = a5;
  v58 = a5;
  *(_QWORD *)(v19 + 32) = a6;
  v60 = a7;
  *(_BYTE *)(v19 + 40) = a7;
  *(double *)(v19 + 48) = a9;
  *(_QWORD *)(v19 + 56) = a8;
  *(_QWORD *)(v19 + 64) = a10;
  v20 = qword_1ED793998;
  swift_retain();
  v59 = a6;
  swift_bridgeObjectRetain();
  swift_retain();
  if (v20 != -1)
    swift_once();
  v21 = sub_1C1426854();
  __swift_project_value_buffer(v21, (uint64_t)qword_1ED7985F8);
  swift_bridgeObjectRetain_n();
  v22 = sub_1C1426848();
  v23 = sub_1C1426C80();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc();
    v57 = a8;
    v25 = swift_slowAlloc();
    aBlock = v25;
    *(_DWORD *)v24 = 136380675;
    swift_bridgeObjectRetain();
    v67 = sub_1C132AD90(a1, a2, &aBlock);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C1324000, v22, v23, "Launching %{private}s", v24, 0xCu);
    swift_arrayDestroy();
    v26 = v25;
    a8 = v57;
    MEMORY[0x1C3BAD3F4](v26, -1, -1);
    MEMORY[0x1C3BAD3F4](v24, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v27 = __swift_project_boxed_opaque_existential_1(a3 + 7, a3[10]);
  v28 = *v27;
  v29 = *(os_unfair_lock_s **)(*(_QWORD *)(*v27 + 40) + 16);
  os_unfair_lock_lock(v29);
  swift_beginAccess();
  v30 = *(_QWORD *)(v28 + 48);
  swift_bridgeObjectRetain();
  v31 = sub_1C1330FE4(a1, a2, v30);
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v29);
  if ((v31 & 1) == 0)
  {
    v36 = sub_1C1426848();
    v37 = sub_1C1426C68();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v38 = 0;
      _os_log_impl(&dword_1C1324000, v36, v37, "Could not launch an unknown client", v38, 2u);
      MEMORY[0x1C3BAD3F4](v38, -1, -1);
    }

    sub_1C13316BC();
    v39 = (void *)swift_allocError();
    v41 = v39;
    v42 = 2;
    goto LABEL_12;
  }
  v32 = a3[5];
  v33 = a3[6];
  __swift_project_boxed_opaque_existential_1(a3 + 2, v32);
  v34 = (void *)(*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v33 + 32))(a1, a2, v32, v33);
  if (v34)
  {
    v35 = v34;
    sub_1C1377860(v34, v58, v59, v60, a8, a10, a9);
    swift_release();

    return;
  }
  v44 = objc_msgSend((id)objc_opt_self(), sel_serviceWithDefaultShellEndpoint);
  if (!v44)
  {
    v54 = sub_1C1426848();
    v55 = sub_1C1426C68();
    if (os_log_type_enabled(v54, v55))
    {
      v56 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v56 = 0;
      _os_log_impl(&dword_1C1324000, v54, v55, "Could not create an app launch service", v56, 2u);
      MEMORY[0x1C3BAD3F4](v56, -1, -1);
    }

    sub_1C13316BC();
    v39 = (void *)swift_allocError();
    v41 = v39;
    v42 = 1;
LABEL_12:
    *v40 = v42;
    v43 = v39;
    ((void (*)(void *))a8)(v41);

    swift_release();
    return;
  }
  v45 = v44;
  sub_1C1425F0C();
  swift_allocObject();
  v46 = sub_1C1425EF4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793310);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1427F50;
  aBlock = sub_1C1426A88();
  v62 = v48;
  sub_1C1426EC0();
  *(_QWORD *)(inited + 96) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(inited + 72) = 1;
  sub_1C1332180(inited);
  v49 = (void *)sub_1C1426A1C();
  swift_bridgeObjectRelease();
  v50 = objc_msgSend((id)objc_opt_self(), sel_optionsWithDictionary_, v49);

  v51 = (void *)sub_1C1426A7C();
  v52 = (_QWORD *)swift_allocObject();
  v52[2] = v46;
  v52[3] = a1;
  v52[4] = a2;
  v52[5] = sub_1C1379BFC;
  v52[6] = v19;
  v52[7] = a3;
  v65 = sub_1C1379C54;
  v66 = v52;
  aBlock = MEMORY[0x1E0C809B0];
  v62 = 1107296256;
  v63 = sub_1C13789F0;
  v64 = &block_descriptor_16_0;
  v53 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v45, sel_openApplication_withOptions_completion_, v51, v50, v53);
  _Block_release(v53);
  swift_release();

  swift_release();
}

void sub_1C13790F0(void *a1, uint64_t a2, unint64_t a3, int a4, uint64_t a5, void *a6, uint64_t a7, void *a8, double a9, void (*a10)(char *, uint64_t))
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  id v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  BOOL v33;
  uint64_t v34;
  void *v35;
  void *v36;
  unsigned int v37;
  void *v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  void *v43;
  _QWORD *v44;
  void *v45;
  void *v46;
  id v47;
  id v48;
  uint64_t v49;
  id v50;
  id v51;
  id v52;
  void *v53;
  void *v54;
  id v55;
  id v56;
  uint64_t v57;
  char *v58;
  double v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  _QWORD *v64;
  void *v65;
  id v66;
  char *v67;
  char *v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  void *v72;
  _QWORD *v73;
  void *v74;
  NSObject *v75;
  NSObject *v76;
  os_log_type_t v77;
  BOOL v78;
  void *v79;
  uint8_t *v80;
  uint64_t v81;
  void *v82;
  _QWORD *v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  void (*v104)(char *, uint64_t);
  void *v105;
  uint64_t v106;
  id aBlock[8];

  LODWORD(v102) = a4;
  v103 = a2;
  v104 = a10;
  v105 = a8;
  aBlock[6] = *(id *)MEMORY[0x1E0C80C00];
  v16 = sub_1C1426950();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1C14269B0();
  v96 = *(_QWORD *)(v20 - 8);
  v97 = v20;
  MEMORY[0x1E0C80A78](v20);
  v95 = (char *)&v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_1C1426944();
  v92 = *(_QWORD *)(v93 - 8);
  MEMORY[0x1E0C80A78](v93);
  v91 = (uint64_t *)((char *)&v84 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v101 = sub_1C14269D4();
  v90 = *(_QWORD *)(v101 - 8);
  v23 = MEMORY[0x1E0C80A78](v101);
  v98 = (char *)&v84 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v94 = (char *)&v84 - v25;
  v26 = objc_msgSend(a1, sel_process);
  if (v26)
  {
    v27 = v26;
    v86 = a5;
    v87 = v19;
    v89 = v16;
    v100 = a6;
    if (qword_1ED793998 != -1)
      swift_once();
    v28 = sub_1C1426854();
    __swift_project_value_buffer(v28, (uint64_t)qword_1ED7985F8);
    v29 = v27;
    swift_bridgeObjectRetain_n();
    v30 = v29;
    v31 = sub_1C1426848();
    v32 = sub_1C1426C80();
    v33 = os_log_type_enabled(v31, v32);
    v99 = a7;
    v88 = v17;
    if (v33)
    {
      v34 = swift_slowAlloc();
      v35 = (void *)swift_slowAlloc();
      v85 = a1;
      v36 = v35;
      aBlock[0] = v35;
      *(_DWORD *)v34 = 67240450;
      v37 = objc_msgSend(v30, sel_pid);

      LODWORD(v106) = v37;
      sub_1C1426DB8();

      *(_WORD *)(v34 + 8) = 2082;
      swift_bridgeObjectRetain();
      v106 = sub_1C132AD90(v103, a3, (uint64_t *)aBlock);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v31, v32, "Executing task for %{public}d with explanation \"%{public}s\"", (uint8_t *)v34, 0x12u);
      swift_arrayDestroy();
      v38 = v36;
      a1 = v85;
      MEMORY[0x1C3BAD3F4](v38, -1, -1);
      MEMORY[0x1C3BAD3F4](v34, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    if ((_BYTE)v102)
    {
      v45 = (void *)sub_1C1426A7C();
      v46 = (void *)sub_1C1426A7C();
      v47 = objc_msgSend((id)objc_opt_self(), sel_attributeWithDomain_name_, v45, v46);

      v48 = objc_msgSend((id)objc_opt_self(), sel_targetWithPid_, objc_msgSend(v30, sel_pid));
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797B98);
      v49 = swift_allocObject();
      *(_OWORD *)(v49 + 16) = xmmword_1C1428510;
      *(_QWORD *)(v49 + 32) = v47;
      aBlock[0] = (id)v49;
      sub_1C1426BA8();
      v50 = objc_allocWithZone(MEMORY[0x1E0D87C98]);
      swift_bridgeObjectRetain();
      v51 = v48;
      v52 = v47;
      v53 = (void *)sub_1C1426A7C();
      swift_bridgeObjectRelease();
      sub_1C1330FA8();
      v54 = (void *)sub_1C1426B84();
      swift_bridgeObjectRelease();
      v55 = objc_msgSend(v50, sel_initWithExplanation_target_attributes_, v53, v51, v54);

      aBlock[0] = 0;
      if ((objc_msgSend(v55, sel_acquireWithError_, aBlock) & 1) != 0)
      {
        v102 = v52;
        v56 = aBlock[0];
        sub_1C13E0348(0, v100, v99, v105, (uint64_t)v104);
        sub_1C1425F0C();
        swift_allocObject();
        swift_bridgeObjectRetain();
        v57 = sub_1C1425EF4();
        v58 = v98;
        sub_1C14269BC();
        v59 = a9 * 1000.0;
        if ((~COERCE__INT64(a9 * 1000.0) & 0x7FF0000000000000) != 0)
        {
          if (v59 > -9.22337204e18)
          {
            v105 = v30;
            if (v59 < 9.22337204e18)
            {
              v60 = v91;
              *v91 = (uint64_t)v59;
              v61 = v92;
              v62 = v93;
              (*(void (**)(_QWORD *, _QWORD, uint64_t))(v92 + 104))(v60, *MEMORY[0x1E0DEF490], v93);
              v63 = v94;
              sub_1C14269C8();
              (*(void (**)(_QWORD *, uint64_t))(v61 + 8))(v60, v62);
              v104 = *(void (**)(char *, uint64_t))(v90 + 8);
              v104(v58, v101);
              v103 = *(_QWORD *)(v86 + 104);
              v64 = (_QWORD *)swift_allocObject();
              v64[2] = v55;
              v64[3] = v57;
              aBlock[4] = sub_1C1379BC0;
              aBlock[5] = v64;
              aBlock[0] = (id)MEMORY[0x1E0C809B0];
              aBlock[1] = (id)1107296256;
              aBlock[2] = sub_1C13A7F4C;
              aBlock[3] = &block_descriptor_5;
              v65 = _Block_copy(aBlock);
              v66 = v55;
              swift_retain();
              v67 = v95;
              sub_1C1426974();
              v106 = MEMORY[0x1E0DEE9D8];
              sub_1C1331508();
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A50);
              sub_1C1331180();
              v68 = v87;
              v69 = v89;
              sub_1C1426DF4();
              MEMORY[0x1C3BAC974](v63, v67, v68, v65);
              _Block_release(v65);

              swift_release();
              (*(void (**)(char *, uint64_t))(v88 + 8))(v68, v69);
              (*(void (**)(char *, uint64_t))(v96 + 8))(v67, v97);
              v104(v63, v101);
              swift_release();
              return;
            }
LABEL_28:
            __break(1u);
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_28;
      }
      v70 = aBlock[0];
      v71 = sub_1C1425078();

      swift_willThrow();
      sub_1C13316BC();
      v72 = (void *)swift_allocError();
      *v73 = 0;
      sub_1C13E0348(v72, v100, v99, v105, (uint64_t)v104);

      v74 = (void *)v71;
    }
    else
    {
      if (objc_msgSend(a1, sel_taskState) == 4)
      {
        sub_1C13E0348(0, v100, v99, v105, (uint64_t)v104);

        return;
      }
      v75 = v30;
      v76 = sub_1C1426848();
      v77 = sub_1C1426C68();
      v78 = os_log_type_enabled(v76, v77);
      v79 = v100;
      if (v78)
      {
        v80 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v80 = 67240192;
        LODWORD(aBlock[0]) = -[NSObject pid](v75, sel_pid);
        sub_1C1426DB8();

        _os_log_impl(&dword_1C1324000, v76, v77, "Rejecting low-priority task for %{public}d because process is unavailable", v80, 8u);
        MEMORY[0x1C3BAD3F4](v80, -1, -1);
      }
      else
      {

        v76 = v75;
      }
      v81 = v99;

      sub_1C13316BC();
      v82 = (void *)swift_allocError();
      *v83 = 2;
      sub_1C13E0348(v82, v79, v81, v105, (uint64_t)v104);

      v74 = v82;
    }

  }
  else
  {
    if (qword_1ED793998 != -1)
      swift_once();
    v39 = sub_1C1426854();
    __swift_project_value_buffer(v39, (uint64_t)qword_1ED7985F8);
    v40 = sub_1C1426848();
    v41 = sub_1C1426C80();
    if (os_log_type_enabled(v40, v41))
    {
      v42 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v42 = 0;
      _os_log_impl(&dword_1C1324000, v40, v41, "Cannot execute task; process does not exist", v42, 2u);
      MEMORY[0x1C3BAD3F4](v42, -1, -1);
    }

    sub_1C13316BC();
    v43 = (void *)swift_allocError();
    *v44 = 2;
    sub_1C13E0348(v43, a6, a7, v105, (uint64_t)v104);

  }
}

uint64_t sub_1C1379BC8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1C1379BFC(void *a1, char a2)
{
  uint64_t v2;

  sub_1C1378318(a1, a2 & 1, *(double *)(v2 + 48), *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), *(unsigned __int8 *)(v2 + 40), *(void (**)(char *, uint64_t))(v2 + 56), *(_QWORD *)(v2 + 64));
}

uint64_t sub_1C1379C18()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1C1379C54(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1C13784B8(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(void (**)(_QWORD, _QWORD))(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD **)(v2 + 56));
}

void sub_1C1379C64(id a1)
{

}

void sub_1C1379C70(void *a1, void *a2, unint64_t a3, int a4, uint64_t a5, void (*a6)(char *, uint64_t), uint64_t a7, void *a8, double a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  id v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  void *v41;
  _QWORD *v42;
  void *v43;
  void *v44;
  id v45;
  id v46;
  uint64_t v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  void *v52;
  void *v53;
  id v54;
  id v55;
  uint64_t v56;
  char *v57;
  double v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  _QWORD *v63;
  void *v64;
  id v65;
  char *v66;
  char *v67;
  uint64_t v68;
  id v69;
  void *v70;
  void *v71;
  _QWORD *v72;
  NSObject *v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  uint64_t v77;
  _QWORD *v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  id v97;
  void (*v98)(char *, uint64_t);
  uint64_t v99;
  id aBlock[8];

  v97 = a8;
  v98 = a6;
  LODWORD(v95) = a4;
  v96 = a2;
  aBlock[6] = *(id *)MEMORY[0x1E0C80C00];
  v14 = sub_1C1426950();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1C14269B0();
  v92 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v91 = (char *)&v79 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_1C1426944();
  v88 = *(_QWORD *)(v89 - 8);
  MEMORY[0x1E0C80A78](v89);
  v87 = (void **)((char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v94 = sub_1C14269D4();
  v86 = *(_QWORD *)(v94 - 8);
  v21 = MEMORY[0x1E0C80A78](v94);
  v93 = (char *)&v79 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v90 = (char *)&v79 - v23;
  v24 = objc_msgSend(a1, sel_process);
  if (v24)
  {
    v25 = v24;
    v81 = v18;
    v82 = v17;
    v83 = v15;
    v84 = v14;
    if (qword_1ED793998 != -1)
      swift_once();
    v26 = sub_1C1426854();
    __swift_project_value_buffer(v26, (uint64_t)qword_1ED7985F8);
    v27 = v25;
    swift_bridgeObjectRetain_n();
    v28 = v27;
    v29 = sub_1C1426848();
    v30 = sub_1C1426C80();
    v31 = os_log_type_enabled(v29, v30);
    v85 = a7;
    v80 = a5;
    if (v31)
    {
      v32 = swift_slowAlloc();
      v79 = a1;
      v33 = v32;
      v34 = (void *)swift_slowAlloc();
      aBlock[0] = v34;
      *(_DWORD *)v33 = 67240450;
      v35 = objc_msgSend(v28, sel_pid);

      LODWORD(v99) = v35;
      sub_1C1426DB8();

      *(_WORD *)(v33 + 8) = 2082;
      swift_bridgeObjectRetain();
      v99 = sub_1C132AD90((uint64_t)v96, a3, (uint64_t *)aBlock);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v29, v30, "Executing task for %{public}d with explanation \"%{public}s\"", (uint8_t *)v33, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v34, -1, -1);
      v36 = v33;
      a1 = v79;
      MEMORY[0x1C3BAD3F4](v36, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    if ((_BYTE)v95)
    {
      v43 = (void *)sub_1C1426A7C();
      v44 = (void *)sub_1C1426A7C();
      v45 = objc_msgSend((id)objc_opt_self(), sel_attributeWithDomain_name_, v43, v44);

      v46 = objc_msgSend((id)objc_opt_self(), sel_targetWithPid_, objc_msgSend(v28, sel_pid));
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797B98);
      v47 = swift_allocObject();
      *(_OWORD *)(v47 + 16) = xmmword_1C1428510;
      *(_QWORD *)(v47 + 32) = v45;
      aBlock[0] = (id)v47;
      sub_1C1426BA8();
      v48 = v28;
      v49 = objc_allocWithZone(MEMORY[0x1E0D87C98]);
      swift_bridgeObjectRetain();
      v50 = v46;
      v51 = v45;
      v52 = (void *)sub_1C1426A7C();
      swift_bridgeObjectRelease();
      sub_1C1330FA8();
      v53 = (void *)sub_1C1426B84();
      swift_bridgeObjectRelease();
      v54 = objc_msgSend(v49, sel_initWithExplanation_target_attributes_, v52, v50, v53);

      aBlock[0] = 0;
      if ((objc_msgSend(v54, sel_acquireWithError_, aBlock) & 1) != 0)
      {
        v96 = v51;
        v97 = v48;
        v55 = aBlock[0];
        sub_1C1425EE8();
        sub_1C1425F0C();
        swift_allocObject();
        swift_bridgeObjectRetain();
        v56 = sub_1C1425EF4();
        v57 = v93;
        sub_1C14269BC();
        v58 = a9 * 1000.0;
        if ((~COERCE__INT64(a9 * 1000.0) & 0x7FF0000000000000) != 0)
        {
          if (v58 > -9.22337204e18)
          {
            if (v58 < 9.22337204e18)
            {
              v59 = v87;
              *v87 = (uint64_t)v58;
              v60 = v88;
              v61 = v89;
              (*(void (**)(_QWORD *, _QWORD, uint64_t))(v88 + 104))(v59, *MEMORY[0x1E0DEF490], v89);
              v62 = v90;
              sub_1C14269C8();
              (*(void (**)(_QWORD *, uint64_t))(v60 + 8))(v59, v61);
              v98 = *(void (**)(char *, uint64_t))(v86 + 8);
              v98(v57, v94);
              v95 = *(_QWORD *)(v80 + 104);
              v63 = (_QWORD *)swift_allocObject();
              v63[2] = v54;
              v63[3] = v56;
              aBlock[4] = sub_1C1379BC0;
              aBlock[5] = v63;
              aBlock[0] = (id)MEMORY[0x1E0C809B0];
              aBlock[1] = (id)1107296256;
              aBlock[2] = sub_1C13A7F4C;
              aBlock[3] = &block_descriptor_30;
              v64 = _Block_copy(aBlock);
              v65 = v54;
              swift_retain();
              v66 = v91;
              sub_1C1426974();
              v99 = MEMORY[0x1E0DEE9D8];
              sub_1C1331508();
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A50);
              sub_1C1331180();
              v67 = v82;
              v68 = v84;
              sub_1C1426DF4();
              MEMORY[0x1C3BAC974](v62, v66, v67, v64);
              _Block_release(v64);

              swift_release();
              (*(void (**)(char *, uint64_t))(v83 + 8))(v67, v68);
              (*(void (**)(char *, uint64_t))(v92 + 8))(v66, v81);
              v98(v62, v94);
              swift_release();
              return;
            }
LABEL_28:
            __break(1u);
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_28;
      }
      v69 = aBlock[0];
      v70 = (void *)sub_1C1425078();

      swift_willThrow();
      sub_1C13316BC();
      v71 = (void *)swift_allocError();
      *v72 = 0;
      sub_1C13DB7BC((uint64_t)v71, (uint64_t)v98, v85, (unint64_t)v97);

    }
    else
    {
      if (objc_msgSend(a1, sel_taskState) == 4)
      {
        sub_1C1425EE8();

        return;
      }
      v73 = v28;
      v74 = sub_1C1426848();
      v75 = sub_1C1426C68();
      if (os_log_type_enabled(v74, v75))
      {
        v76 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v76 = 67240192;
        LODWORD(aBlock[0]) = -[NSObject pid](v73, sel_pid);
        sub_1C1426DB8();

        _os_log_impl(&dword_1C1324000, v74, v75, "Rejecting low-priority task for %{public}d because process is unavailable", v76, 8u);
        MEMORY[0x1C3BAD3F4](v76, -1, -1);
      }
      else
      {

        v74 = v73;
      }
      v77 = v85;

      sub_1C13316BC();
      v70 = (void *)swift_allocError();
      *v78 = 2;
      sub_1C13DB7BC((uint64_t)v70, (uint64_t)v98, v77, (unint64_t)v97);

    }
  }
  else
  {
    if (qword_1ED793998 != -1)
      swift_once();
    v37 = sub_1C1426854();
    __swift_project_value_buffer(v37, (uint64_t)qword_1ED7985F8);
    v38 = sub_1C1426848();
    v39 = sub_1C1426C80();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v40 = 0;
      _os_log_impl(&dword_1C1324000, v38, v39, "Cannot execute task; process does not exist", v40, 2u);
      MEMORY[0x1C3BAD3F4](v40, -1, -1);
    }

    sub_1C13316BC();
    v41 = (void *)swift_allocError();
    *v42 = 2;
    sub_1C13DB7BC((uint64_t)v41, (uint64_t)v98, a7, (unint64_t)v97);

  }
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C137A754()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + 16), sel_invalidate);
  return sub_1C1425EE8();
}

void **assignWithCopy for ProcessManagerError(void **a1, void **a2)
{
  void *v3;
  void *v4;
  int v5;
  unsigned int v6;
  void *v7;
  unsigned int v8;
  id v9;
  void *v10;
  id v11;

  v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)v3 >= 0xFFFFFFFF)
    v5 = -1;
  else
    v5 = (int)v3;
  v6 = v5 + 1;
  v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  v8 = (_DWORD)v4 + 1;
  if (v6 > 1)
  {
    if (v8 <= 1)
      v11 = v7;
    *a1 = v7;
  }
  else if (v8 > 1)
  {

    *a1 = *a2;
  }
  else
  {
    v9 = v7;
    v10 = *a1;
    *a1 = v7;

  }
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void **assignWithTake for ProcessManagerError(void **a1, void **a2)
{
  void *v3;
  void *v4;
  int v5;
  unsigned int v6;
  void *v7;
  unsigned int v8;

  v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)v3 >= 0xFFFFFFFF)
    v5 = -1;
  else
    v5 = (int)v3;
  v6 = v5 + 1;
  v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  v8 = (_DWORD)v4 + 1;
  if (v6 > 1)
    goto LABEL_11;
  if (v8 > 1)
  {

LABEL_11:
    *a1 = v7;
    return a1;
  }
  *a1 = v7;

  return a1;
}

uint64_t getEnumTagSinglePayload for ProcessManagerError(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) < 2)
    LODWORD(v3) = 0;
  if (v3 >= 3)
    return (v3 - 2);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ProcessManagerError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 2;
  }
  return result;
}

_QWORD *sub_1C137A94C(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    *result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProcessManagerError()
{
  return &type metadata for ProcessManagerError;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ProcessManagerTaskExecutionOptions(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && a1[16])
    return (*(_DWORD *)a1 + 254);
  v3 = *a1;
  v4 = v3 >= 3;
  v5 = v3 - 3;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ProcessManagerTaskExecutionOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProcessManagerTaskExecutionOptions()
{
  return &type metadata for ProcessManagerTaskExecutionOptions;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ProcessManagerTaskExecutionOptions.Priority(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ProcessManagerTaskExecutionOptions.Priority(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C137AB14 + 4 * byte_1C1428B45[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C137AB48 + 4 * byte_1C1428B40[v4]))();
}

uint64_t sub_1C137AB48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C137AB50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C137AB58);
  return result;
}

uint64_t sub_1C137AB64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C137AB6CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C137AB70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C137AB78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C137AB84(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1C137AB8C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ProcessManagerTaskExecutionOptions.Priority()
{
  return &type metadata for ProcessManagerTaskExecutionOptions.Priority;
}

unint64_t sub_1C137ABA8()
{
  unint64_t result;

  result = qword_1EF6DB1D8;
  if (!qword_1EF6DB1D8)
  {
    result = MEMORY[0x1C3BAD334](&unk_1C1428C90, &type metadata for ProcessManagerTaskExecutionOptions.Priority);
    atomic_store(result, (unint64_t *)&qword_1EF6DB1D8);
  }
  return result;
}

uint64_t sub_1C137AC08()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AssertionParticipant()
{
  return objc_opt_self();
}

uint64_t sub_1C137AC4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ActivityManagerEvent(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 20)) == 3)
  {
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
    return sub_1C1361264(*(_QWORD **)a1, *(_QWORD *)(a1 + 8), 2);
  }
  return result;
}

uint64_t sub_1C137ACA0()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1C1339040(v0 + 40);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for KeepAliveParticipant()
{
  return objc_opt_self();
}

void sub_1C137ACFC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  os_unfair_lock_s *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  os_unfair_lock_s *v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;

  v3 = v2;
  v6 = type metadata accessor for ActivityManagerEvent(0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (uint64_t *)((char *)&v37 - v11);
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v37 - v14;
  if (*((_BYTE *)a1 + *(int *)(v13 + 20)) == 3)
  {
    if (qword_1ED793968 != -1)
      swift_once();
    v21 = sub_1C1426854();
    __swift_project_value_buffer(v21, (uint64_t)qword_1ED798698);
    sub_1C137B3F4((uint64_t)a1, (uint64_t)v9);
    v22 = sub_1C1426848();
    v23 = sub_1C1426C80();
    if (os_log_type_enabled(v22, v23))
    {
      v38 = (uint8_t *)v3;
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      v40 = v25;
      *(_DWORD *)v24 = 136446210;
      v27 = *v9;
      v26 = v9[1];
      swift_bridgeObjectRetain();
      v39 = sub_1C132AD90(v27, v26, &v40);
      sub_1C1426DB8();
      v3 = (uint64_t)v38;
      swift_bridgeObjectRelease();
      sub_1C13776C8((uint64_t)v9);
      _os_log_impl(&dword_1C1324000, v22, v23, "Ephemeral activity ended %{public}s", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v25, -1, -1);
      MEMORY[0x1C3BAD3F4](v24, -1, -1);
    }
    else
    {
      sub_1C13776C8((uint64_t)v9);
    }

    v36 = *(os_unfair_lock_s **)(*(_QWORD *)(v3 + 16) + 16);
    os_unfair_lock_lock(v36);
    sub_1C137B244(v3, a1);
  }
  else
  {
    if (*((_BYTE *)a1 + *(int *)(v13 + 20)))
      return;
    v16 = *a1;
    v17 = a1[1];
    v18 = *(os_unfair_lock_s **)(*(_QWORD *)(a2 + 16) + 16);
    os_unfair_lock_lock(v18);
    v19 = swift_retain();
    sub_1C1370AA8(v19, v16, v17, a2);
    swift_release();
    os_unfair_lock_unlock(v18);
    type metadata accessor for Activity();
    v20 = sub_1C14258DC();
    sub_1C137B3F4((uint64_t)a1, (uint64_t)v15);
    if ((v20 & 1) != 0)
    {
      sub_1C13776C8((uint64_t)v15);
    }
    else
    {
      v28 = sub_1C14258E8();
      sub_1C13776C8((uint64_t)v15);
      if ((v28 & 1) == 0)
        return;
    }
    if (qword_1ED793968 != -1)
      swift_once();
    v29 = sub_1C1426854();
    __swift_project_value_buffer(v29, (uint64_t)qword_1ED798698);
    sub_1C137B3F4((uint64_t)a1, (uint64_t)v12);
    v30 = sub_1C1426848();
    v31 = sub_1C1426C80();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = swift_slowAlloc();
      v40 = v33;
      *(_DWORD *)v32 = 136446210;
      v38 = v32 + 4;
      v35 = *v12;
      v34 = v12[1];
      swift_bridgeObjectRetain();
      v39 = sub_1C132AD90(v35, v34, &v40);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      sub_1C13776C8((uint64_t)v12);
      _os_log_impl(&dword_1C1324000, v30, v31, "Tracking ephemeral activity %{public}s", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v33, -1, -1);
      MEMORY[0x1C3BAD3F4](v32, -1, -1);
    }
    else
    {
      sub_1C13776C8((uint64_t)v12);
    }

    v36 = *(os_unfair_lock_s **)(*(_QWORD *)(v3 + 16) + 16);
    os_unfair_lock_lock(v36);
    sub_1C137B168(v3, a1);
  }
  os_unfair_lock_unlock(v36);
}

uint64_t sub_1C137B168(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(a1 + 24) + 16))
  {
    sub_1C1425F0C();
    swift_allocObject();
    *(_QWORD *)(a1 + 32) = sub_1C1425EF4();
    swift_release();
  }
  v4 = *a2;
  v5 = a2[1];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C132FAD4(&v7, v4, v5);
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C137B244(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *a2;
  v4 = a2[1];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C1353F8C(v3, v4);
  swift_endAccess();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!*(_QWORD *)(*(_QWORD *)(a1 + 24) + 16))
  {
    if (*(_QWORD *)(a1 + 32))
    {
      swift_retain();
      sub_1C1425EE8();
      swift_release();
    }
    *(_QWORD *)(a1 + 32) = 0;
    return swift_release();
  }
  return result;
}

unint64_t sub_1C137B300()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t inited;
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)(v0 + 16) + 16);
  os_unfair_lock_lock(v1);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793A60);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1427F50;
  *(_QWORD *)(inited + 32) = 0xD00000000000001CLL;
  *(_QWORD *)(inited + 40) = 0x80000001C142E7D0;
  swift_beginAccess();
  v3 = swift_bridgeObjectRetain();
  v4 = sub_1C132FC80(v3);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797A68);
  *(_QWORD *)(inited + 48) = v4;
  v5 = sub_1C133204C(inited);
  os_unfair_lock_unlock(v1);
  return v5;
}

unint64_t sub_1C137B3D4()
{
  return sub_1C137B300();
}

uint64_t sub_1C137B3F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActivityManagerEvent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C137B438(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1C137B458(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t (*sub_1C137B478())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1C137B4B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, char *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793388);
  sub_1C1426CEC();
  if (v16)
  {
    sub_1C13CF774(a1, a2, a3, a4, a5, 0, v6, (uint64_t)&off_1E7A8B440, a6);
    return swift_unknownObjectRelease();
  }
  else
  {
    v14 = sub_1C142584C();
    sub_1C1329AD0(&qword_1ED7932F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FC80], MEMORY[0x1E0C8FC88]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v15, *MEMORY[0x1E0C8FC70], v14);
    return swift_willThrow();
  }
}

uint64_t sub_1C137B5F4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1C1339040(v0 + 104);
  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  return v0;
}

uint64_t sub_1C137B650()
{
  sub_1C137B5F4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for XPCInputParticipant()
{
  return objc_opt_self();
}

uint64_t *sub_1C137B690(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1C1425558();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_1C1425450();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = a3[7];
    v18 = (char *)v4 + v17;
    v19 = (char *)a2 + v17;
    v20 = sub_1C14251B0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  }
  return v4;
}

uint64_t sub_1C137B794(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_1C1425558();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[6];
  v7 = sub_1C1425450();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = a1 + a2[7];
  v9 = sub_1C14251B0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *sub_1C137B82C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C1425558();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_1C1425450();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = a3[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_1C14251B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  return a1;
}

_QWORD *sub_1C137B904(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C1425558();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1C1425450();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_1C14251B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  return a1;
}

_OWORD *sub_1C137B9E0(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C1425558();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1C1425450();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = a3[7];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_1C14251B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  return a1;
}

_QWORD *sub_1C137BAA4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C1425558();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_1C1425450();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[7];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_1C14251B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t sub_1C137BB70()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C137BB7C(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1C1425558();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      v12 = sub_1C1425450();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[6];
      }
      else
      {
        v10 = sub_1C14251B0();
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[7];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1C137BC40()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C137BC4C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_1C1425558();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = sub_1C1425450();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[6];
      }
      else
      {
        v10 = sub_1C14251B0();
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[7];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for XPCInputParticipant.ActivityUpdate()
{
  uint64_t result;

  result = qword_1ED793520;
  if (!qword_1ED793520)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C137BD48()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_1C1425558();
  if (v1 <= 0x3F)
  {
    result = sub_1C1425450();
    if (v2 <= 0x3F)
    {
      result = sub_1C14251B0();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

void sub_1C137BDF4(uint64_t a1@<X0>, uint64_t a2@<X2>, char *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, char a6@<W6>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint8_t *v36;
  void *v37;
  void *v38;
  void *v39;
  uint8_t *v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint8_t *v45;
  void *v46;
  uint8_t *v47;
  void *v48;
  id v49;
  char *v50;
  uint64_t v51;
  char *v52;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  unsigned int *v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t);
  char *v66;
  char *v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  id v94;

  v89 = a1;
  v91 = a2;
  v83 = a7;
  v73 = sub_1C14255C4();
  v72 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v74 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1C142584C();
  v84 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x1E0C80A78](v13);
  v75 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v69 - v17;
  MEMORY[0x1E0C80A78](v16);
  v85 = (char *)&v69 - v19;
  v20 = sub_1C14251B0();
  v80 = *(_QWORD *)(v20 - 8);
  v81 = v20;
  MEMORY[0x1E0C80A78](v20);
  v82 = (char *)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1C1425678();
  MEMORY[0x1E0C80A78](v22);
  v79 = (char *)&v69 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1C1425A08();
  MEMORY[0x1E0C80A78](v24);
  v78 = (uint64_t)&v69 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1C1425594();
  MEMORY[0x1E0C80A78](v26);
  v86 = (char *)&v69 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for ActivityState(0);
  MEMORY[0x1E0C80A78](v77);
  v29 = (uint64_t *)((char *)&v69 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  v90 = sub_1C1425978();
  v30 = *(_QWORD *)(v90 - 8);
  MEMORY[0x1E0C80A78](v90);
  v92 = (uint64_t)&v69 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = v18;
  v87 = v7;
  if ((a6 & 1) != 0)
  {
    if (qword_1ED793948 != -1)
      swift_once();
    v32 = sub_1C1426854();
    __swift_project_value_buffer(v32, (uint64_t)qword_1ED798598);
    swift_bridgeObjectRetain_n();
    v33 = sub_1C1426848();
    v34 = sub_1C1426C80();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = swift_slowAlloc();
      v70 = v29;
      v36 = (uint8_t *)v35;
      v37 = (void *)swift_slowAlloc();
      v71 = v13;
      v69 = a5;
      v38 = v37;
      v94 = v37;
      *(_DWORD *)v36 = 136446210;
      swift_bridgeObjectRetain();
      v93 = sub_1C132AD90(v91, (unint64_t)a3, (uint64_t *)&v94);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v33, v34, "Bypassing authorization UI options for %{public}s", v36, 0xCu);
      swift_arrayDestroy();
      v39 = v38;
      a5 = v69;
      v13 = v71;
      MEMORY[0x1C3BAD3F4](v39, -1, -1);
      v40 = v36;
      v29 = v70;
      MEMORY[0x1C3BAD3F4](v40, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v92, v89, v90);
  }
  else
  {
    if (qword_1ED793948 != -1)
      swift_once();
    v41 = sub_1C1426854();
    __swift_project_value_buffer(v41, (uint64_t)qword_1ED798598);
    swift_bridgeObjectRetain_n();
    v42 = sub_1C1426848();
    v43 = sub_1C1426C80();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = swift_slowAlloc();
      v71 = v30;
      v45 = (uint8_t *)v44;
      v46 = (void *)swift_slowAlloc();
      v94 = v46;
      v69 = a4;
      v70 = v29;
      *(_DWORD *)v45 = 136446210;
      swift_bridgeObjectRetain();
      v93 = sub_1C132AD90(v91, (unint64_t)a3, (uint64_t *)&v94);
      v29 = v70;
      a4 = v69;
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v42, v43, "Applying authorization UI options for %{public}s", v45, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v46, -1, -1);
      v47 = v45;
      v30 = v71;
      MEMORY[0x1C3BAD3F4](v47, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1C1339C78(a5, v92);
  }
  v48 = v88;
  sub_1C137B4B8(v92, v91, a3, a4, a5, (uint64_t)v29);
  if (!v48)
  {
    v59 = v29[1];
    v91 = *v29;
    v88 = (void *)v59;
    swift_bridgeObjectRetain();
    v60 = (uint64_t)v29;
    v61 = v92;
    sub_1C1425924();
    v87 = sub_1C142590C();
    v71 = v30;
    v85 = v62;
    sub_1C1338F24(a5, v78, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
    sub_1C1425948();
    swift_bridgeObjectRetain();
    sub_1C14258DC();
    sub_1C14258E8();
    (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v82, v60 + *(int *)(v77 + 28), v81);
    sub_1C1425480();
    sub_1C1339004(v60, type metadata accessor for ActivityState);
    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v61, v90);
    return;
  }
  v94 = v48;
  v49 = v48;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797BA0);
  v50 = v85;
  if (!swift_dynamicCast())
    goto LABEL_25;

  v51 = v84;
  v52 = v76;
  (*(void (**)(char *, char *, uint64_t))(v84 + 32))(v76, v50, v13);
  v53 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
  v54 = v75;
  v53(v75, v52, v13);
  v55 = (*(uint64_t (**)(char *, uint64_t))(v51 + 88))(v54, v13);
  if (v55 != *MEMORY[0x1E0C8FC78])
  {
    if (v55 == *MEMORY[0x1E0C8FC68])
    {
      v63 = (unsigned int *)MEMORY[0x1E0C8F8B8];
    }
    else
    {
      if (v55 != *MEMORY[0x1E0C8FC70])
      {
        v65 = *(void (**)(char *, uint64_t, uint64_t))(v72 + 104);
        if (v55 != *MEMORY[0x1E0C8FC60])
        {
          v65(v74, *MEMORY[0x1E0C8F8C8], v73);
          sub_1C1329AD0(&qword_1ED7932F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FC80], MEMORY[0x1E0C8FC88]);
          swift_allocError();
          v53(v67, v52, v13);
          sub_1C14255DC();
          sub_1C1329AD0((unint64_t *)&unk_1EF6DACB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F8E0], MEMORY[0x1E0C8F8E8]);
          swift_allocError();
          sub_1C14255D0();
          swift_willThrow();
          v68 = *(void (**)(char *, uint64_t))(v84 + 8);
          v68(v52, v13);
          (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v92, v90);
          v68(v54, v13);
          goto LABEL_26;
        }
        v64 = *MEMORY[0x1E0C8F8B0];
        goto LABEL_24;
      }
      v63 = (unsigned int *)MEMORY[0x1E0C8F8C0];
    }
    v64 = *v63;
    v65 = *(void (**)(char *, uint64_t, uint64_t))(v72 + 104);
LABEL_24:
    v65(v74, v64, v73);
    sub_1C1329AD0(&qword_1ED7932F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FC80], MEMORY[0x1E0C8FC88]);
    swift_allocError();
    v53(v66, v52, v13);
    sub_1C14255DC();
    sub_1C1329AD0((unint64_t *)&unk_1EF6DACB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F8E0], MEMORY[0x1E0C8F8E8]);
    swift_allocError();
    sub_1C14255D0();
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v52, v13);
LABEL_25:
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v92, v90);
    goto LABEL_26;
  }
  v56 = v84;
  (*(void (**)(char *, uint64_t))(v84 + 96))(v54, v13);
  swift_bridgeObjectRelease();
  v57 = (uint64_t)&v54[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6DB1E0) + 48)];
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t))(v72 + 104))(v74, *MEMORY[0x1E0C8F8B8], v73);
  sub_1C1329AD0(&qword_1ED7932F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FC80], MEMORY[0x1E0C8FC88]);
  swift_allocError();
  v53(v58, v52, v13);
  sub_1C14255DC();
  sub_1C1329AD0((unint64_t *)&unk_1EF6DACB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F8E0], MEMORY[0x1E0C8F8E8]);
  swift_allocError();
  sub_1C14255D0();
  swift_willThrow();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v52, v13);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v92, v90);
  sub_1C132C860(v57, &qword_1ED793BF0);
LABEL_26:

}

uint64_t sub_1C137C900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  dispatch_queue_t v29;
  _QWORD aBlock[6];

  v5 = v4;
  v24 = a3;
  v25 = a4;
  v27 = a1;
  v28 = a2;
  v6 = sub_1C1425450();
  v7 = *(_QWORD *)(v6 - 8);
  v23 = v6;
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C1425558();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = v5;
  v29 = *(dispatch_queue_t *)(v5 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v24, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v25, v6);
  v14 = (*(unsigned __int8 *)(v11 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v15 = (v12 + *(unsigned __int8 *)(v7 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v16 = (char *)swift_allocObject();
  v17 = v27;
  v18 = v28;
  *((_QWORD *)v16 + 2) = v5;
  *((_QWORD *)v16 + 3) = v17;
  *((_QWORD *)v16 + 4) = v18;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v16[v14], v13, v10);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v16[v15], v9, v23);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = sub_1C13816EC;
  *(_QWORD *)(v19 + 24) = v16;
  aBlock[4] = sub_1C13584CC;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C137B458;
  aBlock[3] = &block_descriptor_44;
  v20 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v29, v20);
  _Block_release(v20);
  LOBYTE(v20) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v20 & 1) != 0)
    __break(1u);
  return result;
}

void sub_1C137CB3C(_QWORD *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  _QWORD *v35;
  uint64_t v36;
  char *v37;
  void (*v38)(char *, uint64_t, uint64_t);
  unint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  os_unfair_lock_s *v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  Class v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  void (*v57)(uint64_t, uint64_t, uint64_t, os_log_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  os_log_t v64;
  uint64_t v65;
  Class v66;
  os_log_t v67;
  int v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  int v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  unint64_t v93;
  os_log_t v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(char *, NSObject *);
  NSObject *v98;
  uint64_t v99;
  void (*v100)(char *, uint64_t, uint64_t);
  _QWORD *v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  void (*v110)(char *, uint64_t, uint64_t);
  unint64_t v111;
  uint64_t v112;
  Class v113;
  char *v114;
  char *v115;
  uint64_t v116;
  char *v117;
  os_log_t v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  Class isa;
  NSObject *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;

  v112 = a5;
  v122 = a4;
  v111 = a3;
  v108 = sub_1C14251EC();
  v107 = *(_QWORD *)(v108 - 8);
  MEMORY[0x1E0C80A78](v108);
  v106 = (char *)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C1425558();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v109 = (char *)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v121 = (char *)&v99 - v12;
  v13 = sub_1C1425450();
  v123 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v117 = (char *)&v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1C14251B0();
  isa = v15[-1].isa;
  v127 = v15;
  v16 = MEMORY[0x1E0C80A78](v15);
  v125 = (char *)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v16);
  v124 = (char *)&v99 - v19;
  MEMORY[0x1E0C80A78](v18);
  v115 = (char *)&v99 - v20;
  v118 = (os_log_t)type metadata accessor for SlidingWindowExponentialBackoff();
  v113 = v118[-1].isa;
  v21 = MEMORY[0x1E0C80A78](v118);
  v116 = (uint64_t)&v99 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v119 = (char *)&v99 - v23;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793390);
  v25 = MEMORY[0x1E0C80A78](v24);
  v114 = (char *)&v99 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v120 = (uint64_t)&v99 - v27;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793530);
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v99 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for XPCInputParticipant.ActivityUpdate();
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v34 = (uint64_t *)((char *)&v99 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  v35 = a1;
  v36 = MEMORY[0x1C3BAD4B4](a1 + 13);
  swift_unknownObjectRelease();
  if (v36)
  {
    v37 = (char *)v34 + *(int *)(v31 + 20);
    v104 = v9;
    v38 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v39 = v111;
    v105 = v8;
    v110 = v38;
    v38(v37, v122, v8);
    v40 = (char *)v34 + *(int *)(v31 + 24);
    v41 = *(void (**)(char *, uint64_t, uint64_t))(v123 + 16);
    v42 = v112;
    v102 = v13;
    v100 = v41;
    v41(v40, v112, v13);
    swift_bridgeObjectRetain();
    sub_1C142518C();
    *v34 = a2;
    v34[1] = v39;
    v103 = v34;
    sub_1C1338F24((uint64_t)v34, (uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for XPCInputParticipant.ActivityUpdate);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v30, 0, 1, v31);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1C13B3C00((uint64_t)v30, a2, v39);
    swift_endAccess();
    v43 = __swift_project_boxed_opaque_existential_1(v35 + 15, v35[18]);
    v44 = *v43;
    v45 = *(os_unfair_lock_s **)(*(_QWORD *)(*v43 + 48) + 16);
    os_unfair_lock_lock(v45);
    v46 = *(_QWORD *)(v44 + 112);
    swift_bridgeObjectRetain();
    v47 = sub_1C1330FE4(a2, v39, v46);
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(v45);
    v48 = a2;
    v49 = v42;
    v50 = v113;
    if ((v47 & 1) != 0)
    {
      v51 = v120;
      (*((void (**)(uint64_t, uint64_t, uint64_t, os_log_t))v113 + 7))(v120, 1, 1, v118);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_1C13B3D9C(v51, v48, v39);
      swift_endAccess();
    }
    swift_beginAccess();
    v52 = v35[11];
    v53 = *(_QWORD *)(v52 + 16);
    v54 = (uint64_t)v114;
    v101 = v35;
    if (v53)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v55 = sub_1C13277A0(v48, v39);
      if ((v56 & 1) != 0)
      {
        sub_1C1338F24(*(_QWORD *)(v52 + 56) + *((_QWORD *)v50 + 9) * v55, v54, (uint64_t (*)(_QWORD))type metadata accessor for SlidingWindowExponentialBackoff);
        v57 = (void (*)(uint64_t, uint64_t, uint64_t, os_log_t))*((_QWORD *)v50 + 7);
        v58 = v54;
        v59 = 0;
      }
      else
      {
        v57 = (void (*)(uint64_t, uint64_t, uint64_t, os_log_t))*((_QWORD *)v50 + 7);
        v58 = v54;
        v59 = 1;
      }
      v66 = v50;
      v65 = v54;
      v67 = v118;
      v57(v58, v59, 1, v118);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v68 = (*((uint64_t (**)(uint64_t, uint64_t, os_log_t))v66 + 6))(v65, 1, v67);
      v64 = v67;
      v63 = v49;
      if (v68 != 1)
      {
        v69 = v119;
        sub_1C1339140(v65, (uint64_t)v119, (uint64_t (*)(_QWORD))type metadata accessor for SlidingWindowExponentialBackoff);
        goto LABEL_17;
      }
    }
    else
    {
      v63 = v49;
      v57 = (void (*)(uint64_t, uint64_t, uint64_t, os_log_t))*((_QWORD *)v50 + 7);
      v64 = v118;
      v57((uint64_t)v114, 1, 1, v118);
      v65 = v54;
    }
    v69 = v119;
    *(_QWORD *)v119 = 0;
    sub_1C142518C();
    sub_1C1425108();
    sub_1C132C860(v65, &qword_1ED793390);
LABEL_17:
    v70 = v115;
    sub_1C142518C();
    (*((void (**)(char *, char *, NSObject *))isa + 5))(&v69[SLODWORD(v64[3].isa)], v70, v127);
    v71 = v120;
    sub_1C1338F24((uint64_t)v69, v120, (uint64_t (*)(_QWORD))type metadata accessor for SlidingWindowExponentialBackoff);
    v57(v71, 0, 1, v64);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v120 = v48;
    sub_1C13B3D9C(v71, v48, v39);
    swift_endAccess();
    sub_1C142518C();
    v72 = v116;
    sub_1C1338F24((uint64_t)v69, v116, (uint64_t (*)(_QWORD))type metadata accessor for SlidingWindowExponentialBackoff);
    sub_1C142512C();
    sub_1C1339004(v72, (uint64_t (*)(_QWORD))type metadata accessor for SlidingWindowExponentialBackoff);
    sub_1C1425120();
    v74 = v73;
    if (qword_1ED793948 != -1)
      swift_once();
    v75 = sub_1C1426854();
    __swift_project_value_buffer(v75, (uint64_t)qword_1ED798598);
    v76 = v117;
    v77 = v102;
    v100(v117, v63, v102);
    v78 = v121;
    v79 = v105;
    v110(v121, v122, v105);
    swift_bridgeObjectRetain_n();
    v80 = sub_1C1426848();
    v81 = sub_1C1426C80();
    v82 = v81;
    if (os_log_type_enabled(v80, v81))
    {
      v83 = swift_slowAlloc();
      v122 = swift_slowAlloc();
      v129 = v122;
      *(_DWORD *)v83 = 136447235;
      v118 = v80;
      swift_bridgeObjectRetain();
      v130 = sub_1C132AD90(v120, v39, &v129);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v83 + 12) = 2082;
      v84 = v106;
      sub_1C1425420();
      sub_1C1329AD0(&qword_1ED792880, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v85 = v77;
      v86 = v108;
      v87 = sub_1C1427058();
      LODWORD(v120) = v82;
      v88 = v76;
      v90 = v89;
      (*(void (**)(char *, uint64_t))(v107 + 8))(v84, v86);
      v130 = sub_1C132AD90(v87, v90, &v129);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v123 + 8))(v88, v85);
      *(_WORD *)(v83 + 22) = 2081;
      v91 = v121;
      v110(v109, (uint64_t)v121, v79);
      v92 = sub_1C1426AA0();
      v130 = sub_1C132AD90(v92, v93, &v129);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v104 + 8))(v91, v79);
      *(_WORD *)(v83 + 32) = 2050;
      v130 = v74;
      v69 = v119;
      sub_1C1426DB8();
      *(_WORD *)(v83 + 42) = 2050;
      swift_beginAccess();
      v128 = *(_QWORD *)v69;
      sub_1C1426DB8();
      v94 = v118;
      _os_log_impl(&dword_1C1324000, v118, (os_log_type_t)v120, "Pending activity update for %{public}s with payload %{public}s for XPC participant content source %{private}s; w"
        "ill publish in %{public}fs; backoff is %{public}f",
        (uint8_t *)v83,
        0x34u);
      v95 = v122;
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v95, -1, -1);
      MEMORY[0x1C3BAD3F4](v83, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v123 + 8))(v76, v77);
      (*(void (**)(char *, uint64_t))(v104 + 8))(v78, v79);

    }
    v96 = (uint64_t)v103;
    sub_1C137D6E0();
    v97 = (void (*)(char *, NSObject *))*((_QWORD *)isa + 1);
    v98 = v127;
    v97(v125, v127);
    v97(v124, v98);
    sub_1C1339004(v96, (uint64_t (*)(_QWORD))type metadata accessor for XPCInputParticipant.ActivityUpdate);
    sub_1C1339004((uint64_t)v69, (uint64_t (*)(_QWORD))type metadata accessor for SlidingWindowExponentialBackoff);
    return;
  }
  if (qword_1ED793948 != -1)
    swift_once();
  v60 = sub_1C1426854();
  __swift_project_value_buffer(v60, (uint64_t)qword_1ED798598);
  v127 = sub_1C1426848();
  v61 = sub_1C1426C68();
  if (os_log_type_enabled(v127, v61))
  {
    v62 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v62 = 0;
    _os_log_impl(&dword_1C1324000, v127, v61, "XPCInputParticipant has no ActivityManager", v62, 2u);
    MEMORY[0x1C3BAD3F4](v62, -1, -1);
  }

}

uint64_t sub_1C137D6E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  id v25;
  char v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  unint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  int64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  char v85;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t (*v91)();
  void (*v92)(_QWORD *);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  _QWORD *v124;
  uint64_t *v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD v132[4];
  _QWORD aBlock[6];

  v109 = sub_1C1426950();
  v108 = *(_QWORD *)(v109 - 8);
  MEMORY[0x1E0C80A78](v109);
  v107 = (char *)&v104 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = sub_1C14269B0();
  v105 = *(_QWORD *)(v106 - 8);
  MEMORY[0x1E0C80A78](v106);
  v104 = (char *)&v104 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793530);
  v4 = MEMORY[0x1E0C80A78](v3);
  v114 = (uint64_t)&v104 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v115 = (char *)&v104 - v6;
  v7 = type metadata accessor for XPCInputParticipant.ActivityUpdate();
  v129 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v118 = (uint64_t)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v117 = (uint64_t)&v104 - v10;
  v127 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793580);
  v11 = MEMORY[0x1E0C80A78](v127);
  v126 = (uint64_t *)((char *)&v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = MEMORY[0x1E0C80A78](v11);
  v125 = (uint64_t *)((char *)&v104 - v14);
  v15 = MEMORY[0x1E0C80A78](v13);
  v124 = (char **)((char *)&v104 - v16);
  MEMORY[0x1E0C80A78](v15);
  v123 = (char *)&v104 - v17;
  v113 = sub_1C14251B0();
  v112 = *(_QWORD *)(v113 - 8);
  MEMORY[0x1E0C80A78](v113);
  v19 = (char *)&v104 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1C14269F8();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char **)((char *)&v104 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = *(void **)(v0 + 16);
  *v23 = v24;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v21 + 104))(v23, *MEMORY[0x1E0DEF740], v20);
  v25 = v24;
  v26 = sub_1C1426A10();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v21 + 8))(v23, v20);
  if ((v26 & 1) == 0)
  {
LABEL_64:
    __break(1u);
    return result;
  }
  sub_1C142518C();
  v28 = swift_beginAccess();
  v116 = v0;
  v29 = *(_QWORD *)(v0 + 88);
  MEMORY[0x1E0C80A78](v28);
  *(&v104 - 2) = v19;
  swift_bridgeObjectRetain();
  v30 = sub_1C136CF3C((uint64_t)sub_1C138155C, (uint64_t)(&v104 - 4), v29);
  swift_bridgeObjectRelease();
  v31 = *(_QWORD *)(v30 + 16);
  v111 = v19;
  v128 = v7;
  if (v31)
  {
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    sub_1C1336990(0, v31, 0);
    result = sub_1C135833C(v30);
    if ((result & 0x8000000000000000) == 0)
    {
      v33 = result;
      if (result < 1 << *(_BYTE *)(v30 + 32))
      {
        v34 = 0;
        v35 = v30 + 64;
        v110 = v30 + 80;
        v122 = v30;
        v119 = v31;
        v120 = v32;
        v121 = v30 + 64;
        do
        {
          v36 = v33 >> 6;
          if ((*(_QWORD *)(v35 + 8 * (v33 >> 6)) & (1 << v33)) == 0)
          {
            __break(1u);
LABEL_59:
            __break(1u);
LABEL_60:
            __break(1u);
LABEL_61:
            __break(1u);
            break;
          }
          if (*(_DWORD *)(v30 + 36) != (_DWORD)v32)
            goto LABEL_59;
          v130 = v34;
          v131 = 1 << v33;
          v37 = v127;
          v38 = v123;
          v39 = (uint64_t)&v123[*(int *)(v127 + 48)];
          v40 = *(_QWORD *)(v30 + 56);
          v41 = (uint64_t *)(*(_QWORD *)(v30 + 48) + 16 * v33);
          v43 = *v41;
          v42 = v41[1];
          v44 = type metadata accessor for SlidingWindowExponentialBackoff();
          sub_1C1338F24(v40 + *(_QWORD *)(*(_QWORD *)(v44 - 8) + 72) * v33, v39, (uint64_t (*)(_QWORD))type metadata accessor for SlidingWindowExponentialBackoff);
          *v38 = v43;
          v38[1] = v42;
          v45 = (uint64_t)v124;
          *v124 = v43;
          *(_QWORD *)(v45 + 8) = v42;
          sub_1C1338F24(v39, v45 + *(int *)(v37 + 48), (uint64_t (*)(_QWORD))type metadata accessor for SlidingWindowExponentialBackoff);
          v46 = v125;
          sub_1C132A724(v45, (uint64_t)v125, (uint64_t *)&unk_1ED793580);
          swift_bridgeObjectRetain_n();
          sub_1C132C860((uint64_t)v38, (uint64_t *)&unk_1ED793580);
          v47 = *(int *)(v37 + 48);
          v48 = v126;
          v49 = (uint64_t)v126 + v47;
          v51 = *v46;
          v50 = v46[1];
          *v126 = *v46;
          v48[1] = v50;
          sub_1C1338F24((uint64_t)v46 + v47, (uint64_t)v48 + v47, (uint64_t (*)(_QWORD))type metadata accessor for SlidingWindowExponentialBackoff);
          swift_bridgeObjectRetain();
          sub_1C1339004(v49, (uint64_t (*)(_QWORD))type metadata accessor for SlidingWindowExponentialBackoff);
          sub_1C132C860((uint64_t)v46, (uint64_t *)&unk_1ED793580);
          v52 = (_QWORD *)aBlock[0];
          result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            result = sub_1C1336990(0, v52[2] + 1, 1);
            v52 = (_QWORD *)aBlock[0];
          }
          v54 = v52[2];
          v53 = v52[3];
          if (v54 >= v53 >> 1)
          {
            result = sub_1C1336990(v53 > 1, v54 + 1, 1);
            v52 = (_QWORD *)aBlock[0];
          }
          v52[2] = v54 + 1;
          v55 = &v52[2 * v54];
          v55[4] = v51;
          v55[5] = v50;
          v30 = v122;
          v56 = 1 << *(_BYTE *)(v122 + 32);
          if ((uint64_t)v33 >= v56)
            goto LABEL_60;
          v35 = v121;
          v57 = *(_QWORD *)(v121 + 8 * v36);
          if ((v57 & v131) == 0)
            goto LABEL_61;
          LODWORD(v32) = v120;
          if (*(_DWORD *)(v122 + 36) != (_DWORD)v120)
            goto LABEL_63;
          v58 = v57 & (-2 << (v33 & 0x3F));
          if (v58)
          {
            v33 = __clz(__rbit64(v58)) | v33 & 0xFFFFFFFFFFFFFFC0;
            v7 = v128;
            v59 = v119;
            goto LABEL_24;
          }
          v60 = v36 + 1;
          v61 = (unint64_t)(v56 + 63) >> 6;
          v7 = v128;
          v59 = v119;
          if (v36 + 1 < v61)
          {
            v62 = *(_QWORD *)(v121 + 8 * v60);
            if (v62)
            {
LABEL_22:
              v33 = __clz(__rbit64(v62)) + (v60 << 6);
              goto LABEL_24;
            }
            while (v61 - 2 != v36)
            {
              v62 = *(_QWORD *)(v110 + 8 * v36++);
              if (v62)
              {
                v60 = v36 + 1;
                goto LABEL_22;
              }
            }
          }
          v33 = 1 << *(_BYTE *)(v122 + 32);
LABEL_24:
          v34 = v130 + 1;
          if (v130 + 1 == v59)
          {
            swift_release();
            goto LABEL_30;
          }
        }
        while ((v33 & 0x8000000000000000) == 0 && (uint64_t)v33 < v56);
      }
    }
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  swift_release();
  v52 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_30:
  v63 = v52[2];
  v64 = (uint64_t)v115;
  if (v63)
  {
    v65 = (uint64_t *)(v116 + 80);
    swift_beginAccess();
    v127 = MEMORY[0x1E0DEE9D8];
    v66 = v52 + 5;
    v131 = (uint64_t)v52;
    while (1)
    {
      v67 = *v65;
      if (*(_QWORD *)(*v65 + 16))
      {
        v68 = v65;
        v69 = *(v66 - 1);
        v70 = *v66;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        v130 = v69;
        v71 = sub_1C13277A0(v69, v70);
        v73 = v129;
        if ((v72 & 1) != 0)
        {
          sub_1C1338F24(*(_QWORD *)(v67 + 56) + *(_QWORD *)(v129 + 72) * v71, v64, (uint64_t (*)(_QWORD))type metadata accessor for XPCInputParticipant.ActivityUpdate);
          v74 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v73 + 56);
          v74(v64, 0, 1, v7);
        }
        else
        {
          v74 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v129 + 56);
          v74(v64, 1, 1, v7);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v64, 1, v7) != 1)
        {
          v75 = v117;
          sub_1C1339140(v64, v117, (uint64_t (*)(_QWORD))type metadata accessor for XPCInputParticipant.ActivityUpdate);
          sub_1C1338F24(v75, v118, (uint64_t (*)(_QWORD))type metadata accessor for XPCInputParticipant.ActivityUpdate);
          v76 = v127;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v76 = sub_1C136C894(0, *(_QWORD *)(v76 + 16) + 1, 1, v76);
          v77 = v129;
          v79 = *(_QWORD *)(v76 + 16);
          v78 = *(_QWORD *)(v76 + 24);
          if (v79 >= v78 >> 1)
            v76 = sub_1C136C894(v78 > 1, v79 + 1, 1, v76);
          *(_QWORD *)(v76 + 16) = v79 + 1;
          v80 = (*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
          v127 = v76;
          v81 = *(_QWORD *)(v77 + 72);
          sub_1C1339140(v118, v76 + v80 + v81 * v79, (uint64_t (*)(_QWORD))type metadata accessor for XPCInputParticipant.ActivityUpdate);
          v65 = v68;
          swift_beginAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v82 = v130;
          v83 = sub_1C13277A0(v130, v70);
          v85 = v84;
          swift_bridgeObjectRelease();
          if ((v85 & 1) != 0)
          {
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v87 = *v65;
            v132[0] = *v65;
            *v65 = 0x8000000000000000;
            if (!isUniquelyReferenced_nonNull_native)
            {
              sub_1C13BB7F4();
              v87 = v132[0];
            }
            swift_bridgeObjectRelease();
            v88 = *(_QWORD *)(v87 + 56) + v83 * v81;
            v89 = v114;
            sub_1C1339140(v88, v114, (uint64_t (*)(_QWORD))type metadata accessor for XPCInputParticipant.ActivityUpdate);
            sub_1C13C1548(v83, v87);
            *v65 = v87;
            swift_bridgeObjectRelease();
            v90 = 0;
          }
          else
          {
            v90 = 1;
            v89 = v114;
          }
          v7 = v128;
          v74(v89, v90, 1, v128);
          swift_bridgeObjectRelease();
          sub_1C132C860(v89, &qword_1ED793530);
          swift_endAccess();
          v91 = sub_1C137B478();
          v92 = sub_1C137FAA4(v132, v82, v70);
          v94 = v93;
          v95 = type metadata accessor for SlidingWindowExponentialBackoff();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 48))(v94, 1, v95))
            sub_1C141A9A8();
          ((void (*)(_QWORD *, _QWORD))v92)(v132, 0);
          swift_bridgeObjectRelease();
          ((void (*)(_QWORD *, _QWORD))v91)(aBlock, 0);
          sub_1C1339004(v117, (uint64_t (*)(_QWORD))type metadata accessor for XPCInputParticipant.ActivityUpdate);
          v64 = (uint64_t)v115;
          goto LABEL_34;
        }
        swift_bridgeObjectRelease();
        v65 = v68;
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v129 + 56))(v64, 1, 1, v7);
      }
      sub_1C132C860(v64, &qword_1ED793530);
LABEL_34:
      v66 += 2;
      if (!--v63)
        goto LABEL_54;
    }
  }
  v127 = MEMORY[0x1E0DEE9D8];
LABEL_54:
  swift_bridgeObjectRelease();
  v96 = v127;
  if (*(_QWORD *)(v127 + 16))
  {
    v97 = swift_allocObject();
    v98 = v116;
    *(_QWORD *)(v97 + 16) = v96;
    *(_QWORD *)(v97 + 24) = v98;
    aBlock[4] = sub_1C13815D8;
    aBlock[5] = v97;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C13A7F4C;
    aBlock[3] = &block_descriptor_32;
    v99 = _Block_copy(aBlock);
    swift_retain();
    v100 = v104;
    sub_1C1426974();
    v132[0] = MEMORY[0x1E0DEE9D8];
    sub_1C1329AD0((unint64_t *)&qword_1ED7979D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A50);
    sub_1C1331180();
    v101 = v107;
    v102 = v109;
    sub_1C1426DF4();
    MEMORY[0x1C3BAC9D4](0, v100, v101, v99);
    _Block_release(v99);
    v103 = v111;
    (*(void (**)(char *, uint64_t))(v108 + 8))(v101, v102);
    (*(void (**)(char *, uint64_t))(v105 + 8))(v100, v106);
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    v103 = v111;
  }
  sub_1C137F3D4();
  return (*(uint64_t (**)(char *, uint64_t))(v112 + 8))(v103, v113);
}

void sub_1C137E350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unint64_t *v26;
  __int128 v27;
  uint64_t v28;
  int *v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  uint64_t v46;
  os_log_type_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  NSObject *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t);
  char *v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t);
  uint64_t v81;
  NSObject *v82;
  os_log_type_t v83;
  uint8_t *v84;
  _QWORD v85[2];
  __int128 v86;
  uint64_t v87;
  __int128 v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  NSObject *v100;
  _QWORD *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114[2];

  v106 = a3;
  v97 = a2;
  v105 = type metadata accessor for ActivityParticipantEvent(0);
  MEMORY[0x1E0C80A78](v105);
  v8 = (_QWORD *)((char *)v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v91 = sub_1C14251EC();
  v90 = *(_QWORD *)(v91 - 8);
  MEMORY[0x1E0C80A78](v91);
  v89 = (char *)v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = sub_1C1425558();
  v10 = *(_QWORD *)(v113 - 8);
  v11 = MEMORY[0x1E0C80A78](v113);
  v96 = (char *)v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v95 = (char *)v85 - v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v85 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791E48);
  MEMORY[0x1E0C80A78](v17);
  v104 = (uint64_t)v85 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1C1425450();
  v109 = *(_QWORD *)(v19 - 8);
  v110 = v19;
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)v85 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)v85 - v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793388);
  v107 = v4;
  sub_1C1426CEC();
  v108 = v114[0];
  if (v114[0])
  {
    v25 = *(_QWORD *)(a1 + 16);
    if (v25)
    {
      v99 = v16;
      v102 = v24;
      v94 = v22;
      v101 = v8 + 2;
      swift_bridgeObjectRetain();
      v85[1] = a1;
      v26 = (unint64_t *)(a1 + 40);
      *(_QWORD *)&v27 = 136446467;
      v88 = v27;
      v87 = MEMORY[0x1E0DEE9B8] + 8;
      *(_QWORD *)&v27 = 136446723;
      v86 = v27;
      v28 = v97;
      v103 = a4;
      v93 = v10;
      do
      {
        v34 = *(v26 - 1);
        v35 = *v26;
        v111 = v25;
        v112 = v34;
        v36 = v104;
        sub_1C132C344(a4, v104, &qword_1ED791E48);
        v37 = v109;
        v38 = v110;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v109 + 48))(v36, 1, v110) == 1)
        {
          swift_bridgeObjectRetain();
          sub_1C132C860(v36, &qword_1ED791E48);
          if (qword_1ED793948 != -1)
            swift_once();
          v39 = sub_1C1426854();
          __swift_project_value_buffer(v39, (uint64_t)qword_1ED798598);
          v40 = *(NSObject **)(v10 + 16);
          v41 = v96;
          v42 = v28;
          v43 = v28;
          v44 = v113;
          ((void (*)(char *, uint64_t, uint64_t))v40)(v96, v43, v113);
          swift_bridgeObjectRetain_n();
          v45 = sub_1C1426848();
          v46 = v10;
          v47 = sub_1C1426C80();
          v100 = v45;
          if (os_log_type_enabled(v45, v47))
          {
            v48 = v41;
            v49 = swift_slowAlloc();
            v98 = swift_slowAlloc();
            v114[0] = v98;
            *(_DWORD *)v49 = v88;
            swift_bridgeObjectRetain();
            *(_QWORD *)(v49 + 4) = sub_1C132AD90(v112, v35, v114);
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v49 + 12) = 2081;
            v50 = v46;
            ((void (*)(char *, char *, uint64_t))v40)(v95, v48, v44);
            v51 = sub_1C1426AA0();
            *(_QWORD *)(v49 + 14) = sub_1C132AD90(v51, v52, v114);
            v53 = v97;
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v50 + 8))(v48, v44);
            v54 = v100;
            _os_log_impl(&dword_1C1324000, v100, v47, "Ending activity %{public}s for XPC participant content source %{private}s", (uint8_t *)v49, 0x16u);
            v55 = v98;
            swift_arrayDestroy();
            v42 = v53;
            MEMORY[0x1C3BAD3F4](v55, -1, -1);
            MEMORY[0x1C3BAD3F4](v49, -1, -1);

            v10 = v93;
          }
          else
          {
            swift_bridgeObjectRelease_n();
            (*(void (**)(char *, uint64_t))(v46 + 8))(v41, v44);

            v10 = v46;
          }
          a4 = v103;
        }
        else
        {
          v56 = v102;
          (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v102, v36, v38);
          v57 = qword_1ED793948;
          swift_bridgeObjectRetain();
          v58 = v57 == -1;
          v59 = v38;
          if (!v58)
            swift_once();
          v60 = sub_1C1426854();
          __swift_project_value_buffer(v60, (uint64_t)qword_1ED798598);
          v61 = v94;
          (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v94, v56, v59);
          v40 = *(NSObject **)(v10 + 16);
          v62 = v99;
          ((void (*)(char *, uint64_t, uint64_t))v40)(v99, v28, v113);
          swift_bridgeObjectRetain_n();
          v63 = v10;
          v64 = sub_1C1426848();
          v65 = sub_1C1426C80();
          LODWORD(v98) = v65;
          if (os_log_type_enabled(v64, v65))
          {
            v66 = swift_slowAlloc();
            v92 = swift_slowAlloc();
            v114[0] = v92;
            *(_DWORD *)v66 = v86;
            swift_bridgeObjectRetain();
            *(_QWORD *)(v66 + 4) = sub_1C132AD90(v112, v35, v114);
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v66 + 12) = 2082;
            v67 = v89;
            sub_1C1425420();
            sub_1C1329AD0(&qword_1ED792880, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
            v68 = v91;
            v69 = sub_1C1427058();
            v100 = v40;
            v71 = v70;
            (*(void (**)(char *, uint64_t))(v90 + 8))(v67, v68);
            *(_QWORD *)(v66 + 14) = sub_1C132AD90(v69, v71, v114);
            swift_bridgeObjectRelease();
            v72 = v110;
            v73 = *(void (**)(char *, uint64_t))(v109 + 8);
            v73(v61, v110);
            *(_WORD *)(v66 + 22) = 2081;
            v74 = v99;
            ((void (*)(char *, char *, uint64_t))v100)(v95, v99, v113);
            v75 = sub_1C1426AA0();
            *(_QWORD *)(v66 + 24) = sub_1C132AD90(v75, v76, v114);
            swift_bridgeObjectRelease();
            v77 = v93;
            (*(void (**)(char *, uint64_t))(v93 + 8))(v74, v113);
            _os_log_impl(&dword_1C1324000, v64, (os_log_type_t)v98, "Ending activity %{public}s with payload %{public}s for XPC participant content source %{private}s", (uint8_t *)v66, 0x20u);
            v78 = v92;
            swift_arrayDestroy();
            MEMORY[0x1C3BAD3F4](v78, -1, -1);
            MEMORY[0x1C3BAD3F4](v66, -1, -1);

            v73(v102, v72);
            v40 = v100;
            v42 = v97;
            a4 = v103;
            v10 = v77;
          }
          else
          {

            (*(void (**)(char *, uint64_t))(v63 + 8))(v62, v113);
            v79 = v110;
            v80 = *(void (**)(char *, uint64_t))(v109 + 8);
            v80(v61, v110);
            swift_bridgeObjectRelease_n();
            v80(v102, v79);
            a4 = v103;
            v10 = v63;
            v42 = v28;
          }
        }
        v26 += 2;
        v29 = (int *)v105;
        v30 = (char *)v8 + *(int *)(v105 + 24);
        v31 = sub_1C142557C();
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v30, v106, v31);
        type metadata accessor for ActivityParticipantEvent.EventType(0);
        swift_storeEnumTagMultiPayload();
        v28 = v42;
        ((void (*)(char *, uint64_t, uint64_t))v40)((char *)v8 + v29[7], v42, v113);
        sub_1C132C344(a4, (uint64_t)v8 + v29[9], &qword_1ED791E48);
        *v8 = v112;
        v8[1] = v35;
        v32 = v101;
        *v101 = 0;
        v32[1] = 0;
        v33 = (_QWORD *)((char *)v8 + v29[8]);
        *v33 = v107;
        v33[1] = &off_1E7A8B440;
        *((_BYTE *)v8 + v29[10]) = 0;
        swift_retain();
        sub_1C13D0788((uint64_t)v8);
        sub_1C1339004((uint64_t)v8, type metadata accessor for ActivityParticipantEvent);
        v25 = v111 - 1;
      }
      while (v111 != 1);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    if (qword_1ED793948 != -1)
      swift_once();
    v81 = sub_1C1426854();
    __swift_project_value_buffer(v81, (uint64_t)qword_1ED798598);
    v82 = sub_1C1426848();
    v83 = sub_1C1426C68();
    if (os_log_type_enabled(v82, v83))
    {
      v84 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v84 = 0;
      _os_log_impl(&dword_1C1324000, v82, v83, "XPCInputParticipant has no ActivityManager", v84, 2u);
      MEMORY[0x1C3BAD3F4](v84, -1, -1);
    }

  }
}

uint64_t sub_1C137ECE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  NSObject *v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  uint64_t result;
  _QWORD v11[6];

  v3 = v2;
  v6 = *(NSObject **)(v3 + 16);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = v3;
  v7[3] = a1;
  v7[4] = a2;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_1C137F8C4;
  *(_QWORD *)(v8 + 24) = v7;
  v11[4] = sub_1C1327D54;
  v11[5] = v8;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1C137B458;
  v11[3] = &block_descriptor_6;
  v9 = _Block_copy(v11);
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v9);
  swift_unknownObjectRelease();
  _Block_release(v9);
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((a1 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1C137EE34()
{
  return 0;
}

uint64_t sub_1C137EE3C(uint64_t *a1, uint64_t a2)
{
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  NSObject *v14;
  unint64_t v15;
  uint64_t v16;
  NSObject *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char v22;
  uint64_t aBlock;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  void *v26;
  uint64_t (*v27)();
  char *v28;

  v5 = type metadata accessor for ActivityManagerEvent(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = type metadata accessor for Activity();
  if (!*(uint64_t *)((char *)a1 + *(int *)(result + 40) + 8))
  {
    if (*((_BYTE *)a1 + *(int *)(v5 + 20)) != 3)
    {
      if (*((_BYTE *)a1 + *(int *)(v5 + 20)))
        return result;
      v10 = *a1;
      v11 = a1[1];
      v12 = *(os_unfair_lock_s **)(*(_QWORD *)(a2 + 16) + 16);
      os_unfair_lock_lock(v12);
      v13 = swift_retain();
      sub_1C13730EC(v13, v10, v11, a2);
      swift_release();
      os_unfair_lock_unlock(v12);
      v14 = *(NSObject **)(isEscapingClosureAtFileLocation + 16);
      sub_1C1338F24((uint64_t)a1, (uint64_t)&aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ActivityManagerEvent);
      v15 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      v16 = swift_allocObject();
      *(_QWORD *)(v16 + 16) = isEscapingClosureAtFileLocation;
      sub_1C1339140((uint64_t)v8, v16 + v15, type metadata accessor for ActivityManagerEvent);
      v8 = (char *)swift_allocObject();
      *((_QWORD *)v8 + 2) = sub_1C1380E7C;
      *((_QWORD *)v8 + 3) = v16;
      v27 = sub_1C13584CC;
      v28 = v8;
      aBlock = MEMORY[0x1E0C809B0];
      v24 = 1107296256;
      v25 = sub_1C137B458;
      v26 = &block_descriptor_23_0;
      a1 = (uint64_t *)_Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      dispatch_sync(v14, a1);
      _Block_release(a1);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      result = swift_release();
      if ((isEscapingClosureAtFileLocation & 1) == 0)
        return result;
      __break(1u);
    }
    v17 = *(NSObject **)(isEscapingClosureAtFileLocation + 16);
    sub_1C1338F24((uint64_t)a1, (uint64_t)v8, type metadata accessor for ActivityManagerEvent);
    v18 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = isEscapingClosureAtFileLocation;
    sub_1C1339140((uint64_t)v8, v19 + v18, type metadata accessor for ActivityManagerEvent);
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = sub_1C137F8EC;
    *(_QWORD *)(v20 + 24) = v19;
    v27 = sub_1C13584CC;
    v28 = (char *)v20;
    aBlock = MEMORY[0x1E0C809B0];
    v24 = 1107296256;
    v25 = sub_1C137B458;
    v26 = &block_descriptor_13_0;
    v21 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v17, v21);
    _Block_release(v21);
    v22 = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = swift_release();
    if ((v22 & 1) != 0)
      __break(1u);
  }
  return result;
}

uint64_t sub_1C137F174(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793390);
  MEMORY[0x1E0C80A78](v3);
  v5 = (uint64_t *)((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *a2;
  v6 = a2[1];
  *v5 = 0;
  v8 = type metadata accessor for SlidingWindowExponentialBackoff();
  swift_bridgeObjectRetain();
  sub_1C142518C();
  sub_1C1425108();
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 0, 1, v8);
  swift_beginAccess();
  sub_1C13B3D9C((uint64_t)v5, v7, v6);
  return swift_endAccess();
}

uint64_t sub_1C137F268(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793390);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793530);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a2;
  v10 = a2[1];
  v11 = type metadata accessor for XPCInputParticipant.ActivityUpdate();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C13B3C00((uint64_t)v8, v9, v10);
  swift_endAccess();
  v12 = type metadata accessor for SlidingWindowExponentialBackoff();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v5, 1, 1, v12);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C13B3D9C((uint64_t)v5, v9, v10);
  swift_endAccess();
  return sub_1C137F3D4();
}

uint64_t sub_1C137F3D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  char *v37;
  char v38;
  void (*v39)(char *, uint64_t);
  char *v40;
  _QWORD v41[3];
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  void (*v50)(char *, unint64_t, uint64_t);

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B60);
  MEMORY[0x1E0C80A78](v2);
  v49 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C14251B0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v42 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v48 = (char *)v41 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v47 = (char *)v41 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v41 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)v41 - v16;
  MEMORY[0x1E0C80A78](v15);
  v45 = (char *)v41 - v18;
  v19 = sub_1C14269F8();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (_QWORD *)((char *)v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = *(void **)(v1 + 16);
  *v22 = v23;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v20 + 104))(v22, *MEMORY[0x1E0DEF740], v19);
  v41[1] = v23;
  LOBYTE(v23) = sub_1C1426A10();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v20 + 8))(v22, v19);
  if ((v23 & 1) != 0)
  {
    v44 = v14;
    swift_retain();
    sub_1C14259C0();
    swift_release();
    swift_beginAccess();
    swift_retain();
    v25 = swift_bridgeObjectRetain();
    v26 = sub_1C1380ED8(v25, v1);
    swift_bridgeObjectRelease();
    v41[2] = v1;
    swift_release();
    sub_1C1425114();
    v27 = *(_QWORD *)(v26 + 16);
    v43 = v26;
    if (v27)
    {
      v28 = v26 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
      v46 = *(_QWORD *)(v5 + 72);
      v50 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      swift_bridgeObjectRetain();
      v30 = v48;
      v29 = v49;
      v31 = v47;
      while (1)
      {
        v50(v29, v28, v4);
        v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
        v32(v29, 0, 1, v4);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v29, 1, v4) == 1)
          break;
        v33 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
        v33(v31, v29, v4);
        sub_1C1329AD0((unint64_t *)&qword_1ED7935D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
        if ((sub_1C1426A58() & 1) != 0)
          v34 = v31;
        else
          v34 = v17;
        v50(v30, (unint64_t)v34, v4);
        v35 = *(void (**)(char *, uint64_t))(v5 + 8);
        v35(v17, v4);
        v33(v17, v30, v4);
        v35(v31, v4);
        v29 = v49;
        v28 += v46;
        if (!--v27)
          goto LABEL_11;
      }
    }
    else
    {
      v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      swift_bridgeObjectRetain();
      v29 = v49;
LABEL_11:
      v32(v29, 1, 1, v4);
    }
    swift_bridgeObjectRelease();
    v36 = v45;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v45, v17, v4);
    swift_bridgeObjectRelease();
    v37 = v44;
    sub_1C1425114();
    v38 = sub_1C1425150();
    v39 = *(void (**)(char *, uint64_t))(v5 + 8);
    v39(v37, v4);
    if ((v38 & 1) != 0)
    {
      v40 = v42;
      sub_1C142518C();
      if ((sub_1C1425144() & 1) != 0)
      {
        swift_retain();
        sub_1C1425120();
        swift_allocObject();
        swift_weakInit();
        swift_retain();
        sub_1C14259B4();
        swift_release();
        swift_release();
        v39(v40, v4);
        v39(v36, v4);
        return swift_release();
      }
      sub_1C137D6E0();
      v39(v40, v4);
    }
    return ((uint64_t (*)(char *, uint64_t))v39)(v36, v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C137F8AC()
{
  return objectdestroyTm_1((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1C137F8C4()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + 112) = *(_QWORD *)(v0 + 32);
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1C137F8D8()
{
  return swift_deallocObject();
}

uint64_t sub_1C137F8EC()
{
  return sub_1C1380E88((uint64_t (*)(_QWORD, uint64_t))sub_1C137F268);
}

uint64_t sub_1C137F8F8()
{
  return swift_deallocObject();
}

uint64_t sub_1C137F908()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C137D6E0();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C137F95C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v4 = sub_1C14251B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793580);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *a1;
  v13 = a1[1];
  *v11 = v12;
  v11[1] = v13;
  sub_1C1338F24(a2, (uint64_t)v11 + *(int *)(v9 + 48), (uint64_t (*)(_QWORD))type metadata accessor for SlidingWindowExponentialBackoff);
  type metadata accessor for SlidingWindowExponentialBackoff();
  swift_bridgeObjectRetain();
  sub_1C142512C();
  LOBYTE(a2) = sub_1C1425150();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1C132C860((uint64_t)v11, (uint64_t *)&unk_1ED793580);
  return a2 & 1;
}

void (*sub_1C137FAA4(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_1C1380814(v6, a2, a3);
  return sub_1C137FB10;
}

void sub_1C137FB10(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t sub_1C137FB48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[2];
  __int128 v51;
  uint64_t *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  os_log_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73[2];

  v4 = sub_1C1425558();
  v60 = *(_QWORD *)(v4 - 8);
  v61 = v4;
  MEMORY[0x1E0C80A78](v4);
  v59 = (char *)v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C14251EC();
  v57 = *(_QWORD *)(v6 - 8);
  v58 = v6;
  MEMORY[0x1E0C80A78](v6);
  v56 = (char *)v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_1C14251B0();
  v8 = *(_QWORD *)(v68 - 8);
  MEMORY[0x1E0C80A78](v68);
  v10 = (char *)v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for XPCInputParticipant.ActivityUpdate();
  v11 = MEMORY[0x1E0C80A78](v70);
  v13 = (char *)v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v62 = (char *)v50 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  result = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)v50 - v20;
  v22 = *(_QWORD *)(a1 + 16);
  if (v22)
  {
    v23 = a1 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    v66 = *(_QWORD *)(v18 + 72);
    v67 = (uint64_t *)v19;
    v52 = v73;
    v50[0] = a1;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v24 = 136446979;
    v51 = v24;
    v50[1] = MEMORY[0x1E0DEE9B8] + 8;
    v25 = (uint64_t)v62;
    v55 = a2;
    v54 = v8;
    v53 = v10;
    do
    {
      v71 = v22;
      sub_1C1338F24(v23, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for XPCInputParticipant.ActivityUpdate);
      sub_1C142518C();
      sub_1C1425120();
      v27 = v26;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v68);
      if (qword_1ED793948 != -1)
        swift_once();
      v28 = sub_1C1426854();
      __swift_project_value_buffer(v28, (uint64_t)qword_1ED798598);
      v29 = v67;
      sub_1C1338F24((uint64_t)v21, (uint64_t)v67, (uint64_t (*)(_QWORD))type metadata accessor for XPCInputParticipant.ActivityUpdate);
      sub_1C1338F24((uint64_t)v21, v25, (uint64_t (*)(_QWORD))type metadata accessor for XPCInputParticipant.ActivityUpdate);
      sub_1C1338F24((uint64_t)v21, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for XPCInputParticipant.ActivityUpdate);
      v30 = sub_1C1426848();
      v31 = sub_1C1426C80();
      v69 = v31;
      if (os_log_type_enabled(v30, v31))
      {
        v32 = swift_slowAlloc();
        v65 = swift_slowAlloc();
        v73[0] = v65;
        *(_DWORD *)v32 = v51;
        v64 = v30;
        v34 = *v29;
        v33 = v29[1];
        swift_bridgeObjectRetain();
        v72 = sub_1C132AD90(v34, v33, v73);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        sub_1C1339004((uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for XPCInputParticipant.ActivityUpdate);
        *(_WORD *)(v32 + 12) = 2082;
        v63 = v32 + 14;
        v35 = v70;
        v36 = v56;
        sub_1C1425420();
        sub_1C1329AD0(&qword_1ED792880, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
        v37 = (uint64_t)v13;
        v38 = v35;
        v39 = v58;
        v40 = sub_1C1427058();
        v42 = v41;
        v43 = v36;
        v25 = (uint64_t)v62;
        v44 = v39;
        v45 = v38;
        v13 = (char *)v37;
        (*(void (**)(char *, uint64_t))(v57 + 8))(v43, v44);
        v72 = sub_1C132AD90(v40, v42, v73);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        sub_1C1339004(v25, (uint64_t (*)(_QWORD))type metadata accessor for XPCInputParticipant.ActivityUpdate);
        *(_WORD *)(v32 + 22) = 2081;
        (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v59, v37 + *(int *)(v45 + 20), v61);
        v10 = v53;
        v46 = sub_1C1426AA0();
        v72 = sub_1C132AD90(v46, v47, v73);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        sub_1C1339004(v37, (uint64_t (*)(_QWORD))type metadata accessor for XPCInputParticipant.ActivityUpdate);
        *(_WORD *)(v32 + 32) = 2050;
        v72 = v27;
        sub_1C1426DB8();
        v30 = v64;
        _os_log_impl(&dword_1C1324000, v64, (os_log_type_t)v69, "Publishing pended activity update for %{public}s with payload %{public}s for XPC participant content source %{private}s after pended delay %{public}fs", (uint8_t *)v32, 0x2Au);
        v48 = v65;
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v48, -1, -1);
        v49 = v32;
        v8 = v54;
        MEMORY[0x1C3BAD3F4](v49, -1, -1);
      }
      else
      {
        sub_1C1339004((uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for XPCInputParticipant.ActivityUpdate);
        sub_1C1339004(v25, (uint64_t (*)(_QWORD))type metadata accessor for XPCInputParticipant.ActivityUpdate);
        sub_1C1339004((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for XPCInputParticipant.ActivityUpdate);
      }

      sub_1C1380100((uint64_t)v21);
      sub_1C1339004((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for XPCInputParticipant.ActivityUpdate);
      v23 += v66;
      v22 = v71 - 1;
    }
    while (v71 != 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C1380100(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  void (*v21)(_QWORD *, _QWORD, uint64_t);
  char v22;
  void (*v23)(_QWORD *, uint64_t);
  void *v24;
  id v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  int v31;
  _BOOL4 v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  os_log_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  int *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  _QWORD v62[2];
  os_log_t v63;
  int v64;
  uint64_t v65;
  void (*v66)(_QWORD, _QWORD, _QWORD);
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79[3];

  v2 = v1;
  v75 = (char *)a1;
  v76 = type metadata accessor for ActivityParticipantEvent(0);
  MEMORY[0x1E0C80A78](v76);
  v4 = (char *)v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C1425558();
  v73 = *(_QWORD *)(v5 - 8);
  v74 = v5;
  MEMORY[0x1E0C80A78](v5);
  v71 = (char *)v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C14251EC();
  v69 = *(_QWORD *)(v7 - 8);
  v70 = v7;
  MEMORY[0x1E0C80A78](v7);
  v68 = (char *)v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = type metadata accessor for XPCInputParticipant.ActivityUpdate();
  v9 = MEMORY[0x1E0C80A78](v72);
  v77 = (uint64_t)v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v62 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (_QWORD *)((char *)v62 - v14);
  v16 = sub_1C14269F8();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (_QWORD *)((char *)v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = *(void **)(v2 + 16);
  *v19 = v20;
  v21 = *(void (**)(_QWORD *, _QWORD, uint64_t))(v17 + 104);
  v21(v19, *MEMORY[0x1E0DEF738], v16);
  v20;
  v22 = sub_1C1426A10();
  v23 = *(void (**)(_QWORD *, uint64_t))(v17 + 8);
  v23(v19, v16);
  if ((v22 & 1) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  v24 = *(void **)(v2 + 24);
  *v19 = v24;
  v21(v19, *MEMORY[0x1E0DEF740], v16);
  v25 = v24;
  LOBYTE(v24) = sub_1C1426A10();
  v23(v19, v16);
  if ((v24 & 1) == 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793388);
  sub_1C1426CEC();
  if (v79[0])
  {
    v21 = (void (*)(_QWORD *, _QWORD, uint64_t))v2;
    v67 = v79[0];
    if (qword_1ED793948 == -1)
    {
LABEL_5:
      v26 = sub_1C1426854();
      __swift_project_value_buffer(v26, (uint64_t)qword_1ED798598);
      v27 = v75;
      sub_1C1338F24((uint64_t)v75, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for XPCInputParticipant.ActivityUpdate);
      sub_1C1338F24((uint64_t)v27, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for XPCInputParticipant.ActivityUpdate);
      v28 = v77;
      sub_1C1338F24((uint64_t)v27, v77, (uint64_t (*)(_QWORD))type metadata accessor for XPCInputParticipant.ActivityUpdate);
      v29 = sub_1C1426848();
      v30 = sub_1C1426C80();
      v31 = v30;
      v32 = os_log_type_enabled(v29, v30);
      v66 = (void (*)(_QWORD, _QWORD, _QWORD))v21;
      if (v32)
      {
        v33 = swift_slowAlloc();
        v64 = v31;
        v34 = v33;
        v65 = swift_slowAlloc();
        v79[0] = v65;
        *(_DWORD *)v34 = 136446723;
        v63 = v29;
        v36 = *v15;
        v35 = v15[1];
        swift_bridgeObjectRetain();
        v78 = sub_1C132AD90(v36, v35, v79);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        sub_1C1339004((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for XPCInputParticipant.ActivityUpdate);
        *(_WORD *)(v34 + 12) = 2082;
        v62[1] = v34 + 14;
        v37 = v72;
        v38 = v68;
        sub_1C1425420();
        sub_1C1329AD0(&qword_1ED792880, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
        v39 = v70;
        v40 = sub_1C1427058();
        v42 = v41;
        (*(void (**)(char *, uint64_t))(v69 + 8))(v38, v39);
        v78 = sub_1C132AD90(v40, v42, v79);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        sub_1C1339004((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for XPCInputParticipant.ActivityUpdate);
        *(_WORD *)(v34 + 22) = 2081;
        v43 = v77;
        v45 = v73;
        v44 = v74;
        (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v71, v77 + *(int *)(v37 + 20), v74);
        v46 = sub_1C1426AA0();
        v78 = sub_1C132AD90(v46, v47, v79);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        sub_1C1339004(v43, (uint64_t (*)(_QWORD))type metadata accessor for XPCInputParticipant.ActivityUpdate);
        v48 = v63;
        _os_log_impl(&dword_1C1324000, v63, (os_log_type_t)v64, "Updating activity %{public}s with payload %{public}s for XPC participant content source %{private}s", (uint8_t *)v34, 0x20u);
        v49 = v65;
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v49, -1, -1);
        MEMORY[0x1C3BAD3F4](v34, -1, -1);

      }
      else
      {
        sub_1C1339004((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for XPCInputParticipant.ActivityUpdate);
        sub_1C1339004((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for XPCInputParticipant.ActivityUpdate);
        sub_1C1339004(v28, (uint64_t (*)(_QWORD))type metadata accessor for XPCInputParticipant.ActivityUpdate);

        v45 = v73;
        v44 = v74;
        v37 = v72;
      }
      v55 = *(_QWORD *)v27;
      v54 = *((_QWORD *)v27 + 1);
      v56 = (int *)v76;
      type metadata accessor for ActivityParticipantEvent.EventType(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(&v4[v56[7]], &v27[*(int *)(v37 + 20)], v44);
      v57 = &v4[v56[9]];
      v58 = &v27[*(int *)(v37 + 24)];
      v59 = sub_1C1425450();
      v60 = *(_QWORD *)(v59 - 8);
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v57, v58, v59);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
      *(_QWORD *)v4 = v55;
      *((_QWORD *)v4 + 1) = v54;
      *((_QWORD *)v4 + 2) = 0;
      *((_QWORD *)v4 + 3) = 0;
      v61 = &v4[v56[8]];
      *(_QWORD *)v61 = v66;
      *((_QWORD *)v61 + 1) = &off_1E7A8B440;
      v4[v56[10]] = 0;
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1C13D0788((uint64_t)v4);
      swift_unknownObjectRelease();
      sub_1C1339004((uint64_t)v4, type metadata accessor for ActivityParticipantEvent);
      return;
    }
LABEL_16:
    swift_once();
    goto LABEL_5;
  }
  if (qword_1ED793948 != -1)
    swift_once();
  v50 = sub_1C1426854();
  __swift_project_value_buffer(v50, (uint64_t)qword_1ED798598);
  v51 = sub_1C1426848();
  v52 = sub_1C1426C68();
  if (os_log_type_enabled(v51, v52))
  {
    v53 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v53 = 0;
    _os_log_impl(&dword_1C1324000, v51, v52, "XPCInputParticipant has no ActivityManager", v53, 2u);
    MEMORY[0x1C3BAD3F4](v53, -1, -1);
  }

}

void (*sub_1C1380814(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;

  v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_1C1380AE0(v6);
  v6[10] = sub_1C13808F4(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_1C13808A4;
}

void sub_1C13808A4(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 72);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 80))(*(_QWORD *)a1 + 32, 0);
  swift_bridgeObjectRelease();
  v2(v1, 0);
  free(v1);
}

void (*sub_1C13808F4(_QWORD *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  void (*result)(uint64_t **);

  v5 = v4;
  v10 = malloc(0x30uLL);
  *a1 = v10;
  v10[1] = a3;
  v10[2] = v4;
  *v10 = a2;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793390);
  v12 = malloc(*(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  v10[3] = v12;
  v13 = *v4;
  v15 = sub_1C13277A0(a2, a3);
  *((_BYTE *)v10 + 40) = v14 & 1;
  v16 = *(_QWORD *)(v13 + 16);
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
  }
  else
  {
    v19 = v14;
    v20 = *(_QWORD *)(v13 + 24);
    if (v20 >= v18 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[4] = v15;
      if ((v19 & 1) != 0)
      {
LABEL_8:
        v21 = *(_QWORD *)(*v5 + 56);
        v22 = type metadata accessor for SlidingWindowExponentialBackoff();
        v23 = *(_QWORD *)(v22 - 8);
        sub_1C1339140(v21 + *(_QWORD *)(v23 + 72) * v15, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for SlidingWindowExponentialBackoff);
        v24 = 0;
LABEL_12:
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v12, v24, 1, v22);
        return sub_1C1380A90;
      }
LABEL_11:
      v22 = type metadata accessor for SlidingWindowExponentialBackoff();
      v23 = *(_QWORD *)(v22 - 8);
      v24 = 1;
      goto LABEL_12;
    }
    if (v20 >= v18 && (a4 & 1) == 0)
    {
      sub_1C13BB5B0();
      goto LABEL_7;
    }
    sub_1C13BEEF0(v18, a4 & 1);
    v25 = sub_1C13277A0(a2, a3);
    if ((v19 & 1) == (v26 & 1))
    {
      v15 = v25;
      v10[4] = v25;
      if ((v19 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(uint64_t **))sub_1C142707C();
  __break(1u);
  return result;
}

void sub_1C1380A90(uint64_t **a1)
{
  uint64_t *v1;
  void *v2;

  v1 = *a1;
  v2 = (void *)(*a1)[3];
  sub_1C1380B0C((uint64_t)v2, *((_BYTE *)*a1 + 40), (uint64_t *)(*a1)[2], (*a1)[4], **a1, (*a1)[1]);
  sub_1C132C860((uint64_t)v2, &qword_1ED793390);
  free(v2);
  free(v1);
}

uint64_t (*sub_1C1380AE0(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_1C1380B00;
}

uint64_t sub_1C1380B00(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

unint64_t sub_1C1380B0C(uint64_t a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  unint64_t result;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  v22 = a5;
  v23 = a6;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793390);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SlidingWindowExponentialBackoff();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v22 - v18;
  sub_1C132C344(a1, (uint64_t)v12, &qword_1ED793390);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    result = sub_1C132C860((uint64_t)v12, &qword_1ED793390);
    if ((a2 & 1) != 0)
    {
      swift_arrayDestroy();
      return sub_1C13C153C(a4, *a3);
    }
  }
  else
  {
    sub_1C1339140((uint64_t)v12, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for SlidingWindowExponentialBackoff);
    v21 = (_QWORD *)*a3;
    if ((a2 & 1) != 0)
    {
      return sub_1C1339140((uint64_t)v19, v21[7] + *(_QWORD *)(v14 + 72) * a4, (uint64_t (*)(_QWORD))type metadata accessor for SlidingWindowExponentialBackoff);
    }
    else
    {
      sub_1C1339140((uint64_t)v19, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for SlidingWindowExponentialBackoff);
      sub_1C13C333C(a4, v22, v23, (uint64_t)v17, v21);
      return swift_bridgeObjectRetain();
    }
  }
  return result;
}

uint64_t objectdestroy_5Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ActivityManagerEvent(0) - 8) + 80);
  swift_release();
  v2 = v0 + ((v1 + 24) & ~v1);
  swift_bridgeObjectRelease();
  v3 = (int *)type metadata accessor for Activity();
  v4 = v2 + v3[5];
  v5 = sub_1C1425978();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v2 + v3[6];
  sub_1C1425A08();
  v7 = sub_1C1425AEC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  v8 = v2 + v3[8];
  v9 = sub_1C14251B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  v10 = v2 + v3[11];
  v11 = sub_1C1425450();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = v2 + v3[12];
  v13 = sub_1C142557C();
  v14 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C1380E7C()
{
  return sub_1C1380E88((uint64_t (*)(_QWORD, uint64_t))sub_1C137F174);
}

uint64_t sub_1C1380E88(uint64_t (*a1)(_QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ActivityManagerEvent(0) - 8) + 80);
  return a1(*(_QWORD *)(v1 + 16), v1 + ((v2 + 24) & ~v2));
}

uint64_t sub_1C1380EC8()
{
  return swift_deallocObject();
}

uint64_t sub_1C1380ED8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t result;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t i;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  char *v36;
  unint64_t v37;
  unint64_t v38;
  char *v39;
  unint64_t v40;
  int64_t v41;
  unint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int64_t v73;
  uint64_t *v74;
  uint64_t *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int64_t v84;

  v4 = type metadata accessor for SlidingWindowExponentialBackoff();
  v79 = *(_QWORD *)(v4 - 8);
  v80 = v4;
  MEMORY[0x1E0C80A78](v4);
  v71 = (uint64_t)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793390);
  MEMORY[0x1E0C80A78](v6);
  v78 = (uint64_t)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B60);
  MEMORY[0x1E0C80A78](v8);
  v77 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C14251B0();
  v82 = *(_QWORD *)(v10 - 8);
  v83 = v10;
  v11 = MEMORY[0x1E0C80A78](v10);
  v69 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v68 = (char *)&v67 - v13;
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793578);
  v14 = MEMORY[0x1E0C80A78](v76);
  v75 = (uint64_t *)((char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (uint64_t *)((char *)&v67 - v17);
  MEMORY[0x1E0C80A78](v16);
  v20 = (uint64_t *)((char *)&v67 - v19);
  v21 = *(_QWORD *)(a1 + 64);
  v72 = a1 + 64;
  v22 = 1 << *(_BYTE *)(a1 + 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v21;
  v81 = a1;
  swift_bridgeObjectRetain();
  v74 = (uint64_t *)(a2 + 88);
  result = swift_beginAccess();
  v26 = 0;
  v73 = (unint64_t)(v22 + 63) >> 6;
  v70 = MEMORY[0x1E0DEE9D8];
  if (v24)
    goto LABEL_8;
LABEL_14:
  v41 = v26 + 1;
  if (!__OFADD__(v26, 1))
  {
    if (v41 < v73)
    {
      v42 = *(_QWORD *)(v72 + 8 * v41);
      v43 = v26 + 1;
      if (v42)
        goto LABEL_29;
      v43 = v26 + 2;
      if (v26 + 2 >= v73)
        goto LABEL_38;
      v42 = *(_QWORD *)(v72 + 8 * v43);
      if (v42)
        goto LABEL_29;
      v43 = v26 + 3;
      if (v26 + 3 >= v73)
        goto LABEL_38;
      v42 = *(_QWORD *)(v72 + 8 * v43);
      if (v42)
        goto LABEL_29;
      v43 = v26 + 4;
      if (v26 + 4 >= v73)
        goto LABEL_38;
      v42 = *(_QWORD *)(v72 + 8 * v43);
      if (v42)
      {
LABEL_29:
        v24 = (v42 - 1) & v42;
        v84 = v43;
        for (i = __clz(__rbit64(v42)) + (v43 << 6); ; i = v32 | (v26 << 6))
        {
          v45 = *(_QWORD *)(v81 + 56);
          v46 = (uint64_t *)(*(_QWORD *)(v81 + 48) + 16 * i);
          v47 = *v46;
          v48 = v46[1];
          v49 = v45
              + *(_QWORD *)(*(_QWORD *)(type metadata accessor for XPCInputParticipant.ActivityUpdate() - 8) + 72) * i;
          v50 = v76;
          sub_1C1338F24(v49, (uint64_t)v20 + *(int *)(v76 + 48), (uint64_t (*)(_QWORD))type metadata accessor for XPCInputParticipant.ActivityUpdate);
          *v20 = v47;
          v20[1] = v48;
          sub_1C132A724((uint64_t)v20, (uint64_t)v18, &qword_1ED793578);
          v51 = *(int *)(v50 + 48);
          v52 = v75;
          v53 = (uint64_t)v75 + v51;
          v55 = *v18;
          v54 = v18[1];
          *v75 = *v18;
          v52[1] = v54;
          sub_1C1338F24((uint64_t)v18 + v51, (uint64_t)v52 + v51, (uint64_t (*)(_QWORD))type metadata accessor for XPCInputParticipant.ActivityUpdate);
          v56 = *v74;
          if (*(_QWORD *)(*v74 + 16))
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v57 = sub_1C13277A0(v55, v54);
            v60 = v78;
            v59 = v79;
            if ((v58 & 1) != 0)
            {
              sub_1C1338F24(*(_QWORD *)(v56 + 56) + *(_QWORD *)(v79 + 72) * v57, v78, (uint64_t (*)(_QWORD))type metadata accessor for SlidingWindowExponentialBackoff);
              v61 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 56);
              v62 = v60;
              v63 = 0;
            }
            else
            {
              v61 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v79 + 56);
              v62 = v78;
              v63 = 1;
            }
            v65 = v80;
            v61(v62, v63, 1, v80);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            v60 = v78;
            v64 = v79;
            v65 = v80;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v79 + 56))(v78, 1, 1, v80);
            v59 = v64;
            swift_bridgeObjectRetain();
          }
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v60, 1, v65))
          {
            sub_1C132C860(v60, &qword_1ED793390);
            v27 = 1;
            v28 = (uint64_t)v77;
          }
          else
          {
            v66 = v71;
            sub_1C1338F24(v60, v71, (uint64_t (*)(_QWORD))type metadata accessor for SlidingWindowExponentialBackoff);
            sub_1C132C860(v60, &qword_1ED793390);
            v28 = (uint64_t)v77;
            sub_1C142512C();
            sub_1C1339004(v66, (uint64_t (*)(_QWORD))type metadata accessor for SlidingWindowExponentialBackoff);
            v27 = 0;
          }
          sub_1C1339004(v53, (uint64_t (*)(_QWORD))type metadata accessor for XPCInputParticipant.ActivityUpdate);
          v29 = v82;
          v30 = v27;
          v31 = v83;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v82 + 56))(v28, v30, 1, v83);
          sub_1C132C860((uint64_t)v18, &qword_1ED793578);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v28, 1, v31) == 1)
          {
            result = sub_1C132C860(v28, &qword_1ED793B60);
            v26 = v84;
            if (!v24)
              goto LABEL_14;
          }
          else
          {
            v34 = v83;
            v35 = *(void (**)(char *, uint64_t, uint64_t))(v82 + 32);
            v36 = v68;
            v35(v68, v28, v83);
            v35(v69, (uint64_t)v36, v34);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v70 = sub_1C136C880(0, *(_QWORD *)(v70 + 16) + 1, 1, v70);
            v38 = *(_QWORD *)(v70 + 16);
            v37 = *(_QWORD *)(v70 + 24);
            if (v38 >= v37 >> 1)
              v70 = sub_1C136C880(v37 > 1, v38 + 1, 1, v70);
            v39 = v69;
            v40 = v70;
            *(_QWORD *)(v70 + 16) = v38 + 1;
            result = ((uint64_t (*)(unint64_t, char *, uint64_t))v35)(v40+ ((*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80))+ *(_QWORD *)(v82 + 72) * v38, v39, v83);
            v26 = v84;
            if (!v24)
              goto LABEL_14;
          }
LABEL_8:
          v32 = __clz(__rbit64(v24));
          v24 &= v24 - 1;
          v84 = v26;
        }
      }
      v44 = v26 + 5;
      if (v26 + 5 < v73)
      {
        v42 = *(_QWORD *)(v72 + 8 * v44);
        if (v42)
        {
          v43 = v26 + 5;
          goto LABEL_29;
        }
        while (1)
        {
          v43 = v44 + 1;
          if (__OFADD__(v44, 1))
            goto LABEL_40;
          if (v43 >= v73)
            break;
          v42 = *(_QWORD *)(v72 + 8 * v43);
          ++v44;
          if (v42)
            goto LABEL_29;
        }
      }
    }
LABEL_38:
    swift_release();
    return v70;
  }
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1C1381530()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C1381554()
{
  return sub_1C137F908();
}

uint64_t sub_1C138155C(uint64_t *a1, uint64_t a2)
{
  return sub_1C137F95C(a1, a2) & 1;
}

uint64_t sub_1C1381578()
{
  return objectdestroyTm_1((void (*)(_QWORD))MEMORY[0x1E0DEEB08], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t objectdestroyTm_1(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  uint64_t v2;

  a1(*(_QWORD *)(v2 + 16));
  a2(*(_QWORD *)(v2 + 24));
  return swift_deallocObject();
}

uint64_t sub_1C13815D8()
{
  uint64_t v0;

  return sub_1C137FB48(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1C13815E0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C13815F4(a1);
}

uint64_t sub_1C13815F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = MEMORY[0x1C3BAD4B4](v1 + 104);
  v4 = *(_QWORD *)(v1 + 112);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C1381628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_1C1425558();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_1C1425450();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

void sub_1C13816EC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(sub_1C1425558() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_1C1425450() - 8) + 80);
  sub_1C137CB3C(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), v0 + v2, v0 + ((v2 + v3 + v4) & ~v4));
}

uint64_t sub_1C1381754()
{
  return swift_deallocObject();
}

uint64_t sub_1C1381780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

id sub_1C1381788()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  objc_class *v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  objc_super v14;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791E00);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = &v0[OBJC_IVAR____TtC11SessionCore35ActivityPreferenceReplicationFilter_filterDidUpdate];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  v5 = OBJC_IVAR____TtC11SessionCore35ActivityPreferenceReplicationFilter_appSettingsLock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DB288);
  v6 = swift_allocObject();
  *(_DWORD *)(v6 + 20) = 0;
  *(_BYTE *)(v6 + 16) = 0;
  *(_QWORD *)&v0[v5] = v6;
  v7 = &v0[OBJC_IVAR____TtC11SessionCore35ActivityPreferenceReplicationFilter_lockedAppSettings];
  v8 = (objc_class *)type metadata accessor for ActivityPreferenceReplicationFilter();
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  v14.receiver = v0;
  v14.super_class = v8;
  v9 = objc_msgSendSuper2(&v14, sel_init);
  v10 = sub_1C1426BCC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v3, 1, 1, v10);
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = v9;
  v12 = v9;
  sub_1C1381D0C((uint64_t)v3, (uint64_t)&unk_1EF6DB298, (uint64_t)v11);
  swift_release();
  return v12;
}

uint64_t sub_1C13818BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[5] = a4;
  v5 = sub_1C14251B0();
  v4[6] = v5;
  v4[7] = *(_QWORD *)(v5 - 8);
  v4[8] = swift_task_alloc();
  v4[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C138192C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  void *v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  id v21;
  uint64_t v22;
  os_unfair_lock_s *v23;
  uint64_t v24;
  os_unfair_lock_s *v25;
  uint64_t v26;
  uint64_t v27;
  os_log_type_t type;
  void (*v30)(uint64_t, uint64_t);

  if ((sub_1C138280C() & 1) != 0)
  {
    v1 = *(_QWORD *)(v0 + 64);
    v2 = *(_QWORD *)(v0 + 48);
    v3 = *(_QWORD *)(v0 + 56);
    sub_1C14251A4();
    v4 = objc_msgSend((id)objc_opt_self(), sel_sharedSettingsModel);
    sub_1C14251A4();
    sub_1C1425120();
    v6 = v5;
    v7 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v7(v1, v2);
    if (qword_1ED791DD8 != -1)
      swift_once();
    v8 = *(void **)(v0 + 40);
    v9 = sub_1C1426854();
    __swift_project_value_buffer(v9, (uint64_t)qword_1ED7984F0);
    v10 = v8;
    v11 = v4;
    v12 = v10;
    v13 = v11;
    v14 = sub_1C1426848();
    v15 = sub_1C1426C80();
    v16 = os_log_type_enabled(v14, v15);
    v17 = *(void **)(v0 + 40);
    if (v16)
    {
      type = v15;
      v18 = swift_slowAlloc();
      v19 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v18 = 138412802;
      *(_QWORD *)(v0 + 16) = v17;
      v30 = v7;
      v20 = v17;
      sub_1C1426DB8();
      *v19 = v17;

      *(_WORD *)(v18 + 12) = 2112;
      *(_QWORD *)(v0 + 24) = v13;
      v21 = v13;
      v7 = v30;
      sub_1C1426DB8();
      v19[1] = v13;

      *(_WORD *)(v18 + 22) = 2048;
      *(_QWORD *)(v0 + 32) = v6;
      sub_1C1426DB8();
      _os_log_impl(&dword_1C1324000, v14, type, "%@ received %@ after %f seconds", (uint8_t *)v18, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DACE0);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v19, -1, -1);
      MEMORY[0x1C3BAD3F4](v18, -1, -1);
    }
    else
    {

    }
    v22 = *(_QWORD *)(v0 + 40);
    objc_msgSend(v13, sel_addObserver_, v22);
    v23 = *(os_unfair_lock_s **)(v22 + OBJC_IVAR____TtC11SessionCore35ActivityPreferenceReplicationFilter_appSettingsLock);
    v24 = swift_task_alloc();
    *(_QWORD *)(v24 + 16) = v22;
    *(_QWORD *)(v24 + 24) = v13;
    v25 = v23 + 4;
    v23 += 5;
    os_unfair_lock_lock(v23);
    sub_1C1381C7C(v25, *(_QWORD *)(v24 + 16), *(void **)(v24 + 24));
    os_unfair_lock_unlock(v23);
    v26 = *(_QWORD *)(v0 + 72);
    v27 = *(_QWORD *)(v0 + 48);

    swift_task_dealloc();
    v7(v26, v27);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C1381C7C(_BYTE *a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  id v7;
  uint64_t result;
  _QWORD v9[4];

  v9[3] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6DB278);
  v9[0] = a3;
  v6 = a2 + OBJC_IVAR____TtC11SessionCore35ActivityPreferenceReplicationFilter_lockedAppSettings;
  swift_beginAccess();
  v7 = a3;
  sub_1C1382AD4((uint64_t)v9, v6);
  result = swift_endAccess();
  *a1 = 1;
  return result;
}

uint64_t sub_1C1381D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1C1426BCC();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1C1426BC0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1C132C860(a1, &qword_1ED791E00);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1C1426BB4();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

void sub_1C1381E78(_BYTE *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, unsigned __int8 *a5@<X8>)
{
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  unsigned __int8 v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31[4];
  void *v32;

  if (*a1 != 1)
  {
    if (qword_1ED791DD8 != -1)
      swift_once();
    v14 = sub_1C1426854();
    __swift_project_value_buffer(v14, (uint64_t)qword_1ED7984F0);
    v15 = sub_1C1426848();
    v16 = sub_1C1426C50();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_1C1324000, v15, v16, "appSettings not set, allowing replication", v17, 2u);
      MEMORY[0x1C3BAD3F4](v17, -1, -1);
    }

    goto LABEL_17;
  }
  v9 = (uint64_t)a2 + OBJC_IVAR____TtC11SessionCore35ActivityPreferenceReplicationFilter_lockedAppSettings;
  swift_beginAccess();
  sub_1C1382590(v9, (uint64_t)v31);
  if (!v31[3])
  {
    sub_1C132C860((uint64_t)v31, (uint64_t *)&unk_1ED797BB0);
    goto LABEL_12;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6DB278);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    if (qword_1ED791DD8 != -1)
      swift_once();
    v18 = sub_1C1426854();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ED7984F0);
    v19 = a2;
    v20 = sub_1C1426848();
    v21 = sub_1C1426C68();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      v32 = (void *)v23;
      *(_DWORD *)v22 = 136315138;
      sub_1C1382590(v9, (uint64_t)v31);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797BB0);
      v24 = sub_1C1426AA0();
      v31[0] = sub_1C132AD90(v24, v25, (uint64_t *)&v32);
      sub_1C1426DB8();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1324000, v20, v21, "appSettings %s not set or not correct, allowing replication", v22, 0xCu);
      v13 = 1;
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v23, -1, -1);
      MEMORY[0x1C3BAD3F4](v22, -1, -1);

      goto LABEL_18;
    }

LABEL_17:
    v13 = 1;
    goto LABEL_18;
  }
  v10 = v32;
  v11 = (void *)sub_1C1426A7C();
  v12 = objc_msgSend(v10, sel_resolvedSettingsForBundleIdentifier_, v11);

  if (!v12)
  {
    if (qword_1ED791DD8 != -1)
      swift_once();
    v26 = sub_1C1426854();
    __swift_project_value_buffer(v26, (uint64_t)qword_1ED7984F0);
    swift_bridgeObjectRetain_n();
    v27 = sub_1C1426848();
    v28 = sub_1C1426C80();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      v30 = swift_slowAlloc();
      v31[0] = v30;
      *(_DWORD *)v29 = 136315138;
      swift_bridgeObjectRetain();
      v32 = (void *)sub_1C132AD90(a3, a4, v31);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v27, v28, "no appSettings for  %s, allowing replication", v29, 0xCu);
      v13 = 1;
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v30, -1, -1);
      MEMORY[0x1C3BAD3F4](v29, -1, -1);

      goto LABEL_18;
    }

    swift_bridgeObjectRelease_n();
    goto LABEL_17;
  }
  v13 = objc_msgSend(v12, sel_allowLiveActivitiesForApp);

  swift_unknownObjectRelease();
LABEL_18:
  *a5 = v13;
}

id sub_1C1382368()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivityPreferenceReplicationFilter();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ActivityPreferenceReplicationFilter()
{
  return objc_opt_self();
}

uint64_t sub_1C1382410(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)(*v2 + OBJC_IVAR____TtC11SessionCore35ActivityPreferenceReplicationFilter_filterDidUpdate);
  v4 = *v3;
  *v3 = a1;
  v3[1] = a2;
  return sub_1C1382580(v4);
}

uint64_t sub_1C1382580(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_1C1382590(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797BB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C13825D8(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1C138263C;
  return v6(a1);
}

uint64_t sub_1C138263C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1C1382688(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_1C1382698()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1C13826C4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1C1382730;
  return sub_1C13818BC(a1, v4, v5, v6);
}

uint64_t sub_1C1382730()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1C1382778()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C138279C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1C1382730;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EF6DB2A0 + dword_1EF6DB2A0))(a1, v4);
}

uint64_t sub_1C138280C()
{
  NSObject *v0;
  NSObject *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;

  v0 = (id)MobileGestalt_get_current_device();
  if (!v0)
  {
    if (qword_1ED791DD8 != -1)
      swift_once();
    v7 = sub_1C1426854();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED7984F0);
    v1 = sub_1C1426848();
    v8 = sub_1C1426C68();
    if (os_log_type_enabled(v1, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1C1324000, v1, v8, "Unable to determine device class from MobileGestalt - defaulting to replication filters not supported", v9, 2u);
      MEMORY[0x1C3BAD3F4](v9, -1, -1);
    }
    goto LABEL_16;
  }
  v1 = v0;
  if (MobileGestalt_get_deviceClassNumber() != 1)
  {
    if (qword_1ED791DD8 != -1)
      swift_once();
    v10 = sub_1C1426854();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ED7984F0);
    v11 = sub_1C1426848();
    v12 = sub_1C1426C80();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v13 = 67109120;
      sub_1C1426DB8();
      _os_log_impl(&dword_1C1324000, v11, v12, "Replication filters not supported on deviceClass %d", v13, 8u);
      MEMORY[0x1C3BAD3F4](v13, -1, -1);
    }

LABEL_16:
    return 0;
  }
  if (qword_1ED791DD8 != -1)
    swift_once();
  v2 = sub_1C1426854();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED7984F0);
  v3 = sub_1C1426848();
  v4 = sub_1C1426C80();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v5 = 67109120;
    v6 = 1;
    sub_1C1426DB8();
    _os_log_impl(&dword_1C1324000, v3, v4, "Replication filters supported on deviceClass %d", v5, 8u);
    MEMORY[0x1C3BAD3F4](v5, -1, -1);

  }
  else
  {

    return 1;
  }
  return v6;
}

uint64_t sub_1C1382AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797BB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1382B1C(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_1C1382B58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v1 = sub_1C1426CD4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C1426C8C();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1C14269B0();
  MEMORY[0x1E0C80A78](v6);
  *(_DWORD *)(v0 + 16) = -1;
  sub_1C1330F6C();
  sub_1C142698C();
  v8[1] = MEMORY[0x1E0DEE9D8];
  sub_1C1358EF0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A70);
  sub_1C135C2A8();
  sub_1C1426DF4();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEF8D8], v1);
  *(_QWORD *)(v0 + 24) = sub_1C1426D04();
  sub_1C1382D68();
  return v0;
}

uint64_t sub_1C1382CFC()
{
  uint64_t v0;

  swift_beginAccess();
  notify_cancel(*(_DWORD *)(v0 + 16));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StuckClientBugCapturer()
{
  return objc_opt_self();
}

void sub_1C1382D68()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD v9[6];

  sub_1C1425EB8();
  v1 = *(NSObject **)(v0 + 24);
  v2 = swift_allocObject();
  swift_weakInit();
  v9[4] = sub_1C1383078;
  v9[5] = v2;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = sub_1C1382B1C;
  v9[3] = &block_descriptor_7;
  v3 = _Block_copy(v9);
  swift_release();
  v4 = sub_1C1426AAC();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  LODWORD(v1) = notify_register_dispatch((const char *)(v4 + 32), (int *)(v0 + 16), v1, v3);
  swift_endAccess();
  swift_release();
  _Block_release(v3);
  if ((_DWORD)v1)
  {
    if (qword_1EF6DA7C0 != -1)
      swift_once();
    v5 = sub_1C1426854();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EF6DC660);
    v6 = sub_1C1426848();
    v7 = sub_1C1426C68();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1C1324000, v6, v7, "Could not register for stuck client notifications", v8, 2u);
      MEMORY[0x1C3BAD3F4](v8, -1, -1);
    }

  }
}

uint64_t sub_1C1382F2C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C1382F50()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t state64[8];

  state64[7] = *MEMORY[0x1E0C80C00];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    state64[0] = 0;
    swift_beginAccess();
    notify_get_state(*(_DWORD *)(v1 + 16), state64);
    v2 = sub_1C1427058();
    sub_1C13AB5D0(0xD000000000000013, 0x80000001C142E9B0, 0x696C436B63757453, 0xEB00000000746E65, 0x696C436B63757453, 0xEB00000000746E65, v2, v3);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C1383078()
{
  return sub_1C1382F50();
}

uint64_t sub_1C1383080(uint64_t *a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C13830DC(v1);
    return swift_release();
  }
  return result;
}

void sub_1C13830DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  os_unfair_lock_s *v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  __objc2_meth_list **p_base_meths;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[2];
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;

  v3 = type metadata accessor for ActivityParticipantEvent(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v33 = (_QWORD *)((char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v29 - v7;
  v9 = *(os_unfair_lock_s **)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v9);
  v10 = MEMORY[0x1C3BAD4B4](v1 + 80);
  os_unfair_lock_unlock(v9);
  if (v10)
  {
    os_unfair_lock_lock(v9);
    sub_1C13833DC(a1, v1, &v34);
    os_unfair_lock_unlock(v9);
    v12 = *(_QWORD *)(v34 + 16);
    if (v12)
    {
      v13 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      v29[0] = v34;
      v14 = v34 + v13;
      v15 = *(_QWORD *)(v4 + 72);
      v16 = type metadata accessor for ActivityParticipantEvent;
      p_base_meths = &PresentationObservationServiceClient.base_meths;
      *(_QWORD *)&v11 = 136446210;
      v30 = v11;
      v29[1] = MEMORY[0x1E0DEE9B8] + 8;
      v18 = (uint64_t)v33;
      v31 = v10;
      v32 = v15;
      do
      {
        sub_1C1338F24(v14, (uint64_t)v8, v16);
        if (p_base_meths[245] != (__objc2_meth_list *)-1)
          swift_once();
        v19 = sub_1C1426854();
        __swift_project_value_buffer(v19, (uint64_t)qword_1EF6DC630);
        sub_1C1338F24((uint64_t)v8, v18, v16);
        v20 = sub_1C1426848();
        v21 = sub_1C1426C80();
        if (os_log_type_enabled(v20, v21))
        {
          v22 = swift_slowAlloc();
          v23 = swift_slowAlloc();
          v34 = v23;
          *(_DWORD *)v22 = v30;
          v24 = *v33;
          v25 = v16;
          v26 = v33[1];
          swift_bridgeObjectRetain();
          v27 = v24;
          v18 = (uint64_t)v33;
          *(_QWORD *)(v22 + 4) = sub_1C132AD90(v27, v26, &v34);
          v16 = v25;
          swift_bridgeObjectRelease();
          sub_1C1339004(v18, v25);
          _os_log_impl(&dword_1C1324000, v20, v21, "Ending activity because frequent push permission was revoked: %{public}s", (uint8_t *)v22, 0xCu);
          swift_arrayDestroy();
          v15 = v32;
          MEMORY[0x1C3BAD3F4](v23, -1, -1);
          v28 = v22;
          p_base_meths = (__objc2_meth_list **)(&PresentationObservationServiceClient + 32);
          MEMORY[0x1C3BAD3F4](v28, -1, -1);
        }
        else
        {
          sub_1C1339004(v18, v16);
        }

        sub_1C13D0788((uint64_t)v8);
        sub_1C1339004((uint64_t)v8, v16);
        v14 += v15;
        --v12;
      }
      while (v12);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1C13833DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  int64_t v29;
  int64_t v30;
  _QWORD *v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  int64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  _QWORD *v59;
  char *v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  int64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  _QWORD *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int64_t v91;
  uint64_t v92;
  uint64_t *v93;
  int64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  int64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;

  v84 = a3;
  v87 = type metadata accessor for ActivityParticipantEvent(0);
  v86 = *(_QWORD *)(v87 - 8);
  v5 = MEMORY[0x1E0C80A78](v87);
  v99 = (uint64_t)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v80 - v7;
  v9 = sub_1C1425AEC();
  v108 = *(_QWORD *)(v9 - 8);
  v109 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1C1425A08();
  MEMORY[0x1E0C80A78](v12);
  v107 = (uint64_t)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = type metadata accessor for Activity();
  v105 = *(_QWORD *)(v113 - 8);
  MEMORY[0x1E0C80A78](v113);
  v15 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7939E0);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (uint64_t *)((char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v80 - v20;
  v22 = sub_1C1425630();
  MEMORY[0x1E0C80A78](v22);
  v97 = sub_1C142557C();
  v96 = *(_QWORD *)(v97 - 8);
  MEMORY[0x1E0C80A78](v97);
  v24 = (char *)&v80 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1425624();
  v95 = v24;
  sub_1C1425570();
  v25 = *(_QWORD *)(a1 + 64);
  v100 = a1 + 64;
  v26 = 1 << *(_BYTE *)(a1 + 32);
  if (v26 < 64)
    v27 = ~(-1 << v26);
  else
    v27 = -1;
  v101 = v27 & v25;
  v88 = a2;
  swift_bridgeObjectRetain();
  v93 = (uint64_t *)(a2 + 72);
  result = swift_beginAccess();
  v29 = 0;
  v30 = (unint64_t)(v26 + 63) >> 6;
  v98 = v8;
  v85 = v8 + 16;
  v31 = v21;
  v102 = MEMORY[0x1E0DEE9D8];
  v92 = a1;
  v91 = v30;
LABEL_6:
  v32 = v101;
  while (v32)
  {
    v33 = __clz(__rbit64(v32));
    v32 &= v32 - 1;
    v34 = v33 | (v29 << 6);
LABEL_8:
    if ((*(_BYTE *)(*(_QWORD *)(a1 + 56) + v34) & 1) == 0)
    {
      v101 = v32;
      v94 = v29;
      v38 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v34);
      v39 = v38[1];
      v112 = *v38;
      v40 = *v93;
      v41 = *(_QWORD *)(*v93 + 64);
      v103 = *v93 + 64;
      v42 = 1 << *(_BYTE *)(v40 + 32);
      if (v42 < 64)
        v43 = ~(-1 << v42);
      else
        v43 = -1;
      v115 = v43 & v41;
      v44 = (unint64_t)(v42 + 63) >> 6;
      v81 = v44 - 1;
      v111 = v39;
      swift_bridgeObjectRetain();
      result = swift_bridgeObjectRetain();
      v45 = 0;
      v104 = v44;
      v82 = v44 - 5;
      v106 = v40;
      v83 = v40 + 104;
      v46 = v115;
      if (!v115)
      {
LABEL_39:
        v64 = v45 + 1;
        if (!__OFADD__(v45, 1))
        {
          if (v64 >= v104)
          {
            v66 = v45;
          }
          else
          {
            v65 = *(_QWORD *)(v103 + 8 * v64);
            if (v65)
            {
LABEL_42:
              v115 = (v65 - 1) & v65;
              v48 = __clz(__rbit64(v65)) + (v64 << 6);
              v45 = v64;
              goto LABEL_33;
            }
            v66 = v45 + 1;
            if ((uint64_t)(v45 + 2) < v104)
            {
              v65 = *(_QWORD *)(v103 + 8 * (v45 + 2));
              if (v65)
              {
                v64 = v45 + 2;
                goto LABEL_42;
              }
              v66 = v45 + 2;
              if ((uint64_t)(v45 + 3) < v104)
              {
                v65 = *(_QWORD *)(v103 + 8 * (v45 + 3));
                if (v65)
                {
                  v64 = v45 + 3;
                  goto LABEL_42;
                }
                v64 = v45 + 4;
                v66 = v45 + 3;
                if ((uint64_t)(v45 + 4) < v104)
                {
                  v65 = *(_QWORD *)(v103 + 8 * v64);
                  if (v65)
                    goto LABEL_42;
                  while (v82 != v45)
                  {
                    v65 = *(_QWORD *)(v83 + 8 * v45++);
                    if (v65)
                    {
                      v64 = v45 + 4;
                      goto LABEL_42;
                    }
                  }
                  v66 = v81;
                }
              }
            }
          }
          v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
          (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v19, 1, 1, v67);
          v115 = 0;
          v45 = v66;
          goto LABEL_45;
        }
LABEL_64:
        __break(1u);
        goto LABEL_65;
      }
      while (1)
      {
        v115 = (v46 - 1) & v46;
        v48 = __clz(__rbit64(v46)) | (v45 << 6);
LABEL_33:
        v49 = *(_QWORD *)(v106 + 56);
        v50 = (_QWORD *)(*(_QWORD *)(v106 + 48) + 16 * v48);
        v51 = v50[1];
        *v19 = *v50;
        v19[1] = v51;
        v52 = v49 + *(_QWORD *)(v105 + 72) * v48;
        v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
        sub_1C1338F24(v52, (uint64_t)v19 + *(int *)(v53 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v19, 0, 1, v53);
        swift_bridgeObjectRetain();
LABEL_45:
        sub_1C1384014((uint64_t)v19, (uint64_t)v31);
        v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 48))(v31, 1, v68) == 1)
        {
          swift_bridgeObjectRelease();
          result = swift_release();
          a1 = v92;
          v30 = v91;
          v29 = v94;
          goto LABEL_6;
        }
        v114 = v45;
        v69 = v19;
        v70 = v31[1];
        v110 = *v31;
        v71 = v31;
        sub_1C1339140((uint64_t)v31 + *(int *)(v68 + 48), (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        v72 = v15;
        v73 = v107;
        sub_1C1338F24((uint64_t)&v15[*(int *)(v113 + 24)], v107, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
        v75 = v108;
        v74 = v109;
        (*(void (**)(char *, uint64_t, uint64_t))(v108 + 32))(v11, v73, v109);
        v76 = sub_1C1425A80();
        v78 = v77;
        (*(void (**)(char *, uint64_t))(v75 + 8))(v11, v74);
        if (v76 == v112 && v78 == v111)
        {
          swift_bridgeObjectRelease();
          v15 = v72;
        }
        else
        {
          v79 = sub_1C1427064();
          swift_bridgeObjectRelease();
          v15 = v72;
          if ((v79 & 1) == 0)
            goto LABEL_31;
        }
        v47 = *(_QWORD *)&v15[*(int *)(v113 + 28)];
        if (*(_QWORD *)(v47 + 16))
        {
          v54 = sub_1C1425558();
          v90 = *(_QWORD *)(v54 - 8);
          v89 = v47 + ((*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80));
          v55 = (int *)v87;
          v56 = v98;
          (*(void (**)(char *, char *, uint64_t))(v96 + 16))(&v98[*(int *)(v87 + 24)], v95, v97);
          type metadata accessor for ActivityParticipantEvent.EventType(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, uint64_t, uint64_t))(v90 + 16))(&v56[v55[7]], v89, v54);
          v57 = &v56[v55[9]];
          v58 = sub_1C1425450();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v57, 1, 1, v58);
          *(_QWORD *)v56 = v110;
          *((_QWORD *)v56 + 1) = v70;
          v59 = v85;
          *v85 = 0;
          v59[1] = 0;
          v60 = &v56[v55[8]];
          *(_QWORD *)v60 = v88;
          *((_QWORD *)v60 + 1) = &off_1E7A8B7F8;
          v56[v55[10]] = 0;
          sub_1C1338F24((uint64_t)v56, v99, type metadata accessor for ActivityParticipantEvent);
          swift_retain();
          v19 = v69;
          v31 = v71;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v102 = sub_1C136C8A8(0, *(_QWORD *)(v102 + 16) + 1, 1, v102);
          v45 = v114;
          v62 = *(_QWORD *)(v102 + 16);
          v61 = *(_QWORD *)(v102 + 24);
          if (v62 >= v61 >> 1)
            v102 = sub_1C136C8A8(v61 > 1, v62 + 1, 1, v102);
          v63 = v102;
          *(_QWORD *)(v102 + 16) = v62 + 1;
          sub_1C1339140(v99, v63+ ((*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80))+ *(_QWORD *)(v86 + 72) * v62, type metadata accessor for ActivityParticipantEvent);
          sub_1C1339004((uint64_t)v98, type metadata accessor for ActivityParticipantEvent);
          result = sub_1C1339004((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
          v46 = v115;
          if (!v115)
            goto LABEL_39;
        }
        else
        {
LABEL_31:
          sub_1C1339004((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
          result = swift_bridgeObjectRelease();
          v19 = v69;
          v31 = v71;
          v45 = v114;
          v46 = v115;
          if (!v115)
            goto LABEL_39;
        }
      }
    }
  }
  v35 = v29 + 1;
  if (__OFADD__(v29, 1))
  {
    __break(1u);
    goto LABEL_64;
  }
  if (v35 >= v30)
    goto LABEL_62;
  v36 = *(_QWORD *)(v100 + 8 * v35);
  ++v29;
  if (v36)
    goto LABEL_23;
  v29 = v35 + 1;
  if (v35 + 1 >= v30)
    goto LABEL_62;
  v36 = *(_QWORD *)(v100 + 8 * v29);
  if (v36)
    goto LABEL_23;
  v29 = v35 + 2;
  if (v35 + 2 >= v30)
    goto LABEL_62;
  v36 = *(_QWORD *)(v100 + 8 * v29);
  if (v36)
  {
LABEL_23:
    v32 = (v36 - 1) & v36;
    v34 = __clz(__rbit64(v36)) + (v29 << 6);
    goto LABEL_8;
  }
  v37 = v35 + 3;
  if (v37 >= v30)
  {
LABEL_62:
    swift_release();
    result = (*(uint64_t (**)(char *, uint64_t))(v96 + 8))(v95, v97);
    *v84 = v102;
    return result;
  }
  v36 = *(_QWORD *)(v100 + 8 * v37);
  if (v36)
  {
    v29 = v37;
    goto LABEL_23;
  }
  while (1)
  {
    v29 = v37 + 1;
    if (__OFADD__(v37, 1))
      break;
    if (v29 >= v30)
      goto LABEL_62;
    v36 = *(_QWORD *)(v100 + 8 * v29);
    ++v37;
    if (v36)
      goto LABEL_23;
  }
LABEL_65:
  __break(1u);
  return result;
}

uint64_t sub_1C1383D90()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C1339040(v0 + 80);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FrequentPushParticipant()
{
  return objc_opt_self();
}

uint64_t sub_1C1383DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v4;

  v4 = *(os_unfair_lock_s **)(*(_QWORD *)(v2 + 16) + 16);
  os_unfair_lock_lock(v4);
  *(_QWORD *)(v2 + 88) = a2;
  swift_unknownObjectWeakAssign();
  os_unfair_lock_unlock(v4);
  return swift_unknownObjectRelease();
}

uint64_t sub_1C1383E48()
{
  return 1;
}

void sub_1C1383E50(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797560);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *((unsigned __int8 *)a1 + *(int *)(type metadata accessor for ActivityManagerEvent(0) + 20));
  if (v8 == 3)
  {
    v13 = *(os_unfair_lock_s **)(*(_QWORD *)(v2 + 16) + 16);
    os_unfair_lock_lock(v13);
    v19 = *a1;
    v18 = a1[1];
    v20 = type metadata accessor for Activity();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v7, 1, 1, v20);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v15 = (uint64_t)v7;
    v16 = v19;
    v17 = v18;
  }
  else
  {
    if (v8)
      return;
    v9 = *a1;
    v10 = a1[1];
    v11 = *(os_unfair_lock_s **)(*(_QWORD *)(a2 + 16) + 16);
    os_unfair_lock_lock(v11);
    v12 = swift_retain();
    sub_1C13719F8(v12, v9, v10, a2);
    swift_release();
    os_unfair_lock_unlock(v11);
    v13 = *(os_unfair_lock_s **)(*(_QWORD *)(v2 + 16) + 16);
    os_unfair_lock_lock(v13);
    sub_1C1338F24((uint64_t)a1, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    v14 = type metadata accessor for Activity();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v7, 0, 1, v14);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v15 = (uint64_t)v7;
    v16 = v9;
    v17 = v10;
  }
  sub_1C13B396C(v15, v16, v17);
  swift_endAccess();
  os_unfair_lock_unlock(v13);
}

uint64_t sub_1C1384014(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7939E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1C1384064@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

void sub_1C1384084(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_1C1384090()
{
  sub_1C14270E8();
  sub_1C14270F4();
  return sub_1C1427100();
}

uint64_t sub_1C13840DC()
{
  return sub_1C14270F4();
}

uint64_t sub_1C1384110()
{
  sub_1C14270E8();
  sub_1C14270F4();
  return sub_1C1427100();
}

_QWORD *sub_1C1384158@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 2)
    v2 = 1;
  else
    v2 = 2;
  if (*result == 1)
    v3 = 0;
  else
    v3 = v2;
  *a2 = v3;
  return result;
}

void sub_1C1384178(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 1;
  if (*v1)
    v2 = 2;
  *a1 = v2;
}

unint64_t sub_1C1384190()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793A60);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1429000;
  *(_QWORD *)(inited + 32) = 0x6D617473656D6974;
  *(_QWORD *)(inited + 40) = 0xE900000000000070;
  v2 = sub_1C1425138();
  v3 = sub_1C1330EEC(0, &qword_1ED791F10);
  *(_QWORD *)(inited + 48) = v2;
  *(_QWORD *)(inited + 72) = v3;
  *(_QWORD *)(inited + 80) = 0x4449656C646E7562;
  *(_QWORD *)(inited + 88) = 0xE800000000000000;
  v4 = (int *)type metadata accessor for PowerLog.LifecycleEvent(0);
  v5 = sub_1C1426A7C();
  v6 = sub_1C1330EEC(0, (unint64_t *)&qword_1ED791F18);
  *(_QWORD *)(inited + 96) = v5;
  *(_QWORD *)(inited + 120) = v6;
  *(_QWORD *)(inited + 128) = 0xD000000000000012;
  *(_QWORD *)(inited + 136) = 0x80000001C142D470;
  *(_QWORD *)(inited + 144) = sub_1C1426A7C();
  *(_QWORD *)(inited + 168) = v6;
  *(_QWORD *)(inited + 176) = 0x656372756F73;
  *(_QWORD *)(inited + 184) = 0xE600000000000000;
  v7 = MEMORY[0x1E0DEB418];
  *(_QWORD *)(inited + 192) = *(unsigned __int8 *)(v0 + v4[7]);
  *(_QWORD *)(inited + 216) = v7;
  *(_QWORD *)(inited + 224) = 0x707954746E657665;
  *(_QWORD *)(inited + 232) = 0xE900000000000065;
  v8 = 1;
  if (*(_BYTE *)(v0 + v4[8]))
    v8 = 2;
  *(_QWORD *)(inited + 240) = v8;
  *(_QWORD *)(inited + 264) = v7;
  strcpy((char *)(inited + 272), "updateBudget");
  *(_BYTE *)(inited + 285) = 0;
  *(_WORD *)(inited + 286) = -5120;
  v9 = *(_QWORD *)(v0 + v4[9]);
  *(_QWORD *)(inited + 312) = v7;
  *(_QWORD *)(inited + 288) = v9;
  return sub_1C133204C(inited);
}

BOOL sub_1C1384350(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1C1384368()
{
  sub_1C14270E8();
  sub_1C14270F4();
  return sub_1C1427100();
}

uint64_t sub_1C13843B8()
{
  return sub_1C14270F4();
}

uint64_t sub_1C13843F0()
{
  sub_1C14270E8();
  sub_1C14270F4();
  return sub_1C1427100();
}

_QWORD *sub_1C138443C@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 10)
    v2 = 1;
  else
    v2 = 2;
  if (*result == 5)
    v3 = 0;
  else
    v3 = v2;
  *a2 = v3;
  return result;
}

void sub_1C138445C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 5;
  if (*v1)
    v2 = 10;
  *a1 = v2;
}

uint64_t sub_1C1384478()
{
  sub_1C14270E8();
  sub_1C14270F4();
  return sub_1C1427100();
}

uint64_t sub_1C13844BC()
{
  return sub_1C14270F4();
}

uint64_t sub_1C13844E8()
{
  sub_1C14270E8();
  sub_1C14270F4();
  return sub_1C1427100();
}

_QWORD *sub_1C1384528@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;

  if (*result >= 4uLL)
    v2 = 3;
  else
    v2 = 0x2010003u >> (8 * *result);
  *a2 = v2;
  return result;
}

void sub_1C1384550(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1 + 1;
}

unint64_t sub_1C1384560()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t v3;
  int *updated;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793A60);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1429010;
  *(_QWORD *)(inited + 32) = 0x6D617473656D6974;
  *(_QWORD *)(inited + 40) = 0xE900000000000070;
  v2 = sub_1C1425138();
  v3 = sub_1C1330EEC(0, &qword_1ED791F10);
  *(_QWORD *)(inited + 48) = v2;
  *(_QWORD *)(inited + 72) = v3;
  *(_QWORD *)(inited + 80) = 0xD000000000000012;
  *(_QWORD *)(inited + 88) = 0x80000001C142D470;
  updated = (int *)type metadata accessor for PowerLog.UpdateEvent(0);
  v5 = sub_1C1426A7C();
  v6 = sub_1C1330EEC(0, (unint64_t *)&qword_1ED791F18);
  *(_QWORD *)(inited + 96) = v5;
  *(_QWORD *)(inited + 120) = v6;
  *(_QWORD *)(inited + 128) = 0x4449656C646E7562;
  *(_QWORD *)(inited + 136) = 0xE800000000000000;
  *(_QWORD *)(inited + 144) = sub_1C1426A7C();
  *(_QWORD *)(inited + 168) = v6;
  *(_QWORD *)(inited + 176) = 0x656372756F73;
  *(_QWORD *)(inited + 184) = 0xE600000000000000;
  v7 = MEMORY[0x1E0DEB418];
  *(_QWORD *)(inited + 192) = *(unsigned __int8 *)(v0 + updated[7]);
  *(_QWORD *)(inited + 216) = v7;
  strcpy((char *)(inited + 224), "pushPriority");
  *(_BYTE *)(inited + 237) = 0;
  *(_WORD *)(inited + 238) = -5120;
  v8 = 5;
  if (*(_BYTE *)(v0 + updated[8]))
    v8 = 10;
  *(_QWORD *)(inited + 240) = v8;
  *(_QWORD *)(inited + 264) = v7;
  *(_QWORD *)(inited + 272) = 0x7472656C417369;
  *(_QWORD *)(inited + 280) = 0xE700000000000000;
  v9 = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(inited + 288) = *(_BYTE *)(v0 + updated[9]);
  *(_QWORD *)(inited + 312) = v9;
  *(_QWORD *)(inited + 320) = 0x6574617473;
  *(_QWORD *)(inited + 328) = 0xE500000000000000;
  *(_QWORD *)(inited + 336) = *(unsigned __int8 *)(v0 + updated[10]) + 1;
  *(_QWORD *)(inited + 360) = v7;
  *(_QWORD *)(inited + 368) = 0x6E6F73616572;
  *(_QWORD *)(inited + 376) = 0xE600000000000000;
  v10 = *(unsigned __int8 *)(v0 + updated[12]);
  *(_QWORD *)(inited + 408) = v7;
  *(_QWORD *)(inited + 384) = v10;
  return sub_1C133204C(inited);
}

uint64_t type metadata accessor for PowerLog.UpdateEvent(uint64_t a1)
{
  return sub_1C138479C(a1, qword_1ED7975C0);
}

uint64_t type metadata accessor for PowerLog.LifecycleEvent(uint64_t a1)
{
  return sub_1C138479C(a1, qword_1ED797670);
}

uint64_t sub_1C138479C(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

_QWORD *sub_1C13847D0(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C14251B0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (_QWORD *)((char *)a1 + v9);
    v14 = (_QWORD *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)a1 + v16) = *((_BYTE *)a2 + v16);
    v17 = a3[10];
    *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
    *((_BYTE *)a1 + v17) = *((_BYTE *)a2 + v17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1C13848A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1C14251B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v15) = *(_BYTE *)(a2 + v15);
  v16 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C1384950(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v6 = sub_1C14251B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_1C1384A28(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_1C14251B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v9 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9);
  return a1;
}

uint64_t sub_1C1384AB4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_1C14251B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  v18 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v18) = *(_BYTE *)(a2 + v18);
  return a1;
}

uint64_t sub_1C1384B64()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C1384B74()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C1384B84()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C14251B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_1C1384C14(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C14251B0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (_QWORD *)((char *)a1 + v9);
    v14 = (_QWORD *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)a1 + v16) = *((_BYTE *)a2 + v16);
    v17 = a3[10];
    *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    *((_BYTE *)a1 + v17) = *((_BYTE *)a2 + v17);
    v18 = a3[12];
    *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    *((_BYTE *)a1 + v18) = *((_BYTE *)a2 + v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1C1384CFC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C14251B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1384D54(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1C14251B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v15) = *(_BYTE *)(a2 + v15);
  v16 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  v17 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C1384E10(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v6 = sub_1C14251B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  return a1;
}

uint64_t sub_1C1384F00(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1C14251B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v9 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v9) = *(_BYTE *)(a2 + v9);
  v10 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v10) = *(_BYTE *)(a2 + v10);
  return a1;
}

uint64_t sub_1C1384FA0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1C14251B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  v18 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v18) = *(_BYTE *)(a2 + v18);
  v19 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + v19) = *(_BYTE *)(a2 + v19);
  return a1;
}

uint64_t sub_1C1385064()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1C14251B0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1C13850F4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1C14251B0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1C1385180()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C14251B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for PowerLog.Reason()
{
  return &type metadata for PowerLog.Reason;
}

uint64_t storeEnumTagSinglePayload for PowerLog.UpdateEvent.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1C1385274 + 4 * byte_1C1429025[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1C13852A8 + 4 * byte_1C1429020[v4]))();
}

uint64_t sub_1C13852A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C13852B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C13852B8);
  return result;
}

uint64_t sub_1C13852C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C13852CCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1C13852D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C13852D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PowerLog.UpdateEvent.State()
{
  return &type metadata for PowerLog.UpdateEvent.State;
}

_BYTE *sub_1C13852F4(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for PowerLog.UpdateEvent.PushPriority()
{
  return &type metadata for PowerLog.UpdateEvent.PushPriority;
}

ValueMetadata *type metadata accessor for PowerLog.LifecycleEvent.EventType()
{
  return &type metadata for PowerLog.LifecycleEvent.EventType;
}

ValueMetadata *type metadata accessor for PowerLog()
{
  return &type metadata for PowerLog;
}

uint64_t getEnumTagSinglePayload for Activity.CreationSource(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s11SessionCore8PowerLogO6SourceOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C138540C + 4 * byte_1C142902F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C1385440 + 4 * byte_1C142902A[v4]))();
}

uint64_t sub_1C1385440(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C1385448(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C1385450);
  return result;
}

uint64_t sub_1C138545C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C1385464);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C1385468(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C1385470(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PowerLog.Source()
{
  return &type metadata for PowerLog.Source;
}

unint64_t sub_1C1385490()
{
  unint64_t result;

  result = qword_1EF6DB2B0;
  if (!qword_1EF6DB2B0)
  {
    result = MEMORY[0x1C3BAD334](&unk_1C1429164, &type metadata for PowerLog.Source);
    atomic_store(result, (unint64_t *)&qword_1EF6DB2B0);
  }
  return result;
}

unint64_t sub_1C13854D8()
{
  unint64_t result;

  result = qword_1EF6DB2B8;
  if (!qword_1EF6DB2B8)
  {
    result = MEMORY[0x1C3BAD334](&unk_1C1429204, &type metadata for PowerLog.LifecycleEvent.EventType);
    atomic_store(result, (unint64_t *)&qword_1EF6DB2B8);
  }
  return result;
}

unint64_t sub_1C1385520()
{
  unint64_t result;

  result = qword_1EF6DB2C0;
  if (!qword_1EF6DB2C0)
  {
    result = MEMORY[0x1C3BAD334](&unk_1C14292A4, &type metadata for PowerLog.UpdateEvent.PushPriority);
    atomic_store(result, (unint64_t *)&qword_1EF6DB2C0);
  }
  return result;
}

unint64_t sub_1C1385568()
{
  unint64_t result;

  result = qword_1EF6DB2C8;
  if (!qword_1EF6DB2C8)
  {
    result = MEMORY[0x1C3BAD334](&unk_1C1429344, &type metadata for PowerLog.UpdateEvent.State);
    atomic_store(result, (unint64_t *)&qword_1EF6DB2C8);
  }
  return result;
}

unint64_t sub_1C13855B0()
{
  unint64_t result;

  result = qword_1EF6DB2D0;
  if (!qword_1EF6DB2D0)
  {
    result = MEMORY[0x1C3BAD334](&unk_1C14293E4, &type metadata for PowerLog.Reason);
    atomic_store(result, (unint64_t *)&qword_1EF6DB2D0);
  }
  return result;
}

id sub_1C138560C(void *a1)
{
  objc_msgSend(a1, sel_selector);
  if ((sub_1C142524C() & 1) != 0)
    return objc_msgSend(a1, sel_copyAsOnewayVoid);
  else
    return a1;
}

uint64_t sub_1C1385660(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  void *v5;
  os_unfair_lock_s *v6;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  result = MEMORY[0x1C3BAD4B4](v3);
  if (result)
  {
    v5 = (void *)result;
    v6 = *(os_unfair_lock_s **)(*(_QWORD *)(result
                                          + OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceServer_lock)
                              + 16);
    swift_retain();
    os_unfair_lock_lock(v6);
    sub_1C13856F4((uint64_t)v5, v2);
    os_unfair_lock_unlock(v6);

    return swift_release();
  }
  return result;
}

uint64_t sub_1C13856F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  int isUniquelyReferenced_nonNull_native;
  _QWORD *v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  char v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  int64_t v47;
  int64_t v48;
  unint64_t v49;
  unint64_t v50;
  id v51;
  uint64_t v52;
  int64_t v53;
  unint64_t v54;
  int64_t v55;
  uint64_t result;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  uint64_t v63;
  _QWORD *v64;

  v4 = sub_1C14259A8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v57 - v9;
  v11 = (_QWORD *)(a1 + OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceServer__lock_presentations);
  swift_beginAccess();
  *v11 = MEMORY[0x1E0DEE9E0];
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 16);
  if (v12)
  {
    v57 = a2;
    v58 = a1;
    v13 = (char *)(a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));
    v14 = *(_QWORD *)(v5 + 72);
    v62 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v60 = v14;
    v61 = v5;
    v59 = v10;
    do
    {
      v63 = v12;
      v17 = v11;
      v18 = v62;
      v62(v10, v13, v4);
      v19 = sub_1C142599C();
      v20 = v10;
      v22 = v21;
      swift_beginAccess();
      v23 = v8;
      v24 = v8;
      v25 = v4;
      v18(v24, v20, v4);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v64 = (_QWORD *)*v17;
      v27 = v64;
      v11 = v17;
      *v17 = 0x8000000000000000;
      v29 = sub_1C13277A0(v19, v22);
      v30 = v27[2];
      v31 = (v28 & 1) == 0;
      v32 = v30 + v31;
      if (__OFADD__(v30, v31))
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      v33 = v28;
      if (v27[3] >= v32)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1C13BB808();
      }
      else
      {
        sub_1C13BF278(v32, isUniquelyReferenced_nonNull_native);
        v34 = sub_1C13277A0(v19, v22);
        if ((v33 & 1) != (v35 & 1))
          goto LABEL_40;
        v29 = v34;
      }
      v4 = v25;
      v36 = v64;
      v8 = v23;
      if ((v33 & 1) != 0)
      {
        v16 = v60;
        v15 = v61;
        (*(void (**)(unint64_t, char *, uint64_t))(v61 + 40))(v64[7] + v29 * v60, v23, v4);
      }
      else
      {
        v64[(v29 >> 6) + 8] |= 1 << v29;
        v37 = (uint64_t *)(v36[6] + 16 * v29);
        *v37 = v19;
        v37[1] = v22;
        v16 = v60;
        v15 = v61;
        (*(void (**)(unint64_t, char *, uint64_t))(v61 + 32))(v36[7] + v29 * v60, v23, v4);
        v38 = v36[2];
        v39 = __OFADD__(v38, 1);
        v40 = v38 + 1;
        if (v39)
          goto LABEL_38;
        v36[2] = v40;
        swift_bridgeObjectRetain();
      }
      *v11 = v64;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      v10 = v59;
      (*(void (**)(char *, uint64_t))(v15 + 8))(v59, v4);
      v13 += v16;
      v12 = v63 - 1;
    }
    while (v63 != 1);
    swift_bridgeObjectRelease();
    a1 = v58;
  }
  v41 = (uint64_t *)(a1 + OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceServer__lock_clients);
  swift_beginAccess();
  v42 = *v41;
  v43 = *v41 + 64;
  v44 = 1 << *(_BYTE *)(*v41 + 32);
  v45 = -1;
  if (v44 < 64)
    v45 = ~(-1 << v44);
  v46 = v45 & *(_QWORD *)(*v41 + 64);
  v47 = (unint64_t)(v44 + 63) >> 6;
  swift_bridgeObjectRetain();
  v48 = 0;
  while (1)
  {
    if (v46)
    {
      v49 = __clz(__rbit64(v46));
      v46 &= v46 - 1;
      v50 = v49 | (v48 << 6);
      goto LABEL_19;
    }
    v53 = v48 + 1;
    if (__OFADD__(v48, 1))
      goto LABEL_37;
    if (v53 >= v47)
      return swift_release();
    v54 = *(_QWORD *)(v43 + 8 * v53);
    ++v48;
    if (!v54)
    {
      v48 = v53 + 1;
      if (v53 + 1 >= v47)
        return swift_release();
      v54 = *(_QWORD *)(v43 + 8 * v48);
      if (!v54)
      {
        v48 = v53 + 2;
        if (v53 + 2 >= v47)
          return swift_release();
        v54 = *(_QWORD *)(v43 + 8 * v48);
        if (!v54)
          break;
      }
    }
LABEL_34:
    v46 = (v54 - 1) & v54;
    v50 = __clz(__rbit64(v54)) + (v48 << 6);
LABEL_19:
    v51 = *(id *)(*(_QWORD *)(v42 + 56) + 8 * v50);
    v52 = swift_bridgeObjectRetain();
    sub_1C1386220(v52);

    swift_bridgeObjectRelease();
  }
  v55 = v53 + 3;
  if (v55 >= v47)
    return swift_release();
  v54 = *(_QWORD *)(v43 + 8 * v55);
  if (v54)
  {
    v48 = v55;
    goto LABEL_34;
  }
  while (1)
  {
    v48 = v55 + 1;
    if (__OFADD__(v55, 1))
      break;
    if (v48 >= v47)
      return swift_release();
    v54 = *(_QWORD *)(v43 + 8 * v48);
    ++v55;
    if (v54)
      goto LABEL_34;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  result = sub_1C142707C();
  __break(1u);
  return result;
}

id sub_1C1385B38(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v10;

  v4 = sub_1C1425EDC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  sub_1C1425810();
  sub_1C1426D70();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1C1425804();
  v8 = (void *)sub_1C1426A7C();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setService_, v8);

  return objc_msgSend(a1, sel_setDelegate_, a2);
}

void sub_1C1385C18(void *a1, uint64_t a2, char *a3, int a4)
{
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  char *v19;
  uint64_t v20;
  void *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;

  sub_1C1425804();
  v8 = (void *)sub_1C1426A7C();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithIdentifier_, v8);

  v27 = sub_1C138560C;
  v28 = 0;
  v10 = MEMORY[0x1E0C809B0];
  v23 = MEMORY[0x1E0C809B0];
  v24 = 1107296256;
  v25 = sub_1C13284C8;
  v26 = &block_descriptor_13_1;
  v11 = _Block_copy(&v23);
  v12 = &unk_1EF6E3110;
  swift_release();
  v13 = (void *)objc_opt_self();
  v14 = objc_msgSend(v13, sel_protocolForProtocol_interpreter_, v12, v11);

  _Block_release(v11);
  objc_msgSend(v9, sel_setClient_, v14);

  v15 = objc_msgSend(v13, sel_protocolForProtocol_, &unk_1EF6E0710);
  objc_msgSend(v9, sel_setServer_, v15);

  v16 = objc_msgSend((id)objc_opt_self(), sel_userInitiated);
  objc_msgSend(a1, sel_setServiceQuality_, v16);

  objc_msgSend(a1, sel_setInterface_, v9);
  objc_msgSend(a1, sel_setInterfaceTarget_, a2);
  objc_msgSend(a1, sel_setTargetQueue_, *(_QWORD *)&a3[OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceServer_requestProcessingQueue]);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a3;
  *(_DWORD *)(v17 + 24) = a4;
  v27 = sub_1C1387218;
  v28 = v17;
  v23 = v10;
  v24 = 1107296256;
  v25 = sub_1C141AFCC;
  v26 = &block_descriptor_19_0;
  v18 = _Block_copy(&v23);
  v19 = a3;
  swift_release();
  objc_msgSend(a1, sel_setInterruptionHandler_, v18);
  _Block_release(v18);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v19;
  *(_DWORD *)(v20 + 24) = a4;
  v27 = sub_1C138723C;
  v28 = v20;
  v23 = v10;
  v24 = 1107296256;
  v25 = sub_1C141AFCC;
  v26 = &block_descriptor_25_0;
  v21 = _Block_copy(&v23);
  v22 = v19;
  swift_release();
  objc_msgSend(a1, sel_setInvalidationHandler_, v21);
  _Block_release(v21);

}

void sub_1C1385F1C(uint64_t a1, uint64_t a2, unsigned int a3, const char *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  os_unfair_lock_s *v14;
  uint64_t *v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  void *v21;
  uint64_t v22;

  v7 = sub_1C1426854();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C142683C();
  v11 = sub_1C1426848();
  v12 = sub_1C1426C68();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_1C1324000, v11, v12, a4, v13, 2u);
    MEMORY[0x1C3BAD3F4](v13, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v14 = *(os_unfair_lock_s **)(*(_QWORD *)(a2 + OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceServer_lock)
                             + 16);
  os_unfair_lock_lock(v14);
  v15 = (uint64_t *)(a2 + OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceServer__lock_clients);
  swift_beginAccess();
  v16 = sub_1C1327378(a3);
  if ((v17 & 1) != 0)
  {
    v18 = v16;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v20 = *v15;
    v22 = *v15;
    *v15 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1C13BB81C();
      v20 = v22;
    }
    v21 = *(void **)(*(_QWORD *)(v20 + 56) + 8 * v18);
    sub_1C13C11F8(v18, v20);
    *v15 = v20;

    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  os_unfair_lock_unlock(v14);
}

id sub_1C138617C(uint64_t a1)
{
  return sub_1C1359EC8(a1, type metadata accessor for PresentationObservationServiceServer);
}

uint64_t type metadata accessor for PresentationObservationServiceServer()
{
  return objc_opt_self();
}

uint64_t sub_1C1386220(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  os_unfair_lock_s *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v24;
  char *v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  void *v33;
  _BYTE *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD aBlock[3];
  void *v39;
  uint64_t (*v40)(uint64_t);
  uint64_t v41;
  void *v42;
  _OWORD v43[2];

  v2 = v1;
  v4 = sub_1C1426854();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C14255AC();
  v36 = *(_QWORD *)(v8 - 8);
  v37 = v8;
  MEMORY[0x1E0C80A78](v8);
  v35 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6DB448);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1C14256FC();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceClient_connection], sel_remoteTarget))
  {
    sub_1C1426DE8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v43, 0, sizeof(v43));
  }
  sub_1C1330398((uint64_t)v43, (uint64_t)aBlock);
  if (v39)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DB458);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v17 = v42;
      v18 = *(os_unfair_lock_s **)(*(_QWORD *)&v2[OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceClient_lock]
                                 + 16);
      os_unfair_lock_lock(v18);
      v19 = (uint64_t)&v2[OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceClient__lock_predicate];
      swift_beginAccess();
      sub_1C1386CA4(v19, (uint64_t)v12);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
      {
        sub_1C132C860((uint64_t)v12, (uint64_t *)&unk_1EF6DB448);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
        if ((v2[OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceClient__lock_pendingAck] & 1) == 0)
        {
          v2[OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceClient__lock_pendingAck] = 1;
          v24 = sub_1C14256F0();
          (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
          os_unfair_lock_unlock(v18);
          if (v24)
          {
            swift_bridgeObjectRetain();
            v25 = v35;
            sub_1C14255A0();
            sub_1C1329AD0(&qword_1EF6DB460, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F888], MEMORY[0x1E0C8F880]);
            v26 = (void *)sub_1C1425BB8();
            v27 = sub_1C14250D8();
            v29 = v28;

            sub_1C1425F0C();
            swift_allocObject();
            v30 = sub_1C1425EF4();
            v31 = (void *)sub_1C14250CC();
            v32 = swift_allocObject();
            *(_QWORD *)(v32 + 16) = v2;
            *(_QWORD *)(v32 + 24) = v30;
            v40 = sub_1C1386D18;
            v41 = v32;
            aBlock[0] = MEMORY[0x1E0C809B0];
            aBlock[1] = 1107296256;
            aBlock[2] = sub_1C13DCF7C;
            v39 = &block_descriptor_8;
            v33 = _Block_copy(aBlock);
            v34 = v2;
            swift_retain();
            swift_release();
            objc_msgSend(v17, sel_activityPresentationsDidChange_completion_, v31, v33);
            sub_1C13282B4(v27, v29);
            _Block_release(v33);
            swift_release();
            swift_unknownObjectRelease();

            (*(void (**)(char *, uint64_t))(v36 + 8))(v25, v37);
            return swift_bridgeObjectRelease();
          }
          return swift_unknownObjectRelease();
        }
        *(_QWORD *)&v2[OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceClient__lock_bufferedPresentationUpdate] = a1;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      }
      os_unfair_lock_unlock(v18);
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    sub_1C132C860((uint64_t)aBlock, (uint64_t *)&unk_1ED797BB0);
  }
  sub_1C142683C();
  v20 = sub_1C1426848();
  v21 = sub_1C1426C68();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_1C1324000, v20, v21, "Client does not implement expected interface", v22, 2u);
    MEMORY[0x1C3BAD3F4](v22, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C13866EC(uint64_t a1, uint64_t a2)
{
  os_unfair_lock_s *v3;
  uint64_t v4;

  v3 = *(os_unfair_lock_s **)(*(_QWORD *)(a2 + OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceClient_lock)
                            + 16);
  os_unfair_lock_lock(v3);
  *(_BYTE *)(a2 + OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceClient__lock_pendingAck) = 0;
  v4 = *(_QWORD *)(a2
                 + OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceClient__lock_bufferedPresentationUpdate);
  *(_QWORD *)(a2 + OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceClient__lock_bufferedPresentationUpdate) = 0;
  os_unfair_lock_unlock(v3);
  if (v4)
  {
    sub_1C1386220(v4);
    swift_bridgeObjectRelease();
  }
  return sub_1C1425EE8();
}

id sub_1C1386798()
{
  return sub_1C1359EC8(0, type metadata accessor for PresentationObservationServiceClient);
}

uint64_t sub_1C138681C()
{
  return type metadata accessor for PresentationObservationServiceClient();
}

uint64_t type metadata accessor for PresentationObservationServiceClient()
{
  uint64_t result;

  result = qword_1EF6DB368;
  if (!qword_1EF6DB368)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1C1386860()
{
  unint64_t v0;

  sub_1C1386904();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_1C1386904()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF6DB378)
  {
    sub_1C14256FC();
    v0 = sub_1C1426DAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF6DB378);
  }
}

uint64_t sub_1C1386958(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  os_unfair_lock_s *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  os_unfair_lock_s *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6DB448);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1C3BAD4B4](v1 + OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceClient_delegate);
  if (result)
  {
    v7 = result;
    v8 = *(os_unfair_lock_s **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceClient_lock)
                              + 16);
    os_unfair_lock_lock(v8);
    v9 = sub_1C14256FC();
    v10 = *(_QWORD *)(v9 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v5, a1, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
    v11 = v1 + OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceClient__lock_predicate;
    swift_beginAccess();
    sub_1C1386C5C((uint64_t)v5, v11);
    swift_endAccess();
    os_unfair_lock_unlock(v8);
    v12 = *(os_unfair_lock_s **)(*(_QWORD *)(v7
                                           + OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceServer_lock)
                               + 16);
    os_unfair_lock_lock(v12);
    v13 = (uint64_t *)(v7 + OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceServer__lock_presentations);
    swift_beginAccess();
    v14 = *v13;
    swift_bridgeObjectRetain();
    os_unfair_lock_unlock(v12);
    sub_1C1386220(v14);
    swift_unknownObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C1386C5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6DB448);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1386CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6DB448);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1386CEC()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C1386D18(uint64_t a1)
{
  uint64_t v1;

  return sub_1C13866EC(a1, *(_QWORD *)(v1 + 16));
}

id sub_1C1386D20(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _DWORD *v6;
  char *v7;
  uint64_t v8;
  id v9;
  objc_super v11;

  *(_QWORD *)&v1[OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceClient_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v3 = OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceClient_lock;
  type metadata accessor for UnfairLock();
  v4 = swift_allocObject();
  v5 = v1;
  v6 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v4 + 16) = v6;
  *(_QWORD *)&v1[v3] = v4;
  *v6 = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceClient__lock_bufferedPresentationUpdate] = 0;
  v5[OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceClient__lock_pendingAck] = 0;
  v7 = &v5[OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceClient__lock_predicate];
  v8 = sub_1C14256FC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *(_QWORD *)&v5[OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceClient_connection] = a1;
  v9 = a1;

  v11.receiver = v5;
  v11.super_class = (Class)type metadata accessor for PresentationObservationServiceClient();
  return objc_msgSendSuper2(&v11, sel_init);
}

void sub_1C1386E24(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  unsigned int v10;
  id v11;
  id v12;
  char *v13;
  id v14;
  unsigned int v15;
  os_unfair_lock_s *v16;
  char *v17;
  char *v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  char *v23;
  char *v24;
  char isEscapingClosureAtFileLocation;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  _QWORD aBlock[6];
  uint64_t v31;

  v2 = v1;
  v4 = sub_1C1426854();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(a1, sel_remoteProcess);
  v9 = (void *)sub_1C1426A7C();
  v10 = objc_msgSend(v8, sel_hasEntitlement_, v9);

  if (v10)
  {
    v11 = objc_allocWithZone((Class)type metadata accessor for PresentationObservationServiceClient());
    v12 = a1;
    v13 = (char *)sub_1C1386D20(v12);

    v14 = objc_msgSend(v12, sel_remoteProcess);
    v15 = objc_msgSend(v14, sel_pid);

    *(_QWORD *)&v13[OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceClient_delegate + 8] = &off_1E7A8BB90;
    swift_unknownObjectWeakAssign();
    v16 = *(os_unfair_lock_s **)(*(_QWORD *)&v2[OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceServer_lock]
                               + 16);
    os_unfair_lock_lock(v16);
    v17 = &v2[OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceServer__lock_clients];
    swift_beginAccess();
    v18 = v13;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v31 = *(_QWORD *)v17;
    *(_QWORD *)v17 = 0x8000000000000000;
    sub_1C13C2E6C((uint64_t)v18, v15, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)v17 = v31;
    swift_bridgeObjectRelease();
    swift_endAccess();
    os_unfair_lock_unlock(v16);
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = v18;
    *(_QWORD *)(v20 + 24) = v2;
    *(_DWORD *)(v20 + 32) = v15;
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = sub_1C13871D8;
    *(_QWORD *)(v21 + 24) = v20;
    aBlock[4] = sub_1C1327D4C;
    aBlock[5] = v21;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C1327D10;
    aBlock[3] = &block_descriptor_10_1;
    v22 = _Block_copy(aBlock);
    v23 = v18;
    v24 = v2;
    swift_retain();
    swift_release();
    objc_msgSend(v12, sel_configureConnection_, v22);
    _Block_release(v22);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      objc_msgSend(v12, sel_activate);
      swift_release();

    }
  }
  else
  {
    sub_1C142683C();
    v26 = sub_1C1426848();
    v27 = sub_1C1426C68();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_1C1324000, v26, v27, "Process is not entitled to listen to the presentation service", v28, 2u);
      MEMORY[0x1C3BAD3F4](v28, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    objc_msgSend(a1, sel_invalidate);
  }
}

uint64_t sub_1C13871AC()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1C13871D8(void *a1)
{
  uint64_t v1;

  sub_1C1385C18(a1, *(_QWORD *)(v1 + 16), *(char **)(v1 + 24), *(_DWORD *)(v1 + 32));
}

uint64_t sub_1C13871E4()
{
  return swift_deallocObject();
}

uint64_t sub_1C13871F4()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1C1387218(uint64_t a1)
{
  uint64_t v1;

  sub_1C1385F1C(a1, *(_QWORD *)(v1 + 16), *(_DWORD *)(v1 + 24), "Connection interrupted");
}

void sub_1C138723C(uint64_t a1)
{
  uint64_t v1;

  sub_1C1385F1C(a1, *(_QWORD *)(v1 + 16), *(_DWORD *)(v1 + 24), "Connection invalidated");
}

uint64_t sub_1C1387284(uint64_t *a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C13872E0(v1);
    return swift_release();
  }
  return result;
}

void sub_1C13872E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  os_unfair_lock_s *v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[2];
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;

  v3 = type metadata accessor for ActivityParticipantEvent(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v33 = (_QWORD *)((char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v29 - v7;
  v9 = *(os_unfair_lock_s **)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v9);
  v10 = MEMORY[0x1C3BAD4B4](v1 + 80);
  os_unfair_lock_unlock(v9);
  if (v10)
  {
    os_unfair_lock_lock(v9);
    sub_1C13875E0(a1, v1, &v34);
    os_unfair_lock_unlock(v9);
    v12 = *(_QWORD *)(v34 + 16);
    if (v12)
    {
      v13 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      v29[0] = v34;
      v14 = v34 + v13;
      v15 = *(_QWORD *)(v4 + 72);
      v16 = type metadata accessor for ActivityParticipantEvent;
      v17 = &unk_1ED791000;
      *(_QWORD *)&v11 = 136446210;
      v30 = v11;
      v29[1] = MEMORY[0x1E0DEE9B8] + 8;
      v18 = (uint64_t)v33;
      v31 = v10;
      v32 = v15;
      do
      {
        sub_1C1338F24(v14, (uint64_t)v8, v16);
        if (v17[469] != -1)
          swift_once();
        v19 = sub_1C1426854();
        __swift_project_value_buffer(v19, (uint64_t)qword_1ED798520);
        sub_1C1338F24((uint64_t)v8, v18, v16);
        v20 = sub_1C1426848();
        v21 = sub_1C1426C80();
        if (os_log_type_enabled(v20, v21))
        {
          v22 = swift_slowAlloc();
          v23 = swift_slowAlloc();
          v34 = v23;
          *(_DWORD *)v22 = v30;
          v24 = *v33;
          v25 = v16;
          v26 = v33[1];
          swift_bridgeObjectRetain();
          v27 = v24;
          v18 = (uint64_t)v33;
          *(_QWORD *)(v22 + 4) = sub_1C132AD90(v27, v26, &v34);
          v16 = v25;
          swift_bridgeObjectRelease();
          sub_1C1339004(v18, v25);
          _os_log_impl(&dword_1C1324000, v20, v21, "Ending activity because authorization was revoked: %{public}s", (uint8_t *)v22, 0xCu);
          swift_arrayDestroy();
          v15 = v32;
          MEMORY[0x1C3BAD3F4](v23, -1, -1);
          v28 = v22;
          v17 = (_QWORD *)&unk_1ED791000;
          MEMORY[0x1C3BAD3F4](v28, -1, -1);
        }
        else
        {
          sub_1C1339004(v18, v16);
        }

        sub_1C13D0788((uint64_t)v8);
        sub_1C1339004((uint64_t)v8, v16);
        v14 += v15;
        --v12;
      }
      while (v12);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1C13875E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  int64_t v29;
  int64_t v30;
  _QWORD *v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  int64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  _QWORD *v59;
  char *v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  int64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  _QWORD *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int64_t v91;
  uint64_t v92;
  uint64_t *v93;
  int64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  int64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;

  v84 = a3;
  v87 = type metadata accessor for ActivityParticipantEvent(0);
  v86 = *(_QWORD *)(v87 - 8);
  v5 = MEMORY[0x1E0C80A78](v87);
  v99 = (uint64_t)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v80 - v7;
  v9 = sub_1C1425AEC();
  v108 = *(_QWORD *)(v9 - 8);
  v109 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1C1425A08();
  MEMORY[0x1E0C80A78](v12);
  v107 = (uint64_t)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = type metadata accessor for Activity();
  v105 = *(_QWORD *)(v113 - 8);
  MEMORY[0x1E0C80A78](v113);
  v15 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7939E0);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (uint64_t *)((char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v80 - v20;
  v22 = sub_1C1425630();
  MEMORY[0x1E0C80A78](v22);
  v97 = sub_1C142557C();
  v96 = *(_QWORD *)(v97 - 8);
  MEMORY[0x1E0C80A78](v97);
  v24 = (char *)&v80 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1425624();
  v95 = v24;
  sub_1C1425570();
  v25 = *(_QWORD *)(a1 + 64);
  v100 = a1 + 64;
  v26 = 1 << *(_BYTE *)(a1 + 32);
  if (v26 < 64)
    v27 = ~(-1 << v26);
  else
    v27 = -1;
  v101 = v27 & v25;
  v88 = a2;
  swift_bridgeObjectRetain();
  v93 = (uint64_t *)(a2 + 72);
  result = swift_beginAccess();
  v29 = 0;
  v30 = (unint64_t)(v26 + 63) >> 6;
  v98 = v8;
  v85 = v8 + 16;
  v31 = v21;
  v102 = MEMORY[0x1E0DEE9D8];
  v92 = a1;
  v91 = v30;
LABEL_6:
  v32 = v101;
  while (v32)
  {
    v33 = __clz(__rbit64(v32));
    v32 &= v32 - 1;
    v34 = v33 | (v29 << 6);
LABEL_8:
    if ((*(_BYTE *)(*(_QWORD *)(a1 + 56) + v34) & 1) == 0)
    {
      v101 = v32;
      v94 = v29;
      v38 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v34);
      v39 = v38[1];
      v112 = *v38;
      v40 = *v93;
      v41 = *(_QWORD *)(*v93 + 64);
      v103 = *v93 + 64;
      v42 = 1 << *(_BYTE *)(v40 + 32);
      if (v42 < 64)
        v43 = ~(-1 << v42);
      else
        v43 = -1;
      v115 = v43 & v41;
      v44 = (unint64_t)(v42 + 63) >> 6;
      v81 = v44 - 1;
      v111 = v39;
      swift_bridgeObjectRetain();
      result = swift_bridgeObjectRetain();
      v45 = 0;
      v104 = v44;
      v82 = v44 - 5;
      v106 = v40;
      v83 = v40 + 104;
      v46 = v115;
      if (!v115)
      {
LABEL_39:
        v64 = v45 + 1;
        if (!__OFADD__(v45, 1))
        {
          if (v64 >= v104)
          {
            v66 = v45;
          }
          else
          {
            v65 = *(_QWORD *)(v103 + 8 * v64);
            if (v65)
            {
LABEL_42:
              v115 = (v65 - 1) & v65;
              v48 = __clz(__rbit64(v65)) + (v64 << 6);
              v45 = v64;
              goto LABEL_33;
            }
            v66 = v45 + 1;
            if ((uint64_t)(v45 + 2) < v104)
            {
              v65 = *(_QWORD *)(v103 + 8 * (v45 + 2));
              if (v65)
              {
                v64 = v45 + 2;
                goto LABEL_42;
              }
              v66 = v45 + 2;
              if ((uint64_t)(v45 + 3) < v104)
              {
                v65 = *(_QWORD *)(v103 + 8 * (v45 + 3));
                if (v65)
                {
                  v64 = v45 + 3;
                  goto LABEL_42;
                }
                v64 = v45 + 4;
                v66 = v45 + 3;
                if ((uint64_t)(v45 + 4) < v104)
                {
                  v65 = *(_QWORD *)(v103 + 8 * v64);
                  if (v65)
                    goto LABEL_42;
                  while (v82 != v45)
                  {
                    v65 = *(_QWORD *)(v83 + 8 * v45++);
                    if (v65)
                    {
                      v64 = v45 + 4;
                      goto LABEL_42;
                    }
                  }
                  v66 = v81;
                }
              }
            }
          }
          v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
          (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v19, 1, 1, v67);
          v115 = 0;
          v45 = v66;
          goto LABEL_45;
        }
LABEL_64:
        __break(1u);
        goto LABEL_65;
      }
      while (1)
      {
        v115 = (v46 - 1) & v46;
        v48 = __clz(__rbit64(v46)) | (v45 << 6);
LABEL_33:
        v49 = *(_QWORD *)(v106 + 56);
        v50 = (_QWORD *)(*(_QWORD *)(v106 + 48) + 16 * v48);
        v51 = v50[1];
        *v19 = *v50;
        v19[1] = v51;
        v52 = v49 + *(_QWORD *)(v105 + 72) * v48;
        v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
        sub_1C1338F24(v52, (uint64_t)v19 + *(int *)(v53 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v19, 0, 1, v53);
        swift_bridgeObjectRetain();
LABEL_45:
        sub_1C1384014((uint64_t)v19, (uint64_t)v31);
        v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
        if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 48))(v31, 1, v68) == 1)
        {
          swift_bridgeObjectRelease();
          result = swift_release();
          a1 = v92;
          v30 = v91;
          v29 = v94;
          goto LABEL_6;
        }
        v114 = v45;
        v69 = v19;
        v70 = v31[1];
        v110 = *v31;
        v71 = v31;
        sub_1C1339140((uint64_t)v31 + *(int *)(v68 + 48), (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        v72 = v15;
        v73 = v107;
        sub_1C1338F24((uint64_t)&v15[*(int *)(v113 + 24)], v107, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
        v75 = v108;
        v74 = v109;
        (*(void (**)(char *, uint64_t, uint64_t))(v108 + 32))(v11, v73, v109);
        v76 = sub_1C1425A80();
        v78 = v77;
        (*(void (**)(char *, uint64_t))(v75 + 8))(v11, v74);
        if (v76 == v112 && v78 == v111)
        {
          swift_bridgeObjectRelease();
          v15 = v72;
        }
        else
        {
          v79 = sub_1C1427064();
          swift_bridgeObjectRelease();
          v15 = v72;
          if ((v79 & 1) == 0)
            goto LABEL_31;
        }
        v47 = *(_QWORD *)&v15[*(int *)(v113 + 28)];
        if (*(_QWORD *)(v47 + 16))
        {
          v54 = sub_1C1425558();
          v90 = *(_QWORD *)(v54 - 8);
          v89 = v47 + ((*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80));
          v55 = (int *)v87;
          v56 = v98;
          (*(void (**)(char *, char *, uint64_t))(v96 + 16))(&v98[*(int *)(v87 + 24)], v95, v97);
          type metadata accessor for ActivityParticipantEvent.EventType(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, uint64_t, uint64_t))(v90 + 16))(&v56[v55[7]], v89, v54);
          v57 = &v56[v55[9]];
          v58 = sub_1C1425450();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v57, 1, 1, v58);
          *(_QWORD *)v56 = v110;
          *((_QWORD *)v56 + 1) = v70;
          v59 = v85;
          *v85 = 0;
          v59[1] = 0;
          v60 = &v56[v55[8]];
          *(_QWORD *)v60 = v88;
          *((_QWORD *)v60 + 1) = &off_1E7A8BD50;
          v56[v55[10]] = 0;
          sub_1C1338F24((uint64_t)v56, v99, type metadata accessor for ActivityParticipantEvent);
          swift_retain();
          v19 = v69;
          v31 = v71;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v102 = sub_1C136C8A8(0, *(_QWORD *)(v102 + 16) + 1, 1, v102);
          v45 = v114;
          v62 = *(_QWORD *)(v102 + 16);
          v61 = *(_QWORD *)(v102 + 24);
          if (v62 >= v61 >> 1)
            v102 = sub_1C136C8A8(v61 > 1, v62 + 1, 1, v102);
          v63 = v102;
          *(_QWORD *)(v102 + 16) = v62 + 1;
          sub_1C1339140(v99, v63+ ((*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80))+ *(_QWORD *)(v86 + 72) * v62, type metadata accessor for ActivityParticipantEvent);
          sub_1C1339004((uint64_t)v98, type metadata accessor for ActivityParticipantEvent);
          result = sub_1C1339004((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
          v46 = v115;
          if (!v115)
            goto LABEL_39;
        }
        else
        {
LABEL_31:
          sub_1C1339004((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
          result = swift_bridgeObjectRelease();
          v19 = v69;
          v31 = v71;
          v45 = v114;
          v46 = v115;
          if (!v115)
            goto LABEL_39;
        }
      }
    }
  }
  v35 = v29 + 1;
  if (__OFADD__(v29, 1))
  {
    __break(1u);
    goto LABEL_64;
  }
  if (v35 >= v30)
    goto LABEL_62;
  v36 = *(_QWORD *)(v100 + 8 * v35);
  ++v29;
  if (v36)
    goto LABEL_23;
  v29 = v35 + 1;
  if (v35 + 1 >= v30)
    goto LABEL_62;
  v36 = *(_QWORD *)(v100 + 8 * v29);
  if (v36)
    goto LABEL_23;
  v29 = v35 + 2;
  if (v35 + 2 >= v30)
    goto LABEL_62;
  v36 = *(_QWORD *)(v100 + 8 * v29);
  if (v36)
  {
LABEL_23:
    v32 = (v36 - 1) & v36;
    v34 = __clz(__rbit64(v36)) + (v29 << 6);
    goto LABEL_8;
  }
  v37 = v35 + 3;
  if (v37 >= v30)
  {
LABEL_62:
    swift_release();
    result = (*(uint64_t (**)(char *, uint64_t))(v96 + 8))(v95, v97);
    *v84 = v102;
    return result;
  }
  v36 = *(_QWORD *)(v100 + 8 * v37);
  if (v36)
  {
    v29 = v37;
    goto LABEL_23;
  }
  while (1)
  {
    v29 = v37 + 1;
    if (__OFADD__(v37, 1))
      break;
    if (v29 >= v30)
      goto LABEL_62;
    v36 = *(_QWORD *)(v100 + 8 * v29);
    ++v37;
    if (v36)
      goto LABEL_23;
  }
LABEL_65:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for AuthorizationParticipant()
{
  return objc_opt_self();
}

void sub_1C1387FB4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797560);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *((unsigned __int8 *)a1 + *(int *)(type metadata accessor for ActivityManagerEvent(0) + 20));
  if (v8 == 3)
  {
    v13 = *(os_unfair_lock_s **)(*(_QWORD *)(v2 + 16) + 16);
    os_unfair_lock_lock(v13);
    v19 = *a1;
    v18 = a1[1];
    v20 = type metadata accessor for Activity();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v7, 1, 1, v20);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v15 = (uint64_t)v7;
    v16 = v19;
    v17 = v18;
  }
  else
  {
    if (v8)
      return;
    v9 = *a1;
    v10 = a1[1];
    v11 = *(os_unfair_lock_s **)(*(_QWORD *)(a2 + 16) + 16);
    os_unfair_lock_lock(v11);
    v12 = swift_retain();
    sub_1C1371DCC(v12, v9, v10, a2);
    swift_release();
    os_unfair_lock_unlock(v11);
    v13 = *(os_unfair_lock_s **)(*(_QWORD *)(v2 + 16) + 16);
    os_unfair_lock_lock(v13);
    sub_1C1338F24((uint64_t)a1, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    v14 = type metadata accessor for Activity();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v7, 0, 1, v14);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v15 = (uint64_t)v7;
    v16 = v9;
    v17 = v10;
  }
  sub_1C13B396C(v15, v16, v17);
  swift_endAccess();
  os_unfair_lock_unlock(v13);
}

uint64_t sub_1C1388178()
{
  uint64_t v0;

  sub_1C1339040(v0 + 16);
  swift_release();

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CombinedRemoteActivitySubscriptionProvider()
{
  return objc_opt_self();
}

uint64_t sub_1C13881D4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1C13881F8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t *sub_1C1388200(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      v10 = sub_1C1425AEC();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v8 = sub_1C14253C0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1C1388328(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2 || (_DWORD)result == 1)
  {
    v3 = sub_1C1425AEC();
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v3 = sub_1C14253C0();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
}

void *sub_1C138838C(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    v8 = sub_1C1425AEC();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_1C14253C0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1C138848C(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_1C138859C((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      v8 = sub_1C1425AEC();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = sub_1C14253C0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1C138859C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for PermissionsError();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for PermissionsError()
{
  uint64_t result;

  result = qword_1EF6DB5E0;
  if (!qword_1EF6DB5E0)
    return swift_getSingletonMetadata();
  return result;
}

void *sub_1C1388614(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    v8 = sub_1C1425AEC();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_1C14253C0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1C1388714(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_1C138859C((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      v8 = sub_1C1425AEC();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = sub_1C14253C0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1C1388824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t sub_1C1388830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_1C1388840()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C1388850()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1C14253C0();
  if (v1 <= 0x3F)
  {
    result = sub_1C1425AEC();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void sub_1C13888D0(uint64_t a1)
{
  char *v1;

  v1 = (char *)sub_1C138891C
     + 4
     * byte_1C1429720[*(unsigned __int8 *)(a1 + *(int *)(type metadata accessor for ActivityManagerEvent(0) + 20))];
  __asm { BR              X10 }
}

void sub_1C138891C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;

  v2 = *v0;
  v3 = v0[1];
  v4 = *(os_unfair_lock_s **)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v4);
  v5 = swift_retain();
  sub_1C1370300(v5, v2, v3, v1);
  swift_release();
  os_unfair_lock_unlock(v4);
}

void sub_1C138896C()
{
  uint64_t *v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  char v3;

  v2 = *(os_unfair_lock_s **)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v2);
  sub_1C1388A40(v1, v0, &v3);
  os_unfair_lock_unlock(v2);
  if (v3 == 1)
    sub_1C1388DD8(v0);
}

uint64_t sub_1C1388A40@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  void (*v27)(unint64_t, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;

  v39 = a3;
  v5 = sub_1C14251B0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v36 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v36 - v13;
  sub_1C142518C();
  sub_1C142512C();
  v37 = *(void (**)(char *, uint64_t))(v6 + 8);
  v38 = v5;
  v37(v12, v5);
  v16 = *a2;
  v15 = a2[1];
  v17 = (uint64_t *)(a1 + 24);
  v18 = swift_beginAccess();
  v19 = *(_QWORD *)(a1 + 24);
  if (*(_QWORD *)(v19 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = sub_1C13277A0(v16, v15);
    if ((v21 & 1) != 0)
    {
      v22 = *(_QWORD *)(*(_QWORD *)(v19 + 56) + 8 * v20);
      swift_bridgeObjectRetain();
    }
    else
    {
      v22 = MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    v18 = swift_bridgeObjectRelease();
  }
  else
  {
    v22 = MEMORY[0x1E0DEE9D8];
  }
  MEMORY[0x1E0C80A78](v18);
  *(&v36 - 2) = (uint64_t)v14;
  v23 = sub_1C135D94C((uint64_t (*)(char *))sub_1C1388F4C, (uint64_t)(&v36 - 4), v22);
  sub_1C142518C();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v23 = sub_1C136C880(0, *(_QWORD *)(v23 + 16) + 1, 1, v23);
  v25 = *(_QWORD *)(v23 + 16);
  v24 = *(_QWORD *)(v23 + 24);
  if (v25 >= v24 >> 1)
    v23 = sub_1C136C880(v24 > 1, v25 + 1, 1, v23);
  *(_QWORD *)(v23 + 16) = v25 + 1;
  v26 = v23
      + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
      + *(_QWORD *)(v6 + 72) * v25;
  v27 = *(void (**)(unint64_t, char *, uint64_t))(v6 + 32);
  v28 = v38;
  v27(v26, v9, v38);
  if (*(_QWORD *)(v23 + 16) >= 0x1EuLL)
  {
    swift_bridgeObjectRelease();
    v33 = *a2;
    v34 = a2[1];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1C13C04EC(v33, v34);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v32 = 1;
  }
  else
  {
    v29 = *a2;
    v30 = a2[1];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v40 = *v17;
    *v17 = 0x8000000000000000;
    sub_1C13C2200(v23, v29, v30, isUniquelyReferenced_nonNull_native);
    *v17 = v40;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    v32 = 0;
  }
  result = ((uint64_t (*)(char *, uint64_t))v37)(v14, v28);
  *v39 = v32;
  return result;
}

uint64_t sub_1C1388D88()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for APIAbuseParticipant()
{
  return objc_opt_self();
}

uint64_t sub_1C1388DD8(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;
  unint64_t v13;

  v2 = sub_1C1425AEC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C1425A08();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[1];
  v12 = *a1;
  v13 = v9;
  swift_bridgeObjectRetain();
  sub_1C14252D0();
  v10 = type metadata accessor for Activity();
  sub_1C133FD44((uint64_t)a1 + *(int *)(v10 + 24), (uint64_t)v8);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
  sub_1C1425A80();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1C14252D0();
  swift_bridgeObjectRelease();
  sub_1C13AB5D0(0xD000000000000013, 0x80000001C1429730, 0xD000000000000010, 0x80000001C142ED60, 0xD000000000000010, 0x80000001C142ED60, v12, v13);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1388F4C()
{
  return sub_1C1425144() & 1;
}

id sub_1C1388F78(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v10;

  v4 = sub_1C1425EDC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  sub_1C1425BD0();
  sub_1C1426D70();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1C1425BC4();
  v8 = (void *)sub_1C1426A7C();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setService_, v8);

  return objc_msgSend(a1, sel_setDelegate_, a2);
}

void sub_1C1389058(void *a1, uint64_t a2)
{
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, void *);
  void *v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;

  sub_1C1425BC4();
  v4 = (void *)sub_1C1426A7C();
  swift_bridgeObjectRelease();
  v5 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithIdentifier_, v4);

  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_protocolForProtocol_, &unk_1EF6E3508);
  objc_msgSend(v5, sel_setClient_, v7);

  v8 = objc_msgSend(v6, sel_protocolForProtocol_, &unk_1EF6E0798);
  objc_msgSend(v5, sel_setServer_, v8);

  v9 = objc_msgSend((id)objc_opt_self(), sel_utility);
  objc_msgSend(a1, sel_setServiceQuality_, v9);

  objc_msgSend(a1, sel_setInterface_, v5);
  objc_msgSend(a1, sel_setInterfaceTarget_, a2);
  v17 = sub_1C1389270;
  v18 = 0;
  v10 = MEMORY[0x1E0C809B0];
  v13 = MEMORY[0x1E0C809B0];
  v14 = 1107296256;
  v15 = sub_1C141AFCC;
  v16 = &block_descriptor_7_0;
  v11 = _Block_copy(&v13);
  objc_msgSend(a1, sel_setInterruptionHandler_, v11);
  _Block_release(v11);
  v17 = sub_1C1389284;
  v18 = 0;
  v13 = v10;
  v14 = 1107296256;
  v15 = sub_1C141AFCC;
  v16 = &block_descriptor_10_2;
  v12 = _Block_copy(&v13);
  objc_msgSend(a1, sel_setInvalidationHandler_, v12);
  _Block_release(v12);

}

uint64_t sub_1C1389270(uint64_t a1)
{
  return sub_1C1389298(a1, 0x80000001C142EE50);
}

uint64_t sub_1C1389284(uint64_t a1)
{
  return sub_1C1389298(a1, 0x80000001C142EE30);
}

uint64_t sub_1C1389298(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793318);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C1427F50;
  *(_QWORD *)(v3 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v3 + 32) = 0xD000000000000016;
  *(_QWORD *)(v3 + 40) = a2;
  sub_1C14270C4();
  return swift_bridgeObjectRelease();
}

id sub_1C13893B8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StateCaptureServiceServer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for StateCaptureServiceServer()
{
  return objc_opt_self();
}

uint64_t sub_1C1389450(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  unint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  os_unfair_lock_s *v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t i;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  os_unfair_lock_s *v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  char v41;
  unint64_t v42;
  uint64_t v43;
  _BOOL8 v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  int v48;
  _QWORD *v49;
  _OWORD *v50;
  uint64_t *v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  uint64_t result;
  char v56;
  _QWORD *v57;
  char v58;
  char v59;
  uint64_t v60;
  int64_t v61;
  _OWORD v62[2];
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;

  if (a2)
  {
    v3 = a2;
    v5 = *__swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + OBJC_IVAR____TtC11SessionCore25StateCaptureServiceServer_stateCaptureManager), *(_QWORD *)(v2 + OBJC_IVAR____TtC11SessionCore25StateCaptureServiceServer_stateCaptureManager + 24));
    v6 = qword_1ED7936D8;
    swift_bridgeObjectRetain();
    if (v6 == -1)
      goto LABEL_3;
    goto LABEL_53;
  }
  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC11SessionCore25StateCaptureServiceServer_stateCaptureManager);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + OBJC_IVAR____TtC11SessionCore25StateCaptureServiceServer_stateCaptureManager), *(_QWORD *)(v2 + OBJC_IVAR____TtC11SessionCore25StateCaptureServiceServer_stateCaptureManager + 24));
  if (qword_1ED7936D8 != -1)
    swift_once();
  v18 = (os_unfair_lock_s *)*((_QWORD *)off_1ED7957F8 + 2);
  os_unfair_lock_lock(v18);
  swift_beginAccess();
  v19 = swift_bridgeObjectRetain();
  a1 = sub_1C135D644(v19);
  os_unfair_lock_unlock(v18);
  v20 = 0;
  v21 = *(_QWORD *)(a1 + 56);
  v60 = a1 + 56;
  v22 = 1 << *(_BYTE *)(a1 + 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v5 = v23 & v21;
  v61 = (unint64_t)(v22 + 63) >> 6;
  v57 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  if ((v23 & v21) != 0)
    goto LABEL_16;
LABEL_17:
  v26 = v20 + 1;
  if (__OFADD__(v20, 1))
  {
    __break(1u);
    goto LABEL_52;
  }
  if (v26 >= v61)
  {
LABEL_46:
    swift_release();
    return (uint64_t)v57;
  }
  v27 = *(_QWORD *)(v60 + 8 * v26);
  ++v20;
  if (!v27)
  {
    v20 = v26 + 1;
    if (v26 + 1 >= v61)
      goto LABEL_46;
    v27 = *(_QWORD *)(v60 + 8 * v20);
    if (!v27)
    {
      v20 = v26 + 2;
      if (v26 + 2 >= v61)
        goto LABEL_46;
      v27 = *(_QWORD *)(v60 + 8 * v20);
      if (!v27)
      {
        v28 = v26 + 3;
        if (v28 < v61)
        {
          v27 = *(_QWORD *)(v60 + 8 * v28);
          if (v27)
          {
            v20 = v28;
            goto LABEL_30;
          }
          while (1)
          {
            v20 = v28 + 1;
            if (__OFADD__(v28, 1))
              break;
            if (v20 >= v61)
              goto LABEL_46;
            v27 = *(_QWORD *)(v60 + 8 * v20);
            ++v28;
            if (v27)
              goto LABEL_30;
          }
LABEL_52:
          __break(1u);
LABEL_53:
          swift_once();
LABEL_3:
          v7 = (os_unfair_lock_s *)*((_QWORD *)off_1ED7957F8 + 2);
          os_unfair_lock_lock(v7);
          swift_beginAccess();
          v8 = *(_QWORD *)(v5 + 16);
          if (*(_QWORD *)(v8 + 16))
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v9 = sub_1C13277A0(a1, (uint64_t)v3);
            if ((v10 & 1) != 0)
            {
              v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
              swift_retain();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              os_unfair_lock_unlock(v7);
              if (v11)
              {
                v12 = *(uint64_t (**)(uint64_t))(v11 + 48);
                v13 = swift_retain();
                v14 = v12(v13);
                swift_release();
                v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7979F0);
                *(_QWORD *)&v63 = v14;
                sub_1C13377A0(&v63, v62);
                v15 = MEMORY[0x1E0DEE9E0];
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                v65 = v15;
                sub_1C13C2E78(v62, a1, (uint64_t)v3, isUniquelyReferenced_nonNull_native);
                v17 = v65;
                swift_release();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                return v17;
              }
LABEL_49:
              swift_bridgeObjectRelease();
              return MEMORY[0x1E0DEE9E0];
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          os_unfair_lock_unlock(v7);
          goto LABEL_49;
        }
        goto LABEL_46;
      }
    }
  }
LABEL_30:
  v5 = (v27 - 1) & v27;
  for (i = __clz(__rbit64(v27)) + (v20 << 6); ; i = v24 | (v20 << 6))
  {
    v29 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v31 = *v29;
    v30 = v29[1];
    v32 = *__swift_project_boxed_opaque_existential_1(v3, v3[3]);
    v33 = (os_unfair_lock_s *)*((_QWORD *)off_1ED7957F8 + 2);
    swift_bridgeObjectRetain();
    os_unfair_lock_lock(v33);
    swift_beginAccess();
    v34 = *(_QWORD *)(v32 + 16);
    if (!*(_QWORD *)(v34 + 16))
      goto LABEL_14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v35 = sub_1C13277A0(v31, v30);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_14:
      os_unfair_lock_unlock(v33);
LABEL_15:
      swift_bridgeObjectRelease();
      if (!v5)
        goto LABEL_17;
      goto LABEL_16;
    }
    v37 = *(_QWORD *)(*(_QWORD *)(v34 + 56) + 8 * v35);
    swift_retain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(v33);
    if (!v37)
      goto LABEL_15;
    v38 = *(uint64_t (**)(uint64_t))(v37 + 48);
    v39 = swift_retain();
    v40 = v38(v39);
    swift_release();
    v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7979F0);
    *(_QWORD *)&v63 = v40;
    sub_1C13377A0(&v63, v62);
    v56 = swift_isUniquelyReferenced_nonNull_native();
    v66 = v57;
    v42 = sub_1C13277A0(v31, v30);
    v43 = v57[2];
    v44 = (v41 & 1) == 0;
    v45 = v43 + v44;
    if (__OFADD__(v43, v44))
      break;
    if (v57[3] >= v45)
    {
      if ((v56 & 1) == 0)
      {
        v59 = v41;
        sub_1C13BAAA0();
        v41 = v59;
      }
    }
    else
    {
      v58 = v41;
      sub_1C13BDC84(v45, v56);
      v46 = sub_1C13277A0(v31, v30);
      v48 = v47 & 1;
      v41 = v58;
      if ((v58 & 1) != v48)
        goto LABEL_56;
      v42 = v46;
    }
    v49 = v66;
    v57 = v66;
    if ((v41 & 1) != 0)
    {
      v50 = (_OWORD *)(v66[7] + 32 * v42);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
      sub_1C13377A0(v62, v50);
    }
    else
    {
      v66[(v42 >> 6) + 8] |= 1 << v42;
      v51 = (uint64_t *)(v49[6] + 16 * v42);
      *v51 = v31;
      v51[1] = v30;
      sub_1C13377A0(v62, (_OWORD *)(v49[7] + 32 * v42));
      v52 = v49[2];
      v53 = __OFADD__(v52, 1);
      v54 = v52 + 1;
      if (v53)
        goto LABEL_55;
      v49[2] = v54;
      swift_bridgeObjectRetain();
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v5)
      goto LABEL_17;
LABEL_16:
    v24 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  result = sub_1C142707C();
  __break(1u);
  return result;
}

id sub_1C1389AD8(void *a1)
{
  void *v1;
  id v3;
  void *v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  char isEscapingClosureAtFileLocation;
  id result;
  _QWORD v12[6];

  v3 = objc_msgSend(a1, sel_remoteProcess);
  v4 = (void *)sub_1C1426A7C();
  v5 = objc_msgSend(v3, sel_hasEntitlement_, v4);

  if (!v5)
    return objc_msgSend(a1, sel_invalidate);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v1;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_1C1389CB4;
  *(_QWORD *)(v7 + 24) = v6;
  v12[4] = sub_1C1327D4C;
  v12[5] = v7;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1C1327D10;
  v12[3] = &block_descriptor_9;
  v8 = _Block_copy(v12);
  v9 = v1;
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_configureConnection_, v8);
  _Block_release(v8);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = (id)swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(a1, sel_activate);
    return (id)swift_release();
  }
  return result;
}

uint64_t sub_1C1389C90()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1C1389CB4(void *a1)
{
  uint64_t v1;

  sub_1C1389058(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1C1389CBC()
{
  return swift_deallocObject();
}

uint64_t sub_1C1389CDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C1426E30();
    sub_1C14268C0();
    sub_1C138A550();
    result = sub_1C1426C2C();
    v1 = v18;
    v17 = v19;
    v3 = v20;
    v4 = v21;
    v5 = v22;
  }
  else
  {
    v6 = -1 << *(_BYTE *)(a1 + 32);
    v17 = a1 + 56;
    v3 = ~v6;
    v7 = -v6;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v5 = v8 & *(_QWORD *)(a1 + 56);
    result = swift_bridgeObjectRetain();
    v4 = 0;
  }
  v9 = (unint64_t)(v3 + 64) >> 6;
  if (v1 < 0)
    goto LABEL_10;
  while (1)
  {
    if (v5)
    {
      v10 = (v5 - 1) & v5;
      v11 = __clz(__rbit64(v5)) | (v4 << 6);
      v12 = v4;
      goto LABEL_29;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (v13 >= v9)
      return sub_1C133F908();
    v14 = *(_QWORD *)(v17 + 8 * v13);
    v12 = v4 + 1;
    if (!v14)
    {
      v12 = v4 + 2;
      if (v4 + 2 >= v9)
        return sub_1C133F908();
      v14 = *(_QWORD *)(v17 + 8 * v12);
      if (!v14)
      {
        v12 = v4 + 3;
        if (v4 + 3 >= v9)
          return sub_1C133F908();
        v14 = *(_QWORD *)(v17 + 8 * v12);
        if (!v14)
        {
          v12 = v4 + 4;
          if (v4 + 4 >= v9)
            return sub_1C133F908();
          v14 = *(_QWORD *)(v17 + 8 * v12);
          if (!v14)
          {
            v12 = v4 + 5;
            if (v4 + 5 >= v9)
              return sub_1C133F908();
            v14 = *(_QWORD *)(v17 + 8 * v12);
            if (!v14)
            {
              v15 = v4 + 6;
              while (v9 != v15)
              {
                v14 = *(_QWORD *)(v17 + 8 * v15++);
                if (v14)
                {
                  v12 = v15 - 1;
                  goto LABEL_28;
                }
              }
              return sub_1C133F908();
            }
          }
        }
      }
    }
LABEL_28:
    v10 = (v14 - 1) & v14;
    v11 = __clz(__rbit64(v14)) + (v12 << 6);
LABEL_29:
    v16 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v11);
    swift_retain();
    if (!v16)
      return sub_1C133F908();
    while (1)
    {
      sub_1C14268B4();
      result = swift_release();
      v4 = v12;
      v5 = v10;
      if ((v1 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      if (sub_1C1426E84())
      {
        sub_1C14268C0();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_unknownObjectRelease();
        v12 = v4;
        v10 = v5;
        if (v23)
          continue;
      }
      return sub_1C133F908();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C1389F68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  _QWORD *v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7978C0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C1426320();
  v39 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v38 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *__swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 120));
  v8 = objc_msgSend((id)objc_opt_self(), sel_enumeratorWithOptions_, 0);
  aBlock[4] = sub_1C138B3C8;
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C138B378;
  aBlock[3] = &block_descriptor_10;
  v9 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_setFilter_, v9);
  _Block_release(v9);
  v10 = objc_msgSend(v8, sel_nextObject);
  if (v10)
  {
    v11 = v10;
    v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v13 = objc_msgSend(v11, sel_bundleIdentifier);
      if (v13)
      {
        v15 = v13;
        v16 = sub_1C1426A88();
        v36 = v17;
        v37 = v16;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v12 = sub_1C136C3E0(0, v12[2] + 1, 1, v12);
        v19 = v12[2];
        v18 = v12[3];
        if (v19 >= v18 >> 1)
          v12 = sub_1C136C3E0((_QWORD *)(v18 > 1), v19 + 1, 1, v12);
        v12[2] = v19 + 1;
        v20 = &v12[2 * v19];
        v21 = v36;
        v20[4] = v37;
        v20[5] = v21;

        v14 = objc_msgSend(v8, sel_nextObject);
      }
      else
      {

        v14 = objc_msgSend(v8, sel_nextObject);
      }
      v11 = v14;
    }
    while (v11);
  }
  else
  {
    v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }

  v22 = sub_1C1375140((uint64_t)v12);
  swift_bridgeObjectRelease();
  v23 = sub_1C138AC38();
  v24 = sub_1C1375140((uint64_t)v23);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v24 + 16) <= *(_QWORD *)(v22 + 16) >> 3)
  {
    aBlock[0] = v22;
    swift_bridgeObjectRetain();
    sub_1C13559B4(v24);
    v25 = aBlock[0];
  }
  else
  {
    swift_bridgeObjectRetain();
    v25 = sub_1C1355F5C(v24, v22);
  }
  v26 = v39;
  if (*(_QWORD *)(v22 + 16) <= *(_QWORD *)(v24 + 16) >> 3)
  {
    aBlock[0] = v24;
    sub_1C13559B4(v22);
    swift_bridgeObjectRelease();
    v27 = aBlock[0];
  }
  else
  {
    v27 = sub_1C1355F5C(v22, v24);
    swift_bridgeObjectRelease();
  }
  v28 = sub_1C132FC80(v25);
  swift_bridgeObjectRelease();
  v29 = v28[2];
  if (v29)
  {
    v37 = v27;
    swift_bridgeObjectRetain();
    v36 = v28;
    v30 = v28 + 5;
    v31 = v38;
    do
    {
      v32 = *(v30 - 1);
      v33 = *v30;
      swift_bridgeObjectRetain();
      sub_1C138A598(v32, v33, (uint64_t)v4);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v4, 1, v5) == 1)
      {
        sub_1C138B3D0((uint64_t)v4);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v31, v4, v5);
        __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 80));
        v26 = v39;
        sub_1C1426548();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v31, v5);
      }
      v30 += 2;
      --v29;
    }
    while (v29);
    swift_release();
    v27 = v37;
  }
  swift_release();
  v34 = sub_1C132FC80(v27);
  swift_bridgeObjectRelease();
  sub_1C138AEF4((uint64_t)v34);
  return swift_release();
}

uint64_t sub_1C138A3C8()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C1389F68();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C138A41C()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C1389F68();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C138A470()
{
  return sub_1C1389F68();
}

uint64_t sub_1C138A490()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = swift_bridgeObjectRetain();
  sub_1C1389CDC(v1);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  __swift_destroy_boxed_opaque_existential_1(v0 + 176);

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PushToStartManager()
{
  return objc_opt_self();
}

unint64_t sub_1C138A550()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF6DAEE0;
  if (!qword_1EF6DAEE0)
  {
    v1 = sub_1C14268C0();
    result = MEMORY[0x1C3BAD334](MEMORY[0x1E0C95E18], v1);
    atomic_store(result, (unint64_t *)&qword_1EF6DAEE0);
  }
  return result;
}

uint64_t sub_1C138A598@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  _QWORD *v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  unint64_t v37;
  int v38;
  void (*v39)(char *, unint64_t, uint64_t);
  char *v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char v46;
  void (*v47)(char *, uint64_t);
  char *v48;
  char *v49;
  char *v50;
  void (*v51)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  _QWORD aBlock[7];

  v75 = a1;
  v73 = a3;
  v68 = sub_1C14267DC();
  v67 = *(_QWORD *)(v68 - 8);
  MEMORY[0x1E0C80A78](v68);
  v66 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C1426290();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v81 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_1C1426320();
  v9 = *(_QWORD *)(v83 - 8);
  MEMORY[0x1E0C80A78](v83);
  v82 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C142671C();
  v77 = *(_QWORD *)(v11 - 8);
  v78 = v11;
  v12 = MEMORY[0x1E0C80A78](v11);
  v76 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v79 = (char *)&v65 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7978C0);
  v16 = MEMORY[0x1E0C80A78](v15);
  v71 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v72 = (uint64_t)&v65 - v18;
  v80 = v3;
  v19 = *__swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + 96), *(_QWORD *)(v3 + 120));
  v20 = objc_msgSend((id)objc_opt_self(), sel_enumeratorWithOptions_, 0);
  aBlock[4] = sub_1C138B3C8;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C138B378;
  aBlock[3] = &block_descriptor_4;
  v21 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v20, sel_setFilter_, v21);
  _Block_release(v21);
  v22 = objc_msgSend(v20, sel_nextObject);
  v74 = a2;
  if (v22)
  {
    v23 = v22;
    v24 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      while (1)
      {
        v25 = objc_msgSend(v23, sel_bundleIdentifier);
        if (v25)
          break;

        v23 = objc_msgSend(v20, sel_nextObject);
        if (!v23)
          goto LABEL_13;
      }
      v26 = v25;
      v27 = sub_1C1426A88();
      v69 = v28;
      v70 = v27;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v24 = sub_1C136C3E0(0, v24[2] + 1, 1, v24);
      v30 = v24[2];
      v29 = v24[3];
      if (v30 >= v29 >> 1)
        v24 = sub_1C136C3E0((_QWORD *)(v29 > 1), v30 + 1, 1, v24);
      v24[2] = v30 + 1;
      v31 = &v24[2 * v30];
      v32 = v69;
      v31[4] = v70;
      v31[5] = v32;

      v23 = objc_msgSend(v20, sel_nextObject);
      a2 = v74;
    }
    while (v23);
  }
  else
  {
    v24 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
LABEL_13:

  v33 = sub_1C13311CC(v75, a2, v24);
  swift_bridgeObjectRelease();
  if ((v33 & 1) == 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v73, 1, 1, v83);
  swift_bridgeObjectRetain();
  sub_1C1426728();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v80 + 56), *(_QWORD *)(v80 + 80));
  v70 = sub_1C1426518();
  v34 = *(_QWORD *)(v70 + 16);
  v36 = v82;
  v35 = v83;
  if (v34)
  {
    v37 = v70 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v38 = *MEMORY[0x1E0D8CE88];
    v80 = *(_QWORD *)(v9 + 72);
    v39 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    v39(v82, v37, v83);
    while (1)
    {
      v40 = v81;
      sub_1C14262C0();
      v41 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v40, v6);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v40, v6);
      if (v41 == v38)
      {
        v42 = v7;
        v43 = v6;
        v44 = v9;
        v45 = v76;
        sub_1C14262FC();
        v46 = sub_1C14266F8();
        v47 = *(void (**)(char *, uint64_t))(v77 + 8);
        v48 = v45;
        v9 = v44;
        v6 = v43;
        v7 = v42;
        v36 = v82;
        v47(v48, v78);
        if ((v46 & 1) != 0)
          break;
      }
      v35 = v83;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v36, v83);
      v37 += v80;
      if (!--v34)
        goto LABEL_22;
      v39(v36, v37, v35);
    }
    v49 = v36;
    v50 = v71;
    v35 = v83;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v71, v49, v83);
    v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v51(v50, 0, 1, v35);
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_22:
    v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v50 = v71;
    v51(v71, 1, 1, v35);
    swift_bridgeObjectRelease();
    v47 = *(void (**)(char *, uint64_t))(v77 + 8);
  }
  v47(v79, v78);
  v53 = (uint64_t)v50;
  v54 = v72;
  sub_1C138B410(v53, v72);
  v55 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v54, 1, v35);
  sub_1C138B3D0(v54);
  if (v55 == 1)
  {
    sub_1C13EF9C0(v75, v74);
    if (v56)
    {
      swift_bridgeObjectRetain();
      v57 = v76;
      sub_1C1426728();
      v58 = v67;
      v59 = v66;
      v60 = v68;
      (*(void (**)(char *, _QWORD, uint64_t))(v67 + 104))(v66, *MEMORY[0x1E0D8D3D0], v68);
      v61 = v73;
      sub_1C142623C();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v60);
      v47(v57, v78);
      v62 = v61;
      v63 = 0;
    }
    else
    {
      v62 = v73;
      v63 = 1;
    }
    v64 = v83;
  }
  else
  {
    v62 = v73;
    v63 = 1;
    v64 = v35;
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v51)(v62, v63, 1, v64);
}

_QWORD *sub_1C138AC38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  int v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  void (*v33)(char *, unint64_t, uint64_t);
  uint64_t v34;

  v1 = sub_1C142671C();
  v29 = *(_QWORD *)(v1 - 8);
  v30 = v1;
  MEMORY[0x1E0C80A78](v1);
  v28 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1C1426290();
  v31 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C1426320();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 80));
  v10 = sub_1C1426518();
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    v12 = v10 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v13 = *(_QWORD *)(v7 + 72);
    v33 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    v34 = v7;
    v32 = *MEMORY[0x1E0D8CE88];
    v25 = v10;
    swift_bridgeObjectRetain();
    v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v26 = v13;
    v27 = v3;
    v15 = v31;
    do
    {
      v33(v9, v12, v6);
      sub_1C14262C0();
      v16 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v5, v3);
      if (v16 == v32)
      {
        (*(void (**)(char *, uint64_t))(v15 + 96))(v5, v3);
        swift_bridgeObjectRelease();
        v17 = v28;
        sub_1C14262FC();
        v18 = sub_1C14266EC();
        v20 = v19;
        (*(void (**)(char *, uint64_t))(v29 + 8))(v17, v30);
        (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v6);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v14 = sub_1C136C3E0(0, v14[2] + 1, 1, v14);
        v22 = v14[2];
        v21 = v14[3];
        if (v22 >= v21 >> 1)
          v14 = sub_1C136C3E0((_QWORD *)(v21 > 1), v22 + 1, 1, v14);
        v14[2] = v22 + 1;
        v23 = &v14[2 * v22];
        v23[4] = v18;
        v23[5] = v20;
        v13 = v26;
        v3 = v27;
        v15 = v31;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v3);
        (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v6);
      }
      v12 += v13;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v14;
}

uint64_t sub_1C138AEF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  char *v38;
  char v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  _QWORD *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  int v60;
  uint64_t v61;

  v2 = v1;
  v4 = sub_1C1426290();
  v61 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C142671C();
  v55 = *(_QWORD *)(v7 - 8);
  v56 = v7;
  v8 = MEMORY[0x1E0C80A78](v7);
  v54 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v58 = (char *)&v43 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7978C0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v43 - v15;
  v57 = sub_1C1426320();
  v17 = *(_QWORD *)(v57 - 8);
  v18 = MEMORY[0x1E0C80A78](v57);
  v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v18);
  v44 = (char *)&v43 - v22;
  v47 = *(_QWORD *)(a1 + 16);
  if (v47)
  {
    v50 = (_QWORD *)(v2 + 56);
    v51 = v16;
    v46 = a1 + 32;
    v60 = *MEMORY[0x1E0D8CE88];
    v43 = a1;
    swift_bridgeObjectRetain();
    v23 = 0;
    v59 = v17;
    v45 = v2;
    v48 = v14;
    do
    {
      v52 = v23;
      v27 = *(_QWORD *)(v46 + 16 * v23 + 8);
      swift_bridgeObjectRetain_n();
      v53 = v27;
      sub_1C1426728();
      __swift_project_boxed_opaque_existential_1(v50, *(_QWORD *)(v2 + 80));
      v28 = sub_1C1426518();
      v29 = *(_QWORD *)(v28 + 16);
      v30 = (uint64_t)v51;
      if (v29)
      {
        v31 = v28 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
        v49 = v28;
        swift_bridgeObjectRetain();
        v32 = *(_QWORD *)(v17 + 72);
        v33 = *(void (**)(char *, unint64_t, uint64_t))(v17 + 16);
        v34 = v57;
        v33(v20, v31, v57);
        while (1)
        {
          sub_1C14262C0();
          v35 = v61;
          v36 = (*(uint64_t (**)(char *, uint64_t))(v61 + 88))(v6, v4);
          if (v36 == v60)
          {
            (*(void (**)(char *, uint64_t))(v35 + 96))(v6, v4);
            swift_bridgeObjectRelease();
            v37 = v4;
            v38 = v54;
            sub_1C14262FC();
            v39 = sub_1C14266F8();
            v40 = *(void (**)(char *, uint64_t))(v55 + 8);
            v41 = v38;
            v4 = v37;
            v34 = v57;
            v40(v41, v56);
            if ((v39 & 1) != 0)
            {
              swift_bridgeObjectRelease();
              v42 = v59;
              v14 = v48;
              (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v48, v20, v34);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v14, 0, 1, v34);
              swift_bridgeObjectRelease();
              v2 = v45;
              v30 = (uint64_t)v51;
              goto LABEL_15;
            }
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v35 + 8))(v6, v4);
          }
          v17 = v59;
          (*(void (**)(char *, uint64_t))(v59 + 8))(v20, v34);
          v31 += v32;
          if (!--v29)
            break;
          v33(v20, v31, v34);
        }
        swift_bridgeObjectRelease();
        v2 = v45;
        v14 = v48;
        v30 = (uint64_t)v51;
      }
      v34 = v57;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v14, 1, 1, v57);
      swift_bridgeObjectRelease();
      v42 = v17;
      v40 = *(void (**)(char *, uint64_t))(v55 + 8);
LABEL_15:
      v40(v58, v56);
      sub_1C138B410((uint64_t)v14, v30);
      swift_bridgeObjectRelease();
      v17 = v42;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v30, 1, v34) == 1)
      {
        sub_1C138B3D0(v30);
      }
      else
      {
        v24 = v2;
        v25 = v44;
        (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v44, v30, v34);
        __swift_project_boxed_opaque_existential_1(v50, *(_QWORD *)(v24 + 80));
        sub_1C14264F4();
        v26 = v25;
        v2 = v24;
        v14 = v48;
        (*(void (**)(char *, uint64_t))(v42 + 8))(v26, v34);
      }
      v23 = v52 + 1;
    }
    while (v52 + 1 != v47);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C138B378(uint64_t a1, void *a2)
{
  uint64_t (*v3)(void);
  id v4;

  v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  LOBYTE(v3) = v3();
  swift_release();

  return v3 & 1;
}

id sub_1C138B3C8(void *a1)
{
  _QWORD *v1;

  return sub_1C13EF8A8(a1, v1);
}

uint64_t sub_1C138B3D0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7978C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C138B410(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7978C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C138B460()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v0 = sub_1C1426CD4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C1426C8C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1C14269B0();
  MEMORY[0x1E0C80A78](v6);
  sub_1C1330F6C();
  sub_1C1426998();
  v10[1] = MEMORY[0x1E0DEE9D8];
  sub_1C1329AD0((unint64_t *)&qword_1ED7939F0, v5, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A70);
  sub_1C1331140((unint64_t *)&qword_1ED797A80, (uint64_t *)&unk_1ED797A70);
  sub_1C1426DF4();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D8], v0);
  v7 = sub_1C1426D04();
  v8 = v10[0];
  *(_QWORD *)(v10[0] + 16) = v7;
  return v8;
}

uint64_t sub_1C138B624()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PowerLogger()
{
  return objc_opt_self();
}

uint64_t sub_1C138B668(uint64_t a1)
{
  return sub_1C138B6B0(a1, type metadata accessor for PowerLog.LifecycleEvent, (uint64_t)&unk_1E7A8BFF0, (uint64_t)sub_1C138BA6C, (uint64_t)&block_descriptor_6_0);
}

uint64_t sub_1C138B68C(uint64_t a1)
{
  return sub_1C138B6B0(a1, type metadata accessor for PowerLog.UpdateEvent, (uint64_t)&unk_1E7A8BFA0, (uint64_t)sub_1C138B994, (uint64_t)&block_descriptor_11);
}

uint64_t sub_1C138B6B0(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[6];

  v25 = a5;
  v23 = a4;
  v8 = sub_1C1426950();
  v28 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C14269B0();
  v26 = *(_QWORD *)(v11 - 8);
  v27 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a2(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v22 - v16;
  v24 = *(_QWORD *)(v5 + 16);
  sub_1C1338F24(a1, (uint64_t)&v22 - v16, a2);
  v18 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v19 = swift_allocObject();
  sub_1C1339140((uint64_t)v17, v19 + v18, a2);
  aBlock[4] = v23;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C13A7F4C;
  aBlock[3] = v25;
  v20 = _Block_copy(aBlock);
  sub_1C1426974();
  v29 = MEMORY[0x1E0DEE9D8];
  sub_1C1329AD0((unint64_t *)&qword_1ED7979D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A50);
  sub_1C1331140((unint64_t *)&qword_1ED797A60, (uint64_t *)&unk_1ED797A50);
  sub_1C1426DF4();
  MEMORY[0x1C3BAC9D4](0, v13, v10, v20);
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v27);
  return swift_release();
}

void sub_1C138B8F4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  void *v5;
  id v6;

  v5 = (void *)sub_1C1426A7C();
  a4();
  v6 = (id)sub_1C1426A1C();
  swift_bridgeObjectRelease();
  PLLogRegisteredEvent();

}

uint64_t sub_1C138B988()
{
  return objectdestroyTm_2(type metadata accessor for PowerLog.UpdateEvent);
}

void sub_1C138B994()
{
  sub_1C138BA98(type metadata accessor for PowerLog.UpdateEvent, 0xD000000000000013, 0x80000001C142EF00, (void (*)(void))sub_1C1384560);
}

uint64_t sub_1C138B9C0()
{
  return objectdestroyTm_2(type metadata accessor for PowerLog.LifecycleEvent);
}

uint64_t objectdestroyTm_2(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  v3 = v1 + ((v2 + 16) & ~v2);
  v4 = sub_1C14251B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1C138BA6C()
{
  sub_1C138BA98(type metadata accessor for PowerLog.LifecycleEvent, 0xD000000000000011, 0x80000001C142EF20, (void (*)(void))sub_1C1384190);
}

void sub_1C138BA98(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v4;
  uint64_t v8;

  v8 = *(unsigned __int8 *)(*(_QWORD *)(a1(0) - 8) + 80);
  sub_1C138B8F4(v4 + ((v8 + 16) & ~v8), a2, a3, a4);
}

uint64_t sub_1C138BAFC()
{
  uint64_t result;
  BOOL v2;

  result = SNCEffectiveArtworkSubtype();
  v2 = result == 2556 || result == 2796;
  byte_1ED798648 = v2;
  return result;
}

uint64_t sub_1C138BB28(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  int64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v30 = MEMORY[0x1E0DEE9D8];
  sub_1C1336948(0, v1, 0);
  v2 = v30;
  result = sub_1C135833C(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v25 = v1;
  v26 = v5;
  v27 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_24;
    v28 = v7;
    v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v6);
    v13 = v12[1];
    v29 = *v12;
    swift_bridgeObjectRetain();
    result = sub_1C14257E0();
    v15 = v14;
    v17 = *(_QWORD *)(v30 + 16);
    v16 = *(_QWORD *)(v30 + 24);
    if (v17 >= v16 >> 1)
    {
      v24 = result;
      sub_1C1336948(v16 > 1, v17 + 1, 1);
      result = v24;
    }
    *(_QWORD *)(v30 + 16) = v17 + 1;
    v18 = (_QWORD *)(v30 + 32 * v17);
    v18[4] = v29;
    v18[5] = v13;
    v18[6] = result;
    v18[7] = v15;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = a1 + 64;
    v19 = *(_QWORD *)(v27 + 8 * v11);
    if ((v19 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v26;
    if (*(_DWORD *)(a1 + 36) != v26)
      goto LABEL_27;
    v20 = v19 & (-2 << (v6 & 0x3F));
    if (v20)
    {
      v9 = __clz(__rbit64(v20)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v25;
    }
    else
    {
      v21 = v11 + 1;
      v22 = (unint64_t)(v9 + 63) >> 6;
      v10 = v25;
      if (v11 + 1 < v22)
      {
        v23 = *(_QWORD *)(v27 + 8 * v21);
        if (v23)
        {
LABEL_20:
          v9 = __clz(__rbit64(v23)) + (v21 << 6);
        }
        else
        {
          while (v22 - 2 != v11)
          {
            v23 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v23)
            {
              v21 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v7 = v28 + 1;
    v6 = v9;
    if (v28 + 1 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C138BD54(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(a2 + 24) = *a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return sub_1C138BDB4();
}

uint64_t sub_1C138BD8C(_BYTE *a1, uint64_t a2)
{
  *(_BYTE *)(a2 + 32) = *a1;
  return sub_1C138BDB4();
}

uint64_t sub_1C138BDB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t i;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char isUniquelyReferenced_nonNull_native;
  char v26;
  unint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  char v33;
  uint64_t *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  int64_t v43;
  _QWORD *v44;

  v1 = sub_1C14269F8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (uint64_t *)((char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(void **)(v0 + 120);
  *v4 = v5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEF740], v1);
  v6 = v5;
  LOBYTE(v5) = sub_1C1426A10();
  (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v4, v1);
  if ((v5 & 1) == 0)
    goto LABEL_45;
  if ((sub_1C138C3FC() & 1) == 0)
  {
    v7 = *(_QWORD **)(v0 + 24);
    swift_bridgeObjectRetain();
LABEL_40:
    v44 = v7;
    sub_1C14268E4();
    return swift_bridgeObjectRelease();
  }
  v7 = (_QWORD *)sub_1C1332504(MEMORY[0x1E0DEE9D8]);
  v8 = *(_QWORD *)(v0 + 24);
  v9 = *(_QWORD *)(v8 + 64);
  v40 = v8 + 64;
  v10 = 1 << *(_BYTE *)(v8 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v41 = (unint64_t)(v10 + 63) >> 6;
  v42 = v8;
  swift_bridgeObjectRetain();
  for (i = 0; ; i = v43)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v43 = i;
      v15 = v14 | (i << 6);
    }
    else
    {
      v16 = i + 1;
      if (__OFADD__(i, 1))
        goto LABEL_43;
      if (v16 >= v41)
      {
LABEL_39:
        swift_release();
        goto LABEL_40;
      }
      v17 = *(_QWORD *)(v40 + 8 * v16);
      v18 = i + 1;
      if (!v17)
      {
        v18 = i + 2;
        if (i + 2 >= v41)
          goto LABEL_39;
        v17 = *(_QWORD *)(v40 + 8 * v18);
        if (!v17)
        {
          v18 = i + 3;
          if (i + 3 >= v41)
            goto LABEL_39;
          v17 = *(_QWORD *)(v40 + 8 * v18);
          if (!v17)
          {
            v19 = i + 4;
            if (i + 4 >= v41)
              goto LABEL_39;
            v17 = *(_QWORD *)(v40 + 8 * v19);
            if (!v17)
            {
              while (1)
              {
                v18 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_44;
                if (v18 >= v41)
                  goto LABEL_39;
                v17 = *(_QWORD *)(v40 + 8 * v18);
                ++v19;
                if (v17)
                  goto LABEL_23;
              }
            }
            v18 = i + 4;
          }
        }
      }
LABEL_23:
      v12 = (v17 - 1) & v17;
      v43 = v18;
      v15 = __clz(__rbit64(v17)) + (v18 << 6);
    }
    v20 = (uint64_t *)(*(_QWORD *)(v42 + 48) + 16 * v15);
    v22 = *v20;
    v21 = v20[1];
    v23 = *(_QWORD *)(*(_QWORD *)(v42 + 56) + 8 * v15);
    v24 = *(_BYTE *)(v0 + 32) ? v23 : 0;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v44 = v7;
    v27 = sub_1C13277A0(v22, v21);
    v28 = v7[2];
    v29 = (v26 & 1) == 0;
    v30 = v28 + v29;
    if (__OFADD__(v28, v29))
      break;
    v31 = v26;
    if (v7[3] >= v30)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v7 = v44;
        if ((v26 & 1) != 0)
          goto LABEL_6;
      }
      else
      {
        sub_1C13BB1A8();
        v7 = v44;
        if ((v31 & 1) != 0)
          goto LABEL_6;
      }
    }
    else
    {
      sub_1C13BE810(v30, isUniquelyReferenced_nonNull_native);
      v32 = sub_1C13277A0(v22, v21);
      if ((v31 & 1) != (v33 & 1))
        goto LABEL_46;
      v27 = v32;
      v7 = v44;
      if ((v31 & 1) != 0)
      {
LABEL_6:
        *(_QWORD *)(v7[7] + 8 * v27) = v24;
        goto LABEL_7;
      }
    }
    v7[(v27 >> 6) + 8] |= 1 << v27;
    v34 = (uint64_t *)(v7[6] + 16 * v27);
    *v34 = v22;
    v34[1] = v21;
    *(_QWORD *)(v7[7] + 8 * v27) = v24;
    v35 = v7[2];
    v36 = __OFADD__(v35, 1);
    v37 = v35 + 1;
    if (v36)
      goto LABEL_42;
    v7[2] = v37;
    swift_bridgeObjectRetain();
LABEL_7:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  result = sub_1C142707C();
  __break(1u);
  return result;
}

uint64_t sub_1C138C140()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for QoSManager()
{
  return objc_opt_self();
}

unint64_t sub_1C138C1AC@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t result;
  uint64_t v19;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793A60);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C14298C0;
  *(_QWORD *)(inited + 32) = 7565169;
  *(_QWORD *)(inited + 40) = 0xE300000000000000;
  v6 = swift_bridgeObjectRetain();
  v7 = sub_1C138BB28(v6);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v7 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797AD0);
    v8 = sub_1C1426FBC();
  }
  else
  {
    v8 = MEMORY[0x1E0DEE9E0];
  }
  v19 = v8;
  v9 = (_QWORD *)swift_bridgeObjectRetain();
  sub_1C1336588(v9, 1, &v19);
  if (v2)
  {
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v10 = v19;
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7979D8);
    *(_QWORD *)(inited + 48) = v10;
    *(_QWORD *)(inited + 72) = v11;
    *(_QWORD *)(inited + 80) = 0x64656B636F4C6975;
    *(_QWORD *)(inited + 88) = 0xE800000000000000;
    if (*(_BYTE *)(a1 + 32))
      v12 = 1702195828;
    else
      v12 = 0x65736C6166;
    if (*(_BYTE *)(a1 + 32))
      v13 = 0xE400000000000000;
    else
      v13 = 0xE500000000000000;
    v14 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 96) = v12;
    *(_QWORD *)(inited + 104) = v13;
    *(_QWORD *)(inited + 120) = v14;
    strcpy((char *)(inited + 128), "allowQoSBoost");
    *(_WORD *)(inited + 142) = -4864;
    v15 = sub_1C138C3FC();
    if ((v15 & 1) != 0)
      v16 = 1702195828;
    else
      v16 = 0x65736C6166;
    *(_QWORD *)(inited + 168) = v14;
    if ((v15 & 1) != 0)
      v17 = 0xE400000000000000;
    else
      v17 = 0xE500000000000000;
    *(_QWORD *)(inited + 144) = v16;
    *(_QWORD *)(inited + 152) = v17;
    result = sub_1C133204C(inited);
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C138C388()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7979F0);
  sub_1C1426CEC();
  return v1;
}

unint64_t sub_1C138C3E4@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1C138C1AC(v1, a1);
}

uint64_t sub_1C138C3FC()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  const char *v5;
  uint64_t v6;

  if (qword_1ED793918 != -1)
    swift_once();
  v0 = byte_1ED798648;
  if (byte_1ED798648 == 1)
  {
    if (qword_1ED793978 != -1)
      swift_once();
    v1 = sub_1C1426854();
    __swift_project_value_buffer(v1, (uint64_t)qword_1ED7985B0);
    v2 = sub_1C1426848();
    v3 = sub_1C1426C50();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      v5 = "Device supports boosted QoS";
LABEL_12:
      _os_log_impl(&dword_1C1324000, v2, v3, v5, v4, 2u);
      MEMORY[0x1C3BAD3F4](v4, -1, -1);
    }
  }
  else
  {
    if (qword_1ED793978 != -1)
      swift_once();
    v6 = sub_1C1426854();
    __swift_project_value_buffer(v6, (uint64_t)qword_1ED7985B0);
    v2 = sub_1C1426848();
    v3 = sub_1C1426C50();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      v5 = "Device does not support boosted QoS";
      goto LABEL_12;
    }
  }

  return v0;
}

uint64_t sub_1C138C584(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v3 = sub_1C14251EC();
  v41 = *(_QWORD *)(v3 - 8);
  v42 = v3;
  v4 = MEMORY[0x1E0C80A78](v3);
  v40 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v39 = (char *)&v33 - v6;
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x1E0DEE9D8];
  if (!v7)
    return v8;
  v33 = v1;
  v43 = MEMORY[0x1E0DEE9D8];
  sub_1C1336990(0, v7, 0);
  result = sub_1C13A1698(a1);
  v11 = result;
  v12 = 0;
  v13 = a1 + 64;
  v34 = a1 + 80;
  v35 = v7;
  v37 = a1 + 64;
  v38 = a1;
  v36 = v10;
  while ((v11 & 0x8000000000000000) == 0 && v11 < 1 << *(_BYTE *)(a1 + 32))
  {
    v16 = (unint64_t)v11 >> 6;
    if ((*(_QWORD *)(v13 + 8 * ((unint64_t)v11 >> 6)) & (1 << v11)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v10)
      goto LABEL_26;
    v17 = *(_QWORD *)(a1 + 48);
    v19 = v41;
    v18 = v42;
    v20 = v39;
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v39, v17 + *(_QWORD *)(v41 + 72) * v11, v42);
    v21 = v40;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v40, v20, v18);
    v22 = sub_1C14251D4();
    v24 = v23;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    v8 = v43;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_1C1336990(0, *(_QWORD *)(v8 + 16) + 1, 1);
      v8 = v43;
    }
    v26 = *(_QWORD *)(v8 + 16);
    v25 = *(_QWORD *)(v8 + 24);
    if (v26 >= v25 >> 1)
    {
      result = sub_1C1336990(v25 > 1, v26 + 1, 1);
      v8 = v43;
    }
    *(_QWORD *)(v8 + 16) = v26 + 1;
    v27 = v8 + 16 * v26;
    *(_QWORD *)(v27 + 32) = v22;
    *(_QWORD *)(v27 + 40) = v24;
    a1 = v38;
    v14 = 1 << *(_BYTE *)(v38 + 32);
    if (v11 >= v14)
      goto LABEL_27;
    v13 = v37;
    v28 = *(_QWORD *)(v37 + 8 * v16);
    if ((v28 & (1 << v11)) == 0)
      goto LABEL_28;
    LODWORD(v10) = v36;
    if (*(_DWORD *)(v38 + 36) != (_DWORD)v36)
      goto LABEL_29;
    v29 = v28 & (-2 << (v11 & 0x3F));
    if (v29)
    {
      v14 = __clz(__rbit64(v29)) | v11 & 0xFFFFFFFFFFFFFFC0;
      v15 = v35;
    }
    else
    {
      v30 = v16 + 1;
      v31 = (unint64_t)(v14 + 63) >> 6;
      v15 = v35;
      if (v16 + 1 < v31)
      {
        v32 = *(_QWORD *)(v37 + 8 * v30);
        if (v32)
        {
LABEL_22:
          v14 = __clz(__rbit64(v32)) + (v30 << 6);
        }
        else
        {
          while (v31 - 2 != v16)
          {
            v32 = *(_QWORD *)(v34 + 8 * v16++);
            if (v32)
            {
              v30 = v16 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    ++v12;
    v11 = v14;
    if (v12 == v15)
      return v8;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1C138C858(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t i;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  BOOL v41;
  int64_t v42;
  unint64_t v43;
  int64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  int64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int64_t v65;
  uint64_t v66;
  _QWORD v67[2];
  uint64_t v68;

  v2 = v1;
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7933A0);
  v4 = MEMORY[0x1E0C80A78](v62);
  v61 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v6);
  v60 = (char *)&v57 - v8;
  v9 = *(_QWORD *)(a1 + 64);
  v58 = a1 + 64;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v59 = (unint64_t)(v10 + 63) >> 6;
  v63 = a1;
  v13 = v7;
  result = swift_bridgeObjectRetain();
  v15 = 0;
  v57 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (!v12)
    goto LABEL_7;
LABEL_4:
  v65 = v15;
  v66 = v2;
  v64 = (v12 - 1) & v12;
  for (i = __clz(__rbit64(v12)) | (v15 << 6); ; i = __clz(__rbit64(v43)) + (v42 << 6))
  {
    v17 = v63;
    v18 = *(_QWORD *)(v63 + 48);
    v19 = sub_1C142614C();
    v20 = *(_QWORD *)(v19 - 8);
    v21 = v18 + *(_QWORD *)(v20 + 72) * i;
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
    v23 = v60;
    v22(v60, v21, v19);
    v24 = *(_QWORD *)(v17 + 56);
    v25 = sub_1C14251EC();
    v68 = *(_QWORD *)(v25 - 8);
    v26 = v24 + *(_QWORD *)(v68 + 72) * i;
    v27 = v62;
    v28 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 16);
    v28(&v23[*(int *)(v62 + 48)], v26, v25);
    v29 = (uint64_t)v23;
    v30 = v13;
    sub_1C132A724(v29, v13, &qword_1ED7933A0);
    v31 = *(int *)(v27 + 48);
    v32 = v61;
    v33 = &v61[v31];
    v34 = v30 + v31;
    v22(v61, v30, v19);
    v28(v33, v34, v25);
    v35 = sub_1C1426110();
    v37 = v36;
    v38 = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v32, v19);
    v67[0] = 46;
    v67[1] = 0xE100000000000000;
    MEMORY[0x1E0C80A78](v38);
    *(&v57 - 2) = v67;
    swift_bridgeObjectRetain();
    v39 = v66;
    v40 = (_QWORD *)sub_1C1415B74(0x7FFFFFFFFFFFFFFFLL, 1, sub_1C13A35F8, (uint64_t)(&v57 - 4), v35, v37);
    v2 = v39;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v33, v25);
    if (v40[2])
    {
      v45 = v40[4];
      v46 = v40[5];
      v47 = v40[6];
      v48 = v40[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v49 = MEMORY[0x1C3BAC794](v45, v46, v47, v48);
      v51 = v50;
      swift_bridgeObjectRelease();
      sub_1C132C860(v30, &qword_1ED7933A0);
      result = swift_isUniquelyReferenced_nonNull_native();
      v13 = v30;
      v52 = v51;
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1C136C3E0(0, v57[2] + 1, 1, v57);
        v57 = (_QWORD *)result;
      }
      v12 = v64;
      v15 = v65;
      v54 = v57[2];
      v53 = v57[3];
      if (v54 >= v53 >> 1)
      {
        result = (uint64_t)sub_1C136C3E0((_QWORD *)(v53 > 1), v54 + 1, 1, v57);
        v57 = (_QWORD *)result;
      }
      v55 = v57;
      v57[2] = v54 + 1;
      v56 = &v55[2 * v54];
      v56[4] = v49;
      v56[5] = v52;
      if (v12)
        goto LABEL_4;
    }
    else
    {
      swift_bridgeObjectRelease();
      result = sub_1C132C860(v30, &qword_1ED7933A0);
      v13 = v30;
      v12 = v64;
      v15 = v65;
      if (v64)
        goto LABEL_4;
    }
LABEL_7:
    v41 = __OFADD__(v15, 1);
    v42 = v15 + 1;
    if (v41)
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v42 >= v59)
      goto LABEL_30;
    v43 = *(_QWORD *)(v58 + 8 * v42);
    if (!v43)
      break;
LABEL_19:
    v65 = v42;
    v66 = v2;
    v64 = (v43 - 1) & v43;
  }
  v44 = v42 + 1;
  if (v42 + 1 >= v59)
    goto LABEL_30;
  v43 = *(_QWORD *)(v58 + 8 * v44);
  if (v43)
    goto LABEL_18;
  v44 = v42 + 2;
  if (v42 + 2 >= v59)
    goto LABEL_30;
  v43 = *(_QWORD *)(v58 + 8 * v44);
  if (v43)
    goto LABEL_18;
  v44 = v42 + 3;
  if (v42 + 3 >= v59)
    goto LABEL_30;
  v43 = *(_QWORD *)(v58 + 8 * v44);
  if (v43)
    goto LABEL_18;
  v44 = v42 + 4;
  if (v42 + 4 >= v59)
  {
LABEL_30:
    swift_release();
    return (uint64_t)v57;
  }
  v43 = *(_QWORD *)(v58 + 8 * v44);
  if (v43)
  {
LABEL_18:
    v42 = v44;
    goto LABEL_19;
  }
  while (1)
  {
    v42 = v44 + 1;
    if (__OFADD__(v44, 1))
      break;
    if (v42 >= v59)
      goto LABEL_30;
    v43 = *(_QWORD *)(v58 + 8 * v42);
    ++v44;
    if (v43)
      goto LABEL_19;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1C138CCE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  int v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DB8E0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1C135833C(a1);
  if ((v10 & 1) != 0)
    goto LABEL_7;
  if (*(_DWORD *)(a1 + 36) != v9)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, 1, 1, v4);
  v11 = (uint64_t)&v7[*(int *)(v4 + 48)];
  sub_1C13A15CC((uint64_t)v7, v11, result, v9, 0, a1);
  v12 = sub_1C142614C();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a2, v7, v12);
  v13 = a2 + *(int *)(v4 + 48);
  v14 = sub_1C1426194();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v13, v11, v14);
  sub_1C132C860((uint64_t)v7, &qword_1EF6DB8E0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
}

uint64_t sub_1C138CE48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 208))
  {
    v1 = *(_QWORD *)(v0 + 208);
  }
  else
  {
    v2 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791DF8);
    sub_1C132C820(&qword_1ED7927F8, &qword_1ED791DF8, MEMORY[0x1E0C95FB8]);
    v1 = sub_1C1426908();
    *(_QWORD *)(v2 + 208) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1C138CEEC()
{
  uint64_t v0;

  v0 = sub_1C142605C();
  __swift_allocate_value_buffer(v0, qword_1EF6DC698);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EF6DC698);
  return sub_1C1426044();
}

uint64_t sub_1C138CF3C(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  void *v4;
  uint64_t result;
  _QWORD v6[6];

  v2 = *(NSObject **)(a1 + 16);
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_1C13A3BC4;
  *(_QWORD *)(v3 + 24) = a1;
  v6[4] = sub_1C13A469C;
  v6[5] = v3;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 1107296256;
  v6[2] = sub_1C137B458;
  v6[3] = &block_descriptor_55;
  v4 = _Block_copy(v6);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v2, v4);
  _Block_release(v4);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v2 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1C138D048()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  id v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  char *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  unint64_t v55;
  int64_t v56;
  unint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t);
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  int64_t v84;
  uint64_t v85;
  int64_t v86;
  uint64_t v87;
  int64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t *v94;
  char *v95;
  uint64_t v96;
  int64_t v97;
  char *v98;
  unint64_t v99;
  unsigned int v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  int64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;

  v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793380);
  v1 = MEMORY[0x1E0C80A78](v108);
  v107 = (char *)&v85 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = MEMORY[0x1E0C80A78](v1);
  v106 = (uint64_t)&v85 - v4;
  v5 = MEMORY[0x1E0C80A78](v3);
  v105 = (char *)&v85 - v6;
  MEMORY[0x1E0C80A78](v5);
  v104 = (char *)&v85 - v7;
  v103 = type metadata accessor for ReplicatorParticipant.RelationshipSchedule(0);
  v102 = *(_QWORD *)(v103 - 8);
  MEMORY[0x1E0C80A78](v103);
  v9 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Activity();
  v91 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v98 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7939E0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (uint64_t *)((char *)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v85 - v16;
  v18 = sub_1C14269F8();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (uint64_t *)((char *)&v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = (void *)v0[2];
  *v21 = v22;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v19 + 104))(v21, *MEMORY[0x1E0DEF740], v18);
  v23 = v22;
  LOBYTE(v22) = sub_1C1426A10();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v19 + 8))(v21, v18);
  if ((v22 & 1) == 0)
    goto LABEL_66;
  v95 = v17;
  swift_beginAccess();
  v25 = v0[23];
  v26 = *(_QWORD *)(v25 + 64);
  v87 = v25 + 64;
  v27 = 1 << *(_BYTE *)(v25 + 32);
  v28 = -1;
  if (v27 < 64)
    v28 = ~(-1 << v27);
  v99 = v28 & v26;
  v92 = v25;
  swift_bridgeObjectRetain();
  v94 = v0 + 25;
  result = swift_beginAccess();
  v29 = 0;
  v30 = 0;
  v100 = *MEMORY[0x1E0D87AE8];
  v88 = (unint64_t)(v27 + 63) >> 6;
  v86 = v88 - 1;
  v89 = v0;
  v101 = v9;
  v93 = v15;
  while (1)
  {
    if (v99)
    {
      v32 = __clz(__rbit64(v99));
      v99 &= v99 - 1;
      v97 = v29;
      v33 = v32 | (v29 << 6);
      v34 = (uint64_t)v95;
LABEL_9:
      v35 = *(_QWORD *)(v92 + 56);
      v36 = (_QWORD *)(*(_QWORD *)(v92 + 48) + 16 * v33);
      v37 = v36[1];
      *v15 = *v36;
      v15[1] = v37;
      v38 = v35 + *(_QWORD *)(v91 + 72) * v33;
      v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
      sub_1C1338F24(v38, (uint64_t)v15 + *(int *)(v39 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v15, 0, 1, v39);
      swift_bridgeObjectRetain();
      goto LABEL_16;
    }
    v40 = v29 + 1;
    if (__OFADD__(v29, 1))
      goto LABEL_65;
    if (v40 >= v88)
    {
      v97 = v29;
      v34 = (uint64_t)v95;
    }
    else
    {
      v41 = *(_QWORD *)(v87 + 8 * v40);
      v34 = (uint64_t)v95;
      if (v41)
        goto LABEL_13;
      v84 = v29 + 2;
      if (v40 + 1 >= v88)
        goto LABEL_57;
      v41 = *(_QWORD *)(v87 + 8 * v84);
      if (v41)
        goto LABEL_44;
      if (v40 + 2 >= v88)
      {
        v97 = v40 + 1;
      }
      else
      {
        v41 = *(_QWORD *)(v87 + 8 * (v40 + 2));
        if (v41)
        {
          v40 += 2;
          goto LABEL_13;
        }
        v84 = v40 + 3;
        if (v40 + 3 < v88)
        {
          v41 = *(_QWORD *)(v87 + 8 * v84);
          if (v41)
          {
LABEL_44:
            v40 = v84;
LABEL_13:
            v99 = (v41 - 1) & v41;
            v33 = __clz(__rbit64(v41)) + (v40 << 6);
            v97 = v40;
            goto LABEL_9;
          }
          while (1)
          {
            v40 = v84 + 1;
            if (__OFADD__(v84, 1))
              goto LABEL_67;
            if (v40 >= v88)
              break;
            v41 = *(_QWORD *)(v87 + 8 * v40);
            ++v84;
            if (v41)
              goto LABEL_13;
          }
          v40 = v86;
LABEL_57:
          v97 = v40;
          goto LABEL_15;
        }
        v97 = v40 + 2;
      }
    }
LABEL_15:
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v15, 1, 1, v42);
    v99 = 0;
LABEL_16:
    sub_1C132A724((uint64_t)v15, v34, (uint64_t *)&unk_1ED7939E0);
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 48))(v34, 1, v43) == 1)
      return swift_release();
    swift_bridgeObjectRelease();
    v44 = v98;
    v45 = sub_1C1339140(v34 + *(int *)(v43 + 48), (uint64_t)v98, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    v46 = *v94;
    MEMORY[0x1E0C80A78](v45);
    *(&v85 - 2) = (uint64_t)v44;
    swift_bridgeObjectRetain();
    v47 = sub_1C136CF94((uint64_t)sub_1C13A3A74, (uint64_t)(&v85 - 4), v46);
    v96 = v30;
    v48 = v47;
    swift_bridgeObjectRelease();
    v49 = *(_QWORD *)(v48 + 16);
    if (v49)
      break;
    swift_release();
    v76 = MEMORY[0x1E0DEE9D8];
LABEL_6:
    v31 = v98;
    sub_1C1390260(v98, v76);
    swift_bridgeObjectRelease();
    result = sub_1C1339004((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    v15 = v93;
    v30 = v96;
    v29 = v97;
  }
  v116 = MEMORY[0x1E0DEE9D8];
  sub_1C1336A78(0, v49, 0);
  result = sub_1C135833C(v48);
  v51 = result;
  v52 = 0;
  v53 = v48 + 64;
  v54 = *(_BYTE *)(v48 + 32);
  v109 = v50;
  v90 = v48 + 88;
  v111 = v48 + 64;
  v112 = v48;
  v110 = v49;
  while ((v51 & 0x8000000000000000) == 0 && v51 < 1 << v54)
  {
    v57 = (unint64_t)v51 >> 6;
    if ((*(_QWORD *)(v53 + 8 * ((unint64_t)v51 >> 6)) & (1 << v51)) == 0)
      goto LABEL_60;
    if (*(_DWORD *)(v48 + 36) != (_DWORD)v50)
      goto LABEL_61;
    v114 = v50;
    v115 = 1 << v51;
    v113 = v52;
    v58 = v108;
    v59 = v104;
    v60 = &v104[*(int *)(v108 + 48)];
    v61 = *(_QWORD *)(v48 + 48);
    v62 = sub_1C14251EC();
    v63 = *(_QWORD *)(v62 - 8);
    v64 = *(void (**)(char *, uint64_t, uint64_t))(v63 + 16);
    v64(v59, v61 + *(_QWORD *)(v63 + 72) * v51, v62);
    v65 = *(_QWORD *)(v48 + 56) + 16 * v51;
    v66 = *(_BYTE *)v65;
    v67 = *(_QWORD *)(v65 + 8);
    *v60 = *(_BYTE *)v65;
    *((_QWORD *)v60 + 1) = v67;
    v68 = (uint64_t)v105;
    v64(v105, (uint64_t)v59, v62);
    v69 = v68 + *(int *)(v58 + 48);
    *(_BYTE *)v69 = v66;
    *(_QWORD *)(v69 + 8) = v67;
    v70 = v106;
    sub_1C132A724(v68, v106, &qword_1ED793380);
    swift_bridgeObjectRetain_n();
    v71 = (uint64_t)v59;
    v72 = (uint64_t)v101;
    sub_1C132C860(v71, &qword_1ED793380);
    v73 = v107;
    v64(v107, v70, v62);
    v74 = v72 + *(int *)(v103 + 20);
    v75 = sub_1C14261AC();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v75 - 8) + 104))(v74, v100, v75);
    (*(void (**)(uint64_t, char *, uint64_t))(v63 + 32))(v72, v73, v62);
    sub_1C132C860(v70, &qword_1ED793380);
    v76 = v116;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C1336A78(0, *(_QWORD *)(v76 + 16) + 1, 1);
      v76 = v116;
    }
    v78 = *(_QWORD *)(v76 + 16);
    v77 = *(_QWORD *)(v76 + 24);
    v48 = v112;
    if (v78 >= v77 >> 1)
    {
      sub_1C1336A78(v77 > 1, v78 + 1, 1);
      v76 = v116;
    }
    *(_QWORD *)(v76 + 16) = v78 + 1;
    result = sub_1C1339140(v72, v76+ ((*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80))+ *(_QWORD *)(v102 + 72) * v78, type metadata accessor for ReplicatorParticipant.RelationshipSchedule);
    v54 = *(_BYTE *)(v48 + 32);
    v55 = 1 << v54;
    if (v51 >= 1 << v54)
      goto LABEL_62;
    v53 = v111;
    v79 = *(_QWORD *)(v111 + 8 * v57);
    if ((v79 & v115) == 0)
      goto LABEL_63;
    if (*(_DWORD *)(v48 + 36) != (_DWORD)v114)
      goto LABEL_64;
    v80 = v79 & (-2 << (v51 & 0x3F));
    if (v80)
    {
      v55 = __clz(__rbit64(v80)) | v51 & 0xFFFFFFFFFFFFFFC0;
      v56 = v110;
    }
    else
    {
      v81 = v57 + 1;
      v82 = (v55 + 63) >> 6;
      v56 = v110;
      if (v57 + 1 < v82)
      {
        v83 = *(_QWORD *)(v111 + 8 * v81);
        if (!v83)
        {
          v81 = v57 + 2;
          if (v57 + 2 >= v82)
            goto LABEL_20;
          v83 = *(_QWORD *)(v111 + 8 * v81);
          if (!v83)
          {
            while (v82 - 3 != v57)
            {
              v83 = *(_QWORD *)(v90 + 8 * v57++);
              if (v83)
              {
                v81 = v57 + 2;
                goto LABEL_35;
              }
            }
            goto LABEL_20;
          }
        }
LABEL_35:
        v55 = __clz(__rbit64(v83)) + (v81 << 6);
      }
    }
LABEL_20:
    v52 = v113 + 1;
    v50 = v109;
    v51 = v55;
    if (v113 + 1 == v56)
    {
      swift_release();
      goto LABEL_6;
    }
  }
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
  return result;
}

uint64_t sub_1C138DA18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  _QWORD v13[2];
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_1C1426950();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C14269B0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = *(_QWORD *)(v1 + 16);
  aBlock[4] = sub_1C13A35F0;
  aBlock[5] = v1;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C13A7F4C;
  aBlock[3] = &block_descriptor_6_1;
  v11 = _Block_copy(aBlock);
  swift_retain();
  sub_1C1426974();
  v13[1] = MEMORY[0x1E0DEE9D8];
  sub_1C1329AD0((unint64_t *)&qword_1ED7979D0, v3, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A50);
  sub_1C132C820((unint64_t *)&qword_1ED797A60, (uint64_t *)&unk_1ED797A50, MEMORY[0x1E0DEAF38]);
  sub_1C1426DF4();
  MEMORY[0x1C3BAC9D4](0, v10, v6, v11);
  _Block_release(v11);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

void sub_1C138DBEC(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  _QWORD v19[3];
  uint64_t v20;

  v3 = sub_1C14269F8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (_QWORD *)((char *)&v19[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C138DEA0();
  sub_1C132C344(a1 + 24, (uint64_t)v19, &qword_1ED793398);
  if (v20)
  {
    __swift_project_boxed_opaque_existential_1(v19, v20);
    v1 = 0;
    sub_1C14260A4();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  }
  else
  {
    sub_1C132C860((uint64_t)v19, &qword_1ED793398);
  }
  v16 = *(void **)(a1 + 16);
  *v6 = v16;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF740], v3);
  v17 = v16;
  LOBYTE(v16) = sub_1C1426A10();
  (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
  if ((v16 & 1) != 0)
  {
    sub_1C139A854();
    sub_1C139BB94();
  }
  else
  {
    __break(1u);
    swift_once();
    v7 = sub_1C1426854();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED7984F0);
    v8 = v1;
    v9 = v1;
    v10 = sub_1C1426848();
    v11 = sub_1C1426C68();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v12 = 138543362;
      v14 = v1;
      v15 = _swift_stdlib_bridgeErrorToNSError();
      v19[0] = v15;
      sub_1C1426DB8();
      *v13 = v15;

      _os_log_impl(&dword_1C1324000, v10, v11, "Failed to register replicator client: %{public}@", v12, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DACE0);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v13, -1, -1);
      MEMORY[0x1C3BAD3F4](v12, -1, -1);

    }
    else
    {

    }
  }
}

void sub_1C138DEA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  __int128 v10;
  uint64_t v11;
  _BYTE v12[56];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791E00);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C132C344(v0 + 24, (uint64_t)&v10, &qword_1ED793398);
  if (v11)
  {
    sub_1C13A1B30(&v10, (uint64_t)v12);
    v4 = sub_1C1426BCC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
    sub_1C13A3614((uint64_t)v12, (uint64_t)&v10);
    v5 = (_QWORD *)swift_allocObject();
    v5[2] = 0;
    v5[3] = 0;
    sub_1C13A1B30(&v10, (uint64_t)(v5 + 4));
    v5[11] = v0;
    swift_retain();
    sub_1C1381D0C((uint64_t)v3, (uint64_t)&unk_1EF6DB8C0, (uint64_t)v5);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  }
  else
  {
    sub_1C132C860((uint64_t)&v10, &qword_1ED793398);
    if (qword_1ED791DD8 != -1)
      swift_once();
    v6 = sub_1C1426854();
    __swift_project_value_buffer(v6, (uint64_t)qword_1ED7984F0);
    v7 = sub_1C1426848();
    v8 = sub_1C1426C68();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1C1324000, v7, v8, "Replicator is not available", v9, 2u);
      MEMORY[0x1C3BAD3F4](v9, -1, -1);
    }

  }
}

uint64_t sub_1C138E06C()
{
  uint64_t v0;

  sub_1C132C860(v0 + 24, &qword_1ED793398);
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  sub_1C132C860(v0 + 120, &qword_1ED793538);
  swift_release();
  sub_1C1339040(v0 + 168);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1C138E0E8()
{
  sub_1C138E06C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ReplicatorParticipant()
{
  return objc_opt_self();
}

uint64_t initializeBufferWithCopyOfBuffer for ReplicatorParticipant.RemoteActivitySubscription(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ReplicatorParticipant.RemoteActivitySubscription()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for ReplicatorParticipant.RemoteActivitySubscription(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ReplicatorParticipant.RemoteActivitySubscription(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ReplicatorParticipant.RemoteActivitySubscription(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReplicatorParticipant.RemoteActivitySubscription(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReplicatorParticipant.RemoteActivitySubscription()
{
  return &type metadata for ReplicatorParticipant.RemoteActivitySubscription;
}

uint64_t sub_1C138E270()
{
  uint64_t v0;
  os_unfair_lock_s *v1;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 160) + 16);
  os_unfair_lock_lock(v1);
  sub_1C139F548();
  os_unfair_lock_unlock(v1);
  return swift_unknownObjectRelease();
}

uint64_t sub_1C138E2E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  uint64_t result;
  _QWORD aBlock[6];

  v7 = type metadata accessor for ActivityManagerEvent(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = *(NSObject **)(v3 + 16);
  sub_1C1338F24(a1, (uint64_t)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ActivityManagerEvent);
  v11 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v3;
  sub_1C1339140((uint64_t)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v12 + v11, type metadata accessor for ActivityManagerEvent);
  v13 = (_QWORD *)(v12 + ((v9 + v11 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v13 = a2;
  v13[1] = a3;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_1C139F728;
  *(_QWORD *)(v14 + 24) = v12;
  aBlock[4] = sub_1C133FF1C;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C137B458;
  aBlock[3] = &block_descriptor_12;
  v15 = _Block_copy(aBlock);
  swift_retain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v10, v15);
  _Block_release(v15);
  LOBYTE(a2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((a2 & 1) != 0)
    __break(1u);
  return result;
}

void sub_1C138E4A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  void *v58;
  void (*v59)(_QWORD);
  void (*v60)(_QWORD *, uint64_t);
  uint64_t v61;
  char v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  int *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  NSObject *v69;
  os_log_type_t v70;
  uint8_t *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  const char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t, uint64_t);
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  void (*v90)(char *, char *, uint64_t);
  char *v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD v94[2];
  int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(char *, uint64_t);
  uint64_t v101;
  char *v102;
  char *v103;
  char *v104;
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  void (*v112)(_QWORD, _QWORD);
  id v113;
  int v114;
  void (*v115)(_QWORD);
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t *v135;
  char *v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;

  v111 = a2;
  v140 = a1;
  v3 = type metadata accessor for ReplicatorParticipant.RelationshipSchedule(0);
  v101 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v124 = (char *)v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = sub_1C14251EC();
  v123 = *(_QWORD *)(v118 - 8);
  MEMORY[0x1E0C80A78](v118);
  v122 = (char *)v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797560);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C1425558();
  v128 = *(_QWORD *)(v9 - 8);
  v129 = v9;
  v10 = MEMORY[0x1E0C80A78](v9);
  v125 = (char *)v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v120 = (char *)v94 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791DA0);
  MEMORY[0x1E0C80A78](v13);
  v127 = (char *)v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1C14251B0();
  v132 = *(_QWORD *)(v15 - 8);
  v133 = v15;
  MEMORY[0x1E0C80A78](v15);
  v134 = (char *)v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1C1425678();
  MEMORY[0x1E0C80A78](v17);
  v138 = (char *)v94 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = sub_1C1425A08();
  v19 = MEMORY[0x1E0C80A78](v130);
  v131 = (uint64_t)v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v137 = (uint64_t)v94 - v21;
  v22 = sub_1C1425594();
  MEMORY[0x1E0C80A78](v22);
  v136 = (char *)v94 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = type metadata accessor for ActivityManagerEvent(0);
  v24 = MEMORY[0x1E0C80A78](v121);
  v135 = (_QWORD *)((char *)v94 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = MEMORY[0x1E0C80A78](v24);
  v126 = (_QWORD *)((char *)v94 - v27);
  v28 = MEMORY[0x1E0C80A78](v26);
  v119 = (char *)v94 - v29;
  v30 = MEMORY[0x1E0C80A78](v28);
  v109 = (char *)v94 - v31;
  v32 = MEMORY[0x1E0C80A78](v30);
  v108 = (char *)v94 - v33;
  v34 = MEMORY[0x1E0C80A78](v32);
  v107 = (char *)v94 - v35;
  v36 = MEMORY[0x1E0C80A78](v34);
  v110 = (char *)v94 - v37;
  v38 = MEMORY[0x1E0C80A78](v36);
  v104 = (char *)v94 - v39;
  v40 = MEMORY[0x1E0C80A78](v38);
  v103 = (char *)v94 - v41;
  v42 = MEMORY[0x1E0C80A78](v40);
  v102 = (char *)v94 - v43;
  v44 = MEMORY[0x1E0C80A78](v42);
  v106 = (char *)v94 - v45;
  v46 = MEMORY[0x1E0C80A78](v44);
  v105 = (char *)v94 - v47;
  MEMORY[0x1E0C80A78](v46);
  v49 = (char *)v94 - v48;
  v139 = sub_1C1425498();
  v50 = *(_QWORD *)(v139 - 8);
  MEMORY[0x1E0C80A78](v139);
  v52 = (char *)v94 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_1C14269F8();
  v54 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v56 = (_QWORD *)((char *)v94 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0));
  v57 = v2;
  v58 = *(void **)(v2 + 16);
  *v56 = v58;
  v59 = *(void (**)(_QWORD))(v54 + 104);
  v114 = *MEMORY[0x1E0DEF740];
  v115 = v59;
  v59(v56);
  v113 = v58;
  LOBYTE(v58) = sub_1C1426A10();
  v60 = *(void (**)(_QWORD *, uint64_t))(v54 + 8);
  v116 = v56;
  v117 = v53;
  v60(v56, v53);
  if ((v58 & 1) == 0)
  {
    __break(1u);
LABEL_26:
    swift_once();
    goto LABEL_6;
  }
  v112 = (void (*)(_QWORD, _QWORD))v60;
  v61 = v140;
  sub_1C1406BC4((uint64_t)v52);
  v62 = sub_1C142545C();
  v63 = *(void (**)(char *, uint64_t))(v50 + 8);
  v63(v52, v139);
  sub_1C1338F24(v61, (uint64_t)v49, type metadata accessor for ActivityManagerEvent);
  if ((v62 & 1) != 0)
  {
    sub_1C1339004((uint64_t)v49, type metadata accessor for ActivityManagerEvent);
  }
  else
  {
    v94[0] = v8;
    v94[1] = v57;
    v64 = *((_QWORD *)v49 + 1);
    v99 = *(_QWORD *)v49;
    v98 = v64;
    v65 = (int *)type metadata accessor for Activity();
    v100 = v63;
    swift_bridgeObjectRetain();
    sub_1C1425924();
    v97 = sub_1C142590C();
    v96 = v66;
    sub_1C1338F24((uint64_t)&v49[v65[6]], v137, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
    sub_1C1425948();
    swift_bridgeObjectRetain();
    v95 = sub_1C14258DC();
    sub_1C14258E8();
    (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v134, &v49[v65[8]], v133);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C1425474();
    LOBYTE(v64) = sub_1C1425468();
    v100(v52, v139);
    sub_1C1339004((uint64_t)v49, type metadata accessor for ActivityManagerEvent);
    if ((v64 & 1) == 0)
    {
      v76 = v131;
      sub_1C1338F24(v140 + v65[6], v131, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1C1339004(v76, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
        return;
      }
      v77 = sub_1C1425AEC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 8))(v76, v77);
      v78 = *(_QWORD *)(v140 + v65[7]);
      v79 = *(_QWORD *)(v78 + 16);
      v81 = v128;
      v80 = v129;
      if (v79)
      {
        v82 = v78 + ((*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80));
        v83 = *(_QWORD *)(v128 + 72);
        v84 = *(void (**)(char *, uint64_t, uint64_t))(v128 + 16);
        swift_bridgeObjectRetain();
        v85 = v125;
        do
        {
          v84(v85, v82, v80);
          if ((sub_1C1425504() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            v90 = *(void (**)(char *, char *, uint64_t))(v81 + 32);
            v91 = v120;
            v90(v120, v85, v80);
            v92 = (uint64_t)v127;
            v90(v127, v91, v80);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v81 + 56))(v92, 0, 1, v80);
            sub_1C132C860(v92, &qword_1ED791DA0);
            v93 = *(unsigned __int8 *)(v140 + *(int *)(v121 + 20));
            if (*(_QWORD *)(v140 + v65[10] + 8))
              __asm { BR              X10 }
            __asm { BR              X10 }
          }
          (*(void (**)(char *, uint64_t))(v81 + 8))(v85, v80);
          v82 += v83;
          --v79;
        }
        while (v79);
        swift_bridgeObjectRelease();
      }
      v86 = (uint64_t)v127;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v81 + 56))(v127, 1, 1, v80);
      sub_1C132C860(v86, &qword_1ED791DA0);
      if (qword_1ED791DD8 != -1)
        swift_once();
      v87 = sub_1C1426854();
      __swift_project_value_buffer(v87, (uint64_t)qword_1ED7984F0);
      v68 = v126;
      sub_1C1338F24(v140, (uint64_t)v126, type metadata accessor for ActivityManagerEvent);
      v69 = sub_1C1426848();
      v70 = sub_1C1426C80();
      if (os_log_type_enabled(v69, v70))
      {
        v71 = (uint8_t *)swift_slowAlloc();
        v72 = swift_slowAlloc();
        v141 = v72;
        *(_DWORD *)v71 = 136446210;
        v88 = *v68;
        v89 = v68[1];
        swift_bridgeObjectRetain();
        v142 = sub_1C132AD90(v88, v89, &v141);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        sub_1C1339004((uint64_t)v68, type metadata accessor for ActivityManagerEvent);
        v75 = "Not replicating activity that opts out of sync: %{public}s";
        goto LABEL_8;
      }
LABEL_20:
      sub_1C1339004((uint64_t)v68, type metadata accessor for ActivityManagerEvent);
      goto LABEL_21;
    }
  }
  if (qword_1ED791DD8 != -1)
    goto LABEL_26;
LABEL_6:
  v67 = sub_1C1426854();
  __swift_project_value_buffer(v67, (uint64_t)qword_1ED7984F0);
  v68 = v135;
  sub_1C1338F24(v140, (uint64_t)v135, type metadata accessor for ActivityManagerEvent);
  v69 = sub_1C1426848();
  v70 = sub_1C1426C80();
  if (!os_log_type_enabled(v69, v70))
    goto LABEL_20;
  v71 = (uint8_t *)swift_slowAlloc();
  v72 = swift_slowAlloc();
  v141 = v72;
  *(_DWORD *)v71 = 136446210;
  v73 = *v68;
  v74 = v68[1];
  swift_bridgeObjectRetain();
  v142 = sub_1C132AD90(v73, v74, &v141);
  sub_1C1426DB8();
  swift_bridgeObjectRelease();
  sub_1C1339004((uint64_t)v68, type metadata accessor for ActivityManagerEvent);
  v75 = "Not replicating ephemeral/momentary activity: %{public}s";
LABEL_8:
  _os_log_impl(&dword_1C1324000, v69, v70, v75, v71, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1C3BAD3F4](v72, -1, -1);
  MEMORY[0x1C3BAD3F4](v71, -1, -1);
LABEL_21:

}

void sub_1C1390260(char *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void *v27;
  id v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t (*v40)();
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t (*v60)();
  void *v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  NSObject *v76;
  uint64_t (*v77)();
  os_log_type_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  NSObject *v86;
  os_log_type_t v87;
  uint8_t *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unsigned int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  _QWORD *v99;
  __int128 v100;
  uint64_t v101;
  uint64_t *v102;
  __int128 v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t *v108;
  char *v109;
  uint64_t *v110;
  char *v111;
  char *v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void *v117;
  char *v118;
  __int128 v119;
  uint64_t v120;
  __int128 v121;
  uint64_t v122;
  uint64_t v123;
  void *v124;
  void *v125;

  v118 = a1;
  v4 = sub_1C14260B0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v102 = (uint64_t *)((char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v107 = sub_1C1426194();
  v101 = *(_QWORD *)(v107 - 8);
  MEMORY[0x1E0C80A78](v107);
  v106 = (char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = type metadata accessor for ReplicatorParticipant.RelationshipSchedule(0);
  v8 = *(_QWORD *)(v96 - 8);
  v9 = MEMORY[0x1E0C80A78](v96);
  v111 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v112 = (char *)&v92 - v12;
  MEMORY[0x1E0C80A78](v11);
  v98 = (char *)&v92 - v13;
  v14 = type metadata accessor for Activity();
  v15 = MEMORY[0x1E0C80A78](v14);
  v110 = (uint64_t *)((char *)&v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v92 - v18;
  v20 = MEMORY[0x1E0C80A78](v17);
  v108 = (uint64_t *)((char *)&v92 - v21);
  MEMORY[0x1E0C80A78](v20);
  v109 = (char *)&v92 - v22;
  v23 = sub_1C14269F8();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v26 = (uint64_t *)((char *)&v92 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = *(void **)(v2 + 16);
  *v26 = v27;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v24 + 104))(v26, *MEMORY[0x1E0DEF740], v23);
  v28 = v27;
  LOBYTE(v27) = sub_1C1426A10();
  (*(void (**)(_QWORD *, uint64_t))(v24 + 8))(v26, v23);
  if ((v27 & 1) == 0)
  {
    __break(1u);
    goto LABEL_36;
  }
  sub_1C132C344(v2 + 24, (uint64_t)&v121, &qword_1ED793398);
  if (!v122)
  {
    sub_1C132C860((uint64_t)&v121, &qword_1ED793398);
    if (qword_1ED791DD8 == -1)
    {
LABEL_6:
      v31 = sub_1C1426854();
      __swift_project_value_buffer(v31, (uint64_t)qword_1ED7984F0);
      v32 = sub_1C1426848();
      v33 = sub_1C1426C68();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v34 = 0;
        _os_log_impl(&dword_1C1324000, v32, v33, "Replicator is not available", v34, 2u);
        MEMORY[0x1C3BAD3F4](v34, -1, -1);
      }

      return;
    }
LABEL_36:
    swift_once();
    goto LABEL_6;
  }
  sub_1C13A1B30(&v121, (uint64_t)&v123);
  swift_beginAccess();
  sub_1C132C344(v2 + 120, (uint64_t)&v119, &qword_1ED793538);
  if (v120)
  {
    v29 = sub_1C1339184(&v119, (uint64_t)&v121);
    MEMORY[0x1E0C80A78](v29);
    v30 = v118;
    *(&v92 - 2) = (uint64_t)&v121;
    *(&v92 - 1) = (uint64_t)v30;
    swift_bridgeObjectRetain();
    a2 = sub_1C135DC18((uint64_t (*)(char *))sub_1C13A1B50, (uint64_t)(&v92 - 4), a2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v121);
  }
  else
  {
    sub_1C132C860((uint64_t)&v119, &qword_1ED793538);
    swift_bridgeObjectRetain();
  }
  v35 = (uint64_t)v112;
  if (*(_QWORD *)(a2 + 16))
  {
    v95 = v4;
    sub_1C139E3C0(v118, v109);
    v37 = *(_QWORD *)(a2 + 16);
    if (v37)
    {
      v117 = 0;
      v38 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v92 = a2;
      v39 = a2 + v38;
      v104 = (char *)&v119 + 8;
      v105 = *(_QWORD *)(v8 + 72);
      v93 = *MEMORY[0x1E0D87790];
      v40 = type metadata accessor for Activity;
      *(_QWORD *)&v36 = 136446466;
      v103 = v36;
      v97 = MEMORY[0x1E0DEE9B8] + 8;
      v100 = xmmword_1C1427F50;
      v94 = v5;
      v41 = v107;
      v42 = (uint64_t)v106;
      v43 = (uint64_t)v98;
      v44 = v108;
      while (1)
      {
        v116 = v37;
        v115 = v39;
        sub_1C1338F24(v39, v43, type metadata accessor for ReplicatorParticipant.RelationshipSchedule);
        if (qword_1ED791DD8 != -1)
          swift_once();
        v47 = sub_1C1426854();
        v48 = __swift_project_value_buffer(v47, (uint64_t)qword_1ED7984F0);
        sub_1C1338F24((uint64_t)v118, (uint64_t)v44, (uint64_t (*)(_QWORD))v40);
        sub_1C1338F24(v43, v35, type metadata accessor for ReplicatorParticipant.RelationshipSchedule);
        v114 = v48;
        v49 = sub_1C1426848();
        v50 = sub_1C1426C68();
        if (os_log_type_enabled(v49, v50))
        {
          v51 = swift_slowAlloc();
          v52 = swift_slowAlloc();
          *(_QWORD *)&v121 = v52;
          *(_DWORD *)v51 = v103;
          v53 = *v44;
          v54 = v44[1];
          swift_bridgeObjectRetain();
          *(_QWORD *)&v119 = sub_1C132AD90(v53, v54, (uint64_t *)&v121);
          sub_1C1426DB8();
          swift_bridgeObjectRelease();
          sub_1C1339004((uint64_t)v44, (uint64_t (*)(_QWORD))v40);
          *(_WORD *)(v51 + 12) = 2082;
          sub_1C14251EC();
          sub_1C1329AD0(&qword_1ED792880, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
          v55 = (uint64_t)v112;
          v41 = v107;
          v56 = sub_1C1427058();
          *(_QWORD *)&v119 = sub_1C132AD90(v56, v57, (uint64_t *)&v121);
          sub_1C1426DB8();
          swift_bridgeObjectRelease();
          v43 = (uint64_t)v98;
          sub_1C1339004(v55, type metadata accessor for ReplicatorParticipant.RelationshipSchedule);
          _os_log_impl(&dword_1C1324000, v49, v50, "Adding activity to replicator: %{public}s for relationship schedule: %{public}s", (uint8_t *)v51, 0x16u);
          swift_arrayDestroy();
          v58 = v52;
          v42 = (uint64_t)v106;
          MEMORY[0x1C3BAD3F4](v58, -1, -1);
          MEMORY[0x1C3BAD3F4](v51, -1, -1);
        }
        else
        {
          sub_1C1339004((uint64_t)v44, (uint64_t (*)(_QWORD))v40);
          sub_1C1339004(v35, type metadata accessor for ReplicatorParticipant.RelationshipSchedule);
        }

        v59 = v110;
        v60 = v40;
        v61 = v117;
        sub_1C139257C(v43, v42);
        v62 = (uint64_t)v111;
        if (!v61)
          break;
        v113 = v61;
        v117 = 0;
        sub_1C1338F24((uint64_t)v118, (uint64_t)v59, (uint64_t (*)(_QWORD))v60);
        sub_1C1338F24(v43, v62, type metadata accessor for ReplicatorParticipant.RelationshipSchedule);
        v75 = v62;
        v76 = sub_1C1426848();
        v77 = v60;
        v78 = sub_1C1426C68();
        if (os_log_type_enabled(v76, v78))
        {
          v79 = swift_slowAlloc();
          v114 = swift_slowAlloc();
          *(_QWORD *)&v121 = v114;
          *(_DWORD *)v79 = v103;
          v80 = *v59;
          v81 = v59[1];
          swift_bridgeObjectRetain();
          *(_QWORD *)&v119 = sub_1C132AD90(v80, v81, (uint64_t *)&v121);
          sub_1C1426DB8();
          swift_bridgeObjectRelease();
          sub_1C1339004((uint64_t)v59, (uint64_t (*)(_QWORD))v77);
          *(_WORD *)(v79 + 12) = 2082;
          sub_1C14251EC();
          sub_1C1329AD0(&qword_1ED792880, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
          v82 = sub_1C1427058();
          *(_QWORD *)&v119 = sub_1C132AD90(v82, v83, (uint64_t *)&v121);
          sub_1C1426DB8();
          swift_bridgeObjectRelease();
          sub_1C1339004(v75, type metadata accessor for ReplicatorParticipant.RelationshipSchedule);
          _os_log_impl(&dword_1C1324000, v76, v78, "Could not add activity to replicator: %{public}s for relationship ID: %{public}s", (uint8_t *)v79, 0x16u);
          v84 = v114;
          swift_arrayDestroy();
          v42 = (uint64_t)v106;
          MEMORY[0x1C3BAD3F4](v84, -1, -1);
          MEMORY[0x1C3BAD3F4](v79, -1, -1);

          v41 = v107;
          sub_1C1339004(v43, type metadata accessor for ReplicatorParticipant.RelationshipSchedule);
          goto LABEL_25;
        }

        sub_1C1339004(v75, type metadata accessor for ReplicatorParticipant.RelationshipSchedule);
        sub_1C1339004((uint64_t)v59, (uint64_t (*)(_QWORD))v60);
        sub_1C1339004(v43, type metadata accessor for ReplicatorParticipant.RelationshipSchedule);
        v35 = (uint64_t)v112;
        v45 = v116;
        v46 = v115;
        v40 = v77;
LABEL_14:
        v39 = v46 + v105;
        v37 = v45 - 1;
        v44 = v108;
        if (!v37)
          goto LABEL_31;
      }
      v113 = v124;
      v117 = v125;
      v99 = __swift_project_boxed_opaque_existential_1(&v123, (uint64_t)v124);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DB840);
      v63 = v101;
      v64 = (*(unsigned __int8 *)(v101 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80);
      v65 = swift_allocObject();
      *(_OWORD *)(v65 + 16) = v100;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v63 + 16))(v65 + v64, v42, v41);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DAA58);
      v66 = v41;
      v67 = sub_1C14251EC();
      v68 = *(_QWORD *)(v67 - 8);
      v69 = (*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
      v70 = swift_allocObject();
      *(_OWORD *)(v70 + 16) = v100;
      v71 = v67;
      v72 = v94;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v68 + 16))(v70 + v69, v43, v71);
      *v102 = v70;
      v73 = v102;
      v74 = v95;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v72 + 104))(v102, v93, v95);
      sub_1C1426080();
      v117 = 0;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t *, uint64_t))(v72 + 8))(v73, v74);
      (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v42, v66);
      sub_1C1339004(v43, type metadata accessor for ReplicatorParticipant.RelationshipSchedule);
      v41 = v66;
LABEL_25:
      v35 = (uint64_t)v112;
      v45 = v116;
      v46 = v115;
      v40 = type metadata accessor for Activity;
      goto LABEL_14;
    }
LABEL_31:
    swift_bridgeObjectRelease();
    sub_1C1339004((uint64_t)v109, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_1ED791DD8 != -1)
      swift_once();
    v85 = sub_1C1426854();
    __swift_project_value_buffer(v85, (uint64_t)qword_1ED7984F0);
    sub_1C1338F24((uint64_t)v118, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    v86 = sub_1C1426848();
    v87 = sub_1C1426C80();
    if (os_log_type_enabled(v86, v87))
    {
      v88 = (uint8_t *)swift_slowAlloc();
      v89 = swift_slowAlloc();
      *(_QWORD *)&v121 = v89;
      *(_DWORD *)v88 = 136315138;
      v90 = sub_1C1406DD8();
      *(_QWORD *)&v119 = sub_1C132AD90(v90, v91, (uint64_t *)&v121);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      sub_1C1339004((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      _os_log_impl(&dword_1C1324000, v86, v87, "No applicable relationship schedules to replicate %s", v88, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v89, -1, -1);
      MEMORY[0x1C3BAD3F4](v88, -1, -1);
    }
    else
    {
      sub_1C1339004((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    }

  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v123);
}

void sub_1C1391054(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  char *v50;
  void (*v51)(char *, uint64_t, uint64_t, uint64_t);
  void (*v52)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  _QWORD v58[2];
  __int128 v59;
  uint64_t v60;
  char *v61;
  char *v62;
  unint64_t v63;
  __int128 v64;
  unsigned int v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  _QWORD *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t, uint64_t);
  void (*v77)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  _QWORD v85[7];

  v5 = sub_1C14261AC();
  v71 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C1426134();
  MEMORY[0x1E0C80A78](v8);
  v70 = (char *)v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_1C14251EC();
  v75 = *(_QWORD *)(v73 - 8);
  v10 = MEMORY[0x1E0C80A78](v73);
  v62 = (char *)v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v72 = (char *)v58 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DB838);
  MEMORY[0x1E0C80A78](v13);
  v74 = (char *)v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Activity();
  v16 = MEMORY[0x1E0C80A78](v15);
  v61 = (char *)v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v19 = (_QWORD *)((char *)v58 - v18);
  v20 = sub_1C14269F8();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = (_QWORD *)((char *)v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = *(void **)(v2 + 16);
  *v23 = v24;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v21 + 104))(v23, *MEMORY[0x1E0DEF740], v20);
  v25 = v24;
  LOBYTE(v24) = sub_1C1426A10();
  (*(void (**)(_QWORD *, uint64_t))(v21 + 8))(v23, v20);
  if ((v24 & 1) == 0)
  {
    __break(1u);
LABEL_21:
    swift_once();
    goto LABEL_4;
  }
  sub_1C132C344(v2 + 24, (uint64_t)&v83, &qword_1ED793398);
  if (!v84)
  {
    sub_1C132C860((uint64_t)&v83, &qword_1ED793398);
    if (qword_1ED791DD8 != -1)
      swift_once();
    v40 = sub_1C1426854();
    __swift_project_value_buffer(v40, (uint64_t)qword_1ED7984F0);
    v41 = sub_1C1426848();
    v42 = sub_1C1426C68();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v43 = 0;
      _os_log_impl(&dword_1C1324000, v41, v42, "Replicator is not available", v43, 2u);
      MEMORY[0x1C3BAD3F4](v43, -1, -1);
    }

    return;
  }
  v67 = v7;
  v68 = v5;
  sub_1C13A1B30(&v83, (uint64_t)v85);
  if (qword_1ED791DD8 != -1)
    goto LABEL_21;
LABEL_4:
  v26 = sub_1C1426854();
  v27 = __swift_project_value_buffer(v26, (uint64_t)qword_1ED7984F0);
  sub_1C1338F24(a1, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
  swift_bridgeObjectRetain_n();
  v60 = v27;
  v28 = sub_1C1426848();
  v29 = sub_1C1426C68();
  v30 = os_log_type_enabled(v28, v29);
  v31 = MEMORY[0x1E0DEE9B8];
  v69 = (_QWORD *)a1;
  if (v30)
  {
    v32 = swift_slowAlloc();
    v33 = swift_slowAlloc();
    *(_QWORD *)&v83 = v33;
    *(_DWORD *)v32 = 136446466;
    v34 = *v19;
    v35 = v19[1];
    swift_bridgeObjectRetain();
    v82 = sub_1C132AD90(v34, v35, (uint64_t *)&v83);
    sub_1C1426DB8();
    swift_bridgeObjectRelease();
    sub_1C1339004((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    *(_WORD *)(v32 + 12) = 2082;
    v36 = swift_bridgeObjectRetain();
    v37 = MEMORY[0x1C3BAC878](v36, v73);
    v39 = v38;
    swift_bridgeObjectRelease();
    v82 = sub_1C132AD90(v37, v39, (uint64_t *)&v83);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1324000, v28, v29, "Removing activity from replicator: %{public}s for relationship IDs: %{public}s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v33, -1, -1);
    MEMORY[0x1C3BAD3F4](v32, -1, -1);

  }
  else
  {
    sub_1C1339004((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for Activity);

    swift_bridgeObjectRelease_n();
  }
  v44 = *(_QWORD *)(a2 + 16);
  v45 = v75;
  v46 = v74;
  v58[0] = a2;
  if (v44)
  {
    v47 = a2 + ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80));
    v66 = *(_QWORD *)(v75 + 72);
    v76 = *(void (**)(char *, uint64_t, uint64_t))(v75 + 16);
    v65 = *MEMORY[0x1E0D87AE8];
    swift_bridgeObjectRetain();
    *((_QWORD *)&v48 + 1) = 2;
    v64 = xmmword_1C1427F50;
    v63 = 0x80000001C142F150;
    *(_QWORD *)&v48 = 136446466;
    v59 = v48;
    v58[1] = v31 + 8;
    v49 = v73;
    v50 = v72;
    while (1)
    {
      v76(v46, v47, v49);
      v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56);
      v52(v46, 0, 1, v49);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v46, 1, v49) == 1)
        break;
      v78 = v47;
      v79 = v44;
      (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v50, v46, v49);
      v81 = v85[6];
      v80 = __swift_project_boxed_opaque_existential_1(v85, v85[3]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DAD48);
      sub_1C142614C();
      *(_OWORD *)(swift_allocObject() + 16) = v64;
      v53 = v69[1];
      *(_QWORD *)&v83 = *v69;
      *((_QWORD *)&v83 + 1) = v53;
      swift_bridgeObjectRetain();
      sub_1C14252D0();
      sub_1C14251C8();
      sub_1C14252D0();
      swift_bridgeObjectRelease();
      v77 = v52;
      v52(v70, 1, 1, v49);
      v54 = v68;
      v55 = v71;
      sub_1C1426104();
      v56 = v49;
      v57 = v67;
      (*(void (**)(char *, _QWORD, uint64_t))(v55 + 104))(v67, v65, v54);
      sub_1C142608C();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v54);
      v45 = v75;
      v50 = v72;
      (*(void (**)(char *, uint64_t))(v75 + 8))(v72, v56);
      v49 = v56;
      v46 = v74;
      v51 = v77;
      v47 = v78 + v66;
      v44 = v79 - 1;
      if (v79 == 1)
        goto LABEL_18;
    }
  }
  else
  {
    v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v75 + 56);
    swift_bridgeObjectRetain();
    v49 = v73;
LABEL_18:
    v51(v46, 1, 1, v49);
  }
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v85);
}

void sub_1C1391AD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint8_t *v57;
  __int128 v58;
  void (*v59)(char *, uint64_t);
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  _QWORD v77[8];

  v73 = a1;
  v62 = sub_1C14261AC();
  v61 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v60 = (char *)&v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_1C1426194();
  v67 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v66 = (uint64_t)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Activity();
  v5 = MEMORY[0x1E0C80A78](v4);
  v65 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v64 = (uint64_t *)((char *)&v56 - v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DB838);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_1C14251EC();
  v11 = *(_QWORD *)(v72 - 8);
  v12 = MEMORY[0x1E0C80A78](v72);
  v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v68 = (char *)&v56 - v15;
  v16 = sub_1C14260B0();
  v69 = *(_QWORD *)(v16 - 8);
  v70 = v16;
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (uint64_t *)((char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v17);
  v71 = (char *)&v56 - v20;
  v21 = sub_1C14269F8();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v24 = (uint64_t *)((char *)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = *(void **)(v1 + 16);
  *v24 = v25;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v22 + 104))(v24, *MEMORY[0x1E0DEF740], v21);
  v26 = v25;
  LOBYTE(v25) = sub_1C1426A10();
  (*(void (**)(_QWORD *, uint64_t))(v22 + 8))(v24, v21);
  if ((v25 & 1) == 0)
  {
    __break(1u);
LABEL_18:
    swift_once();
    goto LABEL_7;
  }
  sub_1C132C344(v1 + 24, (uint64_t)&v75, &qword_1ED793398);
  if (v76)
  {
    sub_1C13A1B30(&v75, (uint64_t)v77);
    if (*(_QWORD *)(v73 + *(int *)(v4 + 40) + 8))
    {
      sub_1C14251BC();
      v27 = v72;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v72) == 1)
      {
        sub_1C132C860((uint64_t)v10, &qword_1EF6DB838);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v10, v27);
        v32 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
        v33 = v68;
        v32(v68, v14, v27);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DAA58);
        v34 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
        v35 = swift_allocObject();
        v58 = xmmword_1C1427F50;
        *(_OWORD *)(v35 + 16) = xmmword_1C1427F50;
        v32((char *)(v35 + v34), v33, v27);
        v59 = *(void (**)(char *, uint64_t))(v11 + 8);
        v59(v14, v27);
        *v19 = v35;
        v37 = v69;
        v36 = v70;
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v69 + 104))(v19, *MEMORY[0x1E0D87790], v70);
        (*(void (**)(char *, uint64_t *, uint64_t))(v37 + 32))(v71, v19, v36);
        if (qword_1ED791DD8 != -1)
          swift_once();
        v38 = sub_1C1426854();
        v39 = __swift_project_value_buffer(v38, (uint64_t)qword_1ED7984F0);
        v40 = v64;
        sub_1C1338F24(v73, (uint64_t)v64, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        v41 = sub_1C1426848();
        v42 = sub_1C1426C68();
        if (os_log_type_enabled(v41, v42))
        {
          v43 = (uint8_t *)swift_slowAlloc();
          v44 = swift_slowAlloc();
          *(_QWORD *)&v75 = v44;
          *(_DWORD *)v43 = 136446210;
          v57 = v43 + 4;
          v46 = *v40;
          v45 = v40[1];
          swift_bridgeObjectRetain();
          v74 = sub_1C132AD90(v46, v45, (uint64_t *)&v75);
          sub_1C1426DB8();
          v27 = v72;
          swift_bridgeObjectRelease();
          sub_1C1339004((uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
          _os_log_impl(&dword_1C1324000, v41, v42, "Adding dismiss record for activity: %{public}s", v43, 0xCu);
          swift_arrayDestroy();
          v47 = v44;
          v33 = v68;
          MEMORY[0x1C3BAD3F4](v47, -1, -1);
          MEMORY[0x1C3BAD3F4](v43, -1, -1);
        }
        else
        {
          sub_1C1339004((uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        }

        v48 = v66;
        sub_1C1392BFC(*(_QWORD *)v73, *(void (**)(char *, uint64_t))(v73 + 8), v33, v77, v66);
        v49 = v67;
        v57 = (uint8_t *)v39;
        v64 = (uint64_t *)v77[6];
        __swift_project_boxed_opaque_existential_1(v77, v77[3]);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DB840);
        v50 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
        v51 = swift_allocObject();
        *(_OWORD *)(v51 + 16) = v58;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v49 + 16))(v51 + v50, v48, v63);
        v52 = v61;
        v53 = v60;
        v54 = v62;
        (*(void (**)(char *, _QWORD, uint64_t))(v61 + 104))(v60, *MEMORY[0x1E0D87AE8], v62);
        v55 = v71;
        sub_1C1426080();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v54);
        (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v66, v63);
        v59(v33, v27);
        (*(void (**)(char *, uint64_t))(v69 + 8))(v55, v70);
      }
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v77);
    return;
  }
  sub_1C132C860((uint64_t)&v75, &qword_1ED793398);
  if (qword_1ED791DD8 != -1)
    goto LABEL_18;
LABEL_7:
  v28 = sub_1C1426854();
  __swift_project_value_buffer(v28, (uint64_t)qword_1ED7984F0);
  v29 = sub_1C1426848();
  v30 = sub_1C1426C68();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v31 = 0;
    _os_log_impl(&dword_1C1324000, v29, v30, "Replicator is not available", v31, 2u);
    MEMORY[0x1C3BAD3F4](v31, -1, -1);
  }

}

uint64_t sub_1C1392478()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[2];

  v1 = sub_1C1426134();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = v0[1];
  v7[0] = *v0;
  v7[1] = v4;
  swift_bridgeObjectRetain();
  sub_1C14252D0();
  sub_1C14251C8();
  sub_1C14252D0();
  swift_bridgeObjectRelease();
  v5 = sub_1C14251EC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v3, 1, 1, v5);
  return sub_1C1426104();
}

uint64_t sub_1C139257C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t (*v31)(_QWORD);
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  _QWORD v49[2];
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char *v68;

  v49[1] = a1;
  v56 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B60);
  MEMORY[0x1E0C80A78](v3);
  v53 = (char *)v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C14251B0();
  v54 = *(_QWORD *)(v5 - 8);
  v55 = v5;
  MEMORY[0x1E0C80A78](v5);
  v62 = (char *)v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935C8);
  MEMORY[0x1E0C80A78](v7);
  v51 = (char *)v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C142614C();
  v60 = *(_QWORD *)(v9 - 8);
  v61 = v9;
  v10 = MEMORY[0x1E0C80A78](v9);
  v57 = (char *)v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v68 = (char *)v49 - v12;
  v13 = sub_1C14251EC();
  v58 = *(_QWORD *)(v13 - 8);
  v59 = v13;
  v14 = MEMORY[0x1E0C80A78](v13);
  v52 = (char *)v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v63 = (char *)v49 - v16;
  v17 = sub_1C1425B04();
  MEMORY[0x1E0C80A78](v17);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793BF8);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)v49 - v22;
  v24 = sub_1C1425B40();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)v49 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for Activity();
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)v49 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = v2;
  sub_1C1338F24(v2, (uint64_t)v30, v31);
  v65 = v28;
  sub_1C14253F0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
  {
    sub_1C132C860((uint64_t)v23, &qword_1ED793BF8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v27, v23, v24);
    sub_1C1425AF8();
    sub_1C1425B28();
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v21, v27, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v21, 0, 1, v24);
    sub_1C14253FC();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  }
  sub_1C1425018();
  swift_allocObject();
  sub_1C142500C();
  sub_1C1329AD0(&qword_1EF6DB848, (uint64_t (*)(uint64_t))type metadata accessor for Activity, (uint64_t)&unk_1C142B5B8);
  v32 = v64;
  v33 = sub_1C1425000();
  if (v32)
  {
    sub_1C1339004((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    return swift_release();
  }
  else
  {
    v36 = v33;
    v37 = v34;
    v66 = v33;
    v67 = v34;
    sub_1C13A1B6C();
    sub_1C14260EC();
    sub_1C1392478();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DB858);
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DAA68);
    v39 = *(unsigned __int8 *)(*(_QWORD *)(v38 - 8) + 80);
    v40 = (v39 + 32) & ~v39;
    v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = xmmword_1C1427F50;
    v64 = v38;
    v50 = v41 + v40 + *(int *)(v38 + 48);
    if (qword_1EF6DA7E0 != -1)
      swift_once();
    v42 = sub_1C142605C();
    __swift_project_value_buffer(v42, (uint64_t)qword_1EF6DC698);
    *(_QWORD *)(v41 + v40) = sub_1C1426050();
    v43 = sub_1C14250B4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v51, 1, 1, v43);
    sub_1C133177C(v36, v37);
    sub_1C1426170();
    v51 = (char *)sub_1C13379BC(v41);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v44 = v62;
    sub_1C142512C();
    (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v57, v68, v61);
    (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v52, v63, v59);
    v46 = v53;
    v45 = v54;
    v47 = v44;
    v48 = v55;
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v53, v47, v55);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v46, 0, 1, v48);
    sub_1C1426158();
    swift_release();
    sub_1C13282B4(v36, v37);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v62, v48);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v68, v61);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v63, v59);
    return sub_1C1339004((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
  }
}

uint64_t sub_1C1392BFC@<X0>(uint64_t a1@<X0>, void (*a2)(char *, uint64_t)@<X1>, char *a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  id v34;
  uint64_t result;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  _QWORD v53[2];
  void (*v54)(char *, uint64_t);
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char *v72;

  v72 = a3;
  v53[1] = a1;
  v54 = a2;
  v63 = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B60);
  MEMORY[0x1E0C80A78](v7);
  v61 = (char *)v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_1C14251B0();
  v59 = *(_QWORD *)(v62 - 8);
  v9 = MEMORY[0x1E0C80A78](v62);
  v58 = (char *)v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v60 = (char *)v53 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935C8);
  MEMORY[0x1E0C80A78](v12);
  v55 = (char *)v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1C1426134();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1C142614C();
  v64 = *(_QWORD *)(v17 - 8);
  v65 = v17;
  v18 = MEMORY[0x1E0C80A78](v17);
  v57 = (char *)v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v68 = (char *)v53 - v20;
  v21 = sub_1C14251EC();
  v66 = *(_QWORD *)(v21 - 8);
  v67 = v21;
  v22 = MEMORY[0x1E0C80A78](v21);
  v56 = (char *)v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v25 = (char *)v53 - v24;
  v26 = type metadata accessor for ReplicatorParticipant.RemoteActivityDismissal(0);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)v53 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1C14269F8();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v32 = (_QWORD *)((char *)v53 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  v33 = *(void **)(v5 + 16);
  *v32 = v33;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v30 + 104))(v32, *MEMORY[0x1E0DEF740], v29);
  v34 = v33;
  LOBYTE(v33) = sub_1C1426A10();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v30 + 8))(v32, v29);
  if ((v33 & 1) != 0)
  {
    sub_1C142518C();
    __swift_project_boxed_opaque_existential_1(a4, a4[3]);
    sub_1C1329AD0(&qword_1EF6DB860, type metadata accessor for ReplicatorParticipant.RemoteActivityDismissal, (uint64_t)&unk_1C1429C38);
    sub_1C1329AD0(&qword_1EF6DB868, type metadata accessor for ReplicatorParticipant.RemoteActivityDismissal, (uint64_t)&unk_1C1429C10);
    v36 = v69;
    v37 = sub_1C1426038();
    if (!v36)
    {
      v40 = v37;
      v41 = v38;
      v42 = v39;
      v70 = v37;
      v71 = v38;
      sub_1C13A1B6C();
      sub_1C14260EC();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v66 + 56))(v16, 1, 1, v67);
      swift_bridgeObjectRetain();
      sub_1C1426104();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DB858);
      v72 = v25;
      v43 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DAA68) - 8) + 80);
      v44 = (v43 + 32) & ~v43;
      v45 = v41;
      v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = xmmword_1C1427F50;
      *(_QWORD *)(v46 + v44) = v42;
      v47 = sub_1C14250B4();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v55, 1, 1, v47);
      v69 = v45;
      sub_1C133177C(v40, v45);
      sub_1C1426170();
      v55 = (char *)sub_1C13379BC(v46);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      v48 = v58;
      sub_1C142518C();
      v49 = v60;
      sub_1C142512C();
      v50 = v59;
      v54 = *(void (**)(char *, uint64_t))(v59 + 8);
      v51 = v62;
      v54(v48, v62);
      (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v57, v68, v65);
      (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v56, v72, v67);
      v52 = v61;
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v61, v49, v51);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v52, 0, 1, v51);
      sub_1C1426158();
      sub_1C13282B4(v40, v69);
      v54(v49, v51);
      (*(void (**)(char *, uint64_t))(v64 + 8))(v68, v65);
      (*(void (**)(char *, uint64_t))(v66 + 8))(v72, v67);
    }
    return sub_1C1339004((uint64_t)v28, type metadata accessor for ReplicatorParticipant.RemoteActivityDismissal);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C1393230()
{
  sub_1C14270E8();
  sub_1C14270F4();
  return sub_1C1427100();
}

uint64_t sub_1C1393270()
{
  return sub_1C14270F4();
}

uint64_t sub_1C1393294()
{
  sub_1C14270E8();
  sub_1C14270F4();
  return sub_1C1427100();
}

uint64_t sub_1C13932D0()
{
  return 0x6165724365746164;
}

uint64_t sub_1C13932F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6165724365746164 && a2 == 0xEB00000000646574)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1C1427064();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C139339C()
{
  return 0;
}

void sub_1C13933A8(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1C13933B4()
{
  sub_1C13A4478();
  return sub_1C1427124();
}

uint64_t sub_1C13933DC()
{
  sub_1C13A4478();
  return sub_1C1427130();
}

uint64_t sub_1C1393404@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;

  v16 = a2;
  v18 = sub_1C14251B0();
  v15 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v17 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DB9A8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ReplicatorParticipant.RemoteActivityDismissal(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C142518C();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C13A4478();
  sub_1C142710C();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    v12 = (uint64_t)v11;
  }
  else
  {
    sub_1C1329AD0(&qword_1EF6DB9B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    sub_1C1427010();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v11, v17, v18);
    sub_1C1338F24((uint64_t)v11, v16, type metadata accessor for ReplicatorParticipant.RemoteActivityDismissal);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    v12 = (uint64_t)v11;
  }
  return sub_1C1339004(v12, type metadata accessor for ReplicatorParticipant.RemoteActivityDismissal);
}

uint64_t sub_1C1393600@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C1393404(a1, a2);
}

uint64_t sub_1C1393614(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DB9C0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C13A4478();
  sub_1C1427118();
  sub_1C14251B0();
  sub_1C1329AD0(&qword_1EF6DB9C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  sub_1C142704C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1C1393724(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int64_t v32;
  unint64_t v33;
  unint64_t v34;
  int64_t v35;
  unint64_t v36;
  int64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  int64_t v49;
  unint64_t v50;
  int64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  int64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  int64_t v65;
  uint64_t i;

  swift_bridgeObjectRetain();
  v6 = sub_1C135D644(a4);
  if (a2)
    v7 = a2;
  else
    v7 = sub_1C1332898(MEMORY[0x1E0DEE9D8]);
  swift_bridgeObjectRetain();
  v8 = sub_1C135D644(v7);
  if (*(_QWORD *)(v8 + 16) <= *(_QWORD *)(v6 + 16) >> 3)
  {
    swift_bridgeObjectRetain();
    sub_1C13559B4(v8);
    v9 = v6;
  }
  else
  {
    swift_bridgeObjectRetain();
    v9 = sub_1C1355F5C(v8, v6);
  }
  v63 = a2;
  if (*(_QWORD *)(v6 + 16) <= *(_QWORD *)(v8 + 16) >> 3)
  {
    swift_bridgeObjectRetain();
    sub_1C13559B4(v6);
    v64 = v8;
  }
  else
  {
    swift_bridgeObjectRetain();
    v64 = sub_1C1355F5C(v6, v8);
  }
  v62 = sub_1C13A0C34(v8, v6);
  result = swift_bridgeObjectRelease();
  v11 = 0;
  v12 = v9 + 56;
  v13 = 1 << *(_BYTE *)(v9 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v9 + 56);
  v16 = (unint64_t)(v13 + 63) >> 6;
  for (i = a4; ; a4 = i)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v11 << 6);
      goto LABEL_30;
    }
    v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
      goto LABEL_97;
    }
    if (v19 >= v16)
      goto LABEL_33;
    v20 = *(_QWORD *)(v12 + 8 * v19);
    ++v11;
    if (!v20)
    {
      v11 = v19 + 1;
      if (v19 + 1 >= v16)
        goto LABEL_33;
      v20 = *(_QWORD *)(v12 + 8 * v11);
      if (!v20)
      {
        v11 = v19 + 2;
        if (v19 + 2 >= v16)
          goto LABEL_33;
        v20 = *(_QWORD *)(v12 + 8 * v11);
        if (!v20)
          break;
      }
    }
LABEL_29:
    v15 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_30:
    v22 = (uint64_t *)(*(_QWORD *)(v9 + 48) + 16 * v18);
    v23 = *v22;
    v24 = v22[1];
    v25 = *(_QWORD *)(a4 + 16);
    swift_bridgeObjectRetain();
    if (v25)
    {
      sub_1C13277A0(v23, v24);
      if ((v26 & 1) != 0)
        sub_1C1425B64();
    }
    sub_1C1426F08();
    swift_bridgeObjectRelease();
    sub_1C14252D0();
    swift_bridgeObjectRelease();
    sub_1C14252D0();
    sub_1C14252D0();
    swift_bridgeObjectRelease();
    sub_1C14252D0();
    sub_1C14252D0();
    result = swift_bridgeObjectRelease();
  }
  v21 = v19 + 3;
  if (v21 < v16)
  {
    v20 = *(_QWORD *)(v12 + 8 * v21);
    if (!v20)
    {
      while (1)
      {
        v11 = v21 + 1;
        if (__OFADD__(v21, 1))
          break;
        if (v11 >= v16)
          goto LABEL_33;
        v20 = *(_QWORD *)(v12 + 8 * v11);
        ++v21;
        if (v20)
          goto LABEL_29;
      }
LABEL_97:
      __break(1u);
      goto LABEL_98;
    }
    v11 = v21;
    goto LABEL_29;
  }
LABEL_33:
  result = swift_release();
  if (!v63)
  {
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  v27 = 0;
  v28 = v64 + 56;
  v29 = 1 << *(_BYTE *)(v64 + 32);
  v30 = -1;
  if (v29 < 64)
    v30 = ~(-1 << v29);
  v31 = v30 & *(_QWORD *)(v64 + 56);
  v32 = (unint64_t)(v29 + 63) >> 6;
  while (2)
  {
    if (v31)
    {
      v33 = __clz(__rbit64(v31));
      v31 &= v31 - 1;
      v34 = v33 | (v27 << 6);
LABEL_54:
      v38 = (uint64_t *)(*(_QWORD *)(v64 + 48) + 16 * v34);
      v39 = *v38;
      v40 = v38[1];
      v41 = *(_QWORD *)(a4 + 16);
      swift_bridgeObjectRetain();
      if (v41)
      {
        sub_1C13277A0(v39, v40);
        if ((v42 & 1) != 0)
          sub_1C1425B64();
      }
      sub_1C1426F08();
      swift_bridgeObjectRelease();
      sub_1C14252D0();
      swift_bridgeObjectRelease();
      sub_1C14252D0();
      sub_1C14252D0();
      swift_bridgeObjectRelease();
      sub_1C14252D0();
      sub_1C14252D0();
      result = swift_bridgeObjectRelease();
      a4 = i;
      continue;
    }
    break;
  }
  v35 = v27 + 1;
  if (__OFADD__(v27, 1))
    goto LABEL_95;
  if (v35 < v32)
  {
    v36 = *(_QWORD *)(v28 + 8 * v35);
    ++v27;
    if (!v36)
    {
      v27 = v35 + 1;
      if (v35 + 1 >= v32)
        goto LABEL_57;
      v36 = *(_QWORD *)(v28 + 8 * v27);
      if (!v36)
      {
        v27 = v35 + 2;
        if (v35 + 2 >= v32)
          goto LABEL_57;
        v36 = *(_QWORD *)(v28 + 8 * v27);
        if (!v36)
        {
          v37 = v35 + 3;
          if (v37 >= v32)
            goto LABEL_57;
          v36 = *(_QWORD *)(v28 + 8 * v37);
          if (!v36)
          {
            while (1)
            {
              v27 = v37 + 1;
              if (__OFADD__(v37, 1))
                break;
              if (v27 >= v32)
                goto LABEL_57;
              v36 = *(_QWORD *)(v28 + 8 * v27);
              ++v37;
              if (v36)
                goto LABEL_53;
            }
LABEL_98:
            __break(1u);
            goto LABEL_99;
          }
          v27 = v37;
        }
      }
    }
LABEL_53:
    v31 = (v36 - 1) & v36;
    v34 = __clz(__rbit64(v36)) + (v27 << 6);
    goto LABEL_54;
  }
LABEL_57:
  result = swift_release();
  v43 = 0;
  v60 = v62 + 56;
  v44 = 1 << *(_BYTE *)(v62 + 32);
  v45 = -1;
  if (v44 < 64)
    v45 = ~(-1 << v44);
  v46 = v45 & *(_QWORD *)(v62 + 56);
  v61 = (unint64_t)(v44 + 63) >> 6;
  while (2)
  {
    if (v46)
    {
      v47 = __clz(__rbit64(v46));
      v46 &= v46 - 1;
      v48 = v47 | (v43 << 6);
      goto LABEL_78;
    }
    v49 = v43 + 1;
    if (__OFADD__(v43, 1))
      goto LABEL_96;
    if (v49 >= v61)
    {
LABEL_91:
      swift_release();
      return 0;
    }
    v50 = *(_QWORD *)(v60 + 8 * v49);
    ++v43;
    if (v50)
      goto LABEL_77;
    v43 = v49 + 1;
    if (v49 + 1 >= v61)
      goto LABEL_91;
    v50 = *(_QWORD *)(v60 + 8 * v43);
    if (v50)
      goto LABEL_77;
    v43 = v49 + 2;
    if (v49 + 2 >= v61)
      goto LABEL_91;
    v50 = *(_QWORD *)(v60 + 8 * v43);
    if (v50)
    {
LABEL_77:
      v46 = (v50 - 1) & v50;
      v48 = __clz(__rbit64(v50)) + (v43 << 6);
LABEL_78:
      v52 = (uint64_t *)(*(_QWORD *)(v62 + 48) + 16 * v48);
      v54 = *v52;
      v53 = v52[1];
      v55 = *(_QWORD *)(a4 + 16);
      swift_bridgeObjectRetain();
      v65 = v43;
      if (v55)
      {
        swift_bridgeObjectRetain();
        sub_1C13277A0(v54, v53);
        if ((v56 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          sub_1C1425B64();
          v57 = 0;
          goto LABEL_83;
        }
        swift_bridgeObjectRelease();
      }
      v57 = 1;
LABEL_83:
      if (*(_QWORD *)(v63 + 16))
      {
        swift_bridgeObjectRetain();
        sub_1C13277A0(v54, v53);
        if ((v58 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          sub_1C1425B64();
          if ((v57 & 1) == 0)
          {
            v59 = sub_1C1425B70();
            if (v59 == sub_1C1425B70())
              goto LABEL_90;
          }
          goto LABEL_60;
        }
        swift_bridgeObjectRelease();
      }
      if ((v57 & 1) != 0)
      {
LABEL_90:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_61;
      }
LABEL_60:
      sub_1C1426F08();
      swift_bridgeObjectRelease();
      sub_1C14252D0();
      swift_bridgeObjectRelease();
      sub_1C14252D0();
      sub_1C14252D0();
      swift_bridgeObjectRelease();
      sub_1C14252D0();
      sub_1C14252D0();
      swift_bridgeObjectRelease();
      sub_1C14252D0();
      sub_1C14252D0();
LABEL_61:
      a4 = i;
      result = swift_bridgeObjectRelease();
      v43 = v65;
      continue;
    }
    break;
  }
  v51 = v49 + 3;
  if (v51 >= v61)
    goto LABEL_91;
  v50 = *(_QWORD *)(v60 + 8 * v51);
  if (v50)
  {
    v43 = v51;
    goto LABEL_77;
  }
  while (1)
  {
    v43 = v51 + 1;
    if (__OFADD__(v51, 1))
      break;
    if (v43 >= v61)
      goto LABEL_91;
    v50 = *(_QWORD *)(v60 + 8 * v43);
    ++v51;
    if (v50)
      goto LABEL_77;
  }
LABEL_99:
  __break(1u);
  return result;
}

uint64_t sub_1C1393FAC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];
  char v12;
  char v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DB898);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C13A34B0();
  sub_1C1427118();
  v13 = 0;
  sub_1C1427040();
  if (!v3)
  {
    v11[1] = a3;
    v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DB880);
    sub_1C13A3538(&qword_1EF6DB8A0, (uint64_t (*)(void))sub_1C13A35AC, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
    sub_1C142704C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C139410C()
{
  _BYTE *v0;

  if (*v0)
    return 0x7069726373627573;
  else
    return 0x766974634177656ELL;
}

uint64_t sub_1C1394160@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C13A31E4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C1394184(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1C1394190()
{
  sub_1C13A34B0();
  return sub_1C1427124();
}

uint64_t sub_1C13941B8()
{
  sub_1C13A34B0();
  return sub_1C1427130();
}

uint64_t sub_1C13941E0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_1C13A331C(a1);
  if (!v2)
  {
    *(_BYTE *)a2 = result & 1;
    *(_QWORD *)(a2 + 8) = v5;
  }
  return result;
}

uint64_t sub_1C1394210(_QWORD *a1)
{
  unsigned __int8 *v1;

  return sub_1C1393FAC(a1, *v1, *((_QWORD *)v1 + 1));
}

uint64_t sub_1C139422C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  NSObject *v42;
  _QWORD *v43;
  uint64_t v44;
  void *v45;
  os_unfair_lock_s *v46;
  uint64_t v47;
  _QWORD v48[2];
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t aBlock[6];

  v2 = v1;
  v4 = sub_1C1425630();
  MEMORY[0x1E0C80A78](v4);
  v53 = (char *)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = type metadata accessor for ActivityParticipantEvent(0);
  MEMORY[0x1E0C80A78](v54);
  v7 = (_QWORD *)((char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_1C142614C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1C14251EC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1C1426134();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = a1;
  sub_1C1426140();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v18, 1, v12);
  if ((_DWORD)result != 1)
  {
    v51 = v2;
    v52 = v15;
    v49 = v13;
    v50 = v12;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v18, v12);
    if (qword_1ED791DD8 != -1)
      swift_once();
    v20 = sub_1C1426854();
    __swift_project_value_buffer(v20, (uint64_t)qword_1ED7984F0);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v55, v8);
    v21 = sub_1C1426848();
    v22 = sub_1C1426C80();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      aBlock[0] = v24;
      *(_DWORD *)v23 = 136446210;
      v48[1] = v23 + 4;
      sub_1C1329AD0(&qword_1EF6DB8B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D87A00], MEMORY[0x1E0D87A20]);
      v25 = sub_1C1427058();
      v56 = sub_1C132AD90(v25, v26, aBlock);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      _os_log_impl(&dword_1C1324000, v21, v22, "ReplicatorParticipant stopping activity due to deleted replicator record ID: %{public}s", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v24, -1, -1);
      MEMORY[0x1C3BAD3F4](v23, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }

    v27 = v51;
    v28 = sub_1C13A3710(v55);
    if (v29)
    {
      v30 = v28;
      v31 = v29;
      swift_bridgeObjectRetain();
      v32 = sub_1C14251C8();
      v34 = v33;
      v35 = (int *)v54;
      sub_1C1425624();
      sub_1C1425570();
      type metadata accessor for ActivityParticipantEvent.EventType(0);
      swift_storeEnumTagMultiPayload();
      v36 = (char *)v7 + v35[7];
      v37 = *MEMORY[0x1E0C8F758];
      v38 = sub_1C1425558();
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 104))(v36, v37, v38);
      v39 = (char *)v7 + v35[9];
      v40 = sub_1C1425450();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v39, 1, 1, v40);
      *v7 = v30;
      v7[1] = v31;
      v7[2] = v32;
      v7[3] = v34;
      v41 = (uint64_t *)((char *)v7 + v35[8]);
      *v41 = v27;
      v41[1] = &off_1E7A8C138;
      *((_BYTE *)v7 + v35[10]) = 0;
      v42 = *(NSObject **)(v27 + 16);
      v43 = (_QWORD *)swift_allocObject();
      v43[2] = v27;
      v43[3] = v30;
      v43[4] = v31;
      v44 = swift_allocObject();
      *(_QWORD *)(v44 + 16) = sub_1C13A3A58;
      *(_QWORD *)(v44 + 24) = v43;
      aBlock[4] = (uint64_t)sub_1C13A469C;
      aBlock[5] = v44;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1C137B458;
      aBlock[3] = (uint64_t)&block_descriptor_32_0;
      v45 = _Block_copy(aBlock);
      swift_retain_n();
      swift_retain();
      swift_release();
      dispatch_sync(v42, v45);
      _Block_release(v45);
      LOBYTE(v42) = swift_isEscapingClosureAtFileLocation();
      result = swift_release();
      if ((v42 & 1) != 0)
      {
        __break(1u);
      }
      else
      {
        v46 = (os_unfair_lock_s *)(*(_QWORD *)(v27 + 160) + 16);
        os_unfair_lock_lock(v46);
        sub_1C13A3B54(aBlock);
        v47 = aBlock[0];
        os_unfair_lock_unlock(v46);
        if (v47)
        {
          sub_1C13D0788((uint64_t)v7);
          swift_unknownObjectRelease();
        }
        sub_1C1339004((uint64_t)v7, type metadata accessor for ActivityParticipantEvent);
        (*(void (**)(char *, uint64_t))(v49 + 8))(v52, v50);
        return swift_release();
      }
    }
    else
    {
      return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v52, v50);
    }
  }
  return result;
}

uint64_t sub_1C13947C0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797560);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1394894(a2, a3);
  v8 = type metadata accessor for Activity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C13B396C((uint64_t)v7, a2, a3);
  return swift_endAccess();
}

void sub_1C1394894(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  char *v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  _QWORD v49[8];

  v44 = a1;
  v45 = a2;
  v3 = sub_1C14261AC();
  v42 = *(_QWORD *)(v3 - 8);
  v43 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C1426134();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C142614C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1C14269F8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (uint64_t *)((char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *(void **)(v2 + 16);
  *v16 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DEF740], v13);
  v18 = v17;
  LOBYTE(v17) = sub_1C1426A10();
  (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) == 0)
  {
    __break(1u);
    swift_once();
    v26 = sub_1C1426854();
    __swift_project_value_buffer(v26, (uint64_t)qword_1ED7984F0);
    v27 = v45;
    swift_bridgeObjectRetain();
    v28 = v8;
    swift_bridgeObjectRetain();
    v29 = v8;
    v30 = sub_1C1426848();
    v31 = sub_1C1426C68();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = swift_slowAlloc();
      v33 = (_QWORD *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      *(_QWORD *)&v47 = v34;
      *(_DWORD *)v32 = 136446466;
      swift_bridgeObjectRetain();
      v46 = sub_1C132AD90(v44, v27, (uint64_t *)&v47);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v32 + 12) = 2114;
      v35 = v8;
      v36 = _swift_stdlib_bridgeErrorToNSError();
      v46 = v36;
      sub_1C1426DB8();
      *v33 = v36;

      _os_log_impl(&dword_1C1324000, v30, v31, "Could not delete dismiss record for activity: %{public}s; error: %{public}@",
        (uint8_t *)v32,
        0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DACE0);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v33, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v34, -1, -1);
      MEMORY[0x1C3BAD3F4](v32, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    goto LABEL_12;
  }
  sub_1C132C344(v2 + 24, (uint64_t)&v47, &qword_1ED793398);
  if (v48)
  {
    sub_1C13A1B30(&v47, (uint64_t)v49);
    v19 = sub_1C14251EC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 1, 1, v19);
    swift_bridgeObjectRetain();
    sub_1C1426104();
    v41 = v49[6];
    __swift_project_boxed_opaque_existential_1(v49, v49[3]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DAD48);
    v20 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1C1427F50;
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 16))(v21 + v20, v12, v9);
    v22 = v5;
    v23 = v9;
    v25 = v42;
    v24 = v43;
    (*(void (**)(char *, _QWORD, uint64_t))(v42 + 104))(v22, *MEMORY[0x1E0D87AE8], v43);
    sub_1C142608C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v23);
LABEL_12:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
    return;
  }
  sub_1C132C860((uint64_t)&v47, &qword_1ED793398);
  if (qword_1ED791DD8 != -1)
    swift_once();
  v37 = sub_1C1426854();
  __swift_project_value_buffer(v37, (uint64_t)qword_1ED7984F0);
  v38 = sub_1C1426848();
  v39 = sub_1C1426C68();
  if (os_log_type_enabled(v38, v39))
  {
    v40 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v40 = 0;
    _os_log_impl(&dword_1C1324000, v38, v39, "Replicator is not available", v40, 2u);
    MEMORY[0x1C3BAD3F4](v40, -1, -1);
  }

}

uint64_t sub_1C1394E78(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  sub_1C13C088C(a2);
  swift_endAccess();
  swift_bridgeObjectRelease();
  return sub_1C138D048();
}

uint64_t sub_1C1394EE4(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t *v28;
  char v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;

  v43 = a3;
  v5 = type metadata accessor for Activity();
  MEMORY[0x1E0C80A78](v5);
  v41 = (uint64_t *)((char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793380);
  v8 = MEMORY[0x1E0C80A78](v7);
  v40 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v39 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v39 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v39 - v16;
  v18 = *a2;
  v19 = *((_QWORD *)a2 + 1);
  v20 = sub_1C14251EC();
  v42 = *(_QWORD *)(v20 - 8);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v21(v17, a1, v20);
  v22 = *(int *)(v7 + 48);
  v23 = &v17[v22];
  *v23 = v18;
  *((_QWORD *)v23 + 1) = v19;
  v24 = &v15[v22];
  v44 = v15;
  v25 = v15;
  v26 = (uint64_t)v12;
  v21(v25, (uint64_t)v17, v20);
  *v24 = v18;
  *((_QWORD *)v24 + 1) = v19;
  v27 = &v12[*(int *)(v7 + 48)];
  v21(v12, (uint64_t)v17, v20);
  *v27 = v18;
  *((_QWORD *)v27 + 1) = v19;
  v28 = v41;
  sub_1C1338F24(v43, (uint64_t)v41, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
  if (v18 == 1)
  {
    swift_bridgeObjectRetain_n();
    sub_1C1339004((uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    sub_1C132C860(v26, &qword_1ED793380);
    sub_1C132C860((uint64_t)v17, &qword_1ED793380);
    v29 = 1;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v20);
  }
  else
  {
    v30 = v40;
    v31 = &v40[*(int *)(v7 + 48)];
    v43 = v26;
    v21(v40, v26, v20);
    *v31 = v18;
    *((_QWORD *)v31 + 1) = v19;
    v32 = v30;
    if (*(_QWORD *)(v19 + 16))
    {
      v33 = *v28;
      v34 = v28[1];
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_1C13277A0(v33, v34);
      v29 = v35;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      v29 = 0;
    }
    v36 = v42;
    sub_1C1339004((uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    sub_1C132C860(v43, &qword_1ED793380);
    sub_1C132C860((uint64_t)v17, &qword_1ED793380);
    v37 = *(void (**)(char *, uint64_t))(v36 + 8);
    v37(v32, v20);
    v37(v44, v20);
  }
  return v29 & 1;
}

void sub_1C13951C0(uint64_t a1, NSObject *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  unint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  char *v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint8_t *v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  NSObject *v95;
  os_log_type_t v96;
  uint8_t *v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  os_log_type_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  char *v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  void (*v129)(char *, uint64_t);
  uint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  NSObject *v137;
  os_log_type_t v138;
  int v139;
  _BOOL4 v140;
  uint64_t *v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  unint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  unint64_t v152;
  os_log_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  NSObject *v159;
  os_log_type_t v160;
  uint8_t *v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t v165;
  uint64_t *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  NSObject *v170;
  os_log_type_t v171;
  int v172;
  uint64_t v173;
  uint64_t v174;
  unint64_t v175;
  uint64_t v176;
  unint64_t v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  unint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  int *v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  _QWORD *v197;
  uint64_t v198;
  os_unfair_lock_s *v199;
  uint64_t v200;
  char *v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t *v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t *v211;
  char *v212;
  uint64_t v213;
  char *v214;
  uint64_t *v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t *v220;
  char *v221;
  uint64_t v222;
  os_log_t v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  uint64_t v232;
  char *v233;
  char *v234;
  uint64_t v235;
  char *v236;
  void (*v237)(char *, uint64_t, uint64_t);
  uint64_t v238;
  char *v239;
  uint64_t v240;
  unsigned __int8 v241;
  uint64_t v242;
  __int128 v243;
  uint64_t v244;
  _QWORD v245[4];

  v3 = v2;
  v223 = a2;
  v240 = a1;
  v219 = type metadata accessor for ActivityParticipantEvent(0);
  MEMORY[0x1E0C80A78](v219);
  v220 = (uint64_t *)((char *)&v205 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_1C142614C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v239 = (char *)&v205 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v236 = (char *)&v205 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v231 = (char *)&v205 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v228 = (char *)&v205 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v214 = (char *)&v205 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v212 = (char *)&v205 - v18;
  MEMORY[0x1E0C80A78](v17);
  v217 = (char *)&v205 - v19;
  v218 = type metadata accessor for ActivityParticipantEvent.EventType(0);
  MEMORY[0x1E0C80A78](v218);
  v226 = (uint64_t)&v205 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v225 = sub_1C14251B0();
  v222 = *(_QWORD *)(v225 - 8);
  v21 = MEMORY[0x1E0C80A78](v225);
  v221 = (char *)&v205 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v224 = (char *)&v205 - v23;
  v229 = type metadata accessor for Activity();
  v24 = MEMORY[0x1E0C80A78](v229);
  v213 = (uint64_t)&v205 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x1E0C80A78](v24);
  v211 = (uint64_t *)((char *)&v205 - v27);
  v28 = MEMORY[0x1E0C80A78](v26);
  v216 = (uint64_t)&v205 - v29;
  v30 = MEMORY[0x1E0C80A78](v28);
  v215 = (uint64_t *)((char *)&v205 - v31);
  v32 = MEMORY[0x1E0C80A78](v30);
  v34 = (char *)&v205 - v33;
  MEMORY[0x1E0C80A78](v32);
  v230 = (uint64_t)&v205 - v35;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DB8C8);
  MEMORY[0x1E0C80A78](v36);
  v233 = (char *)&v205 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v232 = sub_1C142617C();
  v235 = *(_QWORD *)(v232 - 8);
  MEMORY[0x1E0C80A78](v232);
  v234 = (char *)&v205 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935C8);
  MEMORY[0x1E0C80A78](v39);
  v41 = (char *)&v205 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DB8D0);
  MEMORY[0x1E0C80A78](v42);
  v44 = (char *)&v205 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DB8D8);
  MEMORY[0x1E0C80A78](v45);
  v47 = (char *)&v205 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_1C1426194();
  v49 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v51 = (char *)&v205 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v227 = v3;
  sub_1C132C344(v3 + 24, (uint64_t)&v243, &qword_1ED793398);
  if (v244)
  {
    v206 = (uint64_t *)v34;
    v210 = v49;
    v207 = v51;
    v208 = v48;
    sub_1C13A1B30(&v243, (uint64_t)v245);
    __swift_project_boxed_opaque_existential_1(v245, v245[3]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DAD48);
    v52 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_1C1427F50;
    v54 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v55 = v240;
    v238 = v5;
    v237 = v54;
    ((void (*)(unint64_t, uint64_t))v54)(v53 + v52, v240);
    v56 = sub_1C14250B4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v41, 1, 1, v56);
    v57 = v55;
    v58 = v6;
    v63 = sub_1C1426098();
    sub_1C132C860((uint64_t)v41, &qword_1ED7935C8);
    swift_bridgeObjectRelease();
    sub_1C138CCE0(v63, (uint64_t)v44);
    swift_bridgeObjectRelease();
    v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DB8E0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 48))(v44, 1, v64) == 1)
    {
      sub_1C132C860((uint64_t)v44, &qword_1EF6DB8D0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v210 + 56))(v47, 1, 1, v208);
LABEL_11:
      sub_1C132C860((uint64_t)v47, &qword_1EF6DB8D8);
      if (qword_1ED791DD8 != -1)
        swift_once();
      v70 = sub_1C1426854();
      __swift_project_value_buffer(v70, (uint64_t)qword_1ED7984F0);
      v71 = v236;
      v72 = v238;
      v237(v236, v57, v238);
      v73 = sub_1C1426848();
      v74 = sub_1C1426C68();
      if (os_log_type_enabled(v73, v74))
      {
        v75 = (uint8_t *)swift_slowAlloc();
        v76 = swift_slowAlloc();
        *(_QWORD *)&v243 = v76;
        *(_DWORD *)v75 = 136446210;
        sub_1C1329AD0(&qword_1EF6DB8B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D87A00], MEMORY[0x1E0D87A20]);
        v77 = sub_1C1427058();
        v242 = sub_1C132AD90(v77, v78, (uint64_t *)&v243);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v58 + 8))(v71, v72);
        _os_log_impl(&dword_1C1324000, v73, v74, "Received replicator record update but record does not exist: %{public}s", v75, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v76, -1, -1);
        MEMORY[0x1C3BAD3F4](v75, -1, -1);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v58 + 8))(v71, v72);
      }

      goto LABEL_38;
    }
    v65 = &v44[*(int *)(v64 + 48)];
    v66 = v210;
    v67 = *(void (**)(char *, char *, uint64_t))(v210 + 32);
    v68 = v208;
    v67(v47, v65, v208);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v66 + 56))(v47, 0, 1, v68);
    v69 = *(void (**)(char *, uint64_t))(v6 + 8);
    v69(v44, v238);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v47, 1, v68) == 1)
      goto LABEL_11;
    v209 = v6;
    v79 = v207;
    v67(v207, v47, v68);
    if (qword_1EF6DA7E0 != -1)
      swift_once();
    v80 = sub_1C142605C();
    __swift_project_value_buffer(v80, (uint64_t)qword_1EF6DC698);
    v81 = sub_1C14260F8();
    v82 = v235;
    v83 = v234;
    v84 = (uint64_t)v233;
    if ((v85 & 1) != 0)
    {
      v236 = (char *)v69;
      if (qword_1ED791DD8 != -1)
        swift_once();
      v92 = sub_1C1426854();
      __swift_project_value_buffer(v92, (uint64_t)qword_1ED7984F0);
      v93 = v231;
      v94 = v238;
      v237(v231, v240, v238);
      v95 = sub_1C1426848();
      v96 = sub_1C1426C68();
      if (os_log_type_enabled(v95, v96))
      {
        v97 = (uint8_t *)swift_slowAlloc();
        v98 = swift_slowAlloc();
        *(_QWORD *)&v243 = v98;
        *(_DWORD *)v97 = 136446210;
        sub_1C1329AD0(&qword_1EF6DB8B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D87A00], MEMORY[0x1E0D87A20]);
        v99 = sub_1C1427058();
        v242 = sub_1C132AD90(v99, v100, (uint64_t *)&v243);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        ((void (*)(char *, uint64_t))v236)(v93, v94);
        _os_log_impl(&dword_1C1324000, v95, v96, "Received replicator record update with incompatible data: %{public}s", v97, 0xCu);
        swift_arrayDestroy();
        v101 = v98;
LABEL_33:
        MEMORY[0x1C3BAD3F4](v101, -1, -1);
        MEMORY[0x1C3BAD3F4](v97, -1, -1);

        (*(void (**)(char *, uint64_t))(v210 + 8))(v207, v68);
LABEL_38:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v245);
        return;
      }

      ((void (*)(char *, uint64_t))v236)(v93, v94);
LABEL_37:
      (*(void (**)(char *, uint64_t))(v210 + 8))(v79, v68);
      goto LABEL_38;
    }
    v86 = v81;
    v87 = sub_1C1426188();
    if (*(_QWORD *)(v87 + 16) && (v88 = sub_1C13C3934(v86), (v89 & 1) != 0))
    {
      v90 = v232;
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v82 + 16))(v84, *(_QWORD *)(v87 + 56) + *(_QWORD *)(v82 + 72) * v88, v232);
      v91 = 0;
    }
    else
    {
      v91 = 1;
      v90 = v232;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v82 + 56))(v84, v91, 1, v90);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v84, 1, v90) == 1)
    {
      sub_1C132C860(v84, &qword_1EF6DB8C8);
      if (qword_1ED791DD8 != -1)
        swift_once();
      v102 = sub_1C1426854();
      __swift_project_value_buffer(v102, (uint64_t)qword_1ED7984F0);
      v103 = v228;
      v104 = v238;
      v237(v228, v240, v238);
      v95 = sub_1C1426848();
      v105 = sub_1C1426C68();
      if (os_log_type_enabled(v95, v105))
      {
        v97 = (uint8_t *)swift_slowAlloc();
        v106 = swift_slowAlloc();
        v236 = (char *)v69;
        v107 = v106;
        *(_QWORD *)&v243 = v106;
        *(_DWORD *)v97 = 136446210;
        sub_1C1329AD0(&qword_1EF6DB8B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D87A00], MEMORY[0x1E0D87A20]);
        v108 = sub_1C1427058();
        v242 = sub_1C132AD90(v108, v109, (uint64_t *)&v243);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        ((void (*)(char *, uint64_t))v236)(v103, v104);
        _os_log_impl(&dword_1C1324000, v95, v105, "Received replicator record update with missing data: %{public}s", v97, 0xCu);
        swift_arrayDestroy();
        v101 = v107;
        goto LABEL_33;
      }

      v69(v103, v104);
      goto LABEL_37;
    }
    v236 = (char *)v69;
    (*(void (**)(char *, uint64_t, uint64_t))(v82 + 32))(v83, v84, v90);
    sub_1C1424FF4();
    swift_allocObject();
    v110 = sub_1C1424FE8();
    v111 = sub_1C1426164();
    v113 = v112;
    sub_1C1329AD0(&qword_1EF6DB8E8, (uint64_t (*)(uint64_t))type metadata accessor for Activity, (uint64_t)&unk_1C142B5E0);
    v114 = v229;
    sub_1C1424FDC();
    v239 = (char *)v110;
    sub_1C13282B4(v111, v113);
    v115 = sub_1C14251C8();
    v117 = v116;
    v118 = v230;
    v119 = (uint64_t)v206;
    sub_1C1338F24(v230, (uint64_t)v206, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    v120 = (uint64_t *)(v119 + *(int *)(v114 + 40));
    v121 = swift_bridgeObjectRelease();
    *v120 = v115;
    v120[1] = v117;
    MEMORY[0x1E0C80A78](v121);
    *(&v205 - 2) = v122;
    *(&v205 - 1) = v119;
    sub_1C1426CEC();
    v233 = 0;
    v123 = v241;
    v124 = v224;
    sub_1C142518C();
    v125 = (char *)(v119 + *(int *)(v114 + 44));
    v126 = v221;
    sub_1C1425438();
    sub_1C1425120();
    v128 = v127;
    v129 = *(void (**)(char *, uint64_t))(v222 + 8);
    v130 = v225;
    v129(v126, v225);
    v129(v124, v130);
    if (v123 == 1)
    {
      v228 = (char *)v129;
      v231 = v125;
      if (qword_1ED791DD8 != -1)
        swift_once();
      v131 = sub_1C1426854();
      __swift_project_value_buffer(v131, (uint64_t)qword_1ED7984F0);
      v132 = v206;
      v133 = v215;
      sub_1C1338F24((uint64_t)v206, (uint64_t)v215, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      v134 = v217;
      v135 = v238;
      v237(v217, v240, v238);
      v136 = v216;
      sub_1C1338F24((uint64_t)v132, v216, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      v137 = sub_1C1426848();
      v138 = sub_1C1426C80();
      v139 = v138;
      v140 = os_log_type_enabled(v137, v138);
      v141 = v220;
      if (v140)
      {
        v142 = swift_slowAlloc();
        v240 = swift_slowAlloc();
        *(_QWORD *)&v243 = v240;
        *(_DWORD *)v142 = 136446978;
        LODWORD(v237) = v139;
        v223 = v137;
        v143 = v134;
        v144 = *v133;
        v145 = v133[1];
        swift_bridgeObjectRetain();
        v242 = sub_1C132AD90(v144, v145, (uint64_t *)&v243);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        sub_1C1339004((uint64_t)v133, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        *(_WORD *)(v142 + 12) = 2082;
        sub_1C1329AD0(&qword_1EF6DB8B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D87A00], MEMORY[0x1E0D87A20]);
        v146 = sub_1C1427058();
        v242 = sub_1C132AD90(v146, v147, (uint64_t *)&v243);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        ((void (*)(char *, uint64_t))v236)(v143, v135);
        *(_WORD *)(v142 + 22) = 2082;
        v148 = v224;
        sub_1C1425438();
        sub_1C1329AD0((unint64_t *)&unk_1ED793B50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
        v149 = v225;
        v150 = sub_1C1427058();
        v152 = v151;
        ((void (*)(char *, uint64_t))v228)(v148, v149);
        v242 = sub_1C132AD90(v150, v152, (uint64_t *)&v243);
        sub_1C1426DB8();
        v68 = v208;
        swift_bridgeObjectRelease();
        sub_1C1339004(v136, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        *(_WORD *)(v142 + 32) = 2050;
        v242 = v128;
        sub_1C1426DB8();
        v153 = v223;
        _os_log_impl(&dword_1C1324000, v223, (os_log_type_t)v237, "ReplicatorParticipant updating activity %{public}s due to incoming replicator record ID: %{public}s; updated: "
          "%{public}s (%{public}f)s",
          (uint8_t *)v142,
          0x2Au);
        v154 = v240;
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v154, -1, -1);
        v155 = v142;
        v132 = v206;
        MEMORY[0x1C3BAD3F4](v155, -1, -1);

      }
      else
      {
        sub_1C1339004((uint64_t)v133, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        ((void (*)(char *, uint64_t))v236)(v134, v135);
        sub_1C1339004(v136, (uint64_t (*)(_QWORD))type metadata accessor for Activity);

      }
    }
    else
    {
      if (sub_1C1406964() == 1)
      {
        if (qword_1ED791DD8 != -1)
          swift_once();
        v156 = sub_1C1426854();
        __swift_project_value_buffer(v156, (uint64_t)qword_1ED7984F0);
        v157 = v212;
        v158 = v238;
        v237(v212, v240, v238);
        v159 = sub_1C1426848();
        v160 = sub_1C1426C68();
        if (os_log_type_enabled(v159, v160))
        {
          v161 = (uint8_t *)swift_slowAlloc();
          v162 = swift_slowAlloc();
          *(_QWORD *)&v243 = v162;
          *(_DWORD *)v161 = 136446210;
          sub_1C1329AD0(&qword_1EF6DB8B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D87A00], MEMORY[0x1E0D87A20]);
          v163 = sub_1C1427058();
          v242 = sub_1C132AD90(v163, v164, (uint64_t *)&v243);
          sub_1C1426DB8();
          swift_bridgeObjectRelease();
          ((void (*)(char *, uint64_t))v236)(v157, v158);
          _os_log_impl(&dword_1C1324000, v159, v160, "Ignoring zombie activity: %{public}s", v161, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3BAD3F4](v162, -1, -1);
          MEMORY[0x1C3BAD3F4](v161, -1, -1);
          swift_release();

          sub_1C1339004(v230, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
          (*(void (**)(char *, uint64_t))(v235 + 8))(v234, v232);
          (*(void (**)(char *, uint64_t))(v210 + 8))(v207, v68);
        }
        else
        {
          swift_release();

          ((void (*)(char *, uint64_t))v236)(v157, v158);
          sub_1C1339004(v118, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
          (*(void (**)(char *, uint64_t))(v235 + 8))(v234, v232);
          (*(void (**)(char *, uint64_t))(v210 + 8))(v79, v68);
        }
        sub_1C1339004((uint64_t)v206, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        goto LABEL_38;
      }
      v228 = (char *)v129;
      v231 = v125;
      if (qword_1ED791DD8 != -1)
        swift_once();
      v165 = sub_1C1426854();
      __swift_project_value_buffer(v165, (uint64_t)qword_1ED7984F0);
      v132 = v206;
      v166 = v211;
      sub_1C1338F24((uint64_t)v206, (uint64_t)v211, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      v167 = v214;
      v168 = v238;
      v237(v214, v240, v238);
      v169 = v213;
      sub_1C1338F24((uint64_t)v132, v213, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      v170 = sub_1C1426848();
      v171 = sub_1C1426C80();
      v172 = v171;
      if (os_log_type_enabled(v170, v171))
      {
        v173 = swift_slowAlloc();
        v240 = swift_slowAlloc();
        *(_QWORD *)&v243 = v240;
        *(_DWORD *)v173 = 136446978;
        LODWORD(v237) = v172;
        v223 = v170;
        v174 = *v166;
        v175 = v166[1];
        swift_bridgeObjectRetain();
        v242 = sub_1C132AD90(v174, v175, (uint64_t *)&v243);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        sub_1C1339004((uint64_t)v166, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        *(_WORD *)(v173 + 12) = 2082;
        sub_1C1329AD0(&qword_1EF6DB8B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D87A00], MEMORY[0x1E0D87A20]);
        v176 = sub_1C1427058();
        v242 = sub_1C132AD90(v176, v177, (uint64_t *)&v243);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        ((void (*)(char *, uint64_t))v236)(v167, v168);
        *(_WORD *)(v173 + 22) = 2082;
        v178 = v224;
        sub_1C1425438();
        sub_1C1329AD0((unint64_t *)&unk_1ED793B50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
        v179 = v225;
        v180 = sub_1C1427058();
        v182 = v181;
        ((void (*)(char *, uint64_t))v228)(v178, v179);
        v242 = sub_1C132AD90(v180, v182, (uint64_t *)&v243);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        v68 = v208;
        sub_1C1339004(v169, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        *(_WORD *)(v173 + 32) = 2050;
        v242 = v128;
        sub_1C1426DB8();
        v170 = v223;
        _os_log_impl(&dword_1C1324000, v223, (os_log_type_t)v237, "ReplicatorParticipant creating activity %{public}s due to incoming replicator record ID: %{public}s; updated: "
          "%{public}s (%{public}f)s",
          (uint8_t *)v173,
          0x2Au);
        v183 = v240;
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v183, -1, -1);
        v184 = v173;
        v132 = v206;
        MEMORY[0x1C3BAD3F4](v184, -1, -1);
      }
      else
      {
        sub_1C1339004((uint64_t)v166, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        ((void (*)(char *, uint64_t))v236)(v167, v168);
        sub_1C1339004(v169, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      }

      v141 = v220;
      sub_1C1338F24((uint64_t)v132, v226, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    }
    v185 = v231;
    v186 = v226;
    swift_storeEnumTagMultiPayload();
    v187 = v132[1];
    v240 = *v132;
    v189 = *v120;
    v188 = v120[1];
    v190 = (int *)v219;
    sub_1C1338F24(v186, (uint64_t)v141 + *(int *)(v219 + 24), type metadata accessor for ActivityParticipantEvent.EventType);
    v191 = (char *)v141 + v190[7];
    v192 = *MEMORY[0x1E0C8F758];
    v193 = sub_1C1425558();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v193 - 8) + 104))(v191, v192, v193);
    v194 = (char *)v141 + v190[9];
    v195 = sub_1C1425450();
    v196 = *(_QWORD *)(v195 - 8);
    (*(void (**)(char *, char *, uint64_t))(v196 + 16))(v194, v185, v195);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v196 + 56))(v194, 0, 1, v195);
    *v141 = v240;
    v141[1] = v187;
    v141[2] = v189;
    v141[3] = v188;
    v197 = (uint64_t *)((char *)v141 + v190[8]);
    v198 = v227;
    *v197 = v227;
    v197[1] = &off_1E7A8C138;
    *((_BYTE *)v141 + v190[10]) = 0;
    v199 = (os_unfair_lock_s *)(*(_QWORD *)(v198 + 160) + 16);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    os_unfair_lock_lock(v199);
    sub_1C13A3B54((uint64_t *)&v243);
    if (!v233)
    {
      v200 = v243;
      os_unfair_lock_unlock(v199);
      v201 = v207;
      v202 = v210;
      v203 = v230;
      v204 = v234;
      if (v200)
      {
        sub_1C13D0788((uint64_t)v141);
        swift_unknownObjectRelease();
      }
      swift_release();
      sub_1C1339004((uint64_t)v141, type metadata accessor for ActivityParticipantEvent);
      sub_1C1339004(v226, type metadata accessor for ActivityParticipantEvent.EventType);
      sub_1C1339004(v203, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      (*(void (**)(char *, uint64_t))(v235 + 8))(v204, v232);
      (*(void (**)(char *, uint64_t))(v202 + 8))(v201, v68);
      sub_1C1339004((uint64_t)v206, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      goto LABEL_38;
    }
    os_unfair_lock_unlock(v199);
    __break(1u);
  }
  else
  {
    sub_1C132C860((uint64_t)&v243, &qword_1ED793398);
    if (qword_1ED791DD8 != -1)
      swift_once();
    v59 = sub_1C1426854();
    __swift_project_value_buffer(v59, (uint64_t)qword_1ED7984F0);
    v60 = sub_1C1426848();
    v61 = sub_1C1426C68();
    if (os_log_type_enabled(v60, v61))
    {
      v62 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v62 = 0;
      _os_log_impl(&dword_1C1324000, v60, v61, "Replicator is not available", v62, 2u);
      MEMORY[0x1C3BAD3F4](v62, -1, -1);
    }

  }
}

uint64_t sub_1C139701C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  _QWORD v26[2];
  char *v27;

  v27 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797560);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v26 - v10;
  v13 = *a2;
  v12 = a2[1];
  swift_beginAccess();
  v14 = *(_QWORD *)(a1 + 192);
  if (!*(_QWORD *)(v14 + 16))
  {
    v20 = type metadata accessor for Activity();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v11, 1, 1, v20);
LABEL_7:
    v21 = 0;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15 = sub_1C13277A0(v13, v12);
  if ((v16 & 1) != 0)
  {
    v17 = v15;
    v26[0] = *(_QWORD *)(v14 + 56);
    v18 = type metadata accessor for Activity();
    v26[1] = v3;
    v19 = *(_QWORD *)(v18 - 8);
    sub_1C1338F24(v26[0] + *(_QWORD *)(v19 + 72) * v17, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v11, 0, 1, v18);
  }
  else
  {
    v18 = type metadata accessor for Activity();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v11, 1, 1, v18);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for Activity();
  v21 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v11, 1, v18) == 1)
    goto LABEL_7;
LABEL_8:
  sub_1C132C860((uint64_t)v11, &qword_1ED797560);
  v22 = *a2;
  v23 = a2[1];
  sub_1C1338F24((uint64_t)a2, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
  v24 = type metadata accessor for Activity();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v9, 0, 1, v24);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C13B396C((uint64_t)v9, v22, v23);
  result = swift_endAccess();
  *v27 = v21;
  return result;
}

void sub_1C1397278(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void (*v39)(unint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  char *v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  NSObject *v75;
  os_log_type_t v76;
  uint8_t *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  os_log_type_t v84;
  _BOOL4 v85;
  uint8_t *v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  void (*v95)(char *, uint64_t);
  void (*v96)(char *, uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  __int128 v116;
  uint64_t v117;
  _QWORD v118[4];

  v2 = v1;
  v112 = a1;
  v3 = sub_1C142614C();
  v4 = *(_QWORD *)(v3 - 8);
  v113 = v3;
  v114 = v4;
  v5 = MEMORY[0x1E0C80A78](v3);
  v111 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v110 = (uint64_t)&v96 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v105 = (char *)&v96 - v10;
  MEMORY[0x1E0C80A78](v9);
  v104 = (char *)&v96 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DB8C8);
  MEMORY[0x1E0C80A78](v12);
  v106 = (char *)&v96 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_1C142617C();
  v107 = *(_QWORD *)(v108 - 8);
  MEMORY[0x1E0C80A78](v108);
  v102 = (char *)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935C8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DB8D0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v96 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DB8D8);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v96 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1C1426194();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v109 = (char *)&v96 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1C14251EC();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v30 = (char *)&v96 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1C1426134();
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v96 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = v2;
  sub_1C132C344(v2 + 24, (uint64_t)&v116, &qword_1ED793398);
  if (v117)
  {
    v101 = v25;
    sub_1C13A1B30(&v116, (uint64_t)v118);
    v34 = v112;
    sub_1C1426140();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v33, 1, v27) == 1)
    {
LABEL_19:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v118);
      return;
    }
    v97 = v24;
    v98 = v28;
    v35 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
    v100 = v30;
    v99 = v27;
    v35(v30, v33, v27);
    __swift_project_boxed_opaque_existential_1(v118, v118[3]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DAD48);
    v36 = v114;
    v37 = (*(unsigned __int8 *)(v114 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80);
    v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1C1427F50;
    v39 = *(void (**)(unint64_t, uint64_t, uint64_t))(v36 + 16);
    v39(v38 + v37, v34, v113);
    v40 = sub_1C14250B4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v17, 1, 1, v40);
    v45 = sub_1C1426098();
    v46 = (void (*)(uint64_t, uint64_t, uint64_t))v39;
    v47 = v34;
    sub_1C132C860((uint64_t)v17, &qword_1ED7935C8);
    swift_bridgeObjectRelease();
    sub_1C138CCE0(v45, (uint64_t)v20);
    swift_bridgeObjectRelease();
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DB8E0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48))(v20, 1, v48) == 1)
    {
      sub_1C132C860((uint64_t)v20, &qword_1EF6DB8D0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v101 + 56))(v23, 1, 1, v97);
      v49 = v113;
LABEL_12:
      sub_1C132C860((uint64_t)v23, &qword_1EF6DB8D8);
      if (qword_1ED791DD8 != -1)
        swift_once();
      v56 = sub_1C1426854();
      __swift_project_value_buffer(v56, (uint64_t)qword_1ED7984F0);
      v57 = v110;
      v46(v110, v47, v49);
      v58 = sub_1C1426848();
      v59 = sub_1C1426C68();
      if (os_log_type_enabled(v58, v59))
      {
        v60 = (uint8_t *)swift_slowAlloc();
        v61 = swift_slowAlloc();
        *(_QWORD *)&v116 = v61;
        *(_DWORD *)v60 = 136446210;
        sub_1C1329AD0(&qword_1EF6DB8B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D87A00], MEMORY[0x1E0D87A20]);
        v62 = sub_1C1427058();
        v115 = sub_1C132AD90(v62, v63, (uint64_t *)&v116);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v57, v49);
        _os_log_impl(&dword_1C1324000, v58, v59, "Received replicator record update but record does not exist: %{public}s", v60, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v61, -1, -1);
        MEMORY[0x1C3BAD3F4](v60, -1, -1);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v57, v49);
      }

      goto LABEL_18;
    }
    v50 = &v20[*(int *)(v48 + 48)];
    v51 = v101;
    v52 = *(void (**)(char *, char *, uint64_t))(v101 + 32);
    v53 = v97;
    v52(v23, v50, v97);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v23, 0, 1, v53);
    v54 = *(void (**)(char *, uint64_t))(v114 + 8);
    v55 = v20;
    v49 = v113;
    v54(v55, v113);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v23, 1, v53) == 1)
      goto LABEL_12;
    v52(v109, v23, v53);
    if (qword_1EF6DA7E0 != -1)
      swift_once();
    v64 = sub_1C142605C();
    __swift_project_value_buffer(v64, (uint64_t)qword_1EF6DC698);
    v65 = sub_1C14260F8();
    v66 = v108;
    if ((v67 & 1) != 0)
    {
      if (qword_1ED791DD8 != -1)
        swift_once();
      v73 = sub_1C1426854();
      __swift_project_value_buffer(v73, (uint64_t)qword_1ED7984F0);
      v74 = v105;
      v46((uint64_t)v105, v47, v49);
      v75 = sub_1C1426848();
      v76 = sub_1C1426C68();
      if (os_log_type_enabled(v75, v76))
      {
        v77 = (uint8_t *)swift_slowAlloc();
        v78 = swift_slowAlloc();
        *(_QWORD *)&v116 = v78;
        *(_DWORD *)v77 = 136446210;
        sub_1C1329AD0(&qword_1EF6DB8B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D87A00], MEMORY[0x1E0D87A20]);
        v79 = sub_1C1427058();
        v115 = sub_1C132AD90(v79, v80, (uint64_t *)&v116);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        v54(v74, v49);
        _os_log_impl(&dword_1C1324000, v75, v76, "Received replicator record update with incompatible data: %{public}s", v77, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v78, -1, -1);
        MEMORY[0x1C3BAD3F4](v77, -1, -1);

        (*(void (**)(char *, uint64_t))(v101 + 8))(v109, v97);
LABEL_18:
        (*(void (**)(char *, uint64_t))(v98 + 8))(v100, v99);
        goto LABEL_19;
      }
    }
    else
    {
      v110 = v65;
      v68 = sub_1C1426188();
      v69 = *(_QWORD *)(v68 + 16);
      v96 = v54;
      if (v69 && (v70 = sub_1C13C3934(v110), (v71 & 1) != 0))
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v107 + 16))(v106, *(_QWORD *)(v68 + 56) + *(_QWORD *)(v107 + 72) * v70, v66);
        v72 = 0;
      }
      else
      {
        v72 = 1;
      }
      v81 = v107;
      v82 = (uint64_t)v106;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v107 + 56))(v106, v72, 1, v66);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v82, 1, v66) != 1)
      {
        v90 = v82;
        v91 = v102;
        v92 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v81 + 32))(v102, v90, v66);
        MEMORY[0x1E0C80A78](v92);
        v93 = v110;
        *(&v96 - 4) = (void (*)(char *, uint64_t))v91;
        *(&v96 - 3) = (void (*)(char *, uint64_t))v93;
        v94 = v100;
        *(&v96 - 2) = v95;
        *(&v96 - 1) = (void (*)(char *, uint64_t))v94;
        sub_1C1426CEC();
        (*(void (**)(char *, uint64_t))(v101 + 8))(v109, v53);
        (*(void (**)(char *, uint64_t))(v107 + 8))(v91, v108);
        (*(void (**)(char *, uint64_t))(v98 + 8))(v94, v99);
        goto LABEL_19;
      }
      sub_1C132C860(v82, &qword_1EF6DB8C8);
      if (qword_1ED791DD8 != -1)
        swift_once();
      v83 = sub_1C1426854();
      __swift_project_value_buffer(v83, (uint64_t)qword_1ED7984F0);
      v74 = v104;
      v46((uint64_t)v104, v47, v49);
      v75 = sub_1C1426848();
      v84 = sub_1C1426C68();
      v85 = os_log_type_enabled(v75, v84);
      v54 = v96;
      if (v85)
      {
        v86 = (uint8_t *)swift_slowAlloc();
        v87 = swift_slowAlloc();
        *(_QWORD *)&v116 = v87;
        *(_DWORD *)v86 = 136446210;
        sub_1C1329AD0(&qword_1EF6DB8B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D87A00], MEMORY[0x1E0D87A20]);
        v88 = sub_1C1427058();
        v115 = sub_1C132AD90(v88, v89, (uint64_t *)&v116);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        v54(v74, v49);
        _os_log_impl(&dword_1C1324000, v75, v84, "Received replicator record update with missing data: %{public}s", v86, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v87, -1, -1);
        MEMORY[0x1C3BAD3F4](v86, -1, -1);

        (*(void (**)(char *, uint64_t))(v101 + 8))(v109, v97);
        goto LABEL_18;
      }
    }

    v54(v74, v49);
    (*(void (**)(char *, uint64_t))(v101 + 8))(v109, v53);
    goto LABEL_18;
  }
  sub_1C132C860((uint64_t)&v116, &qword_1ED793398);
  if (qword_1ED791DD8 != -1)
    swift_once();
  v41 = sub_1C1426854();
  __swift_project_value_buffer(v41, (uint64_t)qword_1ED7984F0);
  v42 = sub_1C1426848();
  v43 = sub_1C1426C68();
  if (os_log_type_enabled(v42, v43))
  {
    v44 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v44 = 0;
    _os_log_impl(&dword_1C1324000, v42, v43, "Replicator is not available", v44, 2u);
    MEMORY[0x1C3BAD3F4](v44, -1, -1);
  }

}

uint64_t sub_1C13982C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t result;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  char v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  char *v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  os_log_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  os_log_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49[3];
  uint64_t v50;

  v47 = a4;
  v48 = a3;
  v5 = sub_1C14251EC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C14260C8();
  v9 = sub_1C1426164();
  v11 = v10;
  sub_1C13A3AC4();
  sub_1C14260BC();
  result = sub_1C13282B4(v9, v11);
  if (!v4)
  {
    v46 = v8;
    v13 = v49[0];
    v14 = v49[1];
    v15 = v48;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v50 = *(_QWORD *)(v15 + 200);
    *(_QWORD *)(v15 + 200) = 0x8000000000000000;
    v17 = v13;
    v18 = v47;
    sub_1C13A12F0(v17, v14, v47, isUniquelyReferenced_nonNull_native);
    v20 = v19;
    *(_QWORD *)(v15 + 200) = v50;
    swift_bridgeObjectRelease();
    swift_endAccess();
    if (qword_1ED791DD8 != -1)
      swift_once();
    v21 = sub_1C1426854();
    __swift_project_value_buffer(v21, (uint64_t)qword_1ED7984F0);
    v22 = v6;
    v23 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v24 = v46;
    v25 = v18;
    v26 = v5;
    v23(v46, v25, v5);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v27 = sub_1C1426848();
    v28 = sub_1C1426C80();
    v29 = v28;
    if (os_log_type_enabled(v27, v28))
    {
      v30 = swift_slowAlloc();
      v43 = v22;
      v31 = v30;
      v47 = swift_slowAlloc();
      v49[0] = v47;
      *(_DWORD *)v31 = 136446722;
      if (v20)
        v32 = 0x64657461647075;
      else
        v32 = 0x6465646461;
      v33 = v26;
      if (v20)
        v34 = 0xE700000000000000;
      else
        v34 = 0xE500000000000000;
      v45 = v27;
      v50 = sub_1C132AD90(v32, v34, v49);
      v44 = v29;
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v31 + 12) = 2082;
      sub_1C1329AD0(&qword_1ED792880, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v35 = sub_1C1427058();
      v50 = sub_1C132AD90(v35, v36, v49);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      v37 = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v24, v33);
      *(_WORD *)(v31 + 22) = 2082;
      v38 = sub_1C1393724(v37, v20, 0, v14);
      v50 = sub_1C132AD90(v38, v39, v49);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      v40 = v45;
      _os_log_impl(&dword_1C1324000, v45, (os_log_type_t)v44, "ReplicatorParticipant got %{public}s subscription from %{public}s:\n%{public}s", (uint8_t *)v31, 0x20u);
      v41 = v47;
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v41, -1, -1);
      MEMORY[0x1C3BAD3F4](v31, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v26);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

    }
    return sub_1C138D048();
  }
  return result;
}

uint64_t sub_1C1398704(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint8_t *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  NSObject *v25;
  _QWORD *v26;
  uint64_t v27;
  void *v28;
  uint64_t result;
  os_unfair_lock_s *v30;
  uint64_t v31;
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  uint64_t aBlock[6];

  v3 = v2;
  v6 = sub_1C1425630();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for ActivityParticipantEvent(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1ED791DD8 != -1)
    swift_once();
  v12 = sub_1C1426854();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED7984F0);
  swift_bridgeObjectRetain_n();
  v13 = sub_1C1426848();
  v14 = sub_1C1426C80();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v33 = a1;
    v16 = (uint8_t *)v15;
    v17 = swift_slowAlloc();
    aBlock[0] = v17;
    v32[1] = v8;
    *(_DWORD *)v16 = 136446210;
    swift_bridgeObjectRetain();
    v34 = sub_1C132AD90(v33, a2, aBlock);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C1324000, v13, v14, "ReplicatorParticipant is dismissing activity cancelled on remote device: %{public}s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v17, -1, -1);
    v18 = v16;
    a1 = v33;
    MEMORY[0x1C3BAD3F4](v18, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  swift_bridgeObjectRetain();
  sub_1C1425624();
  sub_1C1425570();
  type metadata accessor for ActivityParticipantEvent.EventType(0);
  swift_storeEnumTagMultiPayload();
  v19 = (char *)v11 + v9[7];
  v20 = *MEMORY[0x1E0C8F758];
  v21 = sub_1C1425558();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v19, v20, v21);
  v22 = (char *)v11 + v9[9];
  v23 = sub_1C1425450();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
  *v11 = a1;
  v11[1] = a2;
  v11[2] = 0;
  v11[3] = 0;
  v24 = (uint64_t *)((char *)v11 + v9[8]);
  *v24 = v3;
  v24[1] = &off_1E7A8C138;
  *((_BYTE *)v11 + v9[10]) = 0;
  v25 = *(NSObject **)(v3 + 16);
  v26 = (_QWORD *)swift_allocObject();
  v26[2] = v3;
  v26[3] = a1;
  v26[4] = a2;
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = sub_1C13A3B38;
  *(_QWORD *)(v27 + 24) = v26;
  aBlock[4] = (uint64_t)sub_1C13A469C;
  aBlock[5] = v27;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1C137B458;
  aBlock[3] = (uint64_t)&block_descriptor_46;
  v28 = _Block_copy(aBlock);
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  dispatch_sync(v25, v28);
  _Block_release(v28);
  LOBYTE(v28) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v28 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v30 = (os_unfair_lock_s *)(*(_QWORD *)(v3 + 160) + 16);
    os_unfair_lock_lock(v30);
    sub_1C13A3B54(aBlock);
    v31 = aBlock[0];
    os_unfair_lock_unlock(v30);
    if (v31)
    {
      sub_1C13D0788((uint64_t)v11);
      swift_unknownObjectRelease();
    }
    sub_1C1339004((uint64_t)v11, type metadata accessor for ActivityParticipantEvent);
    return swift_release();
  }
  return result;
}

void sub_1C1398B44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  void (*v63)(char *, uint64_t);
  int v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  uint8_t *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  NSObject *v89;
  os_log_type_t v90;
  uint64_t v91;
  char *v92;
  uint8_t *v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  NSObject *v100;
  os_log_type_t v101;
  uint8_t *v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(uint64_t, uint64_t, uint64_t);
  uint64_t *v111;
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char v121;
  void (*v122)(char *, uint64_t);
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char v127;
  char *v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  NSObject *v134;
  os_log_type_t v135;
  uint8_t *v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  __int128 v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  char *v161;
  char *v162;
  char *v163;
  char *v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  char *v169;
  char *v170;
  char *v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  void (*v178)(char *, uint64_t, uint64_t);
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  __int128 v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;

  v3 = sub_1C14261AC();
  v165 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v164 = (char *)&v145 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v161 = (char *)&v145 - v7;
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v145 - v8;
  v10 = sub_1C142614C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v145 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v171 = (char *)&v145 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v163 = (char *)&v145 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v162 = (char *)&v145 - v20;
  MEMORY[0x1E0C80A78](v19);
  v159 = (char *)&v145 - v21;
  v158 = sub_1C14251B0();
  v155 = *(_QWORD *)(v158 - 8);
  v22 = MEMORY[0x1E0C80A78](v158);
  v154 = (char *)&v145 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v157 = (char *)&v145 - v24;
  v160 = type metadata accessor for ReplicatorParticipant.RemoteActivityDismissal(0);
  v25 = MEMORY[0x1E0C80A78](v160);
  v156 = (uint64_t)&v145 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v28 = (char *)&v145 - v27;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DB8C8);
  MEMORY[0x1E0C80A78](v29);
  v166 = (char *)&v145 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1C142617C();
  v168 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v169 = (char *)&v145 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935C8);
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)&v145 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DB8D0);
  MEMORY[0x1E0C80A78](v36);
  v173 = (char *)&v145 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DB8D8);
  MEMORY[0x1E0C80A78](v38);
  v172 = (char *)&v145 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_1C1426194();
  v176 = *(_QWORD *)(v40 - 8);
  v177 = v40;
  MEMORY[0x1E0C80A78](v40);
  v170 = (char *)&v145 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C132C344(v1 + 24, (uint64_t)&v182, &qword_1ED793398);
  if (v183)
  {
    v150 = v28;
    v153 = v31;
    v149 = v9;
    v152 = v3;
    v167 = v14;
    sub_1C13A1B30(&v182, (uint64_t)&v184);
    v174 = v186;
    __swift_project_boxed_opaque_existential_1(&v184, v185);
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DAD48);
    v43 = *(unsigned __int8 *)(v11 + 80);
    v44 = (v43 + 32) & ~v43;
    v45 = v44 + *(_QWORD *)(v11 + 72);
    v46 = v43 | 7;
    v47 = swift_allocObject();
    v151 = xmmword_1C1427F50;
    *(_OWORD *)(v47 + 16) = xmmword_1C1427F50;
    v179 = v11;
    v48 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v175 = a1;
    v180 = v10;
    v178 = v48;
    v48((char *)(v47 + v44), a1, v10);
    v49 = sub_1C14250B4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v35, 1, 1, v49);
    v54 = sub_1C1426098();
    v147 = v45;
    v148 = v46;
    v174 = v42;
    v146 = v44;
    sub_1C132C860((uint64_t)v35, &qword_1ED7935C8);
    swift_bridgeObjectRelease();
    v55 = v173;
    sub_1C138CCE0(v54, (uint64_t)v173);
    swift_bridgeObjectRelease();
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DB8E0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 48))(v55, 1, v56) == 1)
    {
      sub_1C132C860((uint64_t)v55, &qword_1EF6DB8D0);
      v57 = (uint64_t)v172;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v176 + 56))(v172, 1, 1, v177);
      v58 = v175;
LABEL_11:
      sub_1C132C860(v57, &qword_1EF6DB8D8);
      if (qword_1ED791DD8 != -1)
        swift_once();
      v65 = sub_1C1426854();
      __swift_project_value_buffer(v65, (uint64_t)qword_1ED7984F0);
      v66 = v171;
      v67 = v180;
      v178(v171, v58, v180);
      v68 = sub_1C1426848();
      v69 = sub_1C1426C68();
      if (os_log_type_enabled(v68, v69))
      {
        v70 = (uint8_t *)swift_slowAlloc();
        v71 = swift_slowAlloc();
        *(_QWORD *)&v182 = v71;
        *(_DWORD *)v70 = 136446210;
        sub_1C1329AD0(&qword_1EF6DB8B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D87A00], MEMORY[0x1E0D87A20]);
        v72 = sub_1C1427058();
        v181 = sub_1C132AD90(v72, v73, (uint64_t *)&v182);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v179 + 8))(v66, v67);
        _os_log_impl(&dword_1C1324000, v68, v69, "Received local dismiss record update but record does not exist: %{public}s", v70, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v71, -1, -1);
        MEMORY[0x1C3BAD3F4](v70, -1, -1);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v179 + 8))(v66, v67);
      }

      goto LABEL_17;
    }
    v59 = &v55[*(int *)(v56 + 48)];
    v60 = v176;
    v61 = v177;
    v62 = *(void (**)(char *, char *, uint64_t))(v176 + 32);
    v57 = (uint64_t)v172;
    v62(v172, v59, v177);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v61);
    v63 = *(void (**)(char *, uint64_t))(v179 + 8);
    v63(v55, v180);
    v64 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v57, 1, v61);
    v58 = v175;
    if (v64 == 1)
      goto LABEL_11;
    v62(v170, (char *)v57, v61);
    if (qword_1EF6DA7E0 != -1)
      swift_once();
    v74 = sub_1C142605C();
    __swift_project_value_buffer(v74, (uint64_t)qword_1EF6DC698);
    v75 = sub_1C14260F8();
    v76 = v153;
    v77 = v168;
    v78 = v169;
    v79 = (uint64_t)v166;
    if ((v80 & 1) != 0)
    {
      if (qword_1ED791DD8 != -1)
        swift_once();
      v86 = sub_1C1426854();
      __swift_project_value_buffer(v86, (uint64_t)qword_1ED7984F0);
      v87 = v163;
      v88 = v180;
      v178(v163, v58, v180);
      v89 = sub_1C1426848();
      v90 = sub_1C1426C68();
      if (os_log_type_enabled(v89, v90))
      {
        v91 = swift_slowAlloc();
        v173 = (char *)v63;
        v92 = v87;
        v93 = (uint8_t *)v91;
        v94 = swift_slowAlloc();
        *(_QWORD *)&v182 = v94;
        *(_DWORD *)v93 = 136446210;
        sub_1C1329AD0(&qword_1EF6DB8B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D87A00], MEMORY[0x1E0D87A20]);
        v95 = sub_1C1427058();
        v181 = sub_1C132AD90(v95, v96, (uint64_t *)&v182);
        v58 = v175;
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        ((void (*)(char *, uint64_t))v173)(v92, v88);
        _os_log_impl(&dword_1C1324000, v89, v90, "Received local dismiss record update with incompatible data: %{public}s", v93, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v94, -1, -1);
        MEMORY[0x1C3BAD3F4](v93, -1, -1);
      }
      else
      {
        v63(v87, v88);
      }

      v106 = v146;
      __swift_project_boxed_opaque_existential_1(&v184, v185);
      v107 = swift_allocObject();
      *(_OWORD *)(v107 + 16) = v151;
      v178((char *)(v107 + v106), v58, v88);
      v108 = *MEMORY[0x1E0D87AE0];
      v109 = v165;
      v110 = *(void (**)(uint64_t, uint64_t, uint64_t))(v165 + 104);
      v111 = &v186;
    }
    else
    {
      v81 = v75;
      v82 = sub_1C1426188();
      if (*(_QWORD *)(v82 + 16) && (v83 = sub_1C13C3934(v81), (v84 & 1) != 0))
      {
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v77 + 16))(v79, *(_QWORD *)(v82 + 56) + *(_QWORD *)(v77 + 72) * v83, v76);
        v85 = 0;
      }
      else
      {
        v85 = 1;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v77 + 56))(v79, v85, 1, v76);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48))(v79, 1, v76) != 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v77 + 32))(v78, v79, v76);
        __swift_project_boxed_opaque_existential_1(&v184, v185);
        v112 = sub_1C1426164();
        v114 = v113;
        sub_1C1329AD0(&qword_1EF6DB860, type metadata accessor for ReplicatorParticipant.RemoteActivityDismissal, (uint64_t)&unk_1C1429C38);
        sub_1C1329AD0(&qword_1EF6DB868, type metadata accessor for ReplicatorParticipant.RemoteActivityDismissal, (uint64_t)&unk_1C1429C10);
        v115 = (uint64_t)v150;
        sub_1C14261A0();
        sub_1C13282B4(v112, v114);
        v120 = v157;
        sub_1C142518C();
        v121 = sub_1C1425144();
        v122 = *(void (**)(char *, uint64_t))(v155 + 8);
        v123 = v158;
        v122(v120, v158);
        v124 = v156;
        sub_1C1338F24(v115, v156, type metadata accessor for ReplicatorParticipant.RemoteActivityDismissal);
        if ((v121 & 1) != 0)
        {
          sub_1C1339004(v124, type metadata accessor for ReplicatorParticipant.RemoteActivityDismissal);
          v125 = v175;
        }
        else
        {
          sub_1C142512C();
          v126 = v154;
          sub_1C142518C();
          v127 = sub_1C1425150();
          v122(v126, v123);
          v122(v120, v123);
          sub_1C1339004(v124, type metadata accessor for ReplicatorParticipant.RemoteActivityDismissal);
          v125 = v175;
          v128 = v170;
          v129 = v153;
          v130 = v169;
          if ((v127 & 1) == 0)
          {
            sub_1C1339004(v115, type metadata accessor for ReplicatorParticipant.RemoteActivityDismissal);
            (*(void (**)(char *, uint64_t))(v168 + 8))(v130, v129);
            (*(void (**)(char *, uint64_t))(v176 + 8))(v128, v177);
            goto LABEL_17;
          }
        }
        if (qword_1ED791DD8 != -1)
          swift_once();
        v131 = sub_1C1426854();
        __swift_project_value_buffer(v131, (uint64_t)qword_1ED7984F0);
        v132 = v159;
        v133 = v180;
        v178(v159, v125, v180);
        v134 = sub_1C1426848();
        v135 = sub_1C1426C80();
        if (os_log_type_enabled(v134, v135))
        {
          v136 = (uint8_t *)swift_slowAlloc();
          v137 = swift_slowAlloc();
          *(_QWORD *)&v182 = v137;
          *(_DWORD *)v136 = 136446210;
          sub_1C1329AD0(&qword_1EF6DB8B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D87A00], MEMORY[0x1E0D87A20]);
          v138 = sub_1C1427058();
          v181 = sub_1C132AD90(v138, v139, (uint64_t *)&v182);
          v125 = v175;
          sub_1C1426DB8();
          swift_bridgeObjectRelease();
          v63(v159, v133);
          _os_log_impl(&dword_1C1324000, v134, v135, "Deleting obsolete dismiss record: %{public}s", v136, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3BAD3F4](v137, -1, -1);
          MEMORY[0x1C3BAD3F4](v136, -1, -1);
        }
        else
        {
          v63(v132, v133);
        }

        v140 = v146;
        __swift_project_boxed_opaque_existential_1(&v184, v185);
        v141 = swift_allocObject();
        *(_OWORD *)(v141 + 16) = v151;
        v178((char *)(v141 + v140), v125, v133);
        v142 = v165;
        v143 = v149;
        v144 = v152;
        (*(void (**)(char *, _QWORD, uint64_t))(v165 + 104))(v149, *MEMORY[0x1E0D87AE0], v152);
        sub_1C142608C();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v142 + 8))(v143, v144);
        sub_1C1339004((uint64_t)v150, type metadata accessor for ReplicatorParticipant.RemoteActivityDismissal);
        (*(void (**)(char *, uint64_t))(v168 + 8))(v169, v153);
LABEL_40:
        (*(void (**)(char *, uint64_t))(v176 + 8))(v170, v177);
LABEL_17:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v184);
        return;
      }
      sub_1C132C860(v79, &qword_1EF6DB8C8);
      if (qword_1ED791DD8 != -1)
        swift_once();
      v97 = sub_1C1426854();
      __swift_project_value_buffer(v97, (uint64_t)qword_1ED7984F0);
      v98 = v162;
      v99 = v180;
      v178(v162, v58, v180);
      v100 = sub_1C1426848();
      v101 = sub_1C1426C68();
      if (os_log_type_enabled(v100, v101))
      {
        v102 = (uint8_t *)swift_slowAlloc();
        v103 = swift_slowAlloc();
        *(_QWORD *)&v182 = v103;
        *(_DWORD *)v102 = 136446210;
        sub_1C1329AD0(&qword_1EF6DB8B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D87A00], MEMORY[0x1E0D87A20]);
        v104 = sub_1C1427058();
        v181 = sub_1C132AD90(v104, v105, (uint64_t *)&v182);
        v58 = v175;
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        v63(v162, v99);
        _os_log_impl(&dword_1C1324000, v100, v101, "Received local dismiss record update with missing data: %{public}s", v102, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v103, -1, -1);
        MEMORY[0x1C3BAD3F4](v102, -1, -1);
      }
      else
      {
        v63(v98, v99);
      }

      v116 = v146;
      __swift_project_boxed_opaque_existential_1(&v184, v185);
      v117 = swift_allocObject();
      *(_OWORD *)(v117 + 16) = v151;
      v178((char *)(v117 + v116), v58, v99);
      v108 = *MEMORY[0x1E0D87AE0];
      v109 = v165;
      v110 = *(void (**)(uint64_t, uint64_t, uint64_t))(v165 + 104);
      v111 = &v185;
    }
    v118 = *(v111 - 32);
    v119 = v152;
    v110(v118, v108, v152);
    sub_1C142608C();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v118, v119);
    goto LABEL_40;
  }
  sub_1C132C860((uint64_t)&v182, &qword_1ED793398);
  if (qword_1ED791DD8 != -1)
    swift_once();
  v50 = sub_1C1426854();
  __swift_project_value_buffer(v50, (uint64_t)qword_1ED7984F0);
  v51 = sub_1C1426848();
  v52 = sub_1C1426C68();
  if (os_log_type_enabled(v51, v52))
  {
    v53 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v53 = 0;
    _os_log_impl(&dword_1C1324000, v51, v52, "Replicator is not available", v53, 2u);
    MEMORY[0x1C3BAD3F4](v53, -1, -1);
  }

}

uint64_t sub_1C139A1AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  void (*v30)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  int64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  void (*v59)(char *, char *, uint64_t);
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  int64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;

  v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793380);
  v6 = MEMORY[0x1E0C80A78](v81);
  v80 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v79 = (uint64_t)&v68 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v78 = (char *)&v68 - v11;
  MEMORY[0x1E0C80A78](v10);
  v77 = (char *)&v68 - v12;
  v13 = sub_1C14251EC();
  v86 = *(_QWORD *)(v13 - 8);
  v87 = v13;
  MEMORY[0x1E0C80A78](v13);
  v85 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Activity();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v71 = (uint64_t)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797560);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v19);
  v24 = (char *)&v68 - v23;
  MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v68 - v25;
  swift_beginAccess();
  v72 = a1;
  v27 = *(_QWORD *)(a1 + 184);
  if (*(_QWORD *)(v27 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28 = sub_1C13277A0(a2, a3);
    if ((v29 & 1) != 0)
    {
      sub_1C1338F24(*(_QWORD *)(v27 + 56) + *(_QWORD *)(v16 + 72) * v28, (uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
      v30(v26, 0, 1, v15);
    }
    else
    {
      v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
      v30(v26, 1, 1, v15);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
    v30(v26, 1, 1, v15);
  }
  sub_1C132C344((uint64_t)v26, (uint64_t)v24, &qword_1ED797560);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v24, 1, v15) == 1)
  {
    sub_1C132C860((uint64_t)v26, &qword_1ED797560);
    v31 = (uint64_t)v24;
    return sub_1C132C860(v31, &qword_1ED797560);
  }
  v70 = v26;
  sub_1C1339140((uint64_t)v24, v71, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
  v30(v21, 1, 1, v15);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C13B396C((uint64_t)v21, a2, a3);
  swift_endAccess();
  v32 = v72;
  swift_beginAccess();
  v33 = *(_QWORD *)(v32 + 200);
  v34 = *(_QWORD *)(v33 + 16);
  v35 = MEMORY[0x1E0DEE9D8];
  if (!v34)
  {
LABEL_32:
    v67 = v71;
    sub_1C1391054(v71, v35);
    swift_bridgeObjectRelease();
    sub_1C1339004(v67, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    v31 = (uint64_t)v70;
    return sub_1C132C860(v31, &qword_1ED797560);
  }
  v88 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  sub_1C1336AD0(0, v34, 0);
  result = sub_1C135833C(v33);
  v38 = result;
  v39 = 0;
  v40 = v33 + 64;
  v41 = *(_BYTE *)(v33 + 32);
  v69 = v33 + 80;
  v76 = v33;
  v73 = v34;
  v74 = v37;
  v75 = v33 + 64;
  v42 = (uint64_t)v77;
  v43 = v87;
  while ((v38 & 0x8000000000000000) == 0 && v38 < 1 << v41)
  {
    v46 = (unint64_t)v38 >> 6;
    if ((*(_QWORD *)(v40 + 8 * ((unint64_t)v38 >> 6)) & (1 << v38)) == 0)
      goto LABEL_35;
    if (*(_DWORD *)(v33 + 36) != (_DWORD)v37)
      goto LABEL_36;
    v82 = v39;
    v83 = 1 << v38;
    v47 = v81;
    v48 = v42 + *(int *)(v81 + 48);
    v49 = *(_QWORD *)(v33 + 48);
    v50 = v86;
    v84 = *(_QWORD *)(v86 + 72);
    v51 = *(void (**)(uint64_t, uint64_t, uint64_t))(v86 + 16);
    v51(v42, v49 + v84 * v38, v43);
    v52 = *(_QWORD *)(v33 + 56) + 16 * v38;
    v53 = *(_BYTE *)v52;
    v54 = *(_QWORD *)(v52 + 8);
    *(_BYTE *)v48 = *(_BYTE *)v52;
    *(_QWORD *)(v48 + 8) = v54;
    v55 = (uint64_t)v78;
    v51((uint64_t)v78, v42, v43);
    v56 = v55 + *(int *)(v47 + 48);
    *(_BYTE *)v56 = v53;
    *(_QWORD *)(v56 + 8) = v54;
    v57 = v79;
    sub_1C132A724(v55, v79, &qword_1ED793380);
    swift_bridgeObjectRetain_n();
    sub_1C132C860(v42, &qword_1ED793380);
    v58 = v80;
    v51((uint64_t)v80, v57, v43);
    v59 = *(void (**)(char *, char *, uint64_t))(v50 + 32);
    v59(v85, v58, v43);
    sub_1C132C860(v57, &qword_1ED793380);
    v35 = v88;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C1336AD0(0, *(_QWORD *)(v35 + 16) + 1, 1);
      v35 = v88;
    }
    v61 = *(_QWORD *)(v35 + 16);
    v60 = *(_QWORD *)(v35 + 24);
    if (v61 >= v60 >> 1)
    {
      sub_1C1336AD0(v60 > 1, v61 + 1, 1);
      v35 = v88;
    }
    *(_QWORD *)(v35 + 16) = v61 + 1;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v59)(v35+ ((*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80))+ v61 * v84, v85, v87);
    v88 = v35;
    v33 = v76;
    v41 = *(_BYTE *)(v76 + 32);
    v44 = 1 << v41;
    if (v38 >= 1 << v41)
      goto LABEL_37;
    v40 = v75;
    v62 = *(_QWORD *)(v75 + 8 * v46);
    if ((v62 & v83) == 0)
      goto LABEL_38;
    LODWORD(v37) = v74;
    if (*(_DWORD *)(v76 + 36) != (_DWORD)v74)
      goto LABEL_39;
    v63 = v62 & (-2 << (v38 & 0x3F));
    if (v63)
    {
      v44 = __clz(__rbit64(v63)) | v38 & 0xFFFFFFFFFFFFFFC0;
      v45 = v73;
    }
    else
    {
      v64 = v46 + 1;
      v65 = (v44 + 63) >> 6;
      v45 = v73;
      if (v46 + 1 < v65)
      {
        v66 = *(_QWORD *)(v75 + 8 * v64);
        if (v66)
        {
LABEL_30:
          v44 = __clz(__rbit64(v66)) + (v64 << 6);
        }
        else
        {
          while (v65 - 2 != v46)
          {
            v66 = *(_QWORD *)(v69 + 8 * v46++);
            if (v66)
            {
              v64 = v46 + 1;
              goto LABEL_30;
            }
          }
        }
      }
    }
    v39 = v82 + 1;
    v38 = v44;
    if (v82 + 1 == v45)
    {
      swift_bridgeObjectRelease();
      goto LABEL_32;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

void sub_1C139A854()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  void *v34;
  id v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t **v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  char *v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  void (*v94)(char *, unint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(char *, unint64_t, uint64_t);
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  unint64_t v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  __int128 v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t i;
  unint64_t v125;
  unint64_t v126;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void (*v131)(char *, unint64_t, uint64_t);
  char *v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  NSObject *v147;
  os_log_type_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  unint64_t v153;
  unint64_t v154;
  unint64_t v155;
  unint64_t v156;
  NSObject *v157;
  os_log_type_t v158;
  uint8_t *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  char *v168;
  char *v169;
  char *v170;
  char *v171;
  uint64_t *v172;
  unint64_t v173;
  char *v174;
  uint64_t v175;
  int64_t v176;
  uint64_t v177;
  __int128 v178;
  _QWORD *v179;
  _QWORD *v180;
  _QWORD *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  unint64_t v187;
  uint64_t v188;
  char *v189;
  __int128 v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;

  v1 = v0;
  v2 = sub_1C14261AC();
  v3 = *(uint64_t **)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (unint64_t)&v160 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7933A0);
  v6 = MEMORY[0x1E0C80A78](v167);
  v166 = (char *)&v160 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v165 = (uint64_t)&v160 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v164 = (char *)&v160 - v11;
  MEMORY[0x1E0C80A78](v10);
  v163 = (char *)&v160 - v12;
  v13 = sub_1C142614C();
  v184 = *(_QWORD *)(v13 - 8);
  v185 = v13;
  v14 = MEMORY[0x1E0C80A78](v13);
  v169 = (char *)&v160 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v168 = (char *)&v160 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v189 = (char *)&v160 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v171 = (char *)&v160 - v21;
  MEMORY[0x1E0C80A78](v20);
  v170 = (char *)&v160 - v22;
  v183 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
  v23 = MEMORY[0x1E0C80A78](v183);
  v182 = (uint64_t)&v160 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v23);
  v181 = (uint64_t *)((char *)&v160 - v26);
  v27 = MEMORY[0x1E0C80A78](v25);
  v180 = (uint64_t *)((char *)&v160 - v28);
  MEMORY[0x1E0C80A78](v27);
  v179 = (uint64_t *)((char *)&v160 - v29);
  v30 = sub_1C14269F8();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v33 = (uint64_t *)((char *)&v160 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  v34 = *(void **)(v1 + 16);
  *v33 = v34;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v31 + 104))(v33, *MEMORY[0x1E0DEF740], v30);
  v35 = v34;
  LOBYTE(v34) = sub_1C1426A10();
  (*(void (**)(_QWORD *, uint64_t))(v31 + 8))(v33, v30);
  if ((v34 & 1) == 0)
    goto LABEL_120;
  sub_1C132C344(v1 + 24, (uint64_t)&v190, &qword_1ED793398);
  if (!v191)
  {
    sub_1C132C860((uint64_t)&v190, &qword_1ED793398);
    if (qword_1ED791DD8 != -1)
      swift_once();
    v75 = sub_1C1426854();
    __swift_project_value_buffer(v75, (uint64_t)qword_1ED7984F0);
    v76 = sub_1C1426848();
    v77 = sub_1C1426C68();
    if (os_log_type_enabled(v76, v77))
    {
      v78 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v78 = 0;
      _os_log_impl(&dword_1C1324000, v76, v77, "Replicator is not available", v78, 2u);
      MEMORY[0x1C3BAD3F4](v78, -1, -1);
    }

    return;
  }
  sub_1C13A1B30(&v190, (uint64_t)&v192);
  if (qword_1ED791DD8 != -1)
    goto LABEL_122;
  while (1)
  {
    v36 = sub_1C1426854();
    v162 = __swift_project_value_buffer(v36, (uint64_t)qword_1ED7984F0);
    v37 = sub_1C1426848();
    v38 = sub_1C1426C80();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v39 = 0;
      _os_log_impl(&dword_1C1324000, v37, v38, "Reconciling locally owned activity records", v39, 2u);
      MEMORY[0x1C3BAD3F4](v39, -1, -1);
    }

    v40 = (_QWORD *)(v1 + 80);
    v41 = *(_QWORD *)(v1 + 104);
    v42 = *(_QWORD *)(v1 + 112);
    __swift_project_boxed_opaque_existential_1(v40, v41);
    v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 8))(v41, v42);
    v1 = 0;
    v44 = sub_1C139F7C8(v43, (uint64_t (*)(char *, unint64_t, uint64_t))sub_1C139F924);
    swift_bridgeObjectRelease();
    v45 = *(_QWORD *)(v44 + 16);
    v173 = v2;
    v172 = v3;
    v174 = (char *)v5;
    if (!v45)
      break;
    v160 = 0;
    *(_QWORD *)&v190 = MEMORY[0x1E0DEE9D8];
    sub_1C1336990(0, v45, 0);
    v46 = sub_1C135833C(v44);
    if ((v46 & 0x8000000000000000) == 0)
    {
      v1 = v46;
      if (v46 < 1 << *(_BYTE *)(v44 + 32))
      {
        v48 = 0;
        v49 = v44 + 64;
        v175 = v47;
        v161 = v44 + 80;
        *(_QWORD *)&v178 = v44;
        v176 = v45;
        v177 = v44 + 64;
        while (1)
        {
          v5 = (unint64_t)v1 >> 6;
          if ((*(_QWORD *)(v49 + 8 * ((unint64_t)v1 >> 6)) & (1 << v1)) == 0)
            goto LABEL_108;
          if (*(_DWORD *)(v44 + 36) != (_DWORD)v47)
            goto LABEL_109;
          v187 = v47;
          v188 = 1 << v1;
          v186 = v48;
          v50 = v183;
          v51 = v179;
          v52 = (uint64_t)v179 + *(int *)(v183 + 48);
          v53 = *(_QWORD *)(v44 + 48);
          v54 = *(_QWORD *)(v44 + 56);
          v55 = (uint64_t *)(v53 + 16 * v1);
          v57 = *v55;
          v56 = v55[1];
          v58 = type metadata accessor for Activity();
          sub_1C1338F24(v54 + *(_QWORD *)(*(_QWORD *)(v58 - 8) + 72) * v1, v52, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
          *v51 = v57;
          v51[1] = v56;
          v59 = (uint64_t)v180;
          *v180 = v57;
          *(_QWORD *)(v59 + 8) = v56;
          sub_1C1338F24(v52, v59 + *(int *)(v50 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Activity);
          v60 = (uint64_t **)v181;
          sub_1C132A724(v59, (uint64_t)v181, &qword_1ED7939D8);
          swift_bridgeObjectRetain_n();
          sub_1C132C860((uint64_t)v51, &qword_1ED7939D8);
          v61 = *(int *)(v50 + 48);
          v62 = v182;
          v63 = v182 + v61;
          v3 = *v60;
          v2 = (unint64_t)v60[1];
          *(_QWORD *)v182 = *v60;
          *(_QWORD *)(v62 + 8) = v2;
          sub_1C1338F24((uint64_t)v60 + v61, v62 + v61, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
          swift_bridgeObjectRetain();
          sub_1C1339004(v63, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
          sub_1C132C860((uint64_t)v60, &qword_1ED7939D8);
          v64 = v190;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C1336990(0, *(_QWORD *)(v64 + 16) + 1, 1);
            v64 = v190;
          }
          v66 = *(_QWORD *)(v64 + 16);
          v65 = *(_QWORD *)(v64 + 24);
          if (v66 >= v65 >> 1)
          {
            sub_1C1336990(v65 > 1, v66 + 1, 1);
            v64 = v190;
          }
          *(_QWORD *)(v64 + 16) = v66 + 1;
          v67 = v64 + 16 * v66;
          *(_QWORD *)(v67 + 32) = v3;
          *(_QWORD *)(v67 + 40) = v2;
          v44 = v178;
          v68 = 1 << *(_BYTE *)(v178 + 32);
          if (v1 >= v68)
            goto LABEL_110;
          v49 = v177;
          v69 = *(_QWORD *)(v177 + 8 * v5);
          if ((v69 & v188) == 0)
            goto LABEL_111;
          if (*(_DWORD *)(v178 + 36) != (_DWORD)v187)
            goto LABEL_112;
          v70 = v69 & (-2 << (v1 & 0x3F));
          if (v70)
          {
            v1 = __clz(__rbit64(v70)) | v1 & 0xFFFFFFFFFFFFFFC0;
            v71 = (char *)v176;
            goto LABEL_28;
          }
          v72 = (char *)(v5 + 1);
          v73 = (unint64_t)(v68 + 63) >> 6;
          v71 = (char *)v176;
          if (v5 + 1 < v73)
          {
            v74 = *(_QWORD *)(v177 + 8 * (_QWORD)v72);
            if (v74)
            {
LABEL_26:
              v1 = __clz(__rbit64(v74)) + ((_QWORD)v72 << 6);
              goto LABEL_28;
            }
            while (v73 - 2 != v5)
            {
              v74 = *(_QWORD *)(v161 + 8 * v5++);
              if (v74)
              {
                v72 = (char *)(v5 + 1);
                goto LABEL_26;
              }
            }
          }
          v1 = 1 << *(_BYTE *)(v178 + 32);
LABEL_28:
          v48 = v186 + 1;
          if (v186 + 1 == v71)
          {
            swift_release();
            v2 = v173;
            v3 = v172;
            v5 = (unint64_t)v174;
            v1 = v160;
            goto LABEL_39;
          }
          if ((v1 & 0x8000000000000000) == 0)
          {
            v47 = v175;
            if (v1 < v68)
              continue;
          }
          break;
        }
      }
    }
    __break(1u);
LABEL_108:
    __break(1u);
LABEL_109:
    __break(1u);
LABEL_110:
    __break(1u);
LABEL_111:
    __break(1u);
LABEL_112:
    __break(1u);
LABEL_113:
    __break(1u);
LABEL_114:
    __break(1u);
LABEL_115:
    __break(1u);
LABEL_116:
    __break(1u);
LABEL_117:
    __break(1u);
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    swift_once();
  }
  swift_release();
  v64 = MEMORY[0x1E0DEE9D8];
LABEL_39:
  v79 = sub_1C1375140(v64);
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(&v192, v193);
  v80 = sub_1C1426074();
  if (v1)
  {
LABEL_102:
    swift_bridgeObjectRelease();
    v157 = sub_1C1426848();
    v158 = sub_1C1426C68();
    if (os_log_type_enabled(v157, v158))
    {
      v159 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v159 = 0;
      _os_log_impl(&dword_1C1324000, v157, v158, "Failed to resolve locally owned activity records", v159, 2u);
      MEMORY[0x1C3BAD3F4](v159, -1, -1);
    }

    goto LABEL_105;
  }
  v179 = (_QWORD *)v79;
  v81 = sub_1C139F7C8(v80, (uint64_t (*)(char *, unint64_t, uint64_t))sub_1C139FFAC);
  v188 = 0;
  v1 = v81;
  swift_bridgeObjectRelease();
  v82 = *(_QWORD *)(v1 + 16);
  if (v82)
  {
    *(_QWORD *)&v190 = MEMORY[0x1E0DEE9D8];
    sub_1C1336AA4(0, v82, 0);
    v2 = sub_1C135833C(v1);
    v84 = 0;
    v85 = v1 + 64;
    v86 = *(_BYTE *)(v1 + 32);
    v175 = v1 + 88;
    v87 = v184;
    v180 = (_QWORD *)v1;
    v176 = v82;
    v177 = v83;
    *(_QWORD *)&v178 = v1 + 64;
    v88 = v185;
    while (1)
    {
      if ((v2 & 0x8000000000000000) != 0 || (uint64_t)v2 >= 1 << v86)
        goto LABEL_113;
      if ((*(_QWORD *)(v85 + 8 * (v2 >> 6)) & (1 << v2)) == 0)
        goto LABEL_114;
      if (*(_DWORD *)(v1 + 36) != (_DWORD)v83)
        goto LABEL_115;
      v182 = 1 << v2;
      v183 = v2 >> 6;
      v181 = (_QWORD *)v84;
      v90 = v167;
      v91 = v163;
      v92 = &v163[*(int *)(v167 + 48)];
      v93 = *(_QWORD *)(v1 + 48);
      v186 = *(char **)(v87 + 72);
      v94 = *(void (**)(char *, unint64_t, uint64_t))(v87 + 16);
      v94(v163, v93 + (_QWORD)v186 * v2, v88);
      v95 = *(_QWORD *)(v1 + 56);
      v96 = sub_1C14251EC();
      v97 = *(_QWORD *)(v96 - 8);
      v98 = *(_QWORD *)(v97 + 72);
      v187 = v2;
      v99 = *(void (**)(char *, unint64_t, uint64_t))(v97 + 16);
      v99(v92, v95 + v98 * v2, v96);
      v100 = v164;
      v94(v164, (unint64_t)v91, v88);
      v99(&v100[*(int *)(v90 + 48)], (unint64_t)v92, v96);
      v101 = (uint64_t)v100;
      v102 = v165;
      sub_1C132A724(v101, v165, &qword_1ED7933A0);
      v103 = (uint64_t)v91;
      v3 = &qword_1ED7933A0;
      sub_1C132C860(v103, &qword_1ED7933A0);
      v104 = *(int *)(v90 + 48);
      v105 = v166;
      v106 = &v166[v104];
      v107 = v102 + v104;
      v94(v166, v102, v88);
      v99(v106, v107, v96);
      v5 = *(_QWORD *)(v184 + 32);
      ((void (*)(char *, char *, uint64_t))v5)(v170, v105, v88);
      (*(void (**)(char *, uint64_t))(v97 + 8))(v106, v96);
      sub_1C132C860(v102, &qword_1ED7933A0);
      v108 = v190;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C1336AA4(0, *(_QWORD *)(v108 + 16) + 1, 1);
        v108 = v190;
      }
      v110 = *(_QWORD *)(v108 + 16);
      v109 = *(_QWORD *)(v108 + 24);
      v87 = v184;
      v1 = (uint64_t)v180;
      v111 = v187;
      if (v110 >= v109 >> 1)
      {
        sub_1C1336AA4(v109 > 1, v110 + 1, 1);
        v108 = v190;
      }
      *(_QWORD *)(v108 + 16) = v110 + 1;
      ((void (*)(unint64_t, char *, uint64_t))v5)(v108+ ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80))+ v110 * (_QWORD)v186, v170, v185);
      *(_QWORD *)&v190 = v108;
      v86 = *(_BYTE *)(v1 + 32);
      v2 = 1 << v86;
      if (v111 >= 1 << v86)
        goto LABEL_116;
      v85 = v178;
      v112 = v183;
      v113 = *(_QWORD *)(v178 + 8 * v183);
      if ((v113 & v182) == 0)
        goto LABEL_117;
      LODWORD(v83) = v177;
      if (*(_DWORD *)(v1 + 36) != (_DWORD)v177)
        goto LABEL_118;
      v114 = v113 & (-2 << (v111 & 0x3F));
      if (v114)
      {
        v2 = __clz(__rbit64(v114)) | v111 & 0xFFFFFFFFFFFFFFC0;
        v5 = (unint64_t)v174;
        v89 = (_QWORD *)v176;
      }
      else
      {
        v115 = v183 + 1;
        v116 = (v2 + 63) >> 6;
        v5 = (unint64_t)v174;
        v89 = (_QWORD *)v176;
        if (v183 + 1 < v116)
        {
          v117 = *(_QWORD *)(v178 + 8 * v115);
          if (!v117)
          {
            v115 = v183 + 2;
            if (v183 + 2 >= v116)
              goto LABEL_43;
            v117 = *(_QWORD *)(v178 + 8 * v115);
            if (!v117)
            {
              while (v116 - 3 != v112)
              {
                v117 = *(_QWORD *)(v175 + 8 * v112++);
                if (v117)
                {
                  v115 = v112 + 2;
                  goto LABEL_58;
                }
              }
              goto LABEL_43;
            }
          }
LABEL_58:
          v2 = __clz(__rbit64(v117)) + (v115 << 6);
        }
      }
LABEL_43:
      v84 = (uint64_t)v181 + 1;
      if ((_QWORD *)((char *)v181 + 1) == v89)
      {
        swift_release();
        v2 = v173;
        v3 = v172;
        goto LABEL_66;
      }
    }
  }
  swift_release();
  v108 = MEMORY[0x1E0DEE9D8];
  v87 = v184;
LABEL_66:
  v1 = sub_1C13751D4(v108);
  swift_bridgeObjectRelease();
  v119 = 0;
  v120 = *(_QWORD *)(v1 + 56);
  v180 = (_QWORD *)(v1 + 56);
  v183 = v1;
  v121 = 1 << *(_BYTE *)(v1 + 32);
  v122 = -1;
  if (v121 < 64)
    v122 = ~(-1 << v121);
  v123 = v122 & v120;
  v181 = (_QWORD *)((unint64_t)(v121 + 63) >> 6);
  v182 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v118 = 136446210;
  v178 = v118;
  v177 = MEMORY[0x1E0DEE9B8] + 8;
  for (i = v185; ; ((void (*)(char *, uint64_t))v1)(v189, i))
  {
    if (v123)
    {
      v125 = __clz(__rbit64(v123));
      v123 &= v123 - 1;
      v126 = v125 | (v119 << 6);
      goto LABEL_85;
    }
    if (__OFADD__(v119++, 1))
      goto LABEL_119;
    if (v119 >= (uint64_t)v181)
      break;
    v128 = v180[v119];
    if (!v128)
    {
      v129 = v119 + 1;
      if (v119 + 1 >= (uint64_t)v181)
        break;
      v128 = v180[v129];
      if (!v128)
      {
        v129 = v119 + 2;
        if (v119 + 2 >= (uint64_t)v181)
          break;
        v128 = v180[v129];
        if (!v128)
        {
          v129 = v119 + 3;
          if (v119 + 3 >= (uint64_t)v181)
            break;
          v128 = v180[v129];
          if (!v128)
          {
            while (1)
            {
              v119 = v129 + 1;
              if (__OFADD__(v129, 1))
                goto LABEL_121;
              if (v119 >= (uint64_t)v181)
                goto LABEL_100;
              v128 = v180[v119];
              ++v129;
              if (v128)
                goto LABEL_84;
            }
          }
        }
      }
      v119 = v129;
    }
LABEL_84:
    v123 = (v128 - 1) & v128;
    v126 = __clz(__rbit64(v128)) + (v119 << 6);
LABEL_85:
    v130 = *(_QWORD *)(v183 + 48);
    v187 = *(_QWORD *)(v87 + 72);
    v131 = *(void (**)(char *, unint64_t, uint64_t))(v87 + 16);
    v132 = v171;
    v131(v171, v130 + v187 * v126, i);
    v186 = *(char **)(v87 + 32);
    ((void (*)(char *, char *, uint64_t))v186)(v189, v132, i);
    v133 = sub_1C1426110();
    v135 = v134;
    *(_QWORD *)&v190 = 46;
    *((_QWORD *)&v190 + 1) = 0xE100000000000000;
    MEMORY[0x1E0C80A78](v133);
    *(&v160 - 2) = (uint64_t)&v190;
    swift_bridgeObjectRetain();
    v136 = v188;
    v137 = (_QWORD *)sub_1C1415B74(0x7FFFFFFFFFFFFFFFLL, 1, sub_1C13A4684, (uint64_t)(&v160 - 4), v133, v135);
    v188 = v136;
    swift_bridgeObjectRelease();
    if (!v137[2])
    {
      swift_bridgeObjectRelease();
      v1 = *(_QWORD *)(v87 + 8);
      v2 = v173;
      v3 = v172;
LABEL_70:
      i = v185;
      continue;
    }
    v138 = v137[4];
    v139 = v137[5];
    v140 = v137[6];
    v141 = v137[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v142 = MEMORY[0x1C3BAC794](v138, v139, v140, v141);
    v144 = v143;
    swift_bridgeObjectRelease();
    LOBYTE(v142) = sub_1C1330FE4(v142, v144, (uint64_t)v179);
    swift_bridgeObjectRelease();
    if ((v142 & 1) != 0)
    {
      v1 = *(_QWORD *)(v87 + 8);
      v2 = v173;
      v3 = v172;
      v5 = (unint64_t)v174;
      goto LABEL_70;
    }
    v145 = v168;
    v146 = v185;
    v131(v168, (unint64_t)v189, v185);
    v147 = sub_1C1426848();
    v148 = sub_1C1426C80();
    if (os_log_type_enabled(v147, v148))
    {
      v149 = swift_slowAlloc();
      v150 = swift_slowAlloc();
      *(_QWORD *)&v190 = v150;
      *(_DWORD *)v149 = v178;
      sub_1C1329AD0(&qword_1EF6DB8B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D87A00], MEMORY[0x1E0D87A20]);
      v151 = sub_1C1427058();
      *(_QWORD *)(v149 + 4) = sub_1C132AD90(v151, v152, (uint64_t *)&v190);
      swift_bridgeObjectRelease();
      v1 = *(_QWORD *)(v184 + 8);
      ((void (*)(char *, uint64_t))v1)(v168, v146);
      _os_log_impl(&dword_1C1324000, v147, v148, "Found record for non-existent activity: %{public}s", (uint8_t *)v149, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v150, -1, -1);
      MEMORY[0x1C3BAD3F4](v149, -1, -1);
    }
    else
    {
      v1 = *(_QWORD *)(v184 + 8);
      ((void (*)(char *, uint64_t))v1)(v145, v146);
    }

    v5 = (unint64_t)v174;
    v153 = v182;
    v131(v169, (unint64_t)v189, v146);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v153 = sub_1C136C8BC(0, *(_QWORD *)(v153 + 16) + 1, 1, v153);
    v2 = v173;
    v3 = v172;
    v87 = v184;
    v182 = v153;
    v155 = *(_QWORD *)(v153 + 16);
    v154 = *(_QWORD *)(v153 + 24);
    if (v155 >= v154 >> 1)
      v182 = sub_1C136C8BC(v154 > 1, v155 + 1, 1, v182);
    v156 = v182;
    *(_QWORD *)(v182 + 16) = v155 + 1;
    i = v185;
    ((void (*)(unint64_t, char *, uint64_t))v186)(v156 + ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80)) + v155 * v187, v169, v185);
  }
LABEL_100:
  swift_bridgeObjectRelease();
  swift_release();
  __swift_project_boxed_opaque_existential_1(&v192, v193);
  ((void (*)(unint64_t, _QWORD, unint64_t))v3[13])(v5, *MEMORY[0x1E0D87AE8], v2);
  v1 = v188;
  sub_1C142608C();
  if (v1)
  {
    ((void (*)(unint64_t, unint64_t))v3[1])(v5, v2);
    goto LABEL_102;
  }
  ((void (*)(unint64_t, unint64_t))v3[1])(v5, v2);
  swift_bridgeObjectRelease();
LABEL_105:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v192);
}

void sub_1C139BB94()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  id v19;
  os_unfair_lock_s *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  unint64_t v64;
  unint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  int64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  __int128 v74;
  uint64_t v75;
  int *v76;
  unint64_t *v77;
  uint64_t *v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  unint64_t v85;
  uint64_t v86;
  NSObject *v87;
  os_log_type_t v88;
  uint64_t v89;
  uint64_t (*v90)();
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (*v94)();
  uint64_t v95;
  _QWORD *v96;
  int *v97;
  int64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  _QWORD *v104;
  _QWORD *v105;
  __int128 v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  __int128 v111;
  uint64_t v112;
  _QWORD v113[6];

  v1 = v0;
  v2 = sub_1C1425630();
  MEMORY[0x1E0C80A78](v2);
  v4 = (uint64_t (*)())((char *)&v94 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for ActivityParticipantEvent(0);
  MEMORY[0x1E0C80A78](v5);
  v109 = (uint64_t *)((char *)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
  v7 = MEMORY[0x1E0C80A78](v107);
  *(_QWORD *)&v106 = (char *)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v105 = (uint64_t (**)())((char *)&v94 - v10);
  v11 = MEMORY[0x1E0C80A78](v9);
  v104 = (uint64_t (**)())((char *)&v94 - v12);
  MEMORY[0x1E0C80A78](v11);
  v103 = (char *)&v94 - v13;
  v14 = sub_1C14269F8();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (uint64_t (**)())((char *)&v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = (void *)v1[2];
  *v17 = v18;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E0DEF740], v14);
  v19 = v18;
  LOBYTE(v18) = sub_1C1426A10();
  (*(void (**)(_QWORD *, uint64_t))(v15 + 8))(v17, v14);
  if ((v18 & 1) == 0)
    goto LABEL_60;
  sub_1C132C344((uint64_t)(v1 + 3), (uint64_t)&v111, &qword_1ED793398);
  if (v112)
  {
    sub_1C13A1B30(&v111, (uint64_t)v113);
    v20 = (os_unfair_lock_s *)(v1[20] + 16);
    os_unfair_lock_lock(v20);
    sub_1C13A3B54((uint64_t *)&v111);
    v21 = v111;
    os_unfair_lock_unlock(v20);
    v108 = v21;
    if (v21)
    {
      if (qword_1ED791DD8 != -1)
        goto LABEL_61;
      while (1)
      {
        v22 = sub_1C1426854();
        v102 = __swift_project_value_buffer(v22, (uint64_t)qword_1ED7984F0);
        v23 = sub_1C1426848();
        v24 = sub_1C1426C80();
        if (os_log_type_enabled(v23, v24))
        {
          v25 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v25 = 0;
          _os_log_impl(&dword_1C1324000, v23, v24, "Reconciling remotely owned activity records", v25, 2u);
          MEMORY[0x1C3BAD3F4](v25, -1, -1);
        }

        __swift_project_boxed_opaque_existential_1(v113, v113[3]);
        v26 = sub_1C1426074();
        v97 = (int *)v5;
        v35 = sub_1C139F7C8(v26, (uint64_t (*)(char *, unint64_t, uint64_t))sub_1C13A05F0);
        swift_bridgeObjectRelease();
        v36 = sub_1C138C858(v35);
        swift_release();
        v5 = sub_1C1375140(v36);
        swift_bridgeObjectRelease();
        v37 = v1[13];
        v38 = v1[14];
        __swift_project_boxed_opaque_existential_1(v1 + 10, v37);
        v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8))(v37, v38);
        v40 = sub_1C139F7C8(v39, (uint64_t (*)(char *, unint64_t, uint64_t))sub_1C139FC68);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        v41 = sub_1C13A1F8C(v40, v5);
        swift_bridgeObjectRelease_n();
        swift_release();
        v42 = *(_QWORD *)(v41 + 16);
        v96 = v1;
        if (!v42)
          break;
        v94 = v4;
        *(_QWORD *)&v111 = MEMORY[0x1E0DEE9D8];
        sub_1C1336990(0, v42, 0);
        v43 = sub_1C135833C(v41);
        if ((v43 & 0x8000000000000000) == 0)
        {
          v5 = v43;
          if (v43 < 1 << *(_BYTE *)(v41 + 32))
          {
            v45 = 0;
            v46 = v41 + 64;
            v95 = v41 + 80;
            v101 = v41;
            v98 = v42;
            v99 = v44;
            v100 = v41 + 64;
            v4 = type metadata accessor for Activity;
            do
            {
              v47 = (unint64_t)v5 >> 6;
              if ((*(_QWORD *)(v46 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0)
                goto LABEL_55;
              if (*(_DWORD *)(v41 + 36) != (_DWORD)v44)
                goto LABEL_56;
              v110 = v45;
              v48 = v107;
              v49 = v103;
              v50 = (uint64_t)&v103[*(int *)(v107 + 48)];
              v51 = *(_QWORD *)(v41 + 56);
              v52 = (uint64_t *)(*(_QWORD *)(v41 + 48) + 16 * v5);
              v54 = *v52;
              v53 = v52[1];
              v55 = type metadata accessor for Activity();
              sub_1C1338F24(v51 + *(_QWORD *)(*(_QWORD *)(v55 - 8) + 72) * v5, v50, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
              *v49 = v54;
              v49[1] = v53;
              v56 = v104;
              *v104 = v54;
              v56[1] = v53;
              sub_1C1338F24(v50, (uint64_t)v56 + *(int *)(v48 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Activity);
              v57 = (uint64_t)v56;
              v58 = v105;
              sub_1C132A724(v57, (uint64_t)v105, &qword_1ED7939D8);
              swift_bridgeObjectRetain_n();
              sub_1C132C860((uint64_t)v49, &qword_1ED7939D8);
              v59 = *(int *)(v48 + 48);
              v60 = v106;
              v61 = v106 + v59;
              v1 = (_QWORD *)*v58;
              v62 = v58[1];
              *(_QWORD *)v106 = *v58;
              *(_QWORD *)(v60 + 8) = v62;
              sub_1C1338F24((uint64_t)v58 + v59, v60 + v59, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
              swift_bridgeObjectRetain();
              sub_1C1339004(v61, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
              sub_1C132C860((uint64_t)v58, &qword_1ED7939D8);
              v63 = (_QWORD *)v111;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1C1336990(0, v63[2] + 1, 1);
                v63 = (_QWORD *)v111;
              }
              v65 = v63[2];
              v64 = v63[3];
              if (v65 >= v64 >> 1)
              {
                sub_1C1336990(v64 > 1, v65 + 1, 1);
                v63 = (_QWORD *)v111;
              }
              v63[2] = v65 + 1;
              v66 = &v63[2 * v65];
              v66[4] = v1;
              v66[5] = v62;
              v41 = v101;
              v67 = 1 << *(_BYTE *)(v101 + 32);
              if (v5 >= v67)
                goto LABEL_57;
              v46 = v100;
              v68 = *(_QWORD *)(v100 + 8 * v47);
              if ((v68 & (1 << v5)) == 0)
                goto LABEL_58;
              LODWORD(v44) = v99;
              if (*(_DWORD *)(v101 + 36) != (_DWORD)v99)
                goto LABEL_59;
              v69 = v68 & (-2 << (v5 & 0x3F));
              if (v69)
              {
                v5 = __clz(__rbit64(v69)) | v5 & 0xFFFFFFFFFFFFFFC0;
                v70 = v98;
                goto LABEL_40;
              }
              v71 = v47 + 1;
              v72 = (unint64_t)(v67 + 63) >> 6;
              v70 = v98;
              if (v47 + 1 < v72)
              {
                v73 = *(_QWORD *)(v100 + 8 * v71);
                if (v73)
                {
LABEL_38:
                  v5 = __clz(__rbit64(v73)) + (v71 << 6);
                  goto LABEL_40;
                }
                while (v72 - 2 != v47)
                {
                  v73 = *(_QWORD *)(v95 + 8 * v47++);
                  if (v73)
                  {
                    v71 = v47 + 1;
                    goto LABEL_38;
                  }
                }
              }
              v5 = 1 << *(_BYTE *)(v101 + 32);
LABEL_40:
              v45 = v110 + 1;
              if (v110 + 1 == v70)
              {
                swift_release();
                v1 = v96;
                v4 = v94;
                goto LABEL_46;
              }
            }
            while ((v5 & 0x8000000000000000) == 0 && v5 < v67);
          }
        }
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        swift_once();
      }
      swift_release();
      v63 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_46:
      v75 = v63[2];
      v76 = v97;
      if (v75)
      {
        LODWORD(v110) = *MEMORY[0x1E0C8F758];
        v107 = (uint64_t)(v109 + 2);
        v77 = v63 + 5;
        *(_QWORD *)&v74 = 136446210;
        v106 = v74;
        v105 = (_QWORD *)(MEMORY[0x1E0DEE9B8] + 8);
        do
        {
          v86 = *(v77 - 1);
          v85 = *v77;
          swift_bridgeObjectRetain_n();
          v87 = sub_1C1426848();
          v88 = sub_1C1426C80();
          if (os_log_type_enabled(v87, v88))
          {
            v89 = swift_slowAlloc();
            v90 = v4;
            v91 = swift_slowAlloc();
            *(_QWORD *)&v111 = v91;
            *(_DWORD *)v89 = v106;
            swift_bridgeObjectRetain();
            *(_QWORD *)(v89 + 4) = sub_1C132AD90(v86, v85, (uint64_t *)&v111);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1C1324000, v87, v88, "Ending remote activity that has been removed from replicator: %{public}s", (uint8_t *)v89, 0xCu);
            swift_arrayDestroy();
            v92 = v91;
            v4 = v90;
            v1 = v96;
            MEMORY[0x1C3BAD3F4](v92, -1, -1);
            v93 = v89;
            v76 = v97;
            MEMORY[0x1C3BAD3F4](v93, -1, -1);
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }

          v77 += 2;
          v78 = v109;
          sub_1C1425624();
          sub_1C1425570();
          type metadata accessor for ActivityParticipantEvent.EventType(0);
          swift_storeEnumTagMultiPayload();
          v79 = (char *)v78 + v76[7];
          v80 = sub_1C1425558();
          (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v80 - 8) + 104))(v79, v110, v80);
          v81 = (char *)v78 + v76[9];
          v82 = sub_1C1425450();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(v81, 1, 1, v82);
          *v78 = v86;
          v78[1] = v85;
          v83 = v107;
          *(_QWORD *)v107 = 0;
          *(_QWORD *)(v83 + 8) = 0;
          v84 = (uint64_t *)((char *)v78 + v76[8]);
          *v84 = v1;
          v84[1] = &off_1E7A8C138;
          *((_BYTE *)v78 + v76[10]) = 0;
          swift_retain();
          sub_1C13D0788((uint64_t)v78);
          sub_1C1339004((uint64_t)v78, type metadata accessor for ActivityParticipantEvent);
          --v75;
        }
        while (v75);
      }
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      if (qword_1ED791DD8 != -1)
        swift_once();
      v31 = sub_1C1426854();
      __swift_project_value_buffer(v31, (uint64_t)qword_1ED7984F0);
      v32 = sub_1C1426848();
      v33 = sub_1C1426C68();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v34 = 0;
        _os_log_impl(&dword_1C1324000, v32, v33, "ActivityManager is not available", v34, 2u);
        MEMORY[0x1C3BAD3F4](v34, -1, -1);
      }

    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v113);
  }
  else
  {
    sub_1C132C860((uint64_t)&v111, &qword_1ED793398);
    if (qword_1ED791DD8 != -1)
      swift_once();
    v27 = sub_1C1426854();
    __swift_project_value_buffer(v27, (uint64_t)qword_1ED7984F0);
    v28 = sub_1C1426848();
    v29 = sub_1C1426C68();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_1C1324000, v28, v29, "Replicator is not available", v30, 2u);
      MEMORY[0x1C3BAD3F4](v30, -1, -1);
    }

  }
}

uint64_t sub_1C139C720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5[9] = a4;
  v5[10] = a5;
  v6 = sub_1C142602C();
  v5[11] = v6;
  v5[12] = *(_QWORD *)(v6 - 8);
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  v5[15] = swift_task_alloc();
  v7 = sub_1C14251EC();
  v5[16] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[17] = v8;
  v5[18] = *(_QWORD *)(v8 + 64);
  v5[19] = swift_task_alloc();
  v5[20] = swift_task_alloc();
  v5[21] = swift_task_alloc();
  v5[22] = swift_task_alloc();
  sub_1C1426134();
  v5[23] = swift_task_alloc();
  v5[24] = swift_task_alloc();
  v5[25] = swift_task_alloc();
  v5[26] = swift_task_alloc();
  v9 = sub_1C142614C();
  v5[27] = v9;
  v5[28] = *(_QWORD *)(v9 - 8);
  v5[29] = swift_task_alloc();
  v5[30] = swift_task_alloc();
  v5[31] = swift_task_alloc();
  v5[32] = swift_task_alloc();
  v5[33] = swift_task_alloc();
  v5[34] = swift_task_alloc();
  v5[35] = swift_task_alloc();
  v5[36] = swift_task_alloc();
  v10 = sub_1C1426014();
  v5[37] = v10;
  v5[38] = *(_QWORD *)(v10 - 8);
  v5[39] = swift_task_alloc();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791E08);
  v5[40] = v11;
  v5[41] = *(_QWORD *)(v11 - 8);
  v5[42] = swift_task_alloc();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED792830);
  v5[43] = v12;
  v5[44] = *(_QWORD *)(v12 - 8);
  v5[45] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1C139C938()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(v0 + 328);
  v1 = *(_QWORD *)(v0 + 336);
  v3 = *(_QWORD *)(v0 + 320);
  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v0 + 72), *(_QWORD *)(*(_QWORD *)(v0 + 72) + 24));
  sub_1C1426068();
  sub_1C1426BD8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 368) = v4;
  *v4 = v0;
  v4[1] = sub_1C139CA08;
  return sub_1C1426BE4();
}

uint64_t sub_1C139CA08()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1C139CA5C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t);
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t);
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  _BOOL4 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  NSObject *v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t result;
  char v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  NSObject *v83;
  os_log_type_t v84;
  _BOOL4 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  void (*v94)(uint64_t, uint64_t);
  char v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(uint64_t, uint64_t);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  NSObject *v109;
  os_log_type_t v110;
  BOOL v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  NSObject *v124;
  os_log_type_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  unint64_t v132;
  void (*v133)(uint64_t, uint64_t);
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  NSObject *v139;
  os_log_type_t v140;
  uint64_t v141;
  uint64_t v142;
  void (*v143)(uint64_t, uint64_t);
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  unint64_t v148;
  void (*v149)(uint64_t, uint64_t);
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  void (*v157)(uint64_t, uint64_t);
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  void (*v162)(uint64_t, uint64_t);
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  void (*v170)(uint64_t, uint64_t);
  _QWORD *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  void (*v179)(uint64_t, uint64_t);
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  void (*v183)(uint64_t, uint64_t, uint64_t);
  uint64_t v184;
  uint64_t v185;
  void (*v186)(unint64_t, uint64_t, uint64_t);
  uint64_t v187;
  void (*v188)(uint64_t, uint64_t);
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;

  v1 = v0[8];
  if (v1)
  {
    v2 = *(_QWORD *)(v1 + 16);
    if (v2)
    {
      v3 = v0[38];
      v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
      v190 = *(_QWORD *)(v3 + 72);
      while (1)
      {
        sub_1C1338F24(v4, v0[39], (uint64_t (*)(_QWORD))MEMORY[0x1E0D87660]);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v11 = v0[39];
        v12 = v0[27];
        v13 = v0[28];
        v14 = v0[16];
        v15 = v0[17];
        if (EnumCaseMultiPayload == 1)
        {
          v16 = v0[26];
          (*(void (**)(_QWORD, uint64_t, _QWORD))(v13 + 32))(v0[36], v11, v0[27]);
          sub_1C1426140();
          v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
          v18 = v17(v16, 1, v14);
          v19 = v0[36];
          if (v18 != 1)
          {
            v33 = sub_1C142611C();
            v34 = v32;
            if (v33 == 0x7974697669746361 && v32 == 0xE800000000000000 || (sub_1C1427064() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              sub_1C139422C(v0[36]);
              goto LABEL_24;
            }
            if (v33 == 0x7069726373627573 && v34 == 0xEC0000006E6F6974 || (sub_1C1427064() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              v48 = v0[25];
              v49 = v0[16];
              sub_1C1426140();
              if (v17(v48, 1, v49) != 1)
              {
                v186 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0[17] + 32);
                v186(v0[22], v0[25], v0[16]);
                if (qword_1ED791DD8 != -1)
                  swift_once();
                v192 = v4;
                v51 = v0[21];
                v50 = v0[22];
                v53 = v0[16];
                v52 = v0[17];
                v54 = sub_1C1426854();
                __swift_project_value_buffer(v54, (uint64_t)qword_1ED7984F0);
                v183 = *(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16);
                v183(v51, v50, v53);
                v55 = sub_1C1426848();
                v56 = sub_1C1426C80();
                v57 = os_log_type_enabled(v55, v56);
                v58 = v0[21];
                v60 = v0[16];
                v59 = v0[17];
                if (v57)
                {
                  v61 = swift_slowAlloc();
                  v62 = swift_slowAlloc();
                  v194 = v62;
                  *(_DWORD *)v61 = 136446210;
                  sub_1C1329AD0(&qword_1ED792880, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
                  v63 = sub_1C1427058();
                  *(_QWORD *)(v61 + 4) = sub_1C132AD90(v63, v64, &v194);
                  swift_bridgeObjectRelease();
                  v179 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
                  v179(v58, v60);
                  _os_log_impl(&dword_1C1324000, v55, v56, "ReplicatorParticipant removed subscription from: %{public}s", (uint8_t *)v61, 0xCu);
                  swift_arrayDestroy();
                  MEMORY[0x1C3BAD3F4](v62, -1, -1);
                  MEMORY[0x1C3BAD3F4](v61, -1, -1);
                }
                else
                {
                  v179 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
                  v179(v0[21], v0[16]);
                }

                v65 = v0[22];
                v66 = v0[20];
                v67 = v0[17];
                v68 = v0[16];
                v69 = v0[10];
                v70 = *(NSObject **)(v69 + 16);
                v183(v66, v65, v68);
                v71 = (*(unsigned __int8 *)(v67 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
                v72 = swift_allocObject();
                *(_QWORD *)(v72 + 16) = v69;
                v186(v72 + v71, v66, v68);
                v73 = swift_allocObject();
                *(_QWORD *)(v73 + 16) = sub_1C13A3A14;
                *(_QWORD *)(v73 + 24) = v72;
                v0[6] = sub_1C13A469C;
                v0[7] = v73;
                v0[2] = MEMORY[0x1E0C809B0];
                v0[3] = 1107296256;
                v0[4] = sub_1C137B458;
                v0[5] = &block_descriptor_22;
                v74 = _Block_copy(v0 + 2);
                swift_retain();
                swift_retain();
                swift_release();
                dispatch_sync(v70, v74);
                _Block_release(v74);
                v179(v65, v68);
                LOBYTE(v65) = swift_isEscapingClosureAtFileLocation();
                swift_release();
                result = swift_release();
                v4 = v192;
                if ((v65 & 1) != 0)
                {
                  __break(1u);
                  return result;
                }
              }
              goto LABEL_24;
            }
            if (v33 == 0x657373696D736964 && v34 == 0xE900000000000064)
            {
              swift_bridgeObjectRelease();
              goto LABEL_24;
            }
            v77 = sub_1C1427064();
            swift_bridgeObjectRelease();
            if ((v77 & 1) != 0)
            {
LABEL_24:
              v39 = v0[26];
              (*(void (**)(_QWORD, _QWORD))(v0[28] + 8))(v0[36], v0[27]);
              v40 = v39;
            }
            else
            {
              v193 = v4;
              if (qword_1ED791DD8 != -1)
                swift_once();
              v78 = v0[35];
              v79 = v0[36];
              v80 = v0[27];
              v81 = v0[28];
              v82 = sub_1C1426854();
              __swift_project_value_buffer(v82, (uint64_t)qword_1ED7984F0);
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 16))(v78, v79, v80);
              v83 = sub_1C1426848();
              v84 = sub_1C1426C68();
              v85 = os_log_type_enabled(v83, v84);
              v86 = v0[35];
              v87 = v0[36];
              v88 = v0[27];
              v89 = v0[28];
              if (v85)
              {
                v90 = swift_slowAlloc();
                v91 = swift_slowAlloc();
                v194 = v91;
                *(_DWORD *)v90 = 136446210;
                sub_1C1329AD0(&qword_1EF6DB8B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D87A00], MEMORY[0x1E0D87A20]);
                v92 = sub_1C1427058();
                v187 = v87;
                *(_QWORD *)(v90 + 4) = sub_1C132AD90(v92, v93, &v194);
                swift_bridgeObjectRelease();
                v94 = *(void (**)(uint64_t, uint64_t))(v89 + 8);
                v94(v86, v88);
                _os_log_impl(&dword_1C1324000, v83, v84, "ReplicatorParticipant received a deleted record with an unknown zone: %{public}s", (uint8_t *)v90, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x1C3BAD3F4](v91, -1, -1);
                MEMORY[0x1C3BAD3F4](v90, -1, -1);

                v94(v187, v88);
              }
              else
              {

                v157 = *(void (**)(uint64_t, uint64_t))(v89 + 8);
                v157(v86, v88);
                v157(v87, v88);
              }
              v4 = v193;
              v40 = v0[26];
            }
            sub_1C1339004(v40, (uint64_t (*)(_QWORD))MEMORY[0x1E0D879F0]);
            goto LABEL_6;
          }
          v20 = v0[27];
          v21 = v0[28];
          goto LABEL_10;
        }
        v191 = v4;
        v22 = v0[34];
        v23 = v0[24];
        (*(void (**)(_QWORD, uint64_t, _QWORD))(v0[12] + 32))(v0[15], v11, v0[11]);
        sub_1C1426020();
        sub_1C1426140();
        v24 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
        v24(v22, v12);
        v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
        v26 = v25(v23, 1, v14);
        v27 = v0[27];
        if (v26 != 1)
          break;
        v28 = v0[33];
        sub_1C1426020();
        v29 = sub_1C142611C();
        v31 = v30;
        v24(v28, v27);
        if (v29 == 0x657373696D736964 && v31 == 0xE900000000000064 || (sub_1C1427064() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v5 = v0[32];
          v6 = v0[27];
          v7 = v0[15];
          v8 = v0[11];
          v9 = v0[12];
          sub_1C1426020();
          sub_1C1398B44(v5);
          v24(v5, v6);
          (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
        }
        else if (v29 == 0x7974697669746361 && v31 == 0xE800000000000000 || (sub_1C1427064() & 1) != 0)
        {
          (*(void (**)(_QWORD, _QWORD))(v0[12] + 8))(v0[15], v0[11]);
          swift_bridgeObjectRelease();
        }
        else
        {
          v4 = v191;
          if (v29 == 0x7069726373627573 && v31 == 0xEC0000006E6F6974)
          {
            swift_bridgeObjectRelease();
LABEL_61:
            v19 = v0[15];
            v20 = v0[11];
            v21 = v0[12];
LABEL_10:
            (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
            goto LABEL_6;
          }
          v76 = sub_1C1427064();
          swift_bridgeObjectRelease();
          if ((v76 & 1) != 0)
            goto LABEL_61;
          if (qword_1ED791DD8 != -1)
            swift_once();
          v119 = v0[14];
          v120 = v0[15];
          v121 = v0[11];
          v122 = v0[12];
          v123 = sub_1C1426854();
          __swift_project_value_buffer(v123, (uint64_t)qword_1ED7984F0);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v122 + 16))(v119, v120, v121);
          v124 = sub_1C1426848();
          v125 = sub_1C1426C68();
          if (os_log_type_enabled(v124, v125))
          {
            v126 = v0[32];
            v127 = v0[27];
            v184 = v0[15];
            v175 = v0[14];
            v177 = v0[12];
            v180 = v0[11];
            v188 = v24;
            v128 = swift_slowAlloc();
            v129 = swift_slowAlloc();
            v194 = v129;
            *(_DWORD *)v128 = 136446210;
            sub_1C1426020();
            sub_1C1329AD0(&qword_1EF6DB8B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D87A00], MEMORY[0x1E0D87A20]);
            v130 = sub_1C1427058();
            v132 = v131;
            v188(v126, v127);
            *(_QWORD *)(v128 + 4) = sub_1C132AD90(v130, v132, &v194);
            swift_bridgeObjectRelease();
            v133 = *(void (**)(uint64_t, uint64_t))(v177 + 8);
            v133(v175, v180);
            _os_log_impl(&dword_1C1324000, v124, v125, "ReplicatorParticipant received an updated local record with an unknown zone: %{public}s", (uint8_t *)v128, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1C3BAD3F4](v129, -1, -1);
            MEMORY[0x1C3BAD3F4](v128, -1, -1);

            v133(v184, v180);
          }
          else
          {
            v158 = v0[14];
            v159 = v0[15];
            v160 = v0[11];
            v161 = v0[12];

            v162 = *(void (**)(uint64_t, uint64_t))(v161 + 8);
            v162(v158, v160);
            v162(v159, v160);
          }
        }
LABEL_5:
        v4 = v191;
LABEL_6:
        v4 += v190;
        if (!--v2)
          goto LABEL_91;
      }
      v35 = v0[31];
      (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[17] + 32))(v0[19], v0[24], v0[16]);
      sub_1C1426020();
      v36 = sub_1C142611C();
      v38 = v37;
      v24(v35, v27);
      v189 = v2;
      if (v36 == 0x7974697669746361 && v38 == 0xE800000000000000 || (sub_1C1427064() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v41 = v0[32];
        v42 = v0[27];
        v43 = v0[19];
        v45 = v0[16];
        v44 = v0[17];
        v46 = v0[15];
        v47 = v0[12];
        v182 = v0[11];
        sub_1C1426020();
        sub_1C13951C0(v41, v43);
      }
      else
      {
        if ((v36 != 0x7069726373627573 || v38 != 0xEC0000006E6F6974) && (sub_1C1427064() & 1) == 0)
        {
          if (v36 == 0x657373696D736964 && v38 == 0xE900000000000064)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            v95 = sub_1C1427064();
            swift_bridgeObjectRelease();
            if ((v95 & 1) == 0)
            {
              if (qword_1ED791DD8 != -1)
                swift_once();
              v134 = v0[15];
              v136 = v0[12];
              v135 = v0[13];
              v137 = v0[11];
              v138 = sub_1C1426854();
              __swift_project_value_buffer(v138, (uint64_t)qword_1ED7984F0);
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v136 + 16))(v135, v134, v137);
              v139 = sub_1C1426848();
              v140 = sub_1C1426C68();
              if (os_log_type_enabled(v139, v140))
              {
                v141 = v0[32];
                v142 = v0[27];
                v181 = v0[19];
                v176 = v0[17];
                v178 = v0[16];
                v185 = v0[15];
                v172 = v0[13];
                v173 = v0[12];
                v174 = v0[11];
                v143 = v24;
                v144 = swift_slowAlloc();
                v145 = swift_slowAlloc();
                v194 = v145;
                *(_DWORD *)v144 = 136446210;
                sub_1C1426020();
                sub_1C1329AD0(&qword_1EF6DB8B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D87A00], MEMORY[0x1E0D87A20]);
                v146 = sub_1C1427058();
                v148 = v147;
                v143(v141, v142);
                *(_QWORD *)(v144 + 4) = sub_1C132AD90(v146, v148, &v194);
                swift_bridgeObjectRelease();
                v149 = *(void (**)(uint64_t, uint64_t))(v173 + 8);
                v149(v172, v174);
                _os_log_impl(&dword_1C1324000, v139, v140, "ReplicatorParticipant received an updated remote record with an unknown zone: %{public}s", (uint8_t *)v144, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x1C3BAD3F4](v145, -1, -1);
                MEMORY[0x1C3BAD3F4](v144, -1, -1);

                (*(void (**)(uint64_t, uint64_t))(v176 + 8))(v181, v178);
                v149(v185, v174);
              }
              else
              {
                v163 = v0[19];
                v164 = v0[16];
                v165 = v0[17];
                v166 = v0[15];
                v168 = v0[12];
                v167 = v0[13];
                v169 = v0[11];

                v170 = *(void (**)(uint64_t, uint64_t))(v168 + 8);
                v170(v167, v169);
                (*(void (**)(uint64_t, uint64_t))(v165 + 8))(v163, v164);
                v170(v166, v169);
              }
              goto LABEL_47;
            }
          }
          v96 = v0[30];
          sub_1C1426020();
          v97 = sub_1C13A3710(v96);
          if (v98)
          {
            v99 = v97;
            v100 = v98;
            v101 = v0[23];
            v102 = v0[16];
            sub_1C1426140();
            if (v25(v101, 1, v102) == 1)
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              v150 = v0[23];
              sub_1C1398704(v99, v100);
              swift_bridgeObjectRelease();
              sub_1C1339004(v150, (uint64_t (*)(_QWORD))MEMORY[0x1E0D879F0]);
            }
          }
          else
          {
            v103 = v24;
            if (qword_1ED791DD8 != -1)
              swift_once();
            v104 = v0[29];
            v105 = v0[30];
            v106 = v0[27];
            v107 = v0[28];
            v108 = sub_1C1426854();
            __swift_project_value_buffer(v108, (uint64_t)qword_1ED7984F0);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v107 + 16))(v104, v105, v106);
            v109 = sub_1C1426848();
            v110 = sub_1C1426C80();
            v111 = os_log_type_enabled(v109, v110);
            v112 = v0[29];
            v113 = v0[27];
            if (v111)
            {
              v114 = swift_slowAlloc();
              v115 = swift_slowAlloc();
              v194 = v115;
              *(_DWORD *)v114 = 136446210;
              sub_1C1329AD0(&qword_1EF6DB8B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D87A00], MEMORY[0x1E0D87A20]);
              v116 = sub_1C1427058();
              *(_QWORD *)(v114 + 4) = sub_1C132AD90(v116, v117, &v194);
              swift_bridgeObjectRelease();
              v118 = v113;
              v24 = v103;
              v103(v112, v118);
              _os_log_impl(&dword_1C1324000, v109, v110, "Cannot dismiss activity as dismiss record ID is malformed: %{public}s", (uint8_t *)v114, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x1C3BAD3F4](v115, -1, -1);
              MEMORY[0x1C3BAD3F4](v114, -1, -1);
            }
            else
            {
              v24 = v103;
              v103(v0[29], v0[27]);
            }

          }
          v151 = v0[19];
          v152 = v0[16];
          v153 = v0[17];
          v154 = v0[15];
          v155 = v0[11];
          v156 = v0[12];
          v24(v0[30], v0[27]);
          (*(void (**)(uint64_t, uint64_t))(v153 + 8))(v151, v152);
          (*(void (**)(uint64_t, uint64_t))(v156 + 8))(v154, v155);
LABEL_47:
          v2 = v189;
          goto LABEL_5;
        }
        swift_bridgeObjectRelease();
        v41 = v0[32];
        v42 = v0[27];
        v43 = v0[19];
        v45 = v0[16];
        v44 = v0[17];
        v46 = v0[15];
        v47 = v0[12];
        v182 = v0[11];
        sub_1C1426020();
        sub_1C1397278(v41);
      }
      v24(v41, v42);
      (*(void (**)(NSObject *, uint64_t))(v44 + 8))(v43, v45);
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v182);
      goto LABEL_47;
    }
LABEL_91:
    swift_bridgeObjectRelease();
    v171 = (_QWORD *)swift_task_alloc();
    v0[46] = v171;
    *v171 = v0;
    v171[1] = sub_1C139CA08;
    return sub_1C1426BE4();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v0[44] + 8))(v0[45], v0[43]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return ((uint64_t (*)(void))v0[1])();
  }
}

void sub_1C139DE4C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void **v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  os_unfair_lock_s *v27;
  os_unfair_lock_s *v28;
  os_unfair_lock_s *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  os_log_t v50;
  int v51;
  void (*v52)(char *, uint64_t);
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v58 = a1;
  v5 = type metadata accessor for ReplicatorParticipant.RelationshipSchedule(0);
  MEMORY[0x1E0C80A78](v5);
  v60 = (uint64_t)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Activity();
  v8 = MEMORY[0x1E0C80A78](v7);
  v59 = (uint64_t)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v50 - v10);
  v12 = sub_1C1425AEC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1C1425A08();
  v17 = MEMORY[0x1E0C80A78](v16);
  v54 = (uint64_t)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v50 - v19;
  v21 = (void **)__swift_project_boxed_opaque_existential_1(a2, a2[3]);
  v56 = v7;
  sub_1C1338F24(a3 + *(int *)(v7 + 24), (uint64_t)v20, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
  v53 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v53(v15, v20, v12);
  v22 = sub_1C1425A80();
  v24 = v23;
  v25 = *(void (**)(char *, uint64_t))(v13 + 8);
  v55 = v12;
  v52 = v25;
  v25(v15, v12);
  v26 = (char *)*v21;
  v27 = *(os_unfair_lock_s **)&v26[OBJC_IVAR____TtC11SessionCore35ActivityPreferenceReplicationFilter_appSettingsLock];
  v28 = v27 + 4;
  v29 = v27 + 5;
  os_unfair_lock_lock(v27 + 5);
  v30 = v57;
  sub_1C1381E78(v28, v26, v22, v24, (unsigned __int8 *)&v62);
  if (v30)
  {
    os_unfair_lock_unlock(v29);
    __break(1u);
  }
  else
  {
    os_unfair_lock_unlock(v29);
    v31 = v62;
    swift_bridgeObjectRelease();
    if (qword_1ED791DD8 != -1)
      swift_once();
    v32 = sub_1C1426854();
    __swift_project_value_buffer(v32, (uint64_t)qword_1ED7984F0);
    sub_1C1338F24(a3, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    v33 = v59;
    sub_1C1338F24(a3, v59, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    v34 = v60;
    sub_1C1338F24(v58, v60, type metadata accessor for ReplicatorParticipant.RelationshipSchedule);
    v35 = sub_1C1426848();
    v36 = sub_1C1426C5C();
    v37 = v36;
    if (os_log_type_enabled(v35, v36))
    {
      v38 = swift_slowAlloc();
      v51 = v37;
      v39 = v38;
      v57 = swift_slowAlloc();
      v62 = v57;
      *(_DWORD *)v39 = 136446979;
      v50 = v35;
      v58 = 0;
      v40 = *v11;
      v41 = v11[1];
      swift_bridgeObjectRetain();
      v61 = sub_1C132AD90(v40, v41, &v62);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      sub_1C1339004((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      *(_WORD *)(v39 + 12) = 2081;
      v42 = v54;
      sub_1C1338F24(v33 + *(int *)(v56 + 24), v54, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
      v43 = v55;
      v53(v15, (char *)v42, v55);
      v44 = sub_1C1425A80();
      v46 = v45;
      v52(v15, v43);
      v61 = sub_1C132AD90(v44, v46, &v62);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      sub_1C1339004(v33, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      *(_WORD *)(v39 + 22) = 1026;
      LODWORD(v61) = v31;
      sub_1C1426DB8();
      *(_WORD *)(v39 + 28) = 2082;
      sub_1C14251EC();
      sub_1C1329AD0(&qword_1ED792880, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v47 = sub_1C1427058();
      v61 = sub_1C132AD90(v47, v48, &v62);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      sub_1C1339004(v34, type metadata accessor for ReplicatorParticipant.RelationshipSchedule);
      v35 = v50;
      _os_log_impl(&dword_1C1324000, v50, (os_log_type_t)v51, "%{public}s/%{private}s replicationAllowed %{BOOL,public}d for relationshipSchedule %{public}s", (uint8_t *)v39, 0x26u);
      v49 = v57;
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v49, -1, -1);
      MEMORY[0x1C3BAD3F4](v39, -1, -1);
    }
    else
    {
      sub_1C1339004((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      sub_1C1339004(v33, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      sub_1C1339004(v34, type metadata accessor for ReplicatorParticipant.RelationshipSchedule);
    }

  }
}

uint64_t sub_1C139E3C0@<X0>(char *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t *v32;
  char *v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v4 = sub_1C14251B0();
  v48 = *(_QWORD *)(v4 - 8);
  v49 = v4;
  MEMORY[0x1E0C80A78](v4);
  v45 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
  MEMORY[0x1E0C80A78](v6);
  v51 = (uint64_t)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_1C1425450();
  v41 = *(_QWORD *)(v50 - 8);
  v8 = v41;
  MEMORY[0x1E0C80A78](v50);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = v10;
  v11 = sub_1C1425A08();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = v13;
  v14 = sub_1C1425978();
  v15 = *(_QWORD *)(v14 - 8);
  v40 = v14;
  v16 = v15;
  v38 = v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1C139E6F4((uint64_t)a1);
  v46 = v20;
  v47 = v19;
  v44 = *(_QWORD *)a1;
  v37 = *((_QWORD *)a1 + 1);
  v21 = (int *)type metadata accessor for Activity();
  v22 = &a1[v21[10]];
  v23 = *((_QWORD *)v22 + 1);
  v42 = *(_QWORD *)v22;
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, &a1[v21[5]], v14);
  v24 = *(_QWORD *)&a1[v21[7]];
  sub_1C1338F24((uint64_t)&a1[v21[6]], (uint64_t)v13, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, &a1[v21[11]], v50);
  v25 = sub_1C142557C();
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
  v26(v51, 1, 1, v25);
  v27 = v23;
  swift_bridgeObjectRetain();
  v28 = v24;
  swift_bridgeObjectRetain();
  v29 = v37;
  swift_bridgeObjectRetain();
  v30 = v45;
  sub_1C142518C();
  v31 = (uint64_t)&a2[v21[12]];
  v26(v31, 1, 1, v25);
  v32 = (uint64_t *)&a2[v21[13]];
  *v32 = 0;
  v32[1] = 0;
  *(_QWORD *)a2 = v44;
  *((_QWORD *)a2 + 1) = v29;
  v33 = &a2[v21[10]];
  *(_QWORD *)v33 = v42;
  *((_QWORD *)v33 + 1) = v27;
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(&a2[v21[5]], v18, v40);
  *(_QWORD *)&a2[v21[7]] = v28;
  sub_1C1339140((uint64_t)v39, (uint64_t)&a2[v21[6]], (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(&a2[v21[11]], v43, v50);
  (*(void (**)(char *, char *, uint64_t))(v48 + 32))(&a2[v21[8]], v30, v49);
  a2[v21[9]] = 0;
  sub_1C134D870(v51, v31);
  result = swift_bridgeObjectRelease();
  v35 = v46;
  *v32 = v47;
  v32[1] = v35;
  return result;
}

uint64_t sub_1C139E6F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  _BYTE v20[12];

  v2 = type metadata accessor for Activity();
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1C1425AEC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1C1425A08();
  v8 = MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v20[-v9];
  sub_1C1338F24(a1 + *(int *)(v2 + 24), (uint64_t)&v20[-v9], v11);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v4 + 32))(v6, v10, v3);
  v12 = sub_1C1425A80();
  v14 = v13;
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  v15 = objc_allocWithZone(MEMORY[0x1E0CA5870]);
  v16 = sub_1C13278E4(v12, v14, 1);
  v17 = objc_msgSend(v16, sel_localizedName);
  v18 = sub_1C1426A88();

  return v18;
}

uint64_t sub_1C139EB04@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;

  v10 = type metadata accessor for ActivityManagerEvent(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a3 + 16))
  {
LABEL_6:
    sub_1C1338F24((uint64_t)a4, (uint64_t)v12, type metadata accessor for ActivityManagerEvent);
    if ((a2 & 1) != 0)
    {
      v18 = v12[*(int *)(v10 + 20)];
      sub_1C1339004((uint64_t)v12, type metadata accessor for ActivityManagerEvent);
      if (!v18)
        goto LABEL_8;
    }
    else
    {
      sub_1C1339004((uint64_t)v12, type metadata accessor for ActivityManagerEvent);
    }
LABEL_10:
    v22 = sub_1C14251EC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(a5, a1, v22);
    v20 = a5 + *(int *)(type metadata accessor for ReplicatorParticipant.RelationshipSchedule(0) + 20);
    v21 = (unsigned int *)MEMORY[0x1E0D87AE0];
    goto LABEL_11;
  }
  v14 = *a4;
  v13 = a4[1];
  swift_bridgeObjectRetain();
  v15 = sub_1C13277A0(v14, v13);
  if ((v16 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  v17 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v15);
  swift_bridgeObjectRelease();
  if (!sub_1C13A2140((uint64_t)a4, v17))
    goto LABEL_10;
LABEL_8:
  v19 = sub_1C14251EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a5, a1, v19);
  v20 = a5 + *(int *)(type metadata accessor for ReplicatorParticipant.RelationshipSchedule(0) + 20);
  v21 = (unsigned int *)MEMORY[0x1E0D87AE8];
LABEL_11:
  v23 = *v21;
  v24 = sub_1C14261AC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v20, v23, v24);
}

unint64_t sub_1C139ECB8@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  unint64_t v58;
  int64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t inited;
  uint64_t v85;
  uint64_t v86;
  unint64_t result;
  uint64_t v88;
  uint64_t v89;
  unint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t *v94;
  uint64_t *v95;
  uint64_t *v96;
  uint64_t *v97;
  uint64_t v98;
  int64_t i;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106[3];

  v3 = v2;
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
  v6 = MEMORY[0x1E0C80A78](v98);
  v93 = (uint64_t *)((char *)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = MEMORY[0x1E0C80A78](v6);
  v97 = (uint64_t *)((char *)&v88 - v9);
  v10 = MEMORY[0x1E0C80A78](v8);
  v96 = (uint64_t *)((char *)&v88 - v11);
  v12 = MEMORY[0x1E0C80A78](v10);
  v95 = (uint64_t *)((char *)&v88 - v13);
  MEMORY[0x1E0C80A78](v12);
  v94 = (uint64_t *)((char *)&v88 - v14);
  swift_beginAccess();
  v15 = *(_QWORD *)(a1 + 192);
  v16 = *(_QWORD *)(v15 + 16);
  v17 = MEMORY[0x1E0DEE9D8];
  v90 = a2;
  if (v16)
  {
    v88 = v2;
    v89 = a1;
    v106[0] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1C1336948(0, v16, 0);
    v18 = sub_1C135833C(v15);
    v20 = v19;
    v22 = v21 & 1;
    v91 = v15 + 64;
    v92 = v15;
    v101 = v106[0];
    for (i = v16 - 1; ; --i)
    {
      v23 = v98;
      v24 = v94;
      v25 = (uint64_t)v94 + *(int *)(v98 + 48);
      v102 = v18;
      v100 = v20;
      v26 = sub_1C13A1514(v25, v18, v20, v22 & 1, v15);
      *v24 = v26;
      v24[1] = v27;
      v28 = (uint64_t)v95;
      *v95 = v26;
      *(_QWORD *)(v28 + 8) = v27;
      sub_1C1338F24(v25, v28 + *(int *)(v23 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      v29 = v96;
      sub_1C132A724(v28, (uint64_t)v96, &qword_1ED7939D8);
      swift_bridgeObjectRetain();
      sub_1C132C860((uint64_t)v24, &qword_1ED7939D8);
      v30 = *(int *)(v23 + 48);
      v31 = v97;
      v32 = (uint64_t)v97 + v30;
      v33 = (uint64_t)v29 + v30;
      v35 = *v29;
      v34 = v29[1];
      *v97 = *v29;
      v31[1] = v34;
      sub_1C1338F24((uint64_t)v29 + v30, (uint64_t)v31 + v30, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      v36 = *(int *)(v23 + 48);
      v37 = v93;
      v38 = (uint64_t)v93 + v36;
      v103 = v35;
      *v93 = v35;
      v37[1] = v34;
      sub_1C1338F24(v33, (uint64_t)v37 + v36, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      swift_bridgeObjectRetain();
      v39 = sub_1C1406DD8();
      v104 = v40;
      sub_1C1339004(v38, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      sub_1C1339004(v32, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      sub_1C132C860((uint64_t)v29, &qword_1ED7939D8);
      v17 = v101;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C1336948(0, *(_QWORD *)(v17 + 16) + 1, 1);
        v17 = v106[0];
      }
      v42 = *(_QWORD *)(v17 + 16);
      v41 = *(_QWORD *)(v17 + 24);
      v43 = v102;
      if (v42 >= v41 >> 1)
      {
        sub_1C1336948(v41 > 1, v42 + 1, 1);
        v17 = v106[0];
      }
      *(_QWORD *)(v17 + 16) = v42 + 1;
      v44 = (_QWORD *)(v17 + 32 * v42);
      v44[4] = v103;
      v44[5] = v34;
      v45 = v104;
      v44[6] = v39;
      v44[7] = v45;
      v15 = v92;
      if (v43 < 0 || v43 >= -(-1 << *(_BYTE *)(v92 + 32)))
        break;
      if (((*(_QWORD *)(v91 + (((unint64_t)v43 >> 3) & 0xFFFFFFFFFFFFF8)) >> v43) & 1) == 0)
        goto LABEL_43;
      if (*(_DWORD *)(v92 + 36) != (_DWORD)v100)
        goto LABEL_44;
      v46 = sub_1C1426E0C();
      if (!i)
      {
        swift_bridgeObjectRelease();
        v3 = v88;
        a1 = v89;
        goto LABEL_14;
      }
      v18 = v46;
      v101 = v17;
      v22 = 0;
      v20 = *(unsigned int *)(v15 + 36);
    }
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
LABEL_14:
  if (*(_QWORD *)(v17 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797AD0);
    v47 = sub_1C1426FBC();
  }
  else
  {
    v47 = MEMORY[0x1E0DEE9E0];
  }
  v106[0] = v47;
  v48 = (_QWORD *)swift_bridgeObjectRetain();
  sub_1C1336588(v48, 1, v106);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    v92 = v106[0];
    swift_beginAccess();
    v49 = swift_bridgeObjectRetain();
    v91 = sub_1C138C584(v49);
    v93 = 0;
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v50 = *(_QWORD *)(a1 + 184);
    v51 = *(_QWORD *)(v50 + 16);
    v52 = MEMORY[0x1E0DEE9D8];
    if (!v51)
    {
LABEL_41:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793A60);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C14298C0;
      *(_QWORD *)(inited + 32) = 0xD000000000000010;
      *(_QWORD *)(inited + 40) = 0x80000001C142F180;
      v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7979D8);
      *(_QWORD *)(inited + 48) = v92;
      *(_QWORD *)(inited + 72) = v85;
      strcpy((char *)(inited + 80), "subscriptions");
      *(_WORD *)(inited + 94) = -4864;
      v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797A68);
      *(_QWORD *)(inited + 96) = v91;
      *(_QWORD *)(inited + 120) = v86;
      *(_QWORD *)(inited + 128) = 0xD000000000000010;
      *(_QWORD *)(inited + 168) = v86;
      *(_QWORD *)(inited + 136) = 0x80000001C142F1A0;
      *(_QWORD *)(inited + 144) = v52;
      result = sub_1C133204C(inited);
      *v90 = result;
      return result;
    }
    v105 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1C1336990(0, v51, 0);
    v54 = sub_1C135833C(v50);
    v55 = 0;
    v56 = v50 + 64;
    v57 = *(_BYTE *)(v50 + 32);
    v89 = v50 + 80;
    v101 = v50 + 64;
    v102 = v50;
    i = v51;
    v100 = v53;
    while ((v54 & 0x8000000000000000) == 0 && v54 < 1 << v57)
    {
      v60 = (unint64_t)v54 >> 6;
      if ((*(_QWORD *)(v56 + 8 * ((unint64_t)v54 >> 6)) & (1 << v54)) == 0)
        goto LABEL_46;
      if (*(_DWORD *)(v50 + 36) != (_DWORD)v53)
        goto LABEL_47;
      v103 = v55;
      v104 = 1 << v54;
      v61 = v98;
      v62 = v94;
      v63 = (uint64_t)v94 + *(int *)(v98 + 48);
      v64 = *(_QWORD *)(v50 + 56);
      v65 = (uint64_t *)(*(_QWORD *)(v50 + 48) + 16 * v54);
      v67 = *v65;
      v66 = v65[1];
      v68 = type metadata accessor for Activity();
      sub_1C1338F24(v64 + *(_QWORD *)(*(_QWORD *)(v68 - 8) + 72) * v54, v63, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      *v62 = v67;
      v62[1] = v66;
      v69 = (uint64_t)v95;
      *v95 = v67;
      *(_QWORD *)(v69 + 8) = v66;
      sub_1C1338F24(v63, v69 + *(int *)(v61 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      v70 = v96;
      sub_1C132A724(v69, (uint64_t)v96, &qword_1ED7939D8);
      swift_bridgeObjectRetain_n();
      sub_1C132C860((uint64_t)v62, &qword_1ED7939D8);
      v71 = *(int *)(v61 + 48);
      v72 = v97;
      v73 = (uint64_t)v97 + v71;
      v75 = *v70;
      v74 = v70[1];
      *v97 = *v70;
      v72[1] = v74;
      sub_1C1338F24((uint64_t)v70 + v71, (uint64_t)v72 + v71, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      swift_bridgeObjectRetain();
      sub_1C1339004(v73, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      sub_1C132C860((uint64_t)v70, &qword_1ED7939D8);
      v52 = v105;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C1336990(0, *(_QWORD *)(v52 + 16) + 1, 1);
        v52 = v105;
      }
      v77 = *(_QWORD *)(v52 + 16);
      v76 = *(_QWORD *)(v52 + 24);
      if (v77 >= v76 >> 1)
      {
        sub_1C1336990(v76 > 1, v77 + 1, 1);
        v52 = v105;
      }
      *(_QWORD *)(v52 + 16) = v77 + 1;
      v78 = v52 + 16 * v77;
      *(_QWORD *)(v78 + 32) = v75;
      *(_QWORD *)(v78 + 40) = v74;
      v50 = v102;
      v57 = *(_BYTE *)(v102 + 32);
      v58 = 1 << v57;
      if (v54 >= 1 << v57)
        goto LABEL_48;
      v56 = v101;
      v79 = *(_QWORD *)(v101 + 8 * v60);
      if ((v79 & v104) == 0)
        goto LABEL_49;
      LODWORD(v53) = v100;
      if (*(_DWORD *)(v102 + 36) != (_DWORD)v100)
        goto LABEL_50;
      v80 = v79 & (-2 << (v54 & 0x3F));
      if (v80)
      {
        v58 = __clz(__rbit64(v80)) | v54 & 0xFFFFFFFFFFFFFFC0;
        v59 = i;
      }
      else
      {
        v81 = v60 + 1;
        v82 = (v58 + 63) >> 6;
        v59 = i;
        if (v60 + 1 < v82)
        {
          v83 = *(_QWORD *)(v101 + 8 * v81);
          if (v83)
          {
LABEL_39:
            v58 = __clz(__rbit64(v83)) + (v81 << 6);
          }
          else
          {
            while (v82 - 2 != v60)
            {
              v83 = *(_QWORD *)(v89 + 8 * v60++);
              if (v83)
              {
                v81 = v60 + 1;
                goto LABEL_39;
              }
            }
          }
        }
      }
      v55 = v103 + 1;
      v54 = v58;
      if (v103 + 1 == v59)
      {
        swift_bridgeObjectRelease();
        goto LABEL_41;
      }
    }
    goto LABEL_45;
  }
LABEL_51:
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1C139F4C8()
{
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7979F0);
  sub_1C1426CEC();
  return v1;
}

uint64_t sub_1C139F524()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + 176) = *(_QWORD *)(v0 + 32);
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1C139F548()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C139F568()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  int *v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(type metadata accessor for ActivityManagerEvent(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  v3 = (int *)type metadata accessor for Activity();
  v4 = v0 + v2 + v3[5];
  v5 = sub_1C1425978();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v0 + v2 + v3[6];
  sub_1C1425A08();
  v7 = sub_1C1425AEC();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  v8 = v0 + v2 + v3[8];
  v9 = sub_1C14251B0();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  v10 = v0 + v2 + v3[11];
  v11 = sub_1C1425450();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = v0 + v2 + v3[12];
  v13 = sub_1C142557C();
  v14 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    (*(void (**)(unint64_t, uint64_t))(v14 + 8))(v12, v13);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_1C139F728()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for ActivityManagerEvent(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1C138E4A4(v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1C139F780()
{
  return swift_deallocObject();
}

uint64_t type metadata accessor for ReplicatorParticipant.RelationshipSchedule(uint64_t a1)
{
  return sub_1C138479C(a1, (uint64_t *)&unk_1ED791DA8);
}

uint64_t sub_1C139F7A4(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_1C139F7C8(uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, unint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  unint64_t v7;
  size_t v8;
  uint64_t v9;
  void *v10;
  _QWORD v12[2];

  v4 = v2;
  v5 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x1E0C80C00];
  v6 = *(_BYTE *)(isStackAllocationSafe + 32);
  v7 = (unint64_t)((1 << v6) + 63) >> 6;
  v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    v9 = a2((char *)v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, v5);
    if (v2)
      swift_willThrow();
    else
      return v9;
  }
  else
  {
    v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    v4 = a2((char *)v10, v7, v5);
    MEMORY[0x1C3BAD3F4](v10, -1, -1);
  }
  return v4;
}

uint64_t sub_1C139F924(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  unint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  int64_t v45;

  v33 = a2;
  v34 = a1;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
  v4 = MEMORY[0x1E0C80A78](v43);
  v42 = (uint64_t *)((char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v4);
  v38 = (char *)&v32 - v6;
  v7 = type metadata accessor for Activity();
  v40 = *(_QWORD *)(v7 - 8);
  v41 = v7;
  result = MEMORY[0x1E0C80A78](v7);
  v39 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 0;
  v44 = (_QWORD *)a3;
  v11 = *(_QWORD *)(a3 + 64);
  v35 = 0;
  v36 = a3 + 64;
  v12 = 1 << *(_BYTE *)(a3 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v37 = (unint64_t)(v12 + 63) >> 6;
  v16 = v38;
  v15 = (uint64_t)v39;
  while (1)
  {
    if (v14)
    {
      v17 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v45 = v10;
      v18 = v17 | (v10 << 6);
      goto LABEL_5;
    }
    v27 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v27 >= v37)
      return sub_1C1326C50(v34, v33, v35, v44);
    v28 = *(_QWORD *)(v36 + 8 * v27);
    v29 = v10 + 1;
    if (!v28)
    {
      v29 = v10 + 2;
      if (v10 + 2 >= v37)
        return sub_1C1326C50(v34, v33, v35, v44);
      v28 = *(_QWORD *)(v36 + 8 * v29);
      if (!v28)
      {
        v29 = v10 + 3;
        if (v10 + 3 >= v37)
          return sub_1C1326C50(v34, v33, v35, v44);
        v28 = *(_QWORD *)(v36 + 8 * v29);
        if (!v28)
          break;
      }
    }
LABEL_20:
    v14 = (v28 - 1) & v28;
    v45 = v29;
    v18 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_5:
    v19 = (uint64_t *)(v44[6] + 16 * v18);
    v21 = *v19;
    v20 = v19[1];
    sub_1C1338F24(v44[7] + *(_QWORD *)(v40 + 72) * v18, v15, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    v22 = v43;
    v23 = (uint64_t)v16 + *(int *)(v43 + 48);
    *v16 = v21;
    v16[1] = v20;
    sub_1C1338F24(v15, v23, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    v24 = *(int *)(v22 + 48);
    v25 = v42;
    v26 = (uint64_t)v42 + v24;
    *v42 = v21;
    v25[1] = v20;
    sub_1C1338F24(v23, (uint64_t)v25 + v24, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    sub_1C1339004(v26, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    LOBYTE(v26) = sub_1C1425A50();
    swift_bridgeObjectRelease();
    sub_1C132C860((uint64_t)v16, &qword_1ED7939D8);
    sub_1C1339004(v15, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    result = swift_bridgeObjectRelease();
    v10 = v45;
    if ((v26 & 1) != 0)
    {
      *(unint64_t *)((char *)v34 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      if (__OFADD__(v35++, 1))
      {
        __break(1u);
        return sub_1C1326C50(v34, v33, v35, v44);
      }
    }
  }
  v30 = v10 + 4;
  if (v10 + 4 >= v37)
    return sub_1C1326C50(v34, v33, v35, v44);
  v28 = *(_QWORD *)(v36 + 8 * v30);
  if (v28)
  {
    v29 = v10 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v29 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v29 >= v37)
      return sub_1C1326C50(v34, v33, v35, v44);
    v28 = *(_QWORD *)(v36 + 8 * v29);
    ++v30;
    if (v28)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1C139FC68(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  unint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  int64_t v45;

  v33 = a2;
  v34 = a1;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
  v4 = MEMORY[0x1E0C80A78](v43);
  v42 = (uint64_t *)((char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v4);
  v38 = (char *)&v32 - v6;
  v7 = type metadata accessor for Activity();
  v40 = *(_QWORD *)(v7 - 8);
  v41 = v7;
  result = MEMORY[0x1E0C80A78](v7);
  v39 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 0;
  v44 = (_QWORD *)a3;
  v11 = *(_QWORD *)(a3 + 64);
  v35 = 0;
  v36 = a3 + 64;
  v12 = 1 << *(_BYTE *)(a3 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v37 = (unint64_t)(v12 + 63) >> 6;
  v16 = v38;
  v15 = (uint64_t)v39;
  while (1)
  {
    if (v14)
    {
      v17 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v45 = v10;
      v18 = v17 | (v10 << 6);
      goto LABEL_5;
    }
    v27 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v27 >= v37)
      return sub_1C1326C50(v34, v33, v35, v44);
    v28 = *(_QWORD *)(v36 + 8 * v27);
    v29 = v10 + 1;
    if (!v28)
    {
      v29 = v10 + 2;
      if (v10 + 2 >= v37)
        return sub_1C1326C50(v34, v33, v35, v44);
      v28 = *(_QWORD *)(v36 + 8 * v29);
      if (!v28)
      {
        v29 = v10 + 3;
        if (v10 + 3 >= v37)
          return sub_1C1326C50(v34, v33, v35, v44);
        v28 = *(_QWORD *)(v36 + 8 * v29);
        if (!v28)
          break;
      }
    }
LABEL_20:
    v14 = (v28 - 1) & v28;
    v45 = v29;
    v18 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_5:
    v19 = (uint64_t *)(v44[6] + 16 * v18);
    v21 = *v19;
    v20 = v19[1];
    sub_1C1338F24(v44[7] + *(_QWORD *)(v40 + 72) * v18, v15, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    v22 = v43;
    v23 = (uint64_t)v16 + *(int *)(v43 + 48);
    *v16 = v21;
    v16[1] = v20;
    sub_1C1338F24(v15, v23, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    v24 = *(int *)(v22 + 48);
    v25 = v42;
    v26 = (uint64_t)v42 + v24;
    *v42 = v21;
    v25[1] = v20;
    sub_1C1338F24(v23, (uint64_t)v25 + v24, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    sub_1C1339004(v26, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    LOBYTE(v26) = sub_1C1425A50();
    swift_bridgeObjectRelease();
    sub_1C132C860((uint64_t)v16, &qword_1ED7939D8);
    sub_1C1339004(v15, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    result = swift_bridgeObjectRelease();
    v10 = v45;
    if ((v26 & 1) == 0)
    {
      *(unint64_t *)((char *)v34 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      if (__OFADD__(v35++, 1))
      {
        __break(1u);
        return sub_1C1326C50(v34, v33, v35, v44);
      }
    }
  }
  v30 = v10 + 4;
  if (v10 + 4 >= v37)
    return sub_1C1326C50(v34, v33, v35, v44);
  v28 = *(_QWORD *)(v36 + 8 * v30);
  if (v28)
  {
    v29 = v10 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v29 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v29 >= v37)
      return sub_1C1326C50(v34, v33, v35, v44);
    v28 = *(_QWORD *)(v36 + 8 * v29);
    ++v30;
    if (v28)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1C139FFAC(unint64_t *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  BOOL v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  _QWORD *v37;
  void (*v38)(char *, unint64_t, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  void (*v62)(char *, uint64_t, uint64_t);
  uint64_t v63;
  char *v64;
  void (*v65)(char *, uint64_t);
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char v70;
  uint64_t v71;
  uint64_t (*v72)(void);
  void (*v73)(char *, uint64_t);
  uint64_t v74[2];
  unint64_t *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  _QWORD *v80;
  int64_t v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  _QWORD *v87;
  void (*v88)(char *, uint64_t);
  uint64_t v89;
  int64_t v90;
  void (*v91)(char *, uint64_t, uint64_t);
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  char *v98;

  v74[0] = a2;
  v75 = a1;
  v4 = sub_1C1426134();
  v5 = MEMORY[0x1E0C80A78](v4);
  v79 = (char *)v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v78 = (char *)v74 - v7;
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7933A0);
  v8 = MEMORY[0x1E0C80A78](v97);
  v77 = (char *)v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v86 = (char *)v74 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v85 = (char *)v74 - v13;
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v74 - v14;
  v16 = sub_1C14251EC();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1C142614C();
  v96 = *(_QWORD **)(v20 - 8);
  result = MEMORY[0x1E0C80A78](v20);
  v93 = (char *)v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = 0;
  v23 = 0;
  v87 = a3;
  v26 = a3[8];
  v25 = a3 + 8;
  v24 = v26;
  v27 = 1 << *((_BYTE *)v25 - 32);
  v28 = -1;
  if (v27 < 64)
    v28 = ~(-1 << v27);
  v29 = v28 & v24;
  v80 = v25;
  v81 = (unint64_t)(v27 + 63) >> 6;
  v98 = v15;
  v94 = v17;
  v95 = v16;
  v83 = v19;
  v84 = result;
  while (1)
  {
    if (v29)
    {
      v30 = v19;
      v89 = (v29 - 1) & v29;
      v90 = v23;
      v31 = __clz(__rbit64(v29)) | (v23 << 6);
      v32 = v97;
      goto LABEL_18;
    }
    v33 = __OFADD__(v23, 1);
    v34 = v23 + 1;
    if (v33)
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v34 >= v81)
      return sub_1C136E864(v75, v74[0], v76, v87);
    v35 = v80[v34];
    if (!v35)
      break;
LABEL_17:
    v30 = v19;
    v32 = v97;
    v89 = (v35 - 1) & v35;
    v90 = v34;
    v31 = __clz(__rbit64(v35)) + (v34 << 6);
LABEL_18:
    v37 = v87;
    v38 = (void (*)(char *, unint64_t, uint64_t))v96[2];
    v39 = v93;
    v38(v93, v87[6] + v96[9] * v31, v20);
    v40 = v37[7];
    v41 = *(_QWORD *)(v17 + 72);
    v82 = v31;
    v42 = v40 + v41 * v31;
    v43 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
    v44 = v95;
    v43(v30, v42, v95);
    v45 = *(int *)(v32 + 48);
    v46 = v32;
    v47 = (uint64_t)v98;
    v48 = &v98[v45];
    v38(v98, (unint64_t)v39, v20);
    v43(v48, (uint64_t)v30, v44);
    v49 = *(int *)(v46 + 48);
    v50 = v85;
    v51 = v47;
    v52 = &v85[v49];
    v91 = (void (*)(char *, uint64_t, uint64_t))v38;
    v38(v85, v51, v20);
    v92 = v48;
    v43(v52, (uint64_t)v48, v44);
    v53 = sub_1C142611C();
    v55 = v54;
    v56 = (void (*)(char *, uint64_t))v96[1];
    v56(v50, v20);
    if (v53 == 0x7974697669746361 && v55 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
      v57 = 1;
    }
    else
    {
      v57 = sub_1C1427064();
      swift_bridgeObjectRelease();
    }
    v58 = v95;
    v88 = *(void (**)(char *, uint64_t))(v94 + 8);
    v88(v52, v95);
    v59 = v97;
    v60 = (uint64_t)v86;
    v61 = &v86[*(int *)(v97 + 48)];
    v20 = v84;
    v62 = v91;
    v91(v86, (uint64_t)v98, v84);
    v43(v61, (uint64_t)v92, v58);
    if ((v57 & 1) != 0)
    {
      v63 = *(int *)(v59 + 48);
      v64 = v77;
      v65 = v56;
      v66 = &v77[v63];
      v62(v77, v60, v20);
      v43(v66, (uint64_t)v61, v58);
      v67 = (uint64_t)v78;
      sub_1C1426140();
      v65(v64, v20);
      v68 = v94;
      v69 = v79;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v94 + 56))(v79, 1, 1, v58);
      v70 = MEMORY[0x1C3BABE04](v67, v69);
      v71 = (uint64_t)v69;
      v72 = MEMORY[0x1E0D879F0];
      sub_1C1339004(v71, (uint64_t (*)(_QWORD))MEMORY[0x1E0D879F0]);
      sub_1C1339004(v67, (uint64_t (*)(_QWORD))v72);
      sub_1C132C860(v60, &qword_1ED7933A0);
      sub_1C132C860((uint64_t)v98, &qword_1ED7933A0);
      v73 = v88;
      v88(v66, v58);
      v19 = v83;
      v73(v83, v58);
      result = ((uint64_t (*)(char *, uint64_t))v65)(v93, v20);
      v17 = v68;
      v29 = v89;
      v23 = v90;
      if ((v70 & 1) != 0)
      {
        *(unint64_t *)((char *)v75 + ((v82 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v82;
        v33 = __OFADD__(v76++, 1);
        if (v33)
          goto LABEL_34;
      }
    }
    else
    {
      sub_1C132C860(v60, &qword_1ED7933A0);
      sub_1C132C860((uint64_t)v98, &qword_1ED7933A0);
      v19 = v83;
      v88(v83, v58);
      result = ((uint64_t (*)(char *, uint64_t))v56)(v93, v20);
      v17 = v94;
      v29 = v89;
      v23 = v90;
    }
  }
  v36 = v34 + 1;
  if (v34 + 1 >= v81)
    return sub_1C136E864(v75, v74[0], v76, v87);
  v35 = v80[v36];
  if (v35)
    goto LABEL_16;
  v36 = v34 + 2;
  if (v34 + 2 >= v81)
    return sub_1C136E864(v75, v74[0], v76, v87);
  v35 = v80[v36];
  if (v35)
    goto LABEL_16;
  v36 = v34 + 3;
  if (v34 + 3 >= v81)
    return sub_1C136E864(v75, v74[0], v76, v87);
  v35 = v80[v36];
  if (v35)
  {
LABEL_16:
    v34 = v36;
    goto LABEL_17;
  }
  while (1)
  {
    v34 = v36 + 1;
    if (__OFADD__(v36, 1))
      break;
    if (v34 >= v81)
      return sub_1C136E864(v75, v74[0], v76, v87);
    v35 = v80[v34];
    ++v36;
    if (v35)
      goto LABEL_17;
  }
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1C13A05F0(unint64_t *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  BOOL v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  _QWORD *v37;
  void (*v38)(char *, unint64_t, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  void (*v62)(char *, uint64_t, uint64_t);
  uint64_t v63;
  char *v64;
  void (*v65)(char *, uint64_t);
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char v70;
  uint64_t v71;
  uint64_t (*v72)(void);
  void (*v73)(char *, uint64_t);
  uint64_t v74[2];
  unint64_t *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  _QWORD *v80;
  int64_t v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  _QWORD *v87;
  void (*v88)(char *, uint64_t);
  uint64_t v89;
  int64_t v90;
  void (*v91)(char *, uint64_t, uint64_t);
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  uint64_t v97;
  char *v98;

  v74[0] = a2;
  v75 = a1;
  v4 = sub_1C1426134();
  v5 = MEMORY[0x1E0C80A78](v4);
  v79 = (char *)v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v78 = (char *)v74 - v7;
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7933A0);
  v8 = MEMORY[0x1E0C80A78](v97);
  v77 = (char *)v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v86 = (char *)v74 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v85 = (char *)v74 - v13;
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v74 - v14;
  v16 = sub_1C14251EC();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1C142614C();
  v96 = *(_QWORD **)(v20 - 8);
  result = MEMORY[0x1E0C80A78](v20);
  v93 = (char *)v74 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76 = 0;
  v23 = 0;
  v87 = a3;
  v26 = a3[8];
  v25 = a3 + 8;
  v24 = v26;
  v27 = 1 << *((_BYTE *)v25 - 32);
  v28 = -1;
  if (v27 < 64)
    v28 = ~(-1 << v27);
  v29 = v28 & v24;
  v80 = v25;
  v81 = (unint64_t)(v27 + 63) >> 6;
  v98 = v15;
  v94 = v17;
  v95 = v16;
  v83 = v19;
  v84 = result;
  while (1)
  {
    if (v29)
    {
      v30 = v19;
      v89 = (v29 - 1) & v29;
      v90 = v23;
      v31 = __clz(__rbit64(v29)) | (v23 << 6);
      v32 = v97;
      goto LABEL_18;
    }
    v33 = __OFADD__(v23, 1);
    v34 = v23 + 1;
    if (v33)
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v34 >= v81)
      return sub_1C136E864(v75, v74[0], v76, v87);
    v35 = v80[v34];
    if (!v35)
      break;
LABEL_17:
    v30 = v19;
    v32 = v97;
    v89 = (v35 - 1) & v35;
    v90 = v34;
    v31 = __clz(__rbit64(v35)) + (v34 << 6);
LABEL_18:
    v37 = v87;
    v38 = (void (*)(char *, unint64_t, uint64_t))v96[2];
    v39 = v93;
    v38(v93, v87[6] + v96[9] * v31, v20);
    v40 = v37[7];
    v41 = *(_QWORD *)(v17 + 72);
    v82 = v31;
    v42 = v40 + v41 * v31;
    v43 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
    v44 = v95;
    v43(v30, v42, v95);
    v45 = *(int *)(v32 + 48);
    v46 = v32;
    v47 = (uint64_t)v98;
    v48 = &v98[v45];
    v38(v98, (unint64_t)v39, v20);
    v43(v48, (uint64_t)v30, v44);
    v49 = *(int *)(v46 + 48);
    v50 = v85;
    v51 = v47;
    v52 = &v85[v49];
    v91 = (void (*)(char *, uint64_t, uint64_t))v38;
    v38(v85, v51, v20);
    v92 = v48;
    v43(v52, (uint64_t)v48, v44);
    v53 = sub_1C142611C();
    v55 = v54;
    v56 = (void (*)(char *, uint64_t))v96[1];
    v56(v50, v20);
    if (v53 == 0x7974697669746361 && v55 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
      v57 = 1;
    }
    else
    {
      v57 = sub_1C1427064();
      swift_bridgeObjectRelease();
    }
    v58 = v95;
    v88 = *(void (**)(char *, uint64_t))(v94 + 8);
    v88(v52, v95);
    v59 = v97;
    v60 = (uint64_t)v86;
    v61 = &v86[*(int *)(v97 + 48)];
    v20 = v84;
    v62 = v91;
    v91(v86, (uint64_t)v98, v84);
    v43(v61, (uint64_t)v92, v58);
    if ((v57 & 1) != 0)
    {
      v63 = *(int *)(v59 + 48);
      v64 = v77;
      v65 = v56;
      v66 = &v77[v63];
      v62(v77, v60, v20);
      v43(v66, (uint64_t)v61, v58);
      v67 = (uint64_t)v78;
      sub_1C1426140();
      v65(v64, v20);
      v68 = v94;
      v69 = v79;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v94 + 56))(v79, 1, 1, v58);
      v70 = MEMORY[0x1C3BABE04](v67, v69);
      v71 = (uint64_t)v69;
      v72 = MEMORY[0x1E0D879F0];
      sub_1C1339004(v71, (uint64_t (*)(_QWORD))MEMORY[0x1E0D879F0]);
      sub_1C1339004(v67, (uint64_t (*)(_QWORD))v72);
      sub_1C132C860(v60, &qword_1ED7933A0);
      sub_1C132C860((uint64_t)v98, &qword_1ED7933A0);
      v73 = v88;
      v88(v66, v58);
      v19 = v83;
      v73(v83, v58);
      result = ((uint64_t (*)(char *, uint64_t))v65)(v93, v20);
      v17 = v68;
      v29 = v89;
      v23 = v90;
      if ((v70 & 1) == 0)
      {
        *(unint64_t *)((char *)v75 + ((v82 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v82;
        v33 = __OFADD__(v76++, 1);
        if (v33)
          goto LABEL_34;
      }
    }
    else
    {
      sub_1C132C860(v60, &qword_1ED7933A0);
      sub_1C132C860((uint64_t)v98, &qword_1ED7933A0);
      v19 = v83;
      v88(v83, v58);
      result = ((uint64_t (*)(char *, uint64_t))v56)(v93, v20);
      v17 = v94;
      v29 = v89;
      v23 = v90;
    }
  }
  v36 = v34 + 1;
  if (v34 + 1 >= v81)
    return sub_1C136E864(v75, v74[0], v76, v87);
  v35 = v80[v36];
  if (v35)
    goto LABEL_16;
  v36 = v34 + 2;
  if (v34 + 2 >= v81)
    return sub_1C136E864(v75, v74[0], v76, v87);
  v35 = v80[v36];
  if (v35)
    goto LABEL_16;
  v36 = v34 + 3;
  if (v34 + 3 >= v81)
    return sub_1C136E864(v75, v74[0], v76, v87);
  v35 = v80[v36];
  if (v35)
  {
LABEL_16:
    v34 = v36;
    goto LABEL_17;
  }
  while (1)
  {
    v34 = v36 + 1;
    if (__OFADD__(v36, 1))
      break;
    if (v34 >= v81)
      return sub_1C136E864(v75, v74[0], v76, v87);
    v35 = v80[v34];
    ++v36;
    if (v35)
      goto LABEL_17;
  }
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1C13A0C34(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  size_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v10[2];

  v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E0C80C00];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    v7 = sub_1C13A0DB4((uint64_t)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v5, a2, v3);
    swift_release();
  }
  else
  {
    v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    v7 = sub_1C13A0DB4((uint64_t)v8, v5, a2, v3);
    swift_release();
    MEMORY[0x1C3BAD3F4](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_1C13A0DB4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t v28;
  unint64_t i;
  unint64_t v30;
  _QWORD *v31;
  BOOL v32;
  BOOL v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  int64_t v41;
  unint64_t v42;
  int64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  BOOL v52;
  uint64_t v53;
  _QWORD *v54;
  BOOL v55;
  unint64_t *v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  int64_t v63;

  v4 = a4;
  v5 = a3;
  v57 = (unint64_t *)result;
  if (*(_QWORD *)(a4 + 16) < *(_QWORD *)(a3 + 16))
  {
    v6 = 0;
    v58 = a4 + 56;
    v7 = 1 << *(_BYTE *)(a4 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(a4 + 56);
    v59 = (unint64_t)(v7 + 63) >> 6;
    v61 = 0;
    v10 = a3 + 56;
    while (1)
    {
      while (1)
      {
        if (v9)
        {
          v11 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          v62 = v6;
          v12 = v11 | (v6 << 6);
        }
        else
        {
          v13 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
            goto LABEL_81;
          }
          if (v13 >= v59)
            goto LABEL_79;
          v14 = *(_QWORD *)(v58 + 8 * v13);
          v15 = v6 + 1;
          if (!v14)
          {
            v15 = v6 + 2;
            if (v6 + 2 >= v59)
              goto LABEL_79;
            v14 = *(_QWORD *)(v58 + 8 * v15);
            if (!v14)
            {
              v15 = v6 + 3;
              if (v6 + 3 >= v59)
                goto LABEL_79;
              v14 = *(_QWORD *)(v58 + 8 * v15);
              if (!v14)
              {
                v16 = v6 + 4;
                if (v6 + 4 >= v59)
                  goto LABEL_79;
                v14 = *(_QWORD *)(v58 + 8 * v16);
                if (!v14)
                {
                  while (1)
                  {
                    v15 = v16 + 1;
                    if (__OFADD__(v16, 1))
                      goto LABEL_83;
                    if (v15 >= v59)
                      goto LABEL_79;
                    v14 = *(_QWORD *)(v58 + 8 * v15);
                    ++v16;
                    if (v14)
                      goto LABEL_22;
                  }
                }
                v15 = v6 + 4;
              }
            }
          }
LABEL_22:
          v9 = (v14 - 1) & v14;
          v62 = v15;
          v12 = __clz(__rbit64(v14)) + (v15 << 6);
        }
        v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v12);
        v19 = *v17;
        v18 = v17[1];
        sub_1C14270E8();
        swift_bridgeObjectRetain();
        sub_1C1426AD0();
        v20 = sub_1C1427100();
        v21 = -1 << *(_BYTE *)(v5 + 32);
        v22 = v20 & ~v21;
        v23 = v22 >> 6;
        v24 = 1 << v22;
        if (((1 << v22) & *(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
          break;
LABEL_6:
        result = swift_bridgeObjectRelease();
        v6 = v62;
        v5 = a3;
        v4 = a4;
      }
      v25 = *(_QWORD *)(a3 + 48);
      v26 = (_QWORD *)(v25 + 16 * v22);
      v27 = *v26 == v19 && v26[1] == v18;
      if (!v27 && (sub_1C1427064() & 1) == 0)
      {
        v28 = ~v21;
        for (i = v22 + 1; ; i = v30 + 1)
        {
          v30 = i & v28;
          if (((*(_QWORD *)(v10 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0)
            break;
          v31 = (_QWORD *)(v25 + 16 * v30);
          v32 = *v31 == v19 && v31[1] == v18;
          if (v32 || (sub_1C1427064() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v23 = v30 >> 6;
            v24 = 1 << v30;
            goto LABEL_38;
          }
        }
        goto LABEL_6;
      }
      result = swift_bridgeObjectRelease();
LABEL_38:
      v6 = v62;
      v5 = a3;
      v57[v23] |= v24;
      v33 = __OFADD__(v61++, 1);
      v4 = a4;
      if (v33)
        goto LABEL_82;
    }
  }
  v34 = 0;
  v60 = a3 + 56;
  v61 = 0;
  v35 = 1 << *(_BYTE *)(a3 + 32);
  if (v35 < 64)
    v36 = ~(-1 << v35);
  else
    v36 = -1;
  v37 = v36 & *(_QWORD *)(a3 + 56);
  v63 = (unint64_t)(v35 + 63) >> 6;
  v38 = a4 + 56;
  while (1)
  {
    if (v37)
    {
      v39 = __clz(__rbit64(v37));
      v37 &= v37 - 1;
      v40 = v39 | (v34 << 6);
      goto LABEL_63;
    }
    v41 = v34 + 1;
    if (__OFADD__(v34, 1))
    {
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    if (v41 >= v63)
      goto LABEL_79;
    v42 = *(_QWORD *)(v60 + 8 * v41);
    ++v34;
    if (!v42)
    {
      v34 = v41 + 1;
      if (v41 + 1 >= v63)
        goto LABEL_79;
      v42 = *(_QWORD *)(v60 + 8 * v34);
      if (!v42)
      {
        v34 = v41 + 2;
        if (v41 + 2 >= v63)
          goto LABEL_79;
        v42 = *(_QWORD *)(v60 + 8 * v34);
        if (!v42)
          break;
      }
    }
LABEL_62:
    v37 = (v42 - 1) & v42;
    v40 = __clz(__rbit64(v42)) + (v34 << 6);
LABEL_63:
    v44 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v40);
    v46 = *v44;
    v45 = v44[1];
    sub_1C14270E8();
    swift_bridgeObjectRetain();
    sub_1C1426AD0();
    v47 = sub_1C1427100();
    v48 = -1 << *(_BYTE *)(v4 + 32);
    v49 = v47 & ~v48;
    if (((*(_QWORD *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
      goto LABEL_46;
    v50 = *(_QWORD *)(a4 + 48);
    v51 = (_QWORD *)(v50 + 16 * v49);
    v52 = *v51 == v46 && v51[1] == v45;
    if (v52 || (sub_1C1427064() & 1) != 0)
    {
LABEL_76:
      result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v57 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      v33 = __OFADD__(v61++, 1);
      v5 = a3;
      v4 = a4;
      if (v33)
      {
        __break(1u);
LABEL_79:
        swift_retain();
        return sub_1C1357C60(v57, a2, v61, v5);
      }
    }
    else
    {
      v53 = ~v48;
      while (1)
      {
        v49 = (v49 + 1) & v53;
        if (((*(_QWORD *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
          break;
        v54 = (_QWORD *)(v50 + 16 * v49);
        v55 = *v54 == v46 && v54[1] == v45;
        if (v55 || (sub_1C1427064() & 1) != 0)
          goto LABEL_76;
      }
LABEL_46:
      result = swift_bridgeObjectRelease();
      v5 = a3;
      v4 = a4;
    }
  }
  v43 = v41 + 3;
  if (v43 >= v63)
    goto LABEL_79;
  v42 = *(_QWORD *)(v60 + 8 * v43);
  if (v42)
  {
    v34 = v43;
    goto LABEL_62;
  }
  while (1)
  {
    v34 = v43 + 1;
    if (__OFADD__(v43, 1))
      break;
    if (v34 >= v63)
      goto LABEL_79;
    v42 = *(_QWORD *)(v60 + 8 * v34);
    ++v43;
    if (v42)
      goto LABEL_62;
  }
LABEL_84:
  __break(1u);
  return result;
}

uint64_t sub_1C13A12F0(char a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  unsigned __int8 *v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;

  v5 = (_QWORD **)v4;
  v27 = a2;
  v9 = sub_1C14251EC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = (_QWORD *)*v4;
  v15 = sub_1C13B9AB0(a3);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_14;
  }
  v19 = v14;
  v20 = v13[3];
  if (v20 >= v18 && (a4 & 1) != 0)
  {
LABEL_7:
    v21 = *v5;
    if ((v19 & 1) != 0)
    {
LABEL_8:
      v22 = (unsigned __int8 *)(v21[7] + 16 * v15);
      result = *v22;
      *v22 = a1 & 1;
      *((_QWORD *)v22 + 1) = v27;
      return result;
    }
    goto LABEL_11;
  }
  if (v20 >= v18 && (a4 & 1) == 0)
  {
    sub_1C13BB828();
    goto LABEL_7;
  }
  sub_1C13BF28C(v18, a4 & 1);
  v24 = sub_1C13B9AB0(a3);
  if ((v19 & 1) != (v25 & 1))
  {
LABEL_14:
    result = sub_1C142707C();
    __break(1u);
    return result;
  }
  v15 = v24;
  v21 = *v5;
  if ((v19 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  sub_1C13C3448(v15, (uint64_t)v12, a1 & 1, v27, v21);
  return 0;
}

uint64_t sub_1C13A146C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;

  return sub_1C139EB04(a1, a2, a3, *(uint64_t **)(v4 + 16), a4);
}

uint64_t sub_1C13A1474(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    v6 = result;
    v7 = *(_QWORD *)(a5 + 56);
    v8 = *(_QWORD *)(*(_QWORD *)(a5 + 48) + 8 * a2);
    v9 = type metadata accessor for TaskScheduler.Task();
    sub_1C1338F24(v7 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a2, v6, (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
    return v8;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1C13A1514(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    v6 = result;
    v7 = *(_QWORD *)(a5 + 56);
    v8 = *(_QWORD *)(*(_QWORD *)(a5 + 48) + 16 * a2);
    v9 = type metadata accessor for Activity();
    sub_1C1338F24(v7 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a2, v6, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    swift_bridgeObjectRetain();
    return v8;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1C13A15CC(uint64_t result, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (a3 < 0 || 1 << *(_BYTE *)(a6 + 32) <= a3)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a6 + (((unint64_t)a3 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a3) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a6 + 36) == a4)
  {
    v9 = result;
    v10 = *(_QWORD *)(a6 + 48);
    v11 = sub_1C142614C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a3, v11);
    v12 = *(_QWORD *)(a6 + 56);
    v13 = sub_1C1426194();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a2, v12 + *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72) * a3, v13);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1C13A1698(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 80);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v1 = *(_QWORD *)(a1 + 88);
  if (v1)
  {
    v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4)
    v7 = 4;
  v8 = v7 - 4;
  v9 = (unint64_t *)(a1 + 96);
  v2 = 192;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1C13A1748(uint64_t a1, void (*a2)(uint64_t, _QWORD, _QWORD), uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, _QWORD, _QWORD);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v57 = a2;
  v58 = a3;
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793380);
  v5 = MEMORY[0x1E0C80A78](v56);
  v55 = (uint64_t)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v54 = (char *)&v45 - v8;
  MEMORY[0x1E0C80A78](v7);
  v53 = (char *)&v45 - v9;
  v10 = type metadata accessor for ReplicatorParticipant.RelationshipSchedule(0);
  v52 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = MEMORY[0x1E0DEE9D8];
  if (!v13)
    return v14;
  v45 = v3;
  v61 = MEMORY[0x1E0DEE9D8];
  sub_1C1336A78(0, v13, 0);
  result = sub_1C135833C(a1);
  v17 = result;
  v18 = 0;
  v19 = a1 + 64;
  v46 = a1 + 80;
  v47 = v13;
  v50 = v12;
  v51 = a1;
  v48 = v16;
  v49 = a1 + 64;
  v20 = (uint64_t)v53;
  while ((v17 & 0x8000000000000000) == 0 && v17 < 1 << *(_BYTE *)(a1 + 32))
  {
    v23 = (unint64_t)v17 >> 6;
    if ((*(_QWORD *)(v19 + 8 * ((unint64_t)v17 >> 6)) & (1 << v17)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v16)
      goto LABEL_26;
    v59 = v18;
    v60 = 1 << v17;
    v24 = v56;
    v25 = v20 + *(int *)(v56 + 48);
    v26 = *(_QWORD *)(a1 + 48);
    v27 = sub_1C14251EC();
    v28 = *(_QWORD *)(v27 - 8);
    v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16);
    v29(v20, v26 + *(_QWORD *)(v28 + 72) * v17, v27);
    v30 = *(_QWORD *)(a1 + 56) + 16 * v17;
    v31 = *(_BYTE *)v30;
    v32 = *(_QWORD *)(v30 + 8);
    *(_BYTE *)v25 = *(_BYTE *)v30;
    *(_QWORD *)(v25 + 8) = v32;
    v33 = (uint64_t)v54;
    v29((uint64_t)v54, v20, v27);
    v34 = v33 + *(int *)(v24 + 48);
    *(_BYTE *)v34 = v31;
    *(_QWORD *)(v34 + 8) = v32;
    v35 = v55;
    sub_1C132A724(v33, v55, &qword_1ED793380);
    swift_bridgeObjectRetain_n();
    sub_1C132C860(v20, &qword_1ED793380);
    v36 = *(int *)(v24 + 48);
    v37 = (uint64_t)v50;
    v57(v35, *(unsigned __int8 *)(v35 + v36), *(_QWORD *)(v35 + v36 + 8));
    sub_1C132C860(v35, &qword_1ED793380);
    v14 = v61;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C1336A78(0, *(_QWORD *)(v14 + 16) + 1, 1);
      v14 = v61;
    }
    v39 = *(_QWORD *)(v14 + 16);
    v38 = *(_QWORD *)(v14 + 24);
    a1 = v51;
    if (v39 >= v38 >> 1)
    {
      sub_1C1336A78(v38 > 1, v39 + 1, 1);
      v14 = v61;
    }
    *(_QWORD *)(v14 + 16) = v39 + 1;
    result = sub_1C1339140(v37, v14+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(_QWORD *)(v52 + 72) * v39, type metadata accessor for ReplicatorParticipant.RelationshipSchedule);
    v21 = 1 << *(_BYTE *)(a1 + 32);
    if (v17 >= v21)
      goto LABEL_27;
    v19 = v49;
    v40 = *(_QWORD *)(v49 + 8 * v23);
    if ((v40 & v60) == 0)
      goto LABEL_28;
    LODWORD(v16) = v48;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v48)
      goto LABEL_29;
    v41 = v40 & (-2 << (v17 & 0x3F));
    if (v41)
    {
      v21 = __clz(__rbit64(v41)) | v17 & 0xFFFFFFFFFFFFFFC0;
      v22 = v47;
    }
    else
    {
      v42 = v23 + 1;
      v43 = (unint64_t)(v21 + 63) >> 6;
      v22 = v47;
      if (v23 + 1 < v43)
      {
        v44 = *(_QWORD *)(v49 + 8 * v42);
        if (v44)
        {
LABEL_22:
          v21 = __clz(__rbit64(v44)) + (v42 << 6);
        }
        else
        {
          while (v43 - 2 != v23)
          {
            v44 = *(_QWORD *)(v46 + 8 * v23++);
            if (v44)
            {
              v42 = v23 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    v18 = v59 + 1;
    v17 = v21;
    if (v59 + 1 == v22)
      return v14;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1C13A1B30(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  *(_QWORD *)(a2 + 48) = *((_QWORD *)a1 + 6);
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = v4;
  *(_OWORD *)a2 = v2;
  return a2;
}

uint64_t sub_1C13A1B50(uint64_t a1)
{
  uint64_t v1;
  char v2;

  sub_1C139DE4C(a1, *(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24));
  return v2 & 1;
}

unint64_t sub_1C13A1B6C()
{
  unint64_t result;

  result = qword_1EF6DB850;
  if (!qword_1EF6DB850)
  {
    result = MEMORY[0x1C3BAD334](MEMORY[0x1E0CB0350], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1EF6DB850);
  }
  return result;
}

uint64_t sub_1C13A1BB0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  BOOL v32;
  uint64_t v33;
  _QWORD *v34;
  BOOL v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  _QWORD *v46;
  uint64_t v47;
  int64_t v48;

  v38 = a2;
  v39 = a1;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
  MEMORY[0x1E0C80A78](v44);
  v7 = (uint64_t *)((char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for Activity();
  v43 = *(_QWORD *)(v8 - 8);
  result = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = 0;
  v46 = (_QWORD *)a3;
  v13 = *(_QWORD *)(a3 + 64);
  v40 = 0;
  v41 = a3 + 64;
  v14 = 1 << *(_BYTE *)(a3 + 32);
  if (v14 < 64)
    v15 = ~(-1 << v14);
  else
    v15 = -1;
  v16 = v15 & v13;
  v42 = (unint64_t)(v14 + 63) >> 6;
  v17 = a4 + 56;
  v47 = a4;
  v45 = v11;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v48 = v12;
      v19 = v18 | (v12 << 6);
      goto LABEL_22;
    }
    v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v20 >= v42)
      return sub_1C1326C50(v39, v38, v40, v46);
    v21 = *(_QWORD *)(v41 + 8 * v20);
    v22 = v12 + 1;
    if (!v21)
    {
      v22 = v12 + 2;
      if (v12 + 2 >= v42)
        return sub_1C1326C50(v39, v38, v40, v46);
      v21 = *(_QWORD *)(v41 + 8 * v22);
      if (!v21)
      {
        v22 = v12 + 3;
        if (v12 + 3 >= v42)
          return sub_1C1326C50(v39, v38, v40, v46);
        v21 = *(_QWORD *)(v41 + 8 * v22);
        if (!v21)
          break;
      }
    }
LABEL_21:
    v16 = (v21 - 1) & v21;
    v48 = v22;
    v19 = __clz(__rbit64(v21)) + (v22 << 6);
LABEL_22:
    v24 = (uint64_t *)(v46[6] + 16 * v19);
    v25 = *v24;
    v26 = v24[1];
    sub_1C1338F24(v46[7] + *(_QWORD *)(v43 + 72) * v19, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    *v7 = v25;
    v7[1] = v26;
    sub_1C1338F24((uint64_t)v11, (uint64_t)v7 + *(int *)(v44 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    if (!*(_QWORD *)(a4 + 16))
    {
      swift_bridgeObjectRetain_n();
      goto LABEL_38;
    }
    sub_1C14270E8();
    swift_bridgeObjectRetain_n();
    sub_1C1426AD0();
    v27 = sub_1C1427100();
    v28 = -1 << *(_BYTE *)(a4 + 32);
    v29 = v27 & ~v28;
    if (((*(_QWORD *)(v17 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) != 0)
    {
      v30 = *(_QWORD *)(v47 + 48);
      v31 = (_QWORD *)(v30 + 16 * v29);
      v32 = *v31 == v25 && v31[1] == v26;
      if (!v32 && (sub_1C1427064() & 1) == 0)
      {
        v33 = ~v28;
        do
        {
          v29 = (v29 + 1) & v33;
          if (((*(_QWORD *)(v17 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
            goto LABEL_38;
          v34 = (_QWORD *)(v30 + 16 * v29);
          v35 = *v34 == v25 && v34[1] == v26;
        }
        while (!v35 && (sub_1C1427064() & 1) == 0);
      }
      sub_1C132C860((uint64_t)v7, &qword_1ED7939D8);
      v11 = v45;
      sub_1C1339004((uint64_t)v45, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      result = swift_bridgeObjectRelease();
      a4 = v47;
      v12 = v48;
    }
    else
    {
LABEL_38:
      sub_1C132C860((uint64_t)v7, &qword_1ED7939D8);
      v11 = v45;
      sub_1C1339004((uint64_t)v45, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v39 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      v36 = __OFADD__(v40++, 1);
      a4 = v47;
      v12 = v48;
      if (v36)
      {
        __break(1u);
        return sub_1C1326C50(v39, v38, v40, v46);
      }
    }
  }
  v23 = v12 + 4;
  if (v12 + 4 >= v42)
    return sub_1C1326C50(v39, v38, v40, v46);
  v21 = *(_QWORD *)(v41 + 8 * v23);
  if (v21)
  {
    v22 = v12 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v22 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v22 >= v42)
      return sub_1C1326C50(v39, v38, v40, v46);
    v21 = *(_QWORD *)(v41 + 8 * v22);
    ++v23;
    if (v21)
      goto LABEL_21;
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_1C13A1F8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  size_t v8;
  uint64_t isStackAllocationSafe;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v13[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  v8 = 8 * v7;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    v10 = sub_1C13A1BB0((_QWORD *)((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    swift_bridgeObjectRelease();
    if (v2)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v8);
    swift_bridgeObjectRetain();
    v10 = sub_1C13A1BB0((unint64_t *)v11, v7, a1, a2);
    swift_bridgeObjectRelease();
    MEMORY[0x1C3BAD3F4](v11, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v10;
}

BOOL sub_1C13A2140(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  const char *v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  NSObject *v89;
  os_log_type_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  NSObject *v103;
  os_log_type_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v116;
  uint64_t v117;
  os_log_type_t v118;
  uint64_t v119;
  unint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;

  v132 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793BF8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v127 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = sub_1C14251EC();
  v129 = *(_QWORD *)(v131 - 8);
  MEMORY[0x1E0C80A78](v131);
  v130 = (char *)&v127 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ActivityManagerEvent(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v127 - v10);
  v12 = MEMORY[0x1E0C80A78](v9);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (uint64_t *)((char *)&v127 - v14);
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v127 - v17;
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (uint64_t *)((char *)&v127 - v20);
  v22 = MEMORY[0x1E0C80A78](v19);
  v23 = MEMORY[0x1E0C80A78](v22);
  v25 = (uint64_t *)((char *)&v127 - v24);
  v26 = MEMORY[0x1E0C80A78](v23);
  v27 = MEMORY[0x1E0C80A78](v26);
  v29 = (uint64_t *)((char *)&v127 - v28);
  v30 = MEMORY[0x1E0C80A78](v27);
  v32 = (char *)&v127 - v31;
  v33 = MEMORY[0x1E0C80A78](v30);
  v39 = (uint64_t *)((char *)&v127 - v38);
  switch(a2)
  {
    case 0:
      if (qword_1ED791DD8 != -1)
        swift_once();
      v40 = sub_1C1426854();
      __swift_project_value_buffer(v40, (uint64_t)qword_1ED7984F0);
      v41 = v132;
      sub_1C1338F24(v132, (uint64_t)v39, type metadata accessor for ActivityManagerEvent);
      sub_1C1338F24(v41, (uint64_t)v32, type metadata accessor for ActivityManagerEvent);
      v42 = sub_1C1426848();
      v43 = sub_1C1426C80();
      if (os_log_type_enabled(v42, v43))
      {
        v44 = swift_slowAlloc();
        v132 = swift_slowAlloc();
        v134 = v132;
        *(_DWORD *)v44 = 136446466;
        v45 = *v39;
        v46 = v39[1];
        swift_bridgeObjectRetain();
        v133 = sub_1C132AD90(v45, v46, &v134);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        sub_1C1339004((uint64_t)v39, type metadata accessor for ActivityManagerEvent);
        *(_WORD *)(v44 + 12) = 2082;
        type metadata accessor for Activity();
        v47 = v130;
        sub_1C1425420();
        sub_1C1329AD0(&qword_1ED792880, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
        v48 = v131;
        v49 = sub_1C1427058();
        v51 = v50;
        (*(void (**)(char *, uint64_t))(v129 + 8))(v47, v48);
        v133 = sub_1C132AD90(v49, v51, &v134);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        sub_1C1339004((uint64_t)v32, type metadata accessor for ActivityManagerEvent);
        v52 = "Always sending update for full subscription: %{public}s.%{public}s";
        v53 = v42;
        v54 = v43;
        goto LABEL_35;
      }
      sub_1C1339004((uint64_t)v39, type metadata accessor for ActivityManagerEvent);
      v114 = (uint64_t)v32;
      goto LABEL_39;
    case 1:
      v69 = v132;
      if (*(_BYTE *)(v132 + *(int *)(v33 + 20)) != 2)
        return 1;
      v70 = v34;
      v71 = v35;
      type metadata accessor for Activity();
      sub_1C14253F0();
      v72 = sub_1C1425B40();
      v73 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 48))(v5, 1, v72);
      sub_1C132C860((uint64_t)v5, &qword_1ED793BF8);
      if (v73 == 1)
      {
        if (qword_1ED791DD8 != -1)
          swift_once();
        v74 = sub_1C1426854();
        __swift_project_value_buffer(v74, (uint64_t)qword_1ED7984F0);
        sub_1C1338F24(v69, (uint64_t)v25, type metadata accessor for ActivityManagerEvent);
        v75 = v71;
        sub_1C1338F24(v69, v71, type metadata accessor for ActivityManagerEvent);
        v76 = sub_1C1426848();
        v77 = sub_1C1426C80();
        if (os_log_type_enabled(v76, v77))
        {
          v78 = swift_slowAlloc();
          v132 = swift_slowAlloc();
          v134 = v132;
          *(_DWORD *)v78 = 136446466;
          v79 = *v25;
          v80 = v25[1];
          swift_bridgeObjectRetain();
          v133 = sub_1C132AD90(v79, v80, &v134);
          sub_1C1426DB8();
          swift_bridgeObjectRelease();
          sub_1C1339004((uint64_t)v25, type metadata accessor for ActivityManagerEvent);
          *(_WORD *)(v78 + 12) = 2082;
          v81 = v130;
          sub_1C1425420();
          sub_1C1329AD0(&qword_1ED792880, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
          v82 = v131;
          v83 = sub_1C1427058();
          v85 = v84;
          (*(void (**)(char *, uint64_t))(v129 + 8))(v81, v82);
          v133 = sub_1C132AD90(v83, v85, &v134);
          sub_1C1426DB8();
          swift_bridgeObjectRelease();
          sub_1C1339004(v75, type metadata accessor for ActivityManagerEvent);
          _os_log_impl(&dword_1C1324000, v76, v77, "Not sending non-alerting update for alerts subscription: %{public}s.%{public}s", (uint8_t *)v78, 0x16u);
          v86 = v132;
          swift_arrayDestroy();
          MEMORY[0x1C3BAD3F4](v86, -1, -1);
          MEMORY[0x1C3BAD3F4](v78, -1, -1);
        }
        else
        {
          sub_1C1339004((uint64_t)v25, type metadata accessor for ActivityManagerEvent);
          sub_1C1339004(v71, type metadata accessor for ActivityManagerEvent);
        }

        return 0;
      }
      else
      {
        if (qword_1ED791DD8 != -1)
          swift_once();
        v116 = sub_1C1426854();
        __swift_project_value_buffer(v116, (uint64_t)qword_1ED7984F0);
        sub_1C1338F24(v69, (uint64_t)v29, type metadata accessor for ActivityManagerEvent);
        v117 = v70;
        sub_1C1338F24(v69, v70, type metadata accessor for ActivityManagerEvent);
        v42 = sub_1C1426848();
        v118 = sub_1C1426C80();
        if (os_log_type_enabled(v42, v118))
        {
          v44 = swift_slowAlloc();
          v132 = swift_slowAlloc();
          v134 = v132;
          *(_DWORD *)v44 = 136446466;
          v119 = *v29;
          v120 = v29[1];
          swift_bridgeObjectRetain();
          v133 = sub_1C132AD90(v119, v120, &v134);
          sub_1C1426DB8();
          swift_bridgeObjectRelease();
          sub_1C1339004((uint64_t)v29, type metadata accessor for ActivityManagerEvent);
          *(_WORD *)(v44 + 12) = 2082;
          v121 = v130;
          sub_1C1425420();
          sub_1C1329AD0(&qword_1ED792880, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
          v122 = v131;
          v123 = sub_1C1427058();
          v125 = v124;
          (*(void (**)(char *, uint64_t))(v129 + 8))(v121, v122);
          v133 = sub_1C132AD90(v123, v125, &v134);
          sub_1C1426DB8();
          swift_bridgeObjectRelease();
          sub_1C1339004(v117, type metadata accessor for ActivityManagerEvent);
          v52 = "Sending alerting update for alerts subscription: %{public}s.%{public}s";
          v53 = v42;
          v54 = v118;
LABEL_35:
          _os_log_impl(&dword_1C1324000, v53, v54, v52, (uint8_t *)v44, 0x16u);
          v126 = v132;
          swift_arrayDestroy();
          MEMORY[0x1C3BAD3F4](v126, -1, -1);
          MEMORY[0x1C3BAD3F4](v44, -1, -1);
        }
        else
        {
          sub_1C1339004((uint64_t)v29, type metadata accessor for ActivityManagerEvent);
          v114 = v70;
LABEL_39:
          sub_1C1339004(v114, type metadata accessor for ActivityManagerEvent);
        }

        return 1;
      }
    case 2:
      v128 = v33;
      if (qword_1ED791DD8 != -1)
        swift_once();
      v87 = sub_1C1426854();
      __swift_project_value_buffer(v87, (uint64_t)qword_1ED7984F0);
      v88 = v132;
      sub_1C1338F24(v132, (uint64_t)v21, type metadata accessor for ActivityManagerEvent);
      sub_1C1338F24(v88, (uint64_t)v18, type metadata accessor for ActivityManagerEvent);
      v89 = sub_1C1426848();
      v90 = sub_1C1426C80();
      if (os_log_type_enabled(v89, v90))
      {
        v91 = swift_slowAlloc();
        v127 = swift_slowAlloc();
        v134 = v127;
        *(_DWORD *)v91 = 136446466;
        v92 = *v21;
        v93 = v21[1];
        swift_bridgeObjectRetain();
        v133 = sub_1C132AD90(v92, v93, &v134);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        sub_1C1339004((uint64_t)v21, type metadata accessor for ActivityManagerEvent);
        *(_WORD *)(v91 + 12) = 2082;
        type metadata accessor for Activity();
        v94 = v130;
        sub_1C1425420();
        sub_1C1329AD0(&qword_1ED792880, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
        v95 = v131;
        v96 = sub_1C1427058();
        v98 = v97;
        (*(void (**)(char *, uint64_t))(v129 + 8))(v94, v95);
        v133 = sub_1C132AD90(v96, v98, &v134);
        v88 = v132;
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        sub_1C1339004((uint64_t)v18, type metadata accessor for ActivityManagerEvent);
        _os_log_impl(&dword_1C1324000, v89, v90, "Sending state change for stateChanges subscription: %{public}s.%{public}s", (uint8_t *)v91, 0x16u);
        v99 = v127;
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v99, -1, -1);
        MEMORY[0x1C3BAD3F4](v91, -1, -1);
      }
      else
      {
        sub_1C1339004((uint64_t)v21, type metadata accessor for ActivityManagerEvent);
        sub_1C1339004((uint64_t)v18, type metadata accessor for ActivityManagerEvent);
      }

      return *(_BYTE *)(v88 + *(int *)(v128 + 20)) != 2;
    case 3:
      v100 = v37;
      if (qword_1ED791DD8 != -1)
        swift_once();
      v101 = sub_1C1426854();
      __swift_project_value_buffer(v101, (uint64_t)qword_1ED7984F0);
      v102 = v132;
      sub_1C1338F24(v132, (uint64_t)v15, type metadata accessor for ActivityManagerEvent);
      sub_1C1338F24(v102, v100, type metadata accessor for ActivityManagerEvent);
      v103 = sub_1C1426848();
      v104 = sub_1C1426C80();
      if (os_log_type_enabled(v103, v104))
      {
        v105 = swift_slowAlloc();
        v132 = swift_slowAlloc();
        v134 = v132;
        *(_DWORD *)v105 = 136446466;
        v106 = *v15;
        v107 = v15[1];
        swift_bridgeObjectRetain();
        v133 = sub_1C132AD90(v106, v107, &v134);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        sub_1C1339004((uint64_t)v15, type metadata accessor for ActivityManagerEvent);
        *(_WORD *)(v105 + 12) = 2082;
        type metadata accessor for Activity();
        v108 = v130;
        sub_1C1425420();
        sub_1C1329AD0(&qword_1ED792880, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
        v109 = v131;
        v110 = sub_1C1427058();
        v112 = v111;
        (*(void (**)(char *, uint64_t))(v129 + 8))(v108, v109);
        v133 = sub_1C132AD90(v110, v112, &v134);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        sub_1C1339004(v100, type metadata accessor for ActivityManagerEvent);
        _os_log_impl(&dword_1C1324000, v103, v104, "Not sending state change for 'none' subscription: %{public}s.%{public}s", (uint8_t *)v105, 0x16u);
        v113 = v132;
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v113, -1, -1);
        MEMORY[0x1C3BAD3F4](v105, -1, -1);
      }
      else
      {
        sub_1C1339004((uint64_t)v15, type metadata accessor for ActivityManagerEvent);
        sub_1C1339004(v100, type metadata accessor for ActivityManagerEvent);
      }

      return 0;
    default:
      v55 = v36;
      if (qword_1ED791DD8 != -1)
        swift_once();
      v56 = sub_1C1426854();
      __swift_project_value_buffer(v56, (uint64_t)qword_1ED7984F0);
      v57 = v132;
      sub_1C1338F24(v132, (uint64_t)v11, type metadata accessor for ActivityManagerEvent);
      sub_1C1338F24(v57, v55, type metadata accessor for ActivityManagerEvent);
      v58 = sub_1C1426848();
      v59 = sub_1C1426C80();
      if (os_log_type_enabled(v58, v59))
      {
        v60 = swift_slowAlloc();
        v132 = swift_slowAlloc();
        v134 = v132;
        *(_DWORD *)v60 = 136446466;
        v61 = *v11;
        v62 = v11[1];
        swift_bridgeObjectRetain();
        v133 = sub_1C132AD90(v61, v62, &v134);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        sub_1C1339004((uint64_t)v11, type metadata accessor for ActivityManagerEvent);
        *(_WORD *)(v60 + 12) = 2082;
        type metadata accessor for Activity();
        v63 = v130;
        sub_1C1425420();
        sub_1C1329AD0(&qword_1ED792880, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
        v64 = v131;
        v65 = sub_1C1427058();
        v67 = v66;
        (*(void (**)(char *, uint64_t))(v129 + 8))(v63, v64);
        v133 = sub_1C132AD90(v65, v67, &v134);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        sub_1C1339004(v55, type metadata accessor for ActivityManagerEvent);
        _os_log_impl(&dword_1C1324000, v58, v59, "Sending state change for unhandled subscription: %{public}s.%{public}s", (uint8_t *)v60, 0x16u);
        v68 = v132;
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v68, -1, -1);
        MEMORY[0x1C3BAD3F4](v60, -1, -1);
      }
      else
      {
        sub_1C1339004((uint64_t)v11, type metadata accessor for ActivityManagerEvent);
        sub_1C1339004(v55, type metadata accessor for ActivityManagerEvent);
      }

      return 1;
  }
}

uint64_t type metadata accessor for ReplicatorParticipant.RemoteActivityDismissal(uint64_t a1)
{
  return sub_1C138479C(a1, qword_1EF6DB958);
}

unint64_t sub_1C13A31CC@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1C139ECB8(v1, a1);
}

uint64_t sub_1C13A31E4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x766974634177656ELL && a2 == 0xED00007365697469;
  if (v2 || (sub_1C1427064() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7069726373627573 && a2 == 0xED0000736E6F6974)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1C1427064();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1C13A331C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[32];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DB870);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_1C13A34B0();
  sub_1C142710C();
  if (!v1)
  {
    v9[31] = 0;
    LOBYTE(v7) = sub_1C1427004();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DB880);
    v9[15] = 1;
    sub_1C13A3538(&qword_1EF6DB888, (uint64_t (*)(void))sub_1C13A34F4, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA0D8]);
    sub_1C1427010();
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7 & 1;
}

unint64_t sub_1C13A34B0()
{
  unint64_t result;

  result = qword_1EF6DB878;
  if (!qword_1EF6DB878)
  {
    result = MEMORY[0x1C3BAD334](&unk_1C1429BC0, &type metadata for ReplicatorParticipant.RemoteActivitySubscription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6DB878);
  }
  return result;
}

unint64_t sub_1C13A34F4()
{
  unint64_t result;

  result = qword_1EF6DB890;
  if (!qword_1EF6DB890)
  {
    result = MEMORY[0x1C3BAD334](MEMORY[0x1E0C90188], MEMORY[0x1E0C90178]);
    atomic_store(result, (unint64_t *)&qword_1EF6DB890);
  }
  return result;
}

uint64_t sub_1C13A3538(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EF6DB880);
    v10[0] = a3;
    v10[1] = a2();
    result = MEMORY[0x1C3BAD334](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C13A35AC()
{
  unint64_t result;

  result = qword_1EF6DB8A8;
  if (!qword_1EF6DB8A8)
  {
    result = MEMORY[0x1C3BAD334](MEMORY[0x1E0C90180], MEMORY[0x1E0C90178]);
    atomic_store(result, (unint64_t *)&qword_1EF6DB8A8);
  }
  return result;
}

void sub_1C13A35F0()
{
  uint64_t v0;

  sub_1C138DBEC(v0);
}

uint64_t sub_1C13A35F8(_QWORD *a1)
{
  uint64_t v1;

  return sub_1C1417128(a1, *(_QWORD **)(v1 + 16)) & 1;
}

uint64_t sub_1C13A3614(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  v4 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_QWORD *)(a2 + 48) = v4;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1C13A3660()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C13A3694(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (uint64_t)(v1 + 4);
  v7 = v1[11];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1C1382730;
  return sub_1C139C720(a1, v4, v5, v6, v7);
}

uint64_t sub_1C13A3710(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD v17[2];
  uint64_t v18[2];

  v2 = sub_1C142614C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = sub_1C1426110();
  v18[1] = v6;
  v17[0] = 46;
  v17[1] = 0xE100000000000000;
  sub_1C13A3B80();
  v7 = sub_1C1426DD0();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v7 + 16))
  {
    v8 = *(_QWORD *)(v7 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_1ED791DD8 != -1)
      swift_once();
    v9 = sub_1C1426854();
    __swift_project_value_buffer(v9, (uint64_t)qword_1ED7984F0);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
    v10 = sub_1C1426848();
    v11 = sub_1C1426C68();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v18[0] = v13;
      *(_DWORD *)v12 = 136446210;
      sub_1C1329AD0(&qword_1EF6DB8B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D87A00], MEMORY[0x1E0D87A20]);
      v14 = sub_1C1427058();
      v17[0] = sub_1C132AD90(v14, v15, v18);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      _os_log_impl(&dword_1C1324000, v10, v11, "Malformed record ID: %{public}s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v13, -1, -1);
      MEMORY[0x1C3BAD3F4](v12, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }

    return 0;
  }
  return v8;
}

uint64_t sub_1C13A39A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1C14251EC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1C13A3A14()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1C14251EC() - 8) + 80);
  return sub_1C1394E78(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t sub_1C13A3A44()
{
  return swift_deallocObject();
}

uint64_t sub_1C13A3A58()
{
  uint64_t v0;

  return sub_1C13947C0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1C13A3A64()
{
  return swift_deallocObject();
}

uint64_t sub_1C13A3A74(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2;

  return sub_1C1394EE4(a1, a2, *(_QWORD *)(v2 + 16)) & 1;
}

uint64_t sub_1C13A3A90@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_1C139701C(*(_QWORD *)(v1 + 16), *(uint64_t **)(v1 + 24), a1);
}

uint64_t sub_1C13A3AA8()
{
  uint64_t *v0;

  return sub_1C13982C8(v0[2], v0[3], v0[4], v0[5]);
}

unint64_t sub_1C13A3AC4()
{
  unint64_t result;

  result = qword_1EF6DB8F0;
  if (!qword_1EF6DB8F0)
  {
    result = MEMORY[0x1C3BAD334](&unk_1C1429A44, &type metadata for ReplicatorParticipant.RemoteActivitySubscription);
    atomic_store(result, (unint64_t *)&qword_1EF6DB8F0);
  }
  return result;
}

uint64_t objectdestroy_24Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C13A3B38()
{
  uint64_t *v0;

  return sub_1C139A1AC(v0[2], v0[3], v0[4]);
}

uint64_t sub_1C13A3B44()
{
  return swift_deallocObject();
}

uint64_t sub_1C13A3B54@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = MEMORY[0x1C3BAD4B4](v1 + 168);
  v4 = *(_QWORD *)(v1 + 176);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1C13A3B80()
{
  unint64_t result;

  result = qword_1EF6DB8F8;
  if (!qword_1EF6DB8F8)
  {
    result = MEMORY[0x1C3BAD334](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EF6DB8F8);
  }
  return result;
}

uint64_t sub_1C13A3BC8()
{
  return swift_deallocObject();
}

uint64_t storeEnumTagSinglePayload for ReplicatorParticipant.RemoteActivitySubscription.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C13A3C24 + 4 * byte_1C142995D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C13A3C58 + 4 * byte_1C1429958[v4]))();
}

uint64_t sub_1C13A3C58(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C13A3C60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C13A3C68);
  return result;
}

uint64_t sub_1C13A3C74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C13A3C7CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C13A3C80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C13A3C88(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReplicatorParticipant.RemoteActivitySubscription.CodingKeys()
{
  return &type metadata for ReplicatorParticipant.RemoteActivitySubscription.CodingKeys;
}

uint64_t sub_1C13A3CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C14251B0();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_1C13A3CE0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C14251B0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1C13A3D14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C14251B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1C13A3D58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C14251B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1C13A3D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C14251B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1C13A3DE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C14251B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1C13A3E24()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C13A3E30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C14251B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1C13A3E6C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C13A3E78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C14251B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1C13A3EB8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C14251B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C13A3F20(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C14251EC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1C14261AC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_1C13A3FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1C14251EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1C14261AC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_1C13A4024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1C14251EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C14261AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_1C13A40A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1C14251EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C14261AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_1C13A411C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1C14251EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C14261AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_1C13A4198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1C14251EC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C14261AC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1C13A4214()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C13A4220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_1C14251EC();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_1C14261AC();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1C13A4294()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C13A42A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_1C14251EC();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_1C14261AC();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1C13A431C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1C14251EC();
  if (v1 <= 0x3F)
  {
    result = sub_1C14261AC();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_1C13A43A4()
{
  unint64_t result;

  result = qword_1EF6DB990;
  if (!qword_1EF6DB990)
  {
    result = MEMORY[0x1C3BAD334](&unk_1C1429B98, &type metadata for ReplicatorParticipant.RemoteActivitySubscription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6DB990);
  }
  return result;
}

unint64_t sub_1C13A43EC()
{
  unint64_t result;

  result = qword_1EF6DB998;
  if (!qword_1EF6DB998)
  {
    result = MEMORY[0x1C3BAD334](&unk_1C1429B08, &type metadata for ReplicatorParticipant.RemoteActivitySubscription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6DB998);
  }
  return result;
}

unint64_t sub_1C13A4434()
{
  unint64_t result;

  result = qword_1EF6DB9A0;
  if (!qword_1EF6DB9A0)
  {
    result = MEMORY[0x1C3BAD334](&unk_1C1429B30, &type metadata for ReplicatorParticipant.RemoteActivitySubscription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6DB9A0);
  }
  return result;
}

unint64_t sub_1C13A4478()
{
  unint64_t result;

  result = qword_1EF6DB9B0;
  if (!qword_1EF6DB9B0)
  {
    result = MEMORY[0x1C3BAD334](&unk_1C1429D18, &type metadata for ReplicatorParticipant.RemoteActivityDismissal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6DB9B0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ReplicatorParticipant.RemoteActivityDismissal.CodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for ReplicatorParticipant.RemoteActivityDismissal.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1C13A4550 + 4 * byte_1C1429962[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1C13A4570 + 4 * byte_1C1429967[v4]))();
}

_BYTE *sub_1C13A4550(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1C13A4570(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C13A4578(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C13A4580(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1C13A4588(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1C13A4590(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ReplicatorParticipant.RemoteActivityDismissal.CodingKeys()
{
  return &type metadata for ReplicatorParticipant.RemoteActivityDismissal.CodingKeys;
}

unint64_t sub_1C13A45B0()
{
  unint64_t result;

  result = qword_1EF6DB9D0;
  if (!qword_1EF6DB9D0)
  {
    result = MEMORY[0x1C3BAD334](&unk_1C1429CF0, &type metadata for ReplicatorParticipant.RemoteActivityDismissal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6DB9D0);
  }
  return result;
}

unint64_t sub_1C13A45F8()
{
  unint64_t result;

  result = qword_1EF6DB9D8;
  if (!qword_1EF6DB9D8)
  {
    result = MEMORY[0x1C3BAD334](&unk_1C1429C60, &type metadata for ReplicatorParticipant.RemoteActivityDismissal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6DB9D8);
  }
  return result;
}

unint64_t sub_1C13A4640()
{
  unint64_t result;

  result = qword_1EF6DB9E0;
  if (!qword_1EF6DB9E0)
  {
    result = MEMORY[0x1C3BAD334](&unk_1C1429C88, &type metadata for ReplicatorParticipant.RemoteActivityDismissal.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6DB9E0);
  }
  return result;
}

uint64_t sub_1C13A4684(_QWORD *a1)
{
  return sub_1C13A35F8(a1) & 1;
}

uint64_t sub_1C13A46C4(void *a1)
{
  unint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _DWORD *v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  int isUniquelyReferenced_nonNull_native;
  uint64_t v41;
  char v42;
  uint64_t v43;
  _BOOL8 v44;
  uint64_t v45;
  char v46;
  unint64_t v47;
  char v48;
  _QWORD *v49;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  uint64_t result;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  id v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;

  v58 = a1;
  v62 = sub_1C1425CC0();
  v60 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v3 = (char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Assertion();
  v55 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v61 = (uint64_t)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v54 - v7);
  v9 = (_QWORD *)sub_1C1426CD4();
  v56 = *(v9 - 1);
  v57 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1C1426C8C();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v12);
  v14 = sub_1C14269B0();
  MEMORY[0x1E0C80A78](v14);
  type metadata accessor for CachingAssertionStore();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = MEMORY[0x1E0DEE9E0];
  v59 = v1;
  *(_QWORD *)(v1 + 16) = v15;
  type metadata accessor for UnfairLock();
  v16 = swift_allocObject();
  v17 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v16 + 16) = v17;
  *v17 = 0;
  *(_QWORD *)(v1 + 32) = v16;
  sub_1C1330F6C();
  sub_1C1426980();
  v64 = MEMORY[0x1E0DEE9D8];
  sub_1C1329AD0((unint64_t *)&qword_1ED7939F0, v13, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A70);
  sub_1C135C2A8();
  sub_1C1426DF4();
  (*(void (**)(char *, _QWORD, id))(v56 + 104))(v11, *MEMORY[0x1E0DEF8D8], v57);
  v57 = v58;
  v18 = v59;
  *(_QWORD *)(v18 + 24) = sub_1C1426D04();
  if (qword_1ED7936D0 != -1)
LABEL_39:
    swift_once();
  v19 = qword_1ED798640;
  *(_QWORD *)(v18 + 40) = qword_1ED798640;
  if (v19)
  {
    swift_retain();
    swift_retain();
    v20 = (_QWORD *)sub_1C1349318();
    swift_release();
    v21 = v20[2];
    v58 = v20;
    if (v21)
    {
      v22 = (uint64_t)v20 + ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80));
      v23 = *(_QWORD *)(v55 + 72);
      swift_bridgeObjectRetain();
      v24 = 0;
      v25 = 0xE000000000000000;
      do
      {
        sub_1C13A5F94(v22, (uint64_t)v8);
        v27 = HIBYTE(v25) & 0xF;
        if ((v25 & 0x2000000000000000) == 0)
          v27 = v24 & 0xFFFFFFFFFFFFLL;
        if (v27)
        {
          v64 = v24;
          v65 = v25;
          swift_bridgeObjectRetain();
          sub_1C14252D0();
          sub_1C1329AD0(&qword_1ED797888, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8CB40], MEMORY[0x1E0D8CB60]);
          sub_1C1427058();
          sub_1C14252D0();
          swift_bridgeObjectRelease();
          v24 = v64;
          v26 = v65;
        }
        else
        {
          sub_1C1329AD0(&qword_1ED797888, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8CB40], MEMORY[0x1E0D8CB60]);
          v24 = sub_1C1427058();
          v26 = v28;
        }
        sub_1C13A6208((uint64_t)v8);
        swift_bridgeObjectRelease();
        v22 += v23;
        v25 = v26;
        --v21;
      }
      while (v21);
      v20 = v58;
      swift_bridgeObjectRelease();
    }
    else
    {
      v24 = 0;
      v26 = 0xE000000000000000;
    }
    if (qword_1ED7939A0 != -1)
      swift_once();
    v29 = sub_1C1426854();
    __swift_project_value_buffer(v29, (uint64_t)qword_1ED7986C8);
    swift_bridgeObjectRetain();
    v30 = sub_1C1426848();
    v31 = sub_1C1426C80();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = swift_slowAlloc();
      v64 = v33;
      *(_DWORD *)v32 = 136446210;
      swift_bridgeObjectRetain();
      v63 = sub_1C132AD90(v24, v26, &v64);
      v20 = v58;
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v30, v31, "Restored assertions: %{public}s", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v33, -1, -1);
      MEMORY[0x1C3BAD3F4](v32, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v34 = v62;
    v35 = v20[2];
    v18 = v59;
    if (v35)
    {
      v36 = v55;
      v37 = (char *)v20 + ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80));
      v8 = (uint64_t *)(*(_QWORD *)(v59 + 16) + 16);
      swift_beginAccess();
      v38 = *(_QWORD *)(v36 + 72);
      v39 = *(void (**)(char *, char *, uint64_t))(v60 + 16);
      swift_bridgeObjectRetain();
      while (1)
      {
        v39(v3, v37, v34);
        sub_1C13A5F94((uint64_t)v37, v61);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v63 = *v8;
        v41 = v63;
        *v8 = 0x8000000000000000;
        v18 = sub_1C13B9950((uint64_t)v3);
        v43 = *(_QWORD *)(v41 + 16);
        v44 = (v42 & 1) == 0;
        v45 = v43 + v44;
        if (__OFADD__(v43, v44))
        {
          __break(1u);
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
        v46 = v42;
        if (*(_QWORD *)(v41 + 24) >= v45)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v49 = (_QWORD *)v63;
            if ((v42 & 1) != 0)
              goto LABEL_20;
          }
          else
          {
            sub_1C13B9FAC();
            v49 = (_QWORD *)v63;
            if ((v46 & 1) != 0)
              goto LABEL_20;
          }
        }
        else
        {
          sub_1C13BC75C(v45, isUniquelyReferenced_nonNull_native);
          v47 = sub_1C13B9950((uint64_t)v3);
          if ((v46 & 1) != (v48 & 1))
          {
            sub_1C142707C();
            __break(1u);

            swift_release();
            result = sub_1C1426F8C();
            __break(1u);
            return result;
          }
          v18 = v47;
          v49 = (_QWORD *)v63;
          if ((v46 & 1) != 0)
          {
LABEL_20:
            sub_1C13A6244(v61, v49[7] + v18 * v38);
            v34 = v62;
            goto LABEL_21;
          }
        }
        v49[(v18 >> 6) + 8] |= 1 << v18;
        v34 = v62;
        v39((char *)(v49[6] + *(_QWORD *)(v60 + 72) * v18), v3, v62);
        sub_1C13A6128(v61, v49[7] + v18 * v38);
        v50 = v49[2];
        v51 = __OFADD__(v50, 1);
        v52 = v50 + 1;
        if (v51)
          goto LABEL_38;
        v49[2] = v52;
        v49 = (_QWORD *)v63;
LABEL_21:
        *v8 = (uint64_t)v49;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v60 + 8))(v3, v34);
        v37 += v38;
        if (!--v35)
        {
          swift_endAccess();

          swift_bridgeObjectRelease_n();
          return v59;
        }
      }
    }
    swift_bridgeObjectRelease();
  }

  return v18;
}

uint64_t sub_1C13A4EC4()
{
  uint64_t v0;

  swift_release();

  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PersistentAssertionStore()
{
  return objc_opt_self();
}

void sub_1C13A4F20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  os_unfair_lock_t v19;

  v2 = v1;
  v4 = type metadata accessor for Assertion();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v18 = (uint64_t)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED797768);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C1425CC0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(os_unfair_lock_t *)(*(_QWORD *)(v2 + 32) + 16);
  os_unfair_lock_lock(v19);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  sub_1C13A5F94(a1, (uint64_t)v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v9, 0, 1, v4);
  swift_beginAccess();
  sub_1C13B37EC((uint64_t)v9, (uint64_t)v13);
  swift_endAccess();
  sub_1C1425F0C();
  v14 = v18;
  sub_1C13A5F94(a1, v18);
  v15 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v2;
  sub_1C13A6128(v14, v16 + v15);
  swift_retain();
  sub_1C1425F00();
  swift_release();
  os_unfair_lock_unlock(v19);
}

uint64_t sub_1C13A5124(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  _QWORD v15[2];
  uint64_t (*v16)(_QWORD);

  v8 = type metadata accessor for Assertion();
  v9 = MEMORY[0x1E0C80A78](v8);
  v10 = *(_QWORD *)(a3 + 40);
  if (v10)
  {
    v15[1] = a2;
    v16 = a1;
    MEMORY[0x1E0C80A78](v9);
    v15[-2] = a4;
    type metadata accessor for ActivityDatabase.MutableStore();
    swift_allocObject();
    v11 = sub_1C134B4D0();
    v12 = *(os_unfair_lock_s **)(*(_QWORD *)(v10 + 96) + 16);
    swift_retain();
    os_unfair_lock_lock(v12);
    MEMORY[0x1E0C80A78](v13);
    v15[-4] = sub_1C13A61E0;
    v15[-3] = &v15[-4];
    v15[-2] = v11;
    sub_1C1425258();
    os_unfair_lock_unlock(v12);
    swift_release();
    sub_1C1341CC8();
    v9 = swift_release();
    a1 = v16;
  }
  return a1(v9);
}

void sub_1C13A54F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED797768);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C1425CC0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = *(os_unfair_lock_s **)(*(_QWORD *)(v2 + 32) + 16);
  os_unfair_lock_lock(v10);
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v11((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  v12 = type metadata accessor for Assertion();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
  swift_beginAccess();
  sub_1C13B37EC((uint64_t)v6, (uint64_t)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_endAccess();
  sub_1C1425F0C();
  v11((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  v13 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v2;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v14 + v13, (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  swift_retain();
  sub_1C1425F00();
  swift_release();
  os_unfair_lock_unlock(v10);
}

uint64_t sub_1C13A56C4(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  _QWORD v16[4];
  uint64_t (*v17)(_QWORD);

  v8 = sub_1C1425CC0();
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = *(_QWORD *)(a3 + 40);
  if (v11)
  {
    v16[3] = a2;
    v17 = a1;
    v16[1] = v10;
    v16[2] = v16;
    MEMORY[0x1E0C80A78](v9);
    v16[-2] = a4;
    type metadata accessor for ActivityDatabase.MutableStore();
    swift_allocObject();
    v12 = sub_1C134B4D0();
    v13 = *(os_unfair_lock_s **)(*(_QWORD *)(v11 + 96) + 16);
    swift_retain();
    os_unfair_lock_lock(v13);
    MEMORY[0x1E0C80A78](v14);
    v16[-4] = sub_1C13A5F6C;
    v16[-3] = &v16[-4];
    v16[-2] = v12;
    sub_1C1425258();
    os_unfair_lock_unlock(v13);
    swift_release();
    sub_1C1341CC8();
    v9 = swift_release();
    a1 = v17;
  }
  return a1(v9);
}

void sub_1C13A5AB0()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)(v0 + 32) + 16);
  os_unfair_lock_lock(v1);
  v2 = *(_QWORD *)(v0 + 16);
  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = MEMORY[0x1E0DEE9E0];
  swift_bridgeObjectRelease();
  sub_1C1425F0C();
  swift_retain();
  sub_1C1425F00();
  swift_release();
  os_unfair_lock_unlock(v1);
}

uint64_t sub_1C13A5B6C(uint64_t (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a3 + 40);
  if (v4)
  {
    type metadata accessor for ActivityDatabase.MutableStore();
    swift_allocObject();
    sub_1C134B4D0();
    v5 = *(os_unfair_lock_s **)(*(_QWORD *)(v4 + 96) + 16);
    swift_retain();
    os_unfair_lock_lock(v5);
    MEMORY[0x1E0C80A78](v6);
    sub_1C1425258();
    os_unfair_lock_unlock(v5);
    swift_release();
    sub_1C1341CC8();
    swift_release();
  }
  return a1();
}

uint64_t sub_1C13A5E3C()
{
  return sub_1C134B0FC();
}

void sub_1C13A5E5C(uint64_t a1)
{
  sub_1C13A4F20(a1);
}

void sub_1C13A5E7C(uint64_t a1)
{
  sub_1C13A54F0(a1);
}

void sub_1C13A5E9C()
{
  sub_1C13A5AB0();
}

uint64_t sub_1C13A5EBC(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v2;

  return sub_1C13A5B6C(a1, a2, v2);
}

uint64_t sub_1C13A5EC4()
{
  uint64_t v0;

  return sub_1C1341E00(*(void (**)(uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32)) & 1;
}

uint64_t sub_1C13A5EE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1C1425CC0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1C13A5F58(uint64_t a1, uint64_t a2)
{
  return sub_1C13A6180(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0D8CB40], (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))sub_1C13A56C4);
}

uint64_t sub_1C13A5F6C()
{
  return sub_1C134AE94();
}

uint64_t sub_1C13A5F94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Assertion();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C13A5FD8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = (int *)type metadata accessor for Assertion();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_release();
  v3 = v0 + ((v2 + 24) & ~v2);
  v4 = sub_1C1425CC0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v3 + v1[5];
  v6 = sub_1C1425DF8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v3 + v1[6];
  v8 = sub_1C1425CFC();
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  swift_bridgeObjectRelease();
  v10 = v3 + v1[8];
  v11 = sub_1C14251B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = v3 + v1[10];
  v13 = sub_1C1425E4C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  return swift_deallocObject();
}

uint64_t sub_1C13A6128(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Assertion();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C13A616C(uint64_t a1, uint64_t a2)
{
  return sub_1C13A6180(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for Assertion, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))sub_1C13A5124);
}

uint64_t sub_1C13A6180(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(uint64_t, uint64_t, _QWORD, uint64_t))
{
  uint64_t v4;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(a3(0) - 8) + 80);
  return a4(a1, a2, *(_QWORD *)(v4 + 16), v4 + ((v7 + 24) & ~v7));
}

uint64_t sub_1C13A61E0()
{
  uint64_t v0;

  return sub_1C134A678(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1C13A6208(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Assertion();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C13A6244(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Assertion();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C13A6288()
{
  return sub_1C13A5EC4() & 1;
}

uint64_t sub_1C13A62A0()
{
  uint64_t v0;

  sub_1C1339040(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CountEnforcerParticipant()
{
  return objc_opt_self();
}

uint64_t sub_1C13A62F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v4;

  v4 = *(os_unfair_lock_s **)(*(_QWORD *)(v2 + 88) + 16);
  os_unfair_lock_lock(v4);
  *(_QWORD *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  os_unfair_lock_unlock(v4);
  return swift_unknownObjectRelease();
}

uint64_t sub_1C13A6348(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t result;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void (*v35)(char *, unint64_t, uint64_t);
  uint64_t v36;
  int v37;
  uint64_t v38;
  void (*v39)(char *, unint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  os_unfair_lock_s *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int *v69;
  uint64_t *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  _QWORD *v89;
  size_t v90;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(char *, unint64_t, uint64_t);
  uint64_t *v107;
  NSObject *v108;
  os_log_type_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  NSObject *v115;
  os_log_type_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  NSObject *v126;
  os_log_type_t v127;
  uint8_t *v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  __int128 v134;
  uint64_t v135;
  __int128 v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t *v150;
  _QWORD *v151;
  uint64_t v152;
  uint64_t *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161[2];

  v145 = a2;
  v3 = sub_1C1425630();
  MEMORY[0x1E0C80A78](v3);
  v142 = (char *)&v132 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v141 = type metadata accessor for ActivityParticipantEvent(0);
  MEMORY[0x1E0C80A78](v141);
  v144 = (char *)&v132 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Activity();
  v143 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v140 = (uint64_t *)((char *)&v132 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = MEMORY[0x1E0C80A78](v7);
  v138 = (uint64_t)&v132 - v10;
  MEMORY[0x1E0C80A78](v9);
  v150 = (uint64_t *)((char *)&v132 - v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797560);
  v13 = MEMORY[0x1E0C80A78](v12);
  v146 = (uint64_t)&v132 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v147 = (uint64_t)&v132 - v16;
  MEMORY[0x1E0C80A78](v15);
  v152 = (uint64_t)&v132 - v17;
  v18 = type metadata accessor for ActivityManagerEvent(0);
  v19 = MEMORY[0x1E0C80A78](v18);
  v133 = (uint64_t)&v132 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v148 = (char *)&v132 - v21;
  v22 = sub_1C1425AEC();
  v155 = *(_QWORD *)(v22 - 8);
  v156 = v22;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v132 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1C1425558();
  v26 = MEMORY[0x1E0C80A78](v25);
  v149 = (char *)&v132 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v30 = (char *)&v132 - v29;
  v153 = a1;
  v154 = v6;
  result = *(uint64_t *)((char *)a1 + *(int *)(v6 + 28));
  v32 = *(_QWORD *)(result + 16);
  v157 = v25;
  v159 = v28;
  if (!v32)
    goto LABEL_52;
  v139 = v18;
  v33 = result + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
  v34 = *(_QWORD *)(v28 + 72);
  v35 = *(void (**)(char *, unint64_t, uint64_t))(v28 + 16);
  v36 = *MEMORY[0x1E0C8F788];
  v137 = (_QWORD *)result;
  swift_bridgeObjectRetain();
  v37 = 0;
  do
  {
    v35(v30, v33, v25);
    v45 = v159;
    if ((*(unsigned int (**)(char *, uint64_t))(v159 + 88))(v30, v25) == (_DWORD)v36)
    {
      (*(void (**)(char *, uint64_t))(v45 + 96))(v30, v25);
      LODWORD(v158) = v37;
      v38 = v36;
      v39 = v35;
      v40 = v34;
      v41 = v155;
      v42 = v156;
      (*(void (**)(char *, char *, uint64_t))(v155 + 32))(v24, v30, v156);
      v43 = sub_1C1425A5C();
      v44 = *(void (**)(char *, uint64_t))(v41 + 8);
      v34 = v40;
      v35 = v39;
      v36 = v38;
      LODWORD(v38) = v158;
      v44(v24, v42);
      v37 = v43 | v38;
      v25 = v157;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v45 + 8))(v30, v25);
    }
    v33 += v34;
    --v32;
  }
  while (v32);
  result = swift_bridgeObjectRelease();
  a1 = v153;
  v18 = v139;
  if ((v37 & 1) == 0)
  {
LABEL_52:
    if (!*((_BYTE *)a1 + *(int *)(v18 + 20)))
    {
      v46 = *a1;
      v47 = a1[1];
      v48 = v145;
      v49 = *(os_unfair_lock_s **)(*(_QWORD *)(v145 + 16) + 16);
      os_unfair_lock_lock(v49);
      v50 = v151;
      v51 = swift_retain();
      sub_1C1372574(v51, v46, v47, v48);
      swift_release();
      os_unfair_lock_unlock(v49);
      v52 = v50[7];
      v53 = v50[8];
      v54 = __swift_project_boxed_opaque_existential_1(v50 + 4, v52);
      v132 = (uint64_t)&v132;
      v55 = *(_QWORD *)(v52 - 8);
      MEMORY[0x1E0C80A78](v54);
      v57 = (char *)&v132 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v55 + 16))(v57);
      v58 = (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 8))(v52, v53);
      v59 = (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v57, v52);
      MEMORY[0x1E0C80A78](v59);
      *(&v132 - 2) = (uint64_t)a1;
      v60 = sub_1C133085C((uint64_t)sub_1C13A78E0, (uint64_t)(&v132 - 4), v58);
      swift_bridgeObjectRelease();
      v61 = *(_QWORD *)(v60 + 16);
      v155 = v50[10];
      if (v155 < v61)
      {
        if (qword_1ED793948 != -1)
LABEL_49:
          swift_once();
        v139 = sub_1C1426854();
        v137 = v144 + 16;
        *(_QWORD *)&v62 = 136380675;
        v136 = v62;
        v135 = MEMORY[0x1E0DEE9B8] + 8;
        *(_QWORD *)&v62 = 136446210;
        v134 = v62;
        v63 = v143;
        v64 = v150;
        v65 = (uint64_t)v148;
        v66 = v157;
        while (1)
        {
          v77 = __swift_project_value_buffer(v139, (uint64_t)qword_1ED798598);
          sub_1C1338F24((uint64_t)a1, v65, type metadata accessor for ActivityManagerEvent);
          v158 = v77;
          v78 = sub_1C1426848();
          v79 = sub_1C1426C80();
          if (os_log_type_enabled(v78, v79))
          {
            v80 = swift_slowAlloc();
            v81 = swift_slowAlloc();
            v161[0] = v81;
            *(_DWORD *)v80 = v136;
            v82 = sub_1C14259E4();
            *(_QWORD *)(v80 + 4) = sub_1C132AD90(v82, v83, v161);
            swift_bridgeObjectRelease();
            sub_1C1339004(v65, type metadata accessor for ActivityManagerEvent);
            _os_log_impl(&dword_1C1324000, v78, v79, "Target has too many activities: %{private}s", (uint8_t *)v80, 0xCu);
            swift_arrayDestroy();
            v84 = v81;
            a1 = v153;
            MEMORY[0x1C3BAD3F4](v84, -1, -1);
            v85 = v80;
            v66 = v157;
            MEMORY[0x1C3BAD3F4](v85, -1, -1);
          }
          else
          {
            sub_1C1339004(v65, type metadata accessor for ActivityManagerEvent);
          }

          v86 = *(_QWORD *)(v60 + 16);
          if (v86)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7931A8);
            v87 = *(_QWORD *)(v63 + 72);
            v88 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
            v89 = (_QWORD *)swift_allocObject();
            v90 = _swift_stdlib_malloc_size(v89);
            if (!v87)
            {
              __break(1u);
LABEL_47:
              __break(1u);
LABEL_48:
              __break(1u);
              goto LABEL_49;
            }
            if (v90 - v88 == 0x8000000000000000 && v87 == -1)
              goto LABEL_48;
            v89[2] = v86;
            v89[3] = 2 * ((uint64_t)(v90 - v88) / v87);
            v92 = sub_1C136F0EC(v161, (uint64_t)v89 + v88, v86, v60);
            a1 = (uint64_t *)v161[1];
            swift_bridgeObjectRetain_n();
            sub_1C133F908();
            if (v92 != v86)
              goto LABEL_47;
            swift_bridgeObjectRelease();
            a1 = v153;
            v93 = v154;
            v64 = v150;
            v66 = v157;
          }
          else
          {
            v89 = (_QWORD *)MEMORY[0x1E0DEE9D8];
            v93 = v154;
          }
          v94 = v152;
          sub_1C13A7384((uint64_t)v89, v152);
          swift_release();
          v95 = v94;
          v96 = v147;
          sub_1C132C344(v95, v147, &qword_1ED797560);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v96, 1, v93) == 1)
            break;
          sub_1C13A78FC(v96, (uint64_t)v64);
          v97 = *v64;
          v98 = v64[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v99 = sub_1C13277A0(v97, v98);
          LOBYTE(v97) = v100;
          swift_bridgeObjectRelease();
          if ((v97 & 1) != 0)
          {
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v161[0] = v60;
            if (!isUniquelyReferenced_nonNull_native)
            {
              sub_1C13BA274();
              v60 = v161[0];
            }
            swift_bridgeObjectRelease();
            v102 = v146;
            sub_1C13A78FC(*(_QWORD *)(v60 + 56) + *(_QWORD *)(v63 + 72) * v99, v146);
            sub_1C13C097C(v99, v60);
            swift_bridgeObjectRelease();
            v103 = 0;
          }
          else
          {
            v103 = 1;
            v102 = v146;
          }
          v104 = v154;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 56))(v102, v103, 1, v154);
          swift_bridgeObjectRelease();
          sub_1C132C860(v102, &qword_1ED797560);
          v105 = *(uint64_t *)((char *)v64 + *(int *)(v104 + 28));
          if (*(_QWORD *)(v105 + 16))
          {
            v156 = v60;
            v106 = *(void (**)(char *, unint64_t, uint64_t))(v159 + 16);
            v106(v149, v105 + ((*(unsigned __int8 *)(v159 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v159 + 80)), v66);
            v107 = v140;
            sub_1C1338F24((uint64_t)v64, (uint64_t)v140, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
            v108 = sub_1C1426848();
            v109 = sub_1C1426C80();
            if (os_log_type_enabled(v108, v109))
            {
              v110 = swift_slowAlloc();
              v111 = swift_slowAlloc();
              v161[0] = v111;
              *(_DWORD *)v110 = v134;
              v112 = *v107;
              v113 = v107[1];
              swift_bridgeObjectRetain();
              *(_QWORD *)(v110 + 4) = sub_1C132AD90(v112, v113, v161);
              swift_bridgeObjectRelease();
              sub_1C1339004((uint64_t)v107, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
              _os_log_impl(&dword_1C1324000, v108, v109, "Ending zombie session: %{public}s", (uint8_t *)v110, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x1C3BAD3F4](v111, -1, -1);
              MEMORY[0x1C3BAD3F4](v110, -1, -1);
            }
            else
            {
              sub_1C1339004((uint64_t)v107, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
            }

            v64 = v150;
            v68 = *v150;
            v67 = v150[1];
            v69 = (int *)v141;
            v70 = (uint64_t *)v144;
            swift_bridgeObjectRetain();
            sub_1C1425624();
            sub_1C1425570();
            type metadata accessor for ActivityParticipantEvent.EventType(0);
            swift_storeEnumTagMultiPayload();
            v71 = v149;
            v72 = v157;
            v106((char *)v70 + v69[7], (unint64_t)v149, v157);
            v73 = (char *)v70 + v69[9];
            v74 = sub_1C1425450();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v73, 1, 1, v74);
            *v70 = v68;
            v70[1] = v67;
            v66 = v72;
            v75 = v137;
            *v137 = 0;
            v75[1] = 0;
            v76 = (uint64_t *)((char *)v70 + v69[8]);
            *v76 = v151;
            v76[1] = &off_1E7A8C690;
            *((_BYTE *)v70 + v69[10]) = 0;
            swift_retain();
            sub_1C13D0788((uint64_t)v70);
            sub_1C1339004((uint64_t)v70, type metadata accessor for ActivityParticipantEvent);
            (*(void (**)(char *, uint64_t))(v159 + 8))(v71, v72);
            sub_1C1339004((uint64_t)v64, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
            sub_1C132C860(v152, &qword_1ED797560);
            v63 = v143;
            a1 = v153;
            v60 = v156;
          }
          else
          {
            v114 = v138;
            sub_1C1338F24((uint64_t)v64, v138, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
            v115 = sub_1C1426848();
            v116 = sub_1C1426C68();
            if (os_log_type_enabled(v115, v116))
            {
              v117 = swift_slowAlloc();
              v118 = (uint64_t *)v114;
              v119 = swift_slowAlloc();
              v161[0] = v119;
              *(_DWORD *)v117 = v134;
              v120 = *v118;
              v121 = v118[1];
              swift_bridgeObjectRetain();
              *(_QWORD *)(v117 + 4) = sub_1C132AD90(v120, v121, v161);
              swift_bridgeObjectRelease();
              v122 = (uint64_t)v118;
              v64 = v150;
              sub_1C1339004(v122, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
              _os_log_impl(&dword_1C1324000, v115, v116, "No sources exist for zombie activity: %{public}s", (uint8_t *)v117, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x1C3BAD3F4](v119, -1, -1);
              v123 = v117;
              v66 = v157;
              MEMORY[0x1C3BAD3F4](v123, -1, -1);

            }
            else
            {

              sub_1C1339004(v114, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
            }
            sub_1C1339004((uint64_t)v64, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
            sub_1C132C860(v152, &qword_1ED797560);
          }
          v65 = (uint64_t)v148;
          if (v155 >= *(_QWORD *)(v60 + 16))
            return swift_bridgeObjectRelease();
        }
        sub_1C132C860(v96, &qword_1ED797560);
        v124 = (uint64_t)a1;
        v125 = v133;
        sub_1C1338F24(v124, v133, type metadata accessor for ActivityManagerEvent);
        v126 = sub_1C1426848();
        v127 = sub_1C1426C74();
        if (os_log_type_enabled(v126, v127))
        {
          v128 = (uint8_t *)swift_slowAlloc();
          v129 = swift_slowAlloc();
          v161[0] = v129;
          *(_DWORD *)v128 = v136;
          v130 = sub_1C14259E4();
          v160 = sub_1C132AD90(v130, v131, v161);
          sub_1C1426DB8();
          swift_bridgeObjectRelease();
          sub_1C1339004(v125, type metadata accessor for ActivityManagerEvent);
          _os_log_impl(&dword_1C1324000, v126, v127, "Target has too many active sessions: %{private}s", v128, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3BAD3F4](v129, -1, -1);
          MEMORY[0x1C3BAD3F4](v128, -1, -1);

        }
        else
        {

          sub_1C1339004(v125, type metadata accessor for ActivityManagerEvent);
        }
        sub_1C132C860(v152, &qword_1ED797560);
      }
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1C13A71EC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void);
  uint64_t v22;
  uint64_t v23;

  v23 = a3;
  v5 = sub_1C1425A08();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (uint64_t *)((char *)&v22 - v13);
  v15 = *a1;
  v16 = a1[1];
  v17 = (char *)&v22 + *(int *)(v12 + 48) - v13;
  *v14 = v15;
  v14[1] = v16;
  sub_1C1338F24(a2, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
  v18 = (uint64_t)v11 + *(int *)(v8 + 48);
  *v11 = v15;
  v11[1] = v16;
  sub_1C1338F24((uint64_t)v17, v18, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
  v19 = type metadata accessor for Activity();
  v20 = MEMORY[0x1E0C8FFB8];
  sub_1C1338F24(v18 + *(int *)(v19 + 24), (uint64_t)v7, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
  swift_bridgeObjectRetain();
  sub_1C1339004(v18, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
  LOBYTE(v15) = MEMORY[0x1C3BAB6CC](v7, v23 + *(int *)(v19 + 24));
  sub_1C1339004((uint64_t)v7, (uint64_t (*)(_QWORD))v20);
  sub_1C132C860((uint64_t)v14, &qword_1ED7939D8);
  return v15 & 1;
}

uint64_t sub_1C13A7384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  char v43;
  void (*v44)(char *, uint64_t);
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  void (*v59)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797560);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B60);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_1C14253E4();
  v65 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v64 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_1C14251B0();
  v11 = *(_QWORD *)(v68 - 8);
  v12 = MEMORY[0x1E0C80A78](v68);
  v57 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v62 = (char *)&v53 - v15;
  MEMORY[0x1E0C80A78](v14);
  v58 = (char *)&v53 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Activity();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x1E0C80A78](v20);
  v61 = (uint64_t)&v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v53 - v24;
  v26 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v21 + 56);
  v70 = a2;
  v59 = v26;
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v26)(a2, 1, 1, v20);
  v28 = *(_QWORD *)(a1 + 16);
  if (v28)
  {
    v67 = v11;
    v29 = a1 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
    v69 = *(_QWORD *)(v21 + 72);
    v53 = a1;
    swift_bridgeObjectRetain();
    v60 = v21;
    v54 = v9;
    v55 = v6;
    v56 = v19;
    v66 = v20;
    while (1)
    {
      sub_1C1338F24(v29, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      sub_1C132C344((uint64_t)&v25[*(int *)(v20 + 48)], (uint64_t)v19, &qword_1ED7935E8);
      v31 = sub_1C142557C();
      v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v19, 1, v31);
      sub_1C132C860((uint64_t)v19, &qword_1ED7935E8);
      if (v32 == 1)
        break;
      sub_1C132C344(v70, (uint64_t)v6, &qword_1ED797560);
      v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v60 + 48);
      if (v38((uint64_t)v6, 1, v20) == 1)
      {
        sub_1C132C860((uint64_t)v6, &qword_1ED797560);
        v30 = v70;
        sub_1C132C860(v70, &qword_1ED797560);
        sub_1C13A78FC((uint64_t)v25, v30);
        v59(v30, 0, 1, v20);
      }
      else
      {
        v39 = v70;
        v40 = v6;
        sub_1C13A78FC((uint64_t)v6, v61);
        result = v38(v39, 1, v20);
        if ((_DWORD)result == 1)
        {
          __break(1u);
          return result;
        }
        v41 = v62;
        sub_1C1425438();
        v42 = v57;
        sub_1C1425438();
        v43 = sub_1C1425150();
        v44 = *(void (**)(char *, uint64_t))(v67 + 8);
        v45 = v42;
        v46 = v68;
        v44(v45, v68);
        v44(v41, v46);
        sub_1C1339004((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        if ((v43 & 1) == 0)
        {
          sub_1C1339004(v61, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
          v6 = v40;
          v9 = v54;
LABEL_14:
          v20 = v66;
          goto LABEL_4;
        }
        sub_1C132C860(v39, &qword_1ED797560);
        sub_1C13A78FC(v61, v39);
        v20 = v66;
        v59(v39, 0, 1, v66);
        v6 = v40;
        v9 = v54;
      }
LABEL_4:
      v29 += v69;
      if (!--v28)
        return swift_bridgeObjectRelease();
    }
    v33 = (uint64_t)v9;
    v34 = v64;
    sub_1C142542C();
    sub_1C14253D8();
    v35 = v34;
    v9 = (char *)v33;
    (*(void (**)(char *, uint64_t))(v65 + 8))(v35, v63);
    v37 = v67;
    v36 = v68;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v33, 1, v68) == 1)
    {
      sub_1C132C860(v33, &qword_1ED793B60);
    }
    else
    {
      v47 = v58;
      (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v58, v33, v36);
      v48 = v62;
      sub_1C142518C();
      sub_1C1425150();
      v49 = v36;
      v50 = *(void (**)(char *, uint64_t))(v37 + 8);
      v50(v48, v49);
      v51 = v47;
      v6 = v55;
      v19 = v56;
      v52 = v49;
      v9 = (char *)v33;
      v50(v51, v52);
    }
    sub_1C1339004((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_1C13A78E0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C13A71EC(a1, a2, *(_QWORD *)(v2 + 16)) & 1;
}

uint64_t sub_1C13A78FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Activity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C13A7940(void (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  void (*v32)(uint64_t *, _QWORD, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t ObjectType;
  char *v36;
  void (*v37)(uint64_t *, uint64_t);
  _QWORD *v38;
  uint64_t v39;
  void *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  _QWORD aBlock[7];

  v55 = a3;
  v53 = a2;
  v51 = a1;
  v6 = sub_1C1426950();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C14269B0();
  v56 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v54 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1C14269EC();
  v49 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v48 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v43 - v15;
  v59 = sub_1C1426944();
  v52 = *(_QWORD *)(v59 - 8);
  v17 = MEMORY[0x1E0C80A78](v59);
  v19 = (uint64_t *)((char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = MEMORY[0x1E0C80A78](v17);
  v50 = (char *)&v43 - v21;
  MEMORY[0x1E0C80A78](v20);
  v58 = (uint64_t *)((char *)&v43 - v22);
  v23 = sub_1C1426D1C();
  v47 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v43 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v4 + 24) + 16));
  v26 = a4 * 1000000.0;
  if ((~COERCE__INT64(a4 * 1000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v26 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v26 >= 9.22337204e18)
  {
LABEL_12:
    __break(1u);
    return;
  }
  v57 = v12;
  v44 = v9;
  if ((uint64_t)v26 >= 0x7FFFFFFF)
    v27 = 0x7FFFFFFFLL;
  else
    v27 = (uint64_t)v26;
  sub_1C13A8070();
  v46 = v6;
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1C1329AD0(&qword_1EF6DB9F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF938], MEMORY[0x1E0DEF948]);
  v43 = v7;
  v45 = v10;
  v28 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DB9F8);
  sub_1C1331140((unint64_t *)&unk_1EF6DBA00, &qword_1EF6DB9F8);
  sub_1C1426DF4();
  v29 = sub_1C1426D28();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v25, v23);
  v30 = v58;
  *v58 = v27;
  v31 = v52;
  v32 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v52 + 104);
  v33 = v59;
  v32(v30, *MEMORY[0x1E0DEF488], v59);
  v34 = v48;
  sub_1C14269E0();
  MEMORY[0x1C3BAC6E0](v34, v30);
  v51 = *(void (**)(char *, uint64_t))(v49 + 8);
  v51(v34, v57);
  ObjectType = swift_getObjectType();
  v36 = v50;
  v32((uint64_t *)v50, *MEMORY[0x1E0DEF498], v33);
  *v19 = 0;
  v32(v19, *MEMORY[0x1E0DEF480], v33);
  MEMORY[0x1C3BACA40](v16, v36, v19, ObjectType);
  v37 = *(void (**)(uint64_t *, uint64_t))(v31 + 8);
  v37(v19, v33);
  v37((uint64_t *)v36, v33);
  v38 = (_QWORD *)swift_allocObject();
  v39 = v53;
  v38[2] = v28;
  v38[3] = v39;
  v38[4] = v55;
  aBlock[4] = sub_1C13A80D8;
  aBlock[5] = v38;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C13A7F4C;
  aBlock[3] = &block_descriptor_13;
  v40 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  v41 = v54;
  sub_1C1426974();
  v42 = v44;
  sub_1C13A7F78();
  sub_1C1426D34();
  _Block_release(v40);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v46);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v41, v45);
  swift_release();
  *(_QWORD *)(v28 + 16) = v29;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  if (*(_QWORD *)(v28 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1C1426D4C();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRelease();
  v51(v16, v57);
  v37(v58, v59);
}

uint64_t sub_1C13A7E9C(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  os_unfair_lock_s *v4;
  uint64_t v5;

  v4 = *(os_unfair_lock_s **)(*(_QWORD *)(a1 + 24) + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(a1 + 24) + 16));
  if (*(_QWORD *)(a1 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1C1426D40();
    swift_unknownObjectRelease();
    *(_QWORD *)(a1 + 16) = 0;
    swift_unknownObjectRelease();
  }
  os_unfair_lock_unlock(v4);
  v5 = swift_release();
  return a2(v5);
}

uint64_t sub_1C13A7F4C(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_1C13A7F78()
{
  sub_1C1426950();
  sub_1C1329AD0((unint64_t *)&qword_1ED7979D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A50);
  sub_1C1331140((unint64_t *)&qword_1ED797A60, (uint64_t *)&unk_1ED797A50);
  return sub_1C1426DF4();
}

uint64_t sub_1C13A8024()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AssertionExpirationTimer()
{
  return objc_opt_self();
}

unint64_t sub_1C13A8070()
{
  unint64_t result;

  result = qword_1EF6DB9E8;
  if (!qword_1EF6DB9E8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF6DB9E8);
  }
  return result;
}

uint64_t sub_1C13A80AC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C13A80D8()
{
  uint64_t v0;

  return sub_1C13A7E9C(*(_QWORD *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

uint64_t dispatch thunk of AlertServiceDelegate.dismissAlert(activityIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

id sub_1C13A80EC(void *a1)
{
  objc_msgSend(a1, sel_selector);
  if ((sub_1C142524C() & 1) != 0)
    return objc_msgSend(a1, sel_copyAsOnewayVoid);
  else
    return a1;
}

uint64_t sub_1C13A8140(void *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _DWORD *v11;
  id v12;
  objc_class *v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  char *v18;
  id v19;
  uint64_t result;
  void *v21;
  uint64_t v22;
  id v23;
  char v24;
  id v25;
  _QWORD aBlock[6];
  objc_super v27;

  v23 = a1;
  v22 = sub_1C1426CD4();
  v2 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C1426C8C();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v5);
  v7 = sub_1C14269B0();
  MEMORY[0x1E0C80A78](v7);
  *(_QWORD *)&v1[OBJC_IVAR____TtC11SessionCore18AlertServiceServer_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v1[OBJC_IVAR____TtC11SessionCore18AlertServiceServer_listener] = 0;
  v8 = OBJC_IVAR____TtC11SessionCore18AlertServiceServer_lock;
  type metadata accessor for UnfairLock();
  v9 = swift_allocObject();
  v10 = v1;
  v11 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v9 + 16) = v11;
  *v11 = 0;
  *(_QWORD *)&v1[v8] = v9;
  *(_QWORD *)&v10[OBJC_IVAR____TtC11SessionCore18AlertServiceServer__lock_clients] = MEMORY[0x1E0DEE9E8];
  sub_1C1330F6C();
  sub_1C1426998();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1C1329AD0((unint64_t *)&qword_1ED7939F0, v6, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A70);
  sub_1C1331140((unint64_t *)&qword_1ED797A80, (uint64_t *)&unk_1ED797A70);
  sub_1C1426DF4();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEF8D8], v22);
  v12 = v23;
  *(_QWORD *)&v10[OBJC_IVAR____TtC11SessionCore18AlertServiceServer_queue] = sub_1C1426D04();

  v13 = (objc_class *)type metadata accessor for AlertServiceServer();
  v27.receiver = v10;
  v27.super_class = v13;
  v14 = objc_msgSendSuper2(&v27, sel_init);
  v25 = v14;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_1C13AAAB4;
  *(_QWORD *)(v15 + 24) = &v24;
  aBlock[4] = sub_1C1327D4C;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1327D10;
  aBlock[3] = &block_descriptor_50;
  v16 = _Block_copy(aBlock);
  v17 = (void *)objc_opt_self();
  v18 = (char *)v14;
  swift_retain();
  v19 = objc_msgSend(v17, sel_listenerWithConfigurator_, v16);
  _Block_release(v16);
  swift_release();
  LOBYTE(v16) = swift_isEscapingClosureAtFileLocation();

  result = swift_release();
  if ((v16 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v21 = *(void **)&v18[OBJC_IVAR____TtC11SessionCore18AlertServiceServer_listener];
    *(_QWORD *)&v18[OBJC_IVAR____TtC11SessionCore18AlertServiceServer_listener] = v19;

    return (uint64_t)v18;
  }
  return result;
}

id sub_1C13A84C0(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v10;

  v4 = sub_1C1425EDC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  sub_1C1425B58();
  sub_1C1426D70();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1C1425B4C();
  v8 = (void *)sub_1C1426A7C();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setService_, v8);

  return objc_msgSend(a1, sel_setDelegate_, a2);
}

void sub_1C13A85A0(void *a1, void *a2, uint64_t a3)
{
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;

  sub_1C1425B4C();
  v6 = (void *)sub_1C1426A7C();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithIdentifier_, v6);

  v27 = sub_1C13A80EC;
  v28 = 0;
  v8 = MEMORY[0x1E0C809B0];
  v23 = MEMORY[0x1E0C809B0];
  v24 = 1107296256;
  v25 = sub_1C13284C8;
  v26 = &block_descriptor_28;
  v9 = _Block_copy(&v23);
  v10 = &unk_1EF6E0868;
  swift_release();
  v11 = (void *)objc_opt_self();
  v12 = objc_msgSend(v11, sel_protocolForProtocol_interpreter_, v10, v9);

  _Block_release(v9);
  objc_msgSend(v7, sel_setClient_, v12);

  v13 = objc_msgSend(v11, sel_protocolForProtocol_, &unk_1EF6E0908);
  objc_msgSend(v7, sel_setServer_, v13);

  v14 = objc_msgSend((id)objc_opt_self(), sel_userInteractive);
  objc_msgSend(a1, sel_setServiceQuality_, v14);

  objc_msgSend(a1, sel_setInterface_, v7);
  objc_msgSend(a1, sel_setInterfaceTarget_, a2);
  objc_msgSend(a1, sel_setTargetQueue_, *(_QWORD *)(a3 + OBJC_IVAR____TtC11SessionCore18AlertServiceServer_queue));
  v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = a2;
  v27 = sub_1C13AAA70;
  v28 = v16;
  v23 = v8;
  v24 = 1107296256;
  v25 = sub_1C141AFCC;
  v26 = &block_descriptor_37;
  v17 = _Block_copy(&v23);
  v18 = a2;
  swift_release();
  objc_msgSend(a1, sel_setInterruptionHandler_, v17);
  _Block_release(v17);
  v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v19;
  *(_QWORD *)(v20 + 24) = v18;
  v27 = sub_1C13AAA94;
  v28 = v20;
  v23 = v8;
  v24 = 1107296256;
  v25 = sub_1C141AFCC;
  v26 = &block_descriptor_44_0;
  v21 = _Block_copy(&v23);
  v22 = v18;
  swift_release();
  objc_msgSend(a1, sel_setInvalidationHandler_, v21);
  _Block_release(v21);

}

void sub_1C13A88E0(uint64_t a1, uint64_t a2, void *a3, const char *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  void *v16;
  os_unfair_lock_s *v17;
  void *v18;
  _BYTE v19[24];

  v7 = sub_1C1426854();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = a2 + 16;
  sub_1C142683C();
  v12 = sub_1C1426848();
  v13 = sub_1C1426C68();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v14 = 0;
    _os_log_impl(&dword_1C1324000, v12, v13, a4, v14, 2u);
    MEMORY[0x1C3BAD3F4](v14, -1, -1);
  }

  (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
  swift_beginAccess();
  v15 = MEMORY[0x1C3BAD4B4](v11);
  if (v15)
  {
    v16 = (void *)v15;
    v17 = *(os_unfair_lock_s **)(*(_QWORD *)(v15 + OBJC_IVAR____TtC11SessionCore18AlertServiceServer_lock) + 16);
    os_unfair_lock_lock(v17);
    swift_beginAccess();
    v18 = (void *)sub_1C135437C(a3);
    swift_endAccess();
    os_unfair_lock_unlock(v17);

  }
}

id sub_1C13A8B14(uint64_t a1)
{
  return sub_1C1359EC8(a1, type metadata accessor for AlertServiceServer);
}

uint64_t type metadata accessor for AlertServiceServer()
{
  return objc_opt_self();
}

uint64_t sub_1C13A8BA8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  *(_QWORD *)(*v2 + OBJC_IVAR____TtC11SessionCore18AlertServiceServer_delegate + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void sub_1C13A8BE4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  os_unfair_lock_s *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  int64_t v25;
  unint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  _QWORD v31[14];

  v5 = sub_1C1426854();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(os_unfair_lock_s **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC11SessionCore18AlertServiceServer_lock) + 16);
  os_unfair_lock_lock(v9);
  v10 = (uint64_t *)(v2 + OBJC_IVAR____TtC11SessionCore18AlertServiceServer__lock_clients);
  swift_beginAccess();
  v11 = *v10;
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v9);
  if ((v11 & 0xC000000000000001) != 0)
  {
    if (sub_1C1426E60())
    {
      sub_1C1426E30();
      _s11SessionCore6ClientCMa_0();
      sub_1C1329AD0(&qword_1EF6DBB30, (uint64_t (*)(uint64_t))_s11SessionCore6ClientCMa_0, MEMORY[0x1E0DEFCF8]);
      sub_1C1426C2C();
      v11 = v31[9];
      v12 = v31[10];
      v13 = v31[11];
      v14 = v31[12];
      v15 = v31[13];
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)(v11 + 16))
  {
    v14 = 0;
    v16 = -1 << *(_BYTE *)(v11 + 32);
    v12 = v11 + 56;
    v13 = ~v16;
    v17 = -v16;
    if (v17 < 64)
      v18 = ~(-1 << v17);
    else
      v18 = -1;
    v15 = v18 & *(_QWORD *)(v11 + 56);
LABEL_9:
    v31[3] = v11 & 0x7FFFFFFFFFFFFFFFLL;
    v31[1] = v13;
    v19 = (unint64_t)(v13 + 64) >> 6;
    v31[2] = MEMORY[0x1E0DEE9B0] + 8;
    if (v11 < 0)
      goto LABEL_12;
    while (1)
    {
      if (v15)
      {
        v20 = (v15 - 1) & v15;
        v21 = __clz(__rbit64(v15)) | (v14 << 6);
        v22 = v14;
      }
      else
      {
        v25 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
          __break(1u);
          return;
        }
        if (v25 >= v19)
          goto LABEL_35;
        v26 = *(_QWORD *)(v12 + 8 * v25);
        v22 = v14 + 1;
        if (!v26)
        {
          v22 = v14 + 2;
          if (v14 + 2 >= v19)
            goto LABEL_35;
          v26 = *(_QWORD *)(v12 + 8 * v22);
          if (!v26)
          {
            v22 = v14 + 3;
            if (v14 + 3 >= v19)
              goto LABEL_35;
            v26 = *(_QWORD *)(v12 + 8 * v22);
            if (!v26)
            {
              v22 = v14 + 4;
              if (v14 + 4 >= v19)
                goto LABEL_35;
              v26 = *(_QWORD *)(v12 + 8 * v22);
              if (!v26)
              {
                v27 = v14 + 5;
                while (v19 != v27)
                {
                  v26 = *(_QWORD *)(v12 + 8 * v27++);
                  if (v26)
                  {
                    v22 = v27 - 1;
                    goto LABEL_28;
                  }
                }
LABEL_35:
                sub_1C133F908();
                return;
              }
            }
          }
        }
LABEL_28:
        v20 = (v26 - 1) & v26;
        v21 = __clz(__rbit64(v26)) + (v22 << 6);
      }
      v24 = *(id *)(*(_QWORD *)(v11 + 48) + 8 * v21);
      if (!v24)
        goto LABEL_35;
      while (1)
      {
        sub_1C13A92A0(a1, a2);

        v14 = v22;
        v15 = v20;
        if ((v11 & 0x8000000000000000) == 0)
          break;
LABEL_12:
        v23 = sub_1C1426E84();
        if (v23)
        {
          v31[4] = v23;
          _s11SessionCore6ClientCMa_0();
          swift_unknownObjectRetain();
          swift_dynamicCast();
          v24 = (id)v31[5];
          swift_unknownObjectRelease();
          v22 = v14;
          v20 = v15;
          if (v24)
            continue;
        }
        goto LABEL_35;
      }
    }
  }
  swift_bridgeObjectRelease();
  sub_1C142683C();
  v28 = sub_1C1426848();
  v29 = sub_1C1426C68();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v30 = 0;
    _os_log_impl(&dword_1C1324000, v28, v29, "No clients registered for alert service", v30, 2u);
    MEMORY[0x1C3BAD3F4](v30, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C13A8FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t))
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  uint64_t result;
  _BYTE *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;

  v12 = sub_1C14269F8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (uint64_t *)((char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = *(void **)(a2 + OBJC_IVAR____TtC11SessionCore18AlertServiceServer_queue);
  *v15 = v16;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DEF740], v12);
  v17 = v16;
  LOBYTE(v16) = sub_1C1426A10();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v13 + 8))(v15, v12);
  if ((v16 & 1) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  v19 = (_BYTE *)(a3 + 16);
  result = swift_beginAccess();
  if ((*v19 & 1) != 0)
    return result;
  v20 = (uint64_t *)(a4 + 16);
  result = swift_beginAccess();
  v21 = *v20 + 1;
  if (__OFADD__(*v20, 1))
  {
LABEL_12:
    __break(1u);
    return result;
  }
  *v20 = v21;
  if (!a1)
    goto LABEL_7;
  if ((a5 & 0xC000000000000001) != 0)
  {
    result = sub_1C1426E60();
    if (v21 != result)
      return result;
    goto LABEL_7;
  }
  result = *(_QWORD *)(a5 + 16);
  if (v21 == result)
  {
LABEL_7:
    swift_beginAccess();
    *v19 = 1;
    return a6(a1);
  }
  return result;
}

void sub_1C13A9254(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;

  if (a1)
    v3 = sub_1C142506C();
  else
    v3 = 0;
  v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);

}

void sub_1C13A92A0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint8_t *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  void *v23;
  _QWORD v24[2];
  void *v25;
  void *v26;
  _OWORD v27[2];
  uint64_t v28[4];

  v5 = sub_1C1426854();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v24 - v10;
  if (objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC11SessionCoreP33_353B8C47142C77ABAD422CF2B8B621406Client_connection), sel_remoteTarget))
  {
    sub_1C1426DE8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v27, 0, sizeof(v27));
  }
  sub_1C1330398((uint64_t)v27, (uint64_t)v28);
  if (v28[3])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DBB18);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v12 = a1;
      v13 = v26;
      sub_1C142683C();
      swift_bridgeObjectRetain_n();
      v14 = sub_1C1426848();
      v15 = sub_1C1426C80();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = swift_slowAlloc();
        v25 = v13;
        v17 = (uint8_t *)v16;
        v18 = swift_slowAlloc();
        v28[0] = v18;
        *(_DWORD *)v17 = 136446210;
        v24[1] = v17 + 4;
        swift_bridgeObjectRetain();
        *(_QWORD *)&v27[0] = sub_1C132AD90(v12, a2, v28);
        sub_1C1426DB8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C1324000, v14, v15, "Asking client to dismiss alert: %{public}s", v17, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v18, -1, -1);
        v19 = v17;
        v13 = v25;
        MEMORY[0x1C3BAD3F4](v19, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
      v23 = (void *)sub_1C1426A7C();
      objc_msgSend(v13, sel_dismissAlertWithActivityIdentifier_, v23);
      swift_unknownObjectRelease();

      return;
    }
  }
  else
  {
    sub_1C13A9D80((uint64_t)v28);
  }
  sub_1C142683C();
  v20 = sub_1C1426848();
  v21 = sub_1C1426C68();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v22 = 0;
    _os_log_impl(&dword_1C1324000, v20, v21, "Client does not implement expected interface", v22, 2u);
    MEMORY[0x1C3BAD3F4](v22, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1C13A95D4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5, void (*a6)(), uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  void *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  _QWORD v46[3];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  void (*v51)();
  uint64_t v52;
  void *v53;
  uint64_t aBlock;
  uint64_t v55;
  void *v56;
  void *v57;
  void (*v58)();
  uint64_t v59;
  _OWORD v60[3];

  v8 = v7;
  v51 = a6;
  v52 = a7;
  v50 = a5;
  v46[1] = a3;
  v46[2] = a4;
  v47 = a1;
  v10 = sub_1C1426950();
  v49 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_1C14269B0();
  v13 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v15 = (char *)v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1C1426854();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)v46 - v21;
  if (objc_msgSend(*(id *)(v8 + OBJC_IVAR____TtC11SessionCoreP33_353B8C47142C77ABAD422CF2B8B621406Client_connection), sel_remoteTarget))
  {
    sub_1C1426DE8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v60, 0, 32);
  }
  sub_1C1330398((uint64_t)v60, (uint64_t)&aBlock);
  if (v57)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DBB18);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v50 = v53;
      sub_1C142683C();
      swift_bridgeObjectRetain_n();
      v23 = sub_1C1426848();
      v24 = sub_1C1426C80();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc();
        v26 = swift_slowAlloc();
        aBlock = v26;
        *(_DWORD *)v25 = 136446210;
        swift_bridgeObjectRetain();
        *(_QWORD *)&v60[0] = sub_1C132AD90(v47, a2, &aBlock);
        sub_1C1426DB8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C1324000, v23, v24, "Asking client to present alert: %{public}s", v25, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v26, -1, -1);
        MEMORY[0x1C3BAD3F4](v25, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
      sub_1C1425A2C();
      sub_1C1329AD0((unint64_t *)&unk_1EF6DBB20, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FFF0], MEMORY[0x1E0C8FFE8]);
      v34 = (void *)sub_1C1425BB8();
      v35 = sub_1C14250D8();
      v37 = v36;

      v38 = (void *)sub_1C1425B7C();
      v39 = sub_1C14250D8();
      v41 = v40;

      v42 = (void *)sub_1C1426A7C();
      v43 = (void *)sub_1C14250CC();
      v44 = (void *)sub_1C14250CC();
      v58 = v51;
      v59 = v52;
      aBlock = MEMORY[0x1E0C809B0];
      v55 = 1107296256;
      v56 = sub_1C13DCF7C;
      v57 = &block_descriptor_4_0;
      v45 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      objc_msgSend(v50, sel_presentAlertWithActivityIdentifier_payload_options_completion_, v42, v43, v44, v45);
      _Block_release(v45);

      sub_1C13282B4(v39, v41);
      sub_1C13282B4(v35, v37);
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    sub_1C13A9D80((uint64_t)&aBlock);
  }
  sub_1C142683C();
  v27 = sub_1C1426848();
  v28 = sub_1C1426C68();
  if (os_log_type_enabled(v27, v28))
  {
    v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v29 = 0;
    _os_log_impl(&dword_1C1324000, v27, v28, "Client does not implement expected interface", v29, 2u);
    MEMORY[0x1C3BAD3F4](v29, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  v30 = swift_allocObject();
  v31 = v52;
  *(_QWORD *)(v30 + 16) = v51;
  *(_QWORD *)(v30 + 24) = v31;
  v58 = sub_1C13A9DE4;
  v59 = v30;
  aBlock = MEMORY[0x1E0C809B0];
  v55 = 1107296256;
  v56 = sub_1C13A7F4C;
  v57 = &block_descriptor_14;
  v32 = _Block_copy(&aBlock);
  swift_retain();
  sub_1C1426974();
  *(_QWORD *)&v60[0] = MEMORY[0x1E0DEE9D8];
  sub_1C1329AD0((unint64_t *)&qword_1ED7979D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A50);
  sub_1C1331140((unint64_t *)&qword_1ED797A60, (uint64_t *)&unk_1ED797A50);
  sub_1C1426DF4();
  MEMORY[0x1C3BAC9D4](0, v15, v12, v32);
  _Block_release(v32);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v12, v10);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v48);
  return swift_release();
}

void sub_1C13A9BD4(void (*a1)(void *))
{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  v2 = sub_1C142584C();
  sub_1C1329AD0(&qword_1ED7932F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FC80], MEMORY[0x1E0C8FC88]);
  v3 = (void *)swift_allocError();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v4, *MEMORY[0x1E0C8FC70], v2);
  a1(v3);

}

id sub_1C13A9C94()
{
  return sub_1C1359EC8(0, _s11SessionCore6ClientCMa_0);
}

uint64_t _s11SessionCore6ClientCMa_0()
{
  return objc_opt_self();
}

uint64_t sub_1C13A9D80(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797BB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C13A9DC0()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1C13A9DE4()
{
  uint64_t v0;

  sub_1C13A9BD4(*(void (**)(void *))(v0 + 16));
}

void sub_1C13A9DEC(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  void *v11;
  unsigned int v12;
  objc_class *v13;
  char *v14;
  id v15;
  char *v16;
  char *v17;
  os_unfair_lock_s *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  char *v23;
  char *v24;
  char isEscapingClosureAtFileLocation;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  _QWORD aBlock[6];
  id v30;
  objc_super v31;

  v2 = v1;
  v4 = sub_1C1426854();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)aBlock - v7;
  v9 = objc_msgSend(a1, sel_remoteProcess);
  sub_1C132F33C();

  swift_bridgeObjectRelease();
  v10 = objc_msgSend(a1, sel_remoteProcess);
  v11 = (void *)sub_1C1426A7C();
  v12 = objc_msgSend(v10, sel_hasEntitlement_, v11);

  if (v12)
  {
    v13 = (objc_class *)_s11SessionCore6ClientCMa_0();
    v14 = (char *)objc_allocWithZone(v13);
    *(_QWORD *)&v14[OBJC_IVAR____TtC11SessionCoreP33_353B8C47142C77ABAD422CF2B8B621406Client_delegate + 8] = 0;
    swift_unknownObjectWeakInit();
    *(_QWORD *)&v14[OBJC_IVAR____TtC11SessionCoreP33_353B8C47142C77ABAD422CF2B8B621406Client_connection] = a1;
    v31.receiver = v14;
    v31.super_class = v13;
    v15 = a1;
    v16 = (char *)objc_msgSendSuper2(&v31, sel_init);
    v17 = &v2[OBJC_IVAR____TtC11SessionCore18AlertServiceServer_delegate];
    MEMORY[0x1C3BAD4B4](&v2[OBJC_IVAR____TtC11SessionCore18AlertServiceServer_delegate]);
    *(_QWORD *)&v16[OBJC_IVAR____TtC11SessionCoreP33_353B8C47142C77ABAD422CF2B8B621406Client_delegate + 8] = *((_QWORD *)v17 + 1);
    swift_unknownObjectWeakAssign();
    swift_unknownObjectRelease();
    v18 = *(os_unfair_lock_s **)(*(_QWORD *)&v2[OBJC_IVAR____TtC11SessionCore18AlertServiceServer_lock] + 16);
    os_unfair_lock_lock(v18);
    swift_beginAccess();
    v19 = v16;
    sub_1C1350218(&v30, v19);
    swift_endAccess();
    os_unfair_lock_unlock(v18);

    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = v19;
    *(_QWORD *)(v20 + 24) = v2;
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = sub_1C13AAA30;
    *(_QWORD *)(v21 + 24) = v20;
    aBlock[4] = sub_1C1327D4C;
    aBlock[5] = v21;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C1327D10;
    aBlock[3] = &block_descriptor_25_1;
    v22 = _Block_copy(aBlock);
    v23 = v19;
    v24 = v2;
    swift_retain();
    swift_release();
    objc_msgSend(v15, sel_configureConnection_, v22);
    _Block_release(v22);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      objc_msgSend(v15, sel_activate);
      swift_release();

    }
  }
  else
  {
    sub_1C142683C();
    v26 = sub_1C1426848();
    v27 = sub_1C1426C68();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_1C1324000, v26, v27, "Process is not entitled to listen to the alert service", v28, 2u);
      MEMORY[0x1C3BAD3F4](v28, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    objc_msgSend(a1, sel_invalidate);
  }
}

uint64_t sub_1C13AA254(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char *a7, const void *a8)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  os_unfair_lock_s *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  int64_t v50;
  unint64_t v51;
  uint64_t v52;
  void *v53;
  _QWORD *v54;
  char *v55;
  _QWORD v56[2];
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;

  v66 = a1;
  v67 = a2;
  v10 = sub_1C1426854();
  v68 = *(_QWORD *)(v10 - 8);
  v69 = v10;
  MEMORY[0x1E0C80A78](v10);
  v64 = (char *)v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_1C1425BA0();
  v58 = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60);
  v13 = (char *)v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1C1425A2C();
  v15 = (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FFF0];
  v57 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = swift_allocObject();
  v70 = (uint64_t)a8;
  v71 = v18;
  *(_QWORD *)(v18 + 16) = a8;
  _Block_copy(a8);
  v19 = (void *)sub_1C14250CC();
  sub_1C1329AD0((unint64_t *)&unk_1EF6DBB20, v15, MEMORY[0x1E0C8FFE8]);
  v72 = v17;
  v59 = v14;
  sub_1C1425BAC();

  v20 = (void *)sub_1C14250CC();
  v73 = v13;
  sub_1C1425B88();

  v21 = *(os_unfair_lock_s **)(*(_QWORD *)&a7[OBJC_IVAR____TtC11SessionCore18AlertServiceServer_lock] + 16);
  os_unfair_lock_lock(v21);
  v65 = a7;
  v22 = (uint64_t *)&a7[OBJC_IVAR____TtC11SessionCore18AlertServiceServer__lock_clients];
  swift_beginAccess();
  v23 = *v22;
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v21);
  if ((v23 & 0xC000000000000001) != 0)
  {
    if (sub_1C1426E60())
      goto LABEL_3;
  }
  else if (*(_QWORD *)(v23 + 16))
  {
LABEL_3:
    v70 = swift_allocObject();
    *(_QWORD *)(v70 + 16) = 0;
    v24 = swift_allocObject();
    v68 = v23;
    v69 = v24;
    *(_BYTE *)(v24 + 16) = 0;
    if ((v23 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      sub_1C1426E30();
      _s11SessionCore6ClientCMa_0();
      sub_1C1329AD0(&qword_1EF6DBB30, (uint64_t (*)(uint64_t))_s11SessionCore6ClientCMa_0, MEMORY[0x1E0DEFCF8]);
      result = sub_1C1426C2C();
      v23 = v76;
      v64 = v77;
      v26 = v78;
      v27 = v79;
      v28 = v80;
    }
    else
    {
      v37 = -1 << *(_BYTE *)(v23 + 32);
      v38 = *(_QWORD *)(v23 + 56);
      v64 = (char *)(v23 + 56);
      v39 = ~v37;
      v40 = -v37;
      if (v40 < 64)
        v41 = ~(-1 << v40);
      else
        v41 = -1;
      v28 = v41 & v38;
      result = swift_bridgeObjectRetain();
      v26 = v39;
      v27 = 0;
    }
    v62 = v23 & 0x7FFFFFFFFFFFFFFFLL;
    v56[1] = v26;
    v63 = (unint64_t)(v26 + 64) >> 6;
    v61 = MEMORY[0x1E0DEE9B0] + 8;
    v42 = v65;
    v44 = v69;
    v43 = v70;
    if (v23 < 0)
      goto LABEL_16;
    while (1)
    {
      if (v28)
      {
        v45 = (v28 - 1) & v28;
        v46 = __clz(__rbit64(v28)) | (v27 << 6);
        v47 = v27;
      }
      else
      {
        v50 = v27 + 1;
        if (__OFADD__(v27, 1))
        {
          __break(1u);
          return result;
        }
        if (v50 >= v63)
          goto LABEL_36;
        v51 = *(_QWORD *)&v64[8 * v50];
        v47 = v27 + 1;
        if (!v51)
        {
          v47 = v27 + 2;
          if (v27 + 2 >= v63)
            goto LABEL_36;
          v51 = *(_QWORD *)&v64[8 * v47];
          if (!v51)
          {
            v47 = v27 + 3;
            if (v27 + 3 >= v63)
              goto LABEL_36;
            v51 = *(_QWORD *)&v64[8 * v47];
            if (!v51)
            {
              v47 = v27 + 4;
              if (v27 + 4 >= v63)
                goto LABEL_36;
              v51 = *(_QWORD *)&v64[8 * v47];
              if (!v51)
              {
                v52 = v27 + 5;
                while (v63 != v52)
                {
                  v51 = *(_QWORD *)&v64[8 * v52++];
                  if (v51)
                  {
                    v47 = v52 - 1;
                    goto LABEL_32;
                  }
                }
LABEL_36:
                swift_bridgeObjectRelease();
                sub_1C133F908();
                (*(void (**)(char *, uint64_t))(v58 + 8))(v73, v60);
                (*(void (**)(char *, uint64_t))(v57 + 8))(v72, v59);
                swift_release();
                swift_release();
                return swift_release();
              }
            }
          }
        }
LABEL_32:
        v45 = (v51 - 1) & v51;
        v46 = __clz(__rbit64(v51)) + (v47 << 6);
      }
      v49 = *(id *)(*(_QWORD *)(v23 + 48) + 8 * v46);
      if (!v49)
        goto LABEL_36;
      while (1)
      {
        v53 = *(void **)&v42[OBJC_IVAR____TtC11SessionCore18AlertServiceServer_queue];
        v54 = (_QWORD *)swift_allocObject();
        v54[2] = v42;
        v54[3] = v44;
        v54[4] = v43;
        v54[5] = v68;
        v54[6] = sub_1C13AA988;
        v54[7] = v71;
        swift_bridgeObjectRetain();
        v55 = v42;
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1C13A95D4(v66, v67, (uint64_t)v72, (uint64_t)v73, v53, (void (*)())sub_1C13AA9F4, (uint64_t)v54);

        result = swift_release();
        v27 = v47;
        v28 = v45;
        if ((v23 & 0x8000000000000000) == 0)
          break;
LABEL_16:
        v48 = sub_1C1426E84();
        if (v48)
        {
          v74 = v48;
          _s11SessionCore6ClientCMa_0();
          swift_unknownObjectRetain();
          swift_dynamicCast();
          v49 = v75;
          swift_unknownObjectRelease();
          v47 = v27;
          v45 = v28;
          if (v49)
            continue;
        }
        goto LABEL_36;
      }
    }
  }
  swift_bridgeObjectRelease();
  v29 = v64;
  sub_1C142683C();
  v30 = sub_1C1426848();
  v31 = sub_1C1426C68();
  if (os_log_type_enabled(v30, v31))
  {
    v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v32 = 0;
    _os_log_impl(&dword_1C1324000, v30, v31, "No clients registered for alert service", v32, 2u);
    MEMORY[0x1C3BAD3F4](v32, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v68 + 8))(v29, v69);
  v33 = sub_1C142584C();
  sub_1C1329AD0(&qword_1ED7932F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FC80], MEMORY[0x1E0C8FC88]);
  v34 = (void *)swift_allocError();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v35, *MEMORY[0x1E0C8FC70], v33);
  v36 = (void *)sub_1C142506C();
  (*(void (**)(uint64_t, void *))(v70 + 16))(v70, v36);

  (*(void (**)(char *, uint64_t))(v58 + 8))(v73, v60);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v72, v59);
  return swift_release();
}

uint64_t sub_1C13AA964()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1C13AA988(uint64_t a1)
{
  uint64_t v1;

  sub_1C13A9254(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1C13AA990()
{
  return swift_deallocObject();
}

uint64_t sub_1C13AA9A0()
{
  return swift_deallocObject();
}

uint64_t sub_1C13AA9B0()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C13AA9F4(uint64_t a1)
{
  uint64_t v1;

  return sub_1C13A8FC8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(uint64_t (**)(uint64_t))(v1 + 48));
}

uint64_t sub_1C13AAA04()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1C13AAA30(void *a1)
{
  uint64_t v1;

  sub_1C13A85A0(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1C13AAA38()
{
  return swift_deallocObject();
}

uint64_t sub_1C13AAA48()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1C13AAA70(uint64_t a1)
{
  uint64_t v1;

  sub_1C13A88E0(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), "Connection interrupted");
}

void sub_1C13AAA94(uint64_t a1)
{
  uint64_t v1;

  sub_1C13A88E0(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), "Connection invalidated");
}

id sub_1C13AAAB4(void *a1)
{
  uint64_t v1;

  return sub_1C13A84C0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1C13AAABC()
{
  return swift_deallocObject();
}

uint64_t sub_1C13AAAEC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793308);
    v2 = sub_1C1426FBC();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_1C132AE60(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(_QWORD *)&v39 = v19;
    *((_QWORD *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v19;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1C13377A0(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_1C13377A0(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_1C13377A0(v36, v37);
    sub_1C13377A0(v37, &v33);
    result = sub_1C1426EA8();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_1C13377A0(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1C133F908();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_1C13AAEB0(uint64_t a1)
{
  unint64_t v2;
  char v3;
  NSObject *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  const char *v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  NSObject *oslog;
  NSObject *v26;
  id v27;
  unint64_t v28;
  uint64_t v29[5];
  __int128 v30;
  __int128 v31;

  if (a1)
  {
    v26 = sub_1C1426A88();
    sub_1C1426EC0();
    if (*(_QWORD *)(a1 + 16) && (v2 = sub_1C13B99E8((uint64_t)v29), (v3 & 1) != 0))
    {
      sub_1C132AE60(*(_QWORD *)(a1 + 56) + 32 * v2, (uint64_t)&v30);
    }
    else
    {
      v30 = 0u;
      v31 = 0u;
    }
    sub_1C13ABD74((uint64_t)v29);
    if (*((_QWORD *)&v31 + 1))
    {
      sub_1C13ABD38();
      if ((swift_dynamicCast() & 1) != 0)
      {
        v4 = v26;
        if (-[NSObject BOOLValue](v26, sel_BOOLValue))
        {
          if (qword_1EF6DA7C0 != -1)
            swift_once();
          v5 = sub_1C1426854();
          __swift_project_value_buffer(v5, (uint64_t)qword_1EF6DC660);
          v6 = sub_1C1426848();
          v7 = sub_1C1426C50();
          if (!os_log_type_enabled(v6, v7))
            goto LABEL_40;
          v8 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v8 = 0;
          v9 = "Captured bug report successfully";
        }
        else
        {
          v27 = (id)sub_1C1426A88();
          v28 = v16;
          sub_1C1426EC0();
          if (*(_QWORD *)(a1 + 16) && (v17 = sub_1C13B99E8((uint64_t)v29), (v18 & 1) != 0))
          {
            sub_1C132AE60(*(_QWORD *)(a1 + 56) + 32 * v17, (uint64_t)&v30);
          }
          else
          {
            v30 = 0u;
            v31 = 0u;
          }
          sub_1C13ABD74((uint64_t)v29);
          if (*((_QWORD *)&v31 + 1))
          {
            if ((swift_dynamicCast() & 1) != 0)
            {
              if (qword_1EF6DA7C0 != -1)
                swift_once();
              v19 = sub_1C1426854();
              __swift_project_value_buffer(v19, (uint64_t)qword_1EF6DC660);
              swift_bridgeObjectRetain();
              v6 = sub_1C1426848();
              v20 = sub_1C1426C50();
              if (!os_log_type_enabled(v6, v20))
              {

                swift_bridgeObjectRelease_n();
                goto LABEL_41;
              }
              v21 = (uint8_t *)swift_slowAlloc();
              v22 = swift_slowAlloc();
              v29[0] = v22;
              *(_DWORD *)v21 = 136315138;
              swift_bridgeObjectRetain();
              *(_QWORD *)&v30 = sub_1C132AD90((uint64_t)v27, v28, v29);
              sub_1C1426DB8();
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_1C1324000, v6, v20, "Failed to capture bug for reason: %s", v21, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x1C3BAD3F4](v22, -1, -1);
              v23 = v21;
              goto LABEL_39;
            }
          }
          else
          {
            sub_1C13A9D80((uint64_t)&v30);
          }
          if (qword_1EF6DA7C0 != -1)
            swift_once();
          v24 = sub_1C1426854();
          __swift_project_value_buffer(v24, (uint64_t)qword_1EF6DC660);
          v6 = sub_1C1426848();
          v7 = sub_1C1426C50();
          if (!os_log_type_enabled(v6, v7))
            goto LABEL_40;
          v8 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v8 = 0;
          v9 = "Failed to capture bug for unknown reason";
        }
        _os_log_impl(&dword_1C1324000, v6, v7, v9, v8, 2u);
        v23 = v8;
LABEL_39:
        MEMORY[0x1C3BAD3F4](v23, -1, -1);
LABEL_40:

LABEL_41:
        return;
      }
    }
    else
    {
      sub_1C13A9D80((uint64_t)&v30);
    }
    if (qword_1EF6DA7C0 != -1)
      swift_once();
    v13 = sub_1C1426854();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EF6DC660);
    v4 = sub_1C1426848();
    v14 = sub_1C1426C68();
    if (os_log_type_enabled(v4, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_1C1324000, v4, v14, "Received malformed response", v15, 2u);
      MEMORY[0x1C3BAD3F4](v15, -1, -1);
    }
    goto LABEL_41;
  }
  if (qword_1EF6DA7C0 != -1)
    swift_once();
  v10 = sub_1C1426854();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EF6DC660);
  oslog = sub_1C1426848();
  v11 = sub_1C1426C68();
  if (os_log_type_enabled(oslog, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_1C1324000, oslog, v11, "Failed to receive response", v12, 2u);
    MEMORY[0x1C3BAD3F4](v12, -1, -1);
  }

}

uint64_t sub_1C13AB444(uint64_t a1, uint64_t a2)
{
  void (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(void (**)(uint64_t))(a1 + 32);
  if (a2)
    v3 = sub_1C1426A34();
  else
    v3 = 0;
  swift_retain();
  v2(v3);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C13AB4BC()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BugCapture()
{
  return objc_opt_self();
}

uint64_t sub_1C13AB4EC()
{
  id v0;
  id v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v1 = objc_msgSend(v0, sel_environment);

  v2 = sub_1C1426A34();
  if (*(_QWORD *)(v2 + 16) && (sub_1C13277A0(0xD000000000000010, 0x80000001C142F4D0), (v3 & 1) != 0))
  {
    swift_bridgeObjectRetain();
    v4 = 1;
  }
  else
  {
    v4 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

void sub_1C13AB5D0(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  uint64_t inited;
  uint64_t v27;
  double v28;
  double v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  _BOOL4 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  void *v47;
  void *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t aBlock[6];

  v60 = a7;
  v15 = sub_1C14251B0();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_1C13AB4EC() & 1) == 0)
  {
    v59 = a5;
    v58 = a6;
    v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3898]), sel_init);
    v61 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DAFF28]), sel_init);
    v20 = a3;
    v21 = (void *)sub_1C1426A7C();
    v54 = a1;
    v56 = a2;
    v22 = (void *)sub_1C1426A7C();
    v53 = v20;
    v57 = a4;
    v23 = (void *)sub_1C1426A7C();
    v24 = objc_msgSend(v19, sel_processName);
    if (!v24)
    {
      sub_1C1426A88();
      v24 = (id)sub_1C1426A7C();
      swift_bridgeObjectRelease();
    }
    v25 = objc_msgSend(v61, sel_signatureWithDomain_type_subType_detectedProcess_triggerThresholdValues_, v21, v22, v23, v24, 0);

    v55 = v25;
    if (v25)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793A60);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1C14298C0;
      *(_QWORD *)(inited + 32) = sub_1C1426A88();
      *(_QWORD *)(inited + 40) = v27;
      sub_1C14251A4();
      sub_1C1425174();
      v29 = v28;
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v29);
      *(_QWORD *)(inited + 72) = sub_1C13ABD38();
      *(_QWORD *)(inited + 48) = v30;
      *(_QWORD *)(inited + 80) = sub_1C1426A88();
      *(_QWORD *)(inited + 88) = v31;
      v32 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(inited + 120) = MEMORY[0x1E0DEA968];
      v33 = v58;
      *(_QWORD *)(inited + 96) = v59;
      *(_QWORD *)(inited + 104) = v33;
      *(_QWORD *)(inited + 128) = sub_1C1426A88();
      *(_QWORD *)(inited + 136) = v34;
      *(_QWORD *)(inited + 168) = v32;
      v35 = v33;
      *(_QWORD *)(inited + 144) = v60;
      *(_QWORD *)(inited + 152) = a8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v36 = sub_1C133204C(inited);
      if (qword_1EF6DA7C0 != -1)
        swift_once();
      v37 = sub_1C1426854();
      __swift_project_value_buffer(v37, (uint64_t)qword_1EF6DC660);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v38 = v56;
      swift_bridgeObjectRetain_n();
      v39 = v57;
      swift_bridgeObjectRetain_n();
      v40 = sub_1C1426848();
      v41 = sub_1C1426C80();
      v42 = os_log_type_enabled(v40, v41);
      v43 = v54;
      v52 = v19;
      if (v42)
      {
        v44 = swift_slowAlloc();
        v51 = swift_slowAlloc();
        aBlock[0] = v51;
        *(_DWORD *)v44 = 136315906;
        swift_bridgeObjectRetain();
        v62 = sub_1C132AD90(v43, v38, aBlock);
        sub_1C1426DB8();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v44 + 12) = 2080;
        swift_bridgeObjectRetain();
        v62 = sub_1C132AD90(v53, v39, aBlock);
        sub_1C1426DB8();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v44 + 22) = 2080;
        swift_bridgeObjectRetain();
        v62 = sub_1C132AD90(v59, v35, aBlock);
        sub_1C1426DB8();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v44 + 32) = 2080;
        swift_bridgeObjectRetain();
        v62 = sub_1C132AD90(v60, a8, aBlock);
        sub_1C1426DB8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C1324000, v40, v41, "Capturing bug report with type %s; subtype: %s; name: %s; value: %s",
          (uint8_t *)v44,
          0x2Au);
        v45 = v51;
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v45, -1, -1);
        MEMORY[0x1C3BAD3F4](v44, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      aBlock[0] = 0;
      v46 = v55;
      sub_1C1426A28();
      if (aBlock[0])
      {

        v47 = (void *)sub_1C1426A1C();
        swift_bridgeObjectRelease();
        sub_1C13AAAEC(v36);
        swift_bridgeObjectRelease();
        v48 = (void *)sub_1C1426A1C();
        swift_bridgeObjectRelease();
        aBlock[4] = (uint64_t)sub_1C13AAEB0;
        aBlock[5] = 0;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_1C13AB444;
        aBlock[3] = (uint64_t)&block_descriptor_15;
        v49 = _Block_copy(aBlock);
        objc_msgSend(v61, sel_snapshotWithSignature_duration_event_payload_reply_, v47, v48, 0, v49, 120.0);

        _Block_release(v49);
      }
      else
      {
        __break(1u);
      }
    }
    else
    {

    }
  }
}

unint64_t sub_1C13ABD38()
{
  unint64_t result;

  result = qword_1EF6DC5A0;
  if (!qword_1EF6DC5A0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF6DC5A0);
  }
  return result;
}

uint64_t sub_1C13ABD74(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

uint64_t sub_1C13ABDA8(void (*a1)(_QWORD, _QWORD))
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C13AC0A8(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C13ABE04(uint64_t *a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C13AF010(v1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C13ABE60(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  unint64_t v24;
  os_unfair_lock_s *v25;
  uint64_t v26;
  os_unfair_lock_s *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;

  v6 = v5;
  v35 = a5;
  v34 = a4;
  v31 = a3;
  v32 = a2;
  v30 = a1;
  v33 = sub_1C14267DC();
  v7 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C142626C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1C142671C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1C1426320();
  v36 = *(_QWORD *)(v18 - 8);
  v37 = v18;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v22 = v30;
  v21(v17, v31, v14);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v24 = v32;
  v23(v13, v34, v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0D8D3D0], v33);
  swift_bridgeObjectRetain();
  sub_1C14262CC();
  __swift_project_boxed_opaque_existential_1(v6 + 6, v6[9]);
  sub_1C1426548();
  v25 = *(os_unfair_lock_s **)(v6[5] + 16);
  os_unfair_lock_lock(v25);
  v26 = MEMORY[0x1C3BAD4B4](v6 + 2);
  os_unfair_lock_unlock(v25);
  if (v26)
  {
    v27 = *(os_unfair_lock_s **)(*(_QWORD *)(v26 + 16) + 16);
    os_unfair_lock_lock(v27);
    v28 = swift_retain();
    sub_1C136F3B0(v28, v22, v24, v26);
    swift_release();
    os_unfair_lock_unlock(v27);
    swift_unknownObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v20, v37);
}

void sub_1C13AC0A8(void (*a1)(_QWORD, _QWORD))
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  void *v67;
  os_unfair_lock_s *v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(_QWORD, _QWORD);
  int v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  _BOOL4 v82;
  uint8_t *v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  NSObject *v90;
  os_log_type_t v91;
  uint8_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  NSObject *v98;
  os_log_type_t v99;
  uint8_t *v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  char *v104;
  uint64_t v105;
  os_log_type_t v106;
  uint8_t *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  NSObject *v113;
  os_log_type_t v114;
  uint8_t *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  NSObject *v121;
  os_log_type_t v122;
  _BOOL4 v123;
  uint8_t *v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  void (*v135)(uint64_t, uint64_t);
  void (*v136)(uint64_t, uint64_t);
  unint64_t *v137;
  uint64_t v138;
  uint64_t v139;
  int v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  int v146;
  BOOL v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  int *v151;
  uint64_t *v152;
  _QWORD *v153;
  char *v154;
  uint64_t *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  void *v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  NSObject *v172;
  os_log_type_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  uint64_t v194;
  NSObject *v195;
  os_log_type_t v196;
  char *v197;
  uint8_t *v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t v201;
  os_log_t v202;
  uint64_t v203;
  unint64_t v204;
  uint64_t v205;
  void (*v206)(char *, unint64_t, uint64_t);
  uint64_t v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  int v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  _QWORD *v220;
  char *v221;
  char *v222;
  char *v223;
  uint64_t v224;
  char *v225;
  char *v226;
  char *v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  char *v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  unint64_t *v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  char *v241;
  char *v242;
  char *v243;
  char *v244;
  uint64_t v245;
  char *v246;
  uint64_t v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  id v252;
  char *v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  char *v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t *v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t *v265;
  char *v266;
  char *v267;
  uint64_t v268;
  uint64_t v269;
  char *v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  char *v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  void (*v282)(_QWORD, _QWORD);
  uint64_t v283;
  uint8_t *v284;
  os_log_t v285;
  uint64_t aBlock;
  uint64_t v287;
  uint64_t (*v288)(uint64_t);
  void *v289;
  void (*v290)();
  uint64_t v291;
  uint64_t v292;

  v2 = v1;
  v282 = a1;
  v272 = sub_1C1426950();
  v271 = *(_QWORD *)(v272 - 8);
  MEMORY[0x1E0C80A78](v272);
  v270 = (char *)&v219 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v269 = sub_1C14269B0();
  v268 = *(_QWORD *)(v269 - 8);
  MEMORY[0x1E0C80A78](v269);
  v267 = (char *)&v219 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v264 = sub_1C1426944();
  v263 = *(_QWORD *)(v264 - 8);
  MEMORY[0x1E0C80A78](v264);
  v262 = (uint64_t *)((char *)&v219 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v280 = sub_1C14269D4();
  v261 = *(_QWORD *)(v280 - 8);
  v6 = MEMORY[0x1E0C80A78](v280);
  v259 = (char *)&v219 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v266 = (char *)&v219 - v8;
  v256 = type metadata accessor for ActivityParticipantEvent(0);
  v257 = *(_QWORD *)(v256 - 8);
  v9 = MEMORY[0x1E0C80A78](v256);
  v260 = (uint64_t)&v219 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v258 = v10;
  MEMORY[0x1E0C80A78](v9);
  v265 = (uint64_t *)((char *)&v219 - v11);
  v255 = sub_1C142641C();
  v254 = *(_QWORD *)(v255 - 8);
  MEMORY[0x1E0C80A78](v255);
  v253 = (char *)&v219 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1C14251B0();
  MEMORY[0x1E0C80A78](v13);
  v226 = (char *)&v219 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791DA0);
  v16 = MEMORY[0x1E0C80A78](v15);
  v224 = (uint64_t)&v219 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v227 = (char *)&v219 - v18;
  v230 = sub_1C14253E4();
  v229 = *(_QWORD *)(v230 - 8);
  v19 = MEMORY[0x1E0C80A78](v230);
  v225 = (char *)&v219 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v232 = (char *)&v219 - v21;
  v235 = sub_1C1425384();
  v234 = *(_QWORD *)(v235 - 8);
  MEMORY[0x1E0C80A78](v235);
  v236 = (unint64_t *)((char *)&v219 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v239 = sub_1C14253C0();
  v238 = *(_QWORD *)(v239 - 8);
  MEMORY[0x1E0C80A78](v239);
  v237 = (char *)&v219 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793BF8);
  v25 = MEMORY[0x1E0C80A78](v24);
  v223 = (char *)&v219 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v241 = (char *)&v219 - v27;
  v245 = sub_1C14263D4();
  v247 = *(_QWORD *)(v245 - 8);
  MEMORY[0x1E0C80A78](v245);
  v246 = (char *)&v219 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1C142557C();
  v277 = *(_QWORD *)(v29 - 8);
  v278 = v29;
  MEMORY[0x1E0C80A78](v29);
  v276 = (char *)&v219 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v273 = sub_1C1426440();
  v275 = *(_QWORD *)(v273 - 8);
  v31 = MEMORY[0x1E0C80A78](v273);
  v233 = (char *)&v219 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x1E0C80A78](v31);
  v228 = (char *)&v219 - v34;
  v35 = MEMORY[0x1E0C80A78](v33);
  v248 = (char *)&v219 - v36;
  MEMORY[0x1E0C80A78](v35);
  v243 = (char *)&v219 - v37;
  v249 = sub_1C1425450();
  v250 = *(_QWORD *)(v249 - 8);
  v38 = MEMORY[0x1E0C80A78](v249);
  v242 = (char *)&v219 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v38);
  v244 = (char *)&v219 - v40;
  v41 = sub_1C14263E0();
  v42 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v44 = (char *)&v219 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v274 = sub_1C1425558();
  v281 = *(_QWORD *)(v274 - 8);
  v45 = MEMORY[0x1E0C80A78](v274);
  v221 = (char *)&v219 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = MEMORY[0x1E0C80A78](v45);
  v231 = (char *)&v219 - v48;
  v49 = MEMORY[0x1E0C80A78](v47);
  v240 = (char *)&v219 - v50;
  MEMORY[0x1E0C80A78](v49);
  v285 = (os_log_t)((char *)&v219 - v51);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791E48);
  v53 = MEMORY[0x1E0C80A78](v52);
  v222 = (char *)&v219 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = MEMORY[0x1E0C80A78](v53);
  v57 = (char *)&v219 - v56;
  v58 = MEMORY[0x1E0C80A78](v55);
  v60 = (char *)&v219 - v59;
  MEMORY[0x1E0C80A78](v58);
  v284 = (uint8_t *)&v219 - v61;
  v251 = type metadata accessor for ActivityParticipantEvent.EventType(0);
  MEMORY[0x1E0C80A78](v251);
  v283 = (uint64_t)&v219 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_1C14269F8();
  v64 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v66 = (uint64_t *)((char *)&v219 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0));
  v67 = (void *)v2[4];
  *v66 = v67;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v64 + 104))(v66, *MEMORY[0x1E0DEF740], v63);
  v252 = v67;
  LOBYTE(v67) = sub_1C1426A10();
  (*(void (**)(_QWORD *, uint64_t))(v64 + 8))(v66, v63);
  if ((v67 & 1) == 0)
  {
    __break(1u);
LABEL_78:
    swift_once();
LABEL_10:
    v89 = sub_1C1426854();
    __swift_project_value_buffer(v89, (uint64_t)qword_1ED798598);
    v90 = sub_1C1426848();
    v91 = sub_1C1426C68();
    if (os_log_type_enabled(v90, v91))
    {
      v92 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v92 = 0;
      _os_log_impl(&dword_1C1324000, v90, v91, "PushParticipant has no ActivityManager", v92, 2u);
      MEMORY[0x1C3BAD3F4](v92, -1, -1);
    }
    goto LABEL_12;
  }
  v68 = *(os_unfair_lock_s **)(v2[5] + 16);
  os_unfair_lock_lock(v68);
  v69 = MEMORY[0x1C3BAD4B4](v2 + 2);
  v70 = v2[3];
  os_unfair_lock_unlock(v68);
  v279 = v69;
  if (!v69)
  {
    if (qword_1ED793948 == -1)
      goto LABEL_10;
    goto LABEL_78;
  }
  v71 = v282;
  sub_1C1426434();
  v72 = (*(uint64_t (**)(char *, uint64_t))(v42 + 88))(v44, v41);
  if (v72 == *MEMORY[0x1E0D8D000])
  {
    (*(void (**)(char *, uint64_t))(v42 + 96))(v44, v41);
    v74 = v276;
    v73 = v277;
    v75 = v278;
    (*(void (**)(char *, char *, uint64_t))(v277 + 32))(v276, v44, v278);
    (*(void (**)(uint64_t, char *, uint64_t))(v73 + 16))(v283, v74, v75);
    swift_storeEnumTagMultiPayload();
    sub_1C1426410();
    sub_1C14263EC();
    if (qword_1ED793948 != -1)
      swift_once();
    v219 = v70;
    v76 = sub_1C1426854();
    __swift_project_value_buffer(v76, (uint64_t)qword_1ED798598);
    v77 = v275;
    v78 = v248;
    v79 = v273;
    (*(void (**)(char *, void (*)(_QWORD, _QWORD), uint64_t))(v275 + 16))(v248, v71, v273);
    v80 = sub_1C1426848();
    v81 = sub_1C1426C80();
    v82 = os_log_type_enabled(v80, v81);
    v220 = v2;
    if (v82)
    {
      v83 = (uint8_t *)swift_slowAlloc();
      v84 = swift_slowAlloc();
      aBlock = v84;
      *(_DWORD *)v83 = 136446210;
      v85 = sub_1C14263F8();
      v292 = sub_1C132AD90(v85, v86, &aBlock);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v275 + 8))(v78, v79);
      _os_log_impl(&dword_1C1324000, v80, v81, "Stopping activity for push event %{public}s", v83, 0xCu);
      v87 = 1;
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v84, -1, -1);
      MEMORY[0x1C3BAD3F4](v83, -1, -1);

      (*(void (**)(char *, uint64_t))(v277 + 8))(v276, v278);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v77 + 8))(v78, v79);
      (*(void (**)(char *, uint64_t))(v277 + 8))(v276, v278);
      v87 = 1;
    }
    v88 = v274;
LABEL_43:
    v143 = v255;
    v144 = v254;
    v145 = v253;
    goto LABEL_44;
  }
  if (v72 != *MEMORY[0x1E0D8D008])
  {
    if (v72 != *MEMORY[0x1E0D8D010])
    {
LABEL_79:
      sub_1C1426F8C();
      __break(1u);
      return;
    }
    sub_1C1426410();
    v101 = v250;
    v102 = v249;
    v103 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v250 + 48))(v60, 1, v249);
    v88 = v274;
    v104 = v243;
    if (v103 != 1)
    {
      v116 = v244;
      (*(void (**)(char *, char *, uint64_t))(v101 + 32))(v244, v60, v102);
      swift_storeEnumTagMultiPayload();
      v117 = (uint64_t)v284;
      (*(void (**)(uint8_t *, char *, uint64_t))(v101 + 16))(v284, v116, v102);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v101 + 56))(v117, 0, 1, v102);
      sub_1C14263EC();
      if (qword_1ED793948 != -1)
        swift_once();
      v219 = v70;
      v118 = sub_1C1426854();
      __swift_project_value_buffer(v118, (uint64_t)qword_1ED798598);
      v119 = v275;
      v120 = v273;
      (*(void (**)(char *, void (*)(_QWORD, _QWORD), uint64_t))(v275 + 16))(v104, v71, v273);
      v121 = sub_1C1426848();
      v122 = sub_1C1426C80();
      v123 = os_log_type_enabled(v121, v122);
      v220 = v2;
      if (v123)
      {
        v124 = (uint8_t *)swift_slowAlloc();
        v278 = swift_slowAlloc();
        aBlock = v278;
        *(_DWORD *)v124 = 136446210;
        v125 = sub_1C14263F8();
        v292 = sub_1C132AD90(v125, v126, &aBlock);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v275 + 8))(v104, v120);
        _os_log_impl(&dword_1C1324000, v121, v122, "Updating activity for push event %{public}s", v124, 0xCu);
        v87 = 1;
        v127 = v278;
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v127, -1, -1);
        MEMORY[0x1C3BAD3F4](v124, -1, -1);

        (*(void (**)(char *, uint64_t))(v250 + 8))(v244, v102);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v119 + 8))(v104, v120);
        (*(void (**)(char *, uint64_t))(v101 + 8))(v244, v102);
        v87 = 1;
      }
      goto LABEL_43;
    }
    sub_1C132C860((uint64_t)v60, &qword_1ED791E48);
    if (qword_1ED793948 != -1)
      swift_once();
    v105 = sub_1C1426854();
    __swift_project_value_buffer(v105, (uint64_t)qword_1ED798598);
    v90 = sub_1C1426848();
    v106 = sub_1C1426C68();
    if (!os_log_type_enabled(v90, v106))
    {

      swift_unknownObjectRelease();
      return;
    }
    v107 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v107 = 0;
    _os_log_impl(&dword_1C1324000, v90, v106, "Received update without a payload", v107, 2u);
    MEMORY[0x1C3BAD3F4](v107, -1, -1);
    swift_unknownObjectRelease();
LABEL_12:

    return;
  }
  v219 = v70;
  v220 = v2;
  (*(void (**)(char *, uint64_t))(v42 + 96))(v44, v41);
  v93 = (uint64_t)v246;
  v94 = v245;
  (*(void (**)(char *, char *, uint64_t))(v247 + 32))(v246, v44, v245);
  sub_1C1426410();
  v95 = v250;
  v96 = v249;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v250 + 48))(v57, 1, v249) == 1)
  {
    sub_1C132C860((uint64_t)v57, &qword_1ED791E48);
    if (qword_1ED793948 != -1)
      swift_once();
    v97 = sub_1C1426854();
    __swift_project_value_buffer(v97, (uint64_t)qword_1ED798598);
    v98 = sub_1C1426848();
    v99 = sub_1C1426C68();
    if (os_log_type_enabled(v98, v99))
    {
      v100 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v100 = 0;
      _os_log_impl(&dword_1C1324000, v98, v99, "Received start without a payload", v100, 2u);
      MEMORY[0x1C3BAD3F4](v100, -1, -1);
    }
    swift_unknownObjectRelease();

LABEL_33:
    (*(void (**)(uint64_t, uint64_t))(v247 + 8))(v93, v94);
    return;
  }
  v108 = v242;
  (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v242, v57, v96);
  v109 = (uint64_t)v241;
  sub_1C14253F0();
  v110 = sub_1C1425B40();
  v111 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 48))(v109, 1, v110);
  sub_1C132C860(v109, &qword_1ED793BF8);
  if (v111 == 1)
  {
    if (qword_1ED793948 != -1)
      swift_once();
    v112 = sub_1C1426854();
    __swift_project_value_buffer(v112, (uint64_t)qword_1ED798598);
    v113 = sub_1C1426848();
    v114 = sub_1C1426C68();
    if (os_log_type_enabled(v113, v114))
    {
      v115 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v115 = 0;
      _os_log_impl(&dword_1C1324000, v113, v114, "Received start without an alert configuration", v115, 2u);
      MEMORY[0x1C3BAD3F4](v115, -1, -1);
    }
    swift_unknownObjectRelease();

    (*(void (**)(char *, uint64_t))(v95 + 8))(v108, v96);
    goto LABEL_33;
  }
  v128 = v240;
  sub_1C14263EC();
  v129 = v281;
  v130 = v274;
  if ((*(unsigned int (**)(char *, uint64_t))(v281 + 88))(v128, v274) == *MEMORY[0x1E0C8F750])
  {
    (*(void (**)(char *, uint64_t))(v129 + 96))(v128, v130);
    v131 = v128;
    v132 = v238;
    v133 = v237;
    v134 = v239;
    (*(void (**)(char *, char *, uint64_t))(v238 + 32))(v237, v131, v239);
    v278 = sub_1C142539C();
    v136 = v135;
    v137 = v236;
    sub_1C14253B4();
    v138 = v234;
    v139 = v235;
    v140 = (*(uint64_t (**)(unint64_t *, uint64_t))(v234 + 88))(v137, v235);
    if (v140 == *MEMORY[0x1E0C8F498])
    {
      (*(void (**)(char *, uint64_t))(v132 + 8))(v133, v134);
      (*(void (**)(unint64_t *, uint64_t))(v138 + 96))(v137, v139);
      v141 = *v137;
      v142 = v137[1];
      swift_bridgeObjectRelease();
LABEL_53:
      v181 = v278;
      goto LABEL_54;
    }
    if (v140 == *MEMORY[0x1E0C8F490])
    {
      (*(void (**)(char *, uint64_t))(v238 + 8))(v237, v239);
      (*(void (**)(unint64_t *, uint64_t))(v138 + 96))(v137, v139);
      v141 = *v137;
      v142 = v137[1];
      goto LABEL_53;
    }
    v190 = v237;
    v181 = v278;
    if (v140 == *MEMORY[0x1E0C8F4A0])
    {
      (*(void (**)(char *, uint64_t))(v238 + 8))(v237, v239);
      v141 = 0;
      v142 = 0;
LABEL_54:
      v182 = sub_1C14263C8();
      v289 = (void *)MEMORY[0x1E0DEA968];
      v290 = (void (*)())&off_1E7A8CA60;
      aBlock = v181;
      v287 = (uint64_t)v136;
      swift_bridgeObjectRetain();
      v183 = sub_1C13AE424(v182, v141, v142, v181, (uint64_t)v136);
      v184 = (uint64_t)v232;
      v185 = v183;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
      v186 = sub_1C14263F8();
      v188 = v187;
      sub_1C142542C();
      sub_1C13AEA20(v279, v189, v186, v188, v181, v136, v93, v185, v184);
      (*(void (**)(uint64_t, uint64_t))(v229 + 8))(v184, v230);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v203 = *(_QWORD *)(v185 + 16);
      if (v203)
      {
        v204 = v185 + ((*(unsigned __int8 *)(v281 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v281 + 80));
        v205 = *(_QWORD *)(v281 + 72);
        v206 = *(void (**)(char *, unint64_t, uint64_t))(v281 + 16);
        v278 = v185;
        swift_bridgeObjectRetain();
        v207 = v274;
        v208 = v221;
        while (1)
        {
          v206(v208, v204, v207);
          if ((sub_1C14254F8() & 1) != 0)
            break;
          (*(void (**)(char *, uint64_t))(v281 + 8))(v208, v207);
          v204 += v205;
          if (!--v203)
          {
            swift_bridgeObjectRelease();
            v209 = 1;
            v210 = v281;
            v211 = v242;
            v212 = (uint64_t)v227;
            goto LABEL_73;
          }
        }
        swift_bridgeObjectRelease();
        v210 = v281;
        v212 = (uint64_t)v227;
        (*(void (**)(char *, char *, uint64_t))(v281 + 32))(v227, v208, v207);
        v209 = 0;
      }
      else
      {
        v209 = 1;
        v210 = v281;
        v212 = (uint64_t)v227;
      }
      v211 = v242;
LABEL_73:
      v213 = v274;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v210 + 56))(v212, v209, 1, v274);
      swift_bridgeObjectRelease();
      v214 = v224;
      sub_1C132C344(v212, v224, &qword_1ED791DA0);
      v215 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v210 + 48))(v214, 1, v213);
      v216 = v250;
      if (v215 == 1)
      {
        sub_1C132C860(v214, &qword_1ED791DA0);
        sub_1C14263EC();
        sub_1C132C860(v212, &qword_1ED791DA0);
      }
      else
      {
        sub_1C132C860(v212, &qword_1ED791DA0);
        (*(void (**)(os_log_t, uint64_t, uint64_t))(v210 + 32))(v285, v214, v213);
      }
      v217 = v246;
      sub_1C142518C();
      sub_1C142542C();
      sub_1C14253F0();
      v218 = (uint64_t)v222;
      sub_1C1425444();
      (*(void (**)(char *, uint64_t))(v216 + 8))(v211, v96);
      (*(void (**)(char *, uint64_t))(v247 + 8))(v217, v245);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v216 + 56))(v218, 0, 1, v96);
      sub_1C132A724(v218, (uint64_t)v284, &qword_1ED791E48);
      swift_storeEnumTagMultiPayload();
      v87 = 250;
      v143 = v255;
      v144 = v254;
      v145 = v253;
      v88 = v274;
LABEL_44:
      sub_1C1426428();
      v146 = (*(uint64_t (**)(char *, uint64_t))(v144 + 88))(v145, v143);
      if (v146 == *MEMORY[0x1E0D8D040] || v146 == *MEMORY[0x1E0D8D048])
      {
        v147 = v146 != *MEMORY[0x1E0D8D040];
        v148 = sub_1C14263F8();
        v150 = v149;
        v151 = (int *)v256;
        v152 = v265;
        sub_1C1338F24(v283, (uint64_t)v265 + *(int *)(v256 + 24), type metadata accessor for ActivityParticipantEvent.EventType);
        (*(void (**)(char *, os_log_t, uint64_t))(v281 + 16))((char *)v152 + v151[7], v285, v88);
        sub_1C132C344((uint64_t)v284, (uint64_t)v152 + v151[9], &qword_1ED791E48);
        *v152 = v148;
        v152[1] = v150;
        v152[2] = 0;
        v152[3] = 0;
        v153 = (uint64_t *)((char *)v152 + v151[8]);
        *v153 = v220;
        v153[1] = &off_1E7A8CAC0;
        *((_BYTE *)v152 + v151[10]) = v147;
        swift_retain();
        v154 = v259;
        sub_1C14269BC();
        v155 = v262;
        *v262 = v87;
        v156 = v263;
        v157 = v264;
        (*(void (**)(uint64_t *, _QWORD, uint64_t))(v263 + 104))(v155, *MEMORY[0x1E0DEF490], v264);
        v158 = v266;
        sub_1C14269C8();
        (*(void (**)(uint64_t *, uint64_t))(v156 + 8))(v155, v157);
        v282 = *(void (**)(_QWORD, _QWORD))(v261 + 8);
        v282(v154, v280);
        v159 = v260;
        sub_1C1338F24((uint64_t)v152, v260, type metadata accessor for ActivityParticipantEvent);
        v160 = (*(unsigned __int8 *)(v257 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v257 + 80);
        v161 = swift_allocObject();
        v162 = v219;
        *(_QWORD *)(v161 + 16) = v279;
        *(_QWORD *)(v161 + 24) = v162;
        sub_1C13B20EC(v159, v161 + v160);
        v290 = sub_1C13B2130;
        v291 = v161;
        aBlock = MEMORY[0x1E0C809B0];
        v287 = 1107296256;
        v288 = sub_1C13A7F4C;
        v289 = &block_descriptor_16;
        v163 = _Block_copy(&aBlock);
        swift_unknownObjectRetain();
        v164 = v267;
        sub_1C1426974();
        v292 = MEMORY[0x1E0DEE9D8];
        sub_1C1329AD0((unint64_t *)&qword_1ED7979D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A50);
        sub_1C1331180();
        v165 = v270;
        v166 = v88;
        v167 = v272;
        sub_1C1426DF4();
        MEMORY[0x1C3BAC974](v158, v164, v165, v163);
        _Block_release(v163);
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v271 + 8))(v165, v167);
        (*(void (**)(char *, uint64_t))(v268 + 8))(v164, v269);
        v282(v158, v280);
        sub_1C1339004((uint64_t)v152, type metadata accessor for ActivityParticipantEvent);
        (*(void (**)(os_log_t, uint64_t))(v281 + 8))(v285, v166);
        sub_1C132C860((uint64_t)v284, &qword_1ED791E48);
        sub_1C1339004(v283, type metadata accessor for ActivityParticipantEvent.EventType);
        swift_release();
        return;
      }
      goto LABEL_79;
    }
    swift_bridgeObjectRelease();
    if (qword_1ED793948 != -1)
      swift_once();
    v191 = sub_1C1426854();
    __swift_project_value_buffer(v191, (uint64_t)qword_1ED798598);
    v192 = v275;
    v193 = v228;
    v194 = v273;
    (*(void (**)(char *, void (*)(_QWORD, _QWORD), uint64_t))(v275 + 16))(v228, v282, v273);
    v195 = sub_1C1426848();
    v196 = sub_1C1426C68();
    if (os_log_type_enabled(v195, v196))
    {
      v285 = v195;
      v197 = v193;
      v198 = (uint8_t *)swift_slowAlloc();
      v199 = swift_slowAlloc();
      aBlock = v199;
      *(_DWORD *)v198 = 136380675;
      v284 = v198 + 4;
      sub_1C14263EC();
      v200 = sub_1C1426AA0();
      v292 = sub_1C132AD90(v200, v201, &aBlock);
      v138 = v234;
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v192 + 8))(v197, v194);
      v202 = v285;
      _os_log_impl(&dword_1C1324000, v285, v196, "Received start with an unsupported push type: %{private}s", v198, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v199, -1, -1);
      v139 = v235;
      MEMORY[0x1C3BAD3F4](v198, -1, -1);
      swift_unknownObjectRelease();

      (*(void (**)(char *, uint64_t))(v238 + 8))(v237, v239);
      (*(void (**)(char *, uint64_t))(v250 + 8))(v242, v96);
    }
    else
    {
      swift_unknownObjectRelease();

      (*(void (**)(char *, uint64_t))(v192 + 8))(v193, v194);
      (*(void (**)(char *, uint64_t))(v238 + 8))(v190, v239);
      (*(void (**)(char *, uint64_t))(v95 + 8))(v242, v96);
    }
    (*(void (**)(char *, uint64_t))(v247 + 8))(v246, v245);
    (*(void (**)(unint64_t *, uint64_t))(v138 + 8))(v236, v139);
  }
  else
  {
    if (qword_1ED793948 != -1)
      swift_once();
    v168 = sub_1C1426854();
    __swift_project_value_buffer(v168, (uint64_t)qword_1ED798598);
    v169 = v275;
    v170 = v233;
    v171 = v273;
    (*(void (**)(char *, void (*)(_QWORD, _QWORD), uint64_t))(v275 + 16))(v233, v282, v273);
    v172 = sub_1C1426848();
    v173 = sub_1C1426C68();
    if (os_log_type_enabled(v172, v173))
    {
      v174 = swift_slowAlloc();
      v175 = swift_slowAlloc();
      *(_DWORD *)v174 = 136380675;
      v285 = (os_log_t)(v174 + 4);
      aBlock = v175;
      v176 = v170;
      sub_1C14263EC();
      v177 = v274;
      v178 = sub_1C1426AA0();
      v292 = sub_1C132AD90(v178, v179, &aBlock);
      v129 = v281;
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v169 + 8))(v176, v171);
      _os_log_impl(&dword_1C1324000, v172, v173, "Received start with an unsupported content source: %{private}s", (uint8_t *)v174, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v175, -1, -1);
      v180 = v174;
      v128 = v240;
      MEMORY[0x1C3BAD3F4](v180, -1, -1);
      swift_unknownObjectRelease();

      (*(void (**)(char *, uint64_t))(v250 + 8))(v242, v249);
      (*(void (**)(char *, uint64_t))(v247 + 8))(v246, v245);
    }
    else
    {
      swift_unknownObjectRelease();

      (*(void (**)(char *, uint64_t))(v169 + 8))(v170, v171);
      (*(void (**)(char *, uint64_t))(v95 + 8))(v242, v249);
      (*(void (**)(char *, uint64_t))(v247 + 8))(v246, v94);
      v177 = v274;
    }
    (*(void (**)(char *, uint64_t))(v129 + 8))(v128, v177);
  }
}

unint64_t sub_1C13AE424(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, _QWORD, uint64_t);
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  void (*v41)(unint64_t, char *, uint64_t);
  void (*v42)(char *, _QWORD, uint64_t);
  uint64_t v43;
  unint64_t *v44;
  char *v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  void (*v51)(char *, unint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  char *v54;
  void (*v55)(char *, _QWORD, uint64_t);
  unint64_t v56;
  unint64_t v57;
  char *v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v62;
  void (*v63)(unint64_t, char *, uint64_t);
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t *v71;
  unint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791DA0);
  MEMORY[0x1E0C80A78](v10);
  v76 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1C1425384();
  v69 = *(_QWORD *)(v12 - 8);
  v70 = v12;
  MEMORY[0x1E0C80A78](v12);
  v71 = (unint64_t *)((char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v73 = sub_1C1425558();
  v75 = *(_QWORD *)(v73 - 8);
  v14 = MEMORY[0x1E0C80A78](v73);
  v74 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v63 - v17;
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)&v63 - v20;
  v22 = MEMORY[0x1E0C80A78](v19);
  v24 = (char *)&v63 - v23;
  MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v63 - v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v72 = a2;
  v27 = a2;
  v28 = a4;
  v29 = v77;
  v30 = sub_1C13B2170(a1, v27, a3, a4, a5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v29)
  {
    v65 = v24;
    v66 = 0;
    v67 = v18;
    v68 = v28;
    v77 = a5;
    if (*(_QWORD *)(v30 + 16))
    {
      v31 = v75;
      v32 = v73;
    }
    else
    {
      swift_bridgeObjectRetain();
      v33 = v26;
      sub_1C1425A74();
      v34 = *(void (**)(char *, _QWORD, uint64_t))(v75 + 104);
      v32 = v73;
      v34(v33, *MEMORY[0x1E0C8F788], v73);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v30 = sub_1C136C1AC(0, *(_QWORD *)(v30 + 16) + 1, 1, v30);
      v35 = a3;
      v37 = *(_QWORD *)(v30 + 16);
      v36 = *(_QWORD *)(v30 + 24);
      v38 = v37 + 1;
      v31 = v75;
      if (v37 >= v36 >> 1)
      {
        v62 = sub_1C136C1AC(v36 > 1, v37 + 1, 1, v30);
        v38 = v37 + 1;
        v30 = v62;
      }
      v39 = v72;
      *(_QWORD *)(v30 + 16) = v38;
      v72 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
      v64 = *(_QWORD *)(v31 + 72);
      v40 = v30 + v72 + v64 * v37;
      v41 = *(void (**)(unint64_t, char *, uint64_t))(v31 + 32);
      v41(v40, v33, v32);
      if (v35)
      {
        v63 = v41;
        v42 = v34;
        v43 = v70;
        v44 = v71;
        *v71 = v39;
        v44[1] = v35;
        (*(void (**)(unint64_t *, _QWORD, uint64_t))(v69 + 104))(v44, *MEMORY[0x1E0C8F490], v43);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v45 = v65;
        sub_1C1425390();
        v42(v45, *MEMORY[0x1E0C8F750], v32);
        v47 = *(_QWORD *)(v30 + 16);
        v46 = *(_QWORD *)(v30 + 24);
        if (v47 >= v46 >> 1)
          v30 = sub_1C136C1AC(v46 > 1, v47 + 1, 1, v30);
        *(_QWORD *)(v30 + 16) = v47 + 1;
        v63(v30 + v72 + v47 * v64, v45, v32);
      }
    }
    v48 = *(_QWORD *)(v30 + 16);
    if (v48)
    {
      v49 = v30 + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80));
      v50 = *(_QWORD *)(v31 + 72);
      v51 = *(void (**)(char *, unint64_t, uint64_t))(v31 + 16);
      swift_bridgeObjectRetain();
      while (1)
      {
        v51(v21, v49, v32);
        if ((sub_1C1425510() & 1) != 0)
          break;
        (*(void (**)(char *, uint64_t))(v31 + 8))(v21, v32);
        v49 += v50;
        if (!--v48)
          goto LABEL_18;
      }
      v53 = (uint64_t)v76;
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v76, v21, v32);
      v52 = 0;
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_18:
      v52 = 1;
      v53 = (uint64_t)v76;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56))(v53, v52, 1, v32);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v53, 1, v32) == 1)
    {
      swift_bridgeObjectRetain();
      v54 = v67;
      sub_1C1425A74();
      v55 = *(void (**)(char *, _QWORD, uint64_t))(v31 + 104);
      v55(v54, *MEMORY[0x1E0C8F788], v32);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v30 = sub_1C136C1AC(0, *(_QWORD *)(v30 + 16) + 1, 1, v30);
      v57 = *(_QWORD *)(v30 + 16);
      v56 = *(_QWORD *)(v30 + 24);
      v58 = v74;
      if (v57 >= v56 >> 1)
        v30 = sub_1C136C1AC(v56 > 1, v57 + 1, 1, v30);
      *(_QWORD *)(v30 + 16) = v57 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v31 + 32))(v30+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(_QWORD *)(v31 + 72) * v57, v67, v32);
      v53 = (uint64_t)v76;
    }
    else
    {
      v55 = *(void (**)(char *, _QWORD, uint64_t))(v31 + 104);
      v58 = v74;
    }
    v55(v58, *MEMORY[0x1E0C8F758], v32);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v30 = sub_1C136C1AC(0, *(_QWORD *)(v30 + 16) + 1, 1, v30);
    v60 = *(_QWORD *)(v30 + 16);
    v59 = *(_QWORD *)(v30 + 24);
    if (v60 >= v59 >> 1)
      v30 = sub_1C136C1AC(v59 > 1, v60 + 1, 1, v30);
    *(_QWORD *)(v30 + 16) = v60 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v31 + 32))(v30+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(_QWORD *)(v31 + 72) * v60, v58, v32);
    sub_1C132C860(v53, &qword_1ED791DA0);
  }
  return v30;
}

uint64_t sub_1C13AEA20(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, void (*a6)(uint64_t, uint64_t), uint64_t a7, uint64_t a8, uint64_t a9)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (**v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  void *v33;
  id v34;
  uint64_t result;
  char *v36;
  void (*v37)(char *, _QWORD, uint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (**v46)(char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (**v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t);
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;

  v56 = a8;
  v64 = a5;
  v65 = a6;
  v72 = a3;
  v73 = a4;
  v55 = a1;
  v10 = type metadata accessor for ActivityState(0);
  MEMORY[0x1E0C80A78](v10);
  v54 = (uint64_t)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_1C1425A08();
  MEMORY[0x1E0C80A78](v61);
  v69 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_1C1425AEC();
  v63 = *(_QWORD *)(v71 - 8);
  MEMORY[0x1E0C80A78](v71);
  v62 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1C14253E4();
  v58 = *(void (***)(char *, uint64_t, uint64_t))(v14 - 8);
  v59 = v14;
  MEMORY[0x1E0C80A78](v14);
  v60 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_1C1425978();
  v66 = *(_QWORD *)(v68 - 8);
  v16 = MEMORY[0x1E0C80A78](v68);
  v53 = (uint64_t)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v67 = (char *)&v52 - v18;
  v77 = sub_1C1425594();
  v76 = *(_QWORD *)(v77 - 8);
  v19 = MEMORY[0x1E0C80A78](v77);
  v21 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v75 = (char *)&v52 - v22;
  v23 = sub_1C1425678();
  v74 = *(_QWORD *)(v23 - 8);
  v24 = MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v52 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v28 = (void (**)(char *, uint64_t, uint64_t))((char *)&v52 - v27);
  v29 = sub_1C14269F8();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v32 = (uint64_t *)((char *)&v52 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  v70 = v9;
  v33 = (void *)v9[4];
  *v32 = v33;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v30 + 104))(v32, *MEMORY[0x1E0DEF740], v29);
  v34 = v33;
  LOBYTE(v33) = sub_1C1426A10();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v30 + 8))(v32, v29);
  if ((v33 & 1) != 0)
  {
    sub_1C1425660();
    sub_1C142566C();
    sub_1C14263B0();
    v36 = v75;
    sub_1C1425588();
    (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v21, v36, v77);
    sub_1C14263BC();
    v58[2](v60, a9, v59);
    v37 = *(void (**)(char *, _QWORD, uint64_t))(v74 + 16);
    v58 = v28;
    v59 = v23;
    v37(v26, v28, v23);
    swift_bridgeObjectRetain();
    sub_1C14263C8();
    v38 = (uint64_t)v67;
    sub_1C1425918();
    swift_bridgeObjectRetain();
    v39 = v62;
    sub_1C1425A74();
    v40 = v63;
    v41 = (uint64_t)v69;
    v42 = v71;
    (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v69, v39, v71);
    swift_storeEnumTagMultiPayload();
    v43 = (uint64_t)v70;
    v44 = v70[29];
    v45 = v70[30];
    __swift_project_boxed_opaque_existential_1(v70 + 26, v44);
    if ((*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, char *, uint64_t, uint64_t))(v45 + 8))(v38, 0, v41, v72, v73, v44, v45))
    {
      swift_willThrow();
      sub_1C1339004(v41, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v39, v42);
      (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v38, v68);
      (*(void (**)(char *, uint64_t))(v76 + 8))(v75, v77);
      v46 = (uint64_t (**)(char *, uint64_t))(v74 + 8);
    }
    else
    {
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v43 + 168), *(_QWORD *)(v43 + 192));
      v47 = v53;
      sub_1C1339C78(v41, v53);
      v48 = v66;
      v49 = v68;
      v65 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
      v65(v38, v68);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 32))(v38, v47, v49);
      v50 = v54;
      v51 = v57;
      sub_1C13CF774(v38, v72, v73, v56, v41, 1, v43, (uint64_t)&off_1E7A8CAC0, v54);
      v46 = (uint64_t (**)(char *, uint64_t))(v74 + 8);
      if (!v51)
      {
        sub_1C1339004(v50, type metadata accessor for ActivityState);
        sub_1C1339004(v41, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v39, v71);
        v65(v38, v49);
        (*(void (**)(char *, uint64_t))(v76 + 8))(v75, v77);
        return (*v46)((char *)v58, v59);
      }
      sub_1C1339004(v41, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
      (*(void (**)(char *, uint64_t))(v40 + 8))(v39, v71);
      v65(v38, v49);
      (*(void (**)(char *, uint64_t))(v76 + 8))(v75, v77);
    }
    return (*v46)((char *)v58, v59);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C13AF010(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  id v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  int v34;
  char *v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void (*v47)(char *, char *, uint64_t);
  char *v48;
  NSObject *v49;
  os_log_type_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  unint64_t v58;
  char *v59;
  char *v60;
  void (*v61)(char *, uint64_t);
  _QWORD v63[2];
  unsigned int v64;
  uint64_t v65;
  __int128 v66;
  unsigned int v67;
  int v68;
  int v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  void (*v83)(char *, uint64_t);
  void (*v84)(char *, uint64_t);
  void (*v85)(char *, char *, uint64_t);
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(char *, unint64_t, uint64_t);
  uint64_t v91[2];

  v79 = sub_1C14267DC();
  v88 = *(_QWORD *)(v79 - 8);
  v3 = MEMORY[0x1E0C80A78](v79);
  v78 = (char *)v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v82 = (char *)v63 - v6;
  MEMORY[0x1E0C80A78](v5);
  v87 = (char *)v63 - v7;
  v8 = sub_1C1426290();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v80 = (char *)v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C1426320();
  v89 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x1E0C80A78](v11);
  v77 = (char *)v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v76 = (char *)v63 - v15;
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v63 - v16;
  v18 = sub_1C14269F8();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (_QWORD *)((char *)v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v81 = v1;
  v22 = *(void **)(v1 + 32);
  *v21 = v22;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v19 + 104))(v21, *MEMORY[0x1E0DEF740], v18);
  v23 = v22;
  LOBYTE(v22) = sub_1C1426A10();
  (*(void (**)(_QWORD *, uint64_t))(v19 + 8))(v21, v18);
  if ((v22 & 1) != 0)
  {
    if (qword_1ED793948 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v24 = sub_1C1426854();
  v75 = __swift_project_value_buffer(v24, (uint64_t)qword_1ED798598);
  v25 = sub_1C1426848();
  v26 = sub_1C1426C80();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v27 = 0;
    _os_log_impl(&dword_1C1324000, v25, v26, "PushParticipant received QoS update", v27, 2u);
    MEMORY[0x1C3BAD3F4](v27, -1, -1);
  }

  v28 = *(_QWORD *)(v81 + 72);
  v74 = (_QWORD *)(v81 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v81 + 48), v28);
  v29 = sub_1C1426518();
  v31 = *(_QWORD *)(v29 + 16);
  if (v31)
  {
    v32 = (*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80);
    v63[1] = v29;
    v33 = v29 + v32;
    v34 = *MEMORY[0x1E0D8CE88];
    v68 = *MEMORY[0x1E0D8CEC8];
    v64 = *MEMORY[0x1E0D8D3D8];
    v67 = *MEMORY[0x1E0D8D3D0];
    v86 = *(_QWORD *)(v89 + 72);
    v90 = *(void (**)(char *, unint64_t, uint64_t))(v89 + 16);
    *(_QWORD *)&v30 = 136446466;
    v66 = v30;
    v65 = MEMORY[0x1E0DEE9B8] + 8;
    v35 = v80;
    v69 = v34;
    v72 = v8;
    v73 = a1;
    v71 = v9;
    v70 = v17;
    v90(v17, v29 + v32, v11);
    while (1)
    {
      sub_1C14262C0();
      v36 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v35, v8);
      if (v36 == v34)
      {
        (*(void (**)(char *, uint64_t))(v89 + 8))(v17, v11);
        (*(void (**)(char *, uint64_t))(v9 + 96))(v35, v8);
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v36 != v68)
          goto LABEL_25;
        v37 = sub_1C14262E4();
        if (*(_QWORD *)(a1 + 16) && (v39 = sub_1C13277A0(v37, v38), (v40 & 1) != 0))
        {
          v41 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v39);
          swift_bridgeObjectRelease();
          v42 = v64;
          if (v41)
          {
            v42 = v67;
            if (v41 != 1)
            {
              while (1)
              {
LABEL_25:
                sub_1C1426F8C();
                __break(1u);
              }
            }
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          v42 = v67;
        }
        v43 = v87;
        v44 = v88;
        v45 = v79;
        (*(void (**)(char *, uint64_t, uint64_t))(v88 + 104))(v87, v42, v79);
        v46 = v76;
        v90(v76, (unint64_t)v17, v11);
        v47 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
        v48 = v82;
        v85 = v47;
        v47(v82, v43, v45);
        v49 = sub_1C1426848();
        v50 = sub_1C1426C80();
        if (os_log_type_enabled(v49, v50))
        {
          v51 = v46;
          v52 = swift_slowAlloc();
          v53 = swift_slowAlloc();
          v91[0] = v53;
          *(_DWORD *)v52 = v66;
          v54 = sub_1C14262E4();
          *(_QWORD *)(v52 + 4) = sub_1C132AD90(v54, v55, v91);
          swift_bridgeObjectRelease();
          v84 = *(void (**)(char *, uint64_t))(v89 + 8);
          v84(v51, v11);
          *(_WORD *)(v52 + 12) = 2082;
          sub_1C1329AD0(&qword_1EF6DBBD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8D3E8], MEMORY[0x1E0D8D3F8]);
          v56 = v82;
          v57 = sub_1C1427058();
          *(_QWORD *)(v52 + 14) = sub_1C132AD90(v57, v58, v91);
          swift_bridgeObjectRelease();
          v83 = *(void (**)(char *, uint64_t))(v88 + 8);
          v83(v56, v45);
          _os_log_impl(&dword_1C1324000, v49, v50, "Changing QoS for %{public}s to %{public}s", (uint8_t *)v52, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1C3BAD3F4](v53, -1, -1);
          MEMORY[0x1C3BAD3F4](v52, -1, -1);
        }
        else
        {
          v84 = *(void (**)(char *, uint64_t))(v89 + 8);
          v84(v46, v11);
          v83 = *(void (**)(char *, uint64_t))(v88 + 8);
          v83(v48, v45);
        }

        v59 = v77;
        v17 = v70;
        v90(v77, (unint64_t)v70, v11);
        v60 = v87;
        v85(v78, v87, v45);
        sub_1C1426314();
        __swift_project_boxed_opaque_existential_1(v74, *(_QWORD *)(v81 + 72));
        sub_1C1426548();
        v61 = v84;
        v84(v59, v11);
        v83(v60, v45);
        v61(v17, v11);
        v9 = v71;
        v8 = v72;
        v35 = v80;
        (*(void (**)(char *, uint64_t))(v71 + 8))(v80, v72);
        a1 = v73;
        v34 = v69;
      }
      v33 += v86;
      if (!--v31)
        return swift_bridgeObjectRelease();
      v90(v17, v33, v11);
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C13AF7D8()
{
  uint64_t v0;

  sub_1C1339040(v0 + 16);

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  __swift_destroy_boxed_opaque_existential_1(v0 + 168);
  __swift_destroy_boxed_opaque_existential_1(v0 + 208);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C13AF834()
{
  sub_1C13AF7D8();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PushParticipant()
{
  return objc_opt_self();
}

uint64_t sub_1C13AF874(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v4;

  v4 = *(os_unfair_lock_s **)(*(_QWORD *)(v2 + 40) + 16);
  os_unfair_lock_lock(v4);
  *(_QWORD *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  os_unfair_lock_unlock(v4);
  return swift_unknownObjectRelease();
}

uint64_t sub_1C13AF8C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v30;
  uint64_t v31;

  v4 = sub_1C1425558();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v30 - v8;
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v30 - v11;
  MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v30 - v14;
  v16 = *(_QWORD *)(a1 + 16);
  if (v16)
  {
    v30 = v13;
    v31 = a2;
    v17 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v18 = *(_QWORD *)(v5 + 72);
    v19 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    while (1)
    {
      v19(v9, v17, v4);
      if ((sub_1C14254F8() & 1) != 0)
        break;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
      v17 += v18;
      if (!--v16)
      {
        swift_bridgeObjectRelease();
        a2 = v31;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    v23 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v23(v12, v9, v4);
    v23(v15, v12, v4);
    v24 = v30;
    v23(v30, v15, v4);
    v25 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v24, v4);
    v26 = v31;
    if (v25 == *MEMORY[0x1E0C8F750])
    {
      (*(void (**)(char *, uint64_t))(v5 + 96))(v24, v4);
      v27 = sub_1C14253C0();
      v28 = *(_QWORD *)(v27 - 8);
      (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v26, v24, v27);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v28 + 56))(v26, 0, 1, v27);
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v24, v4);
    v20 = sub_1C14253C0();
    v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
    v22 = v26;
  }
  else
  {
LABEL_6:
    v20 = sub_1C14253C0();
    v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
    v22 = a2;
  }
  return v21(v22, 1, 1, v20);
}

unint64_t sub_1C13AFB10()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t inited;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  void (*v34)(char *, unint64_t, _QWORD *);
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  int64_t v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  uint64_t v57;
  int64_t v58;
  unint64_t v59;
  unint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  int64_t v77;
  _QWORD *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  char v82;
  unint64_t v83;
  char *v84;
  char *v85;
  unint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  char *v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t, uint64_t);
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(char *, uint64_t);
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  void (*v123)(_QWORD, _QWORD, _QWORD);
  uint64_t v124;
  uint64_t v125;
  unint64_t result;
  uint64_t v127;
  _QWORD *v128;
  uint64_t *v129;
  _QWORD *v130;
  char *v131;
  _QWORD *v132;
  uint64_t *v133;
  uint64_t *v134;
  char *v135;
  uint64_t v136;
  void (*v137)(char *, unint64_t, _QWORD *);
  uint64_t v138;
  int64_t v139;
  _QWORD *v140;
  char *v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;

  v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED792828);
  v1 = MEMORY[0x1E0C80A78](v136);
  v135 = (uint64_t *)((char *)&v127 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = MEMORY[0x1E0C80A78](v1);
  v134 = (uint64_t *)((char *)&v127 - v4);
  v5 = MEMORY[0x1E0C80A78](v3);
  v133 = (uint64_t *)((char *)&v127 - v6);
  v7 = MEMORY[0x1E0C80A78](v5);
  v132 = (uint64_t *)((char *)&v127 - v8);
  MEMORY[0x1E0C80A78](v7);
  v131 = (char *)&v127 - v9;
  v144 = sub_1C142659C();
  v146 = *(_QWORD *)(v144 - 8);
  MEMORY[0x1E0C80A78](v144);
  v143 = (char *)&v127 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v142 = sub_1C1426494();
  v145 = *(_QWORD *)(v142 - 8);
  MEMORY[0x1E0C80A78](v142);
  v141 = (char *)&v127 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = (_QWORD *)sub_1C1426320();
  v12 = *(v140 - 1);
  MEMORY[0x1E0C80A78](v140);
  v14 = (char *)&v127 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793A60);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1428080;
  strcpy((char *)(inited + 32), "subscriptions");
  *(_WORD *)(inited + 46) = -4864;
  v130 = (_QWORD *)inited;
  v16 = v0[9];
  v129 = v0;
  v128 = v0 + 6;
  __swift_project_boxed_opaque_existential_1(v0 + 6, v16);
  v17 = sub_1C1426518();
  v18 = *(_QWORD *)(v17 + 16);
  v19 = MEMORY[0x1E0DEE9D8];
  if (v18)
  {
    v148 = MEMORY[0x1E0DEE9D8];
    sub_1C1336948(0, v18, 0);
    v20 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v127 = v17;
    v21 = v17 + v20;
    v138 = *(_QWORD *)(v12 + 72);
    v139 = v12;
    v137 = *(void (**)(char *, unint64_t, _QWORD *))(v12 + 16);
    do
    {
      v22 = v140;
      v137(v14, v21, v140);
      v147 = sub_1C14262E4();
      v24 = v23;
      v25 = sub_1C142629C();
      v27 = v26;
      (*(void (**)(char *, _QWORD *))(v139 + 8))(v14, v22);
      v28 = v148;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C1336948(0, *(_QWORD *)(v28 + 16) + 1, 1);
        v28 = v148;
      }
      v30 = *(_QWORD *)(v28 + 16);
      v29 = *(_QWORD *)(v28 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_1C1336948(v29 > 1, v30 + 1, 1);
        v28 = v148;
      }
      *(_QWORD *)(v28 + 16) = v30 + 1;
      v31 = (_QWORD *)(v28 + 32 * v30);
      v31[4] = v147;
      v31[5] = v24;
      v31[6] = v25;
      v31[7] = v27;
      v21 += v138;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease();
    v19 = MEMORY[0x1E0DEE9D8];
    if (*(_QWORD *)(v28 + 16))
      goto LABEL_9;
  }
  else
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
    {
LABEL_9:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797AD0);
      v32 = sub_1C1426FBC();
      goto LABEL_12;
    }
  }
  v32 = MEMORY[0x1E0DEE9E0];
LABEL_12:
  v148 = v32;
  v33 = (_QWORD *)swift_bridgeObjectRetain();
  v34 = 0;
  sub_1C1336588(v33, 1, &v148);
  swift_bridgeObjectRelease();
  v35 = v148;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7979D8);
  v37 = v130;
  v130[6] = v35;
  v138 = v36;
  v37[9] = v36;
  v37[10] = 0x656B6F5468737570;
  v37[11] = 0xEA0000000000736ELL;
  __swift_project_boxed_opaque_existential_1(v128, v129[9]);
  v38 = sub_1C14264E8();
  v39 = *(_QWORD *)(v38 + 16);
  if (v39)
  {
    v139 = 0;
    v148 = v19;
    sub_1C1336948(0, v39, 0);
    v40 = (*(unsigned __int8 *)(v145 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80);
    v137 = (void (*)(char *, unint64_t, _QWORD *))v38;
    v41 = v38 + v40;
    v147 = *(_QWORD *)(v145 + 72);
    v140 = *(_QWORD **)(v145 + 16);
    do
    {
      v42 = v141;
      v43 = v142;
      ((void (*)(char *, unint64_t, uint64_t))v140)(v141, v41, v142);
      v44 = sub_1C1426470();
      v46 = v45;
      v47 = sub_1C142644C();
      v49 = v48;
      (*(void (**)(char *, uint64_t))(v145 + 8))(v42, v43);
      v50 = v148;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C1336948(0, *(_QWORD *)(v50 + 16) + 1, 1);
        v50 = v148;
      }
      v52 = *(_QWORD *)(v50 + 16);
      v51 = *(_QWORD *)(v50 + 24);
      if (v52 >= v51 >> 1)
      {
        sub_1C1336948(v51 > 1, v52 + 1, 1);
        v50 = v148;
      }
      *(_QWORD *)(v50 + 16) = v52 + 1;
      v53 = (_QWORD *)(v50 + 32 * v52);
      v53[4] = v44;
      v53[5] = v46;
      v53[6] = v47;
      v53[7] = v49;
      v41 += v147;
      --v39;
    }
    while (v39);
    swift_bridgeObjectRelease();
    v19 = MEMORY[0x1E0DEE9D8];
    v34 = (void (*)(char *, unint64_t, _QWORD *))v139;
    if (*(_QWORD *)(v50 + 16))
      goto LABEL_20;
  }
  else
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
    {
LABEL_20:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797AD0);
      v54 = sub_1C1426FBC();
      goto LABEL_23;
    }
  }
  v54 = MEMORY[0x1E0DEE9E0];
LABEL_23:
  v148 = v54;
  v55 = (_QWORD *)swift_bridgeObjectRetain();
  sub_1C1336588(v55, 1, &v148);
  if (v34)
    goto LABEL_70;
  swift_bridgeObjectRelease();
  v56 = (char *)v130;
  v130[12] = v148;
  *((_QWORD *)v56 + 15) = v138;
  strcpy(v56 + 128, "publicTokens");
  v56[141] = 0;
  *((_WORD *)v56 + 71) = -5120;
  __swift_project_boxed_opaque_existential_1(v128, v129[9]);
  v57 = sub_1C142650C();
  v58 = *(_QWORD *)(v57 + 16);
  if (v58)
  {
    v142 = 0;
    v148 = v19;
    sub_1C1336948(0, v58, 0);
    v59 = (*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80);
    v141 = (char *)v57;
    v60 = v57 + v59;
    v147 = *(_QWORD *)(v146 + 72);
    v145 = *(_QWORD *)(v146 + 16);
    do
    {
      v61 = v143;
      v62 = v144;
      ((void (*)(char *, unint64_t, uint64_t))v145)(v143, v60, v144);
      v63 = sub_1C1426584();
      v65 = v64;
      v66 = sub_1C142656C();
      v68 = v67;
      (*(void (**)(char *, uint64_t))(v146 + 8))(v61, v62);
      v69 = v148;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C1336948(0, *(_QWORD *)(v69 + 16) + 1, 1);
        v69 = v148;
      }
      v71 = *(_QWORD *)(v69 + 16);
      v70 = *(_QWORD *)(v69 + 24);
      if (v71 >= v70 >> 1)
      {
        sub_1C1336948(v70 > 1, v71 + 1, 1);
        v69 = v148;
      }
      *(_QWORD *)(v69 + 16) = v71 + 1;
      v72 = (_QWORD *)(v69 + 32 * v71);
      v72[4] = v63;
      v72[5] = v65;
      v72[6] = v66;
      v72[7] = v68;
      v60 += v147;
      --v58;
    }
    while (v58);
    swift_bridgeObjectRelease();
    v19 = MEMORY[0x1E0DEE9D8];
    v34 = (void (*)(char *, unint64_t, _QWORD *))v142;
    if (*(_QWORD *)(v69 + 16))
      goto LABEL_32;
  }
  else
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
    {
LABEL_32:
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797AD0);
      v73 = sub_1C1426FBC();
      goto LABEL_35;
    }
  }
  v73 = MEMORY[0x1E0DEE9E0];
LABEL_35:
  v148 = v73;
  v74 = (_QWORD *)swift_bridgeObjectRetain();
  sub_1C1336588(v74, 1, &v148);
  v137 = v34;
  if (v34)
    goto LABEL_70;
  swift_bridgeObjectRelease();
  v75 = v130;
  v130[18] = v148;
  v75[21] = v138;
  v75[22] = 0x73746567647562;
  v75[23] = 0xE700000000000000;
  __swift_project_boxed_opaque_existential_1(v129 + 11, v129[14]);
  v76 = sub_1C14265D8();
  v77 = *(_QWORD *)(v76 + 16);
  if (v77)
  {
    v148 = v19;
    sub_1C1336948(0, v77, 0);
    v79 = sub_1C135833C(v76);
    v80 = 0;
    v81 = (char *)(v76 + 64);
    v82 = *(_BYTE *)(v76 + 32);
    v129 = (uint64_t *)(v76 + 80);
    v142 = v76;
    v139 = v77;
    v140 = v78;
    v141 = (char *)(v76 + 64);
    do
    {
      if (v79 < 0 || v79 >= 1 << v82)
      {
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
        goto LABEL_70;
      }
      v86 = (unint64_t)v79 >> 6;
      if ((*(_QWORD *)&v81[8 * ((unint64_t)v79 >> 6)] & (1 << v79)) == 0)
        goto LABEL_65;
      if (*(_DWORD *)(v76 + 36) != (_DWORD)v78)
        goto LABEL_66;
      v144 = 1 << v79;
      v143 = v80;
      v87 = v136;
      v88 = v131;
      v89 = &v131[*(int *)(v136 + 48)];
      v90 = *(_QWORD *)(v76 + 56);
      v91 = (uint64_t *)(*(_QWORD *)(v76 + 48) + 16 * v79);
      v93 = *v91;
      v92 = v91[1];
      v94 = sub_1C14267C4();
      v145 = *(_QWORD *)(v94 - 8);
      v95 = *(void (**)(char *, uint64_t, uint64_t))(v145 + 16);
      v95(v89, v90 + *(_QWORD *)(v145 + 72) * v79, v94);
      *v88 = v93;
      v88[1] = v92;
      v96 = (uint64_t)v132;
      *v132 = v93;
      *(_QWORD *)(v96 + 8) = v92;
      v95((char *)(v96 + *(int *)(v87 + 48)), (uint64_t)v89, v94);
      v97 = v133;
      sub_1C132A724(v96, (uint64_t)v133, &qword_1ED792828);
      swift_bridgeObjectRetain_n();
      sub_1C132C860((uint64_t)v88, &qword_1ED792828);
      v98 = *(int *)(v87 + 48);
      v99 = v134;
      v100 = (char *)v134 + v98;
      v101 = (char *)v97 + v98;
      v102 = *v97;
      v103 = v97[1];
      *v134 = *v97;
      v99[1] = v103;
      v95((char *)v99 + v98, (uint64_t)v97 + v98, v94);
      v104 = *(int *)(v87 + 48);
      v105 = v102;
      v106 = (char *)v135;
      v107 = (char *)v135 + v104;
      *v135 = v105;
      *((_QWORD *)v106 + 1) = v103;
      v95(&v106[v104], (uint64_t)v101, v94);
      v147 = v103;
      swift_bridgeObjectRetain();
      v146 = sub_1C1426764();
      v109 = v108;
      v110 = *(void (**)(char *, uint64_t))(v145 + 8);
      v110(v107, v94);
      v110(v100, v94);
      sub_1C132C860((uint64_t)v97, &qword_1ED792828);
      v111 = v148;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C1336948(0, *(_QWORD *)(v111 + 16) + 1, 1);
        v111 = v148;
      }
      v113 = *(_QWORD *)(v111 + 16);
      v112 = *(_QWORD *)(v111 + 24);
      if (v113 >= v112 >> 1)
      {
        sub_1C1336948(v112 > 1, v113 + 1, 1);
        v111 = v148;
      }
      *(_QWORD *)(v111 + 16) = v113 + 1;
      v114 = (_QWORD *)(v111 + 32 * v113);
      v115 = v147;
      v114[4] = v105;
      v114[5] = v115;
      v114[6] = v146;
      v114[7] = v109;
      v76 = v142;
      v82 = *(_BYTE *)(v142 + 32);
      v83 = 1 << v82;
      if (v79 >= 1 << v82)
        goto LABEL_67;
      v81 = v141;
      v116 = *(_QWORD *)&v141[8 * v86];
      if ((v116 & v144) == 0)
        goto LABEL_68;
      LODWORD(v78) = (_DWORD)v140;
      if (*(_DWORD *)(v142 + 36) != (_DWORD)v140)
        goto LABEL_69;
      v117 = v116 & (-2 << (v79 & 0x3F));
      if (v117)
      {
        v83 = __clz(__rbit64(v117)) | v79 & 0xFFFFFFFFFFFFFFC0;
        v84 = (char *)v139;
        v85 = v143;
      }
      else
      {
        v118 = v86 + 1;
        v119 = (v83 + 63) >> 6;
        v84 = (char *)v139;
        v85 = v143;
        if (v86 + 1 < v119)
        {
          v120 = *(_QWORD *)&v141[8 * v118];
          if (v120)
          {
LABEL_57:
            v83 = __clz(__rbit64(v120)) + (v118 << 6);
          }
          else
          {
            while (v119 - 2 != v86)
            {
              v120 = v129[v86++];
              if (v120)
              {
                v118 = v86 + 1;
                goto LABEL_57;
              }
            }
          }
        }
      }
      v80 = v85 + 1;
      v79 = v83;
    }
    while (v80 != v84);
    swift_bridgeObjectRelease();
    if (!*(_QWORD *)(v111 + 16))
      goto LABEL_61;
    goto LABEL_59;
  }
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
  {
LABEL_59:
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797AD0);
    v121 = sub_1C1426FBC();
    goto LABEL_62;
  }
LABEL_61:
  v121 = MEMORY[0x1E0DEE9E0];
LABEL_62:
  v148 = v121;
  v122 = (_QWORD *)swift_bridgeObjectRetain();
  v123 = (void (*)(_QWORD, _QWORD, _QWORD))v137;
  sub_1C1336588(v122, 1, &v148);
  if (!v123)
  {
    swift_bridgeObjectRelease();
    v124 = v148;
    v125 = (uint64_t)v130;
    v130[27] = v138;
    *(_QWORD *)(v125 + 192) = v124;
    return sub_1C133204C(v125);
  }
LABEL_70:
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

unint64_t sub_1C13B08BC()
{
  return sub_1C13AFB10();
}

uint64_t sub_1C13B08DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v6;
  void *v8;
  id v9;
  void *v10;
  id v11;
  __int128 v12;
  _OWORD v13[3];

  objc_allocWithZone(MEMORY[0x1E0CA5870]);
  swift_bridgeObjectRetain();
  v6 = sub_1C13278E4(a3, a4, 0);
  v8 = v6;
  if (!v6)
    return 0;
  v9 = objc_msgSend(v6, sel_entitlements);
  v10 = (void *)sub_1C1426A7C();
  sub_1C13B22EC();
  v11 = objc_msgSend(v9, sel_objectForKey_ofClass_, v10, swift_getObjCClassFromMetadata());

  if (v11)
  {
    sub_1C1426DE8();
    swift_unknownObjectRelease();

    sub_1C13377A0(&v12, v13);
  }
  else
  {

    memset(v13, 0, 32);
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797BB0);
  if (swift_dynamicCast())
    return v12;
  else
    return 0;
}

uint64_t sub_1C13B0A3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  _QWORD v65[5];
  uint64_t v66;

  v63 = a3;
  v64 = a6;
  v58 = a4;
  v59 = a5;
  v55 = a2;
  v66 = a1;
  v57 = a7;
  v7 = sub_1C1425AEC();
  v61 = *(_QWORD *)(v7 - 8);
  v62 = v7;
  MEMORY[0x1E0C80A78](v7);
  v60 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_1C1425384();
  v9 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v11 = (uint64_t *)((char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = sub_1C14253A8();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (uint64_t *)((char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v55 - v17;
  v19 = sub_1C1425540();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (uint64_t *)((char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v20 + 16))(v22, v66, v19);
  v23 = (*(uint64_t (**)(uint64_t *, uint64_t))(v20 + 88))(v22, v19);
  if (v23 != *MEMORY[0x1E0C8F768])
  {
    v30 = v60;
    v31 = v61;
    v32 = v62;
    if (v23 != *MEMORY[0x1E0C8F770])
    {
      type metadata accessor for PermissionsError();
      sub_1C1329AD0(&qword_1EF6DBBD8, (uint64_t (*)(uint64_t))type metadata accessor for PermissionsError, (uint64_t)"%'f&");
      v34 = swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      result = (*(uint64_t (**)(uint64_t *, uint64_t))(v20 + 8))(v22, v19);
      goto LABEL_27;
    }
    (*(void (**)(uint64_t *, uint64_t))(v20 + 96))(v22, v19);
    v33 = v22[1];
    if (v33 < 2)
    {
      type metadata accessor for PermissionsError();
      sub_1C1329AD0(&qword_1EF6DBBD8, (uint64_t (*)(uint64_t))type metadata accessor for PermissionsError, (uint64_t)"%'f&");
      v34 = swift_allocError();
      swift_storeEnumTagMultiPayload();
      result = swift_willThrow();
      goto LABEL_27;
    }
    v36 = *v22;
    swift_bridgeObjectRetain();
    v37 = v30;
    sub_1C1425A74();
    v39 = v58;
    v38 = v59;
    if (v36 == v58 && v33 == v59)
    {
LABEL_21:
      v47 = v57;
      sub_1C1337B70(v39, v33);
      (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v47, v37, v32);
      v48 = *MEMORY[0x1E0C8F788];
      v49 = sub_1C1425558();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 104))(v47, v48, v49);
    }
    if ((sub_1C1427064() & 1) == 0)
    {
      v65[3] = MEMORY[0x1E0DEA968];
      v65[4] = &off_1E7A8CA60;
      v65[0] = v39;
      v65[1] = v38;
      v41 = __swift_project_boxed_opaque_existential_1(v65, MEMORY[0x1E0DEA968]);
      v43 = *v41;
      v42 = v41[1];
      swift_bridgeObjectRetain();
      v44 = sub_1C13B08DC(0xD000000000000038, 0x80000001C142F5B0, v43, v42);
      if ((v45 & 1) != 0)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
      }
      else
      {
        v46 = v44;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
        if (v46 == 1)
          goto LABEL_20;
      }
      type metadata accessor for PermissionsError();
      sub_1C1329AD0(&qword_1EF6DBBD8, (uint64_t (*)(uint64_t))type metadata accessor for PermissionsError, (uint64_t)"%'f&");
      v34 = swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v31 + 16))(v54, v37, v32);
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      sub_1C1337B70(v36, v33);
      result = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v37, v32);
      goto LABEL_27;
    }
LABEL_20:
    v39 = v36;
    goto LABEL_21;
  }
  v66 = v9;
  v24 = v63;
  (*(void (**)(uint64_t *, uint64_t))(v20 + 96))(v22, v19);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DBBE0);
  sub_1C1337B70(*(uint64_t *)((char *)v22 + *(int *)(v25 + 48)), *(uint64_t *)((char *)v22 + *(int *)(v25 + 48) + 8));
  (*(void (**)(char *, uint64_t *, uint64_t))(v13 + 32))(v18, v22, v12);
  (*(void (**)(uint64_t *, char *, uint64_t))(v13 + 16))(v16, v18, v12);
  v26 = (*(uint64_t (**)(uint64_t *, uint64_t))(v13 + 88))(v16, v12);
  if (v26 == *MEMORY[0x1E0C8F4C8])
  {
    (*(void (**)(uint64_t *, uint64_t))(v13 + 96))(v16, v12);
    v27 = v16[1];
    if (v24)
    {
      v28 = *v16;
      *v11 = v55;
      v11[1] = v24;
      v11[2] = v28;
      v11[3] = v27;
      v29 = (unsigned int *)MEMORY[0x1E0C8F498];
LABEL_11:
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v66 + 104))(v11, *v29, v56);
      swift_bridgeObjectRetain();
LABEL_24:
      swift_bridgeObjectRetain();
      v50 = v57;
      sub_1C1425390();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
      v51 = *MEMORY[0x1E0C8F750];
      v52 = sub_1C1425558();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 104))(v50, v51, v52);
    }
    swift_bridgeObjectRelease();
LABEL_26:
    type metadata accessor for PermissionsError();
    sub_1C1329AD0(&qword_1EF6DBBD8, (uint64_t (*)(uint64_t))type metadata accessor for PermissionsError, (uint64_t)"%'f&");
    v34 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    goto LABEL_27;
  }
  if (v26 == *MEMORY[0x1E0C8F4D0])
  {
    if (v24)
    {
      *v11 = v55;
      v11[1] = v24;
      v29 = (unsigned int *)MEMORY[0x1E0C8F490];
      goto LABEL_11;
    }
    goto LABEL_26;
  }
  if (v26 == *MEMORY[0x1E0C8F4D8])
  {
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v66 + 104))(v11, *MEMORY[0x1E0C8F4A0], v56);
    goto LABEL_24;
  }
  type metadata accessor for PermissionsError();
  sub_1C1329AD0(&qword_1EF6DBBD8, (uint64_t (*)(uint64_t))type metadata accessor for PermissionsError, (uint64_t)"%'f&");
  v34 = swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  v53 = *(void (**)(char *, uint64_t))(v13 + 8);
  v53(v18, v12);
  result = ((uint64_t (*)(uint64_t *, uint64_t))v53)(v16, v12);
LABEL_27:
  *v64 = v34;
  return result;
}

uint64_t sub_1C13B10F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v50 = sub_1C142641C();
  v48 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v49 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791E48);
  MEMORY[0x1E0C80A78](v3);
  v47 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_1C1425558();
  v39 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v46 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_1C14263E0();
  v37 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v45 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C14251B0();
  MEMORY[0x1E0C80A78](v7);
  v53 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_1C1426440();
  v43 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v42 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C1426320();
  v68 = *(_QWORD *)(v10 - 8);
  v69 = v10;
  v11 = MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  v40 = (char *)&v37 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7978C0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v51 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v54 = (char *)&v37 - v16;
  v17 = type metadata accessor for ActivityManagerEvent(0);
  MEMORY[0x1E0C80A78](v17);
  v55 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1C142671C();
  v56 = *(_QWORD *)(v19 - 8);
  v57 = v19;
  v20 = MEMORY[0x1E0C80A78](v19);
  v52 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v58 = (char *)&v37 - v22;
  v23 = sub_1C1425384();
  v24 = *(_QWORD *)(v23 - 8);
  v64 = v23;
  v65 = v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  MEMORY[0x1E0C80A78](v25);
  v59 = (char *)&v37 - v26;
  v27 = sub_1C142626C();
  v61 = *(_QWORD *)(v27 - 8);
  v62 = v27;
  v28 = MEMORY[0x1E0C80A78](v27);
  MEMORY[0x1E0C80A78](v28);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B90);
  v30 = MEMORY[0x1E0C80A78](v29);
  MEMORY[0x1E0C80A78](v30);
  v70 = sub_1C14253C0();
  v67 = *(_QWORD *)(v70 - 8);
  v31 = MEMORY[0x1E0C80A78](v70);
  v60 = (char *)&v37 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x1E0C80A78](v31);
  v34 = MEMORY[0x1E0C80A78](v33);
  MEMORY[0x1E0C80A78](v34);
  v63 = (char *)&v37 - v35;
  v66 = type metadata accessor for Activity();
  result = sub_1C1425A50();
  if ((result & 1) != 0)
    __asm { BR              X10 }
  return result;
}

uint64_t sub_1C13B1E8C()
{
  uint64_t v0;
  int *v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int EnumCaseMultiPayload;
  int *v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = (int *)type metadata accessor for ActivityParticipantEvent(0);
  v2 = (*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_unknownObjectRelease();
  v3 = v0 + v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v0 + v2 + v1[6];
  type metadata accessor for ActivityParticipantEvent.EventType(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v18 = sub_1C142557C();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v4, v18);
  }
  else if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease();
    v6 = (int *)type metadata accessor for Activity();
    v7 = v4 + v6[5];
    v8 = sub_1C1425978();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    v9 = v4 + v6[6];
    sub_1C1425A08();
    v10 = sub_1C1425AEC();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
    swift_bridgeObjectRelease();
    v11 = v4 + v6[8];
    v12 = sub_1C14251B0();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
    swift_bridgeObjectRelease();
    v13 = v4 + v6[11];
    v14 = sub_1C1425450();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
    v15 = v4 + v6[12];
    v16 = sub_1C142557C();
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      (*(void (**)(unint64_t, uint64_t))(v17 + 8))(v15, v16);
    swift_bridgeObjectRelease();
  }
  v19 = v3 + v1[7];
  v20 = sub_1C1425558();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  swift_unknownObjectRelease();
  v21 = v3 + v1[9];
  v22 = sub_1C1425450();
  v23 = *(_QWORD *)(v22 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  return swift_deallocObject();
}

uint64_t sub_1C13B20EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActivityParticipantEvent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C13B2130()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ActivityParticipantEvent(0) - 8) + 80);
  sub_1C13D0788(v0 + ((v1 + 32) & ~v1));
}

uint64_t sub_1C13B2170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = v5;
  v22 = a4;
  v23 = a5;
  v20 = a2;
  v21 = a3;
  v19 = sub_1C1425558();
  v8 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  if (v11)
  {
    v25 = MEMORY[0x1E0DEE9D8];
    sub_1C1336964(0, v11, 0);
    v12 = v25;
    v13 = *(_QWORD *)(sub_1C1425540() - 8);
    v14 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v15 = *(_QWORD *)(v13 + 72);
    while (1)
    {
      sub_1C13B0A3C(v14, v20, v21, v22, v23, &v24, (uint64_t)v10);
      if (v6)
        break;
      v6 = 0;
      v25 = v12;
      v17 = *(_QWORD *)(v12 + 16);
      v16 = *(_QWORD *)(v12 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1C1336964(v16 > 1, v17 + 1, 1);
        v12 = v25;
      }
      *(_QWORD *)(v12 + 16) = v17 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v12+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v17, v10, v19);
      v14 += v15;
      if (!--v11)
        return v12;
    }
    swift_release();
  }
  return v12;
}

unint64_t sub_1C13B22EC()
{
  unint64_t result;

  result = qword_1ED791F18;
  if (!qword_1ED791F18)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED791F18);
  }
  return result;
}

void sub_1C13B2328()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  uint64_t v6;

  v0 = sub_1C1425240();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB36A8]), sel_init);
  sub_1C1425234();
  v5 = (void *)sub_1C1425228();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v4, sel_setTimeZone_, v5);

  qword_1ED792730 = (uint64_t)v4;
}

uint64_t sub_1C13B23E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD aBlock[6];

  v2 = sub_1C1426950();
  v17 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1C14269B0();
  v5 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C142695C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1330F6C();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF538], v8);
  v12 = (void *)sub_1C1426D10();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  aBlock[4] = sub_1C13B34FC;
  aBlock[5] = a1;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C13A7F4C;
  aBlock[3] = &block_descriptor_9;
  v13 = _Block_copy(aBlock);
  swift_retain();
  sub_1C1426974();
  v18 = MEMORY[0x1E0DEE9D8];
  sub_1C1329AD0((unint64_t *)&qword_1ED7979D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A50);
  sub_1C1331180();
  sub_1C1426DF4();
  MEMORY[0x1C3BAC9D4](0, v7, v4, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v17 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v16);
  return swift_release();
}

uint64_t sub_1C13B2620(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t Strong;
  uint64_t v7;
  os_unfair_lock_s *v8;
  void *v9;
  void (*v10)(uint64_t);
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v7 = Strong;
    v8 = *(os_unfair_lock_s **)(*(_QWORD *)(Strong + 24) + 16);
    swift_retain();
    os_unfair_lock_lock(v8);
    objc_msgSend(*(id *)(v7 + 16), sel_invalidate);
    v9 = *(void **)(v7 + 16);
    *(_QWORD *)(v7 + 16) = 0;

    os_unfair_lock_unlock(v8);
    swift_release();
    v10 = *(void (**)(uint64_t))(v7 + 32);
    if (v10)
    {
      swift_retain();
      v10(a4);
      sub_1C1382580((uint64_t)v10);
    }
    a1(1);
    return swift_release();
  }
  else
  {
    if (qword_1ED793988 != -1)
      swift_once();
    v12 = sub_1C1426854();
    __swift_project_value_buffer(v12, (uint64_t)qword_1ED7985E0);
    v13 = sub_1C1426848();
    v14 = sub_1C1426C74();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_1C1324000, v13, v14, "Wake scheduler unexpectedly deallocated", v15, 2u);
      MEMORY[0x1C3BAD3F4](v15, -1, -1);
    }

    return ((uint64_t (*)(uint64_t))a1)(1);
  }
}

uint64_t sub_1C13B27C4(uint64_t a1, void *aBlock)
{
  void (*v2)(uint64_t (*)(), uint64_t);
  void *v3;
  uint64_t v4;

  v2 = *(void (**)(uint64_t (*)(), uint64_t))(a1 + 32);
  v3 = _Block_copy(aBlock);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  swift_retain();
  v2(sub_1C13B34EC, v4);
  swift_release();
  return swift_release();
}

uint64_t sub_1C13B2834()
{
  uint64_t v0;

  swift_release();
  sub_1C1382580(*(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WakingTaskScheduler()
{
  return objc_opt_self();
}

uint64_t sub_1C13B2888(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 32);
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return sub_1C1382580(v3);
}

uint64_t sub_1C13B289C(uint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;

  v3 = *(os_unfair_lock_s **)(*(_QWORD *)(v1 + 24) + 16);
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_1C13B2BC8(v1, a1);
  os_unfair_lock_unlock(v3);
  return swift_release();
}

uint64_t sub_1C13B28F0(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_1C13B2900(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

_BYTE **sub_1C13B2934(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

uint64_t sub_1C13B2944(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_1C132AD90(v6, v7, a3);
  v8 = *a1 + 8;
  sub_1C1426DB8();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_1C13B29B4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_1C1426B3C();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x1C3BAC7F4](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

uint64_t sub_1C13B2A2C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797B90);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1C1426FC8();
  __break(1u);
  return result;
}

uint64_t sub_1C13B2B78(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v5;
  uint64_t result;

  a4();
  v5 = *a1 + 8;
  result = sub_1C1426DB8();
  *a1 = v5;
  return result;
}

uint64_t sub_1C13B2BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  _BYTE *v22;
  void *v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  BOOL v27;
  uint64_t v28;
  uint8_t *v29;
  char v30;
  void (*v31)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v32;
  uint64_t v33;
  _BYTE *v34;
  _BYTE *v35;
  NSObject *v36;
  int v37;
  _BOOL4 v38;
  void (*v39)(_BYTE *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  id v42;
  _BYTE *v43;
  void *v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  void (*v49)(_BYTE *, uint64_t);
  _BYTE *v50;
  uint64_t v51;
  os_log_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  void *v56;
  id v57;
  void *v58;
  id v59;
  uint64_t v60;
  double v61;
  uint64_t v62;
  _BYTE *v63;
  unint64_t v64;
  uint64_t v65;
  void *v66;
  _BYTE v68[4];
  int v69;
  os_log_t v70;
  uint64_t v71;
  void (*v72)(_BYTE *, uint64_t);
  void (*v73)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v74;
  void (*v75)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v76;
  _BYTE *v77;
  uint64_t v78;
  _BYTE *v79;
  _BYTE *v80;
  _BYTE *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t aBlock[7];

  v81 = (_BYTE *)a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B60);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v68[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_1C14251B0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x1E0C80A78](v6);
  v80 = &v68[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = MEMORY[0x1E0C80A78](v9);
  v79 = &v68[-v11];
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = &v68[-v13];
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = &v68[-v16];
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = &v68[-v19];
  MEMORY[0x1E0C80A78](v18);
  v22 = &v68[-v21];
  sub_1C1425F0C();
  swift_allocObject();
  v82 = sub_1C1425EF4();
  objc_msgSend(*(id *)(a1 + 16), sel_invalidate);
  v23 = *(void **)(a1 + 16);
  v78 = a1;
  *(_QWORD *)(a1 + 16) = 0;

  sub_1C13B3358((uint64_t)v81, (uint64_t)v5);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1C13B33A0((uint64_t)v5);
    if (qword_1ED793988 != -1)
      swift_once();
    v24 = sub_1C1426854();
    __swift_project_value_buffer(v24, (uint64_t)qword_1ED7985E0);
    v25 = sub_1C1426848();
    v26 = sub_1C1426C80();
    v27 = os_log_type_enabled(v25, v26);
    v28 = v82;
    if (v27)
    {
      v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v29 = 0;
      _os_log_impl(&dword_1C1324000, v25, v26, "Skipping next scheduled wake task - next date is nil", v29, 2u);
      MEMORY[0x1C3BAD3F4](v29, -1, -1);
    }

  }
  else
  {
    v75 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32);
    v75(v22, v5, v6);
    sub_1C142518C();
    sub_1C142512C();
    v72 = *(void (**)(_BYTE *, uint64_t))(v7 + 8);
    v72(v17, v6);
    sub_1C1329AD0((unint64_t *)&qword_1ED7935D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
    v30 = sub_1C1426A64();
    v31 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16);
    if ((v30 & 1) != 0)
      v32 = v20;
    else
      v32 = v22;
    v31(v14, (uint64_t)v32, v6);
    v81 = v14;
    if (qword_1ED793988 != -1)
      swift_once();
    v33 = sub_1C1426854();
    __swift_project_value_buffer(v33, (uint64_t)qword_1ED7985E0);
    v34 = v79;
    v31(v79, (uint64_t)v22, v6);
    v35 = v80;
    v73 = v31;
    v31(v80, (uint64_t)v22, v6);
    v36 = sub_1C1426848();
    v37 = sub_1C1426C80();
    v38 = os_log_type_enabled(v36, (os_log_type_t)v37);
    v76 = v22;
    v77 = v20;
    v74 = v17;
    if (v38)
    {
      v69 = v37;
      v70 = v36;
      v71 = v7;
      v39 = v72;
      v40 = swift_slowAlloc();
      v41 = swift_slowAlloc();
      aBlock[0] = v41;
      *(_DWORD *)v40 = 136446466;
      if (qword_1ED791E78 != -1)
        swift_once();
      v42 = (id)qword_1ED792730;
      v43 = v79;
      v44 = (void *)sub_1C1425138();
      v45 = objc_msgSend(v42, sel_stringFromDate_, v44);

      v46 = sub_1C1426A88();
      v48 = v47;

      v83 = sub_1C132AD90(v46, v48, aBlock);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      v49 = v39;
      v39(v43, v6);
      *(_WORD *)(v40 + 12) = 2048;
      v50 = v80;
      sub_1C1425168();
      v83 = v51;
      sub_1C1426DB8();
      v39(v50, v6);
      v52 = v70;
      _os_log_impl(&dword_1C1324000, v70, (os_log_type_t)v69, "Scheduling waking task for adjusted date: %{public}s in %fs", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v41, -1, -1);
      MEMORY[0x1C3BAD3F4](v40, -1, -1);

      v53 = (uint64_t)v81;
      v28 = v82;
      v7 = v71;
    }
    else
    {
      v49 = v72;
      v72(v34, v6);
      v49(v35, v6);

      v53 = (uint64_t)v81;
      v28 = v82;
    }
    v54 = v78;
    v55 = objc_allocWithZone(MEMORY[0x1E0CB34B0]);
    v56 = (void *)sub_1C1426A7C();
    v57 = objc_msgSend(v55, sel_initWithIdentifier_, v56);

    v58 = *(void **)(v54 + 16);
    *(_QWORD *)(v54 + 16) = v57;
    v59 = v57;

    objc_msgSend(v59, sel_setQualityOfService_, 33);
    objc_msgSend(v59, sel_setRepeats_, 0);
    v60 = v53;
    sub_1C1425168();
    objc_msgSend(v59, sel_setInterval_);
    objc_msgSend(v59, sel_setTolerance_, 10.0);
    objc_msgSend(v59, sel_interval);
    if (v61 < 0.0)
      objc_msgSend(v59, sel_setInterval_, 1.0);
    v62 = swift_allocObject();
    swift_weakInit();
    v63 = v74;
    v73(v74, v60, v6);
    v64 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v65 = swift_allocObject();
    *(_QWORD *)(v65 + 16) = v62;
    v75((_BYTE *)(v65 + v64), v63, v6);
    aBlock[4] = (uint64_t)sub_1C13B3478;
    aBlock[5] = v65;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1C13B27C4;
    aBlock[3] = (uint64_t)&block_descriptor_17;
    v66 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v59, sel_scheduleWithBlock_, v66);
    _Block_release(v66);

    v49((_BYTE *)v60, v6);
    v49(v77, v6);
    v49(v76, v6);
  }
  sub_1C13B23E8(v28);
  return swift_release();
}

uint64_t sub_1C13B3358(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C13B33A0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B60);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C13B33E0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C13B3404()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1C14251B0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1C13B3478(void (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1C14251B0() - 8) + 80);
  return sub_1C13B2620(a1, a2, *(_QWORD *)(v2 + 16), v2 + ((v5 + 24) & ~v5));
}

uint64_t sub_1C13B34C8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1C13B34EC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_1C13B3508()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CachingAssertionStore()
{
  return objc_opt_self();
}

uint64_t sub_1C13B354C()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C13B358C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED797768);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C1425CC0();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v8 + 16))(v7, a1);
  sub_1C13A5F94(a1, (uint64_t)v4);
  v9 = type metadata accessor for Assertion();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 0, 1, v9);
  swift_beginAccess();
  sub_1C13B37EC((uint64_t)v4, (uint64_t)v7);
  return swift_endAccess();
}

uint64_t sub_1C13B3698(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED797768);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C1425CC0();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v8 + 16))(v7, a1);
  v9 = type metadata accessor for Assertion();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
  swift_beginAccess();
  sub_1C13B37EC((uint64_t)v4, (uint64_t)v7);
  return swift_endAccess();
}

uint64_t sub_1C13B3798()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = MEMORY[0x1E0DEE9E0];
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C13B37E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_1C13B37EC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED797768);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Assertion();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_1C132C860(a1, qword_1ED797768);
    sub_1C13C0370(a2, (uint64_t)v8);
    v13 = sub_1C1425CC0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a2, v13);
    return sub_1C132C860((uint64_t)v8, qword_1ED797768);
  }
  else
  {
    sub_1C1339140(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v3;
    *v3 = 0x8000000000000000;
    sub_1C13C207C((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v18;
    swift_bridgeObjectRelease();
    v16 = sub_1C1425CC0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_1C13B396C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C13B3C1C(a1, a2, a3, &qword_1ED797560, (uint64_t (*)(_QWORD))type metadata accessor for Activity, &qword_1ED797B00);
}

unint64_t sub_1C13B3988(uint64_t a1, unsigned int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  unint64_t result;
  char v8;
  unint64_t v9;
  int v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;

  v3 = v2;
  if (a1)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v2;
    *v2 = 0x8000000000000000;
    sub_1C1330710(a1, a2, isUniquelyReferenced_nonNull_native, &qword_1ED792860);
    *v2 = v13;
  }
  else
  {
    result = sub_1C1327378(a2);
    if ((v8 & 1) == 0)
      return result;
    v9 = result;
    v10 = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v2;
    v14 = *v3;
    *v3 = 0x8000000000000000;
    if (!v10)
    {
      sub_1C13BC060(&qword_1ED792860);
      v11 = v14;
    }
    v12 = *(void **)(*(_QWORD *)(v11 + 56) + 8 * v9);
    sub_1C13C1D8C(v9, v11);
    *v3 = v11;

  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C13B3A74(uint64_t a1, unsigned int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  v3 = v2;
  if (*(_QWORD *)(a1 + 24))
  {
    sub_1C1339184((__int128 *)a1, (uint64_t)&v18);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = *v2;
    *v2 = 0x8000000000000000;
    v6 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v18, *((uint64_t *)&v19 + 1));
    MEMORY[0x1E0C80A78](v6);
    v8 = (uint64_t *)((char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v9 + 16))(v8);
    sub_1C13C3728(*v8, a2, isUniquelyReferenced_nonNull_native, &v17);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v18);
    *v2 = v17;
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C132C860(a1, &qword_1ED792CA8);
    v11 = sub_1C1327378(a2);
    if ((v12 & 1) != 0)
    {
      v13 = v11;
      v14 = swift_isUniquelyReferenced_nonNull_native();
      v15 = *v3;
      v17 = *v3;
      *v3 = 0x8000000000000000;
      if ((v14 & 1) == 0)
      {
        sub_1C13BAFE4();
        v15 = v17;
      }
      sub_1C1339184((__int128 *)(*(_QWORD *)(v15 + 56) + 40 * v13), (uint64_t)&v18);
      sub_1C13C1390(v13, v15);
      *v3 = v15;
      swift_bridgeObjectRelease();
    }
    else
    {
      v20 = 0;
      v18 = 0u;
      v19 = 0u;
    }
    return sub_1C132C860((uint64_t)&v18, &qword_1ED792CA8);
  }
}

uint64_t sub_1C13B3C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C13B3C1C(a1, a2, a3, &qword_1ED793530, (uint64_t (*)(_QWORD))type metadata accessor for XPCInputParticipant.ActivityUpdate, (uint64_t *)&unk_1ED7935A8);
}

uint64_t sub_1C13B3C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(_QWORD), uint64_t *a6)
{
  uint64_t *v6;
  uint64_t *v10;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  uint64_t v24;

  v10 = v6;
  v14 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a5(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v23 - v18;
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v20 + 48))(a1, 1) == 1)
  {
    sub_1C132C860(a1, a4);
    sub_1C13C074C(a2, a3, a5, a6, (uint64_t)v16);
    swift_bridgeObjectRelease();
    return sub_1C132C860((uint64_t)v16, a4);
  }
  else
  {
    sub_1C1339140(a1, (uint64_t)v19, a5);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v24 = *v10;
    *v10 = 0x8000000000000000;
    sub_1C13C2D08((uint64_t)v19, a2, a3, isUniquelyReferenced_nonNull_native, a5, a6);
    *v10 = v24;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C13B3D9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C13B3C1C(a1, a2, a3, &qword_1ED793390, (uint64_t (*)(_QWORD))type metadata accessor for SlidingWindowExponentialBackoff, &qword_1ED7935B8);
}

uint64_t sub_1C13B3DB8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED792908);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for TaskScheduler.Task();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_1C132C860(a1, &qword_1ED792908);
    v13 = sub_1C13B9B48(a2);
    if ((v14 & 1) != 0)
    {
      v15 = v13;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v17 = *v3;
      v22 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_1C13BBAA0();
        v17 = v22;
      }
      sub_1C1339140(*(_QWORD *)(v17 + 56) + *(_QWORD *)(v10 + 72) * v15, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
      sub_1C13C19FC(v15, v17);
      *v3 = v17;
      swift_bridgeObjectRelease();
      v18 = 0;
    }
    else
    {
      v18 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v18, 1, v9);
    return sub_1C132C860((uint64_t)v8, &qword_1ED792908);
  }
  else
  {
    sub_1C1339140(a1, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
    v19 = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v3;
    *v3 = 0x8000000000000000;
    sub_1C13C2FA8((uint64_t)v12, a2, v19);
    *v3 = v22;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C13B3F90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t result;
  int64_t v28;
  void (*v29)(char *, uint64_t);
  unint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t i;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char *v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char v49;
  char *v50;
  char v51;
  char *v52;
  char *v53;
  char v54;
  void (*v55)(char *, uint64_t);
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60[2];
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int64_t v77;
  uint64_t v78;
  void (*v79)(char *, unint64_t, uint64_t);
  uint64_t v80;
  char *v81;
  char *v82;

  v67 = a1;
  v60[0] = a4;
  v6 = sub_1C14251B0();
  v65 = *(_QWORD *)(v6 - 8);
  v66 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v64 = (char *)v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v63 = (char *)v60 - v9;
  v10 = sub_1C1425E88();
  v76 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v81 = (char *)v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v60 - v13;
  v15 = type metadata accessor for TaskScheduler.Task();
  v75 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)v60 - v20;
  MEMORY[0x1E0C80A78](v19);
  v74 = (uint64_t)v60 - v22;
  v23 = *(_QWORD *)(a2 + 64);
  v69 = a2 + 64;
  v24 = 1 << *(_BYTE *)(a2 + 32);
  v25 = -1;
  if (v24 < 64)
    v25 = ~(-1 << v24);
  v26 = v25 & v23;
  v71 = (unint64_t)(v24 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v28 = 0;
  v68 = a2;
  v61 = a3;
  v62 = v18;
  v80 = v10;
  v82 = v14;
  v70 = v15;
  v73 = v21;
  while (1)
  {
    if (v26)
    {
      v77 = v28;
      v78 = (v26 - 1) & v26;
      v30 = __clz(__rbit64(v26)) | (v28 << 6);
    }
    else
    {
      v31 = v28 + 1;
      if (__OFADD__(v28, 1))
        goto LABEL_42;
      if (v31 >= v71)
      {
LABEL_40:
        swift_release();
        sub_1C1339140(v67, v60[0], (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
        return swift_bridgeObjectRelease();
      }
      v32 = *(_QWORD *)(v69 + 8 * v31);
      i = v28 + 1;
      if (!v32)
      {
        i = v28 + 2;
        if (v28 + 2 >= v71)
          goto LABEL_40;
        v32 = *(_QWORD *)(v69 + 8 * i);
        if (!v32)
        {
          i = v28 + 3;
          if (v28 + 3 >= v71)
            goto LABEL_40;
          v32 = *(_QWORD *)(v69 + 8 * i);
          if (!v32)
          {
            i = v28 + 4;
            if (v28 + 4 >= v71)
              goto LABEL_40;
            v32 = *(_QWORD *)(v69 + 8 * i);
            if (!v32)
            {
              v34 = v28 + 5;
              if (v28 + 5 >= v71)
                goto LABEL_40;
              v32 = *(_QWORD *)(v69 + 8 * v34);
              for (i = v28 + 5; !v32; ++v34)
              {
                i = v34 + 1;
                if (__OFADD__(v34, 1))
                  goto LABEL_43;
                if (i >= v71)
                  goto LABEL_40;
                v32 = *(_QWORD *)(v69 + 8 * i);
              }
            }
          }
        }
      }
      v77 = i;
      v78 = (v32 - 1) & v32;
      v30 = __clz(__rbit64(v32)) + (i << 6);
    }
    v35 = v74;
    sub_1C1338F24(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v75 + 72) * v30, v74, (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
    sub_1C1339140(v35, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
    v36 = &v21[*(int *)(v15 + 20)];
    sub_1C1425E94();
    v37 = *(_QWORD *)(a3 + 16);
    if (!v37)
    {
      v29 = *(void (**)(char *, uint64_t))(v76 + 8);
LABEL_5:
      v21 = v73;
      v29(v14, v10);
      v28 = v77;
      goto LABEL_6;
    }
    v72 = v36;
    v38 = v76;
    v39 = (*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
    v40 = v81;
    v79 = *(void (**)(char *, unint64_t, uint64_t))(v76 + 16);
    v79(v81, a3 + v39, v10);
    sub_1C1329AD0((unint64_t *)&unk_1ED792760, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8CD40], MEMORY[0x1E0D8CD50]);
    swift_bridgeObjectRetain();
    v41 = sub_1C1426A70();
    v29 = *(void (**)(char *, uint64_t))(v38 + 8);
    v29(v40, v10);
    if ((v41 & 1) == 0)
      break;
    v42 = v67;
    swift_bridgeObjectRelease();
LABEL_36:
    v10 = v80;
    v29(v82, v80);
    v52 = v63;
    sub_1C1425E64();
    v15 = v70;
    v53 = v64;
    sub_1C1425E64();
    v54 = sub_1C1425150();
    v55 = *(void (**)(char *, uint64_t))(v65 + 8);
    v56 = v53;
    v57 = v66;
    v55(v56, v66);
    v55(v52, v57);
    if ((v54 & 1) != 0)
    {
      sub_1C13B98C4(v42);
      v21 = v73;
      v58 = (uint64_t)v62;
      sub_1C1338F24((uint64_t)v73, (uint64_t)v62, (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
      a2 = v68;
      v59 = v42;
      v14 = v82;
    }
    else
    {
      v58 = (uint64_t)v62;
      sub_1C1339140(v42, (uint64_t)v62, (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
      a2 = v68;
      v59 = v42;
      v14 = v82;
      v21 = v73;
    }
    v28 = v77;
    sub_1C1339140(v58, v59, (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
LABEL_6:
    result = sub_1C13B98C4((uint64_t)v21);
    v26 = v78;
  }
  if (v37 == 1)
  {
    swift_bridgeObjectRelease();
LABEL_34:
    v10 = v80;
    v14 = v82;
    v15 = v70;
    goto LABEL_5;
  }
  v43 = *(_QWORD *)(v76 + 72);
  v44 = a3 + v43 + v39;
  v45 = 1;
  while (1)
  {
    v46 = v80;
    v47 = v81;
    result = ((uint64_t (*)(char *, unint64_t, uint64_t))v79)(v81, v44, v80);
    v48 = v45 + 1;
    if (__OFADD__(v45, 1))
      break;
    v49 = sub_1C1426A70();
    v50 = v47;
    v51 = v49;
    v29(v50, v46);
    if ((v51 & 1) != 0)
    {
      a3 = v61;
      swift_bridgeObjectRelease();
      v42 = v67;
      goto LABEL_36;
    }
    ++v45;
    v44 += v43;
    if (v48 == v37)
    {
      a3 = v61;
      swift_bridgeObjectRelease();
      a2 = v68;
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_1C13B4550()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD v7[2];
  _QWORD v8[2];

  v1 = sub_1C1425EA0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[0] = 0;
  v8[1] = 0xE000000000000000;
  sub_1C1426F08();
  swift_bridgeObjectRelease();
  strcpy((char *)v8, "identifier: ");
  BYTE5(v8[1]) = 0;
  HIWORD(v8[1]) = -5120;
  v7[1] = *(_QWORD *)v0;
  sub_1C1427058();
  sub_1C14252D0();
  swift_bridgeObjectRelease();
  sub_1C14252D0();
  v5 = type metadata accessor for TaskScheduler.Task();
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, &v0[*(int *)(v5 + 20)], v1);
  sub_1C1426AA0();
  sub_1C14252D0();
  swift_bridgeObjectRelease();
  return v8[0];
}

uint64_t sub_1C13B468C(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + *(int *)(a1 + 28)))();
}

void sub_1C13B46B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  uint64_t v6;

  v0 = sub_1C1425240();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB36A8]), sel_init);
  sub_1C1425234();
  v5 = (void *)sub_1C1425228();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v4, sel_setTimeZone_, v5);

  qword_1ED791E68 = (uint64_t)v4;
}

uint64_t *sub_1C13B4778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(void (*)(uint64_t), uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(void (*)(uint64_t), uint64_t, uint64_t, uint64_t);
  NSObject *v22;
  uint64_t v23;
  void *v24;
  NSObject *v25;
  void *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t);
  void *v31;
  void (*v32)(void *);
  uint64_t v33;

  v5 = v4;
  v10 = *v5;
  type metadata accessor for UnfairLock();
  v11 = swift_allocObject();
  v12 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v11 + 16) = v12;
  *v12 = 0;
  v13 = MEMORY[0x1E0DEE9E0];
  v5[2] = v11;
  v5[3] = v13;
  v5[4] = 0;
  v5[5] = a1;
  v5[6] = a2;
  v5[7] = a3;
  v5[8] = a4;
  v5[9] = 0;
  if (!a1)
  {
    swift_unknownObjectRetain();
    if (!a3)
      goto LABEL_4;
    goto LABEL_3;
  }
  ObjectType = swift_getObjectType();
  v15 = swift_allocObject();
  swift_weakInit();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = v10;
  v17 = *(void (**)(void (*)(uint64_t), uint64_t, uint64_t, uint64_t))(a2 + 16);
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  v17(sub_1C13C38BC, v16, ObjectType, a2);
  swift_release();
  if (v5[7])
  {
LABEL_3:
    v18 = v5[8];
    v19 = swift_getObjectType();
    v20 = swift_allocObject();
    swift_weakInit();
    v21 = *(void (**)(void (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v18 + 16);
    swift_unknownObjectRetain();
    swift_retain();
    v21(sub_1C13C38C4, v20, v19, v18);
    swift_unknownObjectRelease();
    swift_release();
  }
LABEL_4:
  sub_1C13B5354();
  sub_1C1330F6C();
  v22 = sub_1C1426CE0();
  v32 = sub_1C13B5E2C;
  v33 = 0;
  v23 = MEMORY[0x1E0C809B0];
  v28 = MEMORY[0x1E0C809B0];
  v29 = 1107296256;
  v30 = sub_1C13B5E38;
  v31 = &block_descriptor_18;
  v24 = _Block_copy(&v28);
  xpc_set_event_stream_handler("com.apple.distnoted.matching", v22, v24);
  _Block_release(v24);

  v25 = sub_1C1426CE0();
  v32 = sub_1C13B5E80;
  v33 = 0;
  v28 = v23;
  v29 = 1107296256;
  v30 = sub_1C13B5E38;
  v31 = &block_descriptor_11;
  v26 = _Block_copy(&v28);
  xpc_set_event_stream_handler("com.apple.notifyd.matching", v25, v26);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  _Block_release(v26);

  return v5;
}

void sub_1C13B4A18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  int v19;
  uint8_t *v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t aBlock[6];

  v2 = sub_1C1426950();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C14269B0();
  v53 = *(_QWORD *)(v6 - 8);
  v54 = v6;
  MEMORY[0x1E0C80A78](v6);
  v52 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C142695C();
  v50 = *(_QWORD *)(v8 - 8);
  v51 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C14251B0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v16 = Strong;
    v49 = v5;
    sub_1C1425F0C();
    swift_allocObject();
    v48 = sub_1C1425EF4();
    if (qword_1ED793988 != -1)
      swift_once();
    v17 = sub_1C1426854();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED7985E0);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
    v18 = sub_1C1426848();
    v19 = sub_1C1426C80();
    if (os_log_type_enabled(v18, (os_log_type_t)v19))
    {
      v44 = v19;
      v46 = v3;
      v47 = v2;
      v20 = (uint8_t *)swift_slowAlloc();
      v43 = swift_slowAlloc();
      aBlock[0] = v43;
      v45 = v20;
      *(_DWORD *)v20 = 136446210;
      if (qword_1ED791E70 != -1)
        swift_once();
      v21 = (id)qword_1ED791E68;
      v22 = (void *)sub_1C1425138();
      v23 = objc_msgSend(v21, sel_stringFromDate_, v22);

      v24 = sub_1C1426A88();
      v26 = v25;

      v27 = sub_1C132AD90(v24, v26, aBlock);
      v28 = v45;
      v55 = v27;
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      _os_log_impl(&dword_1C1324000, v18, (os_log_type_t)v44, "Wake event fired for date: %{public}s", v28, 0xCu);
      v29 = v43;
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v29, -1, -1);
      MEMORY[0x1C3BAD3F4](v28, -1, -1);

      v3 = v46;
      v2 = v47;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);

    }
    sub_1C13B4FE8();
    sub_1C1330F6C();
    v35 = v50;
    v34 = v51;
    (*(void (**)(char *, _QWORD, uint64_t))(v50 + 104))(v10, *MEMORY[0x1E0DEF538], v51);
    v36 = (void *)sub_1C1426D10();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v10, v34);
    v37 = swift_allocObject();
    v38 = v48;
    *(_QWORD *)(v37 + 16) = v16;
    *(_QWORD *)(v37 + 24) = v38;
    aBlock[4] = (uint64_t)sub_1C13C38D0;
    aBlock[5] = v37;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1C13A7F4C;
    aBlock[3] = (uint64_t)&block_descriptor_23_1;
    v39 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    v40 = v52;
    sub_1C1426974();
    v55 = MEMORY[0x1E0DEE9D8];
    sub_1C1329AD0((unint64_t *)&qword_1ED7979D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A50);
    sub_1C1331180();
    v41 = v49;
    sub_1C1426DF4();
    MEMORY[0x1C3BAC9D4](0, v40, v41, v39);
    _Block_release(v39);
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v3 + 8))(v41, v2);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v40, v54);
    swift_release();
  }
  else
  {
    if (qword_1ED793988 != -1)
      swift_once();
    v30 = sub_1C1426854();
    __swift_project_value_buffer(v30, (uint64_t)qword_1ED7985E0);
    v31 = sub_1C1426848();
    v32 = sub_1C1426C74();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v33 = 0;
      _os_log_impl(&dword_1C1324000, v31, v32, "Task scheduler unexpectedly deallocated", v33, 2u);
      MEMORY[0x1C3BAD3F4](v33, -1, -1);
    }

  }
}

uint64_t sub_1C13B4FE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  os_unfair_lock_s *v10;
  uint64_t result;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t);
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED792870);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (uint64_t *)((char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v32 - v5;
  v7 = sub_1C14251B0();
  v35 = *(_QWORD *)(v7 - 8);
  v36 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C142518C();
  v10 = *(os_unfair_lock_s **)(*(_QWORD *)(v0 + 16) + 16);
  swift_retain();
  os_unfair_lock_lock(v10);
  v34 = v9;
  sub_1C13B8688(v0, (uint64_t)v9, &v38);
  os_unfair_lock_unlock(v10);
  result = swift_release();
  v12 = 0;
  v13 = v38;
  v14 = *(_QWORD *)(v38 + 64);
  v37 = v38 + 64;
  v15 = 1 << *(_BYTE *)(v38 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v18 = (unint64_t)(v15 + 63) >> 6;
  v33 = v18 - 1;
  if ((v16 & v14) == 0)
    goto LABEL_8;
LABEL_6:
  v22 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  v23 = v22 | (v12 << 6);
  while (2)
  {
    v24 = *(_QWORD *)(v13 + 56);
    *v4 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 8 * v23);
    v25 = v24 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for TaskScheduler.Task() - 8) + 72) * v23;
    v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7931B8);
    sub_1C1338F24(v25, (uint64_t)v4 + *(int *)(v26 + 48), (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v4, 0, 1, v26);
    while (1)
    {
      sub_1C132A724((uint64_t)v4, (uint64_t)v6, &qword_1ED792870);
      v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7931B8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v6, 1, v31) == 1)
      {
        swift_release();
        return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v34, v36);
      }
      v19 = (uint64_t)&v6[*(int *)(v31 + 48)];
      v20 = *(void (**)(uint64_t))(v19 + *(int *)(type metadata accessor for TaskScheduler.Task() + 24));
      swift_retain();
      v21 = sub_1C13B98C4(v19);
      v20(v21);
      result = swift_release();
      if (v17)
        goto LABEL_6;
LABEL_8:
      v27 = v12 + 1;
      if (__OFADD__(v12, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v27 < v18)
      {
        v28 = *(_QWORD *)(v37 + 8 * v27);
        if (v28)
          goto LABEL_11;
        v29 = v12 + 2;
        ++v12;
        if (v27 + 1 < v18)
        {
          v28 = *(_QWORD *)(v37 + 8 * v29);
          if (v28)
            goto LABEL_14;
          v12 = v27 + 1;
          if (v27 + 2 < v18)
          {
            v28 = *(_QWORD *)(v37 + 8 * (v27 + 2));
            if (v28)
            {
              v27 += 2;
              goto LABEL_11;
            }
            v29 = v27 + 3;
            v12 = v27 + 2;
            if (v27 + 3 < v18)
              break;
          }
        }
      }
LABEL_25:
      v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7931B8);
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v4, 1, 1, v30);
      v17 = 0;
    }
    v28 = *(_QWORD *)(v37 + 8 * v29);
    if (v28)
    {
LABEL_14:
      v27 = v29;
LABEL_11:
      v17 = (v28 - 1) & v28;
      v23 = __clz(__rbit64(v28)) + (v27 << 6);
      v12 = v27;
      continue;
    }
    break;
  }
  while (1)
  {
    v27 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v27 >= v18)
    {
      v12 = v33;
      goto LABEL_25;
    }
    v28 = *(_QWORD *)(v37 + 8 * v27);
    ++v29;
    if (v28)
      goto LABEL_11;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1C13B5354()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  os_unfair_lock_s *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t result;
  int64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  int64_t v46;
  unint64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  os_unfair_lock_t v52[2];
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  int64_t v57;
  unsigned int v58;
  _QWORD *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v1 = sub_1C1425E88();
  v66 = *(_QWORD *)(v1 - 8);
  v67 = v1;
  v2 = MEMORY[0x1E0C80A78](v1);
  v65 = (char *)v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v62 = (char *)v52 - v4;
  v5 = sub_1C1425EA0();
  v63 = *(_QWORD *)(v5 - 8);
  v64 = v5;
  MEMORY[0x1E0C80A78](v5);
  v61 = (char *)v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7931B8);
  v7 = MEMORY[0x1E0C80A78](v60);
  v59 = (os_unfair_lock_t *)((char *)v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (os_unfair_lock_t *)((char *)v52 - v10);
  MEMORY[0x1E0C80A78](v9);
  v13 = (os_unfair_lock_t *)((char *)v52 - v12);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B60);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)v52 - v18;
  os_unfair_lock_assert_not_owner(*(const os_unfair_lock **)(*(_QWORD *)(v0 + 16) + 16));
  v20 = *(os_unfair_lock_s **)(*(_QWORD *)(v0 + 16) + 16);
  v52[1] = *(os_unfair_lock_t *)(v0 + 16);
  swift_retain();
  v52[0] = v20;
  os_unfair_lock_lock(v20);
  v53 = v19;
  sub_1C13B6AC8((uint64_t)v19);
  v54 = v17;
  sub_1C13B72FC((uint64_t)v17);
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v0 + 16) + 16));
  swift_beginAccess();
  v21 = *(_QWORD *)(v0 + 24);
  v22 = *(_QWORD *)(v21 + 64);
  v55 = v0;
  v56 = v21 + 64;
  v23 = 1 << *(_BYTE *)(v21 + 32);
  v24 = -1;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  v25 = v24 & v22;
  v57 = (unint64_t)(v23 + 63) >> 6;
  v58 = *MEMORY[0x1E0D8CD38];
  v68 = v21;
  result = swift_bridgeObjectRetain_n();
  v27 = 0;
  while (1)
  {
    if (v25)
    {
      v28 = __clz(__rbit64(v25));
      v25 &= v25 - 1;
      v29 = v28 | (v27 << 6);
      goto LABEL_5;
    }
    v46 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v46 >= v57)
      goto LABEL_26;
    v47 = *(_QWORD *)(v56 + 8 * v46);
    ++v27;
    if (!v47)
    {
      v27 = v46 + 1;
      if (v46 + 1 >= v57)
        goto LABEL_26;
      v47 = *(_QWORD *)(v56 + 8 * v27);
      if (!v47)
      {
        v27 = v46 + 2;
        if (v46 + 2 >= v57)
          goto LABEL_26;
        v47 = *(_QWORD *)(v56 + 8 * v27);
        if (!v47)
        {
          v27 = v46 + 3;
          if (v46 + 3 >= v57)
            goto LABEL_26;
          v47 = *(_QWORD *)(v56 + 8 * v27);
          if (!v47)
          {
            v27 = v46 + 4;
            if (v46 + 4 >= v57)
              goto LABEL_26;
            v47 = *(_QWORD *)(v56 + 8 * v27);
            if (!v47)
            {
              v48 = v46 + 5;
              if (v48 >= v57)
              {
LABEL_26:
                v49 = 0;
                goto LABEL_27;
              }
              v47 = *(_QWORD *)(v56 + 8 * v48);
              if (!v47)
              {
                while (1)
                {
                  v27 = v48 + 1;
                  if (__OFADD__(v48, 1))
                    goto LABEL_29;
                  if (v27 >= v57)
                    goto LABEL_26;
                  v47 = *(_QWORD *)(v56 + 8 * v27);
                  ++v48;
                  if (v47)
                    goto LABEL_24;
                }
              }
              v27 = v48;
            }
          }
        }
      }
    }
LABEL_24:
    v25 = (v47 - 1) & v47;
    v29 = __clz(__rbit64(v47)) + (v27 << 6);
LABEL_5:
    v30 = *(_QWORD *)(v68 + 56);
    v31 = *(_QWORD *)(*(_QWORD *)(v68 + 48) + 8 * v29);
    v32 = type metadata accessor for TaskScheduler.Task();
    v33 = v30 + *(_QWORD *)(*(_QWORD *)(v32 - 8) + 72) * v29;
    v34 = v60;
    sub_1C1338F24(v33, (uint64_t)v13 + *(int *)(v60 + 48), (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
    *v13 = v31;
    sub_1C132A724((uint64_t)v13, (uint64_t)v11, (uint64_t *)&unk_1ED7931B8);
    v35 = *(int *)(v34 + 48);
    v36 = (uint64_t)v59 + v35;
    *v59 = *v11;
    sub_1C1338F24((uint64_t)v11 + v35, v36, (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
    v37 = v36 + *(int *)(v32 + 20);
    v39 = v63;
    v38 = v64;
    v40 = v61;
    (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v61, v37, v64);
    sub_1C13B98C4(v36);
    v41 = v62;
    sub_1C1425E94();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v38);
    v43 = v65;
    v42 = v66;
    v44 = v67;
    (*(void (**)(char *, _QWORD, uint64_t))(v66 + 104))(v65, v58, v67);
    LOBYTE(v40) = sub_1C1425E7C();
    v45 = *(void (**)(char *, uint64_t))(v42 + 8);
    v45(v43, v44);
    v45(v41, v44);
    result = sub_1C132C860((uint64_t)v11, (uint64_t *)&unk_1ED7931B8);
    if ((v40 & 1) != 0)
    {
      v49 = 1;
LABEL_27:
      swift_release();
      swift_bridgeObjectRelease();
      v50 = (uint64_t)v53;
      sub_1C13B7B0C((uint64_t)v53);
      v51 = (uint64_t)v54;
      sub_1C13B7FC4((uint64_t)v54);
      sub_1C13B847C(v49);
      sub_1C132C860(v51, &qword_1ED793B60);
      sub_1C132C860(v50, &qword_1ED793B60);
      os_unfair_lock_unlock(v52[0]);
      return swift_release();
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void sub_1C13B585C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  int v19;
  uint8_t *v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t aBlock[6];

  v2 = sub_1C1426950();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C14269B0();
  v53 = *(_QWORD *)(v6 - 8);
  v54 = v6;
  MEMORY[0x1E0C80A78](v6);
  v52 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C142695C();
  v50 = *(_QWORD *)(v8 - 8);
  v51 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C14251B0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v16 = Strong;
    v49 = v5;
    sub_1C1425F0C();
    swift_allocObject();
    v48 = sub_1C1425EF4();
    if (qword_1ED793988 != -1)
      swift_once();
    v17 = sub_1C1426854();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED7985E0);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
    v18 = sub_1C1426848();
    v19 = sub_1C1426C80();
    if (os_log_type_enabled(v18, (os_log_type_t)v19))
    {
      v44 = v19;
      v46 = v3;
      v47 = v2;
      v20 = (uint8_t *)swift_slowAlloc();
      v43 = swift_slowAlloc();
      aBlock[0] = v43;
      v45 = v20;
      *(_DWORD *)v20 = 136446210;
      if (qword_1ED791E70 != -1)
        swift_once();
      v21 = (id)qword_1ED791E68;
      v22 = (void *)sub_1C1425138();
      v23 = objc_msgSend(v21, sel_stringFromDate_, v22);

      v24 = sub_1C1426A88();
      v26 = v25;

      v27 = sub_1C132AD90(v24, v26, aBlock);
      v28 = v45;
      v55 = v27;
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      _os_log_impl(&dword_1C1324000, v18, (os_log_type_t)v44, "Nonwake event fired for date: %{public}s", v28, 0xCu);
      v29 = v43;
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v29, -1, -1);
      MEMORY[0x1C3BAD3F4](v28, -1, -1);

      v3 = v46;
      v2 = v47;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);

    }
    sub_1C13B4FE8();
    sub_1C1330F6C();
    v35 = v50;
    v34 = v51;
    (*(void (**)(char *, _QWORD, uint64_t))(v50 + 104))(v10, *MEMORY[0x1E0DEF538], v51);
    v36 = (void *)sub_1C1426D10();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v10, v34);
    v37 = swift_allocObject();
    v38 = v48;
    *(_QWORD *)(v37 + 16) = v16;
    *(_QWORD *)(v37 + 24) = v38;
    aBlock[4] = (uint64_t)sub_1C13C38D0;
    aBlock[5] = v37;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1C13A7F4C;
    aBlock[3] = (uint64_t)&block_descriptor_17_0;
    v39 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    v40 = v52;
    sub_1C1426974();
    v55 = MEMORY[0x1E0DEE9D8];
    sub_1C1329AD0((unint64_t *)&qword_1ED7979D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A50);
    sub_1C1331180();
    v41 = v49;
    sub_1C1426DF4();
    MEMORY[0x1C3BAC9D4](0, v40, v41, v39);
    _Block_release(v39);
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v3 + 8))(v41, v2);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v40, v54);
    swift_release();
  }
  else
  {
    if (qword_1ED793988 != -1)
      swift_once();
    v30 = sub_1C1426854();
    __swift_project_value_buffer(v30, (uint64_t)qword_1ED7985E0);
    v31 = sub_1C1426848();
    v32 = sub_1C1426C74();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v33 = 0;
      _os_log_impl(&dword_1C1324000, v31, v32, "Task scheduler unexpectedly deallocated", v33, 2u);
      MEMORY[0x1C3BAD3F4](v33, -1, -1);
    }

  }
}

void sub_1C13B5E2C(void *a1)
{
  sub_1C13B5E8C(a1, "Wake event received [distnoted]: %{public}s");
}

uint64_t sub_1C13B5E38(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_1C13B5E80(void *a1)
{
  sub_1C13B5E8C(a1, "Wake event received [notifyd]: %{public}s");
}

void sub_1C13B5E8C(void *a1, const char *a2)
{
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  NSObject *oslog;
  uint64_t v10;

  if (xpc_dictionary_get_string(a1, (const char *)*MEMORY[0x1E0C81298]))
  {
    if (qword_1ED793988 != -1)
      swift_once();
    v3 = sub_1C1426854();
    __swift_project_value_buffer(v3, (uint64_t)qword_1ED7985E0);
    oslog = sub_1C1426848();
    v4 = sub_1C1426C80();
    if (os_log_type_enabled(oslog, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      v6 = swift_slowAlloc();
      v10 = v6;
      *(_DWORD *)v5 = 136446210;
      v7 = sub_1C1426AF4();
      sub_1C132AD90(v7, v8, &v10);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C1324000, oslog, v4, a2, v5, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v6, -1, -1);
      MEMORY[0x1C3BAD3F4](v5, -1, -1);

    }
    else
    {

    }
  }
}

uint64_t sub_1C13B6034()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TaskScheduler()
{
  return objc_opt_self();
}

uint64_t *sub_1C13B6098(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *a1 = *a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1C1425EA0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[6];
    v12 = a3[7];
    v13 = (uint64_t *)((char *)v4 + v11);
    v14 = (uint64_t *)((char *)a2 + v11);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = (uint64_t *)((char *)v4 + v12);
    v17 = (uint64_t *)((char *)a2 + v12);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1C13B615C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_1C1425EA0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  return swift_release();
}

_QWORD *sub_1C13B61C4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C1425EA0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[6];
  v11 = a3[7];
  v12 = (_QWORD *)((char *)a1 + v10);
  v13 = (_QWORD *)((char *)a2 + v10);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = (_QWORD *)((char *)a1 + v11);
  v16 = (_QWORD *)((char *)a2 + v11);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_1C13B6260(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C1425EA0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  swift_retain();
  swift_release();
  v14 = a3[7];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *sub_1C13B6314(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C1425EA0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  return a1;
}

_QWORD *sub_1C13B6394(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C1425EA0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  swift_release();
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  swift_release();
  return a1;
}

uint64_t sub_1C13B6430()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C13B643C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1C1425EA0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1C13B64BC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C13B64C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1C1425EA0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for TaskScheduler.Task()
{
  uint64_t result;

  result = qword_1ED7928F8;
  if (!qword_1ED7928F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C13B6580()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C1425EA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1C13B6608(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  _QWORD *v23;
  void (**v24)();
  uint64_t v25;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED792908);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(a1 + 16) + 16));
  v13 = *(_QWORD *)(a1 + 32);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a1 + 32) = v15;
    v25 = a1;
    v16 = v15;
    v17 = swift_allocObject();
    swift_weakInit();
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = v17;
    *(_QWORD *)(v18 + 24) = v16;
    v19 = (int *)type metadata accessor for TaskScheduler.Task();
    v20 = a3;
    v21 = (char *)a5 + v19[5];
    v22 = sub_1C1425EA0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v21, a2, v22);
    *a5 = v16;
    v23 = (uint64_t *)((char *)a5 + v19[6]);
    *v23 = v20;
    v23[1] = a4;
    v24 = (void (**)())((char *)a5 + v19[7]);
    *v24 = sub_1C13B9948;
    v24[1] = (void (*)())v18;
    sub_1C1338F24((uint64_t)a5, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(*((_QWORD *)v19 - 1) + 56))(v12, 0, 1, v19);
    swift_beginAccess();
    swift_retain();
    swift_retain();
    sub_1C13B3DB8((uint64_t)v12, v16);
    swift_endAccess();
    swift_release();
  }
}

void sub_1C13B67E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t Strong;
  os_unfair_lock_s *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  _BYTE v13[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED792908);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v7 = *(os_unfair_lock_s **)(*(_QWORD *)(Strong + 16) + 16);
    swift_retain();
    os_unfair_lock_lock(v7);
    v8 = type metadata accessor for TaskScheduler.Task();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 1, 1, v8);
    swift_beginAccess();
    sub_1C13B3DB8((uint64_t)v5, a2);
    swift_endAccess();
    os_unfair_lock_unlock(v7);
    swift_release();
    sub_1C13B5354();
    swift_release();
  }
  else
  {
    if (qword_1ED793988 != -1)
      swift_once();
    v9 = sub_1C1426854();
    __swift_project_value_buffer(v9, (uint64_t)qword_1ED7985E0);
    v10 = sub_1C1426848();
    v11 = sub_1C1426C74();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_1C1324000, v10, v11, "Task scheduler unexpectedly deallocated", v12, 2u);
      MEMORY[0x1C3BAD3F4](v12, -1, -1);
    }

  }
}

uint64_t sub_1C13B69B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t *v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  os_unfair_lock_s *v13;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v16;

  v9 = type metadata accessor for TaskScheduler.Task();
  MEMORY[0x1E0C80A78](v9);
  v11 = (uint64_t *)((char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *v4;
  v13 = *(os_unfair_lock_s **)(*(_QWORD *)(v12 + 16) + 16);
  swift_retain();
  os_unfair_lock_lock(v13);
  sub_1C13B6608(v12, a1, a2, a3, v11);
  os_unfair_lock_unlock(v13);
  swift_release();
  sub_1C13B5354();
  a4[3] = v9;
  a4[4] = sub_1C1329AD0(&qword_1ED792720, (uint64_t (*)(uint64_t))type metadata accessor for TaskScheduler.Task, (uint64_t)&unk_1C142A174);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a4);
  return sub_1C1339140((uint64_t)v11, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
}

uint64_t sub_1C13B6AC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void (*v30)(unint64_t, _QWORD, uint64_t);
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  os_log_t v41;
  NSObject *v42;
  char v43;
  uint64_t v44;
  void (*v45)(char *, os_log_t, uint64_t);
  os_log_t v46;
  char *v47;
  void (*v48)(NSObject *, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  NSObject *v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  id v61;
  char *v62;
  void *v63;
  NSObject *v64;
  id v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  id v69;
  char *v70;
  void *v71;
  id v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  os_log_t v78;
  uint64_t v79;
  NSObject *v80;
  uint64_t v82;
  int v83;
  uint64_t v84;
  char *v85;
  os_log_t v86;
  NSObject *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;

  v94 = a1;
  v2 = sub_1C14251B0();
  v95 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x1E0C80A78](v2);
  v85 = (char *)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v92 = (char *)&v82 - v6;
  v7 = MEMORY[0x1E0C80A78](v5);
  v90 = (char *)&v82 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v87 = ((char *)&v82 - v10);
  v11 = MEMORY[0x1E0C80A78](v9);
  v86 = (os_log_t)((char *)&v82 - v12);
  MEMORY[0x1E0C80A78](v11);
  v93 = (char *)&v82 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED792908);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TaskScheduler.Task();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v89 = (uint64_t)&v82 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v19);
  v88 = (uint64_t)&v82 - v22;
  MEMORY[0x1E0C80A78](v21);
  v91 = (uint64_t)&v82 - v23;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v1 + 16) + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7931B0);
  v24 = sub_1C1425E88();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(_QWORD *)(v25 + 72);
  v27 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1C1428070;
  v29 = v28 + v27;
  v30 = *(void (**)(unint64_t, _QWORD, uint64_t))(v25 + 104);
  v30(v29, *MEMORY[0x1E0D8CD30], v24);
  v30(v29 + v26, *MEMORY[0x1E0D8CD38], v24);
  sub_1C13B8D48(v28, (uint64_t)v16);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    v31 = v95;
    sub_1C132C860((uint64_t)v16, &qword_1ED792908);
    if (qword_1ED793988 != -1)
      swift_once();
    v32 = sub_1C1426854();
    __swift_project_value_buffer(v32, (uint64_t)qword_1ED7985E0);
    v33 = sub_1C1426848();
    v34 = sub_1C1426C80();
    v35 = v2;
    v36 = v31;
    if (os_log_type_enabled(v33, v34))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v37 = 0;
      _os_log_impl(&dword_1C1324000, v33, v34, "No wake tasks scheduled", v37, 2u);
      MEMORY[0x1C3BAD3F4](v37, -1, -1);
    }

    v38 = 1;
    v39 = v94;
  }
  else
  {
    v40 = v91;
    sub_1C1339140((uint64_t)v16, v91, (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
    v84 = v17;
    v41 = v86;
    sub_1C1425E64();
    v42 = v87;
    sub_1C142518C();
    sub_1C1329AD0((unint64_t *)&qword_1ED7935D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
    v43 = sub_1C1426A64();
    v44 = v95;
    v45 = *(void (**)(char *, os_log_t, uint64_t))(v95 + 16);
    if ((v43 & 1) != 0)
      v46 = v42;
    else
      v46 = v41;
    v47 = v93;
    v45(v93, v46, v2);
    v48 = *(void (**)(NSObject *, uint64_t))(v44 + 8);
    v48(v42, v2);
    v87 = v48;
    v48(v41, v2);
    v35 = v2;
    v36 = v44;
    v49 = v40;
    if (qword_1ED793988 != -1)
      swift_once();
    v50 = sub_1C1426854();
    __swift_project_value_buffer(v50, (uint64_t)qword_1ED7985E0);
    v51 = v40;
    v52 = v88;
    sub_1C1338F24(v51, v88, (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
    v53 = v89;
    sub_1C1338F24(v49, v89, (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
    v54 = v90;
    v45(v90, (os_log_t)v47, v35);
    v55 = v92;
    v45(v92, (os_log_t)v47, v35);
    v56 = sub_1C1426848();
    v57 = sub_1C1426C80();
    if (os_log_type_enabled(v56, (os_log_type_t)v57))
    {
      v83 = v57;
      v86 = v56;
      v58 = swift_slowAlloc();
      v82 = swift_slowAlloc();
      v97 = v82;
      *(_DWORD *)v58 = 136446978;
      v59 = sub_1C1425E58();
      v96 = sub_1C132AD90(v59, v60, &v97);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      sub_1C13B98C4(v52);
      *(_WORD *)(v58 + 12) = 2082;
      if (qword_1ED791E70 != -1)
        swift_once();
      v61 = (id)qword_1ED791E68;
      v62 = v85;
      sub_1C1425E64();
      v63 = (void *)sub_1C1425138();
      v64 = v87;
      ((void (*)(char *, uint64_t))v87)(v62, v35);
      v65 = objc_msgSend(v61, sel_stringFromDate_, v63);

      v66 = sub_1C1426A88();
      v68 = v67;

      v96 = sub_1C132AD90(v66, v68, &v97);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      sub_1C13B98C4(v53);
      *(_WORD *)(v58 + 22) = 2082;
      v69 = (id)qword_1ED791E68;
      v70 = v90;
      v71 = (void *)sub_1C1425138();
      v72 = objc_msgSend(v69, sel_stringFromDate_, v71);

      v73 = sub_1C1426A88();
      v75 = v74;

      v96 = sub_1C132AD90(v73, v75, &v97);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v64)(v70, v35);
      *(_WORD *)(v58 + 32) = 2050;
      v76 = v92;
      sub_1C1425168();
      v96 = v77;
      sub_1C1426DB8();
      ((void (*)(char *, uint64_t))v64)(v76, v35);
      v78 = v86;
      _os_log_impl(&dword_1C1324000, v86, (os_log_type_t)v83, "Earliest nonwaking date from task \"%{public}s\": %{public}s, finalWakeTarget: %{public}s %{public}f", (uint8_t *)v58, 0x2Au);
      v79 = v82;
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v79, -1, -1);
      MEMORY[0x1C3BAD3F4](v58, -1, -1);

      sub_1C13B98C4(v91);
      v36 = v95;
      v47 = v93;
    }
    else
    {

      v80 = v87;
      ((void (*)(char *, uint64_t))v87)(v55, v35);
      ((void (*)(char *, uint64_t))v80)(v54, v35);
      sub_1C13B98C4(v53);
      sub_1C13B98C4(v52);
      sub_1C13B98C4(v49);
    }
    v39 = v94;
    (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v94, v47, v35);
    v38 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))(v39, v38, 1, v35);
}

