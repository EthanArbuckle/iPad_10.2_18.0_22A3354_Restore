uint64_t sub_1C13B72FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char v40;
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  NSObject *v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  id v55;
  char *v56;
  void *v57;
  void (*v58)(char *, uint64_t);
  id v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  id v63;
  char *v64;
  void *v65;
  id v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  char *v70;
  uint64_t v71;
  os_log_t v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  uint64_t v76;
  int v77;
  os_log_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  v88 = a1;
  v2 = sub_1C14251B0();
  v89 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x1E0C80A78](v2);
  v80 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v86 = (char *)&v76 - v6;
  v7 = MEMORY[0x1E0C80A78](v5);
  v85 = (char *)&v76 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v82 = (char *)&v76 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v81 = (char *)&v76 - v12;
  MEMORY[0x1E0C80A78](v11);
  v87 = (char *)&v76 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED792908);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for TaskScheduler.Task();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v84 = (uint64_t)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v19);
  v83 = (uint64_t)&v76 - v22;
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v76 - v23;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v1 + 16) + 16));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7931B0);
  v25 = sub_1C1425E88();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1C1427F50;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v26 + 104))(v28 + v27, *MEMORY[0x1E0D8CD30], v25);
  sub_1C13B8D48(v28, (uint64_t)v16);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    v29 = v89;
    sub_1C132C860((uint64_t)v16, &qword_1ED792908);
    if (qword_1ED793988 != -1)
      swift_once();
    v30 = sub_1C1426854();
    __swift_project_value_buffer(v30, (uint64_t)qword_1ED7985E0);
    v31 = sub_1C1426848();
    v32 = sub_1C1426C80();
    v33 = v2;
    v34 = v29;
    if (os_log_type_enabled(v31, v32))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v35 = 0;
      _os_log_impl(&dword_1C1324000, v31, v32, "No wake tasks scheduled", v35, 2u);
      MEMORY[0x1C3BAD3F4](v35, -1, -1);
    }

    v36 = 1;
    v37 = v88;
  }
  else
  {
    sub_1C1339140((uint64_t)v16, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
    v79 = v17;
    v38 = (uint64_t)v81;
    sub_1C1425E64();
    v39 = v82;
    sub_1C142518C();
    sub_1C1329AD0((unint64_t *)&qword_1ED7935D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
    v40 = sub_1C1426A64();
    v34 = v89;
    v41 = *(void (**)(char *, uint64_t, uint64_t))(v89 + 16);
    if ((v40 & 1) != 0)
      v42 = (uint64_t)v39;
    else
      v42 = v38;
    v43 = v87;
    v41(v87, v42, v2);
    v44 = *(void (**)(char *, uint64_t))(v34 + 8);
    v44(v39, v2);
    v82 = (char *)v44;
    v44((char *)v38, v2);
    v33 = v2;
    if (qword_1ED793988 != -1)
      swift_once();
    v45 = sub_1C1426854();
    __swift_project_value_buffer(v45, (uint64_t)qword_1ED7985E0);
    v46 = v83;
    sub_1C1338F24((uint64_t)v24, v83, (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
    v47 = v84;
    sub_1C1338F24((uint64_t)v24, v84, (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
    v48 = v85;
    v41(v85, (uint64_t)v43, v33);
    v49 = v86;
    v41(v86, (uint64_t)v43, v33);
    v50 = sub_1C1426848();
    v51 = sub_1C1426C80();
    if (os_log_type_enabled(v50, (os_log_type_t)v51))
    {
      v77 = v51;
      v78 = v50;
      v81 = v24;
      v52 = swift_slowAlloc();
      v76 = swift_slowAlloc();
      v91 = v76;
      *(_DWORD *)v52 = 136446978;
      v53 = sub_1C1425E58();
      v90 = sub_1C132AD90(v53, v54, &v91);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      sub_1C13B98C4(v46);
      *(_WORD *)(v52 + 12) = 2082;
      if (qword_1ED791E70 != -1)
        swift_once();
      v55 = (id)qword_1ED791E68;
      v56 = v80;
      sub_1C1425E64();
      v57 = (void *)sub_1C1425138();
      v58 = (void (*)(char *, uint64_t))v82;
      ((void (*)(char *, uint64_t))v82)(v56, v33);
      v59 = objc_msgSend(v55, sel_stringFromDate_, v57);

      v60 = sub_1C1426A88();
      v62 = v61;

      v90 = sub_1C132AD90(v60, v62, &v91);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      sub_1C13B98C4(v47);
      *(_WORD *)(v52 + 22) = 2082;
      v63 = (id)qword_1ED791E68;
      v64 = v85;
      v65 = (void *)sub_1C1425138();
      v66 = objc_msgSend(v63, sel_stringFromDate_, v65);

      v67 = sub_1C1426A88();
      v69 = v68;

      v90 = sub_1C132AD90(v67, v69, &v91);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      v58(v64, v33);
      *(_WORD *)(v52 + 32) = 2050;
      v70 = v86;
      sub_1C1425168();
      v90 = v71;
      sub_1C1426DB8();
      v58(v70, v33);
      v72 = v78;
      _os_log_impl(&dword_1C1324000, v78, (os_log_type_t)v77, "Earliest waking date from task \"%{public}s\": %{public}s, finalWakeTarget: %{public}s %{public}f", (uint8_t *)v52, 0x2Au);
      v73 = v76;
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v73, -1, -1);
      MEMORY[0x1C3BAD3F4](v52, -1, -1);

      sub_1C13B98C4((uint64_t)v81);
      v34 = v89;
      v43 = v87;
    }
    else
    {

      v74 = (void (*)(char *, uint64_t))v82;
      ((void (*)(char *, uint64_t))v82)(v49, v33);
      v74(v48, v33);
      sub_1C13B98C4(v47);
      sub_1C13B98C4(v46);
      sub_1C13B98C4((uint64_t)v24);
    }
    v37 = v88;
    (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v88, v43, v33);
    v36 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56))(v37, v36, 1, v33);
}

void sub_1C13B7B0C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  NSObject *v26;
  int v27;
  _DWORD *v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _DWORD *v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  os_log_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t ObjectType;
  uint64_t v43;
  int v44;
  _DWORD *v45;
  os_log_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B60);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C14251B0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v43 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v43 - v14;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v1[2] + 16));
  if (v1[7])
  {
    v16 = v1[8];
    sub_1C13B3358(a1, (uint64_t)v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      swift_unknownObjectRetain();
      sub_1C132C860((uint64_t)v5, &qword_1ED793B60);
      if (qword_1ED793988 != -1)
        swift_once();
      v17 = sub_1C1426854();
      __swift_project_value_buffer(v17, (uint64_t)qword_1ED7985E0);
      v18 = sub_1C1426848();
      v19 = sub_1C1426C80();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = v16;
        v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v21 = 0;
        _os_log_impl(&dword_1C1324000, v18, v19, "Cancelling nonwaking task", v21, 2u);
        v22 = v21;
        v16 = v20;
        MEMORY[0x1C3BAD3F4](v22, -1, -1);
      }

    }
    else
    {
      v48 = v16;
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v5, v6);
      v23 = qword_1ED793988;
      swift_unknownObjectRetain();
      if (v23 != -1)
        swift_once();
      v24 = sub_1C1426854();
      __swift_project_value_buffer(v24, (uint64_t)qword_1ED7985E0);
      v25 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      v25(v13, v15, v6);
      v25(v10, v15, v6);
      v26 = sub_1C1426848();
      v27 = sub_1C1426C80();
      if (os_log_type_enabled(v26, (os_log_type_t)v27))
      {
        v44 = v27;
        v46 = v26;
        v47 = a1;
        v28 = (_DWORD *)swift_slowAlloc();
        v43 = swift_slowAlloc();
        v50 = v43;
        v45 = v28;
        *v28 = 136446466;
        if (qword_1ED791E70 != -1)
          swift_once();
        v29 = (id)qword_1ED791E68;
        v30 = (void *)sub_1C1425138();
        v31 = objc_msgSend(v29, sel_stringFromDate_, v30);

        v32 = sub_1C1426A88();
        v34 = v33;

        v35 = sub_1C132AD90(v32, v34, &v50);
        v36 = v45;
        v49 = v35;
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        v37 = *(void (**)(char *, uint64_t))(v7 + 8);
        v37(v13, v6);
        *((_WORD *)v36 + 6) = 2048;
        sub_1C1425168();
        v49 = v38;
        sub_1C1426DB8();
        v37(v10, v6);
        v39 = v46;
        _os_log_impl(&dword_1C1324000, v46, (os_log_type_t)v44, "Scheduling nonwaking task for: %{public}s in %fs", (uint8_t *)v36, 0x16u);
        v40 = v43;
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v40, -1, -1);
        MEMORY[0x1C3BAD3F4](v36, -1, -1);

        v37(v15, v6);
        a1 = v47;
        v16 = v48;
      }
      else
      {

        v41 = *(void (**)(char *, uint64_t))(v7 + 8);
        v41(v10, v6);
        v41(v13, v6);
        v41(v15, v6);
        v16 = v48;
      }
    }
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(a1, ObjectType, v16);
    swift_unknownObjectRelease();
  }
}

void sub_1C13B7FC4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  NSObject *v26;
  int v27;
  _DWORD *v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _DWORD *v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  os_log_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t ObjectType;
  uint64_t v43;
  int v44;
  _DWORD *v45;
  os_log_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B60);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C14251B0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v43 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v43 - v14;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v1[2] + 16));
  if (v1[5])
  {
    v16 = v1[6];
    sub_1C13B3358(a1, (uint64_t)v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      swift_unknownObjectRetain();
      sub_1C132C860((uint64_t)v5, &qword_1ED793B60);
      if (qword_1ED793988 != -1)
        swift_once();
      v17 = sub_1C1426854();
      __swift_project_value_buffer(v17, (uint64_t)qword_1ED7985E0);
      v18 = sub_1C1426848();
      v19 = sub_1C1426C80();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = v16;
        v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v21 = 0;
        _os_log_impl(&dword_1C1324000, v18, v19, "Cancelling waking task", v21, 2u);
        v22 = v21;
        v16 = v20;
        MEMORY[0x1C3BAD3F4](v22, -1, -1);
      }

    }
    else
    {
      v48 = v16;
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v5, v6);
      v23 = qword_1ED793988;
      swift_unknownObjectRetain();
      if (v23 != -1)
        swift_once();
      v24 = sub_1C1426854();
      __swift_project_value_buffer(v24, (uint64_t)qword_1ED7985E0);
      v25 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      v25(v13, v15, v6);
      v25(v10, v15, v6);
      v26 = sub_1C1426848();
      v27 = sub_1C1426C80();
      if (os_log_type_enabled(v26, (os_log_type_t)v27))
      {
        v44 = v27;
        v46 = v26;
        v47 = a1;
        v28 = (_DWORD *)swift_slowAlloc();
        v43 = swift_slowAlloc();
        v50 = v43;
        v45 = v28;
        *v28 = 136446466;
        if (qword_1ED791E70 != -1)
          swift_once();
        v29 = (id)qword_1ED791E68;
        v30 = (void *)sub_1C1425138();
        v31 = objc_msgSend(v29, sel_stringFromDate_, v30);

        v32 = sub_1C1426A88();
        v34 = v33;

        v35 = sub_1C132AD90(v32, v34, &v50);
        v36 = v45;
        v49 = v35;
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        v37 = *(void (**)(char *, uint64_t))(v7 + 8);
        v37(v13, v6);
        *((_WORD *)v36 + 6) = 2048;
        sub_1C1425168();
        v49 = v38;
        sub_1C1426DB8();
        v37(v10, v6);
        v39 = v46;
        _os_log_impl(&dword_1C1324000, v46, (os_log_type_t)v44, "Scheduling waking task for: %{public}s in %fs", (uint8_t *)v36, 0x16u);
        v40 = v43;
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v40, -1, -1);
        MEMORY[0x1C3BAD3F4](v36, -1, -1);

        v37(v15, v6);
        a1 = v47;
        v16 = v48;
      }
      else
      {

        v41 = *(void (**)(char *, uint64_t))(v7 + 8);
        v41(v10, v6);
        v41(v13, v6);
        v41(v15, v6);
        v16 = v48;
      }
    }
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(a1, ObjectType, v16);
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1C13B847C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;

  v2 = v1;
  if ((result & 1) != 0)
  {
    if (qword_1ED793988 != -1)
      swift_once();
    v3 = sub_1C1426854();
    __swift_project_value_buffer(v3, (uint64_t)qword_1ED7985E0);
    v4 = sub_1C1426848();
    v5 = sub_1C1426C80();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_1C1324000, v4, v5, "Acquiring keep-alive", v6, 2u);
      MEMORY[0x1C3BAD3F4](v6, -1, -1);
    }

    sub_1C1425F0C();
    swift_allocObject();
    *(_QWORD *)(v2 + 72) = sub_1C1425EF4();
    return swift_release();
  }
  if (*(_QWORD *)(v1 + 72))
  {
    if (qword_1ED793988 != -1)
      swift_once();
    v7 = sub_1C1426854();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED7985E0);
    v8 = sub_1C1426848();
    v9 = sub_1C1426C80();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_1C1324000, v8, v9, "Releasing keep-alive", v10, 2u);
      MEMORY[0x1C3BAD3F4](v10, -1, -1);
    }

    if (*(_QWORD *)(v2 + 72))
    {
      swift_retain();
      sub_1C1425EE8();
      swift_release();
    }
    *(_QWORD *)(v2 + 72) = 0;
    return swift_release();
  }
  return result;
}

uint64_t sub_1C13B8688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char v39;
  _QWORD *v40;
  int isUniquelyReferenced_nonNull_native;
  char v42;
  unint64_t v43;
  uint64_t v44;
  _BOOL8 v45;
  uint64_t v46;
  char v47;
  unint64_t v48;
  char v49;
  int v50;
  char v51;
  unint64_t v52;
  uint64_t v53;
  _BOOL8 v54;
  uint64_t v55;
  char v56;
  unint64_t v57;
  char v58;
  _QWORD *v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t result;
  uint64_t v66;
  int64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  int64_t v71;
  uint64_t v72;
  _QWORD *v73;
  char *i;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  int64_t v83;
  uint64_t v84;
  _QWORD *v85;

  v69 = a3;
  v81 = a2;
  v4 = sub_1C14251B0();
  v79 = *(_QWORD *)(v4 - 8);
  v80 = v4;
  MEMORY[0x1E0C80A78](v4);
  v78 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = type metadata accessor for TaskScheduler.Task();
  v84 = *(_QWORD *)(v77 - 8);
  v6 = MEMORY[0x1E0C80A78](v77);
  v76 = (uint64_t)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v75 = (uint64_t)&v66 - v9;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v66 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED792870);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (uint64_t *)((char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v13);
  v17 = (uint64_t *)((char *)&v66 - v16);
  v68 = (_QWORD *)(a1 + 24);
  swift_beginAccess();
  v18 = *(_QWORD *)(a1 + 24);
  v19 = *(_QWORD *)(v18 + 64);
  v70 = v18 + 64;
  v20 = 1 << *(_BYTE *)(v18 + 32);
  v21 = -1;
  if (v20 < 64)
    v21 = ~(-1 << v20);
  v22 = v21 & v19;
  v71 = (unint64_t)(v20 + 63) >> 6;
  v67 = v71 - 1;
  v72 = v18;
  swift_bridgeObjectRetain();
  v83 = 0;
  v23 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v82 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v73 = v15;
  for (i = v11; ; sub_1C13B98C4((uint64_t)i))
  {
    if (v22)
    {
      v26 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      v27 = v26 | (v83 << 6);
LABEL_9:
      v28 = *(_QWORD *)(v72 + 56);
      *v15 = *(_QWORD *)(*(_QWORD *)(v72 + 48) + 8 * v27);
      v29 = v28 + *(_QWORD *)(v84 + 72) * v27;
      v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7931B8);
      sub_1C1338F24(v29, (uint64_t)v15 + *(int *)(v30 + 48), (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v15, 0, 1, v30);
      goto LABEL_28;
    }
    v31 = v83 + 1;
    if (__OFADD__(v83, 1))
      goto LABEL_52;
    if (v31 < v71)
    {
      v32 = *(_QWORD *)(v70 + 8 * v31);
      if (v32)
        goto LABEL_13;
      v33 = v83 + 2;
      ++v83;
      if (v31 + 1 < v71)
      {
        v32 = *(_QWORD *)(v70 + 8 * v33);
        if (v32)
          goto LABEL_16;
        v83 = v31 + 1;
        if (v31 + 2 < v71)
        {
          v32 = *(_QWORD *)(v70 + 8 * (v31 + 2));
          if (v32)
          {
            v31 += 2;
            goto LABEL_13;
          }
          v33 = v31 + 3;
          v83 = v31 + 2;
          if (v31 + 3 < v71)
            break;
        }
      }
    }
LABEL_27:
    v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7931B8);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v15, 1, 1, v34);
    v22 = 0;
LABEL_28:
    sub_1C132A724((uint64_t)v15, (uint64_t)v17, &qword_1ED792870);
    v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7931B8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v17, 1, v35) == 1)
    {
      swift_release();
      *v68 = v82;
      result = swift_bridgeObjectRelease();
      *v69 = v23;
      return result;
    }
    v36 = *v17;
    sub_1C1339140((uint64_t)v17 + *(int *)(v35 + 48), (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
    v37 = v78;
    sub_1C1425E64();
    sub_1C1329AD0((unint64_t *)&qword_1ED7935D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
    v38 = v80;
    v39 = sub_1C1426A58();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v37, v38);
    if ((v39 & 1) != 0)
    {
      sub_1C1338F24((uint64_t)v11, v76, (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
      v40 = v82;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v85 = v40;
      v43 = sub_1C13B9B48(v36);
      v44 = v40[2];
      v45 = (v42 & 1) == 0;
      v46 = v44 + v45;
      if (__OFADD__(v44, v45))
      {
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        __break(1u);
        goto LABEL_55;
      }
      v47 = v42;
      if (v40[3] >= v46)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1C13BBAA0();
      }
      else
      {
        sub_1C13BF644(v46, isUniquelyReferenced_nonNull_native);
        v48 = sub_1C13B9B48(v36);
        if ((v47 & 1) != (v49 & 1))
          goto LABEL_56;
        v43 = v48;
      }
      v59 = v85;
      v82 = v85;
      if ((v47 & 1) != 0)
      {
        v24 = v85[7] + *(_QWORD *)(v84 + 72) * v43;
        v25 = v76;
        goto LABEL_5;
      }
      v85[(v43 >> 6) + 8] |= 1 << v43;
      *(_QWORD *)(v59[6] + 8 * v43) = v36;
      sub_1C1339140(v76, v59[7] + *(_QWORD *)(v84 + 72) * v43, (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
      v63 = v59[2];
      v61 = __OFADD__(v63, 1);
      v64 = v63 + 1;
      if (v61)
        goto LABEL_54;
      v59[2] = v64;
    }
    else
    {
      sub_1C1338F24((uint64_t)v11, v75, (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
      v50 = swift_isUniquelyReferenced_nonNull_native();
      v85 = v23;
      v52 = sub_1C13B9B48(v36);
      v53 = v23[2];
      v54 = (v51 & 1) == 0;
      v55 = v53 + v54;
      if (__OFADD__(v53, v54))
        goto LABEL_51;
      v56 = v51;
      if (v23[3] >= v55)
      {
        if ((v50 & 1) == 0)
          sub_1C13BBAA0();
      }
      else
      {
        sub_1C13BF644(v55, v50);
        v57 = sub_1C13B9B48(v36);
        if ((v56 & 1) != (v58 & 1))
          goto LABEL_56;
        v52 = v57;
      }
      v23 = v85;
      if ((v56 & 1) != 0)
      {
        v24 = v85[7] + *(_QWORD *)(v84 + 72) * v52;
        v25 = v75;
LABEL_5:
        sub_1C13C3578(v25, v24, (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
        goto LABEL_6;
      }
      v85[(v52 >> 6) + 8] |= 1 << v52;
      *(_QWORD *)(v23[6] + 8 * v52) = v36;
      sub_1C1339140(v75, v23[7] + *(_QWORD *)(v84 + 72) * v52, (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
      v60 = v23[2];
      v61 = __OFADD__(v60, 1);
      v62 = v60 + 1;
      if (v61)
        goto LABEL_53;
      v23[2] = v62;
    }
LABEL_6:
    swift_bridgeObjectRelease();
    v15 = v73;
    v11 = i;
  }
  v32 = *(_QWORD *)(v70 + 8 * v33);
  if (v32)
  {
LABEL_16:
    v31 = v33;
LABEL_13:
    v22 = (v32 - 1) & v32;
    v27 = __clz(__rbit64(v32)) + (v31 << 6);
    v83 = v31;
    goto LABEL_9;
  }
  while (1)
  {
    v31 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v31 >= v71)
    {
      v83 = v67;
      goto LABEL_27;
    }
    v32 = *(_QWORD *)(v70 + 8 * v31);
    ++v33;
    if (v32)
      goto LABEL_13;
  }
LABEL_55:
  __break(1u);
LABEL_56:
  result = sub_1C142707C();
  __break(1u);
  return result;
}

uint64_t sub_1C13B8D48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t *v26;
  int *v27;
  char *v28;
  void (*v29)(char *, char *, uint64_t);
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  void (*v40)(char *, unint64_t, uint64_t);
  char v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char *v61;
  char *v62;
  char v63;
  void (*v64)(char *, uint64_t);
  char *v65;
  uint64_t v66;
  uint64_t (*v67)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  void (*v80)(char *, unint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;

  v79 = a1;
  v82 = a2;
  v85 = type metadata accessor for TaskScheduler.Task();
  v81 = *(_QWORD *)(v85 - 8);
  v3 = MEMORY[0x1E0C80A78](v85);
  v80 = (void (*)(char *, unint64_t, uint64_t))((char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = MEMORY[0x1E0C80A78](v3);
  v83 = (uint64_t)&v70 - v6;
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v70 - v7);
  v9 = sub_1C1425E88();
  v84 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10);
  v86 = (char *)&v70 - v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v70 - v15;
  v17 = sub_1C14251B0();
  v73 = *(_QWORD *)(v17 - 8);
  v74 = v17;
  v18 = MEMORY[0x1E0C80A78](v17);
  v72 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v70 - v20;
  v22 = sub_1C1425EA0();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v2 + 16) + 16));
  v26 = (uint64_t *)(v2 + 24);
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(v2 + 24) + 16))
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 56))(v82, 1, 1, v85);
  sub_1C1425114();
  (*(void (**)(char *, _QWORD, uint64_t))(v84 + 104))(v16, *MEMORY[0x1E0D8CD30], v9);
  v71 = v21;
  sub_1C1425E70();
  v27 = (int *)v85;
  v28 = (char *)v8 + *(int *)(v85 + 20);
  v75 = v25;
  v76 = v23;
  v29 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
  v77 = v22;
  v29(v28, v25, v22);
  *v8 = 0;
  v30 = (_QWORD *)((char *)v8 + v27[6]);
  *v30 = nullsub_1;
  v30[1] = 0;
  v31 = (_QWORD *)((char *)v8 + v27[7]);
  *v31 = nullsub_1;
  v31[1] = 0;
  v32 = *v26;
  v78 = v8;
  v33 = v80;
  sub_1C1338F24((uint64_t)v8, (uint64_t)v80, (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
  v34 = v79;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v35 = v83;
  sub_1C13B3F90((uint64_t)v33, v32, v34, v83);
  swift_bridgeObjectRelease();
  v36 = v35 + v27[5];
  sub_1C1425E94();
  v37 = *(_QWORD *)(v34 + 16);
  if (!v37)
  {
    v42 = *(void (**)(char *, uint64_t))(v84 + 8);
    v48 = v81;
    goto LABEL_9;
  }
  v70 = v36;
  v38 = v84;
  v39 = (*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
  v40 = *(void (**)(char *, unint64_t, uint64_t))(v84 + 16);
  v40(v12, v34 + v39, v9);
  sub_1C1329AD0((unint64_t *)&unk_1ED792760, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8CD40], MEMORY[0x1E0D8CD50]);
  swift_bridgeObjectRetain();
  v41 = sub_1C1426A70();
  v42 = *(void (**)(char *, uint64_t))(v38 + 8);
  v42(v12, v9);
  if ((v41 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v43 = v81;
    v44 = v82;
    v45 = v83;
    v46 = v85;
LABEL_17:
    v42(v86, v9);
    v61 = v71;
    sub_1C1425E64();
    v62 = v72;
    sub_1C1425114();
    v63 = sub_1C1425150();
    v64 = *(void (**)(char *, uint64_t))(v73 + 8);
    v65 = v62;
    v66 = v74;
    v64(v65, v74);
    v64(v61, v66);
    sub_1C13B98C4((uint64_t)v78);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v75, v77);
    if ((v63 & 1) != 0)
    {
      sub_1C1339140(v45, v44, (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
      v67 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56);
      v68 = v44;
      v69 = 0;
    }
    else
    {
      sub_1C13B98C4(v45);
      v67 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56);
      v68 = v44;
      v69 = 1;
    }
    return v67(v68, v69, 1, v46);
  }
  v80 = v40;
  if (v37 == 1)
  {
    swift_bridgeObjectRelease();
    v48 = v81;
    v35 = v83;
LABEL_9:
    v49 = v82;
    v50 = (uint64_t)v78;
    v51 = v85;
LABEL_10:
    v53 = v76;
    v52 = v77;
    v54 = v75;
    v42(v86, v9);
    sub_1C13B98C4(v35);
    sub_1C13B98C4(v50);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v52);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56))(v49, 1, 1, v51);
  }
  v55 = v34;
  v56 = *(_QWORD *)(v38 + 72);
  v57 = v55 + v56 + v39;
  v58 = 1;
  while (1)
  {
    result = ((uint64_t (*)(char *, unint64_t, uint64_t))v80)(v12, v57, v9);
    v59 = v58 + 1;
    if (__OFADD__(v58, 1))
      break;
    v60 = sub_1C1426A70();
    v42(v12, v9);
    if ((v60 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v46 = v85;
      v43 = v81;
      v44 = v82;
      v45 = v83;
      goto LABEL_17;
    }
    ++v58;
    v57 += v56;
    if (v59 == v37)
    {
      swift_bridgeObjectRelease();
      v51 = v85;
      v48 = v81;
      v49 = v82;
      v35 = v83;
      v50 = (uint64_t)v78;
      goto LABEL_10;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C13B92E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;
  uint64_t v54;
  os_unfair_lock_s *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t *v61;
  char *v62;
  char *v63;
  _QWORD *v64;
  _QWORD *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  int64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD v74[2];
  uint64_t v75;

  v1 = sub_1C1425EA0();
  v67 = *(_QWORD *)(v1 - 8);
  v68 = v1;
  MEMORY[0x1E0C80A78](v1);
  v66 = (char *)&v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7931B8);
  v3 = MEMORY[0x1E0C80A78](v59);
  v65 = (uint64_t *)((char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = MEMORY[0x1E0C80A78](v3);
  v64 = (uint64_t *)((char *)&v54 - v6);
  v7 = MEMORY[0x1E0C80A78](v5);
  v63 = (char *)&v54 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v62 = (char *)&v54 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v61 = (uint64_t *)((char *)&v54 - v12);
  MEMORY[0x1E0C80A78](v11);
  v60 = (uint64_t *)((char *)&v54 - v13);
  v14 = *(_QWORD *)(v0 + 16);
  v15 = *(os_unfair_lock_s **)(v14 + 16);
  swift_retain();
  os_unfair_lock_lock(v15);
  swift_beginAccess();
  v16 = *(_QWORD *)(v0 + 24);
  v17 = *(_QWORD *)(v16 + 16);
  v18 = MEMORY[0x1E0DEE9D8];
  if (v17)
  {
    v55 = v15;
    v56 = v14;
    v75 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1C13369AC(0, v17, 0);
    v19 = sub_1C135833C(v16);
    v21 = v20;
    v57 = v16 + 64;
    v23 = v22 & 1;
    v69 = v17 - 1;
    v58 = v16;
    v24 = (uint64_t *)v62;
    v25 = (uint64_t *)v63;
    while (1)
    {
      v26 = v59;
      v27 = v60;
      v28 = (uint64_t)v60 + *(int *)(v59 + 48);
      v70 = v21;
      v29 = sub_1C13A1474(v28, v19, v21, v23 & 1, v16);
      *v27 = v29;
      v30 = (uint64_t)v61;
      *v61 = v29;
      sub_1C1338F24(v28, v30 + *(int *)(v26 + 48), (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
      sub_1C132A724(v30, (uint64_t)v24, (uint64_t *)&unk_1ED7931B8);
      sub_1C132C860((uint64_t)v27, (uint64_t *)&unk_1ED7931B8);
      v31 = *v24;
      v32 = *(int *)(v26 + 48);
      v33 = (uint64_t)v25 + v32;
      *v25 = *v24;
      sub_1C1338F24((uint64_t)v24 + v32, (uint64_t)v25 + v32, (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
      v34 = *(int *)(v26 + 48);
      v35 = v64;
      v36 = (uint64_t)v64 + v34;
      *v64 = v31;
      sub_1C1338F24(v33, (uint64_t)v35 + v34, (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
      v74[0] = v31;
      sub_1C13C360C();
      v37 = sub_1C1426DDC();
      v71 = v38;
      v72 = v37;
      v39 = *(int *)(v26 + 48);
      v40 = v65;
      v41 = (char *)v65 + v39;
      *v65 = v31;
      sub_1C1338F24(v33, (uint64_t)v40 + v39, (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
      v74[0] = 0;
      v74[1] = 0xE000000000000000;
      sub_1C1426F08();
      swift_bridgeObjectRelease();
      strcpy((char *)v74, "identifier: ");
      BYTE5(v74[1]) = 0;
      HIWORD(v74[1]) = -5120;
      v73 = *(_QWORD *)v41;
      sub_1C1427058();
      sub_1C14252D0();
      swift_bridgeObjectRelease();
      sub_1C14252D0();
      v42 = type metadata accessor for TaskScheduler.Task();
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v66, &v41[*(int *)(v42 + 20)], v68);
      sub_1C1426AA0();
      sub_1C14252D0();
      swift_bridgeObjectRelease();
      v43 = v74[0];
      v44 = v74[1];
      sub_1C132C860((uint64_t)v25, (uint64_t *)&unk_1ED7931B8);
      sub_1C13B98C4((uint64_t)v41);
      sub_1C13B98C4(v36);
      sub_1C132C860((uint64_t)v24, (uint64_t *)&unk_1ED7931B8);
      v18 = v75;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C13369AC(0, *(_QWORD *)(v18 + 16) + 1, 1);
        v18 = v75;
      }
      v46 = *(_QWORD *)(v18 + 16);
      v45 = *(_QWORD *)(v18 + 24);
      if (v46 >= v45 >> 1)
      {
        sub_1C13369AC(v45 > 1, v46 + 1, 1);
        v18 = v75;
      }
      *(_QWORD *)(v18 + 16) = v46 + 1;
      v47 = (_QWORD *)(v18 + 48 * v46);
      v48 = v71;
      v47[4] = v72;
      v47[5] = v48;
      v47[6] = v43;
      v47[7] = v44;
      v47[9] = MEMORY[0x1E0DEA968];
      v16 = v58;
      if (v19 < 0 || v19 >= -(-1 << *(_BYTE *)(v58 + 32)))
        break;
      if (((*(_QWORD *)(v57 + (((unint64_t)v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
        goto LABEL_19;
      if (*(_DWORD *)(v58 + 36) != (_DWORD)v70)
        goto LABEL_20;
      v49 = sub_1C1426E0C();
      if (!v69)
      {
        swift_bridgeObjectRelease();
        v15 = v55;
        goto LABEL_14;
      }
      v19 = v49;
      v23 = 0;
      v21 = *(unsigned int *)(v16 + 36);
      --v69;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
LABEL_14:
    if (*(_QWORD *)(v18 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797B20);
      v50 = sub_1C1426FBC();
    }
    else
    {
      v50 = MEMORY[0x1E0DEE9E0];
    }
    v74[0] = v50;
    v51 = swift_bridgeObjectRetain();
    sub_1C13555F8(v51, 1, v74);
    swift_bridgeObjectRelease();
    v52 = v74[0];
    os_unfair_lock_unlock(v15);
    swift_release();
    return v52;
  }
  return result;
}

uint64_t sub_1C13B98A4()
{
  return sub_1C13B92E8();
}

uint64_t sub_1C13B98C4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TaskScheduler.Task();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C13B9900()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C13B9924()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1C13B9948()
{
  uint64_t v0;

  sub_1C13B67E0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_1C13B9950(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1C1425CC0();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D8CB40];
  sub_1C1329AD0(&qword_1ED797878, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8CB40], MEMORY[0x1E0D8CB50]);
  v3 = sub_1C1426A4C();
  return sub_1C13B9C44(a1, v3, v2, &qword_1ED797880, MEMORY[0x1E0D8CB58]);
}

unint64_t sub_1C13B99E8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C1426EA8();
  return sub_1C13B9B80(a1, v2);
}

unint64_t sub_1C13B9A18(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1C1426008();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D8D5E8];
  sub_1C1329AD0(&qword_1EF6DBC18, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8D5E8], MEMORY[0x1E0D8D5F8]);
  v3 = sub_1C1426A4C();
  return sub_1C13B9C44(a1, v3, v2, &qword_1EF6DBC20, MEMORY[0x1E0D8D600]);
}

unint64_t sub_1C13B9AB0(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1C14251EC();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  sub_1C1329AD0(&qword_1EF6DB1C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  v3 = sub_1C1426A4C();
  return sub_1C13B9C44(a1, v3, v2, &qword_1EF6DBC28, MEMORY[0x1E0CB09D0]);
}

unint64_t sub_1C13B9B48(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C14270DC();
  return sub_1C13B9D74(a1, v2);
}

unint64_t sub_1C13B9B80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1C13C3650(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1C3BACB90](v9, a1);
      sub_1C13ABD74((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1C13B9C44(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  char v17;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  unint64_t *v21;
  uint64_t v22;

  v21 = a4;
  v22 = a5;
  v6 = v5;
  v19 = a1;
  v20 = a3;
  v8 = a3(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v19 - v10;
  v12 = -1 << *(_BYTE *)(v6 + 32);
  v13 = a2 & ~v12;
  if (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v14 = ~v12;
    v15 = *(_QWORD *)(v9 + 72);
    v16 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    do
    {
      v16(v11, *(_QWORD *)(v6 + 48) + v15 * v13, v8);
      sub_1C1329AD0(v21, v20, v22);
      v17 = sub_1C1426A70();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      if ((v17 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
    }
    while (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

unint64_t sub_1C13B9D74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

void *sub_1C13B9E10()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797B10);
  v2 = *v0;
  v3 = sub_1C1426FA4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_24:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1))
      goto LABEL_26;
    if (v9 >= v13)
      goto LABEL_24;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    if (!v23)
      break;
LABEL_23:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v9 + 1;
  if (v9 + 1 >= v13)
    goto LABEL_24;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_24;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_23;
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

void *sub_1C13B9FAC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t i;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  int64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = type metadata accessor for Assertion();
  v36 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v35 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1C1425CC0();
  v3 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v33 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793A28);
  v30 = v0;
  v5 = *v0;
  v6 = sub_1C1426FA4();
  v7 = *(_QWORD *)(v5 + 16);
  v38 = v6;
  if (!v7)
  {
    result = (void *)swift_release();
    v28 = v38;
    v27 = v30;
LABEL_25:
    *v27 = v28;
    return result;
  }
  v8 = v6;
  result = (void *)(v6 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
  {
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
    v8 = v38;
  }
  v11 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v37 = v5;
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v31 = v5 + 64;
  v32 = (unint64_t)(v12 + 63) >> 6;
  v16 = v33;
  v15 = v34;
  v17 = (uint64_t)v35;
  for (i = v38;
        ;
        result = (void *)sub_1C1339140(v17, *(_QWORD *)(i + 56) + v23, (uint64_t (*)(_QWORD))type metadata accessor for Assertion))
  {
    if (v14)
    {
      v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v20 = v19 | (v11 << 6);
      v21 = v37;
      goto LABEL_9;
    }
    v24 = v11 + 1;
    v21 = v37;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v32)
      goto LABEL_23;
    v25 = *(_QWORD *)(v31 + 8 * v24);
    ++v11;
    if (!v25)
    {
      v11 = v24 + 1;
      if (v24 + 1 >= v32)
        goto LABEL_23;
      v25 = *(_QWORD *)(v31 + 8 * v11);
      if (!v25)
        break;
    }
LABEL_22:
    v14 = (v25 - 1) & v25;
    v20 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_9:
    v22 = *(_QWORD *)(v3 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v16, *(_QWORD *)(v21 + 48) + v22, v15);
    v23 = *(_QWORD *)(v36 + 72) * v20;
    sub_1C1338F24(*(_QWORD *)(v21 + 56) + v23, v17, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(i + 48) + v22, v16, v15);
  }
  v26 = v24 + 2;
  if (v26 >= v32)
  {
LABEL_23:
    result = (void *)swift_release();
    v27 = v30;
    v28 = v38;
    goto LABEL_25;
  }
  v25 = *(_QWORD *)(v31 + 8 * v26);
  if (v25)
  {
    v11 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v11 >= v32)
      goto LABEL_23;
    v25 = *(_QWORD *)(v31 + 8 * v11);
    ++v26;
    if (v25)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1C13BA274()
{
  return sub_1C13BB5C4((uint64_t (*)(_QWORD))type metadata accessor for Activity, &qword_1ED797B00);
}

void *sub_1C13BA288()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797AD0);
  v2 = *v0;
  v3 = sub_1C1426FA4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C13BA440()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DACA8);
  v2 = *v0;
  v3 = sub_1C1426FA4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v16;
    v17 = v16[1];
    LOBYTE(v16) = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v15);
    *v19 = v18;
    v19[1] = v17;
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = (_BYTE)v16;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C13BA5E8()
{
  return sub_1C13BC210((uint64_t (*)(_QWORD))MEMORY[0x1E0C8FB68], &qword_1ED791E30);
}

void *sub_1C13BA5FC()
{
  return sub_1C13BBE9C(&qword_1EF6DAA80);
}

char *sub_1C13BA608()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *result;
  char *v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;

  v41 = sub_1C14251B0();
  v37 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v40 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_1C1426008();
  v36 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v38 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DBC10);
  v33 = v0;
  v3 = *v0;
  v4 = sub_1C1426FA4();
  v5 = *(_QWORD *)(v3 + 16);
  v43 = v4;
  if (!v5)
  {
    result = (char *)swift_release();
    v32 = v43;
    v31 = v33;
LABEL_25:
    *v31 = v32;
    return result;
  }
  v6 = v4;
  result = (char *)(v4 + 64);
  v8 = (char *)(v3 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  v34 = v3 + 64;
  if (v6 != v3 || result >= &v8[8 * v9])
  {
    result = (char *)memmove(result, v8, 8 * v9);
    v6 = v43;
  }
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v42 = v3;
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v35 = (unint64_t)(v11 + 63) >> 6;
  v14 = v36;
  v15 = v37;
  v17 = v38;
  v16 = v39;
  v18 = v41;
  v19 = v43;
  while (1)
  {
    if (v13)
    {
      v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v44 = v10;
      v21 = v20 | (v10 << 6);
      v22 = v42;
      goto LABEL_9;
    }
    v27 = v10 + 1;
    v22 = v42;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v27 >= v35)
      goto LABEL_23;
    v28 = *(_QWORD *)(v34 + 8 * v27);
    v29 = v10 + 1;
    if (!v28)
    {
      v29 = v27 + 1;
      if (v27 + 1 >= v35)
        goto LABEL_23;
      v28 = *(_QWORD *)(v34 + 8 * v29);
      if (!v28)
        break;
    }
LABEL_22:
    v13 = (v28 - 1) & v28;
    v44 = v29;
    v21 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_9:
    v23 = *(_QWORD *)(v14 + 72) * v21;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v17, *(_QWORD *)(v22 + 48) + v23, v16);
    v24 = *(_QWORD *)(v15 + 72) * v21;
    v25 = *(_QWORD *)(v22 + 56) + v24;
    v26 = v40;
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v40, v25, v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(_QWORD *)(v19 + 48) + v23, v17, v16);
    result = (char *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v15 + 32))(*(_QWORD *)(v19 + 56) + v24, v26, v18);
    v10 = v44;
  }
  v30 = v27 + 2;
  if (v30 >= v35)
  {
LABEL_23:
    result = (char *)swift_release();
    v31 = v33;
    v32 = v43;
    goto LABEL_25;
  }
  v28 = *(_QWORD *)(v34 + 8 * v30);
  if (v28)
  {
    v29 = v30;
    goto LABEL_22;
  }
  while (1)
  {
    v29 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v29 >= v35)
      goto LABEL_23;
    v28 = *(_QWORD *)(v34 + 8 * v29);
    ++v30;
    if (v28)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1C13BA8E8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED792858);
  v2 = *v0;
  v3 = sub_1C1426FA4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 4 * v15;
    LODWORD(v17) = *(_DWORD *)(*(_QWORD *)(v2 + 56) + v20);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    *(_DWORD *)(*(_QWORD *)(v4 + 56) + v20) = (_DWORD)v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1C13BAA94()
{
  return sub_1C13BC060(&qword_1ED792860);
}

void *sub_1C13BAAA0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797B20);
  v2 = *v0;
  v3 = sub_1C1426FA4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_1C132AE60(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_1C13377A0(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1C13BAC84()
{
  return sub_1C13BC060(&qword_1ED7931A0);
}

void *sub_1C13BAC90()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793A48);
  v2 = *v0;
  v3 = sub_1C1426FA4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = (void *)swift_retain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C13BAE30()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797AF8);
  v2 = *v0;
  v3 = sub_1C1426FA4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C13BAFE4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  __int128 v22[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793A30);
  v2 = *v0;
  v3 = sub_1C1426FA4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 4 * v15;
    v17 = *(_DWORD *)(*(_QWORD *)(v2 + 48) + 4 * v15);
    v18 = 40 * v15;
    sub_1C132E0A8(*(_QWORD *)(v2 + 56) + 40 * v15, (uint64_t)v22);
    *(_DWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = (void *)sub_1C1339184(v22, *(_QWORD *)(v4 + 56) + v18);
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C13BB1A8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797AE8);
  v2 = *v0;
  v3 = sub_1C1426FA4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 8 * v15;
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v22 = v19;
    v22[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C13BB354()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void (*v20)(char *, unint64_t, uint64_t);
  void (*v21)(unint64_t, char *, uint64_t);
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  int64_t v28;

  v1 = sub_1C1425CC0();
  v2 = *(_QWORD **)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v25 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DBBF8);
  v26 = v0;
  v8 = *v0;
  v9 = sub_1C1426FA4();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_23:
    result = (void *)swift_release();
    *v26 = v10;
    return result;
  }
  result = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12)
    result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  v27 = v8 + 64;
  v13 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v14 = 1 << *(_BYTE *)(v8 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v8 + 64);
  v28 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v18 = v17 | (v13 << 6);
      goto LABEL_9;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v22 >= v28)
      goto LABEL_23;
    v23 = *(_QWORD *)(v27 + 8 * v22);
    ++v13;
    if (!v23)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v28)
        goto LABEL_23;
      v23 = *(_QWORD *)(v27 + 8 * v13);
      if (!v23)
        break;
    }
LABEL_22:
    v16 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_9:
    v19 = v2[9] * v18;
    v20 = (void (*)(char *, unint64_t, uint64_t))v2[2];
    v20(v7, *(_QWORD *)(v8 + 48) + v19, v1);
    v20(v5, *(_QWORD *)(v8 + 56) + v19, v1);
    v21 = (void (*)(unint64_t, char *, uint64_t))v2[4];
    v21(*(_QWORD *)(v10 + 48) + v19, v7, v1);
    result = (void *)((uint64_t (*)(unint64_t, char *, uint64_t))v21)(*(_QWORD *)(v10 + 56) + v19, v5, v1);
  }
  v24 = v22 + 2;
  if (v24 >= v28)
    goto LABEL_23;
  v23 = *(_QWORD *)(v27 + 8 * v24);
  if (v23)
  {
    v13 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    v13 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v13 >= v28)
      goto LABEL_23;
    v23 = *(_QWORD *)(v27 + 8 * v13);
    ++v24;
    if (v23)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1C13BB5B0()
{
  return sub_1C13BB5C4((uint64_t (*)(_QWORD))type metadata accessor for SlidingWindowExponentialBackoff, &qword_1ED7935B8);
}

void *sub_1C13BB5C4(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;

  v5 = a1(0);
  v32 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v29 - v6;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v29 = v2;
  v8 = *v2;
  v9 = sub_1C1426FA4();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v29 = v10;
    return result;
  }
  result = (void *)(v9 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12)
    result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  v30 = v8 + 64;
  v14 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v8 + 16);
  v15 = 1 << *(_BYTE *)(v8 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v8 + 64);
  v31 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v19 = v18 | (v14 << 6);
      goto LABEL_12;
    }
    v26 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v31)
      goto LABEL_26;
    v27 = *(_QWORD *)(v30 + 8 * v26);
    ++v14;
    if (!v27)
    {
      v14 = v26 + 1;
      if (v26 + 1 >= v31)
        goto LABEL_26;
      v27 = *(_QWORD *)(v30 + 8 * v14);
      if (!v27)
        break;
    }
LABEL_25:
    v17 = (v27 - 1) & v27;
    v19 = __clz(__rbit64(v27)) + (v14 << 6);
LABEL_12:
    v20 = 16 * v19;
    v21 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v19);
    v23 = *v21;
    v22 = v21[1];
    v24 = *(_QWORD *)(v32 + 72) * v19;
    sub_1C1338F24(*(_QWORD *)(v8 + 56) + v24, (uint64_t)v7, a1);
    v25 = (_QWORD *)(*(_QWORD *)(v10 + 48) + v20);
    *v25 = v23;
    v25[1] = v22;
    sub_1C1339140((uint64_t)v7, *(_QWORD *)(v10 + 56) + v24, a1);
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 2;
  if (v28 >= v31)
    goto LABEL_26;
  v27 = *(_QWORD *)(v30 + 8 * v28);
  if (v27)
  {
    v14 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v14 >= v31)
      goto LABEL_26;
    v27 = *(_QWORD *)(v30 + 8 * v14);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C13BB7F4()
{
  return sub_1C13BB5C4((uint64_t (*)(_QWORD))type metadata accessor for XPCInputParticipant.ActivityUpdate, (uint64_t *)&unk_1ED7935A8);
}

void *sub_1C13BB808()
{
  return sub_1C13BC210((uint64_t (*)(_QWORD))MEMORY[0x1E0C8FF58], &qword_1ED797AF0);
}

id sub_1C13BB81C()
{
  return sub_1C13BC060(&qword_1EF6DBC08);
}

void *sub_1C13BB828()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *result;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  int64_t v33;
  const void *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v36 = sub_1C14251EC();
  v1 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v35 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DB1C0);
  v32 = v0;
  v3 = *v0;
  v4 = sub_1C1426FA4();
  v5 = *(_QWORD *)(v3 + 16);
  v38 = v4;
  if (!v5)
  {
    result = (void *)swift_release();
    v30 = v38;
    v29 = v32;
LABEL_28:
    *v29 = v30;
    return result;
  }
  v6 = v4;
  result = (void *)(v4 + 64);
  v8 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  v34 = (const void *)(v3 + 64);
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    result = memmove(result, v34, 8 * v8);
    v6 = v38;
  }
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v37 = v3;
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v33 = (unint64_t)(v11 + 63) >> 6;
  v15 = v35;
  v14 = v36;
  v16 = v38;
  while (1)
  {
    if (v13)
    {
      v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v18 = v17 | (v10 << 6);
      v19 = v37;
      goto LABEL_12;
    }
    v26 = v10 + 1;
    v19 = v37;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v33)
      goto LABEL_26;
    v27 = *((_QWORD *)v34 + v26);
    ++v10;
    if (!v27)
    {
      v10 = v26 + 1;
      if (v26 + 1 >= v33)
        goto LABEL_26;
      v27 = *((_QWORD *)v34 + v10);
      if (!v27)
        break;
    }
LABEL_25:
    v13 = (v27 - 1) & v27;
    v18 = __clz(__rbit64(v27)) + (v10 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v1 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v15, *(_QWORD *)(v19 + 48) + v20, v14);
    v21 = 16 * v18;
    v22 = *(_QWORD *)(v19 + 56) + 16 * v18;
    v23 = *(_BYTE *)v22;
    v24 = *(_QWORD *)(v22 + 8);
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v16 + 48) + v20, v15, v14);
    v25 = *(_QWORD *)(v16 + 56) + v21;
    *(_BYTE *)v25 = v23;
    *(_QWORD *)(v25 + 8) = v24;
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 2;
  if (v28 >= v33)
  {
LABEL_26:
    result = (void *)swift_release();
    v29 = v32;
    v30 = v38;
    goto LABEL_28;
  }
  v27 = *((_QWORD *)v34 + v28);
  if (v27)
  {
    v10 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v10 >= v33)
      goto LABEL_26;
    v27 = *((_QWORD *)v34 + v10);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C13BBAA0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = type metadata accessor for TaskScheduler.Task();
  v27 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791F30);
  v5 = *v0;
  v6 = sub_1C1426FA4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v26 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v11;
    if (!v22)
    {
      v11 = v21 + 1;
      if (v21 + 1 >= v15)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v11);
      if (!v22)
        break;
    }
LABEL_25:
    v14 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_12:
    v18 = 8 * v17;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v17);
    v20 = *(_QWORD *)(v27 + 72) * v17;
    sub_1C1338F24(*(_QWORD *)(v5 + 56) + v20, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v19;
    result = (void *)sub_1C1339140((uint64_t)v4, *(_QWORD *)(v7 + 56) + v20, (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
  }
  v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v11 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v11);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C13BBCCC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  __int128 v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED791E20);
  v2 = *v0;
  v3 = sub_1C1426FA4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      v9 = v21 + 1;
      if (v21 + 1 >= v13)
        goto LABEL_26;
      v22 = *(_QWORD *)(v6 + 8 * v9);
      if (!v22)
        break;
    }
LABEL_25:
    v12 = (v22 - 1) & v22;
    v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v24 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v20 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v20 = v19;
    v20[1] = v18;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v16) = v24;
    swift_bridgeObjectRetain();
    result = (void *)sub_1C133177C(v24, *((unint64_t *)&v24 + 1));
  }
  v23 = v21 + 2;
  if (v23 >= v13)
    goto LABEL_26;
  v22 = *(_QWORD *)(v6 + 8 * v23);
  if (v22)
  {
    v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v22 = *(_QWORD *)(v6 + 8 * v9);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1C13BBE90()
{
  return sub_1C13BC060((uint64_t *)&unk_1ED797B28);
}

void *sub_1C13BBE9C(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1C1426FA4();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      v10 = v23 + 1;
      if (v23 + 1 >= v14)
        goto LABEL_26;
      v24 = *(_QWORD *)(v7 + 8 * v10);
      if (!v24)
        break;
    }
LABEL_25:
    v13 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v16);
    v19 = v18[1];
    v20 = 8 * v16;
    v21 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v5 + 48) + v17);
    *v22 = *v18;
    v22[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v14)
    goto LABEL_26;
  v24 = *(_QWORD *)(v7 + 8 * v25);
  if (v24)
  {
    v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v24 = *(_QWORD *)(v7 + 8 * v10);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1C13BC048()
{
  return sub_1C13BC060(&qword_1ED793A40);
}

id sub_1C13BC054()
{
  return sub_1C13BC060(&qword_1EF6DBBF0);
}

id sub_1C13BC060(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  void *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1C1426FA4();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      v10 = v21 + 1;
      if (v21 + 1 >= v14)
        goto LABEL_26;
      v22 = *(_QWORD *)(v7 + 8 * v10);
      if (!v22)
        break;
    }
LABEL_25:
    v13 = (v22 - 1) & v22;
    v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    v17 = 4 * v16;
    v18 = *(_DWORD *)(*(_QWORD *)(v3 + 48) + 4 * v16);
    v19 = 8 * v16;
    v20 = *(void **)(*(_QWORD *)(v3 + 56) + v19);
    *(_DWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + v19) = v20;
    result = v20;
  }
  v23 = v21 + 2;
  if (v23 >= v14)
    goto LABEL_26;
  v22 = *(_QWORD *)(v7 + 8 * v23);
  if (v22)
  {
    v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v22 = *(_QWORD *)(v7 + 8 * v10);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C13BC1FC()
{
  return sub_1C13BC210((uint64_t (*)(_QWORD))MEMORY[0x1E0D8D3C0], &qword_1EF6DAA90);
}

void *sub_1C13BC210(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;

  v37 = a1(0);
  v4 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v6 = (char *)&v33 - v5;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v34 = v2;
  v7 = *v2;
  v8 = sub_1C1426FA4();
  v9 = *(_QWORD *)(v7 + 16);
  v38 = v8;
  if (!v9)
  {
    result = (void *)swift_release();
    v32 = v38;
    v31 = v34;
LABEL_28:
    *v31 = v32;
    return result;
  }
  v10 = v8;
  result = (void *)(v8 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v7 || (unint64_t)result >= v7 + 64 + 8 * v12)
  {
    result = memmove(result, (const void *)(v7 + 64), 8 * v12);
    v10 = v38;
  }
  v35 = v7 + 64;
  v14 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v7 + 16);
  v15 = 1 << *(_BYTE *)(v7 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v7 + 64);
  v36 = (unint64_t)(v15 + 63) >> 6;
  v18 = v37;
  while (1)
  {
    if (v17)
    {
      v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_12;
    }
    v28 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v36)
      goto LABEL_26;
    v29 = *(_QWORD *)(v35 + 8 * v28);
    ++v14;
    if (!v29)
    {
      v14 = v28 + 1;
      if (v28 + 1 >= v36)
        goto LABEL_26;
      v29 = *(_QWORD *)(v35 + 8 * v14);
      if (!v29)
        break;
    }
LABEL_25:
    v17 = (v29 - 1) & v29;
    v20 = __clz(__rbit64(v29)) + (v14 << 6);
LABEL_12:
    v21 = 16 * v20;
    v22 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v20);
    v24 = *v22;
    v23 = v22[1];
    v25 = *(_QWORD *)(v4 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, *(_QWORD *)(v7 + 56) + v25, v18);
    v26 = v38;
    v27 = (_QWORD *)(*(_QWORD *)(v38 + 48) + v21);
    *v27 = v24;
    v27[1] = v23;
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(_QWORD *)(v26 + 56) + v25, v6, v18);
    result = (void *)swift_bridgeObjectRetain();
  }
  v30 = v28 + 2;
  if (v30 >= v36)
  {
LABEL_26:
    result = (void *)swift_release();
    v31 = v34;
    v32 = v38;
    goto LABEL_28;
  }
  v29 = *(_QWORD *)(v35 + 8 * v30);
  if (v29)
  {
    v14 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v14 >= v36)
      goto LABEL_26;
    v29 = *(_QWORD *)(v35 + 8 * v14);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C13BC46C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797B10);
  v37 = a2;
  v6 = sub_1C1426FB0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_38;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v2;
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v14++, 1))
      goto LABEL_40;
    if (v14 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v14);
    if (!v24)
    {
      v25 = v14 + 1;
      if (v14 + 1 >= v11)
      {
LABEL_31:
        swift_release();
        v3 = v35;
        if ((v37 & 1) == 0)
          goto LABEL_38;
        goto LABEL_34;
      }
      v24 = *(_QWORD *)(v36 + 8 * v25);
      if (!v24)
      {
        while (1)
        {
          v14 = v25 + 1;
          if (__OFADD__(v25, 1))
            break;
          if (v14 >= v11)
            goto LABEL_31;
          v24 = *(_QWORD *)(v36 + 8 * v14);
          ++v25;
          if (v24)
            goto LABEL_20;
        }
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return result;
      }
      ++v14;
    }
LABEL_20:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_21:
    v26 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
    v28 = *v26;
    v27 = v26[1];
    v29 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1C14270E8();
    sub_1C1426AD0();
    result = sub_1C1427100();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v32 = v17 == v31;
        if (v17 == v31)
          v17 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v33 == -1);
      v18 = __clz(__rbit64(~v33)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v18);
    *v19 = v28;
    v19[1] = v27;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v18) = v29;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v23 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_38;
LABEL_34:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_38:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1C13BC75C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t i;
  int v48;
  uint64_t v49;

  v3 = v2;
  v5 = type metadata accessor for Assertion();
  v46 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v49 = (uint64_t)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C1425CC0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793A28);
  v48 = a2;
  v12 = sub_1C1426FB0();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_42;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v45 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v43 = v2;
  v44 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 64;
  result = swift_retain();
  v20 = 0;
  v21 = v11;
  for (i = v11; ; v21 = i)
  {
    if (v17)
    {
      v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      return result;
    }
    if (v25 >= v44)
      break;
    v26 = v45;
    v27 = v45[v25];
    ++v20;
    if (!v27)
    {
      v20 = v25 + 1;
      if (v25 + 1 >= v44)
        goto LABEL_35;
      v27 = v45[v20];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v44)
        {
LABEL_35:
          swift_release();
          v3 = v43;
          if ((v48 & 1) == 0)
            goto LABEL_42;
          goto LABEL_36;
        }
        v27 = v45[v28];
        if (!v27)
        {
          while (1)
          {
            v20 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_44;
            if (v20 >= v44)
              goto LABEL_35;
            v27 = v45[v20];
            ++v28;
            if (v27)
              goto LABEL_21;
          }
        }
        v20 = v28;
      }
    }
LABEL_21:
    v17 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v20 << 6);
LABEL_22:
    v29 = *(_QWORD *)(v8 + 72);
    v30 = *(_QWORD *)(v21 + 48) + v29 * v24;
    if ((v48 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 32))(v10, v30, v7);
      v31 = *(_QWORD *)(v21 + 56);
      v32 = *(_QWORD *)(v46 + 72);
      sub_1C1339140(v31 + v32 * v24, v49, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, v30, v7);
      v33 = *(_QWORD *)(v21 + 56);
      v32 = *(_QWORD *)(v46 + 72);
      sub_1C1338F24(v33 + v32 * v24, v49, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    }
    sub_1C1329AD0(&qword_1ED797878, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8CB40], MEMORY[0x1E0D8CB50]);
    result = sub_1C1426A4C();
    v34 = -1 << *(_BYTE *)(v13 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v18 + 8 * (v35 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v18 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v18 + 8 * v36);
      }
      while (v40 == -1);
      v22 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v13 + 48) + v29 * v22, v10, v7);
    result = sub_1C1339140(v49, *(_QWORD *)(v13 + 56) + v32 * v22, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    ++*(_QWORD *)(v13 + 16);
  }
  swift_release();
  v3 = v43;
  v26 = v45;
  if ((v48 & 1) == 0)
    goto LABEL_42;
LABEL_36:
  v41 = 1 << *(_BYTE *)(i + 32);
  if (v41 >= 64)
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v41;
  *(_QWORD *)(i + 16) = 0;
LABEL_42:
  result = swift_release();
  *v3 = v13;
  return result;
}

uint64_t sub_1C13BCB78(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t i;
  int v44;
  uint64_t v45;

  v3 = v2;
  v5 = sub_1C1425CC0();
  v45 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DBBE8);
  v44 = a2;
  v9 = sub_1C1426FB0();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v42 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v40 = v2;
  v41 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  for (i = v8; ; v8 = i)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v41)
      break;
    v23 = v42;
    v24 = v42[v22];
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v41)
        goto LABEL_34;
      v24 = v42[v17];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v41)
        {
LABEL_34:
          swift_release();
          v3 = v40;
          if ((v44 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v42[v25];
        if (!v24)
        {
          while (1)
          {
            v17 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v17 >= v41)
              goto LABEL_34;
            v24 = v42[v17];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v17 = v25;
      }
    }
LABEL_21:
    v14 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v45 + 72);
    v27 = *(_QWORD *)(v8 + 48) + v26 * v21;
    if ((v44 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v45 + 32))(v7, v27, v5);
      v28 = (uint64_t *)(*(_QWORD *)(v8 + 56) + 16 * v21);
      v30 = *v28;
      v29 = v28[1];
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v45 + 16))(v7, v27, v5);
      v31 = (uint64_t *)(*(_QWORD *)(v8 + 56) + 16 * v21);
      v30 = *v31;
      v29 = v31[1];
      swift_bridgeObjectRetain();
    }
    sub_1C1329AD0(&qword_1ED797878, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8CB40], MEMORY[0x1E0D8CB50]);
    result = sub_1C1426A4C();
    v32 = -1 << *(_BYTE *)(v10 + 32);
    v33 = result & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v15 + 8 * (v33 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v15 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v15 + 8 * v34);
      }
      while (v38 == -1);
      v18 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v45 + 32))(*(_QWORD *)(v10 + 48) + v26 * v18, v7, v5);
    v19 = (_QWORD *)(*(_QWORD *)(v10 + 56) + 16 * v18);
    *v19 = v30;
    v19[1] = v29;
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v3 = v40;
  v23 = v42;
  if ((v44 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v39 = 1 << *(_BYTE *)(v8 + 32);
  if (v39 >= 64)
    bzero(v23, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v39;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_1C13BCF24(uint64_t a1, int a2)
{
  return sub_1C13BEF04(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for Activity, &qword_1ED797B00);
}

uint64_t sub_1C13BCF38(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797AD0);
  v42 = a2;
  v6 = sub_1C1426FB0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1C14270E8();
    sub_1C1426AD0();
    result = sub_1C1427100();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1C13BD25C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DACA8);
  v37 = a2;
  v6 = sub_1C1426FB0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_BYTE *)(*(_QWORD *)(v5 + 56) + v20);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1C14270E8();
    sub_1C1426AD0();
    result = sub_1C1427100();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_BYTE *)(*(_QWORD *)(v7 + 56) + v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v22 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1C13BD564(uint64_t a1, int a2)
{
  return sub_1C13BFF40(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FB68], &qword_1ED791E30);
}

uint64_t sub_1C13BD578(uint64_t a1, char a2)
{
  return sub_1C13BF974(a1, a2, &qword_1EF6DAA80);
}

uint64_t sub_1C13BD584(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[4];
  int v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;

  v3 = v2;
  v5 = sub_1C14251B0();
  v51 = *(_QWORD *)(v5 - 8);
  v52 = v5;
  MEMORY[0x1E0C80A78](v5);
  v50 = &v42[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1C1426008();
  v49 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v42[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DBC10);
  v11 = sub_1C1426FB0();
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_41;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 64);
  v46 = (_QWORD *)(v10 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v44 = v2;
  v45 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11 + 64;
  v48 = v10;
  result = swift_retain();
  v19 = 0;
  v43 = a2;
  v20 = 16;
  if ((a2 & 1) != 0)
    v20 = 32;
  v47 = v20;
  v21 = v20;
  while (1)
  {
    if (v16)
    {
      v23 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v24 = v23 | (v19 << 6);
      goto LABEL_24;
    }
    v25 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v45)
      break;
    v26 = v46;
    v27 = v46[v25];
    ++v19;
    if (!v27)
    {
      v19 = v25 + 1;
      if (v25 + 1 >= v45)
        goto LABEL_34;
      v27 = v46[v19];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v45)
        {
LABEL_34:
          v40 = v48;
          swift_release();
          v3 = v44;
          if ((v43 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v27 = v46[v28];
        if (!v27)
        {
          while (1)
          {
            v19 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_43;
            if (v19 >= v45)
              goto LABEL_34;
            v27 = v46[v19];
            ++v28;
            if (v27)
              goto LABEL_23;
          }
        }
        v19 = v28;
      }
    }
LABEL_23:
    v16 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v19 << 6);
LABEL_24:
    v29 = v48;
    v30 = *(_QWORD *)(v49 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v49 + v21))(v9, *(_QWORD *)(v48 + 48) + v30 * v24, v7);
    v31 = *(_QWORD *)(v29 + 56);
    v32 = *(_QWORD *)(v51 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v51 + v21))(v50, v31 + v32 * v24, v52);
    sub_1C1329AD0(&qword_1EF6DBC18, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8D5E8], MEMORY[0x1E0D8D5F8]);
    result = sub_1C1426A4C();
    v33 = -1 << *(_BYTE *)(v12 + 32);
    v34 = result & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v17 + 8 * v35);
      }
      while (v39 == -1);
      v22 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v17 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v49 + 32))(*(_QWORD *)(v12 + 48) + v30 * v22, v9, v7);
    result = (*(uint64_t (**)(unint64_t, _BYTE *, uint64_t))(v51 + 32))(*(_QWORD *)(v12 + 56) + v32 * v22, v50, v52);
    ++*(_QWORD *)(v12 + 16);
  }
  v40 = v48;
  swift_release();
  v3 = v44;
  v26 = v46;
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v41 = 1 << *(_BYTE *)(v40 + 32);
  if (v41 >= 64)
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v41;
  *(_QWORD *)(v40 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v12;
  return result;
}

uint64_t sub_1C13BD97C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED792858);
  v37 = a2;
  v6 = sub_1C1426FB0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_DWORD *)(*(_QWORD *)(v5 + 56) + 4 * v20);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1C14270E8();
    sub_1C1426AD0();
    result = sub_1C1427100();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_DWORD *)(*(_QWORD *)(v7 + 56) + 4 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v22 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1C13BDC84(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797B20);
  v6 = sub_1C1426FB0();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_1C13377A0(v24, v35);
      }
      else
      {
        sub_1C132AE60((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_1C14270E8();
      sub_1C1426AD0();
      result = sub_1C1427100();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_1C13377A0(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1C13BDF80(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793A48);
  result = sub_1C1426FB0();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v10;
    v32 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v33)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v32 >= 64)
                  bzero((void *)(v5 + 64), 8 * v33);
                else
                  *v9 = v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v8 >= v33)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = 8 * v20;
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v28);
      v30 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v28);
      if ((a2 & 1) == 0)
        swift_retain();
      result = sub_1C14270DC();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 8 * v17;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1C13BE234(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797AF8);
  v36 = a2;
  v6 = sub_1C1426FB0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_1C14270E8();
    sub_1C1426AD0();
    result = sub_1C1427100();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1C13BE548(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  __int128 *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  __int128 v31[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793A30);
  result = sub_1C1426FB0();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v30 = (_QWORD *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v12 = (unint64_t)(v9 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v8 << 6);
      }
      else
      {
        v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v17 >= v12)
          goto LABEL_34;
        v18 = v30[v17];
        ++v8;
        if (!v18)
        {
          v8 = v17 + 1;
          if (v17 + 1 >= v12)
            goto LABEL_34;
          v18 = v30[v8];
          if (!v18)
          {
            v19 = v17 + 2;
            if (v19 >= v12)
            {
LABEL_34:
              if ((a2 & 1) != 0)
              {
                v29 = 1 << *(_BYTE *)(v5 + 32);
                if (v29 >= 64)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v18 = v30[v19];
            if (!v18)
            {
              while (1)
              {
                v8 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_42;
                if (v8 >= v12)
                  goto LABEL_34;
                v18 = v30[v8];
                ++v19;
                if (v18)
                  goto LABEL_21;
              }
            }
            v8 = v19;
          }
        }
LABEL_21:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      v20 = *(unsigned int *)(*(_QWORD *)(v5 + 48) + 4 * v16);
      v21 = (__int128 *)(*(_QWORD *)(v5 + 56) + 40 * v16);
      if ((a2 & 1) != 0)
        sub_1C1339184(v21, (uint64_t)v31);
      else
        sub_1C132E0A8((uint64_t)v21, (uint64_t)v31);
      result = MEMORY[0x1C3BACDAC](*(_QWORD *)(v7 + 40), v20, 4);
      v22 = -1 << *(_BYTE *)(v7 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_DWORD *)(*(_QWORD *)(v7 + 48) + 4 * v14) = v20;
      result = sub_1C1339184(v31, *(_QWORD *)(v7 + 56) + 40 * v14);
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1C13BE810(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797AE8);
  v37 = a2;
  v6 = sub_1C1426FB0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_1C14270E8();
    sub_1C1426AD0();
    result = sub_1C1427100();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v22 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1C13BEB18(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  void (*v25)(unint64_t, _BYTE *, uint64_t);
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  _QWORD *v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  void (*v35)(_BYTE *, unint64_t, uint64_t);
  unint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[4];
  int v48;
  uint64_t *v49;
  int64_t v50;
  _QWORD *v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;

  v3 = v2;
  v5 = sub_1C1425CC0();
  v55 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = &v47[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v10 = &v47[-v9];
  v11 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DBBF8);
  v12 = sub_1C1426FB0();
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_41;
  v13 = 1 << *(_BYTE *)(v11 + 32);
  v14 = *(_QWORD *)(v11 + 64);
  v51 = (_QWORD *)(v11 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v49 = v2;
  v50 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11;
  v18 = v12 + 64;
  v54 = v17;
  result = swift_retain();
  v20 = 0;
  v48 = a2;
  v21 = 16;
  if ((a2 & 1) != 0)
    v21 = 32;
  v52 = v21;
  v53 = v8;
  while (1)
  {
    if (v16)
    {
      v26 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v27 = v26 | (v20 << 6);
      goto LABEL_24;
    }
    v28 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v28 >= v50)
      break;
    v29 = v51;
    v30 = v51[v28];
    ++v20;
    if (!v30)
    {
      v20 = v28 + 1;
      if (v28 + 1 >= v50)
        goto LABEL_34;
      v30 = v51[v20];
      if (!v30)
      {
        v31 = v28 + 2;
        if (v31 >= v50)
        {
LABEL_34:
          v45 = v54;
          swift_release();
          v3 = v49;
          if ((v48 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v30 = v51[v31];
        if (!v30)
        {
          while (1)
          {
            v20 = v31 + 1;
            if (__OFADD__(v31, 1))
              goto LABEL_43;
            if (v20 >= v50)
              goto LABEL_34;
            v30 = v51[v20];
            ++v31;
            if (v30)
              goto LABEL_23;
          }
        }
        v20 = v31;
      }
    }
LABEL_23:
    v16 = (v30 - 1) & v30;
    v27 = __clz(__rbit64(v30)) + (v20 << 6);
LABEL_24:
    v32 = v54;
    v33 = *(_QWORD *)(v55 + 72);
    v34 = v33 * v27;
    v35 = *(void (**)(_BYTE *, unint64_t, uint64_t))(v55 + v52);
    v35(v10, *(_QWORD *)(v54 + 48) + v33 * v27, v5);
    v36 = *(_QWORD *)(v32 + 56) + v34;
    v37 = v53;
    v35(v53, v36, v5);
    sub_1C1329AD0(&qword_1ED797878, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8CB40], MEMORY[0x1E0D8CB50]);
    result = sub_1C1426A4C();
    v38 = -1 << *(_BYTE *)(v12 + 32);
    v39 = result & ~v38;
    v40 = v39 >> 6;
    if (((-1 << v39) & ~*(_QWORD *)(v18 + 8 * (v39 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v39) & ~*(_QWORD *)(v18 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v41 = 0;
      v42 = (unint64_t)(63 - v38) >> 6;
      do
      {
        if (++v40 == v42 && (v41 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v43 = v40 == v42;
        if (v40 == v42)
          v40 = 0;
        v41 |= v43;
        v44 = *(_QWORD *)(v18 + 8 * v40);
      }
      while (v44 == -1);
      v22 = __clz(__rbit64(~v44)) + (v40 << 6);
    }
    *(_QWORD *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    v23 = v33 * v22;
    v24 = *(_QWORD *)(v12 + 48) + v33 * v22;
    v25 = *(void (**)(unint64_t, _BYTE *, uint64_t))(v55 + 32);
    v25(v24, v10, v5);
    result = ((uint64_t (*)(unint64_t, _BYTE *, uint64_t))v25)(*(_QWORD *)(v12 + 56) + v23, v37, v5);
    ++*(_QWORD *)(v12 + 16);
  }
  v45 = v54;
  swift_release();
  v3 = v49;
  v29 = v51;
  if ((v48 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v46 = 1 << *(_BYTE *)(v45 + 32);
  if (v46 >= 64)
    bzero(v29, ((unint64_t)(v46 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v29 = -1 << v46;
  *(_QWORD *)(v45 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v12;
  return result;
}

uint64_t sub_1C13BEEF0(uint64_t a1, int a2)
{
  return sub_1C13BEF04(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for SlidingWindowExponentialBackoff, &qword_1ED7935B8);
}

uint64_t sub_1C13BEF04(uint64_t a1, int a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t v46;
  int v47;
  uint64_t (*v48)(_QWORD);

  v6 = v4;
  v48 = a3;
  v8 = a3(0);
  v46 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v42 - v9;
  v11 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v47 = a2;
  v12 = sub_1C1426FB0();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_41;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v45 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v43 = v4;
  v44 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 64;
  result = swift_retain();
  v20 = 0;
  while (1)
  {
    if (v17)
    {
      v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v44)
      break;
    v26 = v45;
    v27 = v45[v25];
    ++v20;
    if (!v27)
    {
      v20 = v25 + 1;
      if (v25 + 1 >= v44)
        goto LABEL_34;
      v27 = v45[v20];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v44)
        {
LABEL_34:
          swift_release();
          v6 = v43;
          if ((v47 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v27 = v45[v28];
        if (!v27)
        {
          while (1)
          {
            v20 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_43;
            if (v20 >= v44)
              goto LABEL_34;
            v27 = v45[v20];
            ++v28;
            if (v27)
              goto LABEL_21;
          }
        }
        v20 = v28;
      }
    }
LABEL_21:
    v17 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v20 << 6);
LABEL_22:
    v29 = (uint64_t *)(*(_QWORD *)(v11 + 48) + 16 * v24);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(v46 + 72);
    v33 = *(_QWORD *)(v11 + 56) + v32 * v24;
    if ((v47 & 1) != 0)
    {
      sub_1C1339140(v33, (uint64_t)v10, v48);
    }
    else
    {
      sub_1C1338F24(v33, (uint64_t)v10, v48);
      swift_bridgeObjectRetain();
    }
    sub_1C14270E8();
    sub_1C1426AD0();
    result = sub_1C1427100();
    v34 = -1 << *(_BYTE *)(v13 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v18 + 8 * (v35 >> 6))) != 0)
    {
      v21 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v18 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v18 + 8 * v36);
      }
      while (v40 == -1);
      v21 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    v22 = (_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v21);
    *v22 = v31;
    v22[1] = v30;
    result = sub_1C1339140((uint64_t)v10, *(_QWORD *)(v13 + 56) + v32 * v21, v48);
    ++*(_QWORD *)(v13 + 16);
  }
  swift_release();
  v6 = v43;
  v26 = v45;
  if ((v47 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v41 = 1 << *(_BYTE *)(v11 + 32);
  if (v41 >= 64)
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v41;
  *(_QWORD *)(v11 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v6 = v13;
  return result;
}

uint64_t sub_1C13BF278(uint64_t a1, int a2)
{
  return sub_1C13BFF40(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FF58], &qword_1ED797AF0);
}

uint64_t sub_1C13BF28C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t i;
  int v44;
  uint64_t v45;

  v3 = v2;
  v5 = sub_1C14251EC();
  v45 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DB1C0);
  v44 = a2;
  v9 = sub_1C1426FB0();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v42 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v40 = v2;
  v41 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  for (i = v8; ; v8 = i)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v41)
      break;
    v23 = v42;
    v24 = v42[v22];
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v41)
        goto LABEL_34;
      v24 = v42[v17];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v41)
        {
LABEL_34:
          swift_release();
          v3 = v40;
          if ((v44 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v42[v25];
        if (!v24)
        {
          while (1)
          {
            v17 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v17 >= v41)
              goto LABEL_34;
            v24 = v42[v17];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v17 = v25;
      }
    }
LABEL_21:
    v14 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v45 + 72);
    v27 = *(_QWORD *)(v8 + 48) + v26 * v21;
    if ((v44 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v45 + 32))(v7, v27, v5);
      v28 = *(_QWORD *)(v8 + 56) + 16 * v21;
      v29 = *(_BYTE *)v28;
      v30 = *(_QWORD *)(v28 + 8);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v45 + 16))(v7, v27, v5);
      v31 = *(_QWORD *)(v8 + 56) + 16 * v21;
      v29 = *(_BYTE *)v31;
      v30 = *(_QWORD *)(v31 + 8);
      swift_bridgeObjectRetain();
    }
    sub_1C1329AD0(&qword_1EF6DB1C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    result = sub_1C1426A4C();
    v32 = -1 << *(_BYTE *)(v10 + 32);
    v33 = result & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v15 + 8 * (v33 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v15 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v15 + 8 * v34);
      }
      while (v38 == -1);
      v18 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v45 + 32))(*(_QWORD *)(v10 + 48) + v26 * v18, v7, v5);
    v19 = *(_QWORD *)(v10 + 56) + 16 * v18;
    *(_BYTE *)v19 = v29;
    *(_QWORD *)(v19 + 8) = v30;
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v3 = v40;
  v23 = v42;
  if ((v44 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v39 = 1 << *(_BYTE *)(v8 + 32);
  if (v39 >= 64)
    bzero(v23, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v39;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_1C13BF644(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  _QWORD *v37;
  uint64_t v38;
  int v39;

  v3 = v2;
  v5 = type metadata accessor for TaskScheduler.Task();
  v38 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791F30);
  v39 = a2;
  result = sub_1C1426FB0();
  v10 = result;
  if (*(_QWORD *)(v8 + 16))
  {
    v35 = v3;
    v11 = 0;
    v12 = *(_QWORD *)(v8 + 64);
    v37 = (_QWORD *)(v8 + 64);
    v13 = 1 << *(_BYTE *)(v8 + 32);
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v15 = v14 & v12;
    v36 = (unint64_t)(v13 + 63) >> 6;
    v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        v18 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v19 = v18 | (v11 << 6);
      }
      else
      {
        v20 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        result = (uint64_t)v37;
        if (v20 >= v36)
          goto LABEL_34;
        v21 = v37[v20];
        ++v11;
        if (!v21)
        {
          v11 = v20 + 1;
          if (v20 + 1 >= v36)
            goto LABEL_34;
          v21 = v37[v11];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v36)
            {
LABEL_34:
              if ((v39 & 1) == 0)
              {
                result = swift_release();
                v3 = v35;
                goto LABEL_41;
              }
              v33 = 1 << *(_BYTE *)(v8 + 32);
              if (v33 >= 64)
                bzero(v37, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v37 = -1 << v33;
              v3 = v35;
              *(_QWORD *)(v8 + 16) = 0;
              break;
            }
            v21 = v37[v22];
            if (!v21)
            {
              while (1)
              {
                v11 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_43;
                if (v11 >= v36)
                  goto LABEL_34;
                v21 = v37[v11];
                ++v22;
                if (v21)
                  goto LABEL_21;
              }
            }
            v11 = v22;
          }
        }
LABEL_21:
        v15 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v11 << 6);
      }
      v23 = *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v19);
      v24 = *(_QWORD *)(v38 + 72);
      v25 = *(_QWORD *)(v8 + 56) + v24 * v19;
      if ((v39 & 1) != 0)
        sub_1C1339140(v25, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
      else
        sub_1C1338F24(v25, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
      result = sub_1C14270DC();
      v26 = -1 << *(_BYTE *)(v10 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v16 + 8 * v28);
        }
        while (v32 == -1);
        v17 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v17) = v23;
      result = sub_1C1339140((uint64_t)v7, *(_QWORD *)(v10 + 56) + v24 * v17, (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
      ++*(_QWORD *)(v10 + 16);
    }
  }
  result = swift_release();
LABEL_41:
  *v3 = v10;
  return result;
}

uint64_t sub_1C13BF974(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v37 = a2;
  v7 = sub_1C1426FB0();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v36 = v6 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v6 + 64);
  v35 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35)
      break;
    v23 = (_QWORD *)(v6 + 64);
    v24 = *(_QWORD *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_33;
      v24 = *(_QWORD *)(v36 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v35)
              goto LABEL_33;
            v24 = *(_QWORD *)(v36 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v11 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v21);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1C14270E8();
    sub_1C1426AD0();
    result = sub_1C1427100();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v18);
    *v19 = v32;
    v19[1] = v31;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v33;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v23 = (_QWORD *)(v6 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v6 + 32);
  if (v34 >= 64)
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v34;
  *(_QWORD *)(v6 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v4 = v8;
  return result;
}

uint64_t sub_1C13BFC84(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v34;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  result = sub_1C1426FB0();
  v8 = result;
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = 0;
    v10 = (uint64_t *)(v6 + 64);
    v11 = 1 << *(_BYTE *)(v6 + 32);
    v31 = -1 << v11;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v6 + 64);
    v32 = 1 << *(_BYTE *)(v6 + 32);
    v33 = v4;
    v34 = (unint64_t)(v11 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v13)
      {
        v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v20 = v19 | (v9 << 6);
      }
      else
      {
        v21 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v34)
          goto LABEL_33;
        v22 = v10[v21];
        ++v9;
        if (!v22)
        {
          v9 = v21 + 1;
          if (v21 + 1 >= v34)
            goto LABEL_33;
          v22 = v10[v9];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v34)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v4 = v33;
                goto LABEL_40;
              }
              if (v32 >= 64)
                bzero((void *)(v6 + 64), 8 * v34);
              else
                *v10 = v31;
              v4 = v33;
              *(_QWORD *)(v6 + 16) = 0;
              break;
            }
            v22 = v10[v23];
            if (!v22)
            {
              while (1)
              {
                v9 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_42;
                if (v9 >= v34)
                  goto LABEL_33;
                v22 = v10[v9];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v9 = v23;
          }
        }
LABEL_30:
        v13 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v9 << 6);
      }
      v28 = *(unsigned int *)(*(_QWORD *)(v6 + 48) + 4 * v20);
      v29 = *(void **)(*(_QWORD *)(v6 + 56) + 8 * v20);
      if ((a2 & 1) == 0)
        v30 = v29;
      result = MEMORY[0x1C3BACDAC](*(_QWORD *)(v8 + 40), v28, 4);
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v26 = v17 == v25;
          if (v17 == v25)
            v17 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v14 + 8 * v17);
        }
        while (v27 == -1);
        v18 = __clz(__rbit64(~v27)) + (v17 << 6);
      }
      *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_DWORD *)(*(_QWORD *)(v8 + 48) + 4 * v18) = v28;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v29;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v4 = v8;
  return result;
}

uint64_t sub_1C13BFF2C(uint64_t a1, int a2)
{
  return sub_1C13BFF40(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0D8D3C0], &qword_1EF6DAA90);
}

uint64_t sub_1C13BFF40(uint64_t a1, int a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  int v46;
  char *v47;
  uint64_t v48;

  v6 = v4;
  v48 = a3(0);
  v8 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v47 = (char *)&v42 - v9;
  v10 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v46 = a2;
  v11 = sub_1C1426FB0();
  v12 = v11;
  if (*(_QWORD *)(v10 + 16))
  {
    v43 = v4;
    v13 = 1 << *(_BYTE *)(v10 + 32);
    v14 = *(_QWORD *)(v10 + 64);
    v45 = (_QWORD *)(v10 + 64);
    if (v13 < 64)
      v15 = ~(-1 << v13);
    else
      v15 = -1;
    v16 = v15 & v14;
    v44 = (unint64_t)(v13 + 63) >> 6;
    v17 = v11 + 64;
    result = swift_retain();
    v19 = 0;
    while (1)
    {
      if (v16)
      {
        v22 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        v23 = v22 | (v19 << 6);
      }
      else
      {
        v24 = v19 + 1;
        if (__OFADD__(v19, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v24 >= v44)
          goto LABEL_34;
        v25 = v45[v24];
        ++v19;
        if (!v25)
        {
          v19 = v24 + 1;
          if (v24 + 1 >= v44)
            goto LABEL_34;
          v25 = v45[v19];
          if (!v25)
          {
            v26 = v24 + 2;
            if (v26 >= v44)
            {
LABEL_34:
              swift_release();
              v6 = v43;
              if ((v46 & 1) != 0)
              {
                v41 = 1 << *(_BYTE *)(v10 + 32);
                if (v41 >= 64)
                  bzero(v45, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v45 = -1 << v41;
                *(_QWORD *)(v10 + 16) = 0;
              }
              break;
            }
            v25 = v45[v26];
            if (!v25)
            {
              while (1)
              {
                v19 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_41;
                if (v19 >= v44)
                  goto LABEL_34;
                v25 = v45[v19];
                ++v26;
                if (v25)
                  goto LABEL_21;
              }
            }
            v19 = v26;
          }
        }
LABEL_21:
        v16 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v19 << 6);
      }
      v27 = *(_QWORD *)(v10 + 56);
      v28 = v10;
      v29 = (uint64_t *)(*(_QWORD *)(v10 + 48) + 16 * v23);
      v31 = *v29;
      v30 = v29[1];
      v32 = *(_QWORD *)(v8 + 72);
      v33 = v27 + v32 * v23;
      if ((v46 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v47, v33, v48);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v47, v33, v48);
        swift_bridgeObjectRetain();
      }
      sub_1C14270E8();
      sub_1C1426AD0();
      result = sub_1C1427100();
      v34 = -1 << *(_BYTE *)(v12 + 32);
      v35 = result & ~v34;
      v36 = v35 >> 6;
      if (((-1 << v35) & ~*(_QWORD *)(v17 + 8 * (v35 >> 6))) != 0)
      {
        v20 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v17 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v37 = 0;
        v38 = (unint64_t)(63 - v34) >> 6;
        do
        {
          if (++v36 == v38 && (v37 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v39 = v36 == v38;
          if (v36 == v38)
            v36 = 0;
          v37 |= v39;
          v40 = *(_QWORD *)(v17 + 8 * v36);
        }
        while (v40 == -1);
        v20 = __clz(__rbit64(~v40)) + (v36 << 6);
      }
      *(_QWORD *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      v21 = (_QWORD *)(*(_QWORD *)(v12 + 48) + 16 * v20);
      *v21 = v31;
      v21[1] = v30;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v12 + 56) + v32 * v20, v47, v48);
      ++*(_QWORD *)(v12 + 16);
      v10 = v28;
    }
  }
  result = swift_release();
  *v6 = v12;
  return result;
}

uint64_t sub_1C13C02A4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1C13277A0(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1C13B9E10();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_1C13C0B60(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1C13C0370@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1C13B9950(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v18 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1C13B9FAC();
      v9 = v18;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_1C1425CC0();
    v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D8CB40];
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    v13 = *(_QWORD *)(v9 + 56);
    v14 = type metadata accessor for Assertion();
    v15 = *(_QWORD *)(v14 - 8);
    sub_1C1339140(v13 + *(_QWORD *)(v15 + 72) * v6, a2, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    sub_1C13C0D58(v6, v9, v12, &qword_1ED797878, MEMORY[0x1E0D8CB50], (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(a2, 0, 1, v14);
  }
  else
  {
    v17 = type metadata accessor for Assertion();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a2, 1, 1, v17);
  }
}

uint64_t sub_1C13C04D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C13C074C(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for Activity, &qword_1ED797B00, a3);
}

uint64_t sub_1C13C04EC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1C13277A0(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1C13BBE9C(&qword_1EF6DBC00);
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_1C13C0B60(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_1C13C05C0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  char v8;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1C13277A0(a1, a2);
  v8 = v7;
  swift_bridgeObjectRelease();
  if ((v8 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v10 = *v3;
    v13 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1C13BA8E8();
      v10 = v13;
    }
    swift_bridgeObjectRelease();
    v11 = *(unsigned int *)(*(_QWORD *)(v10 + 56) + 4 * v6);
    sub_1C13C1024(v6, v10);
    *v3 = v10;
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  return v11 | ((unint64_t)((v8 & 1) == 0) << 32);
}

uint64_t sub_1C13C06A4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v3;
  char v4;
  unint64_t v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = v1;
  v3 = sub_1C13B9B48(a1);
  if ((v4 & 1) == 0)
    return 0;
  v5 = v3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v1;
  v10 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1C13BAC90();
    v7 = v10;
  }
  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v5);
  sub_1C13C11FC(v5, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1C13C0738@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C13C074C(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for XPCInputParticipant.ActivityUpdate, (uint64_t *)&unk_1ED7935A8, a3);
}

uint64_t sub_1C13C074C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  uint64_t *v8;
  unint64_t v12;
  char v13;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v8 = v5;
  swift_bridgeObjectRetain();
  v12 = sub_1C13277A0(a1, a2);
  LOBYTE(a2) = v13;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = *v8;
    v21 = *v8;
    *v8 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1C13BB5C4(a3, a4);
      v15 = v21;
    }
    swift_bridgeObjectRelease();
    v16 = *(_QWORD *)(v15 + 56);
    v17 = a3(0);
    v18 = *(_QWORD *)(v17 - 8);
    sub_1C1339140(v16 + *(_QWORD *)(v18 + 72) * v12, a5, a3);
    sub_1C13C1554(v12, v15, a3);
    *v8 = v15;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(a5, 0, 1, v17);
  }
  else
  {
    v20 = a3(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a5, 1, 1, v20);
  }
}

uint64_t sub_1C13C088C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_1C13B9AB0(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1C13BB828();
    v7 = v12;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = sub_1C14251EC();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4, v9);
  v10 = *(unsigned __int8 *)(*(_QWORD *)(v7 + 56) + 16 * v4);
  sub_1C13C175C(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_1C13C097C(unint64_t a1, uint64_t a2)
{
  return sub_1C13C1554(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
}

unint64_t sub_1C13C0988(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1C1426E00();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1C14270E8();
        swift_bridgeObjectRetain();
        sub_1C1426AD0();
        v9 = sub_1C1427100();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_BYTE *)(v14 + v3);
          v16 = (_BYTE *)(v14 + v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1C13C0B60(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1C1426E00();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1C14270E8();
        swift_bridgeObjectRetain();
        sub_1C1426AD0();
        v9 = sub_1C1427100();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1C13C0D34(int64_t a1, uint64_t a2)
{
  return sub_1C13C0D58(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8D5E8], &qword_1EF6DBC18, MEMORY[0x1E0D8D5F8], (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
}

unint64_t sub_1C13C0D58(int64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5, uint64_t (*a6)(_QWORD))
{
  uint64_t v8;
  unint64_t result;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  int64_t v29;
  unint64_t v30;
  BOOL v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(_QWORD);
  void (*v40)(char *, unint64_t, uint64_t);
  unint64_t v41;
  uint64_t (*v42)(uint64_t);
  unint64_t *v43;
  uint64_t v44;
  uint64_t v45;

  v39 = a6;
  v43 = a4;
  v44 = a5;
  v42 = a3;
  v8 = a3(0);
  v45 = *(_QWORD *)(v8 - 8);
  result = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v38 - v10;
  v12 = a2 + 64;
  v13 = -1 << *(_BYTE *)(a2 + 32);
  v14 = (a1 + 1) & ~v13;
  if (((1 << v14) & *(_QWORD *)(a2 + 64 + 8 * (v14 >> 6))) != 0)
  {
    v15 = ~v13;
    result = sub_1C1426E00();
    if ((*(_QWORD *)(v12 + 8 * (v14 >> 6)) & (1 << v14)) != 0)
    {
      v41 = (result + 1) & v15;
      v16 = *(_QWORD *)(v45 + 72);
      v40 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 16);
      v17 = v15;
      do
      {
        v18 = v12;
        v19 = v16;
        v20 = v16 * v14;
        v40(v11, *(_QWORD *)(a2 + 48) + v16 * v14, v8);
        v21 = v17;
        sub_1C1329AD0(v43, v42, v44);
        v22 = sub_1C1426A4C();
        result = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v11, v8);
        v23 = v22 & v21;
        v17 = v21;
        if (a1 >= (uint64_t)v41)
        {
          if (v23 >= v41 && a1 >= (uint64_t)v23)
          {
LABEL_16:
            if (v19 * a1 < v20
              || *(_QWORD *)(a2 + 48) + v19 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v20 + v19))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v19 * a1 != v20)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v26 = *(_QWORD *)(a2 + 56);
            v27 = *(_QWORD *)(*(_QWORD *)(v39(0) - 8) + 72);
            v28 = v27 * a1;
            result = v26 + v27 * a1;
            v29 = v27 * v14;
            v30 = v26 + v27 * v14 + v27;
            v31 = v28 < v29 || result >= v30;
            v12 = v18;
            if (v31)
            {
              result = swift_arrayInitWithTakeFrontToBack();
              a1 = v14;
              v17 = v21;
            }
            else
            {
              a1 = v14;
              v17 = v21;
              if (v28 != v29)
              {
                result = swift_arrayInitWithTakeBackToFront();
                a1 = v14;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v23 >= v41 || a1 >= (uint64_t)v23)
        {
          goto LABEL_16;
        }
        v12 = v18;
LABEL_5:
        v14 = (v14 + 1) & v17;
        v16 = v19;
      }
      while (((*(_QWORD *)(v12 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
    }
    v32 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    v33 = *v32;
    v34 = (-1 << a1) - 1;
  }
  else
  {
    v32 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    v34 = *v32;
    v33 = (-1 << a1) - 1;
  }
  *v32 = v34 & v33;
  v35 = *(_QWORD *)(a2 + 16);
  v36 = __OFSUB__(v35, 1);
  v37 = v35 - 1;
  if (v36)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v37;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1C13C1024(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _DWORD *v15;
  _DWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1C1426E00();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1C14270E8();
        swift_bridgeObjectRetain();
        sub_1C1426AD0();
        v9 = sub_1C1427100();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_DWORD *)(v14 + 4 * v3);
          v16 = (_DWORD *)(v14 + 4 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1C13C11FC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1C1426E00();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_1C14270DC();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (_QWORD *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1)
              *v14 = *v10;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1C13C1390(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  _DWORD *v12;
  unint64_t v13;
  _DWORD *v16;
  uint64_t v17;
  unint64_t v18;
  __int128 *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1C1426E00();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v11 = *(_QWORD *)(a2 + 48);
        v12 = (_DWORD *)(v11 + 4 * v6);
        result = MEMORY[0x1C3BACDAC](*(_QWORD *)(a2 + 40), *v12, 4);
        v13 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 >= v8 && v3 >= (uint64_t)v13)
          {
LABEL_16:
            v16 = (_DWORD *)(v11 + 4 * v3);
            if (v3 != v6 || v16 >= v12 + 1)
              *v16 = *v12;
            v17 = *(_QWORD *)(a2 + 56);
            v18 = v17 + 40 * v3;
            v19 = (__int128 *)(v17 + 40 * v6);
            if (v3 != v6 || (v3 = v6, v18 >= (unint64_t)v19 + 40))
            {
              v9 = *v19;
              v10 = v19[1];
              *(_QWORD *)(v18 + 32) = *((_QWORD *)v19 + 4);
              *(_OWORD *)v18 = v9;
              *(_OWORD *)(v18 + 16) = v10;
              v3 = v6;
            }
          }
        }
        else if (v13 >= v8 || v3 >= (uint64_t)v13)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1C13C153C(unint64_t a1, uint64_t a2)
{
  return sub_1C13C1554(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for SlidingWindowExponentialBackoff);
}

unint64_t sub_1C13C1548(unint64_t a1, uint64_t a2)
{
  return sub_1C13C1554(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for XPCInputParticipant.ActivityUpdate);
}

unint64_t sub_1C13C1554(unint64_t result, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v4 = result;
  v5 = a2 + 64;
  v6 = -1 << *(_BYTE *)(a2 + 32);
  v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(_QWORD *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    v9 = ~v6;
    result = sub_1C1426E00();
    if ((*(_QWORD *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      v10 = (result + 1) & v9;
      while (1)
      {
        sub_1C14270E8();
        swift_bridgeObjectRetain();
        sub_1C1426AD0();
        v11 = sub_1C1427100();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v9;
        if (v4 >= (uint64_t)v10)
          break;
        if (v12 < v10)
          goto LABEL_11;
LABEL_12:
        v13 = *(_QWORD *)(a2 + 48);
        v14 = (_OWORD *)(v13 + 16 * v4);
        v15 = (_OWORD *)(v13 + 16 * v7);
        if (v4 != v7 || v14 >= v15 + 1)
          *v14 = *v15;
        v16 = *(_QWORD *)(a2 + 56);
        v17 = *(_QWORD *)(*(_QWORD *)(a3(0) - 8) + 72);
        v18 = v17 * v4;
        result = v16 + v17 * v4;
        v19 = v17 * v7;
        v20 = v16 + v17 * v7 + v17;
        if (v18 < v19 || result >= v20)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v4 = v7;
          if (v18 == v19)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v4 = v7;
LABEL_6:
        v7 = (v7 + 1) & v9;
        if (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          goto LABEL_21;
      }
      if (v12 < v10)
        goto LABEL_6;
LABEL_11:
      if (v4 < (uint64_t)v12)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v22 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    v23 = *v22;
    v24 = (-1 << v4) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v5 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1C13C175C(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  unint64_t v34;
  uint64_t v35;

  v4 = sub_1C14251EC();
  v35 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_1C1426E00();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v34 = (result + 1) & v11;
      v12 = *(_QWORD *)(v35 + 72);
      v33 = *(void (**)(char *, unint64_t, uint64_t))(v35 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v33(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_1C1329AD0(&qword_1EF6DB1C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
        v18 = sub_1C1426A4C();
        result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v34)
        {
          if (v19 >= v34 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v22 = *(_QWORD *)(a2 + 48);
            result = v22 + v15 * a1;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v22 + v16 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = (_OWORD *)(v23 + 16 * a1);
            v25 = (_OWORD *)(v23 + 16 * v10);
            if (a1 != v10 || (a1 = v10, v24 >= v25 + 1))
            {
              *v24 = *v25;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v34 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v26;
    v28 = (-1 << a1) - 1;
  }
  else
  {
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v26;
    v27 = (-1 << a1) - 1;
  }
  *v26 = v28 & v27;
  v29 = *(_QWORD *)(a2 + 16);
  v30 = __OFSUB__(v29, 1);
  v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1C13C19FC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1C1426E00();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_1C14270DC();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11)
            goto LABEL_6;
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        v14 = (_QWORD *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1)
          *v14 = *v10;
        v15 = *(_QWORD *)(a2 + 56);
        v16 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for TaskScheduler.Task() - 8) + 72);
        v17 = v16 * v3;
        result = v15 + v16 * v3;
        v18 = v16 * v6;
        v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v17 == v18)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1C13C1BB8(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1C1426E00();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1C14270E8();
        swift_bridgeObjectRetain();
        sub_1C1426AD0();
        v9 = sub_1C1427100();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1C13C1D8C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _DWORD *v10;
  unint64_t v11;
  _DWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1C1426E00();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_DWORD *)(v9 + 4 * v6);
        result = MEMORY[0x1C3BACDAC](*(_QWORD *)(a2 + 40), *v10, 4);
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (_DWORD *)(v9 + 4 * v3);
            if (v3 != v6 || v14 >= v10 + 1)
              *v14 = *v10;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1C13C1F24(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t result;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1C13277A0(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1C13B9E10();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v18[7] + 8 * v12) = a1;
      return swift_bridgeObjectRelease();
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1C13BC46C(v15, a4 & 1);
  v20 = sub_1C13277A0(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1C142707C();
  __break(1u);
  return result;
}

uint64_t sub_1C13C207C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = sub_1C1425CC0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1C13B9950(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      v22 = type metadata accessor for Assertion();
      return sub_1C13C3578(a1, v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1C13B9FAC();
    goto LABEL_7;
  }
  sub_1C13BC75C(v17, a3 & 1);
  v24 = sub_1C13B9950(a2);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_14:
    result = sub_1C142707C();
    __break(1u);
    return result;
  }
  v14 = v24;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1C13C30F4(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_1C13C21EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1C13C2D08(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for Activity, &qword_1ED797B00);
}

uint64_t sub_1C13C2200(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1C13C2A38(a1, a2, a3, a4, &qword_1EF6DBC00);
}

uint64_t sub_1C13C220C(char a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1C13277A0(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_1C13BA440();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      *(_BYTE *)(v18[7] + v12) = a1 & 1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v20 = (uint64_t *)(v18[6] + 16 * v12);
    *v20 = a2;
    v20[1] = a3;
    *(_BYTE *)(v18[7] + v12) = a1 & 1;
    v21 = v18[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v18[2] = v23;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1C13BD25C(result, a4 & 1);
  result = sub_1C13277A0(a2, a3);
  if ((v16 & 1) == (v19 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1C142707C();
  __break(1u);
  return result;
}

uint64_t sub_1C13C2364(int a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1C13277A0(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_1C13BA8E8();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      *(_DWORD *)(v18[7] + 4 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v20 = (uint64_t *)(v18[6] + 16 * v12);
    *v20 = a2;
    v20[1] = a3;
    *(_DWORD *)(v18[7] + 4 * v12) = a1;
    v21 = v18[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v18[2] = v23;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1C13BD97C(result, a4 & 1);
  result = sub_1C13277A0(a2, a3);
  if ((v16 & 1) == (v19 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1C142707C();
  __break(1u);
  return result;
}

void sub_1C13C24B4(uint64_t a1, unsigned int a2, char a3)
{
  sub_1C1330710(a1, a2, a3, &qword_1ED792860);
}

void sub_1C13C24C0(uint64_t a1, unsigned int a2, char a3)
{
  sub_1C1330710(a1, a2, a3, &qword_1ED7931A0);
}

uint64_t sub_1C13C24CC(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v8 = *v3;
  v10 = sub_1C13B9B48(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_1C13BAC90();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      result = swift_release();
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    v19 = 8 * v10;
    *(_QWORD *)(v16[6] + v19) = a2;
    *(_QWORD *)(v16[7] + v19) = a1;
    v20 = v16[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_1C13BDF80(result, a3 & 1);
  result = sub_1C13B9B48(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1C142707C();
  __break(1u);
  return result;
}

uint64_t sub_1C13C2604(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1C13277A0(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1C13BAE30();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_release();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1C13BE234(v15, a4 & 1);
  v21 = sub_1C13277A0(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1C142707C();
  __break(1u);
  return result;
}

uint64_t sub_1C13C2760(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t result;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  uint64_t *v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1C13277A0(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= result && (a4 & 1) == 0)
  {
    result = (uint64_t)sub_1C13BB1A8();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v18[7] + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v20 = (uint64_t *)(v18[6] + 16 * v12);
    *v20 = a2;
    v20[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v21 = v18[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v18[2] = v23;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1C13BE810(result, a4 & 1);
  result = sub_1C13277A0(a2, a3);
  if ((v16 & 1) == (v19 & 1))
  {
    v12 = result;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1C142707C();
  __break(1u);
  return result;
}

uint64_t sub_1C13C28B0(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t result;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = sub_1C1425CC0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1C13B9950(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 40))(v20[7] + *(_QWORD *)(v9 + 72) * v14, a1, v8);
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1C13BB354();
      goto LABEL_7;
    }
    sub_1C13BEB18(v17, a3 & 1);
    v22 = sub_1C13B9950(a2);
    if ((v18 & 1) == (v23 & 1))
    {
      v14 = v22;
      v20 = *v4;
      if ((v18 & 1) != 0)
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 40))(v20[7] + *(_QWORD *)(v9 + 72) * v14, a1, v8);
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1C13C3200(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = sub_1C142707C();
  __break(1u);
  return result;
}

uint64_t sub_1C13C2A2C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1C13C2A38(a1, a2, a3, a4, &qword_1ED797B08);
}

uint64_t sub_1C13C2A38(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  _QWORD *v5;
  _QWORD *v7;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v7 = v5;
  v12 = *v5;
  v14 = sub_1C13277A0(a2, a3);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a4 & 1) == 0)
  {
    sub_1C13BBE9C(a5);
LABEL_7:
    v20 = (_QWORD *)*v7;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = (uint64_t *)(v20[6] + 16 * v14);
    *v25 = a2;
    v25[1] = a3;
    *(_QWORD *)(v20[7] + 8 * v14) = a1;
    v26 = v20[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (!v27)
    {
      v20[2] = v28;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_1C13BF974(v17, a4 & 1, a5);
  v23 = sub_1C13277A0(a2, a3);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v7;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_1C142707C();
  __break(1u);
  return result;
}

uint64_t sub_1C13C2BAC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1C13277A0(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        v20 = sub_1C14255F4();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v12, a1, v20);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1C13BC210((uint64_t (*)(_QWORD))MEMORY[0x1E0C8F968], &qword_1ED797AE0);
      goto LABEL_7;
    }
    sub_1C13BFF40(v15, a4 & 1, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8F968], &qword_1ED797AE0);
    v22 = sub_1C13277A0(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      v12 = v22;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1C13C32AC(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1C142707C();
  __break(1u);
  return result;
}

uint64_t sub_1C13C2D08(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t (*a5)(_QWORD), uint64_t *a6)
{
  _QWORD *v6;
  _QWORD **v9;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  unint64_t v26;
  char v27;

  v9 = (_QWORD **)v6;
  v14 = (_QWORD *)*v6;
  v16 = sub_1C13277A0(a2, a3);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
  }
  else
  {
    v20 = v15;
    v21 = v14[3];
    if (v21 >= v19 && (a4 & 1) != 0)
    {
LABEL_7:
      v22 = *v9;
      if ((v20 & 1) != 0)
      {
LABEL_8:
        v23 = v22[7];
        v24 = a5(0);
        return sub_1C13C3578(a1, v23 + *(_QWORD *)(*(_QWORD *)(v24 - 8) + 72) * v16, a5);
      }
      goto LABEL_11;
    }
    if (v21 >= v19 && (a4 & 1) == 0)
    {
      sub_1C13BB5C4(a5, a6);
      goto LABEL_7;
    }
    sub_1C13BEF04(v19, a4 & 1, a5, a6);
    v26 = sub_1C13277A0(a2, a3);
    if ((v20 & 1) == (v27 & 1))
    {
      v16 = v26;
      v22 = *v9;
      if ((v20 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1C13C3348(v16, a2, a3, a1, v22, a5);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1C142707C();
  __break(1u);
  return result;
}

void sub_1C13C2E6C(uint64_t a1, unsigned int a2, char a3)
{
  sub_1C1330710(a1, a2, a3, &qword_1EF6DBC08);
}

_OWORD *sub_1C13C2E78(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1C13277A0(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        return sub_1C13377A0(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1C13BAAA0();
      goto LABEL_7;
    }
    sub_1C13BDC84(v15, a4 & 1);
    v21 = sub_1C13277A0(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1C13C33E0(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_1C142707C();
  __break(1u);
  return result;
}

uint64_t sub_1C13C2FA8(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_1C13B9B48(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = type metadata accessor for TaskScheduler.Task();
        return sub_1C13C3578(a1, v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
      }
      return sub_1C13C34EC(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_1C13BBAA0();
      goto LABEL_7;
    }
    sub_1C13BF644(v13, a3 & 1);
    v20 = sub_1C13B9B48(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_1C13C34EC(v10, a2, a1, v16);
    }
  }
  result = sub_1C142707C();
  __break(1u);
  return result;
}

uint64_t sub_1C13C30D0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1C13C2A38(a1, a2, a3, a4, (uint64_t *)&unk_1ED797D98);
}

void sub_1C13C30DC(uint64_t a1, unsigned int a2, char a3)
{
  sub_1C1330710(a1, a2, a3, &qword_1ED793A40);
}

void sub_1C13C30E8(uint64_t a1, unsigned int a2, char a3)
{
  sub_1C1330710(a1, a2, a3, &qword_1EF6DBBF0);
}

uint64_t sub_1C13C30F4(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1C1425CC0();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v10 = a4[7];
  v11 = type metadata accessor for Assertion();
  result = sub_1C1339140(a3, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, (uint64_t (*)(_QWORD))type metadata accessor for Assertion);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

uint64_t sub_1C13C31AC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  return sub_1C13C3348(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
}

unint64_t sub_1C13C31B8(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

uint64_t sub_1C13C3200(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1C1425CC0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 72) * a1;
  v12 = v8 + v11;
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
  v13(v12, a2, v9);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v13)(a4[7] + v11, a3, v9);
  v15 = a4[2];
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    a4[2] = v17;
  return result;
}

uint64_t sub_1C13C32AC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v8 = (_QWORD *)(a5[6] + 16 * a1);
  *v8 = a2;
  v8[1] = a3;
  v9 = a5[7];
  v10 = sub_1C14255F4();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, a4, v10);
  v12 = a5[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a5[2] = v14;
  return result;
}

uint64_t sub_1C13C333C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  return sub_1C13C3348(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD))type metadata accessor for SlidingWindowExponentialBackoff);
}

uint64_t sub_1C13C3348(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t (*a6)(_QWORD))
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v10 = (_QWORD *)(a5[6] + 16 * a1);
  *v10 = a2;
  v10[1] = a3;
  v11 = a5[7];
  v12 = a6(0);
  result = sub_1C1339140(a4, v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * a1, a6);
  v14 = a5[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    a5[2] = v16;
  return result;
}

_OWORD *sub_1C13C33E0(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_1C13377A0(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_1C13C3448(unint64_t a1, uint64_t a2, char a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v10 = a5[6];
  v11 = sub_1C14251EC();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a2, v11);
  v13 = a5[7] + 16 * a1;
  *(_BYTE *)v13 = a3;
  *(_QWORD *)(v13 + 8) = a4;
  v14 = a5[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
    __break(1u);
  else
    a5[2] = v16;
  return result;
}

uint64_t sub_1C13C34EC(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  v7 = a4[7];
  v8 = type metadata accessor for TaskScheduler.Task();
  result = sub_1C1339140(a3, v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, (uint64_t (*)(_QWORD))type metadata accessor for TaskScheduler.Task);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

uint64_t sub_1C13C3578(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

unint64_t sub_1C13C35BC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = (_QWORD *)(a6[6] + 16 * result);
  *v6 = a2;
  v6[1] = a3;
  v7 = (_QWORD *)(a6[7] + 16 * result);
  *v7 = a4;
  v7[1] = a5;
  v8 = a6[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a6[2] = v10;
  return result;
}

unint64_t sub_1C13C360C()
{
  unint64_t result;

  result = qword_1ED792878;
  if (!qword_1ED792878)
  {
    result = MEMORY[0x1C3BAD334](MEMORY[0x1E0DEDCA0], MEMORY[0x1E0DEDC60]);
    atomic_store(result, (unint64_t *)&qword_1ED792878);
  }
  return result;
}

uint64_t sub_1C13C3650(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_1C13C368C(unint64_t a1, int a2, uint64_t a3, _QWORD *a4)
{
  uint64_t result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  _UNKNOWN **v14;

  v13 = type metadata accessor for AssertionServiceClient();
  v14 = &off_1E7A8F1D8;
  *(_QWORD *)&v12 = a3;
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_DWORD *)(a4[6] + 4 * a1) = a2;
  result = sub_1C1339184(&v12, a4[7] + 40 * a1);
  v9 = a4[2];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    a4[2] = v11;
  return result;
}

uint64_t sub_1C13C3728(uint64_t a1, unsigned int a2, char a3, _QWORD *a4)
{
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  _UNKNOWN **v29;

  v8 = type metadata accessor for AssertionServiceClient();
  v28 = v8;
  v29 = &off_1E7A8F1D8;
  *(_QWORD *)&v27 = a1;
  v9 = (_QWORD *)*a4;
  v11 = sub_1C1327378(a2);
  v12 = v9[2];
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
    goto LABEL_14;
  }
  v15 = v10;
  v16 = v9[3];
  if (v16 >= v14 && (a3 & 1) != 0)
  {
LABEL_7:
    v17 = (_QWORD *)*a4;
    if ((v15 & 1) != 0)
    {
LABEL_8:
      v18 = v17[7] + 40 * v11;
      __swift_destroy_boxed_opaque_existential_1(v18);
      return sub_1C1339184(&v27, v18);
    }
    goto LABEL_11;
  }
  if (v16 >= v14 && (a3 & 1) == 0)
  {
    sub_1C13BAFE4();
    goto LABEL_7;
  }
  sub_1C13BE548(v14, a3 & 1);
  v20 = sub_1C1327378(a2);
  if ((v15 & 1) != (v21 & 1))
  {
LABEL_14:
    result = sub_1C142707C();
    __break(1u);
    return result;
  }
  v11 = v20;
  v17 = (_QWORD *)*a4;
  if ((v15 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  v22 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v27, v8);
  MEMORY[0x1E0C80A78](v22);
  v24 = (uint64_t *)((char *)&v26 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v25 + 16))(v24);
  sub_1C13C368C(v11, a2, *v24, v17);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v27);
}

void sub_1C13C38BC(uint64_t a1)
{
  sub_1C13B4A18(a1);
}

void sub_1C13C38C4(uint64_t a1)
{
  sub_1C13B585C(a1);
}

uint64_t objectdestroy_13Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C13C3904()
{
  sub_1C13B5354();
  return sub_1C1425EE8();
}

uint64_t sub_1C13C3950@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t result;
  int64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t, uint64_t);
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;

  v71 = a3;
  v6 = sub_1C1425630();
  v64 = *(_QWORD *)(v6 - 8);
  v65 = v6;
  MEMORY[0x1E0C80A78](v6);
  v63 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
  MEMORY[0x1E0C80A78](v8);
  v77 = (uint64_t)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C142557C();
  v75 = *(_QWORD *)(v10 - 8);
  v76 = v10;
  MEMORY[0x1E0C80A78](v10);
  v70 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1C14251B0();
  v68 = *(_QWORD *)(v12 - 8);
  v13 = v68;
  v69 = v12;
  v14 = MEMORY[0x1E0C80A78](v12);
  v62 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v79 = (char *)&v60 - v16;
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
  v17 = MEMORY[0x1E0C80A78](v74);
  v73 = (uint64_t *)((char *)&v60 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (uint64_t *)((char *)&v60 - v20);
  MEMORY[0x1E0C80A78](v19);
  v72 = (char *)&v60 - v22;
  v61 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v61(a3, a1, v12);
  v23 = *(_QWORD *)(a2 + 64);
  v66 = a2 + 64;
  v24 = 1 << *(_BYTE *)(a2 + 32);
  v25 = -1;
  if (v24 < 64)
    v25 = ~(-1 << v24);
  v26 = v25 & v23;
  v67 = (unint64_t)(v24 + 63) >> 6;
  v78 = a2;
  result = swift_bridgeObjectRetain();
  v28 = 0;
  while (1)
  {
    if (v26)
    {
      v33 = __clz(__rbit64(v26));
      v26 &= v26 - 1;
      v34 = v28;
      v35 = v33 | (v28 << 6);
      goto LABEL_24;
    }
    v36 = v28 + 1;
    if (__OFADD__(v28, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v36 >= v67)
      return swift_release();
    v37 = *(_QWORD *)(v66 + 8 * v36);
    v38 = v28 + 1;
    if (!v37)
    {
      v38 = v28 + 2;
      if (v28 + 2 >= v67)
        return swift_release();
      v37 = *(_QWORD *)(v66 + 8 * v38);
      if (!v37)
      {
        v38 = v28 + 3;
        if (v28 + 3 >= v67)
          return swift_release();
        v37 = *(_QWORD *)(v66 + 8 * v38);
        if (!v37)
        {
          v38 = v28 + 4;
          if (v28 + 4 >= v67)
            return swift_release();
          v37 = *(_QWORD *)(v66 + 8 * v38);
          if (!v37)
            break;
        }
      }
    }
LABEL_23:
    v26 = (v37 - 1) & v37;
    v34 = v38;
    v35 = __clz(__rbit64(v37)) + (v38 << 6);
LABEL_24:
    v40 = *(_QWORD *)(v78 + 56);
    v41 = (uint64_t *)(*(_QWORD *)(v78 + 48) + 16 * v35);
    v43 = *v41;
    v42 = v41[1];
    v44 = type metadata accessor for Activity();
    v45 = v40 + *(_QWORD *)(*(_QWORD *)(v44 - 8) + 72) * v35;
    v46 = v74;
    v47 = v72;
    sub_1C1338F24(v45, (uint64_t)&v72[*(int *)(v74 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    *v47 = v43;
    v47[1] = v42;
    sub_1C132A724((uint64_t)v47, (uint64_t)v21, &qword_1ED7939D8);
    v48 = *(int *)(v46 + 48);
    v49 = v73;
    v50 = (uint64_t)v73 + v48;
    v51 = v21[1];
    *v73 = *v21;
    v49[1] = v51;
    sub_1C1338F24((uint64_t)v21 + v48, v50, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    v52 = v77;
    sub_1C132C344(v50 + *(int *)(v44 + 48), v77, &qword_1ED7935E8);
    swift_bridgeObjectRetain();
    sub_1C1339004(v50, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    v54 = v75;
    v53 = v76;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v52, 1, v76) == 1)
    {
      sub_1C132C860(v52, &qword_1ED7935E8);
      v29 = v79;
      sub_1C1425114();
      v30 = v71;
      v32 = v68;
      v31 = v69;
      v28 = v34;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v70, v52, v53);
      v55 = v63;
      sub_1C1425564();
      v56 = v62;
      sub_1C1425600();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v55, v65);
      sub_1C13C6714();
      v30 = v71;
      v31 = v69;
      if ((sub_1C1426A58() & 1) != 0)
      {
        v57 = v79;
        v58 = v56;
      }
      else
      {
        v57 = v79;
        v58 = v30;
      }
      v61(v57, (uint64_t)v58, v31);
      v59 = v56;
      v32 = v68;
      v28 = v34;
      (*(void (**)(char *, uint64_t))(v68 + 8))(v59, v31);
      (*(void (**)(char *, uint64_t))(v54 + 8))(v70, v53);
      v29 = v79;
    }
    sub_1C132C860((uint64_t)v21, &qword_1ED7939D8);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v30, v31);
    result = (*(uint64_t (**)(char *, char *, uint64_t))(v32 + 32))(v30, v29, v31);
  }
  v39 = v28 + 5;
  if (v28 + 5 >= v67)
    return swift_release();
  v37 = *(_QWORD *)(v66 + 8 * v39);
  if (v37)
  {
    v38 = v28 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    v38 = v39 + 1;
    if (__OFADD__(v39, 1))
      break;
    if (v38 >= v67)
      return swift_release();
    v37 = *(_QWORD *)(v66 + 8 * v38);
    ++v39;
    if (v37)
      goto LABEL_23;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1C13C3E8C()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  sub_1C132C860(v0 + 64, &qword_1ED797918);
  swift_bridgeObjectRelease();
  sub_1C1339040(v0 + 112);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DismissParticipant()
{
  return objc_opt_self();
}

uint64_t sub_1C13C3EF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v4;

  v4 = *(os_unfair_lock_s **)(*(_QWORD *)(v2 + 16) + 16);
  os_unfair_lock_lock(v4);
  *(_QWORD *)(v2 + 120) = a2;
  swift_unknownObjectWeakAssign();
  os_unfair_lock_unlock(v4);
  return swift_unknownObjectRelease();
}

void sub_1C13C3F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[12];

  v15[4] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B60);
  MEMORY[0x1E0C80A78](v3);
  v15[3] = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C14253E4();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1C14251B0();
  v15[1] = *(_QWORD *)(v6 - 8);
  v15[2] = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
  MEMORY[0x1E0C80A78](v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797560);
  MEMORY[0x1E0C80A78](v9);
  v15[5] = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ActivityManagerEvent(0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v13 = MEMORY[0x1E0C80A78](v12);
  v14 = *(int *)(MEMORY[0x1E0C80A78](v13) + 20);
  v15[7] = a1;
  __asm { BR              X10 }
}

void sub_1C13C4144()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  _QWORD *v18;
  os_unfair_lock_s *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  if (qword_1ED793968 != -1)
    swift_once();
  v2 = sub_1C1426854();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED798698);
  v3 = *(uint64_t **)(v1 - 120);
  sub_1C1338F24((uint64_t)v3, (uint64_t)v0, type metadata accessor for ActivityManagerEvent);
  v4 = sub_1C1426848();
  v5 = sub_1C1426C80();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    *(_QWORD *)(v1 - 104) = v7;
    *(_DWORD *)v6 = 136446210;
    v8 = *v0;
    v9 = v0[1];
    swift_bridgeObjectRetain();
    *(_QWORD *)(v1 - 112) = sub_1C132AD90(v8, v9, (uint64_t *)(v1 - 104));
    sub_1C1426DB8();
    v3 = *(uint64_t **)(v1 - 120);
    swift_bridgeObjectRelease();
    sub_1C1339004((uint64_t)v0, type metadata accessor for ActivityManagerEvent);
    _os_log_impl(&dword_1C1324000, v4, v5, "Activity did start %{public}s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v7, -1, -1);
    MEMORY[0x1C3BAD3F4](v6, -1, -1);
  }
  else
  {
    sub_1C1339004((uint64_t)v0, type metadata accessor for ActivityManagerEvent);
  }

  v10 = *v3;
  v11 = v3[1];
  v12 = *(_QWORD *)(v1 - 144);
  v13 = *(os_unfair_lock_s **)(*(_QWORD *)(v12 + 16) + 16);
  os_unfair_lock_lock(v13);
  v14 = swift_retain();
  sub_1C136FF2C(v14, v10, v11, v12);
  swift_release();
  os_unfair_lock_unlock(v13);
  if (sub_1C1406964() == 1)
  {
    v15 = sub_1C1426848();
    v16 = sub_1C1426C80();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_1C1324000, v15, v16, "Tracking zombie activity", v17, 2u);
      MEMORY[0x1C3BAD3F4](v17, -1, -1);
    }

    v18 = *(_QWORD **)(v1 - 128);
    v19 = *(os_unfair_lock_s **)(v18[2] + 16);
    os_unfair_lock_lock(v19);
    v20 = *(uint64_t **)(v1 - 120);
    v21 = *v20;
    v22 = v20[1];
    v23 = *(_QWORD *)(v1 - 136);
    sub_1C1338F24((uint64_t)v20, v23, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    v24 = type metadata accessor for Activity();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 0, 1, v24);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1C13B396C(v23, v21, v22);
    swift_endAccess();
    os_unfair_lock_unlock(v19);
    os_unfair_lock_lock(v19);
    sub_1C13C48C8(v18);
    os_unfair_lock_unlock(v19);
  }
}

uint64_t sub_1C13C48C8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  char *v16;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[40];
  _QWORD v29[4];
  __int128 v30;
  __int128 v31;
  uint64_t v32;

  v23 = sub_1C1425E88();
  v22 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v24 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1C1425EA0();
  v26 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v25 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C14251B0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v22 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v22 - v12;
  swift_beginAccess();
  sub_1C132C344((uint64_t)(a1 + 8), (uint64_t)&v30, &qword_1ED797918);
  if (*((_QWORD *)&v31 + 1))
  {
    sub_1C132E0A8((uint64_t)&v30, (uint64_t)v29);
    sub_1C132C860((uint64_t)&v30, &qword_1ED797918);
    __swift_project_boxed_opaque_existential_1(v29, v29[3]);
    sub_1C142689C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  }
  else
  {
    sub_1C132C860((uint64_t)&v30, &qword_1ED797918);
  }
  v32 = 0;
  v30 = 0u;
  v31 = 0u;
  swift_beginAccess();
  sub_1C13C62D4((uint64_t)&v30, (uint64_t)(a1 + 8));
  swift_endAccess();
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(a1[2] + 16));
  swift_beginAccess();
  v14 = a1[13];
  swift_bridgeObjectRetain();
  sub_1C1425114();
  sub_1C13C3950((uint64_t)v8, v14, v11);
  v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v8, v4);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v13, v11, v4);
  sub_1C1425114();
  LOBYTE(v14) = sub_1C1425150();
  v15(v11, v4);
  if ((v14 & 1) != 0)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v11, v13, v4);
    (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v24, *MEMORY[0x1E0D8CD30], v23);
    v16 = v25;
    sub_1C1425E70();
    __swift_project_boxed_opaque_existential_1(a1 + 3, a1[6]);
    swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_1C1425EAC();
    swift_release();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v16, v27);
    v15(v13, v4);
    swift_release();
    sub_1C1339184(&v30, (uint64_t)v29);
    sub_1C132A724((uint64_t)v29, (uint64_t)v28, &qword_1ED797918);
    swift_beginAccess();
    sub_1C13C62D4((uint64_t)v28, (uint64_t)(a1 + 8));
    return swift_endAccess();
  }
  else
  {
    if (qword_1ED793968 != -1)
      swift_once();
    v18 = sub_1C1426854();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ED798698);
    v19 = sub_1C1426848();
    v20 = sub_1C1426C80();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_1C1324000, v19, v20, "No more zombies awaiting dismissal", v21, 2u);
      MEMORY[0x1C3BAD3F4](v21, -1, -1);
    }

    return ((uint64_t (*)(char *, uint64_t))v15)(v13, v4);
  }
}

uint64_t sub_1C13C4D8C()
{
  uint64_t result;
  uint64_t v1;
  os_unfair_lock_s *v2;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    v2 = *(os_unfair_lock_s **)(*(_QWORD *)(result + 16) + 16);
    os_unfair_lock_lock(v2);
    sub_1C13C4E14(v1);
    os_unfair_lock_unlock(v2);
    os_unfair_lock_lock(v2);
    sub_1C13C48C8(v1);
    os_unfair_lock_unlock(v2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C13C4E14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t *v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v2 = type metadata accessor for Activity();
  v41 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7939E0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v6);
  v10 = (uint64_t *)((char *)&v36 - v9);
  v44 = MEMORY[0x1E0DEE9E8];
  v38 = (uint64_t *)(a1 + 104);
  swift_beginAccess();
  v42 = a1;
  v11 = *(_QWORD *)(a1 + 104);
  v12 = *(_QWORD *)(v11 + 64);
  v39 = v11 + 64;
  v13 = 1 << *(_BYTE *)(v11 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v40 = (unint64_t)(v13 + 63) >> 6;
  v37 = v40 - 1;
  result = swift_bridgeObjectRetain();
  v17 = 0;
  if (!v15)
    goto LABEL_8;
LABEL_6:
  v18 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  v19 = v18 | (v17 << 6);
  while (2)
  {
    v20 = *(_QWORD *)(v11 + 56);
    v21 = (_QWORD *)(*(_QWORD *)(v11 + 48) + 16 * v19);
    v22 = v21[1];
    *v8 = *v21;
    v8[1] = v22;
    v23 = v20 + *(_QWORD *)(v41 + 72) * v19;
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
    sub_1C1338F24(v23, (uint64_t)v8 + *(int *)(v24 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v8, 0, 1, v24);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1C132A724((uint64_t)v8, (uint64_t)v10, (uint64_t *)&unk_1ED7939E0);
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v10, 1, v29) == 1)
      {
        v32 = swift_release();
        v33 = v38;
        MEMORY[0x1E0C80A78](v32);
        *(&v36 - 2) = (uint64_t)&v44;
        v34 = swift_bridgeObjectRetain();
        v35 = sub_1C13C65A4(v34, (uint64_t (*)(uint64_t, uint64_t, char *))sub_1C13C6348, (uint64_t)(&v36 - 4));
        swift_bridgeObjectRelease();
        *v33 = v35;
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      v31 = *v10;
      v30 = v10[1];
      sub_1C13A78FC((uint64_t)v10 + *(int *)(v29 + 48), (uint64_t)v4);
      if ((sub_1C13C521C((uint64_t)v4) & 1) != 0)
      {
        sub_1C132FAD4(&v43, v31, v30);
        swift_bridgeObjectRelease();
        result = sub_1C1339004((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        if (v15)
          goto LABEL_6;
      }
      else
      {
        sub_1C1339004((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        result = swift_bridgeObjectRelease();
        if (v15)
          goto LABEL_6;
      }
LABEL_8:
      v25 = v17 + 1;
      if (__OFADD__(v17, 1))
      {
        __break(1u);
        goto LABEL_32;
      }
      if (v25 < v40)
      {
        v26 = *(_QWORD *)(v39 + 8 * v25);
        if (v26)
          goto LABEL_11;
        v27 = v17 + 2;
        ++v17;
        if (v25 + 1 < v40)
        {
          v26 = *(_QWORD *)(v39 + 8 * v27);
          if (v26)
            goto LABEL_14;
          v17 = v25 + 1;
          if (v25 + 2 < v40)
          {
            v26 = *(_QWORD *)(v39 + 8 * (v25 + 2));
            if (v26)
            {
              v25 += 2;
              goto LABEL_11;
            }
            v27 = v25 + 3;
            v17 = v25 + 2;
            if (v25 + 3 < v40)
              break;
          }
        }
      }
LABEL_25:
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v8, 1, 1, v28);
      v15 = 0;
    }
    v26 = *(_QWORD *)(v39 + 8 * v27);
    if (v26)
    {
LABEL_14:
      v25 = v27;
LABEL_11:
      v15 = (v26 - 1) & v26;
      v19 = __clz(__rbit64(v26)) + (v25 << 6);
      v17 = v25;
      continue;
    }
    break;
  }
  while (1)
  {
    v25 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v25 >= v40)
    {
      v17 = v37;
      goto LABEL_25;
    }
    v26 = *(_QWORD *)(v39 + 8 * v25);
    ++v27;
    if (v26)
      goto LABEL_11;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1C13C521C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, unint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char v67;
  char v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  int *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t result;
  uint64_t *v87;
  NSObject *v88;
  os_log_type_t v89;
  uint8_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  char *v96;
  uint8_t *v97;
  uint64_t *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  void (*v116)(char *, uint64_t);
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121[2];

  v119 = a1;
  v99 = type metadata accessor for ActivityParticipantEvent(0);
  MEMORY[0x1E0C80A78](v99);
  v100 = (char *)&v95 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1C1425630();
  v105 = *(_QWORD *)(v3 - 8);
  v106 = v3;
  MEMORY[0x1E0C80A78](v3);
  v107 = (char *)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C14251B0();
  v104 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x1E0C80A78](v5);
  v103 = (char *)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v114 = (char *)&v95 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
  MEMORY[0x1E0C80A78](v9);
  v110 = (uint64_t)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C142557C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1C1425558();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v118 = type metadata accessor for Activity();
  v19 = MEMORY[0x1E0C80A78](v118);
  v108 = (uint64_t *)((char *)&v95 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = MEMORY[0x1E0C80A78](v19);
  v102 = (uint64_t *)((char *)&v95 - v22);
  v23 = MEMORY[0x1E0C80A78](v21);
  v98 = (uint64_t *)((char *)&v95 - v24);
  MEMORY[0x1E0C80A78](v23);
  v26 = (uint64_t *)((char *)&v95 - v25);
  v27 = MEMORY[0x1C3BAD4B4](v1 + 112);
  if (v27)
  {
    v101 = v1;
    v111 = v14;
    v117 = v27;
    if (qword_1ED793968 != -1)
      swift_once();
    v28 = sub_1C1426854();
    v29 = __swift_project_value_buffer(v28, (uint64_t)qword_1ED798698);
    sub_1C1338F24(v119, (uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    v116 = (void (*)(char *, uint64_t))v29;
    v30 = sub_1C1426848();
    v31 = sub_1C1426C80();
    if (os_log_type_enabled(v30, v31))
    {
      v112 = v12;
      v32 = swift_slowAlloc();
      v115 = v15;
      v33 = (uint8_t *)v32;
      v34 = swift_slowAlloc();
      v109 = v5;
      v35 = v34;
      v121[0] = v34;
      v113 = v11;
      *(_DWORD *)v33 = 136446210;
      v97 = v33 + 4;
      v36 = v16;
      v37 = v18;
      v38 = *v26;
      v39 = v26[1];
      swift_bridgeObjectRetain();
      v40 = v38;
      v18 = v37;
      v16 = v36;
      v12 = v112;
      v120 = sub_1C132AD90(v40, v39, v121);
      v11 = v113;
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      sub_1C1339004((uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      _os_log_impl(&dword_1C1324000, v30, v31, "Dismissing zombie activity: %{public}s", v33, 0xCu);
      swift_arrayDestroy();
      v41 = v35;
      v5 = v109;
      MEMORY[0x1C3BAD3F4](v41, -1, -1);
      v42 = v33;
      v15 = v115;
      MEMORY[0x1C3BAD3F4](v42, -1, -1);
    }
    else
    {
      sub_1C1339004((uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    }

    v44 = v118;
    v43 = v119;
    v45 = *(_QWORD *)(v119 + *(int *)(v118 + 28));
    if (!*(_QWORD *)(v45 + 16))
    {
      v57 = v108;
      sub_1C1338F24(v119, (uint64_t)v108, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      v58 = sub_1C1426848();
      v59 = sub_1C1426C68();
      if (os_log_type_enabled(v58, v59))
      {
        v60 = (uint8_t *)swift_slowAlloc();
        v61 = swift_slowAlloc();
        v121[0] = v61;
        *(_DWORD *)v60 = 136446210;
        v62 = *v57;
        v63 = v57[1];
        swift_bridgeObjectRetain();
        v120 = sub_1C132AD90(v62, v63, v121);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        sub_1C1339004((uint64_t)v57, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        _os_log_impl(&dword_1C1324000, v58, v59, "No content sources exist for dismissed activity: %{public}s", v60, 0xCu);
        v64 = 1;
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v61, -1, -1);
        MEMORY[0x1C3BAD3F4](v60, -1, -1);
        swift_unknownObjectRelease();

      }
      else
      {
        swift_unknownObjectRelease();
        sub_1C1339004((uint64_t)v57, (uint64_t (*)(_QWORD))type metadata accessor for Activity);

        return 1;
      }
      return v64;
    }
    v46 = *(void (**)(char *, unint64_t, uint64_t))(v16 + 16);
    v46(v18, v45 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)), v15);
    v47 = v43 + *(int *)(v44 + 48);
    v48 = v110;
    sub_1C132C344(v47, v110, &qword_1ED7935E8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v48, 1, v11) == 1)
    {
      sub_1C132C860(v48, &qword_1ED7935E8);
      v49 = v102;
      sub_1C1338F24(v43, (uint64_t)v102, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      v50 = sub_1C1426848();
      v51 = sub_1C1426C80();
      if (os_log_type_enabled(v50, v51))
      {
        v52 = (uint8_t *)swift_slowAlloc();
        v53 = swift_slowAlloc();
        v96 = v18;
        v54 = v53;
        v121[0] = v53;
        v119 = v16;
        *(_DWORD *)v52 = 136446210;
        v56 = *v49;
        v55 = v49[1];
        swift_bridgeObjectRetain();
        v120 = sub_1C132AD90(v56, v55, v121);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        sub_1C1339004((uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        _os_log_impl(&dword_1C1324000, v50, v51, "Activity is not a zombie: %{public}s", v52, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v54, -1, -1);
        MEMORY[0x1C3BAD3F4](v52, -1, -1);
        swift_unknownObjectRelease();

        (*(void (**)(char *, uint64_t))(v119 + 8))(v96, v15);
      }
      else
      {
        swift_unknownObjectRelease();

        sub_1C1339004((uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      }
    }
    else
    {
      v115 = v15;
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v111, v48, v11);
      v65 = v107;
      sub_1C1425564();
      sub_1C1425600();
      (*(void (**)(char *, uint64_t))(v105 + 8))(v65, v106);
      v66 = v103;
      sub_1C142518C();
      v67 = sub_1C1425150();
      v113 = v11;
      v68 = v67;
      v69 = *(void (**)(char *, uint64_t))(v104 + 8);
      v69(v66, v5);
      v112 = v12;
      if ((v68 & 1) != 0)
      {
        v70 = v119;
        v71 = *(_QWORD *)(v119 + 8);
        v110 = *(_QWORD *)v119;
        v116 = v69;
        v72 = v118;
        v73 = (uint64_t *)(v119 + *(int *)(v118 + 40));
        v74 = v73[1];
        v108 = (uint64_t *)*v73;
        v106 = v74;
        v75 = (int *)v99;
        v109 = v5;
        v96 = v18;
        v76 = v100;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C1425624();
        sub_1C1425570();
        type metadata accessor for ActivityParticipantEvent.EventType(0);
        v64 = 1;
        swift_storeEnumTagMultiPayload();
        v77 = v115;
        v46(&v76[v75[7]], (unint64_t)v18, v115);
        v78 = &v76[v75[9]];
        v79 = *(int *)(v72 + 44);
        v80 = v16;
        v81 = v70 + v79;
        v82 = sub_1C1425450();
        v83 = *(_QWORD *)(v82 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v78, v81, v82);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v78, 0, 1, v82);
        *(_QWORD *)v76 = v110;
        *((_QWORD *)v76 + 1) = v71;
        v84 = v106;
        *((_QWORD *)v76 + 2) = v108;
        *((_QWORD *)v76 + 3) = v84;
        v85 = &v76[v75[8]];
        *(_QWORD *)v85 = v101;
        *((_QWORD *)v85 + 1) = &off_1E7A8CE90;
        v76[v75[10]] = 0;
        swift_retain();
        sub_1C13D0788((uint64_t)v76);
        swift_unknownObjectRelease();
        sub_1C1339004((uint64_t)v76, type metadata accessor for ActivityParticipantEvent);
        v116(v114, v109);
        (*(void (**)(char *, uint64_t))(v112 + 8))(v111, v113);
        (*(void (**)(char *, uint64_t))(v80 + 8))(v96, v77);
        return v64;
      }
      v87 = v98;
      sub_1C1338F24(v119, (uint64_t)v98, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      v88 = sub_1C1426848();
      v89 = sub_1C1426C80();
      if (os_log_type_enabled(v88, v89))
      {
        v90 = (uint8_t *)swift_slowAlloc();
        v91 = swift_slowAlloc();
        v96 = v18;
        v92 = v91;
        v121[0] = v91;
        v119 = v16;
        *(_DWORD *)v90 = 136446210;
        v109 = v5;
        v93 = *v87;
        v94 = v87[1];
        swift_bridgeObjectRetain();
        v120 = sub_1C132AD90(v93, v94, v121);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        sub_1C1339004((uint64_t)v87, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        _os_log_impl(&dword_1C1324000, v88, v89, "Activity is not yet eligible for dismissal: %{public}s", v90, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v92, -1, -1);
        MEMORY[0x1C3BAD3F4](v90, -1, -1);
        swift_unknownObjectRelease();

        v69(v114, v109);
        (*(void (**)(char *, uint64_t))(v112 + 8))(v111, v113);
        (*(void (**)(char *, uint64_t))(v119 + 8))(v96, v115);
      }
      else
      {
        swift_unknownObjectRelease();

        sub_1C1339004((uint64_t)v87, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        v69(v114, v5);
        (*(void (**)(char *, uint64_t))(v112 + 8))(v111, v113);
        (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v115);
      }
    }
    return 0;
  }
  result = sub_1C1426F8C();
  __break(1u);
  return result;
}

BOOL sub_1C13C5DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;

  v6 = *a4;
  swift_bridgeObjectRetain();
  LOBYTE(a2) = sub_1C1330FE4(a1, a2, v6);
  swift_bridgeObjectRelease();
  return (a2 & 1) == 0;
}

uint64_t sub_1C13C5E2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t result;
  os_unfair_lock_s *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t *v54;
  char *v55;
  uint64_t *v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  int64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
  v1 = MEMORY[0x1E0C80A78](v59);
  v58 = (os_unfair_lock_s **)((char *)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = MEMORY[0x1E0C80A78](v1);
  v57 = (os_unfair_lock_s **)((char *)&v50 - v4);
  v5 = MEMORY[0x1E0C80A78](v3);
  v56 = (uint64_t *)((char *)&v50 - v6);
  v7 = MEMORY[0x1E0C80A78](v5);
  v55 = (char *)&v50 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v54 = (uint64_t *)((char *)&v50 - v10);
  MEMORY[0x1E0C80A78](v9);
  v53 = (uint64_t *)((char *)&v50 - v11);
  v12 = *(os_unfair_lock_s **)(*(_QWORD *)(v0 + 16) + 16);
  os_unfair_lock_lock(v12);
  swift_beginAccess();
  v13 = *(_QWORD *)(v0 + 104);
  v14 = *(_QWORD *)(v13 + 16);
  v15 = MEMORY[0x1E0DEE9D8];
  if (v14)
  {
    v50 = v12;
    v63 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1C13369AC(0, v14, 0);
    v16 = sub_1C135833C(v13);
    v18 = v17;
    v20 = v19 & 1;
    v51 = v13 + 64;
    v52 = v13;
    v62 = v63;
    v60 = v14 - 1;
    v21 = (uint64_t *)v55;
    while (1)
    {
      v22 = v59;
      v23 = v53;
      v24 = (uint64_t)v53 + *(int *)(v59 + 48);
      v61 = v18;
      v25 = sub_1C13A1514(v24, v16, v18, v20 & 1, v13);
      *v23 = v25;
      v23[1] = v26;
      v27 = (uint64_t)v54;
      *v54 = v25;
      *(_QWORD *)(v27 + 8) = v26;
      sub_1C1338F24(v24, v27 + *(int *)(v22 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      sub_1C132A724(v27, (uint64_t)v21, &qword_1ED7939D8);
      swift_bridgeObjectRetain();
      sub_1C132C860((uint64_t)v23, &qword_1ED7939D8);
      v29 = *v21;
      v28 = v21[1];
      v30 = *(int *)(v22 + 48);
      v31 = (uint64_t)v56;
      v32 = (uint64_t)v56 + v30;
      *v56 = *v21;
      *(_QWORD *)(v31 + 8) = v28;
      sub_1C1338F24((uint64_t)v21 + v30, v31 + v30, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      v33 = *(int *)(v22 + 48);
      v34 = v57;
      v35 = (uint64_t)v57 + v33;
      *v57 = v29;
      v34[1] = v28;
      sub_1C1338F24(v32, (uint64_t)v34 + v33, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      v36 = *(int *)(v22 + 48);
      v37 = v58;
      v38 = (uint64_t)v58 + v36;
      *v58 = v29;
      v37[1] = v28;
      sub_1C1338F24(v32, (uint64_t)v37 + v36, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      swift_bridgeObjectRetain_n();
      v39 = sub_1C1406DD8();
      v41 = v40;
      sub_1C132C860(v31, &qword_1ED7939D8);
      sub_1C1339004(v38, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      sub_1C1339004(v35, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      sub_1C132C860((uint64_t)v21, &qword_1ED7939D8);
      v15 = v62;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C13369AC(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v63;
      }
      v43 = *(_QWORD *)(v15 + 16);
      v42 = *(_QWORD *)(v15 + 24);
      if (v43 >= v42 >> 1)
      {
        sub_1C13369AC(v42 > 1, v43 + 1, 1);
        v15 = v63;
      }
      *(_QWORD *)(v15 + 16) = v43 + 1;
      v44 = (_QWORD *)(v15 + 48 * v43);
      v44[4] = v29;
      v44[5] = v28;
      v44[6] = v39;
      v44[7] = v41;
      v44[9] = MEMORY[0x1E0DEA968];
      v13 = v52;
      if (v16 < 0 || v16 >= -(-1 << *(_BYTE *)(v52 + 32)))
        break;
      if (((*(_QWORD *)(v51 + (((unint64_t)v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
        goto LABEL_19;
      if (*(_DWORD *)(v52 + 36) != (_DWORD)v61)
        goto LABEL_20;
      v45 = sub_1C1426E0C();
      if (!v60)
      {
        swift_bridgeObjectRelease();
        v12 = v50;
        goto LABEL_14;
      }
      v16 = v45;
      v62 = v15;
      v20 = 0;
      v18 = *(unsigned int *)(v13 + 36);
      --v60;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
LABEL_14:
    if (*(_QWORD *)(v15 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797B20);
      v46 = sub_1C1426FBC();
    }
    else
    {
      v46 = MEMORY[0x1E0DEE9E0];
    }
    v63 = v46;
    v47 = swift_bridgeObjectRetain();
    sub_1C13555F8(v47, 1, &v63);
    swift_bridgeObjectRelease();
    v48 = v63;
    os_unfair_lock_unlock(v12);
    return v48;
  }
  return result;
}

uint64_t sub_1C13C62B4()
{
  return sub_1C13C5E2C();
}

uint64_t sub_1C13C62D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C13C631C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C13C6340()
{
  return sub_1C13C4D8C();
}

BOOL sub_1C13C6348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1C13C5DD4(a1, a2, a3, *(uint64_t **)(v3 + 16));
}

uint64_t sub_1C13C6350(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, char *))
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, char *);

  v24 = a2;
  v30 = a4;
  v25 = a1;
  v5 = type metadata accessor for Activity();
  v29 = *(_QWORD *)(v5 - 8);
  result = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = 0;
  v10 = *(_QWORD *)(a3 + 64);
  v26 = 0;
  v27 = a3 + 64;
  v11 = 1 << *(_BYTE *)(a3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v28 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_5;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v19 >= v28)
      return sub_1C1326C50(v25, v24, v26, (_QWORD *)a3);
    v20 = *(_QWORD *)(v27 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v28)
        return sub_1C1326C50(v25, v24, v26, (_QWORD *)a3);
      v20 = *(_QWORD *)(v27 + 8 * v9);
      if (!v20)
      {
        v9 = v19 + 2;
        if (v19 + 2 >= v28)
          return sub_1C1326C50(v25, v24, v26, (_QWORD *)a3);
        v20 = *(_QWORD *)(v27 + 8 * v9);
        if (!v20)
          break;
      }
    }
LABEL_20:
    v13 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_5:
    v16 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v15);
    v17 = *v16;
    v18 = v16[1];
    sub_1C1338F24(*(_QWORD *)(a3 + 56) + *(_QWORD *)(v29 + 72) * v15, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    swift_bridgeObjectRetain();
    LOBYTE(v17) = v30(v17, v18, v8);
    sub_1C1339004((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    result = swift_bridgeObjectRelease();
    if ((v17 & 1) != 0)
    {
      *(unint64_t *)((char *)v25 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      if (__OFADD__(v26++, 1))
      {
        __break(1u);
        return sub_1C1326C50(v25, v24, v26, (_QWORD *)a3);
      }
    }
  }
  v21 = v19 + 3;
  if (v21 >= v28)
    return sub_1C1326C50(v25, v24, v26, (_QWORD *)a3);
  v20 = *(_QWORD *)(v27 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v28)
      return sub_1C1326C50(v25, v24, v26, (_QWORD *)a3);
    v20 = *(_QWORD *)(v27 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1C13C65A4(uint64_t isStackAllocationSafe, uint64_t (*a2)(uint64_t, uint64_t, char *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  char v7;
  unint64_t v8;
  size_t v9;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v6 = isStackAllocationSafe;
  v13[1] = *MEMORY[0x1E0C80C00];
  v7 = *(_BYTE *)(isStackAllocationSafe + 32);
  v8 = (unint64_t)((1 << v7) + 63) >> 6;
  v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    v10 = sub_1C13C6350((_QWORD *)((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, v6, a2);
    if (v3)
      swift_willThrow();
    else
      return v10;
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a3 = sub_1C13C6350((unint64_t *)v11, v8, v6, a2);
    MEMORY[0x1C3BAD3F4](v11, -1, -1);
  }
  return a3;
}

unint64_t sub_1C13C6714()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED7935D0;
  if (!qword_1ED7935D0)
  {
    v1 = sub_1C14251B0();
    result = MEMORY[0x1C3BAD334](MEMORY[0x1E0CB08B0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED7935D0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ActivityCountLimits(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ActivityCountLimits(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ActivityCountLimits()
{
  return &type metadata for ActivityCountLimits;
}

void *sub_1C13C67B4()
{
  void *result;

  type metadata accessor for Singleton();
  swift_allocObject();
  result = (void *)sub_1C13C6810();
  off_1ED7936E8 = result;
  return result;
}

uint64_t type metadata accessor for FirstLaunchDetector()
{
  return objc_opt_self();
}

uint64_t sub_1C13C6810()
{
  uint64_t v0;
  uint64_t v1;
  sem_t *v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  sem_t *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;

  v1 = v0;
  v2 = (sem_t *)sub_1C1426890();
  v3 = sub_1C1426860();
  if (v2)
  {
    if (v3 && v2 == (sem_t *)v3)
      goto LABEL_4;
LABEL_13:
    if (qword_1ED7978E0 != -1)
      swift_once();
    v10 = sub_1C1426854();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ED7985C8);
    v11 = sub_1C1426848();
    v12 = sub_1C1426C80();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_1C1324000, v11, v12, "Detected subsequent launch", v13, 2u);
      MEMORY[0x1C3BAD3F4](v13, -1, -1);
    }

    sem_close(v2);
    *(_BYTE *)(v1 + 16) = 0;
    return v1;
  }
  if (v3)
    goto LABEL_13;
LABEL_4:
  if (qword_1ED7978E0 != -1)
    swift_once();
  v4 = sub_1C1426854();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED7985C8);
  v5 = sub_1C1426848();
  v6 = sub_1C1426C80();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1C1324000, v5, v6, "Detected first launch", v7, 2u);
    MEMORY[0x1C3BAD3F4](v7, -1, -1);
  }

  *(_BYTE *)(v0 + 16) = 1;
  sub_1C1426878();
  v8 = (sem_t *)sub_1C1426884();
  v9 = sub_1C1426860();
  if (v8)
  {
    if (!v9 || v8 != (sem_t *)v9)
      goto LABEL_20;
  }
  else if (v9)
  {
    v8 = 0;
LABEL_20:
    sem_close(v8);
    return v1;
  }
  v14 = sub_1C1426848();
  v15 = sub_1C1426C68();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v16 = 67240192;
    MEMORY[0x1C3BAC548]();
    sub_1C1426DB8();
    _os_log_impl(&dword_1C1324000, v14, v15, "Failed to create semaphore for first launch detector: %{public}d", v16, 8u);
    MEMORY[0x1C3BAD3F4](v16, -1, -1);
  }

  return v1;
}

uint64_t sub_1C13C6AD0()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Singleton()
{
  return objc_opt_self();
}

uint64_t sub_1C13C6B00(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1C13C6B08()
{
  return sub_1C13C6B50(&OBJC_IVAR____TtC11SessionCore16AppEventObserver____lazy_storage___addedPublisher, (uint64_t)&OBJC_IVAR____TtC11SessionCore16AppEventObserver__addedPublisher, &qword_1ED797978, &qword_1ED797970);
}

uint64_t sub_1C13C6B2C()
{
  return sub_1C13C6B50(&OBJC_IVAR____TtC11SessionCore16AppEventObserver____lazy_storage___removedPublisher, (uint64_t)&OBJC_IVAR____TtC11SessionCore16AppEventObserver__removedPublisher, &qword_1ED797978, &qword_1ED797970);
}

uint64_t sub_1C13C6B50(uint64_t *a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;

  v5 = *a1;
  v6 = *(_QWORD *)(v4 + *a1);
  if (v6)
  {
    v7 = v6;
  }
  else
  {
    v10 = v4;
    __swift_instantiateConcreteTypeFromMangledName(a3);
    sub_1C132C820(a4, a3, MEMORY[0x1E0C95F48]);
    v7 = sub_1C1426908();
    *(_QWORD *)(v10 + v5) = v7;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v7;
}

uint64_t sub_1C13C6C00()
{
  return sub_1C13C6B50(&OBJC_IVAR____TtC11SessionCore16AppEventObserver____lazy_storage___restrictionsChangedPublisher, (uint64_t)&OBJC_IVAR____TtC11SessionCore16AppEventObserver__restrictionsChangedPublisher, &qword_1ED791EF8, &qword_1ED7927F0);
}

id sub_1C13C6C24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C13C9A84(&OBJC_IVAR____TtC11SessionCore16AppEventObserver_applicationWorkspace, (SEL *)&selRef_removeObserver_, a3, (uint64_t (*)(uint64_t))type metadata accessor for AppEventObserver);
}

uint64_t sub_1C13C6D34(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  int64_t *v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  const char *v54;
  int64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  char v81;
  char v82;
  uint64_t v83;

  v5 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC11SessionCore16AppEventObserver_lock) + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_1C13CB8F0(&v83);
  v6 = v83;
  os_unfair_lock_unlock(v5);
  swift_release();
  if (!*(_QWORD *)(v6 + 16))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v7 = 0;
  v8 = v6 + 56;
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v6 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (v11)
  {
    v13 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    v14 = v13 | (v7 << 6);
LABEL_6:
    if ((*(_BYTE *)(*(_QWORD *)(v6 + 48) + 40 * v14 + 32) & 1) == 0)
    {
      v18 = 1;
      goto LABEL_29;
    }
  }
  v15 = v7 + 1;
  if (__OFADD__(v7, 1))
    goto LABEL_77;
  if (v15 < v12)
  {
    v16 = *(_QWORD *)(v8 + 8 * v15);
    ++v7;
    if (!v16)
    {
      v7 = v15 + 1;
      if (v15 + 1 >= v12)
        goto LABEL_28;
      v16 = *(_QWORD *)(v8 + 8 * v7);
      if (!v16)
      {
        v7 = v15 + 2;
        if (v15 + 2 >= v12)
          goto LABEL_28;
        v16 = *(_QWORD *)(v8 + 8 * v7);
        if (!v16)
        {
          v7 = v15 + 3;
          if (v15 + 3 >= v12)
            goto LABEL_28;
          v16 = *(_QWORD *)(v8 + 8 * v7);
          if (!v16)
          {
            v7 = v15 + 4;
            if (v15 + 4 >= v12)
              goto LABEL_28;
            v16 = *(_QWORD *)(v8 + 8 * v7);
            if (!v16)
            {
              v17 = v15 + 5;
              if (v17 >= v12)
                goto LABEL_28;
              v16 = *(_QWORD *)(v8 + 8 * v17);
              if (!v16)
              {
                while (1)
                {
                  v7 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    break;
                  if (v7 >= v12)
                    goto LABEL_28;
                  v16 = *(_QWORD *)(v8 + 8 * v7);
                  ++v17;
                  if (v16)
                    goto LABEL_25;
                }
                __break(1u);
LABEL_83:
                swift_once();
LABEL_66:
                v71 = sub_1C1426854();
                __swift_project_value_buffer(v71, (uint64_t)qword_1ED7984D8);
                swift_bridgeObjectRetain_n();
                swift_bridgeObjectRetain();
                v24 = sub_1C1426848();
                v47 = sub_1C1426C80();
                if (os_log_type_enabled(v24, v47))
                {
                  v48 = swift_slowAlloc();
                  v49 = swift_slowAlloc();
                  v83 = v49;
                  *(_DWORD *)v48 = 136380931;
                  swift_bridgeObjectRetain();
                  sub_1C132AD90(a1, a2, &v83);
                  sub_1C1426DB8();
                  swift_bridgeObjectRelease_n();
                  *(_WORD *)(v48 + 12) = 2082;
                  v72 = swift_bridgeObjectRetain();
                  v73 = MEMORY[0x1C3BAC878](v72, MEMORY[0x1E0DEA968]);
                  v75 = v74;
                  swift_bridgeObjectRelease();
                  sub_1C132AD90(v73, v75, &v83);
                  sub_1C1426DB8();
                  swift_bridgeObjectRelease_n();
                  swift_bridgeObjectRelease();
                  v54 = "Bundle ID %{private}s is restricted because it is not part of the allow-list set by sources: %{public}s";
LABEL_68:
                  _os_log_impl(&dword_1C1324000, v24, v47, v54, (uint8_t *)v48, 0x16u);
                  swift_arrayDestroy();
                  MEMORY[0x1C3BAD3F4](v49, -1, -1);
                  v30 = v48;
LABEL_69:
                  MEMORY[0x1C3BAD3F4](v30, -1, -1);

                  return 1;
                }
                goto LABEL_70;
              }
              v7 = v17;
            }
          }
        }
      }
    }
LABEL_25:
    v11 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v7 << 6);
    goto LABEL_6;
  }
LABEL_28:
  v18 = 0;
LABEL_29:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = sub_1C13CB6D8(v6, a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t, uint64_t))sub_1C13CB138);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v20 = sub_1C13CB6D8(v6, a1, a2, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t, uint64_t))sub_1C13CB30C);
  swift_bridgeObjectRelease();
  if (!v18)
  {
    v21 = (int64_t *)(v20 + 16);
    if (!*(_QWORD *)(v20 + 16))
    {
      swift_release();
      swift_release();
      return 0;
    }
    goto LABEL_38;
  }
  if (!*(_QWORD *)(v19 + 16))
  {
    swift_release();
    v55 = *(_QWORD *)(v19 + 16);
    if (!v55)
    {
      swift_release();
LABEL_65:
      if (qword_1ED791DD0 != -1)
        goto LABEL_83;
      goto LABEL_66;
    }
    v77 = a1;
    v79 = a2;
    v83 = MEMORY[0x1E0DEE9D8];
    sub_1C1336990(0, v55, 0);
    v56 = v83;
    v57 = sub_1C13CAE6C(v19);
    a1 = v58;
    v60 = v59 & 1;
    while ((v57 & 0x8000000000000000) == 0 && v57 < 1 << *(_BYTE *)(v19 + 32))
    {
      if (((*(_QWORD *)(v19 + 56 + (((unint64_t)v57 >> 3) & 0xFFFFFFFFFFFFF8)) >> v57) & 1) == 0)
        goto LABEL_79;
      if (*(_DWORD *)(v19 + 36) != (_DWORD)a1)
        goto LABEL_80;
      v82 = v60;
      v61 = *(_QWORD *)(v19 + 48) + 40 * v57;
      v62 = *(_QWORD *)(v61 + 16);
      v63 = *(_QWORD *)(v61 + 24);
      v83 = v56;
      v65 = *(_QWORD *)(v56 + 16);
      v64 = *(_QWORD *)(v56 + 24);
      a2 = v19;
      swift_bridgeObjectRetain();
      if (v65 >= v64 >> 1)
      {
        sub_1C1336990(v64 > 1, v65 + 1, 1);
        v56 = v83;
      }
      *(_QWORD *)(v56 + 16) = v65 + 1;
      v66 = v56 + 16 * v65;
      *(_QWORD *)(v66 + 32) = v62;
      *(_QWORD *)(v66 + 40) = v63;
      v67 = sub_1C13373DC(v57, a1, v82 & 1, v19);
      v57 = v67;
      a1 = v68;
      v60 = v69 & 1;
      if (!--v55)
      {
        sub_1C133770C(v67, v68, v60);
        swift_release();
        a1 = v77;
        a2 = v79;
        goto LABEL_65;
      }
    }
    goto LABEL_78;
  }
  v21 = (int64_t *)(v20 + 16);
  if (*(_QWORD *)(v20 + 16))
  {
LABEL_38:
    swift_release();
    v31 = *v21;
    if (!*v21)
    {
      swift_release();
LABEL_49:
      if (qword_1ED791DD0 == -1)
      {
LABEL_50:
        v46 = sub_1C1426854();
        __swift_project_value_buffer(v46, (uint64_t)qword_1ED7984D8);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        v24 = sub_1C1426848();
        v47 = sub_1C1426C80();
        if (os_log_type_enabled(v24, v47))
        {
          v48 = swift_slowAlloc();
          v49 = swift_slowAlloc();
          v83 = v49;
          *(_DWORD *)v48 = 136380931;
          swift_bridgeObjectRetain();
          sub_1C132AD90(a1, a2, &v83);
          sub_1C1426DB8();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v48 + 12) = 2082;
          v50 = swift_bridgeObjectRetain();
          v51 = MEMORY[0x1C3BAC878](v50, MEMORY[0x1E0DEA968]);
          v53 = v52;
          swift_bridgeObjectRelease();
          sub_1C132AD90(v51, v53, &v83);
          sub_1C1426DB8();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          v54 = "Bundle ID %{private}s is restricted because it is is denied by sources: %{public}s";
          goto LABEL_68;
        }
LABEL_70:

        swift_bridgeObjectRelease_n();
        goto LABEL_71;
      }
LABEL_81:
      swift_once();
      goto LABEL_50;
    }
    v76 = a1;
    v78 = a2;
    v83 = MEMORY[0x1E0DEE9D8];
    sub_1C1336990(0, v31, 0);
    v32 = v83;
    v33 = sub_1C13CAE6C(v20);
    a1 = v34;
    v36 = v35 & 1;
    v80 = v20 + 56;
    while ((v33 & 0x8000000000000000) == 0 && v33 < 1 << *(_BYTE *)(v20 + 32))
    {
      if (((*(_QWORD *)(v80 + (((unint64_t)v33 >> 3) & 0xFFFFFFFFFFFFF8)) >> v33) & 1) == 0)
        goto LABEL_75;
      if (*(_DWORD *)(v20 + 36) != (_DWORD)a1)
        goto LABEL_76;
      v81 = v36;
      v37 = *(_QWORD *)(v20 + 48) + 40 * v33;
      v38 = *(_QWORD *)(v37 + 16);
      v39 = *(_QWORD *)(v37 + 24);
      v83 = v32;
      a2 = v20;
      v41 = *(_QWORD *)(v32 + 16);
      v40 = *(_QWORD *)(v32 + 24);
      swift_bridgeObjectRetain();
      if (v41 >= v40 >> 1)
      {
        sub_1C1336990(v40 > 1, v41 + 1, 1);
        v32 = v83;
      }
      *(_QWORD *)(v32 + 16) = v41 + 1;
      v42 = v32 + 16 * v41;
      *(_QWORD *)(v42 + 32) = v38;
      *(_QWORD *)(v42 + 40) = v39;
      v43 = sub_1C13373DC(v33, a1, v81 & 1, a2);
      v33 = v43;
      a1 = v44;
      v36 = v45 & 1;
      --v31;
      v20 = a2;
      if (!v31)
      {
        sub_1C133770C(v43, v44, v36);
        swift_release();
        a1 = v76;
        a2 = v78;
        goto LABEL_49;
      }
    }
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  swift_release();
  v22 = *(_QWORD *)(v19 + 16);
  swift_release();
  if (v22)
    return 0;
  if (qword_1ED791DD0 != -1)
    swift_once();
  v23 = sub_1C1426854();
  __swift_project_value_buffer(v23, (uint64_t)qword_1ED7984D8);
  swift_bridgeObjectRetain_n();
  v24 = sub_1C1426848();
  v25 = sub_1C1426C80();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    v83 = v27;
    *(_DWORD *)v26 = 136380931;
    swift_bridgeObjectRetain();
    sub_1C132AD90(a1, a2, &v83);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v26 + 12) = 2082;
    v28 = MEMORY[0x1C3BAC878](MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEA968]);
    sub_1C132AD90(v28, v29, &v83);
    sub_1C1426DB8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1324000, v24, v25, "Bundle ID %{private}s is unrestricted because it is part of the allow-list set by sources: %{public}s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v27, -1, -1);
    v30 = v26;
    goto LABEL_69;
  }

LABEL_71:
  swift_bridgeObjectRelease_n();
  return 1;
}

uint64_t sub_1C13C7754()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  result = *(_QWORD *)(v0 + OBJC_IVAR____TtC11SessionCore16AppEventObserver_restrictionProviders);
  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v3 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    do
    {
      v4 = *v3;
      ObjectType = swift_getObjectType();
      v6 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 16);
      swift_unknownObjectRetain();
      v7 = v6(ObjectType, v4);
      v9 = v8;
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
      v10 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v11 = (_QWORD *)swift_allocObject();
      v11[2] = v10;
      v11[3] = v7;
      v11[4] = v9;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7933A8);
      sub_1C132C820((unint64_t *)&unk_1ED793560, (uint64_t *)&unk_1ED7933A8, MEMORY[0x1E0C95D90]);
      sub_1C1426938();
      swift_release();
      swift_release();
      swift_beginAccess();
      sub_1C14268A8();
      swift_endAccess();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v4 + 24))(ObjectType, v4);
      swift_unknownObjectRelease();
      v3 += 2;
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C13C790C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  os_unfair_lock_s *v5;
  char v6;
  char v7;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1C3BAD4B4](v2);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = *(os_unfair_lock_s **)(v3 + OBJC_IVAR____TtC11SessionCore16AppEventObserver_lock);
    MEMORY[0x1E0C80A78](v3);
    swift_retain();
    os_unfair_lock_lock(v5 + 4);
    sub_1C13CB964(&v7);
    v6 = v7;
    os_unfair_lock_unlock(v5 + 4);
    swift_release();
    if ((v6 & 1) != 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791EF8);
      sub_1C132C820(&qword_1ED791EF0, &qword_1ED791EF8, MEMORY[0x1E0C95F40]);
      sub_1C14268FC();
    }

  }
}

uint64_t sub_1C13C7A40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _BYTE *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char type;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;

  v10 = OBJC_IVAR____TtC11SessionCore16AppEventObserver_lock_restrictions;
  swift_bridgeObjectRetain();
  v11 = swift_bridgeObjectRetain();
  v66 = a2;
  v12 = sub_1C13CB6D8(v11, a2, a3, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t, uint64_t))sub_1C13CB510);
  swift_bridgeObjectRelease();
  if ((sub_1C136BE60(v12, a4) & 1) != 0)
  {
    result = swift_release();
    *a5 = 0;
    return result;
  }
  v63 = a5;
  v64 = v10;
  v65 = a1;
  if (*(_QWORD *)(v12 + 16) <= *(_QWORD *)(a4 + 16) >> 3)
  {
    v73 = a4;
    swift_bridgeObjectRetain();
    sub_1C1355B48(v12);
    v14 = a4;
  }
  else
  {
    swift_bridgeObjectRetain();
    v14 = sub_1C13563C4(v12, a4);
  }
  v15 = *(_QWORD *)(v14 + 16);
  v16 = MEMORY[0x1E0DEE9D8];
  v67 = v12;
  v62 = a3;
  if (v15)
  {
    v75 = MEMORY[0x1E0DEE9D8];
    sub_1C1336990(0, v15, 0);
    v17 = v75;
    v19 = sub_1C13CAE6C(v14);
    v68 = v14 + 56;
    v21 = v20 & 1;
    while ((v19 & 0x8000000000000000) == 0 && v19 < 1 << *(_BYTE *)(v14 + 32))
    {
      if (((*(_QWORD *)(v68 + (((unint64_t)v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
        goto LABEL_39;
      if (*(_DWORD *)(v14 + 36) != (_DWORD)v18)
        goto LABEL_40;
      type = v21;
      v22 = (uint64_t *)(*(_QWORD *)(v14 + 48) + 40 * v19);
      v23 = v22[1];
      v70 = v18;
      v73 = *v22;
      v74 = v23;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_1C14252D0();
      sub_1C14252D0();
      swift_bridgeObjectRelease();
      sub_1C14252D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a3 = v73;
      v75 = v17;
      v25 = *(_QWORD *)(v17 + 16);
      v24 = *(_QWORD *)(v17 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_1C1336990(v24 > 1, v25 + 1, 1);
        v17 = v75;
      }
      *(_QWORD *)(v17 + 16) = v25 + 1;
      v26 = v17 + 16 * v25;
      *(_QWORD *)(v26 + 32) = a3;
      *(_QWORD *)(v26 + 40) = v23;
      v27 = sub_1C13373DC(v19, v70, type & 1, v14);
      v19 = v27;
      v21 = v28 & 1;
      if (!--v15)
      {
        sub_1C133770C(v27, v18, v21);
        swift_bridgeObjectRelease();
        v12 = v67;
        v16 = MEMORY[0x1E0DEE9D8];
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRelease();
  v17 = MEMORY[0x1E0DEE9D8];
LABEL_17:
  v68 = v17;
  if (*(_QWORD *)(a4 + 16) > *(_QWORD *)(v12 + 16) >> 3)
  {
    swift_retain();
    v29 = sub_1C13563C4(a4, v12);
    v30 = *(_QWORD *)(v29 + 16);
    if (v30)
      goto LABEL_19;
LABEL_29:
    swift_bridgeObjectRelease();
LABEL_30:
    a3 = v62;
    if (qword_1ED791DD0 == -1)
      goto LABEL_31;
    goto LABEL_44;
  }
  v73 = v12;
  swift_retain();
  sub_1C1355B48(a4);
  v29 = v12;
  v30 = *(_QWORD *)(v12 + 16);
  if (!v30)
    goto LABEL_29;
LABEL_19:
  v75 = v16;
  sub_1C1336990(0, v30, 0);
  v31 = v16;
  v32 = sub_1C13CAE6C(v29);
  v34 = v33;
  v36 = v35 & 1;
  while ((v32 & 0x8000000000000000) == 0 && v32 < 1 << *(_BYTE *)(v29 + 32))
  {
    if (((*(_QWORD *)(v29 + 56 + (((unint64_t)v32 >> 3) & 0xFFFFFFFFFFFFF8)) >> v32) & 1) == 0)
      goto LABEL_42;
    if (*(_DWORD *)(v29 + 36) != (_DWORD)v34)
      goto LABEL_43;
    v71 = v36;
    v37 = (uint64_t *)(*(_QWORD *)(v29 + 48) + 40 * v32);
    v38 = v37[1];
    v73 = *v37;
    v74 = v38;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1C14252D0();
    sub_1C14252D0();
    swift_bridgeObjectRelease();
    sub_1C14252D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v39 = v73;
    v40 = v38;
    v75 = v31;
    v41 = *(_QWORD *)(v31 + 16);
    v42 = *(_QWORD *)(v31 + 24);
    a3 = v41 + 1;
    if (v41 >= v42 >> 1)
    {
      sub_1C1336990(v42 > 1, v41 + 1, 1);
      v31 = v75;
    }
    *(_QWORD *)(v31 + 16) = a3;
    v43 = v31 + 16 * v41;
    *(_QWORD *)(v43 + 32) = v39;
    *(_QWORD *)(v43 + 40) = v40;
    v44 = sub_1C13373DC(v32, v34, v71 & 1, v29);
    v32 = v44;
    v34 = v45;
    v36 = v46 & 1;
    if (!--v30)
    {
      sub_1C133770C(v44, v45, v36);
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
  }
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  swift_once();
LABEL_31:
  v47 = sub_1C1426854();
  __swift_project_value_buffer(v47, (uint64_t)qword_1ED7984D8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v48 = sub_1C1426848();
  v49 = sub_1C1426C80();
  if (os_log_type_enabled(v48, v49))
  {
    v50 = swift_slowAlloc();
    v72 = swift_slowAlloc();
    v73 = v72;
    *(_DWORD *)v50 = 136446723;
    swift_bridgeObjectRetain();
    v75 = sub_1C132AD90(v66, a3, &v73);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v50 + 12) = 2081;
    swift_bridgeObjectRetain();
    v51 = MEMORY[0x1E0DEA968];
    v52 = MEMORY[0x1C3BAC878](v68, MEMORY[0x1E0DEA968]);
    v54 = v53;
    swift_bridgeObjectRelease();
    v75 = sub_1C132AD90(v52, v54, &v73);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v50 + 22) = 2081;
    v55 = swift_bridgeObjectRetain();
    v56 = MEMORY[0x1C3BAC878](v55, v51);
    v58 = v57;
    swift_bridgeObjectRelease();
    v75 = sub_1C132AD90(v56, v58, &v73);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1324000, v48, v49, "Restrictions changed by %{public}s.  Added: %{private}s; removed: %{private}s",
      (uint8_t *)v50,
      0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v72, -1, -1);
    MEMORY[0x1C3BAD3F4](v50, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v59 = *(_QWORD *)(v65 + v64);
  if (*(_QWORD *)(v67 + 16) <= *(_QWORD *)(v59 + 16) >> 3)
  {
    v73 = *(_QWORD *)(v65 + v64);
    swift_bridgeObjectRetain();
    sub_1C1355B48(v67);
    swift_release();
    v60 = v73;
  }
  else
  {
    swift_bridgeObjectRetain();
    v60 = sub_1C13563C4(v67, v59);
    swift_release();
  }
  v73 = v60;
  v61 = swift_bridgeObjectRetain();
  sub_1C13C825C(v61);
  *(_QWORD *)(v65 + v64) = v73;
  result = swift_bridgeObjectRelease();
  *v63 = 1;
  return result;
}

uint64_t sub_1C13C825C(uint64_t result)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __int128 v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  _BYTE v15[8];
  _OWORD v16[2];
  char v17;
  __int128 v18;
  __int128 v19;

  v1 = result;
  v2 = 0;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    v12 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v7)
      return swift_release();
    v13 = *(_QWORD *)(v3 + 8 * v12);
    ++v2;
    if (!v13)
    {
      v2 = v12 + 1;
      if (v12 + 1 >= v7)
        return swift_release();
      v13 = *(_QWORD *)(v3 + 8 * v2);
      if (!v13)
      {
        v2 = v12 + 2;
        if (v12 + 2 >= v7)
          return swift_release();
        v13 = *(_QWORD *)(v3 + 8 * v2);
        if (!v13)
        {
          v2 = v12 + 3;
          if (v12 + 3 >= v7)
            return swift_release();
          v13 = *(_QWORD *)(v3 + 8 * v2);
          if (!v13)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v13 - 1) & v13;
    v9 = __clz(__rbit64(v13)) + (v2 << 6);
LABEL_5:
    v10 = *(_QWORD *)(v1 + 48) + 40 * v9;
    v17 = *(_BYTE *)(v10 + 32);
    v11 = *(_OWORD *)(v10 + 16);
    v16[0] = *(_OWORD *)v10;
    v16[1] = v11;
    v18 = v16[0];
    v19 = v11;
    sub_1C13583C8((uint64_t)&v18);
    sub_1C13583C8((uint64_t)&v19);
    sub_1C135022C((uint64_t)v15, (uint64_t)v16);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v14 = v12 + 4;
  if (v14 >= v7)
    return swift_release();
  v13 = *(_QWORD *)(v3 + 8 * v14);
  if (v13)
  {
    v2 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v2 >= v7)
      return swift_release();
    v13 = *(_QWORD *)(v3 + 8 * v2);
    ++v14;
    if (v13)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for AppEventObserver()
{
  return objc_opt_self();
}

unint64_t sub_1C13C8448(unint64_t result)
{
  return sub_1C13C8564(result);
}

uint64_t sub_1C13C8454(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  _BYTE v5[32];
  uint64_t v6;

  v6 = MEMORY[0x1E0DEE9D8];
  v2 = *(_QWORD *)(a1 + 16);
  sub_1C1426F50();
  if (!v2)
    return v6;
  for (i = a1 + 32; ; i += 32)
  {
    sub_1C132AE60(i, (uint64_t)v5);
    sub_1C13CB8B4();
    if (!swift_dynamicCast())
      break;
    sub_1C1426F38();
    sub_1C1426F5C();
    sub_1C1426F68();
    sub_1C1426F44();
    if (!--v2)
      return v6;
  }
  swift_release();

  return 0;
}

unint64_t sub_1C13C8558(unint64_t result)
{
  return sub_1C13C8564(result);
}

unint64_t sub_1C13C8564(unint64_t result)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  os_unfair_lock_s *v18;

  if (result)
  {
    result = sub_1C13C8454(result);
    if (result)
    {
      v2 = result;
      if (result >> 62)
      {
        swift_bridgeObjectRetain();
        result = sub_1C1426F98();
        v3 = result;
        if (result)
          goto LABEL_5;
      }
      else
      {
        v3 = *(_QWORD *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
        result = swift_bridgeObjectRetain();
        if (v3)
        {
LABEL_5:
          if (v3 < 1)
          {
            __break(1u);
            return result;
          }
          v4 = 0;
          v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          do
          {
            if ((v2 & 0xC000000000000001) != 0)
              v6 = (id)MEMORY[0x1C3BACBFC](v4, v2);
            else
              v6 = *(id *)(v2 + 8 * v4 + 32);
            v7 = v6;
            v8 = objc_msgSend(v6, sel_bundleIdentifier);
            if (v8)
            {
              v9 = v8;
              v10 = sub_1C1426A88();
              v12 = v11;

              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v5 = sub_1C136C3E0(0, v5[2] + 1, 1, v5);
              v14 = v5[2];
              v13 = v5[3];
              if (v14 >= v13 >> 1)
                v5 = sub_1C136C3E0((_QWORD *)(v13 > 1), v14 + 1, 1, v5);
              v5[2] = v14 + 1;
              v15 = &v5[2 * v14];
              v15[4] = v10;
              v15[5] = v12;
            }
            else
            {

            }
            ++v4;
          }
          while (v3 != v4);
          goto LABEL_20;
        }
      }
      v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_20:
      swift_bridgeObjectRelease_n();
      v16 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC11SessionCore16AppEventObserver_knownClientStore), *(_QWORD *)(v1 + OBJC_IVAR____TtC11SessionCore16AppEventObserver_knownClientStore + 24));
      v17 = *v16;
      v18 = *(os_unfair_lock_s **)(*(_QWORD *)(*v16 + 40) + 16);
      os_unfair_lock_lock(v18);
      sub_1C13CF198((uint64_t)v5, v17);
      os_unfair_lock_unlock(v18);
      sub_1C14268CC();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1C13C8770(void *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  id v5;

  if (a3)
    v4 = sub_1C1426B90();
  else
    v4 = 0;
  v5 = a1;
  sub_1C13C8564(v4);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C13C87D8()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC11SessionCore16AppEventObserver_lock);
  swift_retain();
  os_unfair_lock_lock(v1 + 4);
  sub_1C13CA644(&v4);
  v2 = v4;
  os_unfair_lock_unlock(v1 + 4);
  swift_release();
  return v2;
}

uint64_t sub_1C13C885C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t inited;
  uint64_t v33;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = swift_bridgeObjectRetain();
  v2 = sub_1C13CA8A8(v1, (uint64_t (*)(char *, unint64_t, uint64_t))sub_1C13CAB88);
  v3 = *(_QWORD *)(v2 + 16);
  v4 = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v42 = MEMORY[0x1E0DEE9D8];
    sub_1C1336990(0, v3, 0);
    v37 = v42;
    result = sub_1C13CAE6C(v2);
    v6 = result;
    v8 = v7;
    v10 = v9 & 1;
    while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(v2 + 32))
    {
      if (((*(_QWORD *)(v2 + 56 + (((unint64_t)v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
        goto LABEL_25;
      if (*(_DWORD *)(v2 + 36) != (_DWORD)v8)
        goto LABEL_26;
      v35 = v10;
      v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 40 * v6);
      v38 = *v11;
      v40 = v11[1];
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_1C14252D0();
      swift_bridgeObjectRetain();
      sub_1C14252D0();
      swift_bridgeObjectRelease();
      sub_1C14252D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 = v37;
      v14 = *(_QWORD *)(v37 + 16);
      v13 = *(_QWORD *)(v37 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1C1336990(v13 > 1, v14 + 1, 1);
        v12 = v37;
      }
      *(_QWORD *)(v12 + 16) = v14 + 1;
      v37 = v12;
      v15 = v12 + 16 * v14;
      *(_QWORD *)(v15 + 32) = v38;
      *(_QWORD *)(v15 + 40) = v40;
      result = sub_1C13373DC(v6, v8, v35 & 1, v2);
      v6 = result;
      v8 = v16;
      v10 = v17 & 1;
      if (!--v3)
      {
        sub_1C133770C(result, v16, v10);
        swift_release();
        v4 = MEMORY[0x1E0DEE9D8];
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  swift_release();
  v37 = MEMORY[0x1E0DEE9D8];
LABEL_12:
  v18 = swift_bridgeObjectRetain();
  v19 = sub_1C13CA8A8(v18, (uint64_t (*)(char *, unint64_t, uint64_t))sub_1C13CAA10);
  v20 = *(_QWORD *)(v19 + 16);
  if (v20)
  {
    sub_1C1336990(0, v20, 0);
    result = sub_1C13CAE6C(v19);
    v21 = result;
    v23 = v22;
    v25 = v24 & 1;
    while ((v21 & 0x8000000000000000) == 0 && v21 < 1 << *(_BYTE *)(v19 + 32))
    {
      if (((*(_QWORD *)(v19 + 56 + (((unint64_t)v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
        goto LABEL_28;
      if (*(_DWORD *)(v19 + 36) != (_DWORD)v23)
        goto LABEL_29;
      v36 = v25;
      v26 = (uint64_t *)(*(_QWORD *)(v19 + 48) + 40 * v21);
      v39 = *v26;
      v41 = v26[1];
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_1C14252D0();
      swift_bridgeObjectRetain();
      sub_1C14252D0();
      swift_bridgeObjectRelease();
      sub_1C14252D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v27 = *(_QWORD *)(v4 + 16);
      v28 = *(_QWORD *)(v4 + 24);
      if (v27 >= v28 >> 1)
        sub_1C1336990(v28 > 1, v27 + 1, 1);
      *(_QWORD *)(v4 + 16) = v27 + 1;
      v29 = v4 + 16 * v27;
      *(_QWORD *)(v29 + 32) = v39;
      *(_QWORD *)(v29 + 40) = v41;
      result = sub_1C13373DC(v21, v23, v36 & 1, v19);
      v21 = result;
      v23 = v30;
      v25 = v31 & 1;
      if (!--v20)
      {
        sub_1C133770C(result, v30, v25);
        swift_release();
        goto LABEL_23;
      }
    }
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    return result;
  }
  swift_release();
LABEL_23:
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793A60);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1428070;
  *(_QWORD *)(inited + 32) = 0x73694C776F6C6C61;
  *(_QWORD *)(inited + 40) = 0xE900000000000074;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797A68);
  *(_QWORD *)(inited + 48) = v4;
  *(_QWORD *)(inited + 72) = v33;
  *(_QWORD *)(inited + 80) = 0x7473694C796E6564;
  *(_QWORD *)(inited + 120) = v33;
  *(_QWORD *)(inited + 88) = 0xE800000000000000;
  *(_QWORD *)(inited + 96) = v37;
  result = sub_1C133204C(inited);
  *a1 = result;
  return result;
}

uint64_t sub_1C13C8CE8()
{
  return sub_1C13C87D8();
}

uint64_t sub_1C13C8D08()
{
  _BYTE *v0;

  if (*v0)
    return 2037278052;
  else
    return 0x776F6C6C61;
}

uint64_t sub_1C13C8D38()
{
  sub_1C14270E8();
  swift_bridgeObjectRetain();
  sub_1C1426AD0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C1426AD0();
  swift_bridgeObjectRelease();
  sub_1C14270F4();
  return sub_1C1427100();
}

uint64_t sub_1C13C8DD4()
{
  swift_bridgeObjectRetain();
  sub_1C1426AD0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C1426AD0();
  swift_bridgeObjectRelease();
  return sub_1C14270F4();
}

uint64_t sub_1C13C8E58()
{
  sub_1C14270E8();
  swift_bridgeObjectRetain();
  sub_1C1426AD0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C1426AD0();
  swift_bridgeObjectRelease();
  sub_1C14270F4();
  return sub_1C1427100();
}

uint64_t sub_1C13C8EF0(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[2];
  char v6;
  _OWORD v7[2];
  char v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v6 = *(_BYTE *)(a1 + 32);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v8 = *(_BYTE *)(a2 + 32);
  return sub_1C13CAF0C((uint64_t)v5, (uint64_t)v7) & 1;
}

uint64_t sub_1C13C8F38()
{
  return sub_1C13C9C4C(&OBJC_IVAR____TtC11SessionCoreP33_03222CA904BB2C7146C40B12EAF3EEE332ManagedConfigRestrictionProvider____lazy_storage___restrictionsPublisher);
}

id sub_1C13C8F4C()
{
  char *v0;
  uint64_t v1;
  char *v2;
  char *v3;
  id result;
  objc_super v5;
  uint64_t v6;

  *(_QWORD *)&v0[OBJC_IVAR____TtC11SessionCoreP33_03222CA904BB2C7146C40B12EAF3EEE332ManagedConfigRestrictionProvider____lazy_storage___restrictionsPublisher] = 0;
  v1 = OBJC_IVAR____TtC11SessionCoreP33_03222CA904BB2C7146C40B12EAF3EEE332ManagedConfigRestrictionProvider__restrictionsPublisher;
  v6 = MEMORY[0x1E0DEE9E8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793570);
  swift_allocObject();
  v2 = v0;
  *(_QWORD *)&v0[v1] = sub_1C14268F0();
  v3 = &v2[OBJC_IVAR____TtC11SessionCoreP33_03222CA904BB2C7146C40B12EAF3EEE332ManagedConfigRestrictionProvider_name];
  strcpy(&v2[OBJC_IVAR____TtC11SessionCoreP33_03222CA904BB2C7146C40B12EAF3EEE332ManagedConfigRestrictionProvider_name], "ManagedConfig");
  *((_WORD *)v3 + 7) = -4864;
  result = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
  if (result)
  {
    *(_QWORD *)&v2[OBJC_IVAR____TtC11SessionCoreP33_03222CA904BB2C7146C40B12EAF3EEE332ManagedConfigRestrictionProvider_profileConnection] = result;

    v5.receiver = v2;
    v5.super_class = (Class)type metadata accessor for ManagedConfigRestrictionProvider();
    return objc_msgSendSuper2(&v5, sel_init);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1C13C906C()
{
  char *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  char *v4;
  _QWORD v5[6];

  v1 = *(void **)&v0[OBJC_IVAR____TtC11SessionCoreP33_03222CA904BB2C7146C40B12EAF3EEE332ManagedConfigRestrictionProvider_profileConnection];
  objc_msgSend(v1, sel_registerObserver_, v0);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v0;
  v5[4] = sub_1C13CB508;
  v5[5] = v2;
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 1107296256;
  v5[2] = sub_1C13DCF7C;
  v5[3] = &block_descriptor_19;
  v3 = _Block_copy(v5);
  v4 = v0;
  swift_release();
  objc_msgSend(v1, sel_checkInWithCompletion_, v3);
  _Block_release(v3);
}

void sub_1C13C913C(void *a1)
{
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  NSObject *oslog;
  uint64_t v15;

  if (a1)
  {
    v2 = a1;
    if (qword_1ED791DD0 != -1)
      swift_once();
    v3 = sub_1C1426854();
    __swift_project_value_buffer(v3, (uint64_t)qword_1ED7984D8);
    v4 = a1;
    v5 = a1;
    oslog = sub_1C1426848();
    v6 = sub_1C1426C68();
    if (os_log_type_enabled(oslog, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v7 = 138543362;
      v9 = a1;
      v15 = _swift_stdlib_bridgeErrorToNSError();
      sub_1C1426DB8();
      *v8 = v15;

      _os_log_impl(&dword_1C1324000, oslog, v6, "Failed to check in profile connection: %{public}@", v7, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DACE0);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v8, -1, -1);
      MEMORY[0x1C3BAD3F4](v7, -1, -1);

    }
    else
    {

    }
  }
  else
  {
    if (qword_1ED791DD0 != -1)
      swift_once();
    v10 = sub_1C1426854();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ED7984D8);
    v11 = sub_1C1426848();
    v12 = sub_1C1426C80();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_1C1324000, v11, v12, "Checked in profile connection", v13, 2u);
      MEMORY[0x1C3BAD3F4](v13, -1, -1);
    }

    sub_1C13C9450();
  }
}

id sub_1C13C9450()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id result;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  int64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  unint64_t v43;
  int64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[4];
  char v48;
  _QWORD v49[4];
  char v50;

  v1 = v0;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC11SessionCoreP33_03222CA904BB2C7146C40B12EAF3EEE332ManagedConfigRestrictionProvider_profileConnection);
  v3 = objc_msgSend(v2, sel_effectiveWhitelistedAppBundleIDs);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1C1426BFC();

    v6 = sub_1C13C9814(v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  result = objc_msgSend(v2, sel_effectiveBlockedAppBundleIDs);
  if (result)
  {
    v8 = result;
    v9 = sub_1C1426BFC();

    v10 = sub_1C13C9814(v9);
    result = (id)swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  v46 = MEMORY[0x1E0DEE9E8];
  if (v6)
  {
    v11 = 0;
    v12 = v6 + 56;
    v13 = 1 << *(_BYTE *)(v6 + 32);
    v14 = -1;
    if (v13 < 64)
      v14 = ~(-1 << v13);
    v15 = v14 & *(_QWORD *)(v6 + 56);
    v16 = (uint64_t *)(v1
                    + OBJC_IVAR____TtC11SessionCoreP33_03222CA904BB2C7146C40B12EAF3EEE332ManagedConfigRestrictionProvider_name);
    v17 = (unint64_t)(v13 + 63) >> 6;
    while (1)
    {
      if (v15)
      {
        v18 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v19 = v18 | (v11 << 6);
      }
      else
      {
        v25 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
          __break(1u);
LABEL_53:
          __break(1u);
          goto LABEL_54;
        }
        if (v25 >= v17)
          goto LABEL_28;
        v26 = *(_QWORD *)(v12 + 8 * v25);
        ++v11;
        if (!v26)
        {
          v11 = v25 + 1;
          if (v25 + 1 >= v17)
            goto LABEL_28;
          v26 = *(_QWORD *)(v12 + 8 * v11);
          if (!v26)
          {
            v11 = v25 + 2;
            if (v25 + 2 >= v17)
              goto LABEL_28;
            v26 = *(_QWORD *)(v12 + 8 * v11);
            if (!v26)
            {
              v27 = v25 + 3;
              if (v27 >= v17)
              {
LABEL_28:
                result = (id)swift_release();
                break;
              }
              v26 = *(_QWORD *)(v12 + 8 * v27);
              if (!v26)
              {
                while (1)
                {
                  v11 = v27 + 1;
                  if (__OFADD__(v27, 1))
                    break;
                  if (v11 >= v17)
                    goto LABEL_28;
                  v26 = *(_QWORD *)(v12 + 8 * v11);
                  ++v27;
                  if (v26)
                    goto LABEL_27;
                }
LABEL_54:
                __break(1u);
                goto LABEL_55;
              }
              v11 = v27;
            }
          }
        }
LABEL_27:
        v15 = (v26 - 1) & v26;
        v19 = __clz(__rbit64(v26)) + (v11 << 6);
      }
      v20 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v19);
      v22 = *v20;
      v21 = v20[1];
      v23 = *v16;
      v24 = v16[1];
      v47[0] = v22;
      v47[1] = v21;
      v47[2] = v23;
      v47[3] = v24;
      v48 = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C135022C((uint64_t)v49, (uint64_t)v47);
      swift_bridgeObjectRelease();
      result = (id)swift_bridgeObjectRelease();
    }
  }
  if (!v10)
  {
LABEL_51:
    v45 = v46;
    sub_1C14268E4();
    return (id)swift_bridgeObjectRelease();
  }
  v28 = 0;
  v29 = v10 + 56;
  v30 = 1 << *(_BYTE *)(v10 + 32);
  v31 = -1;
  if (v30 < 64)
    v31 = ~(-1 << v30);
  v32 = v31 & *(_QWORD *)(v10 + 56);
  v33 = (uint64_t *)(v1
                  + OBJC_IVAR____TtC11SessionCoreP33_03222CA904BB2C7146C40B12EAF3EEE332ManagedConfigRestrictionProvider_name);
  v34 = (unint64_t)(v30 + 63) >> 6;
  while (1)
  {
    if (v32)
    {
      v35 = __clz(__rbit64(v32));
      v32 &= v32 - 1;
      v36 = v35 | (v28 << 6);
      goto LABEL_34;
    }
    v42 = v28 + 1;
    if (__OFADD__(v28, 1))
      goto LABEL_53;
    if (v42 >= v34)
    {
LABEL_50:
      swift_release();
      goto LABEL_51;
    }
    v43 = *(_QWORD *)(v29 + 8 * v42);
    ++v28;
    if (!v43)
    {
      v28 = v42 + 1;
      if (v42 + 1 >= v34)
        goto LABEL_50;
      v43 = *(_QWORD *)(v29 + 8 * v28);
      if (!v43)
      {
        v28 = v42 + 2;
        if (v42 + 2 >= v34)
          goto LABEL_50;
        v43 = *(_QWORD *)(v29 + 8 * v28);
        if (!v43)
          break;
      }
    }
LABEL_49:
    v32 = (v43 - 1) & v43;
    v36 = __clz(__rbit64(v43)) + (v28 << 6);
LABEL_34:
    v37 = (uint64_t *)(*(_QWORD *)(v10 + 48) + 16 * v36);
    v39 = *v37;
    v38 = v37[1];
    v40 = *v33;
    v41 = v33[1];
    v49[0] = v39;
    v49[1] = v38;
    v49[2] = v40;
    v49[3] = v41;
    v50 = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C135022C((uint64_t)&v45, (uint64_t)v49);
    swift_bridgeObjectRelease();
    result = (id)swift_bridgeObjectRelease();
  }
  v44 = v42 + 3;
  if (v44 >= v34)
    goto LABEL_50;
  v43 = *(_QWORD *)(v29 + 8 * v44);
  if (v43)
  {
    v28 = v44;
    goto LABEL_49;
  }
  while (1)
  {
    v28 = v44 + 1;
    if (__OFADD__(v44, 1))
      break;
    if (v28 >= v34)
      goto LABEL_50;
    v43 = *(_QWORD *)(v29 + 8 * v28);
    ++v44;
    if (v43)
      goto LABEL_49;
  }
LABEL_55:
  __break(1u);
  return result;
}

uint64_t sub_1C13C9814(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t i;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793A20);
    v2 = sub_1C1426EF0();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E8];
  }
  v19 = v2;
  v3 = a1 + 56;
  v4 = -1;
  v5 = -1 << *(_BYTE *)(a1 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(a1 + 56);
  v7 = (unint64_t)(63 - v5) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  if (!v6)
    goto LABEL_8;
LABEL_7:
  v10 = (v6 - 1) & v6;
  v11 = __clz(__rbit64(v6)) | (v9 << 6);
  for (i = v9; ; v11 = __clz(__rbit64(v14)) + (i << 6))
  {
    sub_1C13C3650(*(_QWORD *)(a1 + 48) + 40 * v11, (uint64_t)&v18);
    if ((swift_dynamicCast() & 1) == 0 || !v17)
    {
      swift_release();
      sub_1C133F908();
      swift_bridgeObjectRelease();
      return 0;
    }
    result = sub_1C13CAD04(v16, v17);
    v9 = i;
    v6 = v10;
    if (v10)
      goto LABEL_7;
LABEL_8:
    v13 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v13 >= v7)
      goto LABEL_29;
    v14 = *(_QWORD *)(v3 + 8 * v13);
    i = v9 + 1;
    if (!v14)
    {
      i = v9 + 2;
      if (v9 + 2 >= v7)
        goto LABEL_29;
      v14 = *(_QWORD *)(v3 + 8 * i);
      if (!v14)
      {
        i = v9 + 3;
        if (v9 + 3 >= v7)
          goto LABEL_29;
        v14 = *(_QWORD *)(v3 + 8 * i);
        if (!v14)
        {
          i = v9 + 4;
          if (v9 + 4 >= v7)
            goto LABEL_29;
          v14 = *(_QWORD *)(v3 + 8 * i);
          if (!v14)
            break;
        }
      }
    }
LABEL_23:
    v10 = (v14 - 1) & v14;
  }
  v15 = v9 + 5;
  if (v9 + 5 >= v7)
  {
LABEL_29:
    sub_1C133F908();
    return v19;
  }
  v14 = *(_QWORD *)(v3 + 8 * v15);
  if (v14)
  {
    i = v9 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    i = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (i >= v7)
      goto LABEL_29;
    v14 = *(_QWORD *)(v3 + 8 * i);
    ++v15;
    if (v14)
      goto LABEL_23;
  }
LABEL_31:
  __break(1u);
  return result;
}

id sub_1C13C9A64()
{
  return sub_1C13C9A84(&OBJC_IVAR____TtC11SessionCoreP33_03222CA904BB2C7146C40B12EAF3EEE332ManagedConfigRestrictionProvider_profileConnection, (SEL *)&selRef_unregisterObserver_, 0, (uint64_t (*)(uint64_t))type metadata accessor for ManagedConfigRestrictionProvider);
}

id sub_1C13C9A84(_QWORD *a1, SEL *a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  char *v4;
  objc_super v8;

  objc_msgSend(*(id *)&v4[*a1], *a2, v4);
  v8.receiver = v4;
  v8.super_class = (Class)a4(a3);
  return objc_msgSendSuper2(&v8, sel_dealloc);
}

id sub_1C13C9B04(char *a1, uint64_t a2, _QWORD *a3, SEL *a4, uint64_t a5, uint64_t (*a6)(uint64_t))
{
  void *v9;
  char *v10;
  objc_super v12;

  v9 = *(void **)&a1[*a3];
  v10 = a1;
  objc_msgSend(v9, *a4, v10);
  v12.receiver = v10;
  v12.super_class = (Class)a6(a5);
  return objc_msgSendSuper2(&v12, sel_dealloc);
}

uint64_t type metadata accessor for ManagedConfigRestrictionProvider()
{
  return objc_opt_self();
}

uint64_t sub_1C13C9BFC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtC11SessionCoreP33_03222CA904BB2C7146C40B12EAF3EEE332ManagedConfigRestrictionProvider_name);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C13C9C38()
{
  return sub_1C13C9C4C(&OBJC_IVAR____TtC11SessionCoreP33_03222CA904BB2C7146C40B12EAF3EEE332AppProtectionRestrictionProvider____lazy_storage___restrictionsPublisher);
}

uint64_t sub_1C13C9C4C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = *(_QWORD *)(v1 + *a1);
  if (v3)
  {
    v4 = v3;
  }
  else
  {
    v5 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793570);
    sub_1C132C820(&qword_1ED7933B8, &qword_1ED793570, MEMORY[0x1E0C95FB8]);
    v4 = sub_1C1426908();
    *(_QWORD *)(v5 + v2) = v4;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v4;
}

id sub_1C13C9CF8()
{
  char *v0;
  uint64_t v1;
  char *v2;
  char *v3;
  objc_super v5;
  uint64_t v6;

  *(_QWORD *)&v0[OBJC_IVAR____TtC11SessionCoreP33_03222CA904BB2C7146C40B12EAF3EEE332AppProtectionRestrictionProvider____lazy_storage___restrictionsPublisher] = 0;
  v1 = OBJC_IVAR____TtC11SessionCoreP33_03222CA904BB2C7146C40B12EAF3EEE332AppProtectionRestrictionProvider__restrictionsPublisher;
  v6 = MEMORY[0x1E0DEE9E8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793570);
  swift_allocObject();
  v2 = v0;
  *(_QWORD *)&v0[v1] = sub_1C14268F0();
  *(_QWORD *)&v2[OBJC_IVAR____TtC11SessionCoreP33_03222CA904BB2C7146C40B12EAF3EEE332AppProtectionRestrictionProvider_subjectMonitorSubscription] = 0;
  v3 = &v2[OBJC_IVAR____TtC11SessionCoreP33_03222CA904BB2C7146C40B12EAF3EEE332AppProtectionRestrictionProvider_name];
  strcpy(&v2[OBJC_IVAR____TtC11SessionCoreP33_03222CA904BB2C7146C40B12EAF3EEE332AppProtectionRestrictionProvider_name], "AppProtection");
  *((_WORD *)v3 + 7) = -4864;

  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for AppProtectionRestrictionProvider();
  return objc_msgSendSuper2(&v5, sel_init);
}

id sub_1C13C9DF0()
{
  char *v0;
  void *v1;
  objc_super v3;

  v1 = *(void **)&v0[OBJC_IVAR____TtC11SessionCoreP33_03222CA904BB2C7146C40B12EAF3EEE332AppProtectionRestrictionProvider_subjectMonitorSubscription];
  if (v1)
    objc_msgSend(v1, sel_invalidate);
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for AppProtectionRestrictionProvider();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for AppProtectionRestrictionProvider()
{
  return objc_opt_self();
}

uint64_t sub_1C13C9F28()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;

  v1 = v0;
  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(v2, sel_lockedApplications);
  sub_1C1426C44();
  v4 = sub_1C1426B90();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1C1426F98();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = MEMORY[0x1E0DEE9D8];
  v38 = v1;
  if (v5)
  {
    v39 = MEMORY[0x1E0DEE9D8];
    result = sub_1C1336990(0, v5 & ~(v5 >> 63), 0);
    if (v5 < 0)
    {
      __break(1u);
      goto LABEL_30;
    }
    v8 = 0;
    v9 = v39;
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
        v10 = (id)MEMORY[0x1C3BACBFC](v8, v4);
      else
        v10 = *(id *)(v4 + 8 * v8 + 32);
      v11 = v10;
      v12 = objc_msgSend(v10, sel_bundleIdentifier);
      v13 = sub_1C1426A88();
      v15 = v14;

      v17 = *(_QWORD *)(v39 + 16);
      v16 = *(_QWORD *)(v39 + 24);
      if (v17 >= v16 >> 1)
        sub_1C1336990(v16 > 1, v17 + 1, 1);
      ++v8;
      *(_QWORD *)(v39 + 16) = v17 + 1;
      v18 = v39 + 16 * v17;
      *(_QWORD *)(v18 + 32) = v13;
      *(_QWORD *)(v18 + 40) = v15;
    }
    while (v5 != v8);
    swift_bridgeObjectRelease();
    v6 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    swift_bridgeObjectRelease();
    v9 = MEMORY[0x1E0DEE9D8];
  }
  v19 = sub_1C1375140(v9);
  swift_bridgeObjectRelease();
  v20 = objc_msgSend(v2, sel_hiddenApplications);
  v21 = sub_1C1426B90();

  if (!(v21 >> 62))
  {
    v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v22)
      goto LABEL_16;
LABEL_27:
    swift_bridgeObjectRelease();
    v24 = MEMORY[0x1E0DEE9D8];
LABEL_28:
    v34 = sub_1C1375140(v24);
    swift_bridgeObjectRelease();
    v35 = sub_1C13CA65C(v34, v19);
    v36 = v38;
    v37 = sub_1C13CAF8C(v35, (uint64_t)v36);
    swift_bridgeObjectRelease();

    sub_1C1375324(v37);
    swift_bridgeObjectRelease();
    sub_1C14268E4();
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  v22 = sub_1C1426F98();
  swift_bridgeObjectRelease();
  if (!v22)
    goto LABEL_27;
LABEL_16:
  result = sub_1C1336990(0, v22 & ~(v22 >> 63), 0);
  if ((v22 & 0x8000000000000000) == 0)
  {
    v23 = 0;
    v24 = v6;
    do
    {
      if ((v21 & 0xC000000000000001) != 0)
        v25 = (id)MEMORY[0x1C3BACBFC](v23, v21);
      else
        v25 = *(id *)(v21 + 8 * v23 + 32);
      v26 = v25;
      v27 = objc_msgSend(v25, sel_bundleIdentifier);
      v28 = sub_1C1426A88();
      v30 = v29;

      v32 = *(_QWORD *)(v24 + 16);
      v31 = *(_QWORD *)(v24 + 24);
      if (v32 >= v31 >> 1)
        sub_1C1336990(v31 > 1, v32 + 1, 1);
      ++v23;
      *(_QWORD *)(v24 + 16) = v32 + 1;
      v33 = v24 + 16 * v32;
      *(_QWORD *)(v33 + 32) = v28;
      *(_QWORD *)(v33 + 40) = v30;
    }
    while (v22 != v23);
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C13CA2EC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtC11SessionCoreP33_03222CA904BB2C7146C40B12EAF3EEE332AppProtectionRestrictionProvider_name);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C13CA324()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(objc_msgSend((id)objc_opt_self(), sel_subjectMonitorRegistry), sel_addMonitor_subjectMask_, v0, 1);
  swift_unknownObjectRelease();
  *(_QWORD *)(v0
            + OBJC_IVAR____TtC11SessionCoreP33_03222CA904BB2C7146C40B12EAF3EEE332AppProtectionRestrictionProvider_subjectMonitorSubscription) = v1;
  swift_unknownObjectRelease();
  return sub_1C13C9F28();
}

uint64_t initializeBufferWithCopyOfBuffer for AppRestriction(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for AppRestriction()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AppRestriction(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AppRestriction(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AppRestriction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for AppRestriction(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppRestriction(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppRestriction()
{
  return &type metadata for AppRestriction;
}

unint64_t sub_1C13CA600()
{
  unint64_t result;

  result = qword_1ED793518;
  if (!qword_1ED793518)
  {
    result = MEMORY[0x1C3BAD334](&unk_1C142A450, &type metadata for AppRestriction);
    atomic_store(result, (unint64_t *)&qword_1ED793518);
  }
  return result;
}

uint64_t sub_1C13CA644@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C13C885C(a1);
}

uint64_t sub_1C13CA65C(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = result;
  v3 = 0;
  v18 = a2;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v3);
      if (!v15)
      {
        v3 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v3);
        if (!v15)
        {
          v3 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v3);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1C132FAD4(&v17, v12, v13);
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v3);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1C13CA7D8(void (*a1)(void))
{
  a1();
  return _swift_stdlib_bridgeErrorToNSError();
}

void sub_1C13CA7F8(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = (void *)a4();
  v7 = *a1 + 8;
  sub_1C1426DB8();
  *a1 = v7;
  v8 = *a2;
  if (*a2)
  {
    *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {

  }
}

uint64_t sub_1C13CA8A8(uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, unint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  unint64_t v6;
  size_t v7;
  uint64_t v8;
  void *v9;
  _QWORD v11[2];

  v4 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_BYTE *)(isStackAllocationSafe + 32);
  v6 = (unint64_t)((1 << v5) + 63) >> 6;
  v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    v8 = a2((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v6, v4);
    swift_release();
    if (v2)
      swift_willThrow();
  }
  else
  {
    v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    v8 = a2((char *)v9, v6, v4);
    swift_release();
    MEMORY[0x1C3BAD3F4](v9, -1, -1);
  }
  return v8;
}

uint64_t sub_1C13CAA10(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t *v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;

  v5 = (unint64_t *)result;
  v6 = 0;
  v7 = 0;
  v8 = a3 + 56;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v7 << 6);
      goto LABEL_5;
    }
    v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v12)
      goto LABEL_24;
    v16 = *(_QWORD *)(v8 + 8 * v15);
    ++v7;
    if (!v16)
    {
      v7 = v15 + 1;
      if (v15 + 1 >= v12)
        goto LABEL_24;
      v16 = *(_QWORD *)(v8 + 8 * v7);
      if (!v16)
      {
        v7 = v15 + 2;
        if (v15 + 2 >= v12)
          goto LABEL_24;
        v16 = *(_QWORD *)(v8 + 8 * v7);
        if (!v16)
          break;
      }
    }
LABEL_20:
    v11 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v7 << 6);
LABEL_5:
    if ((*(_BYTE *)(*(_QWORD *)(a3 + 48) + 40 * v14 + 32) & 1) == 0)
    {
      *(_QWORD *)(result + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v6++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return sub_1C1357964(v5, a2, v6, a3);
      }
    }
  }
  v17 = v15 + 3;
  if (v17 >= v12)
    goto LABEL_24;
  v16 = *(_QWORD *)(v8 + 8 * v17);
  if (v16)
  {
    v7 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    v7 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v7 >= v12)
      goto LABEL_24;
    v16 = *(_QWORD *)(v8 + 8 * v7);
    ++v17;
    if (v16)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1C13CAB88(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t *v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;

  v5 = (unint64_t *)result;
  v6 = 0;
  v7 = 0;
  v8 = a3 + 56;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a3 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v7 << 6);
      goto LABEL_5;
    }
    v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v12)
      goto LABEL_24;
    v16 = *(_QWORD *)(v8 + 8 * v15);
    ++v7;
    if (!v16)
    {
      v7 = v15 + 1;
      if (v15 + 1 >= v12)
        goto LABEL_24;
      v16 = *(_QWORD *)(v8 + 8 * v7);
      if (!v16)
      {
        v7 = v15 + 2;
        if (v15 + 2 >= v12)
          goto LABEL_24;
        v16 = *(_QWORD *)(v8 + 8 * v7);
        if (!v16)
          break;
      }
    }
LABEL_20:
    v11 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v7 << 6);
LABEL_5:
    if (*(_BYTE *)(*(_QWORD *)(a3 + 48) + 40 * v14 + 32) == 1)
    {
      *(_QWORD *)(result + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v6++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return sub_1C1357964(v5, a2, v6, a3);
      }
    }
  }
  v17 = v15 + 3;
  if (v17 >= v12)
    goto LABEL_24;
  v16 = *(_QWORD *)(v8 + 8 * v17);
  if (v16)
  {
    v7 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    v7 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v7 >= v12)
      goto LABEL_24;
    v16 = *(_QWORD *)(v8 + 8 * v7);
    ++v17;
    if (v16)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1C13CAD04(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v5 = *v2;
  sub_1C14270E8();
  sub_1C1426AD0();
  result = sub_1C1427100();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = result & ~v7;
  v9 = v5 + 56;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v10 = *(_QWORD *)(v5 + 48);
    v11 = (_QWORD *)(v10 + 16 * v8);
    v12 = *v11 == a1 && v11[1] == a2;
    if (v12 || (result = sub_1C1427064(), (result & 1) != 0))
    {
LABEL_7:
      v13 = (_QWORD *)(v10 + 16 * v8);
      result = swift_bridgeObjectRelease();
      *v13 = a1;
      v13[1] = a2;
      return result;
    }
    v14 = ~v7;
    while (1)
    {
      v8 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        break;
      v15 = (_QWORD *)(v10 + 16 * v8);
      if (*v15 != a1 || v15[1] != a2)
      {
        result = sub_1C1427064();
        if ((result & 1) == 0)
          continue;
      }
      goto LABEL_7;
    }
  }
  if (*(_QWORD *)(v5 + 16) >= *(_QWORD *)(v5 + 24))
  {
    __break(1u);
    goto LABEL_21;
  }
  *(_QWORD *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) |= 1 << v8;
  v17 = (_QWORD *)(*(_QWORD *)(v5 + 48) + 16 * v8);
  *v17 = a1;
  v17[1] = a2;
  v18 = *(_QWORD *)(v5 + 16);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
  {
LABEL_21:
    __break(1u);
    return result;
  }
  *(_QWORD *)(v5 + 16) = v20;
  return result;
}

uint64_t sub_1C13CAE6C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1C13CAF0C(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  char v5;
  char v6;
  BOOL v7;
  char v8;

  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v4 || (v5 = sub_1C1427064(), v6 = 0, (v5 & 1) != 0))
  {
    v7 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
    if (v7 || (v8 = sub_1C1427064(), v6 = 0, (v8 & 1) != 0))
      v6 = *(_BYTE *)(a1 + 32) ^ *(_BYTE *)(a2 + 32) ^ 1;
  }
  return v6 & 1;
}

uint64_t sub_1C13CAF8C(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v24 = MEMORY[0x1E0DEE9D8];
  sub_1C1336AFC(0, v2, 0);
  v3 = v24;
  result = sub_1C13CAE6C(a1);
  v7 = result;
  v9 = v8;
  v11 = v10 & 1;
  v12 = *(_QWORD *)(a2
                  + OBJC_IVAR____TtC11SessionCoreP33_03222CA904BB2C7146C40B12EAF3EEE332AppProtectionRestrictionProvider_name);
  v13 = *(_QWORD *)(a2
                  + OBJC_IVAR____TtC11SessionCoreP33_03222CA904BB2C7146C40B12EAF3EEE332AppProtectionRestrictionProvider_name
                  + 8);
  v21 = v12;
  while ((v7 & 0x8000000000000000) == 0 && v7 < 1 << *(_BYTE *)(a1 + 32))
  {
    if (((*(_QWORD *)(a1 + 56 + (((unint64_t)v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
      goto LABEL_13;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v9)
      goto LABEL_14;
    v23 = v11;
    v14 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v7);
    v15 = v14[1];
    v22 = *v14;
    v17 = *(_QWORD *)(v24 + 16);
    v16 = *(_QWORD *)(v24 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17 >= v16 >> 1)
      sub_1C1336AFC(v16 > 1, v17 + 1, 1);
    *(_QWORD *)(v24 + 16) = v17 + 1;
    v18 = v24 + 40 * v17;
    *(_QWORD *)(v18 + 32) = v22;
    *(_QWORD *)(v18 + 40) = v15;
    *(_QWORD *)(v18 + 48) = v21;
    *(_QWORD *)(v18 + 56) = v13;
    *(_BYTE *)(v18 + 64) = 1;
    result = sub_1C13373DC(v7, v9, v23 & 1, a1);
    v7 = result;
    v9 = v19;
    v11 = v20 & 1;
    if (!--v2)
    {
      sub_1C133770C(result, v19, v11);
      return v3;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_1C13CB138(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  char v20;
  unint64_t *v24;
  uint64_t v25;

  v24 = (unint64_t *)result;
  v25 = 0;
  v8 = 0;
  v9 = a3 + 56;
  v10 = 1 << *(_BYTE *)(a3 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(a3 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (v12)
  {
    v14 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    v15 = v14 | (v8 << 6);
LABEL_21:
    v19 = *(_QWORD *)(a3 + 48) + 40 * v15;
    result = *(_QWORD *)v19;
    v20 = *(_BYTE *)(v19 + 32);
    if (*(_QWORD *)v19 == a4 && *(_QWORD *)(v19 + 8) == a5)
    {
      if ((*(_BYTE *)(v19 + 32) & 1) == 0)
        goto LABEL_27;
    }
    else
    {
      result = sub_1C1427064();
      if (!(v20 & 1 | ((result & 1) == 0)))
      {
LABEL_27:
        *(unint64_t *)((char *)v24 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
        if (__OFADD__(v25++, 1))
        {
          __break(1u);
LABEL_30:
          swift_retain();
          return sub_1C1357964(v24, a2, v25, a3);
        }
      }
    }
  }
  v16 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_32;
  }
  if (v16 >= v13)
    goto LABEL_30;
  v17 = *(_QWORD *)(v9 + 8 * v16);
  ++v8;
  if (v17)
    goto LABEL_20;
  v8 = v16 + 1;
  if (v16 + 1 >= v13)
    goto LABEL_30;
  v17 = *(_QWORD *)(v9 + 8 * v8);
  if (v17)
    goto LABEL_20;
  v8 = v16 + 2;
  if (v16 + 2 >= v13)
    goto LABEL_30;
  v17 = *(_QWORD *)(v9 + 8 * v8);
  if (v17)
  {
LABEL_20:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v8 << 6);
    goto LABEL_21;
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_30;
  v17 = *(_QWORD *)(v9 + 8 * v18);
  if (v17)
  {
    v8 = v18;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v8 >= v13)
      goto LABEL_30;
    v17 = *(_QWORD *)(v9 + 8 * v8);
    ++v18;
    if (v17)
      goto LABEL_20;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1C13CB30C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  int v20;
  unint64_t *v24;
  uint64_t v25;

  v24 = (unint64_t *)result;
  v25 = 0;
  v8 = 0;
  v9 = a3 + 56;
  v10 = 1 << *(_BYTE *)(a3 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(a3 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (v12)
  {
    v14 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    v15 = v14 | (v8 << 6);
LABEL_21:
    v19 = *(_QWORD *)(a3 + 48) + 40 * v15;
    result = *(_QWORD *)v19;
    v20 = *(unsigned __int8 *)(v19 + 32);
    if (*(_QWORD *)v19 == a4 && *(_QWORD *)(v19 + 8) == a5)
    {
      if ((v20 & 1) != 0)
        goto LABEL_27;
    }
    else
    {
      result = sub_1C1427064();
      if ((result & v20) == 1)
      {
LABEL_27:
        *(unint64_t *)((char *)v24 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
        if (__OFADD__(v25++, 1))
        {
          __break(1u);
LABEL_30:
          swift_retain();
          return sub_1C1357964(v24, a2, v25, a3);
        }
      }
    }
  }
  v16 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_32;
  }
  if (v16 >= v13)
    goto LABEL_30;
  v17 = *(_QWORD *)(v9 + 8 * v16);
  ++v8;
  if (v17)
    goto LABEL_20;
  v8 = v16 + 1;
  if (v16 + 1 >= v13)
    goto LABEL_30;
  v17 = *(_QWORD *)(v9 + 8 * v8);
  if (v17)
    goto LABEL_20;
  v8 = v16 + 2;
  if (v16 + 2 >= v13)
    goto LABEL_30;
  v17 = *(_QWORD *)(v9 + 8 * v8);
  if (v17)
  {
LABEL_20:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v8 << 6);
    goto LABEL_21;
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_30;
  v17 = *(_QWORD *)(v9 + 8 * v18);
  if (v17)
  {
    v8 = v18;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v8 >= v13)
      goto LABEL_30;
    v17 = *(_QWORD *)(v9 + 8 * v8);
    ++v18;
    if (v17)
      goto LABEL_20;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1C13CB4E4()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1C13CB508(void *a1)
{
  sub_1C13C913C(a1);
}

uint64_t sub_1C13CB510(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  unint64_t *v23;
  uint64_t v24;

  v23 = (unint64_t *)result;
  v8 = 0;
  v9 = 0;
  v10 = a3 + 56;
  v11 = 1 << *(_BYTE *)(a3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(a3 + 56);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (2)
  {
    v24 = v8;
    do
    {
      if (v13)
      {
        v15 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v16 = v15 | (v9 << 6);
      }
      else
      {
        v17 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
LABEL_30:
          __break(1u);
          goto LABEL_31;
        }
        if (v17 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v10 + 8 * v17);
        ++v9;
        if (!v18)
        {
          v9 = v17 + 1;
          if (v17 + 1 >= v14)
            goto LABEL_28;
          v18 = *(_QWORD *)(v10 + 8 * v9);
          if (!v18)
          {
            v9 = v17 + 2;
            if (v17 + 2 >= v14)
              goto LABEL_28;
            v18 = *(_QWORD *)(v10 + 8 * v9);
            if (!v18)
            {
              v19 = v17 + 3;
              if (v19 >= v14)
              {
LABEL_28:
                swift_retain();
                return sub_1C1357964(v23, a2, v24, a3);
              }
              v18 = *(_QWORD *)(v10 + 8 * v19);
              if (!v18)
              {
                while (1)
                {
                  v9 = v19 + 1;
                  if (__OFADD__(v19, 1))
                    goto LABEL_30;
                  if (v9 >= v14)
                    goto LABEL_28;
                  v18 = *(_QWORD *)(v10 + 8 * v9);
                  ++v19;
                  if (v18)
                    goto LABEL_21;
                }
              }
              v9 = v19;
            }
          }
        }
LABEL_21:
        v13 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v9 << 6);
      }
      v20 = *(_QWORD *)(a3 + 48) + 40 * v16;
      result = *(_QWORD *)(v20 + 16);
      if (result == a4 && *(_QWORD *)(v20 + 24) == a5)
        break;
      result = sub_1C1427064();
    }
    while ((result & 1) == 0);
    *(unint64_t *)((char *)v23 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    v8 = v24 + 1;
    if (!__OFADD__(v24, 1))
      continue;
    break;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1C13CB6D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, unint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  char v9;
  unsigned int v10;
  unint64_t v11;
  size_t v12;
  uint64_t isStackAllocationSafe;
  uint64_t v14;
  void *v15;
  _QWORD v17[2];

  v17[1] = *MEMORY[0x1E0C80C00];
  v9 = *(_BYTE *)(a1 + 32);
  v10 = v9 & 0x3F;
  v11 = (unint64_t)((1 << v9) + 63) >> 6;
  v12 = 8 * v11;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v10 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v17 - ((v12 + 15) & 0x3FFFFFFFFFFFFFF0), v12);
    swift_bridgeObjectRetain();
    v14 = a4((char *)v17 - ((v12 + 15) & 0x3FFFFFFFFFFFFFF0), v11, a1, a2, a3);
    swift_release();
    swift_bridgeObjectRelease();
    if (v4)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v15 = (void *)swift_slowAlloc();
    bzero(v15, v12);
    swift_bridgeObjectRetain();
    v14 = a4((char *)v15, v11, a1, a2, a3);
    swift_release();
    swift_bridgeObjectRelease();
    MEMORY[0x1C3BAD3F4](v15, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v14;
}

unint64_t sub_1C13CB8B4()
{
  unint64_t result;

  result = qword_1ED793A10;
  if (!qword_1ED793A10)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED793A10);
  }
  return result;
}

uint64_t sub_1C13CB8F0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC11SessionCore16AppEventObserver_lock_restrictions);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C13CB908()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C13CB92C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1C13CB958(uint64_t a1)
{
  uint64_t v1;

  sub_1C13C790C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1C13CB964@<X0>(_BYTE *a1@<X8>)
{
  uint64_t *v1;

  return sub_1C13C7A40(v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t storeEnumTagSinglePayload for AppRestriction.RestrictionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C13CB9CC + 4 * byte_1C142A365[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C13CBA00 + 4 * asc_1C142A360[v4]))();
}

uint64_t sub_1C13CBA00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C13CBA08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C13CBA10);
  return result;
}

uint64_t sub_1C13CBA1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C13CBA24);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C13CBA28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C13CBA30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppRestriction.RestrictionType()
{
  return &type metadata for AppRestriction.RestrictionType;
}

unint64_t sub_1C13CBA50()
{
  unint64_t result;

  result = qword_1EF6DBE10;
  if (!qword_1EF6DBE10)
  {
    result = MEMORY[0x1C3BAD334](&unk_1C142A570, &type metadata for AppRestriction.RestrictionType);
    atomic_store(result, (unint64_t *)&qword_1EF6DBE10);
  }
  return result;
}

_QWORD *sub_1C13CBA94(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  id v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  id v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;

  v2 = v1;
  v43 = a1;
  v3 = sub_1C1426494();
  v4 = *(_QWORD *)(v3 - 8);
  v41 = v3;
  v42 = v4;
  MEMORY[0x1E0C80A78](v3);
  v40 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C1426CD4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C1426C8C();
  MEMORY[0x1E0C80A78](v10);
  v11 = sub_1C14269B0();
  MEMORY[0x1E0C80A78](v11);
  sub_1C1426230();
  swift_allocObject();
  v1[2] = sub_1C1426224();
  type metadata accessor for UnfairLock();
  v12 = swift_allocObject();
  v13 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v12 + 16) = v13;
  *v13 = 0;
  v2[4] = v12;
  sub_1C1330F6C();
  sub_1C1426980();
  v45 = MEMORY[0x1E0DEE9D8];
  sub_1C1358EF0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A70);
  sub_1C135C2A8();
  sub_1C1426DF4();
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF8D8], v6);
  v14 = v43;
  v15 = v2;
  v2[3] = sub_1C1426D04();
  if (qword_1ED7936D0 != -1)
    swift_once();
  v16 = qword_1ED798640;
  v2[5] = qword_1ED798640;
  if (v16)
  {
    v39 = v14;
    swift_retain();
    swift_retain();
    v17 = sub_1C13432D4();
    swift_release();
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v38 = v2;
      v19 = v40;
      v20 = v41;
      v21 = v42;
      v22 = v17;
      v23 = v17 + ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80));
      v43 = *(id *)(v42 + 72);
      v24 = *(void (**)(char *, unint64_t, uint64_t))(v42 + 16);
      v37 = v22;
      swift_bridgeObjectRetain();
      v25 = 0;
      v26 = 0xE000000000000000;
      do
      {
        v24(v19, v23, v20);
        v45 = v25;
        v46 = v26;
        swift_bridgeObjectRetain();
        sub_1C14252D0();
        sub_1C1426470();
        sub_1C14252D0();
        swift_bridgeObjectRelease();
        v25 = v45;
        v26 = v46;
        (*(void (**)(char *, uint64_t))(v21 + 8))(v19, v20);
        swift_bridgeObjectRelease();
        v23 += (unint64_t)v43;
        --v18;
      }
      while (v18);
      v17 = v37;
      swift_bridgeObjectRelease();
      v15 = v38;
    }
    else
    {
      v25 = 0;
      v26 = 0xE000000000000000;
    }
    if (qword_1ED7939A0 != -1)
      swift_once();
    v27 = sub_1C1426854();
    __swift_project_value_buffer(v27, (uint64_t)qword_1ED7986C8);
    swift_bridgeObjectRetain();
    v28 = sub_1C1426848();
    v29 = sub_1C1426C80();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v45 = v31;
      *(_DWORD *)v30 = 136446210;
      swift_bridgeObjectRetain();
      v44 = sub_1C132AD90(v25, v26, &v45);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v28, v29, "Restored push tokens with identifiers: %{public}s", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v31, -1, -1);
      MEMORY[0x1C3BAD3F4](v30, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v32 = *(_QWORD *)(v17 + 16);
    if (v32)
    {
      v33 = v17 + ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80));
      v34 = *(_QWORD *)(v42 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_1C142620C();
        v33 += v34;
        --v32;
      }
      while (v32);

      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();

    }
  }
  else
  {

  }
  return v15;
}

uint64_t type metadata accessor for PersistentPushTokenStore()
{
  return objc_opt_self();
}

void sub_1C13CC060(uint64_t a1)
{
  sub_1C13CC45C(a1, (void (*)(uint64_t))MEMORY[0x1E0D8CE48], (uint64_t)&unk_1E7A8D308, (uint64_t)sub_1C13CE514);
}

uint64_t sub_1C13CC07C(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  _QWORD v15[4];
  uint64_t (*v16)(_QWORD);

  v8 = sub_1C1426494();
  v9 = MEMORY[0x1E0C80A78](v8);
  v10 = *(_QWORD *)(a3 + 40);
  if (v10)
  {
    v15[3] = a2;
    v16 = a1;
    v15[1] = v9;
    v15[2] = v15;
    MEMORY[0x1E0C80A78](v9);
    v15[-2] = a4;
    type metadata accessor for ActivityDatabase.MutableStore();
    swift_allocObject();
    v11 = sub_1C134B4D0();
    v12 = *(os_unfair_lock_s **)(*(_QWORD *)(v10 + 96) + 16);
    swift_retain();
    os_unfair_lock_lock(v12);
    MEMORY[0x1E0C80A78](v13);
    v15[-4] = sub_1C13CE580;
    v15[-3] = &v15[-4];
    v15[-2] = v11;
    sub_1C1425258();
    os_unfair_lock_unlock(v12);
    swift_release();
    sub_1C1341CC8();
    v9 = swift_release();
    a1 = v16;
  }
  return a1(v9);
}

void sub_1C13CC440(uint64_t a1)
{
  sub_1C13CC45C(a1, MEMORY[0x1E0D8CE20], (uint64_t)&unk_1E7A8D2E0, (uint64_t)sub_1C13CE478);
}

void sub_1C13CC45C(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD v13[2];

  v13[1] = a4;
  v7 = sub_1C1426494();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = *(os_unfair_lock_s **)(*(_QWORD *)(v4 + 32) + 16);
  os_unfair_lock_lock(v10);
  a2(a1);
  sub_1C1425F0C();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  v11 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v4;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v12 + v11, (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  swift_retain();
  sub_1C1425F00();
  swift_release();
  os_unfair_lock_unlock(v10);
}

uint64_t sub_1C13CC5A0(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  _QWORD v15[4];
  uint64_t (*v16)(_QWORD);

  v8 = sub_1C1426494();
  v9 = MEMORY[0x1E0C80A78](v8);
  v10 = *(_QWORD *)(a3 + 40);
  if (v10)
  {
    v15[3] = a2;
    v16 = a1;
    v15[1] = v9;
    v15[2] = v15;
    MEMORY[0x1E0C80A78](v9);
    v15[-2] = a4;
    type metadata accessor for ActivityDatabase.MutableStore();
    swift_allocObject();
    v11 = sub_1C134B4D0();
    v12 = *(os_unfair_lock_s **)(*(_QWORD *)(v10 + 96) + 16);
    swift_retain();
    os_unfair_lock_lock(v12);
    MEMORY[0x1E0C80A78](v13);
    v15[-4] = sub_1C13CE484;
    v15[-3] = &v15[-4];
    v15[-2] = v11;
    sub_1C1425258();
    os_unfair_lock_unlock(v12);
    swift_release();
    sub_1C1341CC8();
    v9 = swift_release();
    a1 = v16;
  }
  return a1(v9);
}

uint64_t sub_1C13CC964()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C1426470();
  sub_1C1343BD8(v0, v1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C13CC9B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  _QWORD v14[2];

  v8 = sub_1C142671C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  sub_1C14261E8();
  sub_1C14261DC();
  swift_bridgeObjectRelease();
  v14[1] = sub_1C1425F0C();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a4, v8);
  v11 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = (char *)swift_allocObject();
  *((_QWORD *)v12 + 2) = a1;
  *((_QWORD *)v12 + 3) = a2;
  *((_QWORD *)v12 + 4) = a3;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v12[v11], (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C1425F00();
  return swift_release();
}

uint64_t sub_1C13CCB0C(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  os_unfair_lock_s *v17;
  uint64_t v18;
  _QWORD v20[6];
  uint64_t (*v21)(_QWORD);

  v12 = sub_1C142671C();
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = *(_QWORD *)(a3 + 40);
  if (v15)
  {
    v20[2] = v14;
    v20[3] = v13;
    v20[5] = a2;
    v21 = a1;
    v20[4] = v20;
    MEMORY[0x1E0C80A78](v13);
    v20[1] = a4;
    v20[-4] = a4;
    v20[-3] = a5;
    v20[-2] = a6;
    type metadata accessor for ActivityDatabase.MutableStore();
    swift_allocObject();
    v16 = sub_1C134B4D0();
    v17 = *(os_unfair_lock_s **)(*(_QWORD *)(v15 + 96) + 16);
    swift_retain();
    os_unfair_lock_lock(v17);
    MEMORY[0x1E0C80A78](v18);
    v20[-4] = sub_1C13CE448;
    v20[-3] = &v20[-6];
    v20[-2] = v16;
    sub_1C1425258();
    os_unfair_lock_unlock(v17);
    swift_release();
    sub_1C1341CC8();
    v13 = swift_release();
    a1 = v21;
  }
  return a1(v13);
}

void sub_1C13CCF4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  _QWORD *v6;

  v5 = *(os_unfair_lock_s **)(*(_QWORD *)(v2 + 32) + 16);
  os_unfair_lock_lock(v5);
  sub_1C14261D0();
  sub_1C1425F0C();
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = v2;
  v6[3] = a1;
  v6[4] = a2;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C1425F00();
  swift_release();
  os_unfair_lock_unlock(v5);
}

uint64_t sub_1C13CD020(uint64_t (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t (*v7)(void);

  v3 = *(_QWORD *)(a3 + 40);
  if (v3)
  {
    v7 = a1;
    MEMORY[0x1E0C80A78](a1);
    type metadata accessor for ActivityDatabase.MutableStore();
    swift_allocObject();
    sub_1C134B4D0();
    v4 = *(os_unfair_lock_s **)(*(_QWORD *)(v3 + 96) + 16);
    swift_retain();
    os_unfair_lock_lock(v4);
    MEMORY[0x1E0C80A78](v5);
    sub_1C1425258();
    os_unfair_lock_unlock(v4);
    swift_release();
    sub_1C1341CC8();
    swift_release();
    a1 = v7;
  }
  return a1();
}

void sub_1C13CD388(uint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t v4;

  v3 = *(os_unfair_lock_s **)(*(_QWORD *)(v1 + 32) + 16);
  os_unfair_lock_lock(v3);
  sub_1C14261DC();
  sub_1C1425F0C();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = a1;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C1425F00();
  swift_release();
  os_unfair_lock_unlock(v3);
}

uint64_t sub_1C13CD448(uint64_t (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t (*v7)(void);

  v3 = *(_QWORD *)(a3 + 40);
  if (v3)
  {
    v7 = a1;
    MEMORY[0x1E0C80A78](a1);
    type metadata accessor for ActivityDatabase.MutableStore();
    swift_allocObject();
    sub_1C134B4D0();
    v4 = *(os_unfair_lock_s **)(*(_QWORD *)(v3 + 96) + 16);
    swift_retain();
    os_unfair_lock_lock(v4);
    MEMORY[0x1E0C80A78](v5);
    sub_1C1425258();
    os_unfair_lock_unlock(v4);
    swift_release();
    sub_1C1341CC8();
    swift_release();
    a1 = v7;
  }
  return a1();
}

void sub_1C13CD784(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  uint64_t v6;
  _QWORD *v7;

  v5 = *(os_unfair_lock_s **)(*(_QWORD *)(v2 + 32) + 16);
  os_unfair_lock_lock(v5);
  v6 = sub_1C14261F4();
  sub_1C14261DC();
  sub_1C1425F0C();
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = v2;
  v7[3] = v6;
  v7[4] = a1;
  v7[5] = a2;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C1425F00();
  swift_release();
  os_unfair_lock_unlock(v5);
}

uint64_t sub_1C13CD860(uint64_t (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t (*v7)(void);

  v3 = *(_QWORD *)(a3 + 40);
  if (v3)
  {
    v7 = a1;
    MEMORY[0x1E0C80A78](a1);
    type metadata accessor for ActivityDatabase.MutableStore();
    swift_allocObject();
    sub_1C134B4D0();
    v4 = *(os_unfair_lock_s **)(*(_QWORD *)(v3 + 96) + 16);
    swift_retain();
    os_unfair_lock_lock(v4);
    MEMORY[0x1E0C80A78](v5);
    sub_1C1425258();
    os_unfair_lock_unlock(v4);
    swift_release();
    sub_1C1341CC8();
    swift_release();
    a1 = v7;
  }
  return a1();
}

uint64_t sub_1C13CDBC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  if (v3)
  {
    v5 = *(_QWORD *)(sub_1C1426494() - 8);
    v6 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v7 = *(_QWORD *)(v5 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      v8 = sub_1C1426470();
      sub_1C1343BD8(v8, v9);
      if (v2)
        break;
      swift_bridgeObjectRelease();
      v6 += v7;
      if (!--v3)
        return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C13CDC88(uint64_t (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a3 + 40);
  if (v4)
  {
    type metadata accessor for ActivityDatabase.MutableStore();
    swift_allocObject();
    sub_1C134B4D0();
    v5 = *(os_unfair_lock_s **)(*(_QWORD *)(v4 + 96) + 16);
    swift_retain();
    os_unfair_lock_lock(v5);
    MEMORY[0x1E0C80A78](v6);
    sub_1C1425258();
    os_unfair_lock_unlock(v5);
    swift_release();
    sub_1C1341CC8();
    swift_release();
  }
  return a1();
}

uint64_t sub_1C13CDF58()
{
  return sub_1C1343F70();
}

void sub_1C13CDF78(uint64_t a1)
{
  sub_1C13CC45C(a1, (void (*)(uint64_t))MEMORY[0x1E0D8CE48], (uint64_t)&unk_1E7A8D308, (uint64_t)sub_1C13CE514);
}

void sub_1C13CDFB0(uint64_t a1)
{
  sub_1C13CC45C(a1, MEMORY[0x1E0D8CE20], (uint64_t)&unk_1E7A8D2E0, (uint64_t)sub_1C13CE478);
}

void sub_1C13CDFE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  os_unfair_lock_s *v8;

  v7 = *v3;
  v8 = *(os_unfair_lock_s **)(*(_QWORD *)(v7 + 32) + 16);
  os_unfair_lock_lock(v8);
  sub_1C13CC9B4(v7, a1, a2, a3);
  os_unfair_lock_unlock(v8);
}

void sub_1C13CE048(uint64_t a1, uint64_t a2)
{
  sub_1C13CCF4C(a1, a2);
}

void sub_1C13CE068(uint64_t a1)
{
  sub_1C13CD388(a1);
}

void sub_1C13CE088(uint64_t a1, uint64_t a2)
{
  sub_1C13CD784(a1, a2);
}

void sub_1C13CE0A8()
{
  uint64_t v0;
  os_unfair_lock_s *v1;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)(*(_QWORD *)v0 + 32) + 16);
  os_unfair_lock_lock(v1);
  sub_1C1426218();
  sub_1C1425F0C();
  swift_retain();
  sub_1C1425F00();
  swift_release();
  os_unfair_lock_unlock(v1);
}

uint64_t sub_1C13CE134()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)(*(_QWORD *)v0 + 32) + 16);
  os_unfair_lock_lock(v1);
  v2 = sub_1C14261E8();
  os_unfair_lock_unlock(v1);
  return v2;
}

uint64_t sub_1C13CE1A0()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)(*(_QWORD *)v0 + 32) + 16);
  os_unfair_lock_lock(v1);
  v2 = sub_1C14261F4();
  os_unfair_lock_unlock(v1);
  return v2;
}

void sub_1C13CE1FC()
{
  uint64_t v0;
  os_unfair_lock_s *v1;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)(*(_QWORD *)v0 + 32) + 16);
  os_unfair_lock_lock(v1);
  sub_1C14261C4();
  os_unfair_lock_unlock(v1);
}

uint64_t sub_1C13CE25C(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v2;

  return sub_1C13CDC88(a1, a2, v2);
}

uint64_t sub_1C13CE264@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1C13CE28C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C13CE2C0(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v2;

  return sub_1C13CD860(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1C13CE2CC(uint64_t a1)
{
  uint64_t v1;

  return sub_1C13CDBC8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1C13CE2E4()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C13CE310(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v2;

  return sub_1C13CD448(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1C13CE318()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C13CE344(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v2;

  return sub_1C13CD020(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1C13CE350()
{
  uint64_t v0;

  return sub_1C1343BD8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1C13CE378()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1C142671C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1C13CE3F4(uint64_t (*a1)(_QWORD), uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1C142671C() - 8) + 80);
  return sub_1C13CCB0C(a1, a2, v2[2], v2[3], v2[4], (uint64_t)v2 + ((v5 + 40) & ~v5));
}

uint64_t sub_1C13CE448()
{
  uint64_t *v0;

  return sub_1C1343C04(v0[2], v0[3], v0[4]);
}

uint64_t sub_1C13CE478(uint64_t a1, uint64_t a2)
{
  return sub_1C13CE520(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))sub_1C13CC5A0);
}

uint64_t sub_1C13CE484()
{
  return sub_1C13CC964();
}

uint64_t objectdestroy_15Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1C1426494();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1C13CE514(uint64_t a1, uint64_t a2)
{
  return sub_1C13CE520(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))sub_1C13CC07C);
}

uint64_t sub_1C13CE520(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, uint64_t))
{
  uint64_t v3;
  uint64_t v6;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_1C1426494() - 8) + 80);
  return a3(a1, a2, *(_QWORD *)(v3 + 16), v3 + ((v6 + 24) & ~v6));
}

uint64_t sub_1C13CE580()
{
  return sub_1C13436A0();
}

uint64_t sub_1C13CE5A8(uint64_t a1)
{
  return sub_1C13CE2CC(a1);
}

unint64_t sub_1C13CE5BC()
{
  sub_1C1426F08();
  swift_bridgeObjectRelease();
  sub_1C14252D0();
  swift_bridgeObjectRelease();
  sub_1C14252D0();
  return 0xD000000000000020;
}

unint64_t sub_1C13CE668()
{
  return sub_1C13CE5BC();
}

uint64_t sub_1C13CE670@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X3>, char a4@<W4>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  char v17;
  uint64_t v19;
  void (*v20)(_BYTE *, uint64_t, uint64_t);
  NSObject *v21;
  os_log_type_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  void (*v28)(_BYTE *, uint64_t);
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(_BYTE *, uint64_t);
  _BYTE v34[4];
  int v35;
  uint64_t v36;
  void (*v37)(_BYTE *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v10 = sub_1C1425AEC();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = &v34[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v12);
  v16 = &v34[-v15];
  if ((a4 & 1) != 0)
  {
    if ((a2 & 1) != 0)
    {
      sub_1C140D290(a1, 1, a3, a5);
      sub_1C1425A08();
      return swift_storeEnumTagMultiPayload();
    }
  }
  else
  {
    v17 = sub_1C1425A98();
    if ((a2 & 1) != 0 || (v17 & 1) != 0)
    {
      sub_1C140D290(a1, a2 & 1, a3, a5);
      sub_1C1425A08();
      return swift_storeEnumTagMultiPayload();
    }
  }
  if (qword_1ED793958 != -1)
    swift_once();
  v38 = a5;
  v19 = sub_1C1426854();
  __swift_project_value_buffer(v19, (uint64_t)qword_1ED798668);
  v20 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16);
  v20(v16, a1, v10);
  v20(v14, a1, v10);
  v21 = sub_1C1426848();
  v22 = sub_1C1426C68();
  v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    v24 = swift_slowAlloc();
    v37 = v20;
    v25 = v24;
    v36 = swift_slowAlloc();
    v40 = v36;
    *(_DWORD *)v25 = 136380931;
    v26 = sub_1C1425A80();
    v39 = sub_1C132AD90(v26, v27, &v40);
    v35 = v23;
    sub_1C1426DB8();
    swift_bridgeObjectRelease();
    v28 = *(void (**)(_BYTE *, uint64_t))(v11 + 8);
    v28(v16, v10);
    *(_WORD *)(v25 + 12) = 2081;
    v29 = sub_1C1425A80();
    v39 = sub_1C132AD90(v29, v30, &v40);
    sub_1C1426DB8();
    swift_bridgeObjectRelease();
    v28(v14, v10);
    _os_log_impl(&dword_1C1324000, v21, (os_log_type_t)v35, "%{private}s is not entitled to specify a scene target. Defaulting containingProcess target to %{private}s", (uint8_t *)v25, 0x16u);
    v31 = v36;
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v31, -1, -1);
    v32 = v25;
    v20 = v37;
    MEMORY[0x1C3BAD3F4](v32, -1, -1);
  }
  else
  {
    v33 = *(void (**)(_BYTE *, uint64_t))(v11 + 8);
    v33(v16, v10);
    v33(v14, v10);
  }

  v20((_BYTE *)v38, a1, v10);
  sub_1C1425A08();
  return swift_storeEnumTagMultiPayload();
}

_QWORD *sub_1C13CE9C0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C1425AEC();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_1C13CEA48(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1C1425AEC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1C13CEA7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1C1425AEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1C13CEAD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1C1425AEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1C13CEB34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1C1425AEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1C13CEB90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1C1425AEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1C13CEBEC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C13CEBF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_1C1425AEC();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_1C13CEC84()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C13CEC90(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1C1425AEC();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t type metadata accessor for PlatterTargetResolver()
{
  uint64_t result;

  result = qword_1ED796908;
  if (!qword_1ED796908)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C13CED44()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C1425AEC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PlatterTargetResolver.Permissions(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PlatterTargetResolver.Permissions(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C13CEEA0 + 4 * byte_1C142A675[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C13CEED4 + 4 * byte_1C142A670[v4]))();
}

uint64_t sub_1C13CEED4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C13CEEDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C13CEEE4);
  return result;
}

uint64_t sub_1C13CEEF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C13CEEF8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C13CEEFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C13CEF04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PlatterTargetResolver.Permissions()
{
  return &type metadata for PlatterTargetResolver.Permissions;
}

uint64_t sub_1C13CEF20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 16))
  {
    v1 = *(_QWORD *)(v0 + 16);
  }
  else
  {
    v2 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791EF8);
    sub_1C13CF154(&qword_1ED7927F0, MEMORY[0x1E0C95F48]);
    v1 = sub_1C1426908();
    *(_QWORD *)(v2 + 16) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1C13CEFBC(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _DWORD *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v1;
  *(_QWORD *)(v1 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791EF8);
  swift_allocObject();
  *(_QWORD *)(v1 + 24) = sub_1C14268D8();
  type metadata accessor for UnfairLock();
  v4 = swift_allocObject();
  v5 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = 0;
  *(_QWORD *)(v2 + 40) = v4;
  *(_BYTE *)(v2 + 32) = a1;
  if ((a1 & 1) != 0
    && (v6 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults),
        v7 = (void *)sub_1C1426A7C(),
        v8 = objc_msgSend(v6, sel_stringArrayForKey_, v7),
        v6,
        v7,
        v8))
  {
    v9 = sub_1C1426B90();

    v10 = sub_1C1375140(v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = MEMORY[0x1E0DEE9E8];
  }
  *(_QWORD *)(v2 + 48) = v10;
  return v2;
}

uint64_t sub_1C13CF0F8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for KnownClientStore()
{
  return objc_opt_self();
}

uint64_t sub_1C13CF154(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED791EF8);
    result = MEMORY[0x1C3BAD334](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C13CF198(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  char v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  void *v21;
  uint64_t v23;
  uint64_t v24[3];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = 0;
    v4 = 0;
    v5 = swift_bridgeObjectRetain() + 40;
    v23 = v5;
    while (2)
    {
      if (v4 <= v2)
        v6 = v2;
      else
        v6 = v4;
      v7 = -(uint64_t)v6;
      v8 = (unint64_t *)(v5 + 16 * v4++);
      while (1)
      {
        if (v7 + v4 == 1)
        {
          __break(1u);
          return;
        }
        v10 = *(v8 - 1);
        v9 = *v8;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_1C1353F8C(v10, v9);
        v12 = v11;
        swift_endAccess();
        if (v12)
          break;
        swift_bridgeObjectRelease();
        ++v4;
        v8 += 2;
        if (v4 - v2 == 1)
        {
          swift_bridgeObjectRelease();
          if ((*(_BYTE *)(a2 + 32) & 1) != 0)
            goto LABEL_23;
          if ((v3 & 1) != 0)
            goto LABEL_24;
          return;
        }
      }
      swift_bridgeObjectRelease();
      if (qword_1ED791DC0 != -1)
        swift_once();
      v13 = sub_1C1426854();
      __swift_project_value_buffer(v13, (uint64_t)qword_1ED798508);
      swift_bridgeObjectRetain();
      v14 = sub_1C1426848();
      v15 = sub_1C1426C80();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = swift_slowAlloc();
        v17 = swift_slowAlloc();
        v24[0] = v17;
        *(_DWORD *)v16 = 136380675;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v16 + 4) = sub_1C132AD90(v10, v9, v24);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C1324000, v14, v15, "%{private}s is no longer a known client", (uint8_t *)v16, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v17, -1, -1);
        MEMORY[0x1C3BAD3F4](v16, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v5 = v23;
      v3 = 1;
      if (v4 != v2)
        continue;
      break;
    }
    swift_bridgeObjectRelease();
    if (*(_BYTE *)(a2 + 32) == 1)
      goto LABEL_23;
    goto LABEL_24;
  }
  if ((*(_BYTE *)(a2 + 32) & 1) != 0)
  {
    v3 = 0;
LABEL_23:
    swift_beginAccess();
    v18 = swift_bridgeObjectRetain();
    sub_1C132FC80(v18);
    v19 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v20 = (void *)sub_1C1426B84();
    swift_release();
    v21 = (void *)sub_1C1426A7C();
    objc_msgSend(v19, sel_setObject_forKey_, v20, v21);
    swift_bridgeObjectRelease();

    if ((v3 & 1) != 0)
    {
LABEL_24:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791EF8);
      sub_1C13CF154(&qword_1ED791EF0, MEMORY[0x1E0C95F40]);
      sub_1C14268FC();
    }
  }
}

uint64_t sub_1C13CF524(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v32 = MEMORY[0x1E0DEE9D8];
  sub_1C1336948(0, v1, 0);
  v2 = v32;
  result = sub_1C135833C(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v26 = v1;
  v27 = v5;
  v28 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_24;
    v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v6);
    v13 = v12[1];
    v31 = *v12;
    v14 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v6);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7966B8);
    v16 = MEMORY[0x1C3BAC878](v14, v15);
    v29 = v17;
    v30 = v16;
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v19 = *(_QWORD *)(v32 + 16);
    v18 = *(_QWORD *)(v32 + 24);
    if (v19 >= v18 >> 1)
      result = sub_1C1336948(v18 > 1, v19 + 1, 1);
    *(_QWORD *)(v32 + 16) = v19 + 1;
    v20 = (_QWORD *)(v32 + 32 * v19);
    v20[4] = v31;
    v20[5] = v13;
    v20[6] = v30;
    v20[7] = v29;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = a1 + 64;
    v21 = *(_QWORD *)(v28 + 8 * v11);
    if ((v21 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v27;
    if (*(_DWORD *)(a1 + 36) != v27)
      goto LABEL_27;
    v22 = v21 & (-2 << (v6 & 0x3F));
    if (v22)
    {
      v9 = __clz(__rbit64(v22)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v26;
    }
    else
    {
      v23 = v11 + 1;
      v24 = (unint64_t)(v9 + 63) >> 6;
      v10 = v26;
      if (v11 + 1 < v24)
      {
        v25 = *(_QWORD *)(v28 + 8 * v23);
        if (v25)
        {
LABEL_20:
          v9 = __clz(__rbit64(v25)) + (v23 << 6);
        }
        else
        {
          while (v24 - 2 != v11)
          {
            v25 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v25)
            {
              v23 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    v6 = v9;
    if (v7 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C13CF774@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  os_unfair_lock_s *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t);
  void (*v60)(char *, char *, uint64_t);
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  char *v71;
  uint64_t v72;
  int v73;
  _QWORD *v74;
  _QWORD *v75;
  char *v76;
  char v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  NSObject *v83;
  os_log_type_t v84;
  char *v85;
  uint8_t *v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t result;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v97;
  uint64_t v98;
  int *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  NSObject *v114;
  os_log_type_t v115;
  uint8_t *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t ObjectType;
  uint64_t *v121;
  _BYTE *v122;
  char *v123;
  int v124;
  int v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  int v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t *v143;
  _QWORD *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  char *v153;
  char *v154;
  uint64_t v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  int v161;
  char *v162;
  uint64_t v163;
  int v164;
  uint64_t v165;
  char *v166;
  char *v167;
  char *v168;
  char *v169;
  _QWORD *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;

  v133 = a8;
  v134 = a7;
  v125 = a6;
  v127 = a5;
  v156 = a3;
  v137 = a2;
  v157 = a1;
  v132 = a9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
  MEMORY[0x1E0C80A78](v11);
  v142 = (uint64_t)&v123 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1C1425A08();
  MEMORY[0x1E0C80A78](v13);
  v141 = (uint64_t)&v123 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = type metadata accessor for Activity();
  v15 = MEMORY[0x1E0C80A78](v131);
  v130 = (char *)&v123 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v143 = (uint64_t *)((char *)&v123 - v17);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793BF8);
  MEMORY[0x1E0C80A78](v18);
  v154 = (char *)&v123 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1C14253E4();
  MEMORY[0x1E0C80A78](v20);
  v153 = (char *)&v123 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v129 = sub_1C14251B0();
  v128 = *(_QWORD *)(v129 - 8);
  v22 = MEMORY[0x1E0C80A78](v129);
  v126 = (char *)&v123 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v152 = (char *)&v123 - v24;
  v159 = sub_1C1425450();
  v158 = *(_QWORD *)(v159 - 8);
  v25 = MEMORY[0x1E0C80A78](v159);
  v140 = (char *)&v123 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v28 = (char *)&v123 - v27;
  v136 = sub_1C1425978();
  v160 = *(_QWORD *)(v136 - 8);
  v29 = MEMORY[0x1E0C80A78](v136);
  v139 = (char *)&v123 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v123 = (char *)&v123 - v31;
  v150 = sub_1C142671C();
  v149 = *(_QWORD *)(v150 - 8);
  MEMORY[0x1E0C80A78](v150);
  v148 = (char *)&v123 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = sub_1C1425384();
  v33 = *(_QWORD *)(v163 - 8);
  MEMORY[0x1E0C80A78](v163);
  v162 = (char *)&v123 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_1C1425558();
  v36 = *(_QWORD *)(v35 - 8);
  v37 = MEMORY[0x1E0C80A78](v35);
  v168 = (char *)&v123 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = MEMORY[0x1E0C80A78](v37);
  v41 = (char *)&v123 - v40;
  v42 = MEMORY[0x1E0C80A78](v39);
  v167 = (char *)&v123 - v43;
  MEMORY[0x1E0C80A78](v42);
  v166 = (char *)&v123 - v44;
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B90);
  MEMORY[0x1E0C80A78](v45);
  v47 = (char *)&v123 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v178 = sub_1C14253C0();
  v174 = *(_QWORD *)(v178 - 8);
  MEMORY[0x1E0C80A78](v178);
  v169 = (char *)&v123 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = *(os_unfair_lock_s **)(*(_QWORD *)(v9 + 16) + 16);
  os_unfair_lock_lock(v49);
  swift_beginAccess();
  v135 = v9;
  v50 = *(_QWORD *)(v9 + 24);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v49);
  v51 = v50;
  v177 = *(_QWORD *)(v50 + 16);
  v151 = v28;
  if (!v177)
  {
    swift_bridgeObjectRelease();
LABEL_35:
    sub_1C14251A4();
    v90 = v157;
    sub_1C1425954();
    v91 = sub_1C1425B40();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v154, 1, 1, v91);
    v92 = v155;
    result = sub_1C1425444();
    v41 = v156;
    if (!v92)
    {
      v178 = 0;
      LODWORD(v177) = v125 & 1;
      v94 = v136;
      (*(void (**)(char *, uint64_t, uint64_t))(v160 + 16))(v139, v90, v136);
      sub_1C1338F24(v127, v141, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
      (*(void (**)(char *, char *, uint64_t))(v158 + 16))(v140, v28, v159);
      v95 = sub_1C142557C();
      v96 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56);
      v96(v142, 1, 1, v95);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v97 = v126;
      sub_1C142518C();
      v98 = a4;
      v99 = (int *)v131;
      v100 = v130;
      v101 = (uint64_t)&v130[*(int *)(v131 + 48)];
      v96(v101, 1, 1, v95);
      v102 = &v100[v99[13]];
      *(_QWORD *)v102 = 0;
      *((_QWORD *)v102 + 1) = 0;
      v103 = v137;
      *(_QWORD *)v100 = v137;
      *((_QWORD *)v100 + 1) = v41;
      v104 = &v100[v99[10]];
      *(_QWORD *)v104 = 0;
      *((_QWORD *)v104 + 1) = 0;
      (*(void (**)(char *, char *, uint64_t))(v160 + 32))(&v100[v99[5]], v139, v94);
      *(_QWORD *)&v100[v99[7]] = v98;
      sub_1C1339140(v141, (uint64_t)&v100[v99[6]], (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
      (*(void (**)(char *, char *, uint64_t))(v158 + 32))(&v100[v99[11]], v140, v159);
      v105 = v128;
      v106 = v97;
      v107 = v129;
      (*(void (**)(char *, char *, uint64_t))(v128 + 32))(&v100[v99[8]], v106, v129);
      v100[v99[9]] = v177;
      sub_1C134D870(v142, v101);
      swift_bridgeObjectRelease();
      *(_QWORD *)v102 = 0;
      *((_QWORD *)v102 + 1) = 0;
      v108 = v143;
      sub_1C1339140((uint64_t)v100, (uint64_t)v143, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      v109 = (char *)v108 + v99[8];
      v110 = type metadata accessor for ActivityState(0);
      v111 = v132;
      (*(void (**)(uint64_t, char *, uint64_t))(v105 + 16))(v132 + *(int *)(v110 + 28), v109, v107);
      *(_QWORD *)v111 = v103;
      *(_QWORD *)(v111 + 8) = v41;
      *(_BYTE *)(v111 + 16) = 0;
      *(_OWORD *)(v111 + 24) = xmmword_1C142A0D0;
      v112 = qword_1ED793948;
      swift_bridgeObjectRetain();
      if (v112 != -1)
LABEL_45:
        swift_once();
      v113 = sub_1C1426854();
      __swift_project_value_buffer(v113, (uint64_t)qword_1ED798598);
      swift_bridgeObjectRetain_n();
      v114 = sub_1C1426848();
      v115 = sub_1C1426C80();
      if (os_log_type_enabled(v114, v115))
      {
        v116 = (uint8_t *)swift_slowAlloc();
        v117 = swift_slowAlloc();
        v180 = v117;
        *(_DWORD *)v116 = 136446210;
        swift_bridgeObjectRetain();
        v179 = sub_1C132AD90(v137, (unint64_t)v41, &v180);
        sub_1C1426DB8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C1324000, v114, v115, "Created activity: %{public}s", v116, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v117, -1, -1);
        MEMORY[0x1C3BAD3F4](v116, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v118 = v151;
      v119 = v134;
      ObjectType = swift_getObjectType();
      v121 = v143;
      sub_1C13D5898(v143, v119, 0, 0, 0, v135, ObjectType, *(_QWORD *)(v133 + 8));
      sub_1C1339004((uint64_t)v121, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      return (*(uint64_t (**)(char *, uint64_t))(v158 + 8))(v118, v159);
    }
    return result;
  }
  v52 = 0;
  v175 = v50 + 32;
  v164 = *MEMORY[0x1E0C8F750];
  v161 = *MEMORY[0x1E0C8F498];
  v138 = *MEMORY[0x1E0C8F490];
  v124 = *MEMORY[0x1E0C8F4A0];
  v53 = v178;
  v171 = v47;
  v172 = a4;
  v165 = v33;
  v176 = v51;
  while (1)
  {
    if (v52 >= *(_QWORD *)(v51 + 16))
    {
      __break(1u);
      goto LABEL_45;
    }
    v54 = *(_QWORD *)(v175 + 16 * v52);
    swift_getObjectType();
    v55 = swift_conformsToProtocol2() ? (_QWORD *)v54 : 0;
    if (v55)
      break;
LABEL_7:
    ++v52;
    v51 = v176;
    if (v52 == v177)
    {
      swift_bridgeObjectRelease();
      v28 = v151;
      goto LABEL_35;
    }
  }
  v56 = *(_QWORD *)(a4 + 16);
  if (!v56)
  {
    swift_unknownObjectRetain_n();
LABEL_4:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v174 + 56))(v47, 1, 1, v53);
    goto LABEL_5;
  }
  v170 = v55;
  v57 = a4 + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80));
  v173 = v54;
  swift_unknownObjectRetain_n();
  swift_bridgeObjectRetain();
  v58 = *(_QWORD *)(v36 + 72);
  v59 = *(void (**)(char *, uint64_t, uint64_t))(v36 + 16);
  while (1)
  {
    v59(v41, v57, v35);
    if ((sub_1C14254F8() & 1) != 0)
      break;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v41, v35);
    v57 += v58;
    if (!--v56)
    {
      a4 = v172;
      swift_bridgeObjectRelease();
      v47 = v171;
      v53 = v178;
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRelease();
  v60 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  v61 = v167;
  v60(v167, v41, v35);
  v62 = v166;
  v60(v166, v61, v35);
  v63 = v168;
  v60(v168, v62, v35);
  v64 = v63;
  v65 = (*(uint64_t (**)(char *, uint64_t))(v36 + 88))(v63, v35);
  v66 = v165;
  if (v65 == v164)
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v63, v35);
    v67 = v174;
    v47 = v171;
    v68 = v178;
    (*(void (**)(char *, char *, uint64_t))(v174 + 32))(v171, v64, v178);
    v69 = 0;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v36 + 8))(v63, v35);
    v69 = 1;
    v67 = v174;
    v47 = v171;
    v68 = v178;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v67 + 56))(v47, v69, 1, v68);
  v70 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v67 + 48))(v47, 1, v68);
  a4 = v172;
  if (v70 == 1)
  {
LABEL_5:
    sub_1C132C860((uint64_t)v47, &qword_1ED793B90);
LABEL_6:
    swift_unknownObjectRelease_n();
    v53 = v178;
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v174 + 32))(v169, v47, v178);
  v71 = v162;
  sub_1C14253B4();
  v72 = v163;
  v73 = (*(uint64_t (**)(char *, uint64_t))(v66 + 88))(v71, v163);
  if (v73 == v161)
  {
    (*(void (**)(char *, uint64_t))(v66 + 96))(v71, v72);
    v146 = *(_QWORD *)v71;
    v147 = *((_QWORD *)v71 + 2);
    v74 = v170 + 6;
    v75 = (_QWORD *)v170[10];
    v145 = v170[9];
    v170 = v75;
    v144 = __swift_project_boxed_opaque_existential_1(v74, v145);
    sub_1C142539C();
    v76 = v148;
    sub_1C1426728();
    v77 = sub_1C1426530();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v149 + 8))(v76, v150);
    (*(void (**)(char *, uint64_t))(v174 + 8))(v169, v178);
    v47 = v171;
    a4 = v172;
    if ((v77 & 1) != 0)
      goto LABEL_29;
    goto LABEL_6;
  }
  v78 = v73;
  if (v73 == v138)
  {
    (*(void (**)(char *, uint64_t))(v174 + 8))(v169, v178);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v162, v163);
    v47 = v171;
    a4 = v172;
    goto LABEL_6;
  }
  (*(void (**)(char *, uint64_t))(v174 + 8))(v169, v178);
  v47 = v171;
  a4 = v172;
  if (v78 == v124)
    goto LABEL_6;
  (*(void (**)(char *, uint64_t))(v66 + 8))(v162, v163);
LABEL_29:
  swift_bridgeObjectRelease();
  if (qword_1ED793948 != -1)
    swift_once();
  v79 = sub_1C1426854();
  __swift_project_value_buffer(v79, (uint64_t)qword_1ED798598);
  v80 = v160;
  v81 = v123;
  v82 = v136;
  (*(void (**)(char *, uint64_t, uint64_t))(v160 + 16))(v123, v157, v136);
  v83 = sub_1C1426848();
  v84 = sub_1C1426C68();
  if (os_log_type_enabled(v83, v84))
  {
    v85 = v81;
    v86 = (uint8_t *)swift_slowAlloc();
    v87 = swift_slowAlloc();
    v180 = v87;
    *(_DWORD *)v86 = 136380675;
    v178 = (uint64_t)(v86 + 4);
    sub_1C1329AD0(&qword_1EF6DBE28, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FE28], MEMORY[0x1E0C8FE48]);
    v88 = sub_1C1427058();
    v179 = sub_1C132AD90(v88, v89, &v180);
    sub_1C1426DB8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v80 + 8))(v85, v82);
    _os_log_impl(&dword_1C1324000, v83, v84, "Activity request is invalid: %{private}s", v86, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v87, -1, -1);
    MEMORY[0x1C3BAD3F4](v86, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v80 + 8))(v81, v82);
  }

  sub_1C13D5E1C();
  swift_allocError();
  *v122 = 1;
  swift_willThrow();
  return swift_unknownObjectRelease_n();
}

void sub_1C13D0788(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  os_unfair_lock_s *v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46[2];

  v2 = v1;
  v4 = (int *)type metadata accessor for ActivityParticipantEvent(0);
  MEMORY[0x1E0C80A78](v4);
  v40 = (uint64_t *)((char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791E48);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C1425450();
  v42 = *(_QWORD *)(v9 - 8);
  v43 = v9;
  MEMORY[0x1E0C80A78](v9);
  v39 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_1C142557C();
  v11 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v13 = (void (*)(char *, uint64_t))((char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = type metadata accessor for Activity();
  MEMORY[0x1E0C80A78](v14);
  v16 = (uint64_t *)((char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = type metadata accessor for ActivityParticipantEvent.EventType(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(os_unfair_lock_s **)(*(_QWORD *)(v2 + 16) + 16);
  os_unfair_lock_lock(v20);
  v44 = v2;
  sub_1C13D0C6C((uint64_t *)a1, v46);
  os_unfair_lock_unlock(v20);
  if (LOBYTE(v46[0]) == 1)
  {
    sub_1C1338F24(a1 + v4[6], (uint64_t)v19, type metadata accessor for ActivityParticipantEvent.EventType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        v22 = v41;
        (*(void (**)(void (*)(char *, uint64_t), char *, uint64_t))(v11 + 32))(v13, v19, v41);
        sub_1C13D1B0C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), a1 + v4[9], v13, *(_QWORD *)(a1 + v4[8]), *(_QWORD *)(a1 + v4[8] + 8), a1 + v4[7], *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + v4[10]));
        (*(void (**)(_QWORD, uint64_t))(v11 + 8))(v13, v22);
      }
      else
      {
        sub_1C13D5DD4(a1 + v4[9], (uint64_t)v8);
        v28 = v42;
        v27 = v43;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v8, 1, v43) == 1)
        {
          sub_1C132C860((uint64_t)v8, &qword_1ED791E48);
          if (qword_1ED793948 != -1)
            swift_once();
          v29 = sub_1C1426854();
          __swift_project_value_buffer(v29, (uint64_t)qword_1ED798598);
          v30 = v40;
          sub_1C1338F24(a1, (uint64_t)v40, type metadata accessor for ActivityParticipantEvent);
          v31 = sub_1C1426848();
          v32 = sub_1C1426C68();
          if (os_log_type_enabled(v31, v32))
          {
            v33 = (uint8_t *)swift_slowAlloc();
            v34 = swift_slowAlloc();
            v46[0] = v34;
            *(_DWORD *)v33 = 136446210;
            v35 = *v30;
            v36 = v30[1];
            swift_bridgeObjectRetain();
            v45 = sub_1C132AD90(v35, v36, v46);
            sub_1C1426DB8();
            swift_bridgeObjectRelease();
            sub_1C1339004((uint64_t)v30, type metadata accessor for ActivityParticipantEvent);
            _os_log_impl(&dword_1C1324000, v31, v32, "Update did not include payload for activity: %{public}s", v33, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1C3BAD3F4](v34, -1, -1);
            MEMORY[0x1C3BAD3F4](v33, -1, -1);
          }
          else
          {
            sub_1C1339004((uint64_t)v30, type metadata accessor for ActivityParticipantEvent);
          }

        }
        else
        {
          v37 = (uint64_t)v39;
          (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v39, v8, v27);
          sub_1C13D21C8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), v37, *(_QWORD *)(a1 + v4[8]), *(_QWORD *)(a1 + v4[8] + 8), a1 + v4[7], *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + v4[10]));
          (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v37, v27);
        }
      }
    }
    else
    {
      sub_1C1339140((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      v23 = (uint64_t *)(a1 + v4[8]);
      v24 = *v23;
      v25 = v23[1];
      ObjectType = swift_getObjectType();
      sub_1C13D5898(v16, v24, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + v4[10]), v44, ObjectType, *(_QWORD *)(v25 + 8));
      sub_1C1339004((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    }
  }
}

void sub_1C13D0C6C(uint64_t *a1@<X1>, _BYTE *a2@<X8>)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  char v14;
  void *v15;
  id v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  os_log_type_t v25;
  _BYTE *v26;
  uint8_t *v27;
  void *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  id v44;

  v5 = type metadata accessor for ActivityParticipantEvent(0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (uint64_t *)((char *)&v38 - v10);
  MEMORY[0x1E0C80A78](v9);
  v13 = (uint64_t *)((char *)&v38 - v12);
  v14 = sub_1C13D1250(a1);
  if (v2)
  {
    v15 = v2;
    v44 = v2;
    v16 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797BA0);
    if ((swift_dynamicCast() & 1) == 0 || (v43 & 1) != 0)
    {

      if (qword_1ED793948 != -1)
        swift_once();
      v17 = sub_1C1426854();
      __swift_project_value_buffer(v17, (uint64_t)qword_1ED798598);
      sub_1C1338F24((uint64_t)a1, (uint64_t)v8, type metadata accessor for ActivityParticipantEvent);
      v18 = sub_1C1426848();
      v19 = sub_1C1426C68();
      if (os_log_type_enabled(v18, v19))
      {
        v40 = 0;
        v20 = (uint8_t *)swift_slowAlloc();
        v21 = (void *)swift_slowAlloc();
        v44 = v21;
        v39 = a2;
        *(_DWORD *)v20 = 136446210;
        v22 = *v8;
        v23 = v8[1];
        swift_bridgeObjectRetain();
        v42 = sub_1C132AD90(v22, v23, (uint64_t *)&v44);
        a2 = v39;
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        sub_1C1339004((uint64_t)v8, type metadata accessor for ActivityParticipantEvent);
        _os_log_impl(&dword_1C1324000, v18, v19, "Unexpected error occurred when evaluating event obsolecence for activity: %{public}s", v20, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v21, -1, -1);
        MEMORY[0x1C3BAD3F4](v20, -1, -1);
      }
      else
      {
        sub_1C1339004((uint64_t)v8, type metadata accessor for ActivityParticipantEvent);
      }

LABEL_15:
      *a2 = 0;
      return;
    }

    if (qword_1ED793948 != -1)
      swift_once();
    v31 = sub_1C1426854();
    __swift_project_value_buffer(v31, (uint64_t)qword_1ED798598);
    sub_1C1338F24((uint64_t)a1, (uint64_t)v11, type metadata accessor for ActivityParticipantEvent);
    v32 = sub_1C1426848();
    v33 = sub_1C1426C68();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      v42 = v35;
      v40 = 0;
      *(_DWORD *)v34 = 136446210;
      v36 = *v11;
      v37 = v11[1];
      swift_bridgeObjectRetain();
      v41 = sub_1C132AD90(v36, v37, &v42);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      sub_1C1339004((uint64_t)v11, type metadata accessor for ActivityParticipantEvent);
      _os_log_impl(&dword_1C1324000, v32, v33, "Received event for unknown activity: %{public}s", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v35, -1, -1);
      MEMORY[0x1C3BAD3F4](v34, -1, -1);
    }
    else
    {
      sub_1C1339004((uint64_t)v11, type metadata accessor for ActivityParticipantEvent);
    }

    *a2 = 0;
  }
  else
  {
    if ((v14 & 1) != 0)
    {
      if (qword_1ED793948 != -1)
        swift_once();
      v24 = sub_1C1426854();
      __swift_project_value_buffer(v24, (uint64_t)qword_1ED798598);
      sub_1C1338F24((uint64_t)a1, (uint64_t)v13, type metadata accessor for ActivityParticipantEvent);
      v18 = sub_1C1426848();
      v25 = sub_1C1426C68();
      if (os_log_type_enabled(v18, v25))
      {
        v40 = 0;
        v26 = a2;
        v27 = (uint8_t *)swift_slowAlloc();
        v28 = (void *)swift_slowAlloc();
        v44 = v28;
        *(_DWORD *)v27 = 136446210;
        v30 = *v13;
        v29 = v13[1];
        swift_bridgeObjectRetain();
        v42 = sub_1C132AD90(v30, v29, (uint64_t *)&v44);
        sub_1C1426DB8();
        a2 = v26;
        swift_bridgeObjectRelease();
        sub_1C1339004((uint64_t)v13, type metadata accessor for ActivityParticipantEvent);
        _os_log_impl(&dword_1C1324000, v18, v25, "Event is obsolete for activity: %{public}s", v27, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v28, -1, -1);
        MEMORY[0x1C3BAD3F4](v27, -1, -1);
      }
      else
      {
        sub_1C1339004((uint64_t)v13, type metadata accessor for ActivityParticipantEvent);
      }
      goto LABEL_15;
    }
    *a2 = 1;
  }
}

uint64_t sub_1C13D1250(uint64_t *a1)
{
  uint64_t v1;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t ObjectType;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  _BYTE *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  void (*v61)(char *, uint64_t);
  _BYTE *v62;
  uint64_t v63;
  uint64_t *v64;
  char *v65;
  char *v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v3 = (int *)type metadata accessor for ActivityParticipantEvent(0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v73 = (uint64_t *)((char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v4);
  v67 = (uint64_t *)((char *)&v63 - v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791E48);
  MEMORY[0x1E0C80A78](v7);
  v68 = (uint64_t)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C1425450();
  v69 = *(_QWORD *)(v9 - 8);
  v70 = v9;
  MEMORY[0x1E0C80A78](v9);
  v66 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = type metadata accessor for Activity();
  v11 = *(_QWORD *)(v74 - 8);
  MEMORY[0x1E0C80A78](v74);
  v72 = (uint64_t)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797560);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B60);
  MEMORY[0x1E0C80A78](v16);
  v75 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1C14251B0();
  v19 = *(_QWORD *)(v18 - 8);
  v76 = v18;
  v77 = v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v65 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v71 = (char *)&v63 - v22;
  v23 = type metadata accessor for ActivityParticipantEvent.EventType(0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v63 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v1 + 16) + 16));
  v26 = *(uint64_t *)((char *)a1 + v3[8] + 8);
  ObjectType = swift_getObjectType();
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v26 + 48))(ObjectType, v26) & 1) != 0)
    goto LABEL_4;
  sub_1C1338F24((uint64_t)a1 + v3[6], (uint64_t)v25, type metadata accessor for ActivityParticipantEvent.EventType);
  if (swift_getEnumCaseMultiPayload() <= 1)
  {
    sub_1C1339004((uint64_t)v25, type metadata accessor for ActivityParticipantEvent.EventType);
LABEL_4:
    LOBYTE(v28) = 0;
    return v28 & 1;
  }
  v30 = *a1;
  v31 = a1[1];
  v64 = a1;
  swift_beginAccess();
  v32 = *(_QWORD *)(v1 + 40);
  if (*(_QWORD *)(v32 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v33 = sub_1C13277A0(v30, v31);
    v35 = v76;
    v34 = v77;
    v36 = v74;
    if ((v37 & 1) != 0)
    {
      sub_1C1338F24(*(_QWORD *)(v32 + 56) + *(_QWORD *)(v11 + 72) * v33, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v36);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v15, 1, 1, v74);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v36 = v74;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v15, 1, 1, v74);
    v35 = v76;
    v34 = v77;
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v15, 1, v36))
  {
    sub_1C132C860((uint64_t)v15, &qword_1ED797560);
    v38 = (uint64_t)v75;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56))(v75, 1, 1, v35);
LABEL_15:
    sub_1C132C860(v38, &qword_1ED793B60);
    if (qword_1ED793948 != -1)
      swift_once();
    v40 = sub_1C1426854();
    __swift_project_value_buffer(v40, (uint64_t)qword_1ED798598);
    v41 = v73;
    sub_1C1338F24((uint64_t)v64, (uint64_t)v73, type metadata accessor for ActivityParticipantEvent);
    v28 = sub_1C1426848();
    v42 = sub_1C1426C68();
    if (os_log_type_enabled((os_log_t)v28, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      v44 = swift_slowAlloc();
      v79 = v44;
      *(_DWORD *)v43 = 136446210;
      v45 = *v41;
      v46 = v41[1];
      swift_bridgeObjectRetain();
      v78 = sub_1C132AD90(v45, v46, &v79);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      sub_1C1339004((uint64_t)v41, type metadata accessor for ActivityParticipantEvent);
      _os_log_impl(&dword_1C1324000, (os_log_t)v28, v42, "Received an update for an unknown activity: %{public}s", v43, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v44, -1, -1);
      MEMORY[0x1C3BAD3F4](v43, -1, -1);
    }
    else
    {
      sub_1C1339004((uint64_t)v41, type metadata accessor for ActivityParticipantEvent);
    }

    sub_1C13D5E1C();
    swift_allocError();
    *v47 = 0;
    swift_willThrow();
    return v28 & 1;
  }
  v39 = v72;
  sub_1C1338F24((uint64_t)v15, v72, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
  sub_1C132C860((uint64_t)v15, &qword_1ED797560);
  v38 = (uint64_t)v75;
  sub_1C1425438();
  sub_1C1339004(v39, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v38, 0, 1, v35);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v38, 1, v35) == 1)
    goto LABEL_15;
  v48 = v71;
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v71, v38, v35);
  v28 = v68;
  sub_1C13D5DD4((uint64_t)v64 + v3[9], v68);
  v50 = v69;
  v49 = v70;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 48))(v28, 1, v70) == 1)
  {
    sub_1C132C860(v28, &qword_1ED791E48);
    if (qword_1ED793948 != -1)
      swift_once();
    v51 = sub_1C1426854();
    __swift_project_value_buffer(v51, (uint64_t)qword_1ED798598);
    v52 = v67;
    sub_1C1338F24((uint64_t)v64, (uint64_t)v67, type metadata accessor for ActivityParticipantEvent);
    v28 = sub_1C1426848();
    v53 = sub_1C1426C68();
    if (os_log_type_enabled((os_log_t)v28, v53))
    {
      v54 = (uint8_t *)swift_slowAlloc();
      v55 = swift_slowAlloc();
      v79 = v55;
      *(_DWORD *)v54 = 136446210;
      v56 = *v52;
      v57 = v52[1];
      swift_bridgeObjectRetain();
      v78 = sub_1C132AD90(v56, v57, &v79);
      v48 = v71;
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      sub_1C1339004((uint64_t)v52, type metadata accessor for ActivityParticipantEvent);
      _os_log_impl(&dword_1C1324000, (os_log_t)v28, v53, "Received an update without a payload for activity: %{public}s", v54, 0xCu);
      swift_arrayDestroy();
      v58 = v55;
      v34 = v77;
      MEMORY[0x1C3BAD3F4](v58, -1, -1);
      MEMORY[0x1C3BAD3F4](v54, -1, -1);
    }
    else
    {
      sub_1C1339004((uint64_t)v52, type metadata accessor for ActivityParticipantEvent);
    }

    sub_1C13D5E1C();
    swift_allocError();
    *v62 = 1;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v48, v35);
  }
  else
  {
    v59 = v66;
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 32))(v66, v28, v49);
    v60 = v65;
    sub_1C1425438();
    LOBYTE(v28) = sub_1C1425144();
    v61 = *(void (**)(char *, uint64_t))(v34 + 8);
    v61(v60, v35);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v59, v49);
    v61(v48, v35);
  }
  return v28 & 1;
}

void sub_1C13D1B0C(uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(char *, uint64_t), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  os_unfair_lock_s *v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  os_unfair_lock_s *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t ObjectType;
  uint64_t v35;
  void (*v36)(char *, uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  _QWORD v37[3];
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v11 = v10;
  v38 = a8;
  v39 = a4;
  v41 = a6;
  v42 = a7;
  v40 = a3;
  v15 = sub_1C1426854();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v37[2] = (char *)v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for ActivityManagerEvent(0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)(v10 + 16);
  v22 = *(os_unfair_lock_s **)(v21 + 16);
  os_unfair_lock_assert_not_owner(v22);
  os_unfair_lock_lock(v22);
  swift_beginAccess();
  v23 = *(_QWORD *)(v10 + 32);
  if (!*(_QWORD *)(v23 + 16))
    goto LABEL_6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24 = sub_1C13277A0(a1, a2);
  if ((v25 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_6:
    os_unfair_lock_unlock(v22);
    goto LABEL_7;
  }
  v37[1] = v16;
  v26 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v22);
  if (v26)
  {
    v37[0] = v15;
    v27 = *(os_unfair_lock_s **)(v21 + 16);
    os_unfair_lock_lock(v27);
    sub_1C13D3B60(v11, a1, a2, v39, a5, v41, v42, v40, (uint64_t)v20, v38, a9, a10 & 1);
    os_unfair_lock_unlock(v27);
    v32 = *(_QWORD *)(v26 + 16);
    if (v32)
    {
      v33 = (uint64_t *)(v26 + 40);
      do
      {
        if (*(v33 - 1) != a5)
        {
          ObjectType = swift_getObjectType();
          v35 = *v33;
          v36 = *(void (**)(char *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*v33 + 16);
          swift_unknownObjectRetain();
          v36(v20, v11, &off_1E7A8D458, ObjectType, v35);
          swift_unknownObjectRelease();
        }
        v33 += 2;
        --v32;
      }
      while (v32);
    }
    swift_bridgeObjectRelease();
    sub_1C1339004((uint64_t)v20, type metadata accessor for ActivityManagerEvent);
    return;
  }
LABEL_7:
  if (qword_1ED793948 != -1)
    swift_once();
  __swift_project_value_buffer(v15, (uint64_t)qword_1ED798598);
  swift_bridgeObjectRetain_n();
  v28 = sub_1C1426848();
  v29 = sub_1C1426C68();
  if (os_log_type_enabled(v28, v29))
  {
    v30 = (uint8_t *)swift_slowAlloc();
    v31 = swift_slowAlloc();
    v44 = v31;
    *(_DWORD *)v30 = 136446210;
    swift_bridgeObjectRetain();
    v43 = sub_1C132AD90(a1, a2, &v44);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C1324000, v28, v29, "Received an update for an activity with no subscribers: %{public}s", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v31, -1, -1);
    MEMORY[0x1C3BAD3F4](v30, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_1C13D21C8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  os_unfair_lock_s *v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  os_unfair_lock_s *v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t ObjectType;
  uint64_t v44;
  void (*v45)(char *, uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v10 = v9;
  v48 = a7;
  v49 = a8;
  v53 = a6;
  v54 = a5;
  v52 = a3;
  v55 = sub_1C1426854();
  v51 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v50 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (int *)type metadata accessor for ActivityManagerEvent(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for Activity();
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)(v9 + 16);
  v22 = *(os_unfair_lock_s **)(v21 + 16);
  os_unfair_lock_assert_not_owner(v22);
  os_unfair_lock_lock(v22);
  swift_beginAccess();
  v23 = *(_QWORD *)(v9 + 32);
  if (!*(_QWORD *)(v23 + 16))
    goto LABEL_6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24 = sub_1C13277A0(a1, a2);
  if ((v25 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_6:
    v26 = a1;
    os_unfair_lock_unlock(v22);
    goto LABEL_7;
  }
  v46 = v20;
  v26 = a1;
  v27 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v22);
  v47 = v27;
  if (v27)
  {
    v28 = *(os_unfair_lock_s **)(v21 + 16);
    os_unfair_lock_lock(v28);
    v29 = (uint64_t)v46;
    v30 = v54;
    sub_1C13D2EBC(v10, v26, a2, a4, v54, v53, v52, (uint64_t)v46);
    os_unfair_lock_unlock(v28);
    sub_1C1338F24(v29, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    v35 = *(_QWORD *)(v30 + 8);
    v17[v15[5]] = 2;
    v36 = (uint64_t *)&v17[v15[6]];
    *v36 = a4;
    v36[1] = v35;
    v37 = &v17[v15[7]];
    v38 = v49;
    *(_QWORD *)v37 = v48;
    *((_QWORD *)v37 + 1) = v38;
    v17[v15[8]] = a9 & 1;
    v39 = v47;
    v40 = *(_QWORD *)(v47 + 16);
    v41 = v29;
    if (v40)
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      v42 = (uint64_t *)(v39 + 40);
      do
      {
        if (*(v42 - 1) != a4)
        {
          ObjectType = swift_getObjectType();
          v44 = *v42;
          v45 = *(void (**)(char *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(*v42 + 16);
          swift_unknownObjectRetain();
          v45(v17, v10, &off_1E7A8D458, ObjectType, v44);
          swift_unknownObjectRelease();
        }
        v42 += 2;
        --v40;
      }
      while (v40);
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
    }
    swift_bridgeObjectRelease();
    sub_1C1339004((uint64_t)v17, type metadata accessor for ActivityManagerEvent);
    sub_1C1339004(v41, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    return;
  }
LABEL_7:
  if (qword_1ED793948 != -1)
    swift_once();
  __swift_project_value_buffer(v55, (uint64_t)qword_1ED798598);
  swift_bridgeObjectRetain_n();
  v31 = sub_1C1426848();
  v32 = sub_1C1426C68();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = (uint8_t *)swift_slowAlloc();
    v34 = swift_slowAlloc();
    v57 = v34;
    *(_DWORD *)v33 = 136446210;
    swift_bridgeObjectRetain();
    v56 = sub_1C132AD90(v26, a2, &v57);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C1324000, v31, v32, "Received an update for an activity with no subscribers: %{public}s", v33, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v34, -1, -1);
    MEMORY[0x1C3BAD3F4](v33, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1C13D2930()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  os_unfair_lock_s *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v1 = v0;
  v2 = type metadata accessor for ActivityParticipantEvent(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(os_unfair_lock_s **)(*(_QWORD *)(v0 + 16) + 16);
  os_unfair_lock_lock(v6);
  swift_beginAccess();
  v7 = *(_QWORD *)(v1 + 24);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v6);
  v18 = MEMORY[0x1E0DEE9D8];
  v8 = *(_QWORD *)(v7 + 16);
  if (!v8)
  {
    swift_bridgeObjectRelease();
    v13 = MEMORY[0x1E0DEE9D8];
    v14 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (!v14)
      return swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  v9 = 32;
  do
  {
    v10 = *(_QWORD *)(v7 + v9);
    swift_getObjectType();
    if (swift_conformsToProtocol2())
      v11 = v10;
    else
      v11 = 0;
    if (v11)
    {
      swift_unknownObjectRetain();
      v12 = sub_1C140A5DC();
      sub_1C133635C(v12);
      swift_unknownObjectRelease();
    }
    v9 += 16;
    --v8;
  }
  while (v8);
  swift_bridgeObjectRelease();
  v13 = v18;
  v14 = *(_QWORD *)(v18 + 16);
  if (v14)
  {
LABEL_12:
    v15 = v13 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v16 = *(_QWORD *)(v3 + 72);
    do
    {
      sub_1C1338F24(v15, (uint64_t)v5, type metadata accessor for ActivityParticipantEvent);
      sub_1C13D0788((uint64_t)v5);
      sub_1C1339004((uint64_t)v5, type metadata accessor for ActivityParticipantEvent);
      v15 += v16;
      --v14;
    }
    while (v14);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C13D2AD8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ActivityManager()
{
  return objc_opt_self();
}

uint64_t sub_1C13D2B34@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;

  v4 = v3;
  v45 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797560);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v41 - v11;
  v13 = *a2;
  v14 = a2[1];
  v44 = a1 + 40;
  swift_beginAccess();
  v15 = *(_QWORD *)(a1 + 40);
  if (*(_QWORD *)(v15 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_1C13277A0(v13, v14);
    if ((v17 & 1) != 0)
    {
      v18 = v16;
      v42 = *(_QWORD *)(v15 + 56);
      v43 = v3;
      v19 = type metadata accessor for Activity();
      v20 = a1;
      v21 = *(_QWORD *)(v19 - 8);
      v22 = v42 + *(_QWORD *)(v21 + 72) * v18;
      v23 = v43;
      sub_1C1338F24(v22, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      v24 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56);
      a1 = v20;
      v4 = v23;
      v24(v12, 0, 1, v19);
    }
    else
    {
      v19 = type metadata accessor for Activity();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v12, 1, 1, v19);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for Activity();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v12, 1, v19) != 1)
    {
      result = sub_1C132C860((uint64_t)v12, &qword_1ED797560);
      v27 = 0;
      goto LABEL_24;
    }
  }
  else
  {
    v19 = type metadata accessor for Activity();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v12, 1, 1, v19);
  }
  sub_1C132C860((uint64_t)v12, &qword_1ED797560);
  v25 = *a2;
  v26 = a2[1];
  sub_1C1338F24((uint64_t)a2, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
  type metadata accessor for Activity();
  v27 = 1;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v10, 0, 1, v19);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C13B396C((uint64_t)v10, v25, v26);
  swift_endAccess();
  result = swift_beginAccess();
  v29 = *(_QWORD *)(a1 + 24);
  v30 = *(_QWORD *)(v29 + 16);
  if (!v30)
  {
LABEL_24:
    v31 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_25;
  }
  v43 = v4;
  swift_bridgeObjectRetain_n();
  v31 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v32 = 32;
  do
  {
    v34 = *(_QWORD *)(v29 + v32);
    swift_getObjectType();
    v35 = swift_conformsToProtocol2();
    if (v35)
      v36 = v34;
    else
      v36 = 0;
    if (v35)
      v37 = v35;
    else
      v37 = 0;
    if (v36)
    {
      swift_unknownObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v31 = sub_1C136C198(0, v31[2] + 1, 1, v31);
      v39 = v31[2];
      v38 = v31[3];
      if (v39 >= v38 >> 1)
        v31 = sub_1C136C198((_QWORD *)(v38 > 1), v39 + 1, 1, v31);
      v31[2] = v39 + 1;
      v33 = &v31[2 * v39];
      v33[4] = v36;
      v33[5] = v37;
    }
    v32 += 16;
    --v30;
  }
  while (v30);
  result = swift_bridgeObjectRelease_n();
  v27 = 1;
LABEL_25:
  v40 = v45;
  *v45 = v31;
  *((_BYTE *)v40 + 8) = v27;
  return result;
}

uint64_t sub_1C13D2EBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  unint64_t v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t ObjectType;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char v59;
  void (*v60)(char *, uint64_t);
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  unint64_t v67;
  uint8_t *v68;
  uint64_t v69;
  uint8_t *v70;
  uint64_t v71;
  NSObject *v72;
  unint64_t v73;
  os_log_type_t v74;
  uint8_t *v75;
  uint64_t v76;
  const char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  NSObject *v81;
  unint64_t v82;
  os_log_type_t v83;
  uint8_t *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109[3];
  uint64_t v110;

  v107 = a5;
  v108 = a6;
  v106 = a4;
  v14 = sub_1C14251B0();
  v102 = *(_QWORD *)(v14 - 8);
  v103 = v14;
  v15 = MEMORY[0x1E0C80A78](v14);
  v101 = (char *)&v94 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v100 = (char *)&v94 - v17;
  v18 = sub_1C1425558();
  v104 = *(_QWORD *)(v18 - 8);
  v105 = v18;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v94 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797560);
  v22 = MEMORY[0x1E0C80A78](v21);
  v99 = (uint64_t)&v94 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v94 - v24;
  v98 = a1 + 40;
  swift_beginAccess();
  v26 = *(_QWORD *)(a1 + 40);
  if (!*(_QWORD *)(v26 + 16))
  {
    v39 = type metadata accessor for Activity();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v25, 1, 1, v39);
LABEL_7:
    sub_1C132C860((uint64_t)v25, &qword_1ED797560);
    if (qword_1ED793948 != -1)
      swift_once();
    v41 = sub_1C1426854();
    __swift_project_value_buffer(v41, (uint64_t)qword_1ED798598);
    swift_bridgeObjectRetain_n();
    v42 = sub_1C1426848();
    v43 = a3;
    v44 = sub_1C1426C68();
    if (os_log_type_enabled(v42, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc();
      v46 = swift_slowAlloc();
      v109[0] = v46;
      *(_DWORD *)v45 = 136446210;
      swift_bridgeObjectRetain();
      v110 = sub_1C132AD90(a2, v43, v109);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v42, v44, "Received an update for an activity that does not exist: %{public}s", v45, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v46, -1, -1);
      MEMORY[0x1C3BAD3F4](v45, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v47 = sub_1C142584C();
    sub_1C1329AD0(&qword_1ED7932F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FC80], MEMORY[0x1E0C8FC88]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v47 - 8) + 104))(v48, *MEMORY[0x1E0C8FC70], v47);
    return swift_willThrow();
  }
  v97 = a7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v27 = sub_1C13277A0(a2, a3);
  v96 = v8;
  if ((v28 & 1) != 0)
  {
    v29 = v27;
    v30 = a2;
    v31 = a3;
    v32 = *(_QWORD *)(v26 + 56);
    v33 = type metadata accessor for Activity();
    v34 = a8;
    v35 = *(_QWORD *)(v33 - 8);
    v36 = v32 + *(_QWORD *)(v35 + 72) * v29;
    a3 = v31;
    a2 = v30;
    v37 = v33;
    sub_1C1338F24(v36, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    v38 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56);
    a8 = v34;
    v38(v25, 0, 1, v37);
  }
  else
  {
    v37 = type metadata accessor for Activity();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v25, 1, 1, v37);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for Activity();
  v40 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v25, 1, v37) == 1)
    goto LABEL_7;
  sub_1C1339140((uint64_t)v25, a8, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
  if (sub_1C1406964() == 1)
  {
    ObjectType = swift_getObjectType();
    if (((*(uint64_t (**)(uint64_t))(v107 + 40))(ObjectType) & 1) == 0)
    {
      if (qword_1ED793948 != -1)
        swift_once();
      v71 = sub_1C1426854();
      __swift_project_value_buffer(v71, (uint64_t)qword_1ED798598);
      swift_bridgeObjectRetain_n();
      v72 = sub_1C1426848();
      v73 = a3;
      v74 = sub_1C1426C68();
      if (os_log_type_enabled(v72, v74))
      {
        v75 = (uint8_t *)swift_slowAlloc();
        v76 = swift_slowAlloc();
        v109[0] = v76;
        *(_DWORD *)v75 = 136446210;
        swift_bridgeObjectRetain();
        v110 = sub_1C132AD90(a2, v73, v109);
        sub_1C1426DB8();
        swift_bridgeObjectRelease_n();
        v77 = "Received an update for a zombie activity: %{public}s";
LABEL_38:
        _os_log_impl(&dword_1C1324000, v72, v74, v77, v75, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v76, -1, -1);
        MEMORY[0x1C3BAD3F4](v75, -1, -1);

LABEL_40:
        v88 = sub_1C142584C();
        sub_1C1329AD0(&qword_1ED7932F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FC80], MEMORY[0x1E0C8FC88]);
        swift_allocError();
        (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v88 - 8) + 104))(v89, *MEMORY[0x1E0C8FC70], v88);
LABEL_43:
        swift_willThrow();
        return sub_1C1339004(a8, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      }
LABEL_39:

      swift_bridgeObjectRelease_n();
      goto LABEL_40;
    }
  }
  v95 = v40;
  swift_bridgeObjectRetain();
  v51 = v108;
  v52 = sub_1C142554C();
  swift_bridgeObjectRelease();
  v54 = v104;
  v53 = v105;
  (*(void (**)(char *, uint64_t, uint64_t))(v104 + 16))(v20, v51, v105);
  if ((v52 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v54 + 8))(v20, v53);
  }
  else
  {
    v55 = sub_1C1425528();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v20, v53);
    if ((v55 & 1) == 0)
    {
      if (qword_1ED793948 != -1)
        swift_once();
      v80 = sub_1C1426854();
      __swift_project_value_buffer(v80, (uint64_t)qword_1ED798598);
      swift_bridgeObjectRetain_n();
      v81 = sub_1C1426848();
      v82 = a3;
      v83 = sub_1C1426C68();
      if (os_log_type_enabled(v81, v83))
      {
        v84 = (uint8_t *)swift_slowAlloc();
        v85 = swift_slowAlloc();
        v109[0] = v85;
        *(_DWORD *)v84 = 136446210;
        swift_bridgeObjectRetain();
        v110 = sub_1C132AD90(a2, v82, v109);
        sub_1C1426DB8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C1324000, v81, v83, "Received an update from a content source that cannot contribute to the activity: %{public}s", v84, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v85, -1, -1);
        MEMORY[0x1C3BAD3F4](v84, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v90 = sub_1C142584C();
      sub_1C1329AD0(&qword_1ED7932F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FC80], MEMORY[0x1E0C8FC88]);
      swift_allocError();
      v92 = v91;
      v93 = (_QWORD *)((char *)v91
                     + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6DB1E0) + 64));
      *v92 = 0x657461647055;
      v92[1] = 0xE600000000000000;
      sub_1C1425534();
      *v93 = a2;
      v93[1] = v82;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v90 - 8) + 104))(v92, *MEMORY[0x1E0C8FC78], v90);
      swift_bridgeObjectRetain();
      goto LABEL_43;
    }
  }
  v56 = v100;
  sub_1C1425438();
  v57 = a8 + *(int *)(v37 + 44);
  v58 = v101;
  sub_1C1425438();
  v59 = sub_1C1425144();
  v60 = *(void (**)(char *, uint64_t))(v102 + 8);
  v61 = v58;
  v62 = v103;
  v60(v61, v103);
  v60(v56, v62);
  if ((v59 & 1) == 0)
  {
    v63 = swift_getObjectType();
    if (((*(uint64_t (**)(uint64_t))(v107 + 48))(v63) & 1) == 0)
    {
      if (qword_1ED793948 != -1)
        swift_once();
      v86 = sub_1C1426854();
      __swift_project_value_buffer(v86, (uint64_t)qword_1ED798598);
      swift_bridgeObjectRetain_n();
      v72 = sub_1C1426848();
      v87 = a3;
      v74 = sub_1C1426C68();
      if (os_log_type_enabled(v72, v74))
      {
        v75 = (uint8_t *)swift_slowAlloc();
        v76 = swift_slowAlloc();
        v109[0] = v76;
        *(_DWORD *)v75 = 136446210;
        swift_bridgeObjectRetain();
        v110 = sub_1C132AD90(a2, v87, v109);
        sub_1C1426DB8();
        swift_bridgeObjectRelease_n();
        v77 = "Received an obsolete payload: %{public}s";
        goto LABEL_38;
      }
      goto LABEL_39;
    }
  }
  if (qword_1ED793948 != -1)
    swift_once();
  v64 = sub_1C1426854();
  __swift_project_value_buffer(v64, (uint64_t)qword_1ED798598);
  swift_bridgeObjectRetain_n();
  v65 = sub_1C1426848();
  v66 = sub_1C1426C80();
  if (os_log_type_enabled(v65, v66))
  {
    v108 = v37;
    v67 = a3;
    v68 = (uint8_t *)swift_slowAlloc();
    v69 = swift_slowAlloc();
    v109[0] = v69;
    v107 = v57;
    *(_DWORD *)v68 = 136446210;
    swift_bridgeObjectRetain();
    v110 = sub_1C132AD90(a2, v67, v109);
    v57 = v107;
    v37 = v108;
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C1324000, v65, v66, "Updating activity: %{public}s", v68, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v69, -1, -1);
    v70 = v68;
    a3 = v67;
    MEMORY[0x1C3BAD3F4](v70, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v78 = sub_1C1425450();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 24))(v57, v97, v78);
  v79 = v99;
  sub_1C1338F24(a8, v99, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v95 + 56))(v79, 0, 1, v37);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C13B396C(v79, a2, a3);
  return swift_endAccess();
}

int *sub_1C13D3B60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(char *, uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  void (*v53)(char *, uint64_t, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int *result;
  uint64_t v67;
  int v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char v73;
  void (*v74)(char *, uint64_t);
  void (*v75)(char *, uint64_t);
  uint64_t ObjectType;
  char v77;
  uint64_t v78;
  unint64_t v79;
  NSObject *v80;
  os_log_type_t v81;
  uint8_t *v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  uint64_t v86;
  void (*v87)(char *, uint64_t, uint64_t);
  char *v88;
  char v89;
  char *v90;
  void (*v91)(char *, uint64_t);
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  unint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  NSObject *v101;
  os_log_type_t v102;
  _BOOL4 v103;
  uint8_t *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  char v114;
  char *v115;
  char *v116;
  uint64_t v117;
  void (*v118)(char *, uint64_t);
  uint64_t v119;
  char v120;
  void (*v121)(char *, char *, uint64_t);
  char *v122;
  char v123;
  NSObject *v124;
  os_log_type_t v125;
  _BOOL4 v126;
  uint64_t v127;
  uint8_t *v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  NSObject *v137;
  os_log_type_t v138;
  uint8_t *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  unint64_t v143;
  NSObject *v144;
  os_log_type_t v145;
  _BOOL4 v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  _QWORD *v155;
  uint64_t *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  void (*v166)(char *, uint64_t);
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  _QWORD *v172;
  _QWORD *v173;
  uint64_t v174;
  uint64_t v175;
  void (*v176)(char *, uint64_t);
  void (*v177)(char *, void (*)(_QWORD, _QWORD), uint64_t);
  char *v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  char *v191;
  char *v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  char *v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  void (*v206)(char *, uint64_t);
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214[9];

  v187 = a8;
  v200 = a7;
  v195 = a6;
  v196 = a5;
  v206 = a4;
  v189 = a9;
  v188 = sub_1C1425A08();
  MEMORY[0x1E0C80A78](v188);
  v199 = (char *)&v176 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791E48);
  MEMORY[0x1E0C80A78](v16);
  v186 = (uint64_t)&v176 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v185 = sub_1C1425450();
  v184 = *(_QWORD *)(v185 - 8);
  MEMORY[0x1E0C80A78](v185);
  v180 = (char *)&v176 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1C1425558();
  v193 = *(_QWORD *)(v19 - 8);
  v20 = MEMORY[0x1E0C80A78](v19);
  v194 = (char *)&v176 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v192 = (char *)&v176 - v22;
  v205 = sub_1C14251B0();
  v203 = *(_QWORD *)(v205 - 8);
  v23 = MEMORY[0x1E0C80A78](v205);
  v178 = (char *)&v176 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v23);
  v197 = (char *)&v176 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v190 = (char *)&v176 - v28;
  v29 = MEMORY[0x1E0C80A78](v27);
  v198 = (char *)&v176 - v30;
  v31 = MEMORY[0x1E0C80A78](v29);
  v33 = (char *)&v176 - v32;
  MEMORY[0x1E0C80A78](v31);
  v191 = (char *)&v176 - v34;
  v35 = sub_1C1425630();
  v201 = *(_QWORD *)(v35 - 8);
  v202 = v35;
  MEMORY[0x1E0C80A78](v35);
  v204 = (char *)&v176 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v207 = sub_1C142557C();
  v211 = *(_QWORD *)(v207 - 8);
  v37 = MEMORY[0x1E0C80A78](v207);
  v179 = (char *)&v176 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v37);
  v40 = (char *)&v176 - v39;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797560);
  v42 = MEMORY[0x1E0C80A78](v41);
  v183 = (uint64_t)&v176 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v42);
  v45 = (char *)&v176 - v44;
  v46 = type metadata accessor for Activity();
  v47 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v210 = (uint64_t)&v176 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v182 = a1 + 40;
  swift_beginAccess();
  v181 = a1;
  v49 = *(_QWORD *)(a1 + 40);
  v50 = *(_QWORD *)(v49 + 16);
  v212 = a3;
  v209 = a2;
  if (!v50)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56))(v45, 1, 1, v46);
LABEL_7:
    sub_1C132C860((uint64_t)v45, &qword_1ED797560);
    if (qword_1ED793948 != -1)
      swift_once();
    v58 = sub_1C1426854();
    __swift_project_value_buffer(v58, (uint64_t)qword_1ED798598);
    v59 = v212;
    swift_bridgeObjectRetain_n();
    v60 = sub_1C1426848();
    v61 = sub_1C1426C68();
    if (os_log_type_enabled(v60, v61))
    {
      v62 = (uint8_t *)swift_slowAlloc();
      v63 = swift_slowAlloc();
      v214[0] = v63;
      *(_DWORD *)v62 = 136446210;
      swift_bridgeObjectRetain();
      v213 = sub_1C132AD90(v209, v59, v214);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v60, v61, "Received stop for an activity that does not exist: %{public}s", v62, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v63, -1, -1);
      MEMORY[0x1C3BAD3F4](v62, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v64 = sub_1C142584C();
    sub_1C1329AD0(&qword_1ED7932F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FC80], MEMORY[0x1E0C8FC88]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v64 - 8) + 104))(v65, *MEMORY[0x1E0C8FC70], v64);
    return (int *)swift_willThrow();
  }
  v208 = v46;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v51 = sub_1C13277A0(a2, a3);
  if ((v52 & 1) != 0)
  {
    sub_1C1338F24(*(_QWORD *)(v49 + 56) + *(_QWORD *)(v47 + 72) * v51, (uint64_t)v45, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    v53 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56);
    v54 = v45;
    v55 = 0;
  }
  else
  {
    v53 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56);
    v54 = v45;
    v55 = 1;
  }
  v56 = v208;
  v53(v54, v55, 1, v208);
  v57 = v211;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v56) == 1)
    goto LABEL_7;
  v67 = v210;
  sub_1C1339140((uint64_t)v45, v210, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
  v68 = sub_1C1406964();
  v69 = v207;
  v177 = *(void (**)(char *, void (*)(_QWORD, _QWORD), uint64_t))(v57 + 16);
  v177(v40, (void (*)(_QWORD, _QWORD))v206, v207);
  if (v68 == 1)
  {
    v70 = v204;
    sub_1C1425564();
    v71 = v191;
    sub_1C1425600();
    (*(void (**)(char *, uint64_t))(v201 + 8))(v70, v202);
    sub_1C142518C();
    sub_1C1329AD0((unint64_t *)&qword_1ED7935D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
    v72 = v205;
    v73 = sub_1C1426A58();
    v74 = *(void (**)(char *, uint64_t))(v203 + 8);
    v74(v33, v72);
    v74(v71, v72);
    v75 = *(void (**)(char *, uint64_t))(v211 + 8);
    v75(v40, v207);
    if ((v73 & 1) != 0)
    {
      ObjectType = swift_getObjectType();
      v77 = (*(uint64_t (**)(uint64_t))(v195 + 40))(ObjectType);
      v67 = v210;
      if ((v77 & 1) == 0)
      {
        if (qword_1ED793948 != -1)
          swift_once();
        v78 = sub_1C1426854();
        __swift_project_value_buffer(v78, (uint64_t)qword_1ED798598);
        v79 = v212;
        swift_bridgeObjectRetain_n();
        v80 = sub_1C1426848();
        v81 = sub_1C1426C68();
        if (os_log_type_enabled(v80, v81))
        {
          v82 = (uint8_t *)swift_slowAlloc();
          v83 = swift_slowAlloc();
          v214[0] = v83;
          *(_DWORD *)v82 = 136446210;
          swift_bridgeObjectRetain();
          v213 = sub_1C132AD90(v209, v79, v214);
          v67 = v210;
          sub_1C1426DB8();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1C1324000, v80, v81, "Received an update for a zombie activity: %{public}s", v82, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3BAD3F4](v83, -1, -1);
          MEMORY[0x1C3BAD3F4](v82, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        v174 = sub_1C142584C();
        sub_1C1329AD0(&qword_1ED7932F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FC80], MEMORY[0x1E0C8FC88]);
        swift_allocError();
        (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v174 - 8) + 104))(v175, *MEMORY[0x1E0C8FC70], v174);
LABEL_60:
        swift_willThrow();
        return (int *)sub_1C1339004(v67, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      }
    }
    else
    {
      v67 = v210;
    }
  }
  else
  {
    v75 = *(void (**)(char *, uint64_t))(v57 + 8);
    v75(v40, v69);
  }
  v176 = v75;
  swift_bridgeObjectRetain();
  v84 = v200;
  v85 = sub_1C142554C();
  swift_bridgeObjectRelease();
  v86 = v193;
  v87 = *(void (**)(char *, uint64_t, uint64_t))(v193 + 16);
  v88 = v192;
  v87(v192, v84, v19);
  if ((v85 & 1) != 0)
    v89 = 1;
  else
    v89 = sub_1C142551C();
  v90 = v194;
  v194 = (char *)v53;
  v91 = *(void (**)(char *, uint64_t))(v86 + 8);
  v91(v88, v19);
  v87(v90, v84, v19);
  if ((v89 & 1) != 0)
  {
    v91(v90, v19);
  }
  else
  {
    v92 = sub_1C1425528();
    v91(v90, v19);
    if ((v92 & 1) == 0)
    {
      v135 = v212;
      if (qword_1ED793948 != -1)
        swift_once();
      v136 = sub_1C1426854();
      __swift_project_value_buffer(v136, (uint64_t)qword_1ED798598);
      swift_bridgeObjectRetain_n();
      v137 = sub_1C1426848();
      v138 = sub_1C1426C68();
      if (os_log_type_enabled(v137, v138))
      {
        v139 = (uint8_t *)swift_slowAlloc();
        v140 = swift_slowAlloc();
        v214[0] = v140;
        *(_DWORD *)v139 = 136446210;
        swift_bridgeObjectRetain();
        v141 = v209;
        v213 = sub_1C132AD90(v209, v135, v214);
        v67 = v210;
        sub_1C1426DB8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C1324000, v137, v138, "Received stop from a content source that cannot contribute to the activity: %{public}s", v139, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v140, -1, -1);
        MEMORY[0x1C3BAD3F4](v139, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        v141 = v209;
      }
      v153 = sub_1C142584C();
      sub_1C1329AD0(&qword_1ED7932F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FC80], MEMORY[0x1E0C8FC88]);
      swift_allocError();
      v155 = v154;
      v156 = (_QWORD *)((char *)v154
                      + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6DB1E0) + 64));
      *v155 = 6581829;
      v155[1] = 0xE300000000000000;
      sub_1C1425534();
      *v156 = v141;
      v156[1] = v135;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v153 - 8) + 104))(v155, *MEMORY[0x1E0C8FC78], v153);
      swift_bridgeObjectRetain();
      goto LABEL_60;
    }
  }
  v93 = v186;
  sub_1C13D5DD4(v187, v186);
  v94 = v184;
  v95 = v185;
  v96 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v184 + 48))(v93, 1, v185);
  v97 = v212;
  if (v96 == 1)
  {
    sub_1C132C860(v93, &qword_1ED791E48);
  }
  else
  {
    v98 = v180;
    (*(void (**)(char *, uint64_t, uint64_t))(v94 + 32))(v180, v93, v95);
    (*(void (**)(uint64_t, char *, uint64_t))(v94 + 40))(v67 + *(int *)(v208 + 44), v98, v95);
  }
  v99 = v198;
  if (qword_1ED793948 != -1)
    swift_once();
  v100 = sub_1C1426854();
  __swift_project_value_buffer(v100, (uint64_t)qword_1ED798598);
  swift_bridgeObjectRetain_n();
  v101 = sub_1C1426848();
  v102 = sub_1C1426C80();
  v103 = os_log_type_enabled(v101, v102);
  LODWORD(v192) = a12 & 1;
  if (v103)
  {
    v104 = (uint8_t *)swift_slowAlloc();
    v105 = swift_slowAlloc();
    v214[0] = v105;
    *(_DWORD *)v104 = 136446210;
    swift_bridgeObjectRetain();
    v213 = sub_1C132AD90(v209, v97, v214);
    v67 = v210;
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C1324000, v101, v102, "Stopping activity: %{public}s", v104, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v105, -1, -1);
    MEMORY[0x1C3BAD3F4](v104, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v106 = (uint64_t)v199;
  v107 = v197;
  v200 = a11;
  v193 = a10;
  v108 = v204;
  sub_1C1425564();
  sub_1C1425600();
  (*(void (**)(char *, uint64_t))(v201 + 8))(v108, v202);
  v109 = v99;
  v110 = v208;
  sub_1C1338F24(v67 + *(int *)(v208 + 24), v106, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v111 = v209;
    sub_1C13C02A4(v209, v97);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v112 = v183;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v194)(v183, 1, 1, v110);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1C13B396C(v112, v111, v97);
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v203 + 8))(v109, v205);
    sub_1C1339004(v106, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
    v113 = 3;
    v114 = (char)v192;
  }
  else
  {
    v115 = v191;
    sub_1C142518C();
    v116 = v190;
    sub_1C142512C();
    v117 = v203;
    v118 = *(void (**)(char *, uint64_t))(v203 + 8);
    v119 = v205;
    v118(v115, v205);
    sub_1C1329AD0((unint64_t *)&qword_1ED7935D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
    v120 = sub_1C1426A58();
    v121 = *(void (**)(char *, char *, uint64_t))(v117 + 16);
    if ((v120 & 1) != 0)
      v122 = v116;
    else
      v122 = v109;
    v121(v107, v122, v119);
    sub_1C142518C();
    v123 = sub_1C1425150();
    v118(v115, v119);
    v206 = v118;
    if ((v123 & 1) != 0)
    {
      v124 = sub_1C1426848();
      v125 = sub_1C1426C80();
      v126 = os_log_type_enabled(v124, v125);
      v127 = v208;
      v114 = (char)v192;
      if (v126)
      {
        v128 = (uint8_t *)swift_slowAlloc();
        v129 = swift_slowAlloc();
        v214[0] = v129;
        *(_DWORD *)v128 = 136446210;
        swift_beginAccess();
        v130 = sub_1C1406DD8();
        v214[8] = sub_1C132AD90(v130, v131, v214);
        v119 = v205;
        v67 = v210;
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C1324000, v124, v125, "Activity: %{public}s should be discarded now", v128, 0xCu);
        swift_arrayDestroy();
        v132 = v129;
        v133 = v199;
        MEMORY[0x1C3BAD3F4](v132, -1, -1);
        MEMORY[0x1C3BAD3F4](v128, -1, -1);

        v134 = v209;
      }
      else
      {

        v134 = v209;
        v67 = v210;
        v133 = v199;
        v119 = v205;
      }
      swift_beginAccess();
      v157 = v212;
      swift_bridgeObjectRetain();
      sub_1C13C02A4(v134, v157);
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v158 = v183;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v194)(v183, 1, 1, v127);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_1C13B396C(v158, v134, v157);
      swift_endAccess();
      v113 = 3;
      v159 = v197;
      v160 = v198;
    }
    else
    {
      v142 = v178;
      v121(v178, v107, v119);
      v143 = v212;
      swift_bridgeObjectRetain_n();
      v144 = sub_1C1426848();
      v145 = sub_1C1426C80();
      v146 = os_log_type_enabled(v144, v145);
      v147 = v208;
      v133 = v199;
      if (v146)
      {
        v148 = swift_slowAlloc();
        v149 = swift_slowAlloc();
        v214[0] = v149;
        *(_DWORD *)v148 = 136446466;
        swift_bridgeObjectRetain();
        v213 = sub_1C132AD90(v209, v143, v214);
        sub_1C1426DB8();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v148 + 12) = 2082;
        sub_1C1329AD0((unint64_t *)&unk_1ED793B50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
        v150 = sub_1C1427058();
        v213 = sub_1C132AD90(v150, v151, v214);
        v67 = v210;
        v119 = v205;
        sub_1C1426DB8();
        v147 = v208;
        swift_bridgeObjectRelease();
        v118(v142, v119);
        _os_log_impl(&dword_1C1324000, v144, v145, "Activity: %{public}s should be discarded at %{public}s", (uint8_t *)v148, 0x16u);
        swift_arrayDestroy();
        v152 = v149;
        v133 = v199;
        MEMORY[0x1C3BAD3F4](v152, -1, -1);
        MEMORY[0x1C3BAD3F4](v148, -1, -1);

      }
      else
      {
        swift_bridgeObjectRelease_n();
        v118(v142, v119);

        v67 = v210;
      }
      v159 = v197;
      sub_1C142560C();
      v161 = v179;
      sub_1C1425570();
      v162 = v67 + *(int *)(v147 + 48);
      sub_1C132C860(v162, &qword_1ED7935E8);
      v163 = v207;
      v177((char *)v162, (void (*)(_QWORD, _QWORD))v161, v207);
      v113 = 1;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v211 + 56))(v162, 0, 1, v163);
      v164 = v183;
      sub_1C1338F24(v67, v183, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v194)(v164, 0, 1, v147);
      swift_beginAccess();
      v165 = v212;
      swift_bridgeObjectRetain();
      sub_1C13B396C(v164, v209, v165);
      swift_endAccess();
      v176(v161, v163);
      v160 = v198;
      v114 = (char)v192;
    }
    v166 = v206;
    v206(v159, v119);
    v166(v190, v119);
    v166(v160, v119);
    v167 = sub_1C1425AEC();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v167 - 8) + 8))(v133, v167);
  }
  swift_beginAccess();
  v168 = v189;
  sub_1C1338F24(v67, v189, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
  v169 = *(_QWORD *)(v195 + 8);
  v170 = v200;
  swift_bridgeObjectRetain();
  v171 = v196;
  swift_unknownObjectRetain();
  sub_1C1339004(v67, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
  result = (int *)type metadata accessor for ActivityManagerEvent(0);
  *(_BYTE *)(v168 + result[5]) = v113;
  v172 = (_QWORD *)(v168 + result[6]);
  *v172 = v171;
  v172[1] = v169;
  v173 = (_QWORD *)(v168 + result[7]);
  *v173 = v193;
  v173[1] = v170;
  *(_BYTE *)(v168 + result[8]) = v114;
  return result;
}

unint64_t sub_1C13D5248@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  unint64_t result;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t *v65;
  uint64_t *v66;
  uint64_t *v67;
  _QWORD *v68;
  uint64_t v69;
  int64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74[3];

  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
  v5 = MEMORY[0x1E0C80A78](v69);
  v68 = (uint64_t *)((char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = MEMORY[0x1E0C80A78](v5);
  v67 = (uint64_t *)((char *)&v57 - v8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v66 = (uint64_t *)((char *)&v57 - v10);
  v11 = MEMORY[0x1E0C80A78](v9);
  v65 = (uint64_t *)((char *)&v57 - v12);
  MEMORY[0x1E0C80A78](v11);
  v64 = (uint64_t *)((char *)&v57 - v13);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793A60);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C1428070;
  *(_QWORD *)(inited + 32) = 0xD000000000000016;
  *(_QWORD *)(inited + 40) = 0x80000001C14300D0;
  swift_beginAccess();
  v15 = swift_bridgeObjectRetain();
  v16 = sub_1C13CF524(v15);
  v17 = v2;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v16 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797AD0);
    v18 = sub_1C1426FBC();
  }
  else
  {
    v18 = MEMORY[0x1E0DEE9E0];
  }
  v74[0] = v18;
  v19 = (_QWORD *)swift_bridgeObjectRetain();
  sub_1C1336588(v19, 1, v74);
  if (!v2)
  {
    swift_bridgeObjectRelease();
    v20 = v74[0];
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7979D8);
    *(_QWORD *)(inited + 48) = v20;
    *(_QWORD *)(inited + 72) = v21;
    *(_QWORD *)(inited + 80) = 0x6974697669746361;
    *(_QWORD *)(inited + 88) = 0xEA00000000007365;
    swift_beginAccess();
    v22 = *(_QWORD *)(a1 + 40);
    v23 = *(_QWORD *)(v22 + 16);
    v24 = MEMORY[0x1E0DEE9D8];
    if (v23)
    {
      v58 = v21;
      v59 = 0;
      v60 = inited;
      v61 = a2;
      v73 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1C1336948(0, v23, 0);
      v25 = sub_1C135833C(v22);
      v27 = v26;
      v29 = v28 & 1;
      v62 = v22 + 64;
      v72 = v73;
      v70 = v23 - 1;
      v63 = v22;
      while (1)
      {
        v30 = v69;
        v31 = v64;
        v32 = (uint64_t)v64 + *(int *)(v69 + 48);
        v71 = v27;
        v33 = sub_1C13A1514(v32, v25, v27, v29 & 1, v22);
        *v31 = v33;
        v31[1] = v34;
        v35 = (uint64_t)v65;
        *v65 = v33;
        *(_QWORD *)(v35 + 8) = v34;
        sub_1C1338F24(v32, v35 + *(int *)(v30 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        v36 = v66;
        sub_1C13D5D8C(v35, (uint64_t)v66);
        swift_bridgeObjectRetain();
        sub_1C132C860((uint64_t)v31, &qword_1ED7939D8);
        v37 = *(int *)(v30 + 48);
        v38 = v67;
        v39 = (uint64_t)v67 + v37;
        v40 = (uint64_t)v36 + v37;
        v41 = *v36;
        v42 = v36[1];
        *v67 = *v36;
        v38[1] = v42;
        sub_1C1338F24((uint64_t)v36 + v37, (uint64_t)v38 + v37, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        v43 = *(int *)(v30 + 48);
        v44 = v68;
        v45 = (uint64_t)v68 + v43;
        *v68 = v41;
        v44[1] = v42;
        sub_1C1338F24(v40, (uint64_t)v44 + v43, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        swift_bridgeObjectRetain();
        v46 = sub_1C1406DD8();
        v48 = v47;
        sub_1C1339004(v45, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        sub_1C1339004(v39, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        sub_1C132C860((uint64_t)v36, &qword_1ED7939D8);
        v24 = v72;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C1336948(0, *(_QWORD *)(v24 + 16) + 1, 1);
          v24 = v73;
        }
        v50 = *(_QWORD *)(v24 + 16);
        v49 = *(_QWORD *)(v24 + 24);
        if (v50 >= v49 >> 1)
        {
          sub_1C1336948(v49 > 1, v50 + 1, 1);
          v24 = v73;
        }
        *(_QWORD *)(v24 + 16) = v50 + 1;
        v51 = (_QWORD *)(v24 + 32 * v50);
        v51[4] = v41;
        v51[5] = v42;
        v51[6] = v46;
        v51[7] = v48;
        v22 = v63;
        if (v25 < 0 || v25 >= -(-1 << *(_BYTE *)(v63 + 32)))
          break;
        if (((*(_QWORD *)(v62 + (((unint64_t)v25 >> 3) & 0xFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
          goto LABEL_24;
        if (*(_DWORD *)(v63 + 36) != (_DWORD)v71)
          goto LABEL_25;
        v52 = sub_1C1426E0C();
        if (!v70)
        {
          swift_bridgeObjectRelease();
          a2 = v61;
          inited = v60;
          v17 = v59;
          v21 = v58;
          goto LABEL_18;
        }
        v25 = v52;
        v72 = v24;
        v29 = 0;
        v27 = *(unsigned int *)(v22 + 36);
        --v70;
      }
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
    }
    else
    {
LABEL_18:
      if (*(_QWORD *)(v24 + 16))
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797AD0);
        v53 = sub_1C1426FBC();
      }
      else
      {
        v53 = MEMORY[0x1E0DEE9E0];
      }
      v73 = v53;
      v54 = (_QWORD *)swift_bridgeObjectRetain();
      sub_1C1336588(v54, 1, &v73);
      if (!v17)
      {
        swift_bridgeObjectRelease();
        v55 = v73;
        *(_QWORD *)(inited + 120) = v21;
        *(_QWORD *)(inited + 96) = v55;
        result = sub_1C133204C(inited);
        *a2 = result;
        return result;
      }
    }
  }
  result = swift_unexpectedError();
  __break(1u);
  return result;
}

unint64_t sub_1C13D5840()
{
  uint64_t *v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  unint64_t v4;

  v1 = *v0;
  v2 = *(os_unfair_lock_s **)(*(_QWORD *)(*v0 + 16) + 16);
  os_unfair_lock_lock(v2);
  sub_1C13D5248(v1, &v4);
  os_unfair_lock_unlock(v2);
  return v4;
}

void sub_1C13D5898(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint8_t *v32;
  os_unfair_lock_s *v33;
  uint64_t *v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  int *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t ObjectType;
  void (*v45)(char *, uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  char v64;

  v58 = a5;
  v60 = a3;
  v59 = type metadata accessor for ActivityManagerEvent(0);
  MEMORY[0x1E0C80A78](v59);
  v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Activity();
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (uint64_t *)((char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v52 - v19;
  if (qword_1ED793948 != -1)
    swift_once();
  v21 = sub_1C1426854();
  v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1ED798598);
  v61 = a1;
  sub_1C1338F24((uint64_t)a1, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
  v57 = v22;
  v23 = sub_1C1426848();
  v24 = sub_1C1426C80();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = swift_slowAlloc();
    v54 = a4;
    v26 = (uint8_t *)v25;
    v27 = swift_slowAlloc();
    v56 = v18;
    v28 = v27;
    v63 = v27;
    v55 = a2;
    *(_DWORD *)v26 = 136446210;
    v53 = a8;
    v29 = sub_1C1406DD8();
    v62 = sub_1C132AD90(v29, v30, &v63);
    a8 = v53;
    a2 = v55;
    sub_1C1426DB8();
    swift_bridgeObjectRelease();
    sub_1C1339004((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    _os_log_impl(&dword_1C1324000, v23, v24, "Starting activity: %{public}s", v26, 0xCu);
    swift_arrayDestroy();
    v31 = v28;
    v18 = v56;
    MEMORY[0x1C3BAD3F4](v31, -1, -1);
    v32 = v26;
    a4 = v54;
    MEMORY[0x1C3BAD3F4](v32, -1, -1);
  }
  else
  {
    sub_1C1339004((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
  }

  v33 = *(os_unfair_lock_s **)(*(_QWORD *)(a6 + 16) + 16);
  os_unfair_lock_lock(v33);
  v34 = v61;
  sub_1C13D2B34(a6, v61, &v63);
  os_unfair_lock_unlock(v33);
  v35 = v63;
  if (v64 == 1)
  {
    v36 = v58 & 1;
    sub_1C1338F24((uint64_t)v34, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    v38 = (int *)v59;
    v37 = v60;
    v14[*(int *)(v59 + 20)] = 0;
    v39 = &v14[v38[6]];
    *(_QWORD *)v39 = a2;
    *((_QWORD *)v39 + 1) = a8;
    v40 = &v14[v38[7]];
    *(_QWORD *)v40 = v37;
    *((_QWORD *)v40 + 1) = a4;
    v14[v38[8]] = v36;
    v41 = *(_QWORD *)(v35 + 16);
    if (v41)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      v42 = (uint64_t *)(v35 + 40);
      do
      {
        v43 = *v42;
        ObjectType = swift_getObjectType();
        v45 = *(void (**)(char *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v43 + 16);
        swift_unknownObjectRetain();
        v45(v14, a6, &off_1E7A8D458, ObjectType, v43);
        swift_unknownObjectRelease();
        v42 += 2;
        --v41;
      }
      while (v41);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
    }
    sub_1C1339004((uint64_t)v14, type metadata accessor for ActivityManagerEvent);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1C1338F24((uint64_t)v34, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    v46 = sub_1C1426848();
    v47 = sub_1C1426C68();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      v49 = swift_slowAlloc();
      v63 = v49;
      *(_DWORD *)v48 = 136446210;
      v50 = *v18;
      v51 = v18[1];
      swift_bridgeObjectRetain();
      v62 = sub_1C132AD90(v50, v51, &v63);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      sub_1C1339004((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      _os_log_impl(&dword_1C1324000, v46, v47, "Activity with ID already exists: %{public}s", v48, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v49, -1, -1);
      MEMORY[0x1C3BAD3F4](v48, -1, -1);
    }
    else
    {
      sub_1C1339004((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    }

  }
}

uint64_t sub_1C13D5D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C13D5DD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791E48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C13D5E1C()
{
  unint64_t result;

  result = qword_1EF6DBE20;
  if (!qword_1EF6DBE20)
  {
    result = MEMORY[0x1C3BAD334](&unk_1C142A860, &type metadata for ActivityManager.ActivityManagerError);
    atomic_store(result, (unint64_t *)&qword_1EF6DBE20);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ActivityManager.ActivityManagerError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C13D5EAC + 4 * byte_1C142A775[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C13D5EE0 + 4 * byte_1C142A770[v4]))();
}

uint64_t sub_1C13D5EE0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C13D5EE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C13D5EF0);
  return result;
}

uint64_t sub_1C13D5EFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C13D5F04);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C13D5F08(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C13D5F10(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityManager.ActivityManagerError()
{
  return &type metadata for ActivityManager.ActivityManagerError;
}

unint64_t sub_1C13D5F30()
{
  unint64_t result;

  result = qword_1EF6DBE30;
  if (!qword_1EF6DBE30)
  {
    result = MEMORY[0x1C3BAD334](&unk_1C142A838, &type metadata for ActivityManager.ActivityManagerError);
    atomic_store(result, (unint64_t *)&qword_1EF6DBE30);
  }
  return result;
}

uint64_t sub_1C13D5F74@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(void);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t result;
  int64_t v25;
  _QWORD *v26;
  void (*v27)(void);
  unint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  char *v46;
  char *v47;
  char *v48;
  int64_t v49;
  unint64_t v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int64_t v55;
  char *v56;
  void (*v57)(void);
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int64_t v70;

  v53 = a3;
  v68 = a2;
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
  v4 = MEMORY[0x1E0C80A78](v63);
  v62 = (uint64_t *)((char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = MEMORY[0x1E0C80A78](v4);
  v56 = (char *)&v53 - v7;
  MEMORY[0x1E0C80A78](v6);
  v61 = (char *)&v53 - v8;
  v9 = sub_1C14251B0();
  v10 = MEMORY[0x1E0C80A78](v9);
  v60 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v59 = (char *)&v53 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v58 = (char *)&v53 - v15;
  MEMORY[0x1E0C80A78](v14);
  v65 = (char *)&v53 - v16;
  v66 = v17;
  v18 = *(void (**)(void))(v17 + 16);
  v64 = v19;
  v57 = v18;
  v18();
  v20 = *(_QWORD *)(a1 + 64);
  v54 = a1 + 64;
  v21 = 1 << *(_BYTE *)(a1 + 32);
  v22 = -1;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  v23 = v22 & v20;
  v55 = (unint64_t)(v21 + 63) >> 6;
  v67 = a1;
  result = swift_bridgeObjectRetain();
  v25 = 0;
  v26 = v56;
  v27 = v57;
  while (1)
  {
    if (v23)
    {
      v69 = (v23 - 1) & v23;
      v70 = v25;
      v28 = __clz(__rbit64(v23)) | (v25 << 6);
      goto LABEL_5;
    }
    v49 = v25 + 1;
    if (__OFADD__(v25, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v49 >= v55)
      goto LABEL_26;
    v50 = *(_QWORD *)(v54 + 8 * v49);
    v51 = v25 + 1;
    if (!v50)
    {
      v51 = v25 + 2;
      if (v25 + 2 >= v55)
        goto LABEL_26;
      v50 = *(_QWORD *)(v54 + 8 * v51);
      if (!v50)
      {
        v51 = v25 + 3;
        if (v25 + 3 >= v55)
          goto LABEL_26;
        v50 = *(_QWORD *)(v54 + 8 * v51);
        if (!v50)
        {
          v51 = v25 + 4;
          if (v25 + 4 >= v55)
            goto LABEL_26;
          v50 = *(_QWORD *)(v54 + 8 * v51);
          if (!v50)
            break;
        }
      }
    }
LABEL_25:
    v69 = (v50 - 1) & v50;
    v70 = v51;
    v28 = __clz(__rbit64(v50)) + (v51 << 6);
LABEL_5:
    v29 = *(_QWORD *)(v67 + 56);
    v30 = (uint64_t *)(*(_QWORD *)(v67 + 48) + 16 * v28);
    v31 = *v30;
    v32 = v30[1];
    v33 = type metadata accessor for Activity();
    v34 = v29 + *(_QWORD *)(*(_QWORD *)(v33 - 8) + 72) * v28;
    v35 = v63;
    v36 = v61;
    sub_1C1338F24(v34, (uint64_t)&v61[*(int *)(v63 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    *v36 = v31;
    v36[1] = v32;
    sub_1C132A724((uint64_t)v36, (uint64_t)v26, &qword_1ED7939D8);
    v37 = *(int *)(v35 + 48);
    v38 = v62;
    v39 = (uint64_t)v62 + v37;
    v40 = v26[1];
    *v62 = *v26;
    v38[1] = v40;
    sub_1C1338F24((uint64_t)v26 + v37, v39, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    v41 = v60;
    v42 = v64;
    ((void (*)(char *, uint64_t, uint64_t))v27)(v60, v39 + *(int *)(v33 + 32), v64);
    swift_bridgeObjectRetain();
    sub_1C1339004(v39, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    v43 = v59;
    sub_1C142512C();
    v44 = v66;
    v45 = *(void (**)(char *, uint64_t))(v66 + 8);
    v45(v41, v42);
    sub_1C13C6714();
    v46 = v65;
    if ((sub_1C1426A58() & 1) != 0)
      v47 = v46;
    else
      v47 = v43;
    v48 = v58;
    ((void (*)(char *, char *, uint64_t))v27)(v58, v47, v42);
    v45(v43, v42);
    sub_1C132C860((uint64_t)v26, &qword_1ED7939D8);
    v45(v46, v42);
    result = (*(uint64_t (**)(char *, char *, uint64_t))(v44 + 32))(v46, v48, v42);
    v25 = v70;
    v23 = v69;
  }
  v52 = v25 + 5;
  if (v25 + 5 >= v55)
  {
LABEL_26:
    swift_release();
    (*(void (**)(uint64_t, char *, uint64_t))(v66 + 32))(v53, v65, v64);
    return swift_release();
  }
  v50 = *(_QWORD *)(v54 + 8 * v52);
  if (v50)
  {
    v51 = v25 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    v51 = v52 + 1;
    if (__OFADD__(v52, 1))
      break;
    if (v51 >= v55)
      goto LABEL_26;
    v50 = *(_QWORD *)(v54 + 8 * v51);
    ++v52;
    if (v50)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1C13D63CC()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  sub_1C132C860(v0 + 72, &qword_1ED797918);
  swift_bridgeObjectRelease();
  sub_1C1339040(v0 + 120);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DurationEnforcerParticipant()
{
  return objc_opt_self();
}

uint64_t sub_1C13D6438(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v4;

  v4 = *(os_unfair_lock_s **)(*(_QWORD *)(v2 + 16) + 16);
  os_unfair_lock_lock(v4);
  *(_QWORD *)(v2 + 128) = a2;
  swift_unknownObjectWeakAssign();
  os_unfair_lock_unlock(v4);
  return swift_unknownObjectRelease();
}

void sub_1C13D648C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char v18;
  uint64_t (*v19)(void);
  int EnumCaseMultiPayload;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[4];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[3];

  v28[2] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797560);
  MEMORY[0x1E0C80A78](v3);
  v28[3] = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C1425A08();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ActivityManagerEvent(0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (_QWORD *)((char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = MEMORY[0x1E0C80A78](v9);
  v13 = MEMORY[0x1E0C80A78](v12);
  v28[1] = (char *)v28 - v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v28 - v15;
  v17 = type metadata accessor for Activity();
  v18 = sub_1C14258F4();
  v29 = a1;
  sub_1C1338F24(a1, (uint64_t)v16, type metadata accessor for ActivityManagerEvent);
  if ((v18 & 1) != 0)
  {
    sub_1C1339004((uint64_t)v16, type metadata accessor for ActivityManagerEvent);
  }
  else
  {
    v19 = MEMORY[0x1E0C8FFB8];
    sub_1C1338F24((uint64_t)&v16[*(int *)(v17 + 24)], (uint64_t)v7, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_1C1339004((uint64_t)v7, (uint64_t (*)(_QWORD))v19);
    sub_1C1339004((uint64_t)v16, type metadata accessor for ActivityManagerEvent);
    if (EnumCaseMultiPayload != 1)
      __asm { BR              X10 }
  }
  if (qword_1ED793970 != -1)
    swift_once();
  v21 = sub_1C1426854();
  __swift_project_value_buffer(v21, (uint64_t)qword_1ED7986B0);
  sub_1C1338F24(v29, (uint64_t)v11, type metadata accessor for ActivityManagerEvent);
  v22 = sub_1C1426848();
  v23 = sub_1C1426C80();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v31[0] = v25;
    *(_DWORD *)v24 = 136446210;
    v26 = *v11;
    v27 = v11[1];
    swift_bridgeObjectRetain();
    v30 = sub_1C132AD90(v26, v27, v31);
    sub_1C1426DB8();
    swift_bridgeObjectRelease();
    sub_1C1339004((uint64_t)v11, type metadata accessor for ActivityManagerEvent);
    _os_log_impl(&dword_1C1324000, v22, v23, "Duration limit is not enforced for unbounded or interactive activity %{public}s", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v25, -1, -1);
    MEMORY[0x1C3BAD3F4](v24, -1, -1);
  }
  else
  {
    sub_1C1339004((uint64_t)v11, type metadata accessor for ActivityManagerEvent);
  }

}

uint64_t sub_1C13D6CA4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  char *v16;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[40];
  _QWORD v29[4];
  __int128 v30;
  __int128 v31;
  uint64_t v32;

  v23 = sub_1C1425E88();
  v22 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v24 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1C1425EA0();
  v26 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v25 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C14251B0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v22 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v22 - v12;
  swift_beginAccess();
  sub_1C13D8264((uint64_t)(a1 + 9), (uint64_t)&v30);
  if (*((_QWORD *)&v31 + 1))
  {
    sub_1C132E0A8((uint64_t)&v30, (uint64_t)v29);
    sub_1C132C860((uint64_t)&v30, &qword_1ED797918);
    __swift_project_boxed_opaque_existential_1(v29, v29[3]);
    sub_1C142689C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  }
  else
  {
    sub_1C132C860((uint64_t)&v30, &qword_1ED797918);
  }
  v32 = 0;
  v30 = 0u;
  v31 = 0u;
  swift_beginAccess();
  sub_1C13C62D4((uint64_t)&v30, (uint64_t)(a1 + 9));
  swift_endAccess();
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(a1[2] + 16));
  swift_beginAccess();
  v14 = a1[14];
  swift_bridgeObjectRetain();
  sub_1C1425114();
  swift_retain();
  sub_1C13D5F74(v14, (uint64_t)a1, (uint64_t)v11);
  v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v8, v4);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v13, v11, v4);
  sub_1C1425114();
  LOBYTE(v14) = sub_1C1425150();
  v15(v11, v4);
  if ((v14 & 1) != 0)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v11, v13, v4);
    (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v24, *MEMORY[0x1E0D8CD30], v23);
    v16 = v25;
    sub_1C1425E70();
    __swift_project_boxed_opaque_existential_1(a1 + 3, a1[6]);
    swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_1C1425EAC();
    swift_release();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v16, v27);
    v15(v13, v4);
    swift_release();
    sub_1C1339184(&v30, (uint64_t)v29);
    sub_1C132A724((uint64_t)v29, (uint64_t)v28, &qword_1ED797918);
    swift_beginAccess();
    sub_1C13C62D4((uint64_t)v28, (uint64_t)(a1 + 9));
    return swift_endAccess();
  }
  else
  {
    if (qword_1ED793970 != -1)
      swift_once();
    v18 = sub_1C1426854();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ED7986B0);
    v19 = sub_1C1426848();
    v20 = sub_1C1426C80();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_1C1324000, v19, v20, "No more activities to forcibly end", v21, 2u);
      MEMORY[0x1C3BAD3F4](v21, -1, -1);
    }

    return ((uint64_t (*)(char *, uint64_t))v15)(v13, v4);
  }
}

uint64_t sub_1C13D716C()
{
  uint64_t result;
  uint64_t v1;
  os_unfair_lock_s *v2;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    v2 = *(os_unfair_lock_s **)(*(_QWORD *)(result + 16) + 16);
    os_unfair_lock_lock(v2);
    sub_1C13D71F4(v1);
    os_unfair_lock_unlock(v2);
    os_unfair_lock_lock(v2);
    sub_1C13D6CA4(v1);
    os_unfair_lock_unlock(v2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C13D71F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t *v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v2 = type metadata accessor for Activity();
  v41 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7939E0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v6);
  v10 = (uint64_t *)((char *)&v36 - v9);
  v44 = MEMORY[0x1E0DEE9E8];
  v38 = (uint64_t *)(a1 + 112);
  swift_beginAccess();
  v42 = a1;
  v11 = *(_QWORD *)(a1 + 112);
  v12 = *(_QWORD *)(v11 + 64);
  v39 = v11 + 64;
  v13 = 1 << *(_BYTE *)(v11 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v40 = (unint64_t)(v13 + 63) >> 6;
  v37 = v40 - 1;
  result = swift_bridgeObjectRetain();
  v17 = 0;
  if (!v15)
    goto LABEL_8;
LABEL_6:
  v18 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  v19 = v18 | (v17 << 6);
  while (2)
  {
    v20 = *(_QWORD *)(v11 + 56);
    v21 = (_QWORD *)(*(_QWORD *)(v11 + 48) + 16 * v19);
    v22 = v21[1];
    *v8 = *v21;
    v8[1] = v22;
    v23 = v20 + *(_QWORD *)(v41 + 72) * v19;
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
    sub_1C1338F24(v23, (uint64_t)v8 + *(int *)(v24 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v8, 0, 1, v24);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1C132A724((uint64_t)v8, (uint64_t)v10, (uint64_t *)&unk_1ED7939E0);
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v10, 1, v29) == 1)
      {
        v32 = swift_release();
        v33 = v38;
        MEMORY[0x1E0C80A78](v32);
        *(&v36 - 2) = (uint64_t)&v44;
        v34 = swift_bridgeObjectRetain();
        v35 = sub_1C13C65A4(v34, (uint64_t (*)(uint64_t, uint64_t, char *))sub_1C13C6348, (uint64_t)(&v36 - 4));
        swift_bridgeObjectRelease();
        *v33 = v35;
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      v31 = *v10;
      v30 = v10[1];
      sub_1C13A78FC((uint64_t)v10 + *(int *)(v29 + 48), (uint64_t)v4);
      if ((sub_1C13D75FC((uint64_t)v4) & 1) != 0)
      {
        sub_1C132FAD4(&v43, v31, v30);
        swift_bridgeObjectRelease();
        result = sub_1C1339004((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        if (v15)
          goto LABEL_6;
      }
      else
      {
        sub_1C1339004((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        result = swift_bridgeObjectRelease();
        if (v15)
          goto LABEL_6;
      }
LABEL_8:
      v25 = v17 + 1;
      if (__OFADD__(v17, 1))
      {
        __break(1u);
        goto LABEL_32;
      }
      if (v25 < v40)
      {
        v26 = *(_QWORD *)(v39 + 8 * v25);
        if (v26)
          goto LABEL_11;
        v27 = v17 + 2;
        ++v17;
        if (v25 + 1 < v40)
        {
          v26 = *(_QWORD *)(v39 + 8 * v27);
          if (v26)
            goto LABEL_14;
          v17 = v25 + 1;
          if (v25 + 2 < v40)
          {
            v26 = *(_QWORD *)(v39 + 8 * (v25 + 2));
            if (v26)
            {
              v25 += 2;
              goto LABEL_11;
            }
            v27 = v25 + 3;
            v17 = v25 + 2;
            if (v25 + 3 < v40)
              break;
          }
        }
      }
LABEL_25:
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v8, 1, 1, v28);
      v15 = 0;
    }
    v26 = *(_QWORD *)(v39 + 8 * v27);
    if (v26)
    {
LABEL_14:
      v25 = v27;
LABEL_11:
      v15 = (v26 - 1) & v26;
      v19 = __clz(__rbit64(v26)) + (v25 << 6);
      v17 = v25;
      continue;
    }
    break;
  }
  while (1)
  {
    v25 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v25 >= v40)
    {
      v17 = v37;
      goto LABEL_25;
    }
    v26 = *(_QWORD *)(v39 + 8 * v25);
    ++v27;
    if (v26)
      goto LABEL_11;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1C13D75FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  _BOOL4 v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char *v37;
  char **v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, unint64_t, uint64_t);
  uint64_t *v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  int *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t result;
  _QWORD v65[2];
  char *v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  int v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char **v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86[2];

  v2 = v1;
  v75 = type metadata accessor for ActivityParticipantEvent(0);
  MEMORY[0x1E0C80A78](v75);
  v76 = (char *)v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = sub_1C1425A08();
  MEMORY[0x1E0C80A78](v73);
  v77 = (char *)v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C1425630();
  v80 = *(_QWORD *)(v6 - 8);
  v81 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v74 = (char *)v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v82 = (char *)v65 - v9;
  v79 = sub_1C1425558();
  v10 = *(_QWORD *)(v79 - 8);
  MEMORY[0x1E0C80A78](v79);
  v78 = (char *)v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for Activity();
  v13 = MEMORY[0x1E0C80A78](v12);
  v72 = (_QWORD *)((char *)v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v13);
  v16 = (_QWORD *)((char *)v65 - v15);
  v84 = sub_1C14251B0();
  v17 = *(_QWORD *)(v84 - 8);
  v18 = MEMORY[0x1E0C80A78](v84);
  v20 = (char *)v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)v65 - v21;
  v23 = MEMORY[0x1C3BAD4B4](v2 + 120);
  if (v23)
  {
    v24 = v23;
    v83 = (char **)a1;
    sub_1C142512C();
    sub_1C142518C();
    v25 = sub_1C1425150();
    v26 = *(void (**)(char *, uint64_t))(v17 + 8);
    v26(v20, v84);
    if ((v25 & 1) != 0)
    {
      v67 = v2;
      v68 = v24;
      if (qword_1ED793970 != -1)
        swift_once();
      v27 = sub_1C1426854();
      v28 = __swift_project_value_buffer(v27, (uint64_t)qword_1ED7986B0);
      sub_1C1338F24((uint64_t)v83, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      v29 = sub_1C1426848();
      v30 = sub_1C1426C80();
      v31 = os_log_type_enabled(v29, v30);
      v70 = v25;
      v69 = v26;
      v71 = v10;
      if (v31)
      {
        v32 = (uint8_t *)swift_slowAlloc();
        v33 = swift_slowAlloc();
        v65[1] = v28;
        v34 = v33;
        v86[0] = v33;
        *(_DWORD *)v32 = 136446210;
        v66 = v22;
        v35 = *v16;
        v36 = v16[1];
        swift_bridgeObjectRetain();
        v85 = sub_1C132AD90(v35, v36, v86);
        v10 = v71;
        sub_1C1426DB8();
        v22 = v66;
        swift_bridgeObjectRelease();
        sub_1C1339004((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        _os_log_impl(&dword_1C1324000, v29, v30, "Ending overdue activity: %{public}s", v32, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v34, -1, -1);
        MEMORY[0x1C3BAD3F4](v32, -1, -1);
      }
      else
      {
        sub_1C1339004((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      }

      v37 = v82;
      v38 = v83;
      v39 = (uint64_t)v77;
      v40 = *(uint64_t *)((char *)v83 + v12[7]);
      if (*(_QWORD *)(v40 + 16))
      {
        v41 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
        v41(v78, v40 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), v79);
        sub_1C1338F24((uint64_t)v38 + v12[6], v39, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_1C1425624();
          sub_1C1339004(v39, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
        }
        else
        {
          sub_1C1425618();
          v49 = sub_1C1425AEC();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v39, v49);
        }
        v50 = (uint64_t)v38[1];
        v77 = *v38;
        v51 = (uint64_t *)((char *)v38 + v12[10]);
        v52 = *v51;
        v53 = v51[1];
        v72 = (uint64_t *)v50;
        v73 = v52;
        v55 = (int *)v75;
        v54 = v76;
        (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v74, v37, v81);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C1425570();
        type metadata accessor for ActivityParticipantEvent.EventType(0);
        swift_storeEnumTagMultiPayload();
        v56 = v78;
        v57 = v79;
        v41(&v54[v55[7]], (unint64_t)v78, v79);
        v58 = &v54[v55[9]];
        v59 = (char *)v38 + v12[11];
        v60 = sub_1C1425450();
        v61 = *(_QWORD *)(v60 - 8);
        (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v58, v59, v60);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
        v62 = (uint64_t)v72;
        *(_QWORD *)v54 = v77;
        *((_QWORD *)v54 + 1) = v62;
        *((_QWORD *)v54 + 2) = v73;
        *((_QWORD *)v54 + 3) = v53;
        v63 = &v54[v55[8]];
        *(_QWORD *)v63 = v67;
        *((_QWORD *)v63 + 1) = &off_1E7A8D5C0;
        v54[v55[10]] = 0;
        swift_retain();
        sub_1C13D0788((uint64_t)v54);
        swift_unknownObjectRelease();
        sub_1C1339004((uint64_t)v54, type metadata accessor for ActivityParticipantEvent);
        (*(void (**)(char *, uint64_t))(v80 + 8))(v82, v81);
        (*(void (**)(char *, uint64_t))(v71 + 8))(v56, v57);
      }
      else
      {
        v42 = v72;
        sub_1C1338F24((uint64_t)v83, (uint64_t)v72, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        v43 = sub_1C1426848();
        v44 = sub_1C1426C68();
        if (os_log_type_enabled(v43, v44))
        {
          v45 = (uint8_t *)swift_slowAlloc();
          v46 = swift_slowAlloc();
          v86[0] = v46;
          *(_DWORD *)v45 = 136446210;
          v47 = *v42;
          v48 = v42[1];
          swift_bridgeObjectRetain();
          v85 = sub_1C132AD90(v47, v48, v86);
          sub_1C1426DB8();
          swift_bridgeObjectRelease();
          sub_1C1339004((uint64_t)v42, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
          _os_log_impl(&dword_1C1324000, v43, v44, "No content sources exist for overdue activity: %{public}s", v45, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3BAD3F4](v46, -1, -1);
          MEMORY[0x1C3BAD3F4](v45, -1, -1);
          swift_unknownObjectRelease();

        }
        else
        {
          swift_unknownObjectRelease();

          sub_1C1339004((uint64_t)v42, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        }
      }
      v69(v22, v84);
      LOBYTE(v25) = v70;
    }
    else
    {
      v26(v22, v84);
      swift_unknownObjectRelease();
    }
    return v25 & 1;
  }
  else
  {
    result = sub_1C1426F8C();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C13D7DBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t result;
  os_unfair_lock_s *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t *v54;
  char *v55;
  uint64_t *v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  int64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
  v1 = MEMORY[0x1E0C80A78](v59);
  v58 = (os_unfair_lock_s **)((char *)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = MEMORY[0x1E0C80A78](v1);
  v57 = (os_unfair_lock_s **)((char *)&v50 - v4);
  v5 = MEMORY[0x1E0C80A78](v3);
  v56 = (uint64_t *)((char *)&v50 - v6);
  v7 = MEMORY[0x1E0C80A78](v5);
  v55 = (char *)&v50 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v54 = (uint64_t *)((char *)&v50 - v10);
  MEMORY[0x1E0C80A78](v9);
  v53 = (uint64_t *)((char *)&v50 - v11);
  v12 = *(os_unfair_lock_s **)(*(_QWORD *)(v0 + 16) + 16);
  os_unfair_lock_lock(v12);
  swift_beginAccess();
  v13 = *(_QWORD *)(v0 + 112);
  v14 = *(_QWORD *)(v13 + 16);
  v15 = MEMORY[0x1E0DEE9D8];
  if (v14)
  {
    v50 = v12;
    v63 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1C13369AC(0, v14, 0);
    v16 = sub_1C135833C(v13);
    v18 = v17;
    v20 = v19 & 1;
    v51 = v13 + 64;
    v52 = v13;
    v62 = v63;
    v60 = v14 - 1;
    v21 = (uint64_t *)v55;
    while (1)
    {
      v22 = v59;
      v23 = v53;
      v24 = (uint64_t)v53 + *(int *)(v59 + 48);
      v61 = v18;
      v25 = sub_1C13A1514(v24, v16, v18, v20 & 1, v13);
      *v23 = v25;
      v23[1] = v26;
      v27 = (uint64_t)v54;
      *v54 = v25;
      *(_QWORD *)(v27 + 8) = v26;
      sub_1C1338F24(v24, v27 + *(int *)(v22 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      sub_1C132A724(v27, (uint64_t)v21, &qword_1ED7939D8);
      swift_bridgeObjectRetain();
      sub_1C132C860((uint64_t)v23, &qword_1ED7939D8);
      v29 = *v21;
      v28 = v21[1];
      v30 = *(int *)(v22 + 48);
      v31 = (uint64_t)v56;
      v32 = (uint64_t)v56 + v30;
      *v56 = *v21;
      *(_QWORD *)(v31 + 8) = v28;
      sub_1C1338F24((uint64_t)v21 + v30, v31 + v30, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      v33 = *(int *)(v22 + 48);
      v34 = v57;
      v35 = (uint64_t)v57 + v33;
      *v57 = v29;
      v34[1] = v28;
      sub_1C1338F24(v32, (uint64_t)v34 + v33, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      v36 = *(int *)(v22 + 48);
      v37 = v58;
      v38 = (uint64_t)v58 + v36;
      *v58 = v29;
      v37[1] = v28;
      sub_1C1338F24(v32, (uint64_t)v37 + v36, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      swift_bridgeObjectRetain_n();
      v39 = sub_1C1406DD8();
      v41 = v40;
      sub_1C132C860(v31, &qword_1ED7939D8);
      sub_1C1339004(v38, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      sub_1C1339004(v35, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      sub_1C132C860((uint64_t)v21, &qword_1ED7939D8);
      v15 = v62;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C13369AC(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v63;
      }
      v43 = *(_QWORD *)(v15 + 16);
      v42 = *(_QWORD *)(v15 + 24);
      if (v43 >= v42 >> 1)
      {
        sub_1C13369AC(v42 > 1, v43 + 1, 1);
        v15 = v63;
      }
      *(_QWORD *)(v15 + 16) = v43 + 1;
      v44 = (_QWORD *)(v15 + 48 * v43);
      v44[4] = v29;
      v44[5] = v28;
      v44[6] = v39;
      v44[7] = v41;
      v44[9] = MEMORY[0x1E0DEA968];
      v13 = v52;
      if (v16 < 0 || v16 >= -(-1 << *(_BYTE *)(v52 + 32)))
        break;
      if (((*(_QWORD *)(v51 + (((unint64_t)v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
        goto LABEL_19;
      if (*(_DWORD *)(v52 + 36) != (_DWORD)v61)
        goto LABEL_20;
      v45 = sub_1C1426E0C();
      if (!v60)
      {
        swift_bridgeObjectRelease();
        v12 = v50;
        goto LABEL_14;
      }
      v16 = v45;
      v62 = v15;
      v20 = 0;
      v18 = *(unsigned int *)(v13 + 36);
      --v60;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
LABEL_14:
    if (*(_QWORD *)(v15 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797B20);
      v46 = sub_1C1426FBC();
    }
    else
    {
      v46 = MEMORY[0x1E0DEE9E0];
    }
    v63 = v46;
    v47 = swift_bridgeObjectRetain();
    sub_1C13555F8(v47, 1, &v63);
    swift_bridgeObjectRelease();
    v48 = v63;
    os_unfair_lock_unlock(v12);
    return v48;
  }
  return result;
}

uint64_t sub_1C13D8244()
{
  return sub_1C13D7DBC();
}

uint64_t sub_1C13D8264(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797918);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C13D82AC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C13D82D0()
{
  return sub_1C13D716C();
}

uint64_t sub_1C13D82D8(unsigned __int8 *a1)
{
  int v1;
  uint64_t result;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (v1)
      sub_1C13D833C();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C13D833C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  os_unfair_lock_s *v14;
  _QWORD *v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  os_unfair_lock_s *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  int64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  _QWORD *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
  v1 = MEMORY[0x1E0C80A78](v63);
  v62 = (char *)&v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = MEMORY[0x1E0C80A78](v1);
  v61 = (uint64_t)&v49 - v4;
  v5 = MEMORY[0x1E0C80A78](v3);
  v60 = (uint64_t *)((char *)&v49 - v6);
  MEMORY[0x1E0C80A78](v5);
  v59 = (char *)&v49 - v7;
  v8 = type metadata accessor for Activity();
  v67 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v49 - v12;
  v14 = *(os_unfair_lock_s **)(*(_QWORD *)(v0 + 16) + 16);
  os_unfair_lock_lock(v14);
  v15 = (_QWORD *)(v0 + 24);
  swift_beginAccess();
  v16 = *(_QWORD *)(v0 + 24);
  v17 = *(_QWORD *)(v16 + 16);
  v18 = MEMORY[0x1E0DEE9D8];
  if (!v17)
  {
LABEL_28:
    *v15 = MEMORY[0x1E0DEE9E0];
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(v14);
    v46 = *(_QWORD *)(v18 + 16);
    if (v46)
    {
      v47 = v18 + ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80));
      v48 = *(_QWORD *)(v67 + 72);
      do
      {
        sub_1C1338F24(v47, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        sub_1C13D8DF8((uint64_t)v13);
        sub_1C1339004((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        v47 += v48;
        --v46;
      }
      while (v46);
    }
    return swift_bridgeObjectRelease();
  }
  v50 = (_QWORD *)(v0 + 24);
  v51 = v14;
  v52 = v13;
  v53 = v0;
  v68 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  sub_1C1336B18(0, v17, 0);
  result = sub_1C135833C(v16);
  if (result < 0)
    goto LABEL_37;
  v21 = result;
  if (result >= 1 << *(_BYTE *)(v16 + 32))
    goto LABEL_37;
  v22 = 0;
  v23 = v16 + 64;
  v54 = v16 + 80;
  v55 = v17;
  v57 = v16 + 64;
  v58 = v16;
  v56 = v20;
  v24 = v59;
  while (1)
  {
    v25 = v21 >> 6;
    if ((*(_QWORD *)(v23 + 8 * (v21 >> 6)) & (1 << v21)) == 0)
      break;
    if (*(_DWORD *)(v16 + 36) != (_DWORD)v20)
      goto LABEL_33;
    v64 = v22;
    v65 = 1 << v21;
    v26 = v63;
    v27 = (uint64_t)v24 + *(int *)(v63 + 48);
    v28 = *(_QWORD *)(v16 + 56);
    v29 = (uint64_t *)(*(_QWORD *)(v16 + 48) + 16 * v21);
    v31 = *v29;
    v30 = v29[1];
    v66 = *(_QWORD *)(v67 + 72);
    sub_1C1338F24(v28 + v66 * v21, v27, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    *v24 = v31;
    v24[1] = v30;
    v32 = (uint64_t)v11;
    v33 = v60;
    *v60 = v31;
    v33[1] = v30;
    sub_1C1338F24(v27, (uint64_t)v33 + *(int *)(v26 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    v34 = (uint64_t)v33;
    v11 = (char *)v32;
    v35 = v61;
    sub_1C13D5D8C(v34, v61);
    swift_bridgeObjectRetain_n();
    sub_1C13D98A0((uint64_t)v24);
    v36 = *(int *)(v26 + 48);
    v37 = (uint64_t)&v62[v36];
    sub_1C1338F24(v35 + v36, (uint64_t)&v62[v36], (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    sub_1C13A78FC(v37, v32);
    sub_1C13D98A0(v35);
    v18 = v68;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C1336B18(0, *(_QWORD *)(v18 + 16) + 1, 1);
      v18 = v68;
    }
    v39 = *(_QWORD *)(v18 + 16);
    v38 = *(_QWORD *)(v18 + 24);
    if (v39 >= v38 >> 1)
    {
      sub_1C1336B18(v38 > 1, v39 + 1, 1);
      v18 = v68;
    }
    *(_QWORD *)(v18 + 16) = v39 + 1;
    result = sub_1C13A78FC(v32, v18+ ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80))+ v39 * v66);
    v16 = v58;
    v40 = 1 << *(_BYTE *)(v58 + 32);
    if ((uint64_t)v21 >= v40)
      goto LABEL_34;
    v23 = v57;
    v41 = *(_QWORD *)(v57 + 8 * v25);
    if ((v41 & v65) == 0)
      goto LABEL_35;
    LODWORD(v20) = v56;
    if (*(_DWORD *)(v58 + 36) != (_DWORD)v56)
      goto LABEL_36;
    v42 = v41 & (-2 << (v21 & 0x3F));
    if (v42)
    {
      v21 = __clz(__rbit64(v42)) | v21 & 0xFFFFFFFFFFFFFFC0;
      goto LABEL_23;
    }
    v43 = v25 + 1;
    v44 = (unint64_t)(v40 + 63) >> 6;
    if (v25 + 1 < v44)
    {
      v45 = *(_QWORD *)(v57 + 8 * v43);
      if (v45)
      {
LABEL_21:
        v21 = __clz(__rbit64(v45)) + (v43 << 6);
        goto LABEL_23;
      }
      while (v44 - 2 != v25)
      {
        v45 = *(_QWORD *)(v54 + 8 * v25++);
        if (v45)
        {
          v43 = v25 + 1;
          goto LABEL_21;
        }
      }
    }
    v21 = 1 << *(_BYTE *)(v58 + 32);
LABEL_23:
    v22 = v64 + 1;
    if (v64 + 1 == v55)
    {
      swift_bridgeObjectRelease();
      v15 = v50;
      v13 = v52;
      v14 = v51;
      goto LABEL_28;
    }
    if ((v21 & 0x8000000000000000) != 0 || (uint64_t)v21 >= v40)
      goto LABEL_37;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C13D8808()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C1339040(v0 + 40);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MomentaryParticipant()
{
  return objc_opt_self();
}

uint64_t sub_1C13D8864(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v4;

  v4 = *(os_unfair_lock_s **)(*(_QWORD *)(v2 + 16) + 16);
  os_unfair_lock_lock(v4);
  *(_QWORD *)(v2 + 48) = a2;
  swift_unknownObjectWeakAssign();
  os_unfair_lock_unlock(v4);
  return swift_unknownObjectRelease();
}

void sub_1C13D88B8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  os_unfair_lock_s *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  os_unfair_lock_s *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[2];
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53[3];

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797560);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ActivityManagerEvent(0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (_QWORD *)((char *)v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (_QWORD *)((char *)v49 - v14);
  if (*((_BYTE *)a1 + *(int *)(v13 + 20)) == 3)
  {
    if (qword_1ED793968 != -1)
      swift_once();
    v31 = sub_1C1426854();
    __swift_project_value_buffer(v31, (uint64_t)qword_1ED798698);
    sub_1C1338F24((uint64_t)a1, (uint64_t)v12, type metadata accessor for ActivityManagerEvent);
    v32 = sub_1C1426848();
    v33 = sub_1C1426C80();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      v53[0] = v35;
      v51 = (uint64_t)v8;
      *(_DWORD *)v34 = 136446210;
      v50 = v34 + 4;
      v36 = v3;
      v38 = *v12;
      v37 = v12[1];
      swift_bridgeObjectRetain();
      v39 = v38;
      v3 = v36;
      v52 = sub_1C132AD90(v39, v37, v53);
      v8 = (char *)v51;
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      sub_1C1339004((uint64_t)v12, type metadata accessor for ActivityManagerEvent);
      _os_log_impl(&dword_1C1324000, v32, v33, "Momentary activity ended %{public}s", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v35, -1, -1);
      MEMORY[0x1C3BAD3F4](v34, -1, -1);
    }
    else
    {
      sub_1C1339004((uint64_t)v12, type metadata accessor for ActivityManagerEvent);
    }

    v40 = *(os_unfair_lock_s **)(*(_QWORD *)(v3 + 16) + 16);
    os_unfair_lock_lock(v40);
    v41 = *a1;
    v42 = a1[1];
    v43 = type metadata accessor for Activity();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v8, 1, 1, v43);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v44 = (uint64_t)v8;
    v45 = v41;
    v46 = v42;
    goto LABEL_16;
  }
  if (!*((_BYTE *)a1 + *(int *)(v13 + 20)))
  {
    v16 = *a1;
    v17 = a1[1];
    v18 = *(os_unfair_lock_s **)(*(_QWORD *)(a2 + 16) + 16);
    os_unfair_lock_lock(v18);
    v19 = swift_retain();
    sub_1C1370E7C(v19, v16, v17, a2);
    swift_release();
    os_unfair_lock_unlock(v18);
    v20 = type metadata accessor for Activity();
    if ((sub_1C14258E8() & 1) != 0)
    {
      if (qword_1ED793968 != -1)
        swift_once();
      v21 = sub_1C1426854();
      __swift_project_value_buffer(v21, (uint64_t)qword_1ED798698);
      sub_1C1338F24((uint64_t)a1, (uint64_t)v15, type metadata accessor for ActivityManagerEvent);
      v22 = sub_1C1426848();
      v23 = sub_1C1426C80();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        v51 = swift_slowAlloc();
        v53[0] = v51;
        *(_DWORD *)v24 = 136446210;
        v49[1] = v24 + 4;
        v50 = v24;
        v25 = v8;
        v27 = *v15;
        v26 = v15[1];
        swift_bridgeObjectRetain();
        v28 = v27;
        v8 = v25;
        v52 = sub_1C132AD90(v28, v26, v53);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        sub_1C1339004((uint64_t)v15, type metadata accessor for ActivityManagerEvent);
        v29 = v50;
        _os_log_impl(&dword_1C1324000, v22, v23, "Tracking momentary activity %{public}s", v50, 0xCu);
        v30 = v51;
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v30, -1, -1);
        MEMORY[0x1C3BAD3F4](v29, -1, -1);
      }
      else
      {
        sub_1C1339004((uint64_t)v15, type metadata accessor for ActivityManagerEvent);
      }

      v40 = *(os_unfair_lock_s **)(*(_QWORD *)(v3 + 16) + 16);
      os_unfair_lock_lock(v40);
      v47 = *a1;
      v48 = a1[1];
      sub_1C1338F24((uint64_t)a1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v8, 0, 1, v20);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v44 = (uint64_t)v8;
      v45 = v47;
      v46 = v48;
LABEL_16:
      sub_1C13B396C(v44, v45, v46);
      swift_endAccess();
      os_unfair_lock_unlock(v40);
    }
  }
}

void sub_1C13D8DF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t **v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  os_unfair_lock_s *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t *v37;
  int *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t *v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  char *v58;
  int *v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v2 = v1;
  v4 = sub_1C1425630();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ActivityParticipantEvent(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t **)((char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_1C1425558();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v63 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for Activity();
  v13 = MEMORY[0x1E0C80A78](v64);
  v57 = (uint64_t *)((char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v13);
  v16 = (uint64_t *)((char *)&v53 - v15);
  v17 = *(os_unfair_lock_s **)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v17);
  v18 = MEMORY[0x1C3BAD4B4](v2 + 40);
  os_unfair_lock_unlock(v17);
  if (v18)
  {
    v58 = v6;
    if (qword_1ED793968 != -1)
      swift_once();
    v19 = sub_1C1426854();
    v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED798698);
    v61 = (uint64_t *)a1;
    sub_1C1338F24(a1, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    v56 = v20;
    v21 = sub_1C1426848();
    v22 = sub_1C1426C80();
    v23 = os_log_type_enabled(v21, v22);
    v62 = v18;
    v59 = (int *)v7;
    v60 = v2;
    if (v23)
    {
      v24 = swift_slowAlloc();
      v54 = v11;
      v25 = (uint8_t *)v24;
      v26 = swift_slowAlloc();
      v66 = v26;
      v55 = v10;
      *(_DWORD *)v25 = 136446210;
      v28 = *v16;
      v27 = v16[1];
      swift_bridgeObjectRetain();
      v65 = sub_1C132AD90(v28, v27, &v66);
      v10 = v55;
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      sub_1C1339004((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      _os_log_impl(&dword_1C1324000, v21, v22, "Dismissing momentary activity: %{public}s", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v26, -1, -1);
      v29 = v25;
      v11 = v54;
      MEMORY[0x1C3BAD3F4](v29, -1, -1);
    }
    else
    {
      sub_1C1339004((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    }

    v30 = v64;
    v31 = v61;
    v32 = *(uint64_t *)((char *)v61 + *(int *)(v64 + 28));
    if (*(_QWORD *)(v32 + 16))
    {
      v33 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
      v34 = v63;
      v33(v63, v32 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), v10);
      v35 = *v31;
      v55 = v31[1];
      v36 = (uint64_t *)((char *)v31 + *(int *)(v30 + 40));
      v37 = (uint64_t *)v36[1];
      v56 = *v36;
      v57 = (uint64_t *)v35;
      v38 = v59;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C1425624();
      sub_1C1425570();
      type metadata accessor for ActivityParticipantEvent.EventType(0);
      swift_storeEnumTagMultiPayload();
      v33((char *)v9 + v38[7], (unint64_t)v34, v10);
      v39 = (char *)v9 + v38[9];
      v40 = (char *)v31 + *(int *)(v64 + 44);
      v41 = v11;
      v42 = sub_1C1425450();
      v43 = *(_QWORD *)(v42 - 8);
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v39, v40, v42);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v39, 0, 1, v42);
      v44 = v55;
      *v9 = v57;
      v9[1] = (uint64_t *)v44;
      v9[2] = (uint64_t *)v56;
      v9[3] = v37;
      v45 = (uint64_t **)((char *)v9 + v38[8]);
      *v45 = v60;
      v45[1] = &off_1E7A8D678;
      *((_BYTE *)v9 + v38[10]) = 0;
      swift_retain();
      sub_1C13D0788((uint64_t)v9);
      swift_unknownObjectRelease();
      sub_1C1339004((uint64_t)v9, type metadata accessor for ActivityParticipantEvent);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v63, v10);
    }
    else
    {
      v46 = v57;
      sub_1C1338F24((uint64_t)v61, (uint64_t)v57, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      v47 = sub_1C1426848();
      v48 = sub_1C1426C68();
      if (os_log_type_enabled(v47, v48))
      {
        v49 = (uint8_t *)swift_slowAlloc();
        v50 = swift_slowAlloc();
        v66 = v50;
        *(_DWORD *)v49 = 136446210;
        v51 = *v46;
        v52 = v46[1];
        swift_bridgeObjectRetain();
        v65 = sub_1C132AD90(v51, v52, &v66);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        sub_1C1339004((uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        _os_log_impl(&dword_1C1324000, v47, v48, "No content sources exist for dismissed activity: %{public}s", v49, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v50, -1, -1);
        MEMORY[0x1C3BAD3F4](v49, -1, -1);
        swift_unknownObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();
        sub_1C1339004((uint64_t)v46, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      }

    }
  }
  else
  {
    sub_1C1426F8C();
    __break(1u);
  }
}

uint64_t sub_1C13D9418()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t result;
  os_unfair_lock_s *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t *v54;
  char *v55;
  uint64_t *v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  int64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
  v1 = MEMORY[0x1E0C80A78](v59);
  v58 = (os_unfair_lock_s **)((char *)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = MEMORY[0x1E0C80A78](v1);
  v57 = (os_unfair_lock_s **)((char *)&v50 - v4);
  v5 = MEMORY[0x1E0C80A78](v3);
  v56 = (uint64_t *)((char *)&v50 - v6);
  v7 = MEMORY[0x1E0C80A78](v5);
  v55 = (char *)&v50 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v54 = (uint64_t *)((char *)&v50 - v10);
  MEMORY[0x1E0C80A78](v9);
  v53 = (uint64_t *)((char *)&v50 - v11);
  v12 = *(os_unfair_lock_s **)(*(_QWORD *)(v0 + 16) + 16);
  os_unfair_lock_lock(v12);
  swift_beginAccess();
  v13 = *(_QWORD *)(v0 + 24);
  v14 = *(_QWORD *)(v13 + 16);
  v15 = MEMORY[0x1E0DEE9D8];
  if (v14)
  {
    v50 = v12;
    v63 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1C13369AC(0, v14, 0);
    v16 = sub_1C135833C(v13);
    v18 = v17;
    v20 = v19 & 1;
    v51 = v13 + 64;
    v52 = v13;
    v62 = v63;
    v60 = v14 - 1;
    v21 = (uint64_t *)v55;
    while (1)
    {
      v22 = v59;
      v23 = v53;
      v24 = (uint64_t)v53 + *(int *)(v59 + 48);
      v61 = v18;
      v25 = sub_1C13A1514(v24, v16, v18, v20 & 1, v13);
      *v23 = v25;
      v23[1] = v26;
      v27 = (uint64_t)v54;
      *v54 = v25;
      *(_QWORD *)(v27 + 8) = v26;
      sub_1C1338F24(v24, v27 + *(int *)(v22 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      sub_1C13D5D8C(v27, (uint64_t)v21);
      swift_bridgeObjectRetain();
      sub_1C13D98A0((uint64_t)v23);
      v29 = *v21;
      v28 = v21[1];
      v30 = *(int *)(v22 + 48);
      v31 = (uint64_t)v56;
      v32 = (uint64_t)v56 + v30;
      *v56 = *v21;
      *(_QWORD *)(v31 + 8) = v28;
      sub_1C1338F24((uint64_t)v21 + v30, v31 + v30, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      v33 = *(int *)(v22 + 48);
      v34 = v57;
      v35 = (uint64_t)v57 + v33;
      *v57 = v29;
      v34[1] = v28;
      sub_1C1338F24(v32, (uint64_t)v34 + v33, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      v36 = *(int *)(v22 + 48);
      v37 = v58;
      v38 = (uint64_t)v58 + v36;
      *v58 = v29;
      v37[1] = v28;
      sub_1C1338F24(v32, (uint64_t)v37 + v36, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      swift_bridgeObjectRetain_n();
      v39 = sub_1C1406DD8();
      v41 = v40;
      sub_1C13D98A0(v31);
      sub_1C1339004(v38, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      sub_1C1339004(v35, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      sub_1C13D98A0((uint64_t)v21);
      v15 = v62;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C13369AC(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v63;
      }
      v43 = *(_QWORD *)(v15 + 16);
      v42 = *(_QWORD *)(v15 + 24);
      if (v43 >= v42 >> 1)
      {
        sub_1C13369AC(v42 > 1, v43 + 1, 1);
        v15 = v63;
      }
      *(_QWORD *)(v15 + 16) = v43 + 1;
      v44 = (_QWORD *)(v15 + 48 * v43);
      v44[4] = v29;
      v44[5] = v28;
      v44[6] = v39;
      v44[7] = v41;
      v44[9] = MEMORY[0x1E0DEA968];
      v13 = v52;
      if (v16 < 0 || v16 >= -(-1 << *(_BYTE *)(v52 + 32)))
        break;
      if (((*(_QWORD *)(v51 + (((unint64_t)v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
        goto LABEL_19;
      if (*(_DWORD *)(v52 + 36) != (_DWORD)v61)
        goto LABEL_20;
      v45 = sub_1C1426E0C();
      if (!v60)
      {
        swift_bridgeObjectRelease();
        v12 = v50;
        goto LABEL_14;
      }
      v16 = v45;
      v62 = v15;
      v20 = 0;
      v18 = *(unsigned int *)(v13 + 36);
      --v60;
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
LABEL_14:
    if (*(_QWORD *)(v15 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797B20);
      v46 = sub_1C1426FBC();
    }
    else
    {
      v46 = MEMORY[0x1E0DEE9E0];
    }
    v63 = v46;
    v47 = swift_bridgeObjectRetain();
    sub_1C13555F8(v47, 1, &v63);
    swift_bridgeObjectRelease();
    v48 = v63;
    os_unfair_lock_unlock(v12);
    return v48;
  }
  return result;
}

uint64_t sub_1C13D9880()
{
  return sub_1C13D9418();
}

uint64_t sub_1C13D98A0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1C13D98E0(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v10;

  v4 = sub_1C1425EDC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  sub_1C142578C();
  sub_1C1426D70();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1C1425780();
  v8 = (void *)sub_1C1426A7C();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setService_, v8);

  return objc_msgSend(a1, sel_setDelegate_, a2);
}

void sub_1C13D99C0(uint64_t a1, uint64_t a2, void *a3, const char *a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  os_unfair_lock_s *v13;
  void *v14;

  v6 = a2 + 16;
  swift_beginAccess();
  v7 = MEMORY[0x1C3BAD4B4](v6);
  if (v7)
  {
    v8 = (char *)v7;
    if (qword_1ED7939B0 != -1)
      swift_once();
    v9 = sub_1C1426854();
    __swift_project_value_buffer(v9, (uint64_t)qword_1ED798628);
    v10 = sub_1C1426848();
    v11 = sub_1C1426C68();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_1C1324000, v10, v11, a4, v12, 2u);
      MEMORY[0x1C3BAD3F4](v12, -1, -1);
    }

    v13 = *(os_unfair_lock_s **)(*(_QWORD *)&v8[OBJC_IVAR____TtC11SessionCore15PushTokenServer_lock] + 16);
    os_unfair_lock_lock(v13);
    swift_beginAccess();
    v14 = (void *)sub_1C13547C0(a3);
    swift_endAccess();
    os_unfair_lock_unlock(v13);

  }
}

void *sub_1C13D9B24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *result;
  void *v17;
  uint64_t v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  char *v33;
  uint64_t v34;
  char *v35;
  id v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  _QWORD v40[2];
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  id v65;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED791EC0);
  v52 = *(_QWORD *)(v1 - 8);
  v53 = v1;
  MEMORY[0x1E0C80A78](v1);
  v50 = (char *)v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791DE0);
  v55 = *(_QWORD *)(v3 - 8);
  v56 = v3;
  MEMORY[0x1E0C80A78](v3);
  v54 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED792788);
  v58 = *(_QWORD *)(v5 - 8);
  v59 = v5;
  MEMORY[0x1E0C80A78](v5);
  v57 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_1C1426CC8();
  v49 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v51 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793A00);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = (_QWORD *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED793298);
  v41 = *(v42 - 1);
  MEMORY[0x1E0C80A78](v42);
  v12 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793270);
  v44 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v43 = (char *)v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793288);
  v47 = *(_QWORD *)(v14 - 8);
  v48 = v14;
  MEMORY[0x1E0C80A78](v14);
  v46 = (char *)v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = *(void **)(v0 + OBJC_IVAR____TtC11SessionCore15PushTokenServer_listener);
  if (result)
  {
    objc_msgSend(result, sel_activate);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC11SessionCore15PushTokenServer_pushServer), *(_QWORD *)(v0 + OBJC_IVAR____TtC11SessionCore15PushTokenServer_pushServer + 24));
    v62 = v0;
    v64 = (id)sub_1C1426524();
    v17 = *(void **)(v0 + OBJC_IVAR____TtC11SessionCore15PushTokenServer_requestProcessingQueue);
    v65 = v17;
    v18 = sub_1C1426CA4();
    v60 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
    v61 = v18;
    v60(v10, 1, 1, v18);
    v19 = v17;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7932B0);
    v20 = sub_1C1330F6C();
    sub_1C132C820((unint64_t *)&unk_1ED7932A0, (uint64_t *)&unk_1ED7932B0, MEMORY[0x1E0C95D90]);
    v21 = sub_1C1329AD0((unint64_t *)&qword_1ED797AA0, (uint64_t (*)(uint64_t))sub_1C1330F6C, MEMORY[0x1E0DEF7F8]);
    v40[1] = v20;
    v40[0] = v21;
    sub_1C1426914();
    sub_1C132C860((uint64_t)v10, (uint64_t *)&unk_1ED793A00);

    swift_release();
    sub_1C132C820(&qword_1ED793290, &qword_1ED793298, MEMORY[0x1E0C95CB8]);
    sub_1C13DCBDC();
    v22 = v43;
    v23 = v42;
    sub_1C142692C();
    (*(void (**)(char *, _QWORD *))(v41 + 8))(v12, v23);
    v24 = v51;
    sub_1C1426CBC();
    v64 = v19;
    v26 = v60;
    v25 = v61;
    v60(v10, 1, 1, v61);
    sub_1C132C820((unint64_t *)&unk_1ED793260, &qword_1ED793270, MEMORY[0x1E0C958E0]);
    v42 = v19;
    v27 = v46;
    v28 = v45;
    sub_1C1426920();
    sub_1C132C860((uint64_t)v10, (uint64_t *)&unk_1ED793A00);

    v49 = *(_QWORD *)(v49 + 8);
    ((void (*)(char *, uint64_t))v49)(v24, v63);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v22, v28);
    swift_allocObject();
    v29 = v62;
    swift_unknownObjectWeakInit();
    sub_1C132C820((unint64_t *)&unk_1ED793278, &qword_1ED793288, MEMORY[0x1E0C95BB0]);
    v30 = v48;
    sub_1C1426938();
    swift_release();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v27, v30);
    swift_beginAccess();
    sub_1C14268A8();
    swift_endAccess();
    swift_release();
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v29 + OBJC_IVAR____TtC11SessionCore15PushTokenServer_authorizationManager), *(_QWORD *)(v29 + OBJC_IVAR____TtC11SessionCore15PushTokenServer_authorizationManager + 24));
    v64 = (id)sub_1C133942C();
    v31 = v42;
    v65 = v42;
    v26(v10, 1, 1, v25);
    v32 = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7927D0);
    sub_1C132C820(&qword_1ED7927C8, &qword_1ED7927D0, MEMORY[0x1E0C95D90]);
    v33 = v50;
    sub_1C1426914();
    sub_1C132C860((uint64_t)v10, (uint64_t *)&unk_1ED793A00);

    swift_release();
    sub_1C132C820(&qword_1ED7927A0, (uint64_t *)&unk_1ED791EC0, MEMORY[0x1E0C95CB8]);
    sub_1C13DCC60();
    v34 = v53;
    v35 = v54;
    sub_1C142692C();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v33, v34);
    sub_1C1426CB0();
    v64 = v32;
    v60(v10, 1, 1, v61);
    sub_1C132C820(&qword_1ED792770, &qword_1ED791DE0, MEMORY[0x1E0C958E0]);
    v36 = v32;
    v37 = v56;
    v38 = v57;
    sub_1C1426920();
    sub_1C132C860((uint64_t)v10, (uint64_t *)&unk_1ED793A00);

    ((void (*)(char *, uint64_t))v49)(v24, v63);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v35, v37);
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_1C132C820((unint64_t *)&unk_1ED792778, &qword_1ED792788, MEMORY[0x1E0C95BB0]);
    v39 = v59;
    sub_1C1426938();
    swift_release();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v38, v39);
    swift_beginAccess();
    sub_1C14268A8();
    swift_endAccess();
    return (void *)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1C13DA334(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  os_unfair_lock_s *v11;
  uint64_t v12;

  v3 = sub_1C14269F8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (uint64_t *)((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  v7 = MEMORY[0x1C3BAD4B4](a2 + 16);
  if (v7)
  {
    v8 = (char *)v7;
    v9 = *(void **)(v7 + OBJC_IVAR____TtC11SessionCore15PushTokenServer_requestProcessingQueue);
    *v6 = v9;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF740], v3);
    v10 = v9;
    LOBYTE(v9) = sub_1C1426A10();
    (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
    if ((v9 & 1) != 0)
    {
      v11 = *(os_unfair_lock_s **)(*(_QWORD *)&v8[OBJC_IVAR____TtC11SessionCore15PushTokenServer_lock] + 16);
      os_unfair_lock_lock(v11);
      sub_1C13DA794((uint64_t)v8);
      os_unfair_lock_unlock(v11);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1C13DA454(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  os_unfair_lock_s *v13;
  uint64_t v14;

  v4 = sub_1C14269F8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *a1;
  swift_beginAccess();
  v9 = MEMORY[0x1C3BAD4B4](a2 + 16);
  if (v9)
  {
    v10 = (char *)v9;
    v11 = *(void **)(v9 + OBJC_IVAR____TtC11SessionCore15PushTokenServer_requestProcessingQueue);
    *v7 = v11;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF740], v4);
    v12 = v11;
    LOBYTE(v11) = sub_1C1426A10();
    (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(v7, v4);
    if ((v11 & 1) != 0)
    {
      v13 = *(os_unfair_lock_s **)(*(_QWORD *)&v10[OBJC_IVAR____TtC11SessionCore15PushTokenServer_lock] + 16);
      os_unfair_lock_lock(v13);
      sub_1C13DA574(v8);
      os_unfair_lock_unlock(v13);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1C13DA574(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int64_t v5;
  int64_t v6;
  unint64_t v7;
  unint64_t i;
  unint64_t v10;
  int64_t v11;
  uint64_t *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;

  v19 = a1 + 64;
  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 64);
  swift_bridgeObjectRetain();
  swift_beginAccess();
  v5 = 0;
  v6 = (unint64_t)(v2 + 63) >> 6;
  if (v4)
    goto LABEL_6;
LABEL_7:
  if (!__OFADD__(v5++, 1))
  {
    if (v5 >= v6)
      goto LABEL_29;
    v10 = *(_QWORD *)(v19 + 8 * v5);
    if (v10)
    {
LABEL_21:
      v4 = (v10 - 1) & v10;
      for (i = __clz(__rbit64(v10)) + (v5 << 6); ; i = v7 | (v5 << 6))
      {
        v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
        v13 = *v12;
        v14 = (void *)v12[1];
        swift_bridgeObjectRetain();
        v15 = swift_bridgeObjectRetain();
        sub_1C13DC684(v15, v13, (uint64_t)v14);
        v17 = v16;
        swift_bridgeObjectRelease();
        if (v17)
        {
          v18 = v17;
          swift_bridgeObjectRelease();
          sub_1C132C89C();

          if (!v4)
            goto LABEL_7;
        }
        else
        {
          sub_1C13DB460(v13, v14);
          swift_bridgeObjectRelease();
          if (!v4)
            goto LABEL_7;
        }
LABEL_6:
        v7 = __clz(__rbit64(v4));
        v4 &= v4 - 1;
      }
    }
    v11 = v5 + 1;
    if (v5 + 1 >= v6)
      goto LABEL_29;
    v10 = *(_QWORD *)(v19 + 8 * v11);
    if (!v10)
    {
      v11 = v5 + 2;
      if (v5 + 2 >= v6)
        goto LABEL_29;
      v10 = *(_QWORD *)(v19 + 8 * v11);
      if (!v10)
      {
        v11 = v5 + 3;
        if (v5 + 3 >= v6)
          goto LABEL_29;
        v10 = *(_QWORD *)(v19 + 8 * v11);
        if (!v10)
        {
          v11 = v5 + 4;
          if (v5 + 4 >= v6)
            goto LABEL_29;
          v10 = *(_QWORD *)(v19 + 8 * v11);
          if (!v10)
          {
            v11 = v5 + 5;
            if (v5 + 5 < v6)
            {
              v10 = *(_QWORD *)(v19 + 8 * v11);
              if (v10)
                goto LABEL_20;
              while (1)
              {
                v5 = v11 + 1;
                if (__OFADD__(v11, 1))
                  goto LABEL_31;
                if (v5 >= v6)
                  break;
                v10 = *(_QWORD *)(v19 + 8 * v5);
                ++v11;
                if (v10)
                  goto LABEL_21;
              }
            }
LABEL_29:
            swift_release();
            return;
          }
        }
      }
    }
LABEL_20:
    v5 = v11;
    goto LABEL_21;
  }
  __break(1u);
LABEL_31:
  __break(1u);
}

void sub_1C13DA794(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t i;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  unint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  int64_t v55;
  int64_t v56;
  unint64_t v57;
  unint64_t j;
  id v59;
  unint64_t v61;
  int64_t v62;
  uint64_t *v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  void *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  int64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;

  v2 = sub_1C142671C();
  v72 = *(_QWORD *)(v2 - 8);
  v73 = v2;
  MEMORY[0x1E0C80A78](v2);
  v71 = (char *)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797560);
  MEMORY[0x1E0C80A78](v4);
  v82 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = type metadata accessor for Activity();
  v84 = *(_QWORD *)(v80 - 8);
  MEMORY[0x1E0C80A78](v80);
  v83 = (uint64_t)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C1426494();
  v74 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v75 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v81 = (char *)&v70 - v10;
  v11 = *(_QWORD *)(a1 + OBJC_IVAR____TtC11SessionCore15PushTokenServer_processManager + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + OBJC_IVAR____TtC11SessionCore15PushTokenServer_processManager), *(_QWORD *)(a1 + OBJC_IVAR____TtC11SessionCore15PushTokenServer_processManager + 24));
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + OBJC_IVAR____TtC11SessionCore15PushTokenServer_pushServer), *(_QWORD *)(a1 + OBJC_IVAR____TtC11SessionCore15PushTokenServer_pushServer + 24));
  sub_1C13DAED0();
  (*(void (**)(void))(*(_QWORD *)(v11 + 8) + 8))();
  swift_bridgeObjectRelease();
  v12 = swift_bridgeObjectRetain();
  v13 = sub_1C13753C8(v12);
  swift_bridgeObjectRelease();
  v14 = OBJC_IVAR____TtC11SessionCore15PushTokenServer_lock_tokens;
  v70 = a1;
  v15 = *(_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC11SessionCore15PushTokenServer_lock_tokens) + 16);
  v16 = *(_QWORD *)(v13 + 16);
  v85 = 0;
  if (v15 <= v16 >> 3)
  {
    v86 = v13;
    swift_bridgeObjectRetain();
    v19 = swift_bridgeObjectRetain();
    sub_1C1355D00(v19);
    swift_bridgeObjectRelease();
    v18 = v86;
  }
  else
  {
    swift_bridgeObjectRetain();
    v17 = swift_bridgeObjectRetain();
    v18 = sub_1C135691C(v17, v13);
    swift_bridgeObjectRelease();
  }
  v20 = v74;
  v21 = v70;
  *(_QWORD *)(v70 + v14) = v13;
  swift_bridgeObjectRelease();
  v22 = 0;
  v87 = MEMORY[0x1E0DEE9E8];
  v23 = *(_QWORD *)(v18 + 56);
  v76 = v18 + 56;
  v24 = 1 << *(_BYTE *)(v18 + 32);
  v25 = -1;
  if (v24 < 64)
    v25 = ~(-1 << v24);
  v26 = v25 & v23;
  v78 = (_QWORD *)(v21 + OBJC_IVAR____TtC11SessionCore15PushTokenServer_activityStore);
  v79 = v18;
  v77 = (unint64_t)(v24 + 63) >> 6;
  v27 = v75;
  if ((v25 & v23) != 0)
    goto LABEL_9;
LABEL_10:
  v34 = v22 + 1;
  if (__OFADD__(v22, 1))
  {
    __break(1u);
    goto LABEL_56;
  }
  if (v34 < v77)
  {
    v35 = *(_QWORD *)(v76 + 8 * v34);
    ++v22;
    if (v35)
      goto LABEL_23;
    v22 = v34 + 1;
    if (v34 + 1 >= v77)
      goto LABEL_30;
    v35 = *(_QWORD *)(v76 + 8 * v22);
    if (v35)
      goto LABEL_23;
    v22 = v34 + 2;
    if (v34 + 2 >= v77)
      goto LABEL_30;
    v35 = *(_QWORD *)(v76 + 8 * v22);
    if (v35)
    {
LABEL_23:
      v26 = (v35 - 1) & v35;
      for (i = __clz(__rbit64(v35)) + (v22 << 6); ; i = v32 | (v22 << 6))
      {
        v37 = *(_QWORD *)(v18 + 48) + *(_QWORD *)(v20 + 72) * i;
        v38 = v81;
        (*(void (**)(char *, unint64_t, uint64_t))(v20 + 16))(v81, v37, v7);
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v27, v38, v7);
        v39 = v20;
        v40 = v78[4];
        __swift_project_boxed_opaque_existential_1(v78, v78[3]);
        v41 = sub_1C1426470();
        v42 = v7;
        v43 = (uint64_t)v82;
        (*(void (**)(uint64_t))(v40 + 16))(v41);
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v43, 1, v80) == 1)
        {
          sub_1C132C860(v43, &qword_1ED797560);
          v28 = v71;
          sub_1C1426488();
          v29 = sub_1C14266EC();
          v31 = v30;
          (*(void (**)(char *, uint64_t))(v72 + 8))(v28, v73);
          sub_1C132FAD4(&v86, v29, v31);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v39 + 8))(v27, v7);
          v20 = v39;
          v18 = v79;
          if (!v26)
            goto LABEL_10;
        }
        else
        {
          sub_1C13A78FC(v43, v83);
          v44 = swift_bridgeObjectRetain();
          v45 = sub_1C13DB0F8(v44);
          swift_bridgeObjectRelease();
          v46 = *(_QWORD *)(v45 + 16);
          if (v46)
          {
            v47 = (uint64_t *)(v45 + 40);
            do
            {
              v48 = *(v47 - 1);
              v49 = *v47;
              swift_bridgeObjectRetain();
              sub_1C132FAD4(&v86, v48, v49);
              swift_bridgeObjectRelease();
              v47 += 2;
              --v46;
            }
            while (v46);
          }
          swift_bridgeObjectRelease();
          sub_1C13DCA54(v83);
          v20 = v74;
          v27 = v75;
          v7 = v42;
          (*(void (**)(char *, uint64_t))(v74 + 8))(v75, v42);
          v18 = v79;
          if (!v26)
            goto LABEL_10;
        }
LABEL_9:
        v32 = __clz(__rbit64(v26));
        v26 &= v26 - 1;
      }
    }
    v36 = v34 + 3;
    if (v36 < v77)
    {
      v35 = *(_QWORD *)(v76 + 8 * v36);
      if (v35)
      {
        v22 = v36;
        goto LABEL_23;
      }
      while (1)
      {
        v22 = v36 + 1;
        if (__OFADD__(v36, 1))
          goto LABEL_57;
        if (v22 >= v77)
          break;
        v35 = *(_QWORD *)(v76 + 8 * v22);
        ++v36;
        if (v35)
          goto LABEL_23;
      }
    }
  }
LABEL_30:
  swift_release();
  v50 = v87;
  v51 = *(_QWORD *)(v87 + 56);
  v84 = v87 + 56;
  v52 = 1 << *(_BYTE *)(v87 + 32);
  v53 = -1;
  if (v52 < 64)
    v53 = ~(-1 << v52);
  v54 = v53 & v51;
  swift_bridgeObjectRetain();
  swift_beginAccess();
  v55 = 0;
  v56 = (unint64_t)(v52 + 63) >> 6;
  if (v54)
    goto LABEL_35;
LABEL_37:
  if (!__OFADD__(v55++, 1))
  {
    if (v55 < v56)
    {
      v61 = *(_QWORD *)(v84 + 8 * v55);
      if (v61)
      {
LABEL_47:
        v54 = (v61 - 1) & v61;
        for (j = __clz(__rbit64(v61)) + (v55 << 6); ; j = v57 | (v55 << 6))
        {
          v63 = (uint64_t *)(*(_QWORD *)(v50 + 48) + 16 * j);
          v64 = *v63;
          v65 = (void *)v63[1];
          swift_bridgeObjectRetain();
          v66 = swift_bridgeObjectRetain();
          v67 = v85;
          sub_1C13DC684(v66, v64, (uint64_t)v65);
          v69 = v68;
          v85 = v67;
          swift_bridgeObjectRelease();
          if (v69)
          {
            v59 = v69;
            swift_bridgeObjectRelease();
            sub_1C132C89C();

            if (!v54)
              goto LABEL_37;
          }
          else
          {
            sub_1C13DB460(v64, v65);
            swift_bridgeObjectRelease();
            if (!v54)
              goto LABEL_37;
          }
LABEL_35:
          v57 = __clz(__rbit64(v54));
          v54 &= v54 - 1;
        }
      }
      v62 = v55 + 1;
      if (v55 + 1 < v56)
      {
        v61 = *(_QWORD *)(v84 + 8 * v62);
        if (v61)
          goto LABEL_46;
        v62 = v55 + 2;
        if (v55 + 2 >= v56)
          goto LABEL_54;
        v61 = *(_QWORD *)(v84 + 8 * v62);
        if (v61)
        {
LABEL_46:
          v55 = v62;
          goto LABEL_47;
        }
        v62 = v55 + 3;
        if (v55 + 3 < v56)
        {
          v61 = *(_QWORD *)(v84 + 8 * v62);
          if (!v61)
          {
            while (1)
            {
              v55 = v62 + 1;
              if (__OFADD__(v62, 1))
                goto LABEL_58;
              if (v55 >= v56)
                goto LABEL_54;
              v61 = *(_QWORD *)(v84 + 8 * v55);
              ++v62;
              if (v61)
                goto LABEL_47;
            }
          }
          goto LABEL_46;
        }
      }
    }
LABEL_54:
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
}

uint64_t sub_1C13DAED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  void (*v10)(_QWORD, _QWORD, _QWORD);
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v23;
  void (*v24)(_QWORD, _QWORD, _QWORD);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v0 = sub_1C142671C();
  v27 = *(_QWORD *)(v0 - 8);
  v28 = v0;
  MEMORY[0x1E0C80A78](v0);
  v26 = (char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1C1426320();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C1426518();
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v8 = v6 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v9 = *(_QWORD *)(v3 + 72);
    v10 = *(void (**)(_QWORD, _QWORD, _QWORD))(v3 + 16);
    v23 = v6;
    swift_bridgeObjectRetain();
    v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v24 = v10;
    v25 = v3;
    do
    {
      v10(v5, v8, v2);
      sub_1C1426308();
      v13 = v12;
      swift_bridgeObjectRelease();
      if (v13)
      {
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      }
      else
      {
        v14 = v26;
        sub_1C14262FC();
        v15 = sub_1C14266EC();
        v17 = v16;
        (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v28);
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v11 = sub_1C136C3E0(0, v11[2] + 1, 1, v11);
        v19 = v11[2];
        v18 = v11[3];
        if (v19 >= v18 >> 1)
          v11 = sub_1C136C3E0((_QWORD *)(v18 > 1), v19 + 1, 1, v11);
        v11[2] = v19 + 1;
        v20 = &v11[2 * v19];
        v20[4] = v15;
        v20[5] = v17;
        v10 = v24;
        v3 = v25;
      }
      v8 += v9;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v21 = sub_1C1375140((uint64_t)v11);
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_1C13DB0F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  char *v17;
  void (*v18)(char *, char *, uint64_t);
  int v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t result;
  uint64_t v30;
  int v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  int v42;
  char *v43;

  v2 = sub_1C14253C0();
  v37 = *(_QWORD *)(v2 - 8);
  v38 = v2;
  MEMORY[0x1E0C80A78](v2);
  v36 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C1425AEC();
  v33 = *(_QWORD *)(v4 - 8);
  v34 = v4;
  MEMORY[0x1E0C80A78](v4);
  v32 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C1425558();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v43 = (char *)&v30 - v11;
  v12 = *(_QWORD *)(a1 + 16);
  if (v12)
  {
    v13 = (char *)(a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)));
    v42 = *MEMORY[0x1E0C8F750];
    v35 = *MEMORY[0x1E0C8F788];
    v31 = *MEMORY[0x1E0C8F758];
    v14 = *(_QWORD *)(v7 + 72);
    v40 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v41 = v14;
    v30 = a1;
    swift_bridgeObjectRetain();
    v15 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v39 = v10;
    while (1)
    {
      v17 = v43;
      v18 = v40;
      v40(v43, v13, v6);
      v18(v10, v17, v6);
      v19 = (*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v10, v6);
      if (v19 == v42)
        break;
      if (v19 == v35)
      {
        (*(void (**)(char *, uint64_t))(v7 + 96))(v10, v6);
        v20 = v32;
        v21 = v33;
        v22 = v34;
        (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v32, v10, v34);
        v23 = sub_1C1425A80();
        goto LABEL_9;
      }
      if (v19 != v31)
      {
        result = sub_1C1426F8C();
        __break(1u);
        return result;
      }
      (*(void (**)(char *, uint64_t))(v7 + 8))(v43, v6);
LABEL_4:
      v13 += v41;
      if (!--v12)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v15;
      }
    }
    (*(void (**)(char *, uint64_t))(v7 + 96))(v10, v6);
    v20 = v36;
    v21 = v37;
    v22 = v38;
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v36, v10, v38);
    v23 = sub_1C142539C();
LABEL_9:
    v25 = v23;
    v26 = v24;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v20, v22);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v43, v6);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v15 = sub_1C136C3E0(0, v15[2] + 1, 1, v15);
    v28 = v15[2];
    v27 = v15[3];
    if (v28 >= v27 >> 1)
      v15 = sub_1C136C3E0((_QWORD *)(v27 > 1), v28 + 1, 1, v15);
    v15[2] = v28 + 1;
    v16 = &v15[2 * v28];
    v16[4] = v25;
    v16[5] = v26;
    v10 = v39;
    goto LABEL_4;
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1C13DB460(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t);
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, void *, uint64_t, uint64_t);
  uint64_t v18;
  void *v19;
  uint64_t v21;

  v3 = v2;
  if (qword_1ED7939B0 != -1)
    swift_once();
  v6 = sub_1C1426854();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED798628);
  swift_bridgeObjectRetain_n();
  v7 = sub_1C1426848();
  v8 = sub_1C1426C80();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v21 = v10;
    *(_DWORD *)v9 = 136380675;
    swift_bridgeObjectRetain();
    sub_1C132AD90(a1, (unint64_t)a2, &v21);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C1324000, v7, v8, "Launching process to deliver push token for: %{private}s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v10, -1, -1);
    MEMORY[0x1C3BAD3F4](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1C1425F0C();
  swift_allocObject();
  v11 = (void (*)(char *, uint64_t))sub_1C1425EF4();
  v12 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + OBJC_IVAR____TtC11SessionCore15PushTokenServer_processManager), *(_QWORD *)(v3 + OBJC_IVAR____TtC11SessionCore15PushTokenServer_processManager + 24));
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = v11;
  v13[3] = a1;
  v13[4] = a2;
  v14 = (_QWORD *)*v12;
  v15 = *(_QWORD *)(*v12 + 40);
  v16 = *(_QWORD *)(*v12 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*v12 + 16), v15);
  v17 = *(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(v16 + 32);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v18 = v17(a1, a2, v15, v16);
  if (v18)
  {
    v19 = (void *)v18;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1C1379C70(v19, (void *)0xD000000000000013, 0x80000001C14303A0, 2, (uint64_t)v14, v11, a1, a2, 10.0);
    swift_release();

    swift_release_n();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    swift_retain();
    sub_1C1378A64(a1, (unint64_t)a2, v14, (uint64_t)v14, (void *)0xD000000000000013, (void *)0x80000001C14303A0, 2, (void (*)(char *, uint64_t))sub_1C13DCB28, 10.0, (uint64_t)v13);
    swift_release();
    swift_release();
    swift_release_n();
  }
  swift_release_n();
  return swift_bridgeObjectRelease_n();
}

void sub_1C13DB7BC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;

  sub_1C1425EE8();
  if (a1)
  {
    if (qword_1ED7939B0 != -1)
      swift_once();
    v7 = sub_1C1426854();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED798628);
    swift_bridgeObjectRetain_n();
    v8 = sub_1C1426848();
    v9 = sub_1C1426C68();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      v12 = v11;
      *(_DWORD *)v10 = 136380675;
      swift_bridgeObjectRetain();
      sub_1C132AD90(a3, a4, &v12);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v8, v9, "Did not launch process for push token delivery: %{private}s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v11, -1, -1);
      MEMORY[0x1C3BAD3F4](v10, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

id sub_1C13DB994(uint64_t a1)
{
  return sub_1C1359EC8(a1, type metadata accessor for PushTokenServer);
}

uint64_t type metadata accessor for PushTokenServer()
{
  return objc_opt_self();
}

id sub_1C13DBAB4()
{
  return sub_1C1359EC8(0, _s11SessionCore6ClientCMa_1);
}

uint64_t sub_1C13DBB2C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  int v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t result;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t (*v67)(uint64_t, uint64_t);
  int v68;
  int v69;
  int v70;
  uint64_t v71;
  _QWORD *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  int *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  int v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;

  v81 = a5;
  v97 = a4;
  v102 = a3;
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791E60);
  MEMORY[0x1E0C80A78](v80);
  v87 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = sub_1C1425678();
  v78 = *(_QWORD *)(v79 - 8);
  MEMORY[0x1E0C80A78](v79);
  v77 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_1C1425978();
  v74 = *(_QWORD *)(v75 - 8);
  MEMORY[0x1E0C80A78](v75);
  v73 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C142575C();
  v85 = *(_QWORD *)(v10 - 8);
  v86 = v10;
  MEMORY[0x1E0C80A78](v10);
  v76 = (char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1C14253C0();
  v100 = *(_QWORD *)(v12 - 8);
  v101 = v12;
  MEMORY[0x1E0C80A78](v12);
  v99 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1C1425AEC();
  v95 = *(_QWORD *)(v14 - 8);
  v96 = v14;
  MEMORY[0x1E0C80A78](v14);
  v94 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1C1425558();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
  v21 = MEMORY[0x1E0C80A78](v20);
  v72 = (uint64_t *)((char *)&v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = MEMORY[0x1E0C80A78](v21);
  v82 = (uint64_t *)((char *)&v71 - v24);
  v25 = MEMORY[0x1E0C80A78](v23);
  v27 = (uint64_t *)((char *)&v71 - v26);
  v28 = MEMORY[0x1E0C80A78](v25);
  v30 = (uint64_t *)((char *)&v71 - v29);
  v32 = *a1;
  v31 = a1[1];
  v33 = (char *)&v71 + *(int *)(v28 + 48) - v29;
  *v30 = v32;
  v30[1] = v31;
  v91 = (uint64_t)&v71 - v29;
  sub_1C13DCA10(a2, (uint64_t)v33);
  v83 = v32;
  v84 = v20;
  v34 = (uint64_t)v27 + *(int *)(v20 + 48);
  *v27 = v32;
  v27[1] = v31;
  v89 = v33;
  sub_1C13DCA10((uint64_t)v33, v34);
  v88 = (int *)type metadata accessor for Activity();
  v35 = *(_QWORD *)(v34 + v88[7]);
  v90 = v31;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1C13DCA54(v34);
  v36 = *(_QWORD *)(v35 + 16);
  if (!v36)
  {
    swift_bridgeObjectRelease();
LABEL_17:
    sub_1C132C860(v91, &qword_1ED7939D8);
    swift_bridgeObjectRelease();
    return 0;
  }
  v37 = v35 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
  v38 = *MEMORY[0x1E0C8F750];
  v93 = *MEMORY[0x1E0C8F788];
  v92 = *MEMORY[0x1E0C8F758];
  v98 = *(_QWORD *)(v17 + 72);
  v39 = v35;
  v40 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v71 = v39;
  swift_bridgeObjectRetain();
  while (1)
  {
    v40(v19, v37, v16);
    v41 = (*(uint64_t (**)(char *, uint64_t))(v17 + 88))(v19, v16);
    if (v41 == v38)
    {
      (*(void (**)(char *, uint64_t))(v17 + 96))(v19, v16);
      (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v99, v19, v101);
      if (sub_1C142539C() == v102 && v42 == v97)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v100 + 8))(v99, v101);
        goto LABEL_20;
      }
      v43 = sub_1C1427064();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v100 + 8))(v99, v101);
      if ((v43 & 1) != 0)
        goto LABEL_20;
      goto LABEL_4;
    }
    if (v41 == v93)
      break;
    if (v41 != v92)
    {
      result = sub_1C1426F8C();
      __break(1u);
      return result;
    }
LABEL_4:
    v37 += v98;
    if (!--v36)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_17;
    }
  }
  (*(void (**)(char *, uint64_t))(v17 + 96))(v19, v16);
  (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v94, v19, v96);
  if (sub_1C1425A80() != v102 || v44 != v97)
  {
    v45 = sub_1C1427064();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v95 + 8))(v94, v96);
    if ((v45 & 1) != 0)
      goto LABEL_20;
    goto LABEL_4;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v94, v96);
LABEL_20:
  swift_bridgeObjectRelease_n();
  v48 = v83;
  v47 = v84;
  v49 = *(int *)(v84 + 48);
  v50 = v82;
  v51 = (uint64_t)v82 + v49;
  v52 = (uint64_t)v89;
  v53 = v90;
  *v82 = v83;
  v50[1] = v53;
  sub_1C13DCA10(v52, (uint64_t)v50 + v49);
  if (*(_BYTE *)(v51 + v88[9]) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1C13DCA54(v51);
    v55 = v86;
    v54 = (uint64_t)v87;
    v56 = v85;
    goto LABEL_23;
  }
  v57 = sub_1C1427064();
  swift_bridgeObjectRelease();
  sub_1C13DCA54(v51);
  v55 = v86;
  v54 = (uint64_t)v87;
  v56 = v85;
  if ((v57 & 1) != 0)
  {
LABEL_23:
    v58 = *(int *)(v47 + 48);
    v59 = v72;
    v60 = (uint64_t)v72 + v58;
    *v72 = v48;
    v59[1] = v53;
    sub_1C13DCA10((uint64_t)v89, (uint64_t)v59 + v58);
    swift_bridgeObjectRelease();
    v61 = v74;
    v62 = v73;
    v63 = v75;
    (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))(v73, v60 + v88[5], v75);
    sub_1C13DCA54(v60);
    v64 = v77;
    sub_1C1425948();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v63);
    v65 = v76;
    sub_1C1425648();
    (*(void (**)(char *, uint64_t))(v78 + 8))(v64, v79);
    sub_1C132C860(v91, &qword_1ED7939D8);
    v66 = v54 + *(int *)(v80 + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16))(v54, v81, v55);
    (*(void (**)(uint64_t, char *, uint64_t))(v56 + 32))(v66, v65, v55);
    v67 = *(uint64_t (**)(uint64_t, uint64_t))(v56 + 88);
    v68 = v67(v54, v55);
    v69 = *MEMORY[0x1E0C8FB50];
    if (v68 == *MEMORY[0x1E0C8FB50])
    {
      v70 = v67(v66, v55);
      goto LABEL_25;
    }
    if (v68 == *MEMORY[0x1E0C8FB48])
    {
      v70 = v67(v66, v55);
      if (v70 == v69)
        goto LABEL_29;
LABEL_25:
      if (v70 == *MEMORY[0x1E0C8FB58])
      {
LABEL_29:
        (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v54, v55);
        return 0;
      }
    }
    sub_1C132C860(v54, &qword_1ED791E60);
  }
  else
  {
    sub_1C132C860(v91, &qword_1ED7939D8);
    swift_bridgeObjectRelease();
  }
  return 1;
}

uint64_t sub_1C13DC334()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1C1425984();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C1426854();
  __swift_allocate_value_buffer(v4, qword_1ED798628);
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED798628);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0C8FF28], v0);
  return sub_1C1426830();
}

uint64_t sub_1C13DC3EC(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1C13DBB2C(a1, a2, v2[2], v2[3], v2[4]) & 1;
}

id sub_1C13DC40C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6)
{
  id v12;
  objc_super v14;
  _QWORD v15[5];
  _QWORD v16[5];

  v16[3] = type metadata accessor for ProcessManager();
  v16[4] = &off_1E7A8AFC8;
  v16[0] = a3;
  v15[3] = type metadata accessor for AuthorizationManager();
  v15[4] = &off_1E7A8A518;
  v15[0] = a5;
  *(_QWORD *)&a6[OBJC_IVAR____TtC11SessionCoreP33_4CCBD309304C86708E1086DB2B0619886Client_connection] = a1;
  sub_1C132E0A8(a2, (uint64_t)&a6[OBJC_IVAR____TtC11SessionCoreP33_4CCBD309304C86708E1086DB2B0619886Client_pushServer]);
  sub_1C132E0A8((uint64_t)v16, (uint64_t)&a6[OBJC_IVAR____TtC11SessionCoreP33_4CCBD309304C86708E1086DB2B0619886Client_processManager]);
  sub_1C132E0A8(a4, (uint64_t)&a6[OBJC_IVAR____TtC11SessionCoreP33_4CCBD309304C86708E1086DB2B0619886Client_activityStore]);
  sub_1C132E0A8((uint64_t)v15, (uint64_t)&a6[OBJC_IVAR____TtC11SessionCoreP33_4CCBD309304C86708E1086DB2B0619886Client_authorizationManager]);
  v14.receiver = a6;
  v14.super_class = (Class)_s11SessionCore6ClientCMa_1();
  v12 = objc_msgSendSuper2(&v14, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  __swift_destroy_boxed_opaque_existential_1(a4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  __swift_destroy_boxed_opaque_existential_1(a2);
  return v12;
}

id sub_1C13DC524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  id v19;
  _QWORD v21[3];
  uint64_t v22;
  _UNKNOWN **v23;
  _QWORD v24[3];
  uint64_t v25;
  _UNKNOWN **v26;

  v25 = type metadata accessor for ProcessManager();
  v26 = &off_1E7A8AFC8;
  v24[0] = a3;
  v22 = type metadata accessor for AuthorizationManager();
  v23 = &off_1E7A8A518;
  v21[0] = a5;
  v10 = (char *)objc_allocWithZone((Class)_s11SessionCore6ClientCMa_1());
  v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v24, v25);
  MEMORY[0x1E0C80A78](v11);
  v13 = (_QWORD *)((char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v14 + 16))(v13);
  v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v21, v22);
  MEMORY[0x1E0C80A78](v15);
  v17 = (_QWORD *)((char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v18 + 16))(v17);
  v19 = sub_1C13DC40C(a1, a2, *v13, a4, *v17, v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return v19;
}

void sub_1C13DC684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  char *v14;
  unint64_t v15;
  int64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  int64_t v24;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  unint64_t v35;
  char *v36;

  v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C1426E30();
    _s11SessionCore6ClientCMa_1();
    sub_1C1329AD0((unint64_t *)&unk_1EF6DBF30, (uint64_t (*)(uint64_t))_s11SessionCore6ClientCMa_1, MEMORY[0x1E0DEFCF8]);
    sub_1C1426C2C();
    v3 = v31;
    v28 = v32;
    v4 = v33;
    v5 = v34;
    v6 = v35;
  }
  else
  {
    v7 = -1 << *(_BYTE *)(a1 + 32);
    v28 = a1 + 56;
    v8 = ~v7;
    v9 = -v7;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v6 = v10 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v4 = v8;
    v5 = 0;
  }
  v27 = (unint64_t)(v4 + 64) >> 6;
  v29 = v3;
  while (v3 < 0)
  {
    if (!sub_1C1426E84())
      goto LABEL_43;
    _s11SessionCore6ClientCMa_1();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v14 = v36;
    swift_unknownObjectRelease();
    v13 = v5;
    v11 = v6;
    if (!v36)
      goto LABEL_43;
LABEL_28:
    v17 = objc_msgSend(*(id *)&v14[OBJC_IVAR____TtC11SessionCoreP33_4CCBD309304C86708E1086DB2B0619886Client_connection], sel_remoteProcess);
    v18 = sub_1C132F33C();
    if (v30)
    {

      v30 = 0;
      v3 = v29;
    }
    else
    {
      v20 = v18;
      v21 = v19;

      if (v20 == a2 && v21 == a3)
      {
        swift_bridgeObjectRelease();
LABEL_43:
        sub_1C133F908();
        return;
      }
      v23 = sub_1C1427064();
      swift_bridgeObjectRelease();
      if ((v23 & 1) != 0)
        goto LABEL_43;
      v17 = v14;
      v3 = v29;
      v30 = 0;
    }

    v5 = v13;
    v6 = v11;
  }
  if (v6)
  {
    v11 = (v6 - 1) & v6;
    v12 = __clz(__rbit64(v6)) | (v5 << 6);
    v13 = v5;
LABEL_27:
    v14 = (char *)*(id *)(*(_QWORD *)(v3 + 48) + 8 * v12);
    if (!v14)
      goto LABEL_43;
    goto LABEL_28;
  }
  v13 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v13 >= v27)
      goto LABEL_43;
    v15 = *(_QWORD *)(v28 + 8 * v13);
    if (!v15)
    {
      v16 = v5 + 2;
      if (v5 + 2 >= v27)
        goto LABEL_43;
      v15 = *(_QWORD *)(v28 + 8 * v16);
      if (v15)
        goto LABEL_25;
      v16 = v5 + 3;
      if (v5 + 3 >= v27)
        goto LABEL_43;
      v15 = *(_QWORD *)(v28 + 8 * v16);
      if (v15)
        goto LABEL_25;
      v16 = v5 + 4;
      if (v5 + 4 >= v27)
        goto LABEL_43;
      v15 = *(_QWORD *)(v28 + 8 * v16);
      if (v15)
      {
LABEL_25:
        v13 = v16;
      }
      else
      {
        v13 = v5 + 5;
        if (v5 + 5 >= v27)
          goto LABEL_43;
        v15 = *(_QWORD *)(v28 + 8 * v13);
        if (!v15)
        {
          v24 = v5 + 6;
          while (v27 != v24)
          {
            v15 = *(_QWORD *)(v28 + 8 * v24++);
            if (v15)
            {
              v13 = v24 - 1;
              goto LABEL_26;
            }
          }
          goto LABEL_43;
        }
      }
    }
LABEL_26:
    v11 = (v15 - 1) & v15;
    v12 = __clz(__rbit64(v15)) + (v13 << 6);
    goto LABEL_27;
  }
  __break(1u);
}

uint64_t sub_1C13DCA10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Activity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C13DCA54(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Activity();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C13DCA90()
{
  sub_1C14262E4();
  sub_1C142653C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C13DCAFC()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1C13DCB28(uint64_t a1)
{
  uint64_t v1;

  sub_1C13DB7BC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1C13DCB34()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1C13DCB60()
{
  return swift_deallocObject();
}

uint64_t sub_1C13DCB70()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1C13DCB98(uint64_t a1)
{
  uint64_t v1;

  sub_1C13D99C0(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), "Connection interrupted");
}

void sub_1C13DCBBC(uint64_t a1)
{
  uint64_t v1;

  sub_1C13D99C0(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), "Connection invalidated");
}

unint64_t sub_1C13DCBDC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED7932C8;
  if (!qword_1ED7932C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED7932C0);
    v2 = sub_1C1329AD0(&qword_1ED793920, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8D0A8], MEMORY[0x1E0D8D0C0]);
    result = MEMORY[0x1C3BAD334](MEMORY[0x1E0DEAF30], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED7932C8);
  }
  return result;
}

void sub_1C13DCC58(uint64_t a1)
{
  uint64_t v1;

  sub_1C13DA334(a1, v1);
}

unint64_t sub_1C13DCC60()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED792808;
  if (!qword_1ED792808)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED792800);
    v2 = sub_1C1329AD0(&qword_1ED792718, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FB68], MEMORY[0x1E0C8FB78]);
    result = MEMORY[0x1C3BAD334](MEMORY[0x1E0DEA0C8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED792808);
  }
  return result;
}

void sub_1C13DCCDC(uint64_t *a1)
{
  uint64_t v1;

  sub_1C13DA454(a1, v1);
}

uint64_t sub_1C13DCCFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD v23[2];
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = sub_1C14258AC();
  v28 = *(_QWORD *)(v3 - 8);
  v29 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x1E0DEE9D8];
  if (!v6)
    return v7;
  v23[1] = v1;
  v30 = MEMORY[0x1E0DEE9D8];
  sub_1C1336B70(0, v6, 0);
  v7 = v30;
  result = sub_1C135833C(a1);
  v10 = result;
  v11 = 0;
  v12 = a1 + 64;
  v24 = a1 + 80;
  v25 = v6;
  v26 = v9;
  v27 = a1 + 64;
  while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << *(_BYTE *)(a1 + 32))
  {
    v15 = (unint64_t)v10 >> 6;
    if ((*(_QWORD *)(v12 + 8 * ((unint64_t)v10 >> 6)) & (1 << v10)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v9)
      goto LABEL_24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C1425894();
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 16);
    v16 = *(_QWORD *)(v7 + 24);
    if (v17 >= v16 >> 1)
    {
      sub_1C1336B70(v16 > 1, v17 + 1, 1);
      v7 = v30;
    }
    *(_QWORD *)(v7 + 16) = v17 + 1;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v28 + 32))(v7+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(_QWORD *)(v28 + 72) * v17, v5, v29);
    v13 = 1 << *(_BYTE *)(a1 + 32);
    if (v10 >= v13)
      goto LABEL_25;
    v12 = v27;
    v18 = *(_QWORD *)(v27 + 8 * v15);
    if ((v18 & (1 << v10)) == 0)
      goto LABEL_26;
    LODWORD(v9) = v26;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v26)
      goto LABEL_27;
    v19 = v18 & (-2 << (v10 & 0x3F));
    if (v19)
    {
      v13 = __clz(__rbit64(v19)) | v10 & 0xFFFFFFFFFFFFFFC0;
      v14 = v25;
    }
    else
    {
      v20 = v15 + 1;
      v21 = (unint64_t)(v13 + 63) >> 6;
      v14 = v25;
      if (v15 + 1 < v21)
      {
        v22 = *(_QWORD *)(v27 + 8 * v20);
        if (v22)
        {
LABEL_20:
          v13 = __clz(__rbit64(v22)) + (v20 << 6);
        }
        else
        {
          while (v21 - 2 != v15)
          {
            v22 = *(_QWORD *)(v24 + 8 * v15++);
            if (v22)
            {
              v20 = v15 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v11;
    v10 = v13;
    if (v11 == v14)
      return v7;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void sub_1C13DCF7C(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

id sub_1C13DCFD0(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v10;

  v4 = sub_1C1425EDC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  sub_1C1425744();
  sub_1C1426D70();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1C1425738();
  v8 = (void *)sub_1C1426A7C();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setService_, v8);

  return objc_msgSend(a1, sel_setDelegate_, a2);
}

uint64_t sub_1C13DD0B0(uint64_t a1, uint64_t a2, unsigned int a3, const char *a4)
{
  uint64_t v6;
  uint64_t result;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  os_unfair_lock_s *v13;
  char *v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  void *v20;
  uint64_t v21;

  v6 = a2 + 16;
  swift_beginAccess();
  result = MEMORY[0x1C3BAD4B4](v6);
  if (result)
  {
    v8 = (char *)result;
    if (qword_1ED793938 != -1)
      swift_once();
    v9 = sub_1C1426854();
    __swift_project_value_buffer(v9, (uint64_t)qword_1ED798568);
    v10 = sub_1C1426848();
    v11 = sub_1C1426C80();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_1C1324000, v10, v11, a4, v12, 2u);
      MEMORY[0x1C3BAD3F4](v12, -1, -1);
    }

    v13 = *(os_unfair_lock_s **)(*(_QWORD *)&v8[OBJC_IVAR____TtC11SessionCore12OutputServer_lock] + 16);
    swift_retain();
    os_unfair_lock_lock(v13);
    v14 = &v8[OBJC_IVAR____TtC11SessionCore12OutputServer__lock_clients];
    swift_beginAccess();
    v15 = sub_1C1327378(a3);
    if ((v16 & 1) != 0)
    {
      v17 = v15;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v19 = *(_QWORD *)v14;
      v21 = *(_QWORD *)v14;
      *(_QWORD *)v14 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1C13BBE90();
        v19 = v21;
      }
      v20 = *(void **)(*(_QWORD *)(v19 + 56) + 8 * v17);
      sub_1C13C11F8(v17, v19);
      *(_QWORD *)v14 = v19;

      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    os_unfair_lock_unlock(v13);

    return swift_release();
  }
  return result;
}

id sub_1C13DD2B0(uint64_t a1)
{
  return sub_1C1359EC8(a1, type metadata accessor for OutputServer);
}

uint64_t type metadata accessor for OutputServer()
{
  return objc_opt_self();
}

uint64_t sub_1C13DD364(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  os_unfair_lock_s *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, _QWORD, uint64_t);
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void (*v37)(unint64_t, _QWORD);
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  os_unfair_lock_s *v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  void *v52;
  uint64_t v53;
  _QWORD v55[2];
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  __int128 v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  _QWORD *v65;
  __int128 v66;
  unsigned int v67;
  unsigned int v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  char v88;
  unint64_t v89;

  v2 = v1;
  v62 = sub_1C14258AC();
  v61 = *(_QWORD *)(v62 - 8);
  MEMORY[0x1E0C80A78](v62);
  v60 = (char *)v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_1C14251B0();
  v71 = *(_QWORD *)(v72 - 8);
  MEMORY[0x1E0C80A78](v72);
  v70 = (char *)v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C1425678();
  MEMORY[0x1E0C80A78](v6);
  v87 = (char *)v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C1425A08();
  MEMORY[0x1E0C80A78](v8);
  v86 = (uint64_t)v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C1425594();
  MEMORY[0x1E0C80A78](v10);
  v85 = (char *)v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797560);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(os_unfair_lock_s **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC11SessionCore12OutputServer_lock) + 16);
  os_unfair_lock_lock(v15);
  v16 = *a1;
  v17 = a1[1];
  sub_1C1338F24((uint64_t)a1, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
  v18 = type metadata accessor for Activity();
  v19 = *(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v69 = v18;
  v19(v14, 0, 1);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C13B396C((uint64_t)v14, v16, v17);
  swift_endAccess();
  v55[1] = v2;
  swift_beginAccess();
  v20 = swift_bridgeObjectRetain();
  v21 = (unint64_t)sub_1C136CB58(v20);
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v15);
  if ((v21 & 0x8000000000000000) != 0 || (v21 & 0x4000000000000000) != 0)
    goto LABEL_23;
  v22 = *(_QWORD *)(v21 + 16);
  swift_retain_n();
  while (v22)
  {
    v23 = 0;
    v24 = v21 & 0xC000000000000001;
    v68 = *MEMORY[0x1E0C8FD20];
    v58 = *MEMORY[0x1E0C8FCA0];
    v57 = *MEMORY[0x1E0C8FC98];
    v56 = *MEMORY[0x1E0C8FCA8];
    v67 = *MEMORY[0x1E0C8FD28];
    v25 = 4;
    v66 = xmmword_1C1428070;
    v59 = xmmword_1C1427F50;
    v65 = (_QWORD *)v21;
    v63 = v22;
    v64 = v21 & 0xC000000000000001;
    while (1)
    {
      v26 = v24 ? (char *)MEMORY[0x1C3BACBFC](v25 - 4, v21) : (char *)*(id *)(v21 + 8 * v25);
      v27 = v26;
      v28 = v25 - 3;
      if (__OFADD__(v25 - 4, 1))
        break;
      if ((sub_1C13DFA84((uint64_t)a1) & 1) != 0)
      {
        v74 = v27;
        v75 = v25 - 3;
        v76 = v23;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797B50);
        v29 = sub_1C1425888();
        v82 = *(_QWORD *)(v29 - 8);
        v83 = *(_QWORD *)(v82 + 72);
        v84 = v29;
        v30 = (*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
        v31 = swift_allocObject();
        *(_OWORD *)(v31 + 16) = v66;
        v73 = v31;
        v81 = v31 + v30;
        v32 = a1[1];
        v80 = *a1;
        v33 = v69;
        swift_bridgeObjectRetain();
        sub_1C1425924();
        v34 = sub_1C142590C();
        v78 = v35;
        v79 = v34;
        sub_1C1338F24((uint64_t)a1 + *(int *)(v33 + 24), v86, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
        sub_1C1425948();
        swift_bridgeObjectRetain();
        LODWORD(v77) = sub_1C14258DC();
        sub_1C14258E8();
        (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v70, (char *)a1 + *(int *)(v33 + 32), v72);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v36 = v81;
        v77 = v32;
        sub_1C1425474();
        v37 = *(void (**)(unint64_t, _QWORD))(v82 + 104);
        v38 = v84;
        v37(v36, v68);
        v39 = v36 + v83;
        v40 = sub_1C1406964();
        if (v40)
        {
          v23 = v76;
          if (v40 == 1)
          {
            v41 = sub_1C1425858();
            (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v41 - 8) + 104))(v39, v57, v41);
          }
          else
          {
            v43 = sub_1C1425858();
            (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v43 - 8) + 104))(v39, v58, v43);
          }
          v22 = v63;
        }
        else
        {
          v42 = sub_1C1425858();
          (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v42 - 8) + 104))(v39, v56, v42);
          v22 = v63;
          v23 = v76;
        }
        v44 = v73;
        v45 = v74;
        ((void (*)(uint64_t, _QWORD, uint64_t))v37)(v39, v67, v38);
        v89 = v44;
        v46 = *(os_unfair_lock_s **)(*(_QWORD *)&v45[OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client_lock]
                                   + 16);
        os_unfair_lock_lock(v46);
        sub_1C13E0954((uint64_t)v45, &v89, a1, &v88);
        os_unfair_lock_unlock(v46);
        if ((v88 & 1) != 0)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v47 = v60;
          sub_1C1425894();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797B58);
          v48 = v61;
          v49 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
          v50 = swift_allocObject();
          *(_OWORD *)(v50 + 16) = v59;
          v51 = v50 + v49;
          v52 = v45;
          v53 = v62;
          (*(void (**)(unint64_t, char *, uint64_t))(v48 + 16))(v51, v47, v62);
          sub_1C13DFE70(v50);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v48 + 8))(v47, v53);

        }
        else
        {

        }
        swift_bridgeObjectRelease();
        v24 = v64;
        v28 = v75;
        v21 = (unint64_t)v65;
      }
      else
      {

      }
      ++v25;
      if (v28 == v22)
        goto LABEL_24;
    }
    __break(1u);
LABEL_23:
    swift_retain_n();
    swift_bridgeObjectRetain();
    v22 = sub_1C1426F98();
    swift_release();
  }
LABEL_24:
  swift_release_n();
  sub_1C13DDAFC((uint64_t)a1, byte_1EF6DBF40, *(double *)&qword_1EF6DBF48);
  return swift_release();
}

uint64_t sub_1C13DDAFC(uint64_t a1, int a2, double a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char v27;
  void (*v28)(char *, uint64_t);
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  os_unfair_lock_s *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(uint64_t, unint64_t, uint64_t, uint64_t);
  void *v68;
  void *v69;
  void *v70;
  _QWORD v71[2];
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t);
  char *v93;
  char *v94;
  char *v95;

  v85 = a2;
  v5 = sub_1C1425AEC();
  v89 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v88 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C14251B0();
  v91 = *(_QWORD *)(v7 - 8);
  v92 = (void (*)(char *, uint64_t))v7;
  MEMORY[0x1E0C80A78](v7);
  v93 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C1425678();
  MEMORY[0x1E0C80A78](v9);
  v95 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C1425A08();
  v12 = MEMORY[0x1E0C80A78](v11);
  v86 = (uint64_t)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v94 = (char *)&v74 - v14;
  v15 = sub_1C1425594();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (int *)type metadata accessor for Activity();
  v83 = *((_QWORD *)v18 - 1);
  v19 = MEMORY[0x1E0C80A78](v18);
  v87 = (uint64_t)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = v20;
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v74 - v21;
  v23 = sub_1C1425498();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C1406BC4((uint64_t)v26);
  v27 = sub_1C142545C();
  v28 = *(void (**)(char *, uint64_t))(v24 + 8);
  v28(v26, v23);
  sub_1C1338F24(a1, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
  if ((v27 & 1) != 0)
    return sub_1C13DCA54((uint64_t)v22);
  v74 = v5;
  v75 = a1;
  v30 = *(_QWORD *)v22;
  v81 = *((_QWORD *)v22 + 1);
  v82 = v30;
  swift_bridgeObjectRetain();
  v80 = v17;
  sub_1C1425924();
  v79 = sub_1C142590C();
  v78 = v31;
  sub_1C1338F24((uint64_t)&v22[v18[6]], (uint64_t)v94, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
  sub_1C1425948();
  swift_bridgeObjectRetain();
  v77 = sub_1C14258DC();
  v76 = sub_1C14258E8();
  (*(void (**)(char *, char *, void (*)(char *, uint64_t)))(v91 + 16))(v93, &v22[v18[8]], v92);
  v32 = &v22[v18[10]];
  v34 = *(_QWORD *)v32;
  v33 = *((_QWORD *)v32 + 1);
  v35 = &v22[v18[13]];
  v92 = v28;
  v37 = *(_QWORD *)v35;
  v36 = *((_QWORD *)v35 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v73 = v36;
  v71[1] = v33;
  v72 = v37;
  v71[0] = v34;
  sub_1C1425474();
  v38 = sub_1C1425468();
  v92(v26, v23);
  result = sub_1C13DCA54((uint64_t)v22);
  if ((v38 & 1) == 0)
  {
    v39 = v90;
    v40 = *(os_unfair_lock_s **)(*(_QWORD *)(v90 + OBJC_IVAR____TtC11SessionCore12OutputServer_lock) + 16);
    os_unfair_lock_lock(v40);
    swift_beginAccess();
    v41 = swift_bridgeObjectRetain();
    v42 = sub_1C136CB58(v41);
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(v40);
    MEMORY[0x1E0C80A78](v43);
    v44 = v75;
    v72 = v75;
    swift_retain();
    LOBYTE(v40) = sub_1C13638EC((uint64_t (*)(id *))sub_1C13E31C8, (uint64_t)v71, (unint64_t)v42);
    swift_release();
    if ((v40 & 1) != 0)
    {
      return swift_release();
    }
    else
    {
      v45 = v85 & 1;
      if ((v85 & 1) != 0)
        v46 = 0x7974697669746341;
      else
        v46 = 0xD000000000000010;
      if ((v85 & 1) != 0)
        v47 = (char *)0xEE006465646E6520;
      else
        v47 = (char *)0x80000001C1430600;
      sub_1C1425F0C();
      swift_allocObject();
      v94 = v47;
      v95 = (char *)v46;
      v48 = sub_1C1425EF4();
      v49 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v39 + OBJC_IVAR____TtC11SessionCore12OutputServer_processManager), *(_QWORD *)(v39 + OBJC_IVAR____TtC11SessionCore12OutputServer_processManager + 24));
      v50 = v86;
      sub_1C1338F24(v44 + v18[6], v86, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
      v51 = v88;
      v52 = v89;
      v53 = v50;
      v54 = v74;
      (*(void (**)(char *, uint64_t, uint64_t))(v89 + 32))(v88, v53, v74);
      v55 = sub_1C1425A80();
      v57 = v56;
      (*(void (**)(char *, uint64_t))(v52 + 8))(v51, v54);
      v58 = v44;
      v59 = v87;
      sub_1C1338F24(v58, v87, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      v60 = (*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
      v61 = (v84 + v60 + 7) & 0xFFFFFFFFFFFFFFF8;
      v62 = swift_allocObject();
      *(_BYTE *)(v62 + 16) = v45;
      *(double *)(v62 + 24) = a3;
      sub_1C13A78FC(v59, v62 + v60);
      *(_QWORD *)(v62 + v61) = v48;
      v63 = (_QWORD *)*v49;
      v64 = (_QWORD *)(*v49 + 16);
      v66 = *(_QWORD *)(*v49 + 40);
      v65 = v63[6];
      __swift_project_boxed_opaque_existential_1(v64, v66);
      v67 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v65 + 32);
      v93 = (char *)v48;
      swift_retain_n();
      v68 = (void *)v67(v55, v57, v66, v65);
      if (v68)
      {
        v69 = v68;
        sub_1C1377860(v68, v95, v94, 2, (void (*)(char *, uint64_t))sub_1C13E3374, v62, a3);
        swift_bridgeObjectRelease();
        swift_release();

      }
      else
      {
        swift_retain();
        v70 = v94;
        swift_bridgeObjectRetain();
        swift_retain();
        sub_1C1378A64(v55, v57, v63, (uint64_t)v63, v95, v70, 2, (void (*)(char *, uint64_t))sub_1C13E3374, a3, v62);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_release();
      }
      swift_release();
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1C13DE220(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t i;
  id v16;
  void *v17;
  uint64_t v18;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797560);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(os_unfair_lock_s **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC11SessionCore12OutputServer_lock) + 16);
  os_unfair_lock_lock(v7);
  v8 = *a1;
  v9 = a1[1];
  sub_1C1338F24((uint64_t)a1, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
  v10 = type metadata accessor for Activity();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 0, 1, v10);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C13B396C((uint64_t)v6, v8, v9);
  swift_endAccess();
  swift_beginAccess();
  v11 = swift_bridgeObjectRetain();
  v12 = (unint64_t)sub_1C136CB58(v11);
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v7);
  if ((v12 & 0x8000000000000000) == 0 && (v12 & 0x4000000000000000) == 0)
  {
    v13 = *(_QWORD *)(v12 + 16);
    result = swift_retain_n();
    if (v13)
      goto LABEL_4;
    return swift_release_n();
  }
  swift_retain_n();
  result = sub_1C1426F98();
  v13 = result;
  if (!result)
    return swift_release_n();
LABEL_4:
  if (v13 >= 1)
  {
    for (i = 0; i != v13; ++i)
    {
      if ((v12 & 0xC000000000000001) != 0)
        v16 = (id)MEMORY[0x1C3BACBFC](i, v12);
      else
        v16 = *(id *)(v12 + 8 * i + 32);
      v17 = v16;
      sub_1C13DE408((uint64_t)a1);

    }
    return swift_release_n();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C13DE408(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;

  v2 = type metadata accessor for Activity();
  MEMORY[0x1E0C80A78](v2);
  v33 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C14258AC();
  v30 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v29 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793BC0);
  MEMORY[0x1E0C80A78](v6);
  v27 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1C14256B4();
  v31 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v26 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C1425888();
  v10 = MEMORY[0x1E0C80A78](v9);
  v25 = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v32 = (char *)v21 - v12;
  v13 = sub_1C14253E4();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v21 - v16;
  result = sub_1C13DFA84(a1);
  if ((result & 1) != 0)
  {
    v23 = v4;
    v24 = v9;
    v21[1] = a1 + *(int *)(v2 + 44);
    sub_1C142542C();
    sub_1C14253CC();
    v20 = v19;
    v22 = *(void (**)(char *, uint64_t))(v14 + 8);
    v22(v17, v13);
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_1C13DEC00(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  os_unfair_lock_s *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  os_unfair_lock_s *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v40;
  unsigned int v41;
  unsigned int v42;
  unint64_t v43;
  _QWORD *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t *v50;
  char v51;

  v2 = v1;
  v4 = sub_1C14258AC();
  v46 = *(_QWORD *)(v4 - 8);
  v47 = v4;
  MEMORY[0x1E0C80A78](v4);
  v45 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797560);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(os_unfair_lock_s **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC11SessionCore12OutputServer_lock) + 16);
  os_unfair_lock_lock(v9);
  v10 = *a1;
  v11 = a1[1];
  v50 = a1;
  v12 = type metadata accessor for Activity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C13B396C((uint64_t)v8, v10, v11);
  swift_endAccess();
  v40 = v2;
  swift_beginAccess();
  v13 = swift_bridgeObjectRetain();
  v14 = (unint64_t)sub_1C136CB58(v13);
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v9);
  if ((v14 & 0x8000000000000000) != 0 || (v14 & 0x4000000000000000) != 0)
    goto LABEL_14;
  v15 = *(_QWORD *)(v14 + 16);
  swift_retain_n();
  while (v15)
  {
    v16 = 0;
    v17 = v14 & 0xC000000000000001;
    v42 = *MEMORY[0x1E0C8FCB0];
    v41 = *MEMORY[0x1E0C8FD28];
    v18 = 4;
    v49 = xmmword_1C1427F50;
    v43 = v14 & 0xC000000000000001;
    v44 = (_QWORD *)v14;
    while (1)
    {
      v19 = v17 ? (char *)MEMORY[0x1C3BACBFC](v18 - 4, v14) : (char *)*(id *)(v14 + 8 * v18);
      v20 = v19;
      v21 = v18 - 3;
      if (__OFADD__(v18 - 4, 1))
        break;
      if ((sub_1C13DFA84((uint64_t)v50) & 1) != 0)
      {
        v22 = *(os_unfair_lock_s **)(*(_QWORD *)&v20[OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client_lock]
                                   + 16);
        os_unfair_lock_lock(v22);
        sub_1C13E1338((uint64_t)v20, v50, &v51);
        os_unfair_lock_unlock(v22);
        if (v51 == 1)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797B50);
          v23 = sub_1C1425888();
          v24 = *(_QWORD *)(v23 - 8);
          v25 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
          v26 = swift_allocObject();
          *(_OWORD *)(v26 + 16) = v49;
          v27 = v26 + v25;
          v28 = sub_1C1425858();
          (*(void (**)(unint64_t, _QWORD, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v27, v42, v28);
          (*(void (**)(unint64_t, _QWORD, uint64_t))(v24 + 104))(v27, v41, v23);
          swift_bridgeObjectRetain();
          v48 = v16;
          v29 = v15;
          v30 = v45;
          sub_1C1425894();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797B58);
          v31 = v46;
          v32 = (*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
          v33 = swift_allocObject();
          *(_OWORD *)(v33 + 16) = v49;
          v34 = v33 + v32;
          v35 = v47;
          (*(void (**)(unint64_t, char *, uint64_t))(v31 + 16))(v34, v30, v47);
          sub_1C13DFE70(v33);
          swift_bridgeObjectRelease();
          v36 = *(void (**)(char *, uint64_t))(v31 + 8);
          v37 = v30;
          v15 = v29;
          v16 = v48;
          v38 = v35;
          v17 = v43;
          v14 = (unint64_t)v44;
          v36(v37, v38);
        }
      }

      ++v18;
      if (v21 == v15)
        goto LABEL_15;
    }
    __break(1u);
LABEL_14:
    swift_retain_n();
    swift_bridgeObjectRetain();
    v15 = sub_1C1426F98();
    swift_release();
  }
LABEL_15:
  swift_release_n();
  sub_1C13DDAFC((uint64_t)v50, byte_1EF6DBF50, *(double *)&qword_1EF6DBF58);
  return swift_release();
}

uint64_t sub_1C13DEFF8()
{
  _BYTE *v0;

  if (*v0)
    return 0x7974697669746341;
  else
    return 0xD000000000000010;
}

uint64_t sub_1C13DF044(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  _QWORD v22[2];

  v4 = sub_1C1425AEC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C1425A08();
  v9 = MEMORY[0x1E0C8FFB8];
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t *)(*a1 + OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client_processIdentifier);
  v14 = *v12;
  v13 = v12[1];
  v15 = type metadata accessor for Activity();
  sub_1C1338F24(a2 + *(int *)(v15 + 24), (uint64_t)v11, (uint64_t (*)(_QWORD))v9);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4);
  v16 = sub_1C1425A80();
  v18 = v17;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v14 == v16 && v13 == v18)
    v20 = 1;
  else
    v20 = sub_1C1427064();
  swift_bridgeObjectRelease();
  return v20 & 1;
}

uint64_t sub_1C13DF1A8(void *a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  id v22;
  uint64_t v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  id v37;
  uint64_t v38;
  unint64_t v39;
  os_log_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v55;
  os_log_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  LODWORD(v59) = a2;
  v7 = sub_1C1425AEC();
  v60 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C1425A08();
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v55 - v14;
  v16 = type metadata accessor for Activity();
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v55 - v20;
  if (a1)
  {
    v22 = a1;
    if (qword_1ED793940 != -1)
      swift_once();
    v23 = sub_1C1426854();
    __swift_project_value_buffer(v23, (uint64_t)qword_1ED798580);
    sub_1C1338F24(a3, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    v24 = a1;
    v25 = a1;
    v26 = sub_1C1426848();
    v27 = sub_1C1426C80();
    v28 = v27;
    if (os_log_type_enabled(v26, v27))
    {
      v29 = v7;
      v30 = swift_slowAlloc();
      v58 = swift_slowAlloc();
      v62 = v58;
      *(_DWORD *)v30 = 136315651;
      if ((v59 & 1) != 0)
        v31 = 0x7974697669746341;
      else
        v31 = 0xD000000000000010;
      v57 = v28;
      if ((v59 & 1) != 0)
        v32 = 0xEE006465646E6520;
      else
        v32 = 0x80000001C1430600;
      v56 = v26;
      v61 = sub_1C132AD90(v31, v32, &v62);
      v59 = a4;
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2081;
      sub_1C1338F24((uint64_t)&v19[*(int *)(v16 + 24)], (uint64_t)v15, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
      v33 = v60;
      (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v9, v15, v29);
      v34 = sub_1C1425A80();
      v36 = v35;
      (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v29);
      v61 = sub_1C132AD90(v34, v36, &v62);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      sub_1C13DCA54((uint64_t)v19);
      *(_WORD *)(v30 + 22) = 2082;
      v61 = (uint64_t)a1;
      v37 = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797BA0);
      v38 = sub_1C1426AA0();
      v61 = sub_1C132AD90(v38, v39, &v62);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();

      v40 = v56;
      _os_log_impl(&dword_1C1324000, v56, (os_log_type_t)v57, "Did not launch process for reason \"%s\": %{private}s: %{public}s", (uint8_t *)v30, 0x20u);
      v41 = v58;
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v41, -1, -1);
      MEMORY[0x1C3BAD3F4](v30, -1, -1);

    }
    else
    {

      sub_1C13DCA54((uint64_t)v19);
    }
  }
  else
  {
    if (qword_1ED793940 != -1)
      swift_once();
    v42 = sub_1C1426854();
    __swift_project_value_buffer(v42, (uint64_t)qword_1ED798580);
    sub_1C1338F24(a3, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    v43 = sub_1C1426848();
    v44 = sub_1C1426C80();
    v45 = v44;
    if (os_log_type_enabled(v43, v44))
    {
      v46 = swift_slowAlloc();
      v58 = swift_slowAlloc();
      v62 = v58;
      *(_DWORD *)v46 = 136315395;
      if ((v59 & 1) != 0)
        v47 = 0x7974697669746341;
      else
        v47 = 0xD000000000000010;
      v57 = v45;
      if ((v59 & 1) != 0)
        v48 = 0xEE006465646E6520;
      else
        v48 = 0x80000001C1430600;
      v59 = a4;
      v61 = sub_1C132AD90(v47, v48, &v62);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v46 + 12) = 2081;
      sub_1C1338F24((uint64_t)&v21[*(int *)(v16 + 24)], (uint64_t)v13, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
      v49 = v60;
      (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v9, v13, v7);
      v50 = sub_1C1425A80();
      v52 = v51;
      (*(void (**)(char *, uint64_t))(v49 + 8))(v9, v7);
      v61 = sub_1C132AD90(v50, v52, &v62);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      sub_1C13DCA54((uint64_t)v21);
      _os_log_impl(&dword_1C1324000, v43, (os_log_type_t)v57, "Launched process for reason \"%s\": %{private}s", (uint8_t *)v46, 0x16u);
      v53 = v58;
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v53, -1, -1);
      MEMORY[0x1C3BAD3F4](v46, -1, -1);
    }
    else
    {
      sub_1C13DCA54((uint64_t)v21);
    }

  }
  return sub_1C1425EE8();
}

id sub_1C13DF83C()
{
  return sub_1C1359EC8(0, _s11SessionCore6ClientCMa_2);
}

uint64_t sub_1C13DF8FC()
{
  return _s11SessionCore6ClientCMa_2();
}

void sub_1C13DF904()
{
  unint64_t v0;
  unint64_t v1;

  sub_1C13DF9D8();
  if (v0 <= 0x3F)
  {
    sub_1C13DFA30();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

void sub_1C13DF9D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED793100)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED793178);
    v0 = sub_1C1425F24();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED793100);
  }
}

void sub_1C13DFA30()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED793BD0)
  {
    sub_1C14256B4();
    v0 = sub_1C1426DAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED793BD0);
  }
}

uint64_t sub_1C13DFA84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int EnumCaseMultiPayload;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;
  void (*v27)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  uint64_t v37;
  void (*v38)(char *, unint64_t, uint64_t);
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  char *v48;

  v2 = v1;
  v47 = a1;
  v3 = sub_1C1425558();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C1425AEC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v48 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v41 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v41 - v14;
  v16 = sub_1C1425A08();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v2
                 + OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client_hasActivityListenerEntitlement) & 1) != 0)
    return 1;
  if ((*(_BYTE *)(v2
                 + OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client_hasRemoteActivityAccessorEntitlement) & 1) == 0)
  {
    type metadata accessor for Activity();
    if ((sub_1C1425A50() & 1) == 0)
      return 0;
  }
  v42 = type metadata accessor for Activity();
  sub_1C1338F24(v47 + *(int *)(v42 + 24), (uint64_t)v18, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v21 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v46 = v21;
  if (EnumCaseMultiPayload == 1)
  {
    v21(v13, v18, v7);
    v22 = sub_1C1425A80();
    v24 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client_processIdentifier + 8);
    if (v22 != *(_QWORD *)(v2
                          + OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client_processIdentifier)
      || v23 != v24)
    {
      v43 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client_processIdentifier);
      v44 = v24;
      v26 = sub_1C1427064();
      swift_bridgeObjectRelease();
      v27 = *(void (**)(char *, uint64_t))(v8 + 8);
      v28 = v13;
      goto LABEL_16;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    return 1;
  }
  v21(v15, v18, v7);
  v29 = sub_1C1425A80();
  v31 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client_processIdentifier + 8);
  if (v29 == *(_QWORD *)(v2 + OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client_processIdentifier)
    && v30 == v31)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v15, v7);
    return 1;
  }
  v43 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client_processIdentifier);
  v44 = v31;
  v26 = sub_1C1427064();
  swift_bridgeObjectRelease();
  v27 = *(void (**)(char *, uint64_t))(v8 + 8);
  v28 = v15;
LABEL_16:
  v45 = v27;
  v27(v28, v7);
  if ((v26 & 1) != 0)
    return 1;
  v33 = *(_QWORD *)(v47 + *(int *)(v42 + 28));
  v34 = *(_QWORD *)(v33 + 16);
  if (!v34)
    return 0;
  v47 = v7;
  v35 = v33 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v36 = *MEMORY[0x1E0C8F788];
  v37 = *(_QWORD *)(v4 + 72);
  v38 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
  v42 = v33;
  swift_bridgeObjectRetain();
  while (1)
  {
    v38(v6, v35, v3);
    if ((*(unsigned int (**)(char *, uint64_t))(v4 + 88))(v6, v3) != v36)
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      goto LABEL_20;
    }
    (*(void (**)(char *, uint64_t))(v4 + 96))(v6, v3);
    v46(v48, v6, v47);
    if (sub_1C1425A80() == v43 && v39 == v44)
      break;
    v40 = sub_1C1427064();
    swift_bridgeObjectRelease();
    v45(v48, v47);
    if ((v40 & 1) != 0)
      goto LABEL_33;
LABEL_20:
    v35 += v37;
    if (!--v34)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  v45(v48, v47);
LABEL_33:
  swift_bridgeObjectRelease();
  return 1;
}

void sub_1C13DFE70(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  void (*v9)(char *, uint64_t);
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(_QWORD, uint64_t, uint64_t);
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void *v21;
  char *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  uint64_t v38;
  unsigned int v39;
  int v40;
  void *v41;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7930F0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, &v2[OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client__target], v4);
  sub_1C1425F18();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v8 = v41;
  if (v41)
  {
    v40 = sub_1C13E2EAC(a1);
    sub_1C1425F0C();
    swift_allocObject();
    v9 = (void (*)(char *, uint64_t))sub_1C1425EF4();
    v10 = __swift_project_boxed_opaque_existential_1(&v2[OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client_processManager], *(_QWORD *)&v2[OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client_processManager + 24]);
    v11 = *(_QWORD *)&v2[OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client_processIdentifier];
    v37 = *(_QWORD *)&v2[OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client_processIdentifier + 8];
    v38 = v11;
    v39 = *(_DWORD *)&v2[OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client_pid];
    v12 = (_QWORD *)swift_allocObject();
    v12[2] = v2;
    v12[3] = a1;
    v12[4] = v8;
    v12[5] = v9;
    v13 = (_QWORD *)*v10;
    v14 = v13[5];
    v15 = v13[6];
    v36 = v13 + 2;
    __swift_project_boxed_opaque_existential_1(v13 + 2, v14);
    v16 = *(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v15 + 40);
    v17 = v2;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    v18 = v17;
    swift_unknownObjectRetain_n();
    v19 = v18;
    v20 = v16(v39, v14, v15);
    if (v20)
    {
      v21 = (void *)v20;
      v22 = v19;
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_retain();
      sub_1C13790F0(v21, 0xD000000000000018, 0x80000001C14305E0, v40, (uint64_t)v13, v22, a1, v8, 10.0, v9);
    }
    else
    {
      v27 = v40;
      v28 = v13[5];
      v29 = v13[6];
      __swift_project_boxed_opaque_existential_1(v36, v28);
      v30 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v29 + 32))(v38, v37, v28, v29);
      if (!v30)
      {
        v31 = v37;
        v32 = v38;
        if (v27 != 2)
        {
          sub_1C13316BC();
          v33 = (void *)swift_allocError();
          *v34 = 2;
          sub_1C13E0348(v33, v19, a1, v8, (uint64_t)v9);

          swift_release();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();

          swift_release();
          goto LABEL_13;
        }
        swift_retain();
        swift_retain();
        sub_1C1378A64(v32, v31, v13, (uint64_t)v13, (void *)0xD000000000000018, (void *)0x80000001C14305E0, 2, (void (*)(char *, uint64_t))sub_1C13E3188, 10.0, (uint64_t)v12);
        swift_release();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();

        swift_release();
LABEL_12:
        swift_release_n();
LABEL_13:

        swift_release_n();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease_n();
        return;
      }
      v21 = (void *)v30;
      v22 = v19;
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_retain();
      sub_1C13790F0(v21, 0xD000000000000018, 0x80000001C14305E0, v27, (uint64_t)v13, v22, a1, v8, 10.0, v9);
    }
    swift_release();

    swift_bridgeObjectRelease_n();
    swift_unknownObjectRelease_n();
    goto LABEL_12;
  }
  if (qword_1ED793940 != -1)
    swift_once();
  v23 = sub_1C1426854();
  __swift_project_value_buffer(v23, (uint64_t)qword_1ED798580);
  v24 = sub_1C1426848();
  v25 = sub_1C1426C68();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v26 = 0;
    _os_log_impl(&dword_1C1324000, v24, v25, "Cannot send changes to bad remote target", v26, 2u);
    MEMORY[0x1C3BAD3F4](v26, -1, -1);
  }

}

uint64_t sub_1C13E0348(void *a1, void *a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  char *v17;
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  void *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  char *v53;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t aBlock[6];

  v60 = a5;
  v9 = sub_1C1425378();
  v61 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = &unk_1ED793000;
  if (a1)
  {
    v13 = a1;
    if (qword_1ED793940 != -1)
      swift_once();
    v14 = sub_1C1426854();
    __swift_project_value_buffer(v14, (uint64_t)qword_1ED798580);
    v15 = a1;
    v16 = a1;
    v17 = a2;
    v18 = sub_1C1426848();
    v19 = sub_1C1426C80();
    v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      v21 = swift_slowAlloc();
      v58 = v9;
      v22 = v21;
      v57 = swift_slowAlloc();
      aBlock[0] = v57;
      *(_DWORD *)v22 = 136380931;
      v59 = a3;
      v56 = v20;
      v23 = a2;
      v24 = a4;
      v25 = v11;
      v26 = *(_QWORD *)&v17[OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client_processIdentifier];
      v27 = *(_QWORD *)&v17[OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client_processIdentifier
                          + 8];
      swift_bridgeObjectRetain();
      v62 = sub_1C132AD90(v26, v27, aBlock);
      sub_1C1426DB8();

      v11 = v25;
      a4 = v24;
      a2 = v23;
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2082;
      v62 = (uint64_t)a1;
      v28 = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797BA0);
      v29 = sub_1C1426AA0();
      v62 = sub_1C132AD90(v29, v30, aBlock);
      v12 = (_QWORD *)&unk_1ED793000;
      a3 = v59;
      sub_1C1426DB8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C1324000, v18, (os_log_type_t)v56, "Did not provide extra runtime to process for activity change delivery: %{private}s: %{public}s", (uint8_t *)v22, 0x16u);
      v31 = v57;
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v31, -1, -1);
      v32 = v22;
      v9 = v58;
      MEMORY[0x1C3BAD3F4](v32, -1, -1);

    }
    else
    {

    }
  }
  if (v12[296] != -1)
    swift_once();
  v33 = sub_1C1426854();
  __swift_project_value_buffer(v33, (uint64_t)qword_1ED798580);
  v34 = a2;
  v35 = sub_1C1426848();
  v36 = sub_1C1426C80();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = (uint8_t *)swift_slowAlloc();
    v58 = swift_slowAlloc();
    aBlock[0] = v58;
    v59 = a3;
    *(_DWORD *)v37 = 136380675;
    v57 = (uint64_t)(v37 + 4);
    v38 = a4;
    v39 = v9;
    v40 = v34;
    v41 = *(_QWORD *)&v34[OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client_processIdentifier];
    v42 = *(_QWORD *)&v34[OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client_processIdentifier + 8];
    swift_bridgeObjectRetain();
    v43 = v41;
    v9 = v39;
    a4 = v38;
    v62 = sub_1C132AD90(v43, v42, aBlock);
    sub_1C1426DB8();

    v34 = v40;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C1324000, v35, v36, "Delivering activity changes for %{private}s", v37, 0xCu);
    v44 = v58;
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v44, -1, -1);
    MEMORY[0x1C3BAD3F4](v37, -1, -1);

  }
  else
  {

  }
  swift_bridgeObjectRetain();
  sub_1C142536C();
  sub_1C1329AD0((unint64_t *)&unk_1ED793B80, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F478], MEMORY[0x1E0C8F470]);
  v45 = (void *)sub_1C1425BB8();
  v46 = sub_1C14250D8();
  v48 = v47;

  v49 = (void *)sub_1C14250CC();
  v50 = swift_allocObject();
  v51 = v60;
  *(_QWORD *)(v50 + 16) = v34;
  *(_QWORD *)(v50 + 24) = v51;
  aBlock[4] = (uint64_t)sub_1C13E31C0;
  aBlock[5] = v50;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1C13DCF7C;
  aBlock[3] = (uint64_t)&block_descriptor_21;
  v52 = _Block_copy(aBlock);
  v53 = v34;
  swift_retain();
  swift_release();
  objc_msgSend(a4, sel_activitiesChanged_completion_, v49, v52);
  sub_1C13282B4(v46, v48);
  _Block_release(v52);

  return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v11, v9);
}

uint64_t sub_1C13E08B0(uint64_t a1, uint64_t a2)
{
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(os_unfair_lock_s **)(*(_QWORD *)(a2
                                        + OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client_lock)
                            + 16);
  os_unfair_lock_lock(v3);
  *(_BYTE *)(a2 + OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client__lock_pendingChangeAck) = 0;
  v4 = *(_QWORD *)(a2 + OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client__lock_bufferedChanges);
  *(_QWORD *)(a2 + OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client__lock_bufferedChanges) = 0;
  os_unfair_lock_unlock(v3);
  if (v4)
  {
    v5 = sub_1C13DCCFC(v4);
    swift_bridgeObjectRelease();
    sub_1C13DFE70(v5);
    swift_bridgeObjectRelease();
  }
  return sub_1C1425EE8();
}

uint64_t sub_1C13E0954@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X1>, uint64_t *a3@<X2>, char *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t result;
  char *v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t *v33;
  unint64_t *v34;
  char *v35;
  uint64_t v36;

  v35 = a4;
  v33 = a3;
  v34 = a2;
  v32 = sub_1C1425888();
  v5 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793BC0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C14256B4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1 + OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client__lock_subscriptionOptions;
  swift_beginAccess();
  sub_1C132C344(v15, (uint64_t)v10, (uint64_t *)&unk_1ED793BC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    result = sub_1C132C860((uint64_t)v10, (uint64_t *)&unk_1ED793BC0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    if ((sub_1C14256A8() & 1) != 0)
    {
      v17 = (char *)v33 + *(int *)(type metadata accessor for Activity() + 44);
      v18 = sub_1C1425450();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v7, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0C8FD30], v32);
      v19 = v34;
      v20 = *v34;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v19 = v20;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v20 = sub_1C136C9FC(0, *(_QWORD *)(v20 + 16) + 1, 1, v20);
        *v34 = v20;
      }
      v23 = *(_QWORD *)(v20 + 16);
      v22 = *(_QWORD *)(v20 + 24);
      if (v23 >= v22 >> 1)
      {
        v20 = sub_1C136C9FC(v22 > 1, v23 + 1, 1, v20);
        *v34 = v20;
      }
      *(_QWORD *)(v20 + 16) = v23 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v20+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v23, v7, v32);
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client__lock_pendingChangeAck) & 1) != 0)
  {
    v24 = OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client__lock_bufferedChanges;
    if (*(_QWORD *)(a1 + OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client__lock_bufferedChanges))
      v25 = *(_QWORD *)(a1
                      + OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client__lock_bufferedChanges);
    else
      v25 = MEMORY[0x1E0DEE9E0];
    v26 = *v33;
    v27 = v33[1];
    v28 = *v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v29 = swift_isUniquelyReferenced_nonNull_native();
    v36 = v25;
    sub_1C13C30D0(v28, v26, v27, v29);
    v30 = v36;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + v24) = v30;
    result = swift_bridgeObjectRelease();
    v31 = 0;
  }
  else
  {
    v31 = 1;
    *(_BYTE *)(a1 + OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client__lock_pendingChangeAck) = 1;
  }
  *v35 = v31;
  return result;
}

uint64_t sub_1C13E0C78@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  void (*v38)(char *, unint64_t, uint64_t);
  char *v39;
  void (*v40)(char *, uint64_t);
  char *v42;
  void (*v43)(char *, char *, uint64_t);
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  int v47;
  unsigned int *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  void (*v58)(unint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  char *v86;
  int v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;

  v4 = v3;
  v84 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793BC0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C14256B4();
  v82 = *(_QWORD *)(v10 - 8);
  v83 = v10;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1C1425888();
  v14 = MEMORY[0x1E0C80A78](v13);
  v15 = MEMORY[0x1E0C80A78](v14);
  v92 = (char *)&v73 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v91 = (char *)&v73 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  result = MEMORY[0x1E0C80A78](v19);
  v86 = (char *)&v73 - v24;
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client__lock_pendingChangeAck) & 1) == 0)
  {
    v32 = 1;
    *(_BYTE *)(a1 + OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client__lock_pendingChangeAck) = 1;
    goto LABEL_43;
  }
  v93 = v23;
  v80 = v22;
  v76 = v9;
  v73 = v21;
  v81 = a1;
  v77 = OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client__lock_bufferedChanges;
  v78 = a3;
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client__lock_bufferedChanges))
    v25 = *(_QWORD *)(a1 + OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client__lock_bufferedChanges);
  else
    v25 = MEMORY[0x1E0DEE9E0];
  v26 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(v25 + 16))
  {
    v27 = *v84;
    v28 = v84[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v29 = sub_1C13277A0(v27, v28);
    if ((v30 & 1) != 0)
    {
      v31 = *(_QWORD *)(*(_QWORD *)(v25 + 56) + 8 * v29);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  v31 = MEMORY[0x1E0DEE9D8];
LABEL_12:
  v94 = v26;
  v33 = *(_QWORD *)(v31 + 16);
  v75 = v12;
  v85 = v13;
  v90 = v33;
  v79 = v4;
  if (v33)
  {
    v74 = v25;
    v25 = 0;
    v88 = *MEMORY[0x1E0C8FD28];
    v87 = *MEMORY[0x1E0C8FD20];
    v34 = v86;
    v89 = v31;
    v35 = v93;
    while (v25 < *(_QWORD *)(v31 + 16))
    {
      v36 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
      v37 = *(_QWORD *)(v35 + 72);
      v38 = *(void (**)(char *, unint64_t, uint64_t))(v35 + 16);
      v38(v34, v31 + v36 + v37 * v25, v13);
      v39 = v91;
      v38(v91, (unint64_t)v34, v13);
      v26 = (*(uint64_t (**)(char *, uint64_t))(v35 + 88))(v39, v13);
      v40 = *(void (**)(char *, uint64_t))(v35 + 8);
      v40(v39, v13);
      if ((_DWORD)v26 != v88 && (_DWORD)v26 == v87)
      {
        v42 = v34;
        v43 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
        v43(v92, v42, v13);
        v26 = v94;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C1336B9C(0, *(_QWORD *)(v26 + 16) + 1, 1);
          v26 = v94;
        }
        v31 = v89;
        v45 = *(_QWORD *)(v26 + 16);
        v44 = *(_QWORD *)(v26 + 24);
        if (v45 >= v44 >> 1)
        {
          sub_1C1336B9C(v44 > 1, v45 + 1, 1);
          v31 = v89;
          v26 = v94;
        }
        *(_QWORD *)(v26 + 16) = v45 + 1;
        v46 = v26 + v36 + v45 * v37;
        v13 = v85;
        v43((char *)v46, v92, v85);
        v94 = v26;
        v34 = v86;
      }
      else
      {
        v40(v34, v13);
        v31 = v89;
      }
      if (v90 == ++v25)
      {
        v26 = v94;
        v25 = v74;
        goto LABEL_27;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_27:
    swift_bridgeObjectRelease();
    v47 = sub_1C1406964();
    if (v47)
    {
      if (v47 == 1)
        v48 = (unsigned int *)MEMORY[0x1E0C8FC98];
      else
        v48 = (unsigned int *)MEMORY[0x1E0C8FCA0];
    }
    else
    {
      v48 = (unsigned int *)MEMORY[0x1E0C8FCA8];
    }
    v49 = *v48;
    v50 = sub_1C1425858();
    v51 = v80;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 104))(v80, v49, v50);
    v52 = *MEMORY[0x1E0C8FD28];
    v92 = *(char **)(v93 + 104);
    ((void (*)(uint64_t, uint64_t, uint64_t))v92)(v51, v52, v13);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      goto LABEL_33;
  }
  v26 = sub_1C136C9FC(0, *(_QWORD *)(v26 + 16) + 1, 1, v26);
LABEL_33:
  v54 = *(_QWORD *)(v26 + 16);
  v53 = *(_QWORD *)(v26 + 24);
  if (v54 >= v53 >> 1)
    v26 = sub_1C136C9FC(v53 > 1, v54 + 1, 1, v26);
  *(_QWORD *)(v26 + 16) = v54 + 1;
  v55 = (*(unsigned __int8 *)(v93 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80);
  v56 = *(_QWORD *)(v93 + 72);
  v57 = v26 + v55 + v56 * v54;
  v58 = *(void (**)(unint64_t, uint64_t, uint64_t))(v93 + 32);
  v58(v57, v80, v85);
  v59 = v81 + OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client__lock_subscriptionOptions;
  swift_beginAccess();
  v60 = (uint64_t)v76;
  sub_1C132C344(v59, (uint64_t)v76, (uint64_t *)&unk_1ED793BC0);
  v62 = v82;
  v61 = v83;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v60, 1, v83) == 1)
  {
    sub_1C132C860(v60, (uint64_t *)&unk_1ED793BC0);
  }
  else
  {
    v63 = v75;
    (*(void (**)(char *, uint64_t, uint64_t))(v62 + 32))(v75, v60, v61);
    if ((sub_1C14256A8() & 1) != 0)
    {
      v74 = v25;
      v64 = (char *)v84 + *(int *)(type metadata accessor for Activity() + 44);
      v65 = sub_1C1425450();
      v66 = v73;
      (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v73, v64, v65);
      ((void (*)(uint64_t, _QWORD, uint64_t))v92)(v66, *MEMORY[0x1E0C8FD30], v85);
      v68 = *(_QWORD *)(v26 + 16);
      v67 = *(_QWORD *)(v26 + 24);
      if (v68 >= v67 >> 1)
        v26 = sub_1C136C9FC(v67 > 1, v68 + 1, 1, v26);
      v25 = v74;
      *(_QWORD *)(v26 + 16) = v68 + 1;
      v58(v26 + v55 + v68 * v56, v73, v85);
      (*(void (**)(char *, uint64_t))(v62 + 8))(v75, v61);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v62 + 8))(v63, v61);
    }
  }
  v69 = *v84;
  v70 = v84[1];
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v95 = v25;
  sub_1C13C30D0(v26, v69, v70, isUniquelyReferenced_nonNull_native);
  v72 = v95;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v81 + v77) = v72;
  result = swift_bridgeObjectRelease();
  v32 = 0;
  a3 = v78;
LABEL_43:
  *a3 = v32;
  return result;
}

uint64_t sub_1C13E1338@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t *v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  unint64_t v33;
  void (*v34)(char *, unint64_t, uint64_t);
  int v35;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v48;
  unint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  int v57;
  int v58;
  char *v59;
  uint64_t v60;
  uint64_t *v61;
  unsigned int v62;
  char *v63;
  uint64_t v64;

  v8 = sub_1C1425888();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v59 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v56 = (char *)&v49 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v55 = (char *)&v49 - v15;
  result = MEMORY[0x1E0C80A78](v14);
  v63 = (char *)&v49 - v17;
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client__lock_pendingChangeAck) & 1) == 0)
  {
    v29 = 1;
    *(_BYTE *)(a1 + OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client__lock_pendingChangeAck) = 1;
    goto LABEL_34;
  }
  v53 = a3;
  v54 = v3;
  v52 = OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client__lock_bufferedChanges;
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client__lock_bufferedChanges))
    v18 = *(_QWORD *)(a1 + OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client__lock_bufferedChanges);
  else
    v18 = MEMORY[0x1E0DEE9E0];
  v19 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(v18 + 16))
  {
    v20 = a2;
    v21 = a2[1];
    v22 = v18;
    v23 = v20;
    v24 = *v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25 = sub_1C13277A0(v24, v21);
    if ((v26 & 1) != 0)
    {
      v27 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 8 * v25);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v28 = v27;
    }
    else
    {
      swift_bridgeObjectRelease();
      v28 = MEMORY[0x1E0DEE9D8];
    }
    a2 = v23;
    v18 = v22;
  }
  else
  {
    swift_bridgeObjectRetain();
    v28 = MEMORY[0x1E0DEE9D8];
  }
  v64 = v19;
  v30 = *(uint64_t **)(v28 + 16);
  v62 = *MEMORY[0x1E0C8FD28];
  v61 = v30;
  if (!v30)
  {
LABEL_30:
    swift_bridgeObjectRelease();
    v41 = *MEMORY[0x1E0C8FCB0];
    v42 = sub_1C1425858();
    v4 = v55;
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 104))(v55, v41, v42);
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v4, v62, v8);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      goto LABEL_36;
    goto LABEL_31;
  }
  v50 = a2;
  v51 = a1;
  a2 = 0;
  v58 = *MEMORY[0x1E0C8FD20];
  v57 = *MEMORY[0x1E0C8FD30];
  v19 = (uint64_t)v56;
  v60 = v28;
  while ((unint64_t)a2 < *(_QWORD *)(v28 + 16))
  {
    v32 = v18;
    v33 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    a1 = *(_QWORD *)(v9 + 72);
    v34 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    v4 = v63;
    v34(v63, v28 + v33 + a1 * (_QWORD)a2, v8);
    v34((char *)v19, (unint64_t)v4, v8);
    v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 88))(v19, v8);
    if (v35 == v62)
    {
      v31 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    }
    else
    {
      v31 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
      if (v35 == v58 || v35 == v57)
      {
        v31(v19, v8);
        v4 = *(char **)(v9 + 32);
        ((void (*)(char *, char *, uint64_t))v4)(v59, v63, v8);
        v37 = v64;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C1336B9C(0, *(_QWORD *)(v37 + 16) + 1, 1);
          v37 = v64;
        }
        v39 = *(_QWORD *)(v37 + 16);
        v38 = *(_QWORD *)(v37 + 24);
        v40 = v39 + 1;
        if (v39 >= v38 >> 1)
        {
          v49 = v39 + 1;
          sub_1C1336B9C(v38 > 1, v39 + 1, 1);
          v40 = v49;
          v37 = v64;
        }
        *(_QWORD *)(v37 + 16) = v40;
        ((void (*)(unint64_t, char *, uint64_t))v4)(v37 + v33 + v39 * a1, v59, v8);
        v64 = v37;
        v18 = v32;
        v19 = (uint64_t)v56;
        goto LABEL_16;
      }
    }
    v31(v19, v8);
    v31((uint64_t)v63, v8);
    v18 = v32;
LABEL_16:
    a2 = (uint64_t *)((char *)a2 + 1);
    v28 = v60;
    if (v61 == a2)
    {
      v19 = v64;
      a2 = v50;
      a1 = v51;
      goto LABEL_30;
    }
  }
  __break(1u);
LABEL_36:
  v19 = sub_1C136C9FC(0, *(_QWORD *)(v19 + 16) + 1, 1, v19);
LABEL_31:
  v44 = *(_QWORD *)(v19 + 16);
  v43 = *(_QWORD *)(v19 + 24);
  if (v44 >= v43 >> 1)
    v19 = sub_1C136C9FC(v43 > 1, v44 + 1, 1, v19);
  *(_QWORD *)(v19 + 16) = v44 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v19+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v44, v4, v8);
  v45 = *a2;
  v46 = a2[1];
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v64 = v18;
  sub_1C13C30D0(v19, v45, v46, isUniquelyReferenced_nonNull_native);
  v48 = v64;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + v52) = v48;
  result = swift_bridgeObjectRelease();
  v29 = 0;
  a3 = v53;
LABEL_34:
  *a3 = v29;
  return result;
}

uint64_t sub_1C13E17DC@<X0>(uint64_t a1@<X8>)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  os_unfair_lock_s *v24;
  uint64_t *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t result;
  uint64_t v55;
  _QWORD v56[2];
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t *v63;
  char *v64;
  _QWORD *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  int64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;

  v4 = sub_1C14251B0();
  v69 = *(_QWORD *)(v4 - 8);
  v70 = v4;
  MEMORY[0x1E0C80A78](v4);
  v68 = (char *)v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C1425678();
  MEMORY[0x1E0C80A78](v6);
  v67 = (char *)v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C1425A08();
  MEMORY[0x1E0C80A78](v8);
  v80 = (uint64_t)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C1425594();
  MEMORY[0x1E0C80A78](v10);
  v79 = (char *)v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
  v12 = MEMORY[0x1E0C80A78](v66);
  v65 = (_QWORD *)((char *)v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = MEMORY[0x1E0C80A78](v12);
  v64 = (char *)v56 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v63 = (_QWORD *)((char *)v56 - v17);
  MEMORY[0x1E0C80A78](v16);
  v62 = (_QWORD *)((char *)v56 - v18);
  v61 = sub_1C1425498();
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v20 = (char *)v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1C3BAD4B4](&v1[OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client_delegate]);
  v22 = MEMORY[0x1E0DEE9D8];
  if (!v21)
    return sub_1C142533C();
  v23 = v21;
  v59 = v20;
  v24 = *(os_unfair_lock_s **)(*(_QWORD *)(v21 + OBJC_IVAR____TtC11SessionCore12OutputServer_lock) + 16);
  os_unfair_lock_lock(v24);
  v25 = (uint64_t *)(v23 + OBJC_IVAR____TtC11SessionCore12OutputServer__lock_activities);
  swift_beginAccess();
  v26 = *v25;
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v24);
  swift_unknownObjectRelease();
  v27 = v1;
  v28 = sub_1C1328584(v26, v27);
  swift_bridgeObjectRelease();

  v29 = *(_QWORD *)(v28 + 16);
  if (!v29)
  {
LABEL_14:
    swift_release();
    return sub_1C142533C();
  }
  v56[0] = a1;
  v56[1] = v2;
  v81 = v22;
  sub_1C1336BC8(0, v29, 0);
  v30 = sub_1C135833C(v28);
  v32 = v31;
  v34 = v33 & 1;
  v57 = v28 + 64;
  v71 = v29 - 1;
  v58 = v28;
  v35 = v64;
  while (1)
  {
    v36 = v66;
    v37 = v62;
    v38 = (uint64_t)v62 + *(int *)(v66 + 48);
    v78 = v30;
    v72 = v32;
    v39 = sub_1C13A1514(v38, v30, v32, v34 & 1, v28);
    *v37 = v39;
    v37[1] = v40;
    v41 = (uint64_t)v63;
    *v63 = v39;
    *(_QWORD *)(v41 + 8) = v40;
    sub_1C1338F24(v38, v41 + *(int *)(v36 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    sub_1C132A724(v41, (uint64_t)v35, &qword_1ED7939D8);
    swift_bridgeObjectRetain();
    sub_1C132C860((uint64_t)v37, &qword_1ED7939D8);
    v42 = *(int *)(v36 + 48);
    v43 = v65;
    v44 = (char *)v65 + v42;
    v45 = v35[1];
    *v65 = *v35;
    v43[1] = v45;
    sub_1C1338F24((uint64_t)v35 + v42, (uint64_t)v44, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    v46 = *(_QWORD *)v44;
    v76 = *((_QWORD *)v44 + 1);
    v77 = v46;
    v47 = type metadata accessor for Activity();
    swift_bridgeObjectRetain();
    sub_1C1425924();
    v48 = sub_1C142590C();
    v74 = v49;
    v75 = v48;
    sub_1C1338F24((uint64_t)&v44[*(int *)(v47 + 24)], v80, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
    sub_1C1425948();
    swift_bridgeObjectRetain();
    v73 = sub_1C14258DC();
    sub_1C14258E8();
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v68, &v44[*(int *)(v47 + 32)], v70);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v50 = v59;
    sub_1C1425474();
    sub_1C13DCA54((uint64_t)v44);
    sub_1C132C860((uint64_t)v35, &qword_1ED7939D8);
    v51 = v81;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C1336BC8(0, *(_QWORD *)(v51 + 16) + 1, 1);
      v51 = v81;
    }
    v53 = *(_QWORD *)(v51 + 16);
    v52 = *(_QWORD *)(v51 + 24);
    v28 = v58;
    if (v53 >= v52 >> 1)
    {
      sub_1C1336BC8(v52 > 1, v53 + 1, 1);
      v51 = v81;
    }
    *(_QWORD *)(v51 + 16) = v53 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v60 + 32))(v51+ ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80))+ *(_QWORD *)(v60 + 72) * v53, v50, v61);
    v81 = v51;
    result = v78;
    if (v78 < 0 || v78 >= -(-1 << *(_BYTE *)(v28 + 32)))
      break;
    if (((*(_QWORD *)(v57 + (((unint64_t)v78 >> 3) & 0xFFFFFFFFFFFFF8)) >> v78) & 1) == 0)
      goto LABEL_17;
    if (*(_DWORD *)(v28 + 36) != (_DWORD)v72)
      goto LABEL_18;
    v55 = sub_1C1426E0C();
    if (!v71)
      goto LABEL_14;
    v30 = v55;
    v34 = 0;
    v32 = *(unsigned int *)(v28 + 36);
    --v71;
  }
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1C13E1F68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  os_unfair_lock_s *v26;
  uint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _DWORD v39[4];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;

  v4 = v3;
  v8 = sub_1C14251B0();
  v45 = *(_QWORD *)(v8 - 8);
  v46 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C1425678();
  MEMORY[0x1E0C80A78](v11);
  v47 = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1C1425A08();
  MEMORY[0x1E0C80A78](v13);
  v50 = (uint64_t)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1C1425594();
  MEMORY[0x1E0C80A78](v15);
  v49 = (char *)v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797560);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Activity();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1C3BAD4B4](v4 + OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client_delegate);
  if (!v24)
  {
    v31 = sub_1C1425498();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(a3, 1, 1, v31);
  }
  v25 = v24;
  v44 = v10;
  v48 = a3;
  v26 = *(os_unfair_lock_s **)(*(_QWORD *)(v24 + OBJC_IVAR____TtC11SessionCore12OutputServer_lock) + 16);
  os_unfair_lock_lock(v26);
  v27 = (uint64_t *)(v25 + OBJC_IVAR____TtC11SessionCore12OutputServer__lock_activities);
  swift_beginAccess();
  v28 = *v27;
  if (*(_QWORD *)(v28 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v29 = sub_1C13277A0(a1, a2);
    if ((v30 & 1) != 0)
    {
      sub_1C1338F24(*(_QWORD *)(v28 + 56) + *(_QWORD *)(v21 + 72) * v29, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v19, 0, 1, v20);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v19, 1, 1, v20);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v19, 1, 1, v20);
  }
  os_unfair_lock_unlock(v26);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    swift_unknownObjectRelease();
    sub_1C132C860((uint64_t)v19, &qword_1ED797560);
  }
  else
  {
    sub_1C13A78FC((uint64_t)v19, (uint64_t)v23);
    if ((sub_1C13DFA84((uint64_t)v23) & 1) != 0)
    {
      v33 = *(_QWORD *)v23;
      v42 = *((_QWORD *)v23 + 1);
      v43 = v33;
      swift_bridgeObjectRetain();
      sub_1C1425924();
      v34 = sub_1C142590C();
      v40 = v35;
      v41 = v34;
      sub_1C1338F24((uint64_t)&v23[*(int *)(v20 + 24)], v50, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
      sub_1C1425948();
      swift_bridgeObjectRetain();
      v39[3] = sub_1C14258DC();
      sub_1C14258E8();
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v44, &v23[*(int *)(v20 + 32)], v46);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v36 = v48;
      sub_1C1425474();
      swift_unknownObjectRelease();
      sub_1C13DCA54((uint64_t)v23);
      v37 = sub_1C1425498();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v36, 0, 1, v37);
    }
    sub_1C13DCA54((uint64_t)v23);
    swift_unknownObjectRelease();
  }
  v38 = sub_1C1425498();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v48, 1, 1, v38);
}

uint64_t sub_1C13E259C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v15;

  v1 = sub_1C1425360();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1C3BAD4B4](&v0[OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client_delegate]);
  if (v5)
  {
    v6 = v5;
    v7 = *(os_unfair_lock_s **)(*(_QWORD *)(v5 + OBJC_IVAR____TtC11SessionCore12OutputServer_lock) + 16);
    os_unfair_lock_lock(v7);
    v8 = (uint64_t *)(v6 + OBJC_IVAR____TtC11SessionCore12OutputServer__lock_activities);
    swift_beginAccess();
    v9 = *v8;
    swift_bridgeObjectRetain();
    os_unfair_lock_unlock(v7);
    swift_unknownObjectRelease();
    v10 = v0;
    v11 = sub_1C1328584(v9, v10);
    swift_bridgeObjectRelease();

    sub_1C1327D94(v11);
    swift_release();
  }
  sub_1C1425354();
  sub_1C1329AD0(&qword_1ED793B78, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F460], MEMORY[0x1E0C8F458]);
  v12 = (void *)sub_1C1425BB8();
  v13 = sub_1C14250D8();

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v13;
}

uint64_t sub_1C13E2820@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _DWORD v63[4];
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;

  v82 = a2;
  v91 = sub_1C14253E4();
  v88 = *(_QWORD *)(v91 - 8);
  v3 = MEMORY[0x1E0C80A78](v91);
  v81 = (char *)v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v79 = (char *)v63 - v5;
  v6 = sub_1C1425450();
  v77 = *(_QWORD *)(v6 - 8);
  v78 = v6;
  MEMORY[0x1E0C80A78](v6);
  v76 = (char *)v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C1425858();
  v89 = *(_QWORD *)(v8 - 8);
  v90 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v80 = (char *)v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v87 = (char *)v63 - v11;
  v73 = sub_1C14251B0();
  v12 = *(_QWORD *)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v74 = (char *)v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1C1425678();
  MEMORY[0x1E0C80A78](v14);
  v64 = (char *)v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1C1425A08();
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = v18;
  v19 = sub_1C1425594();
  MEMORY[0x1E0C80A78](v19);
  v68 = (char *)v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
  v84 = v21;
  v22 = MEMORY[0x1E0C80A78](v21);
  v72 = (char *)v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v25 = (_QWORD *)((char *)v63 - v24);
  v26 = sub_1C1425498();
  v27 = *(_QWORD *)(v26 - 8);
  v85 = v26;
  v86 = v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v75 = (char *)v63 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v28);
  v92 = (char *)v63 - v30;
  v31 = *(int *)(v21 + 48);
  v32 = (char *)v25 + v31;
  v71 = a1;
  v83 = (char *)a1 + v31;
  v33 = a1[1];
  *v25 = *a1;
  v25[1] = v33;
  sub_1C1338F24((uint64_t)a1 + v31, (uint64_t)v25 + v31, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
  v34 = *((_QWORD *)v32 + 1);
  v70 = *(_QWORD *)v32;
  v69 = v34;
  v35 = (int *)type metadata accessor for Activity();
  swift_bridgeObjectRetain();
  sub_1C1425924();
  v67 = sub_1C142590C();
  v66 = v36;
  sub_1C1338F24((uint64_t)&v32[v35[6]], (uint64_t)v18, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
  sub_1C1425948();
  swift_bridgeObjectRetain();
  v63[3] = sub_1C14258DC();
  sub_1C14258E8();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v74, &v32[v35[8]], v73);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C1425474();
  sub_1C13DCA54((uint64_t)v32);
  v38 = (uint64_t)v83;
  v37 = v84;
  v39 = v72;
  v40 = (uint64_t)&v72[*(int *)(v84 + 48)];
  v41 = v71;
  v42 = v71[1];
  *(_QWORD *)v72 = *v71;
  *((_QWORD *)v39 + 1) = v42;
  sub_1C1338F24(v38, v40, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
  LOBYTE(v34) = sub_1C1406964();
  sub_1C13DCA54(v40);
  (*(void (**)(char *, _QWORD, uint64_t))(v89 + 104))(v87, **((unsigned int **)&unk_1E7A8DB90 + (char)v34), v90);
  v43 = (uint64_t)v25 + *(int *)(v37 + 48);
  v44 = v41[1];
  *v25 = *v41;
  v25[1] = v44;
  sub_1C1338F24(v38, v43, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
  v45 = v43 + v35[11];
  v46 = v76;
  v47 = v77;
  v72 = *(char **)(v77 + 16);
  v48 = v78;
  ((void (*)(char *, uint64_t, uint64_t))v72)(v76, v45, v78);
  sub_1C13DCA54(v43);
  v49 = v79;
  sub_1C142542C();
  v50 = *(void (**)(char *, uint64_t))(v47 + 8);
  v50(v46, v48);
  v51 = sub_1C14253CC();
  v73 = v52;
  v74 = (char *)v51;
  v77 = *(_QWORD *)(v88 + 8);
  ((void (*)(char *, uint64_t))v77)(v49, v91);
  v53 = (uint64_t)v83;
  v54 = (uint64_t)v25 + *(int *)(v84 + 48);
  v55 = v41[1];
  *v25 = *v41;
  v25[1] = v55;
  sub_1C1338F24(v53, v54, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
  ((void (*)(char *, uint64_t, uint64_t))v72)(v46, v54 + v35[11], v48);
  sub_1C13DCA54(v54);
  sub_1C142542C();
  v50(v46, v48);
  (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v75, v92, v85);
  v57 = v89;
  v56 = v90;
  v58 = v87;
  (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v80, v87, v90);
  v59 = v91;
  (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v81, v49, v91);
  v60 = v82;
  sub_1C1425708();
  ((void (*)(char *, uint64_t))v77)(v49, v59);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v56);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v92, v85);
  v61 = sub_1C1425714();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v60, 0, 1, v61);
}

uint64_t sub_1C13E2EAC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int v24;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  uint64_t v36;
  int v37;

  v2 = sub_1C1425858();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C1425888();
  v36 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    return 0;
  v31 = v5;
  v32 = v2;
  v33 = v3;
  v10 = *(_QWORD *)(sub_1C14258AC() - 8);
  v11 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  v29 = *(_QWORD *)(v10 + 72);
  v37 = *MEMORY[0x1E0C8FD28];
  v35 = *MEMORY[0x1E0C8FD20];
  v34 = *MEMORY[0x1E0C8FCB0];
  swift_bridgeObjectRetain();
  v12 = 0;
  v13 = v36;
  v27 = v9;
  v28 = a1;
  v26[1] = v11;
  while (1)
  {
    v30 = v12;
    v14 = sub_1C14258A0();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
      break;
    swift_bridgeObjectRelease();
LABEL_14:
    v12 = v30 + 1;
    if (v30 + 1 == v9)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  v16 = v14 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  v17 = *(_QWORD *)(v13 + 72);
  v18 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
  v18(v8, v16, v6);
  while (1)
  {
    v19 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v8, v6);
    if (v19 != v37)
      break;
    v20 = v17;
    (*(void (**)(char *, uint64_t))(v13 + 96))(v8, v6);
    v22 = v32;
    v21 = v33;
    v23 = v31;
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v31, v8, v32);
    v24 = (*(uint64_t (**)(char *, uint64_t))(v21 + 88))(v23, v22);
    if (v24 == v34)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 1;
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v22);
    v17 = v20;
    v13 = v36;
LABEL_5:
    v16 += v17;
    if (!--v15)
    {
      swift_bridgeObjectRelease();
      v9 = v27;
      goto LABEL_14;
    }
    v18(v8, v16, v6);
  }
  if (v19 != v35)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v6);
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v6);
  return 1;
}

uint64_t sub_1C13E314C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C13E3188(void *a1)
{
  uint64_t v1;

  return sub_1C13E0348(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1C13E3194()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C13E31C0(uint64_t a1)
{
  uint64_t v1;

  return sub_1C13E08B0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1C13E31C8(_QWORD *a1)
{
  uint64_t v1;

  return sub_1C13DF044(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_1C13E31E4()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = (int *)type metadata accessor for Activity();
  v2 = v0
     + ((*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  v3 = v2 + v1[5];
  v4 = sub_1C1425978();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v2 + v1[6];
  sub_1C1425A08();
  v6 = sub_1C1425AEC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  v7 = v2 + v1[8];
  v8 = sub_1C14251B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  v9 = v2 + v1[11];
  v10 = sub_1C1425450();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v2 + v1[12];
  v12 = sub_1C142557C();
  v13 = *(_QWORD *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C13E3374(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for Activity() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1C13DF1A8(a1, *(unsigned __int8 *)(v1 + 16), v1 + v4, *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

id sub_1C13E33CC(uint64_t a1, int a2, char a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char *a9)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _DWORD *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  id v26;
  objc_super v29;
  _QWORD v30[5];

  v30[3] = type metadata accessor for ProcessManager();
  v30[4] = &off_1E7A8AFC8;
  v30[0] = a7;
  v15 = OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client_lock;
  type metadata accessor for UnfairLock();
  v16 = swift_allocObject();
  v17 = a9;
  v18 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v16 + 16) = v18;
  *v18 = 0;
  *(_QWORD *)&a9[v15] = v16;
  v19 = &v17[OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client_delegate];
  *(_QWORD *)&v17[OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v20 = &v17[OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client__lock_subscriptionOptions];
  v21 = sub_1C14256B4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  v17[OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client__lock_pendingChangeAck] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client__lock_bufferedChanges] = 0;
  v22 = &v17[OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client__target];
  v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7930F0);
  v24 = *(_QWORD *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v22, a1, v23);
  *(_DWORD *)&v17[OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client_pid] = a2;
  v25 = &v17[OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client_processIdentifier];
  *(_QWORD *)v25 = a5;
  *((_QWORD *)v25 + 1) = a6;
  v17[OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client_hasActivityListenerEntitlement] = a3;
  v17[OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client_hasRemoteActivityAccessorEntitlement] = a4;
  sub_1C132E0A8((uint64_t)v30, (uint64_t)&v17[OBJC_IVAR____TtC11SessionCoreP33_0305B71F931612257040B50ABDE1CB866Client_processManager]);
  *((_QWORD *)v19 + 1) = &off_1E7A8D860;
  swift_unknownObjectWeakAssign();

  v29.receiver = v17;
  v29.super_class = (Class)_s11SessionCore6ClientCMa_2();
  v26 = objc_msgSendSuper2(&v29, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(a1, v23);
  return v26;
}

uint64_t sub_1C13E35C4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1C13E35F0()
{
  return swift_deallocObject();
}

uint64_t sub_1C13E3600()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C13E3624()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C13E3648(uint64_t a1)
{
  uint64_t v1;

  return sub_1C13DD0B0(a1, *(_QWORD *)(v1 + 16), *(_DWORD *)(v1 + 24), "Connection interrupted");
}

uint64_t sub_1C13E366C(uint64_t a1)
{
  uint64_t v1;

  return sub_1C13DD0B0(a1, *(_QWORD *)(v1 + 16), *(_DWORD *)(v1 + 24), "Connection invalidated");
}

uint64_t getEnumTagSinglePayload for OutputServer.LaunchEvent(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[16])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for OutputServer.LaunchEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for OutputServer.LaunchEvent()
{
  return &type metadata for OutputServer.LaunchEvent;
}

uint64_t storeEnumTagSinglePayload for OutputServer.LaunchEvent.LaunchReason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C13E3770 + 4 * byte_1C142AA25[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C13E37A4 + 4 * byte_1C142AA20[v4]))();
}

uint64_t sub_1C13E37A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C13E37AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C13E37B4);
  return result;
}

uint64_t sub_1C13E37C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C13E37C8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C13E37CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C13E37D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OutputServer.LaunchEvent.LaunchReason()
{
  return &type metadata for OutputServer.LaunchEvent.LaunchReason;
}

unint64_t sub_1C13E37F4()
{
  unint64_t result;

  result = qword_1EF6DC010;
  if (!qword_1EF6DC010)
  {
    result = MEMORY[0x1C3BAD334](&unk_1C142AB8C, &type metadata for OutputServer.LaunchEvent.LaunchReason);
    atomic_store(result, (unint64_t *)&qword_1EF6DC010);
  }
  return result;
}

uint64_t sub_1C13E3854(void *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _DWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v37;
  char v38;
  unint64_t v39;
  uint64_t v40;
  _BOOL8 v41;
  uint64_t v42;
  char v43;
  unint64_t v44;
  char v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t result;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;

  v55 = a1;
  v2 = type metadata accessor for Activity();
  v53 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x1E0C80A78](v2);
  v56 = (uint64_t)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v6 = (uint64_t *)((char *)&v52 - v5);
  v54 = (_QWORD *)sub_1C1426CD4();
  v7 = *(v54 - 1);
  MEMORY[0x1E0C80A78](v54);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C1426C8C();
  MEMORY[0x1E0C80A78](v10);
  v11 = sub_1C14269B0();
  MEMORY[0x1E0C80A78](v11);
  type metadata accessor for CachingActivityStore();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = MEMORY[0x1E0DEE9E0];
  v1[2] = v12;
  type metadata accessor for UnfairLock();
  v13 = swift_allocObject();
  v14 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v13 + 16) = v14;
  *v14 = 0;
  v1[4] = v13;
  sub_1C1330F6C();
  sub_1C1426980();
  v58 = MEMORY[0x1E0DEE9D8];
  sub_1C1358EF0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A70);
  sub_1C135C2A8();
  sub_1C1426DF4();
  (*(void (**)(char *, _QWORD, _QWORD *))(v7 + 104))(v9, *MEMORY[0x1E0DEF8D8], v54);
  v54 = v55;
  v15 = v1;
  v1[3] = sub_1C1426D04();
  if (qword_1ED7936D0 != -1)
LABEL_39:
    swift_once();
  v16 = qword_1ED798640;
  v15[5] = qword_1ED798640;
  if (!v16)
  {

    return (uint64_t)v15;
  }
  swift_retain();
  swift_retain();
  v17 = (_QWORD *)sub_1C1345714();
  swift_release();
  v18 = v17[2];
  v55 = v17;
  if (v18)
  {
    v19 = (uint64_t)v17 + ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80));
    v20 = *(_QWORD *)(v53 + 72);
    swift_bridgeObjectRetain();
    v21 = 0;
    v22 = 0xE000000000000000;
    do
    {
      sub_1C13DCA10(v19, (uint64_t)v6);
      v24 = HIBYTE(v22) & 0xF;
      if ((v22 & 0x2000000000000000) == 0)
        v24 = v21 & 0xFFFFFFFFFFFFLL;
      if (v24)
      {
        v58 = v21;
        v59 = v22;
        swift_bridgeObjectRetain();
        sub_1C14252D0();
        swift_bridgeObjectRetain();
        sub_1C14252D0();
        swift_bridgeObjectRelease();
        v21 = v58;
        v23 = v59;
      }
      else
      {
        v21 = *v6;
        v23 = v6[1];
        swift_bridgeObjectRetain();
      }
      sub_1C13DCA54((uint64_t)v6);
      swift_bridgeObjectRelease();
      v19 += v20;
      v22 = v23;
      --v18;
    }
    while (v18);
    v17 = v55;
    swift_bridgeObjectRelease();
  }
  else
  {
    v21 = 0;
    v23 = 0xE000000000000000;
  }
  if (qword_1ED7939A0 != -1)
    swift_once();
  v25 = sub_1C1426854();
  __swift_project_value_buffer(v25, (uint64_t)qword_1ED7986C8);
  swift_bridgeObjectRetain();
  v26 = sub_1C1426848();
  v27 = sub_1C1426C80();
  v28 = os_log_type_enabled(v26, v27);
  v52 = v15;
  if (!v28)
  {

    swift_bridgeObjectRelease_n();
    v15 = (_QWORD *)v17[2];
    if (v15)
      goto LABEL_18;
    goto LABEL_34;
  }
  v29 = (uint8_t *)swift_slowAlloc();
  v30 = swift_slowAlloc();
  v58 = v30;
  *(_DWORD *)v29 = 136446210;
  swift_bridgeObjectRetain();
  v57 = sub_1C132AD90(v21, v23, &v58);
  v17 = v55;
  sub_1C1426DB8();
  swift_bridgeObjectRelease_n();
  _os_log_impl(&dword_1C1324000, v26, v27, "Restored activities: %{public}s", v29, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1C3BAD3F4](v30, -1, -1);
  MEMORY[0x1C3BAD3F4](v29, -1, -1);

  v15 = (_QWORD *)v17[2];
  if (!v15)
  {
LABEL_34:
    swift_bridgeObjectRelease();

    return (uint64_t)v52;
  }
LABEL_18:
  v31 = v53;
  v32 = (_QWORD *)((char *)v17
                 + ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80)));
  v6 = (uint64_t *)(v52[2] + 16);
  swift_beginAccess();
  v33 = *(_QWORD *)(v31 + 72);
  swift_bridgeObjectRetain();
  while (1)
  {
    v35 = *v32;
    v34 = v32[1];
    sub_1C13DCA10((uint64_t)v32, v56);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v57 = *v6;
    v37 = v57;
    *v6 = 0x8000000000000000;
    v39 = sub_1C13277A0(v35, v34);
    v40 = *(_QWORD *)(v37 + 16);
    v41 = (v38 & 1) == 0;
    v42 = v40 + v41;
    if (__OFADD__(v40, v41))
    {
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    v43 = v38;
    if (*(_QWORD *)(v37 + 24) < v42)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v46 = (_QWORD *)v57;
      if ((v38 & 1) != 0)
        goto LABEL_19;
    }
    else
    {
      sub_1C13BA274();
      v46 = (_QWORD *)v57;
      if ((v43 & 1) != 0)
      {
LABEL_19:
        sub_1C13E4FF4(v56, v46[7] + v39 * v33);
        goto LABEL_20;
      }
    }
LABEL_28:
    v46[(v39 >> 6) + 8] |= 1 << v39;
    v47 = (uint64_t *)(v46[6] + 16 * v39);
    *v47 = v35;
    v47[1] = v34;
    sub_1C13A78FC(v56, v46[7] + v39 * v33);
    v48 = v46[2];
    v49 = __OFADD__(v48, 1);
    v50 = v48 + 1;
    if (v49)
      goto LABEL_38;
    v46[2] = v50;
    swift_bridgeObjectRetain();
LABEL_20:
    v32 = (uint64_t *)((char *)v32 + v33);
    *v6 = (uint64_t)v46;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15 = (_QWORD *)((char *)v15 - 1);
    if (!v15)
    {
      swift_endAccess();

      swift_bridgeObjectRelease_n();
      return (uint64_t)v52;
    }
  }
  sub_1C13BCF24(v42, isUniquelyReferenced_nonNull_native);
  v44 = sub_1C13277A0(v35, v34);
  if ((v43 & 1) == (v45 & 1))
  {
    v39 = v44;
    v46 = (_QWORD *)v57;
    if ((v43 & 1) != 0)
      goto LABEL_19;
    goto LABEL_28;
  }
  sub_1C142707C();
  __break(1u);

  swift_release();
  result = sub_1C1426F8C();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for PersistentActivityStore()
{
  return objc_opt_self();
}

void sub_1C13E3FC4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  os_unfair_lock_s *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v7 = *(os_unfair_lock_s **)(*(_QWORD *)(v3 + 32) + 16);
  os_unfair_lock_lock(v7);
  v8 = *(_QWORD *)(v3 + 16);
  swift_beginAccess();
  v9 = *(_QWORD *)(v8 + 16);
  if (*(_QWORD *)(v9 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = sub_1C13277A0(a1, a2);
    if ((v11 & 1) != 0)
    {
      v12 = v10;
      v13 = *(_QWORD *)(v9 + 56);
      v14 = type metadata accessor for Activity();
      v15 = *(_QWORD *)(v14 - 8);
      sub_1C13DCA10(v13 + *(_QWORD *)(v15 + 72) * v12, a3);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(a3, 0, 1, v14);
    }
    else
    {
      v17 = type metadata accessor for Activity();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a3, 1, 1, v17);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = type metadata accessor for Activity();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 1, 1, v16);
  }
  os_unfair_lock_unlock(v7);
}

void sub_1C13E4100(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33[3];

  v4 = type metadata accessor for Activity();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = MEMORY[0x1E0C80A78](v7);
  v30 = (uint64_t)&v30 - v10;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v30 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797560);
  MEMORY[0x1E0C80A78](v13);
  v15 = (uint64_t)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = a1;
  v16 = *a2;
  v17 = a2[1];
  sub_1C13DCA10((uint64_t)a2, v15);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v15, 0, 1, v4);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C13B396C(v15, v16, v17);
  swift_endAccess();
  LOBYTE(v15) = sub_1C14258DC();
  sub_1C13DCA10((uint64_t)a2, (uint64_t)v12);
  if ((v15 & 1) != 0)
  {
    sub_1C13DCA54((uint64_t)v12);
  }
  else
  {
    v18 = sub_1C14258E8();
    sub_1C13DCA54((uint64_t)v12);
    if ((v18 & 1) == 0)
    {
      sub_1C1425F0C();
      v27 = v30;
      v26 = v31;
      sub_1C13DCA10((uint64_t)a2, v30);
      v28 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      v29 = swift_allocObject();
      *(_QWORD *)(v29 + 16) = v26;
      sub_1C13A78FC(v27, v29 + v28);
      swift_retain();
      sub_1C1425F00();
      swift_release();
      return;
    }
  }
  if (qword_1ED7939A0 != -1)
    swift_once();
  v19 = sub_1C1426854();
  __swift_project_value_buffer(v19, (uint64_t)qword_1ED7986C8);
  sub_1C13DCA10((uint64_t)a2, (uint64_t)v8);
  v20 = sub_1C1426848();
  v21 = sub_1C1426C80();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    v33[0] = v23;
    *(_DWORD *)v22 = 136446210;
    v24 = *v8;
    v25 = v8[1];
    swift_bridgeObjectRetain();
    v32 = sub_1C132AD90(v24, v25, v33);
    sub_1C1426DB8();
    swift_bridgeObjectRelease();
    sub_1C13DCA54((uint64_t)v8);
    _os_log_impl(&dword_1C1324000, v20, v21, "Not persisting ephemeral activity %{public}s", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v23, -1, -1);
    MEMORY[0x1C3BAD3F4](v22, -1, -1);
  }
  else
  {
    sub_1C13DCA54((uint64_t)v8);
  }

}

uint64_t sub_1C13E4498(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  _QWORD v15[2];
  uint64_t (*v16)(_QWORD);

  v8 = type metadata accessor for Activity();
  v9 = MEMORY[0x1E0C80A78](v8);
  v10 = *(_QWORD *)(a3 + 40);
  if (v10)
  {
    v15[1] = a2;
    v16 = a1;
    MEMORY[0x1E0C80A78](v9);
    v15[-2] = a4;
    type metadata accessor for ActivityDatabase.MutableStore();
    swift_allocObject();
    v11 = sub_1C134B4D0();
    v12 = *(os_unfair_lock_s **)(*(_QWORD *)(v10 + 96) + 16);
    swift_retain();
    os_unfair_lock_lock(v12);
    MEMORY[0x1E0C80A78](v13);
    v15[-4] = sub_1C13E4FCC;
    v15[-3] = &v15[-4];
    v15[-2] = v11;
    sub_1C1425258();
    os_unfair_lock_unlock(v12);
    swift_release();
    sub_1C1341CC8();
    v9 = swift_release();
    a1 = v16;
  }
  return a1(v9);
}

void sub_1C13E483C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  os_unfair_lock_s *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797560);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(os_unfair_lock_s **)(*(_QWORD *)(v3 + 32) + 16);
  os_unfair_lock_lock(v9);
  v10 = type metadata accessor for Activity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C13B396C((uint64_t)v8, a1, a2);
  swift_endAccess();
  sub_1C1425F0C();
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v3;
  v11[3] = a1;
  v11[4] = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C1425F00();
  swift_release();
  os_unfair_lock_unlock(v9);
}

uint64_t sub_1C13E49A8(uint64_t (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t (*v7)(void);

  v3 = *(_QWORD *)(a3 + 40);
  if (v3)
  {
    v7 = a1;
    MEMORY[0x1E0C80A78](a1);
    type metadata accessor for ActivityDatabase.MutableStore();
    swift_allocObject();
    sub_1C134B4D0();
    v4 = *(os_unfair_lock_s **)(*(_QWORD *)(v3 + 96) + 16);
    swift_retain();
    os_unfair_lock_lock(v4);
    MEMORY[0x1E0C80A78](v5);
    sub_1C1425258();
    os_unfair_lock_unlock(v4);
    swift_release();
    sub_1C1341CC8();
    swift_release();
    a1 = v7;
  }
  return a1();
}

void sub_1C13E4D10(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C13E3FC4(a1, a2, a3);
}

void sub_1C13E4D30(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *v1;
  v4 = *(os_unfair_lock_s **)(*(_QWORD *)(v3 + 32) + 16);
  os_unfair_lock_lock(v4);
  sub_1C13E4100(v3, a1);
  os_unfair_lock_unlock(v4);
}

void sub_1C13E4D78(uint64_t a1, uint64_t a2)
{
  sub_1C13E483C(a1, a2);
}

uint64_t sub_1C13E4D98()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C13E4DC4(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v2;

  return sub_1C13E49A8(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1C13E4DD0()
{
  uint64_t v0;

  return sub_1C1347800(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1C13E4DF8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = (int *)type metadata accessor for Activity();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_release();
  v3 = v0 + ((v2 + 24) & ~v2);
  swift_bridgeObjectRelease();
  v4 = v3 + v1[5];
  v5 = sub_1C1425978();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v3 + v1[6];
  sub_1C1425A08();
  v7 = sub_1C1425AEC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  v8 = v3 + v1[8];
  v9 = sub_1C14251B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  v10 = v3 + v1[11];
  v11 = sub_1C1425450();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = v3 + v1[12];
  v13 = sub_1C142557C();
  v14 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C13E4F7C(uint64_t (*a1)(_QWORD), uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Activity() - 8) + 80);
  return sub_1C13E4498(a1, a2, *(_QWORD *)(v2 + 16), v2 + ((v5 + 24) & ~v5));
}

uint64_t sub_1C13E4FCC()
{
  uint64_t v0;

  return sub_1C13467CC(*(_QWORD **)(v0 + 16));
}

uint64_t sub_1C13E4FF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Activity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C13E5038(void *a1, uint64_t a2, void *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _DWORD *v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  objc_class *v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  char *v23;
  id v24;
  uint64_t result;
  void *v26;
  uint64_t v27;
  id v28;
  void *v29;
  uint64_t v30;
  char v31;
  id v32;
  _QWORD aBlock[6];
  objc_super v34;

  v28 = a3;
  v29 = a1;
  v30 = a2;
  v27 = sub_1C1426CD4();
  v4 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C1426C8C();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v7);
  v9 = sub_1C14269B0();
  MEMORY[0x1E0C80A78](v9);
  *(_QWORD *)&v3[OBJC_IVAR____TtC11SessionCore36PushFrequentUpdatesObservationServer_listener] = 0;
  *(_DWORD *)&v3[OBJC_IVAR____TtC11SessionCore36PushFrequentUpdatesObservationServer_serverStartupToken] = -1;
  v10 = OBJC_IVAR____TtC11SessionCore36PushFrequentUpdatesObservationServer_lock;
  type metadata accessor for UnfairLock();
  v11 = swift_allocObject();
  v12 = v3;
  v13 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v11 + 16) = v13;
  *v13 = 0;
  *(_QWORD *)&v3[v10] = v11;
  *(_QWORD *)&v12[OBJC_IVAR____TtC11SessionCore36PushFrequentUpdatesObservationServer_clients] = MEMORY[0x1E0DEE9E8];
  sub_1C1330F6C();
  sub_1C1426998();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1C1329AD0((unint64_t *)&qword_1ED7939F0, v8, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A70);
  sub_1C132C820((unint64_t *)&qword_1ED797A80, (uint64_t *)&unk_1ED797A70, MEMORY[0x1E0DEAF38]);
  sub_1C1426DF4();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF8D8], v27);
  v14 = v28;
  *(_QWORD *)&v12[OBJC_IVAR____TtC11SessionCore36PushFrequentUpdatesObservationServer_requestProcessingQueue] = sub_1C1426D04();
  v15 = v29;
  v16 = v30;
  *(_QWORD *)&v12[OBJC_IVAR____TtC11SessionCore36PushFrequentUpdatesObservationServer_pushServer] = v29;
  *(_QWORD *)&v12[OBJC_IVAR____TtC11SessionCore36PushFrequentUpdatesObservationServer_authorizationManager] = v16;
  v17 = v15;
  swift_retain();

  v18 = (objc_class *)type metadata accessor for PushFrequentUpdatesObservationServer();
  v34.receiver = v12;
  v34.super_class = v18;
  v19 = objc_msgSendSuper2(&v34, sel_init);
  v32 = v19;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = sub_1C13E5C78;
  *(_QWORD *)(v20 + 24) = &v31;
  aBlock[4] = sub_1C1327D4C;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1327D10;
  aBlock[3] = &block_descriptor_26_1;
  v21 = _Block_copy(aBlock);
  v22 = (void *)objc_opt_self();
  v23 = (char *)v19;
  swift_retain();
  v24 = objc_msgSend(v22, sel_listenerWithConfigurator_, v21);
  _Block_release(v21);
  swift_release();
  LOBYTE(v21) = swift_isEscapingClosureAtFileLocation();

  swift_release();
  result = swift_release();
  if ((v21 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v26 = *(void **)&v23[OBJC_IVAR____TtC11SessionCore36PushFrequentUpdatesObservationServer_listener];
    *(_QWORD *)&v23[OBJC_IVAR____TtC11SessionCore36PushFrequentUpdatesObservationServer_listener] = v24;

    return (uint64_t)v23;
  }
  return result;
}

id sub_1C13E53F4(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v10;

  v4 = sub_1C1425EDC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  sub_1C1425828();
  sub_1C1426D70();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1C142581C();
  v8 = (void *)sub_1C1426A7C();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setService_, v8);

  return objc_msgSend(a1, sel_setDelegate_, a2);
}

void sub_1C13E54D4(uint64_t a1, uint64_t a2, void *a3, const char *a4)
{
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  os_unfair_lock_s *v11;
  void *v12;

  if (qword_1ED791EB8 != -1)
    swift_once();
  v7 = sub_1C1426854();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED798538);
  v8 = sub_1C1426848();
  v9 = sub_1C1426C68();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_1C1324000, v8, v9, a4, v10, 2u);
    MEMORY[0x1C3BAD3F4](v10, -1, -1);
  }

  v11 = *(os_unfair_lock_s **)(*(_QWORD *)(a2 + OBJC_IVAR____TtC11SessionCore36PushFrequentUpdatesObservationServer_lock)
                             + 16);
  os_unfair_lock_lock(v11);
  swift_beginAccess();
  v12 = (void *)sub_1C1354A38(a3);
  swift_endAccess();
  os_unfair_lock_unlock(v11);

}

id sub_1C13E563C(uint64_t a1)
{
  return sub_1C1359EC8(a1, type metadata accessor for PushFrequentUpdatesObservationServer);
}

uint64_t type metadata accessor for PushFrequentUpdatesObservationServer()
{
  return objc_opt_self();
}

void sub_1C13E56E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1C3BAD4B4](v2);
  if (v3)
  {
    v4 = (void *)v3;
    sub_1C13E57A0();

  }
}

void sub_1C13E5738(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1C3BAD4B4](v2);
  if (v3)
  {
    v4 = (void *)v3;
    sub_1C13E5A14();

  }
}

void sub_1C13E57A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  _QWORD v18[2];
  _OWORD v19[2];
  _BYTE v20[24];
  uint64_t v21;

  v1 = v0;
  v2 = sub_1C1425AEC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C14262D8();
  if (v6)
  {
    sub_1C14262F0();
    v7 = sub_1C1425A80();
    v9 = v8;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v10 = objc_allocWithZone(MEMORY[0x1E0CA5870]);
    swift_bridgeObjectRetain();
    v11 = sub_1C13278E4(v7, v9, 0);
    v12 = v11;
    if (v11
      && (v13 = objc_msgSend(v11, sel_supportsLiveActivitiesFrequentUpdates),
          v12,
          (v13 & 1) != 0))
    {
      MEMORY[0x1E0C80A78](v14);
      v18[-4] = v15;
      v18[-3] = v7;
      v18[-2] = v9;
      LOBYTE(v18[-1]) = 1;
      sub_1C1426CEC();
      swift_bridgeObjectRelease();
      if ((v20[0] & 1) == 0)
      {
        if (objc_msgSend(*(id *)(v1+ OBJC_IVAR____TtC11SessionCoreP33_4F2D4625D323D26671D2A7737A69A19536PushFrequentUpdatesObservationClient_connection), sel_remoteTarget))
        {
          sub_1C1426DE8();
          swift_unknownObjectRelease();
        }
        else
        {
          memset(v19, 0, sizeof(v19));
        }
        sub_1C1330398((uint64_t)v19, (uint64_t)v20);
        if (!v21)
        {
          swift_bridgeObjectRelease();
          sub_1C132C860((uint64_t)v20, (uint64_t *)&unk_1ED797BB0);
          return;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DC0F8);
        if ((swift_dynamicCast() & 1) != 0)
        {
          v16 = (void *)v18[1];
          v17 = (void *)sub_1C1426A7C();
          swift_bridgeObjectRelease();
          objc_msgSend(v16, sel_activityDidExceedReducedPushBudgetForIdentifier_, v17);
          swift_unknownObjectRelease();

          return;
        }
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
}

void sub_1C13E5A14()
{
  uint64_t v0;
  void *v1;
  void *v2;
  _OWORD v3[2];
  _BYTE v4[24];
  uint64_t v5;

  if (objc_msgSend(*(id *)(v0+ OBJC_IVAR____TtC11SessionCoreP33_4F2D4625D323D26671D2A7737A69A19536PushFrequentUpdatesObservationClient_connection), sel_remoteTarget))
  {
    sub_1C1426DE8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v3, 0, sizeof(v3));
  }
  sub_1C1330398((uint64_t)v3, (uint64_t)v4);
  if (v5)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DC0F8);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v1 = (void *)sub_1C1426A7C();
      objc_msgSend(v2, sel_activityDidUnsubscribeForIdentifier_, v1);
      swift_unknownObjectRelease();

    }
  }
  else
  {
    sub_1C132C860((uint64_t)v4, (uint64_t *)&unk_1ED797BB0);
  }
}

id sub_1C13E5B40()
{
  return sub_1C1359EC8(0, type metadata accessor for PushFrequentUpdatesObservationClient);
}

uint64_t sub_1C13E5BA8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t *v1;

  return sub_1C133992C(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_1C13E5BC8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1C13E5BF4()
{
  return swift_deallocObject();
}

void sub_1C13E5C04(uint64_t a1)
{
  uint64_t v1;

  sub_1C13E54D4(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), "Connection interrupted");
}

void sub_1C13E5C24(uint64_t a1)
{
  uint64_t v1;

  sub_1C13E54D4(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), "Connection invalidated");
}

uint64_t sub_1C13E5C44()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1C13E5C68(uint64_t a1)
{
  uint64_t v1;

  sub_1C13E56E0(a1, v1);
}

void sub_1C13E5C70(uint64_t a1)
{
  uint64_t v1;

  sub_1C13E5738(a1, v1);
}

id sub_1C13E5C78(void *a1)
{
  uint64_t v1;

  return sub_1C13E53F4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1C13E5C80()
{
  return swift_deallocObject();
}

uint64_t sub_1C13E5CB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];
  uint64_t v12;
  uint64_t v13;

  v11[1] = a2;
  v12 = a1;
  v3 = sub_1C1426CD4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C1426C8C();
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1C14269B0();
  MEMORY[0x1E0C80A78](v8);
  sub_1C1330F6C();
  sub_1C1426980();
  v13 = MEMORY[0x1E0DEE9D8];
  sub_1C1358EF0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A70);
  sub_1C135C2A8();
  sub_1C1426DF4();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF8D8], v3);
  v9 = sub_1C1426D04();
  *(_QWORD *)(v2 + 16) = v12;
  *(_QWORD *)(v2 + 24) = v9;
  return v2;
}

uint64_t sub_1C13E5E4C()
{
  uint64_t v0;

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PersistentSyncEngineRecordMetadataStore()
{
  return objc_opt_self();
}

uint64_t sub_1C13E5E98@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (!*(_QWORD *)(result + 16))
  {
LABEL_10:
    v15 = MEMORY[0x1E0DEE9D8];
    goto LABEL_11;
  }
  swift_retain();
  swift_retain();
  v4 = sub_1C134784C();
  if (v2)
  {
    swift_release();
    if (qword_1ED7939A0 != -1)
      swift_once();
    v5 = sub_1C1426854();
    __swift_project_value_buffer(v5, (uint64_t)qword_1ED7986C8);
    v6 = v2;
    v7 = v2;
    v8 = sub_1C1426848();
    v9 = sub_1C1426C68();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      v16 = v11;
      *(_DWORD *)v10 = 136446210;
      v12 = v2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797BA0);
      v13 = sub_1C1426AA0();
      sub_1C132AD90(v13, v14, &v16);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C1324000, v8, v9, "Could not fetch metadata from sync engine persistent store: %{public}s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v11, -1, -1);
      MEMORY[0x1C3BAD3F4](v10, -1, -1);
    }
    else
    {

    }
    result = swift_release();
    goto LABEL_10;
  }
  v15 = v4;
  swift_release();
  result = swift_release();
LABEL_11:
  *a2 = v15;
  return result;
}

void sub_1C13E60D8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_10:
    v15 = MEMORY[0x1E0DEE9E8];
    goto LABEL_11;
  }
  swift_retain();
  swift_retain();
  v4 = sub_1C13481EC();
  if (v2)
  {
    swift_release();
    if (qword_1ED7939A0 != -1)
      swift_once();
    v5 = sub_1C1426854();
    __swift_project_value_buffer(v5, (uint64_t)qword_1ED7986C8);
    v6 = v2;
    v7 = v2;
    v8 = sub_1C1426848();
    v9 = sub_1C1426C68();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      v16 = v11;
      *(_DWORD *)v10 = 136446210;
      v12 = v2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797BA0);
      v13 = sub_1C1426AA0();
      sub_1C132AD90(v13, v14, &v16);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C1324000, v8, v9, "Could not fetch paired device identifiers from sync engine persistent store: %{public}s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v11, -1, -1);
      MEMORY[0x1C3BAD3F4](v10, -1, -1);
    }
    else
    {

    }
    swift_release();

    goto LABEL_10;
  }
  v15 = v4;
  swift_release();
  swift_release();
LABEL_11:
  *a2 = v15;
}

uint64_t sub_1C13E6318@<X0>(uint64_t result@<X0>, unint64_t *a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  if (*(_QWORD *)(result + 16))
  {
    swift_retain();
    swift_retain();
    v4 = sub_1C13486FC();
    if (v2)
    {
      swift_release();
      if (qword_1ED7939A0 != -1)
        swift_once();
      v5 = sub_1C1426854();
      __swift_project_value_buffer(v5, (uint64_t)qword_1ED7986C8);
      v6 = v2;
      v7 = v2;
      v8 = sub_1C1426848();
      v9 = sub_1C1426C68();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc();
        v11 = swift_slowAlloc();
        v16 = v11;
        *(_DWORD *)v10 = 136446210;
        v12 = v2;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797BA0);
        v13 = sub_1C1426AA0();
        sub_1C132AD90(v13, v14, &v16);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1C1324000, v8, v9, "Could not fetch sync dates from sync engine persistent store: %{public}s", v10, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v11, -1, -1);
        MEMORY[0x1C3BAD3F4](v10, -1, -1);
      }
      else
      {

      }
      v15 = sub_1C13329B0(MEMORY[0x1E0DEE9D8]);

      result = swift_release();
    }
    else
    {
      v15 = v4;
      swift_release();
      result = swift_release();
    }
  }
  else
  {
    v15 = MEMORY[0x1E0DEE9E0];
  }
  *a2 = v15;
  return result;
}

uint64_t sub_1C13E656C(uint64_t (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    MEMORY[0x1E0C80A78](a1);
    type metadata accessor for ActivityDatabase.MutableStore();
    swift_allocObject();
    sub_1C134B4D0();
    v5 = *(os_unfair_lock_s **)(*(_QWORD *)(v4 + 96) + 16);
    swift_retain();
    os_unfair_lock_lock(v5);
    MEMORY[0x1E0C80A78](v6);
    sub_1C1425258();
    os_unfair_lock_unlock(v5);
    swift_release();
    sub_1C1341CC8();
    swift_release();
  }
  return a1();
}

uint64_t sub_1C13E6868(uint64_t (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    MEMORY[0x1E0C80A78](a1);
    type metadata accessor for ActivityDatabase.MutableStore();
    swift_allocObject();
    sub_1C134B4D0();
    v5 = *(os_unfair_lock_s **)(*(_QWORD *)(v4 + 96) + 16);
    swift_retain();
    os_unfair_lock_lock(v5);
    MEMORY[0x1E0C80A78](v6);
    sub_1C1425258();
    os_unfair_lock_unlock(v5);
    swift_release();
    sub_1C1341CC8();
    swift_release();
  }
  return a1();
}

uint64_t sub_1C13E6B64(uint64_t (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    MEMORY[0x1E0C80A78](a1);
    type metadata accessor for ActivityDatabase.MutableStore();
    swift_allocObject();
    sub_1C134B4D0();
    v5 = *(os_unfair_lock_s **)(*(_QWORD *)(v4 + 96) + 16);
    swift_retain();
    os_unfair_lock_lock(v5);
    MEMORY[0x1E0C80A78](v6);
    sub_1C1425258();
    os_unfair_lock_unlock(v5);
    swift_release();
    sub_1C1341CC8();
    swift_release();
  }
  return a1();
}

uint64_t sub_1C13E6E60(uint64_t (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    MEMORY[0x1E0C80A78](a1);
    type metadata accessor for ActivityDatabase.MutableStore();
    swift_allocObject();
    sub_1C134B4D0();
    v5 = *(os_unfair_lock_s **)(*(_QWORD *)(v4 + 96) + 16);
    swift_retain();
    os_unfair_lock_lock(v5);
    MEMORY[0x1E0C80A78](v6);
    sub_1C1425258();
    os_unfair_lock_unlock(v5);
    swift_release();
    sub_1C1341CC8();
    swift_release();
  }
  return a1();
}

uint64_t sub_1C13E715C(uint64_t (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    MEMORY[0x1E0C80A78](a1);
    type metadata accessor for ActivityDatabase.MutableStore();
    swift_allocObject();
    sub_1C134B4D0();
    v5 = *(os_unfair_lock_s **)(*(_QWORD *)(v4 + 96) + 16);
    swift_retain();
    os_unfair_lock_lock(v5);
    MEMORY[0x1E0C80A78](v6);
    sub_1C1425258();
    os_unfair_lock_unlock(v5);
    swift_release();
    sub_1C1341CC8();
    swift_release();
  }
  return a1();
}

uint64_t sub_1C13E7458(uint64_t (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    MEMORY[0x1E0C80A78](a1);
    type metadata accessor for ActivityDatabase.MutableStore();
    swift_allocObject();
    sub_1C134B4D0();
    v5 = *(os_unfair_lock_s **)(*(_QWORD *)(v4 + 96) + 16);
    swift_retain();
    os_unfair_lock_lock(v5);
    MEMORY[0x1E0C80A78](v6);
    sub_1C1425258();
    os_unfair_lock_unlock(v5);
    swift_release();
    sub_1C1341CC8();
    swift_release();
  }
  return a1();
}

uint64_t sub_1C13E7754(uint64_t (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    MEMORY[0x1E0C80A78](a1);
    type metadata accessor for ActivityDatabase.MutableStore();
    swift_allocObject();
    sub_1C134B4D0();
    v5 = *(os_unfair_lock_s **)(*(_QWORD *)(v4 + 96) + 16);
    swift_retain();
    os_unfair_lock_lock(v5);
    MEMORY[0x1E0C80A78](v6);
    sub_1C1425258();
    os_unfair_lock_unlock(v5);
    swift_release();
    sub_1C1341CC8();
    swift_release();
  }
  return a1();
}

uint64_t sub_1C13E7A54(uint64_t (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    type metadata accessor for ActivityDatabase.MutableStore();
    swift_allocObject();
    sub_1C134B4D0();
    v5 = *(os_unfair_lock_s **)(*(_QWORD *)(v4 + 96) + 16);
    swift_retain();
    os_unfair_lock_lock(v5);
    MEMORY[0x1E0C80A78](v6);
    sub_1C1425258();
    os_unfair_lock_unlock(v5);
    swift_release();
    sub_1C1341CC8();
    swift_release();
  }
  return a1();
}

uint64_t sub_1C13E7D20()
{
  return sub_1C13481AC();
}

uint64_t sub_1C13E7D40(uint64_t a1, uint64_t a2)
{
  return sub_1C13E7D7C(a1, a2, (uint64_t *)&unk_1ED797A40);
}

uint64_t sub_1C13E7D54(uint64_t a1, uint64_t a2)
{
  return sub_1C13E7D7C(a1, a2, &qword_1ED797A88);
}

uint64_t sub_1C13E7D68(uint64_t a1, uint64_t a2)
{
  return sub_1C13E7D7C(a1, a2, &qword_1ED7979E0);
}

uint64_t sub_1C13E7D7C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(a3);
  sub_1C1426CEC();
  return v4;
}

uint64_t sub_1C13E7DD4()
{
  sub_1C1425F0C();
  swift_retain();
  sub_1C1425F00();
  return swift_release();
}

uint64_t sub_1C13E7E40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C13E7E78(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0D8D588]);
}

uint64_t sub_1C13E7E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C13E7E78(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0D8D5E8]);
}

uint64_t sub_1C13E7E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v6 = a4(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v14 - v8;
  v10 = *v4;
  sub_1C1425F0C();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v11 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v10;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v12 + v11, v9, v6);
  swift_retain();
  sub_1C1425F00();
  return swift_release();
}

uint64_t sub_1C13E7F94(uint64_t a1, uint64_t a2)
{
  return sub_1C13E7FD0(a1, a2);
}

uint64_t sub_1C13E7FA8(uint64_t a1, uint64_t a2)
{
  return sub_1C13E7FD0(a1, a2);
}

uint64_t sub_1C13E7FBC(uint64_t a1, uint64_t a2)
{
  return sub_1C13E7FD0(a1, a2);
}

uint64_t sub_1C13E7FD0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  _QWORD *v6;

  v5 = *v2;
  sub_1C1425F0C();
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = v5;
  v6[3] = a1;
  v6[4] = a2;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C1425F00();
  return swift_release();
}

uint64_t sub_1C13E8080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C13E7E78(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0D8D5E8]);
}

uint64_t sub_1C13E809C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v5 = v4;
  v27 = a3;
  v28 = a4;
  v24 = a1;
  v7 = sub_1C14251B0();
  v8 = *(_QWORD *)(v7 - 8);
  v23 = v7;
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C1426008();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v5;
  v16 = sub_1C1425F0C();
  v25 = *(_QWORD *)(v15 + 24);
  v26 = v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v24, v7);
  v17 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v18 = (v13 + *(unsigned __int8 *)(v8 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v19 = (char *)swift_allocObject();
  v20 = v27;
  v21 = v28;
  *((_QWORD *)v19 + 2) = v15;
  *((_QWORD *)v19 + 3) = v20;
  *((_QWORD *)v19 + 4) = v21;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v19[v17], v14, v11);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v19[v18], v10, v23);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C1425F00();
  return swift_release();
}

uint64_t sub_1C13E824C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_1C1426008();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_1C14251B0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_1C13E8310(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v2;

  sub_1C1426008();
  sub_1C14251B0();
  return sub_1C13E7754(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1C13E8390()
{
  uint64_t *v0;

  return sub_1C13489B8(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1C13E83BC()
{
  return objectdestroy_2Tm((uint64_t (*)(_QWORD))MEMORY[0x1E0D8D5E8]);
}

uint64_t sub_1C13E83C8(uint64_t a1, uint64_t a2)
{
  return sub_1C13A6180(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0D8D5E8], (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))sub_1C13E7458);
}

uint64_t sub_1C13E83DC()
{
  return sub_1C1349010();
}

uint64_t sub_1C13E8408(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v2;

  return sub_1C13E715C(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1C13E8414()
{
  uint64_t v0;

  return sub_1C1348D7C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1C13E8440(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v2;

  return sub_1C13E6E60(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1C13E844C(uint64_t a1)
{
  return sub_1C13E8494(a1, sub_1C13486B0);
}

uint64_t sub_1C13E846C(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v2;

  return sub_1C13E6B64(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1C13E8478(uint64_t a1)
{
  return sub_1C13E8494(a1, sub_1C1348430);
}

uint64_t sub_1C13E8494(uint64_t a1, uint64_t (*a2)(_QWORD, _QWORD))
{
  uint64_t v2;

  return a2(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1C13E84C0()
{
  return objectdestroy_2Tm((uint64_t (*)(_QWORD))MEMORY[0x1E0D8D5E8]);
}

uint64_t sub_1C13E84CC(uint64_t a1, uint64_t a2)
{
  return sub_1C13A6180(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0D8D5E8], (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))sub_1C13E6868);
}

uint64_t sub_1C13E84E0()
{
  return sub_1C134818C();
}

uint64_t sub_1C13E8508()
{
  return objectdestroy_2Tm((uint64_t (*)(_QWORD))MEMORY[0x1E0D8D588]);
}

uint64_t objectdestroy_2Tm(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = a1(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  return swift_deallocObject();
}

uint64_t sub_1C13E858C(uint64_t a1, uint64_t a2)
{
  return sub_1C13A6180(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0D8D588], (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))sub_1C13E656C);
}

uint64_t sub_1C13E85A0()
{
  uint64_t v0;

  return sub_1C1347B08(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1C13E85C8(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v2;

  return sub_1C13E7A54(a1, a2, v2);
}

uint64_t sub_1C13E85D0@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1C13E6318(v1, a1);
}

void sub_1C13E85E8(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_1C13E60D8(v1, a1);
}

uint64_t sub_1C13E8600@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1C13E5E98(v1, a1);
}

uint64_t sub_1C13E8618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  swift_beginAccess();
  v7 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8 = sub_1C13277A0(a1, a2);
    if ((v9 & 1) != 0)
    {
      v10 = v8;
      v11 = *(_QWORD *)(v7 + 56);
      v12 = type metadata accessor for Activity();
      v13 = *(_QWORD *)(v12 - 8);
      sub_1C13DCA10(v11 + *(_QWORD *)(v13 + 72) * v10, a3);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(a3, 0, 1, v12);
    }
    else
    {
      v16 = type metadata accessor for Activity();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 1, 1, v16);
    }
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v14 = type metadata accessor for Activity();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a3, 1, 1, v14);
  }
}

uint64_t type metadata accessor for CachingActivityStore()
{
  return objc_opt_self();
}

uint64_t sub_1C13E8758@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C13E8618(a1, a2, a3);
}

uint64_t sub_1C13E8778(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797560);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *a1;
  v6 = a1[1];
  sub_1C13DCA10((uint64_t)a1, (uint64_t)v4);
  v7 = type metadata accessor for Activity();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v4, 0, 1, v7);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C13B396C((uint64_t)v4, v5, v6);
  return swift_endAccess();
}

uint64_t sub_1C13E8858(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797560);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Activity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C13B396C((uint64_t)v6, a1, a2);
  return swift_endAccess();
}

uint64_t sub_1C13E8920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(a10 + 16))(a1, a2, a3, a4, a5, a6 & 1);
}

uint64_t sub_1C13E894C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 32))();
}

uint64_t sub_1C13E8954(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  _OWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v8 = a2 + 3;
    v9 = a2[4];
    swift_bridgeObjectRetain();
    if (v9 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 24) = *v8;
    }
    else
    {
      v11 = *(_QWORD *)v8;
      sub_1C133177C(v11, v9);
      *(_QWORD *)(a1 + 24) = v11;
      *(_QWORD *)(a1 + 32) = v9;
    }
    v12 = *(int *)(a3 + 28);
    v13 = a1 + v12;
    v14 = (uint64_t)a2 + v12;
    v15 = sub_1C14251B0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t sub_1C13E8A30(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a1 + 32);
  if (v4 >> 60 != 15)
    sub_1C13282B4(*(_QWORD *)(a1 + 24), v4);
  v5 = a1 + *(int *)(a2 + 28);
  v6 = sub_1C14251B0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_1C13E8A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = (_OWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v8 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 24) = *v7;
  }
  else
  {
    v9 = *(_QWORD *)v7;
    sub_1C133177C(v9, v8);
    *(_QWORD *)(a1 + 24) = v9;
    *(_QWORD *)(a1 + 32) = v8;
  }
  v10 = *(int *)(a3 + 28);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_1C14251B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  return a1;
}

uint64_t sub_1C13E8B40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = (uint64_t *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32) >> 60 != 15)
  {
    if (v7 >> 60 != 15)
    {
      v9 = *v6;
      sub_1C133177C(*v6, *(_QWORD *)(a2 + 32));
      v10 = *(_QWORD *)(a1 + 24);
      v11 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(a1 + 24) = v9;
      *(_QWORD *)(a1 + 32) = v7;
      sub_1C13282B4(v10, v11);
      goto LABEL_8;
    }
    sub_1C13E8C48(a1 + 24);
    goto LABEL_6;
  }
  if (v7 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)v6;
    goto LABEL_8;
  }
  v8 = *v6;
  sub_1C133177C(*v6, *(_QWORD *)(a2 + 32));
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v7;
LABEL_8:
  v12 = *(int *)(a3 + 28);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1C14251B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  return a1;
}

uint64_t sub_1C13E8C48(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0CB0338] - 8) + 8))();
  return a1;
}

uint64_t sub_1C13E8C7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1C14251B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1C13E8CE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = (_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  if (v8 >> 60 != 15)
  {
    v9 = *(_QWORD *)(a2 + 32);
    if (v9 >> 60 != 15)
    {
      v10 = *(_QWORD *)(a1 + 24);
      *(_QWORD *)(a1 + 24) = *v7;
      *(_QWORD *)(a1 + 32) = v9;
      sub_1C13282B4(v10, v8);
      goto LABEL_6;
    }
    sub_1C13E8C48(a1 + 24);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v7;
LABEL_6:
  v11 = *(int *)(a3 + 28);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1C14251B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_1C13E8DB0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C13E8DBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1C14251B0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_1C13E8E38()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C13E8E44(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1C14251B0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ActivityState(uint64_t a1)
{
  return sub_1C138479C(a1, qword_1ED793E40);
}

uint64_t sub_1C13E8ECC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C14251B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ActivityManagerEvent.EventType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityManagerEvent.EventType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1C13E9030 + 4 * byte_1C142ADD5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1C13E9064 + 4 * byte_1C142ADD0[v4]))();
}

uint64_t sub_1C13E9064(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C13E906C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C13E9074);
  return result;
}

uint64_t sub_1C13E9080(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C13E9088);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1C13E908C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C13E9094(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityManagerEvent.EventType()
{
  return &type metadata for ActivityManagerEvent.EventType;
}

_QWORD *sub_1C13E90B0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v39 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v39 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v40 = sub_1C142557C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(a1, a2, v40);
LABEL_11:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      v9 = (int *)type metadata accessor for Activity();
      v10 = v9[5];
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_1C1425978();
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      v14(v11, v12, v13);
      v15 = v9[6];
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      sub_1C1425A08();
      swift_getEnumCaseMultiPayload();
      v18 = sub_1C1425AEC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
      swift_storeEnumTagMultiPayload();
      *(_QWORD *)((char *)a1 + v9[7]) = *(_QWORD *)((char *)a2 + v9[7]);
      v19 = v9[8];
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      v22 = sub_1C14251B0();
      v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
      swift_bridgeObjectRetain();
      v23(v20, v21, v22);
      *((_BYTE *)a1 + v9[9]) = *((_BYTE *)a2 + v9[9]);
      v24 = v9[10];
      v25 = (_QWORD *)((char *)a1 + v24);
      v26 = (_QWORD *)((char *)a2 + v24);
      v27 = v26[1];
      *v25 = *v26;
      v25[1] = v27;
      v28 = v9[11];
      v29 = (char *)a1 + v28;
      v30 = (char *)a2 + v28;
      v31 = sub_1C1425450();
      v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
      swift_bridgeObjectRetain();
      v32(v29, v30, v31);
      v33 = v9[12];
      v34 = (char *)a1 + v33;
      v35 = (char *)a2 + v33;
      v36 = sub_1C142557C();
      v37 = *(_QWORD *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      {
        v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      }
      v41 = v9[13];
      v42 = (_QWORD *)((char *)a1 + v41);
      v43 = (_QWORD *)((char *)a2 + v41);
      v44 = v43[1];
      *v42 = *v43;
      v42[1] = v44;
      swift_bridgeObjectRetain();
      goto LABEL_11;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t sub_1C13E9370(uint64_t a1)
{
  uint64_t result;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v15 = sub_1C142557C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a1, v15);
  }
  else if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    v3 = (int *)type metadata accessor for Activity();
    v4 = a1 + v3[5];
    v5 = sub_1C1425978();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    v6 = a1 + v3[6];
    sub_1C1425A08();
    v7 = sub_1C1425AEC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    swift_bridgeObjectRelease();
    v8 = a1 + v3[8];
    v9 = sub_1C14251B0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    swift_bridgeObjectRelease();
    v10 = a1 + v3[11];
    v11 = sub_1C1425450();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
    v12 = a1 + v3[12];
    v13 = sub_1C142557C();
    v14 = *(_QWORD *)(v13 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_1C13E9500(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v38 = sub_1C142557C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(a1, a2, v38);
LABEL_9:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = (int *)type metadata accessor for Activity();
    v9 = v8[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1C1425978();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = v8[6];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    sub_1C1425A08();
    swift_getEnumCaseMultiPayload();
    v17 = sub_1C1425AEC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    swift_storeEnumTagMultiPayload();
    *(_QWORD *)((char *)a1 + v8[7]) = *(_QWORD *)((char *)a2 + v8[7]);
    v18 = v8[8];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = sub_1C14251B0();
    v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
    swift_bridgeObjectRetain();
    v22(v19, v20, v21);
    *((_BYTE *)a1 + v8[9]) = *((_BYTE *)a2 + v8[9]);
    v23 = v8[10];
    v24 = (_QWORD *)((char *)a1 + v23);
    v25 = (_QWORD *)((char *)a2 + v23);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = v8[11];
    v28 = (char *)a1 + v27;
    v29 = (char *)a2 + v27;
    v30 = sub_1C1425450();
    v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
    swift_bridgeObjectRetain();
    v31(v28, v29, v30);
    v32 = v8[12];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    v35 = sub_1C142557C();
    v36 = *(_QWORD *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
    }
    v39 = v8[13];
    v40 = (_QWORD *)((char *)a1 + v39);
    v41 = (_QWORD *)((char *)a2 + v39);
    v42 = v41[1];
    *v40 = *v41;
    v40[1] = v42;
    swift_bridgeObjectRetain();
    goto LABEL_9;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *sub_1C13E9798(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;

  if (a1 != a2)
  {
    sub_1C1339004((uint64_t)a1, type metadata accessor for ActivityParticipantEvent.EventType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v36 = sub_1C142557C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(a1, a2, v36);
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      v7 = (int *)type metadata accessor for Activity();
      v8 = v7[5];
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_1C1425978();
      v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      v12(v9, v10, v11);
      v13 = v7[6];
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      sub_1C1425A08();
      swift_getEnumCaseMultiPayload();
      v16 = sub_1C1425AEC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
      swift_storeEnumTagMultiPayload();
      *(_QWORD *)((char *)a1 + v7[7]) = *(_QWORD *)((char *)a2 + v7[7]);
      v17 = v7[8];
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = sub_1C14251B0();
      v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
      swift_bridgeObjectRetain();
      v21(v18, v19, v20);
      *((_BYTE *)a1 + v7[9]) = *((_BYTE *)a2 + v7[9]);
      v22 = v7[10];
      v23 = (_QWORD *)((char *)a1 + v22);
      v24 = (_QWORD *)((char *)a2 + v22);
      *v23 = *v24;
      v23[1] = v24[1];
      v25 = v7[11];
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      v28 = sub_1C1425450();
      v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
      swift_bridgeObjectRetain();
      v29(v26, v27, v28);
      v30 = v7[12];
      v31 = (char *)a1 + v30;
      v32 = (char *)a2 + v30;
      v33 = sub_1C142557C();
      v34 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
      {
        v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      }
      v37 = v7[13];
      v38 = (_QWORD *)((char *)a1 + v37);
      v39 = (_QWORD *)((char *)a2 + v37);
      *v38 = *v39;
      v38[1] = v39[1];
      swift_bridgeObjectRetain();
      goto LABEL_10;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t type metadata accessor for ActivityParticipantEvent.EventType(uint64_t a1)
{
  return sub_1C138479C(a1, qword_1ED796B20);
}

_OWORD *sub_1C13E9A74(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v30 = sub_1C142557C();
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(a1, a2, v30);
LABEL_9:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    *a1 = *a2;
    v7 = (int *)type metadata accessor for Activity();
    v8 = v7[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1C1425978();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    v12 = v7[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    sub_1C1425A08();
    swift_getEnumCaseMultiPayload();
    v15 = sub_1C1425AEC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    swift_storeEnumTagMultiPayload();
    *(_QWORD *)((char *)a1 + v7[7]) = *(_QWORD *)((char *)a2 + v7[7]);
    v16 = v7[8];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_1C14251B0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
    *((_BYTE *)a1 + v7[9]) = *((_BYTE *)a2 + v7[9]);
    *(_OWORD *)((char *)a1 + v7[10]) = *(_OWORD *)((char *)a2 + v7[10]);
    v20 = v7[11];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v23 = sub_1C1425450();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
    v24 = v7[12];
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    v27 = sub_1C142557C();
    v28 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
    *(_OWORD *)((char *)a1 + v7[13]) = *(_OWORD *)((char *)a2 + v7[13]);
    goto LABEL_9;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *sub_1C13E9CCC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  if (a1 != a2)
  {
    sub_1C1339004((uint64_t)a1, type metadata accessor for ActivityParticipantEvent.EventType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v30 = sub_1C142557C();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(a1, a2, v30);
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      *a1 = *a2;
      v7 = (int *)type metadata accessor for Activity();
      v8 = v7[5];
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_1C1425978();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      v12 = v7[6];
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      sub_1C1425A08();
      swift_getEnumCaseMultiPayload();
      v15 = sub_1C1425AEC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      swift_storeEnumTagMultiPayload();
      *(_QWORD *)((char *)a1 + v7[7]) = *(_QWORD *)((char *)a2 + v7[7]);
      v16 = v7[8];
      v17 = (char *)a1 + v16;
      v18 = (char *)a2 + v16;
      v19 = sub_1C14251B0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
      *((_BYTE *)a1 + v7[9]) = *((_BYTE *)a2 + v7[9]);
      *(_OWORD *)((char *)a1 + v7[10]) = *(_OWORD *)((char *)a2 + v7[10]);
      v20 = v7[11];
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      v23 = sub_1C1425450();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
      v24 = v7[12];
      v25 = (char *)a1 + v24;
      v26 = (char *)a2 + v24;
      v27 = sub_1C142557C();
      v28 = *(_QWORD *)(v27 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      *(_OWORD *)((char *)a1 + v7[13]) = *(_OWORD *)((char *)a2 + v7[13]);
      goto LABEL_10;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1C13E9F3C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for Activity();
  if (v1 <= 0x3F)
  {
    result = sub_1C142557C();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

_QWORD *sub_1C13E9FBC(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int (*v57)(char *, uint64_t, uint64_t);
  uint64_t v58;
  char *v60;
  char *v61;
  char *v62;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v42 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v42 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v4;
  }
  v7 = a2[1];
  *a1 = *a2;
  a1[1] = v7;
  v8 = a2[3];
  a1[2] = a2[2];
  a1[3] = v8;
  v9 = a3[6];
  v10 = (_QWORD *)((char *)a1 + v9);
  v11 = (_QWORD *)((char *)a2 + v9);
  v12 = type metadata accessor for ActivityParticipantEvent.EventType(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v43 = sub_1C142557C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v10, v11, v43);
LABEL_11:
    swift_storeEnumTagMultiPayload();
    goto LABEL_12;
  }
  if (!EnumCaseMultiPayload)
  {
    v14 = v11[1];
    *v10 = *v11;
    v10[1] = v14;
    v15 = (int *)type metadata accessor for Activity();
    v16 = v15[5];
    v60 = (char *)v10 + v16;
    v17 = (char *)v11 + v16;
    v18 = sub_1C1425978();
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    v19(v60, v17, v18);
    v20 = v15[6];
    v21 = (char *)v10 + v20;
    v22 = (char *)v11 + v20;
    sub_1C1425A08();
    swift_getEnumCaseMultiPayload();
    v23 = sub_1C1425AEC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    swift_storeEnumTagMultiPayload();
    *(_QWORD *)((char *)v10 + v15[7]) = *(_QWORD *)((char *)v11 + v15[7]);
    v24 = v15[8];
    v61 = (char *)v10 + v24;
    v25 = (char *)v11 + v24;
    v26 = sub_1C14251B0();
    v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
    swift_bridgeObjectRetain();
    v27(v61, v25, v26);
    *((_BYTE *)v10 + v15[9]) = *((_BYTE *)v11 + v15[9]);
    v28 = v15[10];
    v29 = (_QWORD *)((char *)v10 + v28);
    v30 = (_QWORD *)((char *)v11 + v28);
    v31 = v30[1];
    *v29 = *v30;
    v29[1] = v31;
    v32 = v15[11];
    v62 = (char *)v10 + v32;
    v33 = (char *)v11 + v32;
    v34 = sub_1C1425450();
    v35 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16);
    swift_bridgeObjectRetain();
    v35(v62, v33, v34);
    v36 = v15[12];
    v37 = (char *)v10 + v36;
    v38 = (char *)v11 + v36;
    v39 = sub_1C142557C();
    v40 = *(_QWORD *)(v39 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
    {
      v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v37, v38, v39);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
    }
    v44 = v15[13];
    v45 = (_QWORD *)((char *)v10 + v44);
    v46 = (_QWORD *)((char *)v11 + v44);
    v47 = v46[1];
    *v45 = *v46;
    v45[1] = v47;
    swift_bridgeObjectRetain();
    goto LABEL_11;
  }
  memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
LABEL_12:
  v48 = a3[7];
  v49 = (char *)v4 + v48;
  v50 = (char *)a2 + v48;
  v51 = sub_1C1425558();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
  v52 = a3[9];
  *(_OWORD *)((char *)v4 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  v53 = (char *)v4 + v52;
  v54 = (char *)a2 + v52;
  v55 = sub_1C1425450();
  v56 = *(_QWORD *)(v55 - 8);
  v57 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48);
  swift_unknownObjectRetain();
  if (v57(v54, 1, v55))
  {
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791E48);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v53, v54, v55);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
  }
  *((_BYTE *)v4 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  return v4;
}

uint64_t sub_1C13EA3A4(uint64_t a1, int *a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[6];
  type metadata accessor for ActivityParticipantEvent.EventType(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v18 = sub_1C142557C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v4, v18);
  }
  else if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease();
    v6 = (int *)type metadata accessor for Activity();
    v7 = v4 + v6[5];
    v8 = sub_1C1425978();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
    v9 = v4 + v6[6];
    sub_1C1425A08();
    v10 = sub_1C1425AEC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
    swift_bridgeObjectRelease();
    v11 = v4 + v6[8];
    v12 = sub_1C14251B0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
    swift_bridgeObjectRelease();
    v13 = v4 + v6[11];
    v14 = sub_1C1425450();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
    v15 = v4 + v6[12];
    v16 = sub_1C142557C();
    v17 = *(_QWORD *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    swift_bridgeObjectRelease();
  }
  v19 = a1 + a2[7];
  v20 = sub_1C1425558();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  swift_unknownObjectRelease();
  v21 = a1 + a2[9];
  v22 = sub_1C1425450();
  v23 = *(_QWORD *)(v22 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  return result;
}

_QWORD *sub_1C13EA5D0(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  int *v61;

  v3 = a3;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[6];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (_QWORD *)((char *)a2 + v8);
  v11 = type metadata accessor for ActivityParticipantEvent.EventType(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v44 = sub_1C142557C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v9, v10, v44);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v61 = v3;
    v13 = v10[1];
    *v9 = *v10;
    v9[1] = v13;
    v14 = (int *)type metadata accessor for Activity();
    v15 = v14[5];
    v16 = (char *)v9 + v15;
    v17 = (char *)v10 + v15;
    v18 = sub_1C1425978();
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    v19(v16, v17, v18);
    v20 = v14[6];
    v21 = (char *)v9 + v20;
    v22 = (char *)v10 + v20;
    sub_1C1425A08();
    swift_getEnumCaseMultiPayload();
    v23 = sub_1C1425AEC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    swift_storeEnumTagMultiPayload();
    *(_QWORD *)((char *)v9 + v14[7]) = *(_QWORD *)((char *)v10 + v14[7]);
    v24 = v14[8];
    v25 = (char *)v9 + v24;
    v26 = (char *)v10 + v24;
    v27 = sub_1C14251B0();
    v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
    swift_bridgeObjectRetain();
    v28(v25, v26, v27);
    *((_BYTE *)v9 + v14[9]) = *((_BYTE *)v10 + v14[9]);
    v29 = v14[10];
    v30 = (_QWORD *)((char *)v9 + v29);
    v31 = (_QWORD *)((char *)v10 + v29);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    v33 = v14[11];
    v34 = (char *)v9 + v33;
    v35 = (char *)v10 + v33;
    v36 = sub_1C1425450();
    v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
    swift_bridgeObjectRetain();
    v37(v34, v35, v36);
    v38 = v14[12];
    v39 = (char *)v9 + v38;
    v40 = (char *)v10 + v38;
    v41 = sub_1C142557C();
    v42 = *(_QWORD *)(v41 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
    {
      v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
      memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v39, v40, v41);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
    }
    v45 = v14[13];
    v46 = (_QWORD *)((char *)v9 + v45);
    v47 = (_QWORD *)((char *)v10 + v45);
    v48 = v47[1];
    *v46 = *v47;
    v46[1] = v48;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
    v3 = v61;
  }
  v49 = v3[7];
  v50 = (char *)a1 + v49;
  v51 = (char *)a2 + v49;
  v52 = sub_1C1425558();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16))(v50, v51, v52);
  v53 = v3[9];
  *(_OWORD *)((char *)a1 + v3[8]) = *(_OWORD *)((char *)a2 + v3[8]);
  v54 = (char *)a1 + v53;
  v55 = (char *)a2 + v53;
  v56 = sub_1C1425450();
  v57 = *(_QWORD *)(v56 - 8);
  v58 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48);
  swift_unknownObjectRetain();
  if (v58(v55, 1, v56))
  {
    v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791E48);
    memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v54, v55, v56);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
  }
  *((_BYTE *)a1 + v3[10]) = *((_BYTE *)a2 + v3[10]);
  return a1;
}

_QWORD *sub_1C13EA98C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  int *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(char *, uint64_t, uint64_t);
  int v55;
  int v56;
  uint64_t v57;
  char *v59;
  char *v60;
  char *v61;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = a3[6];
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    sub_1C1339004((uint64_t)a1 + v6, type metadata accessor for ActivityParticipantEvent.EventType);
    v9 = type metadata accessor for ActivityParticipantEvent.EventType(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v37 = sub_1C142557C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v7, v8, v37);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        goto LABEL_11;
      }
      *v7 = *v8;
      v7[1] = v8[1];
      v11 = (int *)type metadata accessor for Activity();
      v12 = v11[5];
      v59 = (char *)v7 + v12;
      v13 = (char *)v8 + v12;
      v14 = sub_1C1425978();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v59, v13, v14);
      v16 = v11[6];
      v17 = (char *)v7 + v16;
      v18 = (char *)v8 + v16;
      sub_1C1425A08();
      swift_getEnumCaseMultiPayload();
      v19 = sub_1C1425AEC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      swift_storeEnumTagMultiPayload();
      *(_QWORD *)((char *)v7 + v11[7]) = *(_QWORD *)((char *)v8 + v11[7]);
      v20 = v11[8];
      v60 = (char *)v7 + v20;
      v21 = (char *)v8 + v20;
      v22 = sub_1C14251B0();
      v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
      swift_bridgeObjectRetain();
      v23(v60, v21, v22);
      *((_BYTE *)v7 + v11[9]) = *((_BYTE *)v8 + v11[9]);
      v24 = v11[10];
      v25 = (_QWORD *)((char *)v7 + v24);
      v26 = (_QWORD *)((char *)v8 + v24);
      *v25 = *v26;
      v25[1] = v26[1];
      v27 = v11[11];
      v61 = (char *)v7 + v27;
      v28 = (char *)v8 + v27;
      v29 = sub_1C1425450();
      v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
      swift_bridgeObjectRetain();
      v30(v61, v28, v29);
      v31 = v11[12];
      v32 = (char *)v7 + v31;
      v33 = (char *)v8 + v31;
      v34 = sub_1C142557C();
      v35 = *(_QWORD *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      }
      v38 = v11[13];
      v39 = (_QWORD *)((char *)v7 + v38);
      v40 = (_QWORD *)((char *)v8 + v38);
      *v39 = *v40;
      v39[1] = v40[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_11:
  v41 = a3[7];
  v42 = (char *)a1 + v41;
  v43 = (char *)a2 + v41;
  v44 = sub_1C1425558();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 24))(v42, v43, v44);
  v45 = a3[8];
  v46 = (_QWORD *)((char *)a1 + v45);
  v47 = (_QWORD *)((char *)a2 + v45);
  v48 = v47[1];
  *v46 = *v47;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v46[1] = v48;
  v49 = a3[9];
  v50 = (char *)a1 + v49;
  v51 = (char *)a2 + v49;
  v52 = sub_1C1425450();
  v53 = *(_QWORD *)(v52 - 8);
  v54 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v53 + 48);
  v55 = v54(v50, 1, v52);
  v56 = v54(v51, 1, v52);
  if (!v55)
  {
    if (!v56)
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 24))(v50, v51, v52);
      goto LABEL_17;
    }
    (*(void (**)(char *, uint64_t))(v53 + 8))(v50, v52);
    goto LABEL_16;
  }
  if (v56)
  {
LABEL_16:
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791E48);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
LABEL_17:
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  return a1;
}

_OWORD *sub_1C13EADEC(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (_OWORD *)((char *)a1 + v7);
  v9 = (_OWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for ActivityParticipantEvent.EventType(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v35 = sub_1C142557C();
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v8, v9, v35);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      goto LABEL_10;
    }
    *v8 = *v9;
    v12 = (int *)type metadata accessor for Activity();
    v13 = v12[5];
    v14 = (char *)v8 + v13;
    v15 = (char *)v9 + v13;
    v16 = sub_1C1425978();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
    v17 = v12[6];
    v18 = (char *)v8 + v17;
    v19 = (char *)v9 + v17;
    sub_1C1425A08();
    swift_getEnumCaseMultiPayload();
    v20 = sub_1C1425AEC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
    swift_storeEnumTagMultiPayload();
    *(_QWORD *)((char *)v8 + v12[7]) = *(_QWORD *)((char *)v9 + v12[7]);
    v21 = v12[8];
    v22 = (char *)v8 + v21;
    v23 = (char *)v9 + v21;
    v24 = sub_1C14251B0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
    *((_BYTE *)v8 + v12[9]) = *((_BYTE *)v9 + v12[9]);
    *(_OWORD *)((char *)v8 + v12[10]) = *(_OWORD *)((char *)v9 + v12[10]);
    v25 = v12[11];
    v26 = (char *)v8 + v25;
    v27 = (char *)v9 + v25;
    v28 = sub_1C1425450();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v26, v27, v28);
    v29 = v12[12];
    v30 = (char *)v8 + v29;
    v31 = (char *)v9 + v29;
    v32 = sub_1C142557C();
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v30, v31, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    *(_OWORD *)((char *)v8 + v12[13]) = *(_OWORD *)((char *)v9 + v12[13]);
  }
  swift_storeEnumTagMultiPayload();
LABEL_10:
  v36 = a3[7];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  v39 = sub_1C1425558();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
  v40 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  v41 = (char *)a1 + v40;
  v42 = (char *)a2 + v40;
  v43 = sub_1C1425450();
  v44 = *(_QWORD *)(v43 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
  {
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791E48);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v41, v42, v43);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
  }
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  return a1;
}

_QWORD *sub_1C13EB13C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(char *, uint64_t, uint64_t);
  int v51;
  int v52;
  uint64_t v53;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v8 = a3[6];
    v9 = (_OWORD *)((char *)a1 + v8);
    v10 = (_OWORD *)((char *)a2 + v8);
    sub_1C1339004((uint64_t)a1 + v8, type metadata accessor for ActivityParticipantEvent.EventType);
    v11 = type metadata accessor for ActivityParticipantEvent.EventType(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v36 = sub_1C142557C();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v36 - 8) + 32))(v9, v10, v36);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        goto LABEL_11;
      }
      *v9 = *v10;
      v13 = (int *)type metadata accessor for Activity();
      v14 = v13[5];
      v15 = (char *)v9 + v14;
      v16 = (char *)v10 + v14;
      v17 = sub_1C1425978();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      v18 = v13[6];
      v19 = (char *)v9 + v18;
      v20 = (char *)v10 + v18;
      sub_1C1425A08();
      swift_getEnumCaseMultiPayload();
      v21 = sub_1C1425AEC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
      swift_storeEnumTagMultiPayload();
      *(_QWORD *)((char *)v9 + v13[7]) = *(_QWORD *)((char *)v10 + v13[7]);
      v22 = v13[8];
      v23 = (char *)v9 + v22;
      v24 = (char *)v10 + v22;
      v25 = sub_1C14251B0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
      *((_BYTE *)v9 + v13[9]) = *((_BYTE *)v10 + v13[9]);
      *(_OWORD *)((char *)v9 + v13[10]) = *(_OWORD *)((char *)v10 + v13[10]);
      v26 = v13[11];
      v27 = (char *)v9 + v26;
      v28 = (char *)v10 + v26;
      v29 = sub_1C1425450();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
      v30 = v13[12];
      v31 = (char *)v9 + v30;
      v32 = (char *)v10 + v30;
      v33 = sub_1C142557C();
      v34 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
      {
        v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      }
      *(_OWORD *)((char *)v9 + v13[13]) = *(_OWORD *)((char *)v10 + v13[13]);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_11:
  v37 = a3[7];
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  v40 = sub_1C1425558();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 40))(v38, v39, v40);
  v41 = a3[8];
  v42 = (_QWORD *)((char *)a1 + v41);
  v43 = (_QWORD *)((char *)a2 + v41);
  v44 = v43[1];
  *v42 = *v43;
  swift_unknownObjectRelease();
  v42[1] = v44;
  v45 = a3[9];
  v46 = (char *)a1 + v45;
  v47 = (char *)a2 + v45;
  v48 = sub_1C1425450();
  v49 = *(_QWORD *)(v48 - 8);
  v50 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 48);
  v51 = v50(v46, 1, v48);
  v52 = v50(v47, 1, v48);
  if (!v51)
  {
    if (!v52)
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 40))(v46, v47, v48);
      goto LABEL_17;
    }
    (*(void (**)(char *, uint64_t))(v49 + 8))(v46, v48);
    goto LABEL_16;
  }
  if (v52)
  {
LABEL_16:
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791E48);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v46, v47, v48);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
LABEL_17:
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  return a1;
}

uint64_t sub_1C13EB518()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C13EB524(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for ActivityParticipantEvent.EventType(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[6];
    }
    else
    {
      v12 = sub_1C1425558();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[7];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791E48);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[9];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1C13EB5EC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C13EB5F8(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for ActivityParticipantEvent.EventType(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[6];
    }
    else
    {
      v12 = sub_1C1425558();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[7];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791E48);
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[9];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for ActivityParticipantEvent(uint64_t a1)
{
  return sub_1C138479C(a1, qword_1ED796BC8);
}

void sub_1C13EB6D0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for ActivityParticipantEvent.EventType(319);
  if (v0 <= 0x3F)
  {
    sub_1C1425558();
    if (v1 <= 0x3F)
    {
      sub_1C13EB78C();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_1C13EB78C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED791E50)
  {
    sub_1C1425450();
    v0 = sub_1C1426DAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED791E50);
  }
}

_QWORD *sub_1C13EB7E0(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v38 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v38 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = (int *)type metadata accessor for Activity();
    v9 = v8[5];
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1C1425978();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = v8[6];
    v15 = (char *)v4 + v14;
    v16 = (char *)a2 + v14;
    sub_1C1425A08();
    swift_getEnumCaseMultiPayload();
    v17 = sub_1C1425AEC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    swift_storeEnumTagMultiPayload();
    *(_QWORD *)((char *)v4 + v8[7]) = *(_QWORD *)((char *)a2 + v8[7]);
    v18 = v8[8];
    v19 = (char *)v4 + v18;
    v20 = (char *)a2 + v18;
    v21 = sub_1C14251B0();
    v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
    swift_bridgeObjectRetain();
    v22(v19, v20, v21);
    *((_BYTE *)v4 + v8[9]) = *((_BYTE *)a2 + v8[9]);
    v23 = v8[10];
    v24 = (_QWORD *)((char *)v4 + v23);
    v25 = (_QWORD *)((char *)a2 + v23);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = v8[11];
    v28 = (char *)v4 + v27;
    v29 = (char *)a2 + v27;
    v30 = sub_1C1425450();
    v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
    swift_bridgeObjectRetain();
    v31(v28, v29, v30);
    v32 = v8[12];
    v33 = (char *)v4 + v32;
    v34 = (char *)a2 + v32;
    v35 = sub_1C142557C();
    v36 = *(_QWORD *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
    }
    v39 = v8[13];
    v40 = (_QWORD *)((char *)v4 + v39);
    v41 = (_QWORD *)((char *)a2 + v39);
    v42 = v41[1];
    *v40 = *v41;
    v40[1] = v42;
    v43 = a3[6];
    *((_BYTE *)v4 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    *(_OWORD *)((char *)v4 + v43) = *(_OWORD *)((char *)a2 + v43);
    v44 = a3[7];
    v45 = a3[8];
    v46 = (_QWORD *)((char *)v4 + v44);
    v47 = (_QWORD *)((char *)a2 + v44);
    v48 = v47[1];
    *v46 = *v47;
    v46[1] = v48;
    *((_BYTE *)v4 + v45) = *((_BYTE *)a2 + v45);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1C13EBA84(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_bridgeObjectRelease();
  v2 = (int *)type metadata accessor for Activity();
  v3 = a1 + v2[5];
  v4 = sub_1C1425978();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = a1 + v2[6];
  sub_1C1425A08();
  v6 = sub_1C1425AEC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  v7 = a1 + v2[8];
  v8 = sub_1C14251B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  v9 = a1 + v2[11];
  v10 = sub_1C1425450();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + v2[12];
  v12 = sub_1C142557C();
  v13 = *(_QWORD *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1C13EBBE4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = (int *)type metadata accessor for Activity();
  v8 = v7[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1C1425978();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v13 = v7[6];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  sub_1C1425A08();
  swift_getEnumCaseMultiPayload();
  v16 = sub_1C1425AEC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)((char *)a1 + v7[7]) = *(_QWORD *)((char *)a2 + v7[7]);
  v17 = v7[8];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = sub_1C14251B0();
  v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  swift_bridgeObjectRetain();
  v21(v18, v19, v20);
  *((_BYTE *)a1 + v7[9]) = *((_BYTE *)a2 + v7[9]);
  v22 = v7[10];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  v26 = v7[11];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = sub_1C1425450();
  v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
  swift_bridgeObjectRetain();
  v30(v27, v28, v29);
  v31 = v7[12];
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  v34 = sub_1C142557C();
  v35 = *(_QWORD *)(v34 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
  {
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  }
  v37 = v7[13];
  v38 = (_QWORD *)((char *)a1 + v37);
  v39 = (_QWORD *)((char *)a2 + v37);
  v40 = v39[1];
  *v38 = *v39;
  v38[1] = v40;
  v41 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  *(_OWORD *)((char *)a1 + v41) = *(_OWORD *)((char *)a2 + v41);
  v42 = a3[7];
  v43 = a3[8];
  v44 = (_QWORD *)((char *)a1 + v42);
  v45 = (_QWORD *)((char *)a2 + v42);
  v46 = v45[1];
  *v44 = *v45;
  v44[1] = v46;
  *((_BYTE *)a1 + v43) = *((_BYTE *)a2 + v43);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1C13EBE5C(_QWORD *a1, _QWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (int *)type metadata accessor for Activity();
  v7 = v6[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C1425978();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  if (a1 != a2)
  {
    v11 = v6[6];
    v12 = (char *)a2 + v11;
    v13 = (char *)a1 + v11;
    sub_1C1339004((uint64_t)a1 + v11, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
    sub_1C1425A08();
    swift_getEnumCaseMultiPayload();
    v14 = sub_1C1425AEC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v13, v12, v14);
    swift_storeEnumTagMultiPayload();
  }
  *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = v6[8];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_1C14251B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  *((_BYTE *)a1 + v6[9]) = *((_BYTE *)a2 + v6[9]);
  v19 = v6[10];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = v6[11];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = sub_1C1425450();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
  v26 = v6[12];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = sub_1C142557C();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
  v32 = v31(v27, 1, v29);
  v33 = v31(v28, 1, v29);
  if (!v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 24))(v27, v28, v29);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v30 + 8))(v27, v29);
    goto LABEL_8;
  }
  if (v33)
  {
LABEL_8:
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_9;
  }
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
LABEL_9:
  v35 = v6[13];
  v36 = (_QWORD *)((char *)a1 + v35);
  v37 = (_QWORD *)((char *)a2 + v35);
  *v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  v38 = a3[6];
  v39 = (_QWORD *)((char *)a1 + v38);
  v40 = (_QWORD *)((char *)a2 + v38);
  v41 = v40[1];
  *v39 = *v40;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v39[1] = v41;
  v42 = a3[7];
  v43 = (_QWORD *)((char *)a1 + v42);
  v44 = (_QWORD *)((char *)a2 + v42);
  *v43 = *v44;
  v43[1] = v44[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

_OWORD *sub_1C13EC17C(_OWORD *a1, _OWORD *a2, int *a3)
{
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  *a1 = *a2;
  v6 = (int *)type metadata accessor for Activity();
  v7 = v6[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C1425978();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = v6[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  sub_1C1425A08();
  swift_getEnumCaseMultiPayload();
  v14 = sub_1C1425AEC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
  v15 = v6[8];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_1C14251B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  *((_BYTE *)a1 + v6[9]) = *((_BYTE *)a2 + v6[9]);
  *(_OWORD *)((char *)a1 + v6[10]) = *(_OWORD *)((char *)a2 + v6[10]);
  v19 = v6[11];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_1C1425450();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = v6[12];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = sub_1C142557C();
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  *(_OWORD *)((char *)a1 + v6[13]) = *(_OWORD *)((char *)a2 + v6[13]);
  v29 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  *(_OWORD *)((char *)a1 + v29) = *(_OWORD *)((char *)a2 + v29);
  v30 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *((_BYTE *)a1 + v30) = *((_BYTE *)a2 + v30);
  return a1;
}

_QWORD *sub_1C13EC38C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = (int *)type metadata accessor for Activity();
  v8 = v7[5];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1C1425978();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  if (a1 != a2)
  {
    v12 = v7[6];
    v13 = (char *)a2 + v12;
    v14 = (char *)a1 + v12;
    sub_1C1339004((uint64_t)a1 + v12, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
    sub_1C1425A08();
    swift_getEnumCaseMultiPayload();
    v15 = sub_1C1425AEC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v14, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  *(_QWORD *)((char *)a1 + v7[7]) = *(_QWORD *)((char *)a2 + v7[7]);
  swift_bridgeObjectRelease();
  v16 = v7[8];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_1C14251B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  *((_BYTE *)a1 + v7[9]) = *((_BYTE *)a2 + v7[9]);
  v20 = v7[10];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  v25 = v7[11];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = sub_1C1425450();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(v26, v27, v28);
  v29 = v7[12];
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  v32 = sub_1C142557C();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34(v31, 1, v32);
  if (!v35)
  {
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 40))(v30, v31, v32);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v33 + 8))(v30, v32);
    goto LABEL_8;
  }
  if (v36)
  {
LABEL_8:
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_9;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v30, v31, v32);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
LABEL_9:
  v38 = v7[13];
  v39 = (_QWORD *)((char *)a1 + v38);
  v40 = (_QWORD *)((char *)a2 + v38);
  v42 = *v40;
  v41 = v40[1];
  *v39 = v42;
  v39[1] = v41;
  swift_bridgeObjectRelease();
  v43 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  v44 = (char *)a1 + v43;
  v45 = *(_QWORD *)((char *)a2 + v43 + 8);
  *(_QWORD *)((char *)a1 + v43) = *(_QWORD *)((char *)a2 + v43);
  swift_unknownObjectRelease();
  *((_QWORD *)v44 + 1) = v45;
  v46 = a3[7];
  v47 = (_QWORD *)((char *)a1 + v46);
  v48 = (_QWORD *)((char *)a2 + v46);
  v50 = *v48;
  v49 = v48[1];
  *v47 = v50;
  v47[1] = v49;
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

uint64_t sub_1C13EC658()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C13EC664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Activity();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1C13EC6E0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C13EC6EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Activity();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for ActivityManagerEvent(uint64_t a1)
{
  return sub_1C138479C(a1, qword_1ED796080);
}

uint64_t sub_1C13EC778()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Activity();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1C13EC80C()
{
  unint64_t result;

  result = qword_1EF6DC160;
  if (!qword_1EF6DC160)
  {
    result = MEMORY[0x1C3BAD334](&unk_1C142AFC0, &type metadata for ActivityManagerEvent.EventType);
    atomic_store(result, (unint64_t *)&qword_1EF6DC160);
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityEventPriority()
{
  return &type metadata for ActivityEventPriority;
}

uint64_t _s11SessionCore13ActivityStateV5StateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C13EC8B0 + 4 * byte_1C142ADDF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C13EC8E4 + 4 * byte_1C142ADDA[v4]))();
}

uint64_t sub_1C13EC8E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C13EC8EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C13EC8F4);
  return result;
}

uint64_t sub_1C13EC900(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C13EC908);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C13EC90C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C13EC914(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityState.State()
{
  return &type metadata for ActivityState.State;
}

unint64_t sub_1C13EC934()
{
  unint64_t result;

  result = qword_1EF6DC168;
  if (!qword_1EF6DC168)
  {
    result = MEMORY[0x1C3BAD334](&unk_1C142B04C, &type metadata for ActivityState.State);
    atomic_store(result, (unint64_t *)&qword_1EF6DC168);
  }
  return result;
}

unint64_t sub_1C13EC97C()
{
  unint64_t result;

  result = qword_1EF6DC170;
  if (!qword_1EF6DC170)
  {
    result = MEMORY[0x1C3BAD334](&unk_1C142B0B4, &type metadata for ActivityEventPriority);
    atomic_store(result, (unint64_t *)&qword_1EF6DC170);
  }
  return result;
}

uint64_t sub_1C13EC9C0(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  _BYTE *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  void (*v29)(_BYTE *, uint64_t, uint64_t);
  NSObject *v30;
  os_log_type_t v31;
  int v32;
  _BOOL4 v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  void (*v37)(_BYTE *, uint64_t);
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _BYTE *v42;
  id v43;
  void (*v44)(_BYTE *, uint64_t);
  uint64_t v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _BYTE *v52;
  uint64_t v53;
  _BYTE *v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  _BYTE v69[4];
  int v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  _BYTE *v77;
  uint64_t v78;
  uint64_t v79;
  _BYTE *v80;
  _BYTE *v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(_QWORD, _QWORD);
  _BYTE *v85;
  void (*v86)(_QWORD, _QWORD, _QWORD);
  _BYTE *v87;
  _BYTE *v88;
  _QWORD *v89;
  _BYTE *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  uint64_t aBlock[6];
  uint64_t v98;

  v93 = a3;
  v94 = a4;
  v72 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DC178);
  MEMORY[0x1E0C80A78](v5);
  v85 = &v69[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1C1425BA0();
  v82 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v81 = &v69[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v79 = sub_1C1425C3C();
  v78 = *(_QWORD *)(v79 - 8);
  MEMORY[0x1E0C80A78](v79);
  v77 = &v69[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_1C1425C0C();
  v75 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v74 = &v69[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DC180);
  MEMORY[0x1E0C80A78](v12);
  v90 = &v69[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v92 = sub_1C1425A2C();
  v96 = *(_QWORD *)(v92 - 8);
  MEMORY[0x1E0C80A78](v92);
  v80 = &v69[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = sub_1C1425C48();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v87 = &v69[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = &v69[-v20];
  MEMORY[0x1E0C80A78](v19);
  v23 = &v69[-v22];
  v24 = (_QWORD *)sub_1C1426854();
  v89 = (_QWORD *)*(v24 - 1);
  v25 = MEMORY[0x1E0C80A78](v24);
  v88 = &v69[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v25);
  v28 = &v69[-v27];
  sub_1C142683C();
  v29 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v16 + 16);
  v29(v23, a1, v15);
  v91 = a1;
  v86 = (void (*)(_QWORD, _QWORD, _QWORD))v29;
  v29(v21, a1, v15);
  v30 = sub_1C1426848();
  v31 = sub_1C1426C80();
  v32 = v31;
  v33 = os_log_type_enabled(v30, v31);
  v83 = v7;
  v95 = v24;
  v76 = v10;
  if (v33)
  {
    v34 = swift_slowAlloc();
    v71 = swift_slowAlloc();
    aBlock[0] = v71;
    *(_DWORD *)v34 = 136446467;
    v70 = v32;
    v35 = sub_1C1425BF4();
    v98 = sub_1C132AD90(v35, v36, aBlock);
    sub_1C1426DB8();
    swift_bridgeObjectRelease();
    v37 = *(void (**)(_BYTE *, uint64_t))(v16 + 8);
    v37(v23, v15);
    *(_WORD *)(v34 + 12) = 2081;
    sub_1C1329AD0((unint64_t *)&unk_1EF6DC190, (uint64_t (*)(uint64_t))MEMORY[0x1E0D8CAA0], MEMORY[0x1E0D8CAA8]);
    v38 = sub_1C1427058();
    v98 = sub_1C132AD90(v38, v39, aBlock);
    sub_1C1426DB8();
    swift_bridgeObjectRelease();
    v84 = (void (*)(_QWORD, _QWORD))v37;
    v37(v21, v15);
    _os_log_impl(&dword_1C1324000, v30, (os_log_type_t)v70, "Requesting alert with identifier: %{public}s; %{private}s",
      (uint8_t *)v34,
      0x16u);
    v40 = v71;
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v40, -1, -1);
    MEMORY[0x1C3BAD3F4](v34, -1, -1);

    v41 = (_QWORD *)v89[1];
    v42 = v28;
    v43 = v95;
  }
  else
  {
    v44 = *(void (**)(_BYTE *, uint64_t))(v16 + 8);
    v44(v23, v15);
    v84 = (void (*)(_QWORD, _QWORD))v44;
    v44(v21, v15);

    v41 = (_QWORD *)v89[1];
    v42 = v28;
    v43 = v24;
  }
  v89 = v41;
  ((void (*)(_BYTE *, id))v41)(v42, v43);
  v45 = v92;
  v46 = v90;
  sub_1C1425BF4();
  sub_1C1424FF4();
  swift_allocObject();
  v47 = sub_1C1424FE8();
  v48 = sub_1C1425C30();
  v50 = v49;
  sub_1C1329AD0(&qword_1EF6DC188, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FFF0], MEMORY[0x1E0C90008]);
  v92 = v47;
  sub_1C1424FDC();
  sub_1C13282B4(v48, v50);
  v51 = v96;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v96 + 56))(v46, 0, 1, v45);
  v52 = v46;
  v53 = (uint64_t)v80;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v51 + 32))(v80, v52, v45);
  v54 = v74;
  sub_1C1425C18();
  v55 = v77;
  sub_1C1425C00();
  (*(void (**)(_BYTE *, uint64_t))(v75 + 8))(v54, v76);
  v56 = v78;
  v57 = v79;
  if ((*(unsigned int (**)(_BYTE *, uint64_t))(v78 + 88))(v55, v79) != *MEMORY[0x1E0D8CA90])
    (*(void (**)(_BYTE *, uint64_t))(v56 + 8))(v55, v57);
  v58 = v73;
  if ((v72 & 1) != 0)
  {
    v59 = sub_1C1425BF4();
    sub_1C13ED424(v53, v59, v60);
    swift_bridgeObjectRelease();
  }
  v61 = v81;
  sub_1C1425B94();
  v62 = swift_allocObject();
  v63 = v94;
  *(_QWORD *)(v62 + 16) = v93;
  *(_QWORD *)(v62 + 24) = v63;
  swift_beginAccess();
  v95 = (id)*__swift_project_boxed_opaque_existential_1((_QWORD *)(v58 + 32), *(_QWORD *)(v58 + 56));
  swift_retain();
  v64 = (void *)sub_1C1426A7C();
  sub_1C1329AD0((unint64_t *)&unk_1EF6DBB20, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FFF0], MEMORY[0x1E0C8FFE8]);
  v65 = (void *)sub_1C1425BB8();
  v66 = (void *)sub_1C1425B7C();
  aBlock[4] = (uint64_t)sub_1C13EE3F8;
  aBlock[5] = v62;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1C13DCF7C;
  aBlock[3] = (uint64_t)&block_descriptor_23;
  v67 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v95, sel_presentAlertWithActivityIdentifier_payload_options_completion_, v64, v65, v66, v67);
  _Block_release(v67);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  (*(void (**)(_BYTE *, uint64_t))(v82 + 8))(v61, v83);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v96 + 8))(v53, v45);
}

uint64_t sub_1C13ED424(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  void *v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  void *v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  void *v53;
  uint64_t v55;
  id v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60[2];

  v60[1] = *(id *)MEMORY[0x1E0C80C00];
  v6 = sub_1C1426854();
  v57 = *(_QWORD *)(v6 - 8);
  v58 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v55 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v55 - v14;
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v55 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v55 - v19;
  v21 = sub_1C13EE400();
  v22 = *(void **)(v3 + 72);
  v60[0] = 0;
  v56 = v21;
  v23 = objc_msgSend(v22, sel_resolveBehaviorForEventDetails_error_);
  if (!v23)
  {
    v31 = v60[0];
    v32 = (void *)sub_1C1425078();

    swift_willThrow();
    sub_1C142683C();
    swift_bridgeObjectRetain();
    v33 = v32;
    swift_bridgeObjectRetain();
    v34 = v32;
    v35 = sub_1C1426848();
    v36 = sub_1C1426C68();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc();
      v38 = (void *)swift_slowAlloc();
      v60[0] = v38;
      *(_DWORD *)v37 = 136446466;
      swift_bridgeObjectRetain();
      v59 = sub_1C132AD90(a2, a3, (uint64_t *)v60);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v37 + 12) = 2082;
      swift_getErrorValue();
      v39 = sub_1C1427088();
      v59 = sub_1C132AD90(v39, v40, (uint64_t *)v60);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C1324000, v35, v36, "%{public}s Could not determine interruption suppression state: %{public}s", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v38, -1, -1);
      MEMORY[0x1C3BAD3F4](v37, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v57 + 8))(v9, v58);
    return 1;
  }
  v24 = v23;
  v25 = v60[0];
  v26 = objc_msgSend(v24, sel_interruptionSuppression);
  if (!v26)
  {
    sub_1C142683C();
    swift_bridgeObjectRetain_n();
    v42 = sub_1C1426848();
    v43 = sub_1C1426C80();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc();
      v45 = (void *)swift_slowAlloc();
      v60[0] = v45;
      *(_DWORD *)v44 = 136446210;
      swift_bridgeObjectRetain();
      v59 = sub_1C132AD90(a2, a3, (uint64_t *)v60);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v42, v43, "%{public}s DND says suppression state is none", v44, 0xCu);
      v41 = 1;
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v45, -1, -1);
      MEMORY[0x1C3BAD3F4](v44, -1, -1);

      (*(void (**)(char *, uint64_t))(v57 + 8))(v15, v58);
      return v41;
    }

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v15, v58);
    return 1;
  }
  if (v26 == (id)1)
  {
    sub_1C142683C();
    swift_bridgeObjectRetain_n();
    v46 = sub_1C1426848();
    v47 = sub_1C1426C80();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      v49 = (void *)swift_slowAlloc();
      v60[0] = v49;
      *(_DWORD *)v48 = 136446210;
      swift_bridgeObjectRetain();
      v59 = sub_1C132AD90(a2, a3, (uint64_t *)v60);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v46, v47, "%{public}s DND says suppression state is silence", v48, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v49, -1, -1);
      MEMORY[0x1C3BAD3F4](v48, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(char *, uint64_t))(v57 + 8))(v18, v58);
  }
  else if (v26 == (id)2)
  {
    sub_1C142683C();
    swift_bridgeObjectRetain_n();
    v27 = sub_1C1426848();
    v28 = sub_1C1426C80();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      v30 = (void *)swift_slowAlloc();
      v60[0] = v30;
      *(_DWORD *)v29 = 136446210;
      swift_bridgeObjectRetain();
      v59 = sub_1C132AD90(a2, a3, (uint64_t *)v60);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v27, v28, "%{public}s DND says suppression state is delayDelivery", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v30, -1, -1);
      MEMORY[0x1C3BAD3F4](v29, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v57 + 8))(v20, v58);
  }
  else
  {
    sub_1C142683C();
    swift_bridgeObjectRetain_n();
    v50 = sub_1C1426848();
    v51 = sub_1C1426C68();
    if (os_log_type_enabled(v50, v51))
    {
      v52 = (uint8_t *)swift_slowAlloc();
      v53 = (void *)swift_slowAlloc();
      v60[0] = v53;
      *(_DWORD *)v52 = 136446210;
      swift_bridgeObjectRetain();
      v59 = sub_1C132AD90(a2, a3, (uint64_t *)v60);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v50, v51, "%{public}s DND says suppression state is an unexpected value", v52, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v53, -1, -1);
      MEMORY[0x1C3BAD3F4](v52, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(char *, uint64_t))(v57 + 8))(v12, v58);
  }
  return 0;
}

uint64_t sub_1C13EDD10(uint64_t a1, void (*a2)(char *))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DC178);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v7 = *MEMORY[0x1E0D8CA70];
    v8 = sub_1C1425C24();
    v9 = *(_QWORD *)(v8 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 104))(v6, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  else
  {
    v10 = sub_1C1425C24();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 1, 1, v10);
  }
  a2(v6);
  return sub_1C132C860((uint64_t)v6, &qword_1EF6DC178);
}

void sub_1C13EDE08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void *v19;
  void *v20;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27[3];

  v2 = v1;
  v4 = sub_1C1425C48();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C1426854();
  v25 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C142683C();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v11 = sub_1C1426848();
  v12 = sub_1C1426C80();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v22 = v8;
    v14 = (uint8_t *)v13;
    v15 = swift_slowAlloc();
    v23 = a1;
    v16 = v15;
    v27[0] = v15;
    v24 = v1;
    *(_DWORD *)v14 = 136446210;
    v21[1] = v14 + 4;
    v17 = sub_1C1425BF4();
    v26 = sub_1C132AD90(v17, v18, v27);
    v2 = v24;
    sub_1C1426DB8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _os_log_impl(&dword_1C1324000, v11, v12, "Dismissing alert: %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v16, -1, -1);
    MEMORY[0x1C3BAD3F4](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v22);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v8);
  }
  sub_1C1425BF4();
  swift_beginAccess();
  v19 = (void *)*__swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 56));
  v20 = (void *)sub_1C1426A7C();
  objc_msgSend(v19, sel_dismissAlertWithActivityIdentifier_, v20);
  swift_bridgeObjectRelease();

}

uint64_t sub_1C13EE0A4()
{
  uint64_t v0;

  sub_1C1339040(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AlertPresenter()
{
  return objc_opt_self();
}

uint64_t sub_1C13EE0F8()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x1C3BAD4B4](v0 + 16);
}

uint64_t sub_1C13EE13C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_1C13EE19C(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  v4 = MEMORY[0x1C3BAD4B4](v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v3[3] = v4;
  v3[4] = v5;
  return sub_1C13EE208;
}

void sub_1C13EE208(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + 24) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t sub_1C13EE280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;

  v1 = sub_1C1426854();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (MEMORY[0x1C3BAD4B4](v0 + 16))
  {
    swift_getObjectType();
    sub_1C1425C54();
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_1C142683C();
    v6 = sub_1C1426848();
    v7 = sub_1C1426C68();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1C1324000, v6, v7, "Alert presenter has no delegate", v8, 2u);
      MEMORY[0x1C3BAD3F4](v8, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

uint64_t sub_1C13EE3D4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C13EE3F8(uint64_t a1)
{
  uint64_t v1;

  return sub_1C13EDD10(a1, *(void (**)(char *))(v1 + 16));
}

id sub_1C13EE400()
{
  id v0;
  void *v1;
  void *v2;
  void *v3;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D1D6D8]), sel_init);
  v1 = (void *)sub_1C1426A7C();
  objc_msgSend(v0, sel_setThreadIdentifier_, v1);

  v2 = (void *)sub_1C1426A7C();
  objc_msgSend(v0, sel_setIdentifier_, v2);

  sub_1C1425A14();
  v3 = (void *)sub_1C1426A7C();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setBundleIdentifier_, v3);

  objc_msgSend(v0, sel_setUrgency_, 1);
  return v0;
}

id sub_1C13EE4EC(void *a1)
{
  objc_msgSend(a1, sel_selector);
  if ((sub_1C142524C() & 1) != 0)
    return objc_msgSend(a1, sel_copyAsOnewayVoid);
  else
    return a1;
}

uint64_t sub_1C13EE540(uint64_t a1, void *a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _DWORD *v12;
  id v13;
  objc_class *v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  char *v19;
  id v20;
  uint64_t result;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  char v27;
  id v28;
  _QWORD aBlock[6];
  objc_super v30;

  v25 = a2;
  v26 = a1;
  v24 = sub_1C1426CD4();
  v3 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C1426C8C();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v6);
  v8 = sub_1C14269B0();
  MEMORY[0x1E0C80A78](v8);
  *(_QWORD *)&v2[OBJC_IVAR____TtC11SessionCore54ActivityRemoteSubscriptionPreferencesObservationServer_listener] = 0;
  *(_DWORD *)&v2[OBJC_IVAR____TtC11SessionCore54ActivityRemoteSubscriptionPreferencesObservationServer_serverStartupToken] = -1;
  v9 = OBJC_IVAR____TtC11SessionCore54ActivityRemoteSubscriptionPreferencesObservationServer_lock;
  type metadata accessor for UnfairLock();
  v10 = swift_allocObject();
  v11 = v2;
  v12 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v10 + 16) = v12;
  *v12 = 0;
  *(_QWORD *)&v2[v9] = v10;
  *(_QWORD *)&v11[OBJC_IVAR____TtC11SessionCore54ActivityRemoteSubscriptionPreferencesObservationServer_clients] = MEMORY[0x1E0DEE9E8];
  sub_1C1330F6C();
  sub_1C1426998();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1C1329AD0((unint64_t *)&qword_1ED7939F0, v7, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A70);
  sub_1C132C820((unint64_t *)&qword_1ED797A80, (uint64_t *)&unk_1ED797A70, MEMORY[0x1E0DEAF38]);
  sub_1C1426DF4();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF8D8], v24);
  v13 = v25;
  *(_QWORD *)&v11[OBJC_IVAR____TtC11SessionCore54ActivityRemoteSubscriptionPreferencesObservationServer_requestProcessingQueue] = sub_1C1426D04();
  *(_QWORD *)&v11[OBJC_IVAR____TtC11SessionCore54ActivityRemoteSubscriptionPreferencesObservationServer_replicatorParticipant] = v26;
  swift_retain();

  v14 = (objc_class *)type metadata accessor for ActivityRemoteSubscriptionPreferencesObservationServer();
  v30.receiver = v11;
  v30.super_class = v14;
  v15 = objc_msgSendSuper2(&v30, sel_init);
  v28 = v15;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_1C13EF870;
  *(_QWORD *)(v16 + 24) = &v27;
  aBlock[4] = sub_1C1327D54;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1327D10;
  aBlock[3] = &block_descriptor_28_1;
  v17 = _Block_copy(aBlock);
  v18 = (void *)objc_opt_self();
  v19 = (char *)v15;
  swift_retain();
  v20 = objc_msgSend(v18, sel_listenerWithConfigurator_, v17);
  _Block_release(v17);
  swift_release();
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();

  swift_release();
  result = swift_release();
  if ((v15 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v22 = *(void **)&v19[OBJC_IVAR____TtC11SessionCore54ActivityRemoteSubscriptionPreferencesObservationServer_listener];
    *(_QWORD *)&v19[OBJC_IVAR____TtC11SessionCore54ActivityRemoteSubscriptionPreferencesObservationServer_listener] = v20;

    return (uint64_t)v19;
  }
  return result;
}

id sub_1C13EE8E0(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v10;

  v4 = sub_1C1425EDC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  sub_1C1425840();
  sub_1C1426D70();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1C1425834();
  v8 = (void *)sub_1C1426A7C();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setService_, v8);

  return objc_msgSend(a1, sel_setDelegate_, a2);
}

void sub_1C13EE9C0(void *a1, void *a2, char *a3)
{
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  char *v17;
  id v18;
  uint64_t v19;
  void *v20;
  char *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;

  sub_1C1425834();
  v6 = (void *)sub_1C1426A7C();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithIdentifier_, v6);

  v27 = sub_1C13EE4EC;
  v28 = 0;
  v8 = MEMORY[0x1E0C809B0];
  v23 = MEMORY[0x1E0C809B0];
  v24 = 1107296256;
  v25 = sub_1C13284C8;
  v26 = &block_descriptor_10_5;
  v9 = _Block_copy(&v23);
  v10 = &unk_1EF6E2FF0;
  swift_release();
  v11 = (void *)objc_opt_self();
  v12 = objc_msgSend(v11, sel_protocolForProtocol_interpreter_, v10, v9);

  _Block_release(v9);
  objc_msgSend(v7, sel_setClient_, v12);

  v13 = objc_msgSend(v11, sel_protocolForProtocol_, &unk_1EF6E16C8);
  objc_msgSend(v7, sel_setServer_, v13);

  v14 = objc_msgSend((id)objc_opt_self(), sel_utility);
  objc_msgSend(a1, sel_setServiceQuality_, v14);

  objc_msgSend(a1, sel_setInterface_, v7);
  objc_msgSend(a1, sel_setInterfaceTarget_, a2);
  objc_msgSend(a1, sel_setTargetQueue_, *(_QWORD *)&a3[OBJC_IVAR____TtC11SessionCore54ActivityRemoteSubscriptionPreferencesObservationServer_requestProcessingQueue]);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a3;
  *(_QWORD *)(v15 + 24) = a2;
  v27 = sub_1C13EF830;
  v28 = v15;
  v23 = v8;
  v24 = 1107296256;
  v25 = sub_1C141AFCC;
  v26 = &block_descriptor_16_3;
  v16 = _Block_copy(&v23);
  v17 = a3;
  v18 = a2;
  swift_release();
  objc_msgSend(a1, sel_setInterruptionHandler_, v16);
  _Block_release(v16);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v17;
  *(_QWORD *)(v19 + 24) = v18;
  v27 = sub_1C13EF850;
  v28 = v19;
  v23 = v8;
  v24 = 1107296256;
  v25 = sub_1C141AFCC;
  v26 = &block_descriptor_22_0;
  v20 = _Block_copy(&v23);
  v21 = v17;
  v22 = v18;
  swift_release();
  objc_msgSend(a1, sel_setInvalidationHandler_, v20);
  _Block_release(v20);

}

void sub_1C13EECC4(uint64_t a1, uint64_t a2, void *a3, const char *a4)
{
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  os_unfair_lock_s *v11;
  void *v12;

  if (qword_1EF6DA7D0 != -1)
    swift_once();
  v7 = sub_1C1426854();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EF6DC678);
  v8 = sub_1C1426848();
  v9 = sub_1C1426C68();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_1C1324000, v8, v9, a4, v10, 2u);
    MEMORY[0x1C3BAD3F4](v10, -1, -1);
  }

  v11 = *(os_unfair_lock_s **)(*(_QWORD *)(a2
                                         + OBJC_IVAR____TtC11SessionCore54ActivityRemoteSubscriptionPreferencesObservationServer_lock)
                             + 16);
  os_unfair_lock_lock(v11);
  swift_beginAccess();
  v12 = (void *)sub_1C1354A4C(a3);
  swift_endAccess();
  os_unfair_lock_unlock(v11);

}

id sub_1C13EEEAC(uint64_t a1)
{
  return sub_1C1359EC8(a1, type metadata accessor for ActivityRemoteSubscriptionPreferencesObservationServer);
}

uint64_t type metadata accessor for ActivityRemoteSubscriptionPreferencesObservationServer()
{
  return objc_opt_self();
}

void sub_1C13EEF40(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  void *v13;
  _OWORD v14[2];
  _QWORD v15[4];

  if (objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC11SessionCoreP33_B02F3357A3D0A8E8DFCA3AAB9BED3E036Client_connection), sel_remoteTarget))
  {
    sub_1C1426DE8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v14, 0, sizeof(v14));
  }
  sub_1C1330398((uint64_t)v14, (uint64_t)v15);
  if (v15[3])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791E10);
    if ((swift_dynamicCast() & 1) != 0)
    {
      if ((a2 & 1) != 0)
      {
        swift_unknownObjectRelease();
      }
      else
      {
        sub_1C1425018();
        swift_allocObject();
        sub_1C142500C();
        v15[0] = a1;
        sub_1C13A35AC();
        v5 = sub_1C1425000();
        v7 = v6;
        v8 = (void *)sub_1C14250CC();
        objc_msgSend(v13, sel_subscriptionPreferencesDidChange_, v8);

        swift_unknownObjectRelease();
        sub_1C13282B4(v5, v7);
        swift_release();
      }
      return;
    }
  }
  else
  {
    sub_1C132C860((uint64_t)v15, (uint64_t *)&unk_1ED797BB0);
  }
  if (qword_1EF6DA7D0 != -1)
    swift_once();
  v9 = sub_1C1426854();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EF6DC678);
  v10 = sub_1C1426848();
  v11 = sub_1C1426C68();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_1C1324000, v10, v11, "No remote target for subscription preferences client connection", v12, 2u);
    MEMORY[0x1C3BAD3F4](v12, -1, -1);
  }

}

id sub_1C13EF1A8()
{
  return sub_1C1359EC8(0, _s11SessionCore6ClientCMa_3);
}

uint64_t _s11SessionCore6ClientCMa_3()
{
  return objc_opt_self();
}

uint64_t sub_1C13EF230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793A00);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791DE8);
  v12 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1C138CE48();
  v14 = *(id *)(v0 + OBJC_IVAR____TtC11SessionCoreP33_B02F3357A3D0A8E8DFCA3AAB9BED3E036Client_requestProcessingQueue);
  v7 = v14;
  v8 = sub_1C1426CA4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v3, 1, 1, v8);
  v9 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7927C0);
  sub_1C1330F6C();
  sub_1C132C820((unint64_t *)&unk_1ED7927B0, &qword_1ED7927C0, MEMORY[0x1E0C95D90]);
  sub_1C1329AD0((unint64_t *)&qword_1ED797AA0, (uint64_t (*)(uint64_t))sub_1C1330F6C, MEMORY[0x1E0DEF7F8]);
  sub_1C1426914();
  sub_1C132C860((uint64_t)v3, (uint64_t *)&unk_1ED793A00);

  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C132C820((unint64_t *)&unk_1ED792790, &qword_1ED791DE8, MEMORY[0x1E0C95CB8]);
  sub_1C1426938();
  swift_release();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v6, v4);
  swift_beginAccess();
  sub_1C14268A8();
  swift_endAccess();
  return swift_release();
}

void sub_1C13EF494(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;

  v2 = *(_QWORD *)a1;
  v3 = *(_BYTE *)(a1 + 8);
  v4 = a2 + 16;
  swift_beginAccess();
  v5 = MEMORY[0x1C3BAD4B4](v4);
  if (v5)
  {
    v6 = (void *)v5;
    sub_1C13EEF40(v2, v3);

  }
}

uint64_t sub_1C13EF578()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1C13EF59C(uint64_t a1)
{
  uint64_t v1;

  sub_1C13EF494(a1, v1);
}

void sub_1C13EF5A4(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  void *v5;
  objc_class *v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  os_unfair_lock_s *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  char *v17;
  _QWORD aBlock[6];
  id v19;
  objc_super v20;

  v2 = v1;
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC11SessionCore54ActivityRemoteSubscriptionPreferencesObservationServer_replicatorParticipant];
  v5 = *(void **)&v2[OBJC_IVAR____TtC11SessionCore54ActivityRemoteSubscriptionPreferencesObservationServer_requestProcessingQueue];
  v6 = (objc_class *)_s11SessionCore6ClientCMa_3();
  v7 = (char *)objc_allocWithZone(v6);
  *(_QWORD *)&v7[OBJC_IVAR____TtC11SessionCoreP33_B02F3357A3D0A8E8DFCA3AAB9BED3E036Client_cancellables] = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&v7[OBJC_IVAR____TtC11SessionCoreP33_B02F3357A3D0A8E8DFCA3AAB9BED3E036Client_connection] = a1;
  *(_QWORD *)&v7[OBJC_IVAR____TtC11SessionCoreP33_B02F3357A3D0A8E8DFCA3AAB9BED3E036Client_replicatorParticipant] = v4;
  *(_QWORD *)&v7[OBJC_IVAR____TtC11SessionCoreP33_B02F3357A3D0A8E8DFCA3AAB9BED3E036Client_requestProcessingQueue] = v5;
  v20.receiver = v7;
  v20.super_class = v6;
  v8 = a1;
  swift_retain();
  v9 = v5;
  v10 = objc_msgSendSuper2(&v20, sel_init);
  v11 = *(os_unfair_lock_s **)(*(_QWORD *)&v2[OBJC_IVAR____TtC11SessionCore54ActivityRemoteSubscriptionPreferencesObservationServer_lock]
                             + 16);
  os_unfair_lock_lock(v11);
  swift_beginAccess();
  v12 = v10;
  sub_1C13506E8(&v19, v12);
  swift_endAccess();
  os_unfair_lock_unlock(v11);

  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v12;
  *(_QWORD *)(v13 + 24) = v2;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_1C13EF7EC;
  *(_QWORD *)(v14 + 24) = v13;
  aBlock[4] = sub_1C1327D4C;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1327D10;
  aBlock[3] = &block_descriptor_24;
  v15 = _Block_copy(aBlock);
  v16 = v12;
  v17 = v2;
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_configureConnection_, v15);
  _Block_release(v15);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v2 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(v8, sel_activate);
    swift_release();

  }
}

void sub_1C13EF7EC(void *a1)
{
  uint64_t v1;

  sub_1C13EE9C0(a1, *(void **)(v1 + 16), *(char **)(v1 + 24));
}

uint64_t sub_1C13EF7F4()
{
  return swift_deallocObject();
}

uint64_t sub_1C13EF804()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1C13EF830(uint64_t a1)
{
  uint64_t v1;

  sub_1C13EECC4(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), "Connection interrupted");
}

void sub_1C13EF850(uint64_t a1)
{
  uint64_t v1;

  sub_1C13EECC4(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), "Connection invalidated");
}

id sub_1C13EF870(void *a1)
{
  uint64_t v1;

  return sub_1C13EE8E0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1C13EF878()
{
  return swift_deallocObject();
}

id sub_1C13EF8A8(void *a1, _QWORD *a2)
{
  id result;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  result = objc_msgSend(a1, sel_bundleIdentifier);
  if (result)
  {
    v4 = result;
    v5 = sub_1C1426A88();
    v7 = v6;

    v8 = a2 + 2;
    v10 = a2[5];
    v9 = a2[6];
    __swift_project_boxed_opaque_existential_1(v8, v10);
    LOBYTE(v9) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8))(v5, v7, v10, v9);
    swift_bridgeObjectRelease();
    return (id)(v9 & 1);
  }
  return result;
}

uint64_t type metadata accessor for PushToStartAppBundleIDProvider()
{
  return objc_opt_self();
}

uint64_t sub_1C13EF95C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(*(_QWORD *)v2 + 40);
  v6 = *(_QWORD *)(*(_QWORD *)v2 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v2 + 16), v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(a1, a2, v5, v6) & 1;
}

uint64_t sub_1C13EF9C0(uint64_t a1, uint64_t a2)
{
  id v4;
  void *v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  _OWORD v11[2];
  _BYTE v12[24];
  uint64_t v13;

  objc_allocWithZone(MEMORY[0x1E0CA5870]);
  swift_bridgeObjectRetain();
  v4 = sub_1C13278E4(a1, a2, 0);
  v6 = v4;
  if (v4)
  {
    v7 = objc_msgSend(v4, sel_entitlements);
    v8 = (void *)sub_1C1426A7C();
    sub_1C13B22EC();
    v9 = objc_msgSend(v7, sel_objectForKey_ofClass_, v8, swift_getObjCClassFromMetadata());

    if (v9)
    {
      sub_1C1426DE8();
      swift_unknownObjectRelease();

    }
    else
    {

      memset(v11, 0, sizeof(v11));
    }
    sub_1C1330398((uint64_t)v11, (uint64_t)v12);
    if (v13)
    {
      if ((swift_dynamicCast() & 1) != 0)
        return v10;
    }
    else
    {
      sub_1C13A9D80((uint64_t)v12);
    }
  }
  return 0;
}

uint64_t sub_1C13EFB34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t result;
  int64_t v23;
  unint64_t v24;
  unint64_t i;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  char *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v49 = a3;
  v40 = a4;
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
  v7 = MEMORY[0x1E0C80A78](v45);
  v44 = (uint64_t *)((char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v39 - v9);
  v11 = sub_1C14251B0();
  v12 = MEMORY[0x1E0C80A78](v11);
  v43 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v39 - v14;
  v46 = v17;
  v47 = v16;
  (*(void (**)(char *, uint64_t))(v17 + 16))((char *)&v39 - v14, a1);
  v18 = *(_QWORD *)(a2 + 64);
  v41 = a2 + 64;
  v19 = 1 << *(_BYTE *)(a2 + 32);
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  v21 = v20 & v18;
  v42 = (unint64_t)(v19 + 63) >> 6;
  v48 = a2;
  result = swift_bridgeObjectRetain();
  v23 = 0;
  if (!v21)
    goto LABEL_5;
LABEL_4:
  v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  for (i = v24 | (v23 << 6); ; i = __clz(__rbit64(v27)) + (v23 << 6))
  {
    v29 = *(_QWORD *)(v48 + 56);
    v30 = (uint64_t *)(*(_QWORD *)(v48 + 48) + 16 * i);
    v32 = *v30;
    v31 = v30[1];
    v33 = type metadata accessor for Activity();
    sub_1C1338F24(v29 + *(_QWORD *)(*(_QWORD *)(v33 - 8) + 72) * i, (uint64_t)v10 + *(int *)(v45 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    *v10 = v32;
    v10[1] = v31;
    v34 = v44;
    sub_1C132A724((uint64_t)v10, (uint64_t)v44, &qword_1ED7939D8);
    swift_bridgeObjectRetain();
    v35 = v43;
    sub_1C13F0D48(v15, v34, v49, v43);
    if (v4)
    {
      sub_1C132C860((uint64_t)v34, &qword_1ED7939D8);
      swift_release();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v15, v47);
      return swift_release();
    }
    sub_1C132C860((uint64_t)v34, &qword_1ED7939D8);
    v37 = v46;
    v36 = v47;
    (*(void (**)(char *, uint64_t))(v46 + 8))(v15, v47);
    result = (*(uint64_t (**)(char *, char *, uint64_t))(v37 + 32))(v15, v35, v36);
    if (v21)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v23++, 1))
      break;
    if (v23 >= v42)
      goto LABEL_26;
    v27 = *(_QWORD *)(v41 + 8 * v23);
    if (!v27)
    {
      v28 = v23 + 1;
      if (v23 + 1 >= v42)
        goto LABEL_26;
      v27 = *(_QWORD *)(v41 + 8 * v28);
      if (v27)
        goto LABEL_16;
      v28 = v23 + 2;
      if (v23 + 2 >= v42)
        goto LABEL_26;
      v27 = *(_QWORD *)(v41 + 8 * v28);
      if (v27)
        goto LABEL_16;
      v28 = v23 + 3;
      if (v23 + 3 >= v42)
        goto LABEL_26;
      v27 = *(_QWORD *)(v41 + 8 * v28);
      if (v27)
      {
LABEL_16:
        v23 = v28;
        goto LABEL_17;
      }
      v28 = v23 + 4;
      if (v23 + 4 < v42)
      {
        v27 = *(_QWORD *)(v41 + 8 * v28);
        if (!v27)
        {
          while (1)
          {
            v23 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_29;
            if (v23 >= v42)
              goto LABEL_26;
            v27 = *(_QWORD *)(v41 + 8 * v23);
            ++v28;
            if (v27)
              goto LABEL_17;
          }
        }
        goto LABEL_16;
      }
LABEL_26:
      v38 = v40;
      swift_release();
      (*(void (**)(uint64_t, char *, uint64_t))(v46 + 32))(v38, v15, v47);
      return swift_release();
    }
LABEL_17:
    v21 = (v27 - 1) & v27;
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for StaleParticipant()
{
  return objc_opt_self();
}

void sub_1C13EFEC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[8];
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;

  v26[7] = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797560);
  MEMORY[0x1E0C80A78](v3);
  v30 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ActivityManagerEvent(0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v28 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v26[3] = (char *)v26 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v26[2] = (char *)v26 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v26[0] = (char *)v26 - v13;
  MEMORY[0x1E0C80A78](v12);
  v26[4] = (char *)v26 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B60);
  v16 = MEMORY[0x1E0C80A78](v15);
  v17 = MEMORY[0x1E0C80A78](v16);
  v26[6] = (char *)v26 - v18;
  MEMORY[0x1E0C80A78](v17);
  v26[1] = (char *)v26 - v19;
  v29 = sub_1C14253E4();
  v20 = MEMORY[0x1E0C80A78](v29);
  v21 = MEMORY[0x1E0C80A78](v20);
  v26[5] = (char *)v26 - v22;
  MEMORY[0x1E0C80A78](v21);
  v27 = sub_1C14251B0();
  v23 = MEMORY[0x1E0C80A78](v27);
  MEMORY[0x1E0C80A78](v23);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
  MEMORY[0x1E0C80A78](v24);
  v25 = *(int *)(v5 + 20);
  v31 = a1;
  __asm { BR              X10 }
}

void sub_1C13F0188()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (qword_1ED791EB0 != -1)
    swift_once();
  v1 = sub_1C1426854();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED798550);
  v2 = *(uint64_t **)(v0 - 120);
  v3 = *(uint64_t **)(v0 - 152);
  sub_1C1338F24((uint64_t)v2, (uint64_t)v3, type metadata accessor for ActivityManagerEvent);
  v4 = sub_1C1426848();
  v5 = sub_1C1426C80();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    *(_QWORD *)(v0 - 104) = v7;
    *(_DWORD *)v6 = 136446210;
    v8 = (uint64_t)v3;
    v9 = *v3;
    v10 = *(_QWORD *)(v8 + 8);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 - 112) = sub_1C132AD90(v9, v10, (uint64_t *)(v0 - 104));
    sub_1C1426DB8();
    swift_bridgeObjectRelease();
    sub_1C1339004(v8, type metadata accessor for ActivityManagerEvent);
    _os_log_impl(&dword_1C1324000, v4, v5, "Activity is no longer relevant %{public}s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v7, -1, -1);
    MEMORY[0x1C3BAD3F4](v6, -1, -1);
  }
  else
  {
    sub_1C1339004((uint64_t)v3, type metadata accessor for ActivityManagerEvent);
  }

  v11 = *(_QWORD **)(v0 - 128);
  v12 = *(os_unfair_lock_s **)(v11[2] + 16);
  os_unfair_lock_lock(v12);
  v13 = *v2;
  v14 = v2[1];
  v15 = type metadata accessor for Activity();
  v16 = *(_QWORD *)(v0 - 136);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v16, 1, 1, v15);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1C13B396C(v16, v13, v14);
  swift_endAccess();
  os_unfair_lock_unlock(v12);
  os_unfair_lock_lock(v12);
  sub_1C13F1198(v11);
  os_unfair_lock_unlock(v12);
}

uint64_t sub_1C13F0D48@<X0>(char *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  char *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  void (*v50)(char *, uint64_t);
  char v51;
  void (*v52)(char *, char *, uint64_t);
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  void (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;

  v68 = a3;
  v72 = a4;
  v73 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B60);
  MEMORY[0x1E0C80A78](v5);
  v71 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C14253E4();
  v69 = *(_QWORD *)(v7 - 8);
  v70 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C1425450();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v65 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v58 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
  v17 = MEMORY[0x1E0C80A78](v16);
  v60 = (void (**)(char *, uint64_t, uint64_t))((char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v17);
  v20 = (void (**)(char *, uint64_t, uint64_t))((char *)&v58 - v19);
  v21 = sub_1C14251B0();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x1E0C80A78](v21);
  v66 = (char *)&v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v23);
  v62 = (char *)&v58 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v64 = (char *)&v58 - v28;
  MEMORY[0x1E0C80A78](v27);
  v63 = (char *)&v58 - v29;
  v61 = v16;
  v30 = *(int *)(v16 + 48);
  v31 = (uint64_t)v20 + v30;
  v32 = (uint64_t)a2 + v30;
  v33 = *a2;
  v34 = a2[1];
  v67 = a2;
  *v20 = v33;
  v20[1] = v34;
  v59 = v32;
  sub_1C1338F24(v32, v31, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
  v35 = type metadata accessor for Activity();
  v36 = v31 + *(int *)(v35 + 44);
  v58 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v58(v15, v36, v10);
  v37 = v31;
  v38 = v10;
  sub_1C1339004(v37, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
  sub_1C142542C();
  v39 = *(void (**)(char *, uint64_t))(v11 + 8);
  v39(v15, v10);
  v40 = (uint64_t)v71;
  sub_1C14253D8();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v9, v70);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v40, 1, v21) == 1)
  {
    sub_1C132C860(v40, &qword_1ED793B60);
    return (*(uint64_t (**)(char *, char *, uint64_t))(v22 + 16))(v72, v73, v21);
  }
  else
  {
    v42 = v63;
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(v63, v40, v21);
    v43 = v60;
    v44 = (uint64_t)v60 + *(int *)(v61 + 48);
    v45 = v67[1];
    *v60 = *v67;
    v43[1] = v45;
    sub_1C1338F24(v59, v44, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    v46 = v44 + *(int *)(v35 + 44);
    v47 = v65;
    v58(v65, v46, v38);
    sub_1C1339004(v44, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    v48 = v62;
    sub_1C1425438();
    v39(v47, v38);
    v49 = v64;
    sub_1C142512C();
    v50 = *(void (**)(char *, uint64_t))(v22 + 8);
    v50(v48, v21);
    sub_1C13C6714();
    v51 = sub_1C1426A64();
    v52 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
    if ((v51 & 1) != 0)
      v53 = v42;
    else
      v53 = v49;
    v54 = v66;
    v52(v66, v53, v21);
    v55 = v73;
    if ((sub_1C1426A58() & 1) != 0)
    {
      v56 = v72;
      v57 = v55;
    }
    else
    {
      v56 = v72;
      v57 = v54;
    }
    v52(v56, v57, v21);
    v50(v54, v21);
    v50(v49, v21);
    return ((uint64_t (*)(char *, uint64_t))v50)(v42, v21);
  }
}

uint64_t sub_1C13F1198(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  char *v16;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[40];
  _QWORD v29[4];
  __int128 v30;
  __int128 v31;
  uint64_t v32;

  v23 = sub_1C1425E88();
  v22 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v24 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1C1425EA0();
  v26 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v25 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C14251B0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v22 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v22 - v12;
  swift_beginAccess();
  sub_1C132C344((uint64_t)(a1 + 9), (uint64_t)&v30, &qword_1ED797918);
  if (*((_QWORD *)&v31 + 1))
  {
    sub_1C132E0A8((uint64_t)&v30, (uint64_t)v29);
    sub_1C132C860((uint64_t)&v30, &qword_1ED797918);
    __swift_project_boxed_opaque_existential_1(v29, v29[3]);
    sub_1C142689C();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  }
  else
  {
    sub_1C132C860((uint64_t)&v30, &qword_1ED797918);
  }
  v32 = 0;
  v30 = 0u;
  v31 = 0u;
  swift_beginAccess();
  sub_1C13C62D4((uint64_t)&v30, (uint64_t)(a1 + 9));
  swift_endAccess();
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(a1[2] + 16));
  swift_beginAccess();
  v14 = a1[14];
  swift_bridgeObjectRetain();
  sub_1C1425114();
  swift_retain();
  sub_1C13EFB34((uint64_t)v8, v14, (uint64_t)a1, (uint64_t)v11);
  v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v8, v4);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v13, v11, v4);
  sub_1C1425114();
  LOBYTE(v14) = sub_1C1425150();
  v15(v11, v4);
  if ((v14 & 1) != 0)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v11, v13, v4);
    (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v24, *MEMORY[0x1E0D8CD38], v23);
    v16 = v25;
    sub_1C1425E70();
    __swift_project_boxed_opaque_existential_1(a1 + 3, a1[6]);
    swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_1C1425EAC();
    swift_release();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v16, v27);
    v15(v13, v4);
    swift_release();
    sub_1C1339184(&v30, (uint64_t)v29);
    sub_1C132A724((uint64_t)v29, (uint64_t)v28, &qword_1ED797918);
    swift_beginAccess();
    sub_1C13C62D4((uint64_t)v28, (uint64_t)(a1 + 9));
    return swift_endAccess();
  }
  else
  {
    if (qword_1ED791EB0 != -1)
      swift_once();
    v18 = sub_1C1426854();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ED798550);
    v19 = sub_1C1426848();
    v20 = sub_1C1426C80();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_1C1324000, v19, v20, "No more activities with stale dates", v21, 2u);
      MEMORY[0x1C3BAD3F4](v21, -1, -1);
    }

    return ((uint64_t (*)(char *, uint64_t))v15)(v13, v4);
  }
}

uint64_t sub_1C13F1668()
{
  uint64_t result;
  uint64_t v1;
  os_unfair_lock_s *v2;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    v2 = *(os_unfair_lock_s **)(*(_QWORD *)(result + 16) + 16);
    os_unfair_lock_lock(v2);
    sub_1C13F16F0(v1);
    os_unfair_lock_unlock(v2);
    os_unfair_lock_lock(v2);
    sub_1C13F1198(v1);
    os_unfair_lock_unlock(v2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C13F16F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t *v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v2 = type metadata accessor for Activity();
  v41 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7939E0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v6);
  v10 = (uint64_t *)((char *)&v36 - v9);
  v44 = MEMORY[0x1E0DEE9E8];
  v38 = (uint64_t *)(a1 + 112);
  swift_beginAccess();
  v42 = a1;
  v11 = *(_QWORD *)(a1 + 112);
  v12 = *(_QWORD *)(v11 + 64);
  v39 = v11 + 64;
  v13 = 1 << *(_BYTE *)(v11 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v40 = (unint64_t)(v13 + 63) >> 6;
  v37 = v40 - 1;
  result = swift_bridgeObjectRetain();
  v17 = 0;
  if (!v15)
    goto LABEL_8;
LABEL_6:
  v18 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  v19 = v18 | (v17 << 6);
  while (2)
  {
    v20 = *(_QWORD *)(v11 + 56);
    v21 = (_QWORD *)(*(_QWORD *)(v11 + 48) + 16 * v19);
    v22 = v21[1];
    *v8 = *v21;
    v8[1] = v22;
    v23 = v20 + *(_QWORD *)(v41 + 72) * v19;
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
    sub_1C1338F24(v23, (uint64_t)v8 + *(int *)(v24 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v8, 0, 1, v24);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1C132A724((uint64_t)v8, (uint64_t)v10, (uint64_t *)&unk_1ED7939E0);
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v10, 1, v29) == 1)
      {
        v32 = swift_release();
        v33 = v38;
        MEMORY[0x1E0C80A78](v32);
        *(&v36 - 2) = (uint64_t)&v44;
        v34 = swift_bridgeObjectRetain();
        v35 = sub_1C13C65A4(v34, (uint64_t (*)(uint64_t, uint64_t, char *))sub_1C13C6348, (uint64_t)(&v36 - 4));
        swift_bridgeObjectRelease();
        *v33 = v35;
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      v31 = *v10;
      v30 = v10[1];
      sub_1C13A78FC((uint64_t)v10 + *(int *)(v29 + 48), (uint64_t)v4);
      if ((sub_1C13F1AF8((uint64_t)v4) & 1) != 0)
      {
        sub_1C132FAD4(&v43, v31, v30);
        swift_bridgeObjectRelease();
        result = sub_1C1339004((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        if (v15)
          goto LABEL_6;
      }
      else
      {
        sub_1C1339004((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        result = swift_bridgeObjectRelease();
        if (v15)
          goto LABEL_6;
      }
LABEL_8:
      v25 = v17 + 1;
      if (__OFADD__(v17, 1))
      {
        __break(1u);
        goto LABEL_32;
      }
      if (v25 < v40)
      {
        v26 = *(_QWORD *)(v39 + 8 * v25);
        if (v26)
          goto LABEL_11;
        v27 = v17 + 2;
        ++v17;
        if (v25 + 1 < v40)
        {
          v26 = *(_QWORD *)(v39 + 8 * v27);
          if (v26)
            goto LABEL_14;
          v17 = v25 + 1;
          if (v25 + 2 < v40)
          {
            v26 = *(_QWORD *)(v39 + 8 * (v25 + 2));
            if (v26)
            {
              v25 += 2;
              goto LABEL_11;
            }
            v27 = v25 + 3;
            v17 = v25 + 2;
            if (v25 + 3 < v40)
              break;
          }
        }
      }
LABEL_25:
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v8, 1, 1, v28);
      v15 = 0;
    }
    v26 = *(_QWORD *)(v39 + 8 * v27);
    if (v26)
    {
LABEL_14:
      v25 = v27;
LABEL_11:
      v15 = (v26 - 1) & v26;
      v19 = __clz(__rbit64(v26)) + (v25 << 6);
      v17 = v25;
      continue;
    }
    break;
  }
  while (1)
  {
    v25 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v25 >= v40)
    {
      v17 = v37;
      goto LABEL_25;
    }
    v26 = *(_QWORD *)(v39 + 8 * v25);
    ++v27;
    if (v26)
      goto LABEL_11;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1C13F1AF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  char v37;
  void (**v38)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t *v42;
  NSObject *v43;
  os_log_type_t v44;
  _BOOL4 v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (**v55)(uint64_t, uint64_t, uint64_t, uint64_t);
  os_unfair_lock_s *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  char *v68;
  int *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v74;
  char *v75;
  uint64_t *v76;
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t result;
  uint8_t *v84;
  uint64_t *v85;
  uint64_t v86;
  char *v87;
  uint64_t *v88;
  uint64_t *v89;
  void (**v90)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97[3];

  v95 = (uint64_t *)a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797560);
  MEMORY[0x1E0C80A78](v2);
  v91 = (char *)&v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = type metadata accessor for ActivityParticipantEvent(0);
  MEMORY[0x1E0C80A78](v86);
  v87 = (char *)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Activity();
  v90 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 - 8);
  v6 = MEMORY[0x1E0C80A78](v5);
  v89 = (uint64_t *)((char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = MEMORY[0x1E0C80A78](v6);
  v85 = (uint64_t *)((char *)&v84 - v9);
  MEMORY[0x1E0C80A78](v8);
  v88 = (uint64_t *)((char *)&v84 - v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B60);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1C14253E4();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1C14251B0();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v84 - v23;
  v92 = v1;
  if (MEMORY[0x1C3BAD4B4](v1 + 120))
  {
    v93 = v5;
    v25 = (char *)v95 + *(int *)(v5 + 44);
    sub_1C142542C();
    sub_1C14253D8();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v13, 1, v18) == 1)
    {
      sub_1C132C860((uint64_t)v13, &qword_1ED793B60);
      if (qword_1ED791EB0 != -1)
        swift_once();
      v26 = sub_1C1426854();
      __swift_project_value_buffer(v26, (uint64_t)qword_1ED798550);
      v27 = v95;
      v28 = v89;
      sub_1C1338F24((uint64_t)v95, (uint64_t)v89, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      v29 = sub_1C1426848();
      v30 = sub_1C1426C80();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = (uint8_t *)swift_slowAlloc();
        v32 = swift_slowAlloc();
        v97[0] = v32;
        *(_DWORD *)v31 = 136446210;
        v33 = *v28;
        v34 = v28[1];
        swift_bridgeObjectRetain();
        v35 = v33;
        v27 = v95;
        v96 = sub_1C132AD90(v35, v34, v97);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        sub_1C1339004((uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        _os_log_impl(&dword_1C1324000, v29, v30, "Activity has no stale date: %{public}s", v31, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v32, -1, -1);
        MEMORY[0x1C3BAD3F4](v31, -1, -1);
      }
      else
      {
        sub_1C1339004((uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      }

      v54 = (uint64_t)v91;
      v55 = v90;
      v56 = *(os_unfair_lock_s **)(*(_QWORD *)(v92 + 16) + 16);
      os_unfair_lock_lock(v56);
      v57 = *v27;
      v58 = v27[1];
      v55[7](v54, 1, 1, v93);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_1C13B396C(v54, v57, v58);
      swift_endAccess();
      os_unfair_lock_unlock(v56);
    }
    else
    {
      v91 = v25;
      v36 = v24;
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v24, v13, v18);
      sub_1C142518C();
      v37 = sub_1C1425150();
      v38 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8);
      ((void (*)(char *, uint64_t))v38)(v22, v18);
      if ((v37 & 1) != 0)
      {
        if (qword_1ED791EB0 != -1)
          swift_once();
        v39 = sub_1C1426854();
        v40 = __swift_project_value_buffer(v39, (uint64_t)qword_1ED798550);
        v41 = v95;
        v42 = v88;
        sub_1C1338F24((uint64_t)v95, (uint64_t)v88, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        v89 = (uint64_t *)v40;
        v43 = sub_1C1426848();
        v44 = sub_1C1426C80();
        v45 = os_log_type_enabled(v43, v44);
        v90 = v38;
        if (v45)
        {
          v46 = (uint8_t *)swift_slowAlloc();
          v47 = swift_slowAlloc();
          v97[0] = v47;
          *(_DWORD *)v46 = 136446210;
          v84 = v46 + 4;
          v48 = v18;
          v49 = v36;
          v51 = *v42;
          v50 = v42[1];
          swift_bridgeObjectRetain();
          v52 = v51;
          v36 = v49;
          v18 = v48;
          v96 = sub_1C132AD90(v52, v50, v97);
          sub_1C1426DB8();
          swift_bridgeObjectRelease();
          sub_1C1339004((uint64_t)v42, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
          _os_log_impl(&dword_1C1324000, v43, v44, "Marking outdated activity as stale: %{public}s", v46, 0xCu);
          swift_arrayDestroy();
          v53 = v47;
          v41 = v95;
          MEMORY[0x1C3BAD3F4](v53, -1, -1);
          MEMORY[0x1C3BAD3F4](v46, -1, -1);
        }
        else
        {
          sub_1C1339004((uint64_t)v42, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        }

        v60 = v93;
        v61 = *(uint64_t *)((char *)v41 + *(int *)(v93 + 28));
        if (*(_QWORD *)(v61 + 16))
        {
          v62 = sub_1C1425558();
          v63 = *(_QWORD *)(v62 - 8);
          v64 = v61 + ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80));
          v65 = v41[1];
          v93 = *v41;
          v66 = (uint64_t *)((char *)v41 + *(int *)(v60 + 40));
          v67 = v66[1];
          v95 = (uint64_t *)*v66;
          v69 = (int *)v86;
          v68 = v87;
          type metadata accessor for ActivityParticipantEvent.EventType(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(&v68[v69[7]], v64, v62);
          v70 = &v68[v69[9]];
          v71 = sub_1C1425450();
          v72 = *(_QWORD *)(v71 - 8);
          (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v70, v91, v71);
          v73 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56);
          v59 = 1;
          v73(v70, 0, 1, v71);
          v74 = v92;
          *(_QWORD *)v68 = v93;
          *((_QWORD *)v68 + 1) = v65;
          *((_QWORD *)v68 + 2) = v95;
          *((_QWORD *)v68 + 3) = v67;
          v75 = &v68[v69[8]];
          *(_QWORD *)v75 = v74;
          *((_QWORD *)v75 + 1) = &off_1E7A8E440;
          v68[v69[10]] = 0;
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          sub_1C13D0788((uint64_t)v68);
          swift_unknownObjectRelease();
          sub_1C1339004((uint64_t)v68, type metadata accessor for ActivityParticipantEvent);
        }
        else
        {
          v76 = v85;
          sub_1C1338F24((uint64_t)v41, (uint64_t)v85, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
          v77 = sub_1C1426848();
          v78 = sub_1C1426C68();
          if (!os_log_type_enabled(v77, v78))
          {
            swift_unknownObjectRelease();

            sub_1C1339004((uint64_t)v76, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
            ((void (*)(char *, uint64_t))v90)(v36, v18);
            return 1;
          }
          v79 = (uint8_t *)swift_slowAlloc();
          v80 = swift_slowAlloc();
          v97[0] = v80;
          *(_DWORD *)v79 = 136446210;
          v95 = (uint64_t *)(v79 + 4);
          v81 = *v76;
          v82 = v76[1];
          swift_bridgeObjectRetain();
          v96 = sub_1C132AD90(v81, v82, v97);
          sub_1C1426DB8();
          swift_bridgeObjectRelease();
          sub_1C1339004((uint64_t)v76, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
          _os_log_impl(&dword_1C1324000, v77, v78, "No content sources exist for outdated activity: %{public}s", v79, 0xCu);
          v59 = 1;
          swift_arrayDestroy();
          MEMORY[0x1C3BAD3F4](v80, -1, -1);
          MEMORY[0x1C3BAD3F4](v79, -1, -1);
          swift_unknownObjectRelease();

        }
        ((void (*)(char *, uint64_t))v90)(v36, v18);
        return v59;
      }
      ((void (*)(char *, uint64_t))v38)(v24, v18);
    }
    swift_unknownObjectRelease();
    return 0;
  }
  result = sub_1C1426F8C();
  __break(1u);
  return result;
}

uint64_t sub_1C13F2488()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C13F24AC()
{
  return sub_1C13F1668();
}

uint64_t sub_1C13F24B8()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C13F3154();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C13F250C()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C13F2618();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C13F2568()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = swift_bridgeObjectRetain();
  sub_1C1389CDC(v1);
  swift_bridgeObjectRelease();
  sub_1C1339040(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AppEventParticipant()
{
  return objc_opt_self();
}

uint64_t sub_1C13F2618()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  id v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  NSObject *v66;
  os_log_type_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint64_t v74;
  uint64_t v75;
  int *v76;
  uint64_t *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t result;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  int64_t v100;
  void (*v101)(char *, uint64_t, uint64_t);
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;

  v94 = type metadata accessor for ActivityParticipantEvent(0);
  MEMORY[0x1E0C80A78](v94);
  v98 = (char *)&v85 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_1C1425558();
  v104 = *(_QWORD *)(v2 - 8);
  v105 = v2;
  MEMORY[0x1E0C80A78](v2);
  v103 = (char *)&v85 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C1425AEC();
  v110 = *(_QWORD *)(v4 - 8);
  v111 = v4;
  MEMORY[0x1E0C80A78](v4);
  v109 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C1425A08();
  MEMORY[0x1E0C80A78](v6);
  v108 = (uint64_t)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = type metadata accessor for Activity();
  v106 = *(_QWORD *)(v114 - 8);
  MEMORY[0x1E0C80A78](v114);
  v102 = (uint64_t)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7939E0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)((char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v10);
  v113 = (uint64_t *)((char *)&v85 - v13);
  v14 = sub_1C1425630();
  MEMORY[0x1E0C80A78](v14);
  v97 = sub_1C142557C();
  v96 = *(_QWORD *)(v97 - 8);
  MEMORY[0x1E0C80A78](v97);
  v99 = (char *)&v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1C14269F8();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (uint64_t *)((char *)&v85 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = (void *)v0[14];
  *v19 = v20;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v17 + 104))(v19, *MEMORY[0x1E0DEF740], v16);
  v21 = v20;
  v22 = sub_1C1426A10();
  (*(void (**)(_QWORD *, uint64_t))(v17 + 8))(v19, v16);
  if ((v22 & 1) != 0)
  {
    if (MEMORY[0x1C3BAD4B4](v0 + 2))
    {
      v23 = swift_bridgeObjectRetain();
      v112 = sub_1C1375140(v23);
      swift_bridgeObjectRelease();
      v24 = v0[7];
      v25 = v0[8];
      __swift_project_boxed_opaque_existential_1(v0 + 4, v24);
      v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v24, v25);
      sub_1C1425624();
      sub_1C1425570();
      v28 = 0;
      v29 = *(_QWORD *)(v26 + 64);
      v90 = v26 + 64;
      v30 = 1 << *(_BYTE *)(v26 + 32);
      v31 = -1;
      if (v30 < 64)
        v31 = ~(-1 << v30);
      v32 = v31 & v29;
      v33 = (unint64_t)(v30 + 63) >> 6;
      v92 = v98 + 16;
      v86 = v33 - 1;
      v100 = v33;
      v88 = v33 - 5;
      v107 = v26;
      v87 = v26 + 104;
      *(_QWORD *)&v27 = 136446210;
      v91 = v27;
      v89 = MEMORY[0x1E0DEE9B8] + 8;
      v93 = v0;
      v35 = v113;
      v34 = v114;
      v36 = v102;
      if ((v31 & v29) == 0)
        goto LABEL_11;
LABEL_9:
      v37 = __clz(__rbit64(v32));
      v38 = (v32 - 1) & v32;
      v116 = v28;
      v39 = v37 | (v28 << 6);
LABEL_10:
      v40 = *(_QWORD *)(v107 + 56);
      v41 = (_QWORD *)(*(_QWORD *)(v107 + 48) + 16 * v39);
      v42 = v41[1];
      *v12 = *v41;
      v12[1] = v42;
      v43 = v40 + *(_QWORD *)(v106 + 72) * v39;
      v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
      sub_1C1338F24(v43, (uint64_t)v12 + *(int *)(v44 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v12, 0, 1, v44);
      swift_bridgeObjectRetain();
      v34 = v114;
      while (1)
      {
        sub_1C1384014((uint64_t)v12, (uint64_t)v35);
        v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 48))(v35, 1, v49) == 1)
        {
          swift_release();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          return (*(uint64_t (**)(char *, uint64_t))(v96 + 8))(v99, v97);
        }
        v115 = v38;
        v50 = v12;
        v51 = v35;
        v52 = *v35;
        v53 = v35[1];
        sub_1C13A78FC((uint64_t)v51 + *(int *)(v49 + 48), v36);
        v54 = v108;
        sub_1C1338F24(v36 + *(int *)(v34 + 24), v108, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
        v55 = v110;
        v56 = v111;
        v57 = v36;
        v58 = v109;
        (*(void (**)(char *, uint64_t, uint64_t))(v110 + 32))(v109, v54, v111);
        v59 = sub_1C1425A80();
        v61 = v60;
        (*(void (**)(char *, uint64_t))(v55 + 8))(v58, v56);
        LOBYTE(v59) = sub_1C1330FE4(v59, v61, v112);
        swift_bridgeObjectRelease();
        if ((v59 & 1) == 0)
          break;
        v62 = *(_QWORD *)(v57 + *(int *)(v34 + 28));
        if (*(_QWORD *)(v62 + 16))
        {
          v63 = v62 + ((*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80));
          v101 = *(void (**)(char *, uint64_t, uint64_t))(v104 + 16);
          v101(v103, v63, v105);
          v12 = v50;
          v64 = v52;
          if (qword_1ED791DD0 != -1)
            swift_once();
          v65 = sub_1C1426854();
          __swift_project_value_buffer(v65, (uint64_t)qword_1ED7984D8);
          swift_bridgeObjectRetain_n();
          v66 = sub_1C1426848();
          v67 = sub_1C1426C80();
          if (os_log_type_enabled(v66, v67))
          {
            v68 = swift_slowAlloc();
            v69 = swift_slowAlloc();
            v117 = v69;
            *(_DWORD *)v68 = v91;
            swift_bridgeObjectRetain();
            *(_QWORD *)(v68 + 4) = sub_1C132AD90(v52, v53, &v117);
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1C1324000, v66, v67, "Stopping uninstalled activity: %{public}s", (uint8_t *)v68, 0xCu);
            swift_arrayDestroy();
            v70 = v93;
            MEMORY[0x1C3BAD3F4](v69, -1, -1);
            MEMORY[0x1C3BAD3F4](v68, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n();
            v70 = v93;
          }
          v76 = (int *)v94;
          v77 = (uint64_t *)v98;
          (*(void (**)(char *, char *, uint64_t))(v96 + 16))(&v98[*(int *)(v94 + 24)], v99, v97);
          type metadata accessor for ActivityParticipantEvent.EventType(0);
          swift_storeEnumTagMultiPayload();
          v78 = v103;
          v79 = v105;
          v101((char *)v77 + v76[7], (uint64_t)v103, v105);
          v80 = (char *)v77 + v76[9];
          v81 = sub_1C1425450();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v80, 1, 1, v81);
          *v77 = v64;
          v77[1] = v53;
          v82 = v92;
          *v92 = 0;
          v82[1] = 0;
          v83 = (uint64_t *)((char *)v77 + v76[8]);
          *v83 = v70;
          v83[1] = &off_1E7A8E4C8;
          *((_BYTE *)v77 + v76[10]) = 0;
          swift_retain();
          sub_1C13D0788((uint64_t)v77);
          sub_1C1339004((uint64_t)v77, type metadata accessor for ActivityParticipantEvent);
          (*(void (**)(char *, uint64_t))(v104 + 8))(v78, v79);
          v36 = v102;
          sub_1C1339004(v102, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
          v35 = v113;
          v34 = v114;
LABEL_8:
          v32 = v115;
          v28 = v116;
          if (v115)
            goto LABEL_9;
          goto LABEL_11;
        }
        v36 = v57;
        v12 = v50;
        if (qword_1ED791DD0 != -1)
          swift_once();
        v71 = sub_1C1426854();
        __swift_project_value_buffer(v71, (uint64_t)qword_1ED7984D8);
        swift_bridgeObjectRetain();
        v72 = sub_1C1426848();
        v73 = sub_1C1426C68();
        if (os_log_type_enabled(v72, v73))
        {
          v74 = swift_slowAlloc();
          v75 = swift_slowAlloc();
          v117 = v75;
          *(_DWORD *)v74 = v91;
          swift_bridgeObjectRetain();
          *(_QWORD *)(v74 + 4) = sub_1C132AD90(v52, v53, &v117);
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1C1324000, v72, v73, "No content sources exist for uninstalled activity: %{public}s", (uint8_t *)v74, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3BAD3F4](v75, -1, -1);
          MEMORY[0x1C3BAD3F4](v74, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        sub_1C1339004(v36, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
        v35 = v113;
        v34 = v114;
        v32 = v115;
        v28 = v116;
        if (v115)
          goto LABEL_9;
LABEL_11:
        v45 = v28 + 1;
        if (__OFADD__(v28, 1))
        {
          __break(1u);
          goto LABEL_47;
        }
        if (v45 >= v100)
        {
          v47 = v28;
        }
        else
        {
          v46 = *(_QWORD *)(v90 + 8 * v45);
          if (v46)
            goto LABEL_14;
          v47 = v28 + 1;
          if ((uint64_t)(v28 + 2) < v100)
          {
            v46 = *(_QWORD *)(v90 + 8 * (v28 + 2));
            if (v46)
            {
              v45 = v28 + 2;
              v36 = v102;
LABEL_14:
              v38 = (v46 - 1) & v46;
              v39 = __clz(__rbit64(v46)) + (v45 << 6);
              v116 = v45;
              goto LABEL_10;
            }
            v47 = v28 + 2;
            if ((uint64_t)(v28 + 3) < v100)
            {
              v46 = *(_QWORD *)(v90 + 8 * (v28 + 3));
              if (v46)
              {
                v45 = v28 + 3;
                v36 = v102;
                goto LABEL_14;
              }
              v45 = v28 + 4;
              v47 = v28 + 3;
              if ((uint64_t)(v28 + 4) < v100)
              {
                v46 = *(_QWORD *)(v90 + 8 * v45);
                v36 = v102;
                if (v46)
                  goto LABEL_14;
                while (v88 != v28)
                {
                  v46 = *(_QWORD *)(v87 + 8 * v28++);
                  if (v46)
                  {
                    v45 = v28 + 4;
                    goto LABEL_14;
                  }
                }
                v47 = v86;
              }
            }
          }
        }
        v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
        (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v12, 1, 1, v48);
        v38 = 0;
        v116 = v47;
        v36 = v102;
      }
      sub_1C1339004(v57, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      swift_bridgeObjectRelease();
      v36 = v57;
      v12 = v50;
      v35 = v113;
      goto LABEL_8;
    }
  }
  else
  {
LABEL_47:
    __break(1u);
  }
  result = sub_1C1426F8C();
  __break(1u);
  return result;
}

uint64_t sub_1C13F3154()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  id v23;
  char v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  void (*v62)(char *, unint64_t, uint64_t);
  uint64_t v63;
  unint64_t v64;
  NSObject *v65;
  os_log_type_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int *v76;
  uint64_t *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t result;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  char *v99;
  char *v100;
  int64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  _QWORD *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;

  v93 = type metadata accessor for ActivityParticipantEvent(0);
  MEMORY[0x1E0C80A78](v93);
  v98 = (uint64_t *)((char *)&v85 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  v2 = sub_1C1425558();
  v103 = *(_QWORD *)(v2 - 8);
  v104 = v2;
  MEMORY[0x1E0C80A78](v2);
  v102 = (char *)&v85 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C1425AEC();
  v111 = *(_QWORD *)(v4 - 8);
  v112 = v4;
  MEMORY[0x1E0C80A78](v4);
  v110 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C1425A08();
  MEMORY[0x1E0C80A78](v6);
  v109 = (uint64_t)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = type metadata accessor for Activity();
  v105 = *(_QWORD *)(v97 - 8);
  MEMORY[0x1E0C80A78](v97);
  v9 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7939E0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (uint64_t *)((char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v11);
  v15 = (uint64_t *)((char *)&v85 - v14);
  v16 = sub_1C1425630();
  MEMORY[0x1E0C80A78](v16);
  v96 = sub_1C142557C();
  v95 = *(_QWORD *)(v96 - 8);
  MEMORY[0x1E0C80A78](v96);
  v99 = (char *)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1C14269F8();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (uint64_t *)((char *)&v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = (void *)v0[14];
  *v21 = v22;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v19 + 104))(v21, *MEMORY[0x1E0DEF740], v18);
  v23 = v22;
  v24 = sub_1C1426A10();
  (*(void (**)(_QWORD *, uint64_t))(v19 + 8))(v21, v18);
  if ((v24 & 1) != 0)
  {
    if (MEMORY[0x1C3BAD4B4](v0 + 2))
    {
      v25 = v0;
      v26 = v0[7];
      v27 = v0[8];
      __swift_project_boxed_opaque_existential_1(v0 + 4, v26);
      v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 8))(v26, v27);
      sub_1C1425624();
      sub_1C1425570();
      v30 = 0;
      v31 = *(_QWORD *)(v28 + 64);
      v90 = v28 + 64;
      v32 = 1 << *(_BYTE *)(v28 + 32);
      v33 = -1;
      if (v32 < 64)
        v33 = ~(-1 << v32);
      v34 = v33 & v31;
      v113 = v25;
      v108 = v25 + 9;
      v35 = (unint64_t)(v32 + 63) >> 6;
      v92 = v98 + 2;
      v86 = v35 - 1;
      v101 = v35;
      v87 = v35 - 5;
      v106 = v28;
      v88 = v28 + 104;
      *(_QWORD *)&v29 = 136446210;
      v91 = v29;
      v89 = MEMORY[0x1E0DEE9B8] + 8;
      v36 = v97;
      v100 = v9;
      v107 = v13;
      while (!v34)
      {
        v45 = v30 + 1;
        if (__OFADD__(v30, 1))
        {
          __break(1u);
          goto LABEL_46;
        }
        if (v45 >= v101)
        {
          v47 = v30;
        }
        else
        {
          v46 = *(_QWORD *)(v90 + 8 * v45);
          if (v46)
            goto LABEL_14;
          v47 = v30 + 1;
          if ((uint64_t)(v30 + 2) < v101)
          {
            v46 = *(_QWORD *)(v90 + 8 * (v30 + 2));
            if (v46)
            {
              v45 = v30 + 2;
              goto LABEL_14;
            }
            v47 = v30 + 2;
            if ((uint64_t)(v30 + 3) < v101)
            {
              v46 = *(_QWORD *)(v90 + 8 * (v30 + 3));
              if (v46)
              {
                v45 = v30 + 3;
LABEL_14:
                v38 = (v46 - 1) & v46;
                v39 = __clz(__rbit64(v46)) + (v45 << 6);
                v30 = v45;
LABEL_10:
                v40 = *(_QWORD *)(v106 + 56);
                v41 = (_QWORD *)(*(_QWORD *)(v106 + 48) + 16 * v39);
                v42 = v41[1];
                *v13 = *v41;
                v13[1] = v42;
                v43 = v40 + *(_QWORD *)(v105 + 72) * v39;
                v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
                sub_1C1338F24(v43, (uint64_t)v13 + *(int *)(v44 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Activity);
                (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v13, 0, 1, v44);
                swift_bridgeObjectRetain();
                goto LABEL_17;
              }
              v45 = v30 + 4;
              v47 = v30 + 3;
              if ((uint64_t)(v30 + 4) < v101)
              {
                v46 = *(_QWORD *)(v90 + 8 * v45);
                if (v46)
                  goto LABEL_14;
                while (v87 != v30)
                {
                  v46 = *(_QWORD *)(v88 + 8 * v30++);
                  if (v46)
                  {
                    v45 = v30 + 4;
                    goto LABEL_14;
                  }
                }
                v47 = v86;
              }
            }
          }
        }
        v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
        (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v13, 1, 1, v48);
        v38 = 0;
        v30 = v47;
LABEL_17:
        sub_1C1384014((uint64_t)v13, (uint64_t)v15);
        v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 48))(v15, 1, v49) == 1)
        {
          swift_release();
          swift_unknownObjectRelease();
          return (*(uint64_t (**)(char *, uint64_t))(v95 + 8))(v99, v96);
        }
        v115 = v38;
        v116 = v30;
        v50 = v15[1];
        v114 = *v15;
        v51 = v15;
        sub_1C13A78FC((uint64_t)v15 + *(int *)(v49 + 48), (uint64_t)v9);
        __swift_project_boxed_opaque_existential_1(v108, v113[12]);
        v52 = v109;
        sub_1C1338F24((uint64_t)&v9[*(int *)(v36 + 24)], v109, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
        v53 = v36;
        v54 = v110;
        v55 = v111;
        v56 = v112;
        (*(void (**)(char *, uint64_t, uint64_t))(v111 + 32))(v110, v52, v112);
        v57 = sub_1C1425A80();
        v58 = (uint64_t)v9;
        v60 = v59;
        (*(void (**)(char *, uint64_t))(v55 + 8))(v54, v56);
        LOBYTE(v54) = sub_1C13C6D34(v57, v60);
        swift_bridgeObjectRelease();
        if ((v54 & 1) != 0)
        {
          v61 = *(_QWORD *)(v58 + *(int *)(v53 + 28));
          if (*(_QWORD *)(v61 + 16))
          {
            v62 = *(void (**)(char *, unint64_t, uint64_t))(v103 + 16);
            v62(v102, v61 + ((*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80)), v104);
            v13 = v107;
            v15 = v51;
            if (qword_1ED791DD0 != -1)
              swift_once();
            v63 = sub_1C1426854();
            __swift_project_value_buffer(v63, (uint64_t)qword_1ED7984D8);
            v64 = v50;
            swift_bridgeObjectRetain_n();
            v65 = sub_1C1426848();
            v66 = sub_1C1426C80();
            if (os_log_type_enabled(v65, v66))
            {
              v67 = swift_slowAlloc();
              v68 = swift_slowAlloc();
              v117 = v68;
              *(_DWORD *)v67 = v91;
              swift_bridgeObjectRetain();
              v69 = v114;
              *(_QWORD *)(v67 + 4) = sub_1C132AD90(v114, v64, &v117);
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_1C1324000, v65, v66, "Stopping restricted activity: %{public}s", (uint8_t *)v67, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x1C3BAD3F4](v68, -1, -1);
              MEMORY[0x1C3BAD3F4](v67, -1, -1);

            }
            else
            {

              swift_bridgeObjectRelease_n();
              v69 = v114;
            }
            v76 = (int *)v93;
            v77 = v98;
            (*(void (**)(char *, char *, uint64_t))(v95 + 16))((char *)v98 + *(int *)(v93 + 24), v99, v96);
            type metadata accessor for ActivityParticipantEvent.EventType(0);
            swift_storeEnumTagMultiPayload();
            v78 = v102;
            v79 = v104;
            v62((char *)v77 + v76[7], (unint64_t)v102, v104);
            v80 = (char *)v77 + v76[9];
            v81 = sub_1C1425450();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v80, 1, 1, v81);
            *v77 = v69;
            v77[1] = v64;
            v82 = v92;
            *v92 = 0;
            v82[1] = 0;
            v83 = (uint64_t *)((char *)v77 + v76[8]);
            *v83 = v113;
            v83[1] = &off_1E7A8E4C8;
            *((_BYTE *)v77 + v76[10]) = 0;
            swift_retain();
            sub_1C13D0788((uint64_t)v77);
            sub_1C1339004((uint64_t)v77, type metadata accessor for ActivityParticipantEvent);
            (*(void (**)(char *, uint64_t))(v103 + 8))(v78, v79);
            v9 = v100;
            sub_1C1339004((uint64_t)v100, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
            v36 = v97;
          }
          else
          {
            v36 = v53;
            v9 = (char *)v58;
            v13 = v107;
            v15 = v51;
            if (qword_1ED791DD0 != -1)
              swift_once();
            v70 = sub_1C1426854();
            __swift_project_value_buffer(v70, (uint64_t)qword_1ED7984D8);
            swift_bridgeObjectRetain();
            v71 = sub_1C1426848();
            v72 = sub_1C1426C68();
            if (os_log_type_enabled(v71, v72))
            {
              v73 = swift_slowAlloc();
              v74 = swift_slowAlloc();
              v117 = v74;
              *(_DWORD *)v73 = v91;
              swift_bridgeObjectRetain();
              *(_QWORD *)(v73 + 4) = sub_1C132AD90(v114, v50, &v117);
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_1C1324000, v71, v72, "No content sources exist for restricted activity: %{public}s", (uint8_t *)v73, 0xCu);
              swift_arrayDestroy();
              v75 = v74;
              v9 = v100;
              MEMORY[0x1C3BAD3F4](v75, -1, -1);
              MEMORY[0x1C3BAD3F4](v73, -1, -1);
            }
            else
            {
              swift_bridgeObjectRelease_n();
            }

            sub_1C1339004((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
          }
        }
        else
        {
          sub_1C1339004(v58, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
          swift_bridgeObjectRelease();
          v36 = v53;
          v9 = (char *)v58;
          v13 = v107;
          v15 = v51;
        }
        v34 = v115;
        v30 = v116;
      }
      v37 = __clz(__rbit64(v34));
      v38 = (v34 - 1) & v34;
      v39 = v37 | (v30 << 6);
      goto LABEL_10;
    }
  }
  else
  {
LABEL_46:
    __break(1u);
  }
  result = sub_1C1426F8C();
  __break(1u);
  return result;
}

uint64_t sub_1C13F3C58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t Daemon.__allocating_init(workloop:)(NSObject *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  Daemon.init(workloop:)(a1);
  return v2;
}

_QWORD *Daemon.init(workloop:)(NSObject *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _DWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  objc_class *v13;
  id v14;
  NSObject *v15;
  void *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  _QWORD *v24;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v26;
  NSObject *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _DWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _DWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  NSObject *v47;
  uint64_t v48;
  NSObject *v49;
  uint64_t v50;
  uint64_t LaunchDetector;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  NSObject *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  NSObject *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  void (*v90)(_QWORD);
  uint64_t v91;
  NSObject *v92;
  uint64_t v93;
  char *v94;
  void *v95;
  uint64_t v96;
  NSObject *v97;
  objc_class *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t *v109;
  uint64_t v110;
  void (*v111)(_QWORD);
  uint64_t v112;
  id v113;
  uint64_t v114;
  id v115;
  id v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _DWORD *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t *v125;
  uint64_t v126;
  void (*v127)(_QWORD);
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t *v156;
  uint64_t v157;
  _QWORD *v158;
  uint64_t *v159;
  uint64_t v160;
  char *v161;
  void *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  id v167;
  void *v168;
  void *v169;
  uint64_t v170;
  uint64_t v171;
  _QWORD *v172;
  id v173;
  id v174;
  uint64_t v175;
  uint64_t v176;
  id v177;
  id v178;
  id v179;
  id v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  _DWORD *v185;
  uint64_t v186;
  uint64_t v187;
  void *v188;
  uint64_t v189;
  id v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  _QWORD *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t *v201;
  uint64_t v202;
  id v203;
  id v204;
  uint64_t v205;
  _QWORD *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t *v209;
  uint64_t v210;
  uint64_t v211;
  unint64_t v212;
  id v213;
  uint64_t v214;
  _QWORD *v215;
  uint64_t v216;
  _DWORD *v217;
  uint64_t v218;
  _QWORD *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  _DWORD *v227;
  uint64_t v228;
  _QWORD *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t *v232;
  uint64_t v233;
  uint64_t v234;
  _QWORD *v235;
  uint64_t v236;
  unint64_t v237;
  void (*v238)(_QWORD);
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  _DWORD *v242;
  _QWORD *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  _QWORD *v247;
  uint64_t v248;
  uint64_t *v249;
  uint64_t v250;
  objc_class *v251;
  id v252;
  uint64_t v253;
  id v254;
  uint64_t v255;
  char *v256;
  id v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t ObjectType;
  void (*v264)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  os_unfair_lock_s *v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  void (*v275)(_QWORD, _QWORD, _QWORD, _QWORD);
  os_unfair_lock_s *v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  void (*v281)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v282;
  os_unfair_lock_s *v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  void (*v289)(_QWORD, _QWORD, _QWORD, _QWORD);
  os_unfair_lock_s *v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  void (*v296)(_QWORD, _QWORD, _QWORD, _QWORD);
  os_unfair_lock_s *v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  void (*v303)(_QWORD, _QWORD, _QWORD, _QWORD);
  os_unfair_lock_s *v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  void (*v309)(_QWORD, _QWORD, _QWORD, _QWORD);
  os_unfair_lock_s *v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  void (*v316)(_QWORD, _QWORD, _QWORD, _QWORD);
  os_unfair_lock_s *v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  void (*v323)(_QWORD, _QWORD, _QWORD, _QWORD);
  os_unfair_lock_s *v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  void (*v330)(_QWORD, _QWORD, _QWORD, _QWORD);
  os_unfair_lock_s *v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  void (*v337)(_QWORD, _QWORD, _QWORD, _QWORD);
  os_unfair_lock_s *v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  void (*v344)(_QWORD, _QWORD, _QWORD, _QWORD);
  os_unfair_lock_s *v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  void (*v351)(_QWORD, _QWORD, _QWORD, _QWORD);
  os_unfair_lock_s *v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  void (*v358)(_QWORD, _QWORD, _QWORD, _QWORD);
  os_unfair_lock_s *v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  void (*v365)(_QWORD, _QWORD, _QWORD, _QWORD);
  os_unfair_lock_s *v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  void (*v371)(_QWORD, _QWORD, _QWORD, _QWORD);
  os_unfair_lock_s *v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  void (*v378)(_QWORD, _QWORD, _QWORD, _QWORD);
  os_unfair_lock_s *v379;
  uint64_t v380;
  uint64_t v381;
  char *v382;
  uint64_t v383;
  void (*v384)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v385;
  char *v386;
  os_unfair_lock_s *v387;
  uint64_t v388;
  os_unfair_lock_s *v389;
  uint64_t v390;
  os_unfair_lock_s *v391;
  uint64_t v392;
  os_unfair_lock_s *v393;
  os_unfair_lock_s *v394;
  uint64_t v395;
  os_unfair_lock_s *v396;
  uint64_t v397;
  os_unfair_lock_s *v398;
  uint64_t v399;
  os_unfair_lock_s *v400;
  uint64_t v401;
  os_unfair_lock_s *v402;
  uint64_t v403;
  os_unfair_lock_s *v404;
  uint64_t v405;
  os_unfair_lock_s *v406;
  os_unfair_lock_s *v407;
  uint64_t v408;
  os_unfair_lock_s *v409;
  char *v410;
  os_unfair_lock_s *v411;
  uint64_t v412;
  os_unfair_lock_s *v413;
  uint64_t v414;
  os_unfair_lock_s *v415;
  id v416;
  os_unfair_lock_s *v417;
  uint64_t v418;
  _QWORD *result;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  id v426;
  uint64_t *v427;
  id v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  void (*v432)(_QWORD);
  uint64_t v433;
  unint64_t v434;
  char *v435;
  unint64_t v436;
  uint64_t v437;
  id v438;
  id v439;
  id v440;
  uint64_t v441;
  _QWORD *v442;
  uint64_t v443;
  uint64_t v444;
  _QWORD *v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  _QWORD *v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  _QWORD *v457;
  uint64_t v458;
  _QWORD *v459;
  id v460;
  uint64_t v461;
  _QWORD *v462;
  _QWORD *v463;
  _QWORD *v464;
  uint64_t v465;
  uint64_t v466;
  void (*v467)(_QWORD);
  uint64_t v468;
  __int128 v469;
  uint64_t v470;
  char *v471;
  uint64_t v472;
  _QWORD *v473;
  void (*v474)(_QWORD);
  _QWORD *v475;
  char *v476;
  uint64_t v477;
  void *v478;
  uint64_t v479;
  uint64_t v480;
  _QWORD *v481;
  uint64_t v482;
  _QWORD *v483;
  uint64_t v484;
  char *v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  NSObject *v492;
  uint64_t v493;
  _QWORD *v494;
  uint64_t v495;
  uint64_t v496;
  _QWORD *v497;
  uint64_t *v498;
  __int128 v499;
  __int128 v500;
  __int128 v501;
  uint64_t v502;
  uint64_t *v503;
  uint64_t v504;
  uint64_t v505;
  __int128 v506;
  _QWORD *v507;
  _UNKNOWN **v508;
  __int128 v509;
  uint64_t v510;
  _UNKNOWN **v511;

  v495 = sub_1C1426854();
  v491 = *(_QWORD *)(v495 - 8);
  MEMORY[0x1E0C80A78](v495);
  v485 = (char *)&v431 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C1425BE8();
  v497 = *(_QWORD **)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v431 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StuckClientBugCapturer();
  swift_allocObject();
  v7 = sub_1C1382B58();
  v464 = v1;
  v1[12] = v7;
  sub_1C14043A4(a1);
  type metadata accessor for WakingTaskScheduler();
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = 0;
  v496 = type metadata accessor for UnfairLock();
  v9 = swift_allocObject();
  v10 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v9 + 16) = v10;
  *v10 = 0;
  v8[3] = v9;
  type metadata accessor for NonwakingTaskScheduler();
  v8[4] = 0;
  v8[5] = 0;
  swift_allocObject();
  v11 = sub_1C141B0C0();
  v486 = type metadata accessor for TaskScheduler();
  swift_allocObject();
  swift_retain();
  swift_retain();
  v463 = v8;
  v462 = v11;
  v498 = sub_1C13B4778((uint64_t)v8, (uint64_t)&off_1E7A8CB70, (uint64_t)v11, (uint64_t)&off_1E7A8F350);
  v12 = sub_1C14048E4(a1);
  v13 = (objc_class *)type metadata accessor for AlertServiceServer();
  v14 = objc_allocWithZone(v13);
  v15 = a1;
  v16 = (void *)sub_1C13A8140(a1);
  *((_QWORD *)&v500 + 1) = v13;
  *(_QWORD *)&v501 = &off_1E7A8C730;
  *(_QWORD *)&v499 = v16;
  type metadata accessor for AlertPresenter();
  v17 = (_QWORD *)swift_allocObject();
  v18 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v499, (uint64_t)v13);
  MEMORY[0x1E0C80A78](v18);
  v20 = (uint64_t *)((char *)&v431 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v21 + 16))(v20);
  v22 = *v20;
  v23 = v16;
  v24 = sub_1C13F959C(v22, v17);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v499);
  v460 = v23;

  sub_1C1329AD0((unint64_t *)&unk_1ED793ED8, (uint64_t (*)(uint64_t))type metadata accessor for AlertPresenter, (uint64_t)&unk_1C142B17C);
  swift_retain();
  sub_1C1425BDC();
  *((_QWORD *)&v500 + 1) = v4;
  *(_QWORD *)&v501 = MEMORY[0x1E0D8CA38];
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v499);
  v26 = v497;
  ((void (*)(uint64_t *, char *, uint64_t))v497[2])(boxed_opaque_existential_1, v6, v4);
  v510 = sub_1C1425F48();
  v511 = (_UNKNOWN **)MEMORY[0x1E0D8D4E0];
  *(_QWORD *)&v509 = v12;
  sub_1C1425C6C();
  swift_allocObject();
  swift_retain();
  v461 = v12;
  v27 = a1;
  swift_retain();
  v28 = sub_1C1425C60();
  ((void (*)(char *, uint64_t))v26[1])(v6, v4);
  v459 = v24;
  swift_release();
  type metadata accessor for AlertParticipant();
  v29 = (_QWORD *)swift_allocObject();
  v30 = swift_allocObject();
  swift_retain();
  v31 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v30 + 16) = v31;
  *v31 = 0;
  v29[4] = v30;
  v32 = MEMORY[0x1E0D8CAC8];
  v458 = v28;
  v29[2] = v28;
  v29[3] = v32;
  v483 = v29;
  type metadata accessor for ActivityManager();
  v33 = (_QWORD *)swift_allocObject();
  v34 = swift_allocObject();
  v35 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v34 + 16) = v35;
  *v35 = 0;
  v36 = MEMORY[0x1E0DEE9D8];
  v33[2] = v34;
  v33[3] = v36;
  v37 = MEMORY[0x1E0DEE9E0];
  v33[4] = MEMORY[0x1E0DEE9E0];
  v33[5] = v37;
  v481 = v33;
  v38 = type metadata accessor for StateCaptureService();
  swift_allocObject();
  v39 = sub_1C135BCD8();
  *((_QWORD *)&v500 + 1) = v38;
  *(_QWORD *)&v501 = &off_1E7A8ACF8;
  *(_QWORD *)&v499 = v39;
  v40 = (char *)objc_allocWithZone((Class)type metadata accessor for StateCaptureServiceServer());
  v41 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v499, *((uint64_t *)&v500 + 1));
  MEMORY[0x1E0C80A78](v41);
  v43 = (uint64_t *)((char *)&v431 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v44 + 16))(v43);
  v45 = *v43;
  swift_retain_n();
  v46 = v15;
  v456 = sub_1C13F8A54(v45, v27, v40);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v499);
  v457 = v39;
  swift_release();
  v484 = type metadata accessor for PersistentActivityStore();
  swift_allocObject();
  v47 = v46;
  v48 = sub_1C13E3854(v47);
  type metadata accessor for PersistentAssertionStore();
  swift_allocObject();
  v49 = v47;
  v50 = sub_1C13A46C4(v49);
  LaunchDetector = type metadata accessor for FirstLaunchDetector();
  v52 = swift_allocObject();
  v53 = qword_1ED795CA8;
  swift_retain();
  if (v53 != -1)
    swift_once();
  *((_QWORD *)&v500 + 1) = LaunchDetector;
  *(_QWORD *)&v501 = &off_1E7A8CF90;
  *(_QWORD *)&v499 = v52;
  v54 = type metadata accessor for AssertionManager();
  v55 = (_QWORD *)swift_allocObject();
  v56 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v499, LaunchDetector);
  MEMORY[0x1E0C80A78](v56);
  v58 = (uint64_t *)((char *)&v431 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v59 + 16))(v58);
  v60 = *v58;
  swift_retain();
  swift_retain();
  swift_retain();
  v61 = sub_1C1404AA8(v27, v50, v48, v60, v55);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v499);
  swift_release();
  v493 = v48;
  swift_release();
  swift_release();
  *((_QWORD *)&v500 + 1) = v54;
  *(_QWORD *)&v501 = &off_1E7A8AED0;
  *(_QWORD *)&v499 = v61;
  v62 = (char *)objc_allocWithZone((Class)type metadata accessor for AssertionServiceServer());
  v63 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v499, *((uint64_t *)&v500 + 1));
  MEMORY[0x1E0C80A78](v63);
  v65 = (uint64_t *)((char *)&v431 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v66 + 16))(v65);
  v67 = *v65;
  v68 = v49;
  swift_retain();
  v455 = sub_1C13F96B8(v27, v67, v62);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v499);
  *((_QWORD *)&v500 + 1) = v54;
  *(_QWORD *)&v501 = &off_1E7A8AEC0;
  *(_QWORD *)&v499 = v61;
  v69 = (char *)objc_allocWithZone((Class)type metadata accessor for PresentationObservationServiceServer());
  v70 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v499, *((uint64_t *)&v500 + 1));
  MEMORY[0x1E0C80A78](v70);
  v72 = (uint64_t *)((char *)&v431 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v73 + 16))(v72);
  v74 = *v72;
  v75 = v68;
  swift_retain();
  v454 = sub_1C13F8424(v27, v74, v69);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v499);
  *((_QWORD *)&v500 + 1) = v54;
  *(_QWORD *)&v501 = &off_1E7A8AEB0;
  v473 = (_QWORD *)v54;
  *(_QWORD *)&v499 = v61;
  v76 = (char *)objc_allocWithZone((Class)type metadata accessor for ProminenceObservationServiceServer());
  v77 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v499, *((uint64_t *)&v500 + 1));
  MEMORY[0x1E0C80A78](v77);
  v79 = (uint64_t *)((char *)&v431 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v80 + 16))(v79);
  v81 = *v79;
  v82 = v75;
  swift_retain();
  v453 = sub_1C13F7C78(v27, v81, v76);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v499);
  v83 = type metadata accessor for LockStateObserver();
  swift_allocObject();
  v84 = sub_1C135876C();
  *((_QWORD *)&v500 + 1) = v83;
  *(_QWORD *)&v501 = &off_1E7A8AAE0;
  *(_QWORD *)&v499 = v84;
  type metadata accessor for QoSManager();
  v85 = swift_allocObject();
  v86 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v499, v83);
  MEMORY[0x1E0C80A78](v86);
  v468 = v87;
  v88 = (uint64_t *)((char *)&v431 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0));
  v90 = *(void (**)(_QWORD))(v89 + 16);
  v471 = (char *)v83;
  v467 = v90;
  v90(v88);
  v91 = *v88;
  swift_retain_n();
  swift_retain_n();
  v92 = v82;
  v93 = sub_1C1403CFC((uint64_t)v61, v91, v92, v85);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v499);
  swift_release();
  v490 = v84;
  swift_release();
  v94 = (char *)objc_allocWithZone((Class)type metadata accessor for QoSObservationServiceServer());
  v492 = v92;
  swift_retain();
  v452 = sub_1C1404E90(v27, v93, v94);
  v489 = v93;
  swift_release();
  v95 = (void *)type metadata accessor for KnownClientStore();
  swift_allocObject();
  v96 = sub_1C13CEFBC(1);
  *((_QWORD *)&v500 + 1) = v95;
  *(_QWORD *)&v501 = &off_1E7A8D410;
  *(_QWORD *)&v499 = v96;
  v97 = v27;
  v98 = (objc_class *)type metadata accessor for AppEventObserver();
  v99 = (char *)objc_allocWithZone(v98);
  v100 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v499, *((uint64_t *)&v500 + 1));
  MEMORY[0x1E0C80A78](v100);
  v102 = (uint64_t *)((char *)&v431 - ((v101 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v103 + 16))(v102);
  v104 = *v102;
  swift_retain();
  v105 = sub_1C13F8DB4(v104, v99);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v499);
  *((_QWORD *)&v500 + 1) = v98;
  *(_QWORD *)&v501 = &off_1E7A8D080;
  *(_QWORD *)&v499 = v105;
  v466 = type metadata accessor for AuthorizationManager();
  v106 = swift_allocObject();
  v107 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v499, (uint64_t)v98);
  MEMORY[0x1E0C80A78](v107);
  v475 = v108;
  v109 = (uint64_t *)((char *)&v431 - (((unint64_t)v108 + 15) & 0xFFFFFFFFFFFFFFF0));
  v111 = *(void (**)(_QWORD))(v110 + 16);
  v494 = v98;
  v474 = v111;
  v111(v109);
  v112 = *v109;
  v113 = v105;
  v114 = sub_1C13F76FC(v112, v106);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v499);
  v477 = (uint64_t)v113;

  v115 = objc_allocWithZone((Class)type metadata accessor for AuthorizationServer());
  v116 = v492;
  swift_retain();
  v488 = v114;
  v451 = sub_1C141F71C(v97, v114);
  type metadata accessor for ProcessMonitor();
  v117 = (_QWORD *)swift_allocObject();
  v118 = MEMORY[0x1E0DEE9E8];
  v117[2] = 0;
  v117[3] = v118;
  v119 = MEMORY[0x1E0DEE9E0];
  v117[4] = MEMORY[0x1E0DEE9E0];
  v117[5] = v119;
  v120 = swift_allocObject();
  v121 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v120 + 16) = v121;
  *v121 = 0;
  v117[6] = v120;
  *((_QWORD *)&v500 + 1) = v95;
  *(_QWORD *)&v501 = &off_1E7A8D410;
  *(_QWORD *)&v499 = v96;
  type metadata accessor for ProcessManager();
  v122 = swift_allocObject();
  v123 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v499, (uint64_t)v95);
  MEMORY[0x1E0C80A78](v123);
  v125 = (uint64_t *)((char *)&v431 - ((v124 + 15) & 0xFFFFFFFFFFFFFFF0));
  v127 = *(void (**)(_QWORD))(v126 + 16);
  v492 = v95;
  v127(v125);
  v128 = *v125;
  swift_retain_n();
  v129 = swift_retain_n();
  v130 = sub_1C1403AB4(v129, v128, v122);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v499);
  v450 = v117;
  swift_release();
  swift_release();
  v476 = (char *)v116;
  swift_retain();
  v131 = swift_retain();
  v480 = v130;
  v482 = v96;
  v478 = v97;
  v472 = sub_1C13F9CE0(v131, v96, v97, 1);
  if (qword_1ED7936D0 != -1)
    swift_once();
  v497 = v61;
  v132 = v498;
  v133 = v486;
  if (qword_1ED798640)
  {
    v134 = type metadata accessor for PushBudgetStore();
    swift_allocObject();
    v135 = swift_retain_n();
    v136 = sub_1C141E970(v135);
    *((_QWORD *)&v500 + 1) = v134;
    *(_QWORD *)&v501 = sub_1C1329AD0((unint64_t *)&unk_1ED792728, (uint64_t (*)(uint64_t))type metadata accessor for PushBudgetStore, (uint64_t)&unk_1C142C054);
    *(_QWORD *)&v499 = v136;
    v487 = sub_1C1426560();
    swift_allocObject();
    swift_retain();
    v479 = sub_1C1426554();
    swift_release();
    swift_release();
  }
  else
  {
    v137 = sub_1C1426560();
    v499 = 0u;
    v500 = 0u;
    *(_QWORD *)&v501 = 0;
    v487 = v137;
    swift_allocObject();
    v479 = sub_1C1426554();
  }
  v138 = v490;
  v139 = sub_1C142665C();
  swift_allocObject();
  v140 = sub_1C1426650();
  *((_QWORD *)&v500 + 1) = v466;
  *(_QWORD *)&v501 = sub_1C1329AD0((unint64_t *)&unk_1ED792738, (uint64_t (*)(uint64_t))type metadata accessor for AuthorizationManager, (uint64_t)&unk_1C1428180);
  *(_QWORD *)&v499 = v488;
  swift_retain();
  sub_1C1426644();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v499);
  *((_QWORD *)&v500 + 1) = v133;
  v141 = sub_1C1329AD0(&qword_1ED792968, (uint64_t (*)(uint64_t))type metadata accessor for TaskScheduler, (uint64_t)&unk_1C142A1AC);
  *(_QWORD *)&v501 = v141;
  *(_QWORD *)&v499 = v132;
  v142 = sub_1C142668C();
  swift_allocObject();
  swift_retain();
  v143 = sub_1C1426680();
  v144 = sub_1C1426674();
  swift_allocObject();
  v145 = sub_1C1426668();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED791E38);
  v146 = swift_allocObject();
  *(_OWORD *)(v146 + 16) = xmmword_1C1428070;
  v147 = MEMORY[0x1E0D8D280];
  *(_QWORD *)(v146 + 56) = v142;
  *(_QWORD *)(v146 + 64) = v147;
  *(_QWORD *)(v146 + 32) = v143;
  v148 = MEMORY[0x1E0D8D260];
  *(_QWORD *)(v146 + 96) = v144;
  *(_QWORD *)(v146 + 104) = v148;
  *(_QWORD *)(v146 + 72) = v145;
  v149 = sub_1C14266E0();
  swift_allocObject();
  v448 = v143;
  swift_retain();
  v447 = v145;
  swift_retain();
  v150 = sub_1C14266D4();
  *((_QWORD *)&v500 + 1) = v149;
  *(_QWORD *)&v501 = MEMORY[0x1E0D8D2E0];
  *(_QWORD *)&v499 = v150;
  v446 = v150;
  swift_retain();
  sub_1C1426644();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v499);
  v151 = (uint64_t)v471;
  *((_QWORD *)&v500 + 1) = v471;
  *(_QWORD *)&v501 = &off_1E7A8AAE0;
  *(_QWORD *)&v499 = v138;
  v152 = type metadata accessor for PushBudgetEnforcementPolicyProvider();
  v153 = (_QWORD *)swift_allocObject();
  v154 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v499, v151);
  MEMORY[0x1E0C80A78](v154);
  v436 = (v155 + 15) & 0xFFFFFFFFFFFFFFF0;
  v156 = (uint64_t *)((char *)&v431 - v436);
  v467((char *)&v431 - v436);
  v157 = *v156;
  swift_retain();
  v158 = sub_1C13F9A64(v157, v153);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v499);
  v159 = v498;
  sub_1C1426560();
  *((_QWORD *)&v500 + 1) = v487;
  *(_QWORD *)&v501 = MEMORY[0x1E0D8D178];
  *(_QWORD *)&v499 = v479;
  v510 = v139;
  v511 = (_UNKNOWN **)MEMORY[0x1E0D8D248];
  *(_QWORD *)&v509 = v140;
  v507 = (_QWORD *)v152;
  v508 = (_UNKNOWN **)sub_1C1329AD0((unint64_t *)&unk_1ED7972D0, (uint64_t (*)(uint64_t))type metadata accessor for PushBudgetEnforcementPolicyProvider, (uint64_t)&unk_1C142B8B4);
  v505 = v141;
  *(_QWORD *)&v506 = v158;
  v437 = v141;
  v504 = v486;
  v503 = v159;
  v470 = sub_1C14265B4();
  swift_allocObject();
  swift_retain();
  swift_retain();
  v449 = v140;
  swift_retain();
  v445 = v158;
  swift_retain();
  v160 = sub_1C14265A8();
  swift_retain();
  v161 = v476;
  v487 = v160;
  v162 = (void *)sub_1C14052F8(v476);
  swift_release();
  v476 = v161;
  v163 = v493;
  swift_retain();
  v164 = v482;
  swift_retain();
  v165 = v488;
  swift_retain();
  v166 = v480;
  swift_retain();
  v167 = v162;
  v168 = v478;
  v444 = sub_1C13F9E30((uint64_t)v167, v166, v163, v164, v165, v478);
  *((_QWORD *)&v500 + 1) = v484;
  *(_QWORD *)&v501 = &off_1E7A8DBF0;
  *(_QWORD *)&v499 = v163;
  LOBYTE(v162) = *(_QWORD *)(v163 + 40) != 0;
  v510 = (uint64_t)v492;
  v511 = &off_1E7A8D410;
  *(_QWORD *)&v509 = v164;
  v507 = v494;
  v508 = &off_1E7A8D080;
  v169 = (void *)v477;
  *(_QWORD *)&v506 = v477;
  v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED795A88);
  v171 = swift_allocObject();
  v172 = v497;
  *(_QWORD *)(v171 + 16) = 4096;
  *(_QWORD *)(v171 + 24) = v172;
  sub_1C1339184(&v499, v171 + 32);
  v469 = xmmword_1C142B3E0;
  *(_OWORD *)(v171 + 72) = xmmword_1C142B3E0;
  *(_BYTE *)(v171 + 88) = (_BYTE)v162;
  *(_QWORD *)(v171 + 96) = v165;
  sub_1C1339184(&v509, v171 + 104);
  sub_1C1339184(&v506, v171 + 144);
  swift_retain_n();
  v476 = v476;
  swift_retain();
  swift_retain();
  v173 = v169;
  swift_retain();
  v174 = v167;
  v175 = swift_retain();
  v492 = (id)sub_1C13F9F98(v175, v164, v168, v174);
  *((_QWORD *)&v500 + 1) = v170;
  *(_QWORD *)&v501 = &off_1E7A8F170;
  *(_QWORD *)&v499 = v171;
  type metadata accessor for PushToStartAppBundleIDProvider();
  v176 = swift_allocObject();
  sub_1C1339184(&v499, v176 + 16);
  swift_retain();
  v177 = v173;
  swift_retain();
  v178 = v174;
  swift_retain();
  v442 = sub_1C13FA0DC((uint64_t)v177, (uint64_t)v178, v176, v165, v164);
  v179 = objc_allocWithZone((Class)type metadata accessor for PushFrequentUpdatesObservationServer());
  v435 = v476;
  swift_retain();
  v180 = v178;
  v441 = sub_1C13E5038(v180, v165, v168);
  v438 = (id)type metadata accessor for PowerLogger();
  swift_allocObject();
  v477 = sub_1C138B460();
  *((_QWORD *)&v500 + 1) = v484;
  *(_QWORD *)&v501 = &off_1E7A8DBF0;
  *(_QWORD *)&v499 = v163;
  type metadata accessor for PersistentParticipant();
  v181 = swift_allocObject();
  *(_QWORD *)(v181 + 24) = 0;
  swift_unknownObjectWeakInit();
  v182 = swift_allocObject();
  v183 = v163;
  v184 = v165;
  swift_retain();
  v185 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v182 + 16) = v185;
  *v185 = 0;
  *(_QWORD *)(v181 + 72) = v182;
  v465 = v181;
  sub_1C1339184(&v499, v181 + 32);
  v186 = (uint64_t)v497;
  swift_retain();
  swift_retain();
  v476 = (char *)v492;
  v492 = sub_1C13FA324((uint64_t)v476, v165, v186);
  type metadata accessor for XPCOutputParticipant();
  v187 = swift_allocObject();
  v188 = (void *)v472;
  *(_QWORD *)(v187 + 16) = v472;
  v189 = qword_1ED793948;
  v190 = v188;
  if (v189 != -1)
    swift_once();
  v191 = v495;
  v192 = __swift_project_value_buffer(v495, (uint64_t)qword_1ED798598);
  (*(void (**)(char *, uint64_t, uint64_t))(v491 + 16))(v485, v192, v191);
  v491 = v187;
  sub_1C142680C();
  v440 = v190;

  type metadata accessor for DismissParticipant();
  v193 = swift_allocObject();
  v194 = swift_retain();
  v495 = sub_1C1402468(v194, v193);
  type metadata accessor for DurationEnforcerParticipant();
  v195 = swift_allocObject();
  v196 = swift_retain();
  v485 = (char *)sub_1C1402398(v196, v195, 28800.0);
  v197 = (uint64_t)v494;
  *((_QWORD *)&v500 + 1) = v494;
  *(_QWORD *)&v501 = &off_1E7A8D080;
  *(_QWORD *)&v499 = v177;
  type metadata accessor for AppEventParticipant();
  v198 = (_QWORD *)swift_allocObject();
  v199 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v499, v197);
  MEMORY[0x1E0C80A78](v199);
  v201 = (uint64_t *)((char *)&v431 - ((v200 + 15) & 0xFFFFFFFFFFFFFFF0));
  v474(v201);
  v202 = *v201;
  v203 = v177;
  swift_retain();
  v204 = v203;
  v475 = sub_1C1401BF4(v202, v183, v198);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v499);
  v439 = v204;

  v205 = v466;
  *((_QWORD *)&v500 + 1) = v466;
  *(_QWORD *)&v501 = &off_1E7A8A518;
  *(_QWORD *)&v499 = v165;
  type metadata accessor for PushParticipant();
  v206 = (_QWORD *)swift_allocObject();
  v207 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v499, v205);
  v433 = *(_QWORD *)(*(_QWORD *)(v205 - 8) + 64);
  MEMORY[0x1E0C80A78](v207);
  v434 = (v208 + 15) & 0xFFFFFFFFFFFFFFF0;
  v209 = (uint64_t *)((char *)&v431 - v434);
  v432 = *(void (**)(_QWORD))(v210 + 16);
  v432((char *)&v431 - v434);
  v211 = *v209;
  v212 = v489;
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  v213 = v180;
  v214 = v487;
  swift_retain();
  v494 = sub_1C1401458((uint64_t)v213, v214, v212, v211, v171, v206);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v499);
  swift_release();
  v443 = v171;
  swift_release();
  type metadata accessor for KeepAliveParticipant();
  v215 = (_QWORD *)swift_allocObject();
  v216 = swift_allocObject();
  v217 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v216 + 16) = v217;
  *v217 = 0;
  v215[2] = v216;
  v215[3] = MEMORY[0x1E0DEE9E8];
  v215[4] = 0;
  v474 = (void (*)(_QWORD))v215;
  v215[6] = 0;
  swift_unknownObjectWeakInit();
  v218 = (uint64_t)v473;
  *((_QWORD *)&v500 + 1) = v473;
  *(_QWORD *)&v501 = &off_1E7A8AED0;
  *(_QWORD *)&v499 = v497;
  type metadata accessor for AssertionParticipant();
  v219 = (_QWORD *)swift_allocObject();
  v220 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v499, v218);
  MEMORY[0x1E0C80A78](v220);
  v222 = (uint64_t *)((char *)&v431 - ((v221 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v223 + 16))(v222);
  v224 = *v222;
  v219[5] = v218;
  v219[6] = &off_1E7A8AED0;
  v473 = v219;
  v219[2] = v224;
  swift_retain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v499);
  type metadata accessor for CountEnforcerParticipant();
  v225 = swift_allocObject();
  *((_QWORD *)&v500 + 1) = v484;
  *(_QWORD *)&v501 = &off_1E7A8DBF0;
  *(_QWORD *)&v499 = v493;
  *(_QWORD *)(v225 + 24) = 0;
  swift_unknownObjectWeakInit();
  v226 = swift_allocObject();
  swift_retain();
  v227 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v226 + 16) = v227;
  *v227 = 0;
  *(_QWORD *)(v225 + 88) = v226;
  sub_1C1339184(&v499, v225 + 32);
  v484 = v225;
  *(_OWORD *)(v225 + 72) = v469;
  v228 = (uint64_t)v438;
  *((_QWORD *)&v500 + 1) = v438;
  *(_QWORD *)&v501 = &off_1E7A8BF78;
  *(_QWORD *)&v499 = v477;
  v510 = sub_1C14264DC();
  v511 = (_UNKNOWN **)MEMORY[0x1E0D8D108];
  *(_QWORD *)&v509 = v213;
  v507 = (_QWORD *)v470;
  v508 = (_UNKNOWN **)MEMORY[0x1E0D8D1C8];
  *(_QWORD *)&v506 = v487;
  type metadata accessor for PowerLogParticipant();
  v229 = (_QWORD *)swift_allocObject();
  v230 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v499, v228);
  MEMORY[0x1E0C80A78](v230);
  v232 = (uint64_t *)((char *)&v431 - ((v231 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v233 + 16))(v232);
  v234 = *v232;
  v229[5] = v228;
  v229[6] = &off_1E7A8BF78;
  v229[2] = v234;
  sub_1C1339184(&v509, (uint64_t)(v229 + 7));
  v472 = (uint64_t)v229;
  sub_1C1339184(&v506, (uint64_t)(v229 + 12));
  v438 = v213;
  swift_retain();
  swift_retain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v499);
  *((_QWORD *)&v500 + 1) = v205;
  *(_QWORD *)&v501 = &off_1E7A8A518;
  *(_QWORD *)&v499 = v184;
  type metadata accessor for AuthorizationParticipant();
  v235 = (_QWORD *)swift_allocObject();
  v236 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v499, v205);
  MEMORY[0x1E0C80A78](v236);
  v237 = v434;
  v238 = v432;
  v432((char *)&v431 - v434);
  v239 = *(uint64_t *)((char *)&v431 - v237);
  swift_retain();
  v470 = (uint64_t)sub_1C13F88C4(v239, v235, (void (*)(void))sub_1C13392E4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v499);
  type metadata accessor for StaleParticipant();
  v240 = swift_allocObject();
  *(_QWORD *)&v469 = v240;
  *((_QWORD *)&v500 + 1) = v486;
  *(_QWORD *)&v501 = v437;
  *(_QWORD *)&v499 = v498;
  v241 = swift_allocObject();
  swift_retain();
  v242 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v241 + 16) = v242;
  *v242 = 0;
  *(_QWORD *)(v240 + 16) = v241;
  *(_OWORD *)(v240 + 72) = 0u;
  *(_OWORD *)(v240 + 88) = 0u;
  *(_QWORD *)(v240 + 104) = 0;
  *(_QWORD *)(v240 + 112) = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v240 + 128) = 0;
  swift_unknownObjectWeakInit();
  sub_1C1339184(&v499, v240 + 24);
  *(_QWORD *)(v240 + 64) = 0x405E000000000000;
  *((_QWORD *)&v500 + 1) = v205;
  *(_QWORD *)&v501 = &off_1E7A8A518;
  *(_QWORD *)&v499 = v184;
  type metadata accessor for FrequentPushParticipant();
  v243 = (_QWORD *)swift_allocObject();
  v244 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v499, v205);
  MEMORY[0x1E0C80A78](v244);
  v238((char *)&v431 - v237);
  v245 = *(uint64_t *)((char *)&v431 - v237);
  swift_retain_n();
  v496 = (uint64_t)sub_1C13F88C4(v245, v243, (void (*)(void))sub_1C1339388);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v499);
  swift_release();
  v246 = (uint64_t)v471;
  *((_QWORD *)&v500 + 1) = v471;
  *(_QWORD *)&v501 = &off_1E7A8AAE0;
  *(_QWORD *)&v499 = v490;
  type metadata accessor for MomentaryParticipant();
  v247 = (_QWORD *)swift_allocObject();
  v248 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v499, v246);
  MEMORY[0x1E0C80A78](v248);
  v249 = (uint64_t *)((char *)&v431 - v436);
  v467((char *)&v431 - v436);
  v250 = *v249;
  swift_retain_n();
  v486 = (uint64_t)sub_1C13F8FE4(v250, v247);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v499);
  swift_release();
  v502 = 0;
  v500 = 0u;
  v501 = 0u;
  v499 = 0u;
  v251 = (objc_class *)type metadata accessor for ActivityPreferenceReplicationFilter();
  v252 = objc_allocWithZone(v251);
  v253 = v493;
  swift_retain();
  v254 = objc_msgSend(v252, sel_init);
  v510 = (uint64_t)v251;
  v511 = &off_1E7A8B710;
  *(_QWORD *)&v509 = v254;
  type metadata accessor for ReplicatorParticipant();
  v255 = swift_allocObject();
  v256 = (char *)sub_1C1400FC8(v253, (uint64_t)&v499, (uint64_t)&v509, v255);
  v257 = objc_allocWithZone((Class)type metadata accessor for ActivityRemoteSubscriptionPreferencesObservationServer());
  swift_retain_n();
  v471 = v435;
  v478 = (void *)sub_1C13EE540((uint64_t)v256, v478);
  *(_QWORD *)&v476[OBJC_IVAR____TtC11SessionCore11InputServer_delegate + 8] = &off_1E7A8B478;
  v258 = (uint64_t)v492;
  swift_unknownObjectWeakAssign();
  v259 = v465;
  v260 = swift_conformsToProtocol2();
  if (v260)
    v261 = v260;
  else
    v261 = 0;
  if (v260)
    v262 = v259;
  else
    v262 = 0;
  if (v262)
  {
    ObjectType = swift_getObjectType();
    v264 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v261 + 24);
    swift_retain();
    v265 = (uint64_t)v481;
    v266 = swift_retain();
    v264(v266, &off_1E7A8D458, ObjectType, v261);
    v258 = (uint64_t)v492;
    v267 = (uint64_t)v483;
  }
  else
  {
    swift_retain();
    v267 = (uint64_t)v483;
    v265 = (uint64_t)v481;
  }
  v268 = *(os_unfair_lock_s **)(*(_QWORD *)(v265 + 16) + 16);
  os_unfair_lock_lock(v268);
  sub_1C1400EA4(v259, v265);
  os_unfair_lock_unlock(v268);
  swift_release();
  v269 = swift_conformsToProtocol2();
  if (v269)
    v270 = v269;
  else
    v270 = 0;
  if (v269)
    v271 = v258;
  else
    v271 = 0;
  v272 = (uint64_t)v497;
  v273 = (uint64_t)v485;
  if (v271)
  {
    v274 = swift_getObjectType();
    v275 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v270 + 24);
    swift_retain();
    swift_retain();
    v275(v265, &off_1E7A8D458, v274, v270);
    v258 = (uint64_t)v492;
  }
  else
  {
    swift_retain();
  }
  v276 = *(os_unfair_lock_s **)(*(_QWORD *)(v265 + 16) + 16);
  os_unfair_lock_lock(v276);
  sub_1C1400D80(v258, v265);
  os_unfair_lock_unlock(v276);
  swift_release();
  v277 = swift_conformsToProtocol2();
  if (v277)
    v278 = v277;
  else
    v278 = 0;
  if (v277)
    v279 = v272;
  else
    v279 = 0;
  if (v279)
  {
    v280 = swift_getObjectType();
    v281 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v278 + 24);
    swift_retain_n();
    v282 = swift_retain();
    v281(v282, &off_1E7A8D458, v280, v278);
    swift_release();
  }
  else
  {
    swift_retain();
  }
  v283 = *(os_unfair_lock_s **)(*(_QWORD *)(v265 + 16) + 16);
  os_unfair_lock_lock(v283);
  sub_1C1400C5C(v272, v265);
  os_unfair_lock_unlock(v283);
  swift_release();
  v284 = v491;
  v285 = swift_conformsToProtocol2();
  if (v285)
    v286 = v285;
  else
    v286 = 0;
  if (v285)
    v287 = v284;
  else
    v287 = 0;
  if (v287)
  {
    v288 = swift_getObjectType();
    v289 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v286 + 24);
    swift_retain();
    swift_retain();
    v289(v265, &off_1E7A8D458, v288, v286);
    v284 = v491;
  }
  else
  {
    swift_retain();
  }
  v290 = *(os_unfair_lock_s **)(*(_QWORD *)(v265 + 16) + 16);
  os_unfair_lock_lock(v290);
  sub_1C1400B38(v284, v265);
  os_unfair_lock_unlock(v290);
  swift_release();
  v291 = (uint64_t)v494;
  v292 = swift_conformsToProtocol2();
  if (v292)
    v293 = v292;
  else
    v293 = 0;
  if (v292)
    v294 = v291;
  else
    v294 = 0;
  if (v294)
  {
    v295 = swift_getObjectType();
    v296 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v293 + 24);
    swift_retain();
    swift_retain();
    v296(v265, &off_1E7A8D458, v295, v293);
    v291 = (uint64_t)v494;
  }
  else
  {
    swift_retain();
  }
  v297 = *(os_unfair_lock_s **)(*(_QWORD *)(v265 + 16) + 16);
  os_unfair_lock_lock(v297);
  sub_1C1400A14(v291, v265);
  os_unfair_lock_unlock(v297);
  swift_release();
  v298 = v495;
  v299 = swift_conformsToProtocol2();
  if (v299)
    v300 = v299;
  else
    v300 = 0;
  if (v299)
    v301 = v298;
  else
    v301 = 0;
  if (v301)
  {
    v302 = swift_getObjectType();
    v303 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v300 + 24);
    swift_retain();
    swift_retain();
    v303(v265, &off_1E7A8D458, v302, v300);
    v298 = v495;
  }
  else
  {
    swift_retain();
  }
  v304 = *(os_unfair_lock_s **)(*(_QWORD *)(v265 + 16) + 16);
  os_unfair_lock_lock(v304);
  sub_1C14008F0(v298, v265);
  os_unfair_lock_unlock(v304);
  swift_release();
  v305 = swift_conformsToProtocol2();
  if (v305)
    v306 = v305;
  else
    v306 = 0;
  if (v305)
    v307 = v273;
  else
    v307 = 0;
  if (v307)
  {
    v308 = swift_getObjectType();
    v309 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v306 + 24);
    swift_retain();
    swift_retain();
    v309(v265, &off_1E7A8D458, v308, v306);
  }
  else
  {
    swift_retain();
  }
  v310 = *(os_unfair_lock_s **)(*(_QWORD *)(v265 + 16) + 16);
  os_unfair_lock_lock(v310);
  sub_1C14007CC(v273, v265);
  os_unfair_lock_unlock(v310);
  swift_release();
  v311 = (uint64_t)v475;
  v312 = swift_conformsToProtocol2();
  if (v312)
    v313 = v312;
  else
    v313 = 0;
  if (v312)
    v314 = v311;
  else
    v314 = 0;
  if (v314)
  {
    v315 = swift_getObjectType();
    v316 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v313 + 24);
    swift_retain();
    swift_retain();
    v316(v265, &off_1E7A8D458, v315, v313);
  }
  else
  {
    swift_retain();
  }
  v317 = *(os_unfair_lock_s **)(*(_QWORD *)(v265 + 16) + 16);
  os_unfair_lock_lock(v317);
  sub_1C14006A8(v311, v265);
  os_unfair_lock_unlock(v317);
  swift_release();
  v318 = (uint64_t)v474;
  v319 = swift_conformsToProtocol2();
  if (v319)
    v320 = v319;
  else
    v320 = 0;
  if (v319)
    v321 = v318;
  else
    v321 = 0;
  if (v321)
  {
    v322 = swift_getObjectType();
    v323 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v320 + 24);
    swift_retain();
    swift_retain();
    v323(v265, &off_1E7A8D458, v322, v320);
  }
  else
  {
    swift_retain();
  }
  v324 = *(os_unfair_lock_s **)(*(_QWORD *)(v265 + 16) + 16);
  os_unfair_lock_lock(v324);
  sub_1C1400584(v318, v265);
  os_unfair_lock_unlock(v324);
  swift_release();
  v325 = (uint64_t)v473;
  v326 = swift_conformsToProtocol2();
  if (v326)
    v327 = v326;
  else
    v327 = 0;
  if (v326)
    v328 = v325;
  else
    v328 = 0;
  if (v328)
  {
    v329 = swift_getObjectType();
    v330 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v327 + 24);
    swift_retain();
    swift_retain();
    v330(v265, &off_1E7A8D458, v329, v327);
  }
  else
  {
    swift_retain();
  }
  v331 = *(os_unfair_lock_s **)(*(_QWORD *)(v265 + 16) + 16);
  os_unfair_lock_lock(v331);
  sub_1C1400460(v325, v265);
  os_unfair_lock_unlock(v331);
  swift_release();
  v332 = v484;
  v333 = swift_conformsToProtocol2();
  if (v333)
    v334 = v333;
  else
    v334 = 0;
  if (v333)
    v335 = v332;
  else
    v335 = 0;
  if (v335)
  {
    v336 = swift_getObjectType();
    v337 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v334 + 24);
    swift_retain();
    swift_retain();
    v337(v265, &off_1E7A8D458, v336, v334);
  }
  else
  {
    swift_retain();
  }
  v338 = *(os_unfair_lock_s **)(*(_QWORD *)(v265 + 16) + 16);
  os_unfair_lock_lock(v338);
  sub_1C140033C(v332, v265);
  os_unfair_lock_unlock(v338);
  swift_release();
  v339 = v472;
  v340 = swift_conformsToProtocol2();
  if (v340)
    v341 = v340;
  else
    v341 = 0;
  if (v340)
    v342 = v339;
  else
    v342 = 0;
  if (v342)
  {
    v343 = swift_getObjectType();
    v344 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v341 + 24);
    swift_retain();
    swift_retain();
    v344(v265, &off_1E7A8D458, v343, v341);
  }
  else
  {
    swift_retain();
  }
  v345 = *(os_unfair_lock_s **)(*(_QWORD *)(v265 + 16) + 16);
  os_unfair_lock_lock(v345);
  sub_1C1400218(v339, v265);
  os_unfair_lock_unlock(v345);
  swift_release();
  v346 = v470;
  v347 = swift_conformsToProtocol2();
  if (v347)
    v348 = v347;
  else
    v348 = 0;
  if (v347)
    v349 = v346;
  else
    v349 = 0;
  if (v349)
  {
    v350 = swift_getObjectType();
    v351 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v348 + 24);
    swift_retain();
    swift_retain();
    v351(v265, &off_1E7A8D458, v350, v348);
  }
  else
  {
    swift_retain();
  }
  v352 = *(os_unfair_lock_s **)(*(_QWORD *)(v265 + 16) + 16);
  os_unfair_lock_lock(v352);
  sub_1C14000F4(v346, v265);
  os_unfair_lock_unlock(v352);
  swift_release();
  v353 = v469;
  v354 = swift_conformsToProtocol2();
  if (v354)
    v355 = v354;
  else
    v355 = 0;
  if (v354)
    v356 = v353;
  else
    v356 = 0;
  if (v356)
  {
    v357 = swift_getObjectType();
    v358 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v355 + 24);
    swift_retain();
    swift_retain();
    v358(v265, &off_1E7A8D458, v357, v355);
  }
  else
  {
    swift_retain();
  }
  v359 = *(os_unfair_lock_s **)(*(_QWORD *)(v265 + 16) + 16);
  os_unfair_lock_lock(v359);
  sub_1C13FFFD0(v353, v265);
  os_unfair_lock_unlock(v359);
  swift_release();
  v360 = v496;
  v361 = swift_conformsToProtocol2();
  if (v361)
    v362 = v361;
  else
    v362 = 0;
  if (v361)
    v363 = v360;
  else
    v363 = 0;
  if (v363)
  {
    v364 = swift_getObjectType();
    v365 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v362 + 24);
    swift_retain();
    swift_retain();
    v365(v265, &off_1E7A8D458, v364, v362);
  }
  else
  {
    swift_retain();
  }
  v366 = *(os_unfair_lock_s **)(*(_QWORD *)(v265 + 16) + 16);
  os_unfair_lock_lock(v366);
  sub_1C13FFEAC(v360, v265);
  os_unfair_lock_unlock(v366);
  swift_release();
  v367 = swift_conformsToProtocol2();
  if (v367)
    v368 = v367;
  else
    v368 = 0;
  if (v367)
    v369 = v267;
  else
    v369 = 0;
  if (v369)
  {
    v370 = swift_getObjectType();
    v371 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v368 + 24);
    swift_retain();
    swift_retain();
    v371(v265, &off_1E7A8D458, v370, v368);
  }
  else
  {
    swift_retain();
  }
  v372 = *(os_unfair_lock_s **)(*(_QWORD *)(v265 + 16) + 16);
  os_unfair_lock_lock(v372);
  sub_1C13FFD88(v267, v265);
  os_unfair_lock_unlock(v372);
  swift_release();
  v373 = v486;
  v374 = swift_conformsToProtocol2();
  if (v374)
    v375 = v374;
  else
    v375 = 0;
  if (v374)
    v376 = v373;
  else
    v376 = 0;
  if (v376)
  {
    v377 = swift_getObjectType();
    v378 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v375 + 24);
    swift_retain();
    swift_retain();
    v378(v265, &off_1E7A8D458, v377, v375);
  }
  else
  {
    swift_retain();
  }
  v379 = *(os_unfair_lock_s **)(*(_QWORD *)(v265 + 16) + 16);
  os_unfair_lock_lock(v379);
  sub_1C13FFC64(v373, v265);
  os_unfair_lock_unlock(v379);
  swift_release();
  v380 = swift_conformsToProtocol2();
  if (v380)
    v381 = v380;
  else
    v381 = 0;
  if (v380)
    v382 = v256;
  else
    v382 = 0;
  if (v382)
  {
    v383 = swift_getObjectType();
    v384 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v381 + 24);
    swift_retain_n();
    v385 = swift_retain();
    v384(v385, &off_1E7A8D458, v383, v381);
    swift_release();
  }
  else
  {
    swift_retain();
  }
  v386 = v476;
  v387 = *(os_unfair_lock_s **)(*(_QWORD *)(v265 + 16) + 16);
  os_unfair_lock_lock(v387);
  sub_1C13FFB40((uint64_t)v256, v265);
  os_unfair_lock_unlock(v387);
  swift_release_n();
  v388 = qword_1ED7936D8;
  swift_retain();
  v476 = v256;
  if (v388 != -1)
    swift_once();
  v389 = (os_unfair_lock_s *)*((_QWORD *)off_1ED7957F8 + 2);
  os_unfair_lock_lock(v389);
  v390 = (uint64_t)v457;
  sub_1C13FF5E4(v272, 0xD000000000000010, 0x80000001C142E6F0, (uint64_t)v457);
  os_unfair_lock_unlock(v389);
  swift_release();
  v391 = (os_unfair_lock_s *)*((_QWORD *)off_1ED7957F8 + 2);
  v392 = (uint64_t)v494;
  swift_retain();
  os_unfair_lock_lock(v391);
  sub_1C13FF054(v392, 0x7672655368737570, 0xEA00000000007265, v390);
  os_unfair_lock_unlock(v391);
  swift_release();
  v393 = (os_unfair_lock_s *)*((_QWORD *)off_1ED7957F8 + 2);
  swift_retain();
  os_unfair_lock_lock(v393);
  sub_1C13FEAF8(v259, 0x7974697669746361, 0xED000065726F7453, v390);
  os_unfair_lock_unlock(v393);
  swift_release();
  v394 = (os_unfair_lock_s *)*((_QWORD *)off_1ED7957F8 + 2);
  v395 = v495;
  swift_retain();
  os_unfair_lock_lock(v394);
  sub_1C13FE59C(v395, 0xD000000000000012, 0x80000001C1430EE0, v390);
  os_unfair_lock_unlock(v394);
  swift_release();
  v396 = (os_unfair_lock_s *)*((_QWORD *)off_1ED7957F8 + 2);
  v397 = (uint64_t)v485;
  swift_retain();
  os_unfair_lock_lock(v396);
  sub_1C13FE040(v397, 0xD00000000000001BLL, 0x80000001C1430F00, v390);
  os_unfair_lock_unlock(v396);
  swift_release();
  v398 = (os_unfair_lock_s *)*((_QWORD *)off_1ED7957F8 + 2);
  v399 = (uint64_t)v474;
  swift_retain();
  os_unfair_lock_lock(v398);
  sub_1C13FDAE4(v399, 0xD000000000000014, 0x80000001C1430F20, v390);
  os_unfair_lock_unlock(v398);
  swift_release();
  v400 = (os_unfair_lock_s *)*((_QWORD *)off_1ED7957F8 + 2);
  v401 = (uint64_t)v498;
  swift_retain();
  os_unfair_lock_lock(v400);
  sub_1C13FD554(v401, 0x656863536B736174, 0xED000072656C7564, v390);
  os_unfair_lock_unlock(v400);
  swift_release();
  v402 = (os_unfair_lock_s *)*((_QWORD *)off_1ED7957F8 + 2);
  v403 = v489;
  swift_retain();
  os_unfair_lock_lock(v402);
  sub_1C13FCFDC(v403, 0x67616E614D736F71, 0xEA00000000007265, v390);
  os_unfair_lock_unlock(v402);
  swift_release();
  v404 = (os_unfair_lock_s *)*((_QWORD *)off_1ED7957F8 + 2);
  v405 = (uint64_t)v450;
  swift_retain();
  os_unfair_lock_lock(v404);
  sub_1C13FCA4C(v405, 0x4D737365636F7270, 0xEE00726F74696E6FLL, v390);
  os_unfair_lock_unlock(v404);
  swift_release();
  v406 = (os_unfair_lock_s *)*((_QWORD *)off_1ED7957F8 + 2);
  swift_retain();
  os_unfair_lock_lock(v406);
  sub_1C13FC4BC(v265, 0x7974697669746361, 0xEF726567616E614DLL, v390);
  os_unfair_lock_unlock(v406);
  swift_release();
  v407 = (os_unfair_lock_s *)*((_QWORD *)off_1ED7957F8 + 2);
  v408 = v488;
  swift_retain();
  os_unfair_lock_lock(v407);
  sub_1C13FBF60(v408, 0xD000000000000014, 0x80000001C142E850, v390);
  os_unfair_lock_unlock(v407);
  swift_release();
  v409 = (os_unfair_lock_s *)*((_QWORD *)off_1ED7957F8 + 2);
  v410 = v386;
  os_unfair_lock_lock(v409);
  sub_1C13FB9E0(v410, 0x7265537475706E69, 0xEB00000000726576, v390);
  os_unfair_lock_unlock(v409);

  v411 = (os_unfair_lock_s *)*((_QWORD *)off_1ED7957F8 + 2);
  v412 = v469;
  swift_retain();
  os_unfair_lock_lock(v411);
  sub_1C13FB484(v412, 0xD000000000000010, 0x80000001C1430F40, v390);
  os_unfair_lock_unlock(v411);
  swift_release();
  v413 = (os_unfair_lock_s *)*((_QWORD *)off_1ED7957F8 + 2);
  v414 = v486;
  swift_retain();
  os_unfair_lock_lock(v413);
  sub_1C13FAF28(v414, 0xD000000000000014, 0x80000001C1430F60, v390);
  os_unfair_lock_unlock(v413);
  swift_release();
  v415 = (os_unfair_lock_s *)*((_QWORD *)off_1ED7957F8 + 2);
  v416 = v439;
  os_unfair_lock_lock(v415);
  sub_1C13FA9D0(v416, 0xD000000000000010, 0x80000001C142C830, v390);
  os_unfair_lock_unlock(v415);

  v417 = (os_unfair_lock_s *)*((_QWORD *)off_1ED7957F8 + 2);
  v418 = (uint64_t)v476;
  swift_retain();
  os_unfair_lock_lock(v417);
  sub_1C13FA474(v418, 0xD000000000000015, 0x80000001C1430BB0, v390);
  os_unfair_lock_unlock(v417);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  result = v464;
  v420 = v441;
  v464[13] = v451;
  result[14] = v420;
  v421 = v490;
  result[15] = v489;
  result[16] = v421;
  v422 = v455;
  result[17] = v497;
  result[18] = v422;
  v423 = v454;
  result[19] = v452;
  result[20] = v423;
  v424 = v443;
  result[21] = v453;
  result[22] = v424;
  v425 = v480;
  result[23] = v410;
  result[24] = v425;
  v426 = v438;
  result[25] = v440;
  result[26] = v426;
  result[27] = v444;
  result[28] = v416;
  result[29] = v442;
  result[30] = v418;
  result[31] = v478;
  v427 = v498;
  result[2] = v471;
  result[3] = v427;
  v428 = v460;
  result[4] = v461;
  result[5] = v428;
  v429 = v458;
  result[6] = v459;
  result[7] = v429;
  result[9] = v481;
  result[8] = MEMORY[0x1E0D8CAC8];
  v430 = v456;
  result[10] = v390;
  result[11] = v430;
  return result;
}

void sub_1C13F6FF4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;

  v1 = sub_1C1425EDC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C13D2930();
  v5 = *(void **)(v0[11] + OBJC_IVAR____TtC11SessionCore25StateCaptureServiceServer_listener);
  if (!v5)
  {
    __break(1u);
    goto LABEL_18;
  }
  objc_msgSend(v5, sel_activate);
  v6 = *(void **)(v0[5] + OBJC_IVAR____TtC11SessionCore18AlertServiceServer_listener);
  if (!v6)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  objc_msgSend(v6, sel_activate);
  v7 = *(void **)(v0[13] + OBJC_IVAR____TtC11SessionCore19AuthorizationServer_listener);
  if (!v7)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  objc_msgSend(v7, sel_activate);
  v8 = *(void **)(v0[25] + OBJC_IVAR____TtC11SessionCore12OutputServer_listener);
  if (!v8)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  objc_msgSend(v8, sel_activate);
  v9 = *(void **)(v0[19] + OBJC_IVAR____TtC11SessionCore27QoSObservationServiceServer_listener);
  if (!v9)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  objc_msgSend(v9, sel_activate);
  v10 = *(void **)(v0[20] + OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceServer_listener);
  if (!v10)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  objc_msgSend(v10, sel_activate);
  v11 = *(void **)(v0[21] + OBJC_IVAR____TtC11SessionCore34ProminenceObservationServiceServer_listener);
  if (!v11)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  objc_msgSend(v11, sel_activate);
  v12 = *(void **)(v0[23] + OBJC_IVAR____TtC11SessionCore11InputServer_listener);
  if (!v12)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  objc_msgSend(v12, sel_activate);
  sub_1C13D9B24();
  v13 = *(void **)(v0[18] + OBJC_IVAR____TtC11SessionCore22AssertionServiceServer_listener);
  if (!v13)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  objc_msgSend(v13, sel_activate);
  sub_1C14264D0();
  sub_1C1425F3C();
  objc_msgSend(*(id *)(v0[28] + OBJC_IVAR____TtC11SessionCore16AppEventObserver_applicationWorkspace), sel_addObserver_, v0[28]);
  sub_1C13C7754();
  v14 = *(void **)(v0[14] + OBJC_IVAR____TtC11SessionCore36PushFrequentUpdatesObservationServer_listener);
  if (!v14)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  objc_msgSend(v14, sel_activate);
  if (v0[30])
  {
    swift_retain();
    sub_1C138DA18();
    swift_release();
  }
  v15 = v0[31];
  if (!v15)
    goto LABEL_16;
  v16 = *(void **)(v15 + OBJC_IVAR____TtC11SessionCore54ActivityRemoteSubscriptionPreferencesObservationServer_listener);
  if (v16)
  {
    objc_msgSend(v16, sel_activate);
LABEL_16:
    v17 = (void *)objc_opt_self();
    sub_1C1425EC4();
    sub_1C1425ED0();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v18 = (void *)sub_1C1426A7C();
    swift_bridgeObjectRelease();
    v19 = objc_msgSend(v17, sel_activateManualDomain_, v18);
    swift_unknownObjectRelease();

    return;
  }
LABEL_27:
  __break(1u);
}

id *Daemon.deinit()
{
  id *v0;

  swift_release();
  swift_release();

  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();

  swift_release();
  swift_release();

  return v0;
}

uint64_t Daemon.__deallocating_deinit()
{
  Daemon.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C13F73B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13[3];

  if (qword_1EF6DA7B0 != -1)
    swift_once();
  v7 = sub_1C1426854();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EF6DC648);
  swift_bridgeObjectRetain_n();
  v8 = sub_1C1426848();
  v9 = sub_1C1426C80();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v13[0] = v11;
    *(_DWORD *)v10 = 136446210;
    swift_bridgeObjectRetain();
    sub_1C132AD90(a2, a3, v13);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C1324000, v8, v9, "%{public}s: Received", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v11, -1, -1);
    MEMORY[0x1C3BAD3F4](v10, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  result = swift_beginAccess();
  *(_QWORD *)(a4 + 16) = 0;
  return result;
}

char *sub_1C13F7574(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;
  int64_t v7;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v15;
  _QWORD *v16;
  char *result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v6 = *(_QWORD **)v4;
  v7 = *(_QWORD *)(*(_QWORD *)v4 + 16);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v11 > v6[3] >> 1)
  {
    if (v7 <= v11)
      v15 = v7 + v10;
    else
      v15 = v7;
    v6 = sub_1C136C8D0(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  v16 = &v6[2 * a1 + 4];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797028);
  result = (char *)swift_arrayDestroy();
  if (!v10)
    goto LABEL_20;
  v18 = v6[2];
  v19 = __OFSUB__(v18, a2);
  v20 = v18 - a2;
  if (v19)
    goto LABEL_26;
  if ((v20 & 0x8000000000000000) == 0)
  {
    result = (char *)(v16 + 2);
    v21 = &v6[2 * a2 + 4];
    if (v16 + 2 != v21 || result >= (char *)&v21[2 * v20])
      result = (char *)memmove(result, v21, 16 * v20);
    v22 = v6[2];
    v19 = __OFADD__(v22, v10);
    v23 = v22 + v10;
    if (!v19)
    {
      v6[2] = v23;
LABEL_20:
      *v16 = a3;
      v16[1] = a4;
      *(_QWORD *)v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = (char *)sub_1C1426FC8();
  __break(1u);
  return result;
}

uint64_t sub_1C13F76FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  void (*v15)(char *, _QWORD, uint64_t);
  char *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  _QWORD v35[5];

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793A00);
  MEMORY[0x1E0C80A78](v4);
  v29 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939C0);
  v7 = *(_QWORD *)(v6 - 8);
  v31 = v6;
  v32 = v7;
  MEMORY[0x1E0C80A78](v6);
  v30 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C1426CD4();
  v10 = *(_QWORD *)(v9 - 8);
  v25 = v9;
  MEMORY[0x1E0C80A78](v9);
  v28 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1C1426C8C();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v12);
  v14 = sub_1C14269B0();
  MEMORY[0x1E0C80A78](v14);
  v35[3] = type metadata accessor for AppEventObserver();
  v35[4] = &off_1E7A8D080;
  v35[0] = a1;
  *(_QWORD *)(a2 + 16) = 0xD000000000000020;
  *(_QWORD *)(a2 + 24) = 0x80000001C1431570;
  v27 = sub_1C1330F6C();
  sub_1C1426998();
  v33 = MEMORY[0x1E0DEE9D8];
  v26 = sub_1C1329AD0((unint64_t *)&qword_1ED7939F0, v13, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A70);
  sub_1C132C820((unint64_t *)&qword_1ED797A80, (uint64_t *)&unk_1ED797A70, MEMORY[0x1E0DEAF38]);
  sub_1C1426DF4();
  v15 = *(void (**)(char *, _QWORD, uint64_t))(v10 + 104);
  v16 = v28;
  v15(v28, *MEMORY[0x1E0DEF8D8], v9);
  *(_QWORD *)(a2 + 72) = sub_1C1426D04();
  sub_1C1426974();
  v33 = MEMORY[0x1E0DEE9D8];
  sub_1C1426DF4();
  v15(v16, *MEMORY[0x1E0DEF8D0], v25);
  *(_QWORD *)(a2 + 80) = sub_1C1426D04();
  *(_QWORD *)(a2 + 88) = MEMORY[0x1E0DEE9E8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791EF8);
  swift_allocObject();
  *(_QWORD *)(a2 + 96) = sub_1C14268D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791EE8);
  swift_allocObject();
  *(_QWORD *)(a2 + 104) = sub_1C14268D8();
  swift_allocObject();
  *(_QWORD *)(a2 + 112) = sub_1C14268D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791EE0);
  swift_allocObject();
  *(_QWORD *)(a2 + 120) = sub_1C14268D8();
  *(_OWORD *)(a2 + 128) = 0u;
  *(_OWORD *)(a2 + 144) = 0u;
  sub_1C132E0A8((uint64_t)v35, a2 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 32), *(_QWORD *)(a2 + 56));
  v33 = sub_1C13C6B2C();
  v34 = *(id *)(a2 + 72);
  v17 = v34;
  v18 = sub_1C1426CA4();
  v19 = (uint64_t)v29;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v29, 1, 1, v18);
  v20 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797958);
  sub_1C132C820(&qword_1ED797950, &qword_1ED797958, MEMORY[0x1E0C95D90]);
  sub_1C1329AD0((unint64_t *)&qword_1ED797AA0, (uint64_t (*)(uint64_t))sub_1C1330F6C, MEMORY[0x1E0DEF7F8]);
  v21 = v30;
  sub_1C1426914();
  sub_1C132C860(v19, (uint64_t *)&unk_1ED793A00);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_1C132C820(&qword_1ED797910, &qword_1ED7939C0, MEMORY[0x1E0C95CB8]);
  v22 = v31;
  sub_1C1426938();
  swift_release();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v21, v22);
  swift_beginAccess();
  sub_1C14268A8();
  swift_endAccess();
  swift_release();
  sub_1C133A3EC();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  return a2;
}

uint64_t sub_1C13F7C78(void *a1, uint64_t a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _DWORD *v14;
  uint64_t v15;
  id v16;
  objc_class *v17;
  id v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t result;
  void *v26;
  uint64_t v27;
  id v28;
  char v29;
  char *v30;
  _QWORD aBlock[6];
  objc_super v32;
  _QWORD v33[3];
  uint64_t v34;
  _UNKNOWN **v35;

  v28 = a1;
  v27 = sub_1C1426CD4();
  v5 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C1426C8C();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v8);
  v10 = sub_1C14269B0();
  MEMORY[0x1E0C80A78](v10);
  v34 = type metadata accessor for AssertionManager();
  v35 = &off_1E7A8AEB0;
  v33[0] = a2;
  *(_QWORD *)&a3[OBJC_IVAR____TtC11SessionCore34ProminenceObservationServiceServer_listener] = 0;
  v11 = OBJC_IVAR____TtC11SessionCore34ProminenceObservationServiceServer_lock;
  type metadata accessor for UnfairLock();
  v12 = swift_allocObject();
  v13 = a3;
  v14 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v12 + 16) = v14;
  *v14 = 0;
  *(_QWORD *)&a3[v11] = v12;
  *(_QWORD *)&v13[OBJC_IVAR____TtC11SessionCore34ProminenceObservationServiceServer__lock_clients] = MEMORY[0x1E0DEE9E0];
  v15 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v13[OBJC_IVAR____TtC11SessionCore34ProminenceObservationServiceServer__lock_prominentActivityIdentifiers] = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v13[OBJC_IVAR____TtC11SessionCore34ProminenceObservationServiceServer_prominenceSubscription] = 0;
  sub_1C1330F6C();
  sub_1C1426998();
  aBlock[0] = v15;
  sub_1C1329AD0((unint64_t *)&qword_1ED7939F0, v9, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A70);
  sub_1C132C820((unint64_t *)&qword_1ED797A80, (uint64_t *)&unk_1ED797A70, MEMORY[0x1E0DEAF38]);
  sub_1C1426DF4();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF8D8], v27);
  v16 = v28;
  *(_QWORD *)&v13[OBJC_IVAR____TtC11SessionCore34ProminenceObservationServiceServer_requestProcessingQueue] = sub_1C1426D04();

  v17 = (objc_class *)type metadata accessor for ProminenceObservationServiceServer();
  v32.receiver = v13;
  v32.super_class = v17;
  v18 = objc_msgSendSuper2(&v32, sel_init);
  aBlock[0] = *(_QWORD *)(*__swift_project_boxed_opaque_existential_1(v33, v34) + 24);
  v19 = (char *)v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7979B0);
  sub_1C132C820(&qword_1ED7979A8, &qword_1ED7979B0, MEMORY[0x1E0C95FB8]);
  aBlock[0] = sub_1C1426908();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797958);
  sub_1C132C820(&qword_1ED797950, &qword_1ED797958, MEMORY[0x1E0C95D90]);
  v20 = sub_1C1426938();
  swift_release();
  swift_release();
  *(_QWORD *)&v19[OBJC_IVAR____TtC11SessionCore34ProminenceObservationServiceServer_prominenceSubscription] = v20;
  swift_release();
  v30 = v19;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = sub_1C140577C;
  *(_QWORD *)(v21 + 24) = &v29;
  aBlock[4] = sub_1C14058DC;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1327D10;
  aBlock[3] = &block_descriptor_138;
  v22 = _Block_copy(aBlock);
  v23 = (void *)objc_opt_self();
  swift_retain();
  v24 = objc_msgSend(v23, sel_listenerWithConfigurator_, v22);
  _Block_release(v22);
  swift_release();
  LOBYTE(v22) = swift_isEscapingClosureAtFileLocation();

  result = swift_release();
  if ((v22 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v26 = *(void **)&v19[OBJC_IVAR____TtC11SessionCore34ProminenceObservationServiceServer_listener];
    *(_QWORD *)&v19[OBJC_IVAR____TtC11SessionCore34ProminenceObservationServiceServer_listener] = v24;

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    return (uint64_t)v19;
  }
  return result;
}

_QWORD *sub_1C13F8114(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[4];
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  _UNKNOWN **v25;
  __int128 v26;
  uint64_t v27;
  _UNKNOWN **v28;

  v21 = a2;
  v19 = sub_1C1426CD4();
  v7 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v20 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C1426C8C();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v9);
  v11 = sub_1C14269B0();
  MEMORY[0x1E0C80A78](v11);
  v27 = type metadata accessor for InputServer();
  v28 = &off_1E7A8E510;
  *(_QWORD *)&v26 = a1;
  v24 = type metadata accessor for AssertionManager();
  v25 = &off_1E7A8AE88;
  *(_QWORD *)&v23 = a3;
  v18[3] = sub_1C1330F6C();
  sub_1C1426974();
  v22 = MEMORY[0x1E0DEE9D8];
  v18[1] = sub_1C1329AD0((unint64_t *)&qword_1ED7939F0, v10, MEMORY[0x1E0DEF828]);
  v18[0] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A70);
  v18[2] = sub_1C132C820((unint64_t *)&qword_1ED797A80, (uint64_t *)&unk_1ED797A70, MEMORY[0x1E0DEAF38]);
  sub_1C1426DF4();
  v12 = *MEMORY[0x1E0DEF8D0];
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  v15 = v19;
  v14 = v20;
  v13(v20, v12, v19);
  a4[2] = sub_1C1426D04();
  sub_1C1426974();
  v22 = MEMORY[0x1E0DEE9D8];
  sub_1C1426DF4();
  v13(v14, v12, v15);
  a4[3] = sub_1C1426D04();
  v16 = MEMORY[0x1E0DEE9D8];
  a4[10] = sub_1C13326C8(MEMORY[0x1E0DEE9D8]);
  a4[11] = sub_1C13326E4(v16);
  sub_1C14259D8();
  swift_allocObject();
  a4[12] = sub_1C14259CC();
  a4[14] = 0;
  swift_unknownObjectWeakInit();
  sub_1C1339184(&v26, (uint64_t)(a4 + 4));
  a4[9] = v21;
  sub_1C1339184(&v23, (uint64_t)(a4 + 15));
  return a4;
}

uint64_t sub_1C13F8424(void *a1, uint64_t a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _DWORD *v14;
  uint64_t v15;
  id v16;
  objc_class *v17;
  id v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t result;
  void *v26;
  uint64_t v27;
  id v28;
  char v29;
  char *v30;
  _QWORD aBlock[6];
  objc_super v32;
  _QWORD v33[3];
  uint64_t v34;
  _UNKNOWN **v35;

  v28 = a1;
  v27 = sub_1C1426CD4();
  v5 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C1426C8C();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v8);
  v10 = sub_1C14269B0();
  MEMORY[0x1E0C80A78](v10);
  v34 = type metadata accessor for AssertionManager();
  v35 = &off_1E7A8AEC0;
  v33[0] = a2;
  *(_QWORD *)&a3[OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceServer_listener] = 0;
  v11 = OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceServer_lock;
  type metadata accessor for UnfairLock();
  v12 = swift_allocObject();
  v13 = a3;
  v14 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v12 + 16) = v14;
  *v14 = 0;
  *(_QWORD *)&a3[v11] = v12;
  v15 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)&v13[OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceServer__lock_clients] = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)&v13[OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceServer__lock_presentations] = v15;
  *(_QWORD *)&v13[OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceServer_presentationSubscription] = 0;
  sub_1C1330F6C();
  sub_1C1426998();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1C1329AD0((unint64_t *)&qword_1ED7939F0, v9, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A70);
  sub_1C132C820((unint64_t *)&qword_1ED797A80, (uint64_t *)&unk_1ED797A70, MEMORY[0x1E0DEAF38]);
  sub_1C1426DF4();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF8D8], v27);
  v16 = v28;
  *(_QWORD *)&v13[OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceServer_requestProcessingQueue] = sub_1C1426D04();

  v17 = (objc_class *)type metadata accessor for PresentationObservationServiceServer();
  v32.receiver = v13;
  v32.super_class = v17;
  v18 = objc_msgSendSuper2(&v32, sel_init);
  aBlock[0] = *(_QWORD *)(*__swift_project_boxed_opaque_existential_1(v33, v34) + 32);
  v19 = (char *)v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7979A0);
  sub_1C132C820(&qword_1ED797998, &qword_1ED7979A0, MEMORY[0x1E0C95FB8]);
  aBlock[0] = sub_1C1426908();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797948);
  sub_1C132C820(&qword_1ED797940, &qword_1ED797948, MEMORY[0x1E0C95D90]);
  v20 = sub_1C1426938();
  swift_release();
  swift_release();
  *(_QWORD *)&v19[OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceServer_presentationSubscription] = v20;
  swift_release();
  v30 = v19;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = sub_1C140579C;
  *(_QWORD *)(v21 + 24) = &v29;
  aBlock[4] = sub_1C14058DC;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1327D10;
  aBlock[3] = &block_descriptor_148;
  v22 = _Block_copy(aBlock);
  v23 = (void *)objc_opt_self();
  swift_retain();
  v24 = objc_msgSend(v23, sel_listenerWithConfigurator_, v22);
  _Block_release(v22);
  swift_release();
  LOBYTE(v22) = swift_isEscapingClosureAtFileLocation();

  result = swift_release();
  if ((v22 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v26 = *(void **)&v19[OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceServer_listener];
    *(_QWORD *)&v19[OBJC_IVAR____TtC11SessionCore36PresentationObservationServiceServer_listener] = v24;

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    return (uint64_t)v19;
  }
  return result;
}

_QWORD *sub_1C13F88C4(uint64_t a1, _QWORD *a2, void (*a3)(void))
{
  uint64_t v6;
  _DWORD *v7;
  _QWORD v9[5];

  v9[3] = type metadata accessor for AuthorizationManager();
  v9[4] = &off_1E7A8A518;
  v9[0] = a1;
  type metadata accessor for UnfairLock();
  v6 = swift_allocObject();
  v7 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v6 + 16) = v7;
  *v7 = 0;
  a2[8] = MEMORY[0x1E0DEE9E8];
  a2[2] = v6;
  a2[9] = MEMORY[0x1E0DEE9E0];
  a2[11] = 0;
  swift_unknownObjectWeakInit();
  sub_1C132E0A8((uint64_t)v9, (uint64_t)(a2 + 3));
  __swift_project_boxed_opaque_existential_1(a2 + 3, a2[6]);
  a3();
  swift_allocObject();
  swift_weakInit();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793150);
  sub_1C132C820(&qword_1ED793148, &qword_1ED793150, MEMORY[0x1E0C95D90]);
  sub_1C1426938();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1C14268A8();
  swift_endAccess();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  return a2;
}

uint64_t sub_1C13F8A54(uint64_t a1, void *a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  char *v11;
  id v12;
  objc_class *v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  char *v18;
  id v19;
  uint64_t result;
  void *v21;
  uint64_t v22;
  id v23;
  char v24;
  id v25;
  _QWORD aBlock[6];
  objc_super v27;
  _QWORD v28[5];

  v23 = a2;
  v22 = sub_1C1426CD4();
  v5 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C1426C8C();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v8);
  v10 = sub_1C14269B0();
  MEMORY[0x1E0C80A78](v10);
  v28[3] = type metadata accessor for StateCaptureService();
  v28[4] = &off_1E7A8ACF8;
  v28[0] = a1;
  *(_QWORD *)&a3[OBJC_IVAR____TtC11SessionCore25StateCaptureServiceServer_listener] = 0;
  sub_1C1330F6C();
  v11 = a3;
  sub_1C1426998();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1C1329AD0((unint64_t *)&qword_1ED7939F0, v9, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A70);
  sub_1C132C820((unint64_t *)&qword_1ED797A80, (uint64_t *)&unk_1ED797A70, MEMORY[0x1E0DEAF38]);
  sub_1C1426DF4();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF8D8], v22);
  v12 = v23;
  *(_QWORD *)&v11[OBJC_IVAR____TtC11SessionCore25StateCaptureServiceServer_requestProcessingQueue] = sub_1C1426D04();
  sub_1C132E0A8((uint64_t)v28, (uint64_t)&v11[OBJC_IVAR____TtC11SessionCore25StateCaptureServiceServer_stateCaptureManager]);

  v13 = (objc_class *)type metadata accessor for StateCaptureServiceServer();
  v27.receiver = v11;
  v27.super_class = v13;
  v14 = objc_msgSendSuper2(&v27, sel_init);
  v25 = v14;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_1C14057CC;
  *(_QWORD *)(v15 + 24) = &v24;
  aBlock[4] = sub_1C14058DC;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1327D10;
  aBlock[3] = &block_descriptor_162;
  v16 = _Block_copy(aBlock);
  v17 = (void *)objc_opt_self();
  v18 = (char *)v14;
  swift_retain();
  v19 = objc_msgSend(v17, sel_listenerWithConfigurator_, v16);
  _Block_release(v16);
  swift_release();
  LOBYTE(v16) = swift_isEscapingClosureAtFileLocation();

  result = swift_release();
  if ((v16 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    v21 = *(void **)&v18[OBJC_IVAR____TtC11SessionCore25StateCaptureServiceServer_listener];
    *(_QWORD *)&v18[OBJC_IVAR____TtC11SessionCore25StateCaptureServiceServer_listener] = v19;

    return (uint64_t)v18;
  }
  return result;
}

id sub_1C13F8DB4(uint64_t a1, char *a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id result;
  uint64_t v12;
  id v13;
  objc_super v14;
  _QWORD v15[5];

  v15[3] = type metadata accessor for KnownClientStore();
  v15[4] = &off_1E7A8D410;
  v15[0] = a1;
  *(_QWORD *)&a2[OBJC_IVAR____TtC11SessionCore16AppEventObserver____lazy_storage___addedPublisher] = 0;
  v4 = OBJC_IVAR____TtC11SessionCore16AppEventObserver__addedPublisher;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797978);
  swift_allocObject();
  v5 = a2;
  *(_QWORD *)&a2[v4] = sub_1C14268D8();
  *(_QWORD *)&v5[OBJC_IVAR____TtC11SessionCore16AppEventObserver____lazy_storage___removedPublisher] = 0;
  v6 = OBJC_IVAR____TtC11SessionCore16AppEventObserver__removedPublisher;
  swift_allocObject();
  *(_QWORD *)&v5[v6] = sub_1C14268D8();
  *(_QWORD *)&v5[OBJC_IVAR____TtC11SessionCore16AppEventObserver____lazy_storage___restrictionsChangedPublisher] = 0;
  v7 = OBJC_IVAR____TtC11SessionCore16AppEventObserver__restrictionsChangedPublisher;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791EF8);
  swift_allocObject();
  *(_QWORD *)&v5[v7] = sub_1C14268D8();
  v8 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&v5[OBJC_IVAR____TtC11SessionCore16AppEventObserver_subscriptions] = MEMORY[0x1E0DEE9E8];
  v9 = OBJC_IVAR____TtC11SessionCore16AppEventObserver_lock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791E18);
  v10 = swift_allocObject();
  *(_DWORD *)(v10 + 16) = 0;
  *(_QWORD *)&v5[v9] = v10;
  *(_QWORD *)&v5[OBJC_IVAR____TtC11SessionCore16AppEventObserver_lock_restrictions] = v8;
  result = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (result)
  {
    *(_QWORD *)&v5[OBJC_IVAR____TtC11SessionCore16AppEventObserver_applicationWorkspace] = result;
    sub_1C132E0A8((uint64_t)v15, (uint64_t)&v5[OBJC_IVAR____TtC11SessionCore16AppEventObserver_knownClientStore]);
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED7933C8);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1C1428070;
    *(_QWORD *)(v12 + 32) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ManagedConfigRestrictionProvider()), sel_init);
    *(_QWORD *)(v12 + 40) = &off_1E7A8D048;
    *(_QWORD *)(v12 + 48) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AppProtectionRestrictionProvider()), sel_init);
    *(_QWORD *)(v12 + 56) = &off_1E7A8D028;
    *(_QWORD *)&v5[OBJC_IVAR____TtC11SessionCore16AppEventObserver_restrictionProviders] = v12;

    v14.receiver = v5;
    v14.super_class = (Class)type metadata accessor for AppEventObserver();
    v13 = objc_msgSendSuper2(&v14, sel_init);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    return v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

_QWORD *sub_1C13F8FE4(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[5];

  v4 = type metadata accessor for LockStateObserver();
  v10[3] = v4;
  v10[4] = &off_1E7A8AAE0;
  v10[0] = a1;
  type metadata accessor for UnfairLock();
  v5 = swift_allocObject();
  v6 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v5 + 16) = v6;
  *v6 = 0;
  v7 = MEMORY[0x1E0DEE9E0];
  v8 = MEMORY[0x1E0DEE9E8];
  a2[2] = v5;
  a2[3] = v7;
  a2[4] = v8;
  a2[6] = 0;
  swift_unknownObjectWeakInit();
  __swift_project_boxed_opaque_existential_1(v10, v4);
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797968);
  sub_1C132C820(&qword_1ED797960, &qword_1ED797968, MEMORY[0x1E0C95D90]);
  sub_1C1426938();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1C14268A8();
  swift_endAccess();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  return a2;
}

uint64_t sub_1C13F9168(uint64_t a1, uint64_t a2, void *a3, int a4, char *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _DWORD *v18;
  id v19;
  objc_class *v20;
  id v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  char *v26;
  id v27;
  uint64_t result;
  void *v29;
  uint64_t v30;
  id v31;
  int v32;
  _QWORD aBlock[6];
  objc_super v34;
  _QWORD v35[5];
  _QWORD v36[6];

  v32 = a4;
  v31 = a3;
  v30 = sub_1C1426CD4();
  v8 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C1426C8C();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v11);
  v13 = sub_1C14269B0();
  MEMORY[0x1E0C80A78](v13);
  v36[3] = type metadata accessor for ProcessManager();
  v36[4] = &off_1E7A8AFC8;
  v36[0] = a1;
  v35[3] = type metadata accessor for KnownClientStore();
  v35[4] = &off_1E7A8D410;
  v35[0] = a2;
  v14 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)&a5[OBJC_IVAR____TtC11SessionCore12OutputServer__lock_clients] = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)&a5[OBJC_IVAR____TtC11SessionCore12OutputServer__lock_activities] = v14;
  v15 = OBJC_IVAR____TtC11SessionCore12OutputServer_lock;
  type metadata accessor for UnfairLock();
  v16 = swift_allocObject();
  v17 = a5;
  v18 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v16 + 16) = v18;
  *v18 = 0;
  *(_QWORD *)&a5[v15] = v16;
  *(_QWORD *)&v17[OBJC_IVAR____TtC11SessionCore12OutputServer_listener] = 0;
  sub_1C1330F6C();
  sub_1C1426998();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1C1329AD0((unint64_t *)&qword_1ED7939F0, v12, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A70);
  sub_1C132C820((unint64_t *)&qword_1ED797A80, (uint64_t *)&unk_1ED797A70, MEMORY[0x1E0DEAF38]);
  sub_1C1426DF4();
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF8D8], v30);
  v19 = v31;
  *(_QWORD *)&v17[OBJC_IVAR____TtC11SessionCore12OutputServer_requestProcessingQueue] = sub_1C1426D04();
  sub_1C132E0A8((uint64_t)v36, (uint64_t)&v17[OBJC_IVAR____TtC11SessionCore12OutputServer_processManager]);
  sub_1C132E0A8((uint64_t)v35, (uint64_t)&v17[OBJC_IVAR____TtC11SessionCore12OutputServer_knownClientStore]);

  v20 = (objc_class *)type metadata accessor for OutputServer();
  v34.receiver = v17;
  v34.super_class = v20;
  v21 = objc_msgSendSuper2(&v34, sel_init);
  v22 = v21;
  if ((v32 & 1) == 0)
  {

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
    return (uint64_t)v22;
  }
  MEMORY[0x1E0C80A78](v21);
  *(&v30 - 2) = (uint64_t)v22;
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = sub_1C1405700;
  *(_QWORD *)(v23 + 24) = &v30 - 4;
  aBlock[4] = sub_1C14058DC;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1327D10;
  aBlock[3] = &block_descriptor_115;
  v24 = _Block_copy(aBlock);
  v25 = (void *)objc_opt_self();
  v26 = v22;
  swift_retain();
  v27 = objc_msgSend(v25, sel_listenerWithConfigurator_, v24);
  _Block_release(v24);
  swift_release();
  LOBYTE(v24) = swift_isEscapingClosureAtFileLocation();

  result = swift_release();
  if ((v24 & 1) == 0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
    v29 = *(void **)&v26[OBJC_IVAR____TtC11SessionCore12OutputServer_listener];
    *(_QWORD *)&v26[OBJC_IVAR____TtC11SessionCore12OutputServer_listener] = v27;

    return (uint64_t)v22;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1C13F959C(uint64_t a1, _QWORD *a2)
{
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD v11[5];

  v11[3] = type metadata accessor for AlertServiceServer();
  v11[4] = &off_1E7A8C730;
  v11[0] = a1;
  a2[3] = 0;
  swift_unknownObjectWeakInit();
  v4 = (void *)sub_1C1426A7C();
  v5 = objc_msgSend((id)objc_opt_self(), sel_serviceForClientIdentifier_, v4);

  a2[9] = v5;
  sub_1C132E0A8((uint64_t)v11, (uint64_t)(a2 + 4));
  swift_beginAccess();
  v6 = a2[7];
  v7 = a2[8];
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(a2 + 4), v6);
  v8 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v7 + 32);
  v9 = swift_retain();
  v8(v9, &off_1E7A8E188, v6, v7);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  return a2;
}

uint64_t sub_1C13F96B8(void *a1, uint64_t a2, char *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _DWORD *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  objc_class *v18;
  id v19;
  uint64_t v20;
  void *v21;
  void *v22;
  char *v23;
  id v24;
  uint64_t result;
  void *v26;
  uint64_t v27;
  id v28;
  char v29;
  id v30;
  _QWORD aBlock[6];
  objc_super v32;
  _QWORD v33[5];

  v28 = a1;
  v27 = sub_1C1426CD4();
  v5 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C1426C8C();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v8);
  v10 = sub_1C14269B0();
  MEMORY[0x1E0C80A78](v10);
  v33[3] = type metadata accessor for AssertionManager();
  v33[4] = &off_1E7A8AED0;
  v33[0] = a2;
  v11 = OBJC_IVAR____TtC11SessionCore22AssertionServiceServer_lock;
  type metadata accessor for UnfairLock();
  v12 = swift_allocObject();
  v13 = a3;
  v14 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v12 + 16) = v14;
  *v14 = 0;
  *(_QWORD *)&a3[v11] = v12;
  v15 = OBJC_IVAR____TtC11SessionCore22AssertionServiceServer__lock_clients;
  v16 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v13[v15] = sub_1C1337B9C(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)&v13[OBJC_IVAR____TtC11SessionCore22AssertionServiceServer_listener] = 0;
  sub_1C1330F6C();
  sub_1C1426998();
  aBlock[0] = v16;
  sub_1C1329AD0((unint64_t *)&qword_1ED7939F0, v9, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A70);
  sub_1C132C820((unint64_t *)&qword_1ED797A80, (uint64_t *)&unk_1ED797A70, MEMORY[0x1E0DEAF38]);
  sub_1C1426DF4();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF8D8], v27);
  v17 = v28;
  *(_QWORD *)&v13[OBJC_IVAR____TtC11SessionCore22AssertionServiceServer_requestProcessingQueue] = sub_1C1426D04();
  sub_1C132E0A8((uint64_t)v33, (uint64_t)&v13[OBJC_IVAR____TtC11SessionCore22AssertionServiceServer_assertionManager]);

  v18 = (objc_class *)type metadata accessor for AssertionServiceServer();
  v32.receiver = v13;
  v32.super_class = v18;
  v19 = objc_msgSendSuper2(&v32, sel_init);
  v30 = v19;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = sub_1C14057B4;
  *(_QWORD *)(v20 + 24) = &v29;
  aBlock[4] = sub_1C14058DC;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1327D10;
  aBlock[3] = &block_descriptor_155;
  v21 = _Block_copy(aBlock);
  v22 = (void *)objc_opt_self();
  v23 = (char *)v19;
  swift_retain();
  v24 = objc_msgSend(v22, sel_listenerWithConfigurator_, v21);
  _Block_release(v21);
  swift_release();
  LOBYTE(v21) = swift_isEscapingClosureAtFileLocation();

  result = swift_release();
  if ((v21 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    v26 = *(void **)&v23[OBJC_IVAR____TtC11SessionCore22AssertionServiceServer_listener];
    *(_QWORD *)&v23[OBJC_IVAR____TtC11SessionCore22AssertionServiceServer_listener] = v24;

    return (uint64_t)v23;
  }
  return result;
}

_QWORD *sub_1C13F9A64(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10[6];
  uint64_t v11[3];
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[3];
  uint64_t v15;
  _UNKNOWN **v16;

  v4 = type metadata accessor for LockStateObserver();
  v15 = v4;
  v16 = &off_1E7A8AAE0;
  v14[0] = a1;
  a2[4] = 0;
  type metadata accessor for UnfairLock();
  v5 = swift_allocObject();
  v6 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v5 + 16) = v6;
  *v6 = 0;
  a2[10] = v5;
  __swift_project_boxed_opaque_existential_1(v14, v4);
  sub_1C1426CEC();
  if ((v11[0] & 1) != 0)
    goto LABEL_6;
  if (qword_1ED793918 != -1)
    swift_once();
  if ((byte_1ED798648 & 1) == 0)
  {
LABEL_6:
    v12 = sub_1C14266C8();
    v13 = MEMORY[0x1E0D8D2C8];
    __swift_allocate_boxed_opaque_existential_1(v11);
    sub_1C14266BC();
  }
  else
  {
    v12 = sub_1C14266C8();
    v13 = MEMORY[0x1E0D8D2C8];
    __swift_allocate_boxed_opaque_existential_1(v11);
    sub_1C14266B0();
  }
  sub_1C132E0A8((uint64_t)v11, (uint64_t)(a2 + 11));
  sub_1C132E0A8((uint64_t)v14, (uint64_t)(a2 + 5));
  sub_1C132E0A8((uint64_t)v11, (uint64_t)v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797988);
  swift_allocObject();
  v7 = sub_1C14268F0();
  a2[3] = v7;
  v10[0] = v7;
  sub_1C132C820(&qword_1ED797980, &qword_1ED797988, MEMORY[0x1E0C95FB8]);
  a2[2] = sub_1C1426908();
  v10[0] = *(_QWORD *)(*__swift_project_boxed_opaque_existential_1(v14, v15) + 16);
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797968);
  sub_1C132C820(&qword_1ED797960, &qword_1ED797968, MEMORY[0x1E0C95D90]);
  v8 = sub_1C1426938();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  a2[4] = v8;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  return a2;
}

uint64_t sub_1C13F9CE0(uint64_t a1, uint64_t a2, void *a3, int a4)
{
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[3];
  uint64_t v20;
  _UNKNOWN **v21;
  _QWORD v22[3];
  uint64_t v23;
  _UNKNOWN **v24;

  v23 = type metadata accessor for ProcessManager();
  v24 = &off_1E7A8AFC8;
  v22[0] = a1;
  v20 = type metadata accessor for KnownClientStore();
  v21 = &off_1E7A8D410;
  v19[0] = a2;
  v8 = (char *)objc_allocWithZone((Class)type metadata accessor for OutputServer());
  v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v12 + 16))(v11);
  v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
  MEMORY[0x1E0C80A78](v13);
  v15 = (_QWORD *)((char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v16 + 16))(v15);
  v17 = sub_1C13F9168(*v11, *v15, a3, a4, v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return v17;
}

uint64_t sub_1C13F9E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[3];
  uint64_t v24;
  _UNKNOWN **v25;
  _QWORD v26[3];
  uint64_t v27;
  _UNKNOWN **v28;

  v27 = type metadata accessor for ProcessManager();
  v28 = &off_1E7A8AFC8;
  v26[0] = a2;
  v24 = type metadata accessor for AuthorizationManager();
  v25 = &off_1E7A8A518;
  v23[0] = a5;
  v12 = (char *)objc_allocWithZone((Class)type metadata accessor for PushTokenServer());
  v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v27);
  MEMORY[0x1E0C80A78](v13);
  v15 = (_QWORD *)((char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v16 + 16))(v15);
  v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v23, v24);
  MEMORY[0x1E0C80A78](v17);
  v19 = (_QWORD *)((char *)v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v20 + 16))(v19);
  v21 = sub_1C14035E0(a1, *v15, a3, a4, *v19, a6, v12);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  return v21;
}

uint64_t sub_1C13F9F98(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[5];
  _BYTE v20[24];
  ValueMetadata *v21;
  _UNKNOWN **v22;

  v21 = &type metadata for DefaultInputBackoffPolicy;
  v22 = &off_1E7A8EFE8;
  v8 = type metadata accessor for KnownClientStore();
  v19[3] = v8;
  v19[4] = &off_1E7A8D410;
  v19[0] = a2;
  v9 = (char *)objc_allocWithZone((Class)type metadata accessor for InputServer());
  v10 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, (uint64_t)&type metadata for DefaultInputBackoffPolicy);
  MEMORY[0x1E0C80A78](v10);
  (*(void (**)(char *))(v12 + 16))((char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (_QWORD *)((char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v16 + 16))(v15);
  v17 = sub_1C1403140(a1, *v15, a3, a4, v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return v17;
}

_QWORD *sub_1C13FA0DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void (**v13)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD v29[3];
  uint64_t v30;
  _UNKNOWN **v31;
  _QWORD v32[3];
  uint64_t v33;
  _UNKNOWN **v34;
  _QWORD v35[3];
  uint64_t started;
  _UNKNOWN **v37;
  _QWORD v38[3];
  uint64_t v39;
  _UNKNOWN **v40;

  v39 = type metadata accessor for AppEventObserver();
  v40 = &off_1E7A8D080;
  v38[0] = a1;
  started = type metadata accessor for PushToStartAppBundleIDProvider();
  v37 = &off_1E7A8E3E8;
  v35[0] = a3;
  v33 = type metadata accessor for AuthorizationManager();
  v34 = &off_1E7A8A518;
  v32[0] = a4;
  v30 = type metadata accessor for KnownClientStore();
  v31 = &off_1E7A8D410;
  v29[0] = a5;
  type metadata accessor for PushToStartManager();
  v10 = (_QWORD *)swift_allocObject();
  v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
  MEMORY[0x1E0C80A78](v11);
  v13 = (void (**)(char *, uint64_t, uint64_t, uint64_t))((char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(void (**)(char *, uint64_t, uint64_t, uint64_t)))(v14 + 16))(v13);
  v15 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v35, started);
  MEMORY[0x1E0C80A78](v15);
  v17 = (_QWORD *)((char *)v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v18 + 16))(v17);
  v19 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v32, v33);
  MEMORY[0x1E0C80A78](v19);
  v21 = (_QWORD *)((char *)v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v22 + 16))(v21);
  v23 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v29, v30);
  MEMORY[0x1E0C80A78](v23);
  v25 = (_QWORD *)((char *)v29 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v26 + 16))(v25);
  v27 = sub_1C1402524(*v13, a2, *v17, *v21, *v25, v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  return v27;
}

_QWORD *sub_1C13FA324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD v17[3];
  uint64_t v18;
  _UNKNOWN **v19;
  _QWORD v20[3];
  uint64_t v21;
  _UNKNOWN **v22;

  v21 = type metadata accessor for InputServer();
  v22 = &off_1E7A8E510;
  v20[0] = a1;
  v18 = type metadata accessor for AssertionManager();
  v19 = &off_1E7A8AE88;
  v17[0] = a3;
  type metadata accessor for XPCInputParticipant();
  v6 = (_QWORD *)swift_allocObject();
  v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
  MEMORY[0x1E0C80A78](v7);
  v9 = (_QWORD *)((char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v10 + 16))(v9);
  v11 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v17, v18);
  MEMORY[0x1E0C80A78](v11);
  v13 = (_QWORD *)((char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v14 + 16))(v13);
  v15 = sub_1C13F8114(*v9, a2, *v13, v6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return v15;
}

uint64_t sub_1C13FA474(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28[2];
  _QWORD v29[5];

  v29[3] = type metadata accessor for ReplicatorParticipant();
  v29[4] = &off_1E7A8C0F0;
  v29[0] = a1;
  v8 = (uint64_t *)(a4 + 16);
  swift_beginAccess();
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) + 16);
  swift_retain();
  if (v9
    && (swift_bridgeObjectRetain(),
        swift_bridgeObjectRetain(),
        sub_1C13277A0(a2, a3),
        v11 = v10,
        swift_bridgeObjectRelease(),
        swift_bridgeObjectRelease(),
        (v11 & 1) != 0))
  {
    if (qword_1ED7978D8 != -1)
      swift_once();
    v22 = sub_1C1426854();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ED798650);
    swift_bridgeObjectRetain_n();
    v23 = sub_1C1426848();
    v24 = sub_1C1426C68();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      *(_QWORD *)&v28[0] = v26;
      *(_DWORD *)v25 = 136446210;
      swift_bridgeObjectRetain();
      sub_1C132AD90(a2, a3, (uint64_t *)v28);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v23, v24, "[state-capture] identifier [%{public}s] is already in use", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v26, -1, -1);
      MEMORY[0x1C3BAD3F4](v25, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    result = sub_1C1426F8C();
    __break(1u);
  }
  else
  {
    sub_1C132E0A8((uint64_t)v29, (uint64_t)v28);
    v12 = swift_allocObject();
    sub_1C1339184(v28, v12 + 16);
    type metadata accessor for StateCaptureItem();
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = 0xD000000000000015;
    v13[3] = 0x80000001C14311A0;
    v13[4] = a2;
    v13[5] = a3;
    v13[6] = sub_1C1405528;
    v13[7] = v12;
    v14 = qword_1ED795A00;
    swift_bridgeObjectRetain();
    swift_retain();
    if (v14 != -1)
      swift_once();
    sub_1C135AF64((uint64_t)sub_1C1405528, v12, 0xD000000000000015, 0x80000001C14311A0, (void *)qword_1ED7936E0, (uint64_t)(v13 + 8));
    swift_release();
    if (qword_1ED7978D8 != -1)
      swift_once();
    v15 = sub_1C1426854();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED798650);
    swift_bridgeObjectRetain_n();
    v16 = sub_1C1426848();
    v17 = sub_1C1426C80();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      *(_QWORD *)&v28[0] = v19;
      *(_DWORD *)v18 = 136446466;
      sub_1C132AD90(0xD000000000000015, 0x80000001C14311A0, (uint64_t *)v28);
      sub_1C1426DB8();
      *(_WORD *)(v18 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_1C132AD90(a2, a3, (uint64_t *)v28);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v16, v17, "[state-capture] added StateCaptureItem with title: %{public}s, identifier: %{public}s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v19, -1, -1);
      MEMORY[0x1C3BAD3F4](v18, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v27 = *v8;
    *v8 = 0x8000000000000000;
    sub_1C13C2604((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *v8 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  }
  return result;
}

uint64_t sub_1C13FA9D0(void *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t *v8;
  uint64_t v9;
  id v10;
  char v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29[2];
  _QWORD v30[5];

  v30[3] = type metadata accessor for AppEventObserver();
  v30[4] = &off_1E7A8D068;
  v30[0] = a1;
  v8 = (uint64_t *)(a4 + 16);
  swift_beginAccess();
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) + 16);
  v10 = a1;
  if (v9
    && (swift_bridgeObjectRetain(),
        swift_bridgeObjectRetain(),
        sub_1C13277A0(a2, a3),
        v12 = v11,
        swift_bridgeObjectRelease(),
        swift_bridgeObjectRelease(),
        (v12 & 1) != 0))
  {
    if (qword_1ED7978D8 != -1)
      swift_once();
    v23 = sub_1C1426854();
    __swift_project_value_buffer(v23, (uint64_t)qword_1ED798650);
    swift_bridgeObjectRetain_n();
    v24 = sub_1C1426848();
    v25 = sub_1C1426C68();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      *(_QWORD *)&v29[0] = v27;
      *(_DWORD *)v26 = 136446210;
      swift_bridgeObjectRetain();
      sub_1C132AD90(a2, a3, (uint64_t *)v29);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v24, v25, "[state-capture] identifier [%{public}s] is already in use", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v27, -1, -1);
      MEMORY[0x1C3BAD3F4](v26, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    result = sub_1C1426F8C();
    __break(1u);
  }
  else
  {
    sub_1C132E0A8((uint64_t)v30, (uint64_t)v29);
    v13 = swift_allocObject();
    sub_1C1339184(v29, v13 + 16);
    type metadata accessor for StateCaptureItem();
    v14 = (_QWORD *)swift_allocObject();
    v14[2] = 0xD000000000000010;
    v14[3] = 0x80000001C1431220;
    v14[4] = a2;
    v14[5] = a3;
    v14[6] = sub_1C14058D8;
    v14[7] = v13;
    v15 = qword_1ED795A00;
    swift_bridgeObjectRetain();
    swift_retain();
    if (v15 != -1)
      swift_once();
    sub_1C135AF64((uint64_t)sub_1C14058D8, v13, 0xD000000000000010, 0x80000001C1431220, (void *)qword_1ED7936E0, (uint64_t)(v14 + 8));
    swift_release();
    if (qword_1ED7978D8 != -1)
      swift_once();
    v16 = sub_1C1426854();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ED798650);
    swift_bridgeObjectRetain_n();
    v17 = sub_1C1426848();
    v18 = sub_1C1426C80();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v20 = swift_slowAlloc();
      *(_QWORD *)&v29[0] = v20;
      *(_DWORD *)v19 = 136446466;
      sub_1C132AD90(0xD000000000000010, 0x80000001C1431220, (uint64_t *)v29);
      sub_1C1426DB8();
      *(_WORD *)(v19 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_1C132AD90(a2, a3, (uint64_t *)v29);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v17, v18, "[state-capture] added StateCaptureItem with title: %{public}s, identifier: %{public}s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v20, -1, -1);
      MEMORY[0x1C3BAD3F4](v19, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v28 = *v8;
    *v8 = 0x8000000000000000;
    sub_1C13C2604((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native);
    *v8 = v28;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  }
  return result;
}

uint64_t sub_1C13FAF28(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28[2];
  _QWORD v29[5];

  v29[3] = type metadata accessor for MomentaryParticipant();
  v29[4] = &off_1E7A8D640;
  v29[0] = a1;
  v8 = (uint64_t *)(a4 + 16);
  swift_beginAccess();
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) + 16);
  swift_retain();
  if (v9
    && (swift_bridgeObjectRetain(),
        swift_bridgeObjectRetain(),
        sub_1C13277A0(a2, a3),
        v11 = v10,
        swift_bridgeObjectRelease(),
        swift_bridgeObjectRelease(),
        (v11 & 1) != 0))
  {
    if (qword_1ED7978D8 != -1)
      swift_once();
    v22 = sub_1C1426854();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ED798650);
    swift_bridgeObjectRetain_n();
    v23 = sub_1C1426848();
    v24 = sub_1C1426C68();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      *(_QWORD *)&v28[0] = v26;
      *(_DWORD *)v25 = 136446210;
      swift_bridgeObjectRetain();
      sub_1C132AD90(a2, a3, (uint64_t *)v28);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v23, v24, "[state-capture] identifier [%{public}s] is already in use", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v26, -1, -1);
      MEMORY[0x1C3BAD3F4](v25, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    result = sub_1C1426F8C();
    __break(1u);
  }
  else
  {
    sub_1C132E0A8((uint64_t)v29, (uint64_t)v28);
    v12 = swift_allocObject();
    sub_1C1339184(v28, v12 + 16);
    type metadata accessor for StateCaptureItem();
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = 0xD000000000000014;
    v13[3] = 0x80000001C1431240;
    v13[4] = a2;
    v13[5] = a3;
    v13[6] = sub_1C14058D8;
    v13[7] = v12;
    v14 = qword_1ED795A00;
    swift_bridgeObjectRetain();
    swift_retain();
    if (v14 != -1)
      swift_once();
    sub_1C135AF64((uint64_t)sub_1C14058D8, v12, 0xD000000000000014, 0x80000001C1431240, (void *)qword_1ED7936E0, (uint64_t)(v13 + 8));
    swift_release();
    if (qword_1ED7978D8 != -1)
      swift_once();
    v15 = sub_1C1426854();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED798650);
    swift_bridgeObjectRetain_n();
    v16 = sub_1C1426848();
    v17 = sub_1C1426C80();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      *(_QWORD *)&v28[0] = v19;
      *(_DWORD *)v18 = 136446466;
      sub_1C132AD90(0xD000000000000014, 0x80000001C1431240, (uint64_t *)v28);
      sub_1C1426DB8();
      *(_WORD *)(v18 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_1C132AD90(a2, a3, (uint64_t *)v28);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v16, v17, "[state-capture] added StateCaptureItem with title: %{public}s, identifier: %{public}s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v19, -1, -1);
      MEMORY[0x1C3BAD3F4](v18, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v27 = *v8;
    *v8 = 0x8000000000000000;
    sub_1C13C2604((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *v8 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  }
  return result;
}

uint64_t sub_1C13FB484(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28[2];
  _QWORD v29[5];

  v29[3] = type metadata accessor for StaleParticipant();
  v29[4] = &off_1E7A8E408;
  v29[0] = a1;
  v8 = (uint64_t *)(a4 + 16);
  swift_beginAccess();
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) + 16);
  swift_retain();
  if (v9
    && (swift_bridgeObjectRetain(),
        swift_bridgeObjectRetain(),
        sub_1C13277A0(a2, a3),
        v11 = v10,
        swift_bridgeObjectRelease(),
        swift_bridgeObjectRelease(),
        (v11 & 1) != 0))
  {
    if (qword_1ED7978D8 != -1)
      swift_once();
    v22 = sub_1C1426854();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ED798650);
    swift_bridgeObjectRetain_n();
    v23 = sub_1C1426848();
    v24 = sub_1C1426C68();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      *(_QWORD *)&v28[0] = v26;
      *(_DWORD *)v25 = 136446210;
      swift_bridgeObjectRetain();
      sub_1C132AD90(a2, a3, (uint64_t *)v28);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v23, v24, "[state-capture] identifier [%{public}s] is already in use", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v26, -1, -1);
      MEMORY[0x1C3BAD3F4](v25, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    result = sub_1C1426F8C();
    __break(1u);
  }
  else
  {
    sub_1C132E0A8((uint64_t)v29, (uint64_t)v28);
    v12 = swift_allocObject();
    sub_1C1339184(v28, v12 + 16);
    type metadata accessor for StateCaptureItem();
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = 0xD000000000000010;
    v13[3] = 0x80000001C1431260;
    v13[4] = a2;
    v13[5] = a3;
    v13[6] = sub_1C14058D8;
    v13[7] = v12;
    v14 = qword_1ED795A00;
    swift_bridgeObjectRetain();
    swift_retain();
    if (v14 != -1)
      swift_once();
    sub_1C135AF64((uint64_t)sub_1C14058D8, v12, 0xD000000000000010, 0x80000001C1431260, (void *)qword_1ED7936E0, (uint64_t)(v13 + 8));
    swift_release();
    if (qword_1ED7978D8 != -1)
      swift_once();
    v15 = sub_1C1426854();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED798650);
    swift_bridgeObjectRetain_n();
    v16 = sub_1C1426848();
    v17 = sub_1C1426C80();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      *(_QWORD *)&v28[0] = v19;
      *(_DWORD *)v18 = 136446466;
      sub_1C132AD90(0xD000000000000010, 0x80000001C1431260, (uint64_t *)v28);
      sub_1C1426DB8();
      *(_WORD *)(v18 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_1C132AD90(a2, a3, (uint64_t *)v28);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v16, v17, "[state-capture] added StateCaptureItem with title: %{public}s, identifier: %{public}s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v19, -1, -1);
      MEMORY[0x1C3BAD3F4](v18, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v27 = *v8;
    *v8 = 0x8000000000000000;
    sub_1C13C2604((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *v8 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  }
  return result;
}

uint64_t sub_1C13FB9E0(void *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t *v8;
  uint64_t v9;
  id v10;
  char v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29[2];
  _QWORD v30[5];

  v30[3] = type metadata accessor for InputServer();
  v30[4] = &off_1E7A8A2E0;
  v30[0] = a1;
  v8 = (uint64_t *)(a4 + 16);
  swift_beginAccess();
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) + 16);
  v10 = a1;
  if (v9
    && (swift_bridgeObjectRetain(),
        swift_bridgeObjectRetain(),
        sub_1C13277A0(a2, a3),
        v12 = v11,
        swift_bridgeObjectRelease(),
        swift_bridgeObjectRelease(),
        (v12 & 1) != 0))
  {
    if (qword_1ED7978D8 != -1)
      swift_once();
    v23 = sub_1C1426854();
    __swift_project_value_buffer(v23, (uint64_t)qword_1ED798650);
    swift_bridgeObjectRetain_n();
    v24 = sub_1C1426848();
    v25 = sub_1C1426C68();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      *(_QWORD *)&v29[0] = v27;
      *(_DWORD *)v26 = 136446210;
      swift_bridgeObjectRetain();
      sub_1C132AD90(a2, a3, (uint64_t *)v29);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v24, v25, "[state-capture] identifier [%{public}s] is already in use", v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v27, -1, -1);
      MEMORY[0x1C3BAD3F4](v26, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    result = sub_1C1426F8C();
    __break(1u);
  }
  else
  {
    sub_1C132E0A8((uint64_t)v30, (uint64_t)v29);
    v13 = swift_allocObject();
    sub_1C1339184(v29, v13 + 16);
    type metadata accessor for StateCaptureItem();
    v14 = (_QWORD *)swift_allocObject();
    v14[2] = 0x7265537475706E49;
    v14[3] = 0xEB00000000726576;
    v14[4] = a2;
    v14[5] = a3;
    v14[6] = sub_1C14058D8;
    v14[7] = v13;
    v15 = qword_1ED795A00;
    swift_bridgeObjectRetain();
    swift_retain();
    if (v15 != -1)
      swift_once();
    sub_1C135AF64((uint64_t)sub_1C14058D8, v13, 0x7265537475706E49, 0xEB00000000726576, (void *)qword_1ED7936E0, (uint64_t)(v14 + 8));
    swift_release();
    if (qword_1ED7978D8 != -1)
      swift_once();
    v16 = sub_1C1426854();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ED798650);
    swift_bridgeObjectRetain_n();
    v17 = sub_1C1426848();
    v18 = sub_1C1426C80();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v20 = swift_slowAlloc();
      *(_QWORD *)&v29[0] = v20;
      *(_DWORD *)v19 = 136446466;
      sub_1C132AD90(0x7265537475706E49, 0xEB00000000726576, (uint64_t *)v29);
      sub_1C1426DB8();
      *(_WORD *)(v19 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_1C132AD90(a2, a3, (uint64_t *)v29);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v17, v18, "[state-capture] added StateCaptureItem with title: %{public}s, identifier: %{public}s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v20, -1, -1);
      MEMORY[0x1C3BAD3F4](v19, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v28 = *v8;
    *v8 = 0x8000000000000000;
    sub_1C13C2604((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native);
    *v8 = v28;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  }
  return result;
}

uint64_t sub_1C13FBF60(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28[2];
  _QWORD v29[5];

  v29[3] = type metadata accessor for AuthorizationManager();
  v29[4] = &off_1E7A8A500;
  v29[0] = a1;
  v8 = (uint64_t *)(a4 + 16);
  swift_beginAccess();
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) + 16);
  swift_retain();
  if (v9
    && (swift_bridgeObjectRetain(),
        swift_bridgeObjectRetain(),
        sub_1C13277A0(a2, a3),
        v11 = v10,
        swift_bridgeObjectRelease(),
        swift_bridgeObjectRelease(),
        (v11 & 1) != 0))
  {
    if (qword_1ED7978D8 != -1)
      swift_once();
    v22 = sub_1C1426854();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ED798650);
    swift_bridgeObjectRetain_n();
    v23 = sub_1C1426848();
    v24 = sub_1C1426C68();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      *(_QWORD *)&v28[0] = v26;
      *(_DWORD *)v25 = 136446210;
      swift_bridgeObjectRetain();
      sub_1C132AD90(a2, a3, (uint64_t *)v28);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v23, v24, "[state-capture] identifier [%{public}s] is already in use", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v26, -1, -1);
      MEMORY[0x1C3BAD3F4](v25, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    result = sub_1C1426F8C();
    __break(1u);
  }
  else
  {
    sub_1C132E0A8((uint64_t)v29, (uint64_t)v28);
    v12 = swift_allocObject();
    sub_1C1339184(v28, v12 + 16);
    type metadata accessor for StateCaptureItem();
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = 0xD000000000000014;
    v13[3] = 0x80000001C1431280;
    v13[4] = a2;
    v13[5] = a3;
    v13[6] = sub_1C14058D8;
    v13[7] = v12;
    v14 = qword_1ED795A00;
    swift_bridgeObjectRetain();
    swift_retain();
    if (v14 != -1)
      swift_once();
    sub_1C135AF64((uint64_t)sub_1C14058D8, v12, 0xD000000000000014, 0x80000001C1431280, (void *)qword_1ED7936E0, (uint64_t)(v13 + 8));
    swift_release();
    if (qword_1ED7978D8 != -1)
      swift_once();
    v15 = sub_1C1426854();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED798650);
    swift_bridgeObjectRetain_n();
    v16 = sub_1C1426848();
    v17 = sub_1C1426C80();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      *(_QWORD *)&v28[0] = v19;
      *(_DWORD *)v18 = 136446466;
      sub_1C132AD90(0xD000000000000014, 0x80000001C1431280, (uint64_t *)v28);
      sub_1C1426DB8();
      *(_WORD *)(v18 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_1C132AD90(a2, a3, (uint64_t *)v28);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v16, v17, "[state-capture] added StateCaptureItem with title: %{public}s, identifier: %{public}s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v19, -1, -1);
      MEMORY[0x1C3BAD3F4](v18, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v27 = *v8;
    *v8 = 0x8000000000000000;
    sub_1C13C2604((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *v8 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  }
  return result;
}

uint64_t sub_1C13FC4BC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28[2];
  _QWORD v29[5];

  v29[3] = type metadata accessor for ActivityManager();
  v29[4] = &off_1E7A8D440;
  v29[0] = a1;
  v8 = (uint64_t *)(a4 + 16);
  swift_beginAccess();
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) + 16);
  swift_retain();
  if (v9
    && (swift_bridgeObjectRetain(),
        swift_bridgeObjectRetain(),
        sub_1C13277A0(a2, a3),
        v11 = v10,
        swift_bridgeObjectRelease(),
        swift_bridgeObjectRelease(),
        (v11 & 1) != 0))
  {
    if (qword_1ED7978D8 != -1)
      swift_once();
    v22 = sub_1C1426854();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ED798650);
    swift_bridgeObjectRetain_n();
    v23 = sub_1C1426848();
    v24 = sub_1C1426C68();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      *(_QWORD *)&v28[0] = v26;
      *(_DWORD *)v25 = 136446210;
      swift_bridgeObjectRetain();
      sub_1C132AD90(a2, a3, (uint64_t *)v28);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v23, v24, "[state-capture] identifier [%{public}s] is already in use", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v26, -1, -1);
      MEMORY[0x1C3BAD3F4](v25, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    result = sub_1C1426F8C();
    __break(1u);
  }
  else
  {
    sub_1C132E0A8((uint64_t)v29, (uint64_t)v28);
    v12 = swift_allocObject();
    sub_1C1339184(v28, v12 + 16);
    type metadata accessor for StateCaptureItem();
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = 0x7974697669746341;
    v13[3] = 0xEF726567616E614DLL;
    v13[4] = a2;
    v13[5] = a3;
    v13[6] = sub_1C14058D8;
    v13[7] = v12;
    v14 = qword_1ED795A00;
    swift_bridgeObjectRetain();
    swift_retain();
    if (v14 != -1)
      swift_once();
    sub_1C135AF64((uint64_t)sub_1C14058D8, v12, 0x7974697669746341, 0xEF726567616E614DLL, (void *)qword_1ED7936E0, (uint64_t)(v13 + 8));
    swift_release();
    if (qword_1ED7978D8 != -1)
      swift_once();
    v15 = sub_1C1426854();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED798650);
    swift_bridgeObjectRetain_n();
    v16 = sub_1C1426848();
    v17 = sub_1C1426C80();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      *(_QWORD *)&v28[0] = v19;
      *(_DWORD *)v18 = 136446466;
      sub_1C132AD90(0x7974697669746341, 0xEF726567616E614DLL, (uint64_t *)v28);
      sub_1C1426DB8();
      *(_WORD *)(v18 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_1C132AD90(a2, a3, (uint64_t *)v28);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v16, v17, "[state-capture] added StateCaptureItem with title: %{public}s, identifier: %{public}s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v19, -1, -1);
      MEMORY[0x1C3BAD3F4](v18, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v27 = *v8;
    *v8 = 0x8000000000000000;
    sub_1C13C2604((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *v8 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  }
  return result;
}

uint64_t sub_1C13FCA4C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28[2];
  _QWORD v29[5];

  v29[3] = type metadata accessor for ProcessMonitor();
  v29[4] = &off_1E7A8A978;
  v29[0] = a1;
  v8 = (uint64_t *)(a4 + 16);
  swift_beginAccess();
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) + 16);
  swift_retain();
  if (v9
    && (swift_bridgeObjectRetain(),
        swift_bridgeObjectRetain(),
        sub_1C13277A0(a2, a3),
        v11 = v10,
        swift_bridgeObjectRelease(),
        swift_bridgeObjectRelease(),
        (v11 & 1) != 0))
  {
    if (qword_1ED7978D8 != -1)
      swift_once();
    v22 = sub_1C1426854();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ED798650);
    swift_bridgeObjectRetain_n();
    v23 = sub_1C1426848();
    v24 = sub_1C1426C68();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      *(_QWORD *)&v28[0] = v26;
      *(_DWORD *)v25 = 136446210;
      swift_bridgeObjectRetain();
      sub_1C132AD90(a2, a3, (uint64_t *)v28);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v23, v24, "[state-capture] identifier [%{public}s] is already in use", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v26, -1, -1);
      MEMORY[0x1C3BAD3F4](v25, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    result = sub_1C1426F8C();
    __break(1u);
  }
  else
  {
    sub_1C132E0A8((uint64_t)v29, (uint64_t)v28);
    v12 = swift_allocObject();
    sub_1C1339184(v28, v12 + 16);
    type metadata accessor for StateCaptureItem();
    v13 = swift_allocObject();
    strcpy((char *)(v13 + 16), "ProcessMonitor");
    *(_BYTE *)(v13 + 31) = -18;
    *(_QWORD *)(v13 + 32) = a2;
    *(_QWORD *)(v13 + 40) = a3;
    *(_QWORD *)(v13 + 48) = sub_1C14058D8;
    *(_QWORD *)(v13 + 56) = v12;
    v14 = qword_1ED795A00;
    swift_bridgeObjectRetain();
    swift_retain();
    if (v14 != -1)
      swift_once();
    sub_1C135AF64((uint64_t)sub_1C14058D8, v12, 0x4D737365636F7250, 0xEE00726F74696E6FLL, (void *)qword_1ED7936E0, v13 + 64);
    swift_release();
    if (qword_1ED7978D8 != -1)
      swift_once();
    v15 = sub_1C1426854();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED798650);
    swift_bridgeObjectRetain_n();
    v16 = sub_1C1426848();
    v17 = sub_1C1426C80();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      *(_QWORD *)&v28[0] = v19;
      *(_DWORD *)v18 = 136446466;
      sub_1C132AD90(0x4D737365636F7250, 0xEE00726F74696E6FLL, (uint64_t *)v28);
      sub_1C1426DB8();
      *(_WORD *)(v18 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_1C132AD90(a2, a3, (uint64_t *)v28);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v16, v17, "[state-capture] added StateCaptureItem with title: %{public}s, identifier: %{public}s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v19, -1, -1);
      MEMORY[0x1C3BAD3F4](v18, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v27 = *v8;
    *v8 = 0x8000000000000000;
    sub_1C13C2604(v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *v8 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  }
  return result;
}

uint64_t sub_1C13FCFDC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28[2];
  _QWORD v29[5];

  v29[3] = type metadata accessor for QoSManager();
  v29[4] = &off_1E7A8C038;
  v29[0] = a1;
  v8 = (uint64_t *)(a4 + 16);
  swift_beginAccess();
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) + 16);
  swift_retain();
  if (v9
    && (swift_bridgeObjectRetain(),
        swift_bridgeObjectRetain(),
        sub_1C13277A0(a2, a3),
        v11 = v10,
        swift_bridgeObjectRelease(),
        swift_bridgeObjectRelease(),
        (v11 & 1) != 0))
  {
    if (qword_1ED7978D8 != -1)
      swift_once();
    v22 = sub_1C1426854();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ED798650);
    swift_bridgeObjectRetain_n();
    v23 = sub_1C1426848();
    v24 = sub_1C1426C68();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      *(_QWORD *)&v28[0] = v26;
      *(_DWORD *)v25 = 136446210;
      swift_bridgeObjectRetain();
      sub_1C132AD90(a2, a3, (uint64_t *)v28);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v23, v24, "[state-capture] identifier [%{public}s] is already in use", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v26, -1, -1);
      MEMORY[0x1C3BAD3F4](v25, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    result = sub_1C1426F8C();
    __break(1u);
  }
  else
  {
    sub_1C132E0A8((uint64_t)v29, (uint64_t)v28);
    v12 = swift_allocObject();
    sub_1C1339184(v28, v12 + 16);
    type metadata accessor for StateCaptureItem();
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = 0x67616E614D536F51;
    v13[3] = 0xEA00000000007265;
    v13[4] = a2;
    v13[5] = a3;
    v13[6] = sub_1C14058D8;
    v13[7] = v12;
    v14 = qword_1ED795A00;
    swift_bridgeObjectRetain();
    swift_retain();
    if (v14 != -1)
      swift_once();
    sub_1C135AF64((uint64_t)sub_1C14058D8, v12, 0x67616E614D536F51, 0xEA00000000007265, (void *)qword_1ED7936E0, (uint64_t)(v13 + 8));
    swift_release();
    if (qword_1ED7978D8 != -1)
      swift_once();
    v15 = sub_1C1426854();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED798650);
    swift_bridgeObjectRetain_n();
    v16 = sub_1C1426848();
    v17 = sub_1C1426C80();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      *(_QWORD *)&v28[0] = v19;
      *(_DWORD *)v18 = 136446466;
      sub_1C132AD90(0x67616E614D536F51, 0xEA00000000007265, (uint64_t *)v28);
      sub_1C1426DB8();
      *(_WORD *)(v18 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_1C132AD90(a2, a3, (uint64_t *)v28);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v16, v17, "[state-capture] added StateCaptureItem with title: %{public}s, identifier: %{public}s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v19, -1, -1);
      MEMORY[0x1C3BAD3F4](v18, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v27 = *v8;
    *v8 = 0x8000000000000000;
    sub_1C13C2604((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *v8 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  }
  return result;
}

uint64_t sub_1C13FD554(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28[2];
  _QWORD v29[5];

  v29[3] = type metadata accessor for TaskScheduler();
  v29[4] = &off_1E7A8CCA0;
  v29[0] = a1;
  v8 = (uint64_t *)(a4 + 16);
  swift_beginAccess();
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) + 16);
  swift_retain();
  if (v9
    && (swift_bridgeObjectRetain(),
        swift_bridgeObjectRetain(),
        sub_1C13277A0(a2, a3),
        v11 = v10,
        swift_bridgeObjectRelease(),
        swift_bridgeObjectRelease(),
        (v11 & 1) != 0))
  {
    if (qword_1ED7978D8 != -1)
      swift_once();
    v22 = sub_1C1426854();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ED798650);
    swift_bridgeObjectRetain_n();
    v23 = sub_1C1426848();
    v24 = sub_1C1426C68();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      *(_QWORD *)&v28[0] = v26;
      *(_DWORD *)v25 = 136446210;
      swift_bridgeObjectRetain();
      sub_1C132AD90(a2, a3, (uint64_t *)v28);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v23, v24, "[state-capture] identifier [%{public}s] is already in use", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v26, -1, -1);
      MEMORY[0x1C3BAD3F4](v25, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    result = sub_1C1426F8C();
    __break(1u);
  }
  else
  {
    sub_1C132E0A8((uint64_t)v29, (uint64_t)v28);
    v12 = swift_allocObject();
    sub_1C1339184(v28, v12 + 16);
    type metadata accessor for StateCaptureItem();
    v13 = swift_allocObject();
    strcpy((char *)(v13 + 16), "TaskScheduler");
    *(_WORD *)(v13 + 30) = -4864;
    *(_QWORD *)(v13 + 32) = a2;
    *(_QWORD *)(v13 + 40) = a3;
    *(_QWORD *)(v13 + 48) = sub_1C14058D8;
    *(_QWORD *)(v13 + 56) = v12;
    v14 = qword_1ED795A00;
    swift_bridgeObjectRetain();
    swift_retain();
    if (v14 != -1)
      swift_once();
    sub_1C135AF64((uint64_t)sub_1C14058D8, v12, 0x656863536B736154, 0xED000072656C7564, (void *)qword_1ED7936E0, v13 + 64);
    swift_release();
    if (qword_1ED7978D8 != -1)
      swift_once();
    v15 = sub_1C1426854();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED798650);
    swift_bridgeObjectRetain_n();
    v16 = sub_1C1426848();
    v17 = sub_1C1426C80();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      *(_QWORD *)&v28[0] = v19;
      *(_DWORD *)v18 = 136446466;
      sub_1C132AD90(0x656863536B736154, 0xED000072656C7564, (uint64_t *)v28);
      sub_1C1426DB8();
      *(_WORD *)(v18 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_1C132AD90(a2, a3, (uint64_t *)v28);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v16, v17, "[state-capture] added StateCaptureItem with title: %{public}s, identifier: %{public}s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v19, -1, -1);
      MEMORY[0x1C3BAD3F4](v18, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v27 = *v8;
    *v8 = 0x8000000000000000;
    sub_1C13C2604(v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *v8 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  }
  return result;
}

uint64_t sub_1C13FDAE4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28[2];
  _QWORD v29[5];

  v29[3] = type metadata accessor for KeepAliveParticipant();
  v29[4] = &off_1E7A8B3D0;
  v29[0] = a1;
  v8 = (uint64_t *)(a4 + 16);
  swift_beginAccess();
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) + 16);
  swift_retain();
  if (v9
    && (swift_bridgeObjectRetain(),
        swift_bridgeObjectRetain(),
        sub_1C13277A0(a2, a3),
        v11 = v10,
        swift_bridgeObjectRelease(),
        swift_bridgeObjectRelease(),
        (v11 & 1) != 0))
  {
    if (qword_1ED7978D8 != -1)
      swift_once();
    v22 = sub_1C1426854();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ED798650);
    swift_bridgeObjectRetain_n();
    v23 = sub_1C1426848();
    v24 = sub_1C1426C68();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      *(_QWORD *)&v28[0] = v26;
      *(_DWORD *)v25 = 136446210;
      swift_bridgeObjectRetain();
      sub_1C132AD90(a2, a3, (uint64_t *)v28);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v23, v24, "[state-capture] identifier [%{public}s] is already in use", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v26, -1, -1);
      MEMORY[0x1C3BAD3F4](v25, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    result = sub_1C1426F8C();
    __break(1u);
  }
  else
  {
    sub_1C132E0A8((uint64_t)v29, (uint64_t)v28);
    v12 = swift_allocObject();
    sub_1C1339184(v28, v12 + 16);
    type metadata accessor for StateCaptureItem();
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = 0xD000000000000014;
    v13[3] = 0x80000001C14312A0;
    v13[4] = a2;
    v13[5] = a3;
    v13[6] = sub_1C14058D8;
    v13[7] = v12;
    v14 = qword_1ED795A00;
    swift_bridgeObjectRetain();
    swift_retain();
    if (v14 != -1)
      swift_once();
    sub_1C135AF64((uint64_t)sub_1C14058D8, v12, 0xD000000000000014, 0x80000001C14312A0, (void *)qword_1ED7936E0, (uint64_t)(v13 + 8));
    swift_release();
    if (qword_1ED7978D8 != -1)
      swift_once();
    v15 = sub_1C1426854();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED798650);
    swift_bridgeObjectRetain_n();
    v16 = sub_1C1426848();
    v17 = sub_1C1426C80();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      *(_QWORD *)&v28[0] = v19;
      *(_DWORD *)v18 = 136446466;
      sub_1C132AD90(0xD000000000000014, 0x80000001C14312A0, (uint64_t *)v28);
      sub_1C1426DB8();
      *(_WORD *)(v18 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_1C132AD90(a2, a3, (uint64_t *)v28);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v16, v17, "[state-capture] added StateCaptureItem with title: %{public}s, identifier: %{public}s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v19, -1, -1);
      MEMORY[0x1C3BAD3F4](v18, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v27 = *v8;
    *v8 = 0x8000000000000000;
    sub_1C13C2604((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *v8 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  }
  return result;
}

uint64_t sub_1C13FE040(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28[2];
  _QWORD v29[5];

  v29[3] = type metadata accessor for DurationEnforcerParticipant();
  v29[4] = &off_1E7A8D588;
  v29[0] = a1;
  v8 = (uint64_t *)(a4 + 16);
  swift_beginAccess();
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) + 16);
  swift_retain();
  if (v9
    && (swift_bridgeObjectRetain(),
        swift_bridgeObjectRetain(),
        sub_1C13277A0(a2, a3),
        v11 = v10,
        swift_bridgeObjectRelease(),
        swift_bridgeObjectRelease(),
        (v11 & 1) != 0))
  {
    if (qword_1ED7978D8 != -1)
      swift_once();
    v22 = sub_1C1426854();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ED798650);
    swift_bridgeObjectRetain_n();
    v23 = sub_1C1426848();
    v24 = sub_1C1426C68();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      *(_QWORD *)&v28[0] = v26;
      *(_DWORD *)v25 = 136446210;
      swift_bridgeObjectRetain();
      sub_1C132AD90(a2, a3, (uint64_t *)v28);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v23, v24, "[state-capture] identifier [%{public}s] is already in use", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v26, -1, -1);
      MEMORY[0x1C3BAD3F4](v25, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    result = sub_1C1426F8C();
    __break(1u);
  }
  else
  {
    sub_1C132E0A8((uint64_t)v29, (uint64_t)v28);
    v12 = swift_allocObject();
    sub_1C1339184(v28, v12 + 16);
    type metadata accessor for StateCaptureItem();
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = 0xD00000000000001BLL;
    v13[3] = 0x80000001C14312C0;
    v13[4] = a2;
    v13[5] = a3;
    v13[6] = sub_1C14058D8;
    v13[7] = v12;
    v14 = qword_1ED795A00;
    swift_bridgeObjectRetain();
    swift_retain();
    if (v14 != -1)
      swift_once();
    sub_1C135AF64((uint64_t)sub_1C14058D8, v12, 0xD00000000000001BLL, 0x80000001C14312C0, (void *)qword_1ED7936E0, (uint64_t)(v13 + 8));
    swift_release();
    if (qword_1ED7978D8 != -1)
      swift_once();
    v15 = sub_1C1426854();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED798650);
    swift_bridgeObjectRetain_n();
    v16 = sub_1C1426848();
    v17 = sub_1C1426C80();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      *(_QWORD *)&v28[0] = v19;
      *(_DWORD *)v18 = 136446466;
      sub_1C132AD90(0xD00000000000001BLL, 0x80000001C14312C0, (uint64_t *)v28);
      sub_1C1426DB8();
      *(_WORD *)(v18 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_1C132AD90(a2, a3, (uint64_t *)v28);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v16, v17, "[state-capture] added StateCaptureItem with title: %{public}s, identifier: %{public}s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v19, -1, -1);
      MEMORY[0x1C3BAD3F4](v18, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v27 = *v8;
    *v8 = 0x8000000000000000;
    sub_1C13C2604((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *v8 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  }
  return result;
}

uint64_t sub_1C13FE59C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28[2];
  _QWORD v29[5];

  v29[3] = type metadata accessor for DismissParticipant();
  v29[4] = &off_1E7A8CE58;
  v29[0] = a1;
  v8 = (uint64_t *)(a4 + 16);
  swift_beginAccess();
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) + 16);
  swift_retain();
  if (v9
    && (swift_bridgeObjectRetain(),
        swift_bridgeObjectRetain(),
        sub_1C13277A0(a2, a3),
        v11 = v10,
        swift_bridgeObjectRelease(),
        swift_bridgeObjectRelease(),
        (v11 & 1) != 0))
  {
    if (qword_1ED7978D8 != -1)
      swift_once();
    v22 = sub_1C1426854();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ED798650);
    swift_bridgeObjectRetain_n();
    v23 = sub_1C1426848();
    v24 = sub_1C1426C68();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      *(_QWORD *)&v28[0] = v26;
      *(_DWORD *)v25 = 136446210;
      swift_bridgeObjectRetain();
      sub_1C132AD90(a2, a3, (uint64_t *)v28);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v23, v24, "[state-capture] identifier [%{public}s] is already in use", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v26, -1, -1);
      MEMORY[0x1C3BAD3F4](v25, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    result = sub_1C1426F8C();
    __break(1u);
  }
  else
  {
    sub_1C132E0A8((uint64_t)v29, (uint64_t)v28);
    v12 = swift_allocObject();
    sub_1C1339184(v28, v12 + 16);
    type metadata accessor for StateCaptureItem();
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = 0xD000000000000012;
    v13[3] = 0x80000001C14312E0;
    v13[4] = a2;
    v13[5] = a3;
    v13[6] = sub_1C14058D8;
    v13[7] = v12;
    v14 = qword_1ED795A00;
    swift_bridgeObjectRetain();
    swift_retain();
    if (v14 != -1)
      swift_once();
    sub_1C135AF64((uint64_t)sub_1C14058D8, v12, 0xD000000000000012, 0x80000001C14312E0, (void *)qword_1ED7936E0, (uint64_t)(v13 + 8));
    swift_release();
    if (qword_1ED7978D8 != -1)
      swift_once();
    v15 = sub_1C1426854();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED798650);
    swift_bridgeObjectRetain_n();
    v16 = sub_1C1426848();
    v17 = sub_1C1426C80();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      *(_QWORD *)&v28[0] = v19;
      *(_DWORD *)v18 = 136446466;
      sub_1C132AD90(0xD000000000000012, 0x80000001C14312E0, (uint64_t *)v28);
      sub_1C1426DB8();
      *(_WORD *)(v18 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_1C132AD90(a2, a3, (uint64_t *)v28);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v16, v17, "[state-capture] added StateCaptureItem with title: %{public}s, identifier: %{public}s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v19, -1, -1);
      MEMORY[0x1C3BAD3F4](v18, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v27 = *v8;
    *v8 = 0x8000000000000000;
    sub_1C13C2604((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *v8 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  }
  return result;
}

uint64_t sub_1C13FEAF8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28[2];
  _QWORD v29[5];

  v29[3] = type metadata accessor for PersistentParticipant();
  v29[4] = &off_1E7A8EED0;
  v29[0] = a1;
  v8 = (uint64_t *)(a4 + 16);
  swift_beginAccess();
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) + 16);
  swift_retain();
  if (v9
    && (swift_bridgeObjectRetain(),
        swift_bridgeObjectRetain(),
        sub_1C13277A0(a2, a3),
        v11 = v10,
        swift_bridgeObjectRelease(),
        swift_bridgeObjectRelease(),
        (v11 & 1) != 0))
  {
    if (qword_1ED7978D8 != -1)
      swift_once();
    v22 = sub_1C1426854();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ED798650);
    swift_bridgeObjectRetain_n();
    v23 = sub_1C1426848();
    v24 = sub_1C1426C68();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      *(_QWORD *)&v28[0] = v26;
      *(_DWORD *)v25 = 136446210;
      swift_bridgeObjectRetain();
      sub_1C132AD90(a2, a3, (uint64_t *)v28);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v23, v24, "[state-capture] identifier [%{public}s] is already in use", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v26, -1, -1);
      MEMORY[0x1C3BAD3F4](v25, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    result = sub_1C1426F8C();
    __break(1u);
  }
  else
  {
    sub_1C132E0A8((uint64_t)v29, (uint64_t)v28);
    v12 = swift_allocObject();
    sub_1C1339184(v28, v12 + 16);
    type metadata accessor for StateCaptureItem();
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = 0xD000000000000015;
    v13[3] = 0x80000001C1431300;
    v13[4] = a2;
    v13[5] = a3;
    v13[6] = sub_1C14058D8;
    v13[7] = v12;
    v14 = qword_1ED795A00;
    swift_bridgeObjectRetain();
    swift_retain();
    if (v14 != -1)
      swift_once();
    sub_1C135AF64((uint64_t)sub_1C14058D8, v12, 0xD000000000000015, 0x80000001C1431300, (void *)qword_1ED7936E0, (uint64_t)(v13 + 8));
    swift_release();
    if (qword_1ED7978D8 != -1)
      swift_once();
    v15 = sub_1C1426854();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED798650);
    swift_bridgeObjectRetain_n();
    v16 = sub_1C1426848();
    v17 = sub_1C1426C80();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      *(_QWORD *)&v28[0] = v19;
      *(_DWORD *)v18 = 136446466;
      sub_1C132AD90(0xD000000000000015, 0x80000001C1431300, (uint64_t *)v28);
      sub_1C1426DB8();
      *(_WORD *)(v18 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_1C132AD90(a2, a3, (uint64_t *)v28);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v16, v17, "[state-capture] added StateCaptureItem with title: %{public}s, identifier: %{public}s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v19, -1, -1);
      MEMORY[0x1C3BAD3F4](v18, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v27 = *v8;
    *v8 = 0x8000000000000000;
    sub_1C13C2604((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *v8 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  }
  return result;
}

uint64_t sub_1C13FF054(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28[2];
  _QWORD v29[5];

  v29[3] = type metadata accessor for PushParticipant();
  v29[4] = &off_1E7A8CA70;
  v29[0] = a1;
  v8 = (uint64_t *)(a4 + 16);
  swift_beginAccess();
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) + 16);
  swift_retain();
  if (v9
    && (swift_bridgeObjectRetain(),
        swift_bridgeObjectRetain(),
        sub_1C13277A0(a2, a3),
        v11 = v10,
        swift_bridgeObjectRelease(),
        swift_bridgeObjectRelease(),
        (v11 & 1) != 0))
  {
    if (qword_1ED7978D8 != -1)
      swift_once();
    v22 = sub_1C1426854();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ED798650);
    swift_bridgeObjectRetain_n();
    v23 = sub_1C1426848();
    v24 = sub_1C1426C68();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      *(_QWORD *)&v28[0] = v26;
      *(_DWORD *)v25 = 136446210;
      swift_bridgeObjectRetain();
      sub_1C132AD90(a2, a3, (uint64_t *)v28);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v23, v24, "[state-capture] identifier [%{public}s] is already in use", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v26, -1, -1);
      MEMORY[0x1C3BAD3F4](v25, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    result = sub_1C1426F8C();
    __break(1u);
  }
  else
  {
    sub_1C132E0A8((uint64_t)v29, (uint64_t)v28);
    v12 = swift_allocObject();
    sub_1C1339184(v28, v12 + 16);
    type metadata accessor for StateCaptureItem();
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = 0x7472615068737550;
    v13[3] = 0xEF746E6170696369;
    v13[4] = a2;
    v13[5] = a3;
    v13[6] = sub_1C14058D8;
    v13[7] = v12;
    v14 = qword_1ED795A00;
    swift_bridgeObjectRetain();
    swift_retain();
    if (v14 != -1)
      swift_once();
    sub_1C135AF64((uint64_t)sub_1C14058D8, v12, 0x7472615068737550, 0xEF746E6170696369, (void *)qword_1ED7936E0, (uint64_t)(v13 + 8));
    swift_release();
    if (qword_1ED7978D8 != -1)
      swift_once();
    v15 = sub_1C1426854();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED798650);
    swift_bridgeObjectRetain_n();
    v16 = sub_1C1426848();
    v17 = sub_1C1426C80();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      *(_QWORD *)&v28[0] = v19;
      *(_DWORD *)v18 = 136446466;
      sub_1C132AD90(0x7472615068737550, 0xEF746E6170696369, (uint64_t *)v28);
      sub_1C1426DB8();
      *(_WORD *)(v18 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_1C132AD90(a2, a3, (uint64_t *)v28);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v16, v17, "[state-capture] added StateCaptureItem with title: %{public}s, identifier: %{public}s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v19, -1, -1);
      MEMORY[0x1C3BAD3F4](v18, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v27 = *v8;
    *v8 = 0x8000000000000000;
    sub_1C13C2604((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *v8 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  }
  return result;
}

uint64_t sub_1C13FF5E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t *v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28[2];
  _QWORD v29[5];

  v29[3] = type metadata accessor for AssertionManager();
  v29[4] = &off_1E7A8AE30;
  v29[0] = a1;
  v8 = (uint64_t *)(a4 + 16);
  swift_beginAccess();
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 16) + 16);
  swift_retain();
  if (v9
    && (swift_bridgeObjectRetain(),
        swift_bridgeObjectRetain(),
        sub_1C13277A0(a2, a3),
        v11 = v10,
        swift_bridgeObjectRelease(),
        swift_bridgeObjectRelease(),
        (v11 & 1) != 0))
  {
    if (qword_1ED7978D8 != -1)
      swift_once();
    v22 = sub_1C1426854();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ED798650);
    swift_bridgeObjectRetain_n();
    v23 = sub_1C1426848();
    v24 = sub_1C1426C68();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      *(_QWORD *)&v28[0] = v26;
      *(_DWORD *)v25 = 136446210;
      swift_bridgeObjectRetain();
      sub_1C132AD90(a2, a3, (uint64_t *)v28);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v23, v24, "[state-capture] identifier [%{public}s] is already in use", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v26, -1, -1);
      MEMORY[0x1C3BAD3F4](v25, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    result = sub_1C1426F8C();
    __break(1u);
  }
  else
  {
    sub_1C132E0A8((uint64_t)v29, (uint64_t)v28);
    v12 = swift_allocObject();
    sub_1C1339184(v28, v12 + 16);
    type metadata accessor for StateCaptureItem();
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = 0xD000000000000010;
    v13[3] = 0x80000001C1431320;
    v13[4] = a2;
    v13[5] = a3;
    v13[6] = sub_1C14058D8;
    v13[7] = v12;
    v14 = qword_1ED795A00;
    swift_bridgeObjectRetain();
    swift_retain();
    if (v14 != -1)
      swift_once();
    sub_1C135AF64((uint64_t)sub_1C14058D8, v12, 0xD000000000000010, 0x80000001C1431320, (void *)qword_1ED7936E0, (uint64_t)(v13 + 8));
    swift_release();
    if (qword_1ED7978D8 != -1)
      swift_once();
    v15 = sub_1C1426854();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED798650);
    swift_bridgeObjectRetain_n();
    v16 = sub_1C1426848();
    v17 = sub_1C1426C80();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      *(_QWORD *)&v28[0] = v19;
      *(_DWORD *)v18 = 136446466;
      sub_1C132AD90(0xD000000000000010, 0x80000001C1431320, (uint64_t *)v28);
      sub_1C1426DB8();
      *(_WORD *)(v18 + 12) = 2082;
      swift_bridgeObjectRetain();
      sub_1C132AD90(a2, a3, (uint64_t *)v28);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v16, v17, "[state-capture] added StateCaptureItem with title: %{public}s, identifier: %{public}s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v19, -1, -1);
      MEMORY[0x1C3BAD3F4](v18, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v27 = *v8;
    *v8 = 0x8000000000000000;
    sub_1C13C2604((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *v8 = v27;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  }
  return result;
}

uint64_t sub_1C13FFB40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD **v5;
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  if (swift_conformsToProtocol2())
    v4 = a1;
  else
    v4 = 0;
  v5 = (_QWORD **)(a2 + 24);
  if (v4)
  {
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_1C13F7574(0, 0, a1, (uint64_t)&off_1E7A8C130);
  }
  else
  {
    swift_beginAccess();
    v6 = *v5;
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v5 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = sub_1C136C8D0(0, v6[2] + 1, 1, v6);
      *v5 = v6;
    }
    v9 = v6[2];
    v8 = v6[3];
    if (v9 >= v8 >> 1)
    {
      v6 = sub_1C136C8D0((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
      *v5 = v6;
    }
    v6[2] = v9 + 1;
    v10 = &v6[2 * v9];
    v10[4] = a1;
    v10[5] = &off_1E7A8C130;
  }
  return swift_endAccess();
}

uint64_t sub_1C13FFC64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD **v5;
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  if (swift_conformsToProtocol2())
    v4 = a1;
  else
    v4 = 0;
  v5 = (_QWORD **)(a2 + 24);
  if (v4)
  {
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_1C13F7574(0, 0, a1, (uint64_t)&off_1E7A8D670);
  }
  else
  {
    swift_beginAccess();
    v6 = *v5;
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v5 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = sub_1C136C8D0(0, v6[2] + 1, 1, v6);
      *v5 = v6;
    }
    v9 = v6[2];
    v8 = v6[3];
    if (v9 >= v8 >> 1)
    {
      v6 = sub_1C136C8D0((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
      *v5 = v6;
    }
    v6[2] = v9 + 1;
    v10 = &v6[2 * v9];
    v10[4] = a1;
    v10[5] = &off_1E7A8D670;
  }
  return swift_endAccess();
}

uint64_t sub_1C13FFD88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD **v5;
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  if (swift_conformsToProtocol2())
    v4 = a1;
  else
    v4 = 0;
  v5 = (_QWORD **)(a2 + 24);
  if (v4)
  {
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_1C13F7574(0, 0, a1, (uint64_t)&off_1E7A8AF68);
  }
  else
  {
    swift_beginAccess();
    v6 = *v5;
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v5 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = sub_1C136C8D0(0, v6[2] + 1, 1, v6);
      *v5 = v6;
    }
    v9 = v6[2];
    v8 = v6[3];
    if (v9 >= v8 >> 1)
    {
      v6 = sub_1C136C8D0((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
      *v5 = v6;
    }
    v6[2] = v9 + 1;
    v10 = &v6[2 * v9];
    v10[4] = a1;
    v10[5] = &off_1E7A8AF68;
  }
  return swift_endAccess();
}

uint64_t sub_1C13FFEAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD **v5;
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  if (swift_conformsToProtocol2())
    v4 = a1;
  else
    v4 = 0;
  v5 = (_QWORD **)(a2 + 24);
  if (v4)
  {
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_1C13F7574(0, 0, a1, (uint64_t)&off_1E7A8B7F0);
  }
  else
  {
    swift_beginAccess();
    v6 = *v5;
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v5 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = sub_1C136C8D0(0, v6[2] + 1, 1, v6);
      *v5 = v6;
    }
    v9 = v6[2];
    v8 = v6[3];
    if (v9 >= v8 >> 1)
    {
      v6 = sub_1C136C8D0((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
      *v5 = v6;
    }
    v6[2] = v9 + 1;
    v10 = &v6[2 * v9];
    v10[4] = a1;
    v10[5] = &off_1E7A8B7F0;
  }
  return swift_endAccess();
}

uint64_t sub_1C13FFFD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD **v5;
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  if (swift_conformsToProtocol2())
    v4 = a1;
  else
    v4 = 0;
  v5 = (_QWORD **)(a2 + 24);
  if (v4)
  {
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_1C13F7574(0, 0, a1, (uint64_t)&off_1E7A8E438);
  }
  else
  {
    swift_beginAccess();
    v6 = *v5;
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v5 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = sub_1C136C8D0(0, v6[2] + 1, 1, v6);
      *v5 = v6;
    }
    v9 = v6[2];
    v8 = v6[3];
    if (v9 >= v8 >> 1)
    {
      v6 = sub_1C136C8D0((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
      *v5 = v6;
    }
    v6[2] = v9 + 1;
    v10 = &v6[2 * v9];
    v10[4] = a1;
    v10[5] = &off_1E7A8E438;
  }
  return swift_endAccess();
}

uint64_t sub_1C14000F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD **v5;
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  if (swift_conformsToProtocol2())
    v4 = a1;
  else
    v4 = 0;
  v5 = (_QWORD **)(a2 + 24);
  if (v4)
  {
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_1C13F7574(0, 0, a1, (uint64_t)&off_1E7A8BD48);
  }
  else
  {
    swift_beginAccess();
    v6 = *v5;
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v5 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = sub_1C136C8D0(0, v6[2] + 1, 1, v6);
      *v5 = v6;
    }
    v9 = v6[2];
    v8 = v6[3];
    if (v9 >= v8 >> 1)
    {
      v6 = sub_1C136C8D0((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
      *v5 = v6;
    }
    v6[2] = v9 + 1;
    v10 = &v6[2 * v9];
    v10[4] = a1;
    v10[5] = &off_1E7A8BD48;
  }
  return swift_endAccess();
}

uint64_t sub_1C1400218(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD **v5;
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  if (swift_conformsToProtocol2())
    v4 = a1;
  else
    v4 = 0;
  v5 = (_QWORD **)(a2 + 24);
  if (v4)
  {
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_1C13F7574(0, 0, a1, (uint64_t)&off_1E7A8F3F8);
  }
  else
  {
    swift_beginAccess();
    v6 = *v5;
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v5 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = sub_1C136C8D0(0, v6[2] + 1, 1, v6);
      *v5 = v6;
    }
    v9 = v6[2];
    v8 = v6[3];
    if (v9 >= v8 >> 1)
    {
      v6 = sub_1C136C8D0((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
      *v5 = v6;
    }
    v6[2] = v9 + 1;
    v10 = &v6[2 * v9];
    v10[4] = a1;
    v10[5] = &off_1E7A8F3F8;
  }
  return swift_endAccess();
}

uint64_t sub_1C140033C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD **v5;
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  if (swift_conformsToProtocol2())
    v4 = a1;
  else
    v4 = 0;
  v5 = (_QWORD **)(a2 + 24);
  if (v4)
  {
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_1C13F7574(0, 0, a1, (uint64_t)&off_1E7A8C688);
  }
  else
  {
    swift_beginAccess();
    v6 = *v5;
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v5 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = sub_1C136C8D0(0, v6[2] + 1, 1, v6);
      *v5 = v6;
    }
    v9 = v6[2];
    v8 = v6[3];
    if (v9 >= v8 >> 1)
    {
      v6 = sub_1C136C8D0((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
      *v5 = v6;
    }
    v6[2] = v9 + 1;
    v10 = &v6[2 * v9];
    v10[4] = a1;
    v10[5] = &off_1E7A8C688;
  }
  return swift_endAccess();
}

uint64_t sub_1C1400460(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD **v5;
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  if (swift_conformsToProtocol2())
    v4 = a1;
  else
    v4 = 0;
  v5 = (_QWORD **)(a2 + 24);
  if (v4)
  {
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_1C13F7574(0, 0, a1, (uint64_t)&off_1E7A8B3A0);
  }
  else
  {
    swift_beginAccess();
    v6 = *v5;
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v5 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = sub_1C136C8D0(0, v6[2] + 1, 1, v6);
      *v5 = v6;
    }
    v9 = v6[2];
    v8 = v6[3];
    if (v9 >= v8 >> 1)
    {
      v6 = sub_1C136C8D0((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
      *v5 = v6;
    }
    v6[2] = v9 + 1;
    v10 = &v6[2 * v9];
    v10[4] = a1;
    v10[5] = &off_1E7A8B3A0;
  }
  return swift_endAccess();
}

uint64_t sub_1C1400584(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD **v5;
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  if (swift_conformsToProtocol2())
    v4 = a1;
  else
    v4 = 0;
  v5 = (_QWORD **)(a2 + 24);
  if (v4)
  {
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_1C13F7574(0, 0, a1, (uint64_t)&off_1E7A8B3E8);
  }
  else
  {
    swift_beginAccess();
    v6 = *v5;
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v5 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = sub_1C136C8D0(0, v6[2] + 1, 1, v6);
      *v5 = v6;
    }
    v9 = v6[2];
    v8 = v6[3];
    if (v9 >= v8 >> 1)
    {
      v6 = sub_1C136C8D0((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
      *v5 = v6;
    }
    v6[2] = v9 + 1;
    v10 = &v6[2 * v9];
    v10[4] = a1;
    v10[5] = &off_1E7A8B3E8;
  }
  return swift_endAccess();
}

uint64_t sub_1C14006A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD **v5;
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  if (swift_conformsToProtocol2())
    v4 = a1;
  else
    v4 = 0;
  v5 = (_QWORD **)(a2 + 24);
  if (v4)
  {
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_1C13F7574(0, 0, a1, (uint64_t)&off_1E7A8E4C0);
  }
  else
  {
    swift_beginAccess();
    v6 = *v5;
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v5 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = sub_1C136C8D0(0, v6[2] + 1, 1, v6);
      *v5 = v6;
    }
    v9 = v6[2];
    v8 = v6[3];
    if (v9 >= v8 >> 1)
    {
      v6 = sub_1C136C8D0((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
      *v5 = v6;
    }
    v6[2] = v9 + 1;
    v10 = &v6[2 * v9];
    v10[4] = a1;
    v10[5] = &off_1E7A8E4C0;
  }
  return swift_endAccess();
}

uint64_t sub_1C14007CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD **v5;
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  if (swift_conformsToProtocol2())
    v4 = a1;
  else
    v4 = 0;
  v5 = (_QWORD **)(a2 + 24);
  if (v4)
  {
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_1C13F7574(0, 0, a1, (uint64_t)&off_1E7A8D5B8);
  }
  else
  {
    swift_beginAccess();
    v6 = *v5;
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v5 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = sub_1C136C8D0(0, v6[2] + 1, 1, v6);
      *v5 = v6;
    }
    v9 = v6[2];
    v8 = v6[3];
    if (v9 >= v8 >> 1)
    {
      v6 = sub_1C136C8D0((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
      *v5 = v6;
    }
    v6[2] = v9 + 1;
    v10 = &v6[2 * v9];
    v10[4] = a1;
    v10[5] = &off_1E7A8D5B8;
  }
  return swift_endAccess();
}

uint64_t sub_1C14008F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD **v5;
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  if (swift_conformsToProtocol2())
    v4 = a1;
  else
    v4 = 0;
  v5 = (_QWORD **)(a2 + 24);
  if (v4)
  {
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_1C13F7574(0, 0, a1, (uint64_t)&off_1E7A8CE88);
  }
  else
  {
    swift_beginAccess();
    v6 = *v5;
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v5 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = sub_1C136C8D0(0, v6[2] + 1, 1, v6);
      *v5 = v6;
    }
    v9 = v6[2];
    v8 = v6[3];
    if (v9 >= v8 >> 1)
    {
      v6 = sub_1C136C8D0((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
      *v5 = v6;
    }
    v6[2] = v9 + 1;
    v10 = &v6[2 * v9];
    v10[4] = a1;
    v10[5] = &off_1E7A8CE88;
  }
  return swift_endAccess();
}

uint64_t sub_1C1400A14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD **v5;
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  if (swift_conformsToProtocol2())
    v4 = a1;
  else
    v4 = 0;
  v5 = (_QWORD **)(a2 + 24);
  if (v4)
  {
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_1C13F7574(0, 0, a1, (uint64_t)&off_1E7A8CAB8);
  }
  else
  {
    swift_beginAccess();
    v6 = *v5;
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v5 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = sub_1C136C8D0(0, v6[2] + 1, 1, v6);
      *v5 = v6;
    }
    v9 = v6[2];
    v8 = v6[3];
    if (v9 >= v8 >> 1)
    {
      v6 = sub_1C136C8D0((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
      *v5 = v6;
    }
    v6[2] = v9 + 1;
    v10 = &v6[2 * v9];
    v10[4] = a1;
    v10[5] = &off_1E7A8CAB8;
  }
  return swift_endAccess();
}

uint64_t sub_1C1400B38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD **v5;
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  if (swift_conformsToProtocol2())
    v4 = a1;
  else
    v4 = 0;
  v5 = (_QWORD **)(a2 + 24);
  if (v4)
  {
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_1C13F7574(0, 0, a1, (uint64_t)&off_1E7A8EF80);
  }
  else
  {
    swift_beginAccess();
    v6 = *v5;
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v5 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = sub_1C136C8D0(0, v6[2] + 1, 1, v6);
      *v5 = v6;
    }
    v9 = v6[2];
    v8 = v6[3];
    if (v9 >= v8 >> 1)
    {
      v6 = sub_1C136C8D0((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
      *v5 = v6;
    }
    v6[2] = v9 + 1;
    v10 = &v6[2 * v9];
    v10[4] = a1;
    v10[5] = &off_1E7A8EF80;
  }
  return swift_endAccess();
}

uint64_t sub_1C1400C5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD **v5;
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  if (swift_conformsToProtocol2())
    v4 = a1;
  else
    v4 = 0;
  v5 = (_QWORD **)(a2 + 24);
  if (v4)
  {
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_1C13F7574(0, 0, a1, (uint64_t)&off_1E7A8AE48);
  }
  else
  {
    swift_beginAccess();
    v6 = *v5;
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v5 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = sub_1C136C8D0(0, v6[2] + 1, 1, v6);
      *v5 = v6;
    }
    v9 = v6[2];
    v8 = v6[3];
    if (v9 >= v8 >> 1)
    {
      v6 = sub_1C136C8D0((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
      *v5 = v6;
    }
    v6[2] = v9 + 1;
    v10 = &v6[2 * v9];
    v10[4] = a1;
    v10[5] = &off_1E7A8AE48;
  }
  return swift_endAccess();
}

uint64_t sub_1C1400D80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD **v5;
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  if (swift_conformsToProtocol2())
    v4 = a1;
  else
    v4 = 0;
  v5 = (_QWORD **)(a2 + 24);
  if (v4)
  {
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_1C13F7574(0, 0, a1, (uint64_t)&off_1E7A8B438);
  }
  else
  {
    swift_beginAccess();
    v6 = *v5;
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v5 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = sub_1C136C8D0(0, v6[2] + 1, 1, v6);
      *v5 = v6;
    }
    v9 = v6[2];
    v8 = v6[3];
    if (v9 >= v8 >> 1)
    {
      v6 = sub_1C136C8D0((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
      *v5 = v6;
    }
    v6[2] = v9 + 1;
    v10 = &v6[2 * v9];
    v10[4] = a1;
    v10[5] = &off_1E7A8B438;
  }
  return swift_endAccess();
}

uint64_t sub_1C1400EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD **v5;
  _QWORD *v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  if (swift_conformsToProtocol2())
    v4 = a1;
  else
    v4 = 0;
  v5 = (_QWORD **)(a2 + 24);
  if (v4)
  {
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_1C13F7574(0, 0, a1, (uint64_t)&off_1E7A8EF00);
  }
  else
  {
    swift_beginAccess();
    v6 = *v5;
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v5 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v6 = sub_1C136C8D0(0, v6[2] + 1, 1, v6);
      *v5 = v6;
    }
    v9 = v6[2];
    v8 = v6[3];
    if (v9 >= v8 >> 1)
    {
      v6 = sub_1C136C8D0((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
      *v5 = v6;
    }
    v6[2] = v9 + 1;
    v10 = &v6[2 * v9];
    v10[4] = a1;
    v10[5] = &off_1E7A8EF00;
  }
  return swift_endAccess();
}

uint64_t sub_1C1400FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[5];

  v24 = a4;
  v25 = a2;
  v26 = a3;
  v5 = sub_1C1426CD4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C1426C8C();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v9);
  v11 = sub_1C14269B0();
  MEMORY[0x1E0C80A78](v11);
  v33[3] = type metadata accessor for PersistentActivityStore();
  v33[4] = &off_1E7A8DBF0;
  v33[0] = a1;
  sub_1C1330F6C();
  sub_1C1426974();
  v27 = MEMORY[0x1E0DEE9D8];
  sub_1C1329AD0((unint64_t *)&qword_1ED7939F0, v10, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A70);
  v12 = v24;
  sub_1C132C820((unint64_t *)&qword_1ED797A80, (uint64_t *)&unk_1ED797A70, MEMORY[0x1E0DEAF38]);
  sub_1C1426DF4();
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DEF8D0], v5);
  v13 = v25;
  v14 = sub_1C1426D04();
  *(_OWORD *)(v12 + 120) = 0u;
  *(_QWORD *)(v12 + 16) = v14;
  *(_OWORD *)(v12 + 136) = 0u;
  *(_QWORD *)(v12 + 152) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791E18);
  v15 = swift_allocObject();
  *(_DWORD *)(v15 + 16) = 0;
  *(_QWORD *)(v12 + 160) = v15;
  *(_QWORD *)(v12 + 176) = 0;
  swift_unknownObjectWeakInit();
  v16 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v12 + 184) = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v12 + 192) = v16;
  *(_QWORD *)(v12 + 200) = v16;
  *(_QWORD *)(v12 + 208) = 0;
  sub_1C132E0A8((uint64_t)v33, v12 + 80);
  if (*(_QWORD *)(v13 + 24))
  {
    sub_1C14055C8(v13, (uint64_t)&v27);
  }
  else
  {
    v17 = sub_1C14260E0();
    swift_allocObject();
    v18 = sub_1C14260D4();
    v30 = MEMORY[0x1E0D87898];
    v31 = MEMORY[0x1E0D87840];
    v32 = MEMORY[0x1E0D87868];
    v29 = v17;
    v27 = v18;
  }
  sub_1C1405580((uint64_t)&v27, v12 + 24);
  v19 = v26;
  swift_beginAccess();
  sub_1C1405530(v19, v12 + 120);
  swift_endAccess();
  v27 = 0;
  v28 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791DF8);
  swift_allocObject();
  *(_QWORD *)(v12 + 216) = sub_1C14268F0();
  swift_beginAccess();
  v20 = *(_QWORD *)(v12 + 144);
  if (v20)
  {
    v21 = *(_QWORD *)(v12 + 152);
    __swift_mutable_project_boxed_opaque_existential_1(v12 + 120, *(_QWORD *)(v12 + 144));
    v22 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v21 + 24);
    swift_retain();
    v22(sub_1C1405578, v12, v20, v21);
  }
  swift_endAccess();
  sub_1C132C860(v19, &qword_1ED793538);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  sub_1C132C860(v13, &qword_1ED793398);
  return v12;
}

_QWORD *sub_1C1401458(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _DWORD *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  char *v33;
  uint64_t v34;
  unint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t);
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  _QWORD v48[5];
  _QWORD v49[5];
  _QWORD v50[5];
  _QWORD v51[5];
  _QWORD v52[5];

  v36 = a3;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797908);
  v45 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v43 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793A00);
  MEMORY[0x1E0C80A78](v12);
  v39 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939B8);
  v42 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v40 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_1C1426CD4();
  v15 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1C1426C8C();
  MEMORY[0x1E0C80A78](v18);
  v19 = sub_1C14269B0();
  MEMORY[0x1E0C80A78](v19);
  v38 = (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1C14264DC();
  v52[3] = v38;
  v52[4] = MEMORY[0x1E0D8D108];
  v52[0] = a1;
  v51[3] = sub_1C14265B4();
  v51[4] = MEMORY[0x1E0D8D1C8];
  v51[0] = a2;
  v50[3] = type metadata accessor for QoSManager();
  v50[4] = &off_1E7A8C050;
  v50[0] = v36;
  v49[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED795A88);
  v49[4] = &off_1E7A8F158;
  v49[0] = a5;
  v20 = type metadata accessor for AuthorizationManager();
  v48[4] = &off_1E7A8A518;
  v48[3] = v20;
  v48[0] = a4;
  a6[3] = 0;
  swift_unknownObjectWeakInit();
  v21 = sub_1C1330F6C();
  sub_1C1426974();
  v46 = MEMORY[0x1E0DEE9D8];
  sub_1C1329AD0((unint64_t *)&qword_1ED7939F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A70);
  sub_1C132C820((unint64_t *)&qword_1ED797A80, (uint64_t *)&unk_1ED797A70, MEMORY[0x1E0DEAF38]);
  sub_1C1426DF4();
  (*(void (**)(char *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E0DEF8D0], v37);
  v36 = v21;
  a6[4] = sub_1C1426D04();
  type metadata accessor for UnfairLock();
  v22 = swift_allocObject();
  v23 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v22 + 16) = v23;
  *v23 = 0;
  a6[5] = v22;
  a6[31] = MEMORY[0x1E0DEE9E8];
  sub_1C132E0A8((uint64_t)v52, (uint64_t)(a6 + 6));
  sub_1C132E0A8((uint64_t)v51, (uint64_t)(a6 + 11));
  sub_1C132E0A8((uint64_t)v50, (uint64_t)(a6 + 16));
  sub_1C132E0A8((uint64_t)v48, (uint64_t)(a6 + 21));
  sub_1C132E0A8((uint64_t)v49, (uint64_t)(a6 + 26));
  v46 = sub_1C142632C();
  v47 = (id)a6[4];
  v24 = v47;
  v25 = sub_1C1426CA4();
  v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
  v26 = (uint64_t)v39;
  v38(v39, 1, 1, v25);
  v27 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797928);
  sub_1C132C820(&qword_1ED797920, &qword_1ED797928, MEMORY[0x1E0C95D90]);
  sub_1C1329AD0((unint64_t *)&qword_1ED797AA0, (uint64_t (*)(uint64_t))sub_1C1330F6C, MEMORY[0x1E0DEF7F8]);
  v28 = v40;
  sub_1C1426914();
  sub_1C132C860(v26, (uint64_t *)&unk_1ED793A00);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  v29 = MEMORY[0x1E0C95CB8];
  sub_1C132C820(&qword_1ED7978F8, &qword_1ED7939B8, MEMORY[0x1E0C95CB8]);
  v30 = v41;
  sub_1C1426938();
  swift_release();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v28, v30);
  swift_beginAccess();
  sub_1C14268A8();
  swift_endAccess();
  swift_release();
  v46 = *(_QWORD *)(v50[0] + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D0);
  sub_1C132C820(&qword_1ED797990, &qword_1ED7939D0, MEMORY[0x1E0C95FB8]);
  v46 = sub_1C1426908();
  v47 = (id)a6[4];
  v31 = v47;
  v38((char *)v26, 1, 1, v25);
  v32 = v31;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797938);
  sub_1C132C820(&qword_1ED797930, &qword_1ED797938, MEMORY[0x1E0C95D90]);
  v33 = v43;
  sub_1C1426914();
  sub_1C132C860(v26, (uint64_t *)&unk_1ED793A00);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_1C132C820(&qword_1ED797900, &qword_1ED797908, v29);
  v34 = v44;
  sub_1C1426938();
  swift_release();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v33, v34);
  swift_beginAccess();
  sub_1C14268A8();
  swift_endAccess();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v49);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  return a6;
}

_QWORD *sub_1C1401BF4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  char *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  _QWORD v36[2];
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  id v51;
  _QWORD v52[5];
  _QWORD v53[6];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791ED8);
  v7 = *(_QWORD *)(v6 - 8);
  v45 = v6;
  v46 = v7;
  MEMORY[0x1E0C80A78](v6);
  v44 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793A00);
  MEMORY[0x1E0C80A78](v9);
  v38 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939C0);
  v43 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v39 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = (_QWORD *)sub_1C1426CD4();
  v12 = *(v49 - 1);
  MEMORY[0x1E0C80A78](v49);
  v14 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1C1426C8C();
  v16 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v15);
  v17 = sub_1C14269B0();
  MEMORY[0x1E0C80A78](v17);
  v53[3] = type metadata accessor for PersistentActivityStore();
  v53[4] = &off_1E7A8DBF0;
  v53[0] = a2;
  v52[3] = type metadata accessor for AppEventObserver();
  v52[4] = &off_1E7A8D080;
  v52[0] = a1;
  a3[3] = 0;
  swift_unknownObjectWeakInit();
  v18 = sub_1C1330F6C();
  sub_1C1426998();
  v50 = MEMORY[0x1E0DEE9D8];
  sub_1C1329AD0((unint64_t *)&qword_1ED7939F0, v16, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A70);
  sub_1C132C820((unint64_t *)&qword_1ED797A80, (uint64_t *)&unk_1ED797A70, MEMORY[0x1E0DEAF38]);
  sub_1C1426DF4();
  (*(void (**)(char *, _QWORD, _QWORD *))(v12 + 104))(v14, *MEMORY[0x1E0DEF8D8], v49);
  v36[1] = v18;
  a3[14] = sub_1C1426D04();
  a3[15] = MEMORY[0x1E0DEE9E8];
  sub_1C132E0A8((uint64_t)v53, (uint64_t)(a3 + 4));
  v49 = a3 + 9;
  sub_1C132E0A8((uint64_t)v52, (uint64_t)(a3 + 9));
  __swift_project_boxed_opaque_existential_1(a3 + 9, a3[12]);
  v50 = sub_1C13C6B2C();
  v51 = (id)a3[14];
  v19 = v51;
  v20 = sub_1C1426CA4();
  v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v21 = (uint64_t)v38;
  v37 = v20;
  v47(v38, 1, 1, v20);
  v22 = v19;
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797958);
  v41 = sub_1C132C820(&qword_1ED797950, &qword_1ED797958, MEMORY[0x1E0C95D90]);
  v36[0] = sub_1C1329AD0((unint64_t *)&qword_1ED797AA0, (uint64_t (*)(uint64_t))sub_1C1330F6C, MEMORY[0x1E0DEF7F8]);
  v23 = v39;
  sub_1C1426914();
  sub_1C132C860(v21, (uint64_t *)&unk_1ED793A00);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  v40 = sub_1C132C820(&qword_1ED797910, &qword_1ED7939C0, MEMORY[0x1E0C95CB8]);
  v24 = v48;
  sub_1C1426938();
  swift_release();
  v43 = *(_QWORD *)(v43 + 8);
  ((void (*)(char *, uint64_t))v43)(v23, v24);
  swift_beginAccess();
  sub_1C14268A8();
  swift_endAccess();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v49, a3[12]);
  v50 = sub_1C13C6C00();
  v51 = (id)a3[14];
  v25 = v51;
  v26 = v21;
  v47((char *)v21, 1, 1, v20);
  v27 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7927E0);
  sub_1C132C820(&qword_1ED7927D8, &qword_1ED7927E0, MEMORY[0x1E0C95D90]);
  v28 = v44;
  sub_1C1426914();
  sub_1C132C860(v26, (uint64_t *)&unk_1ED793A00);

  swift_release();
  v29 = swift_allocObject();
  swift_weakInit();
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = sub_1C1405640;
  *(_QWORD *)(v30 + 24) = v29;
  sub_1C132C820(&qword_1ED7927A8, &qword_1ED791ED8, MEMORY[0x1E0C95CB8]);
  v31 = v45;
  sub_1C1426938();
  swift_release();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v28, v31);
  swift_beginAccess();
  sub_1C14268A8();
  swift_endAccess();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v49, a3[12]);
  v50 = sub_1C13C6B08();
  v51 = (id)a3[14];
  v32 = v51;
  v47((char *)v26, 1, 1, v37);
  v33 = v32;
  sub_1C1426914();
  sub_1C132C860(v26, (uint64_t *)&unk_1ED793A00);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  v34 = v48;
  sub_1C1426938();
  swift_release();
  ((void (*)(char *, uint64_t))v43)(v23, v34);
  swift_beginAccess();
  sub_1C14268A8();
  swift_endAccess();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  return a3;
}

uint64_t sub_1C1402398(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6;
  _DWORD *v7;
  uint64_t v8;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;

  v11 = type metadata accessor for TaskScheduler();
  v12 = sub_1C1329AD0(&qword_1ED792968, (uint64_t (*)(uint64_t))type metadata accessor for TaskScheduler, (uint64_t)&unk_1C142A1AC);
  *(_QWORD *)&v10 = a1;
  type metadata accessor for UnfairLock();
  v6 = swift_allocObject();
  v7 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v6 + 16) = v7;
  *v7 = 0;
  *(_QWORD *)(a2 + 16) = v6;
  *(_OWORD *)(a2 + 72) = 0u;
  *(_OWORD *)(a2 + 88) = 0u;
  v8 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 112) = v8;
  *(_QWORD *)(a2 + 128) = 0;
  swift_unknownObjectWeakInit();
  sub_1C1339184(&v10, a2 + 24);
  *(double *)(a2 + 64) = a3;
  return a2;
}

uint64_t sub_1C1402468(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _DWORD *v5;
  uint64_t v6;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;

  v9 = type metadata accessor for TaskScheduler();
  v10 = sub_1C1329AD0(&qword_1ED792968, (uint64_t (*)(uint64_t))type metadata accessor for TaskScheduler, (uint64_t)&unk_1C142A1AC);
  *(_QWORD *)&v8 = a1;
  type metadata accessor for UnfairLock();
  v4 = swift_allocObject();
  v5 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = 0;
  *(_QWORD *)(a2 + 16) = v4;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_OWORD *)(a2 + 80) = 0u;
  v6 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(a2 + 96) = 0;
  *(_QWORD *)(a2 + 104) = v6;
  *(_QWORD *)(a2 + 120) = 0;
  swift_unknownObjectWeakInit();
  sub_1C1339184(&v8, a2 + 24);
  return a2;
}

_QWORD *sub_1C1402524(void (*a1)(char *, uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  unint64_t v30;
  unint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char *v36;
  uint64_t v37;
  char *v38;
  id v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t, uint64_t);
  id v42;
  id v43;
  uint64_t v44;
  id v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  id v52;
  char *v53;
  uint64_t v54;
  id v55;
  id v56;
  char *v57;
  uint64_t v58;
  void *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  _QWORD v64[3];
  char *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  unint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  _QWORD v89[6];
  id v90;
  _QWORD v91[5];
  _QWORD v92[5];
  _QWORD v93[5];
  _QWORD v94[5];
  _QWORD v95[6];

  v84 = a1;
  v85 = a3;
  v10 = sub_1C1426950();
  v11 = *(_QWORD *)(v10 - 8);
  v78 = v10;
  v79 = v11;
  MEMORY[0x1E0C80A78](v10);
  v77 = (char *)v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793120);
  v14 = *(_QWORD *)(v13 - 8);
  v73 = v13;
  v74 = v14;
  MEMORY[0x1E0C80A78](v13);
  v71 = (char *)v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791ED8);
  v70 = *(_QWORD *)(v88 - 8);
  MEMORY[0x1E0C80A78](v88);
  v87 = (char *)v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793A00);
  MEMORY[0x1E0C80A78](v17);
  v86 = (char *)v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939C0);
  v20 = *(_QWORD *)(v19 - 8);
  v66 = v19;
  v67 = v20;
  MEMORY[0x1E0C80A78](v19);
  v65 = (char *)v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1C1426CD4();
  v82 = *(_QWORD **)(v22 - 8);
  v83 = v22;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)v64 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1C1426C8C();
  v26 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v25);
  v27 = sub_1C14269B0();
  v75 = *(_QWORD *)(v27 - 8);
  v76 = v27;
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)v64 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95[3] = sub_1C14264DC();
  v95[4] = MEMORY[0x1E0D8D108];
  v95[0] = a2;
  v94[3] = type metadata accessor for AppEventObserver();
  v94[4] = &off_1E7A8D080;
  v94[0] = v84;
  v93[3] = type metadata accessor for PushToStartAppBundleIDProvider();
  v93[4] = &off_1E7A8E3E8;
  v93[0] = v85;
  v92[3] = type metadata accessor for AuthorizationManager();
  v92[4] = &off_1E7A8A518;
  v92[0] = a4;
  v91[3] = type metadata accessor for KnownClientStore();
  v91[4] = &off_1E7A8D410;
  v91[0] = a5;
  v30 = sub_1C1330F6C();
  v72 = v29;
  sub_1C1426998();
  v89[0] = MEMORY[0x1E0DEE9D8];
  sub_1C1329AD0((unint64_t *)&qword_1ED7939F0, v26, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A70);
  sub_1C132C820((unint64_t *)&qword_1ED797A80, (uint64_t *)&unk_1ED797A70, MEMORY[0x1E0DEAF38]);
  sub_1C1426DF4();
  ((void (*)(char *, _QWORD, uint64_t))v82[13])(v24, *MEMORY[0x1E0DEF8D8], v83);
  v31 = v30;
  a6[27] = sub_1C1426D04();
  a6[28] = MEMORY[0x1E0DEE9E8];
  v80 = a6 + 2;
  sub_1C132E0A8((uint64_t)v94, (uint64_t)(a6 + 2));
  sub_1C132E0A8((uint64_t)v95, (uint64_t)(a6 + 7));
  sub_1C132E0A8((uint64_t)v93, (uint64_t)(a6 + 12));
  v68 = a6 + 17;
  sub_1C132E0A8((uint64_t)v92, (uint64_t)(a6 + 17));
  v69 = a6 + 22;
  sub_1C132E0A8((uint64_t)v91, (uint64_t)(a6 + 22));
  __swift_project_boxed_opaque_existential_1(a6 + 2, a6[5]);
  v89[0] = sub_1C13C6B08();
  v90 = (id)a6[27];
  v32 = v90;
  v33 = sub_1C1426CA4();
  v84 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56);
  v85 = v33;
  v34 = (uint64_t)v86;
  v84(v86, 1, 1, v33);
  v35 = v32;
  v64[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797958);
  v64[1] = sub_1C132C820(&qword_1ED797950, &qword_1ED797958, MEMORY[0x1E0C95D90]);
  v83 = sub_1C1329AD0((unint64_t *)&qword_1ED797AA0, (uint64_t (*)(uint64_t))sub_1C1330F6C, MEMORY[0x1E0DEF7F8]);
  v36 = v65;
  v81 = v31;
  sub_1C1426914();
  sub_1C132C860(v34, (uint64_t *)&unk_1ED793A00);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  v64[0] = sub_1C132C820(&qword_1ED797910, &qword_1ED7939C0, MEMORY[0x1E0C95CB8]);
  v37 = v66;
  sub_1C1426938();
  swift_release();
  v67 = *(_QWORD *)(v67 + 8);
  v38 = v36;
  ((void (*)(char *, uint64_t))v67)(v36, v37);
  v82 = a6 + 28;
  swift_beginAccess();
  sub_1C14268A8();
  swift_endAccess();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v80, a6[5]);
  v89[0] = sub_1C13C6B2C();
  v90 = (id)a6[27];
  v39 = v90;
  v41 = v84;
  v40 = v85;
  v84((char *)v34, 1, 1, v85);
  v42 = v39;
  sub_1C1426914();
  sub_1C132C860(v34, (uint64_t *)&unk_1ED793A00);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_1C1426938();
  swift_release();
  ((void (*)(char *, uint64_t))v67)(v38, v37);
  swift_beginAccess();
  sub_1C14268A8();
  swift_endAccess();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v80, a6[5]);
  v89[0] = sub_1C13C6C00();
  v90 = (id)a6[27];
  v43 = v90;
  v44 = (uint64_t)v86;
  v41(v86, 1, 1, v40);
  v45 = v43;
  v80 = (_QWORD *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED7927E0);
  v67 = sub_1C132C820(&qword_1ED7927D8, &qword_1ED7927E0, MEMORY[0x1E0C95D90]);
  v46 = v87;
  sub_1C1426914();
  sub_1C132C860(v44, (uint64_t *)&unk_1ED793A00);

  swift_release();
  v47 = swift_allocObject();
  swift_weakInit();
  v48 = swift_allocObject();
  *(_QWORD *)(v48 + 16) = sub_1C1405674;
  *(_QWORD *)(v48 + 24) = v47;
  v66 = sub_1C132C820(&qword_1ED7927A8, &qword_1ED791ED8, MEMORY[0x1E0C95CB8]);
  v49 = v88;
  sub_1C1426938();
  swift_release();
  v70 = *(_QWORD *)(v70 + 8);
  ((void (*)(char *, uint64_t))v70)(v46, v49);
  swift_beginAccess();
  sub_1C14268A8();
  swift_endAccess();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v68, a6[20]);
  v89[0] = sub_1C13392E4();
  v90 = (id)a6[27];
  v50 = v90;
  v51 = v85;
  v41((char *)v44, 1, 1, v85);
  v52 = v50;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793150);
  sub_1C132C820(&qword_1ED793148, &qword_1ED793150, MEMORY[0x1E0C95D90]);
  v53 = v71;
  sub_1C1426914();
  sub_1C132C860(v44, (uint64_t *)&unk_1ED793A00);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_1C132C820(&qword_1ED793118, (uint64_t *)&unk_1ED793120, MEMORY[0x1E0C95CB8]);
  v54 = v73;
  sub_1C1426938();
  swift_release();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v53, v54);
  swift_beginAccess();
  sub_1C14268A8();
  swift_endAccess();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v69, a6[25]);
  v89[0] = sub_1C13CEF20();
  v90 = (id)a6[27];
  v55 = v90;
  v84((char *)v44, 1, 1, v51);
  v56 = v55;
  v57 = v87;
  sub_1C1426914();
  sub_1C132C860(v44, (uint64_t *)&unk_1ED793A00);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  v58 = v88;
  sub_1C1426938();
  swift_release();
  ((void (*)(char *, uint64_t))v70)(v57, v58);
  swift_beginAccess();
  sub_1C14268A8();
  swift_endAccess();
  swift_release();
  v89[4] = sub_1C1405684;
  v89[5] = a6;
  v89[0] = MEMORY[0x1E0C809B0];
  v89[1] = 1107296256;
  v89[2] = sub_1C13A7F4C;
  v89[3] = &block_descriptor_25;
  v59 = _Block_copy(v89);
  swift_retain();
  v60 = v72;
  sub_1C1426974();
  v90 = (id)MEMORY[0x1E0DEE9D8];
  sub_1C1329AD0((unint64_t *)&qword_1ED7979D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A50);
  sub_1C132C820((unint64_t *)&qword_1ED797A60, (uint64_t *)&unk_1ED797A50, MEMORY[0x1E0DEAF38]);
  v61 = v77;
  v62 = v78;
  sub_1C1426DF4();
  MEMORY[0x1C3BAC9D4](0, v60, v61, v59);
  _Block_release(v59);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v91);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v92);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v93);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v95);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v94);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v61, v62);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v60, v76);
  swift_release();
  return a6;
}

uint64_t sub_1C1403140(uint64_t a1, uint64_t a2, void *a3, void *a4, char *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _DWORD *v17;
  id v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  objc_class *v25;
  id v26;
  uint64_t v27;
  void *v28;
  void *v29;
  char *v30;
  id v31;
  uint64_t result;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  char v38;
  id v39;
  _QWORD aBlock[6];
  objc_super v41;
  _QWORD v42[5];
  _BYTE v43[24];
  ValueMetadata *v44;
  _UNKNOWN **v45;
  _QWORD v46[6];

  v37 = a4;
  v36 = a3;
  v35 = sub_1C1426CD4();
  v8 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C1426C8C();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v11);
  v13 = sub_1C14269B0();
  MEMORY[0x1E0C80A78](v13);
  v46[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED795A88);
  v46[4] = &off_1E7A8F158;
  v46[0] = a1;
  v44 = &type metadata for DefaultInputBackoffPolicy;
  v45 = &off_1E7A8EFE8;
  v42[3] = type metadata accessor for KnownClientStore();
  v42[4] = &off_1E7A8D410;
  v42[0] = a2;
  *(_QWORD *)&a5[OBJC_IVAR____TtC11SessionCore11InputServer_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&a5[OBJC_IVAR____TtC11SessionCore11InputServer_listener] = 0;
  v14 = OBJC_IVAR____TtC11SessionCore11InputServer_lock;
  type metadata accessor for UnfairLock();
  v15 = swift_allocObject();
  v16 = a5;
  v17 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v15 + 16) = v17;
  *v17 = 0;
  *(_QWORD *)&a5[v14] = v15;
  *(_QWORD *)&v16[OBJC_IVAR____TtC11SessionCore11InputServer_clients] = MEMORY[0x1E0DEE9E8];
  sub_1C1330F6C();
  sub_1C1426998();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1C1329AD0((unint64_t *)&qword_1ED7939F0, v12, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A70);
  sub_1C132C820((unint64_t *)&qword_1ED797A80, (uint64_t *)&unk_1ED797A70, MEMORY[0x1E0DEAF38]);
  sub_1C1426DF4();
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF8D8], v35);
  v18 = v36;
  *(_QWORD *)&v16[OBJC_IVAR____TtC11SessionCore11InputServer_queue] = sub_1C1426D04();
  sub_1C132E0A8((uint64_t)v46, (uint64_t)&v16[OBJC_IVAR____TtC11SessionCore11InputServer_activityAuthorizer]);
  sub_1C132E0A8((uint64_t)v43, (uint64_t)&v16[OBJC_IVAR____TtC11SessionCore11InputServer_backoffPolicy]);
  v19 = MEMORY[0x1E0D8D0F0];
  v20 = &v16[OBJC_IVAR____TtC11SessionCore11InputServer_pushServer];
  v21 = MEMORY[0x1E0D8D100];
  v22 = MEMORY[0x1E0D8D108];
  v23 = v37;
  *(_QWORD *)v20 = v37;
  *((_QWORD *)v20 + 1) = v19;
  *((_QWORD *)v20 + 2) = v21;
  *((_QWORD *)v20 + 3) = v22;
  sub_1C132E0A8((uint64_t)v42, (uint64_t)&v16[OBJC_IVAR____TtC11SessionCore11InputServer_knownClientStore]);
  v24 = v23;
  swift_unknownObjectRetain();

  v25 = (objc_class *)type metadata accessor for InputServer();
  v41.receiver = v16;
  v41.super_class = v25;
  v26 = objc_msgSendSuper2(&v41, sel_init);
  v39 = v26;
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = sub_1C140568C;
  *(_QWORD *)(v27 + 24) = &v38;
  aBlock[4] = sub_1C1327D4C;
  aBlock[5] = v27;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1327D10;
  aBlock[3] = &block_descriptor_98;
  v28 = _Block_copy(aBlock);
  v29 = (void *)objc_opt_self();
  v30 = (char *)v26;
  swift_retain();
  v31 = objc_msgSend(v29, sel_listenerWithConfigurator_, v28);
  _Block_release(v28);
  swift_release();
  LOBYTE(v26) = swift_isEscapingClosureAtFileLocation();

  result = swift_release();
  if ((v26 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
    v33 = *(void **)&v30[OBJC_IVAR____TtC11SessionCore11InputServer_listener];
    *(_QWORD *)&v30[OBJC_IVAR____TtC11SessionCore11InputServer_listener] = v31;

    return (uint64_t)v30;
  }
  return result;
}

uint64_t sub_1C14035E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, char *a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _DWORD *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  objc_class *v25;
  id v26;
  uint64_t v27;
  void *v28;
  void *v29;
  char *v30;
  id v31;
  uint64_t result;
  void *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[3];
  _QWORD v41[6];
  objc_super v42;
  _QWORD v43[5];
  _QWORD v44[5];
  _QWORD v45[5];
  _QWORD v46[6];

  v37 = a6;
  v39 = a4;
  v12 = sub_1C1426CD4();
  v35 = *(_QWORD *)(v12 - 8);
  v36 = v12;
  MEMORY[0x1E0C80A78](v12);
  v34 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1C1426C8C();
  MEMORY[0x1E0C80A78](v14);
  v15 = sub_1C14269B0();
  MEMORY[0x1E0C80A78](v15);
  v38 = sub_1C14264DC();
  v46[3] = v38;
  v46[4] = MEMORY[0x1E0D8D108];
  v46[0] = a1;
  v45[3] = type metadata accessor for PersistentActivityStore();
  v45[4] = &off_1E7A8DBF0;
  v45[0] = a3;
  v44[3] = type metadata accessor for ProcessManager();
  v44[4] = &off_1E7A8AFC8;
  v44[0] = a2;
  v43[3] = type metadata accessor for AuthorizationManager();
  v43[4] = &off_1E7A8A518;
  v43[0] = a5;
  v16 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&a7[OBJC_IVAR____TtC11SessionCore15PushTokenServer_subscriptions] = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&a7[OBJC_IVAR____TtC11SessionCore15PushTokenServer_listener] = 0;
  v17 = OBJC_IVAR____TtC11SessionCore15PushTokenServer_lock;
  type metadata accessor for UnfairLock();
  v18 = swift_allocObject();
  v19 = a7;
  v20 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v18 + 16) = v20;
  *v20 = 0;
  *(_QWORD *)&a7[v17] = v18;
  *(_QWORD *)&v19[OBJC_IVAR____TtC11SessionCore15PushTokenServer_lock_clients] = v16;
  v21 = OBJC_IVAR____TtC11SessionCore15PushTokenServer_lock_tokens;
  *(_QWORD *)&v19[OBJC_IVAR____TtC11SessionCore15PushTokenServer_lock_tokens] = v16;
  sub_1C1330F6C();
  sub_1C1426998();
  v41[0] = MEMORY[0x1E0DEE9D8];
  sub_1C1329AD0((unint64_t *)&qword_1ED7939F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A70);
  sub_1C132C820((unint64_t *)&qword_1ED797A80, (uint64_t *)&unk_1ED797A70, MEMORY[0x1E0DEAF38]);
  sub_1C1426DF4();
  (*(void (**)(char *, _QWORD, uint64_t))(v35 + 104))(v34, *MEMORY[0x1E0DEF8D8], v36);
  v22 = v37;
  *(_QWORD *)&v19[OBJC_IVAR____TtC11SessionCore15PushTokenServer_requestProcessingQueue] = sub_1C1426D04();
  sub_1C132E0A8((uint64_t)v46, (uint64_t)&v19[OBJC_IVAR____TtC11SessionCore15PushTokenServer_pushServer]);
  sub_1C132E0A8((uint64_t)v44, (uint64_t)&v19[OBJC_IVAR____TtC11SessionCore15PushTokenServer_processManager]);
  sub_1C132E0A8((uint64_t)v45, (uint64_t)&v19[OBJC_IVAR____TtC11SessionCore15PushTokenServer_activityStore]);
  sub_1C132E0A8((uint64_t)v43, (uint64_t)&v19[OBJC_IVAR____TtC11SessionCore15PushTokenServer_authorizationManager]);
  *(_QWORD *)&v19[OBJC_IVAR____TtC11SessionCore15PushTokenServer_knownClientStore] = v39;
  swift_retain();
  v23 = sub_1C14264E8();
  v24 = sub_1C13753C8(v23);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v19[v21] = v24;

  swift_bridgeObjectRelease();
  v25 = (objc_class *)type metadata accessor for PushTokenServer();
  v42.receiver = v19;
  v42.super_class = v25;
  v26 = objc_msgSendSuper2(&v42, sel_init);
  v40[2] = v26;
  v27 = swift_allocObject();
  *(_QWORD *)(v27 + 16) = sub_1C14056A4;
  *(_QWORD *)(v27 + 24) = v40;
  v41[4] = sub_1C14058DC;
  v41[5] = v27;
  v41[0] = MEMORY[0x1E0C809B0];
  v41[1] = 1107296256;
  v41[2] = sub_1C1327D10;
  v41[3] = &block_descriptor_105;
  v28 = _Block_copy(v41);
  v29 = (void *)objc_opt_self();
  v30 = (char *)v26;
  swift_retain();
  v31 = objc_msgSend(v29, sel_listenerWithConfigurator_, v28);
  _Block_release(v28);
  swift_release();
  LOBYTE(v28) = swift_isEscapingClosureAtFileLocation();
  swift_release();

  result = swift_release();
  if ((v28 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
    v33 = *(void **)&v30[OBJC_IVAR____TtC11SessionCore15PushTokenServer_listener];
    *(_QWORD *)&v30[OBJC_IVAR____TtC11SessionCore15PushTokenServer_listener] = v31;

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
    return (uint64_t)v30;
  }
  return result;
}

uint64_t sub_1C1403AB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  _QWORD v15[2];
  __int128 v16;
  uint64_t v17;
  _UNKNOWN **v18;
  __int128 v19;
  uint64_t v20;
  _UNKNOWN **v21;

  v15[0] = sub_1C1426CD4();
  v6 = *(_QWORD *)(v15[0] - 8);
  MEMORY[0x1E0C80A78](v15[0]);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C1426C8C();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v9);
  v11 = sub_1C14269B0();
  MEMORY[0x1E0C80A78](v11);
  v20 = type metadata accessor for ProcessMonitor();
  v21 = &off_1E7A8A990;
  *(_QWORD *)&v19 = a1;
  v17 = type metadata accessor for KnownClientStore();
  v18 = &off_1E7A8D410;
  *(_QWORD *)&v16 = a2;
  type metadata accessor for UnfairLock();
  v12 = swift_allocObject();
  v13 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v12 + 16) = v13;
  *v13 = 0;
  *(_QWORD *)(a3 + 96) = v12;
  sub_1C1330F6C();
  sub_1C1426974();
  v15[1] = MEMORY[0x1E0DEE9D8];
  sub_1C1329AD0((unint64_t *)&qword_1ED7939F0, v10, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A70);
  sub_1C132C820((unint64_t *)&qword_1ED797A80, (uint64_t *)&unk_1ED797A70, MEMORY[0x1E0DEAF38]);
  sub_1C1426DF4();
  (*(void (**)(char *, _QWORD, _QWORD))(v6 + 104))(v8, *MEMORY[0x1E0DEF8D0], v15[0]);
  *(_QWORD *)(a3 + 104) = sub_1C1426D04();
  sub_1C1339184(&v19, a3 + 16);
  sub_1C1339184(&v16, a3 + 56);
  return a3;
}

uint64_t sub_1C1403CFC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  id v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  char *v27;
  uint64_t v28;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  char *v38;
  char *v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  unint64_t v43;
  id v44;
  _QWORD v45[3];
  uint64_t v46;
  _UNKNOWN **v47;
  _QWORD v48[6];

  v37 = a3;
  v33 = a1;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939C8);
  v31 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v30 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793A00);
  MEMORY[0x1E0C80A78](v8);
  v38 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797908);
  v42 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v39 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = (_QWORD *)sub_1C1426CD4();
  v35 = *(v41 - 1);
  MEMORY[0x1E0C80A78](v41);
  v34 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1C1426C8C();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v12);
  v14 = sub_1C14269B0();
  MEMORY[0x1E0C80A78](v14);
  v48[3] = type metadata accessor for AssertionManager();
  v48[4] = &off_1E7A8AEA0;
  v48[0] = a1;
  v46 = type metadata accessor for LockStateObserver();
  v47 = &off_1E7A8AAE0;
  v45[0] = a2;
  v15 = MEMORY[0x1E0DEE9D8];
  v43 = sub_1C1332504(MEMORY[0x1E0DEE9D8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D0);
  swift_allocObject();
  *(_QWORD *)(a4 + 16) = sub_1C14268F0();
  *(_QWORD *)(a4 + 24) = sub_1C1332504(v15);
  *(_BYTE *)(a4 + 32) = 0;
  *(_QWORD *)(a4 + 128) = MEMORY[0x1E0DEE9E8];
  v36 = a4 + 128;
  v16 = (void *)sub_1C1330F6C();
  sub_1C1426980();
  v43 = v15;
  sub_1C1329AD0((unint64_t *)&qword_1ED7939F0, v13, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A70);
  sub_1C132C820((unint64_t *)&qword_1ED797A80, (uint64_t *)&unk_1ED797A70, MEMORY[0x1E0DEAF38]);
  sub_1C1426DF4();
  (*(void (**)(char *, _QWORD, _QWORD *))(v35 + 104))(v34, *MEMORY[0x1E0DEF8D8], v41);
  v41 = v37;
  *(_QWORD *)(a4 + 120) = sub_1C1426D04();
  sub_1C132E0A8((uint64_t)v48, a4 + 40);
  sub_1C132E0A8((uint64_t)v45, a4 + 80);
  v43 = *(_QWORD *)(v33 + 16);
  sub_1C132C820(&qword_1ED797990, &qword_1ED7939D0, MEMORY[0x1E0C95FB8]);
  v43 = sub_1C1426908();
  v44 = *(id *)(a4 + 120);
  v17 = v44;
  v18 = sub_1C1426CA4();
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v20 = (uint64_t)v38;
  v19(v38, 1, 1, v18);
  v21 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797938);
  sub_1C132C820(&qword_1ED797930, &qword_1ED797938, MEMORY[0x1E0C95D90]);
  sub_1C1329AD0((unint64_t *)&qword_1ED797AA0, (uint64_t (*)(uint64_t))sub_1C1330F6C, MEMORY[0x1E0DEF7F8]);
  v22 = v39;
  v37 = v16;
  v23 = v20;
  sub_1C1426914();
  sub_1C132C860(v20, (uint64_t *)&unk_1ED793A00);

  swift_release();
  sub_1C132C820(&qword_1ED797900, &qword_1ED797908, MEMORY[0x1E0C95CB8]);
  swift_retain();
  v24 = v40;
  sub_1C1426938();
  swift_release();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v22, v24);
  swift_beginAccess();
  sub_1C14268A8();
  swift_endAccess();
  swift_release();
  if ((sub_1C138C3FC() & 1) != 0)
  {
    v43 = *(_QWORD *)(*__swift_project_boxed_opaque_existential_1(v45, v46) + 16);
    v44 = *(id *)(a4 + 120);
    v25 = v44;
    v19((char *)v23, 1, 1, v18);
    swift_retain();
    v26 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797968);
    sub_1C132C820(&qword_1ED797960, &qword_1ED797968, MEMORY[0x1E0C95D90]);
    v27 = v30;
    sub_1C1426914();
    sub_1C132C860(v23, (uint64_t *)&unk_1ED793A00);

    swift_release();
    sub_1C132C820(&qword_1ED791DF0, &qword_1ED7939C8, MEMORY[0x1E0C95CB8]);
    swift_retain();
    v28 = v32;
    sub_1C1426938();
    swift_release();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v27, v28);
    swift_beginAccess();
    sub_1C14268A8();
    swift_endAccess();
    swift_release();
  }

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  return a4;
}

void sub_1C14043A4(NSObject *a1)
{
  id v2;
  void *v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t *v6;
  _QWORD *v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  os_log_type_t v21;
  uint64_t v22;
  int out_token;
  uint64_t v24;
  uint64_t aBlock[7];

  aBlock[6] = *MEMORY[0x1E0C80C00];
  v2 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v3 = (void *)sub_1C1426A7C();
  v4 = objc_msgSend(v2, sel_BOOLForKey_, v3);

  if (v4)
  {
    out_token = -1;
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = 60;
    v6 = (uint64_t *)(v5 + 16);
    v7 = (_QWORD *)swift_allocObject();
    v7[2] = 0xD00000000000001FLL;
    v7[3] = 0x80000001C14317F0;
    v7[4] = v5;
    aBlock[4] = (uint64_t)sub_1C1405820;
    aBlock[5] = (uint64_t)v7;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1C1382B1C;
    aBlock[3] = (uint64_t)&block_descriptor_171;
    v8 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    LODWORD(v9) = notify_register_dispatch("com.apple.liveactivitiesd.start", &out_token, a1, v8);
    _Block_release(v8);
    if ((_DWORD)v9)
    {
      if (qword_1EF6DA7B0 == -1)
        goto LABEL_4;
    }
    else
    {
      if (qword_1EF6DA7B0 != -1)
        swift_once();
      v16 = sub_1C1426854();
      __swift_project_value_buffer(v16, (uint64_t)qword_1EF6DC648);
      v9 = sub_1C1426848();
      v17 = sub_1C1426C80();
      if (os_log_type_enabled(v9, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc();
        v19 = swift_slowAlloc();
        aBlock[0] = v19;
        *(_DWORD *)v18 = 136446210;
        v24 = sub_1C132AD90(0xD00000000000001FLL, 0x80000001C14317F0, aBlock);
        sub_1C1426DB8();
        _os_log_impl(&dword_1C1324000, v9, v17, "%{public}s: Waiting", v18, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v19, -1, -1);
        MEMORY[0x1C3BAD3F4](v18, -1, -1);
      }

      swift_beginAccess();
      if (*v6 < 1)
      {
LABEL_13:
        notify_cancel(out_token);
        v11 = sub_1C1426848();
        v21 = sub_1C1426C80();
        if (os_log_type_enabled(v11, v21))
        {
          v13 = swift_slowAlloc();
          v22 = swift_slowAlloc();
          v24 = v22;
          *(_DWORD *)v13 = 136446210;
          sub_1C132AD90(0xD00000000000001FLL, 0x80000001C14317F0, &v24);
          sub_1C1426DB8();
          _os_log_impl(&dword_1C1324000, v11, v21, "%{public}s: Done waiting; startup continues", (uint8_t *)v13, 0xCu);
          swift_arrayDestroy();
          v15 = v22;
          goto LABEL_15;
        }
LABEL_16:
        swift_release();

        return;
      }
      while (1)
      {
        sleep(1u);
        v20 = *v6 - 1;
        if (__OFSUB__(*v6, 1))
          break;
        *v6 = v20;
        if (v20 <= 0)
          goto LABEL_13;
      }
      __break(1u);
    }
    swift_once();
LABEL_4:
    v10 = sub_1C1426854();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EF6DC648);
    v11 = sub_1C1426848();
    v12 = sub_1C1426C68();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      v14 = swift_slowAlloc();
      aBlock[0] = v14;
      *(_DWORD *)v13 = 136446466;
      v24 = sub_1C132AD90(0xD00000000000001FLL, 0x80000001C14317F0, aBlock);
      sub_1C1426DB8();
      *(_WORD *)(v13 + 12) = 1026;
      LODWORD(v24) = (_DWORD)v9;
      sub_1C1426DB8();
      _os_log_impl(&dword_1C1324000, v11, v12, "%{public}s: %{public}u", (uint8_t *)v13, 0x12u);
      swift_arrayDestroy();
      v15 = v14;
LABEL_15:
      MEMORY[0x1C3BAD3F4](v15, -1, -1);
      MEMORY[0x1C3BAD3F4](v13, -1, -1);
      goto LABEL_16;
    }
    goto LABEL_16;
  }
}

uint64_t sub_1C14048E4(void *a1)
{
  id v2;
  void *v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  _BYTE v14[40];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[5];

  v2 = objc_allocWithZone((Class)sub_1C1425F78());
  v3 = (void *)sub_1C1425F6C();
  v4 = qword_1ED7936D0;
  v5 = a1;
  if (v4 != -1)
    swift_once();
  v6 = type metadata accessor for PersistentSyncEngineRecordMetadataStore();
  swift_allocObject();
  v7 = swift_retain();
  v8 = sub_1C13E5CB0(v7, (uint64_t)v5);
  v9 = sub_1C1425F60();
  v18[3] = v6;
  v18[4] = sub_1C1329AD0(&qword_1ED7973B8, (uint64_t (*)(uint64_t))type metadata accessor for PersistentSyncEngineRecordMetadataStore, (uint64_t)&unk_1C142ACF8);
  v18[0] = v8;
  swift_retain();
  v10 = sub_1C1425F54();
  sub_1C1425FD8();
  sub_1C1425F48();
  v16 = v9;
  v17 = MEMORY[0x1E0D8D540];
  v15 = v10;
  sub_1C132E0A8((uint64_t)v18, (uint64_t)v14);
  sub_1C1425FCC();
  swift_allocObject();
  v11 = v3;
  swift_retain();
  sub_1C1425FC0();
  v12 = sub_1C1425F30();
  swift_release();

  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  return v12;
}

_QWORD *sub_1C1404AA8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _DWORD *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _DWORD *v21;
  id v22;
  uint64_t v24;
  id v25;
  unint64_t v26;
  _QWORD v27[5];
  _QWORD v28[5];
  _QWORD v29[5];

  v25 = a1;
  v24 = sub_1C1426CD4();
  v9 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1C1426C8C();
  MEMORY[0x1E0C80A78](v12);
  v13 = sub_1C14269B0();
  MEMORY[0x1E0C80A78](v13);
  v29[3] = type metadata accessor for PersistentAssertionStore();
  v29[4] = &off_1E7A8C5E8;
  v29[0] = a2;
  v28[3] = type metadata accessor for PersistentActivityStore();
  v28[4] = &off_1E7A8DBF0;
  v28[0] = a3;
  v27[3] = type metadata accessor for FirstLaunchDetector();
  v27[4] = &off_1E7A8CF90;
  v27[0] = a4;
  v14 = MEMORY[0x1E0DEE9D8];
  v26 = sub_1C1332504(MEMORY[0x1E0DEE9D8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D0);
  swift_allocObject();
  a5[2] = sub_1C14268F0();
  v26 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7979B0);
  swift_allocObject();
  a5[3] = sub_1C14268F0();
  v26 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7979A0);
  swift_allocObject();
  a5[4] = sub_1C14268F0();
  v26 = v14;
  swift_allocObject();
  a5[5] = sub_1C14268F0();
  type metadata accessor for UnfairLock();
  v15 = swift_allocObject();
  v16 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v15 + 16) = v16;
  *v16 = 0;
  a5[6] = v15;
  a5[7] = sub_1C13377B0(v14);
  v17 = sub_1C1332504(v14);
  v18 = MEMORY[0x1E0DEE9E8];
  a5[8] = v17;
  a5[9] = v18;
  a5[10] = sub_1C13378BC(v14);
  a5[11] = sub_1C13378BC(v14);
  a5[12] = sub_1C13378BC(v14);
  a5[13] = v14;
  a5[14] = v18;
  type metadata accessor for AssertionExpirationTimer();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = 0;
  v20 = swift_allocObject();
  v21 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v20 + 16) = v21;
  *v21 = 0;
  *(_QWORD *)(v19 + 24) = v20;
  a5[21] = v19;
  sub_1C1330F6C();
  sub_1C1426998();
  v26 = v14;
  sub_1C1329AD0((unint64_t *)&qword_1ED7939F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A70);
  sub_1C132C820((unint64_t *)&qword_1ED797A80, (uint64_t *)&unk_1ED797A70, MEMORY[0x1E0DEAF38]);
  sub_1C1426DF4();
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DEF8D8], v24);
  v22 = v25;
  a5[15] = sub_1C1426D04();
  sub_1C132E0A8((uint64_t)v29, (uint64_t)(a5 + 16));
  sub_1C132E0A8((uint64_t)v27, (uint64_t)(a5 + 22));
  sub_1C132E0A8((uint64_t)v28, (uint64_t)(a5 + 27));
  sub_1C135DE4C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  return a5;
}

uint64_t sub_1C1404E90(void *a1, uint64_t a2, char *a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _DWORD *v13;
  uint64_t v14;
  id v15;
  objc_class *v16;
  id v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t result;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  char v30;
  char *v31;
  _QWORD aBlock[6];
  objc_super v33;

  v28 = a1;
  v29 = a2;
  v27 = sub_1C1426CD4();
  v4 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C1426C8C();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v7);
  v9 = sub_1C14269B0();
  MEMORY[0x1E0C80A78](v9);
  *(_QWORD *)&a3[OBJC_IVAR____TtC11SessionCore27QoSObservationServiceServer_listener] = 0;
  v10 = OBJC_IVAR____TtC11SessionCore27QoSObservationServiceServer_lock;
  type metadata accessor for UnfairLock();
  v11 = swift_allocObject();
  v12 = a3;
  v13 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v11 + 16) = v13;
  *v13 = 0;
  *(_QWORD *)&a3[v10] = v11;
  v14 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)&v12[OBJC_IVAR____TtC11SessionCore27QoSObservationServiceServer__lock_clients] = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)&v12[OBJC_IVAR____TtC11SessionCore27QoSObservationServiceServer__lock_qos] = v14;
  *(_QWORD *)&v12[OBJC_IVAR____TtC11SessionCore27QoSObservationServiceServer_qosSubscription] = 0;
  sub_1C1330F6C();
  sub_1C1426998();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1C1329AD0((unint64_t *)&qword_1ED7939F0, v8, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A70);
  sub_1C132C820((unint64_t *)&qword_1ED797A80, (uint64_t *)&unk_1ED797A70, MEMORY[0x1E0DEAF38]);
  sub_1C1426DF4();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF8D8], v27);
  v15 = v28;
  *(_QWORD *)&v12[OBJC_IVAR____TtC11SessionCore27QoSObservationServiceServer_requestProcessingQueue] = sub_1C1426D04();

  v16 = (objc_class *)type metadata accessor for QoSObservationServiceServer();
  v33.receiver = v12;
  v33.super_class = v16;
  v17 = objc_msgSendSuper2(&v33, sel_init);
  aBlock[0] = *(_QWORD *)(v29 + 16);
  v18 = (char *)v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D0);
  sub_1C132C820(&qword_1ED797990, &qword_1ED7939D0, MEMORY[0x1E0C95FB8]);
  aBlock[0] = sub_1C1426908();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797938);
  sub_1C132C820(&qword_1ED797930, &qword_1ED797938, MEMORY[0x1E0C95D90]);
  v19 = sub_1C1426938();
  swift_release();
  swift_release();
  *(_QWORD *)&v18[OBJC_IVAR____TtC11SessionCore27QoSObservationServiceServer_qosSubscription] = v19;
  swift_release();
  v31 = v18;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = sub_1C140574C;
  *(_QWORD *)(v20 + 24) = &v30;
  aBlock[4] = sub_1C14058DC;
  aBlock[5] = v20;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1327D10;
  aBlock[3] = &block_descriptor_128;
  v21 = _Block_copy(aBlock);
  v22 = (void *)objc_opt_self();
  swift_retain();
  v23 = objc_msgSend(v22, sel_listenerWithConfigurator_, v21);
  _Block_release(v21);
  swift_release();
  LOBYTE(v21) = swift_isEscapingClosureAtFileLocation();

  result = swift_release();
  if ((v21 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v25 = *(void **)&v18[OBJC_IVAR____TtC11SessionCore27QoSObservationServiceServer_listener];
    *(_QWORD *)&v18[OBJC_IVAR____TtC11SessionCore27QoSObservationServiceServer_listener] = v23;

    return (uint64_t)v18;
  }
  return result;
}

uint64_t sub_1C14052F8(void *a1)
{
  id v2;
  id v3;
  id v4;

  type metadata accessor for PersistentPushSubscriptionStore();
  swift_allocObject();
  v2 = a1;
  sub_1C1422F5C(v2);
  type metadata accessor for PersistentPublicTokenStore();
  swift_allocObject();
  v3 = v2;
  sub_1C141D9D4(v3);
  type metadata accessor for PersistentPushTokenStore();
  swift_allocObject();
  sub_1C13CBA94(v3);
  sub_1C14266A4();
  swift_allocObject();
  sub_1C1426698();
  sub_1C1329AD0(&qword_1ED797210, (uint64_t (*)(uint64_t))type metadata accessor for PersistentPushSubscriptionStore, (uint64_t)&unk_1C142C270);
  sub_1C1329AD0(&qword_1ED797030, (uint64_t (*)(uint64_t))type metadata accessor for PersistentPublicTokenStore, (uint64_t)&unk_1C142BFEC);
  sub_1C1329AD0(qword_1ED796F08, (uint64_t (*)(uint64_t))type metadata accessor for PersistentPushTokenStore, (uint64_t)&unk_1C142A5EC);
  sub_1C14265B4();
  v4 = objc_allocWithZone((Class)sub_1C14264DC());
  swift_retain();
  return sub_1C14264A0();
}

uint64_t type metadata accessor for Daemon()
{
  return objc_opt_self();
}

uint64_t method lookup function for Daemon()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Daemon.__allocating_init(workloop:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 312))();
}

uint64_t dispatch thunk of Daemon.start()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t sub_1C1405504()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1C1405528()
{
  uint64_t v0;

  return sub_1C135BE94((_QWORD *)(v0 + 16));
}

uint64_t sub_1C1405530(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793538);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1405578()
{
  uint64_t v0;

  return sub_1C138CF3C(v0);
}

uint64_t sub_1C1405580(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C14055C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793398);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1405610(unsigned __int8 *a1)
{
  return sub_1C13D82D8(a1);
}

uint64_t sub_1C1405618(uint64_t *a1)
{
  return sub_1C1383080(a1);
}

uint64_t sub_1C1405620(uint64_t *a1)
{
  return sub_1C1387284(a1);
}

uint64_t sub_1C1405628(void (*a1)(_QWORD, _QWORD))
{
  return sub_1C13ABDA8(a1);
}

uint64_t sub_1C1405630(uint64_t *a1)
{
  return sub_1C13ABE04(a1);
}

uint64_t sub_1C1405638(uint64_t a1)
{
  uint64_t v1;

  return sub_1C13F24B4(a1, v1);
}

uint64_t sub_1C1405640()
{
  return sub_1C13F24B8();
}

uint64_t sub_1C1405648()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C140566C(uint64_t a1)
{
  uint64_t v1;

  return sub_1C1389F64(a1, v1);
}

uint64_t sub_1C1405674()
{
  return sub_1C138A3C8();
}

uint64_t sub_1C140567C()
{
  return sub_1C138A41C();
}

uint64_t sub_1C1405684()
{
  return sub_1C138A470();
}

id sub_1C140568C(void *a1)
{
  uint64_t v1;

  return sub_1C1331880(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1C1405694()
{
  return swift_deallocObject();
}

id sub_1C14056A4(void *a1)
{
  uint64_t v1;

  return sub_1C13D98E0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1C14056AC()
{
  return swift_deallocObject();
}

uint64_t sub_1C14056BC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_1C1358760(v1, a1);
}

uint64_t sub_1C14056D4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C14056F8(char *a1)
{
  return sub_1C1409100(a1);
}

id sub_1C1405700(void *a1)
{
  uint64_t v1;

  return sub_1C13DCFD0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1C1405708()
{
  return swift_deallocObject();
}

uint64_t sub_1C1405718(uint64_t *a1)
{
  return sub_1C13394D0(a1);
}

uint64_t sub_1C1405720()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1C1405744(uint64_t *a1)
{
  uint64_t v1;

  sub_1C141BF90(a1, v1);
}

id sub_1C140574C(void *a1)
{
  uint64_t v1;

  return sub_1C141C18C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1C1405754()
{
  return swift_deallocObject();
}

uint64_t sub_1C1405764(_QWORD *a1)
{
  uint64_t v1;

  return sub_1C138BD54(a1, v1);
}

uint64_t sub_1C140576C(_BYTE *a1)
{
  uint64_t v1;

  return sub_1C138BD8C(a1, v1);
}

void sub_1C1405774(uint64_t *a1)
{
  uint64_t v1;

  sub_1C1358F38(a1, v1);
}

id sub_1C140577C(void *a1)
{
  uint64_t v1;

  return sub_1C1359134(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1C1405784()
{
  return swift_deallocObject();
}

uint64_t sub_1C1405794(uint64_t *a1)
{
  uint64_t v1;

  return sub_1C1385660(a1, v1);
}

id sub_1C140579C(void *a1)
{
  uint64_t v1;

  return sub_1C1385B38(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1C14057A4()
{
  return swift_deallocObject();
}

id sub_1C14057B4(void *a1)
{
  uint64_t v1;

  return sub_1C1418C8C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1C14057BC()
{
  return swift_deallocObject();
}

id sub_1C14057CC(void *a1)
{
  uint64_t v1;

  return sub_1C1388F78(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1C14057D4()
{
  return swift_deallocObject();
}

uint64_t sub_1C14057E4()
{
  return swift_deallocObject();
}

uint64_t sub_1C14057F4()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C1405820(uint64_t a1)
{
  uint64_t v1;

  return sub_1C13F73B4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

_QWORD *sub_1C14058E0(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v37 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v37 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1C1425978();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    sub_1C1425A08();
    swift_getEnumCaseMultiPayload();
    v16 = sub_1C1425AEC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    swift_storeEnumTagMultiPayload();
    v17 = a3[8];
    *(_QWORD *)((char *)v4 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    v18 = (char *)v4 + v17;
    v19 = (char *)a2 + v17;
    v20 = sub_1C14251B0();
    v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
    swift_bridgeObjectRetain();
    v21(v18, v19, v20);
    v22 = a3[10];
    *((_BYTE *)v4 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    v23 = (_QWORD *)((char *)v4 + v22);
    v24 = (_QWORD *)((char *)a2 + v22);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = a3[11];
    v27 = (char *)v4 + v26;
    v28 = (char *)a2 + v26;
    v29 = sub_1C1425450();
    v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
    swift_bridgeObjectRetain();
    v30(v27, v28, v29);
    v31 = a3[12];
    v32 = (char *)v4 + v31;
    v33 = (char *)a2 + v31;
    v34 = sub_1C142557C();
    v35 = *(_QWORD *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
    {
      v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
    }
    v38 = a3[13];
    v39 = (_QWORD *)((char *)v4 + v38);
    v40 = (_QWORD *)((char *)a2 + v38);
    v41 = v40[1];
    *v39 = *v40;
    v39[1] = v41;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1C1405B18(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_1C1425978();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[6];
  sub_1C1425A08();
  v7 = sub_1C1425AEC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  v8 = a1 + a2[8];
  v9 = sub_1C14251B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  v10 = a1 + a2[11];
  v11 = sub_1C1425450();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = a1 + a2[12];
  v13 = sub_1C142557C();
  v14 = *(_QWORD *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1C1405C50(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C1425978();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  sub_1C1425A08();
  swift_getEnumCaseMultiPayload();
  v15 = sub_1C1425AEC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  swift_storeEnumTagMultiPayload();
  v16 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_1C14251B0();
  v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  swift_bridgeObjectRetain();
  v20(v17, v18, v19);
  v21 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = a3[11];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = sub_1C1425450();
  v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
  swift_bridgeObjectRetain();
  v29(v26, v27, v28);
  v30 = a3[12];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = sub_1C142557C();
  v34 = *(_QWORD *)(v33 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  }
  v36 = a3[13];
  v37 = (_QWORD *)((char *)a1 + v36);
  v38 = (_QWORD *)((char *)a2 + v36);
  v39 = v38[1];
  *v37 = *v38;
  v37[1] = v39;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1C1405E5C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C1425978();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  if (a1 != a2)
  {
    v10 = a3[6];
    v11 = (char *)a2 + v10;
    v12 = (char *)a1 + v10;
    sub_1C1339004((uint64_t)a1 + v10, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
    sub_1C1425A08();
    swift_getEnumCaseMultiPayload();
    v13 = sub_1C1425AEC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v12, v11, v13);
    swift_storeEnumTagMultiPayload();
  }
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[8];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_1C14251B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 24))(v15, v16, v17);
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  v18 = a3[10];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = a3[11];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = sub_1C1425450();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v22, v23, v24);
  v25 = a3[12];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = sub_1C142557C();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
  v31 = v30(v26, 1, v28);
  v32 = v30(v27, 1, v28);
  if (!v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 24))(v26, v27, v28);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v29 + 8))(v26, v28);
    goto LABEL_8;
  }
  if (v32)
  {
LABEL_8:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_9;
  }
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
LABEL_9:
  v34 = a3[13];
  v35 = (_QWORD *)((char *)a1 + v34);
  v36 = (_QWORD *)((char *)a2 + v34);
  *v35 = *v36;
  v35[1] = v36[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1C1406104(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1C1425978();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  sub_1C1425A08();
  swift_getEnumCaseMultiPayload();
  v13 = sub_1C1425AEC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  swift_storeEnumTagMultiPayload();
  v14 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_1C14251B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  v18 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *(_OWORD *)((char *)a1 + v18) = *(_OWORD *)((char *)a2 + v18);
  v19 = a3[11];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_1C1425450();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
  v23 = a3[12];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = sub_1C142557C();
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  *(_OWORD *)((char *)a1 + a3[13]) = *(_OWORD *)((char *)a2 + a3[13]);
  return a1;
}

_QWORD *sub_1C14062D8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t, uint64_t);
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1C1425978();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  if (a1 != a2)
  {
    v11 = a3[6];
    v12 = (char *)a2 + v11;
    v13 = (char *)a1 + v11;
    sub_1C1339004((uint64_t)a1 + v11, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
    sub_1C1425A08();
    swift_getEnumCaseMultiPayload();
    v14 = sub_1C1425AEC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v13, v12, v14);
    swift_storeEnumTagMultiPayload();
  }
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  v15 = a3[8];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_1C14251B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  v19 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v23 = *v21;
  v22 = v21[1];
  *v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  v24 = a3[11];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = sub_1C1425450();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 40))(v25, v26, v27);
  v28 = a3[12];
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  v31 = sub_1C142557C();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48);
  v34 = v33(v29, 1, v31);
  v35 = v33(v30, 1, v31);
  if (!v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 40))(v29, v30, v31);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v32 + 8))(v29, v31);
    goto LABEL_8;
  }
  if (v35)
  {
LABEL_8:
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_9;
  }
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v29, v30, v31);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
LABEL_9:
  v37 = a3[13];
  v38 = (_QWORD *)((char *)a1 + v37);
  v39 = (_QWORD *)((char *)a2 + v37);
  v41 = *v39;
  v40 = v39[1];
  *v38 = v41;
  v38[1] = v40;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C1406544()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C1406550(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1C1425978();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      v12 = sub_1C1425A08();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[6];
      }
      else
      {
        v13 = sub_1C14251B0();
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          v10 = v13;
          v11 = a3[8];
        }
        else
        {
          v14 = sub_1C1425450();
          v9 = *(_QWORD *)(v14 - 8);
          if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
          {
            v10 = v14;
            v11 = a3[11];
          }
          else
          {
            v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
            v9 = *(_QWORD *)(v10 - 8);
            v11 = a3[12];
          }
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1C1406660()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C140666C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_1C1425978();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = sub_1C1425A08();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[6];
      }
      else
      {
        v13 = sub_1C14251B0();
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v13;
          v11 = a4[8];
        }
        else
        {
          v14 = sub_1C1425450();
          v9 = *(_QWORD *)(v14 - 8);
          if (*(_DWORD *)(v9 + 84) == a3)
          {
            v10 = v14;
            v11 = a4[11];
          }
          else
          {
            v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
            v9 = *(_QWORD *)(v10 - 8);
            v11 = a4[12];
          }
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1C1406778()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_1C1425978();
  if (v0 <= 0x3F)
  {
    sub_1C1425A08();
    if (v1 <= 0x3F)
    {
      sub_1C14251B0();
      if (v2 <= 0x3F)
      {
        sub_1C1425450();
        if (v3 <= 0x3F)
        {
          sub_1C140687C();
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_1C140687C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED7935F0)
  {
    sub_1C142557C();
    v0 = sub_1C1426DAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED7935F0);
  }
}

uint64_t sub_1C14068D0(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 1752397168;
  else
    v3 = 6910049;
  if (v2)
    v4 = 0xE300000000000000;
  else
    v4 = 0xE400000000000000;
  if ((a2 & 1) != 0)
    v5 = 1752397168;
  else
    v5 = 6910049;
  if ((a2 & 1) != 0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE300000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1C1427064();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1C1406964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  char *v19;
  char *v20;
  char v21;
  void (*v22)(char *, uint64_t);
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B60);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C14253E4();
  v26 = *(_QWORD *)(v4 - 8);
  v27 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C14251B0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v25 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v24 = (char *)&v24 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for Activity();
  sub_1C1408298(v0 + *(int *)(v15 + 48), (uint64_t)v14);
  v16 = sub_1C142557C();
  v17 = 1;
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v14, 1, v16);
  sub_1C132C860((uint64_t)v14, &qword_1ED7935E8);
  if (v18 == 1)
  {
    sub_1C142542C();
    sub_1C14253D8();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v27);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v3, 1, v7) == 1)
    {
      sub_1C132C860((uint64_t)v3, &qword_1ED793B60);
      return 0;
    }
    v19 = v24;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v24, v3, v7);
    v20 = v25;
    sub_1C142518C();
    v21 = sub_1C1425150();
    v22 = *(void (**)(char *, uint64_t))(v8 + 8);
    v22(v20, v7);
    v22(v19, v7);
    if ((v21 & 1) == 0)
      return 0;
    return 2;
  }
  return v17;
}

uint64_t sub_1C1406BC4@<X0>(uint64_t a1@<X8>)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[6];

  v17[5] = a1;
  v2 = sub_1C14251B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C1425678();
  MEMORY[0x1E0C80A78](v6);
  v17[0] = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C1425A08();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C1425594();
  MEMORY[0x1E0C80A78](v11);
  v12 = *(_QWORD *)v1;
  v17[3] = *((_QWORD *)v1 + 1);
  v17[4] = v12;
  v13 = type metadata accessor for Activity();
  swift_bridgeObjectRetain();
  sub_1C1425924();
  v14 = sub_1C142590C();
  v17[1] = v15;
  v17[2] = v14;
  sub_1C1338F24((uint64_t)&v1[*(int *)(v13 + 24)], (uint64_t)v10, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
  sub_1C1425948();
  swift_bridgeObjectRetain();
  sub_1C14258DC();
  sub_1C14258E8();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, &v1[*(int *)(v13 + 32)], v2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1C1425474();
}

uint64_t sub_1C1406DD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  unint64_t v16;

  v1 = v0;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
  MEMORY[0x1E0C80A78](v13);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1C14251B0();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v12 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = 0;
  v16 = 0xE000000000000000;
  sub_1C1426F08();
  sub_1C14252D0();
  swift_bridgeObjectRetain();
  sub_1C14252D0();
  swift_bridgeObjectRelease();
  sub_1C14252D0();
  v8 = type metadata accessor for Activity();
  sub_1C1329AD0((unint64_t *)&unk_1ED793B50, v5, MEMORY[0x1E0CB08F0]);
  sub_1C1427058();
  sub_1C14252D0();
  swift_bridgeObjectRelease();
  sub_1C14252D0();
  sub_1C1406964();
  sub_1C14252D0();
  swift_bridgeObjectRelease();
  sub_1C14252D0();
  v14 = *(_OWORD *)(v0 + *(int *)(v8 + 40));
  sub_1C1426F74();
  sub_1C14252D0();
  v9 = sub_1C1425558();
  v10 = swift_bridgeObjectRetain();
  MEMORY[0x1C3BAC878](v10, v9);
  sub_1C14252D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C14252D0();
  sub_1C1425438();
  sub_1C1427058();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v4);
  sub_1C14252D0();
  swift_bridgeObjectRelease();
  sub_1C14252D0();
  sub_1C1408298(v1 + *(int *)(v8 + 48), (uint64_t)v3);
  sub_1C1426AA0();
  sub_1C14252D0();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1C140714C(char *a1, char *a2)
{
  return sub_1C14068D0(*a1, *a2);
}

uint64_t sub_1C1407158()
{
  sub_1C14270E8();
  sub_1C1426AD0();
  swift_bridgeObjectRelease();
  return sub_1C1427100();
}

uint64_t sub_1C14071C8()
{
  sub_1C1426AD0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C1407214()
{
  sub_1C14270E8();
  sub_1C1426AD0();
  swift_bridgeObjectRelease();
  return sub_1C1427100();
}

uint64_t sub_1C1407280@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1C1426FD4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1C14072DC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 6910049;
  if (*v1)
    v2 = 1752397168;
  v3 = 0xE300000000000000;
  if (*v1)
    v3 = 0xE400000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C140730C()
{
  sub_1C14090BC();
  return sub_1C1426B78();
}

uint64_t sub_1C1407368()
{
  sub_1C14090BC();
  return sub_1C1426B6C();
}

uint64_t sub_1C14073B4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1C14073EC + 4 * byte_1C142B510[a1]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1C14073EC()
{
  return 0x74736575716572;
}

uint64_t sub_1C1407404()
{
  return 0x5472657474616C70;
}

unint64_t sub_1C1407428()
{
  return 0xD000000000000016;
}

uint64_t sub_1C1407448()
{
  return 0x4464657461657263;
}

uint64_t sub_1C1407468()
{
  return 0x6E6F697461657263;
}

unint64_t sub_1C140748C()
{
  return 0xD000000000000010;
}

uint64_t sub_1C14074F0()
{
  unsigned __int8 *v0;

  return sub_1C14073B4(*v0);
}

uint64_t sub_1C14074F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1C1408C38(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C140751C(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_1C1407528()
{
  sub_1C14082E0();
  return sub_1C1427124();
}

uint64_t sub_1C1407550()
{
  sub_1C14082E0();
  return sub_1C1427130();
}

uint64_t sub_1C1407578(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  __int128 v11;
  char v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DC288);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C14082E0();
  sub_1C1427118();
  LOBYTE(v11) = 0;
  sub_1C1427034();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for Activity();
    LOBYTE(v11) = 1;
    sub_1C1425978();
    sub_1C1329AD0(&qword_1ED793BD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FE28], MEMORY[0x1E0C8FE38]);
    sub_1C142704C();
    LOBYTE(v11) = 2;
    sub_1C1425A08();
    sub_1C1329AD0(&qword_1ED793BE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FFB8], MEMORY[0x1E0C8FFC8]);
    sub_1C142704C();
    *(_QWORD *)&v11 = *(_QWORD *)(v3 + v9[7]);
    v12 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797A30);
    sub_1C134D7EC(&qword_1ED797A38, &qword_1ED793BA8, MEMORY[0x1E0C8F7A8], MEMORY[0x1E0DEAF10]);
    sub_1C142704C();
    LOBYTE(v11) = 4;
    sub_1C14251B0();
    sub_1C1329AD0(&qword_1EF6DB9C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1C142704C();
    LOBYTE(v11) = *(_BYTE *)(v3 + v9[9]);
    v12 = 5;
    sub_1C14083F0();
    sub_1C142704C();
    v11 = *(_OWORD *)(v3 + v9[10]);
    v12 = 6;
    sub_1C1408434();
    sub_1C142704C();
    LOBYTE(v11) = 7;
    sub_1C1425450();
    sub_1C1329AD0((unint64_t *)&unk_1ED792888, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F570], MEMORY[0x1E0C8F580]);
    sub_1C142704C();
    LOBYTE(v11) = 8;
    sub_1C142557C();
    sub_1C1329AD0(&qword_1EF6DC2A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F7D8], MEMORY[0x1E0C8F7E8]);
    sub_1C1427028();
    LOBYTE(v11) = 9;
    sub_1C142701C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C1407978@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  int *v62;
  uint64_t v63;
  uint64_t *v64;
  __int128 v65;
  char v66;

  v47 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
  MEMORY[0x1E0C80A78](v3);
  v48 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C1425450();
  v6 = *(_QWORD *)(v5 - 8);
  v50 = v5;
  v51 = v6;
  MEMORY[0x1E0C80A78](v5);
  v49 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C14251B0();
  v55 = *(_QWORD *)(v8 - 8);
  v56 = v8;
  MEMORY[0x1E0C80A78](v8);
  v52 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_1C1425A08();
  MEMORY[0x1E0C80A78](v53);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_1C1425978();
  v57 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DC260);
  v14 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for Activity();
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (uint64_t *)((char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = (uint64_t)v20 + *(int *)(v18 + 48);
  v22 = sub_1C142557C();
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v63 = v21;
  v23(v21, 1, 1, v22);
  v62 = (int *)v17;
  v24 = *(int *)(v17 + 52);
  v64 = v20;
  v25 = (char *)v20 + v24;
  *(_QWORD *)v25 = 0;
  *((_QWORD *)v25 + 1) = 0;
  v58 = v25;
  v59 = a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C14082E0();
  v26 = v60;
  sub_1C142710C();
  if (v26)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
    sub_1C132C860(v63, &qword_1ED7935E8);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v27 = v13;
    v28 = (uint64_t)v11;
    v60 = v22;
    LOBYTE(v65) = 0;
    v29 = sub_1C1426FF8();
    v30 = (char *)v64;
    *v64 = v29;
    *((_QWORD *)v30 + 1) = v31;
    LOBYTE(v65) = 1;
    sub_1C1329AD0(&qword_1EF6DAF30, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FE28], MEMORY[0x1E0C8FE40]);
    v32 = v61;
    v46 = v16;
    sub_1C1427010();
    v33 = v62;
    (*(void (**)(char *, char *, uint64_t))(v57 + 32))(&v30[v62[5]], v27, v32);
    LOBYTE(v65) = 2;
    sub_1C1329AD0(&qword_1EF6DAF38, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FFB8], MEMORY[0x1E0C8FFD0]);
    sub_1C1427010();
    sub_1C1408324(v28, (uint64_t)&v30[v33[6]]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797A30);
    v66 = 3;
    sub_1C134D7EC(&qword_1EF6DAF20, &qword_1EF6DAF28, MEMORY[0x1E0C8F7B8], MEMORY[0x1E0DEAF40]);
    sub_1C1427010();
    *(_QWORD *)&v30[v33[7]] = v65;
    LOBYTE(v65) = 4;
    sub_1C1329AD0(&qword_1EF6DB9B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    v34 = v52;
    v35 = v56;
    sub_1C1427010();
    (*(void (**)(char *, char *, uint64_t))(v55 + 32))(&v30[v33[8]], v34, v35);
    v66 = 5;
    sub_1C1408368();
    sub_1C1427010();
    v30[v33[9]] = v65;
    v66 = 6;
    sub_1C14083AC();
    sub_1C1427010();
    *(_OWORD *)&v30[v33[10]] = v65;
    LOBYTE(v65) = 7;
    sub_1C1329AD0(&qword_1EF6DAF40, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F570], MEMORY[0x1E0C8F588]);
    v37 = v49;
    v36 = v50;
    sub_1C1427010();
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(&v30[v33[11]], v37, v36);
    LOBYTE(v65) = 8;
    sub_1C1329AD0(&qword_1EF6DC280, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F7D8], MEMORY[0x1E0C8F7F8]);
    v38 = (uint64_t)v48;
    sub_1C1426FEC();
    sub_1C134D870(v38, v63);
    LOBYTE(v65) = 9;
    v39 = sub_1C1426FE0();
    v41 = v40;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v46, v54);
    v42 = (uint64_t *)v58;
    swift_bridgeObjectRelease();
    *v42 = v39;
    v42[1] = v41;
    v43 = v64;
    sub_1C1338F24((uint64_t)v64, v47, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
    return sub_1C1339004((uint64_t)v43, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
  }
}

uint64_t sub_1C140826C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C1407978(a1, a2);
}

uint64_t sub_1C1408280(_QWORD *a1)
{
  return sub_1C1407578(a1);
}

uint64_t sub_1C1408298(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C14082E0()
{
  unint64_t result;

  result = qword_1EF6DC268;
  if (!qword_1EF6DC268)
  {
    result = MEMORY[0x1C3BAD334](&unk_1C142B7F4, &type metadata for Activity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6DC268);
  }
  return result;
}

uint64_t sub_1C1408324(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C1425A08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C1408368()
{
  unint64_t result;

  result = qword_1EF6DC270;
  if (!qword_1EF6DC270)
  {
    result = MEMORY[0x1C3BAD334](&unk_1C142B7CC, &type metadata for Activity.CreationSource);
    atomic_store(result, (unint64_t *)&qword_1EF6DC270);
  }
  return result;
}

unint64_t sub_1C14083AC()
{
  unint64_t result;

  result = qword_1EF6DC278;
  if (!qword_1EF6DC278)
  {
    result = MEMORY[0x1C3BAD334](MEMORY[0x1E0C90068], MEMORY[0x1E0C90058]);
    atomic_store(result, (unint64_t *)&qword_1EF6DC278);
  }
  return result;
}

unint64_t sub_1C14083F0()
{
  unint64_t result;

  result = qword_1EF6DC290;
  if (!qword_1EF6DC290)
  {
    result = MEMORY[0x1C3BAD334](&unk_1C142B7A4, &type metadata for Activity.CreationSource);
    atomic_store(result, (unint64_t *)&qword_1EF6DC290);
  }
  return result;
}

unint64_t sub_1C1408434()
{
  unint64_t result;

  result = qword_1EF6DC298;
  if (!qword_1EF6DC298)
  {
    result = MEMORY[0x1C3BAD334](MEMORY[0x1E0C90060], MEMORY[0x1E0C90058]);
    atomic_store(result, (unint64_t *)&qword_1EF6DC298);
  }
  return result;
}

uint64_t sub_1C1408478(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char v19;
  uint64_t result;
  int *v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  char v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD v40[2];
  uint64_t v41;
  uint64_t v42;

  v4 = sub_1C142557C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DC2A8);
  MEMORY[0x1E0C80A78](v8);
  v42 = (uint64_t)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)v40 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)v40 - v17;
  if (*a1 == *a2 && a1[1] == a2[1] || (v19 = sub_1C1427064(), result = 0, (v19 & 1) != 0))
  {
    v21 = (int *)type metadata accessor for Activity();
    if ((MEMORY[0x1C3BAB648]((char *)a1 + v21[5], (char *)a2 + v21[5]) & 1) == 0
      || (MEMORY[0x1C3BAB6CC]((char *)a1 + v21[6], (char *)a2 + v21[6]) & 1) == 0
      || (sub_1C136BA00(*(_QWORD *)((char *)a1 + v21[7]), *(_QWORD *)((char *)a2 + v21[7])) & 1) == 0
      || (sub_1C1425180() & 1) == 0)
    {
      return 0;
    }
    v22 = v21[9];
    v23 = *((unsigned __int8 *)a1 + v22);
    v24 = *((unsigned __int8 *)a2 + v22);
    v25 = v23 ? 1752397168 : 6910049;
    v26 = v23 ? 0xE400000000000000 : 0xE300000000000000;
    v27 = v24 ? 1752397168 : 6910049;
    v28 = v24 ? 0xE400000000000000 : 0xE300000000000000;
    if (v25 == v27 && v26 == v28)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v40[0] = v26;
      v40[1] = v28;
      LODWORD(v41) = sub_1C1427064();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = 0;
      if ((v41 & 1) == 0)
        return result;
    }
    if ((sub_1C1425A50() & 1) == 0 || (MEMORY[0x1C3BAB0F0]((char *)a1 + v21[11], (char *)a2 + v21[11]) & 1) == 0)
      return 0;
    sub_1C1408298((uint64_t)a1 + v21[12], (uint64_t)v18);
    sub_1C1408298((uint64_t)a2 + v21[12], (uint64_t)v16);
    v29 = *(int *)(v8 + 48);
    v30 = v42;
    v41 = v42 + v29;
    sub_1C1408298((uint64_t)v18, v42);
    sub_1C1408298((uint64_t)v16, v41);
    v31 = v30;
    v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v32(v31, 1, v4) == 1)
    {
      sub_1C132C860((uint64_t)v16, &qword_1ED7935E8);
      sub_1C132C860((uint64_t)v18, &qword_1ED7935E8);
      if (v32(v41, 1, v4) == 1)
      {
        sub_1C132C860(v42, &qword_1ED7935E8);
        goto LABEL_33;
      }
    }
    else
    {
      sub_1C1408298(v42, (uint64_t)v13);
      if (v32(v41, 1, v4) != 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v41, v4);
        sub_1C1329AD0(&qword_1EF6DC2B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F7D8], MEMORY[0x1E0C8F7F0]);
        v33 = sub_1C1426A70();
        v34 = *(void (**)(char *, uint64_t))(v5 + 8);
        v34(v7, v4);
        sub_1C132C860((uint64_t)v16, &qword_1ED7935E8);
        sub_1C132C860((uint64_t)v18, &qword_1ED7935E8);
        v34(v13, v4);
        sub_1C132C860(v42, &qword_1ED7935E8);
        if ((v33 & 1) != 0)
        {
LABEL_33:
          v35 = v21[13];
          v36 = (_QWORD *)((char *)a1 + v35);
          v37 = *(_QWORD *)((char *)a1 + v35 + 8);
          v38 = (_QWORD *)((char *)a2 + v35);
          v39 = v38[1];
          if (v37)
          {
            if (v39 && (*v36 == *v38 && v37 == v39 || (sub_1C1427064() & 1) != 0))
              return 1;
          }
          else if (!v39)
          {
            return 1;
          }
        }
        return 0;
      }
      sub_1C132C860((uint64_t)v16, &qword_1ED7935E8);
      sub_1C132C860((uint64_t)v18, &qword_1ED7935E8);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
    }
    sub_1C132C860(v42, &qword_1EF6DC2A8);
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Activity.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Activity.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1C14089CC + 4 * byte_1C142B51F[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1C1408A00 + 4 * byte_1C142B51A[v4]))();
}

uint64_t sub_1C1408A00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C1408A08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C1408A10);
  return result;
}

uint64_t sub_1C1408A1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C1408A24);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1C1408A28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C1408A30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Activity.CodingKeys()
{
  return &type metadata for Activity.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for Activity.CreationSource(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C1408A98 + 4 * byte_1C142B529[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C1408ACC + 4 * byte_1C142B524[v4]))();
}

uint64_t sub_1C1408ACC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C1408AD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C1408ADCLL);
  return result;
}

uint64_t sub_1C1408AE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C1408AF0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C1408AF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C1408AFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Activity.CreationSource()
{
  return &type metadata for Activity.CreationSource;
}

unint64_t sub_1C1408B1C()
{
  unint64_t result;

  result = qword_1EF6DC2B8;
  if (!qword_1EF6DC2B8)
  {
    result = MEMORY[0x1C3BAD334](&unk_1C142B6C4, &type metadata for Activity.CreationSource);
    atomic_store(result, (unint64_t *)&qword_1EF6DC2B8);
  }
  return result;
}

unint64_t sub_1C1408B64()
{
  unint64_t result;

  result = qword_1EF6DC2C0;
  if (!qword_1EF6DC2C0)
  {
    result = MEMORY[0x1C3BAD334](&unk_1C142B77C, &type metadata for Activity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6DC2C0);
  }
  return result;
}

unint64_t sub_1C1408BAC()
{
  unint64_t result;

  result = qword_1EF6DC2C8;
  if (!qword_1EF6DC2C8)
  {
    result = MEMORY[0x1C3BAD334](&unk_1C142B6EC, &type metadata for Activity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6DC2C8);
  }
  return result;
}

unint64_t sub_1C1408BF4()
{
  unint64_t result;

  result = qword_1EF6DC2D0;
  if (!qword_1EF6DC2D0)
  {
    result = MEMORY[0x1C3BAD334](&unk_1C142B714, &type metadata for Activity.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF6DC2D0);
  }
  return result;
}

uint64_t sub_1C1408C38(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1C1427064() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74736575716572 && a2 == 0xE700000000000000 || (sub_1C1427064() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x5472657474616C70 && a2 == 0xED00007465677261 || (sub_1C1427064() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001C142D4D0 || (sub_1C1427064() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4464657461657263 && a2 == 0xEB00000000657461 || (sub_1C1427064() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E6F697461657263 && a2 == 0xEE00656372756F53 || (sub_1C1427064() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C142D490 || (sub_1C1427064() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x64616F6C796170 && a2 == 0xE700000000000000 || (sub_1C1427064() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x704F676E69646E65 && a2 == 0xED0000736E6F6974 || (sub_1C1427064() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C14318A0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_1C1427064();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

unint64_t sub_1C14090BC()
{
  unint64_t result;

  result = qword_1EF6DC2D8;
  if (!qword_1EF6DC2D8)
  {
    result = MEMORY[0x1C3BAD334](&unk_1C142B64C, &type metadata for Activity.CreationSource);
    atomic_store(result, (unint64_t *)&qword_1EF6DC2D8);
  }
  return result;
}

uint64_t sub_1C1409100(char *a1)
{
  char v1;
  uint64_t result;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C140915C(v1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C140915C(char a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(os_unfair_lock_s **)(*(_QWORD *)(v1 + 80) + 16);
  os_unfair_lock_lock(v3);
  if ((a1 & 1) != 0)
    goto LABEL_6;
  if (qword_1ED793918 != -1)
    swift_once();
  if ((byte_1ED798648 & 1) == 0)
  {
LABEL_6:
    v6 = sub_1C14266C8();
    v7 = MEMORY[0x1E0D8D2C8];
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v5);
    sub_1C14266BC();
  }
  else
  {
    v6 = sub_1C14266C8();
    v7 = MEMORY[0x1E0D8D2C8];
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v5);
    sub_1C14266B0();
  }
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v1 + 88);
  sub_1C1339184(&v5, v1 + 88);
  swift_endAccess();
  os_unfair_lock_unlock(v3);
  sub_1C132E0A8(v1 + 88, (uint64_t)&v5);
  sub_1C14268E4();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v5);
}

uint64_t sub_1C1409278()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PushBudgetEnforcementPolicyProvider()
{
  return objc_opt_self();
}

void sub_1C14092E4(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *v1;
  v4 = *(os_unfair_lock_s **)(*(_QWORD *)(*v1 + 80) + 16);
  os_unfair_lock_lock(v4);
  swift_beginAccess();
  sub_1C132E0A8(v3 + 88, a1);
  os_unfair_lock_unlock(v4);
}

uint64_t sub_1C1409350()
{
  return swift_retain();
}

uint64_t *sub_1C140935C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C1425CC0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1C1425DF8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_1C1425CFC();
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797898);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v19 = a3[7];
    v20 = a3[8];
    v21 = (uint64_t *)((char *)a1 + v19);
    v22 = (uint64_t *)((char *)a2 + v19);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = (char *)a1 + v20;
    v25 = (char *)a2 + v20;
    v26 = sub_1C14251B0();
    v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
    swift_bridgeObjectRetain();
    v27(v24, v25, v26);
    v28 = a3[9];
    v29 = a3[10];
    v30 = (char *)a1 + v28;
    v31 = (char *)a2 + v28;
    *(_QWORD *)v30 = *(_QWORD *)v31;
    v30[8] = v31[8];
    v32 = (char *)a1 + v29;
    v33 = (char *)a2 + v29;
    v34 = sub_1C1425E4C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
  }
  return a1;
}

uint64_t sub_1C1409524(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = sub_1C1425CC0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_1C1425DF8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + a2[6];
  v8 = sub_1C1425CFC();
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  swift_bridgeObjectRelease();
  v10 = a1 + a2[8];
  v11 = sub_1C14251B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = a1 + a2[10];
  v13 = sub_1C1425E4C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
}

uint64_t sub_1C1409628(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v6 = sub_1C1425CC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C1425DF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = sub_1C1425CFC();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797898);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v17 = a3[7];
  v18 = a3[8];
  v19 = (_QWORD *)(a1 + v17);
  v20 = (_QWORD *)(a2 + v17);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = a1 + v18;
  v23 = a2 + v18;
  v24 = sub_1C14251B0();
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
  swift_bridgeObjectRetain();
  v25(v22, v23, v24);
  v26 = a3[9];
  v27 = a3[10];
  v28 = a1 + v26;
  v29 = a2 + v26;
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *(_BYTE *)(v28 + 8) = *(_BYTE *)(v29 + 8);
  v30 = a1 + v27;
  v31 = a2 + v27;
  v32 = sub_1C1425E4C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
  return a1;
}

uint64_t sub_1C14097C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = sub_1C1425CC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C1425DF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = (void *)(a1 + v11);
  v13 = (void *)(a2 + v11);
  v14 = sub_1C1425CFC();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 24))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797898);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v12, v13, v14);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  v20 = a3[7];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = a3[8];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = sub_1C14251B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[9];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = *(_BYTE *)(v29 + 8);
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *(_BYTE *)(v28 + 8) = v30;
  v31 = a3[10];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = sub_1C1425E4C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

uint64_t sub_1C14099C0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = sub_1C1425CC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C1425DF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = sub_1C1425CFC();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797898);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v17 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_1C14251B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  v21 = a3[9];
  v22 = a3[10];
  v23 = a1 + v21;
  v24 = a2 + v21;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  v25 = a1 + v22;
  v26 = a2 + v22;
  v27 = sub_1C1425E4C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
  return a1;
}

uint64_t sub_1C1409B48(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v6 = sub_1C1425CC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1C1425DF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (void *)(a1 + v11);
  v13 = (void *)(a2 + v11);
  v14 = sub_1C1425CFC();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797898);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_7:
  v20 = a3[7];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  v25 = a3[8];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = sub_1C14251B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(v26, v27, v28);
  v29 = a3[9];
  v30 = a3[10];
  v31 = a1 + v29;
  v32 = a2 + v29;
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *(_BYTE *)(v31 + 8) = *(_BYTE *)(v32 + 8);
  v33 = a1 + v30;
  v34 = a2 + v30;
  v35 = sub_1C1425E4C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 40))(v33, v34, v35);
  return a1;
}

uint64_t sub_1C1409D30()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C1409D3C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;

  v6 = sub_1C1425CC0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1C1425DF8();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_14:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797898);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_14;
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v17 = sub_1C14251B0();
    v12 = *(_QWORD *)(v17 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v17;
      v13 = a3[8];
    }
    else
    {
      v8 = sub_1C1425E4C();
      v12 = *(_QWORD *)(v8 - 8);
      v13 = a3[10];
    }
    goto LABEL_14;
  }
  v15 = *(_QWORD *)(a1 + a3[7] + 8);
  if (v15 >= 0xFFFFFFFF)
    LODWORD(v15) = -1;
  return (v15 + 1);
}

uint64_t sub_1C1409E58()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C1409E64(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  v8 = sub_1C1425CC0();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = sub_1C1425DF8();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797898);
      v14 = *(_QWORD *)(result - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = result;
        v15 = a4[6];
      }
      else
      {
        if (a3 == 0x7FFFFFFF)
        {
          *(_QWORD *)(a1 + a4[7] + 8) = (a2 - 1);
          return result;
        }
        v17 = sub_1C14251B0();
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[8];
        }
        else
        {
          v10 = sub_1C1425E4C();
          v14 = *(_QWORD *)(v10 - 8);
          v15 = a4[10];
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for Assertion()
{
  uint64_t result;

  result = qword_1ED797718;
  if (!qword_1ED797718)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1C1409FB8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_1C1425CC0();
  if (v0 <= 0x3F)
  {
    sub_1C1425DF8();
    if (v1 <= 0x3F)
    {
      sub_1C140A0A0();
      if (v2 <= 0x3F)
      {
        sub_1C14251B0();
        if (v3 <= 0x3F)
        {
          sub_1C1425E4C();
          if (v4 <= 0x3F)
            swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_1C140A0A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED7978A0)
  {
    sub_1C1425CFC();
    v0 = sub_1C1426DAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED7978A0);
  }
}

uint64_t sub_1C140A0F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  int64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  int64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  _QWORD v59[2];
  uint64_t v60;
  int64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  _QWORD *v66;
  char *v67;
  uint64_t *v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
  v3 = MEMORY[0x1E0C80A78](v71);
  v70 = (_QWORD *)((char *)v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = MEMORY[0x1E0C80A78](v3);
  v69 = (_QWORD *)((char *)v59 - v6);
  v7 = MEMORY[0x1E0C80A78](v5);
  v68 = (_QWORD *)((char *)v59 - v8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v67 = (char *)v59 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v66 = (_QWORD *)((char *)v59 - v12);
  MEMORY[0x1E0C80A78](v11);
  v65 = (char *)v59 - v13;
  v14 = *(_QWORD *)(a1 + 16);
  v15 = MEMORY[0x1E0DEE9D8];
  if (!v14)
    return v15;
  v59[1] = v1;
  v78 = MEMORY[0x1E0DEE9D8];
  sub_1C13369AC(0, v14, 0);
  result = sub_1C135833C(a1);
  v18 = result;
  v19 = 0;
  v20 = a1 + 64;
  v60 = a1 + 80;
  v61 = v14;
  v63 = a1 + 64;
  v64 = a1;
  v62 = v17;
  v21 = (uint64_t *)v67;
  while ((v18 & 0x8000000000000000) == 0 && (uint64_t)v18 < 1 << *(_BYTE *)(a1 + 32))
  {
    v24 = v18 >> 6;
    if ((*(_QWORD *)(v20 + 8 * (v18 >> 6)) & (1 << v18)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v17)
      goto LABEL_26;
    v72 = v19;
    v73 = 1 << v18;
    v25 = v71;
    v26 = v65;
    v27 = (uint64_t)&v65[*(int *)(v71 + 48)];
    v28 = *(_QWORD *)(a1 + 48);
    v29 = *(_QWORD *)(a1 + 56);
    v30 = (uint64_t *)(v28 + 16 * v18);
    v32 = *v30;
    v31 = v30[1];
    v33 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for Activity() - 8) + 72);
    v76 = v18;
    sub_1C1338F24(v29 + v33 * v18, v27, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    *v26 = v32;
    v26[1] = v31;
    v34 = (uint64_t)v66;
    *v66 = v32;
    *(_QWORD *)(v34 + 8) = v31;
    sub_1C1338F24(v27, v34 + *(int *)(v25 + 48), (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    sub_1C13D5D8C(v34, (uint64_t)v21);
    swift_bridgeObjectRetain_n();
    sub_1C132C860((uint64_t)v26, &qword_1ED7939D8);
    v36 = *v21;
    v35 = v21[1];
    v37 = *(int *)(v25 + 48);
    v38 = (uint64_t)v68;
    v39 = (uint64_t)v68 + v37;
    *v68 = *v21;
    *(_QWORD *)(v38 + 8) = v35;
    sub_1C1338F24((uint64_t)v21 + v37, v38 + v37, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    v40 = *(int *)(v25 + 48);
    v41 = v69;
    v42 = (uint64_t)v69 + v40;
    *v69 = v36;
    v41[1] = v35;
    sub_1C1338F24(v39, (uint64_t)v41 + v40, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    v43 = *(int *)(v25 + 48);
    v44 = v70;
    v45 = (uint64_t)v70 + v43;
    v77 = v36;
    *v70 = v36;
    v44[1] = v35;
    v46 = v35;
    sub_1C1338F24(v39, (uint64_t)v44 + v43, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    swift_bridgeObjectRetain_n();
    v47 = sub_1C1406DD8();
    v74 = v48;
    v75 = v47;
    sub_1C132C860(v38, &qword_1ED7939D8);
    sub_1C1339004(v45, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    sub_1C1339004(v42, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    sub_1C132C860((uint64_t)v21, &qword_1ED7939D8);
    v15 = v78;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_1C13369AC(0, *(_QWORD *)(v15 + 16) + 1, 1);
      v15 = v78;
    }
    v50 = *(_QWORD *)(v15 + 16);
    v49 = *(_QWORD *)(v15 + 24);
    v51 = v76;
    if (v50 >= v49 >> 1)
    {
      result = sub_1C13369AC(v49 > 1, v50 + 1, 1);
      v15 = v78;
    }
    *(_QWORD *)(v15 + 16) = v50 + 1;
    v52 = (_QWORD *)(v15 + 48 * v50);
    v52[4] = v77;
    v52[5] = v46;
    v53 = v74;
    v52[6] = v75;
    v52[7] = v53;
    v52[9] = MEMORY[0x1E0DEA968];
    a1 = v64;
    v22 = 1 << *(_BYTE *)(v64 + 32);
    if (v51 >= v22)
      goto LABEL_27;
    v20 = v63;
    v54 = *(_QWORD *)(v63 + 8 * v24);
    if ((v54 & v73) == 0)
      goto LABEL_28;
    LODWORD(v17) = v62;
    if (*(_DWORD *)(v64 + 36) != (_DWORD)v62)
      goto LABEL_29;
    v55 = v54 & (-2 << (v51 & 0x3F));
    if (v55)
    {
      v22 = __clz(__rbit64(v55)) | v51 & 0xFFFFFFFFFFFFFFC0;
      v23 = v61;
    }
    else
    {
      v56 = v24 + 1;
      v57 = (unint64_t)(v22 + 63) >> 6;
      v23 = v61;
      if (v24 + 1 < v57)
      {
        v58 = *(_QWORD *)(v63 + 8 * v56);
        if (v58)
        {
LABEL_22:
          v22 = __clz(__rbit64(v58)) + (v56 << 6);
        }
        else
        {
          while (v57 - 2 != v24)
          {
            v58 = *(_QWORD *)(v60 + 8 * v24++);
            if (v58)
            {
              v56 = v24 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    v19 = v72 + 1;
    v18 = v22;
    if (v72 + 1 == v23)
      return v15;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1C140A588()
{
  uint64_t v0;

  sub_1C1339040(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PersistentParticipant()
{
  return objc_opt_self();
}

uint64_t sub_1C140A5DC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t result;
  int64_t v50;
  __int128 v51;
  unint64_t v52;
  unint64_t i;
  int64_t v54;
  unint64_t v55;
  int64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint8_t *v70;
  NSObject *v71;
  os_log_type_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  int *v77;
  uint64_t *v78;
  int *v79;
  uint64_t *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, char *, uint64_t);
  void (*v86)(char *, _QWORD, uint64_t, uint64_t);
  void (*v87)(char *, uint64_t);
  uint64_t v88;
  _QWORD *v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t (*v98)(uint64_t, uint64_t, uint64_t);
  uint64_t v99;
  int v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  void (*v108)(char *, uint64_t);
  char *v109;
  char *v110;
  char v111;
  void (*v112)(char *, uint64_t);
  uint64_t *v113;
  NSObject *v114;
  os_log_type_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  void (*v119)(char *, uint64_t, uint64_t);
  uint64_t *v120;
  NSObject *v121;
  os_log_type_t v122;
  int v123;
  _BOOL4 v124;
  uint64_t v125;
  uint8_t *v126;
  uint64_t v127;
  unint64_t v128;
  uint8_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint8_t *v132;
  uint8_t *v133;
  int *v134;
  uint64_t *v135;
  char *v136;
  uint64_t v137;
  uint8_t *v138;
  _QWORD *v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  uint64_t v143;
  uint8_t *v144;
  uint64_t *v145;
  uint64_t *v146;
  uint64_t *v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t *v152;
  uint64_t v153;
  void (*v154)(char *, char *, uint64_t);
  void (*v155)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v156;
  uint64_t v157;
  uint64_t *v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint8_t *v166;
  char *v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD *v174;
  uint64_t v175;
  uint64_t v176;
  void (*v177)(char *, uint64_t);
  uint64_t v178;
  uint64_t v179;
  void (*v180)(char *, uint64_t, uint64_t);
  uint64_t v181;
  uint64_t v182;
  uint64_t *v183;
  uint64_t v184;
  unint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  __int128 v189;
  uint64_t v190;
  uint64_t *v191;
  uint64_t v192;
  int64_t v193;
  uint64_t v194;
  uint64_t v195;
  int *v196;
  uint64_t v197;
  void (*v198)(_QWORD, _QWORD, _QWORD);

  v151 = sub_1C1425630();
  v150 = *(_QWORD *)(v151 - 8);
  MEMORY[0x1E0C80A78](v151);
  v149 = (char *)&v143 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = sub_1C142557C();
  v181 = *(_QWORD *)(v179 - 8);
  MEMORY[0x1E0C80A78](v179);
  v167 = (char *)&v143 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B60);
  MEMORY[0x1E0C80A78](v3);
  v164 = (char *)&v143 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = sub_1C14253E4();
  v162 = *(_QWORD *)(v163 - 8);
  MEMORY[0x1E0C80A78](v163);
  v161 = (char *)&v143 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = sub_1C14251B0();
  v168 = *(_QWORD *)(v172 - 8);
  v6 = MEMORY[0x1E0C80A78](v172);
  v165 = (char *)&v143 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v160 = (char *)&v143 - v9;
  MEMORY[0x1E0C80A78](v8);
  v148 = (char *)&v143 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
  v12 = MEMORY[0x1E0C80A78](v11);
  v159 = (uint64_t)&v143 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v171 = (uint64_t)&v143 - v14;
  v173 = type metadata accessor for ActivityParticipantEvent(0);
  v170 = *(_QWORD *)(v173 - 8);
  v15 = MEMORY[0x1E0C80A78](v173);
  v153 = (uint64_t)&v143 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v152 = (uint64_t *)((char *)&v143 - v18);
  v19 = MEMORY[0x1E0C80A78](v17);
  v184 = (uint64_t)&v143 - v20;
  MEMORY[0x1E0C80A78](v19);
  v183 = (uint64_t *)((char *)&v143 - v21);
  v187 = sub_1C1425558();
  v182 = *(_QWORD *)(v187 - 8);
  MEMORY[0x1E0C80A78](v187);
  v186 = (char *)&v143 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for Activity();
  v195 = *(_QWORD *)(v23 - 8);
  v196 = (int *)v23;
  v24 = MEMORY[0x1E0C80A78](v23);
  v26 = (uint64_t *)((char *)&v143 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = MEMORY[0x1E0C80A78](v24);
  v147 = (uint64_t *)((char *)&v143 - v28);
  v29 = MEMORY[0x1E0C80A78](v27);
  v146 = (uint64_t *)((char *)&v143 - v30);
  v31 = MEMORY[0x1E0C80A78](v29);
  v33 = (uint64_t *)((char *)&v143 - v32);
  v34 = MEMORY[0x1E0C80A78](v31);
  v36 = (uint64_t *)((char *)&v143 - v35);
  MEMORY[0x1E0C80A78](v34);
  v194 = (uint64_t)&v143 - v37;
  v38 = v0[7];
  v39 = v0[8];
  v174 = v0;
  v40 = __swift_project_boxed_opaque_existential_1(v0 + 4, v38);
  v41 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v40);
  v43 = (char *)&v143 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v41 + 16))(v43);
  v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 8))(v38, v39);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v43, v38);
  v45 = *(_QWORD *)(v44 + 64);
  v192 = v44 + 64;
  v46 = 1 << *(_BYTE *)(v44 + 32);
  v47 = -1;
  if (v46 < 64)
    v47 = ~(-1 << v46);
  v48 = v47 & v45;
  v193 = (unint64_t)(v46 + 63) >> 6;
  v145 = (uint64_t *)&v198;
  result = swift_bridgeObjectRetain();
  v50 = 0;
  v185 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v51 = 136446210;
  v189 = v51;
  v188 = MEMORY[0x1E0DEE9B8] + 8;
  v190 = v44;
  v191 = v33;
  if (v48)
    goto LABEL_7;
LABEL_8:
  while (2)
  {
    v54 = v50 + 1;
    if (!__OFADD__(v50, 1))
    {
      if (v54 < v193)
      {
        v55 = *(_QWORD *)(v192 + 8 * v54);
        ++v50;
        if (v55)
          goto LABEL_23;
        v50 = v54 + 1;
        if (v54 + 1 >= v193)
          goto LABEL_59;
        v55 = *(_QWORD *)(v192 + 8 * v50);
        if (v55)
          goto LABEL_23;
        v50 = v54 + 2;
        if (v54 + 2 >= v193)
          goto LABEL_59;
        v55 = *(_QWORD *)(v192 + 8 * v50);
        if (v55)
          goto LABEL_23;
        v50 = v54 + 3;
        if (v54 + 3 >= v193)
          goto LABEL_59;
        v55 = *(_QWORD *)(v192 + 8 * v50);
        if (v55)
        {
LABEL_23:
          v48 = (v55 - 1) & v55;
          for (i = __clz(__rbit64(v55)) + (v50 << 6); ; i = v52 | (v50 << 6))
          {
            v57 = v194;
            sub_1C1338F24(*(_QWORD *)(v44 + 56) + *(_QWORD *)(v195 + 72) * i, v194, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
            sub_1C1339140(v57, (uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
            v58 = *(uint64_t *)((char *)v36 + v196[7]);
            if (!*(_QWORD *)(v58 + 16))
              break;
            v68 = v58 + ((*(unsigned __int8 *)(v182 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v182 + 80));
            v180 = *(void (**)(char *, uint64_t, uint64_t))(v182 + 16);
            v180(v186, v68, v187);
            if (qword_1ED793948 != -1)
              swift_once();
            v69 = sub_1C1426854();
            v70 = (uint8_t *)__swift_project_value_buffer(v69, (uint64_t)qword_1ED798598);
            sub_1C1338F24((uint64_t)v36, (uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
            v166 = v70;
            v71 = sub_1C1426848();
            v72 = sub_1C1426C80();
            if (os_log_type_enabled(v71, v72))
            {
              v73 = swift_slowAlloc();
              v178 = swift_slowAlloc();
              v198 = (void (*)(_QWORD, _QWORD, _QWORD))v178;
              *(_DWORD *)v73 = v189;
              v74 = *v33;
              v75 = v33[1];
              swift_bridgeObjectRetain();
              *(_QWORD *)(v73 + 4) = sub_1C132AD90(v74, v75, (uint64_t *)&v198);
              swift_bridgeObjectRelease();
              sub_1C1339004((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
              _os_log_impl(&dword_1C1324000, v71, v72, "Adding start event for reloaded activity: %{public}s", (uint8_t *)v73, 0xCu);
              v76 = v178;
              swift_arrayDestroy();
              MEMORY[0x1C3BAD3F4](v76, -1, -1);
              MEMORY[0x1C3BAD3F4](v73, -1, -1);
            }
            else
            {
              sub_1C1339004((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
            }

            v178 = *v36;
            v177 = (void (*)(char *, uint64_t))v36[1];
            v77 = v196;
            v78 = (uint64_t *)((char *)v36 + v196[10]);
            v176 = *v78;
            v158 = v78;
            v175 = v78[1];
            v79 = (int *)v173;
            v80 = v183;
            sub_1C1338F24((uint64_t)v36, (uint64_t)v183 + *(int *)(v173 + 24), (uint64_t (*)(_QWORD))type metadata accessor for Activity);
            v156 = type metadata accessor for ActivityParticipantEvent.EventType(0);
            swift_storeEnumTagMultiPayload();
            v180((char *)v80 + v79[7], (uint64_t)v186, v187);
            v81 = (char *)v80 + v79[9];
            v82 = (char *)v36 + v77[11];
            v83 = sub_1C1425450();
            v84 = *(_QWORD *)(v83 - 8);
            v85 = *(void (**)(char *, char *, uint64_t))(v84 + 16);
            v169 = v82;
            v154 = v85;
            v85(v81, v82, v83);
            v86 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56);
            v157 = v83;
            v86(v81, 0, 1, v83);
            v87 = v177;
            *v80 = v178;
            v80[1] = (uint64_t)v87;
            v88 = v175;
            v80[2] = v176;
            v80[3] = v88;
            v89 = (uint64_t *)((char *)v80 + v79[8]);
            *v89 = v174;
            v89[1] = &off_1E7A8EF08;
            *((_BYTE *)v80 + v79[10]) = 0;
            sub_1C1338F24((uint64_t)v80, v184, type metadata accessor for ActivityParticipantEvent);
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            v90 = v185;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v90 = sub_1C136C8A8(0, *(_QWORD *)(v90 + 16) + 1, 1, v90);
            v92 = *(_QWORD *)(v90 + 16);
            v91 = *(_QWORD *)(v90 + 24);
            v155 = v86;
            if (v92 >= v91 >> 1)
              v90 = sub_1C136C8A8(v91 > 1, v92 + 1, 1, v90);
            *(_QWORD *)(v90 + 16) = v92 + 1;
            v93 = (*(unsigned __int8 *)(v170 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v170 + 80);
            v185 = v90;
            v178 = v93;
            v94 = v90 + v93;
            v95 = *(_QWORD *)(v170 + 72);
            sub_1C1339140(v184, v94 + v95 * v92, type metadata accessor for ActivityParticipantEvent);
            v96 = (uint64_t)v36 + v196[12];
            v97 = v171;
            sub_1C1408298(v96, v171);
            v98 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v181 + 48);
            v99 = v179;
            v100 = v98(v97, 1, v179);
            sub_1C132C860(v97, &qword_1ED7935E8);
            if (v100 == 1)
            {
              v101 = v161;
              sub_1C142542C();
              v102 = (uint64_t)v164;
              sub_1C14253D8();
              (*(void (**)(char *, uint64_t))(v162 + 8))(v101, v163);
              v103 = v168;
              v104 = v172;
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v168 + 48))(v102, 1, v172) == 1)
              {
                sub_1C132C860(v102, &qword_1ED793B60);
              }
              else
              {
                v106 = v148;
                (*(void (**)(char *, uint64_t, uint64_t))(v103 + 32))(v148, v102, v104);
                v107 = v160;
                sub_1C142518C();
                sub_1C1425150();
                v108 = *(void (**)(char *, uint64_t))(v103 + 8);
                v108(v107, v104);
                v108(v106, v104);
              }
              v44 = v190;
              v33 = v191;
              sub_1C1339004((uint64_t)v183, type metadata accessor for ActivityParticipantEvent);
              (*(void (**)(char *, uint64_t))(v182 + 8))(v186, v187);
              goto LABEL_6;
            }
            v105 = v159;
            sub_1C1408298(v96, v159);
            if (v98(v105, 1, v99) == 1)
            {
              sub_1C1339004((uint64_t)v183, type metadata accessor for ActivityParticipantEvent);
              (*(void (**)(char *, uint64_t))(v182 + 8))(v186, v187);
              sub_1C1339004((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
              result = sub_1C132C860(v105, &qword_1ED7935E8);
            }
            else
            {
              (*(void (**)(char *, uint64_t, uint64_t))(v181 + 32))(v167, v105, v99);
              v109 = v149;
              sub_1C1425564();
              sub_1C1425600();
              (*(void (**)(char *, uint64_t))(v150 + 8))(v109, v151);
              v110 = v160;
              sub_1C142518C();
              v111 = sub_1C1425150();
              v112 = *(void (**)(char *, uint64_t))(v168 + 8);
              v112(v110, v172);
              if ((v111 & 1) != 0)
              {
                v113 = v146;
                sub_1C1338F24((uint64_t)v36, (uint64_t)v146, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
                v114 = sub_1C1426848();
                v115 = sub_1C1426C80();
                if (os_log_type_enabled(v114, v115))
                {
                  v116 = swift_slowAlloc();
                  v180 = (void (*)(char *, uint64_t, uint64_t))swift_slowAlloc();
                  v198 = (void (*)(_QWORD, _QWORD, _QWORD))v180;
                  *(_DWORD *)v116 = v189;
                  v177 = v112;
                  v117 = *v113;
                  v118 = v113[1];
                  swift_bridgeObjectRetain();
                  *(_QWORD *)(v116 + 4) = sub_1C132AD90(v117, v118, (uint64_t *)&v198);
                  swift_bridgeObjectRelease();
                  sub_1C1339004((uint64_t)v113, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
                  _os_log_impl(&dword_1C1324000, v114, v115, "Reloaded activity is already obsolete: %{public}s", (uint8_t *)v116, 0xCu);
                  v119 = v180;
                  swift_arrayDestroy();
                  MEMORY[0x1C3BAD3F4](v119, -1, -1);
                  MEMORY[0x1C3BAD3F4](v116, -1, -1);

                  v177(v165, v172);
                }
                else
                {

                  sub_1C1339004((uint64_t)v113, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
                  v112(v165, v172);
                }
                (*(void (**)(char *, uint64_t))(v181 + 8))(v167, v179);
                sub_1C1339004((uint64_t)v183, type metadata accessor for ActivityParticipantEvent);
                (*(void (**)(char *, uint64_t))(v182 + 8))(v186, v187);
                v131 = (uint64_t)v36;
              }
              else
              {
                v120 = v147;
                sub_1C1338F24((uint64_t)v36, (uint64_t)v147, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
                v121 = sub_1C1426848();
                v122 = sub_1C1426C80();
                v123 = v122;
                v124 = os_log_type_enabled(v121, v122);
                v177 = v112;
                if (v124)
                {
                  v125 = swift_slowAlloc();
                  LODWORD(v176) = v123;
                  v126 = (uint8_t *)v125;
                  v175 = swift_slowAlloc();
                  v198 = (void (*)(_QWORD, _QWORD, _QWORD))v175;
                  v166 = v126;
                  *(_DWORD *)v126 = v189;
                  v144 = v126 + 4;
                  v143 = *v120;
                  v127 = (uint64_t)v120;
                  v128 = v120[1];
                  swift_bridgeObjectRetain();
                  v197 = sub_1C132AD90(v143, v128, (uint64_t *)&v198);
                  sub_1C1426DB8();
                  swift_bridgeObjectRelease();
                  sub_1C1339004(v127, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
                  v129 = v166;
                  _os_log_impl(&dword_1C1324000, v121, (os_log_type_t)v176, "Adding restored end event for reloaded zombie activity: %{public}s", v166, 0xCu);
                  v130 = v175;
                  swift_arrayDestroy();
                  MEMORY[0x1C3BAD3F4](v130, -1, -1);
                  MEMORY[0x1C3BAD3F4](v129, -1, -1);
                }
                else
                {
                  sub_1C1339004((uint64_t)v120, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
                }

                v132 = (uint8_t *)v36[1];
                v176 = *v36;
                v144 = v132;
                v133 = (uint8_t *)v158[1];
                v175 = *v158;
                v166 = v133;
                v134 = (int *)v173;
                v135 = v152;
                (*(void (**)(uint64_t, char *, uint64_t))(v181 + 16))((uint64_t)v152 + *(int *)(v173 + 24), v167, v179);
                swift_storeEnumTagMultiPayload();
                v180((char *)v135 + v134[7], (uint64_t)v186, v187);
                v136 = (char *)v135 + v134[9];
                v137 = v157;
                v154(v136, v169, v157);
                v155(v136, 0, 1, v137);
                *v135 = v176;
                v135[1] = (uint64_t)v132;
                v138 = v166;
                v135[2] = v175;
                v135[3] = (uint64_t)v138;
                v139 = (uint64_t *)((char *)v135 + v134[8]);
                *v139 = v174;
                v139[1] = &off_1E7A8EF08;
                *((_BYTE *)v135 + v134[10]) = 0;
                sub_1C1338F24((uint64_t)v135, v153, type metadata accessor for ActivityParticipantEvent);
                v140 = *(_QWORD *)(v185 + 16);
                v141 = *(_QWORD *)(v185 + 24);
                swift_retain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v140 >= v141 >> 1)
                  v185 = sub_1C136C8A8(v141 > 1, v140 + 1, 1, v185);
                v142 = v185;
                *(_QWORD *)(v185 + 16) = v140 + 1;
                sub_1C1339140(v153, v142 + v178 + v140 * v95, type metadata accessor for ActivityParticipantEvent);
                sub_1C1339004((uint64_t)v152, type metadata accessor for ActivityParticipantEvent);
                v177(v165, v172);
                (*(void (**)(char *, uint64_t))(v181 + 8))(v167, v179);
                sub_1C1339004((uint64_t)v183, type metadata accessor for ActivityParticipantEvent);
                (*(void (**)(char *, uint64_t))(v182 + 8))(v186, v187);
                v131 = (uint64_t)v36;
              }
              result = sub_1C1339004(v131, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
            }
            v44 = v190;
            v33 = v191;
            if (!v48)
              goto LABEL_8;
LABEL_7:
            v52 = __clz(__rbit64(v48));
            v48 &= v48 - 1;
          }
          if (qword_1ED793948 != -1)
            swift_once();
          v59 = sub_1C1426854();
          __swift_project_value_buffer(v59, (uint64_t)qword_1ED798598);
          sub_1C1338F24((uint64_t)v36, (uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
          v60 = sub_1C1426848();
          v61 = sub_1C1426C68();
          if (os_log_type_enabled(v60, v61))
          {
            v62 = swift_slowAlloc();
            v63 = swift_slowAlloc();
            v198 = (void (*)(_QWORD, _QWORD, _QWORD))v63;
            *(_DWORD *)v62 = v189;
            v64 = *v26;
            v65 = v26[1];
            swift_bridgeObjectRetain();
            v66 = v64;
            v33 = v191;
            *(_QWORD *)(v62 + 4) = sub_1C132AD90(v66, v65, (uint64_t *)&v198);
            swift_bridgeObjectRelease();
            sub_1C1339004((uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
            _os_log_impl(&dword_1C1324000, v60, v61, "No sources exist for reloaded activity: %{public}s", (uint8_t *)v62, 0xCu);
            swift_arrayDestroy();
            v67 = v63;
            v44 = v190;
            MEMORY[0x1C3BAD3F4](v67, -1, -1);
            MEMORY[0x1C3BAD3F4](v62, -1, -1);

          }
          else
          {

            sub_1C1339004((uint64_t)v26, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
          }
LABEL_6:
          result = sub_1C1339004((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
          if (!v48)
            continue;
          goto LABEL_7;
        }
        v56 = v54 + 4;
        if (v56 < v193)
        {
          v55 = *(_QWORD *)(v192 + 8 * v56);
          if (v55)
          {
            v50 = v56;
            goto LABEL_23;
          }
          while (1)
          {
            v50 = v56 + 1;
            if (__OFADD__(v56, 1))
              goto LABEL_61;
            if (v50 >= v193)
              break;
            v55 = *(_QWORD *)(v192 + 8 * v50);
            ++v56;
            if (v55)
              goto LABEL_23;
          }
        }
      }
LABEL_59:
      swift_release();
      swift_bridgeObjectRelease();
      return v185;
    }
    break;
  }
  __break(1u);
LABEL_61:
  __break(1u);
  return result;
}

uint64_t sub_1C140B918(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v4;

  v4 = *(os_unfair_lock_s **)(*(_QWORD *)(v2 + 72) + 16);
  os_unfair_lock_lock(v4);
  *(_QWORD *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  os_unfair_lock_unlock(v4);
  return swift_unknownObjectRelease();
}

void sub_1C140B96C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  os_unfair_lock_s *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[3];
  uint64_t v36;
  uint64_t v37;

  v3 = v2;
  v6 = type metadata accessor for ActivityManagerEvent(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v35[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797560);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v35[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((unsigned __int8 *)a1 + *(int *)(v6 + 20)) - 1 >= 2)
  {
    if (!*((_BYTE *)a1 + *(int *)(v6 + 20)))
    {
      sub_1C132E0A8(v3 + 32, (uint64_t)v35);
      v24 = v36;
      v25 = v37;
      __swift_project_boxed_opaque_existential_1(v35, v36);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v25 + 24))(a1, v24, v25);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
      v27 = *a1;
      v26 = a1[1];
      v28 = *(os_unfair_lock_s **)(*(_QWORD *)(a2 + 16) + 16);
      os_unfair_lock_lock(v28);
      v29 = swift_retain();
      sub_1C1371624(v29, v27, v26, a2);
      swift_release();
      os_unfair_lock_unlock(v28);
      return;
    }
    sub_1C132E0A8(v3 + 32, (uint64_t)v35);
    v32 = v36;
    v33 = v37;
    __swift_project_boxed_opaque_existential_1(v35, v36);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 32))(*a1, a1[1], v32, v33);
    goto LABEL_11;
  }
  v12 = v3 + 32;
  sub_1C132E0A8(v12, (uint64_t)v35);
  v13 = v36;
  v14 = v37;
  __swift_project_boxed_opaque_existential_1(v35, v36);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 16))(*a1, a1[1], v13, v14);
  v15 = type metadata accessor for Activity();
  v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v11, 1, v15);
  sub_1C132C860((uint64_t)v11, &qword_1ED797560);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  if (v16 != 1)
  {
    sub_1C132E0A8(v12, (uint64_t)v35);
    v30 = v36;
    v31 = v37;
    __swift_project_boxed_opaque_existential_1(v35, v36);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v31 + 24))(a1, v30, v31);
LABEL_11:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    return;
  }
  if (qword_1ED793948 != -1)
    swift_once();
  v17 = sub_1C1426854();
  __swift_project_value_buffer(v17, (uint64_t)qword_1ED798598);
  sub_1C1338F24((uint64_t)a1, (uint64_t)v8, type metadata accessor for ActivityManagerEvent);
  v18 = sub_1C1426848();
  v19 = sub_1C1426C68();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    v35[0] = v21;
    *(_DWORD *)v20 = 136446210;
    v22 = *v8;
    v23 = v8[1];
    swift_bridgeObjectRetain();
    v34 = sub_1C132AD90(v22, v23, v35);
    sub_1C1426DB8();
    swift_bridgeObjectRelease();
    sub_1C1339004((uint64_t)v8, type metadata accessor for ActivityManagerEvent);
    _os_log_impl(&dword_1C1324000, v18, v19, "PersistentParticipant received update for non-existent activity: %{public}s", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v21, -1, -1);
    MEMORY[0x1C3BAD3F4](v20, -1, -1);
  }
  else
  {
    sub_1C1339004((uint64_t)v8, type metadata accessor for ActivityManagerEvent);
  }

}

uint64_t sub_1C140BD2C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v1 = v0[7];
  v2 = v0[8];
  v3 = __swift_project_boxed_opaque_existential_1(v0 + 4, v1);
  v4 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v1);
  v8 = sub_1C140A0F4(v7);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v8 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797B20);
    v9 = sub_1C1426FBC();
  }
  else
  {
    v9 = MEMORY[0x1E0DEE9E0];
  }
  v13 = v9;
  v10 = swift_bridgeObjectRetain();
  sub_1C13555F8(v10, 1, &v13);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1C140BE64()
{
  return sub_1C140BD2C();
}

uint64_t sub_1C140BE84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC11SessionCore20XPCOutputParticipant_ossignposter;
  v2 = sub_1C1426824();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1C140BEDC()
{
  return type metadata accessor for XPCOutputParticipant();
}

uint64_t type metadata accessor for XPCOutputParticipant()
{
  uint64_t result;

  result = qword_1ED797DB0;
  if (!qword_1ED797DB0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C140BF20()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C1426824();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_1C140BF9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD v14[7];

  v14[3] = a2;
  v3 = sub_1C1426800();
  v14[6] = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v5 = MEMORY[0x1E0C80A78](v4);
  v14[5] = (char *)v14 - v6;
  MEMORY[0x1E0C80A78](v5);
  v7 = type metadata accessor for ActivityManagerEvent(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v9 = MEMORY[0x1E0C80A78](v8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v11 = MEMORY[0x1E0C80A78](v10);
  v12 = MEMORY[0x1E0C80A78](v11);
  v13 = (char *)sub_1C140C120 + 4 * byte_1C142B9D0[*(unsigned __int8 *)(a1 + *(int *)(MEMORY[0x1E0C80A78](v12) + 20))];
  __asm { BR              X10 }
}

uint64_t sub_1C140C120()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_signpost_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  os_signpost_id_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  os_unfair_lock_s *v29;
  uint64_t v30;

  *(_QWORD *)(v5 - 128) = v1;
  if (qword_1ED793960 != -1)
    swift_once();
  v6 = sub_1C1426854();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED798680);
  sub_1C137B3F4((uint64_t)v0, (uint64_t)v2);
  v7 = sub_1C1426848();
  v8 = sub_1C1426C80();
  v9 = os_log_type_enabled(v7, v8);
  *(_QWORD *)(v5 - 144) = v0;
  if (v9)
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    *(_QWORD *)(v5 - 88) = v11;
    *(_DWORD *)v10 = 136446210;
    *(_QWORD *)(v5 - 152) = v10 + 4;
    v12 = *v2;
    v13 = v2[1];
    swift_bridgeObjectRetain();
    v14 = v12;
    v0 = *(uint64_t **)(v5 - 144);
    *(_QWORD *)(v5 - 96) = sub_1C132AD90(v14, v13, (uint64_t *)(v5 - 88));
    sub_1C1426DB8();
    swift_bridgeObjectRelease();
    sub_1C13776C8((uint64_t)v2);
    _os_log_impl(&dword_1C1324000, v7, v8, "Activity started: %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v11, -1, -1);
    MEMORY[0x1C3BAD3F4](v10, -1, -1);
  }
  else
  {
    sub_1C13776C8((uint64_t)v2);
  }

  sub_1C1426818();
  sub_1C14267E8();
  sub_1C137B3F4((uint64_t)v0, (uint64_t)v4);
  v15 = sub_1C1426818();
  v16 = sub_1C1426D58();
  if ((sub_1C1426DA0() & 1) != 0)
  {
    (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v5 - 112) + 16))(*(_QWORD *)(v5 - 120), v3, *(_QWORD *)(v5 - 128));
    v17 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    *(_QWORD *)(v5 - 88) = v18;
    *(_DWORD *)v17 = 136446210;
    v19 = *v4;
    v20 = v4[1];
    swift_bridgeObjectRetain();
    *(_QWORD *)(v5 - 96) = sub_1C132AD90(v19, v20, (uint64_t *)(v5 - 88));
    sub_1C1426DB8();
    swift_bridgeObjectRelease();
    sub_1C13776C8((uint64_t)v4);
    v21 = *(_QWORD *)(v5 - 120);
    v22 = sub_1C14267F4();
    _os_signpost_emit_with_name_impl(&dword_1C1324000, v15, v16, v22, "activityStarted", "Activity started: %{public}s", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v18, -1, -1);
    MEMORY[0x1C3BAD3F4](v17, -1, -1);

    v23 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 112) + 8);
    v24 = *(_QWORD *)(v5 - 128);
    v23(v3, v24);
    v23(v21, v24);
    v0 = *(uint64_t **)(v5 - 144);
  }
  else
  {
    sub_1C13776C8((uint64_t)v4);

    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v5 - 112) + 8))(v3, *(_QWORD *)(v5 - 128));
  }
  v25 = v0;
  v26 = *v0;
  v27 = v25[1];
  v28 = *(_QWORD *)(v5 - 136);
  v29 = *(os_unfair_lock_s **)(*(_QWORD *)(v28 + 16) + 16);
  os_unfair_lock_lock(v29);
  v30 = swift_retain();
  sub_1C1371250(v30, v26, v27, v28);
  swift_release();
  os_unfair_lock_unlock(v29);
  return sub_1C13DD364(v25);
}

uint64_t *sub_1C140CA70(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C14251B0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  }
  return a1;
}

uint64_t sub_1C140CB0C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1C14251B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1C140CB7C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;

  v6 = sub_1C14251B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1C140CBF0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1C14251B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1C140CC60(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1C14251B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1C140CCD0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C140CCDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C14251B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1C140CD18()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C140CD24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1C14251B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1C140CD64()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C14251B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C140CDDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v1 = sub_1C14251B0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v16 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B60);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v0 + *(int *)(type metadata accessor for DefaultInputBackoffBudget() + 20)))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v10, 1, 1, v1);
LABEL_7:
    v14 = 0;
    goto LABEL_8;
  }
  sub_1C142515C();
  sub_1C142518C();
  v11 = sub_1C1425144();
  v12 = *(void (**)(char *, uint64_t))(v2 + 8);
  v12(v5, v1);
  if ((v11 & 1) != 0)
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v10, v7, v1);
    v13 = 0;
  }
  else
  {
    v12(v7, v1);
    v13 = 1;
  }
  v14 = 1;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v10, v13, 1, v1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v10, 1, v1) == 1)
    goto LABEL_7;
LABEL_8:
  sub_1C13B33A0((uint64_t)v10);
  return v14;
}

uint64_t sub_1C140CF7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;

  v3 = sub_1C14251B0();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  if (*(_QWORD *)(v1 + *(int *)(type metadata accessor for DefaultInputBackoffBudget() + 20)))
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, 1, 1, v3);
  sub_1C142515C();
  sub_1C142518C();
  v11 = sub_1C1425144();
  v12 = *(void (**)(char *, uint64_t))(v4 + 8);
  v12(v7, v3);
  if ((v11 & 1) != 0)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(a1, v9, v3);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(a1, 0, 1, v3);
  }
  else
  {
    v12(v9, v3);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, 1, 1, v3);
  }
}

uint64_t sub_1C140D0D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  void (*v10)(char *, uint64_t);
  uint64_t result;
  uint64_t v12;

  v1 = sub_1C14251B0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v12 - v6;
  sub_1C142518C();
  if ((sub_1C1425144() & 1) != 0)
  {
    sub_1C1425108();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 40))(v0, v5, v1);
  }
  v8 = type metadata accessor for DefaultInputBackoffBudget();
  sub_1C142515C();
  v9 = sub_1C1425150();
  v10 = *(void (**)(char *, uint64_t))(v2 + 8);
  v10(v5, v1);
  if ((v9 & 1) == 0)
    return ((uint64_t (*)(char *, uint64_t))v10)(v7, v1);
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v2 + 40))(v0, v7, v1);
  *(_QWORD *)(v0 + *(int *)(v8 + 20)) = *(_QWORD *)(v0 + *(int *)(v8 + 28));
  return result;
}

BOOL sub_1C140D20C(uint64_t a1, uint64_t a2)
{
  int *v4;

  if ((sub_1C1425180() & 1) != 0
    && (v4 = (int *)type metadata accessor for DefaultInputBackoffBudget(),
        *(_QWORD *)(a1 + v4[5]) == *(_QWORD *)(a2 + v4[5]))
    && *(double *)(a1 + v4[6]) == *(double *)(a2 + v4[6]))
  {
    return *(_QWORD *)(a1 + v4[7]) == *(_QWORD *)(a2 + v4[7]);
  }
  else
  {
    return 0;
  }
}

ValueMetadata *type metadata accessor for DefaultInputBackoffPolicy()
{
  return &type metadata for DefaultInputBackoffPolicy;
}

uint64_t sub_1C140D290@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  char v15;
  uint64_t v16;
  void (*v17)(_BYTE *, uint64_t, uint64_t);
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void (*v26)(_BYTE *, uint64_t);
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(_BYTE *, uint64_t);
  _BYTE v33[4];
  int v34;
  uint64_t v35;
  void (*v36)(_BYTE *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v8 = sub_1C1425AEC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = &v33[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v10);
  v14 = &v33[-v13];
  if ((sub_1C1425A98() & 1) != 0)
  {
    v15 = sub_1C1425AE0();
    if ((a2 & 1) == 0 && (v15 & 1) == 0)
      goto LABEL_4;
LABEL_9:
    if (!a3)
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a4, a1, v8);
    if (a3 == 1)
      sub_1C140DE48();
    else
      swift_bridgeObjectRetain();
    return sub_1C1425A74();
  }
  if ((a2 & 1) != 0)
    goto LABEL_9;
LABEL_4:
  if (qword_1ED793958 != -1)
    swift_once();
  v16 = sub_1C1426854();
  __swift_project_value_buffer(v16, (uint64_t)qword_1ED798668);
  v17 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16);
  v17(v14, a1, v8);
  v17(v12, a1, v8);
  v18 = sub_1C1426848();
  v19 = sub_1C1426C68();
  v20 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    v21 = swift_slowAlloc();
    v36 = v17;
    v22 = v21;
    v35 = swift_slowAlloc();
    v39 = v35;
    *(_DWORD *)v22 = 136380931;
    v34 = v20;
    v23 = sub_1C1425A80();
    v25 = sub_1C132AD90(v23, v24, &v39);
    v37 = a4;
    v38 = v25;
    sub_1C1426DB8();
    swift_bridgeObjectRelease();
    v26 = *(void (**)(_BYTE *, uint64_t))(v9 + 8);
    v26(v14, v8);
    *(_WORD *)(v22 + 12) = 2081;
    v27 = sub_1C1425A80();
    v38 = sub_1C132AD90(v27, v28, &v39);
    a4 = v37;
    sub_1C1426DB8();
    swift_bridgeObjectRelease();
    v26(v12, v8);
    _os_log_impl(&dword_1C1324000, v18, (os_log_type_t)v34, "%{private}s is not entitled to specify a process record. Defaulting process record to %{private}s", (uint8_t *)v22, 0x16u);
    v29 = v35;
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v29, -1, -1);
    v30 = v22;
    v17 = v36;
    MEMORY[0x1C3BAD3F4](v30, -1, -1);
  }
  else
  {
    v31 = *(void (**)(_BYTE *, uint64_t))(v9 + 8);
    v31(v14, v8);
    v31(v12, v8);
  }

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v17)(a4, a1, v8);
}

uint64_t sub_1C140D5D8()
{
  sub_1C1426F08();
  sub_1C14252D0();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797A00);
  sub_1C1426AA0();
  sub_1C14252D0();
  swift_bridgeObjectRelease();
  sub_1C14252D0();
  sub_1C14252D0();
  swift_bridgeObjectRelease();
  sub_1C14252D0();
  sub_1C14252D0();
  swift_bridgeObjectRelease();
  sub_1C14252D0();
  sub_1C1426AA0();
  sub_1C14252D0();
  swift_bridgeObjectRelease();
  sub_1C14252D0();
  return 0;
}

uint64_t sub_1C140D788()
{
  return sub_1C140D5D8();
}

unint64_t sub_1C140D7B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD);
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  void (*v23)(unint64_t, char *, uint64_t);
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint8_t *v44;
  unint64_t v45;
  unint64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char *v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v55;
  uint8_t *v56;
  void (*v57)(unint64_t, char *, uint64_t);
  unint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, _QWORD, uint64_t);
  uint64_t v68;
  uint64_t v69;

  v2 = v0;
  v3 = sub_1C1425558();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v61 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v55 - v8;
  v10 = MEMORY[0x1E0C80A78](v7);
  v60 = (char *)&v55 - v11;
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v55 - v12;
  v14 = type metadata accessor for ContentSourceResolver();
  v64 = *(int *)(v14 + 24);
  v65 = v14;
  v15 = swift_bridgeObjectRetain();
  v16 = sub_1C140F824(v15, v2);
  swift_bridgeObjectRelease();
  v17 = sub_1C1425AEC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v13, v2, v17);
  v18 = *(void (**)(_QWORD))(v4 + 104);
  v63 = *MEMORY[0x1E0C8F788];
  v67 = (void (*)(char *, _QWORD, uint64_t))v18;
  v18(v13);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v16 = sub_1C136C1AC(0, *(_QWORD *)(v16 + 16) + 1, 1, v16);
  v20 = *(_QWORD *)(v16 + 16);
  v19 = *(_QWORD *)(v16 + 24);
  if (v20 >= v19 >> 1)
    v16 = sub_1C136C1AC(v19 > 1, v20 + 1, 1, v16);
  *(_QWORD *)(v16 + 16) = v20 + 1;
  v21 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v66 = *(_QWORD *)(v4 + 72);
  v22 = v16 + v21 + v66 * v20;
  v23 = *(void (**)(unint64_t, char *, uint64_t))(v4 + 32);
  v23(v22, v13, v3);
  if ((sub_1C1425A98() & 1) != 0)
  {
    v58 = v21;
    v62 = v1;
    v24 = sub_1C140DE48();
    v26 = v25;
    if (qword_1ED793958 != -1)
      swift_once();
    v27 = sub_1C1426854();
    __swift_project_value_buffer(v27, (uint64_t)qword_1ED798668);
    swift_bridgeObjectRetain();
    v28 = sub_1C1426848();
    v29 = sub_1C1426C80();
    if (os_log_type_enabled(v28, v29))
    {
      v59 = v3;
      v30 = swift_slowAlloc();
      v56 = (uint8_t *)v24;
      v31 = (uint8_t *)v30;
      v32 = swift_slowAlloc();
      v69 = v32;
      v57 = v23;
      *(_DWORD *)v31 = 136315138;
      swift_bridgeObjectRetain();
      v68 = sub_1C132AD90((uint64_t)v56, v26, &v69);
      v3 = v59;
      v23 = v57;
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v28, v29, "Adding app bundle identifier as content source: %s", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v32, -1, -1);
      MEMORY[0x1C3BAD3F4](v31, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v9 = v60;
    sub_1C140DE48();
    sub_1C1425A74();
    v67(v9, v63, v3);
    v46 = *(_QWORD *)(v16 + 16);
    v45 = *(_QWORD *)(v16 + 24);
    v47 = v46 + 1;
    v21 = v58;
    if (v46 < v45 >> 1)
      goto LABEL_17;
    goto LABEL_28;
  }
  v59 = v3;
  v33 = sub_1C1425AC8();
  if (v34)
  {
    v35 = v33;
    v36 = v34;
    v62 = v1;
    if (qword_1ED793958 != -1)
      swift_once();
    v37 = sub_1C1426854();
    __swift_project_value_buffer(v37, (uint64_t)qword_1ED798668);
    swift_bridgeObjectRetain_n();
    v38 = sub_1C1426848();
    v39 = sub_1C1426C80();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = swift_slowAlloc();
      v58 = v21;
      v41 = (uint8_t *)v40;
      v42 = swift_slowAlloc();
      v60 = (char *)v35;
      v43 = v42;
      v69 = v42;
      v57 = v23;
      *(_DWORD *)v41 = 136315138;
      v56 = v41 + 4;
      swift_bridgeObjectRetain();
      v68 = sub_1C132AD90((uint64_t)v60, v36, &v69);
      v23 = v57;
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v38, v39, "Adding app intents extension bundle identifier as content source: %s", v41, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v43, -1, -1);
      v44 = v41;
      v21 = v58;
      MEMORY[0x1C3BAD3F4](v44, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_1C1425A74();
    v3 = v59;
    v67(v9, v63, v59);
    v46 = *(_QWORD *)(v16 + 16);
    v45 = *(_QWORD *)(v16 + 24);
    v47 = v46 + 1;
    if (v46 < v45 >> 1)
      goto LABEL_17;
LABEL_28:
    v16 = sub_1C136C1AC(v45 > 1, v47, 1, v16);
LABEL_17:
    *(_QWORD *)(v16 + 16) = v47;
    v23(v16 + v21 + v46 * v66, v9, v3);
    goto LABEL_18;
  }
  v3 = v59;
LABEL_18:
  v49 = v64;
  v48 = v65;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + v49) = v16;
  if (*(unsigned __int8 *)(v2 + *(int *)(v48 + 20) + 18) >= 2u)
  {
    v50 = v21;
    v51 = v61;
    v67(v61, *MEMORY[0x1E0C8F758], v3);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v16 = sub_1C136C1AC(0, *(_QWORD *)(v16 + 16) + 1, 1, v16);
    v53 = *(_QWORD *)(v16 + 16);
    v52 = *(_QWORD *)(v16 + 24);
    if (v53 >= v52 >> 1)
      v16 = sub_1C136C1AC(v52 > 1, v53 + 1, 1, v16);
    *(_QWORD *)(v16 + 16) = v53 + 1;
    v23(v16 + v50 + v53 * v66, v51, v3);
  }
  return v16;
}

uint64_t sub_1C140DE48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;

  v0 = sub_1C1425A80();
  v2 = v1;
  v3 = objc_allocWithZone(MEMORY[0x1E0CA5870]);
  swift_bridgeObjectRetain();

  return v0;
}

uint64_t sub_1C140DF90@<X0>(uint64_t a1@<X0>, void (*a2)(_QWORD, _QWORD, _QWORD)@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  void (*v21)(_QWORD, _QWORD, _QWORD);
  uint64_t v22;
  void (*v23)(_QWORD, _QWORD, _QWORD);
  int v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v29;
  void (*v30)(_QWORD, _QWORD, _QWORD);
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(_QWORD, _QWORD, _QWORD);
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  unint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(_QWORD, _QWORD, _QWORD);
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v49 = a2;
  v3 = sub_1C1425AEC();
  v47 = *(_QWORD *)(v3 - 8);
  v48 = v3;
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v43 - v7;
  v9 = sub_1C14253A8();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1C1425540();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v44 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v46 = (char *)&v43 - v18;
  MEMORY[0x1E0C80A78](v17);
  v20 = (uint64_t *)((char *)&v43 - v19);
  v21 = *(void (**)(_QWORD, _QWORD, _QWORD))(v14 + 16);
  v45 = a1;
  v22 = a1;
  v23 = v21;
  v21((char *)&v43 - v19, v22, v13);
  v24 = (*(uint64_t (**)(uint64_t *, uint64_t))(v14 + 88))(v20, v13);
  if (v24 == *MEMORY[0x1E0C8F768])
  {
    (*(void (**)(uint64_t *, uint64_t))(v14 + 96))(v20, v13);
    v25 = (uint64_t *)((char *)v20 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DBBE0) + 48));
    v26 = *v25;
    v27 = v25[1];
    (*(void (**)(char *, uint64_t *, uint64_t))(v10 + 32))(v12, v20, v9);
    sub_1C140D290((uint64_t)v50, 1, v27, (uint64_t)v8);
    sub_1C1337B70(v26, v27);
    sub_1C140E448((uint64_t)v12, (uint64_t)v8, (uint64_t)v49);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v8, v48);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  else
  {
    v30 = v49;
    v29 = (uint64_t)v50;
    if (v24 == *MEMORY[0x1E0C8F770])
    {
      (*(void (**)(uint64_t *, uint64_t))(v14 + 96))(v20, v13);
      v31 = *v20;
      v32 = v20[1];
      sub_1C140D290(v29, 1, v32, (uint64_t)v6);
      sub_1C1337B70(v31, v32);
      sub_1C140F200((uint64_t)v6, (uint64_t)v30);
      return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v6, v48);
    }
    else
    {
      if (qword_1ED793958 != -1)
        swift_once();
      v33 = sub_1C1426854();
      __swift_project_value_buffer(v33, (uint64_t)qword_1ED798668);
      v34 = v46;
      v35 = v23;
      v23(v46, v45, v13);
      v36 = sub_1C1426848();
      v37 = sub_1C1426C68();
      if (os_log_type_enabled(v36, v37))
      {
        v49 = v35;
        v38 = (uint8_t *)swift_slowAlloc();
        v51 = swift_slowAlloc();
        v53 = v51;
        *(_DWORD *)v38 = 136446210;
        v50 = v38 + 4;
        v49(v44, v34, v13);
        v39 = sub_1C1426AA0();
        v52 = sub_1C132AD90(v39, v40, &v53);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        v41 = *(void (**)(char *, uint64_t))(v14 + 8);
        v41(v34, v13);
        _os_log_impl(&dword_1C1324000, v36, v37, "Unknown input: %{public}s", v38, 0xCu);
        v42 = v51;
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v42, -1, -1);
        MEMORY[0x1C3BAD3F4](v38, -1, -1);
      }
      else
      {
        v41 = *(void (**)(char *, uint64_t))(v14 + 8);
        v41(v34, v13);
      }

      type metadata accessor for PermissionsError();
      sub_1C1329AD0(&qword_1EF6DBBD8, (uint64_t (*)(uint64_t))type metadata accessor for PermissionsError, (uint64_t)"%'f&");
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      return ((uint64_t (*)(uint64_t *, uint64_t))v41)(v20, v13);
    }
  }
}

uint64_t sub_1C140E448@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t);
  uint64_t *v52;
  int v53;
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  unsigned int *v60;
  uint64_t v61;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  NSObject *v71;
  os_log_type_t v72;
  uint8_t *v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, char *, uint64_t);
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  NSObject *v91;
  os_log_type_t v92;
  uint8_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  void (*v98)(char *, uint64_t);
  uint64_t v99;
  uint64_t v100;
  NSObject *v101;
  os_log_type_t v102;
  uint8_t *v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  void (*v107)(char *, uint64_t);
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;

  v119 = a3;
  v4 = v3;
  v128 = a2;
  v122 = a1;
  v127 = sub_1C14253A8();
  v121 = *(_QWORD *)(v127 - 8);
  v5 = MEMORY[0x1E0C80A78](v127);
  v108 = (char *)&v108 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v110 = (char *)&v108 - v8;
  MEMORY[0x1E0C80A78](v7);
  v123 = (char *)&v108 - v9;
  v10 = sub_1C1425384();
  v117 = *(_QWORD *)(v10 - 8);
  v118 = v10;
  v11 = MEMORY[0x1E0C80A78](v10);
  v116 = (char *)&v108 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v120 = (char **)((char *)&v108 - v13);
  v14 = sub_1C1425AEC();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v109 = (char *)&v108 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v16);
  v111 = (char *)&v108 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v112 = (char *)&v108 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v108 - v23;
  MEMORY[0x1E0C80A78](v22);
  v125 = (char *)&v108 - v25;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B90);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v108 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1C14253C0();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v32 = (char *)&v108 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for ContentSourceResolver();
  v115 = v4 + *(int *)(v33 + 28);
  sub_1C140FB64(v115, (uint64_t)v28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29) == 1)
  {
    v113 = v30;
    v114 = v29;
    sub_1C132C860((uint64_t)v28, &qword_1ED793B90);
    v124 = v15;
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    v126 = v14;
    v34(v24, v4, v14);
    v35 = v128;
    if ((sub_1C1425ABC() & 1) != 0)
    {
      v128 = sub_1C1425A80();
      v36 = v127;
    }
    else
    {
      v36 = v127;
      if (*(_BYTE *)(v4 + *(int *)(v33 + 20) + 17) != 1)
      {
        if (qword_1ED793958 != -1)
          swift_once();
        v68 = sub_1C1426854();
        __swift_project_value_buffer(v68, (uint64_t)qword_1ED798668);
        v69 = v112;
        v125 = v24;
        v70 = v126;
        v34(v112, (uint64_t)v24, v126);
        v71 = sub_1C1426848();
        v72 = sub_1C1426C68();
        if (os_log_type_enabled(v71, v72))
        {
          v73 = (uint8_t *)swift_slowAlloc();
          v74 = swift_slowAlloc();
          v130 = v74;
          *(_DWORD *)v73 = 136380675;
          v75 = sub_1C1425A80();
          v129 = sub_1C132AD90(v75, v76, &v130);
          sub_1C1426DB8();
          swift_bridgeObjectRelease();
          v77 = *(void (**)(char *, uint64_t))(v124 + 8);
          v77(v112, v70);
          _os_log_impl(&dword_1C1324000, v71, v72, "%{private}s is not entitled to set a custom push process", v73, 0xCu);
          swift_arrayDestroy();
          v35 = v128;
          MEMORY[0x1C3BAD3F4](v74, -1, -1);
          MEMORY[0x1C3BAD3F4](v73, -1, -1);
        }
        else
        {
          v77 = *(void (**)(char *, uint64_t))(v124 + 8);
          v77(v69, v70);
        }

        type metadata accessor for PermissionsError();
        sub_1C1329AD0(&qword_1EF6DBBD8, (uint64_t (*)(uint64_t))type metadata accessor for PermissionsError, (uint64_t)"%'f&");
        swift_allocError();
        v34(v88, v35, v70);
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        return ((uint64_t (*)(char *, uint64_t))v77)(v125, v70);
      }
      v128 = sub_1C1425A80();
    }
    v50 = v121;
    v51 = *(void (**)(char *, uint64_t, uint64_t))(v121 + 16);
    v52 = (uint64_t *)v123;
    v51(v123, v122, v36);
    v53 = (*(uint64_t (**)(uint64_t *, uint64_t))(v50 + 88))(v52, v36);
    if (v53 == *MEMORY[0x1E0C8F4C8])
    {
      v54 = v24;
      (*(void (**)(uint64_t *, uint64_t))(v50 + 96))(v52, v36);
      v55 = v52[1];
      v56 = (_QWORD *)(v4 + *(int *)(v33 + 20));
      v57 = v56[1];
      if (v57)
      {
        v58 = *v52;
        v59 = v120;
        *v120 = *v56;
        v59[1] = v57;
        v59[2] = v58;
        v59[3] = v55;
        v60 = (unsigned int *)MEMORY[0x1E0C8F498];
LABEL_18:
        v66 = v117;
        v65 = v118;
        (*(void (**)(_QWORD *, _QWORD, uint64_t))(v117 + 104))(v59, *v60, v118);
        swift_bridgeObjectRetain();
        v67 = v126;
        v24 = v54;
LABEL_25:
        (*(void (**)(char *, _QWORD *, uint64_t))(v66 + 16))(v116, v59, v65);
        v78 = v119;
        sub_1C1425390();
        (*(void (**)(_QWORD *, uint64_t))(v66 + 8))(v59, v65);
        (*(void (**)(char *, uint64_t))(v124 + 8))(v24, v67);
        v79 = v115;
        sub_1C132C860(v115, &qword_1ED793B90);
        v81 = v113;
        v80 = v114;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v113 + 16))(v79, v78, v114);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v81 + 56))(v79, 0, 1, v80);
        v82 = *MEMORY[0x1E0C8F750];
        v83 = sub_1C1425558();
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 104))(v78, v82, v83);
      }
      v84 = (void (*)(char *, char *, uint64_t))v34;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v85 = v126;
      if (qword_1ED793958 != -1)
        swift_once();
      v86 = sub_1C1426854();
      __swift_project_value_buffer(v86, (uint64_t)qword_1ED798668);
      v87 = v111;
LABEL_38:
      v84(v87, v54, v85);
      v101 = sub_1C1426848();
      v102 = sub_1C1426C68();
      if (os_log_type_enabled(v101, v102))
      {
        v103 = (uint8_t *)swift_slowAlloc();
        v104 = swift_slowAlloc();
        v130 = v104;
        *(_DWORD *)v103 = 136380675;
        v105 = sub_1C1425A80();
        v129 = sub_1C132AD90(v105, v106, &v130);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        v107 = *(void (**)(char *, uint64_t))(v124 + 8);
        v85 = v126;
        v107(v87, v126);
        _os_log_impl(&dword_1C1324000, v101, v102, "%{private}s does not specify an APS environment name", v103, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v104, -1, -1);
        MEMORY[0x1C3BAD3F4](v103, -1, -1);
      }
      else
      {
        v107 = *(void (**)(char *, uint64_t))(v124 + 8);
        v107(v87, v85);
      }

      type metadata accessor for PermissionsError();
      sub_1C1329AD0(&qword_1EF6DBBD8, (uint64_t (*)(uint64_t))type metadata accessor for PermissionsError, (uint64_t)"%'f&");
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      return ((uint64_t (*)(char *, uint64_t))v107)(v54, v85);
    }
    if (v53 == *MEMORY[0x1E0C8F4D0])
    {
      v54 = v24;
      v63 = (_QWORD *)(v4 + *(int *)(v33 + 20));
      v64 = v63[1];
      v59 = v120;
      if (v64)
      {
        *v120 = *v63;
        v59[1] = v64;
        v60 = (unsigned int *)MEMORY[0x1E0C8F490];
        goto LABEL_18;
      }
      v84 = (void (*)(char *, char *, uint64_t))v34;
      swift_bridgeObjectRelease();
      v85 = v126;
      if (qword_1ED793958 != -1)
        swift_once();
      v100 = sub_1C1426854();
      __swift_project_value_buffer(v100, (uint64_t)qword_1ED798668);
      v87 = v109;
      goto LABEL_38;
    }
    v67 = v126;
    v59 = v120;
    if (v53 == *MEMORY[0x1E0C8F4D8])
    {
      v66 = v117;
      v65 = v118;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v117 + 104))(v120, *MEMORY[0x1E0C8F4A0], v118);
      goto LABEL_25;
    }
    swift_bridgeObjectRelease();
    if (qword_1ED793958 != -1)
      swift_once();
    v89 = sub_1C1426854();
    __swift_project_value_buffer(v89, (uint64_t)qword_1ED798668);
    v90 = v110;
    v51(v110, v122, v36);
    v91 = sub_1C1426848();
    v92 = sub_1C1426C68();
    if (os_log_type_enabled(v91, v92))
    {
      v93 = (uint8_t *)swift_slowAlloc();
      v94 = swift_slowAlloc();
      v125 = v24;
      v95 = v94;
      v130 = v94;
      *(_DWORD *)v93 = 136446210;
      v128 = (uint64_t)(v93 + 4);
      v51(v108, (uint64_t)v90, v127);
      v96 = sub_1C1426AA0();
      v129 = sub_1C132AD90(v96, v97, &v130);
      sub_1C1426DB8();
      v36 = v127;
      swift_bridgeObjectRelease();
      v98 = *(void (**)(char *, uint64_t))(v121 + 8);
      v98(v90, v36);
      _os_log_impl(&dword_1C1324000, v91, v92, "Push type %{public}s is unknown", v93, 0xCu);
      swift_arrayDestroy();
      v99 = v95;
      v24 = v125;
      MEMORY[0x1C3BAD3F4](v99, -1, -1);
      MEMORY[0x1C3BAD3F4](v93, -1, -1);
    }
    else
    {
      v98 = *(void (**)(char *, uint64_t))(v121 + 8);
      v98(v90, v36);
    }

    type metadata accessor for PermissionsError();
    sub_1C1329AD0(&qword_1EF6DBBD8, (uint64_t (*)(uint64_t))type metadata accessor for PermissionsError, (uint64_t)"%'f&");
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v124 + 8))(v24, v67);
    return ((uint64_t (*)(char *, uint64_t))v98)(v123, v36);
  }
  else
  {
    v37 = v128;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v32, v28, v29);
    if (qword_1ED793958 != -1)
      swift_once();
    v38 = sub_1C1426854();
    __swift_project_value_buffer(v38, (uint64_t)qword_1ED798668);
    v39 = v15;
    v40 = v125;
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v125, v37, v14);
    v41 = sub_1C1426848();
    v42 = sub_1C1426C68();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = swift_slowAlloc();
      v124 = v39;
      v44 = (uint8_t *)v43;
      v45 = swift_slowAlloc();
      v113 = v30;
      v46 = v45;
      v130 = v45;
      v126 = v14;
      v114 = v29;
      *(_DWORD *)v44 = 136380675;
      v47 = sub_1C1425A80();
      v129 = sub_1C132AD90(v47, v48, &v130);
      v29 = v114;
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v124 + 8))(v40, v126);
      _os_log_impl(&dword_1C1324000, v41, v42, "%{private}s cannot request two push inputs", v44, 0xCu);
      swift_arrayDestroy();
      v49 = v46;
      v30 = v113;
      MEMORY[0x1C3BAD3F4](v49, -1, -1);
      MEMORY[0x1C3BAD3F4](v44, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v14);
    }

    type metadata accessor for PermissionsError();
    sub_1C1329AD0(&qword_1EF6DBBD8, (uint64_t (*)(uint64_t))type metadata accessor for PermissionsError, (uint64_t)"%'f&");
    swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v30 + 16))(v61, v32, v29);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v32, v29);
  }
}

uint64_t sub_1C140F200@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  char *v23;
  uint8_t *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  v6 = sub_1C1425AEC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_1C1425ABC() & 1) != 0)
    goto LABEL_4;
  if ((*(_BYTE *)(v3 + *(int *)(type metadata accessor for ContentSourceResolver() + 20) + 16) & 1) != 0)
  {
    v3 = a1;
LABEL_4:
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a2, v3, v6);
    v10 = *MEMORY[0x1E0C8F788];
    v11 = sub_1C1425558();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(a2, v10, v11);
  }
  if (qword_1ED793958 != -1)
    swift_once();
  v13 = sub_1C1426854();
  __swift_project_value_buffer(v13, (uint64_t)qword_1ED798668);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v14(v9, a1, v6);
  v15 = sub_1C1426848();
  v16 = sub_1C1426C68();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v26 = v14;
    v18 = (uint8_t *)v17;
    v25 = swift_slowAlloc();
    v28 = v25;
    *(_DWORD *)v18 = 136380675;
    v24 = v18 + 4;
    v19 = sub_1C1425A80();
    v27 = sub_1C132AD90(v19, v20, &v28);
    sub_1C1426DB8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    _os_log_impl(&dword_1C1324000, v15, v16, "%{private}s is not permitted to specify multiple process content sources", v18, 0xCu);
    v21 = v25;
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v21, -1, -1);
    v22 = v18;
    v14 = v26;
    MEMORY[0x1C3BAD3F4](v22, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }

  type metadata accessor for PermissionsError();
  sub_1C1329AD0(&qword_1EF6DBBD8, (uint64_t (*)(uint64_t))type metadata accessor for PermissionsError, (uint64_t)"%'f&");
  swift_allocError();
  v14(v23, a1, v6);
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_1C140F4E4()
{
  sub_1C1426F08();
  sub_1C14252D0();
  sub_1C1425AEC();
  sub_1C1329AD0(&qword_1ED793BE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C900E0], MEMORY[0x1E0C900F8]);
  sub_1C1427058();
  sub_1C14252D0();
  swift_bridgeObjectRelease();
  sub_1C14252D0();
  type metadata accessor for ContentSourceResolver();
  swift_bridgeObjectRetain();
  sub_1C140D5D8();
  sub_1C14252D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C14252D0();
  return 0;
}

uint64_t type metadata accessor for ContentSourceResolver()
{
  uint64_t result;

  result = qword_1ED7936F8;
  if (!qword_1ED7936F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C140F67C(void *a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v8;
  _OWORD v9[2];
  _BYTE v10[24];
  uint64_t v11;

  v2 = (void *)sub_1C1426A7C();
  v3 = objc_msgSend(a1, sel_valueForEntitlement_, v2);

  if (v3)
  {
    sub_1C1426DE8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  sub_1C1330398((uint64_t)v9, (uint64_t)v10);
  if (v11)
  {
    if (swift_dynamicCast())
      v4 = v8;
    else
      v4 = 0;
  }
  else
  {
    sub_1C132C860((uint64_t)v10, (uint64_t *)&unk_1ED797BB0);
    v4 = 0;
  }
  v5 = (void *)sub_1C1426A7C();
  objc_msgSend(a1, sel_hasEntitlement_, v5);

  v6 = (void *)sub_1C1426A7C();
  objc_msgSend(a1, sel_hasEntitlement_, v6);

  return v4;
}

uint64_t sub_1C140F824(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  void (*v22)(char *, char *, uint64_t);
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD v38[2];
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  void (*v47)(char *, char *, uint64_t);
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;

  v44 = a2;
  v4 = sub_1C1425AEC();
  v42 = *(_QWORD *)(v4 - 8);
  v43 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v41 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v40 = (char *)v38 - v7;
  v8 = sub_1C1425558();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10);
  v48 = (char *)v38 - v14;
  MEMORY[0x1E0C80A78](v13);
  v50 = (char *)v38 - v15;
  result = MEMORY[0x1E0DEE9D8];
  v51 = MEMORY[0x1E0DEE9D8];
  v17 = *(_QWORD *)(a1 + 16);
  if (v17)
  {
    v38[1] = v2;
    v18 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v49 = *(_QWORD *)(v9 + 72);
    v45 = v18;
    v19 = (char *)(a1 + v18);
    v47 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v46 = *MEMORY[0x1E0C8F788];
    v20 = v48;
    v39 = v12;
    while (1)
    {
      v21 = v50;
      v22 = v47;
      v47(v50, v19, v8);
      v22(v20, v21, v8);
      v23 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v20, v8);
      if (v23 != v46)
        break;
      (*(void (**)(char *, uint64_t))(v9 + 96))(v20, v8);
      v24 = v42;
      v25 = v43;
      v26 = v9;
      v27 = v40;
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v40, v20, v43);
      v28 = v41;
      (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v41, v44, v25);
      sub_1C1329AD0(&qword_1ED793610, (uint64_t (*)(uint64_t))MEMORY[0x1E0C900E0], MEMORY[0x1E0C900F0]);
      v29 = sub_1C1426A70();
      v30 = *(void (**)(char *, uint64_t))(v24 + 8);
      v30(v28, v25);
      v31 = v27;
      v9 = v26;
      v12 = v39;
      v32 = v25;
      v33 = v49;
      v30(v31, v32);
      if ((v29 & 1) == 0)
        goto LABEL_9;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v50, v8);
LABEL_4:
      v19 += v33;
      --v17;
      v20 = v48;
      if (!v17)
        return v51;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v20, v8);
LABEL_9:
    v34 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v34(v12, v50, v8);
    v35 = v51;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C1336964(0, *(_QWORD *)(v35 + 16) + 1, 1);
      v35 = v51;
    }
    v37 = *(_QWORD *)(v35 + 16);
    v36 = *(_QWORD *)(v35 + 24);
    if (v37 >= v36 >> 1)
    {
      sub_1C1336964(v36 > 1, v37 + 1, 1);
      v35 = v51;
    }
    *(_QWORD *)(v35 + 16) = v37 + 1;
    v33 = v49;
    v34((char *)(v35 + v45 + v37 * v49), v12, v8);
    v51 = v35;
    goto LABEL_4;
  }
  return result;
}

uint64_t sub_1C140FB64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1C140FBAC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1C1425AEC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    v10[16] = v11[16];
    v12 = *(_QWORD *)v11;
    v13 = *((_QWORD *)v11 + 1);
    *(_WORD *)(v10 + 17) = *(_WORD *)(v11 + 17);
    v14 = *(uint64_t *)((char *)a2 + v9);
    *(_QWORD *)v10 = v12;
    *((_QWORD *)v10 + 1) = v13;
    *(uint64_t *)((char *)a1 + v9) = v14;
    v15 = a3[7];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_1C14253C0();
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20(v17, 1, v18))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B90);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
  }
  return a1;
}

uint64_t sub_1C140FCF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v4 = sub_1C1425AEC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 28);
  v6 = sub_1C14253C0();
  v7 = *(_QWORD *)(v6 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  return result;
}

uint64_t sub_1C140FDA4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(const void *, uint64_t, uint64_t);
  uint64_t v20;

  v6 = sub_1C1425AEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = (uint64_t *)(a2 + v7);
  *(_BYTE *)(v9 + 16) = *((_BYTE *)v10 + 16);
  v11 = *v10;
  v12 = v10[1];
  *(_WORD *)(v9 + 17) = *(_WORD *)((char *)v10 + 17);
  v13 = *(_QWORD *)(a2 + v8);
  *(_QWORD *)v9 = v11;
  *(_QWORD *)(v9 + 8) = v12;
  *(_QWORD *)(a1 + v8) = v13;
  v14 = a3[7];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = sub_1C14253C0();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v19(v16, 1, v17))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B90);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  return a1;
}

uint64_t sub_1C140FEC4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  uint64_t v17;

  v6 = sub_1C1425AEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (_BYTE *)(a2 + v7);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = v9[16];
  *(_BYTE *)(v8 + 17) = v9[17];
  *(_BYTE *)(v8 + 18) = v9[18];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[7];
  v11 = (void *)(a1 + v10);
  v12 = (void *)(a2 + v10);
  v13 = sub_1C14253C0();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v8) = v15(v11, 1, v13);
  v16 = v15(v12, 1, v13);
  if (!(_DWORD)v8)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B90);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t sub_1C141004C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1C1425AEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  v11 = *(_QWORD *)(a2 + v8);
  *(_DWORD *)(v9 + 15) = *(_DWORD *)(v10 + 15);
  *(_QWORD *)(a1 + v8) = v11;
  v12 = a3[7];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = sub_1C14253C0();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B90);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  return a1;
}

uint64_t sub_1C141014C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  uint64_t v18;

  v6 = sub_1C1425AEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (_BYTE *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *(_QWORD *)v8 = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 16) = v9[16];
  *(_BYTE *)(v8 + 17) = v9[17];
  *(_BYTE *)(v8 + 18) = v9[18];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  v11 = a3[7];
  v12 = (void *)(a1 + v11);
  v13 = (void *)(a2 + v11);
  v14 = sub_1C14253C0();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v9) = v16(v12, 1, v14);
  v17 = v16(v13, 1, v14);
  if (!(_DWORD)v9)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B90);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t sub_1C14102BC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C14102C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_1C1425AEC();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B90);
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_1C1410374()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C1410380(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_1C1425AEC();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B90);
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1C1410428()
{
  unint64_t v0;
  unint64_t v1;

  sub_1C1425AEC();
  if (v0 <= 0x3F)
  {
    sub_1C14104C4();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_1C14104C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED793B98)
  {
    sub_1C14253C0();
    v0 = sub_1C1426DAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED793B98);
  }
}

uint64_t sub_1C141051C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ContentSourceResolver.Permissions(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  return a1;
}

__n128 __swift_memcpy19_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_DWORD *)(a1 + 15) = *(_DWORD *)(a2 + 15);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ContentSourceResolver.Permissions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContentSourceResolver.Permissions(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 19))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ContentSourceResolver.Permissions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_BYTE *)(result + 18) = 0;
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 19) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 19) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentSourceResolver.Permissions()
{
  return &type metadata for ContentSourceResolver.Permissions;
}

uint64_t sub_1C14106E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t sub_1C14106EC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_1C141079C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C1426E30();
    sub_1C1330EEC(0, &qword_1ED792838);
    sub_1C1418AF4();
    sub_1C1426C2C();
    v1 = v18;
    v17 = v19;
    v2 = v20;
    v3 = v21;
    v4 = v22;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v17 = a1 + 56;
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v3 = 0;
  }
  v16 = (unint64_t)(v2 + 64) >> 6;
  while (1)
  {
    v12 = v3;
    if ((v1 & 0x8000000000000000) == 0)
      break;
    if (!sub_1C1426E84())
      goto LABEL_31;
    sub_1C1330EEC(0, &qword_1ED792838);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v10 = v23;
    swift_unknownObjectRelease();
    if (!v23)
      goto LABEL_31;
LABEL_10:
    v11 = objc_msgSend(v10, sel_reason);

    if (v11 == (id)1)
      goto LABEL_31;
  }
  if (v4)
  {
    v8 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    v9 = v8 | (v3 << 6);
LABEL_9:
    v10 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v9);
    if (!v10)
      goto LABEL_31;
    goto LABEL_10;
  }
  v13 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v13 >= v16)
      goto LABEL_31;
    v14 = *(_QWORD *)(v17 + 8 * v13);
    ++v3;
    if (!v14)
    {
      v3 = v12 + 2;
      if (v12 + 2 >= v16)
        goto LABEL_31;
      v14 = *(_QWORD *)(v17 + 8 * v3);
      if (!v14)
      {
        v3 = v12 + 3;
        if (v12 + 3 >= v16)
          goto LABEL_31;
        v14 = *(_QWORD *)(v17 + 8 * v3);
        if (!v14)
        {
          v3 = v12 + 4;
          if (v12 + 4 >= v16)
            goto LABEL_31;
          v14 = *(_QWORD *)(v17 + 8 * v3);
          if (!v14)
          {
            v3 = v12 + 5;
            if (v12 + 5 >= v16)
              goto LABEL_31;
            v14 = *(_QWORD *)(v17 + 8 * v3);
            if (!v14)
            {
              v15 = v12 + 6;
              while (v16 != v15)
              {
                v14 = *(_QWORD *)(v17 + 8 * v15++);
                if (v14)
                {
                  v3 = v15 - 1;
                  goto LABEL_28;
                }
              }
LABEL_31:
              sub_1C133F908();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    v4 = (v14 - 1) & v14;
    v9 = __clz(__rbit64(v14)) + (v3 << 6);
    goto LABEL_9;
  }
  __break(1u);
}

void sub_1C1410A80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C1426E30();
    sub_1C1330EEC(0, &qword_1ED792838);
    sub_1C1418AF4();
    sub_1C1426C2C();
    v1 = v18;
    v17 = v19;
    v2 = v20;
    v3 = v21;
    v4 = v22;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v17 = a1 + 56;
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v3 = 0;
  }
  v16 = (unint64_t)(v2 + 64) >> 6;
  while (1)
  {
    v8 = v3;
    if ((v1 & 0x8000000000000000) == 0)
      break;
    if (!sub_1C1426E84())
      goto LABEL_34;
    sub_1C1330EEC(0, &qword_1ED792838);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v11 = v23;
    swift_unknownObjectRelease();
    if (!v23)
      goto LABEL_34;
LABEL_32:
    if (objc_msgSend(v11, sel_reason) == (id)1)
    {

    }
    else
    {
      v15 = objc_msgSend(v11, sel_reason);

      if (v15)
        goto LABEL_34;
    }
  }
  if (v4)
  {
    v9 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    v10 = v9 | (v3 << 6);
LABEL_31:
    v11 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v10);
    if (!v11)
      goto LABEL_34;
    goto LABEL_32;
  }
  v12 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v12 >= v16)
      goto LABEL_34;
    v13 = *(_QWORD *)(v17 + 8 * v12);
    ++v3;
    if (!v13)
    {
      v3 = v8 + 2;
      if (v8 + 2 >= v16)
        goto LABEL_34;
      v13 = *(_QWORD *)(v17 + 8 * v3);
      if (!v13)
      {
        v3 = v8 + 3;
        if (v8 + 3 >= v16)
          goto LABEL_34;
        v13 = *(_QWORD *)(v17 + 8 * v3);
        if (!v13)
        {
          v3 = v8 + 4;
          if (v8 + 4 >= v16)
            goto LABEL_34;
          v13 = *(_QWORD *)(v17 + 8 * v3);
          if (!v13)
          {
            v3 = v8 + 5;
            if (v8 + 5 >= v16)
              goto LABEL_34;
            v13 = *(_QWORD *)(v17 + 8 * v3);
            if (!v13)
            {
              v14 = v8 + 6;
              while (v16 != v14)
              {
                v13 = *(_QWORD *)(v17 + 8 * v14++);
                if (v13)
                {
                  v3 = v14 - 1;
                  goto LABEL_30;
                }
              }
LABEL_34:
              sub_1C133F908();
              return;
            }
          }
        }
      }
    }
LABEL_30:
    v4 = (v13 - 1) & v13;
    v10 = __clz(__rbit64(v13)) + (v3 << 6);
    goto LABEL_31;
  }
  __break(1u);
}

uint64_t sub_1C1410D78()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 104));
  __swift_destroy_boxed_opaque_existential_1(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112));
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + *(_QWORD *)(*(_QWORD *)v0 + 144));
  __swift_destroy_boxed_opaque_existential_1(v0 + *(_QWORD *)(*(_QWORD *)v0 + 152));
  return v0;
}

uint64_t sub_1C1410DE8()
{
  sub_1C1410D78();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ActivityAuthorizer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ActivityAuthorizer);
}

uint64_t sub_1C1410E18(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  uint64_t v6;
  uint64_t v7;

  if (!a2)
    return sub_1C14135E4(a1, a3);
  v5 = a2;
  sub_1C1410E9C(a1, (uint64_t)v5, a3);
  v7 = v6;

  return v7;
}

void sub_1C1410E9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v31[28];

  v31[15] = a3;
  v31[18] = a2;
  v31[13] = *v3;
  v4 = sub_1C1425A08();
  v5 = MEMORY[0x1E0C80A78](v4);
  v31[14] = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v31[12] = (char *)v31 - v8;
  MEMORY[0x1E0C80A78](v7);
  v31[9] = (char *)v31 - v9;
  v10 = sub_1C1425978();
  v31[21] = *(_QWORD *)(v10 - 8);
  v31[22] = v10;
  v11 = MEMORY[0x1E0C80A78](v10);
  v31[17] = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v31[19] = (char *)v31 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  MEMORY[0x1E0C80A78](v15);
  v31[16] = (char *)v31 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793BF0);
  MEMORY[0x1E0C80A78](v17);
  v18 = sub_1C1425AEC();
  v19 = MEMORY[0x1E0C80A78](v18);
  v20 = MEMORY[0x1E0C80A78](v19);
  v31[6] = (char *)v31 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v31[8] = (char *)v31 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v31[7] = (char *)v31 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v31[10] = (char *)v31 - v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v31[11] = (char *)v31 - v29;
  MEMORY[0x1E0C80A78](v28);
  sub_1C142590C();
  __asm { BR              X10 }
}

uint64_t sub_1C1411140(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  void *v29;
  unsigned int v30;
  void *v31;
  unsigned int v32;
  char v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  char v36;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  NSObject *v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  const char *v52;
  uint64_t v53;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  NSObject *v65;
  NSObject *v66;
  os_log_type_t v67;
  _BOOL4 v68;
  uint64_t v69;
  uint8_t *v70;
  uint64_t v71;
  unint64_t v72;
  void *v73;
  uint64_t v74;
  unint64_t v75;
  void *v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  __int16 v86;
  unsigned __int8 *v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  NSObject *v92;
  NSObject *v93;
  os_log_type_t v94;
  _BOOL4 v95;
  uint64_t v96;
  uint8_t *v97;
  uint64_t v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  char v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  NSObject *v108;
  os_log_type_t v109;
  uint8_t *v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  const char *v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void *v121;
  unsigned int v122;
  uint64_t v123;
  uint64_t v124;
  NSObject *v125;
  os_log_type_t v126;
  uint8_t *v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  void (*v131)(uint64_t, uint64_t);
  uint64_t v132;
  uint64_t v133;
  void (*v134)(uint64_t, uint64_t, uint64_t);
  uint64_t v135;
  uint64_t v136;
  NSObject *v137;
  os_log_type_t v138;
  uint8_t *v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  void (*v143)(uint64_t, uint64_t);
  uint64_t v144;
  id v145;
  NSObject *v146;
  os_log_type_t v147;
  uint64_t v148;
  uint64_t v149;
  unsigned int v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  NSObject *v160;
  os_log_type_t v161;
  uint64_t v162;
  uint8_t *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint8_t *v170;
  uint64_t v171;
  NSObject *v172;
  os_log_type_t v173;
  uint8_t *v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  unsigned int *v181;
  uint64_t v182;
  NSObject *v183;
  os_log_type_t v184;
  _BOOL4 v185;
  uint64_t v186;
  uint8_t *v187;
  uint64_t v188;
  uint64_t v189;
  unint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char v197;
  uint64_t v198;
  NSObject *v199;
  os_log_type_t v200;
  uint64_t v201;
  uint8_t *v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t v205;
  uint64_t v206;
  NSObject *v207;
  os_log_type_t v208;
  uint64_t v209;
  uint8_t *v210;
  uint64_t v211;
  uint64_t v212;
  unint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  id v219;
  NSObject *v220;
  os_log_type_t v221;
  uint64_t v222;
  uint64_t v223;
  unsigned int v224;
  uint64_t v225;
  _QWORD v226[16];

  sub_1C13282B4(v3, a2);
  v13 = sub_1C142593C();
  sub_1C142587C();
  if ((v13 & 1) != 0)
  {
    if ((MEMORY[0x1C3BAB540]() & 1) == 0)
    {
LABEL_3:
      if (qword_1ED793978 != -1)
        swift_once();
      v14 = sub_1C1426854();
      __swift_project_value_buffer(v14, (uint64_t)qword_1ED7985B0);
      v16 = *(_QWORD *)(v12 - 136);
      v15 = *(_QWORD *)(v12 - 128);
      v17 = *(_QWORD *)(v12 - 152);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v17, v6, v15);
      v18 = sub_1C1426848();
      v19 = sub_1C1426C68();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc();
        v21 = swift_slowAlloc();
        *(_QWORD *)(v12 - 120) = v21;
        *(_DWORD *)v20 = 136380675;
        sub_1C1329AD0(&qword_1EF6DBE28, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FE28], MEMORY[0x1E0C8FE48]);
        v22 = sub_1C1427058();
        *(_QWORD *)(v12 - 96) = sub_1C132AD90(v22, v23, (uint64_t *)(v12 - 120));
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v15);
        _os_log_impl(&dword_1C1324000, v18, v19, "Live Activities are not supported for this type of request: %{private}s", v20, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v21, -1, -1);
        MEMORY[0x1C3BAD3F4](v20, -1, -1);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v15);
      }

      v26 = sub_1C142563C();
      sub_1C1329AD0(&qword_1EF6DC2E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FA18], MEMORY[0x1E0C8FA20]);
      v27 = swift_allocError();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v53, *MEMORY[0x1E0C8F9D0], v26);
      return v27;
    }
  }
  else if ((MEMORY[0x1C3BAB54C]() & 1) == 0)
  {
    goto LABEL_3;
  }
  *(_QWORD *)(v12 - 152) = v4;
  *(_QWORD *)(v12 - 288) = v5;
  v24 = v6;
  v25 = *(id *)(v12 - 160);
  sub_1C1329530(v25);
  *(_QWORD *)(v12 - 264) = v8;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 56))(v11, 0, 1, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v10, v11, v9);
  v28 = sub_1C14258DC();
  if ((v28 & 1) != 0)
  {
    v29 = (void *)sub_1C1426A7C();
    v30 = objc_msgSend(v25, sel_hasEntitlement_, v29);

    if (!v30)
    {
      v46 = v2;
      if (qword_1ED793978 != -1)
        swift_once();
      v47 = sub_1C1426854();
      __swift_project_value_buffer(v47, (uint64_t)qword_1ED7985B0);
      v48 = v25;
      v49 = sub_1C1426848();
      v50 = sub_1C1426C68();
      if (os_log_type_enabled(v49, v50))
      {
        v51 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v51 = 67240192;
        *(_DWORD *)(v12 - 120) = -[NSObject pid](v48, sel_pid);
        sub_1C1426DB8();

        v52 = "Requester is not entitled to request ephemeral activities: %{public}d";
LABEL_34:
        _os_log_impl(&dword_1C1324000, v49, v50, v52, v51, 8u);
        MEMORY[0x1C3BAD3F4](v51, -1, -1);
LABEL_36:

        v61 = sub_1C142563C();
        sub_1C1329AD0(&qword_1EF6DC2E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FA18], MEMORY[0x1E0C8FA20]);
        v27 = swift_allocError();
        (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v61 - 8) + 104))(v62, *MEMORY[0x1E0C8F9C0], v61);
        v59 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
        goto LABEL_37;
      }
LABEL_35:

      v49 = v48;
      goto LABEL_36;
    }
  }
  if ((sub_1C14258F4() & 1) != 0)
  {
    v31 = (void *)sub_1C1426A7C();
    v32 = objc_msgSend(v25, sel_hasEntitlement_, v31);

    if (!v32)
    {
      v46 = v2;
      if (qword_1ED793978 != -1)
        swift_once();
      v60 = sub_1C1426854();
      __swift_project_value_buffer(v60, (uint64_t)qword_1ED7985B0);
      v48 = v25;
      v49 = sub_1C1426848();
      v50 = sub_1C1426C68();
      if (os_log_type_enabled(v49, v50))
      {
        v51 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v51 = 67240192;
        *(_DWORD *)(v12 - 120) = -[NSObject pid](v48, sel_pid);
        sub_1C1426DB8();

        v52 = "Requester is not entitled to request unbounded activities: %{public}d";
        goto LABEL_34;
      }
      goto LABEL_35;
    }
  }
  *(_QWORD *)(v12 - 160) = v25;
  v33 = *(_BYTE *)(*(_QWORD *)(v12 - 144) + *(_QWORD *)(**(_QWORD **)(v12 - 144) + 128));
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 136) + 16);
  v35 = *(_QWORD *)(v12 - 176);
  v34(v35, v24, *(_QWORD *)(v12 - 128));
  *(_QWORD *)(v12 - 296) = v9;
  if ((v33 & 1) != 0)
    v36 = 1;
  else
    v36 = sub_1C14258DC();
  v37 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 136) + 8);
  v38 = v35;
  v39 = *(_QWORD *)(v12 - 128);
  v37(v38, v39);
  v40 = *(_QWORD *)(v12 - 152);
  v34(v40, v24, v39);
  if ((v36 & 1) != 0)
  {
    v37(v40, v39);
  }
  else
  {
    v41 = sub_1C14258E8();
    v37(v40, v39);
    if ((v41 & 1) == 0)
    {
      v63 = v2;
      if (qword_1ED793978 != -1)
        swift_once();
      v64 = sub_1C1426854();
      __swift_project_value_buffer(v64, (uint64_t)qword_1ED7985B0);
      v65 = *(id *)(v12 - 160);
      v66 = sub_1C1426848();
      v67 = sub_1C1426C68();
      v68 = os_log_type_enabled(v66, v67);
      v69 = *(_QWORD *)(v12 - 296);
      if (v68)
      {
        v70 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v70 = 67240192;
        *(_DWORD *)(v12 - 120) = -[NSObject pid](v65, sel_pid);
        sub_1C1426DB8();

        _os_log_impl(&dword_1C1324000, v66, v67, "Persistence is not functional and activity is not ephemeral: %{public}d", v70, 8u);
        MEMORY[0x1C3BAD3F4](v70, -1, -1);
      }
      else
      {

        v66 = v65;
      }

      v89 = sub_1C142563C();
      sub_1C1329AD0(&qword_1EF6DC2E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FA18], MEMORY[0x1E0C8FA20]);
      v27 = swift_allocError();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v89 - 8) + 104))(v90, *MEMORY[0x1E0C8F9E8], v89);
      (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v10, v69);
      return v27;
    }
  }
  v42 = *(void **)(v12 - 160);
  if ((sub_1C1414A14(*(_QWORD *)(v12 - 184), v42) & 1) != 0)
  {
    v43 = sub_1C142563C();
    sub_1C1329AD0(&qword_1EF6DC2E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FA18], MEMORY[0x1E0C8FA20]);
    v44 = v2;
    v27 = swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v43 - 8) + 104))(v45, *MEMORY[0x1E0C8FA00], v43);
    (*(void (**)(uint64_t, _QWORD))(v44 + 8))(v10, *(_QWORD *)(v12 - 296));
    return v27;
  }
  v55 = sub_1C1415024(v42);
  v9 = *(_QWORD *)(v12 - 296);
  if ((v55 & 1) != 0)
  {
    v56 = sub_1C142563C();
    sub_1C1329AD0(&qword_1EF6DC2E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FA18], MEMORY[0x1E0C8FA20]);
    v57 = v2;
    v27 = swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v56 - 8) + 104))(v58, *MEMORY[0x1E0C8F9F0], v56);
    v59 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
LABEL_37:
    v59(v10, v9);
    return v27;
  }
  *(_QWORD *)(v12 - 136) = v7;
  *(_QWORD *)(v12 - 128) = v10;
  v71 = sub_1C14258D0();
  v73 = *(void **)(v12 - 160);
  *(_QWORD *)(v12 - 272) = v2;
  if (v72)
  {
    v74 = v71;
    v75 = v72;
    v76 = (void *)sub_1C1426A7C();
    v77 = objc_msgSend(v73, sel_hasEntitlement_, v76);

    if (!v77)
    {
      swift_bridgeObjectRelease();
      if (qword_1ED793978 != -1)
        swift_once();
      v91 = sub_1C1426854();
      __swift_project_value_buffer(v91, (uint64_t)qword_1ED7985B0);
      v92 = v73;
      v93 = sub_1C1426848();
      v94 = sub_1C1426C68();
      v95 = os_log_type_enabled(v93, v94);
      v96 = *(_QWORD *)(v12 - 128);
      if (v95)
      {
        v97 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v97 = 67240192;
        *(_DWORD *)(v12 - 120) = -[NSObject pid](v92, sel_pid);
        sub_1C1426DB8();

        _os_log_impl(&dword_1C1324000, v93, v94, "Requester is not entitled to reconnect ephemeral activities: %{public}d", v97, 8u);
        MEMORY[0x1C3BAD3F4](v97, -1, -1);
      }
      else
      {

        v93 = v92;
      }

      v100 = sub_1C142563C();
      sub_1C1329AD0(&qword_1EF6DC2E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FA18], MEMORY[0x1E0C8FA20]);
      v27 = swift_allocError();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v100 - 8) + 104))(v101, *MEMORY[0x1E0C8F9C0], v100);
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 272) + 8))(v96, v9);
      return v27;
    }
    v79 = v9;
    *(_QWORD *)(v12 - 120) = 46;
    *(_QWORD *)(v12 - 112) = 0xE100000000000000;
    MEMORY[0x1E0C80A78](v78);
    v226[2] = v12 - 120;
    swift_bridgeObjectRetain_n();
    v80 = (_QWORD *)sub_1C1415B74(0x7FFFFFFFFFFFFFFFLL, 1, sub_1C1418B4C, (uint64_t)v226, v74, v75);
    swift_bridgeObjectRelease();
    if (v80[2] != 2)
    {
      swift_bridgeObjectRelease();
      if (qword_1ED793978 != -1)
        swift_once();
      v98 = sub_1C1426854();
      __swift_project_value_buffer(v98, (uint64_t)qword_1ED7985B0);
      v99 = v73;
      goto LABEL_121;
    }
    v81 = v80[8];
    v82 = v80[9];
    v84 = v80[10];
    v83 = v80[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if ((v82 ^ v81) >> 14)
    {
      v85 = sub_1C1417058(v81, v82, v84, v83, 10);
      if ((v86 & 0x100) == 0)
      {
        v87 = (unsigned __int8 *)v85;
        v88 = v86;
        swift_bridgeObjectRelease();
        if ((v88 & 1) != 0)
          goto LABEL_118;
        goto LABEL_61;
      }
      v87 = sub_1C1416830(v81, v82, v84, v83, 10);
      v103 = v102;
      swift_bridgeObjectRelease();
      if ((v103 & 1) == 0)
      {
LABEL_61:
        v2 = *(_QWORD *)(v12 - 272);
        v73 = *(void **)(v12 - 160);
        if (v87 != (unsigned __int8 *)(int)objc_msgSend(v73, sel_pid))
        {
          if (qword_1ED793978 != -1)
            swift_once();
          v144 = sub_1C1426854();
          __swift_project_value_buffer(v144, (uint64_t)qword_1ED7985B0);
          v145 = v73;
          swift_bridgeObjectRetain();
          v146 = sub_1C1426848();
          v147 = sub_1C1426C68();
          if (os_log_type_enabled(v146, v147))
          {
            v148 = swift_slowAlloc();
            v149 = swift_slowAlloc();
            *(_QWORD *)(v12 - 120) = v149;
            *(_DWORD *)v148 = 136446466;
            swift_bridgeObjectRetain();
            *(_QWORD *)(v12 - 96) = sub_1C132AD90(v74, v75, (uint64_t *)(v12 - 120));
            sub_1C1426DB8();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v148 + 12) = 1026;
            v150 = objc_msgSend(v145, sel_pid);

            *(_DWORD *)(v12 - 96) = v150;
            sub_1C1426DB8();

            _os_log_impl(&dword_1C1324000, v146, v147, "Requester is not permitted to reconnect activity %{public}s: %{public}d", (uint8_t *)v148, 0x12u);
            swift_arrayDestroy();
            MEMORY[0x1C3BAD3F4](v149, -1, -1);
            MEMORY[0x1C3BAD3F4](v148, -1, -1);

          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          v178 = sub_1C142563C();
          sub_1C1329AD0(&qword_1EF6DC2E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FA18], MEMORY[0x1E0C8FA20]);
          v27 = swift_allocError();
          v180 = v179;
          v181 = (unsigned int *)MEMORY[0x1E0C8F9F8];
          goto LABEL_125;
        }
        swift_bridgeObjectRelease();
        v9 = v79;
        goto LABEL_63;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
LABEL_118:
    if (qword_1ED793978 != -1)
      swift_once();
    v218 = sub_1C1426854();
    __swift_project_value_buffer(v218, (uint64_t)qword_1ED7985B0);
    v99 = *(id *)(v12 - 160);
LABEL_121:
    v219 = v99;
    swift_bridgeObjectRetain();
    v220 = sub_1C1426848();
    v221 = sub_1C1426C68();
    if (os_log_type_enabled(v220, v221))
    {
      v222 = swift_slowAlloc();
      v223 = swift_slowAlloc();
      *(_QWORD *)(v12 - 120) = v223;
      *(_DWORD *)v222 = 136446466;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v12 - 96) = sub_1C132AD90(v74, v75, (uint64_t *)(v12 - 120));
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v222 + 12) = 1026;
      v224 = objc_msgSend(v219, sel_pid);

      *(_DWORD *)(v12 - 96) = v224;
      sub_1C1426DB8();

      _os_log_impl(&dword_1C1324000, v220, v221, "Requester provided malformed activity identifier %{public}s: %{public}d", (uint8_t *)v222, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v223, -1, -1);
      MEMORY[0x1C3BAD3F4](v222, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v178 = sub_1C142563C();
    sub_1C1329AD0(&qword_1EF6DC2E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FA18], MEMORY[0x1E0C8FA20]);
    v27 = swift_allocError();
    v180 = v225;
    v181 = (unsigned int *)MEMORY[0x1E0C8F9B8];
LABEL_125:
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v178 - 8) + 104))(v180, *v181, v178);
    (*(void (**)(_QWORD, uint64_t))(*(_QWORD *)(v12 - 272) + 8))(*(_QWORD *)(v12 - 128), v79);
    return v27;
  }
LABEL_63:
  v104 = *(_QWORD *)(v12 - 184);
  if ((sub_1C141531C(v104) & 1) == 0)
  {
    v10 = *(_QWORD *)(v12 - 128);
    if (qword_1ED793978 != -1)
      swift_once();
    v115 = sub_1C1426854();
    __swift_project_value_buffer(v115, (uint64_t)qword_1ED7985B0);
    v107 = *(_QWORD *)(v12 - 192);
    sub_1C1338F24(*(_QWORD *)(v12 - 184), v107, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
    v108 = sub_1C1426848();
    v109 = sub_1C1426C68();
    if (os_log_type_enabled(v108, v109))
    {
      v110 = (uint8_t *)swift_slowAlloc();
      v111 = swift_slowAlloc();
      *(_QWORD *)(v12 - 120) = v111;
      *(_DWORD *)v110 = 136446210;
      v116 = sub_1C14259E4();
      *(_QWORD *)(v12 - 96) = sub_1C132AD90(v116, v117, (uint64_t *)(v12 - 120));
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      sub_1C1339004(v107, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
      v114 = "Target does not have user consent to request activities %{public}s";
      goto LABEL_73;
    }
LABEL_74:
    sub_1C1339004(v107, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
    goto LABEL_75;
  }
  v105 = sub_1C14154A4(v104);
  v10 = *(_QWORD *)(v12 - 128);
  if ((v105 & 1) != 0)
  {
    if (qword_1ED793978 != -1)
      swift_once();
    v106 = sub_1C1426854();
    __swift_project_value_buffer(v106, (uint64_t)qword_1ED7985B0);
    v107 = *(_QWORD *)(v12 - 208);
    sub_1C1338F24(*(_QWORD *)(v12 - 184), v107, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
    v108 = sub_1C1426848();
    v109 = sub_1C1426C68();
    if (os_log_type_enabled(v108, v109))
    {
      v110 = (uint8_t *)swift_slowAlloc();
      v111 = swift_slowAlloc();
      *(_QWORD *)(v12 - 120) = v111;
      *(_DWORD *)v110 = 136380675;
      v112 = sub_1C14259E4();
      *(_QWORD *)(v12 - 96) = sub_1C132AD90(v112, v113, (uint64_t *)(v12 - 120));
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      sub_1C1339004(v107, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
      v114 = "Scene target is restricted: %{private}s";
LABEL_73:
      _os_log_impl(&dword_1C1324000, v108, v109, v114, v110, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v111, -1, -1);
      MEMORY[0x1C3BAD3F4](v110, -1, -1);
LABEL_75:

      v118 = sub_1C142563C();
      sub_1C1329AD0(&qword_1EF6DC2E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FA18], MEMORY[0x1E0C8FA20]);
      v27 = swift_allocError();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v118 - 8) + 104))(v119, *MEMORY[0x1E0C8FA10], v118);
      v59 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 272) + 8);
      goto LABEL_37;
    }
    goto LABEL_74;
  }
  v120 = v2;
  v121 = (void *)sub_1C1426A7C();
  v122 = objc_msgSend(v73, sel_hasEntitlement_, v121);

  if (v122)
  {
    if (qword_1ED793978 != -1)
      swift_once();
    v123 = sub_1C1426854();
    __swift_project_value_buffer(v123, (uint64_t)qword_1ED7985B0);
    v124 = *(_QWORD *)(v12 - 216);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v120 + 16))(v124, v10, v9);
    v125 = sub_1C1426848();
    v126 = sub_1C1426C80();
    if (os_log_type_enabled(v125, v126))
    {
      v127 = (uint8_t *)swift_slowAlloc();
      v128 = swift_slowAlloc();
      *(_QWORD *)(v12 - 120) = v128;
      *(_DWORD *)v127 = 136380675;
      sub_1C1329AD0(&qword_1ED793BE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C900E0], MEMORY[0x1E0C900F8]);
      v129 = sub_1C1427058();
      *(_QWORD *)(v12 - 96) = sub_1C132AD90(v129, v130, (uint64_t *)(v12 - 120));
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      v131 = *(void (**)(uint64_t, uint64_t))(v120 + 8);
      v131(*(_QWORD *)(v12 - 216), v9);
      _os_log_impl(&dword_1C1324000, v125, v126, "Requester is entitled to create activities: %{private}s", v127, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v128, -1, -1);
      MEMORY[0x1C3BAD3F4](v127, -1, -1);
    }
    else
    {
      v131 = *(void (**)(uint64_t, uint64_t))(v120 + 8);
      v131(v124, v9);
    }

    (*(void (**)(_QWORD, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v12 - 200) + 88) + 16))(*(_QWORD *)(v12 - 136), *(_QWORD *)(v12 - 288), v10, *(_QWORD *)(*(_QWORD *)(v12 - 200) + 80));
    v131(v10, v9);
    return 0;
  }
  else
  {
    if (qword_1ED793978 != -1)
      swift_once();
    v132 = sub_1C1426854();
    v133 = __swift_project_value_buffer(v132, (uint64_t)qword_1ED7985B0);
    v134 = *(void (**)(uint64_t, uint64_t, uint64_t))(v120 + 16);
    v135 = *(_QWORD *)(v12 - 224);
    v136 = *(_QWORD *)(v12 - 128);
    *(_QWORD *)(v12 - 152) = v134;
    v134(v135, v136, v9);
    v137 = sub_1C1426848();
    v138 = sub_1C1426C80();
    if (os_log_type_enabled(v137, v138))
    {
      v139 = (uint8_t *)swift_slowAlloc();
      v140 = swift_slowAlloc();
      *(_QWORD *)(v12 - 120) = v140;
      *(_QWORD *)(v12 - 168) = v133;
      *(_DWORD *)v139 = 136380675;
      sub_1C1329AD0(&qword_1ED793BE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C900E0], MEMORY[0x1E0C900F8]);
      v141 = sub_1C1427058();
      *(_QWORD *)(v12 - 96) = sub_1C132AD90(v141, v142, (uint64_t *)(v12 - 120));
      v133 = *(_QWORD *)(v12 - 168);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      v143 = *(void (**)(uint64_t, uint64_t))(v120 + 8);
      v143(v135, v9);
      _os_log_impl(&dword_1C1324000, v137, v138, "Requester is not entitled to create activities: %{private}s", v139, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v140, -1, -1);
      MEMORY[0x1C3BAD3F4](v139, -1, -1);
    }
    else
    {
      v143 = *(void (**)(uint64_t, uint64_t))(v120 + 8);
      v143(v135, v9);
    }

    v151 = *(_QWORD *)(v12 - 288);
    v152 = *(_QWORD *)(v12 - 144);
    v153 = *(_QWORD *)(v12 - 200);
    v154 = *(_QWORD *)(v12 - 184);
    if ((sub_1C14175A0(v154) & 1) != 0)
    {
      v155 = v152 + *(_QWORD *)(*(_QWORD *)v152 + 104);
      v157 = *(_QWORD *)(v153 + 80);
      v156 = *(_QWORD *)(v153 + 88);
      v158 = *(_QWORD *)(v12 - 128);
      if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v156 + 8))(v158, v157, v156) & 1) != 0)
      {
        v159 = *(_QWORD *)(v12 - 248);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 - 152))(v159, v158, v9);
        v160 = sub_1C1426848();
        v161 = sub_1C1426C80();
        if (os_log_type_enabled(v160, v161))
        {
          v162 = swift_slowAlloc();
          *(_QWORD *)(v12 - 176) = v156;
          v163 = (uint8_t *)v162;
          v164 = swift_slowAlloc();
          *(_QWORD *)(v12 - 184) = v155;
          v165 = v9;
          v166 = v164;
          *(_QWORD *)(v12 - 120) = v164;
          *(_QWORD *)(v12 - 144) = v157;
          *(_DWORD *)v163 = 136380675;
          *(_QWORD *)(v12 - 192) = v143;
          sub_1C1329AD0(&qword_1ED793BE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C900E0], MEMORY[0x1E0C900F8]);
          v167 = sub_1C1427058();
          *(_QWORD *)(v12 - 96) = sub_1C132AD90(v167, v168, (uint64_t *)(v12 - 120));
          v143 = *(void (**)(uint64_t, uint64_t))(v12 - 192);
          v157 = *(_QWORD *)(v12 - 144);
          sub_1C1426DB8();
          swift_bridgeObjectRelease();
          v143(v159, v165);
          _os_log_impl(&dword_1C1324000, v160, v161, "Requester is targeted by an activity request assertion: %{private}s", v163, 0xCu);
          swift_arrayDestroy();
          v169 = v166;
          v9 = v165;
          MEMORY[0x1C3BAD3F4](v169, -1, -1);
          v170 = v163;
          v156 = *(_QWORD *)(v12 - 176);
          MEMORY[0x1C3BAD3F4](v170, -1, -1);
        }
        else
        {
          v143(v159, v9);
        }

        v194 = *(_QWORD *)(v12 - 128);
        (*(void (**)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(v156 + 16))(*(_QWORD *)(v12 - 136), v151, v194, v157, v156);
        v195 = v194;
        v196 = v9;
      }
      else
      {
        *(_QWORD *)(v12 - 184) = v155;
        v182 = *(_QWORD *)(v12 - 240);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 - 152))(v182, v158, v9);
        v183 = sub_1C1426848();
        v184 = sub_1C1426C80();
        v185 = os_log_type_enabled(v183, v184);
        *(_QWORD *)(v12 - 144) = v157;
        if (v185)
        {
          v186 = swift_slowAlloc();
          *(_QWORD *)(v12 - 168) = v133;
          v187 = (uint8_t *)v186;
          v188 = swift_slowAlloc();
          *(_QWORD *)(v12 - 120) = v188;
          *(_QWORD *)(v12 - 192) = v143;
          *(_DWORD *)v187 = 136380675;
          sub_1C1329AD0(&qword_1ED793BE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C900E0], MEMORY[0x1E0C900F8]);
          v189 = sub_1C1427058();
          *(_QWORD *)(v12 - 96) = sub_1C132AD90(v189, v190, (uint64_t *)(v12 - 120));
          v143 = *(void (**)(uint64_t, uint64_t))(v12 - 192);
          sub_1C1426DB8();
          swift_bridgeObjectRelease();
          v143(v182, v9);
          _os_log_impl(&dword_1C1324000, v183, v184, "Requester is not targeted by an activity request assertion: %{private}s", v187, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3BAD3F4](v188, -1, -1);
          MEMORY[0x1C3BAD3F4](v187, -1, -1);
        }
        else
        {
          v143(v182, v9);
        }

        v197 = sub_1C1417984(*(void **)(v12 - 160));
        *(_QWORD *)(v12 - 176) = v156;
        if ((v197 & 1) == 0)
        {
          v206 = *(_QWORD *)(v12 - 264);
          (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 - 152))(v206, *(_QWORD *)(v12 - 128), v9);
          v207 = sub_1C1426848();
          v208 = sub_1C1426C80();
          v209 = v9;
          if (os_log_type_enabled(v207, v208))
          {
            v210 = (uint8_t *)swift_slowAlloc();
            v211 = swift_slowAlloc();
            *(_QWORD *)(v12 - 120) = v211;
            *(_DWORD *)v210 = 136380675;
            sub_1C1329AD0(&qword_1ED793BE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C900E0], MEMORY[0x1E0C900F8]);
            v212 = sub_1C1427058();
            *(_QWORD *)(v12 - 96) = sub_1C132AD90(v212, v213, (uint64_t *)(v12 - 120));
            sub_1C1426DB8();
            swift_bridgeObjectRelease();
            v143(v206, v209);
            _os_log_impl(&dword_1C1324000, v207, v208, "Requester is not foreground: %{private}s", v210, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1C3BAD3F4](v211, -1, -1);
            MEMORY[0x1C3BAD3F4](v210, -1, -1);
          }
          else
          {
            v143(v206, v9);
          }

          v215 = *(_QWORD *)(v12 - 128);
          (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v12 - 176) + 24))(v215, *(_QWORD *)(v12 - 144));
          v216 = sub_1C142563C();
          sub_1C1329AD0(&qword_1EF6DC2E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FA18], MEMORY[0x1E0C8FA20]);
          v27 = swift_allocError();
          (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v216 - 8) + 104))(v217, *MEMORY[0x1E0C8F9C8], v216);
          v143(v215, v209);
          return v27;
        }
        v198 = *(_QWORD *)(v12 - 256);
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 - 152))(v198, *(_QWORD *)(v12 - 128), v9);
        v199 = sub_1C1426848();
        v200 = sub_1C1426C80();
        v201 = v9;
        if (os_log_type_enabled(v199, v200))
        {
          v202 = (uint8_t *)swift_slowAlloc();
          v203 = swift_slowAlloc();
          *(_QWORD *)(v12 - 120) = v203;
          *(_DWORD *)v202 = 136380675;
          sub_1C1329AD0(&qword_1ED793BE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C900E0], MEMORY[0x1E0C900F8]);
          v204 = sub_1C1427058();
          *(_QWORD *)(v12 - 96) = sub_1C132AD90(v204, v205, (uint64_t *)(v12 - 120));
          sub_1C1426DB8();
          swift_bridgeObjectRelease();
          v143(v198, v201);
          _os_log_impl(&dword_1C1324000, v199, v200, "Requester is foreground: %{private}s", v202, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C3BAD3F4](v203, -1, -1);
          MEMORY[0x1C3BAD3F4](v202, -1, -1);
        }
        else
        {
          v143(v198, v9);
        }

        v214 = *(_QWORD *)(v12 - 128);
        (*(void (**)(_QWORD, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v12 - 176) + 16))(*(_QWORD *)(v12 - 136), *(_QWORD *)(v12 - 288), v214, *(_QWORD *)(v12 - 144));
        v195 = v214;
        v196 = v201;
      }
      v143(v195, v196);
      return 0;
    }
    v171 = *(_QWORD *)(v12 - 232);
    sub_1C1338F24(v154, v171, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
    v172 = sub_1C1426848();
    v173 = sub_1C1426C68();
    if (os_log_type_enabled(v172, v173))
    {
      v174 = (uint8_t *)swift_slowAlloc();
      v175 = swift_slowAlloc();
      *(_QWORD *)(v12 - 120) = v175;
      *(_DWORD *)v174 = 136446210;
      v176 = sub_1C14259E4();
      *(_QWORD *)(v12 - 96) = sub_1C132AD90(v176, v177, (uint64_t *)(v12 - 120));
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      sub_1C1339004(v171, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
      _os_log_impl(&dword_1C1324000, v172, v173, "Target does not include NSSupportsLiveActivities key in its Info.plist %{public}s", v174, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v175, -1, -1);
      MEMORY[0x1C3BAD3F4](v174, -1, -1);
    }
    else
    {
      sub_1C1339004(v171, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
    }

    v191 = *(_QWORD *)(v12 - 128);
    v192 = sub_1C142563C();
    sub_1C1329AD0(&qword_1EF6DC2E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FA18], MEMORY[0x1E0C8FA20]);
    v27 = swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v192 - 8) + 104))(v193, *MEMORY[0x1E0C8F9D8], v192);
    v143(v191, v9);
  }
  return v27;
}

uint64_t sub_1C14135E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int *v63;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v67[2] = a2;
  v3 = sub_1C1425978();
  v4 = *(_QWORD *)(v3 - 8);
  v68 = v3;
  v69 = v4;
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)v67 - v9;
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)v67 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)v67 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  MEMORY[0x1E0C80A78](v17);
  v18 = sub_1C1425A08();
  v19 = MEMORY[0x1E0C80A78](v18);
  v20 = MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v20);
  v67[1] = (char *)v67 - v21;
  if ((sub_1C14258DC() & 1) != 0)
  {
    if (qword_1ED793978 != -1)
      swift_once();
    v22 = sub_1C1426854();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ED7985B0);
    v23 = v68;
    v24 = v69;
    (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v7, a1, v68);
    v25 = sub_1C1426848();
    v26 = sub_1C1426C68();
    if (!os_log_type_enabled(v25, v26))
    {
      (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v23);
LABEL_26:

LABEL_27:
      v59 = sub_1C142563C();
      sub_1C1329AD0(&qword_1EF6DC2E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FA18], MEMORY[0x1E0C8FA20]);
      v60 = swift_allocError();
      v62 = v61;
      v63 = (unsigned int *)MEMORY[0x1E0C8F9C0];
      goto LABEL_28;
    }
    v27 = (uint8_t *)swift_slowAlloc();
    v28 = swift_slowAlloc();
    v71 = v28;
    *(_DWORD *)v27 = 136446210;
    sub_1C1329AD0(&qword_1EF6DBE28, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FE28], MEMORY[0x1E0C8FE48]);
    v29 = sub_1C1427058();
    v70 = sub_1C132AD90(v29, v30, &v71);
    sub_1C1426DB8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v23);
    _os_log_impl(&dword_1C1324000, v25, v26, "Push cannot create ephemeral activities: %{public}s", v27, 0xCu);
    swift_arrayDestroy();
    v31 = v28;
LABEL_18:
    MEMORY[0x1C3BAD3F4](v31, -1, -1);
    MEMORY[0x1C3BAD3F4](v27, -1, -1);
    goto LABEL_26;
  }
  if ((sub_1C14258E8() & 1) != 0)
  {
    if (qword_1ED793978 != -1)
      swift_once();
    v32 = sub_1C1426854();
    __swift_project_value_buffer(v32, (uint64_t)qword_1ED7985B0);
    v33 = v68;
    v34 = v69;
    (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v10, a1, v68);
    v35 = sub_1C1426848();
    v36 = sub_1C1426C68();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      v38 = swift_slowAlloc();
      v71 = v38;
      *(_DWORD *)v37 = 136446210;
      sub_1C1329AD0(&qword_1EF6DBE28, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FE28], MEMORY[0x1E0C8FE48]);
      v39 = sub_1C1427058();
      v70 = sub_1C132AD90(v39, v40, &v71);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v33);
      _os_log_impl(&dword_1C1324000, v35, v36, "Push cannot create momentary activities: %{public}s", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v38, -1, -1);
      MEMORY[0x1C3BAD3F4](v37, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v33);
    }

    goto LABEL_27;
  }
  if ((sub_1C14258F4() & 1) != 0)
  {
    if (qword_1ED793978 != -1)
      swift_once();
    v41 = sub_1C1426854();
    __swift_project_value_buffer(v41, (uint64_t)qword_1ED7985B0);
    v42 = v68;
    v43 = v69;
    (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v13, a1, v68);
    v25 = sub_1C1426848();
    v44 = sub_1C1426C68();
    if (!os_log_type_enabled(v25, v44))
    {
      (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v42);
      goto LABEL_26;
    }
    v27 = (uint8_t *)swift_slowAlloc();
    v45 = swift_slowAlloc();
    v71 = v45;
    *(_DWORD *)v27 = 136446210;
    sub_1C1329AD0(&qword_1EF6DBE28, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FE28], MEMORY[0x1E0C8FE48]);
    v46 = sub_1C1427058();
    v70 = sub_1C132AD90(v46, v47, &v71);
    sub_1C1426DB8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v42);
    _os_log_impl(&dword_1C1324000, v25, v44, "Push cannot create unbounded activities: %{public}s", v27, 0xCu);
    swift_arrayDestroy();
    v31 = v45;
    goto LABEL_18;
  }
  sub_1C14258D0();
  v49 = v48;
  swift_bridgeObjectRelease();
  if (!v49)
  {
    sub_1C142590C();
    __asm { BR              X10 }
  }
  if (qword_1ED793978 != -1)
    swift_once();
  v50 = sub_1C1426854();
  __swift_project_value_buffer(v50, (uint64_t)qword_1ED7985B0);
  v51 = v68;
  v52 = v69;
  (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v16, a1, v68);
  v53 = sub_1C1426848();
  v54 = sub_1C1426C68();
  if (os_log_type_enabled(v53, v54))
  {
    v55 = (uint8_t *)swift_slowAlloc();
    v56 = swift_slowAlloc();
    v71 = v56;
    *(_DWORD *)v55 = 136446210;
    sub_1C1329AD0(&qword_1EF6DBE28, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FE28], MEMORY[0x1E0C8FE48]);
    v57 = sub_1C1427058();
    v70 = sub_1C132AD90(v57, v58, &v71);
    sub_1C1426DB8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v16, v51);
    _os_log_impl(&dword_1C1324000, v53, v54, "Push cannot reconnect activities: %{public}s", v55, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v56, -1, -1);
    MEMORY[0x1C3BAD3F4](v55, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v52 + 8))(v16, v51);
  }

  v59 = sub_1C142563C();
  sub_1C1329AD0(&qword_1EF6DC2E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FA18], MEMORY[0x1E0C8FA20]);
  v60 = swift_allocError();
  v62 = v66;
  v63 = (unsigned int *)MEMORY[0x1E0C8F9F8];
LABEL_28:
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v59 - 8) + 104))(v62, *v63, v59);
  return v60;
}

uint64_t sub_1C1414A14(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  id v24;
  void *v25;
  unsigned int v26;
  uint64_t v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _BYTE v41[16];
  uint64_t v42;
  uint64_t v43;
  _OWORD v44[2];
  uint64_t v45[5];

  v5 = sub_1C1425A08();
  MEMORY[0x1E0C80A78](v5);
  v7 = &v41[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = (_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 112));
  v9 = v8[3];
  v10 = v8[4];
  __swift_project_boxed_opaque_existential_1(v8, v9);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);
  v12 = sub_1C1416168(v11);
  swift_bridgeObjectRelease();
  v42 = a1;
  v13 = sub_1C133085C((uint64_t)sub_1C1418C18, (uint64_t)v41, v12);
  swift_release();
  v14 = *(_QWORD *)(v13 + 16);
  swift_release();
  if (!a2)
  {
    if (v14 >= 5)
      goto LABEL_25;
    return 0;
  }
  v15 = a2;
  v16 = (void *)sub_1C1426A7C();
  v17 = objc_msgSend(v15, sel_valueForEntitlement_, v16);

  if (v17)
  {
    sub_1C1426DE8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v44, 0, sizeof(v44));
  }
  sub_1C1330398((uint64_t)v44, (uint64_t)v45);
  if (v45[3])
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v18 = v43;
      if (qword_1ED793978 != -1)
        swift_once();
      v19 = sub_1C1426854();
      __swift_project_value_buffer(v19, (uint64_t)qword_1ED7985B0);
      v20 = v15;
      v21 = sub_1C1426848();
      v22 = sub_1C1426C80();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = swift_slowAlloc();
        *(_DWORD *)v23 = 67240448;
        LODWORD(v45[0]) = -[NSObject pid](v20, sel_pid);
        sub_1C1426DB8();

        *(_WORD *)(v23 + 8) = 2048;
        v45[0] = v18;
        sub_1C1426DB8();
        _os_log_impl(&dword_1C1324000, v21, v22, "Client (pid: %{public}d) has their own activity limit %ld", (uint8_t *)v23, 0x12u);
        MEMORY[0x1C3BAD3F4](v23, -1, -1);
      }
      else
      {

        v21 = v20;
      }

      if ((uint64_t)v14 < v18)
        return 0;
      goto LABEL_19;
    }

    if (v14 < 5)
      return 0;
  }
  else
  {

    sub_1C132C860((uint64_t)v45, (uint64_t *)&unk_1ED797BB0);
    if (v14 < 5)
      return 0;
  }
LABEL_19:
  v24 = v15;
  v25 = (void *)sub_1C1426A7C();
  v26 = objc_msgSend(v24, sel_hasEntitlement_, v25);

  if (v26)
  {
    if (qword_1ED793978 != -1)
      swift_once();
    v27 = sub_1C1426854();
    __swift_project_value_buffer(v27, (uint64_t)qword_1ED7985B0);
    v28 = v24;
    v29 = sub_1C1426848();
    v30 = sub_1C1426C68();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc();
      *(_DWORD *)v31 = 67240448;
      LODWORD(v45[0]) = objc_msgSend(v28, sel_pid);
      sub_1C1426DB8();

      *(_WORD *)(v31 + 8) = 2048;
      v45[0] = v14;
      sub_1C1426DB8();
      _os_log_impl(&dword_1C1324000, v29, v30, "Bypassing activity count limit for %{public}d due to entitlement (current=%ld).", (uint8_t *)v31, 0x12u);
      MEMORY[0x1C3BAD3F4](v31, -1, -1);

    }
    else
    {

    }
    return 0;
  }

LABEL_25:
  if (qword_1ED793978 != -1)
    swift_once();
  v32 = sub_1C1426854();
  __swift_project_value_buffer(v32, (uint64_t)qword_1ED7985B0);
  sub_1C1338F24(a1, (uint64_t)v7, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
  v33 = sub_1C1426848();
  v34 = sub_1C1426C68();
  if (os_log_type_enabled(v33, v34))
  {
    v35 = (uint8_t *)swift_slowAlloc();
    v36 = swift_slowAlloc();
    v45[0] = v36;
    *(_DWORD *)v35 = 136446210;
    v37 = sub_1C14259E4();
    *(_QWORD *)&v44[0] = sub_1C132AD90(v37, v38, v45);
    sub_1C1426DB8();
    swift_bridgeObjectRelease();
    sub_1C1339004((uint64_t)v7, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
    _os_log_impl(&dword_1C1324000, v33, v34, "Cannot create new activity as maximum count for target has been reached: %{public}s", v35, 0xCu);
    v39 = 1;
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v36, -1, -1);
    MEMORY[0x1C3BAD3F4](v35, -1, -1);

  }
  else
  {
    sub_1C1339004((uint64_t)v7, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);

    return 1;
  }
  return v39;
}

uint64_t sub_1C1415024(void *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  NSObject *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  uint8_t *v20;
  _OWORD v22[3];

  v3 = (_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 112));
  v4 = v3[3];
  v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  v7 = sub_1C1416168(v6);
  swift_bridgeObjectRelease();
  if (a1)
  {
    v8 = a1;
    v9 = (void *)sub_1C1426A7C();
    v10 = objc_msgSend(v8, sel_valueForEntitlement_, v9);

    if (v10)
    {
      sub_1C1426DE8();
      swift_release();
      swift_unknownObjectRelease();
      sub_1C132C860((uint64_t)v22, (uint64_t *)&unk_1ED797BB0);
      if (qword_1ED793978 != -1)
        swift_once();
      v11 = sub_1C1426854();
      __swift_project_value_buffer(v11, (uint64_t)qword_1ED7985B0);
      v12 = v8;
      v13 = sub_1C1426848();
      v14 = sub_1C1426C80();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v15 = 67240192;
        LODWORD(v22[0]) = -[NSObject pid](v12, sel_pid);
        sub_1C1426DB8();

        _os_log_impl(&dword_1C1324000, v13, v14, "Bypassing global maximum activity count check because requester has its own activity count limit %{public}d", v15, 8u);
        MEMORY[0x1C3BAD3F4](v15, -1, -1);

        v16 = 0;
      }
      else
      {

        v16 = 0;
        v13 = v12;
      }
LABEL_16:

      return v16;
    }
    memset(v22, 0, 32);

    sub_1C132C860((uint64_t)v22, (uint64_t *)&unk_1ED797BB0);
  }
  v17 = *(_QWORD *)(v7 + 16);
  swift_release();
  if (v17 >= 0x19)
  {
    if (qword_1ED793978 != -1)
      swift_once();
    v18 = sub_1C1426854();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ED7985B0);
    v13 = sub_1C1426848();
    v19 = sub_1C1426C68();
    if (os_log_type_enabled(v13, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_1C1324000, v13, v19, "Cannot create new activity as maximum count has been reached", v20, 2u);
      MEMORY[0x1C3BAD3F4](v20, -1, -1);
    }
    v16 = 1;
    goto LABEL_16;
  }
  return 0;
}

uint64_t sub_1C141531C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[16];

  v2 = sub_1C1425AEC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_1C1425A08();
  MEMORY[0x1E0C80A78](v6);
  v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C1338F24(a1, (uint64_t)v8, v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1C1339004((uint64_t)v8, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
    return 1;
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 32))(v5, v8, v2);
    v11 = sub_1C1425A80();
    v13 = v12;
    v14 = MEMORY[0x1E0C80A78](v11);
    *(_QWORD *)&v17[-32] = v15;
    *(_QWORD *)&v17[-24] = v14;
    *(_QWORD *)&v17[-16] = v13;
    sub_1C1426CEC();
    swift_bridgeObjectRelease();
    v10 = v17[15];
    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v10;
}

uint64_t sub_1C14154A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void (*v20)(char *, uint64_t);
  char v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v3 = sub_1C1425AEC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C1425A08();
  v8 = MEMORY[0x1E0C8FFB8];
  v9 = MEMORY[0x1E0C80A78](v7);
  v36 = (uint64_t)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v33 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v33 - v14;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 152)), *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 152) + 24));
  sub_1C1338F24(a1, (uint64_t)v15, (uint64_t (*)(_QWORD))v8);
  v16 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
  v16(v6, v15, v3);
  v17 = sub_1C1425A80();
  v19 = v18;
  v20 = *(void (**)(char *, uint64_t))(v4 + 8);
  v20(v6, v3);
  v21 = sub_1C13C6D34(v17, v19);
  swift_bridgeObjectRelease();
  if ((v21 & 1) != 0)
  {
    if (qword_1ED793978 != -1)
      swift_once();
    v22 = sub_1C1426854();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ED7985B0);
    sub_1C1338F24(a1, (uint64_t)v13, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
    v23 = sub_1C1426848();
    v24 = sub_1C1426C68();
    v25 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      v35 = v25;
      v26 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      v38 = v34;
      *(_DWORD *)v26 = 136446210;
      v27 = v36;
      sub_1C1338F24((uint64_t)v13, v36, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
      v16(v6, (char *)v27, v3);
      v28 = sub_1C1425A80();
      v30 = v29;
      v20(v6, v3);
      v37 = sub_1C132AD90(v28, v30, &v38);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      sub_1C1339004((uint64_t)v13, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
      _os_log_impl(&dword_1C1324000, v23, (os_log_type_t)v35, "App is restricted: %{public}s", v26, 0xCu);
      v31 = v34;
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v31, -1, -1);
      MEMORY[0x1C3BAD3F4](v26, -1, -1);
    }
    else
    {
      sub_1C1339004((uint64_t)v13, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
    }

  }
  return v21 & 1;
}

uint64_t sub_1C14157CC(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_1C1410E18(a1, a2, a3);
}

uint64_t sub_1C14157EC(uint64_t a1, void *a2)
{
  return sub_1C1418674(a1, a2);
}

uint64_t sub_1C14157F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v19;

  v5 = sub_1C1425A08();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C1425AEC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C142587C();
  if ((MEMORY[0x1C3BAB540]() & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C1425A74();
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v7, v11, v8);
    swift_storeEnumTagMultiPayload();
    v12 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 144)), *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 144) + 24));
    v13 = *v12;
    v14 = *(os_unfair_lock_s **)(*(_QWORD *)(*v12 + 40) + 16);
    os_unfair_lock_lock(v14);
    swift_beginAccess();
    v15 = *(_QWORD *)(v13 + 48);
    swift_bridgeObjectRetain();
    v16 = sub_1C1330FE4(a1, a2, v15);
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(v14);
    v17 = 0;
    if ((v16 & 1) != 0)
    {
      if ((sub_1C14175A0((uint64_t)v7) & 1) != 0)
        v17 = sub_1C141531C((uint64_t)v7);
      else
        v17 = 0;
    }
    sub_1C1339004((uint64_t)v7, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    v17 = 0;
  }
  return v17 & 1;
}

uint64_t sub_1C14159C4(uint64_t a1, uint64_t a2)
{
  return sub_1C14157F4(a1, a2) & 1;
}

uint64_t sub_1C14159E8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void);
  uint64_t v22;
  uint64_t v23;

  v23 = a3;
  v5 = sub_1C1425A08();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (uint64_t *)((char *)&v22 - v13);
  v15 = *a1;
  v16 = a1[1];
  v17 = (char *)&v22 + *(int *)(v12 + 48) - v13;
  *v14 = v15;
  v14[1] = v16;
  sub_1C1338F24(a2, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
  v18 = (uint64_t)v11 + *(int *)(v8 + 48);
  *v11 = v15;
  v11[1] = v16;
  sub_1C1338F24((uint64_t)v17, v18, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
  v19 = type metadata accessor for Activity();
  v20 = MEMORY[0x1E0C8FFB8];
  sub_1C1338F24(v18 + *(int *)(v19 + 24), (uint64_t)v7, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
  swift_bridgeObjectRetain();
  sub_1C1339004(v18, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
  LOBYTE(v15) = MEMORY[0x1C3BAB6CC](v7, v23);
  sub_1C1339004((uint64_t)v7, (uint64_t (*)(_QWORD))v20);
  sub_1C132C860((uint64_t)v14, &qword_1ED7939D8);
  return v15 & 1;
}

uint64_t sub_1C1415B74(uint64_t a1, char a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  unint64_t v48;
  _QWORD v50[4];

  v50[3] = a4;
  if (a1 < 0)
    goto LABEL_42;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = MEMORY[0x1E0DEE9D8];
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = 15;
  v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (v12 = HIBYTE(a6) & 0xF) : (v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0)
      v11 = a5 & 0xFFFFFFFFFFFFLL;
    v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0)
      v30 = 11;
    sub_1C1416010(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    v13 = *(_QWORD **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  v42 = a1;
  v43 = v10;
  v48 = 4 * v12;
  v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v14 = 15;
  v15 = 15;
  v16 = 15;
  while (1)
  {
    v50[0] = sub_1C1426B48();
    v50[1] = v17;
    v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
      break;
    v14 = sub_1C1426ADC();
LABEL_9:
    if (v48 == v14 >> 14)
      goto LABEL_29;
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    v14 = sub_1C1426ADC();
    *(_QWORD *)(v47 + 16) = v14;
    v15 = v14;
    v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14)
    goto LABEL_41;
  v20 = sub_1C1426B60();
  v44 = v21;
  v45 = v20;
  v23 = v22;
  v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_1C136C4EC(0, v13[2] + 1, 1, v13);
  v27 = v13[2];
  v26 = v13[3];
  if (v27 >= v26 >> 1)
    v13 = sub_1C136C4EC((_QWORD *)(v26 > 1), v27 + 1, 1, v13);
  v13[2] = v27 + 1;
  v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(_QWORD *)(v43 + 16) = v13;
  v29 = sub_1C1426ADC();
  v14 = v29;
  *(_QWORD *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    v15 = v29;
    v16 = v29;
    goto LABEL_9;
  }
  v16 = v29;
  v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    v31 = sub_1C1426B60();
    v33 = v32;
    v35 = v34;
    v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_1C136C4EC(0, v13[2] + 1, 1, v13);
    v39 = v13[2];
    v38 = v13[3];
    if (v39 >= v38 >> 1)
      v13 = sub_1C136C4EC((_QWORD *)(v38 > 1), v39 + 1, 1, v13);
    v13[2] = v39 + 1;
    v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(_QWORD *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_1C1426F80();
  __break(1u);
LABEL_42:
  result = sub_1C1426F80();
  __break(1u);
  return result;
}

uint64_t sub_1C1416010(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t result;

  v4 = *(_QWORD *)(a2 + 16) >> 14;
  v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1)
    return v5 ^ 1u;
  if (a1 >> 14 >= v4)
  {
    v7 = sub_1C1426B60();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v14 = *(_QWORD **)(a4 + 16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v14 = sub_1C136C4EC(0, v14[2] + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v17 = v14[2];
    v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      v14 = sub_1C136C4EC((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  result = sub_1C1426F80();
  __break(1u);
  return result;
}

uint64_t sub_1C1416168(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  size_t v5;
  uint64_t v6;
  void *v7;
  _QWORD v9[2];

  v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x1E0C80C00];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    v6 = sub_1C14162B8((_QWORD *)((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, v2);
    if (v1)
      swift_willThrow();
    else
      return v6;
  }
  else
  {
    v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    v2 = sub_1C14162B8((unint64_t *)v7, v4, v2);
    MEMORY[0x1C3BAD3F4](v7, -1, -1);
  }
  return v2;
}

uint64_t sub_1C14162B8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t result;
  uint64_t v19;
  char *v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  unint64_t v40;
  int64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  void (*v50)(char *, uint64_t);
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  int64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  int64_t v72;

  v54 = a2;
  v62 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B60);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C14253E4();
  v58 = *(_QWORD *)(v7 - 8);
  v59 = v7;
  MEMORY[0x1E0C80A78](v7);
  v57 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_1C14251B0();
  v61 = *(_QWORD *)(v56 - 8);
  v9 = MEMORY[0x1E0C80A78](v56);
  v53 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v52 = (char *)&v52 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7935E8);
  MEMORY[0x1E0C80A78](v12);
  v69 = (uint64_t)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7939D8);
  v14 = MEMORY[0x1E0C80A78](v68);
  v67 = (char **)((char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v14);
  v17 = (char **)((char *)&v52 - v16);
  v71 = type metadata accessor for Activity();
  v66 = *(_QWORD *)(v71 - 8);
  result = MEMORY[0x1E0C80A78](v71);
  v20 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = 0;
  v70 = (_QWORD *)a3;
  v22 = *(_QWORD *)(a3 + 64);
  v63 = 0;
  v64 = a3 + 64;
  v23 = 1 << *(_BYTE *)(a3 + 32);
  v24 = -1;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  v25 = v24 & v22;
  v65 = (unint64_t)(v23 + 63) >> 6;
  v60 = v6;
  v55 = v20;
  while (v25)
  {
    v26 = __clz(__rbit64(v25));
    v25 &= v25 - 1;
    v72 = v21;
    v27 = v26 | (v21 << 6);
LABEL_5:
    v28 = (uint64_t *)(v70[6] + 16 * v27);
    v29 = *v28;
    v30 = v28[1];
    sub_1C1338F24(v70[7] + *(_QWORD *)(v66 + 72) * v27, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    v31 = v68;
    v32 = (uint64_t)v20;
    v33 = (uint64_t)v17 + *(int *)(v68 + 48);
    *v17 = v29;
    v17[1] = v30;
    sub_1C1338F24(v32, v33, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    v34 = *(int *)(v31 + 48);
    v35 = v67;
    v36 = (uint64_t)v67 + v34;
    *v67 = v29;
    v35[1] = v30;
    sub_1C1338F24(v33, (uint64_t)v35 + v34, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
    v37 = v69;
    sub_1C1408298(v36 + *(int *)(v71 + 48), v69);
    v38 = sub_1C142557C();
    LODWORD(v33) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v37, 1, v38);
    swift_bridgeObjectRetain_n();
    sub_1C132C860(v37, &qword_1ED7935E8);
    if ((_DWORD)v33 == 1)
    {
      v43 = v57;
      sub_1C142542C();
      v44 = (uint64_t)v60;
      sub_1C14253D8();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v43, v59);
      v45 = v61;
      v46 = v56;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v44, 1, v56) == 1)
      {
        sub_1C132C860(v44, &qword_1ED793B60);
      }
      else
      {
        v47 = v52;
        (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(v52, v44, v46);
        v48 = v53;
        sub_1C142518C();
        sub_1C1425150();
        v49 = v48;
        v50 = *(void (**)(char *, uint64_t))(v61 + 8);
        v50(v49, v46);
        v50(v47, v46);
      }
      v20 = v55;
      v21 = v72;
      sub_1C132C860((uint64_t)v17, &qword_1ED7939D8);
      sub_1C1339004(v36, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      sub_1C1339004((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v62 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
      if (__OFADD__(v63++, 1))
      {
        __break(1u);
        return sub_1C1326C50(v62, v54, v63, v70);
      }
    }
    else
    {
      sub_1C132C860((uint64_t)v17, &qword_1ED7939D8);
      sub_1C1339004(v36, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      sub_1C1339004(v32, (uint64_t (*)(_QWORD))type metadata accessor for Activity);
      result = swift_bridgeObjectRelease();
      v20 = (char *)v32;
      v21 = v72;
    }
  }
  v39 = v21 + 1;
  if (__OFADD__(v21, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v39 >= v65)
    return sub_1C1326C50(v62, v54, v63, v70);
  v40 = *(_QWORD *)(v64 + 8 * v39);
  v41 = v21 + 1;
  if (v40)
    goto LABEL_21;
  v41 = v21 + 2;
  if (v21 + 2 >= v65)
    return sub_1C1326C50(v62, v54, v63, v70);
  v40 = *(_QWORD *)(v64 + 8 * v41);
  if (v40)
    goto LABEL_21;
  v41 = v21 + 3;
  if (v21 + 3 >= v65)
    return sub_1C1326C50(v62, v54, v63, v70);
  v40 = *(_QWORD *)(v64 + 8 * v41);
  if (v40)
  {
LABEL_21:
    v25 = (v40 - 1) & v40;
    v72 = v41;
    v27 = __clz(__rbit64(v40)) + (v41 << 6);
    goto LABEL_5;
  }
  v42 = v21 + 4;
  if (v21 + 4 >= v65)
    return sub_1C1326C50(v62, v54, v63, v70);
  v40 = *(_QWORD *)(v64 + 8 * v42);
  if (v40)
  {
    v41 = v21 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v41 = v42 + 1;
    if (__OFADD__(v42, 1))
      break;
    if (v41 >= v65)
      return sub_1C1326C50(v62, v54, v63, v70);
    v40 = *(_QWORD *)(v64 + 8 * v41);
    ++v42;
    if (v40)
      goto LABEL_21;
  }
LABEL_30:
  __break(1u);
  return result;
}

unsigned __int8 *sub_1C1416830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned __int8 *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v15 = a1;
  v16 = a2;
  v17 = a3;
  v18 = a4;
  sub_1C1418BA0();
  swift_bridgeObjectRetain();
  v7 = sub_1C1426B54();
  v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v10 = HIBYTE(v8) & 0xF;
    v15 = v7;
    v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  v7 = sub_1C1416B9C();
  v12 = v11;
  swift_bridgeObjectRelease();
  v8 = v12;
  if ((v12 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v9 = (unsigned __int8 *)sub_1C1426F2C();
  }
LABEL_7:
  v13 = sub_1C1416920(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_1C1416920(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  unsigned __int8 *v19;
  unsigned int v20;
  char v21;
  uint64_t v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  uint64_t v29;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  v13 = 0;
                  if (v11 < 0x61 || v11 >= v8)
                    return (unsigned __int8 *)v13;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v14 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v14 - (v11 + v12);
              if (__OFSUB__(v14, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      v23 = a3 + 48;
      v24 = a3 + 55;
      v25 = a3 + 87;
      if (a3 > 10)
      {
        v23 = 58;
      }
      else
      {
        v25 = 97;
        v24 = 65;
      }
      if (result)
      {
        v26 = 0;
        do
        {
          v27 = *result;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              v13 = 0;
              if (v27 < 0x61 || v27 >= v25)
                return (unsigned __int8 *)v13;
              v28 = -87;
            }
            else
            {
              v28 = -55;
            }
          }
          else
          {
            v28 = -48;
          }
          v29 = v26 * a3;
          if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63)
            return 0;
          v26 = v29 + (v27 + v28);
          if (__OFADD__(v29, (v27 + v28)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v29 + (v27 + v28));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  v15 = a2 - 1;
  if (a2 == 1)
    return 0;
  v16 = a3 + 48;
  v17 = a3 + 55;
  v18 = a3 + 87;
  if (a3 > 10)
  {
    v16 = 58;
  }
  else
  {
    v18 = 97;
    v17 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v19 = result + 1;
  do
  {
    v20 = *v19;
    if (v20 < 0x30 || v20 >= v16)
    {
      if (v20 < 0x41 || v20 >= v17)
      {
        v13 = 0;
        if (v20 < 0x61 || v20 >= v18)
          return (unsigned __int8 *)v13;
        v21 = -87;
      }
      else
      {
        v21 = -55;
      }
    }
    else
    {
      v21 = -48;
    }
    v22 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v22 + (v20 + v21);
    if (__OFADD__(v22, (v20 + v21)))
      return 0;
    ++v19;
    --v15;
  }
  while (v15);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1C1416B9C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_1C1426B60();
  v4 = sub_1C1416C18(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1C1416C18(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_1C1416D5C(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_1C1326CEC(v9, 0);
      v12 = sub_1C1416E48((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v13 = MEMORY[0x1C3BAC7A0](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x1C3BAC7A0);
LABEL_9:
      sub_1C1426F2C();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1C3BAC7A0]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_1C1416D5C(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_1C13B29B4(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_1C13B29B4(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_1C1426B24();
  }
  __break(1u);
  return result;
}

unint64_t sub_1C1416E48(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_1C13B29B4(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_1C1426B30();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_1C1426F2C();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_1C13B29B4(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_1C1426B0C();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1C1417058(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t result;
  char v13;
  _QWORD v14[2];
  char v15;

  if ((a4 & 0x1000000000000000) != 0)
  {
    result = 0;
    goto LABEL_8;
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    v11 = v14;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    v11 = (_QWORD *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    v11 = (_QWORD *)sub_1C1426F2C();
  }
  result = sub_1C141717C((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    v15 = v13 & 1;
LABEL_8:
    LOBYTE(v14[0]) = (a4 & 0x1000000000000000) != 0;
  }
  return result;
}

uint64_t sub_1C1417128(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1C1427064() & 1;
}

uint64_t sub_1C141717C(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unsigned __int8 *v19;
  int v20;
  unsigned __int8 v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  uint64_t v24;
  unsigned __int8 *v25;
  uint64_t v26;
  unsigned int v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  unsigned __int8 *v34;
  uint64_t v35;
  unsigned int v36;
  char v37;
  uint64_t v38;
  unsigned __int8 v39;
  unsigned __int8 v40;
  unsigned __int8 v41;
  uint64_t v42;
  unsigned int v43;
  char v44;
  uint64_t v45;

  v10 = a2;
  v11 = result;
  v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0)
    LOBYTE(v12) = 1;
  v13 = 4 << v12;
  v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    result = sub_1C13B29B4(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      v15 = a2 >> 16;
      if (v14 != v13)
        goto LABEL_6;
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0)
    v16 = HIBYTE(a5) & 0xF;
  if (v16 < a2 >> 16)
    goto LABEL_95;
  result = sub_1C1426B24();
  v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    result = sub_1C13B29B4(v10, a4, a5);
    v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    result = sub_1C13B29B4(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0)
      goto LABEL_8;
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0)
    v17 = a4 & 0xFFFFFFFFFFFFLL;
  if (v17 < v10 >> 16)
    goto LABEL_91;
  if (v17 < a3 >> 16)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  result = sub_1C1426B24();
LABEL_21:
  v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_90;
  }
  if (v18 < v15)
  {
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11)
    v19 = 0;
  v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        v31 = a6 + 48;
        v32 = a6 + 55;
        v33 = a6 + 87;
        if (a6 > 10)
        {
          v31 = 58;
        }
        else
        {
          v33 = 97;
          v32 = 65;
        }
        if (v19)
        {
          v24 = 0;
          v34 = v19 + 1;
          v35 = result - 1;
          do
          {
            v36 = *v34;
            if (v36 < 0x30 || v36 >= v31)
            {
              if (v36 < 0x41 || v36 >= v32)
              {
                v29 = 0;
                if (v36 < 0x61 || v36 >= v33)
                  return v29;
                v37 = -87;
              }
              else
              {
                v37 = -55;
              }
            }
            else
            {
              v37 = -48;
            }
            v38 = v24 * a6;
            if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63)
              return 0;
            v24 = v38 + (v36 + v37);
            if (__OFADD__(v38, (v36 + v37)))
              return 0;
            ++v34;
            --v35;
          }
          while (v35);
          return v24;
        }
        return 0;
      }
      return 0;
    }
    goto LABEL_94;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      v39 = a6 + 48;
      v40 = a6 + 55;
      v41 = a6 + 87;
      if (a6 > 10)
      {
        v39 = 58;
      }
      else
      {
        v41 = 97;
        v40 = 65;
      }
      if (v19)
      {
        v42 = 0;
        do
        {
          v43 = *v19;
          if (v43 < 0x30 || v43 >= v39)
          {
            if (v43 < 0x41 || v43 >= v40)
            {
              v29 = 0;
              if (v43 < 0x61 || v43 >= v41)
                return v29;
              v44 = -87;
            }
            else
            {
              v44 = -55;
            }
          }
          else
          {
            v44 = -48;
          }
          v45 = v42 * a6;
          if ((unsigned __int128)(v42 * (__int128)a6) >> 64 != (v42 * a6) >> 63)
            return 0;
          v42 = v45 + (v43 + v44);
          if (__OFADD__(v45, (v43 + v44)))
            return 0;
          ++v19;
          --result;
        }
        while (result);
        return v45 + (v43 + v44);
      }
      return 0;
    }
    return 0;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      v21 = a6 + 48;
      v22 = a6 + 55;
      v23 = a6 + 87;
      if (a6 > 10)
      {
        v21 = 58;
      }
      else
      {
        v23 = 97;
        v22 = 65;
      }
      if (v19)
      {
        v24 = 0;
        v25 = v19 + 1;
        v26 = result - 1;
        while (1)
        {
          v27 = *v25;
          if (v27 < 0x30 || v27 >= v21)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              v29 = 0;
              if (v27 < 0x61 || v27 >= v23)
                return v29;
              v28 = -87;
            }
            else
            {
              v28 = -55;
            }
          }
          else
          {
            v28 = -48;
          }
          v30 = v24 * a6;
          if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63)
            return 0;
          v24 = v30 - (v27 + v28);
          if (__OFSUB__(v30, (v27 + v28)))
            return 0;
          ++v25;
          if (!--v26)
            return v24;
        }
      }
      return 0;
    }
    return 0;
  }
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
  return result;
}

uint64_t sub_1C14175A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)(_QWORD);
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  id v24;
  id v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint8_t *v35;
  void *v36;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;

  v2 = sub_1C1425AEC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C1425A08();
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v38 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v38 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v38 - v16;
  sub_1C1338F24(a1, (uint64_t)&v38 - v16, v18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1C1339004((uint64_t)v17, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
    return 1;
  }
  else
  {
    sub_1C1338F24(a1, (uint64_t)v15, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
    v40 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v40(v5, v15, v2);
    v20 = sub_1C1425A80();
    v22 = v21;
    v23 = *(void (**)(char *, uint64_t))(v3 + 8);
    v23(v5, v2);
    v24 = objc_allocWithZone(MEMORY[0x1E0CA5870]);
    v25 = sub_1C13278E4(v20, v22, 0);
    v36 = v25;
    if (v25)
    {
      v19 = objc_msgSend(v25, sel_supportsLiveActivities);

      v23(v17, v2);
    }
    else
    {
      if (qword_1ED793978 != -1)
        swift_once();
      v26 = sub_1C1426854();
      __swift_project_value_buffer(v26, (uint64_t)qword_1ED7985B0);
      sub_1C1338F24(a1, (uint64_t)v12, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
      v27 = sub_1C1426848();
      v28 = sub_1C1426C68();
      if (os_log_type_enabled(v27, v28))
      {
        v29 = swift_slowAlloc();
        v39 = v23;
        v30 = (uint8_t *)v29;
        v38 = swift_slowAlloc();
        v42 = v38;
        *(_DWORD *)v30 = 136446210;
        sub_1C1338F24((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
        v40(v5, v9, v2);
        v31 = sub_1C1425A80();
        v33 = v32;
        v39(v5, v2);
        v41 = sub_1C132AD90(v31, v33, &v42);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        sub_1C1339004((uint64_t)v12, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
        _os_log_impl(&dword_1C1324000, v27, v28, "App does not exist: %{public}s", v30, 0xCu);
        v34 = v38;
        swift_arrayDestroy();
        MEMORY[0x1C3BAD3F4](v34, -1, -1);
        v35 = v30;
        v23 = v39;
        MEMORY[0x1C3BAD3F4](v35, -1, -1);
      }
      else
      {
        sub_1C1339004((uint64_t)v12, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8FFB8]);
      }

      v23(v17, v2);
      return 0;
    }
  }
  return (uint64_t)v19;
}

uint64_t sub_1C1417968@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_1C1339C34(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_1C1417984(void *a1)
{
  void *v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  unint64_t v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  id v31[2];

  v1 = a1;
  v31[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = objc_msgSend((id)objc_opt_self(), sel_identifierWithPid_, objc_msgSend(a1, sel_pid));
  if (!v2)
    goto LABEL_19;
  v3 = v2;
  v4 = objc_msgSend((id)objc_opt_self(), sel_predicateMatchingIdentifier_, v2);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D87DC0]), sel_init);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED797B80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C1427F50;
  *(_QWORD *)(v6 + 32) = sub_1C1426A88();
  *(_QWORD *)(v6 + 40) = v7;
  v8 = (void *)sub_1C1426B84();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_setEndowmentNamespaces_, v8);

  v31[0] = 0;
  v9 = objc_msgSend((id)objc_opt_self(), sel_statesForPredicate_withDescriptor_error_, v4, v5, v31);
  v10 = v31[0];
  if (!v9)
  {
    v22 = v31[0];
    v23 = (void *)sub_1C1425078();

    swift_willThrow();
LABEL_19:
    v21 = 0;
    return v21 & 1;
  }
  v11 = v9;
  sub_1C1330EEC(0, (unint64_t *)&unk_1EF6DC2F0);
  v12 = sub_1C1426B90();
  v13 = v10;

  if (!(v12 >> 62))
  {
    if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10) == 1)
      goto LABEL_5;
LABEL_15:
    swift_bridgeObjectRelease();
    if (qword_1ED793978 == -1)
      goto LABEL_16;
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  v24 = sub_1C1426F98();
  swift_bridgeObjectRelease();
  if (v24 != 1)
    goto LABEL_15;
  swift_bridgeObjectRetain();
  v1 = (void *)sub_1C1426F98();
  swift_bridgeObjectRelease();
  if (!v1)
  {

    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
LABEL_5:
  if ((v12 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v14 = *(id *)(v12 + 32);
      goto LABEL_8;
    }
    __break(1u);
LABEL_23:
    swift_once();
LABEL_16:
    v25 = sub_1C1426854();
    __swift_project_value_buffer(v25, (uint64_t)qword_1ED7985B0);
    v26 = v1;
    v27 = sub_1C1426848();
    v28 = sub_1C1426C68();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v29 = 67240192;
      LODWORD(v31[0]) = objc_msgSend(v26, sel_pid);
      sub_1C1426DB8();

      _os_log_impl(&dword_1C1324000, v27, v28, "Found multiple process state matches for pid: %{public}d", v29, 8u);
      MEMORY[0x1C3BAD3F4](v29, -1, -1);

    }
    else
    {

    }
    goto LABEL_19;
  }
  v14 = (id)MEMORY[0x1C3BACBFC](0, v12);
LABEL_8:
  v15 = v14;
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v15, sel_endowmentNamespaces);
  if (!v16)
  {

    goto LABEL_19;
  }
  v17 = v16;
  v18 = sub_1C1426BFC();

  v19 = sub_1C1426A88();
  v21 = sub_1C1330FE4(v19, v20, v18);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v21 & 1;
}

uint64_t sub_1C1417E00(void *a1)
{
  id v2;
  void *v3;
  void *v4;
  NSObject *v5;
  NSObject *v6;
  NSObject *v7;
  id v8;
  NSObject *v9;
  NSObject *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  const char *v22;
  uint64_t v23;
  id v24;
  os_log_type_t v25;
  uint8_t *v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  uint64_t v35;
  NSObject *v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  const char *v40;
  uint64_t v41;
  id v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  id v47;
  char v48;
  uint64_t v50;
  id v51[2];

  v51[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = objc_msgSend((id)objc_opt_self(), sel_identifierWithPid_, objc_msgSend(a1, sel_pid));
  if (v2)
  {
    v3 = v2;
    v4 = (void *)objc_opt_self();
    v51[0] = 0;
    v5 = v3;
    v6 = objc_msgSend(v4, sel_handleForIdentifier_error_, v5, v51);
    if (v6)
    {
      v7 = v6;
      v8 = v51[0];

      v9 = -[NSObject currentState](v7, sel_currentState);
      if (v9)
      {
        v10 = v9;
        v11 = -[NSObject endowmentNamespaces](v9, sel_endowmentNamespaces);
        if (v11)
        {
          v12 = v11;
          v13 = sub_1C1426BFC();

          v14 = sub_1C1426A88();
          v16 = sub_1C1330FE4(v14, v15, v13);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v16 & 1) != 0)
          {
            if (qword_1ED793978 != -1)
              swift_once();
            v17 = sub_1C1426854();
            __swift_project_value_buffer(v17, (uint64_t)qword_1ED7985B0);
            v18 = a1;
            v19 = sub_1C1426848();
            v20 = sub_1C1426C80();
            if (os_log_type_enabled(v19, v20))
            {
              v21 = (uint8_t *)swift_slowAlloc();
              *(_DWORD *)v21 = 67240192;
              LODWORD(v51[0]) = objc_msgSend(v18, sel_pid);
              sub_1C1426DB8();

              v22 = "Foreground process is permitted to update activity: %{public}d";
LABEL_32:
              _os_log_impl(&dword_1C1324000, v19, v20, v22, v21, 8u);
              MEMORY[0x1C3BAD3F4](v21, -1, -1);

              goto LABEL_37;
            }

            goto LABEL_36;
          }
        }
        v29 = -[NSObject assertions](v10, sel_assertions);
        if (!v29)
        {
          if (qword_1ED793978 != -1)
            swift_once();
          v46 = sub_1C1426854();
          __swift_project_value_buffer(v46, (uint64_t)qword_1ED7985B0);
          v47 = a1;
          v19 = sub_1C1426848();
          v20 = sub_1C1426C68();
          if (os_log_type_enabled(v19, v20))
          {
            v21 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)v21 = 67240192;
            LODWORD(v51[0]) = objc_msgSend(v47, sel_pid);
            sub_1C1426DB8();

            v22 = "Process is not targeted by assertions and can update activity: %{public}d";
            goto LABEL_32;
          }

LABEL_36:
          goto LABEL_37;
        }
        v30 = v29;
        sub_1C1330EEC(0, &qword_1ED792838);
        sub_1C1418AF4();
        v31 = sub_1C1426BFC();

        sub_1C141079C(v31);
        if ((v32 & 1) == 0)
        {

          swift_bridgeObjectRelease();
          goto LABEL_37;
        }
        sub_1C1410A80(v31);
        v34 = v33;
        swift_bridgeObjectRelease();
        if ((v34 & 1) != 0)
        {
          if (qword_1ED793978 != -1)
            swift_once();
          v35 = sub_1C1426854();
          __swift_project_value_buffer(v35, (uint64_t)qword_1ED7985B0);
          v36 = a1;
          v37 = sub_1C1426848();
          v38 = sub_1C1426C80();
          if (os_log_type_enabled(v37, v38))
          {
            v39 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)v39 = 67240192;
            LODWORD(v51[0]) = -[NSObject pid](v36, sel_pid);
            sub_1C1426DB8();

            v40 = "Process is doing more than playing background media so is permitted to update activity: %{public}d";
LABEL_43:
            _os_log_impl(&dword_1C1324000, v37, v38, v40, v39, 8u);
            MEMORY[0x1C3BAD3F4](v39, -1, -1);
            v36 = v5;
LABEL_45:

            v48 = v34 ^ 1;
            return v48 & 1;
          }
        }
        else
        {
          if (qword_1ED793978 != -1)
            swift_once();
          v50 = sub_1C1426854();
          __swift_project_value_buffer(v50, (uint64_t)qword_1ED7985B0);
          v36 = a1;
          v37 = sub_1C1426848();
          v38 = sub_1C1426C68();
          if (os_log_type_enabled(v37, v38))
          {
            v39 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)v39 = 67240192;
            LODWORD(v51[0]) = -[NSObject pid](v36, sel_pid);
            sub_1C1426DB8();

            v40 = "Process is only playing background media so is forbidden to update activity: %{public}d";
            goto LABEL_43;
          }
        }

        v37 = v7;
        v7 = v10;
        v10 = v5;
        goto LABEL_45;
      }
      if (qword_1ED793978 != -1)
        swift_once();
      v41 = sub_1C1426854();
      __swift_project_value_buffer(v41, (uint64_t)qword_1ED7985B0);
      v42 = a1;
      v43 = sub_1C1426848();
      v44 = sub_1C1426C68();
      if (!os_log_type_enabled(v43, v44))
      {

        goto LABEL_36;
      }
      v45 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v45 = 67240192;
      LODWORD(v51[0]) = objc_msgSend(v42, sel_pid);
      sub_1C1426DB8();

      _os_log_impl(&dword_1C1324000, v43, v44, "Could not get state for pid: %{public}d", v45, 8u);
      MEMORY[0x1C3BAD3F4](v45, -1, -1);

    }
    else
    {
      v27 = v51[0];
      v28 = (void *)sub_1C1425078();

      swift_willThrow();
    }
  }
  else
  {
    if (qword_1ED793978 != -1)
      swift_once();
    v23 = sub_1C1426854();
    __swift_project_value_buffer(v23, (uint64_t)qword_1ED7985B0);
    v24 = a1;
    v5 = sub_1C1426848();
    v25 = sub_1C1426C68();
    if (os_log_type_enabled(v5, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v26 = 67240192;
      LODWORD(v51[0]) = objc_msgSend(v24, sel_pid);
      sub_1C1426DB8();

      _os_log_impl(&dword_1C1324000, v5, v25, "Could not get identifier for pid: %{public}d", v26, 8u);
      MEMORY[0x1C3BAD3F4](v26, -1, -1);
      goto LABEL_36;
    }

  }
LABEL_37:
  v48 = 0;
  return v48 & 1;
}

uint64_t sub_1C1418674(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(char *, uint64_t);
  char v23;
  char v24;
  void (*v25)(char *, uint64_t);
  _QWORD v27[2];
  uint64_t v28;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793BF0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C1425AEC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v27 - v11;
  v13 = a2;
  sub_1C1329530(v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v5, v6);
  v14 = (void *)sub_1C1426A7C();
  LOBYTE(v5) = objc_msgSend(v13, sel_hasEntitlement_, v14);

  if ((v5 & 1) != 0)
  {
    if (qword_1ED793978 != -1)
      swift_once();
    v15 = sub_1C1426854();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED7985B0);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    v16 = sub_1C1426848();
    v17 = sub_1C1426C80();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v28 = v19;
      *(_DWORD *)v18 = 136380675;
      v27[0] = v18 + 4;
      sub_1C1329AD0(&qword_1ED793BE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C900E0], MEMORY[0x1E0C900F8]);
      v20 = sub_1C1427058();
      v27[1] = sub_1C132AD90(v20, v21, &v28);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      v22 = *(void (**)(char *, uint64_t))(v7 + 8);
      v22(v10, v6);
      _os_log_impl(&dword_1C1324000, v16, v17, "Requester is entitled to update activities while playing background audio: %{private}s", v18, 0xCu);
      v23 = 1;
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v19, -1, -1);
      MEMORY[0x1C3BAD3F4](v18, -1, -1);

      v22(v12, v6);
    }
    else
    {

      v25 = *(void (**)(char *, uint64_t))(v7 + 8);
      v25(v10, v6);
      v25(v12, v6);
      v23 = 1;
    }
  }
  else
  {
    v24 = sub_1C1417E00(v13);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    v23 = v24 ^ 1;
  }
  return v23 & 1;
}

unint64_t sub_1C1418AF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED792840;
  if (!qword_1ED792840)
  {
    v1 = sub_1C1330EEC(255, &qword_1ED792838);
    result = MEMORY[0x1C3BAD334](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED792840);
  }
  return result;
}

uint64_t sub_1C1418B4C(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1])
    return 1;
  else
    return sub_1C1427064() & 1;
}

unint64_t sub_1C1418BA0()
{
  unint64_t result;

  result = qword_1EF6DC2E8;
  if (!qword_1EF6DC2E8)
  {
    result = MEMORY[0x1C3BAD334](MEMORY[0x1E0DEBB10], MEMORY[0x1E0DEBAF0]);
    atomic_store(result, (unint64_t *)&qword_1EF6DC2E8);
  }
  return result;
}

uint64_t sub_1C1418BE4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C1418C08()
{
  return swift_deallocObject();
}

uint64_t sub_1C1418C18(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1C14159E8(a1, a2, *(_QWORD *)(v2 + 16)) & 1;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1C3BAD2E0](a1, v6, a5);
}

uint64_t sub_1C1418C60()
{
  uint64_t v0;

  MEMORY[0x1C3BAD3F4](*(_QWORD *)(v0 + 16), -1, -1);
  return swift_deallocClassInstance();
}

id sub_1C1418C8C(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v10;

  v4 = sub_1C1425EDC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  sub_1C1425D38();
  sub_1C1426D70();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1C1425D2C();
  v8 = (void *)sub_1C1426A7C();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setService_, v8);

  return objc_msgSend(a1, sel_setDelegate_, a2);
}

void sub_1C1418D6C(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, void *);
  void *v23;
  void (*v24)(uint64_t);
  uint64_t v25;

  sub_1C1425D2C();
  v7 = (void *)sub_1C1426A7C();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithIdentifier_, v7);

  v9 = (void *)objc_opt_self();
  v10 = objc_msgSend(v9, sel_protocolForProtocol_, &unk_1EF6E17C0);
  objc_msgSend(v8, sel_setClient_, v10);

  v11 = objc_msgSend(v9, sel_protocolForProtocol_, &unk_1EF6E18E8);
  objc_msgSend(v8, sel_setServer_, v11);

  v12 = objc_msgSend((id)objc_opt_self(), sel_userInitiated);
  objc_msgSend(a1, sel_setServiceQuality_, v12);

  objc_msgSend(a1, sel_setInterface_, v8);
  objc_msgSend(a1, sel_setInterfaceTarget_, a2);
  v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v13;
  *(_DWORD *)(v14 + 24) = a4;
  v24 = sub_1C141A468;
  v25 = v14;
  v15 = MEMORY[0x1E0C809B0];
  v20 = MEMORY[0x1E0C809B0];
  v21 = 1107296256;
  v22 = sub_1C141AFCC;
  v23 = &block_descriptor_13_2;
  v16 = _Block_copy(&v20);
  swift_release();
  objc_msgSend(a1, sel_setInterruptionHandler_, v16);
  _Block_release(v16);
  v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v17;
  *(_DWORD *)(v18 + 24) = a4;
  v24 = sub_1C141A4B0;
  v25 = v18;
  v20 = v15;
  v21 = 1107296256;
  v22 = sub_1C141AFCC;
  v23 = &block_descriptor_20;
  v19 = _Block_copy(&v20);
  swift_release();
  objc_msgSend(a1, sel_setInvalidationHandler_, v19);
  _Block_release(v19);

}

void sub_1C1419024(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  char *v12;
  os_unfair_lock_s *v13;
  char *v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  _QWORD *v22;
  os_unfair_lock_s *v23;
  uint64_t v24;

  v6 = a2 + 16;
  if (qword_1ED7978F0 != -1)
    swift_once();
  v7 = sub_1C1426854();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED798610);
  v8 = sub_1C1426848();
  v9 = sub_1C1426C80();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_1C1324000, v8, v9, a4, v10, 2u);
    MEMORY[0x1C3BAD3F4](v10, -1, -1);
  }

  swift_beginAccess();
  v11 = MEMORY[0x1C3BAD4B4](v6);
  if (v11)
  {
    v12 = (char *)v11;
    v13 = *(os_unfair_lock_s **)(*(_QWORD *)(v11 + OBJC_IVAR____TtC11SessionCore22AssertionServiceServer_lock) + 16);
    swift_retain();
    os_unfair_lock_lock(v13);
    v14 = &v12[OBJC_IVAR____TtC11SessionCore22AssertionServiceServer__lock_clients];
    swift_beginAccess();
    v15 = sub_1C1327378(a3);
    if ((v16 & 1) != 0)
    {
      v17 = v15;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v19 = *(_QWORD *)v14;
      v24 = *(_QWORD *)v14;
      *(_QWORD *)v14 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1C13BC048();
        v19 = v24;
      }
      v20 = *(void **)(*(_QWORD *)(v19 + 56) + 8 * v17);
      sub_1C13C11F8(v17, v19);
      *(_QWORD *)v14 = v19;

      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    os_unfair_lock_unlock(v13);
    swift_release();
    v21 = __swift_project_boxed_opaque_existential_1(&v12[OBJC_IVAR____TtC11SessionCore22AssertionServiceServer_assertionManager], *(_QWORD *)&v12[OBJC_IVAR____TtC11SessionCore22AssertionServiceServer_assertionManager + 24]);
    v22 = (_QWORD *)*v21;
    v23 = *(os_unfair_lock_s **)(*(_QWORD *)(*v21 + 48) + 16);
    os_unfair_lock_lock(v23);
    sub_1C135E17C(v22, a3);
    os_unfair_lock_unlock(v23);

  }
}

id sub_1C14192E0()
{
  return sub_1C14193AC(type metadata accessor for AssertionServiceServer);
}

uint64_t type metadata accessor for AssertionServiceServer()
{
  return objc_opt_self();
}

id sub_1C14193A0()
{
  return sub_1C14193AC(type metadata accessor for AssertionServiceClient);
}

id sub_1C14193AC(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for AssertionServiceClient()
{
  return objc_opt_self();
}

void sub_1C1419434(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  void *v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  void *v30;
  uint8_t *v31;
  void *v32;
  uint64_t v33;
  void *v34;
  _OWORD v35[2];
  uint64_t v36[4];

  v3 = sub_1C1425DC8();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v31 - v8;
  if (objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR____TtC11SessionCore22AssertionServiceClient_connection), sel_remoteTarget)))
  {
    sub_1C1426DE8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v35, 0, sizeof(v35));
  }
  sub_1C1330398((uint64_t)v35, (uint64_t)v36);
  if (v36[3])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791F00);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v10 = v34;
      if (qword_1ED7978F0 != -1)
        swift_once();
      v11 = sub_1C1426854();
      __swift_project_value_buffer(v11, (uint64_t)qword_1ED798610);
      v12 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
      v12(v9, a1, v3);
      v13 = sub_1C1426848();
      v14 = sub_1C1426C80();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = swift_slowAlloc();
        v33 = a1;
        v16 = (uint8_t *)v15;
        v17 = swift_slowAlloc();
        v32 = v10;
        v18 = v17;
        v36[0] = v17;
        *(_DWORD *)v16 = 136446210;
        v31 = v16 + 4;
        v12(v7, (uint64_t)v9, v3);
        v19 = sub_1C1426AA0();
        *(_QWORD *)&v35[0] = sub_1C132AD90(v19, v20, v36);
        sub_1C1426DB8();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
        _os_log_impl(&dword_1C1324000, v13, v14, "Informing client of invalidated assertion: %{public}s", v16, 0xCu);
        swift_arrayDestroy();
        v21 = v18;
        v10 = v32;
        MEMORY[0x1C3BAD3F4](v21, -1, -1);
        MEMORY[0x1C3BAD3F4](v16, -1, -1);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
      }

      v26 = (void *)sub_1C1425DB0();
      v27 = sub_1C14250D8();
      v29 = v28;

      v30 = (void *)sub_1C14250CC();
      objc_msgSend(v10, sel_didInvalidate_, v30);

      sub_1C13282B4(v27, v29);
      swift_unknownObjectRelease();
      return;
    }
  }
  else
  {
    sub_1C13A9D80((uint64_t)v36);
  }
  if (qword_1ED7978F0 != -1)
    swift_once();
  v22 = sub_1C1426854();
  __swift_project_value_buffer(v22, (uint64_t)qword_1ED798610);
  v23 = sub_1C1426848();
  v24 = sub_1C1426C68();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v25 = 0;
    _os_log_impl(&dword_1C1324000, v23, v24, "Client does not implement expected interface", v25, 2u);
    MEMORY[0x1C3BAD3F4](v25, -1, -1);
  }

}

uint64_t sub_1C14197FC()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  _QWORD v17[5];
  uint64_t v18;

  v2 = sub_1C1425CC0();
  v18 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C1425D98();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (void *)sub_1C14250CC();
  sub_1C1425D5C();

  v10 = __swift_project_boxed_opaque_existential_1(&v0[OBJC_IVAR____TtC11SessionCore22AssertionServiceClient_assertionManager], *(_QWORD *)&v0[OBJC_IVAR____TtC11SessionCore22AssertionServiceClient_assertionManager + 24]);
  v17[3] = type metadata accessor for AssertionServiceClient();
  v17[4] = &off_1E7A8F1D8;
  v17[0] = v0;
  v11 = *v10;
  v12 = v0;
  v13 = v11;
  sub_1C135F2F0((uint64_t)v8, v17, (uint64_t)v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  if (!v1)
  {
    sub_1C1419F04();
    v14 = (void *)sub_1C1425E10();
    v13 = sub_1C14250D8();

    (*(void (**)(char *, uint64_t))(v18 + 8))(v4, v2);
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v13;
}

uint64_t sub_1C14199B0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  char *v6;
  _QWORD v9[5];

  v1 = sub_1C1425CC0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v9[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (void *)sub_1C14250CC();
  sub_1C1419F04();
  sub_1C1425E04();

  __swift_project_boxed_opaque_existential_1(&v0[OBJC_IVAR____TtC11SessionCore22AssertionServiceClient_assertionManager], *(_QWORD *)&v0[OBJC_IVAR____TtC11SessionCore22AssertionServiceClient_assertionManager + 24]);
  v9[3] = type metadata accessor for AssertionServiceClient();
  v9[4] = &off_1E7A8F1D8;
  v9[0] = v0;
  v6 = v0;
  sub_1C13606FC((uint64_t)v4, v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_1C1419B88()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  void *v9;
  uint64_t *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  _QWORD v17[5];
  uint64_t v18;

  v18 = sub_1C1425D20();
  v2 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v4 = (char *)&v17[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C1425CF0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = ((char *)&v17[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = (void *)sub_1C14250CC();
  sub_1C1425CE4();

  v10 = __swift_project_boxed_opaque_existential_1(&v0[OBJC_IVAR____TtC11SessionCore22AssertionServiceClient_assertionManager], *(_QWORD *)&v0[OBJC_IVAR____TtC11SessionCore22AssertionServiceClient_assertionManager + 24]);
  v17[3] = type metadata accessor for AssertionServiceClient();
  v17[4] = &off_1E7A8F1D8;
  v17[0] = v0;
  v11 = *v10;
  v12 = v0;
  v13 = v11;
  sub_1C13618EC(v8, v17, (uint64_t)v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  if (!v1)
  {
    v14 = (void *)sub_1C1425D08();
    v13 = sub_1C14250D8();

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v18);
  }
  (*(void (**)(NSObject *, uint64_t))(v6 + 8))(v8, v5);
  return v13;
}

id sub_1C1419D28(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(uint64_t, unint64_t))
{
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  void *v15;

  v7 = a3;
  v8 = a1;
  v9 = sub_1C14250D8();
  v11 = v10;

  v12 = a5(v9, v11);
  v14 = v13;

  sub_1C13282B4(v9, v11);
  v15 = (void *)sub_1C14250CC();
  sub_1C13282B4(v12, v14);
  return v15;
}

unint64_t sub_1C1419F04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED7930E8;
  if (!qword_1ED7930E8)
  {
    v1 = sub_1C1425CC0();
    result = MEMORY[0x1C3BAD334](MEMORY[0x1E0D8CB38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED7930E8);
  }
  return result;
}

uint64_t sub_1C1419F4C(void *a1, uint64_t a2)
{
  os_unfair_lock_s *v4;
  id v5;
  id v6;
  unsigned int v7;
  _BYTE v9[40];
  _QWORD v10[3];
  uint64_t v11;
  _UNKNOWN **v12;

  v11 = type metadata accessor for AssertionServiceClient();
  v12 = &off_1E7A8F1D8;
  v10[0] = a1;
  v4 = *(os_unfair_lock_s **)(*(_QWORD *)(a2 + 48) + 16);
  v5 = a1;
  os_unfair_lock_lock(v4);
  v6 = objc_msgSend(*(id *)(*__swift_project_boxed_opaque_existential_1(v10, v11)+ OBJC_IVAR____TtC11SessionCore22AssertionServiceClient_connection), sel_remoteProcess);
  v7 = objc_msgSend(v6, sel_pid);

  sub_1C132E0A8((uint64_t)v10, (uint64_t)v9);
  swift_beginAccess();
  sub_1C13B3A74((uint64_t)v9, v7);
  swift_endAccess();
  os_unfair_lock_unlock(v4);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

id sub_1C141A038(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  objc_class *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  objc_super v14;
  _QWORD v15[5];
  _QWORD v16[5];

  v4 = type metadata accessor for AssertionManager();
  v16[3] = v4;
  v16[4] = &off_1E7A8AED0;
  v16[0] = a2;
  v5 = (objc_class *)type metadata accessor for AssertionServiceClient();
  v6 = (char *)objc_allocWithZone(v5);
  v7 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v16, v4);
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t *)((char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v10 + 16))(v9);
  v11 = *v9;
  v15[3] = v4;
  v15[4] = &off_1E7A8AED0;
  v15[0] = v11;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11SessionCore22AssertionServiceClient_connection] = a1;
  sub_1C132E0A8((uint64_t)v15, (uint64_t)&v6[OBJC_IVAR____TtC11SessionCore22AssertionServiceClient_assertionManager]);
  v14.receiver = v6;
  v14.super_class = v5;
  v12 = objc_msgSendSuper2(&v14, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return v12;
}

void sub_1C141A140(void *a1)
{
  char *v1;
  char *v2;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  os_unfair_lock_s *v13;
  char *v14;
  id v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  char *v23;
  _QWORD aBlock[3];
  void *v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;

  v2 = v1;
  v4 = &v1[OBJC_IVAR____TtC11SessionCore22AssertionServiceServer_assertionManager];
  sub_1C132E0A8((uint64_t)&v1[OBJC_IVAR____TtC11SessionCore22AssertionServiceServer_assertionManager], (uint64_t)aBlock);
  v5 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)aBlock, (uint64_t)v26);
  MEMORY[0x1E0C80A78](v5);
  v7 = (_QWORD *)((char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v8 + 16))(v7);
  v9 = *v7;
  v10 = a1;
  v11 = sub_1C141A038((uint64_t)v10, v9);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
  v12 = objc_msgSend(v10, sel_remoteProcess);
  LODWORD(v7) = objc_msgSend(v12, sel_pid);

  v13 = *(os_unfair_lock_s **)(*(_QWORD *)&v2[OBJC_IVAR____TtC11SessionCore22AssertionServiceServer_lock] + 16);
  os_unfair_lock_lock(v13);
  v14 = &v2[OBJC_IVAR____TtC11SessionCore22AssertionServiceServer__lock_clients];
  swift_beginAccess();
  v15 = v11;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v29 = *(_QWORD *)v14;
  *(_QWORD *)v14 = 0x8000000000000000;
  sub_1C13C30DC((uint64_t)v15, v7, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)v14 = v29;
  swift_bridgeObjectRelease();
  swift_endAccess();
  os_unfair_lock_unlock(v13);
  v17 = *__swift_project_boxed_opaque_existential_1(v4, *((_QWORD *)v4 + 3));
  v18 = v15;
  sub_1C1419F4C(v18, v17);

  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v18;
  *(_QWORD *)(v19 + 24) = v2;
  *(_DWORD *)(v19 + 32) = (_DWORD)v7;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = sub_1C141A428;
  *(_QWORD *)(v20 + 24) = v19;
  v27 = sub_1C1327D4C;
  v28 = v20;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1327D10;
  v26 = &block_descriptor_26;
  v21 = _Block_copy(aBlock);
  v22 = v18;
  v23 = v2;
  swift_retain();
  swift_release();
  objc_msgSend(v10, sel_configureConnection_, v21);
  _Block_release(v21);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v2 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(v10, sel_activate);
    swift_release();

  }
}

uint64_t sub_1C141A3FC()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1C141A428(void *a1)
{
  uint64_t v1;

  sub_1C1418D6C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_DWORD *)(v1 + 32));
}

uint64_t sub_1C141A434()
{
  return swift_deallocObject();
}

uint64_t sub_1C141A444()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1C141A468(uint64_t a1)
{
  uint64_t v1;

  sub_1C1419024(a1, *(_QWORD *)(v1 + 16), *(unsigned int *)(v1 + 24), "Connection interrupted");
}

uint64_t sub_1C141A48C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1C141A4B0(uint64_t a1)
{
  uint64_t v1;

  sub_1C1419024(a1, *(_QWORD *)(v1 + 16), *(unsigned int *)(v1 + 24), "Connection invalidated");
}

char *sub_1C141A4E8(char *a1, char *a2, uint64_t a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *(_QWORD *)a2;
    *(_QWORD *)v4 = *(_QWORD *)a2;
    v4 = (char *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v7 = *(int *)(a3 + 20);
    v8 = &a1[v7];
    v9 = &a2[v7];
    v10 = sub_1C14251B0();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v11(&v4[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v10);
  }
  return v4;
}

uint64_t sub_1C141A5A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v7)(uint64_t, uint64_t);

  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1C14251B0();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v7(v4, v5);
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(a1 + *(int *)(a2 + 24), v5);
}

char *sub_1C141A610(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1C14251B0();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v9);
  return a1;
}

char *sub_1C141A69C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1C14251B0();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v9);
  return a1;
}

char *sub_1C141A728(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1C14251B0();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v9);
  return a1;
}

char *sub_1C141A7B4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1C14251B0();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v9);
  return a1;
}

uint64_t sub_1C141A840()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C141A84C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1C14251B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v6);
}

uint64_t sub_1C141A898()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1C141A8A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = sub_1C14251B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1 + *(int *)(a4 + 20), a2, a2, v7);
}

uint64_t type metadata accessor for SlidingWindowExponentialBackoff()
{
  uint64_t result;

  result = qword_1ED793548;
  if (!qword_1ED793548)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1C141A930()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1C14251B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C141A9A8()
{
  double *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char v6;
  double v7;
  uint64_t result;
  double v9;
  double v10;
  double v11;
  double v12;
  unint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;

  v1 = sub_1C14251B0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SlidingWindowExponentialBackoff();
  sub_1C1425108();
  v6 = sub_1C1425180();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v7 = 0.0;
  if ((v6 & 1) != 0)
    goto LABEL_20;
  result = sub_1C1425120();
  if (v9 < 16.0)
  {
    v10 = *v0 + *v0;
    if (v10 > 16.0)
      v10 = 16.0;
    v7 = fmax(v10, 1.0);
    goto LABEL_20;
  }
  if (v9 >= 32.0)
  {
LABEL_20:
    *v0 = v7;
    goto LABEL_21;
  }
  v11 = floor(v9);
  if ((~*(_QWORD *)&v11 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v11 <= -1.0)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v11 >= 1.84467441e19)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v12 = *v0;
  if ((~*(_QWORD *)v0 & 0x7FF0000000000000) == 0)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v12 <= -1.0)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v12 < 1.84467441e19)
  {
    v13 = (unint64_t)v11;
    if (!(unint64_t)v11)
    {
LABEL_21:
      sub_1C142518C();
      return (*(uint64_t (**)(char *, char *, uint64_t))(v2 + 40))((char *)v0 + *(int *)(v5 + 20), v4, v1);
    }
    v14 = 1.0;
    if (v13 >= (unint64_t)v12)
    {
      v15 = 1;
      while (v13 >= 2)
      {
        ++v15;
        v13 >>= 1;
        if (v13 < (unint64_t)v12)
        {
          v14 = (double)v15;
          goto LABEL_19;
        }
      }
      goto LABEL_21;
    }
LABEL_19:
    v7 = floor(v12 / v14);
    goto LABEL_20;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1C141AB80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t result;
  void (*v16)(char *, char *, uint64_t);
  id v17;
  void *v18;
  id v19;
  void *v20;
  double v21;
  double v22;
  void *v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t);
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793B60);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1C14251B0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v31 - v12;
  objc_msgSend(*(id *)(a1 + 16), sel_cancel);
  objc_msgSend(*(id *)(a1 + 16), sel_invalidate);
  v14 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = 0;

  sub_1C13B3358(a2, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    return sub_1C13B33A0((uint64_t)v6);
  v16 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v16(v13, v6, v7);
  v17 = objc_allocWithZone(MEMORY[0x1E0D01720]);
  v18 = (void *)sub_1C1426A7C();
  v19 = objc_msgSend(v17, sel_initWithIdentifier_, v18);

  v20 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v19;

  sub_1C142518C();
  sub_1C1425120();
  v22 = v21;
  v32 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
  result = v32(v11, v7);
  v23 = *(void **)(a1 + 16);
  if (v23)
  {
    if (v22 < 0.0)
      v22 = 1.0;
    v24 = *(void **)(a1 + 32);
    v25 = swift_allocObject();
    swift_weakInit();
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
    v26 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 16) = v25;
    v16((char *)(v27 + v26), v11, v7);
    aBlock[4] = sub_1C141B38C;
    aBlock[5] = v27;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C141AFCC;
    aBlock[3] = &block_descriptor_27;
    v28 = _Block_copy(aBlock);
    v29 = v23;
    v30 = v24;
    swift_release();
    objc_msgSend(v29, sel_scheduleWithFireInterval_leewayInterval_queue_handler_, v30, v28, v22, 0.0);
    _Block_release(v28);

    return v32(v13, v7);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1C141AE80(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t Strong;
  void (*v5)(uint64_t);
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;

  objc_msgSend(a1, sel_invalidate);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v5 = *(void (**)(uint64_t))(Strong + 40);
    if (v5)
    {
      swift_retain();
      v5(a3);
      swift_release();
      sub_1C1382580((uint64_t)v5);
    }
    else
    {
      swift_release();
    }
  }
  else
  {
    if (qword_1ED793988 != -1)
      swift_once();
    v6 = sub_1C1426854();
    __swift_project_value_buffer(v6, (uint64_t)qword_1ED7985E0);
    v7 = sub_1C1426848();
    v8 = sub_1C1426C74();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1C1324000, v7, v8, "Wake manager unexpectedly deallocated", v9, 2u);
      MEMORY[0x1C3BAD3F4](v9, -1, -1);
    }

  }
}

void sub_1C141AFCC(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_1C141B01C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 16);
  if (v1 && (objc_msgSend(v1, sel_cancel), (v2 = *(void **)(v0 + 16)) != 0))
  {
    objc_msgSend(v2, sel_invalidate);
    v3 = *(void **)(v0 + 16);
  }
  else
  {
    v3 = 0;
  }

  swift_release();
  sub_1C1382580(*(_QWORD *)(v0 + 40));
  return v0;
}

uint64_t sub_1C141B080()
{
  sub_1C141B01C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NonwakingTaskScheduler()
{
  return objc_opt_self();
}

_QWORD *sub_1C141B0C0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _DWORD *v8;
  uint64_t v9;
  _QWORD v11[2];

  v1 = sub_1C1426CD4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1C1426C8C();
  MEMORY[0x1E0C80A78](v5);
  v6 = sub_1C14269B0();
  MEMORY[0x1E0C80A78](v6);
  v0[2] = 0;
  type metadata accessor for UnfairLock();
  v7 = swift_allocObject();
  v8 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v7 + 16) = v8;
  *v8 = 0;
  v0[3] = v7;
  sub_1C1330F6C();
  sub_1C1426974();
  v11[1] = MEMORY[0x1E0DEE9D8];
  sub_1C1358EF0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A70);
  sub_1C135C2A8();
  sub_1C1426DF4();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEF8D0], v1);
  v9 = sub_1C1426D04();
  v0[5] = 0;
  v0[6] = 0;
  v0[4] = v9;
  return v0;
}

uint64_t sub_1C141B28C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 40);
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return sub_1C1382580(v3);
}

uint64_t sub_1C141B2A0(uint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;

  v3 = *(os_unfair_lock_s **)(*(_QWORD *)(v1 + 24) + 16);
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_1C141AB80(v1, a1);
  os_unfair_lock_unlock(v3);
  return swift_release();
}

uint64_t sub_1C141B2F4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1C141B318()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1C14251B0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1C141B38C(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_1C14251B0() - 8) + 80);
  sub_1C141AE80(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_1C141B3CC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PowerLogParticipant()
{
  return objc_opt_self();
}

uint64_t sub_1C141B420(uint64_t *a1, uint64_t a2)
{
  int *updated;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  char *v45;
  uint64_t (*v46)(uint64_t);
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  os_unfair_lock_s *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int *v67;
  uint64_t *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int *v81;
  uint64_t *v82;
  char *v83;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;

  v90 = a2;
  updated = (int *)type metadata accessor for PowerLog.UpdateEvent(0);
  MEMORY[0x1E0C80A78](updated);
  v5 = (char *)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793BF8);
  MEMORY[0x1E0C80A78](v6);
  v93 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = sub_1C1425AEC();
  v96 = *(_QWORD *)(v99 - 8);
  MEMORY[0x1E0C80A78](v99);
  v95 = (char *)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C1425A08();
  v10 = MEMORY[0x1E0C80A78](v9);
  v87 = (uint64_t)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v92 = (uint64_t)&v85 - v13;
  MEMORY[0x1E0C80A78](v12);
  v89 = (uint64_t)&v85 - v14;
  v100 = sub_1C14251B0();
  v98 = *(_QWORD *)(v100 - 8);
  v15 = MEMORY[0x1E0C80A78](v100);
  v86 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v91 = (char *)&v85 - v18;
  MEMORY[0x1E0C80A78](v17);
  v88 = (char *)&v85 - v19;
  v94 = type metadata accessor for PowerLog.LifecycleEvent(0);
  v20 = MEMORY[0x1E0C80A78](v94);
  v22 = (char *)&v85 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v85 - v23;
  v25 = type metadata accessor for ActivityManagerEvent(0);
  type metadata accessor for ReplicatorParticipant();
  v26 = swift_dynamicCastClass();
  v27 = type metadata accessor for Activity();
  v28 = *(uint64_t *)((char *)a1 + *(int *)(v27 + 40) + 8);
  type metadata accessor for PushParticipant();
  v29 = swift_dynamicCastClass();
  if (*((unsigned __int8 *)a1 + *(int *)(v25 + 20)) - 1 >= 2)
  {
    v48 = v95;
    v49 = v96;
    v50 = v97;
    if (*((_BYTE *)a1 + *(int *)(v25 + 20)))
    {
      LODWORD(v93) = v28 != 0;
      LODWORD(v92) = v26 != 0;
      v70 = v86;
      sub_1C142518C();
      v71 = (uint64_t)a1 + *(int *)(v27 + 24);
      v72 = v87;
      sub_1C133FD44(v71, v87);
      v73 = v48;
      v74 = v99;
      (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(v48, v72, v99);
      v75 = sub_1C1425A80();
      v77 = v76;
      (*(void (**)(char *, uint64_t))(v49 + 8))(v73, v74);
      v79 = *a1;
      v78 = a1[1];
      swift_bridgeObjectRetain();
      v80 = sub_1C141BAD4(a1);
      (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v22, v70, v100);
      v81 = (int *)v94;
      v82 = (uint64_t *)&v22[*(int *)(v94 + 20)];
      *v82 = v75;
      v82[1] = v77;
      v83 = &v22[v81[6]];
      *(_QWORD *)v83 = v79;
      *((_QWORD *)v83 + 1) = v78;
      v22[v81[7]] = v92;
      v22[v81[8]] = 1;
      *(_QWORD *)&v22[v81[9]] = v80;
      v22[v81[10]] = (char)v93;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v50 + 16), *(_QWORD *)(v50 + 40));
      sub_1C138B668((uint64_t)v22);
      v46 = type metadata accessor for PowerLog.LifecycleEvent;
      v47 = (uint64_t)v22;
    }
    else
    {
      LODWORD(v93) = v28 != 0;
      LODWORD(v92) = v26 != 0;
      v51 = *a1;
      v52 = a1[1];
      v53 = v90;
      v54 = *(os_unfair_lock_s **)(*(_QWORD *)(v90 + 16) + 16);
      os_unfair_lock_lock(v54);
      v55 = swift_retain();
      sub_1C13706D4(v55, v51, v52, v53);
      swift_release();
      os_unfair_lock_unlock(v54);
      v56 = v88;
      sub_1C142518C();
      v57 = (uint64_t)a1 + *(int *)(v27 + 24);
      v58 = v89;
      sub_1C133FD44(v57, v89);
      v59 = v48;
      v60 = v99;
      (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(v48, v58, v99);
      v61 = sub_1C1425A80();
      v63 = v62;
      (*(void (**)(char *, uint64_t))(v49 + 8))(v59, v60);
      v65 = *a1;
      v64 = a1[1];
      swift_bridgeObjectRetain();
      v66 = sub_1C141BAD4(a1);
      (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v24, v56, v100);
      v67 = (int *)v94;
      v68 = (uint64_t *)&v24[*(int *)(v94 + 20)];
      *v68 = v61;
      v68[1] = v63;
      v69 = &v24[v67[6]];
      *(_QWORD *)v69 = v65;
      *((_QWORD *)v69 + 1) = v64;
      v24[v67[7]] = v92;
      v24[v67[8]] = 0;
      *(_QWORD *)&v24[v67[9]] = v66;
      v24[v67[10]] = (char)v93;
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v50 + 16), *(_QWORD *)(v50 + 40));
      sub_1C138B668((uint64_t)v24);
      v46 = type metadata accessor for PowerLog.LifecycleEvent;
      v47 = (uint64_t)v24;
    }
  }
  else
  {
    LODWORD(v94) = v28 != 0;
    LODWORD(v89) = v26 != 0;
    LODWORD(v90) = v29 == 0;
    v30 = (uint64_t)v93;
    sub_1C14253F0();
    v31 = sub_1C1425B40();
    LODWORD(v88) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v30, 1, v31) != 1;
    sub_1C132C860(v30, &qword_1ED793BF8);
    LODWORD(v93) = *((unsigned __int8 *)a1 + *(int *)(v25 + 32));
    v32 = sub_1C1406964();
    v33 = v91;
    sub_1C142518C();
    v34 = (uint64_t)a1 + *(int *)(v27 + 24);
    v35 = v92;
    sub_1C133FD44(v34, v92);
    v36 = v95;
    v37 = v96;
    v38 = v99;
    (*(void (**)(char *, uint64_t, uint64_t))(v96 + 32))(v95, v35, v99);
    v39 = sub_1C1425A80();
    v41 = v40;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v36, v38);
    v43 = *a1;
    v42 = a1[1];
    (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v5, v33, v100);
    v44 = (uint64_t *)&v5[updated[5]];
    *v44 = v39;
    v44[1] = v41;
    v45 = &v5[updated[6]];
    *(_QWORD *)v45 = v43;
    *((_QWORD *)v45 + 1) = v42;
    v5[updated[7]] = v89;
    v5[updated[8]] = (char)v93;
    v5[updated[9]] = (char)v88;
    v5[updated[10]] = v32;
    v5[updated[11]] = v94;
    v5[updated[12]] = v90;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v97 + 16), *(_QWORD *)(v97 + 40));
    swift_bridgeObjectRetain();
    sub_1C138B68C((uint64_t)v5);
    v46 = type metadata accessor for PowerLog.UpdateEvent;
    v47 = (uint64_t)v5;
  }
  return sub_1C1339004(v47, v46);
}

uint64_t sub_1C141BAD4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void (*v25)(char *, unint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD v41[2];
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;

  v3 = sub_1C14267C4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v43 = (char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED791DB8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v45 = (uint64_t)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v47 = (char *)v41 - v9;
  v10 = sub_1C1426320();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v48 = (char *)v41 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7978C0);
  v17 = MEMORY[0x1E0C80A78](v16);
  v46 = (char *)v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v49 = (uint64_t)v41 - v19;
  v20 = *(_QWORD *)(v1 + 80);
  v44 = v1;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 56), v20);
  v21 = sub_1C1426518();
  v22 = *(_QWORD *)(v21 + 16);
  if (!v22)
  {
    v30 = 1;
LABEL_13:
    v32 = (uint64_t)v47;
    v31 = v48;
    v33 = v49;
    goto LABEL_16;
  }
  v41[0] = v4;
  v23 = v21 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  v24 = *(_QWORD *)(v11 + 72);
  v25 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
  v41[1] = v21;
  v42 = v3;
  swift_bridgeObjectRetain();
  while (1)
  {
    v25(v14, v23, v10);
    v26 = sub_1C14262D8();
    if (!v27)
      goto LABEL_3;
    if (v26 == *a1 && v27 == a1[1])
      break;
    v29 = sub_1C1427064();
    swift_bridgeObjectRelease();
    if ((v29 & 1) != 0)
      goto LABEL_15;
LABEL_3:
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    v23 += v24;
    if (!--v22)
    {
      swift_bridgeObjectRelease();
      v30 = 1;
      v3 = v42;
      v4 = v41[0];
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRelease();
LABEL_15:
  swift_bridgeObjectRelease();
  v3 = v42;
  v31 = v48;
  v33 = v49;
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v49, v14, v10);
  v30 = 0;
  v4 = v41[0];
  v32 = (uint64_t)v47;
LABEL_16:
  v34 = (uint64_t)v46;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v33, v30, 1, v10);
  swift_bridgeObjectRelease();
  sub_1C132C344(v33, v34, (uint64_t *)&unk_1ED7978C0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v34, 1, v10) == 1)
  {
    v35 = (uint64_t *)&unk_1ED7978C0;
    sub_1C132C860(v33, (uint64_t *)&unk_1ED7978C0);
    v36 = v34;
    goto LABEL_20;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v31, v34, v10);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v44 + 96), *(_QWORD *)(v44 + 120));
  sub_1C14262E4();
  sub_1C14265C0();
  swift_bridgeObjectRelease();
  v37 = v45;
  sub_1C132C344(v32, v45, &qword_1ED791DB8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v37, 1, v3) == 1)
  {
    v35 = &qword_1ED791DB8;
    sub_1C132C860(v32, &qword_1ED791DB8);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v48, v10);
    sub_1C132C860(v49, (uint64_t *)&unk_1ED7978C0);
    v36 = v37;
LABEL_20:
    sub_1C132C860(v36, v35);
    return 0;
  }
  else
  {
    v39 = v43;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v43, v37, v3);
    v38 = sub_1C1426734();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v39, v3);
    sub_1C132C860(v32, &qword_1ED791DB8);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v48, v10);
    sub_1C132C860(v49, (uint64_t *)&unk_1ED7978C0);
  }
  return v38;
}

id sub_1C141BF3C(void *a1)
{
  objc_msgSend(a1, sel_selector);
  if ((sub_1C142524C() & 1) != 0)
    return objc_msgSend(a1, sel_copyAsOnewayVoid);
  else
    return a1;
}

void sub_1C141BF90(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  os_unfair_lock_s *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1C3BAD4B4](v3);
  if (!v4)
    return;
  v5 = (char *)v4;
  v6 = *(os_unfair_lock_s **)(*(_QWORD *)(v4 + OBJC_IVAR____TtC11SessionCore27QoSObservationServiceServer_lock) + 16);
  swift_retain();
  os_unfair_lock_lock(v6);
  *(_QWORD *)&v5[OBJC_IVAR____TtC11SessionCore27QoSObservationServiceServer__lock_qos] = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = &v5[OBJC_IVAR____TtC11SessionCore27QoSObservationServiceServer__lock_clients];
  swift_beginAccess();
  v8 = *(_QWORD *)v7;
  v9 = *(_QWORD *)v7 + 64;
  v10 = 1 << *(_BYTE *)(*(_QWORD *)v7 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(*(_QWORD *)v7 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  swift_bridgeObjectRetain();
  v14 = 0;
  while (1)
  {
    if (v12)
    {
      v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v16 = v15 | (v14 << 6);
      goto LABEL_6;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v18 >= v13)
      goto LABEL_22;
    v19 = *(_QWORD *)(v9 + 8 * v18);
    ++v14;
    if (!v19)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_22;
      v19 = *(_QWORD *)(v9 + 8 * v14);
      if (!v19)
      {
        v14 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_22;
        v19 = *(_QWORD *)(v9 + 8 * v14);
        if (!v19)
          break;
      }
    }
LABEL_21:
    v12 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_6:
    v17 = *(id *)(*(_QWORD *)(v8 + 56) + 8 * v16);
    sub_1C141C874(v2);

  }
  v20 = v18 + 3;
  if (v20 >= v13)
  {
LABEL_22:
    swift_release();
    os_unfair_lock_unlock(v6);

    swift_release();
    return;
  }
  v19 = *(_QWORD *)(v9 + 8 * v20);
  if (v19)
  {
    v14 = v20;
    goto LABEL_21;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v13)
      goto LABEL_22;
    v19 = *(_QWORD *)(v9 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_21;
  }
LABEL_25:
  __break(1u);
}

id sub_1C141C18C(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v10;

  v4 = sub_1C1425EDC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  sub_1C14257BC();
  sub_1C1426D70();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1C14257B0();
  v8 = (void *)sub_1C1426A7C();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setService_, v8);

  return objc_msgSend(a1, sel_setDelegate_, a2);
}

void sub_1C141C26C(void *a1, uint64_t a2, char *a3, int a4)
{
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  char *v19;
  uint64_t v20;
  void *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;

  sub_1C14257B0();
  v8 = (void *)sub_1C1426A7C();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithIdentifier_, v8);

  v27 = sub_1C141BF3C;
  v28 = 0;
  v10 = MEMORY[0x1E0C809B0];
  v23 = MEMORY[0x1E0C809B0];
  v24 = 1107296256;
  v25 = sub_1C13284C8;
  v26 = &block_descriptor_13_3;
  v11 = _Block_copy(&v23);
  v12 = &unk_1EF6E2F90;
  swift_release();
  v13 = (void *)objc_opt_self();
  v14 = objc_msgSend(v13, sel_protocolForProtocol_interpreter_, v12, v11);

  _Block_release(v11);
  objc_msgSend(v9, sel_setClient_, v14);

  v15 = objc_msgSend(v13, sel_protocolForProtocol_, &unk_1EF6E19A0);
  objc_msgSend(v9, sel_setServer_, v15);

  v16 = objc_msgSend((id)objc_opt_self(), sel_userInitiated);
  objc_msgSend(a1, sel_setServiceQuality_, v16);

  objc_msgSend(a1, sel_setInterface_, v9);
  objc_msgSend(a1, sel_setInterfaceTarget_, a2);
  objc_msgSend(a1, sel_setTargetQueue_, *(_QWORD *)&a3[OBJC_IVAR____TtC11SessionCore27QoSObservationServiceServer_requestProcessingQueue]);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a3;
  *(_DWORD *)(v17 + 24) = a4;
  v27 = sub_1C141D960;
  v28 = v17;
  v23 = v10;
  v24 = 1107296256;
  v25 = sub_1C141AFCC;
  v26 = &block_descriptor_19_3;
  v18 = _Block_copy(&v23);
  v19 = a3;
  swift_release();
  objc_msgSend(a1, sel_setInterruptionHandler_, v18);
  _Block_release(v18);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v19;
  *(_DWORD *)(v20 + 24) = a4;
  v27 = sub_1C141D984;
  v28 = v20;
  v23 = v10;
  v24 = 1107296256;
  v25 = sub_1C141AFCC;
  v26 = &block_descriptor_25_2;
  v21 = _Block_copy(&v23);
  v22 = v19;
  swift_release();
  objc_msgSend(a1, sel_setInvalidationHandler_, v21);
  _Block_release(v21);

}

void sub_1C141C570(uint64_t a1, uint64_t a2, unsigned int a3, const char *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  os_unfair_lock_s *v14;
  uint64_t *v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  void *v21;
  uint64_t v22;

  v7 = sub_1C1426854();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C142683C();
  v11 = sub_1C1426848();
  v12 = sub_1C1426C68();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_1C1324000, v11, v12, a4, v13, 2u);
    MEMORY[0x1C3BAD3F4](v13, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v14 = *(os_unfair_lock_s **)(*(_QWORD *)(a2 + OBJC_IVAR____TtC11SessionCore27QoSObservationServiceServer_lock) + 16);
  os_unfair_lock_lock(v14);
  v15 = (uint64_t *)(a2 + OBJC_IVAR____TtC11SessionCore27QoSObservationServiceServer__lock_clients);
  swift_beginAccess();
  v16 = sub_1C1327378(a3);
  if ((v17 & 1) != 0)
  {
    v18 = v16;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v20 = *v15;
    v22 = *v15;
    *v15 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1C13BC054();
      v20 = v22;
    }
    v21 = *(void **)(*(_QWORD *)(v20 + 56) + 8 * v18);
    sub_1C13C11F8(v18, v20);
    *v15 = v20;

    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  os_unfair_lock_unlock(v14);
}

id sub_1C141C7D0(uint64_t a1)
{
  return sub_1C1359EC8(a1, type metadata accessor for QoSObservationServiceServer);
}

uint64_t type metadata accessor for QoSObservationServiceServer()
{
  return objc_opt_self();
}

uint64_t sub_1C141C874(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  os_unfair_lock_s *v13;
  void *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char *v22;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  _QWORD aBlock[3];
  void *v29;
  uint64_t (*v30)(uint64_t);
  uint64_t v31;
  void *v32;
  _OWORD v33[2];

  v2 = v1;
  v4 = sub_1C1426854();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C14258C4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(*(id *)&v2[OBJC_IVAR____TtC11SessionCore27QoSObservationServiceClient_connection], sel_remoteTarget))
  {
    sub_1C1426DE8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v33, 0, sizeof(v33));
  }
  sub_1C1330398((uint64_t)v33, (uint64_t)aBlock);
  if (v29)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DC4C8);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v12 = v32;
      *(_QWORD *)&v33[0] = 0;
      v13 = *(os_unfair_lock_s **)(*(_QWORD *)&v2[OBJC_IVAR____TtC11SessionCore27QoSObservationServiceClient_lock] + 16);
      os_unfair_lock_lock(v13);
      sub_1C141CC00((uint64_t)v2, a1, (uint64_t *)v33);
      os_unfair_lock_unlock(v13);
      if (!*(_QWORD *)&v33[0])
        return swift_unknownObjectRelease();
      swift_bridgeObjectRetain();
      sub_1C14258B8();
      sub_1C1329AD0((unint64_t *)&unk_1EF6DC4D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FD78], MEMORY[0x1E0C8FD70]);
      v14 = (void *)sub_1C1425BB8();
      v27 = sub_1C14250D8();
      v16 = v15;

      sub_1C1425F0C();
      swift_allocObject();
      v17 = sub_1C1425EF4();
      v18 = (void *)sub_1C14250CC();
      v19 = swift_allocObject();
      *(_QWORD *)(v19 + 16) = v2;
      *(_QWORD *)(v19 + 24) = v17;
      v30 = sub_1C141D3E4;
      v31 = v19;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1C13DCF7C;
      v29 = &block_descriptor_28;
      v20 = v9;
      v21 = _Block_copy(aBlock);
      v22 = v2;
      swift_retain();
      swift_release();
      objc_msgSend(v12, sel_activityQoSDidChange_completion_, v18, v21);
      sub_1C13282B4(v27, v16);
      _Block_release(v21);
      swift_release();
      swift_unknownObjectRelease();

      (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v8);
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1C132C860((uint64_t)aBlock, (uint64_t *)&unk_1ED797BB0);
  }
  sub_1C142683C();
  v24 = sub_1C1426848();
  v25 = sub_1C1426C68();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v26 = 0;
    _os_log_impl(&dword_1C1324000, v24, v25, "Client does not implement expected interface", v26, 2u);
    MEMORY[0x1C3BAD3F4](v26, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C141CC00(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6DC4B8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1C14254EC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1 + OBJC_IVAR____TtC11SessionCore27QoSObservationServiceClient__lock_predicate;
  swift_beginAccess();
  sub_1C141D3EC(v13, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    return sub_1C132C860((uint64_t)v8, (uint64_t *)&unk_1EF6DC4B8);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC11SessionCore27QoSObservationServiceClient__lock_pendingAck) & 1) != 0)
  {
    *(_QWORD *)(a1 + OBJC_IVAR____TtC11SessionCore27QoSObservationServiceClient__lock_bufferedQoSUpdate) = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  else
  {
    *(_BYTE *)(a1 + OBJC_IVAR____TtC11SessionCore27QoSObservationServiceClient__lock_pendingAck) = 1;
    v15 = sub_1C14254D4();
    v16 = swift_bridgeObjectRelease();
    if (v15)
    {
      MEMORY[0x1E0C80A78](v16);
      *(&v18 - 2) = (uint64_t)v12;
      swift_bridgeObjectRetain();
      v17 = sub_1C136CFE4((uint64_t)sub_1C141D434, (uint64_t)(&v18 - 4), a2);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      *a3 = v17;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      *a3 = a2;
      swift_bridgeObjectRetain();
    }
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C141CE18(uint64_t a1, uint64_t a2)
{
  os_unfair_lock_s *v3;
  uint64_t v4;

  v3 = *(os_unfair_lock_s **)(*(_QWORD *)(a2 + OBJC_IVAR____TtC11SessionCore27QoSObservationServiceClient_lock) + 16);
  os_unfair_lock_lock(v3);
  *(_BYTE *)(a2 + OBJC_IVAR____TtC11SessionCore27QoSObservationServiceClient__lock_pendingAck) = 0;
  v4 = *(_QWORD *)(a2 + OBJC_IVAR____TtC11SessionCore27QoSObservationServiceClient__lock_bufferedQoSUpdate);
  *(_QWORD *)(a2 + OBJC_IVAR____TtC11SessionCore27QoSObservationServiceClient__lock_bufferedQoSUpdate) = 0;
  os_unfair_lock_unlock(v3);
  if (v4)
  {
    sub_1C141C874(v4);
    swift_bridgeObjectRelease();
  }
  return sub_1C1425EE8();
}

id sub_1C141CEC4()
{
  return sub_1C1359EC8(0, type metadata accessor for QoSObservationServiceClient);
}

uint64_t sub_1C141CF48()
{
  return type metadata accessor for QoSObservationServiceClient();
}

uint64_t type metadata accessor for QoSObservationServiceClient()
{
  uint64_t result;

  result = qword_1EF6DC438;
  if (!qword_1EF6DC438)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1C141CF8C()
{
  unint64_t v0;

  sub_1C141D030();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_1C141D030()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF6DC448)
  {
    sub_1C14254EC();
    v0 = sub_1C1426DAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF6DC448);
  }
}

uint64_t sub_1C141D084(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  os_unfair_lock_s *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  uint64_t v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6DC4B8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1C3BAD4B4](v1 + OBJC_IVAR____TtC11SessionCore27QoSObservationServiceClient_delegate);
  if (result)
  {
    v7 = result;
    v8 = *(os_unfair_lock_s **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC11SessionCore27QoSObservationServiceClient_lock) + 16);
    os_unfair_lock_lock(v8);
    v9 = sub_1C14254EC();
    v10 = *(_QWORD *)(v9 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v5, a1, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v9);
    v11 = v1 + OBJC_IVAR____TtC11SessionCore27QoSObservationServiceClient__lock_predicate;
    swift_beginAccess();
    sub_1C141D370((uint64_t)v5, v11);
    swift_endAccess();
    os_unfair_lock_unlock(v8);
    v12 = *(os_unfair_lock_s **)(*(_QWORD *)(v7 + OBJC_IVAR____TtC11SessionCore27QoSObservationServiceServer_lock) + 16);
    os_unfair_lock_lock(v12);
    v13 = *(_QWORD *)(v7 + OBJC_IVAR____TtC11SessionCore27QoSObservationServiceServer__lock_qos);
    swift_bridgeObjectRetain();
    os_unfair_lock_unlock(v12);
    sub_1C141C874(v13);
    swift_unknownObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C141D370(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6DC4B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C141D3B8()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1C141D3E4(uint64_t a1)
{
  uint64_t v1;

  return sub_1C141CE18(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1C141D3EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EF6DC4B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C141D434()
{
  return sub_1C14254E0() & 1;
}

id sub_1C141D468(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _DWORD *v6;
  char *v7;
  uint64_t v8;
  id v9;
  objc_super v11;

  *(_QWORD *)&v1[OBJC_IVAR____TtC11SessionCore27QoSObservationServiceClient_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v3 = OBJC_IVAR____TtC11SessionCore27QoSObservationServiceClient_lock;
  type metadata accessor for UnfairLock();
  v4 = swift_allocObject();
  v5 = v1;
  v6 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v4 + 16) = v6;
  *(_QWORD *)&v1[v3] = v4;
  *v6 = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC11SessionCore27QoSObservationServiceClient__lock_bufferedQoSUpdate] = 0;
  v5[OBJC_IVAR____TtC11SessionCore27QoSObservationServiceClient__lock_pendingAck] = 0;
  v7 = &v5[OBJC_IVAR____TtC11SessionCore27QoSObservationServiceClient__lock_predicate];
  v8 = sub_1C14254EC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *(_QWORD *)&v5[OBJC_IVAR____TtC11SessionCore27QoSObservationServiceClient_connection] = a1;
  v9 = a1;

  v11.receiver = v5;
  v11.super_class = (Class)type metadata accessor for QoSObservationServiceClient();
  return objc_msgSendSuper2(&v11, sel_init);
}

void sub_1C141D56C(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  unsigned int v10;
  id v11;
  id v12;
  char *v13;
  id v14;
  unsigned int v15;
  os_unfair_lock_s *v16;
  char *v17;
  char *v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  char *v23;
  char *v24;
  char isEscapingClosureAtFileLocation;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  _QWORD aBlock[6];
  uint64_t v31;

  v2 = v1;
  v4 = sub_1C1426854();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(a1, sel_remoteProcess);
  v9 = (void *)sub_1C1426A7C();
  v10 = objc_msgSend(v8, sel_hasEntitlement_, v9);

  if (v10)
  {
    v11 = objc_allocWithZone((Class)type metadata accessor for QoSObservationServiceClient());
    v12 = a1;
    v13 = (char *)sub_1C141D468(v12);

    v14 = objc_msgSend(v12, sel_remoteProcess);
    v15 = objc_msgSend(v14, sel_pid);

    *(_QWORD *)&v13[OBJC_IVAR____TtC11SessionCore27QoSObservationServiceClient_delegate + 8] = &off_1E7A8F428;
    swift_unknownObjectWeakAssign();
    v16 = *(os_unfair_lock_s **)(*(_QWORD *)&v2[OBJC_IVAR____TtC11SessionCore27QoSObservationServiceServer_lock] + 16);
    os_unfair_lock_lock(v16);
    v17 = &v2[OBJC_IVAR____TtC11SessionCore27QoSObservationServiceServer__lock_clients];
    swift_beginAccess();
    v18 = v13;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v31 = *(_QWORD *)v17;
    *(_QWORD *)v17 = 0x8000000000000000;
    sub_1C13C30E8((uint64_t)v18, v15, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)v17 = v31;
    swift_bridgeObjectRelease();
    swift_endAccess();
    os_unfair_lock_unlock(v16);
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = v18;
    *(_QWORD *)(v20 + 24) = v2;
    *(_DWORD *)(v20 + 32) = v15;
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = sub_1C141D920;
    *(_QWORD *)(v21 + 24) = v20;
    aBlock[4] = sub_1C1327D4C;
    aBlock[5] = v21;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C1327D10;
    aBlock[3] = &block_descriptor_10_6;
    v22 = _Block_copy(aBlock);
    v23 = v18;
    v24 = v2;
    swift_retain();
    swift_release();
    objc_msgSend(v12, sel_configureConnection_, v22);
    _Block_release(v22);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) != 0)
    {
      __break(1u);
    }
    else
    {
      objc_msgSend(v12, sel_activate);
      swift_release();

    }
  }
  else
  {
    sub_1C142683C();
    v26 = sub_1C1426848();
    v27 = sub_1C1426C68();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_1C1324000, v26, v27, "Process is not entitled to listen to the QoS service", v28, 2u);
      MEMORY[0x1C3BAD3F4](v28, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    objc_msgSend(a1, sel_invalidate);
  }
}

uint64_t sub_1C141D8F4()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1C141D920(void *a1)
{
  uint64_t v1;

  sub_1C141C26C(a1, *(_QWORD *)(v1 + 16), *(char **)(v1 + 24), *(_DWORD *)(v1 + 32));
}

uint64_t sub_1C141D92C()
{
  return swift_deallocObject();
}

uint64_t sub_1C141D93C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1C141D960(uint64_t a1)
{
  uint64_t v1;

  sub_1C141C570(a1, *(_QWORD *)(v1 + 16), *(_DWORD *)(v1 + 24), "Connection interrupted");
}

void sub_1C141D984(uint64_t a1)
{
  uint64_t v1;

  sub_1C141C570(a1, *(_QWORD *)(v1 + 16), *(_DWORD *)(v1 + 24), "Connection invalidated");
}

uint64_t sub_1C141D9CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8))();
}

_QWORD *sub_1C141D9D4(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  id v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  id v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;

  v2 = v1;
  v43 = a1;
  v3 = sub_1C142659C();
  v4 = *(_QWORD *)(v3 - 8);
  v41 = v3;
  v42 = v4;
  MEMORY[0x1E0C80A78](v3);
  v40 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C1426CD4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1C1426C8C();
  MEMORY[0x1E0C80A78](v10);
  v11 = sub_1C14269B0();
  MEMORY[0x1E0C80A78](v11);
  sub_1C1426620();
  swift_allocObject();
  v1[2] = sub_1C1426614();
  type metadata accessor for UnfairLock();
  v12 = swift_allocObject();
  v13 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v12 + 16) = v13;
  *v13 = 0;
  v2[4] = v12;
  sub_1C1330F6C();
  sub_1C1426980();
  v45 = MEMORY[0x1E0DEE9D8];
  sub_1C1358EF0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A70);
  sub_1C135C2A8();
  sub_1C1426DF4();
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF8D8], v6);
  v14 = v43;
  v15 = v2;
  v2[3] = sub_1C1426D04();
  if (qword_1ED7936D0 != -1)
    swift_once();
  v16 = qword_1ED798640;
  v2[5] = qword_1ED798640;
  if (v16)
  {
    v39 = v14;
    swift_retain();
    swift_retain();
    v17 = sub_1C1343FB0();
    swift_release();
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v38 = v2;
      v19 = v40;
      v20 = v41;
      v21 = v42;
      v22 = v17;
      v23 = v17 + ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80));
      v43 = *(id *)(v42 + 72);
      v24 = *(void (**)(char *, unint64_t, uint64_t))(v42 + 16);
      v37 = v22;
      swift_bridgeObjectRetain();
      v25 = 0;
      v26 = 0xE000000000000000;
      do
      {
        v24(v19, v23, v20);
        v45 = v25;
        v46 = v26;
        swift_bridgeObjectRetain();
        sub_1C14252D0();
        sub_1C1426584();
        sub_1C14252D0();
        swift_bridgeObjectRelease();
        v25 = v45;
        v26 = v46;
        (*(void (**)(char *, uint64_t))(v21 + 8))(v19, v20);
        swift_bridgeObjectRelease();
        v23 += (unint64_t)v43;
        --v18;
      }
      while (v18);
      v17 = v37;
      swift_bridgeObjectRelease();
      v15 = v38;
    }
    else
    {
      v25 = 0;
      v26 = 0xE000000000000000;
    }
    if (qword_1ED7939A0 != -1)
      swift_once();
    v27 = sub_1C1426854();
    __swift_project_value_buffer(v27, (uint64_t)qword_1ED7986C8);
    swift_bridgeObjectRetain();
    v28 = sub_1C1426848();
    v29 = sub_1C1426C80();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = swift_slowAlloc();
      v45 = v31;
      *(_DWORD *)v30 = 136446210;
      swift_bridgeObjectRetain();
      v44 = sub_1C132AD90(v25, v26, &v45);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v28, v29, "Restored public tokens for environments: %{public}s", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v31, -1, -1);
      MEMORY[0x1C3BAD3F4](v30, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v32 = *(_QWORD *)(v17 + 16);
    if (v32)
    {
      v33 = v17 + ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80));
      v34 = *(_QWORD *)(v42 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_1C1426608();
        v33 += v34;
        --v32;
      }
      while (v32);

      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();

    }
  }
  else
  {

  }
  return v15;
}

uint64_t type metadata accessor for PersistentPublicTokenStore()
{
  return objc_opt_self();
}

uint64_t sub_1C141DFA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  v2 = v1;
  v4 = sub_1C142659C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](v4);
  v7 = *(os_unfair_lock_s **)(*(_QWORD *)(v1 + 32) + 16);
  os_unfair_lock_lock(v7);
  v8 = sub_1C1426608();
  if ((v8 & 1) != 0)
  {
    v12[1] = sub_1C1425F0C();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
    v9 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = v2;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
    swift_retain();
    sub_1C1425F00();
    swift_release();
  }
  os_unfair_lock_unlock(v7);
  return v8 & 1;
}

uint64_t sub_1C141E0F0(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  _QWORD v15[4];
  uint64_t (*v16)(_QWORD);

  v8 = sub_1C142659C();
  v9 = MEMORY[0x1E0C80A78](v8);
  v10 = *(_QWORD *)(a3 + 40);
  if (v10)
  {
    v15[3] = a2;
    v16 = a1;
    v15[1] = v9;
    v15[2] = v15;
    MEMORY[0x1E0C80A78](v9);
    v15[-2] = a4;
    type metadata accessor for ActivityDatabase.MutableStore();
    swift_allocObject();
    v11 = sub_1C134B4D0();
    v12 = *(os_unfair_lock_s **)(*(_QWORD *)(v10 + 96) + 16);
    swift_retain();
    os_unfair_lock_lock(v12);
    MEMORY[0x1E0C80A78](v13);
    v15[-4] = sub_1C141E640;
    v15[-3] = &v15[-4];
    v15[-2] = v11;
    sub_1C1425258();
    os_unfair_lock_unlock(v12);
    swift_release();
    sub_1C1341CC8();
    v9 = swift_release();
    a1 = v16;
  }
  return a1(v9);
}

uint64_t sub_1C141E4B4()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)(*(_QWORD *)v0 + 32) + 16);
  os_unfair_lock_lock(v1);
  v2 = sub_1C14265FC();
  os_unfair_lock_unlock(v1);
  return v2;
}

void sub_1C141E4F8()
{
  uint64_t v0;
  os_unfair_lock_s *v1;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)(*(_QWORD *)v0 + 32) + 16);
  os_unfair_lock_lock(v1);
  sub_1C14265F0();
  os_unfair_lock_unlock(v1);
}

uint64_t sub_1C141E558(uint64_t a1)
{
  return sub_1C141DFA0(a1) & 1;
}

uint64_t sub_1C141E57C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1C142659C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1C141E5F0(uint64_t (*a1)(_QWORD), uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1C142659C() - 8) + 80);
  return sub_1C141E0F0(a1, a2, *(_QWORD *)(v2 + 16), v2 + ((v5 + 24) & ~v5));
}

uint64_t sub_1C141E640()
{
  return sub_1C134421C();
}

uint64_t sub_1C141E668()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  int isUniquelyReferenced_nonNull_native;
  char v22;
  unint64_t v23;
  uint64_t v24;
  _BOOL8 v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  _QWORD *v42;

  v0 = sub_1C14267C4();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v36 - v5;
  swift_retain();
  v7 = sub_1C13445C4();
  swift_release();
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v9 = v7 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
    v10 = *(_QWORD *)(v1 + 72);
    v40 = *(void (**)(char *, char *, uint64_t))(v1 + 16);
    v36 = v7;
    swift_bridgeObjectRetain();
    v11 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v38 = v10;
    v39 = v1;
    v37 = v6;
    while (1)
    {
      v41 = v8;
      v14 = v40;
      v40(v6, (char *)v9, v0);
      v15 = sub_1C1426770();
      v17 = v16;
      v18 = v4;
      v19 = v4;
      v20 = v0;
      v14(v19, v6, v0);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v42 = v11;
      v23 = sub_1C13277A0(v15, v17);
      v24 = v11[2];
      v25 = (v22 & 1) == 0;
      v26 = v24 + v25;
      if (__OFADD__(v24, v25))
        break;
      v27 = v22;
      if (v11[3] >= v26)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1C13BC1FC();
      }
      else
      {
        sub_1C13BFF2C(v26, isUniquelyReferenced_nonNull_native);
        v28 = sub_1C13277A0(v15, v17);
        if ((v27 & 1) != (v29 & 1))
          goto LABEL_19;
        v23 = v28;
      }
      v0 = v20;
      v30 = v42;
      if ((v27 & 1) != 0)
      {
        v13 = v38;
        v12 = v39;
        v4 = v18;
        (*(void (**)(unint64_t, char *, uint64_t))(v39 + 40))(v42[7] + v23 * v38, v18, v0);
      }
      else
      {
        v42[(v23 >> 6) + 8] |= 1 << v23;
        v31 = (uint64_t *)(v30[6] + 16 * v23);
        *v31 = v15;
        v31[1] = v17;
        v13 = v38;
        v12 = v39;
        v4 = v18;
        (*(void (**)(unint64_t, char *, uint64_t))(v39 + 32))(v30[7] + v23 * v38, v18, v0);
        v32 = v30[2];
        v33 = __OFADD__(v32, 1);
        v34 = v32 + 1;
        if (v33)
          goto LABEL_18;
        v30[2] = v34;
        swift_bridgeObjectRetain();
      }
      v11 = v42;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = v37;
      (*(void (**)(char *, uint64_t))(v12 + 8))(v37, v0);
      v9 += v13;
      v8 = v41 - 1;
      if (v41 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    result = sub_1C142707C();
    __break(1u);
  }
  else
  {
    v11 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_16:
    swift_bridgeObjectRelease();
    return (uint64_t)v11;
  }
  return result;
}

uint64_t sub_1C141E970(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[2];

  v10[0] = a1;
  v2 = sub_1C1426CD4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C1426C8C();
  MEMORY[0x1E0C80A78](v6);
  v7 = sub_1C14269B0();
  MEMORY[0x1E0C80A78](v7);
  sub_1C1330F6C();
  sub_1C1426974();
  v10[1] = MEMORY[0x1E0DEE9D8];
  sub_1C1358EF0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A70);
  sub_1C135C2A8();
  sub_1C1426DF4();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF8D0], v2);
  v8 = sub_1C1426D04();
  *(_QWORD *)(v1 + 16) = v10[0];
  *(_QWORD *)(v1 + 24) = v8;
  return v1;
}

uint64_t sub_1C141EB0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void (*v15)(char *, unint64_t, uint64_t);
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_1C14267C4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v10 = sub_1C13445C4();
  swift_release();
  v11 = v10;
  v12 = *(_QWORD *)(v10 + 16);
  if (v12)
  {
    v13 = v11 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v14 = *(_QWORD *)(v7 + 72);
    v21 = a3;
    v22 = v14;
    v15 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    v20 = v11;
    swift_bridgeObjectRetain();
    while (1)
    {
      v15(v9, v13, v6);
      if (sub_1C1426770() == a1 && v16 == a2)
        break;
      v17 = sub_1C1427064();
      swift_bridgeObjectRelease();
      if ((v17 & 1) != 0)
        goto LABEL_10;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      v13 += v22;
      if (!--v12)
      {
        swift_bridgeObjectRelease();
        a3 = v21;
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
LABEL_10:
    swift_bridgeObjectRelease();
    v18 = v21;
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v21, v9, v6);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v18, 0, 1, v6);
  }
  else
  {
LABEL_8:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a3, 1, 1, v6);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C141ED28(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;
  uint64_t v7;

  v4 = sub_1C14267C4();
  MEMORY[0x1E0C80A78](v4);
  v5 = *(_QWORD *)(a3 + 16);
  type metadata accessor for ActivityDatabase.MutableStore();
  swift_allocObject();
  sub_1C134B4D0();
  v6 = *(os_unfair_lock_s **)(*(_QWORD *)(v5 + 96) + 16);
  swift_retain();
  os_unfair_lock_lock(v6);
  sub_1C1425258();
  os_unfair_lock_unlock(v6);
  swift_release();
  sub_1C1341CC8();
  v7 = swift_release();
  return a1(v7);
}

uint64_t sub_1C141F08C(uint64_t (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  os_unfair_lock_s *v5;

  v4 = *(_QWORD *)(a3 + 16);
  type metadata accessor for ActivityDatabase.MutableStore();
  swift_allocObject();
  sub_1C134B4D0();
  v5 = *(os_unfair_lock_s **)(*(_QWORD *)(v4 + 96) + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_1C1425258();
  os_unfair_lock_unlock(v5);
  swift_release();
  sub_1C1341CC8();
  swift_release();
  return a1();
}

uint64_t type metadata accessor for PushBudgetStore()
{
  return objc_opt_self();
}

uint64_t sub_1C141F3CC()
{
  return sub_1C141E668();
}

uint64_t sub_1C141F3EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C141EB0C(a1, a2, a3);
}

uint64_t sub_1C141F40C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = sub_1C14267C4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  v6 = *v1;
  sub_1C1425F0C();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v6;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8 + v7, (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  swift_retain();
  sub_1C1425F00();
  return swift_release();
}

uint64_t sub_1C141F528(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  _QWORD *v6;

  v5 = *v2;
  sub_1C1425F0C();
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = v5;
  v6[3] = a1;
  v6[4] = a2;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C1425F00();
  return swift_release();
}

uint64_t sub_1C141F5D0()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C141F5FC(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v2;

  return sub_1C141F08C(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1C141F608()
{
  uint64_t v0;

  return sub_1C13456C8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1C141F630()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1C14267C4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1C141F6A4(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v2;

  sub_1C14267C4();
  return sub_1C141ED28(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1C141F6F4()
{
  uint64_t v0;

  return sub_1C1344F24(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1C141F71C(void *a1, uint64_t a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _DWORD *v12;
  id v13;
  objc_class *v14;
  id v15;
  uint64_t v16;
  void *v17;
  void *v18;
  char *v19;
  id v20;
  uint64_t result;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  char v27;
  id v28;
  _QWORD aBlock[6];
  objc_super v30;

  v25 = a1;
  v26 = a2;
  v24 = sub_1C1426CD4();
  v3 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1C1426C8C();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v6);
  v8 = sub_1C14269B0();
  MEMORY[0x1E0C80A78](v8);
  *(_QWORD *)&v2[OBJC_IVAR____TtC11SessionCore19AuthorizationServer_listener] = 0;
  *(_DWORD *)&v2[OBJC_IVAR____TtC11SessionCore19AuthorizationServer_serverStartupToken] = -1;
  v9 = OBJC_IVAR____TtC11SessionCore19AuthorizationServer_lock;
  type metadata accessor for UnfairLock();
  v10 = swift_allocObject();
  v11 = v2;
  v12 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v10 + 16) = v12;
  *v12 = 0;
  *(_QWORD *)&v2[v9] = v10;
  *(_QWORD *)&v11[OBJC_IVAR____TtC11SessionCore19AuthorizationServer_clients] = MEMORY[0x1E0DEE9E8];
  sub_1C1330EEC(0, (unint64_t *)&qword_1ED797AA8);
  sub_1C1426998();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1C1329AD0((unint64_t *)&qword_1ED7939F0, v7, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A70);
  sub_1C132C820((unint64_t *)&qword_1ED797A80, (uint64_t *)&unk_1ED797A70, MEMORY[0x1E0DEAF38]);
  sub_1C1426DF4();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF8D8], v24);
  v13 = v25;
  *(_QWORD *)&v11[OBJC_IVAR____TtC11SessionCore19AuthorizationServer_requestProcessingQueue] = sub_1C1426D04();
  *(_QWORD *)&v11[OBJC_IVAR____TtC11SessionCore19AuthorizationServer_authorizationManager] = v26;
  swift_retain();

  v14 = (objc_class *)type metadata accessor for AuthorizationServer();
  v30.receiver = v11;
  v30.super_class = v14;
  v15 = objc_msgSendSuper2(&v30, sel_init);
  v28 = v15;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = sub_1C1422DE0;
  *(_QWORD *)(v16 + 24) = &v27;
  aBlock[4] = sub_1C1327D4C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1327D10;
  aBlock[3] = &block_descriptor_48;
  v17 = _Block_copy(aBlock);
  v18 = (void *)objc_opt_self();
  v19 = (char *)v15;
  swift_retain();
  v20 = objc_msgSend(v18, sel_listenerWithConfigurator_, v17);
  _Block_release(v17);
  swift_release();
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();

  swift_release();
  result = swift_release();
  if ((v15 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v22 = *(void **)&v19[OBJC_IVAR____TtC11SessionCore19AuthorizationServer_listener];
    *(_QWORD *)&v19[OBJC_IVAR____TtC11SessionCore19AuthorizationServer_listener] = v20;

    return (uint64_t)v19;
  }
  return result;
}

id sub_1C141FACC(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v10;

  v4 = sub_1C1425EDC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  sub_1C14257A4();
  sub_1C1426D70();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1C1425798();
  v8 = (void *)sub_1C1426A7C();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setService_, v8);

  return objc_msgSend(a1, sel_setDelegate_, a2);
}

void sub_1C141FBAC(void *a1, void *a2, char *a3)
{
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char *v15;
  id v16;
  uint64_t v17;
  void *v18;
  char *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, void *);
  void *v24;
  void (*v25)(uint64_t);
  uint64_t v26;

  sub_1C1425798();
  v6 = (void *)sub_1C1426A7C();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithIdentifier_, v6);

  v8 = (void *)objc_opt_self();
  v9 = objc_msgSend(v8, sel_protocolForProtocol_, &unk_1EF6E2F30);
  objc_msgSend(v7, sel_setClient_, v9);

  v10 = objc_msgSend(v8, sel_protocolForProtocol_, &unk_1EF6E1C28);
  objc_msgSend(v7, sel_setServer_, v10);

  v11 = objc_msgSend((id)objc_opt_self(), sel_utility);
  objc_msgSend(a1, sel_setServiceQuality_, v11);

  objc_msgSend(a1, sel_setInterface_, v7);
  objc_msgSend(a1, sel_setInterfaceTarget_, a2);
  objc_msgSend(a1, sel_setTargetQueue_, *(_QWORD *)&a3[OBJC_IVAR____TtC11SessionCore19AuthorizationServer_requestProcessingQueue]);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a3;
  *(_QWORD *)(v12 + 24) = a2;
  v25 = sub_1C1422CE4;
  v26 = v12;
  v13 = MEMORY[0x1E0C809B0];
  v21 = MEMORY[0x1E0C809B0];
  v22 = 1107296256;
  v23 = sub_1C141AFCC;
  v24 = &block_descriptor_31;
  v14 = _Block_copy(&v21);
  v15 = a3;
  v16 = a2;
  swift_release();
  objc_msgSend(a1, sel_setInterruptionHandler_, v14);
  _Block_release(v14);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v15;
  *(_QWORD *)(v17 + 24) = v16;
  v25 = sub_1C1422D04;
  v26 = v17;
  v21 = v13;
  v22 = 1107296256;
  v23 = sub_1C141AFCC;
  v24 = &block_descriptor_37_0;
  v18 = _Block_copy(&v21);
  v19 = v15;
  v20 = v16;
  swift_release();
  objc_msgSend(a1, sel_setInvalidationHandler_, v18);
  _Block_release(v18);

}

void sub_1C141FE4C(uint64_t a1, uint64_t a2, void *a3, const char *a4)
{
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  os_unfair_lock_s *v11;
  void *v12;

  if (qword_1ED791EA8 != -1)
    swift_once();
  v7 = sub_1C1426854();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED798520);
  v8 = sub_1C1426848();
  v9 = sub_1C1426C68();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_1C1324000, v8, v9, a4, v10, 2u);
    MEMORY[0x1C3BAD3F4](v10, -1, -1);
  }

  v11 = *(os_unfair_lock_s **)(*(_QWORD *)(a2 + OBJC_IVAR____TtC11SessionCore19AuthorizationServer_lock) + 16);
  os_unfair_lock_lock(v11);
  swift_beginAccess();
  v12 = (void *)sub_1C1354A60(a3);
  swift_endAccess();
  os_unfair_lock_unlock(v11);

}

id sub_1C1420034(uint64_t a1)
{
  return sub_1C1359EC8(a1, type metadata accessor for AuthorizationServer);
}

uint64_t type metadata accessor for AuthorizationServer()
{
  return objc_opt_self();
}

void *sub_1C14200C8(void *a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  objc_class *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  char *v23;
  void *v24;
  uint64_t v25;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  id v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  id v34;
  char *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  objc_super v44;

  v37 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED791EC0);
  v6 = *(_QWORD *)(v5 - 8);
  v38 = v5;
  v39 = v6;
  MEMORY[0x1E0C80A78](v5);
  v35 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793A00);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED793120);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = v11;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&v2[OBJC_IVAR____TtC11SessionCoreP33_3EB6553D2992046DCD21680C8109860026AuthorizationServiceClient_cancellables] = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)&v2[OBJC_IVAR____TtC11SessionCoreP33_3EB6553D2992046DCD21680C8109860026AuthorizationServiceClient_authorizationLevelBundlesObserving] = v16;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11SessionCoreP33_3EB6553D2992046DCD21680C8109860026AuthorizationServiceClient_connection] = a1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC11SessionCoreP33_3EB6553D2992046DCD21680C8109860026AuthorizationServiceClient_authorizationManager] = a2;
  v17 = (objc_class *)type metadata accessor for AuthorizationServiceClient();
  v44.receiver = v2;
  v44.super_class = v17;
  v36 = a1;
  swift_retain();
  v34 = objc_msgSendSuper2(&v44, sel_init);
  v41 = OBJC_IVAR____TtC11SessionCoreP33_3EB6553D2992046DCD21680C8109860026AuthorizationServiceClient_authorizationManager;
  v18 = v34;
  v42 = sub_1C13392E4();
  sub_1C1330EEC(0, (unint64_t *)&qword_1ED797AA8);
  v43 = (id)sub_1C1426CE0();
  v19 = sub_1C1426CA4();
  v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v33 = v19;
  v32(v10, 1, 1, v19);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED793150);
  sub_1C132C820(&qword_1ED793148, &qword_1ED793150, MEMORY[0x1E0C95D90]);
  v40 = sub_1C1422D24();
  sub_1C1426914();
  sub_1C132C860((uint64_t)v10, (uint64_t *)&unk_1ED793A00);

  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v29 = sub_1C132C820(&qword_1ED793118, (uint64_t *)&unk_1ED793120, MEMORY[0x1E0C95CB8]);
  v27 = v13;
  sub_1C1426938();
  swift_release();
  v28 = *(void (**)(char *, uint64_t))(v12 + 8);
  v28(v15, v13);
  v30 = v18;
  swift_beginAccess();
  sub_1C14268A8();
  swift_endAccess();
  swift_release();
  v42 = sub_1C1339388();
  v43 = (id)sub_1C1426CE0();
  v21 = v32;
  v20 = v33;
  v32(v10, 1, 1, v33);
  sub_1C1426914();
  sub_1C132C860((uint64_t)v10, (uint64_t *)&unk_1ED793A00);

  swift_release();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v22 = v27;
  sub_1C1426938();
  swift_release();
  v28(v15, v22);
  swift_beginAccess();
  sub_1C14268A8();
  swift_endAccess();
  swift_release();
  v42 = sub_1C133942C();
  v43 = (id)sub_1C1426CE0();
  v21(v10, 1, 1, v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED7927D0);
  sub_1C132C820(&qword_1ED7927C8, &qword_1ED7927D0, MEMORY[0x1E0C95D90]);
  v23 = v35;
  sub_1C1426914();
  sub_1C132C860((uint64_t)v10, (uint64_t *)&unk_1ED793A00);

  swift_release();
  swift_allocObject();
  v24 = v30;
  swift_unknownObjectWeakInit();
  sub_1C132C820(&qword_1ED7927A0, (uint64_t *)&unk_1ED791EC0, MEMORY[0x1E0C95CB8]);
  v25 = v38;
  sub_1C1426938();
  swift_release();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v23, v25);
  swift_beginAccess();
  sub_1C14268A8();
  swift_endAccess();
  swift_release();

  swift_release();
  return v24;
}

void sub_1C1420654(uint64_t *a1, uint64_t a2, int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v4 = *a1;
  v5 = a2 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1C3BAD4B4](v5);
  if (v6)
  {
    v7 = (void *)v6;
    sub_1C1420718(v4, a3);

  }
}

void sub_1C14206C0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1C3BAD4B4](v3);
  if (v4)
  {
    v5 = (void *)v4;
    sub_1C1420C4C(v2);

  }
}

void sub_1C1420718(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  void *v25;
  char **v26;
  unint64_t v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  _QWORD *v32;
  BOOL v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  int64_t v39;
  id v40;
  uint64_t v41;
  NSObject *v42;
  void *v43;
  _OWORD v44[2];
  _BYTE v45[24];
  uint64_t v46;

  LODWORD(v42) = a2;
  v4 = sub_1C14256E4();
  v41 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void **)(v2
                + OBJC_IVAR____TtC11SessionCoreP33_3EB6553D2992046DCD21680C8109860026AuthorizationServiceClient_connection);
  v8 = objc_msgSend(v7, sel_remoteProcess);
  v9 = objc_msgSend(v8, sel_bundleIdentifier);

  if (!v9)
  {
    if (qword_1ED791EA8 != -1)
      swift_once();
    v13 = sub_1C1426854();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ED798520);
    v42 = sub_1C1426848();
    v14 = sub_1C1426C68();
    if (os_log_type_enabled(v42, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_1C1324000, v42, v14, "No bundle identifier for client's process", v15, 2u);
      MEMORY[0x1C3BAD3F4](v15, -1, -1);
    }

    return;
  }
  v10 = sub_1C1426A88();
  v12 = v11;

  if (objc_msgSend(v7, sel_remoteTarget))
  {
    sub_1C1426DE8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v44, 0, sizeof(v44));
  }
  sub_1C132A724((uint64_t)v44, (uint64_t)v45, (uint64_t *)&unk_1ED797BB0);
  if (!v46)
  {
    swift_bridgeObjectRelease();
    sub_1C132C860((uint64_t)v45, (uint64_t *)&unk_1ED797BB0);
    goto LABEL_42;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED792850);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_42:
    if (qword_1ED791EA8 != -1)
      goto LABEL_49;
    goto LABEL_43;
  }
  v40 = v43;
  v16 = *(_QWORD *)(a1 + 64);
  v38 = a1 + 64;
  v17 = 1 << *(_BYTE *)(a1 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v39 = (unint64_t)(v17 + 63) >> 6;
  swift_bridgeObjectRetain();
  v20 = 0;
  while (v19)
  {
    v27 = __clz(__rbit64(v19));
    v19 &= v19 - 1;
    v28 = v27 | (v20 << 6);
LABEL_34:
    v32 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v28);
    v33 = *v32 == v10 && v32[1] == v12;
    if (v33 || (sub_1C1427064() & 1) != 0)
    {
      sub_1C14256CC();
      sub_1C1329AD0((unint64_t *)&unk_1EF6DC5B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FAE8], MEMORY[0x1E0C8FAE0]);
      v21 = (void *)sub_1C1425BB8();
      v22 = sub_1C14250D8();
      v24 = v23;

      v25 = (void *)sub_1C14250CC();
      v26 = &selRef_activityAuthorizationDidChangeWithOptions_;
      if ((v42 & 1) != 0)
        v26 = &selRef_frequentUpdatesAuthorizationDidChangeWithOptions_;
      objc_msgSend(v40, *v26, v25, v38);
      sub_1C13282B4(v22, v24);

      (*(void (**)(char *, uint64_t))(v41 + 8))(v6, v4);
    }
  }
  v29 = v20 + 1;
  if (__OFADD__(v20, 1))
  {
    __break(1u);
    goto LABEL_48;
  }
  if (v29 >= v39)
    goto LABEL_46;
  v30 = *(_QWORD *)(v38 + 8 * v29);
  ++v20;
  if (v30)
    goto LABEL_33;
  v20 = v29 + 1;
  if (v29 + 1 >= v39)
    goto LABEL_46;
  v30 = *(_QWORD *)(v38 + 8 * v20);
  if (v30)
    goto LABEL_33;
  v20 = v29 + 2;
  if (v29 + 2 >= v39)
    goto LABEL_46;
  v30 = *(_QWORD *)(v38 + 8 * v20);
  if (v30)
  {
LABEL_33:
    v19 = (v30 - 1) & v30;
    v28 = __clz(__rbit64(v30)) + (v20 << 6);
    goto LABEL_34;
  }
  v31 = v29 + 3;
  if (v31 >= v39)
  {
LABEL_46:
    swift_bridgeObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    return;
  }
  v30 = *(_QWORD *)(v38 + 8 * v31);
  if (v30)
  {
    v20 = v31;
    goto LABEL_33;
  }
  while (1)
  {
    v20 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v20 >= v39)
      goto LABEL_46;
    v30 = *(_QWORD *)(v38 + 8 * v20);
    ++v31;
    if (v30)
      goto LABEL_33;
  }
LABEL_48:
  __break(1u);
LABEL_49:
  swift_once();
LABEL_43:
  v34 = sub_1C1426854();
  __swift_project_value_buffer(v34, (uint64_t)qword_1ED798520);
  v35 = sub_1C1426848();
  v36 = sub_1C1426C68();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v37 = 0;
    _os_log_impl(&dword_1C1324000, v35, v36, "No remote target for expected interface", v37, 2u);
    MEMORY[0x1C3BAD3F4](v37, -1, -1);
  }

}

void sub_1C1420C4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  BOOL v44;
  void *v45;
  void *v46;
  uint64_t v47;
  _QWORD *v48;
  BOOL v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  id v58;
  int64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  unint64_t v65;
  _BYTE v66[24];
  uint64_t v67;
  void *v68;
  _OWORD v69[3];

  v63 = a1;
  v2 = sub_1C142575C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED792820);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v54 - v10;
  if (objc_msgSend(*(id *)(v1+ OBJC_IVAR____TtC11SessionCoreP33_3EB6553D2992046DCD21680C8109860026AuthorizationServiceClient_connection), sel_remoteTarget))
  {
    sub_1C1426DE8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v69, 0, 32);
  }
  sub_1C132A724((uint64_t)v69, (uint64_t)v66, (uint64_t *)&unk_1ED797BB0);
  if (!v67)
  {
    sub_1C132C860((uint64_t)v66, (uint64_t *)&unk_1ED797BB0);
LABEL_52:
    if (qword_1ED791EA8 != -1)
      goto LABEL_58;
    goto LABEL_53;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED792850);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_52;
  v61 = v5;
  v12 = v63;
  v13 = *(_QWORD *)(v63 + 64);
  v57 = v63 + 64;
  v58 = v68;
  v14 = *(_BYTE *)(v63 + 32);
  v62 = v3;
  v15 = 1 << v14;
  v16 = -1 << (1 << v14);
  if (v15 < 64)
    v17 = ~v16;
  else
    v17 = -1;
  v18 = v17 & v13;
  v19 = (uint64_t *)(v1
                  + OBJC_IVAR____TtC11SessionCoreP33_3EB6553D2992046DCD21680C8109860026AuthorizationServiceClient_authorizationLevelBundlesObserving);
  swift_bridgeObjectRetain();
  v64 = v19;
  swift_beginAccess();
  v20 = 0;
  v21 = v15 + 63;
  v22 = v62;
  v21 >>= 6;
  v54 = v21 - 1;
  v59 = v21;
  v56 = v21 - 5;
  v55 = v12 + 104;
  v23 = v61;
  v60 = v2;
  while (1)
  {
    if (v18)
    {
      v24 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v65 = v20;
      v25 = v24 | (v20 << 6);
      goto LABEL_15;
    }
    v31 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v31 >= v59)
    {
      v33 = v20;
    }
    else
    {
      v32 = *(_QWORD *)(v57 + 8 * v31);
      if (v32)
        goto LABEL_19;
      v33 = v20 + 1;
      if ((uint64_t)(v20 + 2) < v59)
      {
        v32 = *(_QWORD *)(v57 + 8 * (v20 + 2));
        if (v32)
        {
          v31 = v20 + 2;
          goto LABEL_19;
        }
        v33 = v20 + 2;
        if ((uint64_t)(v20 + 3) < v59)
        {
          v32 = *(_QWORD *)(v57 + 8 * (v20 + 3));
          if (v32)
          {
            v31 = v20 + 3;
LABEL_19:
            v18 = (v32 - 1) & v32;
            v25 = __clz(__rbit64(v32)) + (v31 << 6);
            v65 = v31;
LABEL_15:
            v26 = *(_QWORD *)(v63 + 56);
            v27 = (_QWORD *)(*(_QWORD *)(v63 + 48) + 16 * v25);
            v28 = v27[1];
            *(_QWORD *)v9 = *v27;
            *((_QWORD *)v9 + 1) = v28;
            v29 = v26 + *(_QWORD *)(v22 + 72) * v25;
            v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED792818);
            (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(&v9[*(int *)(v30 + 48)], v29, v2);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v9, 0, 1, v30);
            swift_bridgeObjectRetain();
            goto LABEL_22;
          }
          v31 = v20 + 4;
          v33 = v20 + 3;
          if ((uint64_t)(v20 + 4) < v59)
          {
            v32 = *(_QWORD *)(v57 + 8 * v31);
            if (v32)
              goto LABEL_19;
            while (v56 != v20)
            {
              v32 = *(_QWORD *)(v55 + 8 * v20++);
              if (v32)
              {
                v31 = v20 + 4;
                goto LABEL_19;
              }
            }
            v33 = v54;
          }
        }
      }
    }
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED792818);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v9, 1, 1, v34);
    v18 = 0;
    v65 = v33;
LABEL_22:
    sub_1C132A724((uint64_t)v9, (uint64_t)v11, &qword_1ED792820);
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED792818);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v11, 1, v35) == 1)
    {
      swift_unknownObjectRelease();
      swift_release();
      return;
    }
    v37 = *(_QWORD *)v11;
    v36 = *((_QWORD *)v11 + 1);
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v23, &v11[*(int *)(v35 + 48)], v2);
    v38 = *v64;
    if (!*(_QWORD *)(*v64 + 16))
      goto LABEL_11;
    sub_1C14270E8();
    swift_bridgeObjectRetain();
    sub_1C1426AD0();
    v39 = sub_1C1427100();
    v40 = -1 << *(_BYTE *)(v38 + 32);
    v41 = v39 & ~v40;
    if (((*(_QWORD *)(v38 + 56 + ((v41 >> 3) & 0xFFFFFFFFFFFFF8)) >> v41) & 1) == 0)
      goto LABEL_10;
    v42 = *(_QWORD *)(v38 + 48);
    v43 = (_QWORD *)(v42 + 16 * v41);
    v44 = *v43 == v37 && v43[1] == v36;
    if (!v44 && (sub_1C1427064() & 1) == 0)
    {
      v47 = ~v40;
      while (1)
      {
        v41 = (v41 + 1) & v47;
        if (((*(_QWORD *)(v38 + 56 + ((v41 >> 3) & 0xFFFFFFFFFFFFF8)) >> v41) & 1) == 0)
          break;
        v48 = (_QWORD *)(v42 + 16 * v41);
        v49 = *v48 == v37 && v48[1] == v36;
        if (v49 || (sub_1C1427064() & 1) != 0)
          goto LABEL_30;
      }
LABEL_10:
      swift_bridgeObjectRelease();
      v2 = v60;
      v23 = v61;
      v22 = v62;
LABEL_11:
      (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v2);
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
LABEL_30:
    swift_bridgeObjectRelease();
    v45 = (void *)sub_1C1426A7C();
    swift_bridgeObjectRelease();
    v23 = v61;
    sub_1C1425750();
    v46 = (void *)sub_1C1426C38();
    objc_msgSend(v58, sel_activityAuthorizationLevelDidChangeForBundleIdentifier_authorizationCount_, v45, v46);

    v22 = v62;
    v2 = v60;
    (*(void (**)(char *, uint64_t))(v62 + 8))(v23, v60);
LABEL_12:
    v20 = v65;
  }
  __break(1u);
LABEL_58:
  swift_once();
LABEL_53:
  v50 = sub_1C1426854();
  __swift_project_value_buffer(v50, (uint64_t)qword_1ED798520);
  v51 = sub_1C1426848();
  v52 = sub_1C1426C68();
  if (os_log_type_enabled(v51, v52))
  {
    v53 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v53 = 0;
    _os_log_impl(&dword_1C1324000, v51, v52, "No remote target for expected interface", v53, 2u);
    MEMORY[0x1C3BAD3F4](v53, -1, -1);
  }

}

id sub_1C142130C()
{
  return sub_1C1359EC8(0, type metadata accessor for AuthorizationServiceClient);
}

uint64_t type metadata accessor for AuthorizationServiceClient()
{
  return objc_opt_self();
}

uint64_t sub_1C1421394(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  unsigned __int8 v10;
  char v11;
  _BYTE *v13;
  uint64_t v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EF6DAEB0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend(*(id *)(v2+ OBJC_IVAR____TtC11SessionCoreP33_3EB6553D2992046DCD21680C8109860026AuthorizationServiceClient_connection), sel_remoteProcess);
  v9 = (void *)sub_1C1426A7C();
  v10 = objc_msgSend(v8, sel_hasEntitlement_, v9);

  if ((v10 & 1) != 0)
  {
    v11 = sub_1C14256D8();
    sub_1C14256C0();
    sub_1C1339A54(v11 & 1, a1, a2, (uint64_t)v7);
    return sub_1C132C860((uint64_t)v7, &qword_1EF6DAEB0);
  }
  else
  {
    sub_1C14229D0();
    swift_allocError();
    *v13 = 1;
    return swift_willThrow();
  }
}

uint64_t sub_1C142150C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v5;
  void *v6;
  unsigned int v7;
  uint64_t v8;
  char v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _BYTE *v16;
  _QWORD v17[6];

  v5 = objc_msgSend(*(id *)(v2+ OBJC_IVAR____TtC11SessionCoreP33_3EB6553D2992046DCD21680C8109860026AuthorizationServiceClient_connection), sel_remoteProcess);
  v6 = (void *)sub_1C1426A7C();
  v7 = objc_msgSend(v5, sel_hasEntitlement_, v6);

  if (v7)
  {
    v8 = *(_QWORD *)(v2
                   + OBJC_IVAR____TtC11SessionCoreP33_3EB6553D2992046DCD21680C8109860026AuthorizationServiceClient_authorizationManager);
    v9 = sub_1C14256D8();
    v10 = *(NSObject **)(v8 + 72);
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = v8;
    *(_BYTE *)(v11 + 24) = v9 & 1;
    *(_QWORD *)(v11 + 32) = a1;
    *(_QWORD *)(v11 + 40) = a2;
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = sub_1C1422A88;
    *(_QWORD *)(v12 + 24) = v11;
    v17[4] = sub_1C13A469C;
    v17[5] = v12;
    v17[0] = MEMORY[0x1E0C809B0];
    v17[1] = 1107296256;
    v17[2] = sub_1C137B458;
    v17[3] = &block_descriptor_16_4;
    v13 = _Block_copy(v17);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    dispatch_sync(v10, v13);
    _Block_release(v13);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return result;
    __break(1u);
  }
  sub_1C14229D0();
  swift_allocError();
  *v16 = 1;
  return swift_willThrow();
}

uint64_t sub_1C142171C(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, char *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  _QWORD v22[2];
  void (*v23)(uint64_t, uint64_t, char *);

  v22[1] = a5;
  v23 = a6;
  v8 = sub_1C14256E4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1C1426A88();
  v14 = v13;
  v15 = a4;
  v16 = a1;
  v17 = sub_1C14250D8();
  v19 = v18;

  v20 = (void *)sub_1C14250CC();
  sub_1C1329AD0((unint64_t *)&unk_1EF6DC5B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8FAE8], MEMORY[0x1E0C8FAE0]);
  sub_1C1425BAC();

  v23(v12, v14, v11);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);

  sub_1C13282B4(v17, v19);
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1C14218D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v5;
  void *v6;
  unsigned int v7;
  uint64_t v8;
  NSObject *v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  uint64_t result;
  _BYTE *v14;
  _QWORD v15[6];

  v5 = objc_msgSend(*(id *)(v2+ OBJC_IVAR____TtC11SessionCoreP33_3EB6553D2992046DCD21680C8109860026AuthorizationServiceClient_connection), sel_remoteProcess);
  v6 = (void *)sub_1C1426A7C();
  v7 = objc_msgSend(v5, sel_hasEntitlement_, v6);

  if (v7)
  {
    v8 = *(_QWORD *)(v2
                   + OBJC_IVAR____TtC11SessionCoreP33_3EB6553D2992046DCD21680C8109860026AuthorizationServiceClient_authorizationManager);
    v9 = *(NSObject **)(v8 + 72);
    v10 = (_QWORD *)swift_allocObject();
    v10[2] = v8;
    v10[3] = a1;
    v10[4] = a2;
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = sub_1C1422A40;
    *(_QWORD *)(v11 + 24) = v10;
    v15[4] = sub_1C133FF1C;
    v15[5] = v11;
    v15[0] = MEMORY[0x1E0C809B0];
    v15[1] = 1107296256;
    v15[2] = sub_1C137B458;
    v15[3] = &block_descriptor_29;
    v12 = _Block_copy(v15);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    dispatch_sync(v9, v12);
    _Block_release(v12);
    LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    result = swift_release();
    if ((v8 & 1) == 0)
      return result;
    __break(1u);
  }
  sub_1C14229D0();
  swift_allocError();
  *v14 = 1;
  return swift_willThrow();
}

uint64_t sub_1C1421B58()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  unsigned __int8 v9;

  v1 = objc_msgSend(*(id *)(v0+ OBJC_IVAR____TtC11SessionCoreP33_3EB6553D2992046DCD21680C8109860026AuthorizationServiceClient_connection), sel_remoteProcess);
  v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (v2)
  {
    sub_1C1426A88();

    MEMORY[0x1E0C80A78](v3);
    sub_1C1426CEC();
    swift_bridgeObjectRelease();
    return v9;
  }
  else
  {
    if (qword_1ED791EA8 != -1)
      swift_once();
    v5 = sub_1C1426854();
    __swift_project_value_buffer(v5, (uint64_t)qword_1ED798520);
    v6 = sub_1C1426848();
    v7 = sub_1C1426C68();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1C1324000, v6, v7, "No remote process found for connection", v8, 2u);
      MEMORY[0x1C3BAD3F4](v8, -1, -1);
    }

    return 0;
  }
}

uint64_t sub_1C1421D20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  id v9;
  void *v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  _BYTE v20[16];

  v5 = sub_1C142575C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = objc_msgSend(*(id *)(v2+ OBJC_IVAR____TtC11SessionCoreP33_3EB6553D2992046DCD21680C8109860026AuthorizationServiceClient_connection), sel_remoteProcess);
  v10 = (void *)sub_1C1426A7C();
  v11 = objc_msgSend(v9, sel_hasEntitlement_, v10);

  if (v11)
  {
    MEMORY[0x1E0C80A78](v12);
    *(_QWORD *)&v20[-32] = v13;
    *(_QWORD *)&v20[-24] = a1;
    *(_QWORD *)&v20[-16] = a2;
    sub_1C1426CEC();
    sub_1C1425750();
    v14 = sub_1C1426C38();
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    return v14;
  }
  else
  {
    if (qword_1ED791EA8 != -1)
      swift_once();
    v16 = sub_1C1426854();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ED798520);
    v17 = sub_1C1426848();
    v18 = sub_1C1426C68();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_1C1324000, v17, v18, "The requesting process is not entitled to request for activities authorization level.", v19, 2u);
      MEMORY[0x1C3BAD3F4](v19, -1, -1);
    }

    sub_1C1330EEC(0, (unint64_t *)&qword_1EF6DC5A0);
    return sub_1C1426D7C();
  }
}

id sub_1C1421FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v13;

  v5 = objc_msgSend(*(id *)(v2+ OBJC_IVAR____TtC11SessionCoreP33_3EB6553D2992046DCD21680C8109860026AuthorizationServiceClient_connection), sel_remoteProcess);
  v6 = (void *)sub_1C1426A7C();
  v7 = objc_msgSend(v5, sel_hasEntitlement_, v6);

  if ((_DWORD)v7)
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1C132FAD4(&v13, a1, a2);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1ED791EA8 != -1)
      swift_once();
    v8 = sub_1C1426854();
    __swift_project_value_buffer(v8, (uint64_t)qword_1ED798520);
    v9 = sub_1C1426848();
    v10 = sub_1C1426C68();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_1C1324000, v9, v10, "The requesting process is not entitled to request for activities authorization level.", v11, 2u);
      MEMORY[0x1C3BAD3F4](v11, -1, -1);
    }

  }
  return v7;
}

id sub_1C1422160(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;

  v5 = objc_msgSend(*(id *)(v2+ OBJC_IVAR____TtC11SessionCoreP33_3EB6553D2992046DCD21680C8109860026AuthorizationServiceClient_connection), sel_remoteProcess);
  v6 = (void *)sub_1C1426A7C();
  v7 = objc_msgSend(v5, sel_hasEntitlement_, v6);

  if ((_DWORD)v7)
  {
    swift_beginAccess();
    sub_1C1353F8C(a1, a2);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1ED791EA8 != -1)
      swift_once();
    v8 = sub_1C1426854();
    __swift_project_value_buffer(v8, (uint64_t)qword_1ED798520);
    v9 = sub_1C1426848();
    v10 = sub_1C1426C68();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_1C1324000, v9, v10, "The requesting process is not entitled to request for activities authorization level.", v11, 2u);
      MEMORY[0x1C3BAD3F4](v11, -1, -1);
    }

  }
  return v7;
}

uint64_t sub_1C1422300()
{
  uint64_t v0;
  id v1;
  void *v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  unsigned __int8 v10;

  v1 = objc_msgSend(*(id *)(v0+ OBJC_IVAR____TtC11SessionCoreP33_3EB6553D2992046DCD21680C8109860026AuthorizationServiceClient_connection), sel_remoteProcess);
  v2 = (void *)sub_1C1426A7C();
  v3 = objc_msgSend(v1, sel_hasEntitlement_, v2);

  if (v3)
  {
    MEMORY[0x1E0C80A78](v4);
    sub_1C1426CEC();
    return v10;
  }
  else
  {
    if (qword_1ED791EA8 != -1)
      swift_once();
    v6 = sub_1C1426854();
    __swift_project_value_buffer(v6, (uint64_t)qword_1ED798520);
    v7 = sub_1C1426848();
    v8 = sub_1C1426C68();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1C1324000, v7, v8, "The requesting process is not entitled to request for activities authorization", v9, 2u);
      MEMORY[0x1C3BAD3F4](v9, -1, -1);
    }

    return 0;
  }
}

uint64_t sub_1C14224BC()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  void *v13;
  unsigned __int8 v14;
  uint64_t v15;
  unsigned __int8 v16;

  v1 = objc_msgSend(*(id *)(v0+ OBJC_IVAR____TtC11SessionCoreP33_3EB6553D2992046DCD21680C8109860026AuthorizationServiceClient_connection), sel_remoteProcess);
  v2 = objc_msgSend(v1, sel_bundleIdentifier);

  if (!v2)
  {
    if (qword_1ED791EA8 != -1)
      swift_once();
    v8 = sub_1C1426854();
    __swift_project_value_buffer(v8, (uint64_t)qword_1ED798520);
    v9 = sub_1C1426848();
    v10 = sub_1C1426C68();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_1C1324000, v9, v10, "No remote process found for connection", v11, 2u);
      MEMORY[0x1C3BAD3F4](v11, -1, -1);
    }

    return 0;
  }
  v3 = sub_1C1426A88();
  v5 = v4;

  v6 = objc_allocWithZone(MEMORY[0x1E0CA5870]);
  swift_bridgeObjectRetain();
  v7 = sub_1C13278E4(v3, v5, 0);
  v13 = v7;
  if (!v7
    || (v14 = objc_msgSend(v7, sel_supportsLiveActivitiesFrequentUpdates),
        v13,
        (v14 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  MEMORY[0x1E0C80A78](v15);
  sub_1C1426CEC();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1C14226F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v5;
  void *v6;
  unsigned int v7;
  id v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  void *v15;
  unsigned __int8 v16;
  uint64_t v17;
  unsigned __int8 v18;

  v5 = objc_msgSend(*(id *)(v2+ OBJC_IVAR____TtC11SessionCoreP33_3EB6553D2992046DCD21680C8109860026AuthorizationServiceClient_connection), sel_remoteProcess);
  v6 = (void *)sub_1C1426A7C();
  v7 = objc_msgSend(v5, sel_hasEntitlement_, v6);

  if (!v7)
  {
    if (qword_1ED791EA8 != -1)
      swift_once();
    v10 = sub_1C1426854();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ED798520);
    v11 = sub_1C1426848();
    v12 = sub_1C1426C68();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_1C1324000, v11, v12, "The requesting process is not entitled to request for activities authorization", v13, 2u);
      MEMORY[0x1C3BAD3F4](v13, -1, -1);
    }

    return 0;
  }
  v8 = objc_allocWithZone(MEMORY[0x1E0CA5870]);
  swift_bridgeObjectRetain();
  v9 = sub_1C13278E4(a1, a2, 0);
  v15 = v9;
  if (!v9)
    return 0;
  v16 = objc_msgSend(v9, sel_supportsLiveActivitiesFrequentUpdates);

  if ((v16 & 1) == 0)
    return 0;
  MEMORY[0x1E0C80A78](v17);
  sub_1C1426CEC();
  return v18;
}

uint64_t sub_1C1422908(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v6 = sub_1C1426A88();
  v8 = v7;
  v9 = a1;
  LOBYTE(a4) = a4(v6, v8);

  swift_bridgeObjectRelease();
  return a4 & 1;
}

unint64_t sub_1C1422968()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000046;
  else
    return 0xD00000000000002DLL;
}

uint64_t sub_1C14229B4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;

  return sub_1C1339FF8(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

unint64_t sub_1C14229D0()
{
  unint64_t result;

  result = qword_1EF6DC5A8;
  if (!qword_1EF6DC5A8)
  {
    result = MEMORY[0x1C3BAD334](&unk_1C142C1DC, &type metadata for AuthorizationServerError);
    atomic_store(result, (unint64_t *)&qword_1EF6DC5A8);
  }
  return result;
}

uint64_t sub_1C1422A14()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C1422A40()
{
  uint64_t *v0;

  return sub_1C1339C0C(v0[2], v0[3], v0[4]);
}

uint64_t sub_1C1422A4C()
{
  return swift_deallocObject();
}

uint64_t sub_1C1422A5C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C1422A88()
{
  uint64_t v0;

  return sub_1C1339FCC(*(_QWORD *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1C1422A98()
{
  return swift_deallocObject();
}

void sub_1C1422AA8(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  os_unfair_lock_s *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  char *v14;
  _QWORD aBlock[6];
  id v16;

  v2 = v1;
  v4 = *(_QWORD *)&v1[OBJC_IVAR____TtC11SessionCore19AuthorizationServer_authorizationManager];
  v5 = objc_allocWithZone((Class)type metadata accessor for AuthorizationServiceClient());
  v6 = a1;
  swift_retain();
  v7 = sub_1C14200C8(v6, v4);
  v8 = *(os_unfair_lock_s **)(*(_QWORD *)&v2[OBJC_IVAR____TtC11SessionCore19AuthorizationServer_lock] + 16);
  os_unfair_lock_lock(v8);
  swift_beginAccess();
  v9 = v7;
  sub_1C13506FC(&v16, v9);
  swift_endAccess();
  os_unfair_lock_unlock(v8);

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v9;
  *(_QWORD *)(v10 + 24) = v2;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_1C1422CCC;
  *(_QWORD *)(v11 + 24) = v10;
  aBlock[4] = sub_1C1327D54;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C1327D10;
  aBlock[3] = &block_descriptor_25_3;
  v12 = _Block_copy(aBlock);
  v13 = v9;
  v14 = v2;
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_configureConnection_, v12);
  _Block_release(v12);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v2 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    objc_msgSend(v6, sel_activate);
    swift_release();

  }
}

uint64_t sub_1C1422CA0()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1C1422CCC(void *a1)
{
  uint64_t v1;

  sub_1C141FBAC(a1, *(void **)(v1 + 16), *(char **)(v1 + 24));
}

uint64_t sub_1C1422CD4()
{
  return swift_deallocObject();
}

void sub_1C1422CE4(uint64_t a1)
{
  uint64_t v1;

  sub_1C141FE4C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), "Connection interrupted");
}

void sub_1C1422D04(uint64_t a1)
{
  uint64_t v1;

  sub_1C141FE4C(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24), "Connection invalidated");
}

unint64_t sub_1C1422D24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED797AA0;
  if (!qword_1ED797AA0)
  {
    v1 = sub_1C1330EEC(255, (unint64_t *)&qword_1ED797AA8);
    result = MEMORY[0x1C3BAD334](MEMORY[0x1E0DEF7F8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED797AA0);
  }
  return result;
}

uint64_t sub_1C1422D7C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1C1422DA0(uint64_t *a1)
{
  uint64_t v1;

  sub_1C1420654(a1, v1, 0);
}

void sub_1C1422DBC(uint64_t *a1)
{
  uint64_t v1;

  sub_1C1420654(a1, v1, 1);
}

void sub_1C1422DD8(uint64_t *a1)
{
  uint64_t v1;

  sub_1C14206C0(a1, v1);
}

id sub_1C1422DE0(void *a1)
{
  uint64_t v1;

  return sub_1C141FACC(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1C1422DE8()
{
  return swift_deallocObject();
}

uint64_t storeEnumTagSinglePayload for AuthorizationServerError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1C1422E44 + 4 * byte_1C142C0A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1C1422E78 + 4 * byte_1C142C0A0[v4]))();
}

uint64_t sub_1C1422E78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C1422E80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1C1422E88);
  return result;
}

uint64_t sub_1C1422E94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1C1422E9CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1C1422EA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1C1422EA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AuthorizationServerError()
{
  return &type metadata for AuthorizationServerError;
}

unint64_t sub_1C1422ECC()
{
  unint64_t result;

  result = qword_1EF6DC620;
  if (!qword_1EF6DC620)
  {
    result = MEMORY[0x1C3BAD334](&unk_1C142C1B4, &type metadata for AuthorizationServerError);
    atomic_store(result, (unint64_t *)&qword_1EF6DC620);
  }
  return result;
}

uint64_t sub_1C1422F2C@<X0>(_BYTE *a1@<X8>)
{
  return sub_1C14229B4(a1);
}

uint64_t sub_1C1422F40@<X0>(_BYTE *a1@<X8>)
{
  return sub_1C1417968(a1);
}

_QWORD *sub_1C1422F5C(void *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _DWORD *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void (*v22)(char *, unint64_t, uint64_t);
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;

  v2 = v1;
  v4 = sub_1C1426320();
  v5 = *(_QWORD *)(v4 - 8);
  v42 = v4;
  v43 = v5;
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1C1426CD4();
  v40 = *(_QWORD *)(v8 - 8);
  v41 = (id)v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1C1426C8C();
  MEMORY[0x1E0C80A78](v11);
  v12 = sub_1C14269B0();
  MEMORY[0x1E0C80A78](v12);
  sub_1C1426398();
  swift_allocObject();
  v1[2] = sub_1C142638C();
  type metadata accessor for UnfairLock();
  v13 = swift_allocObject();
  v14 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v13 + 16) = v14;
  *v14 = 0;
  v2[3] = v13;
  sub_1C1330F6C();
  sub_1C1426980();
  v45 = MEMORY[0x1E0DEE9D8];
  sub_1C1358EF0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED797A70);
  sub_1C135C2A8();
  sub_1C1426DF4();
  (*(void (**)(char *, _QWORD, id))(v40 + 104))(v10, *MEMORY[0x1E0DEF8D8], v41);
  v15 = a1;
  v2[4] = sub_1C1426D04();
  if (qword_1ED7936D0 != -1)
    swift_once();
  v16 = qword_1ED798640;
  v2[5] = qword_1ED798640;
  if (!v16)
    goto LABEL_23;
  swift_retain();
  swift_retain();
  v17 = sub_1C1341E70();
  swift_release();
  v18 = *(_QWORD *)(v17 + 16);
  v19 = v42;
  v39 = v2;
  if (v18)
  {
    v40 = v17;
    v41 = v15;
    v20 = v17 + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80));
    v21 = *(_QWORD *)(v43 + 72);
    v22 = *(void (**)(char *, unint64_t, uint64_t))(v43 + 16);
    swift_bridgeObjectRetain();
    v23 = 0;
    v24 = 0xE000000000000000;
    do
    {
      v22(v7, v20, v19);
      v26 = HIBYTE(v24) & 0xF;
      if ((v24 & 0x2000000000000000) == 0)
        v26 = v23 & 0xFFFFFFFFFFFFLL;
      if (v26)
      {
        v45 = v23;
        v46 = v24;
        swift_bridgeObjectRetain();
        sub_1C14252D0();
        sub_1C14262E4();
        sub_1C14252D0();
        v19 = v42;
        swift_bridgeObjectRelease();
        v23 = v45;
        v25 = v46;
      }
      else
      {
        v23 = sub_1C14262E4();
        v25 = v27;
      }
      (*(void (**)(char *, uint64_t))(v43 + 8))(v7, v19);
      swift_bridgeObjectRelease();
      v20 += v21;
      v24 = v25;
      --v18;
    }
    while (v18);
    v17 = v40;
    swift_bridgeObjectRelease();
    v2 = v39;
    v15 = v41;
  }
  else
  {
    v23 = 0;
    v25 = 0xE000000000000000;
  }
  if (qword_1ED7939A0 != -1)
    swift_once();
  v28 = sub_1C1426854();
  __swift_project_value_buffer(v28, (uint64_t)qword_1ED7986C8);
  swift_bridgeObjectRetain();
  v29 = sub_1C1426848();
  v30 = sub_1C1426C80();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc();
    v32 = swift_slowAlloc();
    v45 = v32;
    *(_DWORD *)v31 = 136446210;
    swift_bridgeObjectRetain();
    v44 = sub_1C132AD90(v23, v25, &v45);
    sub_1C1426DB8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C1324000, v29, v30, "Restored subscriptions with identifiers: %{public}s", v31, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C3BAD3F4](v32, -1, -1);
    v33 = v31;
    v2 = v39;
    MEMORY[0x1C3BAD3F4](v33, -1, -1);

    v34 = *(_QWORD *)(v17 + 16);
    if (v34)
      goto LABEL_18;
    goto LABEL_22;
  }

  swift_bridgeObjectRelease_n();
  v34 = *(_QWORD *)(v17 + 16);
  if (!v34)
  {
LABEL_22:
    swift_bridgeObjectRelease();
LABEL_23:

    return v2;
  }
LABEL_18:
  v35 = v17 + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80));
  v36 = *(_QWORD *)(v43 + 72);
  swift_bridgeObjectRetain();
  do
  {
    sub_1C1426368();
    v35 += v36;
    --v34;
  }
  while (v34);

  swift_bridgeObjectRelease_n();
  return v2;
}

uint64_t sub_1C1423528()
{
  uint64_t v0;

  swift_release();
  swift_release();

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PersistentPushSubscriptionStore()
{
  return objc_opt_self();
}

uint64_t sub_1C1423584(uint64_t (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a3 + 40);
  if (v4)
  {
    MEMORY[0x1E0C80A78](a1);
    type metadata accessor for ActivityDatabase.MutableStore();
    swift_allocObject();
    sub_1C134B4D0();
    v5 = *(os_unfair_lock_s **)(*(_QWORD *)(v4 + 96) + 16);
    swift_retain();
    os_unfair_lock_lock(v5);
    MEMORY[0x1E0C80A78](v6);
    sub_1C1425258();
    os_unfair_lock_unlock(v5);
    swift_release();
    sub_1C1341CC8();
    swift_release();
  }
  return a1();
}

uint64_t sub_1C1423880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a4;
  v7 = sub_1C1426320();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED7978C0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = a2;
  sub_1C1426380();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7) == 1)
  {
    v32 = v8;
    v14 = v34;
    sub_1C138B3D0((uint64_t)v13);
    if (qword_1ED7939A0 != -1)
      swift_once();
    v15 = sub_1C1426854();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED7986C8);
    swift_bridgeObjectRetain_n();
    v16 = sub_1C1426848();
    v17 = sub_1C1426C80();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v36 = v19;
      *(_DWORD *)v18 = 136446210;
      swift_bridgeObjectRetain();
      v35 = sub_1C132AD90(v33, a3, &v36);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C1324000, v16, v17, "Subscription does not exist with identifier: %{public}s", v18, 0xCu);
      v20 = 1;
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v19, -1, -1);
      MEMORY[0x1C3BAD3F4](v18, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      v20 = 1;
    }
    v29 = v14;
    v8 = v32;
  }
  else
  {
    v21 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
    v22 = v34;
    v21(v34, v13, v7);
    v23 = sub_1C1425F0C();
    v24 = *(_QWORD *)(a1 + 32);
    v31 = v23;
    v32 = v24;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v22, v7);
    v25 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v26 = (v9 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 16) = a1;
    v21(v27 + v25, v10, v7);
    v28 = (_QWORD *)(v27 + v26);
    *v28 = v33;
    v28[1] = a3;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1C1425F00();
    swift_release();
    v20 = 0;
    v29 = v34;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v29, v20, 1, v7);
}

uint64_t sub_1C1423BE4(uint64_t (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t (*v7)(void);

  v3 = *(_QWORD *)(a3 + 40);
  if (v3)
  {
    v7 = a1;
    MEMORY[0x1E0C80A78](a1);
    type metadata accessor for ActivityDatabase.MutableStore();
    swift_allocObject();
    sub_1C134B4D0();
    v4 = *(os_unfair_lock_s **)(*(_QWORD *)(v3 + 96) + 16);
    swift_retain();
    os_unfair_lock_lock(v4);
    MEMORY[0x1E0C80A78](v5);
    sub_1C1425258();
    os_unfair_lock_unlock(v4);
    swift_release();
    sub_1C1341CC8();
    swift_release();
    a1 = v7;
  }
  return a1();
}

uint64_t sub_1C1423F4C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1C14262E4();
  sub_1C1343288(v0, v1);
  return swift_bridgeObjectRelease();
}

void sub_1C1423F9C(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;

  v36 = a5;
  v34 = a4;
  v8 = sub_1C142671C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  v11 = MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v32 - v12;
  v33 = a2;
  v14 = v34;
  v35 = a3;
  v15 = sub_1C1426374();
  if (*(_QWORD *)(v15 + 16))
  {
    v16 = sub_1C1425F0C();
    v32[0] = *(_QWORD *)(a1 + 32);
    v32[1] = v16;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v13, v14, v8);
    v17 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v18 = (char *)swift_allocObject();
    *((_QWORD *)v18 + 2) = a1;
    *((_QWORD *)v18 + 3) = v15;
    v19 = v35;
    *((_QWORD *)v18 + 4) = v33;
    *((_QWORD *)v18 + 5) = v19;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v18[v17], v13, v8);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C1425F00();
    swift_release();
  }
  else
  {
    v20 = v9;
    v21 = v35;
    v22 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    swift_bridgeObjectRelease();
    if (qword_1ED7939A0 != -1)
      swift_once();
    v23 = sub_1C1426854();
    __swift_project_value_buffer(v23, (uint64_t)qword_1ED7986C8);
    v24 = v20;
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v22, v14, v8);
    swift_bridgeObjectRetain_n();
    v25 = sub_1C1426848();
    v26 = sub_1C1426C80();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc();
      v28 = swift_slowAlloc();
      v34 = v8;
      v29 = v28;
      v38 = v28;
      *(_DWORD *)v27 = 136446466;
      swift_bridgeObjectRetain();
      v37 = sub_1C132AD90(v33, v21, &v38);
      sub_1C1426DB8();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v27 + 12) = 2082;
      v30 = sub_1C1426710();
      v37 = sub_1C132AD90(v30, v31, &v38);
      sub_1C1426DB8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v34);
      _os_log_impl(&dword_1C1324000, v25, v26, "Subscriptions do not exist with environmentName: %{public}s; topic: %{public}s",
        (uint8_t *)v27,
        0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C3BAD3F4](v29, -1, -1);
      MEMORY[0x1C3BAD3F4](v27, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v8);
    }

    v15 = MEMORY[0x1E0DEE9D8];
  }
  *v36 = v15;
}

uint64_t sub_1C142432C(uint64_t (*a1)(_QWORD), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  os_unfair_lock_s *v16;
  uint64_t v17;
  _QWORD v19[5];
  uint64_t (*v20)(_QWORD);
  uint64_t v21;

  v21 = sub_1C142671C();
  v13 = MEMORY[0x1E0C80A78](v21);
  v14 = *(_QWORD *)(a3 + 40);
  if (v14)
  {
    v19[1] = a5;
    v19[2] = a7;
    v19[4] = a2;
    v20 = a1;
    v19[3] = v19;
    MEMORY[0x1E0C80A78](v13);
    v19[-2] = a4;
    type metadata accessor for ActivityDatabase.MutableStore();
    swift_allocObject();
    v15 = sub_1C134B4D0();
    v16 = *(os_unfair_lock_s **)(*(_QWORD *)(v14 + 96) + 16);
    swift_retain();
    os_unfair_lock_lock(v16);
    MEMORY[0x1E0C80A78](v17);
    v19[-4] = sub_1C1424DAC;
    v19[-3] = &v19[-4];
    v19[-2] = v15;
    sub_1C1425258();
    os_unfair_lock_unlock(v16);
    swift_release();
    sub_1C1341CC8();
    v13 = swift_release();
    a1 = v20;
  }
  return a1(v13);
}

uint64_t sub_1C1424770(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  if (v3)
  {
    v5 = *(_QWORD *)(sub_1C1426320() - 8);
    v6 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v7 = *(_QWORD *)(v5 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      v8 = sub_1C14262E4();
      sub_1C1343288(v8, v9);
      if (v2)
        break;
      swift_bridgeObjectRelease();
      v6 += v7;
      if (!--v3)
        return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C1424830(uint64_t a1, uint64_t a2)
{
  return sub_1C1328478(a1, a2, MEMORY[0x1E0D8CF98]);
}

uint64_t sub_1C142483C(uint64_t a1, uint64_t a2)
{
  return sub_1C1328478(a1, a2, MEMORY[0x1E0D8CF88]);
}

uint64_t sub_1C1424848(uint64_t a1, uint64_t a2)
{
  return sub_1C1328478(a1, a2, MEMORY[0x1E0D8CF90]);
}

uint64_t sub_1C1424854(uint64_t a1, uint64_t a2)
{
  return sub_1C1328478(a1, a2, MEMORY[0x1E0D8CF70]);
}

void sub_1C1424860(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = sub_1C1426320();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  v6 = *v1;
  v7 = *(os_unfair_lock_s **)(*(_QWORD *)(*v1 + 24) + 16);
  os_unfair_lock_lock(v7);
  sub_1C1426368();
  if ((sub_1C14262B4() & 1) == 0)
  {
    sub_1C1425F0C();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
    v8 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = v6;
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v9 + v8, (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
    swift_retain();
    sub_1C1425F00();
    swift_release();
  }
  os_unfair_lock_unlock(v7);
}

void sub_1C14249A8(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v7;
  os_unfair_lock_s *v8;

  v7 = *v3;
  v8 = *(os_unfair_lock_s **)(*(_QWORD *)(v7 + 24) + 16);
  os_unfair_lock_lock(v8);
  sub_1C1423880(v7, a1, a2, a3);
  os_unfair_lock_unlock(v8);
}

uint64_t sub_1C1424A14(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  os_unfair_lock_s *v8;
  uint64_t v10;

  v7 = *v3;
  v8 = *(os_unfair_lock_s **)(*(_QWORD *)(v7 + 24) + 16);
  os_unfair_lock_lock(v8);
  sub_1C1423F9C(v7, a1, a2, a3, &v10);
  os_unfair_lock_unlock(v8);
  return v10;
}

void sub_1C1424A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C1424B24(a1, a2, a3, a4, MEMORY[0x1E0D8CF58]);
}

void sub_1C1424A98()
{
  uint64_t v0;
  os_unfair_lock_s *v1;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)(*(_QWORD *)v0 + 24) + 16);
  os_unfair_lock_lock(v1);
  sub_1C1426344();
  os_unfair_lock_unlock(v1);
}

void sub_1C1424B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C1424B24(a1, a2, a3, a4, MEMORY[0x1E0D8CF60]);
}

void sub_1C1424B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t v5;
  os_unfair_lock_s *v9;

  v9 = *(os_unfair_lock_s **)(*(_QWORD *)(*(_QWORD *)v5 + 24) + 16);
  os_unfair_lock_lock(v9);
  a5(a1, a2);
  os_unfair_lock_unlock(v9);
}

uint64_t sub_1C1424B88()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  char v2;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)(*(_QWORD *)v0 + 24) + 16);
  os_unfair_lock_lock(v1);
  v2 = sub_1C142635C();
  os_unfair_lock_unlock(v1);
  return v2 & 1;
}

uint64_t sub_1C1424BE4()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  char v2;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)(*(_QWORD *)v0 + 24) + 16);
  os_unfair_lock_lock(v1);
  v2 = sub_1C1426350();
  os_unfair_lock_unlock(v1);
  return v2 & 1;
}

uint64_t sub_1C1424C50()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  char v2;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)(*(_QWORD *)v0 + 24) + 16);
  os_unfair_lock_lock(v1);
  v2 = sub_1C1426338();
  os_unfair_lock_unlock(v1);
  return v2 & 1;
}

uint64_t sub_1C1424CD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1C142671C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1C1424D58(uint64_t (*a1)(_QWORD), uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1C142671C() - 8) + 80);
  return sub_1C142432C(a1, a2, v2[2], v2[3], v2[4], v2[5], (uint64_t)v2 + ((v5 + 48) & ~v5));
}

uint64_t sub_1C1424DAC(uint64_t a1)
{
  uint64_t v1;

  return sub_1C1424770(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1C1424DC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1C1426320();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1C1424E58(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v2;

  sub_1C1426320();
  return sub_1C1423BE4(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1C1424EC0()
{
  return sub_1C1423F4C();
}

uint64_t sub_1C1424ED8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1C1426320();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1C1424F4C(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t v2;

  sub_1C1426320();
  return sub_1C1423584(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1C1424F9C()
{
  uint64_t v0;

  return sub_1C13428F0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1C1424FC4()
{
  return MEMORY[0x1E0CADE70]();
}

uint64_t sub_1C1424FD0()
{
  return MEMORY[0x1E0CADE90]();
}

uint64_t sub_1C1424FDC()
{
  return MEMORY[0x1E0CAE070]();
}

uint64_t sub_1C1424FE8()
{
  return MEMORY[0x1E0CAE0A8]();
}

uint64_t sub_1C1424FF4()
{
  return MEMORY[0x1E0CAE0B8]();
}

uint64_t sub_1C1425000()
{
  return MEMORY[0x1E0CAE1A0]();
}

uint64_t sub_1C142500C()
{
  return MEMORY[0x1E0CAE1D8]();
}

uint64_t sub_1C1425018()
{
  return MEMORY[0x1E0CAE1E8]();
}

uint64_t sub_1C1425024()
{
  return MEMORY[0x1E0CAE9F8]();
}

uint64_t sub_1C1425030()
{
  return MEMORY[0x1E0CAEAB0]();
}

uint64_t sub_1C142503C()
{
  return MEMORY[0x1E0CAEB20]();
}

uint64_t sub_1C1425048()
{
  return MEMORY[0x1E0CAEB38]();
}

uint64_t sub_1C1425054()
{
  return MEMORY[0x1E0CAEB50]();
}

uint64_t sub_1C1425060()
{
  return MEMORY[0x1E0CAF940]();
}

uint64_t sub_1C142506C()
{
  return MEMORY[0x1E0CAF980]();
}

uint64_t sub_1C1425078()
{
  return MEMORY[0x1E0CAF990]();
}

uint64_t sub_1C1425084()
{
  return MEMORY[0x1E0CAF9F8]();
}

uint64_t sub_1C1425090()
{
  return MEMORY[0x1E0CAFE38]();
}

uint64_t sub_1C142509C()
{
  return MEMORY[0x1E0CAFE78]();
}

uint64_t sub_1C14250A8()
{
  return MEMORY[0x1E0CAFF00]();
}

uint64_t sub_1C14250B4()
{
  return MEMORY[0x1E0CAFFF8]();
}

uint64_t sub_1C14250C0()
{
  return MEMORY[0x1E0CB0110]();
}

uint64_t sub_1C14250CC()
{
  return MEMORY[0x1E0CB01F0]();
}

uint64_t sub_1C14250D8()
{
  return MEMORY[0x1E0CB0228]();
}

uint64_t sub_1C14250E4()
{
  return MEMORY[0x1E0CB02F8]();
}

uint64_t sub_1C14250F0()
{
  return MEMORY[0x1E0CB03B8]();
}

uint64_t sub_1C14250FC()
{
  return MEMORY[0x1E0CB03C0]();
}

uint64_t sub_1C1425108()
{
  return MEMORY[0x1E0CB0588]();
}

uint64_t sub_1C1425114()
{
  return MEMORY[0x1E0CB05A8]();
}

uint64_t sub_1C1425120()
{
  return MEMORY[0x1E0CB05D8]();
}

uint64_t sub_1C142512C()
{
  return MEMORY[0x1E0CB0680]();
}

uint64_t sub_1C1425138()
{
  return MEMORY[0x1E0CB06B8]();
}

uint64_t sub_1C1425144()
{
  return MEMORY[0x1E0CB06D0]();
}

uint64_t sub_1C1425150()
{
  return MEMORY[0x1E0CB06D8]();
}

uint64_t sub_1C142515C()
{
  return MEMORY[0x1E0CB06E8]();
}

uint64_t sub_1C1425168()
{
  return MEMORY[0x1E0CB0708]();
}

uint64_t sub_1C1425174()
{
  return MEMORY[0x1E0CB07C0]();
}

uint64_t sub_1C1425180()
{
  return MEMORY[0x1E0CB07C8]();
}

uint64_t sub_1C142518C()
{
  return MEMORY[0x1E0CB07F8]();
}

uint64_t sub_1C1425198()
{
  return MEMORY[0x1E0CB0828]();
}

uint64_t sub_1C14251A4()
{
  return MEMORY[0x1E0CB0860]();
}

uint64_t sub_1C14251B0()
{
  return MEMORY[0x1E0CB0870]();
}

uint64_t sub_1C14251BC()
{
  return MEMORY[0x1E0CB0900]();
}

uint64_t sub_1C14251C8()
{
  return MEMORY[0x1E0CB0910]();
}

uint64_t sub_1C14251D4()
{
  return MEMORY[0x1E0CB0918]();
}

uint64_t sub_1C14251E0()
{
  return MEMORY[0x1E0CB0988]();
}

uint64_t sub_1C14251EC()
{
  return MEMORY[0x1E0CB0998]();
}

uint64_t sub_1C14251F8()
{
  return MEMORY[0x1E0CB0FB0]();
}

uint64_t sub_1C1425204()
{
  return MEMORY[0x1E0CB10C8]();
}

uint64_t sub_1C1425210()
{
  return MEMORY[0x1E0CB11B8]();
}

uint64_t sub_1C142521C()
{
  return MEMORY[0x1E0CB11F0]();
}

uint64_t sub_1C1425228()
{
  return MEMORY[0x1E0CB1440]();
}

uint64_t sub_1C1425234()
{
  return MEMORY[0x1E0CB1448]();
}

uint64_t sub_1C1425240()
{
  return MEMORY[0x1E0CB1470]();
}

uint64_t sub_1C142524C()
{
  return MEMORY[0x1E0DEFCA8]();
}

uint64_t sub_1C1425258()
{
  return MEMORY[0x1E0D8D408]();
}

uint64_t sub_1C1425264()
{
  return MEMORY[0x1E0D8D410]();
}

uint64_t sub_1C1425270()
{
  return MEMORY[0x1E0D8D418]();
}

uint64_t sub_1C142527C()
{
  return MEMORY[0x1E0D8D420]();
}

uint64_t sub_1C1425288()
{
  return MEMORY[0x1E0D8D428]();
}

uint64_t sub_1C1425294()
{
  return MEMORY[0x1E0D8D430]();
}

uint64_t sub_1C14252A0()
{
  return MEMORY[0x1E0D8D438]();
}

uint64_t sub_1C14252AC()
{
  return MEMORY[0x1E0D8D440]();
}

uint64_t sub_1C14252B8()
{
  return MEMORY[0x1E0D8D450]();
}

uint64_t sub_1C14252C4()
{
  return MEMORY[0x1E0D8D458]();
}

uint64_t sub_1C14252D0()
{
  return MEMORY[0x1E0D8D460]();
}

uint64_t sub_1C14252DC()
{
  return MEMORY[0x1E0D8D468]();
}

uint64_t sub_1C14252E8()
{
  return MEMORY[0x1E0D8D470]();
}

uint64_t sub_1C14252F4()
{
  return MEMORY[0x1E0D8D478]();
}

uint64_t sub_1C1425300()
{
  return MEMORY[0x1E0D8D480]();
}

uint64_t sub_1C142530C()
{
  return MEMORY[0x1E0D8D488]();
}

uint64_t sub_1C1425318()
{
  return MEMORY[0x1E0D8D490]();
}

uint64_t sub_1C1425324()
{
  return MEMORY[0x1E0D8D4A0]();
}

uint64_t sub_1C1425330()
{
  return MEMORY[0x1E0D8D4A8]();
}

uint64_t sub_1C142533C()
{
  return MEMORY[0x1E0C8F438]();
}

uint64_t sub_1C1425348()
{
  return MEMORY[0x1E0C8F448]();
}

uint64_t sub_1C1425354()
{
  return MEMORY[0x1E0C8F450]();
}

uint64_t sub_1C1425360()
{
  return MEMORY[0x1E0C8F460]();
}

uint64_t sub_1C142536C()
{
  return MEMORY[0x1E0C8F468]();
}

uint64_t sub_1C1425378()
{
  return MEMORY[0x1E0C8F478]();
}

uint64_t sub_1C1425384()
{
  return MEMORY[0x1E0C8F4A8]();
}

uint64_t sub_1C1425390()
{
  return MEMORY[0x1E0C8F4B8]();
}

uint64_t sub_1C142539C()
{
  return MEMORY[0x1E0C8F4C0]();
}

uint64_t sub_1C14253A8()
{
  return MEMORY[0x1E0C8F4E0]();
}

uint64_t sub_1C14253B4()
{
  return MEMORY[0x1E0C8F4F0]();
}

uint64_t sub_1C14253C0()
{
  return MEMORY[0x1E0C8F4F8]();
}

uint64_t sub_1C14253CC()
{
  return MEMORY[0x1E0C8F508]();
}

uint64_t sub_1C14253D8()
{
  return MEMORY[0x1E0C8F518]();
}

uint64_t sub_1C14253E4()
{
  return MEMORY[0x1E0C8F520]();
}

uint64_t sub_1C14253F0()
{
  return MEMORY[0x1E0C8F528]();
}

uint64_t sub_1C14253FC()
{
  return MEMORY[0x1E0C8F530]();
}

uint64_t sub_1C1425408()
{
  return MEMORY[0x1E0C8F538]();
}

uint64_t sub_1C1425414()
{
  return MEMORY[0x1E0C8F540]();
}

uint64_t sub_1C1425420()
{
  return MEMORY[0x1E0C8F548]();
}

uint64_t sub_1C142542C()
{
  return MEMORY[0x1E0C8F550]();
}

uint64_t sub_1C1425438()
{
  return MEMORY[0x1E0C8F558]();
}

uint64_t sub_1C1425444()
{
  return MEMORY[0x1E0C8F560]();
}

uint64_t sub_1C1425450()
{
  return MEMORY[0x1E0C8F570]();
}

uint64_t sub_1C142545C()
{
  return MEMORY[0x1E0C8F608]();
}

uint64_t sub_1C1425468()
{
  return MEMORY[0x1E0C8F610]();
}

uint64_t sub_1C1425474()
{
  return MEMORY[0x1E0C8F648]();
}

uint64_t sub_1C1425480()
{
  return MEMORY[0x1E0C8F650]();
}

uint64_t sub_1C142548C()
{
  return MEMORY[0x1E0C8F660]();
}

uint64_t sub_1C1425498()
{
  return MEMORY[0x1E0C8F670]();
}

uint64_t sub_1C14254A4()
{
  return MEMORY[0x1E0C8F6A8]();
}

uint64_t sub_1C14254B0()
{
  return MEMORY[0x1E0C8F6B8]();
}

uint64_t sub_1C14254BC()
{
  return MEMORY[0x1E0C8F6C0]();
}

uint64_t sub_1C14254C8()
{
  return MEMORY[0x1E0C8F6C8]();
}

uint64_t sub_1C14254D4()
{
  return MEMORY[0x1E0C8F6D8]();
}

uint64_t sub_1C14254E0()
{
  return MEMORY[0x1E0C8F6E0]();
}

uint64_t sub_1C14254EC()
{
  return MEMORY[0x1E0C8F6F0]();
}

uint64_t sub_1C14254F8()
{
  return MEMORY[0x1E0C8F718]();
}

uint64_t sub_1C1425504()
{
  return MEMORY[0x1E0C8F720]();
}

uint64_t sub_1C1425510()
{
  return MEMORY[0x1E0C8F728]();
}

uint64_t sub_1C142551C()
{
  return MEMORY[0x1E0C8F740]();
}

uint64_t sub_1C1425528()
{
  return MEMORY[0x1E0C8F748]();
}

uint64_t sub_1C1425534()
{
  return MEMORY[0x1E0C8F760]();
}

uint64_t sub_1C1425540()
{
  return MEMORY[0x1E0C8F778]();
}

uint64_t sub_1C142554C()
{
  return MEMORY[0x1E0C8F790]();
}

uint64_t sub_1C1425558()
{
  return MEMORY[0x1E0C8F798]();
}

uint64_t sub_1C1425564()
{
  return MEMORY[0x1E0C8F7C0]();
}

uint64_t sub_1C1425570()
{
  return MEMORY[0x1E0C8F7C8]();
}

uint64_t sub_1C142557C()
{
  return MEMORY[0x1E0C8F7D8]();
}

uint64_t sub_1C1425588()
{
  return MEMORY[0x1E0C8F800]();
}

uint64_t sub_1C1425594()
{
  return MEMORY[0x1E0C8F830]();
}

uint64_t sub_1C14255A0()
{
  return MEMORY[0x1E0C8F878]();
}

uint64_t sub_1C14255AC()
{
  return MEMORY[0x1E0C8F888]();
}

uint64_t sub_1C14255B8()
{
  return MEMORY[0x1E0C8F890]();
}

uint64_t sub_1C14255C4()
{
  return MEMORY[0x1E0C8F8D0]();
}

uint64_t sub_1C14255D0()
{
  return MEMORY[0x1E0C8F8D8]();
}

uint64_t sub_1C14255DC()
{
  return MEMORY[0x1E0C8F8E0]();
}

uint64_t sub_1C14255E8()
{
  return MEMORY[0x1E0C8F960]();
}

uint64_t sub_1C14255F4()
{
  return MEMORY[0x1E0C8F968]();
}

uint64_t sub_1C1425600()
{
  return MEMORY[0x1E0C8F988]();
}

uint64_t sub_1C142560C()
{
  return MEMORY[0x1E0C8F990]();
}

uint64_t sub_1C1425618()
{
  return MEMORY[0x1E0C8F998]();
}

uint64_t sub_1C1425624()
{
  return MEMORY[0x1E0C8F9A0]();
}

uint64_t sub_1C1425630()
{
  return MEMORY[0x1E0C8F9A8]();
}

uint64_t sub_1C142563C()
{
  return MEMORY[0x1E0C8FA18]();
}

uint64_t sub_1C1425648()
{
  return MEMORY[0x1E0C8FA28]();
}

uint64_t sub_1C1425654()
{
  return MEMORY[0x1E0C8FA30]();
}

uint64_t sub_1C1425660()
{
  return MEMORY[0x1E0C8FA50]();
}

uint64_t sub_1C142566C()
{
  return MEMORY[0x1E0C8FA70]();
}

uint64_t sub_1C1425678()
{
  return MEMORY[0x1E0C8FA78]();
}

uint64_t sub_1C1425684()
{
  return MEMORY[0x1E0C8FA80]();
}

uint64_t sub_1C1425690()
{
  return MEMORY[0x1E0C8FA88]();
}

uint64_t sub_1C142569C()
{
  return MEMORY[0x1E0C8FA98]();
}

uint64_t sub_1C14256A8()
{
  return MEMORY[0x1E0C8FAA8]();
}

uint64_t sub_1C14256B4()
{
  return MEMORY[0x1E0C8FAB8]();
}

uint64_t sub_1C14256C0()
{
  return MEMORY[0x1E0C8FAC8]();
}

uint64_t sub_1C14256CC()
{
  return MEMORY[0x1E0C8FAD0]();
}

uint64_t sub_1C14256D8()
{
  return MEMORY[0x1E0C8FAD8]();
}

uint64_t sub_1C14256E4()
{
  return MEMORY[0x1E0C8FAE8]();
}

uint64_t sub_1C14256F0()
{
  return MEMORY[0x1E0C8FAF0]();
}

uint64_t sub_1C14256FC()
{
  return MEMORY[0x1E0C8FB00]();
}

uint64_t sub_1C1425708()
{
  return MEMORY[0x1E0C8FB10]();
}

uint64_t sub_1C1425714()
{
  return MEMORY[0x1E0C8FB18]();
}

uint64_t sub_1C1425720()
{
  return MEMORY[0x1E0C8FB28]();
}

uint64_t sub_1C142572C()
{
  return MEMORY[0x1E0C8FB30]();
}

uint64_t sub_1C1425738()
{
  return MEMORY[0x1E0C8FB38]();
}

uint64_t sub_1C1425744()
{
  return MEMORY[0x1E0C8FB40]();
}

uint64_t sub_1C1425750()
{
  return MEMORY[0x1E0C8FB60]();
}

uint64_t sub_1C142575C()
{
  return MEMORY[0x1E0C8FB68]();
}

uint64_t sub_1C1425768()
{
  return MEMORY[0x1E0C8FB88]();
}

uint64_t sub_1C1425774()
{
  return MEMORY[0x1E0C8FB90]();
}

uint64_t sub_1C1425780()
{
  return MEMORY[0x1E0C8FBA0]();
}

uint64_t sub_1C142578C()
{
  return MEMORY[0x1E0C8FBA8]();
}

uint64_t sub_1C1425798()
{
  return MEMORY[0x1E0C8FBB0]();
}

uint64_t sub_1C14257A4()
{
  return MEMORY[0x1E0C8FBB8]();
}

uint64_t sub_1C14257B0()
{
  return MEMORY[0x1E0C8FBC0]();
}

uint64_t sub_1C14257BC()
{
  return MEMORY[0x1E0C8FBC8]();
}

uint64_t sub_1C14257C8()
{
  return MEMORY[0x1E0C8FBE8]();
}

uint64_t sub_1C14257D4()
{
  return MEMORY[0x1E0C8FBF0]();
}

uint64_t sub_1C14257E0()
{
  return MEMORY[0x1E0C8FBF8]();
}

uint64_t sub_1C14257EC()
{
  return MEMORY[0x1E0C8FC00]();
}

uint64_t sub_1C14257F8()
{
  return MEMORY[0x1E0C8FC08]();
}

uint64_t sub_1C1425804()
{
  return MEMORY[0x1E0C8FC30]();
}

uint64_t sub_1C1425810()
{
  return MEMORY[0x1E0C8FC38]();
}

uint64_t sub_1C142581C()
{
  return MEMORY[0x1E0C8FC40]();
}

uint64_t sub_1C1425828()
{
  return MEMORY[0x1E0C8FC48]();
}

uint64_t sub_1C1425834()
{
  return MEMORY[0x1E0C8FC50]();
}

uint64_t sub_1C1425840()
{
  return MEMORY[0x1E0C8FC58]();
}

uint64_t sub_1C142584C()
{
  return MEMORY[0x1E0C8FC80]();
}

uint64_t sub_1C1425858()
{
  return MEMORY[0x1E0C8FCB8]();
}

uint64_t sub_1C1425864()
{
  return MEMORY[0x1E0C8FCF0]();
}

uint64_t sub_1C1425870()
{
  return MEMORY[0x1E0C8FD00]();
}

uint64_t sub_1C142587C()
{
  return MEMORY[0x1E0C8FD10]();
}

uint64_t sub_1C1425888()
{
  return MEMORY[0x1E0C8FD38]();
}

uint64_t sub_1C1425894()
{
  return MEMORY[0x1E0C8FD48]();
}

uint64_t sub_1C14258A0()
{
  return MEMORY[0x1E0C8FD50]();
}

uint64_t sub_1C14258AC()
{
  return MEMORY[0x1E0C8FD58]();
}

uint64_t sub_1C14258B8()
{
  return MEMORY[0x1E0C8FD68]();
}

uint64_t sub_1C14258C4()
{
  return MEMORY[0x1E0C8FD78]();
}

uint64_t sub_1C14258D0()
{
  return MEMORY[0x1E0C8FDB0]();
}

uint64_t sub_1C14258DC()
{
  return MEMORY[0x1E0C8FDB8]();
}

uint64_t sub_1C14258E8()
{
  return MEMORY[0x1E0C8FDC0]();
}

uint64_t sub_1C14258F4()
{
  return MEMORY[0x1E0C8FDC8]();
}

uint64_t sub_1C1425900()
{
  return MEMORY[0x1E0C8FDD0]();
}

uint64_t sub_1C142590C()
{
  return MEMORY[0x1E0C8FDD8]();
}

uint64_t sub_1C1425918()
{
  return MEMORY[0x1E0C8FDE0]();
}

uint64_t sub_1C1425924()
{
  return MEMORY[0x1E0C8FDE8]();
}

uint64_t sub_1C1425930()
{
  return MEMORY[0x1E0C8FDF0]();
}

uint64_t sub_1C142593C()
{
  return MEMORY[0x1E0C8FDF8]();
}

uint64_t sub_1C1425948()
{
  return MEMORY[0x1E0C8FE00]();
}

uint64_t sub_1C1425954()
{
  return MEMORY[0x1E0C8FE08]();
}

uint64_t sub_1C1425960()
{
  return MEMORY[0x1E0C8FE10]();
}

uint64_t sub_1C142596C()
{
  return MEMORY[0x1E0C8FE18]();
}

uint64_t sub_1C1425978()
{
  return MEMORY[0x1E0C8FE28]();
}

uint64_t sub_1C1425984()
{
  return MEMORY[0x1E0C8FF30]();
}

uint64_t sub_1C1425990()
{
  return MEMORY[0x1E0C8FF48]();
}

uint64_t sub_1C142599C()
{
  return MEMORY[0x1E0C8FF50]();
}

uint64_t sub_1C14259A8()
{
  return MEMORY[0x1E0C8FF58]();
}

uint64_t sub_1C14259B4()
{
  return MEMORY[0x1E0C8FF70]();
}

uint64_t sub_1C14259C0()
{
  return MEMORY[0x1E0C8FF78]();
}

uint64_t sub_1C14259CC()
{
  return MEMORY[0x1E0C8FF80]();
}

uint64_t sub_1C14259D8()
{
  return MEMORY[0x1E0C8FF88]();
}

uint64_t sub_1C14259E4()
{
  return MEMORY[0x1E0C8FF98]();
}

uint64_t sub_1C14259F0()
{
  return MEMORY[0x1E0C8FFA8]();
}

uint64_t sub_1C14259FC()
{
  return MEMORY[0x1E0C8FFB0]();
}

uint64_t sub_1C1425A08()
{
  return MEMORY[0x1E0C8FFB8]();
}

uint64_t sub_1C1425A14()
{
  return MEMORY[0x1E0C8FFD8]();
}

uint64_t sub_1C1425A20()
{
  return MEMORY[0x1E0C8FFE0]();
}

uint64_t sub_1C1425A2C()
{
  return MEMORY[0x1E0C8FFF0]();
}

uint64_t sub_1C1425A38()
{
  return MEMORY[0x1E0C90028]();
}

uint64_t sub_1C1425A44()
{
  return MEMORY[0x1E0C90038]();
}

uint64_t sub_1C1425A50()
{
  return MEMORY[0x1E0C90048]();
}

uint64_t sub_1C1425A5C()
{
  return MEMORY[0x1E0C90070]();
}

uint64_t sub_1C1425A68()
{
  return MEMORY[0x1E0C90078]();
}

uint64_t sub_1C1425A74()
{
  return MEMORY[0x1E0C90080]();
}

uint64_t sub_1C1425A80()
{
  return MEMORY[0x1E0C90090]();
}

uint64_t sub_1C1425A8C()
{
  return MEMORY[0x1E0C90098]();
}

uint64_t sub_1C1425A98()
{
  return MEMORY[0x1E0C900A0]();
}

uint64_t sub_1C1425AA4()
{
  return MEMORY[0x1E0C900A8]();
}

uint64_t sub_1C1425AB0()
{
  return MEMORY[0x1E0C900B0]();
}

uint64_t sub_1C1425ABC()
{
  return MEMORY[0x1E0C900B8]();
}

uint64_t sub_1C1425AC8()
{
  return MEMORY[0x1E0C900C0]();
}

uint64_t sub_1C1425AD4()
{
  return MEMORY[0x1E0C900C8]();
}

uint64_t sub_1C1425AE0()
{
  return MEMORY[0x1E0C900D0]();
}

uint64_t sub_1C1425AEC()
{
  return MEMORY[0x1E0C900E0]();
}

uint64_t sub_1C1425AF8()
{
  return MEMORY[0x1E0C90108]();
}

uint64_t sub_1C1425B04()
{
  return MEMORY[0x1E0C90110]();
}

uint64_t sub_1C1425B10()
{
  return MEMORY[0x1E0C90118]();
}

uint64_t sub_1C1425B1C()
{
  return MEMORY[0x1E0C90120]();
}

uint64_t sub_1C1425B28()
{
  return MEMORY[0x1E0C90128]();
}

uint64_t sub_1C1425B34()
{
  return MEMORY[0x1E0C90130]();
}

uint64_t sub_1C1425B40()
{
  return MEMORY[0x1E0C90140]();
}

uint64_t sub_1C1425B4C()
{
  return MEMORY[0x1E0C90150]();
}

uint64_t sub_1C1425B58()
{
  return MEMORY[0x1E0C90158]();
}

uint64_t sub_1C1425B64()
{
  return MEMORY[0x1E0C90160]();
}

uint64_t sub_1C1425B70()
{
  return MEMORY[0x1E0C90168]();
}

uint64_t sub_1C1425B7C()
{
  return MEMORY[0x1E0C90190]();
}

uint64_t sub_1C1425B88()
{
  return MEMORY[0x1E0C90198]();
}

uint64_t sub_1C1425B94()
{
  return MEMORY[0x1E0C901A0]();
}

uint64_t sub_1C1425BA0()
{
  return MEMORY[0x1E0C901A8]();
}

uint64_t sub_1C1425BAC()
{
  return MEMORY[0x1E0C901B0]();
}

uint64_t sub_1C1425BB8()
{
  return MEMORY[0x1E0C901B8]();
}

uint64_t sub_1C1425BC4()
{
  return MEMORY[0x1E0C901C0]();
}

uint64_t sub_1C1425BD0()
{
  return MEMORY[0x1E0C901C8]();
}

uint64_t sub_1C1425BDC()
{
  return MEMORY[0x1E0D8CA40]();
}

uint64_t sub_1C1425BE8()
{
  return MEMORY[0x1E0D8CA48]();
}

uint64_t sub_1C1425BF4()
{
  return MEMORY[0x1E0D8CA50]();
}

uint64_t sub_1C1425C00()
{
  return MEMORY[0x1E0D8CA58]();
}

uint64_t sub_1C1425C0C()
{
  return MEMORY[0x1E0D8CA60]();
}

uint64_t sub_1C1425C18()
{
  return MEMORY[0x1E0D8CA68]();
}

uint64_t sub_1C1425C24()
{
  return MEMORY[0x1E0D8CA78]();
}

uint64_t sub_1C1425C30()
{
  return MEMORY[0x1E0D8CA88]();
}

uint64_t sub_1C1425C3C()
{
  return MEMORY[0x1E0D8CA98]();
}

uint64_t sub_1C1425C48()
{
  return MEMORY[0x1E0D8CAA0]();
}

uint64_t sub_1C1425C54()
{
  return MEMORY[0x1E0D8CAB8]();
}

uint64_t sub_1C1425C60()
{
  return MEMORY[0x1E0D8CAC0]();
}

uint64_t sub_1C1425C6C()
{
  return MEMORY[0x1E0D8CAD0]();
}

uint64_t sub_1C1425C78()
{
  return MEMORY[0x1E0D8CAE0]();
}

uint64_t sub_1C1425C84()
{
  return MEMORY[0x1E0D8CB10]();
}

uint64_t sub_1C1425C90()
{
  return MEMORY[0x1E0D8CB18]();
}

uint64_t sub_1C1425C9C()
{
  return MEMORY[0x1E0D8CB20]();
}

uint64_t sub_1C1425CA8()
{
  return MEMORY[0x1E0D8CB28]();
}

uint64_t sub_1C1425CB4()
{
  return MEMORY[0x1E0D8CB30]();
}

uint64_t sub_1C1425CC0()
{
  return MEMORY[0x1E0D8CB40]();
}

uint64_t sub_1C1425CCC()
{
  return MEMORY[0x1E0D8CB68]();
}

uint64_t sub_1C1425CD8()
{
  return MEMORY[0x1E0D8CB70]();
}

uint64_t sub_1C1425CE4()
{
  return MEMORY[0x1E0D8CB78]();
}

uint64_t sub_1C1425CF0()
{
  return MEMORY[0x1E0D8CB80]();
}

uint64_t sub_1C1425CFC()
{
  return MEMORY[0x1E0D8CB90]();
}

uint64_t sub_1C1425D08()
{
  return MEMORY[0x1E0D8CBB0]();
}

uint64_t sub_1C1425D14()
{
  return MEMORY[0x1E0D8CBB8]();
}

uint64_t sub_1C1425D20()
{
  return MEMORY[0x1E0D8CBC0]();
}

uint64_t sub_1C1425D2C()
{
  return MEMORY[0x1E0D8CBC8]();
}

uint64_t sub_1C1425D38()
{
  return MEMORY[0x1E0D8CBD0]();
}

uint64_t sub_1C1425D44()
{
  return MEMORY[0x1E0D8CBD8]();
}

uint64_t sub_1C1425D50()
{
  return MEMORY[0x1E0D8CBE0]();
}

uint64_t sub_1C1425D5C()
{
  return MEMORY[0x1E0D8CBE8]();
}

uint64_t sub_1C1425D68()
{
  return MEMORY[0x1E0D8CBF0]();
}

uint64_t sub_1C1425D74()
{
  return MEMORY[0x1E0D8CBF8]();
}

uint64_t sub_1C1425D80()
{
  return MEMORY[0x1E0D8CC00]();
}

uint64_t sub_1C1425D8C()
{
  return MEMORY[0x1E0D8CC08]();
}

uint64_t sub_1C1425D98()
{
  return MEMORY[0x1E0D8CC10]();
}

uint64_t sub_1C1425DA4()
{
  return MEMORY[0x1E0D8CC18]();
}

uint64_t sub_1C1425DB0()
{
  return MEMORY[0x1E0D8CC20]();
}

uint64_t sub_1C1425DBC()
{
  return MEMORY[0x1E0D8CC28]();
}

uint64_t sub_1C1425DC8()
{
  return MEMORY[0x1E0D8CC30]();
}

uint64_t sub_1C1425DD4()
{
  return MEMORY[0x1E0D8CC38]();
}

uint64_t sub_1C1425DE0()
{
  return MEMORY[0x1E0D8CC40]();
}

uint64_t sub_1C1425DEC()
{
  return MEMORY[0x1E0D8CC48]();
}

uint64_t sub_1C1425DF8()
{
  return MEMORY[0x1E0D8CC78]();
}

uint64_t sub_1C1425E04()
{
  return MEMORY[0x1E0D8CC98]();
}

uint64_t sub_1C1425E10()
{
  return MEMORY[0x1E0D8CCA0]();
}

uint64_t sub_1C1425E1C()
{
  return MEMORY[0x1E0D8CCA8]();
}

uint64_t sub_1C1425E28()
{
  return MEMORY[0x1E0D8CCB0]();
}

uint64_t sub_1C1425E34()
{
  return MEMORY[0x1E0D8CCB8]();
}

uint64_t sub_1C1425E40()
{
  return MEMORY[0x1E0D8CCC0]();
}

uint64_t sub_1C1425E4C()
{
  return MEMORY[0x1E0D8CCD8]();
}

uint64_t sub_1C1425E58()
{
  return MEMORY[0x1E0D8CD10]();
}

uint64_t sub_1C1425E64()
{
  return MEMORY[0x1E0D8CD18]();
}

uint64_t sub_1C1425E70()
{
  return MEMORY[0x1E0D8CD20]();
}

uint64_t sub_1C1425E7C()
{
  return MEMORY[0x1E0D8CD28]();
}

uint64_t sub_1C1425E88()
{
  return MEMORY[0x1E0D8CD40]();
}

uint64_t sub_1C1425E94()
{
  return MEMORY[0x1E0D8CD58]();
}

uint64_t sub_1C1425EA0()
{
  return MEMORY[0x1E0D8CD60]();
}

uint64_t sub_1C1425EAC()
{
  return MEMORY[0x1E0D8CD78]();
}

uint64_t sub_1C1425EB8()
{
  return MEMORY[0x1E0D8CD80]();
}

uint64_t sub_1C1425EC4()
{
  return MEMORY[0x1E0D8CD90]();
}

uint64_t sub_1C1425ED0()
{
  return MEMORY[0x1E0D8CD98]();
}

uint64_t sub_1C1425EDC()
{
  return MEMORY[0x1E0D8CDA0]();
}

uint64_t sub_1C1425EE8()
{
  return MEMORY[0x1E0D8CDA8]();
}

uint64_t sub_1C1425EF4()
{
  return MEMORY[0x1E0D8CDB0]();
}

uint64_t sub_1C1425F00()
{
  return MEMORY[0x1E0D8CDB8]();
}

uint64_t sub_1C1425F0C()
{
  return MEMORY[0x1E0D8CDC0]();
}

uint64_t sub_1C1425F18()
{
  return MEMORY[0x1E0D8CDD8]();
}

uint64_t sub_1C1425F24()
{
  return MEMORY[0x1E0D8CDE0]();
}

uint64_t sub_1C1425F30()
{
  return MEMORY[0x1E0D8D4D0]();
}

uint64_t sub_1C1425F3C()
{
  return MEMORY[0x1E0D8D4D8]();
}

uint64_t sub_1C1425F48()
{
  return MEMORY[0x1E0D8D4E8]();
}

uint64_t sub_1C1425F54()
{
  return MEMORY[0x1E0D8D538]();
}

uint64_t sub_1C1425F60()
{
  return MEMORY[0x1E0D8D548]();
}

uint64_t sub_1C1425F6C()
{
  return MEMORY[0x1E0D8D550]();
}

uint64_t sub_1C1425F78()
{
  return MEMORY[0x1E0D8D560]();
}

uint64_t sub_1C1425F84()
{
  return MEMORY[0x1E0D8D568]();
}

uint64_t sub_1C1425F90()
{
  return MEMORY[0x1E0D8D570]();
}

uint64_t sub_1C1425F9C()
{
  return MEMORY[0x1E0D8D578]();
}

uint64_t sub_1C1425FA8()
{
  return MEMORY[0x1E0D8D580]();
}

uint64_t sub_1C1425FB4()
{
  return MEMORY[0x1E0D8D588]();
}

uint64_t sub_1C1425FC0()
{
  return MEMORY[0x1E0D8D5A0]();
}

uint64_t sub_1C1425FCC()
{
  return MEMORY[0x1E0D8D5A8]();
}

uint64_t sub_1C1425FD8()
{
  return MEMORY[0x1E0D8D5B0]();
}

uint64_t sub_1C1425FE4()
{
  return MEMORY[0x1E0D8D5D0]();
}

uint64_t sub_1C1425FF0()
{
  return MEMORY[0x1E0D8D5D8]();
}

uint64_t sub_1C1425FFC()
{
  return MEMORY[0x1E0D8D5E0]();
}

uint64_t sub_1C1426008()
{
  return MEMORY[0x1E0D8D5E8]();
}

uint64_t sub_1C1426014()
{
  return MEMORY[0x1E0D87660]();
}

uint64_t sub_1C1426020()
{
  return MEMORY[0x1E0D876B8]();
}

uint64_t sub_1C142602C()
{
  return MEMORY[0x1E0D876C8]();
}

uint64_t sub_1C1426038()
{
  return MEMORY[0x1E0D876F0]();
}

uint64_t sub_1C1426044()
{
  return MEMORY[0x1E0D87708]();
}

uint64_t sub_1C1426050()
{
  return MEMORY[0x1E0D87710]();
}

uint64_t sub_1C142605C()
{
  return MEMORY[0x1E0D87720]();
}

uint64_t sub_1C1426068()
{
  return MEMORY[0x1E0D87738]();
}

uint64_t sub_1C1426074()
{
  return MEMORY[0x1E0D87740]();
}

uint64_t sub_1C1426080()
{
  return MEMORY[0x1E0D87748]();
}

uint64_t sub_1C142608C()
{
  return MEMORY[0x1E0D87750]();
}

uint64_t sub_1C1426098()
{
  return MEMORY[0x1E0D87758]();
}

uint64_t sub_1C14260A4()
{
  return MEMORY[0x1E0D87788]();
}

uint64_t sub_1C14260B0()
{
  return MEMORY[0x1E0D877A0]();
}

uint64_t sub_1C14260BC()
{
  return MEMORY[0x1E0D87818]();
}

uint64_t sub_1C14260C8()
{
  return MEMORY[0x1E0D87828]();
}

uint64_t sub_1C14260D4()
{
  return MEMORY[0x1E0D87830]();
}

uint64_t sub_1C14260E0()
{
  return MEMORY[0x1E0D878A8]();
}

uint64_t sub_1C14260EC()
{
  return MEMORY[0x1E0D87980]();
}

uint64_t sub_1C14260F8()
{
  return MEMORY[0x1E0D879B8]();
}

uint64_t sub_1C1426104()
{
  return MEMORY[0x1E0D879D0]();
}

uint64_t sub_1C1426110()
{
  return MEMORY[0x1E0D879D8]();
}

uint64_t sub_1C142611C()
{
  return MEMORY[0x1E0D879E0]();
}

uint64_t sub_1C1426128()
{
  return MEMORY[0x1E0D879E8]();
}

uint64_t sub_1C1426134()
{
  return MEMORY[0x1E0D879F0]();
}

uint64_t sub_1C1426140()
{
  return MEMORY[0x1E0D879F8]();
}

uint64_t sub_1C142614C()
{
  return MEMORY[0x1E0D87A00]();
}

uint64_t sub_1C1426158()
{
  return MEMORY[0x1E0D87A28]();
}

uint64_t sub_1C1426164()
{
  return MEMORY[0x1E0D87A48]();
}

uint64_t sub_1C1426170()
{
  return MEMORY[0x1E0D87A50]();
}

uint64_t sub_1C142617C()
{
  return MEMORY[0x1E0D87A58]();
}

uint64_t sub_1C1426188()
{
  return MEMORY[0x1E0D87A68]();
}

uint64_t sub_1C1426194()
{
  return MEMORY[0x1E0D87A78]();
}

uint64_t sub_1C14261A0()
{
  return MEMORY[0x1E0D87AC8]();
}

uint64_t sub_1C14261AC()
{
  return MEMORY[0x1E0D87AF0]();
}

uint64_t sub_1C14261B8()
{
  return MEMORY[0x1E0D8CE08]();
}

uint64_t sub_1C14261C4()
{
  return MEMORY[0x1E0D8CE10]();
}

uint64_t sub_1C14261D0()
{
  return MEMORY[0x1E0D8CE18]();
}

uint64_t sub_1C14261DC()
{
  return MEMORY[0x1E0D8CE28]();
}

uint64_t sub_1C14261E8()
{
  return MEMORY[0x1E0D8CE30]();
}

uint64_t sub_1C14261F4()
{
  return MEMORY[0x1E0D8CE38]();
}

uint64_t sub_1C1426200()
{
  return MEMORY[0x1E0D8CE40]();
}

uint64_t sub_1C142620C()
{
  return MEMORY[0x1E0D8CE48]();
}

uint64_t sub_1C1426218()
{
  return MEMORY[0x1E0D8CE50]();
}

uint64_t sub_1C1426224()
{
  return MEMORY[0x1E0D8CE58]();
}

uint64_t sub_1C1426230()
{
  return MEMORY[0x1E0D8CE60]();
}

uint64_t sub_1C142623C()
{
  return MEMORY[0x1E0D8CE70]();
}

uint64_t sub_1C1426248()
{
  return MEMORY[0x1E0D8CE78]();
}

uint64_t sub_1C1426254()
{
  return MEMORY[0x1E0D8CE80]();
}

uint64_t sub_1C1426260()
{
  return MEMORY[0x1E0D8CE90]();
}

uint64_t sub_1C142626C()
{
  return MEMORY[0x1E0D8CEB0]();
}

uint64_t sub_1C1426278()
{
  return MEMORY[0x1E0D8CEB8]();
}

uint64_t sub_1C1426284()
{
  return MEMORY[0x1E0D8CEC0]();
}

uint64_t sub_1C1426290()
{
  return MEMORY[0x1E0D8CED0]();
}

uint64_t sub_1C142629C()
{
  return MEMORY[0x1E0D8CED8]();
}

uint64_t sub_1C14262A8()
{
  return MEMORY[0x1E0D8CEE0]();
}

uint64_t sub_1C14262B4()
{
  return MEMORY[0x1E0D8CEE8]();
}

uint64_t sub_1C14262C0()
{
  return MEMORY[0x1E0D8CEF0]();
}

uint64_t sub_1C14262CC()
{
  return MEMORY[0x1E0D8CEF8]();
}

uint64_t sub_1C14262D8()
{
  return MEMORY[0x1E0D8CF00]();
}

uint64_t sub_1C14262E4()
{
  return MEMORY[0x1E0D8CF08]();
}

uint64_t sub_1C14262F0()
{
  return MEMORY[0x1E0D8CF10]();
}

uint64_t sub_1C14262FC()
{
  return MEMORY[0x1E0D8CF18]();
}

uint64_t sub_1C1426308()
{
  return MEMORY[0x1E0D8CF20]();
}

uint64_t sub_1C1426314()
{
  return MEMORY[0x1E0D8CF28]();
}

uint64_t sub_1C1426320()
{
  return MEMORY[0x1E0D8CF30]();
}

uint64_t sub_1C142632C()
{
  return MEMORY[0x1E0D8CF40]();
}

uint64_t sub_1C1426338()
{
  return MEMORY[0x1E0D8CF48]();
}

uint64_t sub_1C1426344()
{
  return MEMORY[0x1E0D8CF50]();
}

uint64_t sub_1C1426350()
{
  return MEMORY[0x1E0D8CF78]();
}

uint64_t sub_1C142635C()
{
  return MEMORY[0x1E0D8CF80]();
}

uint64_t sub_1C1426368()
{
  return MEMORY[0x1E0D8CFA0]();
}

uint64_t sub_1C1426374()
{
  return MEMORY[0x1E0D8CFA8]();
}

uint64_t sub_1C1426380()
{
  return MEMORY[0x1E0D8CFB0]();
}

uint64_t sub_1C142638C()
{
  return MEMORY[0x1E0D8CFB8]();
}

uint64_t sub_1C1426398()
{
  return MEMORY[0x1E0D8CFC0]();
}

uint64_t sub_1C14263A4()
{
  return MEMORY[0x1E0D8CFD8]();
}

uint64_t sub_1C14263B0()
{
  return MEMORY[0x1E0D8CFE0]();
}

uint64_t sub_1C14263BC()
{
  return MEMORY[0x1E0D8CFE8]();
}

uint64_t sub_1C14263C8()
{
  return MEMORY[0x1E0D8CFF0]();
}

uint64_t sub_1C14263D4()
{
  return MEMORY[0x1E0D8CFF8]();
}

uint64_t sub_1C14263E0()
{
  return MEMORY[0x1E0D8D018]();
}

uint64_t sub_1C14263EC()
{
  return MEMORY[0x1E0D8D020]();
}

uint64_t sub_1C14263F8()
{
  return MEMORY[0x1E0D8D028]();
}

uint64_t sub_1C1426404()
{
  return MEMORY[0x1E0D8D030]();
}

uint64_t sub_1C1426410()
{
  return MEMORY[0x1E0D8D038]();
}

uint64_t sub_1C142641C()
{
  return MEMORY[0x1E0D8D050]();
}

uint64_t sub_1C1426428()
{
  return MEMORY[0x1E0D8D058]();
}

uint64_t sub_1C1426434()
{
  return MEMORY[0x1E0D8D060]();
}

uint64_t sub_1C1426440()
{
  return MEMORY[0x1E0D8D068]();
}

uint64_t sub_1C142644C()
{
  return MEMORY[0x1E0D8D078]();
}

uint64_t sub_1C1426458()
{
  return MEMORY[0x1E0D8D080]();
}

uint64_t sub_1C1426464()
{
  return MEMORY[0x1E0D8D088]();
}

uint64_t sub_1C1426470()
{
  return MEMORY[0x1E0D8D090]();
}

uint64_t sub_1C142647C()
{
  return MEMORY[0x1E0D8D098]();
}

uint64_t sub_1C1426488()
{
  return MEMORY[0x1E0D8D0A0]();
}

uint64_t sub_1C1426494()
{
  return MEMORY[0x1E0D8D0A8]();
}

uint64_t sub_1C14264A0()
{
  return MEMORY[0x1E0D8D0C8]();
}

uint64_t sub_1C14264AC()
{
  return MEMORY[0x1E0D8D0D0]();
}

uint64_t sub_1C14264B8()
{
  return MEMORY[0x1E0D8D0D8]();
}

uint64_t sub_1C14264C4()
{
  return MEMORY[0x1E0D8D0E0]();
}

uint64_t sub_1C14264D0()
{
  return MEMORY[0x1E0D8D0E8]();
}

uint64_t sub_1C14264DC()
{
  return MEMORY[0x1E0D8D110]();
}

uint64_t sub_1C14264E8()
{
  return MEMORY[0x1E0D8D128]();
}

uint64_t sub_1C14264F4()
{
  return MEMORY[0x1E0D8D130]();
}

uint64_t sub_1C1426500()
{
  return MEMORY[0x1E0D8D138]();
}

uint64_t sub_1C142650C()
{
  return MEMORY[0x1E0D8D140]();
}

uint64_t sub_1C1426518()
{
  return MEMORY[0x1E0D8D148]();
}

uint64_t sub_1C1426524()
{
  return MEMORY[0x1E0D8D150]();
}

uint64_t sub_1C1426530()
{
  return MEMORY[0x1E0D8D158]();
}

uint64_t sub_1C142653C()
{
  return MEMORY[0x1E0D8D160]();
}

uint64_t sub_1C1426548()
{
  return MEMORY[0x1E0D8D168]();
}

uint64_t sub_1C1426554()
{
  return MEMORY[0x1E0D8D170]();
}

uint64_t sub_1C1426560()
{
  return MEMORY[0x1E0D8D180]();
}

uint64_t sub_1C142656C()
{
  return MEMORY[0x1E0D8D188]();
}

uint64_t sub_1C1426578()
{
  return MEMORY[0x1E0D8D190]();
}

uint64_t sub_1C1426584()
{
  return MEMORY[0x1E0D8D198]();
}

uint64_t sub_1C1426590()
{
  return MEMORY[0x1E0D8D1A0]();
}

uint64_t sub_1C142659C()
{
  return MEMORY[0x1E0D8D1A8]();
}

uint64_t sub_1C14265A8()
{
  return MEMORY[0x1E0D8D1B8]();
}

uint64_t sub_1C14265B4()
{
  return MEMORY[0x1E0D8D1D0]();
}

uint64_t sub_1C14265C0()
{
  return MEMORY[0x1E0D8D1E0]();
}

uint64_t sub_1C14265CC()
{
  return MEMORY[0x1E0D8D1E8]();
}

uint64_t sub_1C14265D8()
{
  return MEMORY[0x1E0D8D1F0]();
}

uint64_t sub_1C14265E4()
{
  return MEMORY[0x1E0D8D1F8]();
}

uint64_t sub_1C14265F0()
{
  return MEMORY[0x1E0D8D200]();
}

uint64_t sub_1C14265FC()
{
  return MEMORY[0x1E0D8D208]();
}

uint64_t sub_1C1426608()
{
  return MEMORY[0x1E0D8D210]();
}

uint64_t sub_1C1426614()
{
  return MEMORY[0x1E0D8D218]();
}

uint64_t sub_1C1426620()
{
  return MEMORY[0x1E0D8D220]();
}

uint64_t sub_1C142662C()
{
  return MEMORY[0x1E0D8D230]();
}

uint64_t sub_1C1426638()
{
  return MEMORY[0x1E0D8D238]();
}

uint64_t sub_1C1426644()
{
  return MEMORY[0x1E0D8D240]();
}

uint64_t sub_1C1426650()
{
  return MEMORY[0x1E0D8D250]();
}

uint64_t sub_1C142665C()
{
  return MEMORY[0x1E0D8D258]();
}

uint64_t sub_1C1426668()
{
  return MEMORY[0x1E0D8D268]();
}

uint64_t sub_1C1426674()
{
  return MEMORY[0x1E0D8D270]();
}

uint64_t sub_1C1426680()
{
  return MEMORY[0x1E0D8D278]();
}

uint64_t sub_1C142668C()
{
  return MEMORY[0x1E0D8D288]();
}

uint64_t sub_1C1426698()
{
  return MEMORY[0x1E0D8D2A0]();
}

uint64_t sub_1C14266A4()
{
  return MEMORY[0x1E0D8D2A8]();
}

uint64_t sub_1C14266B0()
{
  return MEMORY[0x1E0D8D2B8]();
}

uint64_t sub_1C14266BC()
{
  return MEMORY[0x1E0D8D2C0]();
}

uint64_t sub_1C14266C8()
{
  return MEMORY[0x1E0D8D2D0]();
}

uint64_t sub_1C14266D4()
{
  return MEMORY[0x1E0D8D2D8]();
}

uint64_t sub_1C14266E0()
{
  return MEMORY[0x1E0D8D2E8]();
}

uint64_t sub_1C14266EC()
{
  return MEMORY[0x1E0D8D2F0]();
}

uint64_t sub_1C14266F8()
{
  return MEMORY[0x1E0D8D2F8]();
}

uint64_t sub_1C1426704()
{
  return MEMORY[0x1E0D8D300]();
}

uint64_t sub_1C1426710()
{
  return MEMORY[0x1E0D8D308]();
}

uint64_t sub_1C142671C()
{
  return MEMORY[0x1E0D8D310]();
}

uint64_t sub_1C1426728()
{
  return MEMORY[0x1E0D8D320]();
}

uint64_t sub_1C1426734()
{
  return MEMORY[0x1E0D8D328]();
}

uint64_t sub_1C1426740()
{
  return MEMORY[0x1E0D8D330]();
}

uint64_t sub_1C142674C()
{
  return MEMORY[0x1E0D8D348]();
}

uint64_t sub_1C1426758()
{
  return MEMORY[0x1E0D8D350]();
}

uint64_t sub_1C1426764()
{
  return MEMORY[0x1E0D8D358]();
}

uint64_t sub_1C1426770()
{
  return MEMORY[0x1E0D8D360]();
}

uint64_t sub_1C142677C()
{
  return MEMORY[0x1E0D8D368]();
}

uint64_t sub_1C1426788()
{
  return MEMORY[0x1E0D8D388]();
}

uint64_t sub_1C1426794()
{
  return MEMORY[0x1E0D8D3A0]();
}

uint64_t sub_1C14267A0()
{
  return MEMORY[0x1E0D8D3A8]();
}

uint64_t sub_1C14267AC()
{
  return MEMORY[0x1E0D8D3B0]();
}

uint64_t sub_1C14267B8()
{
  return MEMORY[0x1E0D8D3B8]();
}

uint64_t sub_1C14267C4()
{
  return MEMORY[0x1E0D8D3C0]();
}

uint64_t sub_1C14267D0()
{
  return MEMORY[0x1E0D8D3E0]();
}

uint64_t sub_1C14267DC()
{
  return MEMORY[0x1E0D8D3E8]();
}

uint64_t sub_1C14267E8()
{
  return MEMORY[0x1E0DF2100]();
}

uint64_t sub_1C14267F4()
{
  return MEMORY[0x1E0DF2108]();
}

uint64_t sub_1C1426800()
{
  return MEMORY[0x1E0DF2118]();
}

uint64_t sub_1C142680C()
{
  return MEMORY[0x1E0DF2130]();
}

uint64_t sub_1C1426818()
{
  return MEMORY[0x1E0DF2150]();
}

uint64_t sub_1C1426824()
{
  return MEMORY[0x1E0DF2170]();
}

uint64_t sub_1C1426830()
{
  return MEMORY[0x1E0C90220]();
}

uint64_t sub_1C142683C()
{
  return MEMORY[0x1E0D8CAE8]();
}

uint64_t sub_1C1426848()
{
  return MEMORY[0x1E0DF2240]();
}

uint64_t sub_1C1426854()
{
  return MEMORY[0x1E0DF2258]();
}

uint64_t sub_1C1426860()
{
  return MEMORY[0x1E0DEF360]();
}

uint64_t sub_1C142686C()
{
  return MEMORY[0x1E0DF2040]();
}

uint64_t sub_1C1426878()
{
  return MEMORY[0x1E0DEF3F8]();
}

uint64_t sub_1C1426884()
{
  return MEMORY[0x1E0DEF440]();
}

uint64_t sub_1C1426890()
{
  return MEMORY[0x1E0DEF448]();
}

uint64_t sub_1C142689C()
{
  return MEMORY[0x1E0C95D08]();
}

uint64_t sub_1C14268A8()
{
  return MEMORY[0x1E0C95DD8]();
}

uint64_t sub_1C14268B4()
{
  return MEMORY[0x1E0C95DE8]();
}

uint64_t sub_1C14268C0()
{
  return MEMORY[0x1E0C95E00]();
}

uint64_t sub_1C14268CC()
{
  return MEMORY[0x1E0C95F08]();
}

uint64_t sub_1C14268D8()
{
  return MEMORY[0x1E0C95F20]();
}

uint64_t sub_1C14268E4()
{
  return MEMORY[0x1E0C95F60]();
}

uint64_t sub_1C14268F0()
{
  return MEMORY[0x1E0C95FA8]();
}

uint64_t sub_1C14268FC()
{
  return MEMORY[0x1E0C96128]();
}

uint64_t sub_1C1426908()
{
  return MEMORY[0x1E0C961D0]();
}

uint64_t sub_1C1426914()
{
  return MEMORY[0x1E0C96378]();
}

uint64_t sub_1C1426920()
{
  return MEMORY[0x1E0C96388]();
}

uint64_t sub_1C142692C()
{
  return MEMORY[0x1E0C963E8]();
}

uint64_t sub_1C1426938()
{
  return MEMORY[0x1E0C96410]();
}

uint64_t sub_1C1426944()
{
  return MEMORY[0x1E0DEF4A8]();
}

uint64_t sub_1C1426950()
{
  return MEMORY[0x1E0DEF4F8]();
}

uint64_t sub_1C142695C()
{
  return MEMORY[0x1E0DEF560]();
}

uint64_t sub_1C1426968()
{
  return MEMORY[0x1E0DEF570]();
}

uint64_t sub_1C1426974()
{
  return MEMORY[0x1E0DEF578]();
}

uint64_t sub_1C1426980()
{
  return MEMORY[0x1E0DEF580]();
}

uint64_t sub_1C142698C()
{
  return MEMORY[0x1E0DEF588]();
}

uint64_t sub_1C1426998()
{
  return MEMORY[0x1E0DEF590]();
}

uint64_t sub_1C14269A4()
{
  return MEMORY[0x1E0DEF598]();
}

uint64_t sub_1C14269B0()
{
  return MEMORY[0x1E0DEF5B0]();
}

uint64_t sub_1C14269BC()
{
  return MEMORY[0x1E0DEF698]();
}

uint64_t sub_1C14269C8()
{
  return MEMORY[0x1E0DEF6A0]();
}

uint64_t sub_1C14269D4()
{
  return MEMORY[0x1E0DEF6B8]();
}

uint64_t sub_1C14269E0()
{
  return MEMORY[0x1E0DEF6D8]();
}

uint64_t sub_1C14269EC()
{
  return MEMORY[0x1E0DEF6E8]();
}

uint64_t sub_1C14269F8()
{
  return MEMORY[0x1E0DEF748]();
}

uint64_t sub_1C1426A04()
{
  return MEMORY[0x1E0DEF760]();
}

uint64_t sub_1C1426A10()
{
  return MEMORY[0x1E0DEF778]();
}

uint64_t sub_1C1426A1C()
{
  return MEMORY[0x1E0CB17D8]();
}

uint64_t sub_1C1426A28()
{
  return MEMORY[0x1E0CB17E8]();
}

uint64_t sub_1C1426A34()
{
  return MEMORY[0x1E0CB1808]();
}

uint64_t sub_1C1426A40()
{
  return MEMORY[0x1E0DE9E38]();
}

uint64_t sub_1C1426A4C()
{
  return MEMORY[0x1E0DEA1B8]();
}

uint64_t sub_1C1426A58()
{
  return MEMORY[0x1E0DEA3C0]();
}

uint64_t sub_1C1426A64()
{
  return MEMORY[0x1E0DEA3C8]();
}

uint64_t sub_1C1426A70()
{
  return MEMORY[0x1E0DEA568]();
}

uint64_t sub_1C1426A7C()
{
  return MEMORY[0x1E0CB1940]();
}

uint64_t sub_1C1426A88()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t sub_1C1426A94()
{
  return MEMORY[0x1E0CB1A50]();
}

uint64_t sub_1C1426AA0()
{
  return MEMORY[0x1E0DEA5F8]();
}

uint64_t sub_1C1426AAC()
{
  return MEMORY[0x1E0DEA630]();
}

uint64_t sub_1C1426AB8()
{
  return MEMORY[0x1E0DEA658]();
}

uint64_t sub_1C1426AC4()
{
  return MEMORY[0x1E0DEA6F8]();
}

uint64_t sub_1C1426AD0()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_1C1426ADC()
{
  return MEMORY[0x1E0DEA7C0]();
}

uint64_t sub_1C1426AE8()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_1C1426AF4()
{
  return MEMORY[0x1E0DEA828]();
}

uint64_t sub_1C1426B00()
{
  return MEMORY[0x1E0DEA850]();
}

uint64_t sub_1C1426B0C()
{
  return MEMORY[0x1E0DEA858]();
}

uint64_t sub_1C1426B18()
{
  return MEMORY[0x1E0DEA870]();
}

uint64_t sub_1C1426B24()
{
  return MEMORY[0x1E0DEA878]();
}

uint64_t sub_1C1426B30()
{
  return MEMORY[0x1E0DEA880]();
}

uint64_t sub_1C1426B3C()
{
  return MEMORY[0x1E0DEA908]();
}

uint64_t sub_1C1426B48()
{
  return MEMORY[0x1E0DEAA08]();
}

uint64_t sub_1C1426B54()
{
  return MEMORY[0x1E0DEAA40]();
}

uint64_t sub_1C1426B60()
{
  return MEMORY[0x1E0DEAA50]();
}

uint64_t sub_1C1426B6C()
{
  return MEMORY[0x1E0DEACA0]();
}

uint64_t sub_1C1426B78()
{
  return MEMORY[0x1E0DEAD18]();
}

uint64_t sub_1C1426B84()
{
  return MEMORY[0x1E0CB1AC0]();
}

uint64_t sub_1C1426B90()
{
  return MEMORY[0x1E0CB1AE8]();
}

uint64_t sub_1C1426B9C()
{
  return MEMORY[0x1E0DEADB0]();
}

uint64_t sub_1C1426BA8()
{
  return MEMORY[0x1E0DEADB8]();
}

uint64_t sub_1C1426BB4()
{
  return MEMORY[0x1E0DF05B8]();
}

uint64_t sub_1C1426BC0()
{
  return MEMORY[0x1E0DF0748]();
}

uint64_t sub_1C1426BCC()
{
  return MEMORY[0x1E0DF0750]();
}

uint64_t sub_1C1426BD8()
{
  return MEMORY[0x1E0DF07F8]();
}

uint64_t sub_1C1426BE4()
{
  return MEMORY[0x1E0DF0800]();
}

uint64_t sub_1C1426BF0()
{
  return MEMORY[0x1E0CB1BB0]();
}

uint64_t sub_1C1426BFC()
{
  return MEMORY[0x1E0CB1BD8]();
}

uint64_t sub_1C1426C08()
{
  return MEMORY[0x1E0DEB220]();
}

uint64_t sub_1C1426C14()
{
  return MEMORY[0x1E0DEB258]();
}

uint64_t sub_1C1426C20()
{
  return MEMORY[0x1E0DEB2A8]();
}

uint64_t sub_1C1426C2C()
{
  return MEMORY[0x1E0DEB310]();
}

uint64_t sub_1C1426C38()
{
  return MEMORY[0x1E0CB1C10]();
}

uint64_t sub_1C1426C44()
{
  return MEMORY[0x1E0CF9638]();
}

uint64_t sub_1C1426C50()
{
  return MEMORY[0x1E0DF2270]();
}

uint64_t sub_1C1426C5C()
{
  return MEMORY[0x1E0DF2278]();
}

uint64_t sub_1C1426C68()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t sub_1C1426C74()
{
  return MEMORY[0x1E0DF2288]();
}

uint64_t sub_1C1426C80()
{
  return MEMORY[0x1E0DF2290]();
}

uint64_t sub_1C1426C8C()
{
  return MEMORY[0x1E0DEF810]();
}

uint64_t sub_1C1426C98()
{
  return MEMORY[0x1E0DEF840]();
}

uint64_t sub_1C1426CA4()
{
  return MEMORY[0x1E0DEF868]();
}

uint64_t sub_1C1426CB0()
{
  return MEMORY[0x1E0DEF880]();
}

uint64_t sub_1C1426CBC()
{
  return MEMORY[0x1E0DEF898]();
}

uint64_t sub_1C1426CC8()
{
  return MEMORY[0x1E0DEF8A0]();
}

uint64_t sub_1C1426CD4()
{
  return MEMORY[0x1E0DEF8E0]();
}

uint64_t sub_1C1426CE0()
{
  return MEMORY[0x1E0DEF8E8]();
}

uint64_t sub_1C1426CEC()
{
  return MEMORY[0x1E0DEF8F8]();
}

uint64_t sub_1C1426CF8()
{
  return MEMORY[0x1E0DEF900]();
}

uint64_t sub_1C1426D04()
{
  return MEMORY[0x1E0DEF910]();
}

uint64_t sub_1C1426D10()
{
  return MEMORY[0x1E0DEF920]();
}

uint64_t sub_1C1426D1C()
{
  return MEMORY[0x1E0DEF938]();
}

uint64_t sub_1C1426D28()
{
  return MEMORY[0x1E0DEF978]();
}

uint64_t sub_1C1426D34()
{
  return MEMORY[0x1E0DEF9F0]();
}

uint64_t sub_1C1426D40()
{
  return MEMORY[0x1E0DEFA18]();
}

uint64_t sub_1C1426D4C()
{
  return MEMORY[0x1E0DEFA20]();
}

uint64_t sub_1C1426D58()
{
  return MEMORY[0x1E0DF22A8]();
}

uint64_t sub_1C1426D64()
{
  return MEMORY[0x1E0DEFA98]();
}

uint64_t sub_1C1426D70()
{
  return MEMORY[0x1E0D8CDF8]();
}

uint64_t sub_1C1426D7C()
{
  return MEMORY[0x1E0CB20D0]();
}

uint64_t sub_1C1426D88()
{
  return MEMORY[0x1E0DEFCD8]();
}

uint64_t sub_1C1426D94()
{
  return MEMORY[0x1E0DEFCE0]();
}

uint64_t sub_1C1426DA0()
{
  return MEMORY[0x1E0DF22B0]();
}

uint64_t sub_1C1426DAC()
{
  return MEMORY[0x1E0DEB940]();
}

uint64_t sub_1C1426DB8()
{
  return MEMORY[0x1E0DEBC20]();
}

uint64_t sub_1C1426DC4()
{
  return MEMORY[0x1E0DEBC90]();
}

uint64_t sub_1C1426DD0()
{
  return MEMORY[0x1E0CB2410]();
}

uint64_t sub_1C1426DDC()
{
  return MEMORY[0x1E0DEBE30]();
}

uint64_t sub_1C1426DE8()
{
  return MEMORY[0x1E0DEBE50]();
}

uint64_t sub_1C1426DF4()
{
  return MEMORY[0x1E0DEC060]();
}

uint64_t sub_1C1426E00()
{
  return MEMORY[0x1E0DEC068]();
}

uint64_t sub_1C1426E0C()
{
  return MEMORY[0x1E0DEC070]();
}

uint64_t sub_1C1426E18()
{
  return MEMORY[0x1E0DEC078]();
}

uint64_t sub_1C1426E24()
{
  return MEMORY[0x1E0DEC0A8]();
}

uint64_t sub_1C1426E30()
{
  return MEMORY[0x1E0DEC0B0]();
}

uint64_t sub_1C1426E3C()
{
  return MEMORY[0x1E0DEC0B8]();
}

uint64_t sub_1C1426E48()
{
  return MEMORY[0x1E0DEC0D0]();
}

uint64_t sub_1C1426E54()
{
  return MEMORY[0x1E0DEC0D8]();
}

uint64_t sub_1C1426E60()
{
  return MEMORY[0x1E0DEC0E0]();
}

uint64_t sub_1C1426E6C()
{
  return MEMORY[0x1E0DEC0F8]();
}

uint64_t sub_1C1426E78()
{
  return MEMORY[0x1E0DEC100]();
}

uint64_t sub_1C1426E84()
{
  return MEMORY[0x1E0DEC110]();
}

uint64_t sub_1C1426E90()
{
  return MEMORY[0x1E0DEC118]();
}

uint64_t sub_1C1426E9C()
{
  return MEMORY[0x1E0DEC128]();
}

uint64_t sub_1C1426EA8()
{
  return MEMORY[0x1E0DEC168]();
}

uint64_t sub_1C1426EB4()
{
  return MEMORY[0x1E0DEC178]();
}

uint64_t sub_1C1426EC0()
{
  return MEMORY[0x1E0DEC1B0]();
}

uint64_t sub_1C1426ECC()
{
  return MEMORY[0x1E0DEC248]();
}

uint64_t sub_1C1426ED8()
{
  return MEMORY[0x1E0DEC250]();
}

uint64_t sub_1C1426EE4()
{
  return MEMORY[0x1E0DEC258]();
}

uint64_t sub_1C1426EF0()
{
  return MEMORY[0x1E0DEC260]();
}

uint64_t sub_1C1426EFC()
{
  return MEMORY[0x1E0DEC280]();
}

uint64_t sub_1C1426F08()
{
  return MEMORY[0x1E0DEC2A8]();
}

uint64_t sub_1C1426F14()
{
  return MEMORY[0x1E0DEC2B0]();
}

uint64_t sub_1C1426F20()
{
  return MEMORY[0x1E0DEC3E0]();
}

uint64_t sub_1C1426F2C()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t sub_1C1426F38()
{
  return MEMORY[0x1E0DEC660]();
}

uint64_t sub_1C1426F44()
{
  return MEMORY[0x1E0DEC670]();
}

uint64_t sub_1C1426F50()
{
  return MEMORY[0x1E0DEC688]();
}

uint64_t sub_1C1426F5C()
{
  return MEMORY[0x1E0DEC6C0]();
}

uint64_t sub_1C1426F68()
{
  return MEMORY[0x1E0DEC6C8]();
}

uint64_t sub_1C1426F74()
{
  return MEMORY[0x1E0DEC8E0]();
}

uint64_t sub_1C1426F80()
{
  return MEMORY[0x1E0DECBE0]();
}

uint64_t sub_1C1426F8C()
{
  return MEMORY[0x1E0DECBE8]();
}

uint64_t sub_1C1426F98()
{
  return MEMORY[0x1E0DECD18]();
}

uint64_t sub_1C1426FA4()
{
  return MEMORY[0x1E0DECD38]();
}

uint64_t sub_1C1426FB0()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t sub_1C1426FBC()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_1C1426FC8()
{
  return MEMORY[0x1E0DECD70]();
}

uint64_t sub_1C1426FD4()
{
  return MEMORY[0x1E0DECF28]();
}

uint64_t sub_1C1426FE0()
{
  return MEMORY[0x1E0DECF58]();
}

uint64_t sub_1C1426FEC()
{
  return MEMORY[0x1E0DECF88]();
}

uint64_t sub_1C1426FF8()
{
  return MEMORY[0x1E0DECFC0]();
}

uint64_t sub_1C1427004()
{
  return MEMORY[0x1E0DECFC8]();
}

uint64_t sub_1C1427010()
{
  return MEMORY[0x1E0DECFF0]();
}

uint64_t sub_1C142701C()
{
  return MEMORY[0x1E0DED090]();
}

uint64_t sub_1C1427028()
{
  return MEMORY[0x1E0DED0C0]();
}

uint64_t sub_1C1427034()
{
  return MEMORY[0x1E0DED0F0]();
}

uint64_t sub_1C1427040()
{
  return MEMORY[0x1E0DED0F8]();
}

uint64_t sub_1C142704C()
{
  return MEMORY[0x1E0DED120]();
}

uint64_t sub_1C1427058()
{
  return MEMORY[0x1E0DED1D0]();
}

uint64_t sub_1C1427064()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_1C1427070()
{
  return MEMORY[0x1E0DEDAE0]();
}

uint64_t sub_1C142707C()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_1C1427088()
{
  return MEMORY[0x1E0CB2650]();
}

uint64_t sub_1C1427094()
{
  return MEMORY[0x1E0DEDB10]();
}

uint64_t sub_1C14270A0()
{
  return MEMORY[0x1E0DEDB18]();
}

uint64_t sub_1C14270AC()
{
  return MEMORY[0x1E0DEDB20]();
}

uint64_t sub_1C14270B8()
{
  return MEMORY[0x1E0DEDB28]();
}

uint64_t sub_1C14270C4()
{
  return MEMORY[0x1E0DEDED8]();
}

uint64_t sub_1C14270D0()
{
  return MEMORY[0x1E0DEDEE0]();
}

uint64_t sub_1C14270DC()
{
  return MEMORY[0x1E0DEDEF0]();
}

uint64_t sub_1C14270E8()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_1C14270F4()
{
  return MEMORY[0x1E0DEDF10]();
}

uint64_t sub_1C1427100()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t sub_1C142710C()
{
  return MEMORY[0x1E0DEE240]();
}

uint64_t sub_1C1427118()
{
  return MEMORY[0x1E0DEE270]();
}

uint64_t sub_1C1427124()
{
  return MEMORY[0x1E0DEE8E0]();
}

uint64_t sub_1C1427130()
{
  return MEMORY[0x1E0DEE8E8]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x1E0D15428]();
}

const void *__cdecl CFDictionaryGetValue(CFDictionaryRef theDict, const void *key)
{
  return (const void *)MEMORY[0x1E0C985B8](theDict, key);
}

void CFRelease(CFTypeRef cf)
{
  MEMORY[0x1E0C98BC0](cf);
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x1E0DE2B20]();
}

uint64_t MobileGestalt_get_current_device()
{
  return MEMORY[0x1E0DE2C00]();
}

uint64_t MobileGestalt_get_deviceClassNumber()
{
  return MEMORY[0x1E0DE2C08]();
}

uint64_t PLLogRegisteredEvent()
{
  return MEMORY[0x1E0D7FE28]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C810D0](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1E0DEEA28]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1E0DEEA40]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x1E0C82E08](predicate, block);
}

void dispatch_resume(dispatch_object_t object)
{
  MEMORY[0x1E0C82EA0](object);
}

void dispatch_suspend(dispatch_object_t object)
{
  MEMORY[0x1E0C82F88](object);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82F90](queue, block);
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

pid_t getpid(void)
{
  return MEMORY[0x1E0C83760]();
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1E0C83E68](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x1E0C843D8](*(_QWORD *)&token);
}

uint32_t notify_get_state(int token, uint64_t *state64)
{
  return MEMORY[0x1E0C843E8](*(_QWORD *)&token, state64);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x1E0C84408](name, out_token, queue, handler);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7BD0](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1E0DE7BF8]();
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

uint64_t os_state_add_handler()
{
  return MEMORY[0x1E0C84940]();
}

uint64_t os_state_remove_handler()
{
  return MEMORY[0x1E0C84948]();
}

void os_unfair_lock_assert_not_owner(const os_unfair_lock *lock)
{
  MEMORY[0x1E0C84988](lock);
}

void os_unfair_lock_assert_owner(const os_unfair_lock *lock)
{
  MEMORY[0x1E0C84990](lock);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C84998](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C849B0](lock);
}

int sem_close(sem_t *a1)
{
  return MEMORY[0x1E0C85290](a1);
}

unsigned int sleep(unsigned int a1)
{
  return MEMORY[0x1E0C85438](*(_QWORD *)&a1);
}

char *__cdecl strncpy(char *__dst, const char *__src, size_t __n)
{
  return (char *)MEMORY[0x1E0C855B0](__dst, __src, __n);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1E0DEEA98]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1E0DEEAB8]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1E0DEEAD8]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1E0DEEAE8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1E0DEEAF0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1E0DEEB28]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x1E0DEEB40]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1E0DEEB68]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x1E0DEEB88]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1E0DEEBF8]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1E0DEEC40]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEC48]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1E0DEEC50]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1E0DEEC78]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1E0DEECB0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1E0DEECC8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1E0DEECE0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1E0DEECF8]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1E0DEED38]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1E0DEED40]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1E0DEED58]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x1E0DEED60]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1E0DEED78]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1E0DEED88]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1E0DEED98]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1E0DEEDE8]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1E0DEEE38]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1E0DEEE50]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1E0DEEE70]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1E0DEEE80]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1E0DEEE88]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1E0DEEE98]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEEA0]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1E0DF1000]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1E0DF1008]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1E0DF1010]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x1E0DF1050]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x1E0DEEEB8]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1E0DEEEC8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1E0DEEED8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1E0DEEF20]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1E0DEEF38]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1E0DEEF40]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1E0DEEF48]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1E0DEEF78]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x1E0DEEF80]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1E0DEEF98]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1E0DEEFA0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1E0DEEFA8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1E0DEEFC0]();
}

int usleep(useconds_t a1)
{
  return MEMORY[0x1E0C859E0](*(_QWORD *)&a1);
}

const char *__cdecl xpc_dictionary_get_string(xpc_object_t xdict, const char *key)
{
  return (const char *)MEMORY[0x1E0C862C8](xdict, key);
}

void xpc_set_event_stream_handler(const char *stream, dispatch_queue_t targetq, xpc_handler_t handler)
{
  MEMORY[0x1E0C866E8](stream, targetq, handler);
}

