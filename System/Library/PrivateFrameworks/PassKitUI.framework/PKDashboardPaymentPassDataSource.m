@implementation PKDashboardPaymentPassDataSource

- (id)appleBalanceAccountItem
{
  PKDashboardBalanceItem *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  void *v18;
  id v19;
  id location;

  v3 = objc_alloc_init(PKDashboardBalanceItem);
  -[PKDashboardPaymentPassDataSource account](self, "account");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "appleBalanceDetails");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v5, "accountSummary");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "currentBalance");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "currencyCode");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  PKCurrencyAmountMake();
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v9, "formattedStringValue");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardBalanceItem setBalance:](v3, "setBalance:", v10);

  PKLocalizedLynxString(CFSTR("PASS_BALANCE_TITLE"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardBalanceItem setTitle:](v3, "setTitle:", v11);

  objc_msgSend(MEMORY[0x1E0DC3658], "labelColor");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardBalanceItem setTitleColor:](v3, "setTitleColor:", v12);

  PKLocalizedLynxString(CFSTR("PASS_ADD_MONEY_BUTTON_TITLE"));
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardBalanceItem setTopUpTitle:](v3, "setTopUpTitle:", v13);

  objc_initWeak(&location, self);
  v15 = MEMORY[0x1E0C809B0];
  v16 = 3221225472;
  v17 = __73__PKDashboardPaymentPassDataSource_AppleBalance__appleBalanceAccountItem__block_invoke;
  v18 = &unk_1E3E61310;
  objc_copyWeak(&v19, &location);
  -[PKDashboardBalanceItem setTopUpAction:](v3, "setTopUpAction:", &v15);
  -[PKDashboardBalanceItem setTopUpEnabled:](v3, "setTopUpEnabled:", -[PKDashboardPaymentPassDataSource _topUpEnabled](self, "_topUpEnabled", v15, v16, v17, v18));
  objc_destroyWeak(&v19);
  objc_destroyWeak(&location);

  return v3;
}

void __73__PKDashboardPaymentPassDataSource_AppleBalance__appleBalanceAccountItem__block_invoke(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  void *v3;
  void *v4;
  id v5;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v5 = WeakRetained;
    objc_msgSend(WeakRetained, "groupView");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "pkui_viewControllerFromResponderChain");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "navigationController");
    v4 = (void *)objc_claimAutoreleasedReturnValue();

    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
      objc_msgSend(v4, "presentAddMoneyAppleBalance");

    WeakRetained = v5;
  }

}

- (BOOL)_topUpEnabled
{
  void *v3;
  char v4;
  void *v5;

  -[PKDashboardPaymentPassDataSource account](self, "account");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v3, "supportsTopUp") & 1) != 0)
  {
    v4 = 1;
  }
  else
  {
    -[PKDashboardPaymentPassDataSource account](self, "account");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = objc_msgSend(v5, "supportsAMPTopUp");

  }
  return v4;
}

- (BOOL)canDisplayAppleBalanceBalance
{
  return 1;
}

- (int64_t)numberOfAppleBalanceBalanceDashboardItems
{
  void *v3;
  void *v4;
  int64_t v5;

  -[PKDashboardPaymentPassDataSource account](self, "account");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPaymentPassDataSource pass](self, "pass");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (PKCanShowAppleBalanceTopUpOptions())
    v5 = -[PKDashboardPaymentPassDataSource _topUpEnabled](self, "_topUpEnabled");
  else
    v5 = 0;

  return v5;
}

- (void)reloadAppleBalance
{
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  PKAppleBalanceAddMoneyUIManager *v10;
  void *v11;
  PKAppleBalanceAddMoneyUIManager *v12;
  id v13;

  if (-[PKDashboardPaymentPassDataSource _isAppleBalancePass](self, "_isAppleBalancePass"))
  {
    -[PKDashboardPaymentPassDataSource account](self, "account");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "appleBalanceDetails");
    v13 = (id)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v13, "accountSummary");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "currentBalance");
    v5 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "currencyCode");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    PKCurrencyAmountMake();
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    -[PKDashboardPaymentPassDataSource lastUpdatedBalance](self, "lastUpdatedBalance");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    LOBYTE(v5) = objc_msgSend(v7, "isEqual:", v8);

    if ((v5 & 1) == 0)
    {
      -[PKDashboardPaymentPassDataSource setLastUpdatedBalance:](self, "setLastUpdatedBalance:", v7);
      -[PKDashboardPaymentPassDataSource _updateBalance](self, "_updateBalance");
    }
    -[PKDashboardPaymentPassDataSource appleBalanceAddMoneyUIManager](self, "appleBalanceAddMoneyUIManager");
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v9)
    {
      v10 = [PKAppleBalanceAddMoneyUIManager alloc];
      -[PKDashboardPaymentPassDataSource account](self, "account");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = -[PKAppleBalanceAddMoneyUIManager initWithAccount:](v10, "initWithAccount:", v11);

      -[PKDashboardPaymentPassDataSource setAppleBalanceAddMoneyUIManager:](self, "setAppleBalanceAddMoneyUIManager:", v12);
    }

  }
}

- (void)appleBalanceDashboardMessagesWithCompletion:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  PKDashboardPassMessage *v8;
  void *v9;
  void *v10;
  id v11;
  int v12;
  const __CFString *v13;
  NSString *v14;
  void *v15;
  PKDashboardPassMessage *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  _QWORD v31[5];
  id v32;
  id v33;
  uint64_t *v34;
  id v35;
  _QWORD v36[4];
  id v37;
  _QWORD v38[4];
  id v39;
  _QWORD v40[4];
  id v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t);
  void (*v46)(uint64_t);
  id v47;
  id location;

  v4 = a3;
  -[PKDashboardPaymentPassDataSource account](self, "account");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    objc_initWeak(&location, self);
    v42 = 0;
    v43 = &v42;
    v44 = 0x3032000000;
    v45 = __Block_byref_object_copy__2;
    v46 = __Block_byref_object_dispose__2;
    v47 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
    if ((PKSharedCacheGetBoolForKey() & 1) == 0)
    {
      -[PKDashboardPaymentPassDataSource pass](self, "pass");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      v7 = objc_msgSend(v6, "passActivationState");

      if (!v7)
      {
        v8 = objc_alloc_init(PKDashboardPassMessage);
        -[PKDashboardPassMessage setIdentifier:](v8, "setIdentifier:", CFSTR("appleBalanceReady"));
        -[PKDashboardPaymentPassDataSource _messageImageWithName:extension:](self, "_messageImageWithName:extension:", CFSTR("AppleBalanceDashboardIcon"), CFSTR("pdf"));
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        -[PKDashboardPassMessage setImage:](v8, "setImage:", v9);

        PKLocalizedLynxString(CFSTR("ACCOUNT_PASS_READY_TITLE"));
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        -[PKDashboardPassMessage setTitle:](v8, "setTitle:", v10);

        v11 = objc_alloc(MEMORY[0x1E0CB3940]);
        v12 = objc_msgSend(v5, "supportsInStorePayment");
        v13 = CFSTR("_NO_IN_STORE_PAYMENT");
        if (v12)
          v13 = &stru_1E3E7D690;
        v14 = (NSString *)objc_msgSend(v11, "initWithFormat:", CFSTR("ACCOUNT_PASS_READY_BODY%@"), v13);
        PKLocalizedLynxString(v14);
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        -[PKDashboardPassMessage setMessage:](v8, "setMessage:", v15);

        v40[0] = MEMORY[0x1E0C809B0];
        v40[1] = 3221225472;
        v40[2] = __94__PKDashboardPaymentPassDataSource_AppleBalance__appleBalanceDashboardMessagesWithCompletion___block_invoke;
        v40[3] = &unk_1E3E61310;
        objc_copyWeak(&v41, &location);
        -[PKDashboardPassMessage setActionOnDismiss:](v8, "setActionOnDismiss:", v40);
        objc_msgSend((id)v43[5], "addObject:", v8);
        objc_destroyWeak(&v41);

      }
    }
    if ((PKSharedCacheGetBoolForKey() & 1) == 0 && objc_msgSend(v5, "supportsInStoreTopUp"))
    {
      v16 = objc_alloc_init(PKDashboardPassMessage);
      -[PKDashboardPassMessage setIdentifier:](v16, "setIdentifier:", CFSTR("appleBalanceInStoreTopUpEducation"));
      objc_msgSend(MEMORY[0x1E0DC3888], "configurationWithPointSize:", 45.0);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0DC3870], "systemImageNamed:withConfiguration:", CFSTR("barcode.viewfinder"), v17);
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0DC3658], "labelColor");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "imageWithTintColor:renderingMode:", v19, 1);
      v20 = (void *)objc_claimAutoreleasedReturnValue();

      -[PKDashboardPassMessage setImage:](v16, "setImage:", v20);
      PKLocalizedLynxString(CFSTR("IN_STORE_TOP_UP_EDUCATION_MESSAGE_TITLE"));
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setTitle:](v16, "setTitle:", v21);

      PKLocalizedLynxString(CFSTR("IN_STORE_TOP_UP_EDUCATION_MESSAGE_BODY"));
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setMessage:](v16, "setMessage:", v22);

      PKLocalizedLynxString(CFSTR("IN_STORE_TOP_UP_EDUCATION_BARCODE_BUTTON"));
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setButtonTitle:](v16, "setButtonTitle:", v23);

      v24 = MEMORY[0x1E0C809B0];
      v38[0] = MEMORY[0x1E0C809B0];
      v38[1] = 3221225472;
      v38[2] = __94__PKDashboardPaymentPassDataSource_AppleBalance__appleBalanceDashboardMessagesWithCompletion___block_invoke_2;
      v38[3] = &unk_1E3E61310;
      objc_copyWeak(&v39, &location);
      -[PKDashboardPassMessage setActionOnButtonPress:](v16, "setActionOnButtonPress:", v38);
      v36[0] = v24;
      v36[1] = 3221225472;
      v36[2] = __94__PKDashboardPaymentPassDataSource_AppleBalance__appleBalanceDashboardMessagesWithCompletion___block_invoke_3;
      v36[3] = &unk_1E3E61310;
      objc_copyWeak(&v37, &location);
      -[PKDashboardPassMessage setActionOnDismiss:](v16, "setActionOnDismiss:", v36);
      objc_msgSend((id)v43[5], "addObject:", v16);
      objc_destroyWeak(&v37);
      objc_destroyWeak(&v39);

    }
    if (objc_msgSend(v5, "supportsTopUp"))
    {
      objc_msgSend(v5, "appleBalanceDetails");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v25, "currencyCode");
      v26 = (void *)objc_claimAutoreleasedReturnValue();

      -[PKDashboardPaymentPassDataSource accountService](self, "accountService");
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "accountIdentifier");
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      v31[0] = MEMORY[0x1E0C809B0];
      v31[1] = 3221225472;
      v31[2] = __94__PKDashboardPaymentPassDataSource_AppleBalance__appleBalanceDashboardMessagesWithCompletion___block_invoke_4;
      v31[3] = &unk_1E3E64258;
      v31[4] = self;
      v29 = v26;
      v32 = v29;
      objc_copyWeak(&v35, &location);
      v34 = &v42;
      v33 = v4;
      objc_msgSend(v27, "appleBalancePromotionForAccountWithIdentifier:completion:", v28, v31);

      objc_destroyWeak(&v35);
    }
    else
    {
      if (!v4)
        goto LABEL_20;
      v30 = objc_msgSend((id)v43[5], "count");
      v29 = v30 ? (id)objc_msgSend((id)v43[5], "copy") : 0;
      (*((void (**)(id, id))v4 + 2))(v4, v29);
      if (!v30)
        goto LABEL_20;
    }

LABEL_20:
    _Block_object_dispose(&v42, 8);

    objc_destroyWeak(&location);
    goto LABEL_21;
  }
  if (v4)
    (*((void (**)(id, _QWORD))v4 + 2))(v4, 0);
LABEL_21:

}

void __94__PKDashboardPaymentPassDataSource_AppleBalance__appleBalanceDashboardMessagesWithCompletion___block_invoke(uint64_t a1)
{
  id WeakRetained;
  id v3;

  PKSharedCacheSetBoolForKey();
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained, "reloadMessages");
    WeakRetained = v3;
  }

}

void __94__PKDashboardPaymentPassDataSource_AppleBalance__appleBalanceDashboardMessagesWithCompletion___block_invoke_2(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  void *v3;
  void *v4;
  id v5;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v5 = WeakRetained;
    objc_msgSend(WeakRetained, "appleBalanceAddMoneyUIManager");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "groupView");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "pkui_viewControllerFromResponderChain");
    v4 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v2, "presentInStoreTopUpFromViewController:context:token:", v4, 0, 0);
    WeakRetained = v5;
  }

}

void __94__PKDashboardPaymentPassDataSource_AppleBalance__appleBalanceDashboardMessagesWithCompletion___block_invoke_3(uint64_t a1)
{
  id WeakRetained;
  id v3;

  PKSharedCacheSetBoolForKey();
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained, "reloadMessages");
    WeakRetained = v3;
  }

}

void __94__PKDashboardPaymentPassDataSource_AppleBalance__appleBalanceDashboardMessagesWithCompletion___block_invoke_4(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  PKDashboardPassMessage *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  _QWORD v16[4];
  id v17;
  id v18;
  _QWORD v19[4];
  id v20;
  id v21;

  v3 = a2;
  objc_msgSend(v3, "uniqueIdentifier");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3 && (PKHasDismissedOrUsedAppleBalancePromotionWithIdentifier() & 1) == 0)
  {
    v5 = objc_alloc_init(PKDashboardPassMessage);
    -[PKDashboardPassMessage setIdentifier:](v5, "setIdentifier:", CFSTR("appleBalancePromotion"));
    objc_msgSend(*(id *)(a1 + 32), "_messageImageWithName:extension:", CFSTR("AppleBalancePromoIcon"), CFSTR("png"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setImage:](v5, "setImage:", v6);

    objc_msgSend(v3, "offerText");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setTitle:](v5, "setTitle:", v7);

    objc_msgSend(v3, "conditionText");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setMessage:](v5, "setMessage:", v8);

    objc_msgSend(v3, "bonusMinAmount");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    PKCurrencyAmountMake();
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v10, "minimalFormattedStringValue");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    PKLocalizedLynxString(CFSTR("DASHBOARD_PROMOTION_ADD"), CFSTR("%@"), v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setButtonTitle:](v5, "setButtonTitle:", v12);

    v13 = MEMORY[0x1E0C809B0];
    v19[0] = MEMORY[0x1E0C809B0];
    v19[1] = 3221225472;
    v19[2] = __94__PKDashboardPaymentPassDataSource_AppleBalance__appleBalanceDashboardMessagesWithCompletion___block_invoke_5;
    v19[3] = &unk_1E3E61B68;
    objc_copyWeak(&v21, (id *)(a1 + 64));
    v20 = v3;
    -[PKDashboardPassMessage setActionOnButtonPress:](v5, "setActionOnButtonPress:", v19);
    v16[0] = v13;
    v16[1] = 3221225472;
    v16[2] = __94__PKDashboardPaymentPassDataSource_AppleBalance__appleBalanceDashboardMessagesWithCompletion___block_invoke_6;
    v16[3] = &unk_1E3E612C0;
    v17 = v4;
    objc_copyWeak(&v18, (id *)(a1 + 64));
    -[PKDashboardPassMessage setActionOnDismiss:](v5, "setActionOnDismiss:", v16);
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "addObject:", v5);
    objc_destroyWeak(&v18);

    objc_destroyWeak(&v21);
  }
  v14 = *(_QWORD *)(a1 + 48);
  if (v14)
  {
    if (objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "count"))
    {
      v15 = (void *)objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "copy");
      (*(void (**)(uint64_t, void *))(v14 + 16))(v14, v15);

    }
    else
    {
      (*(void (**)(uint64_t, _QWORD))(v14 + 16))(v14, 0);
    }
  }

}

void __94__PKDashboardPaymentPassDataSource_AppleBalance__appleBalanceDashboardMessagesWithCompletion___block_invoke_5(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v6 = WeakRetained;
    objc_msgSend(WeakRetained, "appleBalanceAddMoneyUIManager");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "groupView");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "pkui_viewControllerFromResponderChain");
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v3, "presentDirectTopUpFromViewController:context:configuration:promotion:completion:", v5, 3, 0, *(_QWORD *)(a1 + 32), 0);
    WeakRetained = v6;
  }

}

void __94__PKDashboardPaymentPassDataSource_AppleBalance__appleBalanceDashboardMessagesWithCompletion___block_invoke_6(uint64_t a1)
{
  id WeakRetained;
  id v3;

  PKSetHasDismissedOrUsedAppleBalancePromotionWithIdentifier();
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained, "reloadMessages");
    WeakRetained = v3;
  }

}

- (BOOL)supportsPaymentRewardsBalance
{
  int v2;

  v2 = PKPayWithRewardsEnabled();
  if (v2)
    LOBYTE(v2) = PKHideCardBenefitRewards() ^ 1;
  return v2;
}

- (BOOL)hasAssociatedPaymentRewardsBalance
{
  void *v2;
  BOOL v3;

  -[PKDashboardPaymentPassDataSource associatedPaymentRewardsBalance](self, "associatedPaymentRewardsBalance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2 != 0;

  return v3;
}

- (id)dashboardRewardsBalanceItem
{
  void *v3;
  uint64_t v4;
  void *v5;
  PKDashboardRewardsBalanceItem *v6;
  PKDashboardRewardsBalanceItem *v7;
  void *v8;
  void *v9;

  -[PKDashboardPaymentPassDataSource associatedPaymentRewardsBalance](self, "associatedPaymentRewardsBalance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPaymentPassDataSource pass](self, "pass");
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = (void *)v4;
  v6 = 0;
  if (v3 && v4)
  {
    v7 = [PKDashboardRewardsBalanceItem alloc];
    objc_msgSend(v5, "organizationName");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "uniqueID");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[PKDashboardRewardsBalanceItem initWithPaymentRewardsBalance:institutionName:passUniquIdentifier:](v7, "initWithPaymentRewardsBalance:institutionName:passUniquIdentifier:", v3, v8, v9);

  }
  return v6;
}

- (void)reloadAssociatedPaymentRewardsBalance
{
  void *v3;
  void *v4;
  NSObject *v5;
  void *v6;
  void *v7;
  void *v8;
  char v9;
  void *v10;
  int v11;
  NSObject *v12;
  _QWORD v13[4];
  NSObject *v14;
  id v15;
  id v16;
  id v17;
  id buf[2];

  if (-[PKDashboardPaymentPassDataSource supportsPaymentRewardsBalance](self, "supportsPaymentRewardsBalance")
    && -[PKDashboardPaymentPassDataSource _hasPassPersonalized](self, "_hasPassPersonalized"))
  {
    -[PKDashboardPaymentPassDataSource pass](self, "pass");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "uniqueID");
    v4 = (void *)objc_claimAutoreleasedReturnValue();

    if (v4)
    {
      v5 = objc_alloc_init(MEMORY[0x1E0D672B0]);
      -[NSObject paymentRewardsBalancesWithPassUniqueIdentifier:](v5, "paymentRewardsBalancesWithPassUniqueIdentifier:", v4);
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      __88__PKDashboardPaymentPassDataSource_PaymentOffers__reloadAssociatedPaymentRewardsBalance__block_invoke((uint64_t)v6, v6);
      v7 = (void *)objc_claimAutoreleasedReturnValue();

      if (v7)
      {
        -[PKDashboardPaymentPassDataSource associatedPaymentRewardsBalance](self, "associatedPaymentRewardsBalance");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        v9 = objc_msgSend(v7, "isEqual:", v8);

        if ((v9 & 1) == 0)
        {
          -[PKDashboardPaymentPassDataSource setAssociatedPaymentRewardsBalance:](self, "setAssociatedPaymentRewardsBalance:", v7);
          -[PKDashboardPaymentPassDataSource _updateRewardsBalanceItem](self, "_updateRewardsBalanceItem");
        }
      }
      -[PKDashboardPaymentPassDataSource associatedPaymentRewardsBalance](self, "associatedPaymentRewardsBalance");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = objc_msgSend(v10, "isFresh");

      if (v11)
      {
        PKLogFacilityTypeGetObject();
        v12 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
        {
          LOWORD(buf[0]) = 0;
          _os_log_impl(&dword_19D178000, v12, OS_LOG_TYPE_DEFAULT, "Associated Payment Rewards Balance is fresh enough, skipping reload", (uint8_t *)buf, 2u);
        }

      }
      else
      {
        objc_initWeak(buf, self);
        v13[0] = MEMORY[0x1E0C809B0];
        v13[1] = 3221225472;
        v13[2] = __88__PKDashboardPaymentPassDataSource_PaymentOffers__reloadAssociatedPaymentRewardsBalance__block_invoke_11;
        v13[3] = &unk_1E3E666F0;
        v14 = v5;
        v15 = v4;
        v16 = &__block_literal_global_47;
        objc_copyWeak(&v17, buf);
        -[NSObject eligiblePaymentOfferCriteriasForPassUniqueID:completion:](v14, "eligiblePaymentOfferCriteriasForPassUniqueID:completion:", v15, v13);
        objc_destroyWeak(&v17);

        objc_destroyWeak(buf);
      }

    }
    else
    {
      PKLogFacilityTypeGetObject();
      v5 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(buf[0]) = 0;
        _os_log_impl(&dword_19D178000, v5, OS_LOG_TYPE_DEFAULT, "Can't associate rewards balance with no pass", (uint8_t *)buf, 2u);
      }
    }

  }
  else
  {
    -[PKDashboardPaymentPassDataSource resetAssociatedPaymentRewardsBalanceIfNeeded](self, "resetAssociatedPaymentRewardsBalanceIfNeeded");
  }
}

id __88__PKDashboardPaymentPassDataSource_PaymentOffers__reloadAssociatedPaymentRewardsBalance__block_invoke(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  id v4;
  void *v5;

  v2 = a2;
  objc_msgSend(v2, "pk_firstObjectPassingTest:", &__block_literal_global_9);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3 || !objc_msgSend(v2, "count"))
  {
    v4 = v3;
  }
  else
  {
    objc_msgSend(v2, "firstObject");
    v4 = (id)objc_claimAutoreleasedReturnValue();
  }
  v5 = v4;

  return v5;
}

uint64_t __88__PKDashboardPaymentPassDataSource_PaymentOffers__reloadAssociatedPaymentRewardsBalance__block_invoke_2(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;

  v2 = a2;
  if (objc_msgSend(v2, "isValid"))
    v3 = objc_msgSend(v2, "isRedeemable");
  else
    v3 = 0;

  return v3;
}

void __88__PKDashboardPaymentPassDataSource_PaymentOffers__reloadAssociatedPaymentRewardsBalance__block_invoke_11(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  void *v8;
  uint64_t v9;
  _QWORD v10[4];
  id v11;
  id v12;
  uint8_t buf[4];
  id v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (v6)
  {
    PKLogFacilityTypeGetObject();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v14 = v6;
      _os_log_impl(&dword_19D178000, v7, OS_LOG_TYPE_DEFAULT, "Error loading catalog criteria, %@", buf, 0xCu);
    }
  }
  else
  {
    objc_msgSend(v5, "pk_firstObjectPassingTest:", &__block_literal_global_14);
    v7 = objc_claimAutoreleasedReturnValue();
    if (v7)
    {
      v8 = *(void **)(a1 + 32);
      v9 = *(_QWORD *)(a1 + 40);
      v10[0] = MEMORY[0x1E0C809B0];
      v10[1] = 3221225472;
      v10[2] = __88__PKDashboardPaymentPassDataSource_PaymentOffers__reloadAssociatedPaymentRewardsBalance__block_invoke_2_15;
      v10[3] = &unk_1E3E666C8;
      v11 = *(id *)(a1 + 48);
      objc_copyWeak(&v12, (id *)(a1 + 56));
      objc_msgSend(v8, "updatePaymentRewardsBalancesWithPassUniqueIdentifier:completion:", v9, v10);
      objc_destroyWeak(&v12);

    }
  }

}

BOOL __88__PKDashboardPaymentPassDataSource_PaymentOffers__reloadAssociatedPaymentRewardsBalance__block_invoke_12(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "type") == 2;
}

void __88__PKDashboardPaymentPassDataSource_PaymentOffers__reloadAssociatedPaymentRewardsBalance__block_invoke_2_15(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  void *v8;
  id v9;
  _QWORD v10[4];
  id v11;
  id v12;
  uint8_t buf[4];
  id v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  if (v6)
  {
    PKLogFacilityTypeGetObject();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v14 = v6;
      _os_log_impl(&dword_19D178000, v7, OS_LOG_TYPE_DEFAULT, "Error loading rewards balances, %@", buf, 0xCu);
    }

  }
  else
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v10[0] = MEMORY[0x1E0C809B0];
    v10[1] = 3221225472;
    v10[2] = __88__PKDashboardPaymentPassDataSource_PaymentOffers__reloadAssociatedPaymentRewardsBalance__block_invoke_16;
    v10[3] = &unk_1E3E61B68;
    objc_copyWeak(&v12, (id *)(a1 + 40));
    v11 = v8;
    v9 = v8;
    dispatch_async(MEMORY[0x1E0C80D38], v10);

    objc_destroyWeak(&v12);
  }

}

void __88__PKDashboardPaymentPassDataSource_PaymentOffers__reloadAssociatedPaymentRewardsBalance__block_invoke_16(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  id v4;

  v2 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "setAssociatedPaymentRewardsBalance:", *(_QWORD *)(a1 + 32));

  v4 = objc_loadWeakRetained(v2);
  objc_msgSend(v4, "_updateRewardsBalanceItem");

}

- (void)resetAssociatedPaymentRewardsBalanceIfNeeded
{
  if (-[PKDashboardPaymentPassDataSource hasAssociatedPaymentRewardsBalance](self, "hasAssociatedPaymentRewardsBalance"))
  {
    -[PKDashboardPaymentPassDataSource setAssociatedPaymentRewardsBalance:](self, "setAssociatedPaymentRewardsBalance:", 0);
    -[PKDashboardPaymentPassDataSource _updateRewardsBalanceItem](self, "_updateRewardsBalanceItem");
  }
}

- (BOOL)_hasPassPersonalized
{
  void *v2;
  void *v3;
  uint64_t v4;

  -[PKDashboardPaymentPassDataSource pass](self, "pass");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "devicePrimaryPaymentApplication");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "state");

  return v4 == 1;
}

- (void)_updateRewardsBalanceItem
{
  unint64_t v3;
  void *v4;
  id v5;

  v3 = -[PKDashboardPaymentPassDataSource firstSectionIndexForSectionIdentifier:](self, "firstSectionIndexForSectionIdentifier:", 4);
  -[PKDashboardPaymentPassDataSource delegate](self, "delegate");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB36B8], "indexSetWithIndex:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "reloadSections:", v4);

}

- (id)deviceTapAmountEntryViewControllerWithInitialAmount:(id)a3 initialMemo:(id)a4 dismissAction:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  _QWORD v15[4];
  id v16;

  v8 = a5;
  v9 = a4;
  v10 = a3;
  -[PKDashboardPaymentPassDataSource nearbyPeerPaymentViewProvider](self, "nearbyPeerPaymentViewProvider");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 3221225472;
  v15[2] = __133__PKDashboardPaymentPassDataSource_NearbyPeerPayment__deviceTapAmountEntryViewControllerWithInitialAmount_initialMemo_dismissAction___block_invoke;
  v15[3] = &unk_1E3E63218;
  v16 = v8;
  v12 = v8;
  objc_msgSend(v11, "amountEntryViewWithInitialAmount:initialMemo:dismissAction:", v10, v9, v15);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v13, "setOverrideUserInterfaceStyle:", 2);
  return v13;
}

uint64_t __133__PKDashboardPaymentPassDataSource_NearbyPeerPayment__deviceTapAmountEntryViewControllerWithInitialAmount_initialMemo_dismissAction___block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;

  if (a2)
  {
    v3 = (void *)MEMORY[0x1E0D67470];
    v4 = a2;
    objc_msgSend(v3, "sharedInstance");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "presentSenderFlowWithHost:userInfo:completion:", 0, v4, 0);

  }
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

- (unint64_t)numberOfAccounts
{
  void *v2;
  unint64_t v3;

  -[PKDashboardPaymentPassDataSource accounts](self, "accounts");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "count");

  return v3;
}

- (void)reloadAccounts
{
  void *v3;
  id v4;
  id v5;
  BOOL v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  void (**v11)(void *, uint64_t);
  id v12;
  id v13;
  id v14;
  void (**v15)(void *, uint64_t);
  id v16;
  void *v17;
  id v18;
  id v19;
  id *v20;
  id *v21;
  _QWORD v22[4];
  id v23;
  _QWORD *v24;
  id v25;
  _QWORD v26[4];
  id v27;
  _QWORD *v28;
  _QWORD *v29;
  id v30;
  _QWORD v31[4];
  id v32;
  id v33;
  _QWORD v34[4];
  id v35;
  id v36;
  PKDashboardPaymentPassDataSource *v37;
  id v38;
  id v39;
  _QWORD aBlock[4];
  id v41;
  id v42;
  id v43;
  _QWORD *v44;
  id v45;
  id location;
  _QWORD v47[3];
  char v48;
  _QWORD v49[3];
  char v50;

  if (-[PKDashboardPaymentPassDataSource _isCreditPass](self, "_isCreditPass"))
  {
    objc_msgSend(MEMORY[0x1E0D668E8], "sharedInstance");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
    v5 = objc_alloc_init(MEMORY[0x1E0D66B90]);
    v6 = -[PKDashboardPaymentPassDataSource accountsLoaded](self, "accountsLoaded");
    v49[0] = 0;
    v49[1] = v49;
    v49[2] = 0x2020000000;
    v50 = 0;
    v47[0] = 0;
    v47[1] = v47;
    v47[2] = 0x2020000000;
    v48 = 0;
    objc_initWeak(&location, self);
    v7 = MEMORY[0x1E0C809B0];
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 3221225472;
    aBlock[2] = __60__PKDashboardPaymentPassDataSource_Accounts__reloadAccounts__block_invoke;
    aBlock[3] = &unk_1E3E70110;
    v8 = v5;
    v41 = v8;
    v9 = v3;
    v42 = v9;
    v20 = &v45;
    objc_copyWeak(&v45, &location);
    v44 = v47;
    v10 = v4;
    v43 = v10;
    v11 = (void (**)(void *, uint64_t))_Block_copy(aBlock);
    v34[0] = v7;
    v34[1] = 3221225472;
    v34[2] = __60__PKDashboardPaymentPassDataSource_Accounts__reloadAccounts__block_invoke_4;
    v34[3] = &unk_1E3E70188;
    v12 = v8;
    v35 = v12;
    v13 = v10;
    v36 = v13;
    v37 = self;
    v14 = v9;
    v38 = v14;
    objc_copyWeak(&v39, &location);
    v15 = (void (**)(void *, uint64_t))_Block_copy(v34);
    v11[2](v11, 5);
    v31[0] = v7;
    v31[1] = 3221225472;
    v31[2] = __60__PKDashboardPaymentPassDataSource_Accounts__reloadAccounts__block_invoke_22;
    v31[3] = &unk_1E3E65FB8;
    objc_copyWeak(&v33, &location);
    v16 = v13;
    v32 = v16;
    objc_msgSend(v12, "addOperation:", v31);
    v15[2](v15, 5);
    if (!v6)
    {
      v26[0] = v7;
      v26[1] = 3221225472;
      v26[2] = __60__PKDashboardPaymentPassDataSource_Accounts__reloadAccounts__block_invoke_3_25;
      v26[3] = &unk_1E3E70270;
      objc_copyWeak(&v30, &location);
      v28 = v47;
      v27 = v14;
      v29 = v49;
      objc_msgSend(v12, "addOperation:", v26, &v45);

      objc_destroyWeak(&v30);
    }
    objc_msgSend(MEMORY[0x1E0C99E38], "null", v20);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v22[0] = v7;
    v22[1] = 3221225472;
    v22[2] = __60__PKDashboardPaymentPassDataSource_Accounts__reloadAccounts__block_invoke_29;
    v22[3] = &unk_1E3E70200;
    objc_copyWeak(&v25, &location);
    v18 = v16;
    v23 = v18;
    v24 = v49;
    v19 = (id)objc_msgSend(v12, "evaluateWithInput:completion:", v17, v22);

    objc_destroyWeak(&v25);
    objc_destroyWeak(&v33);

    objc_destroyWeak(&v39);
    objc_destroyWeak(v21);

    objc_destroyWeak(&location);
    _Block_object_dispose(v47, 8);
    _Block_object_dispose(v49, 8);

  }
  else
  {
    -[PKDashboardPaymentPassDataSource setAccountsLoaded:](self, "setAccountsLoaded:", 1);
    if (!-[PKDashboardPaymentPassDataSource allContentIsLoaded](self, "allContentIsLoaded"))
      -[PKDashboardPaymentPassDataSource updateContentIsLoaded](self, "updateContentIsLoaded");
  }
}

void __60__PKDashboardPaymentPassDataSource_Accounts__reloadAccounts__block_invoke(uint64_t a1, void *a2)
{
  void *v4;
  id v5;
  __int128 v6;
  _QWORD v7[4];
  id v8;
  __int128 v9;
  id v10[2];

  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = __60__PKDashboardPaymentPassDataSource_Accounts__reloadAccounts__block_invoke_2;
  v7[3] = &unk_1E3E700E8;
  v4 = *(void **)(a1 + 32);
  v8 = *(id *)(a1 + 40);
  v10[1] = a2;
  objc_copyWeak(v10, (id *)(a1 + 64));
  v6 = *(_OWORD *)(a1 + 48);
  v5 = (id)v6;
  v9 = v6;
  objc_msgSend(v4, "addOperation:", v7);

  objc_destroyWeak(v10);
}

void __60__PKDashboardPaymentPassDataSource_Accounts__reloadAccounts__block_invoke_2(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  _QWORD v15[4];
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  id v20;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  v10 = *(void **)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 64);
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 3221225472;
  v15[2] = __60__PKDashboardPaymentPassDataSource_Accounts__reloadAccounts__block_invoke_3;
  v15[3] = &unk_1E3E700C0;
  objc_copyWeak(&v20, (id *)(a1 + 56));
  v12 = *(void **)(a1 + 40);
  v19 = *(_QWORD *)(a1 + 48);
  v16 = v12;
  v13 = v9;
  v18 = v13;
  v14 = v8;
  v17 = v14;
  objc_msgSend(v10, "defaultAccountForFeature:completion:", v11, v15);

  objc_destroyWeak(&v20);
}

void __60__PKDashboardPaymentPassDataSource_Accounts__reloadAccounts__block_invoke_3(uint64_t a1, void *a2)
{
  id WeakRetained;
  void *v4;
  void (*v5)(void);
  id v6;

  v6 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  v4 = WeakRetained;
  if (WeakRetained)
  {
    if (v6)
      *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 24) = 1;
    if (objc_msgSend(WeakRetained, "_accountCanBePresented:"))
      objc_msgSend(*(id *)(a1 + 32), "addObject:", v6);
    v5 = *(void (**)(void))(*(_QWORD *)(a1 + 48) + 16);
  }
  else
  {
    v5 = *(void (**)(void))(*(_QWORD *)(a1 + 48) + 16);
  }
  v5();

}

void __60__PKDashboardPaymentPassDataSource_Accounts__reloadAccounts__block_invoke_4(uint64_t a1, void *a2)
{
  void *v4;
  id v5;
  uint64_t v6;
  void *v7;
  _QWORD v8[4];
  id v9;
  uint64_t v10;
  id v11;
  id v12[2];

  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = __60__PKDashboardPaymentPassDataSource_Accounts__reloadAccounts__block_invoke_5;
  v8[3] = &unk_1E3E70160;
  v4 = *(void **)(a1 + 32);
  v5 = *(id *)(a1 + 40);
  v12[1] = a2;
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(void **)(a1 + 56);
  v9 = v5;
  v10 = v6;
  v11 = v7;
  objc_copyWeak(v12, (id *)(a1 + 64));
  objc_msgSend(v4, "addOperation:", v8);
  objc_destroyWeak(v12);

}

void __60__PKDashboardPaymentPassDataSource_Accounts__reloadAccounts__block_invoke_5(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  void *v13;
  void *v14;
  int v15;
  double v16;
  void *v17;
  void *v18;
  double v19;
  _BOOL4 v20;
  NSObject *v21;
  void *v22;
  void *v23;
  void *v24;
  NSObject *v25;
  void *v26;
  id v27;
  void *v28;
  _QWORD v29[4];
  id v30;
  void *v31;
  id v32;
  id v33;
  id v34[2];
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint8_t buf[4];
  void *v40;
  _BYTE v41[128];
  uint64_t v42;

  v42 = *MEMORY[0x1E0C80C00];
  v27 = a2;
  v7 = a3;
  v8 = a4;
  v28 = v7;
  if (objc_msgSend(*(id *)(a1 + 32), "count"))
  {
    v37 = 0u;
    v38 = 0u;
    v35 = 0u;
    v36 = 0u;
    v9 = *(id *)(a1 + 32);
    v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v35, v41, 16, v27);
    if (v10)
    {
      v11 = *(_QWORD *)v36;
      do
      {
        for (i = 0; i != v10; ++i)
        {
          if (*(_QWORD *)v36 != v11)
            objc_enumerationMutation(v9);
          v13 = *(void **)(*((_QWORD *)&v35 + 1) + 8 * i);
          if (objc_msgSend(v13, "feature") == *(_QWORD *)(a1 + 64))
          {
            objc_msgSend(*(id *)(a1 + 40), "context");
            v14 = (void *)objc_claimAutoreleasedReturnValue();
            v15 = objc_msgSend(v14, "limitServerLoad");

            if (!v13)
              goto LABEL_16;
            v16 = v15 ? 86400.0 : 300.0;
            objc_msgSend(MEMORY[0x1E0C99D68], "date");
            v17 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v13, "lastUpdated");
            v18 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v17, "timeIntervalSinceDate:", v18);
            v20 = v19 > v16;

            if (v20)
            {
              PKLogFacilityTypeGetObject();
              v21 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
              {
                PKFeatureIdentifierToString();
                v22 = (void *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = 138543362;
                v40 = v22;
                _os_log_impl(&dword_19D178000, v21, OS_LOG_TYPE_DEFAULT, "Dashboard fetching updating %{public}@ account", buf, 0xCu);

              }
              v23 = *(void **)(a1 + 48);
              objc_msgSend(v13, "accountIdentifier");
              v24 = (void *)objc_claimAutoreleasedReturnValue();
              v29[0] = MEMORY[0x1E0C809B0];
              v29[1] = 3221225472;
              v29[2] = __60__PKDashboardPaymentPassDataSource_Accounts__reloadAccounts__block_invoke_21;
              v29[3] = &unk_1E3E70138;
              objc_copyWeak(v34, (id *)(a1 + 56));
              v34[1] = *(id *)(a1 + 64);
              v30 = *(id *)(a1 + 32);
              v31 = v13;
              v33 = v8;
              v32 = v28;
              objc_msgSend(v23, "updateAccountWithIdentifier:extended:completion:", v24, 0, v29);

              objc_destroyWeak(v34);
            }
            else
            {
LABEL_16:
              PKLogFacilityTypeGetObject();
              v25 = objc_claimAutoreleasedReturnValue();
              if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
              {
                PKFeatureIdentifierToString();
                v26 = (void *)objc_claimAutoreleasedReturnValue();
                *(_DWORD *)buf = 138543362;
                v40 = v26;
                _os_log_impl(&dword_19D178000, v25, OS_LOG_TYPE_DEFAULT, "Dashboard not updating %{public}@ account", buf, 0xCu);

              }
              (*((void (**)(id, void *, _QWORD))v8 + 2))(v8, v28, 0);
            }
          }
        }
        v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v35, v41, 16);
      }
      while (v10);
    }

  }
  else
  {
    (*((void (**)(id, id, _QWORD))v8 + 2))(v8, v7, 0);
  }

}

void __60__PKDashboardPaymentPassDataSource_Accounts__reloadAccounts__block_invoke_21(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id WeakRetained;
  NSObject *v8;
  void *v9;
  void (*v10)(void);
  void *v11;
  void *v12;
  int v13;
  void *v14;
  __int16 v15;
  id v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  if (WeakRetained)
  {
    PKLogFacilityTypeGetObject();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      PKFeatureIdentifierToString();
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v13 = 138543618;
      v14 = v9;
      v15 = 2114;
      v16 = v6;
      _os_log_impl(&dword_19D178000, v8, OS_LOG_TYPE_DEFAULT, "Dashboard fetched updating %{public}@ account, with error %{public}@", (uint8_t *)&v13, 0x16u);

    }
    if (!v5 || v6)
    {
      if (v6)
      {
        objc_msgSend(WeakRetained, "accountUpdateError");
        v11 = (void *)objc_claimAutoreleasedReturnValue();

        if (!v11)
        {
          objc_msgSend(v5, "feature");
          PKAccountDisplayableError();
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(WeakRetained, "setAccountUpdateError:", v12);

        }
      }
    }
    else if (objc_msgSend(WeakRetained, "_accountCanBePresented:", v5))
    {
      objc_msgSend(*(id *)(a1 + 32), "removeObject:", *(_QWORD *)(a1 + 40));
      objc_msgSend(*(id *)(a1 + 32), "addObject:", v5);
    }
    v10 = *(void (**)(void))(*(_QWORD *)(a1 + 56) + 16);
  }
  else
  {
    v10 = *(void (**)(void))(*(_QWORD *)(a1 + 56) + 16);
  }
  v10();

}

void __60__PKDashboardPaymentPassDataSource_Accounts__reloadAccounts__block_invoke_22(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  _QWORD v11[4];
  id v12;
  id v13;
  id v14;
  id v15;

  v6 = a3;
  v7 = a4;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = __60__PKDashboardPaymentPassDataSource_Accounts__reloadAccounts__block_invoke_2_23;
  v11[3] = &unk_1E3E67750;
  objc_copyWeak(&v15, (id *)(a1 + 40));
  v8 = *(id *)(a1 + 32);
  v13 = v6;
  v14 = v7;
  v12 = v8;
  v9 = v6;
  v10 = v7;
  dispatch_async(MEMORY[0x1E0C80D38], v11);

  objc_destroyWeak(&v15);
}

void __60__PKDashboardPaymentPassDataSource_Accounts__reloadAccounts__block_invoke_2_23(uint64_t a1)
{
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    v2 = (void *)objc_msgSend(*(id *)(a1 + 32), "copy");
    objc_msgSend(WeakRetained, "_updateAccounts:", v2);

  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();

}

void __60__PKDashboardPaymentPassDataSource_Accounts__reloadAccounts__block_invoke_3_25(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  void (**v9)(id, id, _QWORD);
  id WeakRetained;
  void *v11;
  void *v12;
  void *v13;
  int v14;
  NSObject *v15;
  void *v16;
  _QWORD v17[4];
  id v18;
  void (**v19)(id, id, _QWORD);
  uint64_t v20;
  id v21;
  uint8_t buf[16];

  v7 = a2;
  v8 = a3;
  v9 = a4;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  v11 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend(WeakRetained, "account");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v12, "feature") == 2)
    {
      objc_msgSend(v12, "creditDetails");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v13, "rewardsDestination") == 3)
      {
        v14 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24);

        if (!v14)
        {
          if ((PKCheckedForSavingsPresence() & 1) != 0)
          {
            v9[2](v9, v8, 0);
          }
          else
          {
            PKLogFacilityTypeGetObject();
            v15 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
            {
              *(_WORD *)buf = 0;
              _os_log_impl(&dword_19D178000, v15, OS_LOG_TYPE_DEFAULT, "Card account rewards destination is set to Savings, but no Savings account present, refreshing accounts", buf, 2u);
            }

            v16 = *(void **)(a1 + 32);
            v17[0] = MEMORY[0x1E0C809B0];
            v17[1] = 3221225472;
            v17[2] = __60__PKDashboardPaymentPassDataSource_Accounts__reloadAccounts__block_invoke_26;
            v17[3] = &unk_1E3E701B0;
            objc_copyWeak(&v21, (id *)(a1 + 56));
            v20 = *(_QWORD *)(a1 + 48);
            v19 = v9;
            v18 = v8;
            objc_msgSend(v16, "updateAccountsWithCompletion:", v17);

            objc_destroyWeak(&v21);
          }
        }
      }
      else
      {

      }
    }

  }
  else
  {
    v9[2](v9, v8, 1);
  }

}

void __60__PKDashboardPaymentPassDataSource_Accounts__reloadAccounts__block_invoke_26(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  id WeakRetained;
  int v9;
  id v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  PKLogFacilityTypeGetObject();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    v9 = 138412290;
    v10 = v6;
    _os_log_impl(&dword_19D178000, v7, OS_LOG_TYPE_DEFAULT, "Refreshed accounts after missing destination account, with error %@", (uint8_t *)&v9, 0xCu);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (!v6)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = 1;
    PKSetCheckedForSavingsPresence();
  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

void __60__PKDashboardPaymentPassDataSource_Accounts__reloadAccounts__block_invoke_29(uint64_t a1)
{
  id v2;
  uint64_t v3;
  _QWORD block[4];
  id v5;
  uint64_t v6;
  id v7;

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __60__PKDashboardPaymentPassDataSource_Accounts__reloadAccounts__block_invoke_2_30;
  block[3] = &unk_1E3E701D8;
  objc_copyWeak(&v7, (id *)(a1 + 48));
  v2 = *(id *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = v2;
  v6 = v3;
  dispatch_async(MEMORY[0x1E0C80D38], block);

  objc_destroyWeak(&v7);
}

void __60__PKDashboardPaymentPassDataSource_Accounts__reloadAccounts__block_invoke_2_30(uint64_t a1)
{
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v2 = (void *)objc_msgSend(*(id *)(a1 + 32), "copy");
    objc_msgSend(WeakRetained, "_updateAccounts:", v2);

    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24))
      objc_msgSend(WeakRetained, "reloadAccounts");
  }

}

- (void)_updateAccounts:(id)a3
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t i;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  BOOL v20;
  char v21;
  char v22;
  char v23;
  void *v24;
  char v25;
  uint64_t v26;
  void *v27;
  PKDashboardPaymentPassDataSource *v28;
  void *v29;
  id obj;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[128];
  _BYTE v43[128];
  uint64_t v44;

  v44 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v28 = self;
  -[PKDashboardPaymentPassDataSource accounts](self, "accounts");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "count");
  v33 = v4;
  v29 = v5;
  if (v6 == objc_msgSend(v4, "count"))
  {
    v40 = 0u;
    v41 = 0u;
    v38 = 0u;
    v39 = 0u;
    obj = v5;
    v32 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v38, v43, 16);
    if (v32)
    {
      v31 = *(_QWORD *)v39;
      while (2)
      {
        for (i = 0; i != v32; ++i)
        {
          if (*(_QWORD *)v39 != v31)
            objc_enumerationMutation(obj);
          v8 = *(void **)(*((_QWORD *)&v38 + 1) + 8 * i);
          v34 = 0u;
          v35 = 0u;
          v36 = 0u;
          v37 = 0u;
          v9 = v33;
          v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v34, v42, 16);
          if (v10)
          {
            v11 = v10;
            v12 = *(_QWORD *)v35;
LABEL_9:
            v13 = 0;
            while (1)
            {
              if (*(_QWORD *)v35 != v12)
                objc_enumerationMutation(v9);
              v14 = *(void **)(*((_QWORD *)&v34 + 1) + 8 * v13);
              objc_msgSend(v14, "accountIdentifier");
              v15 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v8, "accountIdentifier");
              v16 = (void *)objc_claimAutoreleasedReturnValue();
              v17 = v15;
              v18 = v16;
              if (v17 == v18)
                break;
              v19 = v18;
              if (v17)
                v20 = v18 == 0;
              else
                v20 = 1;
              if (v20)
              {

              }
              else
              {
                v21 = objc_msgSend(v17, "isEqualToString:", v18);

                if ((v21 & 1) != 0)
                  goto LABEL_24;
              }
              if (v11 == ++v13)
              {
                v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v34, v42, 16);
                if (v11)
                  goto LABEL_9;
                goto LABEL_22;
              }
            }

LABEL_24:
            v22 = objc_msgSend(v14, "isContentEqualToAccount:", v8);

            if ((v22 & 1) != 0)
              continue;
            v23 = 1;
            goto LABEL_30;
          }
LABEL_22:

        }
        v32 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v38, v43, 16);
        if (v32)
          continue;
        break;
      }
    }
    v23 = 0;
LABEL_30:

  }
  else
  {
    v23 = 1;
  }
  -[PKDashboardPaymentPassDataSource setAccountsLoaded:](v28, "setAccountsLoaded:", 1);
  -[PKDashboardPaymentPassDataSource setAccounts:](v28, "setAccounts:", v33);
  if (-[PKDashboardPaymentPassDataSource allContentIsLoaded](v28, "allContentIsLoaded"))
  {
    -[PKDashboardPaymentPassDataSource delegate](v28, "delegate");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    v25 = v23 ^ 1;
    if (!v24)
      v25 = 1;
    if ((v25 & 1) == 0)
    {
      v26 = -[PKDashboardPaymentPassDataSource firstSectionIndexForSectionIdentifier:](v28, "firstSectionIndexForSectionIdentifier:", 5);
      v27 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3788]), "initWithIndex:", v26);
      objc_msgSend(v27, "addIndex:", -[PKDashboardPaymentPassDataSource numberOfSections](v28, "numberOfSections") - 1);
      objc_msgSend(v24, "reloadSections:", v27);

    }
  }
  else
  {
    -[PKDashboardPaymentPassDataSource updateContentIsLoaded](v28, "updateContentIsLoaded");
  }

}

- (id)accountItemAtIndex:(unint64_t)a3
{
  PKDashboardAccountItem *v5;
  void *v6;
  void *v7;
  void *v8;
  PKDashboardAccountItem *v9;

  v5 = [PKDashboardAccountItem alloc];
  -[PKDashboardPaymentPassDataSource accounts](self, "accounts");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "objectAtIndex:", a3);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPaymentPassDataSource pass](self, "pass");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = -[PKDashboardAccountItem initWithAccount:presentingPass:](v5, "initWithAccount:presentingPass:", v7, v8);

  return v9;
}

- (id)messagesForSavingsAccountStatus
{
  id v3;
  void *v4;
  uint64_t v5;
  PKDashboardPassMessage *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  double v11;
  void *v12;
  PKDashboardPassMessage *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  double v18;
  void *v19;
  _QWORD v21[4];
  id v22;
  _QWORD v23[4];
  id v24;
  id location;

  v3 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  -[PKDashboardPaymentPassDataSource account](self, "account");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "type");

  if (v5 == 1)
  {
    if (PKSavingsHasDismissedClosedAccountMessage() == 2)
    {
      v6 = objc_alloc_init(PKDashboardPassMessage);
      -[PKDashboardPassMessage setIdentifier:](v6, "setIdentifier:", CFSTR("savingsAccountClosed"));
      PKLocalizedFeatureString();
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setTitle:](v6, "setTitle:", v7);

      PKLocalizedFeatureString();
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setMessage:](v6, "setMessage:", v8);

      PKPassKitUIBundle();
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "URLForResource:withExtension:", CFSTR("Category_Statement"), CFSTR("pdf"));
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = PKUIScreenScale();
      PKUIImageFromPDF(v10, 45.0, 45.0, v11);
      v12 = (void *)objc_claimAutoreleasedReturnValue();

      -[PKDashboardPassMessage setImage:](v6, "setImage:", v12);
      objc_initWeak(&location, self);
      v23[0] = MEMORY[0x1E0C809B0];
      v23[1] = 3221225472;
      v23[2] = __77__PKDashboardPaymentPassDataSource_Accounts__messagesForSavingsAccountStatus__block_invoke;
      v23[3] = &unk_1E3E61310;
      objc_copyWeak(&v24, &location);
      -[PKDashboardPassMessage setActionOnDismiss:](v6, "setActionOnDismiss:", v23);
      objc_msgSend(v3, "addObject:", v6);
      objc_destroyWeak(&v24);
      objc_destroyWeak(&location);

    }
    if (PKSavingsHasDismissedPendingApplicationMessage() == 2)
    {
      v13 = objc_alloc_init(PKDashboardPassMessage);
      -[PKDashboardPassMessage setIdentifier:](v13, "setIdentifier:", CFSTR("savingsApplicationPending"));
      PKLocalizedFeatureString();
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setTitle:](v13, "setTitle:", v14);

      PKLocalizedFeatureString();
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setMessage:](v13, "setMessage:", v15);

      PKPassKitUIBundle();
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "URLForResource:withExtension:", CFSTR("SAVINGS_Icon"), CFSTR("pdf"));
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = PKUIScreenScale();
      PKUIImageFromPDF(v17, 45.0, 45.0, v18);
      v19 = (void *)objc_claimAutoreleasedReturnValue();

      -[PKDashboardPassMessage setImage:](v13, "setImage:", v19);
      objc_initWeak(&location, self);
      v21[0] = MEMORY[0x1E0C809B0];
      v21[1] = 3221225472;
      v21[2] = __77__PKDashboardPaymentPassDataSource_Accounts__messagesForSavingsAccountStatus__block_invoke_2;
      v21[3] = &unk_1E3E61310;
      objc_copyWeak(&v22, &location);
      -[PKDashboardPassMessage setActionOnDismiss:](v13, "setActionOnDismiss:", v21);
      objc_msgSend(v3, "addObject:", v13);
      objc_destroyWeak(&v22);
      objc_destroyWeak(&location);

    }
  }
  return v3;
}

void __77__PKDashboardPaymentPassDataSource_Accounts__messagesForSavingsAccountStatus__block_invoke(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    PKSavingsSetHasDismissedClosedAccountMessage();
    objc_msgSend(WeakRetained, "reloadMessages");
  }

}

void __77__PKDashboardPaymentPassDataSource_Accounts__messagesForSavingsAccountStatus__block_invoke_2(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    PKSavingsSetHasDismissedPendingApplicationMessage();
    objc_msgSend(WeakRetained, "reloadMessages");
  }

}

- (void)messageForSavingsRewardsRedemptionWithCompletion:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  _QWORD v10[5];
  id v11;

  v4 = a3;
  -[PKDashboardPaymentPassDataSource account](self, "account");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "creditDetails");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "rewardsDestination");

  if (objc_msgSend(v5, "type") == 1 && v7 == 3 && !PKSavingsHasDismissedFixRewardsMessage())
  {
    objc_msgSend(MEMORY[0x1E0D668E8], "sharedInstance");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "accountIdentifier");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10[0] = MEMORY[0x1E0C809B0];
    v10[1] = 3221225472;
    v10[2] = __95__PKDashboardPaymentPassDataSource_Accounts__messageForSavingsRewardsRedemptionWithCompletion___block_invoke;
    v10[3] = &unk_1E3E70228;
    v10[4] = self;
    v11 = v4;
    objc_msgSend(v8, "lastRedemptionEventToDestination:forAccountIdentifier:altDSID:completion:", 3, v9, 0, v10);

  }
  else if (v4)
  {
    (*((void (**)(id, _QWORD))v4 + 2))(v4, 0);
  }

}

void __95__PKDashboardPaymentPassDataSource_Accounts__messageForSavingsRewardsRedemptionWithCompletion___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  __CFString *v9;
  __CFString *v10;
  int v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  PKDashboardPassMessage *v17;
  void *v18;
  void *v19;
  double v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  _QWORD v27[4];
  id v28;
  id v29;
  _QWORD v30[4];
  id v31;
  id location;

  v5 = a2;
  v6 = a3;
  objc_msgSend(v5, "items");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "anyObject");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v8
    || (objc_opt_class(), (objc_opt_isKindOfClass() & 1) == 0)
    || (objc_msgSend(v8, "status"),
        v9 = (__CFString *)(id)objc_claimAutoreleasedReturnValue(),
        v9 == CFSTR("success"))
    || (v10 = v9) != 0
    && (v11 = -[__CFString isEqualToString:](v9, "isEqualToString:", CFSTR("success")),
        v10,
        v10,
        v11))
  {
    v12 = *(_QWORD *)(a1 + 40);
    if (v12)
      (*(void (**)(uint64_t, _QWORD))(v12 + 16))(v12, 0);
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "_fetchOpenSavingsAccount");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "feature");
    if (objc_msgSend(v13, "state") == 2 || objc_msgSend(v13, "state") == 3)
    {
      PKLocalizedFeatureString();
      v14 = objc_claimAutoreleasedReturnValue();
      PKLocalizedFeatureString();
      v15 = objc_claimAutoreleasedReturnValue();
      PKLocalizedFeatureString();
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v17 = objc_alloc_init(PKDashboardPassMessage);
      v26 = (void *)v14;
      -[PKDashboardPassMessage setTitle:](v17, "setTitle:", v14);
      v25 = (void *)v15;
      -[PKDashboardPassMessage setMessage:](v17, "setMessage:", v15);
      -[PKDashboardPassMessage setButtonTitle:](v17, "setButtonTitle:", v16);
      -[PKDashboardPassMessage setIdentifier:](v17, "setIdentifier:", CFSTR("savingsFixRewards"));
      PKPassKitUIBundle();
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "URLForResource:withExtension:", CFSTR("CashBackIcon"), CFSTR("pdf"));
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      v20 = PKUIScreenScale();
      PKUIImageFromPDF(v19, 45.0, 45.0, v20);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setImage:](v17, "setImage:", v21);

      -[PKDashboardPassMessage setShowDisclosure:](v17, "setShowDisclosure:", 1);
      objc_initWeak(&location, *(id *)(a1 + 32));
      v22 = MEMORY[0x1E0C809B0];
      v30[0] = MEMORY[0x1E0C809B0];
      v30[1] = 3221225472;
      v30[2] = __95__PKDashboardPaymentPassDataSource_Accounts__messageForSavingsRewardsRedemptionWithCompletion___block_invoke_2;
      v30[3] = &unk_1E3E61310;
      objc_copyWeak(&v31, &location);
      -[PKDashboardPassMessage setActionOnDismiss:](v17, "setActionOnDismiss:", v30);
      v27[0] = v22;
      v27[1] = 3221225472;
      v27[2] = __95__PKDashboardPaymentPassDataSource_Accounts__messageForSavingsRewardsRedemptionWithCompletion___block_invoke_3;
      v27[3] = &unk_1E3E61B68;
      objc_copyWeak(&v29, &location);
      v28 = v13;
      -[PKDashboardPassMessage setActionOnButtonPress:](v17, "setActionOnButtonPress:", v27);
      v23 = *(_QWORD *)(a1 + 40);
      if (v23)
        (*(void (**)(uint64_t, PKDashboardPassMessage *))(v23 + 16))(v23, v17);

      objc_destroyWeak(&v29);
      objc_destroyWeak(&v31);
      objc_destroyWeak(&location);

    }
    else
    {
      v24 = *(_QWORD *)(a1 + 40);
      if (v24)
        (*(void (**)(uint64_t, _QWORD))(v24 + 16))(v24, 0);
    }

  }
}

void __95__PKDashboardPaymentPassDataSource_Accounts__messageForSavingsRewardsRedemptionWithCompletion___block_invoke_2(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    PKSavingsSetHasDismissedFixRewardsMessage();
    objc_msgSend(WeakRetained, "reloadMessages");
  }

}

void __95__PKDashboardPaymentPassDataSource_Accounts__messageForSavingsRewardsRedemptionWithCompletion___block_invoke_3(uint64_t a1)
{
  void *v2;
  PKBusinessChatController *v3;
  PKBusinessChatAccountContext *v4;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D66908]), "initWithOtherTopicForAccount:", *(_QWORD *)(a1 + 32));
    v3 = objc_alloc_init(PKBusinessChatController);
    v4 = -[PKBusinessChatAccountContext initWithAccount:topic:]([PKBusinessChatAccountContext alloc], "initWithAccount:topic:", *(_QWORD *)(a1 + 32), v2);
    -[PKBusinessChatController openBusinessChatWithContext:completion:](v3, "openBusinessChatWithContext:completion:", v4, 0);
    PKSavingsSetHasDismissedFixRewardsMessage();
    objc_msgSend(WeakRetained, "reloadMessages");

  }
}

- (id)messageForSavingsAccountFDIC
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t HasDismissedFDICMessage;
  PKDashboardPassMessage *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  double v14;
  void *v15;
  _QWORD v17[4];
  id v18;
  id v19;
  id location;

  -[PKDashboardPaymentPassDataSource _fetchOpenSavingsAccount](self, "_fetchOpenSavingsAccount");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "accountIdentifier");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPaymentPassDataSource account](self, "account");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "type");
  if (!v3 || v6 != 1)
  {

    goto LABEL_6;
  }
  HasDismissedFDICMessage = PKSavingsHasDismissedFDICMessage();

  if (HasDismissedFDICMessage == 1)
  {
LABEL_6:
    v8 = 0;
    goto LABEL_7;
  }
  v8 = objc_alloc_init(PKDashboardPassMessage);
  -[PKDashboardPassMessage setIdentifier:](v8, "setIdentifier:", CFSTR("savingsFDIC"));
  PKLocalizedFeatureString();
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPassMessage setTitle:](v8, "setTitle:", v9);

  PKLocalizedFeatureString();
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPassMessage setMessage:](v8, "setMessage:", v10);

  PKLocalizedFeatureString();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPassMessage setButtonTitle:](v8, "setButtonTitle:", v11);

  PKPassKitUIBundle();
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "URLForResource:withExtension:", CFSTR("SAVINGS_Icon"), CFSTR("pdf"));
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = PKUIScreenScale();
  PKUIImageFromPDF(v13, 45.0, 45.0, v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPassMessage setImage:](v8, "setImage:", v15);

  objc_initWeak(&location, self);
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 3221225472;
  v17[2] = __74__PKDashboardPaymentPassDataSource_Accounts__messageForSavingsAccountFDIC__block_invoke;
  v17[3] = &unk_1E3E61B68;
  objc_copyWeak(&v19, &location);
  v18 = v4;
  -[PKDashboardPassMessage setActionOnDismiss:](v8, "setActionOnDismiss:", v17);
  -[PKDashboardPassMessage setActionOnButtonPress:](v8, "setActionOnButtonPress:", &__block_literal_global_131);

  objc_destroyWeak(&v19);
  objc_destroyWeak(&location);
LABEL_7:

  return v8;
}

void __74__PKDashboardPaymentPassDataSource_Accounts__messageForSavingsAccountFDIC__block_invoke(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    PKSavingsSetHasDismissedFDICMessage();
    objc_msgSend(WeakRetained, "reloadMessages");
  }

}

void __74__PKDashboardPaymentPassDataSource_Accounts__messageForSavingsAccountFDIC__block_invoke_2()
{
  void *v0;
  id v1;

  objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", CFSTR("https://support.apple.com/ht213451?cid=mc-ols-applecard-article_ht213451-wallet_ui-09142022"));
  v1 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "openSensitiveURL:withOptions:", v1, 0);

}

- (id)_fetchOpenSavingsAccount
{
  void *v2;
  id v3;
  uint64_t v4;
  void *i;
  void *v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  -[PKDashboardPaymentPassDataSource accounts](self, "accounts", 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = (id)objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; i = (char *)i + 1)
      {
        if (*(_QWORD *)v9 != v4)
          objc_enumerationMutation(v2);
        v6 = *(void **)(*((_QWORD *)&v8 + 1) + 8 * (_QWORD)i);
        if (objc_msgSend(v6, "type") == 4 && (unint64_t)(objc_msgSend(v6, "state") - 1) < 3)
        {
          v3 = v6;
          goto LABEL_12;
        }
      }
      v3 = (id)objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_12:

  return v3;
}

- (BOOL)_accountCanBePresented:(id)a3
{
  return (unint64_t)(objc_msgSend(a3, "state") - 1) < 3;
}

- (unint64_t)numberOfUpcomingRecurringPeerPayments
{
  void *v3;
  unint64_t v4;

  if (!-[PKDashboardPaymentPassDataSource canShowPeerPaymentRecurringPayments](self, "canShowPeerPaymentRecurringPayments"))return 0;
  -[PKDashboardPaymentPassDataSource upcomingRecurringPeerPayments](self, "upcomingRecurringPeerPayments");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "count");

  return v4;
}

- (id)upcomingRecurringPeerPaymentItemAtIndex:(unint64_t)a3
{
  void *v5;
  unint64_t v6;
  void *v7;
  void *v8;
  void *v9;

  -[PKDashboardPaymentPassDataSource upcomingRecurringPeerPayments](self, "upcomingRecurringPeerPayments");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "count");

  if (v6 <= a3)
  {
    v9 = 0;
  }
  else
  {
    -[PKDashboardPaymentPassDataSource upcomingRecurringPeerPayments](self, "upcomingRecurringPeerPayments");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "objectAtIndex:", a3);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPaymentPassDataSource paymentTransactionItemForPayment:](self, "paymentTransactionItemForPayment:", v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();

  }
  return v9;
}

- (id)paymentTransactionItemForPayment:(id)a3
{
  void *v4;
  void *v5;

  PKPeerPaymentTransactionForUpcomingRecurringPayment();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPaymentPassDataSource paymentTransactionItemForTransaction:](self, "paymentTransactionItemForTransaction:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

- (void)_updateCanShowPeerPaymentRecurringPayments:(BOOL)a3
{
  _BOOL4 v3;
  void *v5;
  uint64_t v6;
  void *v7;
  BOOL v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  void *v12;
  id v13;

  v3 = a3;
  -[PKDashboardPaymentPassDataSource peerPaymentAccount](self, "peerPaymentAccount");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "state");

  if (-[PKDashboardPaymentPassDataSource _isPeerPaymentPass](self, "_isPeerPaymentPass"))
  {
    -[PKDashboardPaymentPassDataSource pass](self, "pass");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v7, "activationState"))
      v8 = 1;
    else
      v8 = (unint64_t)(v6 - 1) >= 2;
    v9 = !v8;

  }
  else
  {
    v9 = 0;
  }
  if (-[PKDashboardPaymentPassDataSource allContentIsLoaded](self, "allContentIsLoaded"))
  {
    v10 = -[PKDashboardPaymentPassDataSource canShowPeerPaymentRecurringPayments](self, "canShowPeerPaymentRecurringPayments");
    -[PKDashboardPaymentPassDataSource setCanShowPeerPaymentRecurringPayments:](self, "setCanShowPeerPaymentRecurringPayments:", v9);
    if (v3 && v9 != v10)
    {
      v11 = -[PKDashboardPaymentPassDataSource firstSectionIndexForSectionIdentifier:](self, "firstSectionIndexForSectionIdentifier:", 11);
      v13 = (id)objc_msgSend(objc_alloc(MEMORY[0x1E0CB36B8]), "initWithIndex:", v11);
      -[PKDashboardPaymentPassDataSource delegate](self, "delegate");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "reloadSections:", v13);

    }
  }
  else
  {
    -[PKDashboardPaymentPassDataSource setCanShowPeerPaymentRecurringPayments:](self, "setCanShowPeerPaymentRecurringPayments:", v9);
  }
}

- (void)reloadRecurringPeerPaymentsWithCompletion:(id)a3
{
  void (**v4)(_QWORD);
  void *v5;
  _QWORD v6[5];
  void (**v7)(_QWORD);
  id v8;
  id location;

  v4 = (void (**)(_QWORD))a3;
  -[PKDashboardPaymentPassDataSource _updateCanShowPeerPaymentRecurringPayments:](self, "_updateCanShowPeerPaymentRecurringPayments:", 1);
  if (-[PKDashboardPaymentPassDataSource canShowPeerPaymentRecurringPayments](self, "canShowPeerPaymentRecurringPayments"))
  {
    objc_initWeak(&location, self);
    objc_msgSend(MEMORY[0x1E0D67470], "sharedInstance");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6[0] = MEMORY[0x1E0C809B0];
    v6[1] = 3221225472;
    v6[2] = __100__PKDashboardPaymentPassDataSource_RecurringPeerPayment__reloadRecurringPeerPaymentsWithCompletion___block_invoke;
    v6[3] = &unk_1E3E6BB20;
    objc_copyWeak(&v8, &location);
    v6[4] = self;
    v7 = v4;
    objc_msgSend(v5, "recurringPaymentsWithCompletion:", v6);

    objc_destroyWeak(&v8);
    objc_destroyWeak(&location);
  }
  else
  {
    -[PKDashboardPaymentPassDataSource setRecurringPeerPaymentsLoaded:](self, "setRecurringPeerPaymentsLoaded:", 1);
    -[PKDashboardPaymentPassDataSource updateContentIsLoaded](self, "updateContentIsLoaded");
    if (v4)
      v4[2](v4);
  }

}

void __100__PKDashboardPaymentPassDataSource_RecurringPeerPayment__reloadRecurringPeerPaymentsWithCompletion___block_invoke(uint64_t a1, void *a2)
{
  id WeakRetained;
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  id *from;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  void *v33;
  _QWORD v34[4];
  id v35;
  id v36;
  uint64_t v37;
  id v38;
  _QWORD *v39;
  id v40;
  _QWORD v41[5];
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  _QWORD *v47;
  _QWORD *v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  _QWORD v53[5];
  id v54;
  _QWORD v55[5];
  id v56;
  _BYTE v57[128];
  uint64_t v58;

  v58 = *MEMORY[0x1E0C80C00];
  v29 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v25 = a1;
    from = (id *)(a1 + 48);
    v31 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
    v32 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
    v55[0] = 0;
    v55[1] = v55;
    v55[2] = 0x3032000000;
    v55[3] = __Block_byref_object_copy__39;
    v55[4] = __Block_byref_object_dispose__39;
    v56 = 0;
    v27 = WeakRetained;
    objc_msgSend(WeakRetained, "peerPaymentAccount");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "recurringPaymentsFeatureDescriptor");
    v28 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v28, "productTimeZone");
    v5 = objc_claimAutoreleasedReturnValue();
    v24 = (void *)v5;
    if (v5)
    {
      v6 = objc_alloc(MEMORY[0x1E0C99D48]);
      v7 = (void *)objc_msgSend(v6, "initWithCalendarIdentifier:", *MEMORY[0x1E0C996C8], v5);
      objc_msgSend(v7, "setTimeZone:", v5);
      objc_msgSend(MEMORY[0x1E0C99D68], "date");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "components:fromDate:", 30, v8);
      v9 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v7, "dateFromComponents:", v9);
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = objc_alloc_init(MEMORY[0x1E0C99D78]);
      objc_msgSend(v10, "setDay:", 3);
      objc_msgSend(v10, "setSecond:", 1);
      objc_msgSend(v7, "dateByAddingComponents:toDate:options:", v10, v33, 0);
      v30 = (void *)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      v33 = 0;
      v30 = 0;
    }
    v11 = objc_alloc_init(MEMORY[0x1E0D66B90]);
    v53[0] = 0;
    v53[1] = v53;
    v53[2] = 0x3032000000;
    v53[3] = __Block_byref_object_copy__39;
    v53[4] = __Block_byref_object_dispose__39;
    v54 = 0;
    objc_msgSend(v27, "transactionSourceCollection");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v51 = 0u;
    v52 = 0u;
    v49 = 0u;
    v50 = 0u;
    v13 = v29;
    v14 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v49, v57, 16);
    if (v14)
    {
      v15 = *(_QWORD *)v50;
      do
      {
        for (i = 0; i != v14; ++i)
        {
          if (*(_QWORD *)v50 != v15)
            objc_enumerationMutation(v13);
          v17 = *(_QWORD *)(*((_QWORD *)&v49 + 1) + 8 * i);
          v41[0] = MEMORY[0x1E0C809B0];
          v41[1] = 3221225472;
          v41[2] = __100__PKDashboardPaymentPassDataSource_RecurringPeerPayment__reloadRecurringPeerPaymentsWithCompletion___block_invoke_13;
          v41[3] = &unk_1E3E72210;
          v41[4] = v17;
          v42 = v32;
          v43 = v30;
          v44 = v33;
          v47 = v53;
          v45 = v12;
          v46 = v31;
          v48 = v55;
          objc_msgSend(v11, "addOperation:", v41);

        }
        v14 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v49, v57, 16);
      }
      while (v14);
    }

    objc_msgSend(MEMORY[0x1E0C99E38], "null");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v34[0] = MEMORY[0x1E0C809B0];
    v34[1] = 3221225472;
    v34[2] = __100__PKDashboardPaymentPassDataSource_RecurringPeerPayment__reloadRecurringPeerPaymentsWithCompletion___block_invoke_2;
    v34[3] = &unk_1E3E722A0;
    v19 = v31;
    v35 = v19;
    objc_copyWeak(&v40, from);
    v20 = v32;
    v39 = v55;
    v21 = *(_QWORD *)(v25 + 32);
    v22 = *(void **)(v25 + 40);
    v36 = v20;
    v37 = v21;
    v38 = v22;
    v23 = (id)objc_msgSend(v11, "evaluateWithInput:completion:", v18, v34);

    objc_destroyWeak(&v40);
    _Block_object_dispose(v53, 8);

    _Block_object_dispose(v55, 8);
    WeakRetained = v27;
  }

}

void __100__PKDashboardPaymentPassDataSource_RecurringPeerPayment__reloadRecurringPeerPaymentsWithCompletion___block_invoke_13(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  void (**v7)(id, id, _QWORD);
  void *v8;
  void *v9;
  uint64_t v10;
  int v11;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  _QWORD v22[5];
  id v23;
  id v24;
  id v25;
  id v26;
  void (**v27)(id, id, _QWORD);

  v6 = a3;
  v7 = a4;
  objc_msgSend(*(id *)(a1 + 32), "upcomingPaymentDates");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "firstObject");
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  v10 = objc_msgSend(*(id *)(a1 + 32), "type");
  v11 = objc_msgSend(*(id *)(a1 + 32), "sentByMe");
  if (v10 != 1 || v11 == 0)
  {
    if (v10 == 3)
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 40), *(id *)(a1 + 32));
    goto LABEL_13;
  }
  objc_msgSend(*(id *)(a1 + 40), "addObject:", *(_QWORD *)(a1 + 32));
  if (!v9
    || (v13 = *(void **)(a1 + 48)) == 0
    || objc_msgSend(v13, "compare:", v9) == -1
    || (v14 = *(void **)(a1 + 56)) == 0
    || objc_msgSend(v14, "compare:", v9) == 1)
  {
LABEL_13:
    v7[2](v7, v6, 0);
    goto LABEL_14;
  }
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 40))
  {
    v15 = objc_alloc_init(MEMORY[0x1E0D67100]);
    v16 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 8);
    v17 = *(void **)(v16 + 40);
    *(_QWORD *)(v16 + 40) = v15;

  }
  v18 = objc_alloc_init(MEMORY[0x1E0D673A0]);
  objc_msgSend(v18, "setTransactionTypes:", &unk_1E3FAE860);
  objc_msgSend(v18, "setStartDate:", *(_QWORD *)(a1 + 56));
  objc_msgSend(MEMORY[0x1E0C99D68], "date");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "setEndDate:", v19);

  objc_msgSend(*(id *)(a1 + 64), "transactionSourceIdentifiers");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "setTransactionSourceIdentifiers:", v20);

  v21 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 40);
  v22[0] = MEMORY[0x1E0C809B0];
  v22[1] = 3221225472;
  v22[2] = __100__PKDashboardPaymentPassDataSource_RecurringPeerPayment__reloadRecurringPeerPaymentsWithCompletion___block_invoke_17;
  v22[3] = &unk_1E3E721E8;
  v22[4] = *(_QWORD *)(a1 + 32);
  v23 = v9;
  v24 = *(id *)(a1 + 56);
  v25 = *(id *)(a1 + 72);
  v27 = v7;
  v26 = v6;
  objc_msgSend(v21, "transactionsForRequest:completion:", v18, v22);

LABEL_14:
}

void __100__PKDashboardPaymentPassDataSource_RecurringPeerPayment__reloadRecurringPeerPaymentsWithCompletion___block_invoke_17(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  BOOL v13;
  char v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v3 = a2;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v16;
LABEL_3:
    v7 = 0;
    while (1)
    {
      if (*(_QWORD *)v16 != v6)
        objc_enumerationMutation(v3);
      objc_msgSend(*(id *)(*((_QWORD *)&v15 + 1) + 8 * v7), "referenceIdentifier", (_QWORD)v15);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(a1 + 32), "identifier");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = v8;
      v11 = v9;
      if (v10 == v11)
        break;
      v12 = v11;
      if (v10)
        v13 = v11 == 0;
      else
        v13 = 1;
      if (v13)
      {

      }
      else
      {
        v14 = objc_msgSend(v10, "isEqualToString:", v11);

        if ((v14 & 1) != 0)
          goto LABEL_18;
      }
      if (v5 == ++v7)
      {
        v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
        if (v5)
          goto LABEL_3;
        goto LABEL_16;
      }
    }

LABEL_18:
    if ((PKEqualObjects() & 1) != 0)
      goto LABEL_20;
  }
  else
  {
LABEL_16:

  }
  objc_msgSend(*(id *)(a1 + 56), "addObject:", *(_QWORD *)(a1 + 32), (_QWORD)v15);
LABEL_20:
  (*(void (**)(void))(*(_QWORD *)(a1 + 72) + 16))();

}

void __100__PKDashboardPaymentPassDataSource_RecurringPeerPayment__reloadRecurringPeerPaymentsWithCompletion___block_invoke_2(uint64_t a1)
{
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  void *v6;
  _QWORD v7[4];
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;

  objc_msgSend(*(id *)(a1 + 32), "sortUsingComparator:", &__block_literal_global_155);
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = __100__PKDashboardPaymentPassDataSource_RecurringPeerPayment__reloadRecurringPeerPaymentsWithCompletion___block_invoke_4;
  v7[3] = &unk_1E3E72278;
  objc_copyWeak(&v13, (id *)(a1 + 72));
  v2 = *(id *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 64);
  v8 = v2;
  v12 = v3;
  v4 = *(id *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(void **)(a1 + 56);
  v9 = v4;
  v10 = v5;
  v11 = v6;
  dispatch_async(MEMORY[0x1E0C80D38], v7);

  objc_destroyWeak(&v13);
}

uint64_t __100__PKDashboardPaymentPassDataSource_RecurringPeerPayment__reloadRecurringPeerPaymentsWithCompletion___block_invoke_3(uint64_t a1, void *a2, void *a3)
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;

  v4 = a3;
  objc_msgSend(a2, "upcomingPaymentDates");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "firstObject");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "upcomingPaymentDates");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v7, "firstObject");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v6, "compare:", v8);

  return v9;
}

void __100__PKDashboardPaymentPassDataSource_RecurringPeerPayment__reloadRecurringPeerPaymentsWithCompletion___block_invoke_4(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 72));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    v10 = WeakRetained;
    objc_msgSend(WeakRetained, "_updateCanShowPeerPaymentRecurringPayments:", 0);
    objc_msgSend(v10, "setRecurringPeerPaymentsLoaded:", 1);
    v4 = (void *)objc_msgSend(*(id *)(a1 + 32), "copy");
    objc_msgSend(v10, "setRecurringPeerPayments:", v4);

    objc_msgSend(v10, "setPeerPaymentThresholdTopUp:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40));
    v5 = (void *)objc_msgSend(*(id *)(a1 + 40), "copy");
    objc_msgSend(v10, "setUpcomingRecurringPeerPayments:", v5);

    if ((objc_msgSend(v10, "allContentIsLoaded") & 1) != 0)
    {
      objc_msgSend(v10, "delegate");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      if (v6)
      {
        v7 = objc_msgSend(*(id *)(a1 + 48), "firstSectionIndexForSectionIdentifier:", 11);
        v8 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3788]), "initWithIndex:", v7);
        objc_msgSend(v8, "addIndex:", objc_msgSend(*(id *)(a1 + 48), "firstSectionIndexForSectionIdentifier:", 2));
        objc_msgSend(v6, "reloadSections:", v8);

      }
    }
    else
    {
      objc_msgSend(v10, "updateContentIsLoaded");
    }
    v3 = v10;
    v9 = *(_QWORD *)(a1 + 56);
    if (v9)
    {
      (*(void (**)(uint64_t, void *))(v9 + 16))(v9, v10);
      v3 = v10;
    }
  }

}

- (id)recurringPaymentDashboardMessages
{
  uint64_t i;
  void *v4;
  void *v5;
  void *v6;
  PKDashboardPassMessage *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  double v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  char *v23;
  PKDashboardPassMessage *v24;
  void *v25;
  void *v26;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  double v33;
  void *v34;
  void *v35;
  void *v36;
  id v37;
  PKDashboardPaymentPassDataSource *val;
  id obj;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[4];
  id v43;
  id v44;
  id v45[2];
  _QWORD v46[4];
  id v47;
  id v48;
  _QWORD v49[5];
  id v50;
  _QWORD v51[5];
  id v52;
  id location;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  _BYTE v58[128];
  uint64_t v59;

  v59 = *MEMORY[0x1E0C80C00];
  if (!-[PKDashboardPaymentPassDataSource canShowPeerPaymentRecurringPayments](self, "canShowPeerPaymentRecurringPayments"))return 0;
  v37 = objc_alloc_init(MEMORY[0x1E0C99E10]);
  v54 = 0u;
  v55 = 0u;
  v56 = 0u;
  v57 = 0u;
  val = self;
  -[PKDashboardPaymentPassDataSource recurringPeerPayments](self, "recurringPeerPayments");
  obj = (id)objc_claimAutoreleasedReturnValue();
  v41 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v54, v58, 16);
  if (v41)
  {
    v40 = *(_QWORD *)v55;
    do
    {
      for (i = 0; i != v41; ++i)
      {
        if (*(_QWORD *)v55 != v40)
          objc_enumerationMutation(obj);
        v4 = *(void **)(*((_QWORD *)&v54 + 1) + 8 * i);
        objc_msgSend(v4, "lastExecutedTransaction");
        v5 = (void *)objc_claimAutoreleasedReturnValue();
        if ((objc_msgSend(v4, "status") == 3 || objc_msgSend(v4, "status") == 4)
          && objc_msgSend(v5, "status") == 3
          && (objc_msgSend(v4, "lastExecutedTransactionAppearsInHistory") & 1) == 0)
        {
          -[PKDashboardPaymentPassDataSource _messageIdentifierForRecurringPayment:](val, "_messageIdentifierForRecurringPayment:", v4);
          v6 = (void *)objc_claimAutoreleasedReturnValue();
          if ((PKPeerPaymentRecurringPaymentHasDismissedMessageForMessageIdentifier() & 1) == 0)
          {
            v7 = objc_alloc_init(PKDashboardPassMessage);
            -[PKDashboardPassMessage setType:](v7, "setType:", 0);
            -[PKDashboardPassMessage setIdentifier:](v7, "setIdentifier:", v6);
            PKLocalizedPeerPaymentRecurringString(CFSTR("PAYMENT_ERROR_PROBLEM_WITH_PAYMENT_TITLE"));
            v8 = (void *)objc_claimAutoreleasedReturnValue();
            -[PKDashboardPassMessage setTitle:](v7, "setTitle:", v8);

            objc_msgSend(v5, "executionDate");
            v9 = (void *)objc_claimAutoreleasedReturnValue();
            -[PKDashboardPaymentPassDataSource _formattedDateStringForDate:](val, "_formattedDateStringForDate:", v9);
            v10 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v4, "recipientAddress");
            v11 = (void *)objc_claimAutoreleasedReturnValue();
            -[PKDashboardPaymentPassDataSource _recipientNameForAddress:](val, "_recipientNameForAddress:", v11);
            v12 = (void *)objc_claimAutoreleasedReturnValue();
            PKLocalizedPeerPaymentRecurringString(CFSTR("PAYMENT_ERROR_DASHBOARD_MESSAGE"), CFSTR("%@%@"), v10, v12);
            v13 = (void *)objc_claimAutoreleasedReturnValue();
            -[PKDashboardPassMessage setMessage:](v7, "setMessage:", v13);

            PKLocalizedPeerPaymentRecurringString(CFSTR("PAYMENT_ERROR_ACTION"));
            v14 = (void *)objc_claimAutoreleasedReturnValue();
            -[PKDashboardPassMessage setButtonTitle:](v7, "setButtonTitle:", v14);

            PKPassKitUIBundle();
            v15 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v15, "URLForResource:withExtension:", CFSTR("MessageAlert"), CFSTR("pdf"));
            v16 = (void *)objc_claimAutoreleasedReturnValue();
            v17 = PKUIScreenScale();
            PKUIImageFromPDF(v16, 45.0, 45.0, v17);
            v18 = (void *)objc_claimAutoreleasedReturnValue();
            -[PKDashboardPassMessage setImage:](v7, "setImage:", v18);
            objc_initWeak(&location, val);
            v51[0] = MEMORY[0x1E0C809B0];
            v51[1] = 3221225472;
            v51[2] = __91__PKDashboardPaymentPassDataSource_RecurringPeerPayment__recurringPaymentDashboardMessages__block_invoke;
            v51[3] = &unk_1E3E61B68;
            objc_copyWeak(&v52, &location);
            v51[4] = v4;
            -[PKDashboardPassMessage setActionOnButtonPress:](v7, "setActionOnButtonPress:", v51);
            v49[0] = MEMORY[0x1E0C809B0];
            v49[1] = 3221225472;
            v49[2] = __91__PKDashboardPaymentPassDataSource_RecurringPeerPayment__recurringPaymentDashboardMessages__block_invoke_2;
            v49[3] = &unk_1E3E61B68;
            objc_copyWeak(&v50, &location);
            v49[4] = v4;
            -[PKDashboardPassMessage setActionOnDismiss:](v7, "setActionOnDismiss:", v49);
            objc_msgSend(v37, "addObject:", v7);
            objc_destroyWeak(&v50);
            objc_destroyWeak(&v52);
            objc_destroyWeak(&location);

          }
        }

      }
      v41 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v54, v58, 16);
    }
    while (v41);
  }

  -[PKDashboardPaymentPassDataSource peerPaymentThresholdTopUp](val, "peerPaymentThresholdTopUp");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = v19;
  if (v19)
  {
    objc_msgSend(v19, "lastExecutedTransaction");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPaymentPassDataSource _messageIdentifierForRecurringPayment:](val, "_messageIdentifierForRecurringPayment:", v20);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    v23 = (char *)objc_msgSend(v20, "status");
    if (objc_msgSend(v21, "status") == 3
      && (unint64_t)(v23 - 3) <= 1
      && (PKPeerPaymentRecurringPaymentHasDismissedMessageForMessageIdentifier() & 1) == 0)
    {
      v24 = objc_alloc_init(PKDashboardPassMessage);
      -[PKDashboardPassMessage setType:](v24, "setType:", 0);
      -[PKDashboardPassMessage setIdentifier:](v24, "setIdentifier:", v22);
      objc_initWeak(&location, val);
      if (v23 == (char *)4)
      {
        PKLocalizedPeerPaymentRecurringString(CFSTR("AUTO_RELOAD_ERROR_PROBLEM_TITLE_PAUSED"));
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        -[PKDashboardPassMessage setTitle:](v24, "setTitle:", v25);

        PKLocalizedPeerPaymentRecurringString(CFSTR("AUTO_RELOAD_ERROR_PROBLEM_MESSAGE_PAUSED"));
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        -[PKDashboardPassMessage setMessage:](v24, "setMessage:", v26);

      }
      else
      {
        v28 = objc_msgSend(v21, "errorCode");
        -[PKDashboardPaymentPassDataSource _titleForErrorCode:](val, "_titleForErrorCode:", v28);
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        -[PKDashboardPassMessage setTitle:](v24, "setTitle:", v29);

        -[PKDashboardPaymentPassDataSource _messageForErrorCode:](val, "_messageForErrorCode:", v28);
        v30 = (void *)objc_claimAutoreleasedReturnValue();
        -[PKDashboardPassMessage setMessage:](v24, "setMessage:", v30);

        v46[0] = MEMORY[0x1E0C809B0];
        v46[1] = 3221225472;
        v46[2] = __91__PKDashboardPaymentPassDataSource_RecurringPeerPayment__recurringPaymentDashboardMessages__block_invoke_3;
        v46[3] = &unk_1E3E61B68;
        objc_copyWeak(&v48, &location);
        v47 = v20;
        -[PKDashboardPassMessage setActionOnDismiss:](v24, "setActionOnDismiss:", v46);

        objc_destroyWeak(&v48);
      }
      PKPassKitUIBundle();
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v31, "URLForResource:withExtension:", CFSTR("MessageAlert"), CFSTR("pdf"));
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      v33 = PKUIScreenScale();
      PKUIImageFromPDF(v32, 45.0, 45.0, v33);
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setImage:](v24, "setImage:", v34);
      if (objc_msgSend(v21, "exceedsAppleCashLimits"))
        PKLocalizedPeerPaymentRecurringString(CFSTR("PAYMENT_ERROR_LEARN_MORE"));
      else
        PKLocalizedPeerPaymentRecurringString(CFSTR("AUTO_RELOAD_ERROR_ACTION"));
      v35 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setButtonTitle:](v24, "setButtonTitle:", v35);

      v42[0] = MEMORY[0x1E0C809B0];
      v42[1] = 3221225472;
      v42[2] = __91__PKDashboardPaymentPassDataSource_RecurringPeerPayment__recurringPaymentDashboardMessages__block_invoke_4;
      v42[3] = &unk_1E3E65C70;
      objc_copyWeak(v45, &location);
      v43 = v21;
      v45[1] = v23;
      v44 = v20;
      -[PKDashboardPassMessage setActionOnButtonPress:](v24, "setActionOnButtonPress:", v42);
      objc_msgSend(v37, "addObject:", v24);

      objc_destroyWeak(v45);
      objc_destroyWeak(&location);

    }
  }
  v36 = (void *)objc_msgSend(v37, "copy");

  return v36;
}

void __91__PKDashboardPaymentPassDataSource_RecurringPeerPayment__recurringPaymentDashboardMessages__block_invoke(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained, "_presentDetailsForRecurringPayment:", *(_QWORD *)(a1 + 32));
    objc_msgSend(v3, "_dismissMessageForRecurringPayment:", *(_QWORD *)(a1 + 32));
    WeakRetained = v3;
  }

}

void __91__PKDashboardPaymentPassDataSource_RecurringPeerPayment__recurringPaymentDashboardMessages__block_invoke_2(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained, "_dismissMessageForRecurringPayment:", *(_QWORD *)(a1 + 32));
    WeakRetained = v3;
  }

}

void __91__PKDashboardPaymentPassDataSource_RecurringPeerPayment__recurringPaymentDashboardMessages__block_invoke_3(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained, "_dismissMessageForRecurringPayment:", *(_QWORD *)(a1 + 32));
    WeakRetained = v3;
  }

}

void __91__PKDashboardPaymentPassDataSource_RecurringPeerPayment__recurringPaymentDashboardMessages__block_invoke_4(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v8 = WeakRetained;
    objc_msgSend(WeakRetained, "groupView");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "pkui_viewControllerFromResponderChain");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "navigationController");
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    if (objc_msgSend(*(id *)(a1 + 32), "exceedsAppleCashLimits"))
    {
      objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", CFSTR("https://support.apple.com/en-us/HT207884"));
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "openURL:configuration:completionHandler:", v7, 0, 0);

    }
    else
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
        objc_msgSend(v5, "presentPassDetailsAnimated:action:", 1, 9);
    }
    if (*(_QWORD *)(a1 + 56) != 4)
      objc_msgSend(v8, "_dismissMessageForRecurringPayment:", *(_QWORD *)(a1 + 40));

    WeakRetained = v8;
  }

}

- (id)_titleForErrorCode:(unint64_t)a3
{
  return (id)PKLocalizedPeerPaymentRecurringString(CFSTR("AUTO_RELOAD_ERROR_PROBLEM_TITLE"));
}

- (id)_messageForErrorCode:(unint64_t)a3
{
  const __CFString *v3;
  __CFString *v4;

  v3 = CFSTR("AUTO_RELOAD_ERROR_PROBLEM_MESSAGE_CUMULATIVE_LIMIT");
  if (a3 - 40305 > 1)
    v3 = CFSTR("AUTO_RELOAD_ERROR_PROBLEM_MESSAGE_PAYMENT_METHOD");
  if (a3 - 40340 >= 4)
    v4 = (__CFString *)v3;
  else
    v4 = CFSTR("AUTO_RELOAD_ERROR_PROBLEM_MESSAGE_FRAUD");
  PKLocalizedPeerPaymentRecurringString(&v4->isa);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (id)_messageIdentifierForRecurringPayment:(id)a3
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;

  v3 = a3;
  objc_msgSend(v3, "lastExecutedTransaction");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    v5 = (void *)MEMORY[0x1E0CB3940];
    objc_msgSend(v3, "identifier");
    v6 = objc_claimAutoreleasedReturnValue();

    objc_msgSend(v4, "identifier");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "stringWithFormat:", CFSTR("%@-%@"), v6, v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    v3 = (id)v6;
  }
  else
  {
    objc_msgSend(v3, "identifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v8;
}

- (id)_formattedDateStringForDate:(id)a3
{
  uint64_t v3;
  id v4;
  void *v5;

  v3 = qword_1ED06C7A0;
  v4 = a3;
  if (v3 != -1)
    dispatch_once(&qword_1ED06C7A0, &__block_literal_global_63);
  objc_msgSend((id)_MergedGlobals_682, "stringFromDate:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

uint64_t __86__PKDashboardPaymentPassDataSource_RecurringPeerPayment___formattedDateStringForDate___block_invoke()
{
  id v0;
  void *v1;

  v0 = objc_alloc_init(MEMORY[0x1E0CB3578]);
  v1 = (void *)_MergedGlobals_682;
  _MergedGlobals_682 = (uint64_t)v0;

  objc_msgSend((id)_MergedGlobals_682, "setLocalizedDateFormatFromTemplate:", CFSTR("MMM d"));
  return objc_msgSend((id)_MergedGlobals_682, "setFormattingContext:", 5);
}

- (id)_recipientNameForAddress:(id)a3
{
  objc_class *v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  v3 = (objc_class *)MEMORY[0x1E0C97298];
  v4 = a3;
  v5 = objc_alloc_init(v3);
  objc_msgSend(MEMORY[0x1E0D67400], "requiredContactKeys");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D66C60]), "initWithContactStore:keysToFetch:", v5, v6);
  objc_msgSend(v7, "contactForHandle:", v4);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D67400], "displayNameForCounterpartHandle:contact:", v4, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return v9;
}

- (void)_presentDetailsForRecurringPayment:(id)a3
{
  objc_class *v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  PKPeerPaymentRecurringPaymentDetailViewController *v10;
  void *v11;
  PKPeerPaymentRecurringPaymentDetailViewController *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  PKNavigationController *v18;
  id v19;

  v4 = (objc_class *)MEMORY[0x1E0D673F8];
  v5 = a3;
  v6 = [v4 alloc];
  objc_msgSend(MEMORY[0x1E0D67480], "sharedService");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = (id)objc_msgSend(v6, "initWithPeerPaymentWebService:", v7);

  objc_msgSend(v19, "account");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "recurringPaymentsFeatureDescriptor");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = [PKPeerPaymentRecurringPaymentDetailViewController alloc];
  objc_msgSend(v5, "recipientAddress");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = -[PKPeerPaymentRecurringPaymentDetailViewController initWithRecurringPayment:recipientAddress:mode:context:peerPaymentController:remoteMessagesComposer:](v10, "initWithRecurringPayment:recipientAddress:mode:context:peerPaymentController:remoteMessagesComposer:", v5, v11, 2, 0, v19, 0);

  objc_msgSend(v9, "minimumAmount");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKPeerPaymentRecurringPaymentDetailViewController setMinimumAmount:](v12, "setMinimumAmount:", v13);

  objc_msgSend(v9, "maximumAmount");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKPeerPaymentRecurringPaymentDetailViewController setMaximumAmount:](v12, "setMaximumAmount:", v14);

  -[PKPeerPaymentRecurringPaymentDetailViewController setShowCancelButton:](v12, "setShowCancelButton:", 1);
  -[PKDashboardPaymentPassDataSource groupView](self, "groupView");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "pkui_viewControllerFromResponderChain");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "navigationController");
  v17 = (void *)objc_claimAutoreleasedReturnValue();

  v18 = -[PKNavigationController initWithRootViewController:]([PKNavigationController alloc], "initWithRootViewController:", v12);
  objc_msgSend(v17, "presentViewController:animated:completion:", v18, 1, 0);

}

- (void)_dismissMessageForRecurringPayment:(id)a3
{
  id v4;

  -[PKDashboardPaymentPassDataSource _messageIdentifierForRecurringPayment:](self, "_messageIdentifierForRecurringPayment:", a3);
  v4 = (id)objc_claimAutoreleasedReturnValue();
  PKPeerPaymentRecurringPaymentAddDismissedMessageForMessageIdentifier();
  -[PKDashboardPaymentPassDataSource reloadMessages](self, "reloadMessages");

}

- (id)payLaterAccountItem
{
  PKDashboardPayLaterAccountItem *v3;
  void *v4;
  void *v5;
  void *v6;
  PKDashboardPayLaterAccountItem *v7;

  if (-[PKDashboardPaymentPassDataSource _isPayLaterPass](self, "_isPayLaterPass")
    && -[PKDashboardPaymentPassDataSource canDisplayPayLaterBalance](self, "canDisplayPayLaterBalance"))
  {
    v3 = [PKDashboardPayLaterAccountItem alloc];
    -[PKDashboardPaymentPassDataSource account](self, "account");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPaymentPassDataSource payLaterDueNext30Days](self, "payLaterDueNext30Days");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPaymentPassDataSource payLaterTotalPending](self, "payLaterTotalPending");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = -[PKDashboardPayLaterAccountItem initWithPayLaterAccount:dueNext30Days:totalPending:](v3, "initWithPayLaterAccount:dueNext30Days:totalPending:", v4, v5, v6);

  }
  else
  {
    v7 = 0;
  }
  return v7;
}

- (int64_t)numberOfPayLaterBalanceDashboardItems
{
  void *v3;
  _BOOL4 v4;

  -[PKDashboardPaymentPassDataSource financingPlans](self, "financingPlans");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v3, "count"))
    v4 = 1;
  else
    v4 = -[PKDashboardPaymentPassDataSource completedFinancingPlansCount](self, "completedFinancingPlansCount") > 0;

  return -[PKDashboardPaymentPassDataSource canDisplayPayLaterBalance](self, "canDisplayPayLaterBalance") & v4;
}

- (void)_processUpdatedFinancingPlans:(id)a3 sectionsToReload:(id)a4 changedIndexPaths:(id)a5
{
  id v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  char v19;
  void *v20;
  id v21;

  v21 = a3;
  v8 = a4;
  v9 = a5;
  -[PKDashboardPaymentPassDataSource financingPlans](self, "financingPlans");
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  if (v10
    && (-[PKDashboardPaymentPassDataSource financingPlans](self, "financingPlans"),
        v11 = (void *)objc_claimAutoreleasedReturnValue(),
        v12 = objc_msgSend(v11, "count"),
        v13 = objc_msgSend(v21, "count"),
        v11,
        v12 == v13))
  {
    v14 = -[PKDashboardPaymentPassDataSource firstSectionIndexForSectionIdentifier:](self, "firstSectionIndexForSectionIdentifier:", 14);
    if (objc_msgSend(v21, "count"))
    {
      v15 = 0;
      do
      {
        objc_msgSend(v21, "objectAtIndexedSubscript:", v15);
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        -[PKDashboardPaymentPassDataSource financingPlans](self, "financingPlans");
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v17, "objectAtIndexedSubscript:", v15);
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        v19 = PKEqualObjects();

        if ((v19 & 1) == 0)
        {
          objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", v15, v14);
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v9, "addObject:", v20);

        }
        ++v15;
      }
      while (v15 < objc_msgSend(v21, "count"));
    }
  }
  else
  {
    -[PKDashboardPaymentPassDataSource _addPayLaterSectionsToReload:](self, "_addPayLaterSectionsToReload:", v8);
  }

}

- (void)_processUpdatedCompletedFinancingPlansCount:(int64_t)a3 sectionsToReload:(id)a4 changedIndexPaths:(id)a5
{
  int64_t v7;
  id v8;

  v8 = a4;
  v7 = -[PKDashboardPaymentPassDataSource completedFinancingPlansCount](self, "completedFinancingPlansCount");
  if (!a3 || v7 != a3)
    -[PKDashboardPaymentPassDataSource _addPayLaterSectionsToReload:](self, "_addPayLaterSectionsToReload:", v8);

}

- (void)_processUpcomingInstallmentsWithQueryResposne:(id)a3 sectionsToReload:(id)a4 changedIndexPaths:(id)a5
{
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  char v23;
  void *v24;
  void *v25;
  id v26;

  v26 = a3;
  v8 = a4;
  v9 = a5;
  objc_msgSend(v26, "upcomingInstallments");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "installments");
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v26, "upcomingInstallments");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "installmentIdentifierToFinancingPlan");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPaymentPassDataSource setInstallmentIdentifierToFinancingPlan:](self, "setInstallmentIdentifierToFinancingPlan:", v13);

  -[PKDashboardPaymentPassDataSource payLaterUpcomingInstallments](self, "payLaterUpcomingInstallments");
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  v25 = v8;
  if (v14
    && (-[PKDashboardPaymentPassDataSource payLaterUpcomingInstallments](self, "payLaterUpcomingInstallments", v8),
        v15 = (void *)objc_claimAutoreleasedReturnValue(),
        v16 = objc_msgSend(v15, "count"),
        v17 = objc_msgSend(v11, "count"),
        v15,
        v16 == v17))
  {
    v18 = -[PKDashboardPaymentPassDataSource firstSectionIndexForSectionIdentifier:](self, "firstSectionIndexForSectionIdentifier:", 13);
    if (objc_msgSend(v11, "count"))
    {
      v19 = 0;
      do
      {
        objc_msgSend(v11, "objectAtIndexedSubscript:", v19);
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        -[PKDashboardPaymentPassDataSource payLaterUpcomingInstallments](self, "payLaterUpcomingInstallments");
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v21, "objectAtIndexedSubscript:", v19);
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        v23 = PKEqualObjects();

        if ((v23 & 1) == 0)
        {
          objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", v19, v18);
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v9, "addObject:", v24);

        }
        ++v19;
      }
      while (v19 < objc_msgSend(v11, "count"));
    }
  }
  else
  {
    -[PKDashboardPaymentPassDataSource _addPayLaterSectionsToReload:](self, "_addPayLaterSectionsToReload:", v8, v25);
  }

}

- (void)reloadFinancingPlans
{
  NSObject *v3;
  NSObject *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  PKPayLaterInstallmentPresenter *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  PKPayLaterCalendarViewController *v20;
  PKPayLaterCalendarViewController *v21;
  void *v22;
  void *v23;
  void *v24;
  PKPayLaterCalendarViewController *v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  PKPayLaterCalendarViewController *v34;
  id v35;
  void *v36;
  id v37;
  PKPayLaterInstallmentPresenter *v38;
  id v39;
  _QWORD v40[4];
  id v41;
  id v42;
  _QWORD *v43;
  _QWORD *v44;
  _QWORD *v45;
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v48;
  uint8_t *v49;
  id v50;
  _QWORD v51[4];
  id v52;
  id v53;
  uint8_t *v54;
  _QWORD *v55;
  _QWORD *v56;
  _QWORD *v57;
  _QWORD *v58;
  _QWORD *v59;
  _QWORD *v60;
  id v61;
  _QWORD v62[5];
  id v63;
  _QWORD v64[5];
  id v65;
  _QWORD v66[5];
  id v67;
  _QWORD v68[5];
  id v69;
  _QWORD v70[4];
  _QWORD v71[5];
  id v72;
  uint8_t buf[8];
  uint8_t *v74;
  uint64_t v75;
  uint64_t (*v76)(uint64_t, uint64_t);
  void (*v77)(uint64_t);
  id v78;
  _QWORD v79[4];
  PKPayLaterCalendarViewController *v80;
  id location[2];

  if (-[PKDashboardPaymentPassDataSource _isPayLaterPass](self, "_isPayLaterPass"))
  {
    if (-[PKDashboardPaymentPassDataSource loadingFinancingPlans](self, "loadingFinancingPlans"))
    {
      PKLogFacilityTypeGetObject();
      v3 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_19D178000, v3, OS_LOG_TYPE_DEFAULT, "Dashboard already loading financing plans", buf, 2u);
      }

      -[PKDashboardPaymentPassDataSource setHasMoreFinancingPlansToLoad:](self, "setHasMoreFinancingPlansToLoad:", 1);
    }
    else
    {
      -[PKDashboardPaymentPassDataSource setLoadingFinancingPlans:](self, "setLoadingFinancingPlans:", 1);
      PKLogFacilityTypeGetObject();
      v4 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_19D178000, v4, OS_LOG_TYPE_DEFAULT, "Dashboard loading financing plans", buf, 2u);
      }

      objc_initWeak(location, self);
      v39 = objc_alloc_init(MEMORY[0x1E0D66B90]);
      -[PKDashboardPaymentPassDataSource plansFetcher](self, "plansFetcher");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      if (v5)
      {
        -[PKDashboardPaymentPassDataSource account](self, "account");
        v6 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setPayLaterAccount:", v6);

      }
      else
      {
        v7 = objc_alloc(MEMORY[0x1E0D67020]);
        -[PKDashboardPaymentPassDataSource account](self, "account");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        v5 = (void *)objc_msgSend(v7, "initWithPayLaterAccount:", v8);

        -[PKDashboardPaymentPassDataSource setPlansFetcher:](self, "setPlansFetcher:", v5);
      }
      -[PKDashboardPaymentPassDataSource installmentPresenter](self, "installmentPresenter");
      v9 = (PKPayLaterInstallmentPresenter *)objc_claimAutoreleasedReturnValue();
      if (!v9)
      {
        v9 = objc_alloc_init(PKPayLaterInstallmentPresenter);
        -[PKDashboardPaymentPassDataSource setInstallmentPresenter:](self, "setInstallmentPresenter:", v9);
      }
      v38 = v9;
      -[PKDashboardPaymentPassDataSource paymentIntentController](self, "paymentIntentController");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      if (v10)
      {
        -[PKDashboardPaymentPassDataSource account](self, "account");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "setPayLaterAccount:", v11);

      }
      else
      {
        v12 = objc_alloc(MEMORY[0x1E0D67048]);
        -[PKDashboardPaymentPassDataSource account](self, "account");
        v36 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0D673C8], "sharedService");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0D66F08], "sharedInstance");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        -[PKDashboardPaymentPassDataSource peerPaymentWebService](self, "peerPaymentWebService");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        v16 = v15;
        if (!v15)
        {
          objc_msgSend(MEMORY[0x1E0D67480], "sharedService");
          v16 = (void *)objc_claimAutoreleasedReturnValue();
        }
        objc_msgSend(MEMORY[0x1E0D668E8], "sharedInstance");
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        v18 = objc_alloc_init(MEMORY[0x1E0D672B0]);
        objc_msgSend(v18, "defaultPaymentPassUniqueIdentifier");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        v10 = (void *)objc_msgSend(v12, "initWithPayLaterAccount:paymentWebService:passLibrary:peerPaymentWebService:accountService:defaultPassUniqueIdentifier:", v36, v13, v14, v16, v17, v19);

        if (!v15)
        -[PKDashboardPaymentPassDataSource setPaymentIntentController:](self, "setPaymentIntentController:", v10);
      }
      -[PKDashboardPaymentPassDataSource payLaterCalendarViewController](self, "payLaterCalendarViewController");
      v20 = (PKPayLaterCalendarViewController *)objc_claimAutoreleasedReturnValue();
      if (!v20)
      {
        v21 = [PKPayLaterCalendarViewController alloc];
        -[PKDashboardPaymentPassDataSource plansFetcher](self, "plansFetcher");
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        -[PKDashboardPaymentPassDataSource installmentPresenter](self, "installmentPresenter");
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        -[PKDashboardPaymentPassDataSource paymentIntentController](self, "paymentIntentController");
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        v20 = -[PKPayLaterCalendarViewController initWithPlansFetcher:installmentPresenter:paymentIntentController:](v21, "initWithPlansFetcher:installmentPresenter:paymentIntentController:", v22, v23, v24);

        -[PKDashboardPaymentPassDataSource setPayLaterCalendarViewController:](self, "setPayLaterCalendarViewController:", v20);
      }
      v79[0] = MEMORY[0x1E0C809B0];
      v79[1] = 3221225472;
      v79[2] = __66__PKDashboardPaymentPassDataSource_PayLater__reloadFinancingPlans__block_invoke;
      v79[3] = &unk_1E3E67120;
      v25 = v20;
      v80 = v25;
      objc_msgSend(v39, "addOperation:", v79);
      -[PKDashboardPaymentPassDataSource account](self, "account");
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v26, "accountIdentifier");
      v27 = (void *)objc_claimAutoreleasedReturnValue();

      v37 = objc_alloc_init(MEMORY[0x1E0CB3788]);
      v34 = v25;
      v35 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
      *(_QWORD *)buf = 0;
      v74 = buf;
      v75 = 0x3032000000;
      v76 = __Block_byref_object_copy__40;
      v77 = __Block_byref_object_dispose__40;
      v78 = 0;
      v71[0] = 0;
      v71[1] = v71;
      v71[2] = 0x3032000000;
      v71[3] = __Block_byref_object_copy__40;
      v71[4] = __Block_byref_object_dispose__40;
      v72 = 0;
      v70[0] = 0;
      v70[1] = v70;
      v70[2] = 0x2020000000;
      v70[3] = 0;
      v68[0] = 0;
      v68[1] = v68;
      v68[2] = 0x3032000000;
      v68[3] = __Block_byref_object_copy__40;
      v68[4] = __Block_byref_object_dispose__40;
      v69 = 0;
      v66[0] = 0;
      v66[1] = v66;
      v66[2] = 0x3032000000;
      v66[3] = __Block_byref_object_copy__40;
      v66[4] = __Block_byref_object_dispose__40;
      v67 = 0;
      v64[0] = 0;
      v64[1] = v64;
      v64[2] = 0x3032000000;
      v64[3] = __Block_byref_object_copy__40;
      v64[4] = __Block_byref_object_dispose__40;
      v65 = 0;
      v62[0] = 0;
      v62[1] = v62;
      v62[2] = 0x3032000000;
      v62[3] = __Block_byref_object_copy__40;
      v62[4] = __Block_byref_object_dispose__40;
      v63 = 0;
      v51[0] = MEMORY[0x1E0C809B0];
      v51[1] = 3221225472;
      v51[2] = __66__PKDashboardPaymentPassDataSource_PayLater__reloadFinancingPlans__block_invoke_31;
      v51[3] = &unk_1E3E72840;
      v28 = v27;
      v52 = v28;
      v33 = v5;
      v53 = v33;
      objc_copyWeak(&v61, location);
      v54 = buf;
      v55 = v71;
      v56 = v70;
      v57 = v68;
      v58 = v66;
      v59 = v64;
      v60 = v62;
      objc_msgSend(v39, "addOperation:", v51);
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      v40[0] = MEMORY[0x1E0C809B0];
      v40[1] = 3221225472;
      v40[2] = __66__PKDashboardPaymentPassDataSource_PayLater__reloadFinancingPlans__block_invoke_2_40;
      v40[3] = &unk_1E3E72890;
      objc_copyWeak(&v50, location);
      v43 = v70;
      v44 = v64;
      v45 = v68;
      v46 = v66;
      v47 = v71;
      v48 = v62;
      v30 = v37;
      v41 = v30;
      v31 = v35;
      v42 = v31;
      v49 = buf;
      v32 = (id)objc_msgSend(v39, "evaluateWithInput:completion:", v29, v40);

      objc_destroyWeak(&v50);
      objc_destroyWeak(&v61);

      _Block_object_dispose(v62, 8);
      _Block_object_dispose(v64, 8);

      _Block_object_dispose(v66, 8);
      _Block_object_dispose(v68, 8);

      _Block_object_dispose(v70, 8);
      _Block_object_dispose(v71, 8);

      _Block_object_dispose(buf, 8);
      objc_destroyWeak(location);
    }
  }
  else
  {
    -[PKDashboardPaymentPassDataSource setShouldDisplayPayLaterItems:](self, "setShouldDisplayPayLaterItems:", 0);
    -[PKDashboardPaymentPassDataSource setFinancingPlansLoaded:](self, "setFinancingPlansLoaded:", 1);
    if (!-[PKDashboardPaymentPassDataSource allContentIsLoaded](self, "allContentIsLoaded"))
      -[PKDashboardPaymentPassDataSource updateContentIsLoaded](self, "updateContentIsLoaded");
  }
}

void __66__PKDashboardPaymentPassDataSource_PayLater__reloadFinancingPlans__block_invoke(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  _QWORD v12[4];
  id v13;
  id v14;

  v6 = a3;
  v7 = a4;
  v8 = *(void **)(a1 + 32);
  objc_msgSend(MEMORY[0x1E0C99D68], "date");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 3221225472;
  v12[2] = __66__PKDashboardPaymentPassDataSource_PayLater__reloadFinancingPlans__block_invoke_2;
  v12[3] = &unk_1E3E618A0;
  v13 = v6;
  v14 = v7;
  v10 = v6;
  v11 = v7;
  objc_msgSend(v8, "preflightWithFirstShownDate:completion:", v9, v12);

}

uint64_t __66__PKDashboardPaymentPassDataSource_PayLater__reloadFinancingPlans__block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32), 0);
}

void __66__PKDashboardPaymentPassDataSource_PayLater__reloadFinancingPlans__block_invoke_31(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  __int128 v15;
  id v16;
  id v17;
  _QWORD v18[4];
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  id v26;
  _QWORD v27[2];

  v27[1] = *MEMORY[0x1E0C80C00];
  v7 = a2;
  v8 = a3;
  v9 = a4;
  v10 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D668F8]), "initWithAccountIdentifier:queryItems:", *(_QWORD *)(a1 + 32), 87);
  objc_msgSend(v10, "setUpcomingInstallmentsLimit:", 3);
  objc_msgSend(MEMORY[0x1E0D67010], "completedFinancingPlanStates");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setCountFinancingPlanStates:", v11);

  v12 = *(void **)(a1 + 40);
  v27[0] = v10;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v27, 1);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v18[0] = MEMORY[0x1E0C809B0];
  v18[1] = 3221225472;
  v18[2] = __66__PKDashboardPaymentPassDataSource_PayLater__reloadFinancingPlans__block_invoke_2_35;
  v18[3] = &unk_1E3E72818;
  objc_copyWeak(&v26, (id *)(a1 + 104));
  v22 = *(_QWORD *)(a1 + 48);
  v14 = v10;
  v19 = v14;
  v15 = *(_OWORD *)(a1 + 72);
  v23 = *(_OWORD *)(a1 + 56);
  v24 = v15;
  v25 = *(_OWORD *)(a1 + 88);
  v16 = v9;
  v21 = v16;
  v17 = v8;
  v20 = v17;
  objc_msgSend(v12, "financingPlansWithQueries:completion:", v13, v18);

  objc_destroyWeak(&v26);
}

void __66__PKDashboardPaymentPassDataSource_PayLater__reloadFinancingPlans__block_invoke_2_35(uint64_t a1, void *a2)
{
  id v3;
  __int128 v4;
  id v5;
  _QWORD v6[4];
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  id v15;

  v3 = a2;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __66__PKDashboardPaymentPassDataSource_PayLater__reloadFinancingPlans__block_invoke_3;
  v6[3] = &unk_1E3E727F0;
  objc_copyWeak(&v15, (id *)(a1 + 112));
  v11 = *(_QWORD *)(a1 + 56);
  v7 = v3;
  v8 = *(id *)(a1 + 32);
  v4 = *(_OWORD *)(a1 + 80);
  v12 = *(_OWORD *)(a1 + 64);
  v13 = v4;
  v14 = *(_OWORD *)(a1 + 96);
  v10 = *(id *)(a1 + 48);
  v9 = *(id *)(a1 + 40);
  v5 = v3;
  dispatch_async(MEMORY[0x1E0C80D38], v6);

  objc_destroyWeak(&v15);
}

void __66__PKDashboardPaymentPassDataSource_PayLater__reloadFinancingPlans__block_invoke_3(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  NSObject *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  PKPayLaterDashboardMessageComposer *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  _QWORD v32[4];
  id v33;
  id v34;
  id v35;
  uint8_t buf[16];

  v2 = (id *)(a1 + 120);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 120));
  if (WeakRetained)
  {
    PKLogFacilityTypeGetObject();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_19D178000, v4, OS_LOG_TYPE_DEFAULT, "Dashboard finished fetching financing plans", buf, 2u);
    }

    v5 = *(void **)(a1 + 32);
    objc_msgSend(*(id *)(a1 + 40), "queryIdentifier");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "objectForKeyedSubscript:", v6);
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v9 = *(void **)(v8 + 40);
    *(_QWORD *)(v8 + 40) = v7;

    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "activeFinancingPlans");
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = *(_QWORD *)(*(_QWORD *)(a1 + 72) + 8);
    v12 = *(void **)(v11 + 40);
    *(_QWORD *)(v11 + 40) = v10;

    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 24) = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8)+ 40), "financingPlanCount");
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "dueNext30Days");
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = *(_QWORD *)(*(_QWORD *)(a1 + 88) + 8);
    v15 = *(void **)(v14 + 40);
    *(_QWORD *)(v14 + 40) = v13;

    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "totalPendingAmount");
    v16 = objc_claimAutoreleasedReturnValue();
    v17 = *(_QWORD *)(*(_QWORD *)(a1 + 96) + 8);
    v18 = *(void **)(v17 + 40);
    *(_QWORD *)(v17 + 40) = v16;

    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), "upcomingInstallments");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "installments");
    v20 = objc_claimAutoreleasedReturnValue();
    v21 = *(_QWORD *)(*(_QWORD *)(a1 + 104) + 8);
    v22 = *(void **)(v21 + 40);
    *(_QWORD *)(v21 + 40) = v20;

    v23 = [PKPayLaterDashboardMessageComposer alloc];
    v24 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40);
    objc_msgSend(WeakRetained, "pass");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(WeakRetained, "account");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(WeakRetained, "paymentIntentController");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    v28 = -[PKPayLaterDashboardMessageComposer initWithContext:allFinancingPlans:payLaterPass:payLaterAccount:financingPlan:paymentIntentController:delegate:](v23, "initWithContext:allFinancingPlans:payLaterPass:payLaterAccount:financingPlan:paymentIntentController:delegate:", 0, v24, v25, v26, 0, v27, WeakRetained);
    v29 = *(_QWORD *)(*(_QWORD *)(a1 + 112) + 8);
    v30 = *(void **)(v29 + 40);
    *(_QWORD *)(v29 + 40) = v28;

    v31 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 112) + 8) + 40);
    v32[0] = MEMORY[0x1E0C809B0];
    v32[1] = 3221225472;
    v32[2] = __66__PKDashboardPaymentPassDataSource_PayLater__reloadFinancingPlans__block_invoke_37;
    v32[3] = &unk_1E3E61478;
    objc_copyWeak(&v35, v2);
    v34 = *(id *)(a1 + 56);
    v33 = *(id *)(a1 + 48);
    objc_msgSend(v31, "preflightDashboardMessagesWithCompletion:", v32);

    objc_destroyWeak(&v35);
  }

}

void __66__PKDashboardPaymentPassDataSource_PayLater__reloadFinancingPlans__block_invoke_37(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
    WeakRetained = v3;
  }

}

void __66__PKDashboardPaymentPassDataSource_PayLater__reloadFinancingPlans__block_invoke_2_40(uint64_t a1)
{
  __int128 v2;
  id v3;
  uint64_t v4;
  _QWORD v5[4];
  id v6;
  id v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  id v12;

  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 3221225472;
  v5[2] = __66__PKDashboardPaymentPassDataSource_PayLater__reloadFinancingPlans__block_invoke_3_41;
  v5[3] = &unk_1E3E72868;
  objc_copyWeak(&v12, (id *)(a1 + 104));
  v2 = *(_OWORD *)(a1 + 64);
  v8 = *(_OWORD *)(a1 + 48);
  v9 = v2;
  v10 = *(_OWORD *)(a1 + 80);
  v6 = *(id *)(a1 + 32);
  v3 = *(id *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 96);
  v7 = v3;
  v11 = v4;
  dispatch_async(MEMORY[0x1E0C80D38], v5);

  objc_destroyWeak(&v12);
}

void __66__PKDashboardPaymentPassDataSource_PayLater__reloadFinancingPlans__block_invoke_3_41(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  char v10;
  int v11;
  NSObject *v12;
  dispatch_time_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  uint64_t v20;
  void *v21;
  void *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _QWORD block[4];
  id v28;
  uint8_t buf[8];
  _BYTE v30[128];
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v2 = (id *)(a1 + 104);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 104));
  v4 = WeakRetained;
  if (!WeakRetained)
    goto LABEL_28;
  objc_msgSend(WeakRetained, "account");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setShouldDisplayPayLaterItems:", PKCanShowPayLaterPassItemsForAccount());

  if (!objc_msgSend(v4, "shouldDisplayPayLaterItems"))
    goto LABEL_9;
  objc_msgSend(v4, "account");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v6, "state") != 2)
  {
    objc_msgSend(v4, "account");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v7, "state") == 4)
    {

      goto LABEL_6;
    }
    objc_msgSend(v4, "account");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = objc_msgSend(v9, "hidePayLaterSetupInWallet");

    if ((v10 & 1) == 0)
    {
      objc_msgSend(v4, "account");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v22, "payLaterDetails");
      v6 = (void *)objc_claimAutoreleasedReturnValue();

      if ((objc_msgSend(v6, "hasEligibleSpend") & 1) != 0)
        v8 = 1;
      else
        v8 = objc_msgSend(v6, "isPayLaterSupportedInCurrentRegion");
      goto LABEL_7;
    }
LABEL_9:
    v8 = 0;
    goto LABEL_10;
  }
LABEL_6:
  v8 = 0;
LABEL_7:

LABEL_10:
  objc_msgSend(v4, "setHasPayLaterEligibleSpend:", v8);
  objc_msgSend(v4, "setCompletedFinancingPlansCount:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24));
  objc_msgSend(v4, "setPayLaterUpcomingInstallments:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40));
  objc_msgSend(v4, "setPayLaterDueNext30Days:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40));
  objc_msgSend(v4, "setPayLaterTotalPending:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 72) + 8) + 40));
  objc_msgSend(v4, "setFinancingPlans:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 40));
  objc_msgSend(v4, "setPayLaterDashboardMessageComposer:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 88) + 8) + 40));
  objc_msgSend(v4, "_processUpdatedFinancingPlans:sectionsToReload:changedIndexPaths:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 8) + 40), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  objc_msgSend(v4, "_processUpcomingInstallmentsWithQueryResposne:sectionsToReload:changedIndexPaths:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 96) + 8) + 40), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  objc_msgSend(v4, "_processUpdatedCompletedFinancingPlansCount:sectionsToReload:changedIndexPaths:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  objc_msgSend(v4, "reloadMessages");
  objc_msgSend(v4, "_updateBalanceAndPreventReload:", 1);
  objc_msgSend(v4, "setFinancingPlansLoaded:", 1);
  objc_msgSend(v4, "_addPayLaterSectionsToReload:", *(_QWORD *)(a1 + 32));
  v11 = objc_msgSend(v4, "hasMoreFinancingPlansToLoad");
  objc_msgSend(v4, "setHasMoreFinancingPlansToLoad:", 0);
  objc_msgSend(v4, "setLoadingFinancingPlans:", 0);
  if (v11)
  {
    PKLogFacilityTypeGetObject();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_19D178000, v12, OS_LOG_TYPE_DEFAULT, "Dashboard finished loading financing plans. There are more plans that need to be loaded.", buf, 2u);
    }

    v13 = dispatch_time(0, 3000000000);
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = __66__PKDashboardPaymentPassDataSource_PayLater__reloadFinancingPlans__block_invoke_42;
    block[3] = &unk_1E3E61310;
    objc_copyWeak(&v28, v2);
    dispatch_after(v13, MEMORY[0x1E0C80D38], block);
    objc_destroyWeak(&v28);
  }
  if ((objc_msgSend(v4, "allContentIsLoaded") & 1) != 0)
  {
    objc_msgSend(v4, "delegate");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    if (v14)
    {
      if (objc_msgSend(*(id *)(a1 + 32), "count"))
        objc_msgSend(v14, "reloadSections:", *(_QWORD *)(a1 + 32));
      v25 = 0u;
      v26 = 0u;
      v23 = 0u;
      v24 = 0u;
      v15 = *(id *)(a1 + 40);
      v16 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v23, v30, 16);
      if (v16)
      {
        v17 = v16;
        v18 = *(_QWORD *)v24;
        do
        {
          for (i = 0; i != v17; ++i)
          {
            if (*(_QWORD *)v24 != v18)
              objc_enumerationMutation(v15);
            v20 = *(_QWORD *)(*((_QWORD *)&v23 + 1) + 8 * i);
            objc_msgSend(v4, "itemAtIndexPath:", v20, (_QWORD)v23);
            v21 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v14, "itemChanged:atIndexPath:", v21, v20);

          }
          v17 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v23, v30, 16);
        }
        while (v17);
      }

    }
  }
  else
  {
    objc_msgSend(v4, "updateContentIsLoaded");
  }
LABEL_28:

}

void __66__PKDashboardPaymentPassDataSource_PayLater__reloadFinancingPlans__block_invoke_42(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = WeakRetained;
    objc_msgSend(WeakRetained, "reloadFinancingPlans");
    WeakRetained = v2;
  }

}

- (int64_t)numberOfPayLaterUpcomingPayments
{
  void *v3;
  uint64_t v4;

  if (!-[PKDashboardPaymentPassDataSource _isPayLaterPass](self, "_isPayLaterPass"))
    return 0;
  -[PKDashboardPaymentPassDataSource payLaterUpcomingInstallments](self, "payLaterUpcomingInstallments");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "count");

  if (v4)
    return v4 + 1;
  else
    return 0;
}

- (id)payLaterInstallmentItemForItemIndex:(unint64_t)a3
{
  void *v5;
  unint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  PKDashboardFinancingPlanInstallmentItem *v12;
  void *v13;
  PKDashboardFinancingPlanInstallmentItem *v14;

  -[PKDashboardPaymentPassDataSource payLaterUpcomingInstallments](self, "payLaterUpcomingInstallments");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "count");

  if (v6 <= a3)
  {
    v14 = 0;
  }
  else
  {
    -[PKDashboardPaymentPassDataSource payLaterUpcomingInstallments](self, "payLaterUpcomingInstallments");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "objectAtIndexedSubscript:", a3);
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    -[PKDashboardPaymentPassDataSource installmentIdentifierToFinancingPlan](self, "installmentIdentifierToFinancingPlan");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "installmentIdentifier");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "objectForKey:", v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    v12 = [PKDashboardFinancingPlanInstallmentItem alloc];
    -[PKDashboardPaymentPassDataSource paymentIntentController](self, "paymentIntentController");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = -[PKDashboardFinancingPlanInstallmentItem initWithFinancingPlan:relevantInstallment:paymentIntentController:pageTag:](v12, "initWithFinancingPlan:relevantInstallment:paymentIntentController:pageTag:", v11, v8, v13, *MEMORY[0x1E0D68FA8]);

  }
  return v14;
}

- (int64_t)numberOfFinancingPlansEnabled
{
  void *v3;
  int64_t v4;

  if (!-[PKDashboardPaymentPassDataSource _isPayLaterPass](self, "_isPayLaterPass"))
    return 0;
  -[PKDashboardPaymentPassDataSource financingPlans](self, "financingPlans");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "count");

  return v4;
}

- (int64_t)numberOfCompletedFinancingPlanItems
{
  return -[PKDashboardPaymentPassDataSource _isPayLaterPass](self, "_isPayLaterPass")
      && -[PKDashboardPaymentPassDataSource completedFinancingPlansCount](self, "completedFinancingPlansCount") > 0;
}

- (id)payLaterCompleteFinancingPlansItemForItemIndex:(unint64_t)a3
{
  PKDashboardFinancingPlanGroupItem *v4;
  int64_t v5;
  void *v6;
  void *v7;
  PKDashboardFinancingPlanGroupItem *v8;

  if (-[PKDashboardPaymentPassDataSource completedFinancingPlansCount](self, "completedFinancingPlansCount", a3))
  {
    v4 = [PKDashboardFinancingPlanGroupItem alloc];
    v5 = -[PKDashboardPaymentPassDataSource completedFinancingPlansCount](self, "completedFinancingPlansCount");
    -[PKDashboardPaymentPassDataSource account](self, "account");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPaymentPassDataSource paymentIntentController](self, "paymentIntentController");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = -[PKDashboardFinancingPlanGroupItem initWithFinancingPlansCount:payLaterAccount:paymentIntentController:pageTag:](v4, "initWithFinancingPlansCount:payLaterAccount:paymentIntentController:pageTag:", v5, v6, v7, *MEMORY[0x1E0D68FA8]);

  }
  else
  {
    v8 = 0;
  }
  return v8;
}

- (id)payLaterFinancingPlanItemForItemIndex:(unint64_t)a3
{
  void *v5;
  unint64_t v6;
  void *v7;
  void *v8;
  PKDashboardFinancingPlanItem *v9;
  void *v10;
  void *v11;
  PKDashboardFinancingPlanItem *v12;

  -[PKDashboardPaymentPassDataSource financingPlans](self, "financingPlans");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "count");

  if (v6 <= a3)
  {
    v12 = 0;
  }
  else
  {
    -[PKDashboardPaymentPassDataSource financingPlans](self, "financingPlans");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "objectAtIndexedSubscript:", a3);
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    v9 = [PKDashboardFinancingPlanItem alloc];
    -[PKDashboardPaymentPassDataSource account](self, "account");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPaymentPassDataSource paymentIntentController](self, "paymentIntentController");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = -[PKDashboardFinancingPlanItem initWithFinancingPlan:payLaterAccount:paymentIntentController:pageTag:](v9, "initWithFinancingPlan:payLaterAccount:paymentIntentController:pageTag:", v8, v10, v11, *MEMORY[0x1E0D68FA8]);

  }
  return v12;
}

- (id)payLaterFinancingPlanSeeAllPaymentsItem
{
  PKDashboardTextActionItem *v3;
  void *v4;
  void *v5;
  void *v6;
  _QWORD v8[5];

  v3 = objc_alloc_init(PKDashboardTextActionItem);
  objc_msgSend(MEMORY[0x1E0DC3870], "systemImageNamed:", CFSTR("calendar"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardTextActionItem setIcon:](v3, "setIcon:", v4);

  -[PKDashboardTextActionItem setActionStyle:](v3, "setActionStyle:", 0);
  -[PKDashboardTextActionItem setLayoutStyle:](v3, "setLayoutStyle:", 0);
  -[PKDashboardPaymentPassDataSource account](self, "account");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "feature");
  PKLocalizedFeatureString();
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardTextActionItem setTitle:](v3, "setTitle:", v6);

  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = __85__PKDashboardPaymentPassDataSource_PayLater__payLaterFinancingPlanSeeAllPaymentsItem__block_invoke;
  v8[3] = &unk_1E3E728B8;
  v8[4] = self;
  -[PKDashboardTextActionItem setAction:](v3, "setAction:", v8);
  return v3;
}

uint64_t __85__PKDashboardPaymentPassDataSource_PayLater__payLaterFinancingPlanSeeAllPaymentsItem__block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "presentPayLaterCalendarViewController");
}

- (void)presentPayLaterCalendarViewController
{
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  _QWORD v11[2];

  v11[1] = *MEMORY[0x1E0C80C00];
  v3 = (void *)MEMORY[0x1E0D66A58];
  v4 = *MEMORY[0x1E0D69918];
  v10 = *MEMORY[0x1E0D68858];
  v11[0] = *MEMORY[0x1E0D688A8];
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v11, &v10, 1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "subject:sendEvent:", v4, v5);

  -[PKDashboardPaymentPassDataSource payLaterCalendarViewController](self, "payLaterCalendarViewController");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPaymentPassDataSource groupView](self, "groupView");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "pkui_viewControllerFromResponderChain");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "navigationController");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "pushViewController:animated:", v6, 1);

}

- (int64_t)numberOfPayLaterEligibleSpend
{
  if (-[PKDashboardPaymentPassDataSource _isPayLaterPass](self, "_isPayLaterPass"))
    return -[PKDashboardPaymentPassDataSource hasPayLaterEligibleSpend](self, "hasPayLaterEligibleSpend");
  else
    return 0;
}

- (id)payLaterEligibleSpendItemForItemIndex:(unint64_t)a3
{
  PKDashboardPayLaterEligibleSpendItem *v4;
  void *v5;
  PKDashboardPayLaterEligibleSpendItem *v6;

  if (-[PKDashboardPaymentPassDataSource canDisplayPayLaterEligibleSpend](self, "canDisplayPayLaterEligibleSpend", a3))
  {
    v4 = [PKDashboardPayLaterEligibleSpendItem alloc];
    -[PKDashboardPaymentPassDataSource account](self, "account");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[PKDashboardPayLaterEligibleSpendItem initWithPayLaterAccount:](v4, "initWithPayLaterAccount:", v5);

  }
  else
  {
    v6 = 0;
  }
  return v6;
}

- (id)payLaterFooterTextItemForSection:(unint64_t)a3
{
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;

  if (-[PKDashboardPaymentPassDataSource numberOfSections](self, "numberOfSections") - 1 != a3)
    goto LABEL_5;
  -[PKDashboardPaymentPassDataSource account](self, "account");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "state");

  if (v5 == 3)
    goto LABEL_5;
  v6 = (void *)MEMORY[0x1E0D67010];
  -[PKDashboardPaymentPassDataSource account](self, "account");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPaymentPassDataSource financingPlans](self, "financingPlans");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  LODWORD(v6) = objc_msgSend(v6, "requiresGenericMessagingForAccount:financingPlans:", v7, v8);

  if ((_DWORD)v6)
  {
    -[PKDashboardPaymentPassDataSource account](self, "account");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "feature");
    PKLocalizedFeatureString();
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    +[PKDashboardFooterTextItem itemWithFooterText:](PKDashboardFooterTextItem, "itemWithFooterText:", v10);
    v11 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
LABEL_5:
    v11 = 0;
  }
  return v11;
}

- (void)_addPayLaterSectionsToReload:(id)a3
{
  id v4;

  v4 = a3;
  objc_msgSend(v4, "addIndex:", -[PKDashboardPaymentPassDataSource firstSectionIndexForSectionIdentifier:](self, "firstSectionIndexForSectionIdentifier:", 13));
  objc_msgSend(v4, "addIndex:", -[PKDashboardPaymentPassDataSource firstSectionIndexForSectionIdentifier:](self, "firstSectionIndexForSectionIdentifier:", 2));
  objc_msgSend(v4, "addIndex:", -[PKDashboardPaymentPassDataSource firstSectionIndexForSectionIdentifier:](self, "firstSectionIndexForSectionIdentifier:", 6));
  objc_msgSend(v4, "addIndex:", -[PKDashboardPaymentPassDataSource firstSectionIndexForSectionIdentifier:](self, "firstSectionIndexForSectionIdentifier:", 8));
  objc_msgSend(v4, "addIndex:", -[PKDashboardPaymentPassDataSource firstSectionIndexForSectionIdentifier:](self, "firstSectionIndexForSectionIdentifier:", 14));
  objc_msgSend(v4, "addIndex:", -[PKDashboardPaymentPassDataSource firstSectionIndexForSectionIdentifier:](self, "firstSectionIndexForSectionIdentifier:", 15));

}

- (PKDashboardPaymentPassDataSource)initWithGroupView:(id)a3 context:(id)a4
{
  id v7;
  id v8;
  PKDashboardPaymentPassDataSource *v9;
  PKDashboardPaymentPassDataSource *v10;
  void *v11;
  uint64_t v12;
  PKGroup *group;
  NSMutableDictionary *v14;
  NSMutableDictionary *messageImagesCache;
  NSMutableSet *v16;
  NSMutableSet *iconDownloads;
  NSMutableSet *v18;
  NSMutableSet *iconFailedDownloads;
  NSMutableDictionary *v20;
  NSMutableDictionary *icons;
  __CFString *v22;
  NSMutableArray *v23;
  NSMutableArray *executionBlocksContentIsLoaded;
  NSOrderedSet *v25;
  NSOrderedSet *messages;
  NSOrderedSet *v27;
  NSOrderedSet *secondaryMessages;
  NSMutableDictionary *v29;
  NSMutableDictionary *sourcesPerFundingSourceIdentifier;
  NSMutableDictionary *v31;
  NSMutableDictionary *dynamicSections;
  PKSecureElement *v33;
  PKSecureElement *secureElement;
  NSDateFormatter *v35;
  NSDateFormatter *formatterYear;
  void *v37;
  void *v38;
  NSDateFormatter *v39;
  NSDateFormatter *formatterMonth;
  NSDateFormatter *v41;
  NSDateFormatter *formatterMonthDay;
  NSNumberFormatter *v43;
  NSNumberFormatter *formatterPercentage;
  PKSecureElementPassContactIssuerHelper *v45;
  PKSecureElementPassContactIssuerHelper *contactIssuerHelper;
  void *v47;
  NSString *incomingRequestActionInProgressRequestToken;
  FHSearchSuggestionController *v49;
  FHSearchSuggestionController *searchSuggestionController;
  objc_super v52;

  v7 = a3;
  v8 = a4;
  v52.receiver = self;
  v52.super_class = (Class)PKDashboardPaymentPassDataSource;
  v9 = -[PKDashboardPaymentPassDataSource init](&v52, sel_init);
  v10 = v9;
  if (v9)
  {
    objc_storeStrong((id *)&v9->_context, a4);
    objc_storeStrong((id *)&v10->_groupView, a3);
    objc_msgSend(v7, "frontmostPassView");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPaymentPassDataSource _setPassView:](v10, "_setPassView:", v11);

    objc_msgSend(v7, "group");
    v12 = objc_claimAutoreleasedReturnValue();
    group = v10->_group;
    v10->_group = (PKGroup *)v12;

    v10->_lockImages._os_unfair_lock_opaque = 0;
    v14 = (NSMutableDictionary *)objc_alloc_init(MEMORY[0x1E0C99E08]);
    messageImagesCache = v10->_messageImagesCache;
    v10->_messageImagesCache = v14;

    v10->_lockTransactions._os_unfair_lock_opaque = 0;
    v10->_sessionActiveToken = -1;
    v16 = (NSMutableSet *)objc_alloc_init(MEMORY[0x1E0C99E20]);
    iconDownloads = v10->_iconDownloads;
    v10->_iconDownloads = v16;

    v18 = (NSMutableSet *)objc_alloc_init(MEMORY[0x1E0C99E20]);
    iconFailedDownloads = v10->_iconFailedDownloads;
    v10->_iconFailedDownloads = v18;

    v20 = (NSMutableDictionary *)objc_alloc_init(MEMORY[0x1E0C99E08]);
    icons = v10->_icons;
    v10->_icons = v20;

    v10->_lockIcons._os_unfair_lock_opaque = 0;
    if (PKUIScreenScale() <= 2.0)
      v22 = CFSTR("2x");
    else
      v22 = CFSTR("3x");
    objc_storeStrong((id *)&v10->_scaleKey, v22);
    v23 = (NSMutableArray *)objc_alloc_init(MEMORY[0x1E0C99DE8]);
    executionBlocksContentIsLoaded = v10->_executionBlocksContentIsLoaded;
    v10->_executionBlocksContentIsLoaded = v23;

    v25 = (NSOrderedSet *)objc_alloc_init(MEMORY[0x1E0C99E40]);
    messages = v10->_messages;
    v10->_messages = v25;

    v27 = (NSOrderedSet *)objc_alloc_init(MEMORY[0x1E0C99E40]);
    secondaryMessages = v10->_secondaryMessages;
    v10->_secondaryMessages = v27;

    v29 = (NSMutableDictionary *)objc_alloc_init(MEMORY[0x1E0C99E08]);
    sourcesPerFundingSourceIdentifier = v10->_sourcesPerFundingSourceIdentifier;
    v10->_sourcesPerFundingSourceIdentifier = v29;

    v31 = (NSMutableDictionary *)objc_alloc_init(MEMORY[0x1E0C99E08]);
    dynamicSections = v10->_dynamicSections;
    v10->_dynamicSections = v31;

    -[NSMutableDictionary setObject:forKeyedSubscript:](v10->_dynamicSections, "setObject:forKeyedSubscript:", &unk_1E3FAD900, &unk_1E3FAD918);
    -[NSMutableDictionary setObject:forKeyedSubscript:](v10->_dynamicSections, "setObject:forKeyedSubscript:", &unk_1E3FAD900, &unk_1E3FAD930);
    -[NSMutableDictionary setObject:forKeyedSubscript:](v10->_dynamicSections, "setObject:forKeyedSubscript:", &unk_1E3FAD900, &unk_1E3FAD948);
    v33 = (PKSecureElement *)objc_alloc_init(MEMORY[0x1E0D67630]);
    secureElement = v10->_secureElement;
    v10->_secureElement = v33;

    v10->_isInRestrictedMode = -[PKSecureElement isInRestrictedMode](v10->_secureElement, "isInRestrictedMode");
    -[PKSecureElement registerObserver:](v10->_secureElement, "registerObserver:", v10);
    v35 = (NSDateFormatter *)objc_alloc_init(MEMORY[0x1E0CB3578]);
    formatterYear = v10->_formatterYear;
    v10->_formatterYear = v35;

    -[NSDateFormatter setLocalizedDateFormatFromTemplate:](v10->_formatterYear, "setLocalizedDateFormatFromTemplate:", CFSTR("y"));
    -[PKAccount creditDetails](v10->_account, "creditDetails");
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v37, "productTimeZone");
    v38 = (void *)objc_claimAutoreleasedReturnValue();

    v39 = (NSDateFormatter *)objc_alloc_init(MEMORY[0x1E0CB3578]);
    formatterMonth = v10->_formatterMonth;
    v10->_formatterMonth = v39;

    -[NSDateFormatter setTimeZone:](v10->_formatterMonth, "setTimeZone:", v38);
    -[NSDateFormatter setLocalizedDateFormatFromTemplate:](v10->_formatterMonth, "setLocalizedDateFormatFromTemplate:", CFSTR("MMMM"));
    v41 = (NSDateFormatter *)objc_alloc_init(MEMORY[0x1E0CB3578]);
    formatterMonthDay = v10->_formatterMonthDay;
    v10->_formatterMonthDay = v41;

    -[NSDateFormatter setTimeZone:](v10->_formatterMonthDay, "setTimeZone:", v38);
    -[NSDateFormatter setLocalizedDateFormatFromTemplate:](v10->_formatterMonthDay, "setLocalizedDateFormatFromTemplate:", CFSTR("MMMM d"));
    v43 = (NSNumberFormatter *)objc_alloc_init(MEMORY[0x1E0CB37F0]);
    formatterPercentage = v10->_formatterPercentage;
    v10->_formatterPercentage = v43;

    -[NSNumberFormatter setNumberStyle:](v10->_formatterPercentage, "setNumberStyle:", 3);
    -[NSNumberFormatter setMinimumFractionDigits:](v10->_formatterPercentage, "setMinimumFractionDigits:", 2);
    -[NSNumberFormatter setMaximumFractionDigits:](v10->_formatterPercentage, "setMaximumFractionDigits:", 2);
    -[NSNumberFormatter setMultiplier:](v10->_formatterPercentage, "setMultiplier:", &unk_1E3FAD960);
    v45 = objc_alloc_init(PKSecureElementPassContactIssuerHelper);
    contactIssuerHelper = v10->_contactIssuerHelper;
    v10->_contactIssuerHelper = v45;

    -[PKSecureElementPassContactIssuerHelper setDelegate:](v10->_contactIssuerHelper, "setDelegate:", v10);
    -[PKDashboardPaymentPassDataSource reloadFrontmostPass](v10, "reloadFrontmostPass");
    -[PKDashboardPaymentPassDataSource reloadAllContent](v10, "reloadAllContent");
    +[PKUIForegroundActiveArbiter sharedInstance](PKUIForegroundActiveArbiter, "sharedInstance");
    v47 = (void *)objc_claimAutoreleasedReturnValue();
    v10->_activeState = ($77BFE790A1370D46B4241309C9753022)objc_msgSend(v47, "registerObserver:", v10);

    -[PKDashboardPaymentPassDataSource _updateTransactionsTimer](v10, "_updateTransactionsTimer");
    v10->_filterType = 0;
    incomingRequestActionInProgressRequestToken = v10->_incomingRequestActionInProgressRequestToken;
    v10->_incomingRequestActionInProgressRequestToken = 0;

    v49 = (FHSearchSuggestionController *)objc_alloc_init(getFHSearchSuggestionControllerClass_0());
    searchSuggestionController = v10->_searchSuggestionController;
    v10->_searchSuggestionController = v49;

  }
  return v10;
}

- (PKPassGroupView)groupView
{
  return self->_groupView;
}

- (void)reloadFrontmostPass
{
  PKPaymentPass *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  PKPaymentPass **p_pass;
  NSObject *v16;
  void *v17;
  void *v18;
  const char *v19;
  NSObject *v20;
  id v21;
  int sessionActiveToken;
  NSObject *v23;
  PKNearbyPeerPaymentViewProvider *v24;
  PKPeerPaymentAccount *v25;
  PKPeerPaymentAccount *peerPaymentAccount;
  id v27;
  id v28;
  void *v29;
  int v30;
  void *v31;
  void *v32;
  PKPeerPaymentAccount *v33;
  PKPeerPaymentAccount *v34;
  void *v35;
  void *v36;
  PKAccountService *v37;
  PKAccountService *accountService;
  PKPeerPaymentWebService *v39;
  PKPeerPaymentWebService *peerPaymentWebService;
  PKPeerPaymentAccountResolutionController *v41;
  PKPeerPaymentAccount *v42;
  PKPeerPaymentWebService *v43;
  id v44;
  PKPeerPaymentAccountResolutionController *v45;
  PKPeerPaymentAccountResolutionController *peerPaymentAccountResolutionController;
  void *v47;
  void *v48;
  PKAMPEnrollmentManager *v49;
  PKAMPEnrollmentManager *AMPEnrollmentManager;
  void *v51;
  uint64_t v52;
  void *v53;
  void *v54;
  double v55;
  _BOOL4 v56;
  NSObject *v57;
  PKPaymentDefaultDataProvider *v58;
  PKPaymentDefaultDataProvider *paymentDataProvider;
  PKContactAvatarManager *v60;
  void *v61;
  PKContactAvatarManager *v62;
  PKContactAvatarManager *avatarManager;
  PKLinkedApplication *v64;
  PKLinkedApplication *linkedApplication;
  PKLinkedApplication *v66;
  void *v67;
  void *v68;
  NSString *lastReportedDiscoveryIdentifier;
  PKPaymentPass *pass;
  void *v71;
  void *v72;
  void *v73;
  BOOL v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  id v79;
  id v80;
  id v81;
  id *v82;
  uint64_t v83;
  PKPaymentPass *v84;
  void *v85;
  NSObject *v86;
  void *v87;
  _QWORD v88[4];
  id v89;
  _QWORD v90[4];
  id v91;
  uint64_t state64[2];
  _QWORD aBlock[4];
  id v94;
  _QWORD block[4];
  id v96;
  _BYTE location[12];
  __int16 v98;
  void *v99;
  __int16 v100;
  void *v101;
  uint64_t v102;

  v102 = *MEMORY[0x1E0C80C00];
  -[PKGroup passAtIndex:](self->_group, "passAtIndex:", -[PKGroup frontmostPassIndex](self->_group, "frontmostPassIndex"));
  v3 = (PKPaymentPass *)objc_claimAutoreleasedReturnValue();
  if (self->_pass != v3)
  {
    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKPeerPaymentWebService targetDevice](self->_peerPaymentWebService, "targetDevice");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v83 = *MEMORY[0x1E0D6B2B8];
    objc_msgSend(v4, "removeObserver:name:object:", self);

    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = *MEMORY[0x1E0D68290];
    objc_msgSend(v6, "removeObserver:name:object:", self, *MEMORY[0x1E0D68290], 0);

    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = *MEMORY[0x1E0C99720];
    objc_msgSend(v8, "removeObserver:name:object:", self, *MEMORY[0x1E0C99720], 0);

    objc_msgSend(MEMORY[0x1E0D66D00], "sharedInstance");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "removeObserver:", self);

    -[PKAccountService unregisterObserver:](self->_accountService, "unregisterObserver:", self);
    -[PKLinkedApplication removeObserver:](self->_linkedApplication, "removeObserver:", self);
    objc_msgSend(MEMORY[0x1E0D67470], "sharedInstance");
    v86 = objc_claimAutoreleasedReturnValue();
    -[NSObject unregisterObserver:](v86, "unregisterObserver:", self);
    -[PKPaymentPass devicePrimaryPaymentApplication](v3, "devicePrimaryPaymentApplication");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = objc_msgSend(v11, "state");
    -[PKPaymentPass devicePrimaryPaymentApplication](self->_pass, "devicePrimaryPaymentApplication");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = objc_msgSend(v13, "state");

    if (v12 != v14)
    {
      objc_initWeak((id *)location, self);
      block[0] = MEMORY[0x1E0C809B0];
      block[1] = 3221225472;
      block[2] = __55__PKDashboardPaymentPassDataSource_reloadFrontmostPass__block_invoke;
      block[3] = &unk_1E3E61310;
      objc_copyWeak(&v96, (id *)location);
      dispatch_async(MEMORY[0x1E0C80D38], block);
      objc_destroyWeak(&v96);
      objc_destroyWeak((id *)location);
    }
    if (-[PKDashboardPaymentPassDataSource hasAssociatedPaymentRewardsBalance](self, "hasAssociatedPaymentRewardsBalance"))
    {
      -[PKDashboardPaymentPassDataSource resetAssociatedPaymentRewardsBalanceIfNeeded](self, "resetAssociatedPaymentRewardsBalanceIfNeeded");
    }
    p_pass = &self->_pass;
    v84 = self->_pass;
    objc_storeStrong((id *)&self->_pass, v3);
    -[PKPaymentPass uniqueID](self->_pass, "uniqueID");
    v87 = (void *)objc_claimAutoreleasedReturnValue();
    PKLogFacilityTypeGetObject();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
    {
      -[PKDashboardPaymentPassDataSource _passFeature](self, "_passFeature");
      PKFeatureIdentifierToString();
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)location = 134218498;
      *(_QWORD *)&location[4] = self;
      v98 = 2114;
      v99 = v87;
      v100 = 2114;
      v101 = v17;
      _os_log_impl(&dword_19D178000, v16, OS_LOG_TYPE_DEFAULT, "Dashboard loading (%p): for %{public}@, pass feature %{public}@", location, 0x20u);

    }
    -[PKGroup associatedAccountForPassUniqueID:](self->_group, "associatedAccountForPassUniqueID:", v87);
    v85 = (void *)objc_claimAutoreleasedReturnValue();
    if (v85)
      -[PKDashboardPaymentPassDataSource reloadAccountWithNewAccount:](self, "reloadAccountWithNewAccount:", v85);
    if (-[PKPaymentPass isStoredValuePass](*p_pass, "isStoredValuePass"))
    {
      self->_productsLoaded = 0;
      objc_initWeak((id *)location, self);
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 3221225472;
      aBlock[2] = __55__PKDashboardPaymentPassDataSource_reloadFrontmostPass__block_invoke_241;
      aBlock[3] = &unk_1E3E62660;
      v82 = &v94;
      objc_copyWeak(&v94, (id *)location);
      v18 = _Block_copy(aBlock);
      v19 = (const char *)*MEMORY[0x1E0D6A618];
      v20 = MEMORY[0x1E0C80D38];
      v21 = MEMORY[0x1E0C80D38];
      LODWORD(v19) = notify_register_dispatch(v19, &self->_sessionActiveToken, v20, v18);

      sessionActiveToken = self->_sessionActiveToken;
      if ((_DWORD)v19)
      {
        if (sessionActiveToken != -1)
        {
          notify_cancel(sessionActiveToken);
          self->_sessionActiveToken = -1;
        }
      }
      else if (sessionActiveToken != -1)
      {
        state64[0] = 0;
        notify_get_state(sessionActiveToken, state64);
        self->_sessionActive = state64[0] != 0;
      }

      objc_destroyWeak(&v94);
      objc_destroyWeak((id *)location);
    }
    else
    {
      self->_isAccessPass = -[PKPaymentPass isAccessPass](self->_pass, "isAccessPass");
      self->_productsLoaded = 1;
    }
    self->_hasUpdatedAccountRewardsDataIfNecessary = 0;
    if (-[PKPaymentPass hasAssociatedPeerPaymentAccount](self->_pass, "hasAssociatedPeerPaymentAccount", v82))
    {
      self->_transactionGrouping = 2;
      self->_scheduledPaymentsLoaded = 1;
      self->_creditRecoveryPaymentPlansLoaded = 1;
      *(_WORD *)&self->_accountUsersLoaded = 257;
      self->_physicalCardsLoaded = 1;
      -[PKDashboardPaymentPassDataSource setFinancingPlansLoaded:](self, "setFinancingPlansLoaded:", 1);
      v24 = objc_alloc_init(PKNearbyPeerPaymentViewProvider);
      -[PKDashboardPaymentPassDataSource setNearbyPeerPaymentViewProvider:](self, "setNearbyPeerPaymentViewProvider:", v24);

      -[NSObject account](v86, "account");
      v25 = (PKPeerPaymentAccount *)objc_claimAutoreleasedReturnValue();
      peerPaymentAccount = self->_peerPaymentAccount;
      self->_peerPaymentAccount = v25;

      -[PKPeerPaymentAccount associatedPassUniqueID](self->_peerPaymentAccount, "associatedPassUniqueID");
      v27 = (id)objc_claimAutoreleasedReturnValue();
      v28 = v87;
      v29 = v28;
      if (v27 == v28)
      {

        goto LABEL_31;
      }
      if (v28 && v27)
      {
        v30 = objc_msgSend(v27, "isEqualToString:", v28);

        if (!v30)
          goto LABEL_41;
LABEL_31:
        objc_msgSend(MEMORY[0x1E0D67480], "sharedService");
        v39 = (PKPeerPaymentWebService *)objc_claimAutoreleasedReturnValue();
        peerPaymentWebService = self->_peerPaymentWebService;
        self->_peerPaymentWebService = v39;

        v41 = [PKPeerPaymentAccountResolutionController alloc];
        v42 = self->_peerPaymentAccount;
        v43 = self->_peerPaymentWebService;
        v44 = objc_alloc_init(MEMORY[0x1E0D66F18]);
        v45 = -[PKPeerPaymentAccountResolutionController initWithAccount:webService:context:delegate:passLibraryDataProvider:](v41, "initWithAccount:webService:context:delegate:passLibraryDataProvider:", v42, v43, 0, 0, v44);
        peerPaymentAccountResolutionController = self->_peerPaymentAccountResolutionController;
        self->_peerPaymentAccountResolutionController = v45;

        -[PKPeerPaymentAccountResolutionController setDelegate:](self->_peerPaymentAccountResolutionController, "setDelegate:", self);
        objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
        v47 = (void *)objc_claimAutoreleasedReturnValue();
        -[PKPeerPaymentWebService targetDevice](self->_peerPaymentWebService, "targetDevice");
        v48 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v47, "addObserver:selector:name:object:", self, sel__peerPaymentAccountChanged_, v83, v48);

        -[NSObject registerObserver:](v86, "registerObserver:", self);
        objc_msgSend(MEMORY[0x1E0D66800], "sharedManager");
        v49 = (PKAMPEnrollmentManager *)objc_claimAutoreleasedReturnValue();
        AMPEnrollmentManager = self->_AMPEnrollmentManager;
        self->_AMPEnrollmentManager = v49;

        if (-[PKDashboardPaymentPassDataSource _passAvailableForAMPEnrollment](self, "_passAvailableForAMPEnrollment"))
          -[PKDashboardPaymentPassDataSource _fetchAMPEnrollmentEligibility](self, "_fetchAMPEnrollmentEligibility");
        objc_initWeak((id *)location, self);
        objc_msgSend(MEMORY[0x1E0D668E8], "sharedInstance");
        v51 = (void *)objc_claimAutoreleasedReturnValue();
        v52 = MEMORY[0x1E0C809B0];
        v90[0] = MEMORY[0x1E0C809B0];
        v90[1] = 3221225472;
        v90[2] = __55__PKDashboardPaymentPassDataSource_reloadFrontmostPass__block_invoke_2;
        v90[3] = &unk_1E3E696C0;
        objc_copyWeak(&v91, (id *)location);
        objc_msgSend(v51, "accountsWithPassLocallyProvisionedWithCompletion:", v90);

        if (-[PKPeerPaymentAccount isAccountStateDirty](self->_peerPaymentAccount, "isAccountStateDirty"))
        {
          objc_msgSend(MEMORY[0x1E0C99D68], "date");
          v53 = (void *)objc_claimAutoreleasedReturnValue();
          -[PKPeerPaymentAccount lastUpdated](self->_peerPaymentAccount, "lastUpdated");
          v54 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v53, "timeIntervalSinceDate:", v54);
          v56 = v55 > 300.0;

          if (v56)
          {
            PKLogFacilityTypeGetObject();
            v57 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v57, OS_LOG_TYPE_DEFAULT))
            {
              LOWORD(state64[0]) = 0;
              _os_log_impl(&dword_19D178000, v57, OS_LOG_TYPE_DEFAULT, "Updating peer payment account because dirty outdated", (uint8_t *)state64, 2u);
            }

            v88[0] = v52;
            v88[1] = 3221225472;
            v88[2] = __55__PKDashboardPaymentPassDataSource_reloadFrontmostPass__block_invoke_253;
            v88[3] = &unk_1E3E728E0;
            objc_copyWeak(&v89, (id *)location);
            -[NSObject updateAccountWithCompletion:](v86, "updateAccountWithCompletion:", v88);
            objc_destroyWeak(&v89);
          }
        }
        objc_destroyWeak(&v91);
        objc_destroyWeak((id *)location);
        goto LABEL_41;
      }

    }
    else
    {
      -[PKPaymentPass associatedAccountServiceAccountIdentifier](*p_pass, "associatedAccountServiceAccountIdentifier");
      v31 = (void *)objc_claimAutoreleasedReturnValue();

      if (v31)
      {
        objc_msgSend(MEMORY[0x1E0D67470], "sharedInstance");
        v32 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v32, "account");
        v33 = (PKPeerPaymentAccount *)objc_claimAutoreleasedReturnValue();
        v34 = self->_peerPaymentAccount;
        self->_peerPaymentAccount = v33;

        objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
        v35 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v35, "addObserver:selector:name:object:", self, sel_reloadAccount, v7, 0);

        objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
        v36 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v36, "addObserver:selector:name:object:", self, sel__localeDidChangeNotification_, v9, 0);

        objc_msgSend(MEMORY[0x1E0D668E8], "sharedInstance");
        v37 = (PKAccountService *)objc_claimAutoreleasedReturnValue();
        accountService = self->_accountService;
        self->_accountService = v37;

        -[PKAccountService registerObserver:](self->_accountService, "registerObserver:", self);
        if (-[PKDashboardPaymentPassDataSource _isCreditPass](self, "_isCreditPass"))
        {
          self->_transactionGrouping = 2;
        }
        else
        {
          self->_scheduledPaymentsLoaded = 1;
          *(_DWORD *)&self->_familyCollectionLoaded = 16843009;
        }
      }
      else
      {
        self->_scheduledPaymentsLoaded = 1;
        self->_creditRecoveryPaymentPlansLoaded = 1;
        *(_DWORD *)&self->_familyCollectionLoaded = 16843009;
        -[PKDashboardPaymentPassDataSource setFinancingPlansLoaded:](self, "setFinancingPlansLoaded:", 1);
      }
    }
LABEL_41:
    v58 = (PKPaymentDefaultDataProvider *)objc_alloc_init(MEMORY[0x1E0D67100]);
    paymentDataProvider = self->_paymentDataProvider;
    self->_paymentDataProvider = v58;

    -[PKPaymentDefaultDataProvider addDelegate:](self->_paymentDataProvider, "addDelegate:", self);
    v60 = [PKContactAvatarManager alloc];
    -[PKDashboardPaymentPassDataSource _contactResolver](self, "_contactResolver");
    v61 = (void *)objc_claimAutoreleasedReturnValue();
    v62 = -[PKContactAvatarManager initWithContactResolver:paymentDataProvider:](v60, "initWithContactResolver:paymentDataProvider:", v61, self->_paymentDataProvider);
    avatarManager = self->_avatarManager;
    self->_avatarManager = v62;

    -[PKDashboardPaymentPassDataSource _updateTransactionSourceCollection](self, "_updateTransactionSourceCollection");
    if (-[PKPaymentPass supportsBarcodePayment](self->_pass, "supportsBarcodePayment"))
    {
      v64 = -[PKLinkedApplication initWithPass:]([PKLinkedApplication alloc], "initWithPass:", self->_pass);
      linkedApplication = self->_linkedApplication;
      self->_linkedApplication = v64;

      -[PKLinkedApplication addObserver:](self->_linkedApplication, "addObserver:", self);
      -[PKLinkedApplication reloadApplicationStateIfNecessary](self->_linkedApplication, "reloadApplicationStateIfNecessary");
    }
    else
    {
      v66 = self->_linkedApplication;
      self->_linkedApplication = 0;

    }
    -[PKDashboardPaymentPassDataSource AMPEnagementPlacementForCurrentlyDisplayedPass](self, "AMPEnagementPlacementForCurrentlyDisplayedPass");
    v67 = (void *)objc_claimAutoreleasedReturnValue();

    if (v67)
    {
      objc_msgSend(MEMORY[0x1E0D66D00], "sharedInstance");
      v68 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v68, "addObserver:", self);

    }
    lastReportedDiscoveryIdentifier = self->_lastReportedDiscoveryIdentifier;
    self->_lastReportedDiscoveryIdentifier = 0;

    pass = self->_pass;
    objc_msgSend(MEMORY[0x1E0D673C8], "sharedService");
    v71 = (void *)objc_claimAutoreleasedReturnValue();
    self->_shouldDisplayDeviceAssessmentEducation = -[PKPaymentPass shouldDisplayDeviceAssessmentEducationAccordingToService:](pass, "shouldDisplayDeviceAssessmentEducationAccordingToService:", v71);

    -[PKSecureElementPassContactIssuerHelper setPass:](self->_contactIssuerHelper, "setPass:", self->_pass);
    if (-[PKDashboardPaymentPassDataSource isBankConnectSupported](self, "isBankConnectSupported"))
    {
      -[PKPaymentPass primaryAccountIdentifier](*p_pass, "primaryAccountIdentifier");
      v72 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKPaymentPass primaryAccountIdentifier](v84, "primaryAccountIdentifier");
      v73 = (void *)objc_claimAutoreleasedReturnValue();
      v74 = v72 == v73;

      if (!v74)
      {
        v75 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CADCE8]), "initWithPrimaryAccountIdentifier:", v72);
        -[PKDashboardPaymentPassDataSource setBankConnectAccountsProvider:](self, "setBankConnectAccountsProvider:", v75);

        -[PKDashboardPaymentPassDataSource bankConnectAccountsProvider](self, "bankConnectAccountsProvider");
        v76 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v76, "setDelegate:", self);

        v77 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CADD18]), "initWithPrimaryAccountIdentifier:", v72);
        -[PKDashboardPaymentPassDataSource setBankConnectTransactionsProvider:](self, "setBankConnectTransactionsProvider:", v77);

        -[PKDashboardPaymentPassDataSource bankConnectTransactionsProvider](self, "bankConnectTransactionsProvider");
        v78 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v78, "setDelegate:", self);

        v79 = objc_alloc_init(MEMORY[0x1E0CADD00]);
        -[PKDashboardPaymentPassDataSource setBankConnectInstitutionMatcher:](self, "setBankConnectInstitutionMatcher:", v79);

        v80 = objc_alloc_init(getFKBankConnectImageProviderClass_0());
        -[PKDashboardPaymentPassDataSource setBankConnectImageProvider:](self, "setBankConnectImageProvider:", v80);

        v81 = objc_alloc_init(MEMORY[0x1E0CADD10]);
        -[PKDashboardPaymentPassDataSource setBankConnectMessagesManager:](self, "setBankConnectMessagesManager:", v81);

      }
    }
    if ((-[PKPaymentPass isHomeKeyPass](*p_pass, "isHomeKeyPass") & 1) == 0)
      self->_homeKitRestrictedGuestAccessStateLoaded = 1;

    v23 = v86;
    goto LABEL_53;
  }
  PKLogFacilityTypeGetObject();
  v23 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)location = 0;
    _os_log_impl(&dword_19D178000, v23, OS_LOG_TYPE_DEFAULT, "Skipping reload of pass...", location, 2u);
  }
LABEL_53:

}

void __55__PKDashboardPaymentPassDataSource_reloadFrontmostPass__block_invoke(uint64_t a1)
{
  id *WeakRetained;
  id v2;
  id *v3;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    v2 = objc_loadWeakRetained(WeakRetained + 5);
    objc_msgSend(v2, "reloadNavigationBarAnimated:", 1);

    WeakRetained = v3;
  }

}

void __55__PKDashboardPaymentPassDataSource_reloadFrontmostPass__block_invoke_241(uint64_t a1, int a2)
{
  _BYTE *WeakRetained;
  uint64_t state64;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    state64 = 0;
    notify_get_state(a2, &state64);
    if ((state64 != 0) == (WeakRetained[288] == 0))
    {
      WeakRetained[288] = state64 != 0;
      objc_msgSend(WeakRetained, "reloadMessages");
    }
  }

}

void __55__PKDashboardPaymentPassDataSource_reloadFrontmostPass__block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  _BYTE *WeakRetained;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v12 = 0u;
    v13 = 0u;
    v10 = 0u;
    v11 = 0u;
    v5 = v3;
    v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)v11;
      while (2)
      {
        for (i = 0; i != v7; ++i)
        {
          if (*(_QWORD *)v11 != v8)
            objc_enumerationMutation(v5);
          if (objc_msgSend(*(id *)(*((_QWORD *)&v10 + 1) + 8 * i), "feature", (_QWORD)v10) == 2)
          {
            WeakRetained[664] = 1;
            goto LABEL_12;
          }
        }
        v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
        if (v7)
          continue;
        break;
      }
    }
LABEL_12:

  }
}

void __55__PKDashboardPaymentPassDataSource_reloadFrontmostPass__block_invoke_253(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  _QWORD v5[4];
  id v6;
  id v7;

  v3 = a2;
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 3221225472;
  v5[2] = __55__PKDashboardPaymentPassDataSource_reloadFrontmostPass__block_invoke_2_254;
  v5[3] = &unk_1E3E61B68;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  v6 = v3;
  v4 = v3;
  dispatch_async(MEMORY[0x1E0C80D38], v5);

  objc_destroyWeak(&v7);
}

void __55__PKDashboardPaymentPassDataSource_reloadFrontmostPass__block_invoke_2_254(uint64_t a1)
{
  NSObject *v2;
  id WeakRetained;
  _BYTE *v4;
  uint8_t v5[16];

  PKLogFacilityTypeGetObject();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_19D178000, v2, OS_LOG_TYPE_DEFAULT, "Updated peer payment account", v5, 2u);
  }

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v4 = WeakRetained;
  if (WeakRetained)
  {
    objc_storeStrong((id *)WeakRetained + 23, *(id *)(a1 + 32));
    v4[235] = 1;
    objc_msgSend(v4, "reloadAccount");
  }

}

- (unint64_t)_passFeature
{
  unint64_t result;

  result = -[PKAccount feature](self->_account, "feature");
  if (!result)
  {
    result = -[PKPaymentPass associatedAccountFeatureIdentifier](self->_pass, "associatedAccountFeatureIdentifier");
    if (!result)
      return -[PKPaymentPass hasAssociatedPeerPaymentAccount](self->_pass, "hasAssociatedPeerPaymentAccount");
  }
  return result;
}

- (void)dealloc
{
  int sessionActiveToken;
  void *v4;
  void *v5;
  void *v6;
  NSObject *timerTransactions;
  uint64_t v8;
  void *v9;
  objc_super v10;

  -[PKSecureElement unregisterObserver:](self->_secureElement, "unregisterObserver:", self);
  sessionActiveToken = self->_sessionActiveToken;
  if (sessionActiveToken != -1)
  {
    notify_cancel(sessionActiveToken);
    self->_sessionActiveToken = -1;
  }
  +[PKUIForegroundActiveArbiter sharedInstance](PKUIForegroundActiveArbiter, "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "unregisterObserver:", self);

  objc_msgSend(MEMORY[0x1E0D66D00], "sharedInstance");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "removeObserver:", self);

  -[PKSpendingSummaryFetcher unregisterObserver:](self->_summaryFetcher, "unregisterObserver:", self);
  -[PKAccountService unregisterObserver:](self->_accountService, "unregisterObserver:", self);
  objc_msgSend(MEMORY[0x1E0D67470], "sharedInstance");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "unregisterObserver:", self);

  timerTransactions = self->_timerTransactions;
  if (timerTransactions)
    dispatch_source_cancel(timerTransactions);
  -[PKLinkedApplication removeObserver:](self->_linkedApplication, "removeObserver:", self);
  v8 = *MEMORY[0x1E0D698D0];
  objc_msgSend(MEMORY[0x1E0D66A58], "reporterForSubject:", *MEMORY[0x1E0D698D0]);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if (v9)
    objc_msgSend(MEMORY[0x1E0D66A58], "endSubjectReporting:", v8);
  v10.receiver = self;
  v10.super_class = (Class)PKDashboardPaymentPassDataSource;
  -[PKDashboardPaymentPassDataSource dealloc](&v10, sel_dealloc);
}

- (void)setDataSourceDelegate:(id)a3
{
  objc_storeWeak((id *)&self->_delegate, a3);
}

- (void)executeAfterContentIsLoaded:(id)a3
{
  void (**v4)(_QWORD);
  NSMutableArray *executionBlocksContentIsLoaded;
  void *v6;
  void (**aBlock)(_QWORD);

  v4 = (void (**)(_QWORD))a3;
  if (v4)
  {
    aBlock = v4;
    if (self->_allContentIsLoaded)
    {
      v4[2](v4);
    }
    else
    {
      executionBlocksContentIsLoaded = self->_executionBlocksContentIsLoaded;
      v6 = _Block_copy(v4);
      -[NSMutableArray addObject:](executionBlocksContentIsLoaded, "addObject:", v6);

    }
    v4 = aBlock;
  }

}

- (NSArray)currentMonthTransactions
{
  return self->_currentMonthTransactions;
}

- (NSArray)pendingPayments
{
  return self->_pendingPayments;
}

- (NSArray)upcomingScheduledPayments
{
  return self->_upcomingScheduledPayments;
}

- (BOOL)_creditAccountItemTypeEnabled:(unint64_t)a3
{
  BOOL result;

  switch(a3)
  {
    case 0uLL:
    case 3uLL:
      return -[PKAccount accessLevel](self->_account, "accessLevel") == 1;
    case 1uLL:
    case 2uLL:
      return -[PKAccount accessLevel](self->_account, "accessLevel") == 2;
    case 4uLL:
      if (-[PKAccount accessLevel](self->_account, "accessLevel") != 1)
        goto LABEL_9;
      result = -[PKAccount supportsSchedulePayment](self->_account, "supportsSchedulePayment");
      break;
    default:
LABEL_9:
      result = 0;
      break;
  }
  return result;
}

- (int64_t)_numberOfBalanceDashboardItems
{
  uint64_t v3;
  int64_t v4;

  if (-[PKDashboardPaymentPassDataSource _isCreditPass](self, "_isCreditPass"))
  {
    v3 = 0;
    v4 = 0;
    do
      v4 += -[PKDashboardPaymentPassDataSource _creditAccountItemTypeEnabled:](self, "_creditAccountItemTypeEnabled:", v3++);
    while (v3 != 5);
    return v4;
  }
  if (-[PKDashboardPaymentPassDataSource _isPayLaterPass](self, "_isPayLaterPass"))
    return -[PKDashboardPaymentPassDataSource numberOfPayLaterBalanceDashboardItems](self, "numberOfPayLaterBalanceDashboardItems");
  if (!-[PKDashboardPaymentPassDataSource _isAppleBalancePass](self, "_isAppleBalancePass"))
  {
    if (-[PKDashboardPaymentPassDataSource _isPeerPaymentPass](self, "_isPeerPaymentPass"))
      return -[PKDashboardPaymentPassDataSource canDisplayPeerPaymentBalanceModule](self, "canDisplayPeerPaymentBalanceModule");
    else
      return 0;
  }
  return -[PKDashboardPaymentPassDataSource numberOfAppleBalanceBalanceDashboardItems](self, "numberOfAppleBalanceBalanceDashboardItems");
}

- (unint64_t)_creditAccountItemTypeForItemIndex:(unint64_t)a3
{
  unint64_t v5;
  uint64_t v6;

  v5 = 0;
  v6 = 0;
  do
  {
    if (-[PKDashboardPaymentPassDataSource _creditAccountItemTypeEnabled:](self, "_creditAccountItemTypeEnabled:", v5))
    {
      if (v6 == a3)
        return v5;
      ++v6;
    }
    ++v5;
  }
  while (v5 != 5);
  return 0x7FFFFFFFFFFFFFFFLL;
}

- (id)itemAtIndexPath:(id)a3
{
  id v4;
  PKDashboardPassGroupItem *v5;

  v4 = a3;
  -[PKDashboardPaymentPassDataSource _dataSourceIndicesForIndexPath:](self, "_dataSourceIndicesForIndexPath:", v4);
  v5 = -[PKDashboardPassGroupItem initWithGroupView:]([PKDashboardPassGroupItem alloc], "initWithGroupView:", self->_groupView);

  return v5;
}

- (id)paymentTransactionItemForTransaction:(id)a3
{
  id v4;
  PKDashboardPaymentTransactionItem *v5;
  PKTransactionSourceCollection *transactionSourceCollection;
  PKFamilyMemberCollection *familyCollection;
  PKAccount *account;
  PKAccountUserCollection *accountUserCollection;
  void *v10;
  void *v11;
  PKDashboardPaymentTransactionItem *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;

  v4 = a3;
  v5 = [PKDashboardPaymentTransactionItem alloc];
  transactionSourceCollection = self->_transactionSourceCollection;
  familyCollection = self->_familyCollection;
  account = self->_account;
  accountUserCollection = self->_accountUserCollection;
  -[PKDashboardPaymentPassDataSource bankConnectLinkedAccountData](self, "bankConnectLinkedAccountData");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "institution");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = -[PKDashboardPaymentTransactionItem initWithTransactionSourceCollection:familyCollection:transaction:account:accountUserCollection:bankConnectInstitution:](v5, "initWithTransactionSourceCollection:familyCollection:transaction:account:accountUserCollection:bankConnectInstitution:", transactionSourceCollection, familyCollection, v4, account, accountUserCollection, v11);

  -[PKDashboardPaymentTransactionItem setPhysicalCards:](v12, "setPhysicalCards:", self->_physicalCards);
  objc_msgSend(v4, "secondaryFundingSourceFPANIdentifier");
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  if (v13)
  {
    -[NSMutableDictionary objectForKey:](self->_sourcesPerFundingSourceIdentifier, "objectForKey:", v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v14)
    {
      objc_msgSend(MEMORY[0x1E0D66F08], "sharedInstance");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "passWithFPANIdentifier:", v13);
      v16 = (void *)objc_claimAutoreleasedReturnValue();

      if (v16)
      {
        v17 = objc_msgSend(objc_alloc(MEMORY[0x1E0D67730]), "initWithPaymentPass:", v16);
      }
      else
      {
        objc_msgSend(MEMORY[0x1E0C99E38], "null");
        v17 = objc_claimAutoreleasedReturnValue();
      }
      v14 = (void *)v17;
      -[NSMutableDictionary setObject:forKey:](self->_sourcesPerFundingSourceIdentifier, "setObject:forKey:", v17, v13);

    }
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
      -[PKDashboardPaymentTransactionItem setSecondaryTransactionSource:](v12, "setSecondaryTransactionSource:", v14);

  }
  return v12;
}

- (id)paymentTransactionItemForPendingRequest:(id)a3
{
  objc_class *v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  v4 = (objc_class *)MEMORY[0x1E0D67370];
  v5 = a3;
  v6 = objc_alloc_init(v4);
  objc_msgSend(v5, "requestToken");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setIdentifier:", v7);

  objc_msgSend(v5, "currencyAmount");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "amount");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setAmount:", v9);

  objc_msgSend(v5, "currencyAmount");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "currency");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setCurrencyCode:", v11);

  objc_msgSend(v6, "setTransactionType:", 3);
  objc_msgSend(v6, "setPeerPaymentType:", 3);
  objc_msgSend(v6, "setTransactionStatus:", 0);
  objc_msgSend(v5, "requesteeAddress");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setPeerPaymentCounterpartHandle:", v12);

  objc_msgSend(v5, "memo");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setPeerPaymentMemo:", v13);

  objc_msgSend(v5, "requestDate");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setTransactionDate:", v14);

  objc_msgSend(v5, "expiryDate");
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "setExpirationDate:", v15);
  objc_msgSend(v6, "setAccountType:", 1);
  objc_msgSend(v6, "setOriginatedByDevice:", 1);
  objc_msgSend(v6, "setHasNotificationServiceData:", 1);
  objc_msgSend(v6, "setProcessedForLocation:", 1);
  -[PKDashboardPaymentPassDataSource paymentTransactionItemForTransaction:](self, "paymentTransactionItemForTransaction:", v6);
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  return v16;
}

- (unint64_t)firstSectionIndexForSectionIdentifier:(unint64_t)a3
{
  unint64_t v5;
  uint64_t i;
  NSMutableDictionary *dynamicSections;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;

  if (!a3)
    return 0;
  v5 = 0;
  for (i = 0; i != a3; ++i)
  {
    dynamicSections = self->_dynamicSections;
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", i);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSMutableDictionary objectForKeyedSubscript:](dynamicSections, "objectForKeyedSubscript:", v8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = v9;
    if (!v9)
      v9 = &unk_1E3FAD960;
    v11 = objc_msgSend(v9, "unsignedIntegerValue");

    v5 += v11;
  }
  return v5;
}

- ($F99D9A4FB75BC57F3386B8DC8EE08D7A)_dataSourceIndicesForIndexSection:(SEL)a3
{
  $F99D9A4FB75BC57F3386B8DC8EE08D7A *result;
  id v6;

  objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", PKDataSourceInvalidItemSentinel, a4);
  v6 = (id)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPaymentPassDataSource _dataSourceIndicesForIndexPath:](self, "_dataSourceIndicesForIndexPath:", v6);

  return result;
}

- ($F99D9A4FB75BC57F3386B8DC8EE08D7A)_dataSourceIndicesForIndexPath:(SEL)a3
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  NSMutableDictionary *dynamicSections;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  $F99D9A4FB75BC57F3386B8DC8EE08D7A *result;
  id v16;

  v16 = a4;
  v6 = objc_msgSend(v16, "section");
  v7 = 0;
  v8 = -1;
  do
  {
    v9 = v7;
    ++v8;
    dynamicSections = self->_dynamicSections;
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", v8);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSMutableDictionary objectForKeyedSubscript:](dynamicSections, "objectForKeyedSubscript:", v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = v12;
    if (!v12)
      v12 = &unk_1E3FAD960;
    v14 = objc_msgSend(v12, "unsignedIntegerValue");

    v7 = v14 + v9;
  }
  while (v14 + v9 <= v6);
  retstr->var0 = v8;
  retstr->var1 = v6 - v9;
  retstr->var2 = 0;
  retstr->var2 = objc_msgSend(v16, "item");

  return result;
}

- (unint64_t)numberOfItemsInSection:(unint64_t)a3
{
  -[PKDashboardPaymentPassDataSource _dataSourceIndicesForIndexSection:](self, "_dataSourceIndicesForIndexSection:", a3);
  return 1;
}

- (unint64_t)numberOfSections
{
  NSMutableDictionary *dynamicSections;
  unint64_t v3;
  _QWORD v5[6];
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;

  v6 = 0;
  v7 = &v6;
  v8 = 0x2020000000;
  v9 = 0;
  dynamicSections = self->_dynamicSections;
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 3221225472;
  v5[2] = __52__PKDashboardPaymentPassDataSource_numberOfSections__block_invoke;
  v5[3] = &unk_1E3E72908;
  v5[4] = self;
  v5[5] = &v6;
  -[NSMutableDictionary enumerateKeysAndObjectsUsingBlock:](dynamicSections, "enumerateKeysAndObjectsUsingBlock:", v5);
  v3 = v7[3] + 18;
  _Block_object_dispose(&v6, 8);
  return v3;
}

uint64_t __52__PKDashboardPaymentPassDataSource_numberOfSections__block_invoke(uint64_t result, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;

  v3 = result;
  if (*(_BYTE *)(*(_QWORD *)(result + 32) + 739))
  {
    result = objc_msgSend(a3, "integerValue");
    v4 = result - 1;
  }
  else
  {
    v4 = -1;
  }
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v3 + 40) + 8) + 24) += v4;
  return result;
}

- (unint64_t)transactionsCount
{
  return -[NSArray count](self->_transactions, "count");
}

- (id)titleForSection:(unint64_t)a3
{
  void *v3;
  void *v5;
  void *v6;
  void *v7;
  NSArray *tileGroups;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  BOOL v17;
  __CFString *v18;
  void *v19;
  BOOL v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  const __CFString *v26;
  void *v27;
  _BOOL4 v28;
  NSDateFormatter *formatterYear;
  void *v30;
  void *v31;
  void *v32;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t i;
  void *v38;
  __CFString *v39;
  uint64_t v40;
  void *v41;
  void *v42;
  void *v43;
  id v44;
  id obj;
  void *v46;
  void *v47;
  _QWORD v48[4];
  id v49[2];
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  id location;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[128];
  uint64_t v59;

  v59 = *MEMORY[0x1E0C80C00];
  v55 = 0;
  v56 = 0;
  v57 = 0;
  -[PKDashboardPaymentPassDataSource _dataSourceIndicesForIndexSection:](self, "_dataSourceIndicesForIndexSection:", a3);
  objc_initWeak(&location, self);
  v5 = 0;
  v46 = 0;
  v47 = 0;
  v6 = 0;
  v7 = 0;
  switch(v55)
  {
    case 1:
      if (!self->_allContentIsLoaded)
        goto LABEL_57;
      tileGroups = self->_tileGroups;
      if (!tileGroups)
        goto LABEL_57;
      -[NSArray objectAtIndexedSubscript:](tileGroups, "objectAtIndexedSubscript:", v56);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "tiles");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = objc_msgSend(v10, "count");
      v12 = v9;

      if (v11)
      {
        objc_msgSend(v9, "state");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "stateTypeGroup");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "header");
        v5 = (void *)objc_claimAutoreleasedReturnValue();
        goto LABEL_60;
      }
      v6 = 0;
      v46 = 0;
      v47 = 0;
      v5 = 0;
      goto LABEL_62;
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      goto LABEL_72;
    case 10:
      if (!self->_allContentIsLoaded
        || !self->_isShowingPeerPaymentPendingRequests
        || !-[NSArray count](self->_outgoingRequests, "count"))
      {
        goto LABEL_57;
      }
      PKLocalizedPeerPaymentString(CFSTR("PEER_PAYMENT_PENDING_REQUEST_DASHBOARD_HEADER"));
      v15 = objc_claimAutoreleasedReturnValue();
      goto LABEL_55;
    case 11:
      if (!self->_allContentIsLoaded
        || !-[PKDashboardPaymentPassDataSource numberOfUpcomingRecurringPeerPayments](self, "numberOfUpcomingRecurringPeerPayments"))
      {
        goto LABEL_57;
      }
      PKLocalizedPeerPaymentRecurringString(CFSTR("DASHBOARD_UPCOMING_PAYMENTS"));
      v15 = objc_claimAutoreleasedReturnValue();
      goto LABEL_55;
    case 12:
      if (!self->_allContentIsLoaded
        || !-[PKDashboardPaymentPassDataSource transactionsCount](self, "transactionsCount") && !self->_filterType)
      {
        goto LABEL_57;
      }
      if (-[PKDashboardPaymentPassDataSource isBankConnectLinked](self, "isBankConnectLinked"))
      {
        PKLocalizedBankConnectString(CFSTR("BANK_CONNECT_DASHBOARD_TRANSACTIONS_HEADER"));
        v15 = objc_claimAutoreleasedReturnValue();
        goto LABEL_55;
      }
      if (-[PKPaymentPass isIdentityPass](self->_pass, "isIdentityPass"))
      {
        PKLocalizedPaymentString(CFSTR("DASHBOARD_ACTIVITY_HEADER"));
        v15 = objc_claimAutoreleasedReturnValue();
        goto LABEL_55;
      }
      PKLocalizedPaymentString(CFSTR("DASHBOARD_TRANSACTIONS_HEADER"));
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v24 = -[PKAccount feature](self->_account, "feature");
      if (v24 == 2)
      {
        PKLocalizedFeatureString();
        v25 = objc_claimAutoreleasedReturnValue();

        v5 = (void *)v25;
      }
      if (!-[PKDashboardPaymentPassDataSource _canFilterTransactions](self, "_canFilterTransactions"))
        goto LABEL_56;
      if (self->_filterType)
        v26 = CFSTR("line.horizontal.3.decrease.circle.fill");
      else
        v26 = CFSTR("line.horizontal.3.decrease.circle");
      objc_msgSend(MEMORY[0x1E0DC3870], "systemImageNamed:", v26);
      v46 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0DC3658], "labelColor");
      v47 = (void *)objc_claimAutoreleasedReturnValue();
      if (self->_isShowingPeerPaymentPendingRequests)
      {
        if (self->_shouldDisplayDailyCashFilter)
          v27 = &unk_1E3FAE890;
        else
          v27 = &unk_1E3FAE8A8;
      }
      else
      {
        v27 = &unk_1E3FAE8C0;
        if (v24 != 2)
          v27 = 0;
      }
      obj = v27;
      v34 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
      v52 = 0u;
      v53 = 0u;
      v50 = 0u;
      v51 = 0u;
      v35 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v50, v58, 16);
      if (v35)
      {
        v36 = *(_QWORD *)v51;
        do
        {
          for (i = 0; i != v35; ++i)
          {
            if (*(_QWORD *)v51 != v36)
              objc_enumerationMutation(obj);
            v38 = (void *)objc_msgSend(*(id *)(*((_QWORD *)&v50 + 1) + 8 * i), "integerValue");
            v39 = CFSTR("PEER_PAYMENT_TRANSACTION_FILTER_ALL");
            switch((unint64_t)v38)
            {
              case 0uLL:
                goto LABEL_85;
              case 1uLL:
                v39 = CFSTR("PEER_PAYMENT_TRANSACTION_FILTER_DAILY_CASH");
                goto LABEL_85;
              case 2uLL:
                v39 = CFSTR("PEER_PAYMENT_TRANSACTION_FILTER_SENT_OR_RECEIVED");
                goto LABEL_85;
              case 3uLL:
                v39 = CFSTR("PEER_PAYMENT_TRANSACTION_FILTER_TRANSFERS");
                goto LABEL_85;
              case 4uLL:
                v39 = CFSTR("PEER_PAYMENT_TRANSACTION_FILTER_PURCHASES");
LABEL_85:
                PKLocalizedPeerPaymentString(&v39->isa);
                v40 = objc_claimAutoreleasedReturnValue();
                goto LABEL_88;
              case 5uLL:
              case 6uLL:
              case 7uLL:
                PKLocalizedFeatureString();
                v40 = objc_claimAutoreleasedReturnValue();
                goto LABEL_88;
              case 8uLL:
                PKLocalizedNearbyPeerPaymentString(CFSTR("PEER_PAYMENT_TRANSACTION_FILTER_NEARBY"));
                v40 = objc_claimAutoreleasedReturnValue();
LABEL_88:
                v3 = (void *)v40;
                break;
              default:
                break;
            }
            v41 = (void *)MEMORY[0x1E0DC3428];
            v48[0] = MEMORY[0x1E0C809B0];
            v48[1] = 3221225472;
            v48[2] = __52__PKDashboardPaymentPassDataSource_titleForSection___block_invoke;
            v48[3] = &unk_1E3E6B9A8;
            objc_copyWeak(v49, &location);
            v49[1] = v38;
            objc_msgSend(v41, "actionWithTitle:image:identifier:handler:", v3, 0, 0, v48);
            v42 = (void *)objc_claimAutoreleasedReturnValue();
            v43 = v42;
            if ((void *)self->_filterType == v38)
              objc_msgSend(v42, "setState:", 1);
            v44 = **((id **)&unk_1E3E73AD0 + (_QWORD)v38);
            objc_msgSend(v43, "setAccessibilityIdentifier:", v44);

            objc_msgSend(v34, "addObject:", v43);
            objc_destroyWeak(v49);

          }
          v35 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v50, v58, 16);
        }
        while (v35);
      }
      v22 = v34;
      objc_msgSend(MEMORY[0x1E0DC39D0], "menuWithChildren:", v34);
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "setAccessibilityIdentifier:", *MEMORY[0x1E0D67BE8]);
      v11 = 2;
LABEL_63:

      goto LABEL_64;
    case 13:
      if (!self->_allContentIsLoaded)
        goto LABEL_57;
      if (!-[PKDashboardPaymentPassDataSource canDisplayPayLaterUpcomingPayments](self, "canDisplayPayLaterUpcomingPayments"))goto LABEL_57;
      -[PKDashboardPaymentPassDataSource payLaterUpcomingInstallments](self, "payLaterUpcomingInstallments");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v17 = objc_msgSend(v16, "count") == 0;

      if (v17)
        goto LABEL_57;
      v18 = CFSTR("UPCOMING_PAYMENTS_TITLE");
      goto LABEL_54;
    case 14:
      if (!self->_allContentIsLoaded)
        goto LABEL_57;
      if (!-[PKDashboardPaymentPassDataSource canDisplayPayLaterFinancingPlans](self, "canDisplayPayLaterFinancingPlans"))goto LABEL_57;
      -[PKDashboardPaymentPassDataSource financingPlans](self, "financingPlans");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      v20 = objc_msgSend(v19, "count") == 0;

      if (v20)
        goto LABEL_57;
      goto LABEL_53;
    case 15:
      if (!self->_allContentIsLoaded
        || !-[PKDashboardPaymentPassDataSource canDisplayPayLaterFinancingPlans](self, "canDisplayPayLaterFinancingPlans"))
      {
        goto LABEL_57;
      }
      -[PKDashboardPaymentPassDataSource financingPlans](self, "financingPlans");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v21, "count"))
      {

LABEL_57:
        v5 = 0;
        v46 = 0;
        v47 = 0;
        v6 = 0;
LABEL_58:
        v7 = 0;
        goto LABEL_72;
      }
      v28 = -[PKDashboardPaymentPassDataSource completedFinancingPlansCount](self, "completedFinancingPlansCount") > 0;

      if (!v28)
        goto LABEL_57;
LABEL_53:
      v18 = CFSTR("INSTALLMENTS_HEADER_TITLE");
LABEL_54:
      PKLocalizedCocoonString(&v18->isa);
      v15 = objc_claimAutoreleasedReturnValue();
LABEL_55:
      v5 = (void *)v15;
LABEL_56:
      v6 = 0;
      v11 = 0;
      v46 = 0;
      v47 = 0;
LABEL_64:
      if (!v5)
        goto LABEL_58;
      +[PKDashboardHeaderTextItem itemWithHeaderText:](PKDashboardHeaderTextItem, "itemWithHeaderText:", v5);
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      v7 = v32;
      if (v46)
        objc_msgSend(v32, "setActionImage:", v46);
      if (v6)
        objc_msgSend(v7, "setMenu:", v6);
      if (v47)
        objc_msgSend(v7, "setActionColor:", v47);
      objc_msgSend(v7, "setActionStyle:", v11);
LABEL_72:
      objc_destroyWeak(&location);

      return v7;
    case 16:
      if (!self->_allContentIsLoaded || self->_transactionGrouping == 1)
        goto LABEL_57;
      -[NSArray objectAtIndex:](self->_transactionGroups, "objectAtIndex:", v56);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v22, "count"))
      {
        v12 = v22;
        objc_msgSend(v22, "firstObject");
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v23, "group");
        v13 = (void *)objc_claimAutoreleasedReturnValue();

        if (objc_msgSend(v13, "type") == 3)
        {
          PKLocalizedPaymentString(CFSTR("DASHBOARD_ALL_TRANSACTIONS_HEADER"));
          v5 = (void *)objc_claimAutoreleasedReturnValue();
        }
        else
        {
          formatterYear = self->_formatterYear;
          objc_msgSend(v12, "firstObject");
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v14, "group");
          v30 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v30, "startDate");
          v31 = (void *)objc_claimAutoreleasedReturnValue();
          -[NSDateFormatter stringFromDate:](formatterYear, "stringFromDate:", v31);
          v5 = (void *)objc_claimAutoreleasedReturnValue();

LABEL_60:
        }

        v6 = 0;
        v11 = 0;
        v46 = 0;
        v47 = 0;
LABEL_62:
        v22 = v12;
      }
      else
      {
        v6 = 0;
        v11 = 0;
        v46 = 0;
        v47 = 0;
        v5 = 0;
      }
      goto LABEL_63;
    case 17:
      if (!self->_allContentIsLoaded)
        goto LABEL_57;
      -[NSArray objectAtIndex:](self->_auxiliarySectionInfo, "objectAtIndex:", v56);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v22, "title");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v6 = 0;
      v11 = 0;
      v46 = 0;
      v47 = 0;
      goto LABEL_63;
    default:
      v46 = 0;
      v47 = 0;
      v6 = 0;
      v7 = 0;
      goto LABEL_72;
  }
}

void __52__PKDashboardPaymentPassDataSource_titleForSection___block_invoke(uint64_t a1)
{
  id *WeakRetained;
  id v3;
  uint64_t v4;
  void *v5;
  id *v6;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    WeakRetained[82] = *(id *)(a1 + 40);
    v6 = WeakRetained;
    objc_msgSend(WeakRetained, "reloadTransactions");
    objc_msgSend(v6, "reloadTransactionGroups");
    v3 = objc_loadWeakRetained(v6 + 5);
    if (v3)
    {
      v4 = objc_msgSend(v6, "firstSectionIndexForSectionIdentifier:", 12);
      objc_msgSend(MEMORY[0x1E0CB36B8], "indexSetWithIndex:", v4);
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "reloadSections:", v5);

    }
    WeakRetained = v6;
  }

}

- (id)footerTextItemForSection:(unint64_t)a3
{
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  PKAccount *account;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[128];
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v27 = 0;
  v28 = 0;
  v29 = 0;
  -[PKDashboardPaymentPassDataSource _dataSourceIndicesForIndexSection:](self, "_dataSourceIndicesForIndexSection:");
  if (!self->_allContentIsLoaded)
    return 0;
  v5 = 0;
  -[PKDashboardPaymentPassDataSource bankConnectLinkedAccountData](self, "bankConnectLinkedAccountData");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "account");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v7, "balance");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  account = self->_account;
  if (!account)
  {
    if (!-[PKDashboardPaymentPassDataSource _isPeerPaymentPass](self, "_isPeerPaymentPass"))
      goto LABEL_28;
    account = self->_account;
  }
  if (-[PKAccount feature](account, "feature") == 2)
  {
    if (-[PKDashboardPaymentPassDataSource numberOfSections](self, "numberOfSections") - 1 == a3)
    {
      -[PKAccount creditDetails](self->_account, "creditDetails");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "accountSummary");
      v11 = (void *)objc_claimAutoreleasedReturnValue();

      if (objc_msgSend(v11, "requiresDebtCollectionNotices"))
      {
        -[PKAccount feature](self->_account, "feature");
        PKLocalizedFeatureString();
        v12 = objc_claimAutoreleasedReturnValue();

        v5 = (void *)v12;
      }
      v25 = 0u;
      v26 = 0u;
      v23 = 0u;
      v24 = 0u;
      -[PKDashboardPaymentPassDataSource accounts](self, "accounts");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v23, v30, 16);
      if (v14)
      {
        v15 = v14;
        v16 = *(_QWORD *)v24;
        while (2)
        {
          for (i = 0; i != v15; ++i)
          {
            if (*(_QWORD *)v24 != v16)
              objc_enumerationMutation(v13);
            if (objc_msgSend(*(id *)(*((_QWORD *)&v23 + 1) + 8 * i), "type") == 4)
            {

              PKLocalizedFeatureString();
              v13 = (void *)objc_claimAutoreleasedReturnValue();
              if (objc_msgSend(v5, "length"))
              {
                objc_msgSend(v5, "stringByAppendingFormat:", CFSTR("\n\n%@"), v13);
                v20 = (id)objc_claimAutoreleasedReturnValue();
              }
              else
              {
                v20 = v13;
              }
              v21 = v20;

              v5 = v21;
              goto LABEL_25;
            }
          }
          v15 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v23, v30, 16);
          if (v15)
            continue;
          break;
        }
      }
LABEL_25:

      if (objc_msgSend(v5, "length"))
      {
        objc_msgSend(CFSTR("\n"), "stringByAppendingString:", v5);
        v22 = objc_claimAutoreleasedReturnValue();

        +[PKDashboardFooterTextItem itemWithFooterText:](PKDashboardFooterTextItem, "itemWithFooterText:", v22);
        v19 = (void *)objc_claimAutoreleasedReturnValue();

        v5 = (void *)v22;
        goto LABEL_29;
      }

    }
LABEL_28:
    v19 = 0;
    goto LABEL_29;
  }
  if (-[PKAccount feature](self->_account, "feature") != 3)
    goto LABEL_28;
  -[PKDashboardPaymentPassDataSource payLaterFooterTextItemForSection:](self, "payLaterFooterTextItemForSection:", a3);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_29:

  return v19;
}

- (BOOL)isListLayoutForSection:(unint64_t)a3
{
  -[PKDashboardPaymentPassDataSource _dataSourceIndicesForIndexSection:](self, "_dataSourceIndicesForIndexSection:", a3);
  return 0;
}

- (id)_deletablePaymentTransactionForItem:(id)a3
{
  id v3;
  void *v4;
  void *v5;
  id v6;

  v3 = a3;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v3, "transaction");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v4, "isDeletable"))
      v5 = v4;
    else
      v5 = 0;
    v6 = v5;

  }
  else
  {
    v6 = 0;
  }

  return v6;
}

- (BOOL)canDeleteItem:(id)a3
{
  void *v3;
  BOOL v4;

  -[PKDashboardPaymentPassDataSource _deletablePaymentTransactionForItem:](self, "_deletablePaymentTransactionForItem:", a3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3 != 0;

  return v4;
}

- (void)deleteItem:(id)a3 completionHandler:(id)a4
{
  id v6;
  id v7;
  id WeakRetained;
  id v9;
  void *v10;
  _QWORD v11[5];
  id v12;
  id v13;
  id v14;

  v6 = a4;
  v7 = a3;
  WeakRetained = objc_loadWeakRetained((id *)&self->_customDelegate);
  v9 = objc_loadWeakRetained((id *)&self->_delegate);
  -[PKDashboardPaymentPassDataSource _deletablePaymentTransactionForItem:](self, "_deletablePaymentTransactionForItem:", v7);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  if (WeakRetained && v9 && v10)
  {
    v11[0] = MEMORY[0x1E0C809B0];
    v11[1] = 3221225472;
    v11[2] = __65__PKDashboardPaymentPassDataSource_deleteItem_completionHandler___block_invoke;
    v11[3] = &unk_1E3E6CB88;
    v14 = v6;
    v11[4] = self;
    v12 = v10;
    v13 = v9;
    objc_msgSend(WeakRetained, "presentActivityDeletionConfirmationWithCompletion:", v11);

  }
  else if (v6)
  {
    (*((void (**)(id, _QWORD))v6 + 2))(v6, 0);
  }

}

void __65__PKDashboardPaymentPassDataSource_deleteItem_completionHandler___block_invoke(uint64_t a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  _QWORD v12[5];
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;

  if ((a2 & 1) != 0)
  {
    v3 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 112), "limit");
    v4 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 72), "count");
    v5 = *(void **)(*(_QWORD *)(a1 + 32) + 112);
    objc_msgSend(v5, "startDate");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 112), "endDate");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "setLimit:startDate:endDate:", v4 + 1, v6, v7);

    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(void **)(a1 + 40);
    v10 = *(void **)(v8 + 112);
    v12[0] = MEMORY[0x1E0C809B0];
    v12[1] = 3221225472;
    v12[2] = __65__PKDashboardPaymentPassDataSource_deleteItem_completionHandler___block_invoke_2;
    v12[3] = &unk_1E3E72980;
    v12[4] = v8;
    v16 = v3;
    v13 = v9;
    v15 = *(id *)(a1 + 56);
    v17 = v4;
    v14 = *(id *)(a1 + 48);
    objc_msgSend(v10, "reloadTransactionsWithCompletion:", v12);

  }
  else
  {
    v11 = *(_QWORD *)(a1 + 56);
    if (v11)
      (*(void (**)(uint64_t, _QWORD))(v11 + 16))(v11, 0);
  }
}

void __65__PKDashboardPaymentPassDataSource_deleteItem_completionHandler___block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  uint64_t v6;
  id v7;
  _QWORD block[5];
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v3 = a2;
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __65__PKDashboardPaymentPassDataSource_deleteItem_completionHandler___block_invoke_3;
  block[3] = &unk_1E3E72958;
  v13 = *(_QWORD *)(a1 + 64);
  v4 = *(void **)(a1 + 40);
  block[4] = *(_QWORD *)(a1 + 32);
  v9 = v3;
  v10 = v4;
  v5 = *(id *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 72);
  v12 = v5;
  v14 = v6;
  v11 = *(id *)(a1 + 48);
  v7 = v3;
  dispatch_async(MEMORY[0x1E0C80D38], block);

}

void __65__PKDashboardPaymentPassDataSource_deleteItem_completionHandler___block_invoke_3(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  BOOL v25;

  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 112);
  v3 = *(_QWORD *)(a1 + 72);
  objc_msgSend(v2, "startDate");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 112), "endDate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setLimit:startDate:endDate:", v3, v4, v5);

  v6 = objc_msgSend(*(id *)(a1 + 40), "indexOfObject:", *(_QWORD *)(a1 + 48));
  if (v6 == 0x7FFFFFFFFFFFFFFFLL)
  {
    v7 = *(_QWORD *)(a1 + 64);
    if (v7)
      (*(void (**)(uint64_t, _QWORD))(v7 + 16))(v7, 0);
  }
  else
  {
    v8 = v6;
    v9 = objc_msgSend(*(id *)(a1 + 40), "count") == *(_QWORD *)(a1 + 80) + 1;
    v10 = (void *)objc_msgSend(*(id *)(a1 + 40), "mutableCopy");
    objc_msgSend(v10, "removeObjectAtIndex:", v8);
    v11 = *(void **)(a1 + 56);
    v17 = MEMORY[0x1E0C809B0];
    v18 = 3221225472;
    v19 = __65__PKDashboardPaymentPassDataSource_deleteItem_completionHandler___block_invoke_4;
    v20 = &unk_1E3E72930;
    v21 = *(_QWORD *)(a1 + 32);
    v15 = v10;
    v22 = v15;
    v24 = v8;
    v23 = *(id *)(a1 + 56);
    v25 = v9;
    objc_msgSend(v11, "performBatchUpdates:completion:", &v17, 0);
    v12 = *(_QWORD *)(a1 + 64);
    if (v12)
      (*(void (**)(uint64_t, uint64_t))(v12 + 16))(v12, 1);
    v13 = *(void **)(*(_QWORD *)(a1 + 32) + 248);
    objc_msgSend(*(id *)(a1 + 48), "identifier", v15, v17, v18, v19, v20, v21);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "deletePaymentTransactionWithIdentifier:", v14);

  }
}

void __65__PKDashboardPaymentPassDataSource_deleteItem_completionHandler___block_invoke_4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  _QWORD v13[2];

  v13[1] = *MEMORY[0x1E0C80C00];
  v2 = objc_msgSend(*(id *)(a1 + 40), "copy");
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(void **)(v3 + 72);
  *(_QWORD *)(v3 + 72) = v2;

  v5 = objc_msgSend(*(id *)(a1 + 32), "firstSectionIndexForSectionIdentifier:", 12);
  objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", *(_QWORD *)(a1 + 56), v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = *(void **)(a1 + 48);
  v13[0] = v6;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v13, 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "deleteItemsAtIndexPaths:", v8);

  if (*(_BYTE *)(a1 + 64))
  {
    objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", objc_msgSend(*(id *)(a1 + 40), "count") - 1, v5);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = *(void **)(a1 + 48);
    v12 = v9;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v12, 1);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "insertItemsAtIndexPaths:", v11);

  }
}

- (void)reloadFamilyCollection
{
  PKPaymentDefaultDataProvider *paymentDataProvider;
  _QWORD v4[5];

  if (-[PKDashboardPaymentPassDataSource _isCreditPass](self, "_isCreditPass")
    || -[PKDashboardPaymentPassDataSource _isPeerPaymentPass](self, "_isPeerPaymentPass"))
  {
    paymentDataProvider = self->_paymentDataProvider;
    v4[0] = MEMORY[0x1E0C809B0];
    v4[1] = 3221225472;
    v4[2] = __58__PKDashboardPaymentPassDataSource_reloadFamilyCollection__block_invoke;
    v4[3] = &unk_1E3E61E98;
    v4[4] = self;
    -[PKPaymentDefaultDataProvider familyMembersWithCompletion:](paymentDataProvider, "familyMembersWithCompletion:", v4);
  }
}

void __58__PKDashboardPaymentPassDataSource_reloadFamilyCollection__block_invoke(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  id v5;
  _QWORD v6[4];
  id v7;
  uint64_t v8;

  v3 = a2;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __58__PKDashboardPaymentPassDataSource_reloadFamilyCollection__block_invoke_2;
  v6[3] = &unk_1E3E61388;
  v4 = *(_QWORD *)(a1 + 32);
  v7 = v3;
  v8 = v4;
  v5 = v3;
  dispatch_async(MEMORY[0x1E0C80D38], v6);

}

void __58__PKDashboardPaymentPassDataSource_reloadFamilyCollection__block_invoke_2(uint64_t a1)
{
  id v2;

  v2 = (id)objc_msgSend(objc_alloc(MEMORY[0x1E0D66D88]), "initWithFamilyMembers:", *(_QWORD *)(a1 + 32));
  objc_msgSend(*(id *)(a1 + 40), "_updateWithFamilyCollection:", v2);

}

- (void)_updateWithFamilyCollection:(id)a3
{
  id v5;

  v5 = a3;
  if ((PKEqualObjects() & 1) == 0)
  {
    objc_storeStrong((id *)&self->_familyCollection, a3);
    self->_familyCollectionLoaded = 1;
    self->_accountPendingFamilyMembersLoaded = 0;
    -[PKDashboardPaymentPassDataSource reloadAccountPendingMembersWithNewMembers:](self, "reloadAccountPendingMembersWithNewMembers:", 0);
    -[PKDashboardPaymentPassDataSource reloadMessages](self, "reloadMessages");
    if (!self->_allContentIsLoaded)
      -[PKDashboardPaymentPassDataSource updateContentIsLoaded](self, "updateContentIsLoaded");
  }

}

- (void)reloadAccount
{
  -[PKDashboardPaymentPassDataSource reloadAccountWithNewAccount:](self, "reloadAccountWithNewAccount:", 0);
}

- (void)reloadAccountWithNewAccount:(id)a3
{
  id v5;
  void *v6;
  double v7;
  PKAccount **p_account;
  void *v9;
  void *v10;
  double v11;
  _BOOL4 v12;
  void *v13;
  BOOL v14;
  uint64_t v15;
  void (**v16)(void *, id, _QWORD);
  NSObject *v17;
  _BOOL4 v18;
  void *v19;
  void *v20;
  PKAccountService *accountService;
  PKAccountService *v22;
  _QWORD v23[4];
  id v24;
  void (**v25)(void *, id, _QWORD);
  id v26;
  _QWORD v27[4];
  void (**v28)(void *, id, _QWORD);
  _QWORD aBlock[4];
  id v30[2];
  BOOL v31;
  BOOL v32;
  id from;
  _QWORD v34[5];
  id v35;
  _BYTE location[12];
  __int16 v37;
  void *v38;
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  if (-[PKPaymentPass hasAssociatedPeerPaymentAccount](self->_pass, "hasAssociatedPeerPaymentAccount"))
  {
    -[PKDashboardPaymentPassDataSource _updateBalance](self, "_updateBalance");
    -[PKDashboardPaymentPassDataSource reloadTiles](self, "reloadTiles");
    -[PKDashboardPaymentPassDataSource reloadMessages](self, "reloadMessages");
    -[PKDashboardPaymentPassDataSource reloadSecondaryMessages](self, "reloadSecondaryMessages");
    -[PKDashboardPaymentPassDataSource reloadFamilyCollection](self, "reloadFamilyCollection");
    -[PKDashboardPaymentPassDataSource reloadAuxiliaryItems](self, "reloadAuxiliaryItems");
    -[PKDashboardPaymentPassDataSource reloadAccounts](self, "reloadAccounts");
    objc_initWeak((id *)location, self);
    v34[0] = MEMORY[0x1E0C809B0];
    v34[1] = 3221225472;
    v34[2] = __64__PKDashboardPaymentPassDataSource_reloadAccountWithNewAccount___block_invoke;
    v34[3] = &unk_1E3E61B68;
    objc_copyWeak(&v35, (id *)location);
    v34[4] = self;
    -[PKDashboardPaymentPassDataSource reloadRecurringPeerPaymentsWithCompletion:](self, "reloadRecurringPeerPaymentsWithCompletion:", v34);
    objc_destroyWeak(&v35);
    objc_destroyWeak((id *)location);
  }
  else
  {
    -[PKPaymentPass associatedAccountServiceAccountIdentifier](self->_pass, "associatedAccountServiceAccountIdentifier");
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    if (v6)
    {
      if (!self->_performingAccountUpdate)
      {
        if (-[PKPassPresentationContext limitServerLoad](self->_context, "limitServerLoad"))
          v7 = 86400.0;
        else
          v7 = 300.0;
        p_account = &self->_account;
        if (self->_account
          && (-[PKDashboardPaymentPassDataSource _isCreditPass](self, "_isCreditPass")
           || -[PKDashboardPaymentPassDataSource _isPayLaterPass](self, "_isPayLaterPass")
           || -[PKDashboardPaymentPassDataSource _isAppleBalancePass](self, "_isAppleBalancePass")))
        {
          objc_msgSend(MEMORY[0x1E0C99D68], "date");
          v9 = (void *)objc_claimAutoreleasedReturnValue();
          -[PKAccount lastUpdated](*p_account, "lastUpdated");
          v10 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v9, "timeIntervalSinceDate:", v10);
          v12 = v11 > v7 || self->_accountUpdateError != 0;

        }
        else
        {
          v12 = 0;
        }
        -[PKPaymentPass associatedAccountServiceAccountIdentifier](self->_pass, "associatedAccountServiceAccountIdentifier");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        v14 = self->_account != 0;
        objc_initWeak(&from, self);
        v15 = MEMORY[0x1E0C809B0];
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 3221225472;
        aBlock[2] = __64__PKDashboardPaymentPassDataSource_reloadAccountWithNewAccount___block_invoke_2;
        aBlock[3] = &unk_1E3E729C8;
        objc_copyWeak(v30, &from);
        v31 = v14;
        v32 = v12;
        v30[1] = *(id *)&v7;
        v16 = (void (**)(void *, id, _QWORD))_Block_copy(aBlock);
        self->_performingAccountUpdate = 1;
        if (v5)
        {
          objc_storeStrong((id *)&self->_account, a3);
          v16[2](v16, v5, 0);
        }
        else
        {
          PKLogFacilityTypeGetObject();
          v17 = objc_claimAutoreleasedReturnValue();
          v18 = os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT);
          if (v12)
          {
            if (v18)
            {
              -[PKAccount lastUpdated](*p_account, "lastUpdated");
              v19 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v19, "description");
              v20 = (void *)objc_claimAutoreleasedReturnValue();
              *(_DWORD *)location = 134218242;
              *(_QWORD *)&location[4] = self;
              v37 = 2112;
              v38 = v20;
              _os_log_impl(&dword_19D178000, v17, OS_LOG_TYPE_DEFAULT, "Dashboard (%p): Updating account, last update: %@", location, 0x16u);

            }
            accountService = self->_accountService;
            v27[0] = v15;
            v27[1] = 3221225472;
            v27[2] = __64__PKDashboardPaymentPassDataSource_reloadAccountWithNewAccount___block_invoke_356;
            v27[3] = &unk_1E3E729F0;
            v28 = v16;
            -[PKAccountService updateAccountWithIdentifier:extended:completion:](accountService, "updateAccountWithIdentifier:extended:completion:", v13, 0, v27);

          }
          else
          {
            if (v18)
            {
              *(_DWORD *)location = 134217984;
              *(_QWORD *)&location[4] = self;
              _os_log_impl(&dword_19D178000, v17, OS_LOG_TYPE_DEFAULT, "Dashboard (%p): Fetching local account", location, 0xCu);
            }

            v22 = self->_accountService;
            v23[0] = v15;
            v23[1] = 3221225472;
            v23[2] = __64__PKDashboardPaymentPassDataSource_reloadAccountWithNewAccount___block_invoke_357;
            v23[3] = &unk_1E3E643E8;
            objc_copyWeak(&v26, &from);
            v25 = v16;
            v24 = v13;
            -[PKAccountService accountWithIdentifier:completion:](v22, "accountWithIdentifier:completion:", v24, v23);

            objc_destroyWeak(&v26);
          }
        }

        objc_destroyWeak(v30);
        objc_destroyWeak(&from);

      }
    }
    else
    {
      -[PKDashboardPaymentPassDataSource _updateBalance](self, "_updateBalance");
      -[PKDashboardPaymentPassDataSource reloadTiles](self, "reloadTiles");
      -[PKDashboardPaymentPassDataSource reloadMessages](self, "reloadMessages");
      -[PKDashboardPaymentPassDataSource reloadSecondaryMessages](self, "reloadSecondaryMessages");
      -[PKDashboardPaymentPassDataSource reloadAuxiliaryItems](self, "reloadAuxiliaryItems");
      -[PKDashboardPaymentPassDataSource reloadAccounts](self, "reloadAccounts");
      -[PKDashboardPaymentPassDataSource reloadRecurringPeerPaymentsWithCompletion:](self, "reloadRecurringPeerPaymentsWithCompletion:", &__block_literal_global_363);
      -[PKDashboardPaymentPassDataSource reloadHomeKitRestrictedGuestAccessState](self, "reloadHomeKitRestrictedGuestAccessState");
    }
  }

}

void __64__PKDashboardPaymentPassDataSource_reloadAccountWithNewAccount___block_invoke(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(*(id *)(a1 + 32), "reloadMessages");
    WeakRetained = v3;
  }

}

void __64__PKDashboardPaymentPassDataSource_reloadAccountWithNewAccount___block_invoke_2(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  _QWORD block[4];
  id v10;
  id v11;
  id v12[2];
  __int16 v13;

  v5 = a2;
  v6 = a3;
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __64__PKDashboardPaymentPassDataSource_reloadAccountWithNewAccount___block_invoke_3;
  block[3] = &unk_1E3E692D8;
  objc_copyWeak(v12, (id *)(a1 + 32));
  v10 = v5;
  v11 = v6;
  v13 = *(_WORD *)(a1 + 48);
  v12[1] = *(id *)(a1 + 40);
  v7 = v6;
  v8 = v5;
  dispatch_async(MEMORY[0x1E0C80D38], block);

  objc_destroyWeak(v12);
}

void __64__PKDashboardPaymentPassDataSource_reloadAccountWithNewAccount___block_invoke_3(uint64_t a1)
{
  id *v2;
  id *WeakRetained;
  NSObject *v4;
  const __CFString *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  _BOOL4 v11;
  int v12;
  int v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  void *v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  PKInboxDataSource *v27;
  id v28;
  id v29;
  char v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  dispatch_time_t v35;
  _QWORD block[4];
  id v37;
  uint8_t buf[4];
  id *v39;
  __int16 v40;
  const __CFString *v41;
  __int16 v42;
  uint64_t v43;
  uint64_t v44;

  v44 = *MEMORY[0x1E0C80C00];
  v2 = (id *)(a1 + 48);
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  if (!WeakRetained)
    goto LABEL_60;
  PKLogFacilityTypeGetObject();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v5 = CFSTR("YES");
    v6 = *(_QWORD *)(a1 + 40);
    if (!*(_QWORD *)(a1 + 32))
      v5 = CFSTR("NO");
    *(_DWORD *)buf = 134218498;
    v39 = WeakRetained;
    v40 = 2114;
    v41 = v5;
    v42 = 2114;
    v43 = v6;
    _os_log_impl(&dword_19D178000, v4, OS_LOG_TYPE_DEFAULT, "Dashboard (%p): Processing account %{public}@, error: %{public}@", buf, 0x20u);
  }

  *((_BYTE *)WeakRetained + 740) = 0;
  v7 = *(_QWORD *)(a1 + 40);
  if (v7)
  {
    +[PKAccountFlowController displayableErrorForError:featureIdentifier:genericErrorTitle:genericErrorMessage:](PKAccountFlowController, "displayableErrorForError:featureIdentifier:genericErrorTitle:genericErrorMessage:", v7, objc_msgSend(WeakRetained[48], "feature"), 0, 0);
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = WeakRetained[110];
    WeakRetained[110] = (id)v8;
  }
  else
  {
    v9 = WeakRetained[110];
    WeakRetained[110] = 0;
  }

  v10 = *(void **)(a1 + 32);
  if (!v10)
  {
    v12 = 0;
    LOBYTE(v13) = 0;
    v11 = 0;
    if (WeakRetained[48])
      goto LABEL_55;
    goto LABEL_52;
  }
  if (!*(_BYTE *)(a1 + 64) && !*(_BYTE *)(a1 + 65))
  {
    if (objc_msgSend(WeakRetained, "_isCreditPass"))
    {
      objc_msgSend(*(id *)(a1 + 32), "creditDetails");
      v14 = objc_claimAutoreleasedReturnValue();
    }
    else if (objc_msgSend(WeakRetained, "_isPayLaterPass"))
    {
      objc_msgSend(*(id *)(a1 + 32), "payLaterDetails");
      v14 = objc_claimAutoreleasedReturnValue();
    }
    else
    {
      if (!objc_msgSend(WeakRetained, "_isAppleBalancePass"))
        goto LABEL_13;
      objc_msgSend(*(id *)(a1 + 32), "appleBalanceDetails");
      v14 = objc_claimAutoreleasedReturnValue();
    }
    v15 = (void *)v14;
    if (v14)
    {
      objc_msgSend(MEMORY[0x1E0C99D68], "date");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(a1 + 32), "lastUpdated");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "timeIntervalSinceDate:", v17);
      v11 = v18 > *(double *)(a1 + 56);

    }
    else
    {
      v11 = 0;
    }

    goto LABEL_29;
  }
  if ((objc_msgSend(v10, "isContentEqualToAccount:", WeakRetained[48]) & 1) != 0)
  {
LABEL_13:
    v11 = 0;
LABEL_29:
    v12 = 0;
    goto LABEL_30;
  }
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl(&dword_19D178000, v4, OS_LOG_TYPE_DEFAULT, "Dashboard account has changed", buf, 2u);
  }

  v11 = 0;
  v12 = 1;
  *((_BYTE *)WeakRetained + 235) = 1;
LABEL_30:
  if (objc_msgSend(WeakRetained, "_canDisplayBalance"))
    v19 = objc_msgSend(WeakRetained, "_numberOfBalanceDashboardItems");
  else
    v19 = 0;
  objc_storeStrong(WeakRetained + 48, *(id *)(a1 + 32));
  objc_msgSend(WeakRetained[84], "setFeatureIdentifier:", objc_msgSend(*(id *)(a1 + 32), "feature"));
  if (objc_msgSend(WeakRetained, "_canDisplayBalance"))
    v20 = objc_msgSend(WeakRetained, "_numberOfBalanceDashboardItems");
  else
    v20 = 0;
  if (*(_BYTE *)(a1 + 64))
    v21 = v19 == v20;
  else
    v21 = 1;
  v13 = !v21;
  objc_msgSend(WeakRetained[48], "creditDetails");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v22, "accountSummary");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v23, "currentStatement");
  v24 = objc_claimAutoreleasedReturnValue();
  v25 = WeakRetained[50];
  WeakRetained[50] = (id)v24;

  if (objc_msgSend(WeakRetained, "_isCreditPass"))
  {
    v26 = WeakRetained[49];
    if (v26)
      objc_msgSend(v26, "updateWithAccount:", *(_QWORD *)(a1 + 32));
    if (!WeakRetained[57])
    {
      v27 = -[PKInboxDataSource initWithDelegate:]([PKInboxDataSource alloc], "initWithDelegate:", WeakRetained);
      v28 = WeakRetained[57];
      WeakRetained[57] = v27;

    }
  }
  v29 = objc_loadWeakRetained(WeakRetained + 5);
  v30 = objc_opt_respondsToSelector();

  if ((v30 & 1) != 0)
  {
    v31 = objc_loadWeakRetained(WeakRetained + 5);
    objc_msgSend(v31, "accountDidUpdate:", *(_QWORD *)(a1 + 32));

  }
  if (!WeakRetained[48])
  {
LABEL_52:
    if (objc_msgSend(WeakRetained, "_isCreditPass") && (v13 & 1) == 0)
      goto LABEL_55;
    goto LABEL_54;
  }
  if (v13)
LABEL_54:
    objc_msgSend(WeakRetained, "_updateBalance");
LABEL_55:
  objc_msgSend(WeakRetained, "reloadTiles");
  objc_msgSend(WeakRetained, "reloadAuxiliaryItems");
  objc_msgSend(WeakRetained, "reloadAccounts");
  objc_msgSend(WeakRetained, "reloadRecurringPeerPaymentsWithCompletion:", &__block_literal_global_164);
  objc_msgSend(WeakRetained, "reloadFamilyCollection");
  objc_msgSend(WeakRetained, "reloadMessages");
  objc_msgSend(WeakRetained, "reloadSecondaryMessages");
  objc_msgSend(WeakRetained, "reloadScheduledPayments");
  objc_msgSend(WeakRetained, "reloadCreditRecoveryPaymentPlans");
  objc_msgSend(WeakRetained, "reloadAccountPendingMembersWithNewMembers:", WeakRetained[55]);
  objc_msgSend(WeakRetained, "reloadAccountUsersWithNewAccountUserCollection:", WeakRetained[94]);
  objc_msgSend(WeakRetained, "reloadAccountUserInvitationsWithNewAccountUserInvitations:", WeakRetained[95]);
  objc_msgSend(WeakRetained, "reloadPhysicalCardsWithNewPhysicalCards:", WeakRetained[96]);
  objc_msgSend(WeakRetained, "_updateTransactionSourceCollection");
  objc_msgSend(WeakRetained, "reloadFinancingPlans");
  objc_msgSend(WeakRetained, "reloadAppleBalance");
  v32 = objc_loadWeakRetained(WeakRetained + 5);

  if (v12 && v32)
  {
    v33 = objc_loadWeakRetained(WeakRetained + 5);
    v34 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB36B8]), "initWithIndex:", objc_msgSend(WeakRetained, "numberOfSections") - 1);
    objc_msgSend(v33, "reloadSections:", v34);

  }
  objc_msgSend(WeakRetained, "_updateAccountRewardsDataIfNecessary");
  if (v11)
  {
    v35 = dispatch_time(0, 1000000000);
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = __64__PKDashboardPaymentPassDataSource_reloadAccountWithNewAccount___block_invoke_2_354;
    block[3] = &unk_1E3E61310;
    objc_copyWeak(&v37, v2);
    dispatch_after(v35, MEMORY[0x1E0C80D38], block);
    objc_destroyWeak(&v37);
  }
LABEL_60:

}

void __64__PKDashboardPaymentPassDataSource_reloadAccountWithNewAccount___block_invoke_2_354(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "reloadAccount");

}

uint64_t __64__PKDashboardPaymentPassDataSource_reloadAccountWithNewAccount___block_invoke_356(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void __64__PKDashboardPaymentPassDataSource_reloadAccountWithNewAccount___block_invoke_357(id *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  _QWORD block[4];
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;

  v5 = a2;
  v6 = a3;
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __64__PKDashboardPaymentPassDataSource_reloadAccountWithNewAccount___block_invoke_2_358;
  block[3] = &unk_1E3E643C0;
  objc_copyWeak(&v14, a1 + 6);
  v10 = v5;
  v11 = v6;
  v13 = a1[5];
  v12 = a1[4];
  v7 = v6;
  v8 = v5;
  dispatch_async(MEMORY[0x1E0C80D38], block);

  objc_destroyWeak(&v14);
}

void __64__PKDashboardPaymentPassDataSource_reloadAccountWithNewAccount___block_invoke_2_358(uint64_t a1)
{
  _BYTE *WeakRetained;
  _BYTE *v3;
  void *v4;
  NSObject *v5;
  uint64_t v6;
  void *v7;
  _QWORD v8[4];
  id v9;
  id v10;
  uint8_t buf[4];
  uint64_t v12;
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    if (*(_OWORD *)(a1 + 32) == 0 && !WeakRetained[146])
      goto LABEL_16;
    (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
    if (v3[146])
      goto LABEL_13;
    v4 = *(void **)(a1 + 32);
    if (v4)
    {
      if (objc_msgSend(v4, "feature") != 4 || (objc_msgSend(*(id *)(a1 + 32), "isCloudAccount") & 1) == 0)
        goto LABEL_13;
    }
    else
    {
LABEL_16:
      if (*(_QWORD *)(a1 + 40))
        goto LABEL_13;
    }
    PKLogFacilityTypeGetObject();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      v6 = *(_QWORD *)(a1 + 48);
      *(_DWORD *)buf = 138412290;
      v12 = v6;
      _os_log_impl(&dword_19D178000, v5, OS_LOG_TYPE_DEFAULT, "Dashboard updating all accounts since account id %@ is missing from the device.", buf, 0xCu);
    }

    v3[146] = 1;
    v7 = (void *)*((_QWORD *)v3 + 114);
    v8[0] = MEMORY[0x1E0C809B0];
    v8[1] = 3221225472;
    v8[2] = __64__PKDashboardPaymentPassDataSource_reloadAccountWithNewAccount___block_invoke_359;
    v8[3] = &unk_1E3E67700;
    v9 = *(id *)(a1 + 48);
    v10 = *(id *)(a1 + 56);
    objc_msgSend(v7, "updateAccountsWithCompletion:", v8);

  }
LABEL_13:

}

void __64__PKDashboardPaymentPassDataSource_reloadAccountWithNewAccount___block_invoke_359(uint64_t a1, void *a2, void *a3)
{
  id v6;
  void *v7;
  NSObject *v8;
  _BOOL4 v9;
  uint64_t v10;
  const char *v11;
  uint64_t v12;
  _QWORD v13[4];
  id v14;
  uint8_t buf[4];
  uint64_t v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 3221225472;
  v13[2] = __64__PKDashboardPaymentPassDataSource_reloadAccountWithNewAccount___block_invoke_2_360;
  v13[3] = &unk_1E3E69710;
  v14 = *(id *)(a1 + 32);
  v6 = a3;
  objc_msgSend(a2, "pk_firstObjectPassingTest:", v13);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  PKLogFacilityTypeGetObject();
  v8 = objc_claimAutoreleasedReturnValue();
  v9 = os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT);
  if (v7)
  {
    if (v9)
    {
      v10 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 138412290;
      v16 = v10;
      v11 = "Successfully fetched account %@ after it was missing from the local device.";
LABEL_6:
      _os_log_impl(&dword_19D178000, v8, OS_LOG_TYPE_DEFAULT, v11, buf, 0xCu);
    }
  }
  else if (v9)
  {
    v12 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 138412290;
    v16 = v12;
    v11 = "Error fetching account %@ after it was missing from the local device.";
    goto LABEL_6;
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

uint64_t __64__PKDashboardPaymentPassDataSource_reloadAccountWithNewAccount___block_invoke_2_360(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;

  objc_msgSend(a2, "accountIdentifier");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = *(void **)(a1 + 32);
  v5 = v3;
  v6 = v4;
  v7 = v6;
  if (v5 == v6)
  {
    v8 = 1;
  }
  else
  {
    v8 = 0;
    if (v5 && v6)
      v8 = objc_msgSend(v5, "isEqualToString:", v6);
  }

  return v8;
}

- (void)reloadScheduledPayments
{
  PKAccount *account;
  PKAccountService *accountService;
  void *v5;
  _QWORD v6[4];
  id v7;
  id location;

  if (-[PKDashboardPaymentPassDataSource _isCreditPass](self, "_isCreditPass"))
  {
    account = self->_account;
    if (account)
    {
      if ((-[PKAccount accessLevel](account, "accessLevel") | 2) == 2)
      {
        self->_scheduledPaymentsLoaded = 1;
        if (!self->_allContentIsLoaded)
          -[PKDashboardPaymentPassDataSource updateContentIsLoaded](self, "updateContentIsLoaded");
      }
      else
      {
        objc_initWeak(&location, self);
        accountService = self->_accountService;
        -[PKAccount accountIdentifier](self->_account, "accountIdentifier");
        v5 = (void *)objc_claimAutoreleasedReturnValue();
        v6[0] = MEMORY[0x1E0C809B0];
        v6[1] = 3221225472;
        v6[2] = __59__PKDashboardPaymentPassDataSource_reloadScheduledPayments__block_invoke;
        v6[3] = &unk_1E3E696C0;
        objc_copyWeak(&v7, &location);
        -[PKAccountService scheduledPaymentsWithAccountIdentifier:includeFailedRecurringPayments:completion:](accountService, "scheduledPaymentsWithAccountIdentifier:includeFailedRecurringPayments:completion:", v5, 1, v6);

        objc_destroyWeak(&v7);
        objc_destroyWeak(&location);
      }
    }
  }
}

void __59__PKDashboardPaymentPassDataSource_reloadScheduledPayments__block_invoke(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  _QWORD v5[4];
  id v6;
  id v7;

  v3 = a2;
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 3221225472;
  v5[2] = __59__PKDashboardPaymentPassDataSource_reloadScheduledPayments__block_invoke_2;
  v5[3] = &unk_1E3E61B68;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  v6 = v3;
  v4 = v3;
  dispatch_async(MEMORY[0x1E0C80D38], v5);

  objc_destroyWeak(&v7);
}

void __59__PKDashboardPaymentPassDataSource_reloadScheduledPayments__block_invoke_2(uint64_t a1)
{
  id *WeakRetained;
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  _BOOL4 v21;
  int v22;
  _BOOL4 v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  char v28;
  NSObject *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t j;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  id *v41;
  id v42;
  id v43;
  id obj;
  uint8_t buf[16];
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  _BYTE v50[128];
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    objc_msgSend(MEMORY[0x1E0C99D68], "date");
    v3 = objc_claimAutoreleasedReturnValue();
    v4 = objc_alloc(MEMORY[0x1E0C99D48]);
    v5 = (void *)objc_msgSend(v4, "initWithCalendarIdentifier:", *MEMORY[0x1E0C996C8]);
    v41 = WeakRetained;
    objc_msgSend(WeakRetained[48], "creditDetails");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "productTimeZone");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "setTimeZone:", v7);

    v40 = (void *)v3;
    objc_msgSend(v5, "components:fromDate:", 28, v3);
    v38 = (void *)objc_claimAutoreleasedReturnValue();
    v39 = v5;
    objc_msgSend(v5, "dateFromComponents:", v38);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    obj = objc_alloc_init(MEMORY[0x1E0C99DE8]);
    v43 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
    v42 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
    v46 = 0u;
    v47 = 0u;
    v48 = 0u;
    v49 = 0u;
    v9 = *(id *)(a1 + 32);
    v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v46, v50, 16);
    if (v10)
    {
      v11 = v10;
      v12 = *(_QWORD *)v47;
      do
      {
        for (i = 0; i != v11; ++i)
        {
          if (*(_QWORD *)v47 != v12)
            objc_enumerationMutation(v9);
          v14 = *(void **)(*((_QWORD *)&v46 + 1) + 8 * i);
          objc_msgSend(v14, "scheduleDetails");
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          v16 = objc_msgSend(v15, "frequency");

          objc_msgSend(v14, "scheduleDetails");
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v17, "scheduledDate");
          v18 = (void *)objc_claimAutoreleasedReturnValue();

          v21 = objc_msgSend(v18, "compare:", v8) == -1 || v16 == 1 || v16 == 0;
          v22 = objc_msgSend(v14, "isRecurring");
          if (v22)
            v23 = objc_msgSend(v14, "state") == 4;
          else
            v23 = 0;
          if (!v21 && !v23)
            objc_msgSend(obj, "addObject:", v14);
          if (v22)
            objc_msgSend(v43, "addObject:", v14);
          if (v16 == 1)
            objc_msgSend(v42, "addObject:", v14);

        }
        v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v46, v50, 16);
      }
      while (v11);
    }

    v24 = objc_msgSend(v43, "copy");
    WeakRetained = v41;
    v25 = v41[102];
    v41[102] = (id)v24;

    v26 = objc_msgSend(v42, "copy");
    v27 = v41[52];
    v41[52] = (id)v26;

    objc_msgSend(obj, "sortUsingComparator:", &__block_literal_global_366);
    v28 = PKEqualObjects();
    if ((v28 & 1) == 0)
    {
      PKLogFacilityTypeGetObject();
      v29 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_19D178000, v29, OS_LOG_TYPE_DEFAULT, "Dashboard scheduled payments have changed", buf, 2u);
      }

    }
    objc_storeStrong(v41 + 51, obj);
    *((_BYTE *)v41 + 464) = 1;
    if (*((_BYTE *)v41 + 739))
    {
      v30 = objc_loadWeakRetained(v41 + 5);
      if (v30)
      {
        v31 = objc_msgSend(v41, "firstSectionIndexForSectionIdentifier:", 2);
        if ((v28 & 1) != 0)
        {
          v32 = objc_msgSend(v41, "numberOfItemsInSection:", v31);
          if (v32)
          {
            v33 = v32;
            for (j = 0; j != v33; ++j)
            {
              objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", j, v31);
              v35 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v41, "itemAtIndexPath:", v35);
              v36 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v30, "itemChanged:atIndexPath:", v36, v35);

            }
          }
        }
        else
        {
          objc_msgSend(MEMORY[0x1E0CB36B8], "indexSetWithIndex:", v31);
          v37 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v30, "reloadSections:", v37);

        }
      }

    }
    else
    {
      objc_msgSend(v41, "updateContentIsLoaded");
    }

  }
}

uint64_t __59__PKDashboardPaymentPassDataSource_reloadScheduledPayments__block_invoke_3(uint64_t a1, void *a2, void *a3)
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;

  v4 = a3;
  objc_msgSend(a2, "scheduleDetails");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "scheduledDate");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "scheduleDetails");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v7, "scheduledDate");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v6, "compare:", v8);

  return v9;
}

- (void)_updateTransactionSourceCollection
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  void *v10;
  PKTransactionSourceCollection *v11;
  id v12;
  void *v13;
  void *v14;
  unint64_t v15;
  _BOOL4 v16;
  NSObject *v17;
  PKAccountServiceAccountResolutionController *accountResolutionController;
  PKDashboardTransactionFetcher *v19;
  PKDashboardTransactionFetcher *transactionFetcher;
  PKDashboardTransactionFetcher *v21;
  PKDashboardTransactionFetcher *currentMonthFetcher;
  PKSpendingSummaryFetcher *summaryFetcher;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint8_t buf[4];
  void *v29;
  _BYTE v30[128];
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  if (!-[PKDashboardPaymentPassDataSource _isCreditPass](self, "_isCreditPass")
    || self->_account && self->_accountUsersLoaded)
  {
    v3 = objc_alloc_init(MEMORY[0x1E0C99E20]);
    v4 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D67730]), "initWithPaymentPass:", self->_pass);
    objc_msgSend(v3, "addObject:", v4);
    v26 = 0u;
    v27 = 0u;
    v24 = 0u;
    v25 = 0u;
    -[PKAccountUserCollection accountUsers](self->_accountUserCollection, "accountUsers", 0);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v24, v30, 16);
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)v25;
      do
      {
        for (i = 0; i != v7; ++i)
        {
          if (*(_QWORD *)v25 != v8)
            objc_enumerationMutation(v5);
          v10 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D67730]), "initWithAccountUser:", *(_QWORD *)(*((_QWORD *)&v24 + 1) + 8 * i));
          objc_msgSend(v3, "addObject:", v10);

        }
        v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v24, v30, 16);
      }
      while (v7);
    }

    v11 = self->_transactionSourceCollection;
    v12 = objc_alloc(MEMORY[0x1E0D67738]);
    v13 = (void *)objc_msgSend(v3, "copy");
    v14 = (void *)objc_msgSend(v12, "initWithTransactionSources:", v13);

    v15 = -[PKDashboardPaymentPassDataSource transactionsCount](self, "transactionsCount");
    v16 = -[PKDashboardPaymentPassDataSource _canShowTransactions](self, "_canShowTransactions");
    if (!PKEqualObjects() || (((v15 == 0) ^ v16) & 1) == 0)
    {
      PKLogFacilityTypeGetObject();
      v17 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        v29 = v14;
        _os_log_impl(&dword_19D178000, v17, OS_LOG_TYPE_DEFAULT, "Dashboard transaction source manager has changed %@.", buf, 0xCu);
      }

      objc_storeStrong((id *)&self->_transactionSourceCollection, v14);
      accountResolutionController = self->_accountResolutionController;
      self->_accountResolutionController = 0;

      -[PKDashboardTransactionFetcher setDelegate:](self->_transactionFetcher, "setDelegate:", 0);
      v19 = (PKDashboardTransactionFetcher *)objc_msgSend(objc_alloc(MEMORY[0x1E0D66C98]), "initWithTransactionSourceCollection:paymentDataProvider:", self->_transactionSourceCollection, self->_paymentDataProvider);
      transactionFetcher = self->_transactionFetcher;
      self->_transactionFetcher = v19;

      -[PKDashboardTransactionFetcher setDelegate:](self->_transactionFetcher, "setDelegate:", self);
      v21 = (PKDashboardTransactionFetcher *)objc_msgSend(objc_alloc(MEMORY[0x1E0D66C98]), "initWithTransactionSourceCollection:paymentDataProvider:", self->_transactionSourceCollection, self->_paymentDataProvider);
      currentMonthFetcher = self->_currentMonthFetcher;
      self->_currentMonthFetcher = v21;

      if (-[PKDashboardPaymentPassDataSource _isCreditPass](self, "_isCreditPass"))
      {
        -[PKSpendingSummaryFetcher unregisterObserver:](self->_summaryFetcher, "unregisterObserver:", self);
        summaryFetcher = self->_summaryFetcher;
        self->_summaryFetcher = 0;

      }
      -[PKDashboardPaymentPassDataSource reloadTransactions](self, "reloadTransactions");
      -[PKDashboardPaymentPassDataSource reloadTransactionGroups](self, "reloadTransactionGroups");
      if (!self->_allContentIsLoaded)
        -[PKDashboardPaymentPassDataSource updateContentIsLoaded](self, "updateContentIsLoaded");
    }

  }
}

- (void)reloadPhysicalCardsWithNewPhysicalCards:(id)a3
{
  id v4;
  uint64_t v5;
  PKAccountService *accountService;
  void *v7;
  _QWORD v8[4];
  id v9;
  id v10;
  id location;

  v4 = a3;
  v5 = -[PKDashboardPaymentPassDataSource _isCreditPass](self, "_isCreditPass");
  if ((_DWORD)v5 && self->_account)
  {
    if (v4)
    {
      __76__PKDashboardPaymentPassDataSource_reloadPhysicalCardsWithNewPhysicalCards___block_invoke(v5, self, v4);
    }
    else
    {
      objc_initWeak(&location, self);
      accountService = self->_accountService;
      -[PKAccount accountIdentifier](self->_account, "accountIdentifier");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8[0] = MEMORY[0x1E0C809B0];
      v8[1] = 3221225472;
      v8[2] = __76__PKDashboardPaymentPassDataSource_reloadPhysicalCardsWithNewPhysicalCards___block_invoke_372;
      v8[3] = &unk_1E3E68F98;
      objc_copyWeak(&v10, &location);
      v9 = &__block_literal_global_370;
      -[PKAccountService physicalCardsForAccountWithIdentifier:completion:](accountService, "physicalCardsForAccountWithIdentifier:completion:", v7, v8);

      objc_destroyWeak(&v10);
      objc_destroyWeak(&location);
    }
  }

}

void __76__PKDashboardPaymentPassDataSource_reloadPhysicalCardsWithNewPhysicalCards___block_invoke(uint64_t a1, void *a2, void *a3)
{
  _QWORD *v4;
  id v5;
  char v6;
  NSObject *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  PKPhysicalCardController *v11;
  void *v12;
  uint8_t v13[16];

  v4 = a2;
  v5 = a3;
  v6 = PKEqualObjects();
  if ((v6 & 1) == 0)
  {
    PKLogFacilityTypeGetObject();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_19D178000, v7, OS_LOG_TYPE_DEFAULT, "Dashboard physical cards have changed", v13, 2u);
    }

  }
  v8 = objc_msgSend(v5, "copy");
  v9 = (void *)v4[96];
  v4[96] = v8;

  *((_BYTE *)v4 + 435) = 1;
  v10 = (void *)v4[49];
  if (v10)
  {
    objc_msgSend(v10, "updateWithPhysicalCards:", v4[96]);
  }
  else
  {
    v11 = -[PKPhysicalCardController initWithAccountService:paymentPass:account:accountUser:physicalCards:]([PKPhysicalCardController alloc], "initWithAccountService:paymentPass:account:accountUser:physicalCards:", v4[114], v4[109], v4[48], 0, v4[96]);
    v12 = (void *)v4[49];
    v4[49] = v11;

  }
  if (!*((_BYTE *)v4 + 739))
  {
    objc_msgSend(v4, "updateContentIsLoaded");
    if ((v6 & 1) != 0)
      goto LABEL_11;
    goto LABEL_10;
  }
  if ((v6 & 1) == 0)
LABEL_10:
    objc_msgSend(v4, "reloadMessages");
LABEL_11:

}

void __76__PKDashboardPaymentPassDataSource_reloadPhysicalCardsWithNewPhysicalCards___block_invoke_372(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  _QWORD block[4];
  id v7;
  id v8;
  id v9;

  v3 = a2;
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __76__PKDashboardPaymentPassDataSource_reloadPhysicalCardsWithNewPhysicalCards___block_invoke_2;
  block[3] = &unk_1E3E61478;
  objc_copyWeak(&v9, (id *)(a1 + 40));
  v4 = *(id *)(a1 + 32);
  v7 = v3;
  v8 = v4;
  v5 = v3;
  dispatch_async(MEMORY[0x1E0C80D38], block);

  objc_destroyWeak(&v9);
}

void __76__PKDashboardPaymentPassDataSource_reloadPhysicalCardsWithNewPhysicalCards___block_invoke_2(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
    WeakRetained = v3;
  }

}

- (void)reloadAccountUsersWithNewAccountUserCollection:(id)a3
{
  id v4;
  uint64_t v5;
  PKAccountService *accountService;
  void *v7;
  _QWORD v8[4];
  id v9;
  id v10;
  id location;

  v4 = a3;
  v5 = -[PKDashboardPaymentPassDataSource _isCreditPass](self, "_isCreditPass");
  if ((_DWORD)v5 && self->_account)
  {
    if (v4)
    {
      __83__PKDashboardPaymentPassDataSource_reloadAccountUsersWithNewAccountUserCollection___block_invoke(v5, self, v4);
    }
    else
    {
      objc_initWeak(&location, self);
      accountService = self->_accountService;
      -[PKAccount accountIdentifier](self->_account, "accountIdentifier");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8[0] = MEMORY[0x1E0C809B0];
      v8[1] = 3221225472;
      v8[2] = __83__PKDashboardPaymentPassDataSource_reloadAccountUsersWithNewAccountUserCollection___block_invoke_376;
      v8[3] = &unk_1E3E68F98;
      objc_copyWeak(&v10, &location);
      v9 = &__block_literal_global_375;
      -[PKAccountService accountUsersForAccountWithIdentifier:completion:](accountService, "accountUsersForAccountWithIdentifier:completion:", v7, v8);

      objc_destroyWeak(&v10);
      objc_destroyWeak(&location);
    }
  }

}

void __83__PKDashboardPaymentPassDataSource_reloadAccountUsersWithNewAccountUserCollection___block_invoke(uint64_t a1, void *a2, void *a3)
{
  _QWORD *v4;
  id v5;
  char v6;
  NSObject *v7;
  void *v8;
  uint8_t v9[16];

  v4 = a2;
  v5 = a3;
  v6 = PKEqualObjects();
  if ((v6 & 1) == 0)
  {
    PKLogFacilityTypeGetObject();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_19D178000, v7, OS_LOG_TYPE_DEFAULT, "Dashboard account users have changed", v9, 2u);
    }

  }
  v8 = (void *)v4[94];
  v4[94] = v5;

  *((_BYTE *)v4 + 433) = 1;
  objc_msgSend(v4, "_updateTransactionSourceCollection");
  if (!*((_BYTE *)v4 + 739))
  {
    objc_msgSend(v4, "updateContentIsLoaded");
    if ((v6 & 1) != 0)
      goto LABEL_8;
    goto LABEL_7;
  }
  if ((v6 & 1) == 0)
LABEL_7:
    objc_msgSend(v4, "reloadMessages");
LABEL_8:

}

void __83__PKDashboardPaymentPassDataSource_reloadAccountUsersWithNewAccountUserCollection___block_invoke_376(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  _QWORD block[4];
  id v6;
  id v7;
  id v8;

  v3 = a2;
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __83__PKDashboardPaymentPassDataSource_reloadAccountUsersWithNewAccountUserCollection___block_invoke_2;
  block[3] = &unk_1E3E61B90;
  objc_copyWeak(&v8, (id *)(a1 + 40));
  v6 = v3;
  v7 = *(id *)(a1 + 32);
  v4 = v3;
  dispatch_async(MEMORY[0x1E0C80D38], block);

  objc_destroyWeak(&v8);
}

void __83__PKDashboardPaymentPassDataSource_reloadAccountUsersWithNewAccountUserCollection___block_invoke_2(uint64_t a1)
{
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D66940]), "initWithAccountUsers:", *(_QWORD *)(a1 + 32));
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

  }
}

- (void)reloadAccountUserInvitationsWithNewAccountUserInvitations:(id)a3
{
  id v4;
  uint64_t v5;
  PKPaymentDefaultDataProvider *paymentDataProvider;
  void *v7;
  _QWORD v8[4];
  id v9;
  id v10;
  id location;

  v4 = a3;
  v5 = -[PKDashboardPaymentPassDataSource _isCreditPass](self, "_isCreditPass");
  if ((_DWORD)v5 && self->_account)
  {
    if (v4)
    {
      __94__PKDashboardPaymentPassDataSource_reloadAccountUserInvitationsWithNewAccountUserInvitations___block_invoke(v5, self, v4);
    }
    else
    {
      objc_initWeak(&location, self);
      paymentDataProvider = self->_paymentDataProvider;
      -[PKAccount accountIdentifier](self->_account, "accountIdentifier");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8[0] = MEMORY[0x1E0C809B0];
      v8[1] = 3221225472;
      v8[2] = __94__PKDashboardPaymentPassDataSource_reloadAccountUserInvitationsWithNewAccountUserInvitations___block_invoke_380;
      v8[3] = &unk_1E3E63110;
      objc_copyWeak(&v10, &location);
      v9 = &__block_literal_global_379;
      -[PKPaymentDefaultDataProvider featureApplicationsForAccountIdentifier:completion:](paymentDataProvider, "featureApplicationsForAccountIdentifier:completion:", v7, v8);

      objc_destroyWeak(&v10);
      objc_destroyWeak(&location);
    }
  }

}

void __94__PKDashboardPaymentPassDataSource_reloadAccountUserInvitationsWithNewAccountUserInvitations___block_invoke(uint64_t a1, void *a2, void *a3)
{
  _QWORD *v4;
  id v5;
  char v6;
  NSObject *v7;
  uint64_t v8;
  void *v9;
  uint8_t v10[16];

  v4 = a2;
  v5 = a3;
  v6 = PKEqualObjects();
  if ((v6 & 1) == 0)
  {
    PKLogFacilityTypeGetObject();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_19D178000, v7, OS_LOG_TYPE_DEFAULT, "Dashboard account user invitations have changed", v10, 2u);
    }

  }
  v8 = objc_msgSend(v5, "copy");
  v9 = (void *)v4[95];
  v4[95] = v8;

  *((_BYTE *)v4 + 434) = 1;
  if (!*((_BYTE *)v4 + 739))
  {
    objc_msgSend(v4, "updateContentIsLoaded");
    if ((v6 & 1) != 0)
      goto LABEL_8;
    goto LABEL_7;
  }
  if ((v6 & 1) == 0)
LABEL_7:
    objc_msgSend(v4, "reloadMessages");
LABEL_8:

}

void __94__PKDashboardPaymentPassDataSource_reloadAccountUserInvitationsWithNewAccountUserInvitations___block_invoke_380(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  id v5;
  _QWORD block[4];
  id v7;
  id v8;
  id v9;

  objc_msgSend(a2, "pk_objectsPassingTest:", &__block_literal_global_382);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __94__PKDashboardPaymentPassDataSource_reloadAccountUserInvitationsWithNewAccountUserInvitations___block_invoke_3;
  block[3] = &unk_1E3E61478;
  objc_copyWeak(&v9, (id *)(a1 + 40));
  v4 = *(id *)(a1 + 32);
  v7 = v3;
  v8 = v4;
  v5 = v3;
  dispatch_async(MEMORY[0x1E0C80D38], block);

  objc_destroyWeak(&v9);
}

BOOL __94__PKDashboardPaymentPassDataSource_reloadAccountUserInvitationsWithNewAccountUserInvitations___block_invoke_2(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "applicationType") == 2;
}

void __94__PKDashboardPaymentPassDataSource_reloadAccountUserInvitationsWithNewAccountUserInvitations___block_invoke_3(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
    WeakRetained = v3;
  }

}

- (void)reloadAccountPendingMembersWithNewMembers:(id)a3
{
  id v4;
  uint64_t v5;
  PKAccountService *accountService;
  void *v7;
  _QWORD v8[4];
  id v9;
  id v10;
  id location;

  v4 = a3;
  v5 = -[PKDashboardPaymentPassDataSource _isCreditPass](self, "_isCreditPass");
  if ((_DWORD)v5 && self->_account)
  {
    if (v4)
    {
      __78__PKDashboardPaymentPassDataSource_reloadAccountPendingMembersWithNewMembers___block_invoke(v5, self, v4);
    }
    else
    {
      objc_initWeak(&location, self);
      accountService = self->_accountService;
      -[PKAccount accountIdentifier](self->_account, "accountIdentifier");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8[0] = MEMORY[0x1E0C809B0];
      v8[1] = 3221225472;
      v8[2] = __78__PKDashboardPaymentPassDataSource_reloadAccountPendingMembersWithNewMembers___block_invoke_384;
      v8[3] = &unk_1E3E61BB8;
      objc_copyWeak(&v10, &location);
      v9 = &__block_literal_global_383;
      -[PKAccountService accountPendingFamilyMembersForAccountIdentifier:completion:](accountService, "accountPendingFamilyMembersForAccountIdentifier:completion:", v7, v8);

      objc_destroyWeak(&v10);
      objc_destroyWeak(&location);
    }
  }

}

void __78__PKDashboardPaymentPassDataSource_reloadAccountPendingMembersWithNewMembers___block_invoke(uint64_t a1, void *a2, void *a3)
{
  _QWORD *v4;
  id v5;
  char v6;
  NSObject *v7;
  void *v8;
  uint8_t v9[16];

  v4 = a2;
  v5 = a3;
  v6 = PKEqualObjects();
  if ((v6 & 1) == 0)
  {
    PKLogFacilityTypeGetObject();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_19D178000, v7, OS_LOG_TYPE_DEFAULT, "Dashboard account pending family members have changed", v9, 2u);
    }

  }
  v8 = (void *)v4[55];
  v4[55] = v5;

  *((_BYTE *)v4 + 448) = 1;
  if (!*((_BYTE *)v4 + 739))
  {
    objc_msgSend(v4, "updateContentIsLoaded");
    if ((v6 & 1) != 0)
      goto LABEL_8;
    goto LABEL_7;
  }
  if ((v6 & 1) == 0)
LABEL_7:
    objc_msgSend(v4, "reloadMessages");
LABEL_8:

}

void __78__PKDashboardPaymentPassDataSource_reloadAccountPendingMembersWithNewMembers___block_invoke_384(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  _QWORD block[4];
  id v7;
  id v8;
  id v9;

  v3 = a2;
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __78__PKDashboardPaymentPassDataSource_reloadAccountPendingMembersWithNewMembers___block_invoke_2;
  block[3] = &unk_1E3E61478;
  objc_copyWeak(&v9, (id *)(a1 + 40));
  v4 = *(id *)(a1 + 32);
  v7 = v3;
  v8 = v4;
  v5 = v3;
  dispatch_async(MEMORY[0x1E0C80D38], block);

  objc_destroyWeak(&v9);
}

void __78__PKDashboardPaymentPassDataSource_reloadAccountPendingMembersWithNewMembers___block_invoke_2(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
    WeakRetained = v3;
  }

}

- (void)_updateAccountRewardsDataIfNecessary
{
  void *v3;
  NSObject *v4;
  uint8_t v5[16];

  if (PKRewardsCenterEnabled())
  {
    -[PKAccount accountIdentifier](self->_account, "accountIdentifier");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    if (v3)
    {
      if (-[PKAccount feature](self->_account, "feature") == 2 && !self->_hasUpdatedAccountRewardsDataIfNecessary)
      {
        self->_hasUpdatedAccountRewardsDataIfNecessary = 1;
        -[PKDashboardPaymentPassDataSource _updateAccountPromotions](self, "_updateAccountPromotions");
        -[PKDashboardPaymentPassDataSource _updateAccountEnhancedMerchants](self, "_updateAccountEnhancedMerchants");
      }
    }
    else
    {
      PKLogFacilityTypeGetObject();
      v4 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v5 = 0;
        _os_log_impl(&dword_19D178000, v4, OS_LOG_TYPE_DEFAULT, "Unexpected nil account identifier. Not fetching promotions.", v5, 2u);
      }

    }
  }
}

- (void)_updateAccountPromotions
{
  void *v3;
  PKAccountService *accountService;
  NSObject *v5;
  _QWORD v6[4];
  NSObject *v7;
  uint8_t buf[4];
  void *v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  -[PKAccount accountIdentifier](self->_account, "accountIdentifier");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if ((-[PKAccount showCardPromotions](self->_account, "showCardPromotions") & 1) != 0)
  {
    accountService = self->_accountService;
    v6[0] = MEMORY[0x1E0C809B0];
    v6[1] = 3221225472;
    v6[2] = __60__PKDashboardPaymentPassDataSource__updateAccountPromotions__block_invoke;
    v6[3] = &unk_1E3E6C0F0;
    v7 = v3;
    -[PKAccountService updateAccountPromotionsForAccountWithIdentifier:observeCooldownPeriod:completion:](accountService, "updateAccountPromotionsForAccountWithIdentifier:observeCooldownPeriod:completion:", v7, 1, v6);
    v5 = v7;
  }
  else
  {
    PKLogFacilityTypeGetObject();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v9 = v3;
      _os_log_impl(&dword_19D178000, v5, OS_LOG_TYPE_DEFAULT, "Not fetching promotions for account %@ because it is not a supported feature on this account", buf, 0xCu);
    }
  }

}

void __60__PKDashboardPaymentPassDataSource__updateAccountPromotions__block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  PKLogFacilityTypeGetObject();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412546;
    v8 = v6;
    v9 = 2112;
    v10 = a3;
    _os_log_impl(&dword_19D178000, v5, OS_LOG_TYPE_DEFAULT, "Updated account promotions at pass load for account %@. Error: %@", (uint8_t *)&v7, 0x16u);
  }

}

- (void)_updateAccountEnhancedMerchants
{
  void *v3;
  PKAccountService *accountService;
  NSObject *v5;
  _QWORD v6[4];
  NSObject *v7;
  uint8_t buf[4];
  void *v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  -[PKAccount accountIdentifier](self->_account, "accountIdentifier");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if ((-[PKAccount showEnhancedMerchants](self->_account, "showEnhancedMerchants") & 1) != 0)
  {
    accountService = self->_accountService;
    v6[0] = MEMORY[0x1E0C809B0];
    v6[1] = 3221225472;
    v6[2] = __67__PKDashboardPaymentPassDataSource__updateAccountEnhancedMerchants__block_invoke;
    v6[3] = &unk_1E3E6C0F0;
    v7 = v3;
    -[PKAccountService updateAccountEnhancedMerchantsForAccountWithIdentifier:cooldownLevel:completion:](accountService, "updateAccountEnhancedMerchantsForAccountWithIdentifier:cooldownLevel:completion:", v7, 2, v6);
    v5 = v7;
  }
  else
  {
    PKLogFacilityTypeGetObject();
    v5 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v9 = v3;
      _os_log_impl(&dword_19D178000, v5, OS_LOG_TYPE_DEFAULT, "Not fetching enhanced merchants for account %@ because it is not a supported feature on this account", buf, 0xCu);
    }
  }

}

void __67__PKDashboardPaymentPassDataSource__updateAccountEnhancedMerchants__block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  NSObject *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  PKLogFacilityTypeGetObject();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = 138412546;
    v8 = v6;
    v9 = 2112;
    v10 = a3;
    _os_log_impl(&dword_19D178000, v5, OS_LOG_TYPE_DEFAULT, "Updated account enhanced merchants at pass load for account %@. Error: %@", (uint8_t *)&v7, 0x16u);
  }

}

- (void)_updateBalance
{
  -[PKDashboardPaymentPassDataSource _updateBalanceAndPreventReload:](self, "_updateBalanceAndPreventReload:", 0);
}

- (void)_updateBalanceAndPreventReload:(BOOL)a3
{
  _BOOL4 canDisplayBalance;
  int64_t numberOfBalanceDashboardItems;
  int64_t v7;
  _BOOL4 v8;
  int v9;
  id WeakRetained;
  unint64_t v11;
  void *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t i;
  void *v16;
  id v17;
  void *v18;
  id v19;

  self->_balanceLoaded = 1;
  canDisplayBalance = self->_canDisplayBalance;
  self->_canDisplayBalance = -[PKDashboardPaymentPassDataSource _canDisplayBalance](self, "_canDisplayBalance");
  numberOfBalanceDashboardItems = self->_numberOfBalanceDashboardItems;
  v7 = -[PKDashboardPaymentPassDataSource _numberOfBalanceDashboardItems](self, "_numberOfBalanceDashboardItems");
  self->_numberOfBalanceDashboardItems = v7;
  v8 = canDisplayBalance == !self->_canDisplayBalance || numberOfBalanceDashboardItems != v7;
  if (self->_allContentIsLoaded)
  {
    v9 = self->_balanceSectionNeedsUpdate || v8;
    if (v9 == 1)
    {
      self->_balanceSectionNeedsUpdate = 0;
      WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);

      if (WeakRetained)
      {
        if (!a3)
        {
          v11 = -[PKDashboardPaymentPassDataSource firstSectionIndexForSectionIdentifier:](self, "firstSectionIndexForSectionIdentifier:", 2);
          if (v8)
          {
            v19 = objc_loadWeakRetained((id *)&self->_delegate);
            objc_msgSend(MEMORY[0x1E0CB36B8], "indexSetWithIndex:", v11);
            v12 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v19, "reloadSections:", v12);

          }
          else
          {
            v13 = -[PKDashboardPaymentPassDataSource numberOfItemsInSection:](self, "numberOfItemsInSection:", v11);
            if (v13)
            {
              v14 = v13;
              for (i = 0; i != v14; ++i)
              {
                objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", i, v11);
                v16 = (void *)objc_claimAutoreleasedReturnValue();
                v17 = objc_loadWeakRetained((id *)&self->_delegate);
                -[PKDashboardPaymentPassDataSource itemAtIndexPath:](self, "itemAtIndexPath:", v16);
                v18 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v17, "itemChanged:atIndexPath:", v18, v16);

              }
            }
          }
        }
      }
    }
  }
  else
  {
    self->_balanceSectionNeedsUpdate = 0;
    -[PKDashboardPaymentPassDataSource updateContentIsLoaded](self, "updateContentIsLoaded");
  }
}

- (void)summaryTypeDidChange
{
  -[PKDashboardPaymentPassDataSource loadSummariesWithForceReload:](self, "loadSummariesWithForceReload:", 0);
}

- (void)loadSummariesWithForceReload:(BOOL)a3
{
  _BOOL4 v4;
  PKSpendingSummaryFetcher *v5;
  PKSpendingSummaryFetcher *summaryFetcher;
  uint64_t v7;
  void *v8;
  void *v9;
  NSObject *v10;
  PKSpendingSummaryFetcher *v11;
  _QWORD v12[5];
  id v13;
  _QWORD aBlock[5];
  id v15;
  id location;
  uint8_t buf[4];
  PKDashboardPaymentPassDataSource *v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  if (self->_transactionSourceCollection)
  {
    if (self->_account)
    {
      v4 = a3;
      if (-[PKDashboardPaymentPassDataSource _isCreditPass](self, "_isCreditPass"))
      {
        if (!self->_summaryFetcher)
        {
          v5 = (PKSpendingSummaryFetcher *)objc_msgSend(objc_alloc(MEMORY[0x1E0D676C8]), "initWithTransactionSourceCollection:account:accountUser:", self->_transactionSourceCollection, self->_account, 0);
          summaryFetcher = self->_summaryFetcher;
          self->_summaryFetcher = v5;

          -[PKSpendingSummaryFetcher registerObserver:](self->_summaryFetcher, "registerObserver:", self);
        }
        objc_initWeak(&location, self);
        v7 = MEMORY[0x1E0C809B0];
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 3221225472;
        aBlock[2] = __65__PKDashboardPaymentPassDataSource_loadSummariesWithForceReload___block_invoke;
        aBlock[3] = &unk_1E3E72BE0;
        objc_copyWeak(&v15, &location);
        aBlock[4] = self;
        v8 = _Block_copy(aBlock);
        v9 = v8;
        if (!self->_weeks || v4)
        {
          *(_WORD *)&self->_pendingSummaryUpdate = 0;
          PKLogFacilityTypeGetObject();
          v10 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 134217984;
            v18 = self;
            _os_log_impl(&dword_19D178000, v10, OS_LOG_TYPE_DEFAULT, "Dashboard loading (%p): Fetching available summaries", buf, 0xCu);
          }

          v11 = self->_summaryFetcher;
          v12[0] = v7;
          v12[1] = 3221225472;
          v12[2] = __65__PKDashboardPaymentPassDataSource_loadSummariesWithForceReload___block_invoke_392;
          v12[3] = &unk_1E3E72C08;
          v12[4] = self;
          v13 = v9;
          -[PKSpendingSummaryFetcher availableSummaries:](v11, "availableSummaries:", v12);

        }
        else if (self->_pendingSummaryUpdate)
        {
          self->_hasMoreSummaryUpdates = 1;
        }
        else
        {
          self->_pendingSummaryUpdate = 1;
          (*((void (**)(void *))v8 + 2))(v8);
        }

        objc_destroyWeak(&v15);
        objc_destroyWeak(&location);
      }
    }
  }
}

void __65__PKDashboardPaymentPassDataSource_loadSummariesWithForceReload___block_invoke(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  _QWORD *WeakRetained;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  _QWORD v19[5];
  id v20;
  id v21;
  id v22;
  id v23;
  id v24[2];
  uint8_t buf[4];
  uint64_t v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v7 = a2;
  v8 = a3;
  v9 = a4;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (!WeakRetained)
    goto LABEL_13;
  PKLogFacilityTypeGetObject();
  v11 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    v12 = *(_QWORD *)(a1 + 32);
    *(_DWORD *)buf = 134217984;
    v26 = v12;
    _os_log_impl(&dword_19D178000, v11, OS_LOG_TYPE_DEFAULT, "Dashboard loading (%p): Fetching spending summary", buf, 0xCu);
  }

  v13 = PKBroadwaySummaryType();
  v14 = (void *)v13;
  v15 = v7;
  if (!v13)
    goto LABEL_9;
  if (v13 == 2)
  {
    v15 = v9;
    goto LABEL_9;
  }
  v15 = v8;
  if (v13 == 1)
  {
LABEL_9:
    v16 = v15;
    goto LABEL_10;
  }
  v16 = 0;
LABEL_10:
  if (objc_msgSend(v16, "count"))
  {
    v18 = (void *)WeakRetained[59];
    objc_msgSend(v16, "lastObject");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v19[0] = MEMORY[0x1E0C809B0];
    v19[1] = 3221225472;
    v19[2] = __65__PKDashboardPaymentPassDataSource_loadSummariesWithForceReload___block_invoke_386;
    v19[3] = &unk_1E3E72BB8;
    objc_copyWeak(v24, (id *)(a1 + 40));
    v19[4] = *(_QWORD *)(a1 + 32);
    v20 = v16;
    v21 = v7;
    v22 = v8;
    v23 = v9;
    v24[1] = v14;
    objc_msgSend(v18, "spendingSummaryStartingWithDate:type:includingLastPeriodChange:completion:", v17, v14, 0, v19);

    objc_destroyWeak(v24);
  }

LABEL_13:
}

void __65__PKDashboardPaymentPassDataSource_loadSummariesWithForceReload___block_invoke_386(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  _QWORD v6[5];
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12[2];

  v3 = a2;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __65__PKDashboardPaymentPassDataSource_loadSummariesWithForceReload___block_invoke_2;
  v6[3] = &unk_1E3E688D0;
  objc_copyWeak(v12, (id *)(a1 + 72));
  v4 = *(void **)(a1 + 40);
  v6[4] = *(_QWORD *)(a1 + 32);
  v7 = v4;
  v8 = *(id *)(a1 + 48);
  v9 = *(id *)(a1 + 56);
  v10 = *(id *)(a1 + 64);
  v11 = v3;
  v12[1] = *(id *)(a1 + 80);
  v5 = v3;
  dispatch_async(MEMORY[0x1E0C80D38], v6);

  objc_destroyWeak(v12);
}

void __65__PKDashboardPaymentPassDataSource_loadSummariesWithForceReload___block_invoke_2(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  dispatch_time_t v8;
  uint64_t v9;
  dispatch_time_t v10;
  id v11;
  void *v12;
  void *v13;
  _QWORD v14[4];
  id v15;
  id v16[2];
  _QWORD block[4];
  id v18;
  uint8_t buf[4];
  uint64_t v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v2 = (id *)(a1 + 80);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 80));
  if (WeakRetained)
  {
    PKLogFacilityTypeGetObject();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      v5 = *(_QWORD *)(a1 + 32);
      *(_DWORD *)buf = 134217984;
      v20 = v5;
      _os_log_impl(&dword_19D178000, v4, OS_LOG_TYPE_DEFAULT, "Dashboard loading (%p): Fetched spending summary", buf, 0xCu);
    }

    objc_msgSend(*(id *)(a1 + 40), "lastObject");
    v6 = objc_claimAutoreleasedReturnValue();
    v7 = (void *)*((_QWORD *)WeakRetained + 60);
    *((_QWORD *)WeakRetained + 60) = v6;

    objc_storeStrong((id *)WeakRetained + 99, *(id *)(a1 + 48));
    objc_storeStrong((id *)WeakRetained + 100, *(id *)(a1 + 56));
    objc_storeStrong((id *)WeakRetained + 101, *(id *)(a1 + 64));
    *((_BYTE *)WeakRetained + 235) = 1;
    objc_storeStrong((id *)WeakRetained + 61, *(id *)(a1 + 72));
    objc_msgSend(WeakRetained, "_updateBalance");
    v8 = dispatch_time(0, 3000000000);
    v9 = MEMORY[0x1E0C809B0];
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = __65__PKDashboardPaymentPassDataSource_loadSummariesWithForceReload___block_invoke_387;
    block[3] = &unk_1E3E61310;
    objc_copyWeak(&v18, v2);
    dispatch_after(v8, MEMORY[0x1E0C80D38], block);
    if ((unint64_t)objc_msgSend(*(id *)(a1 + 40), "count") >= 2)
    {
      v10 = dispatch_time(0, 300000000);
      v14[0] = v9;
      v14[1] = 3221225472;
      v14[2] = __65__PKDashboardPaymentPassDataSource_loadSummariesWithForceReload___block_invoke_2_388;
      v14[3] = &unk_1E3E671C0;
      objc_copyWeak(v16, v2);
      v11 = *(id *)(a1 + 40);
      v12 = *(void **)(a1 + 88);
      v15 = v11;
      v16[1] = v12;
      v13 = (void *)MEMORY[0x1E0C80D38];
      dispatch_after(v10, MEMORY[0x1E0C80D38], v14);

      objc_destroyWeak(v16);
    }
    objc_destroyWeak(&v18);
  }

}

void __65__PKDashboardPaymentPassDataSource_loadSummariesWithForceReload___block_invoke_387(uint64_t a1)
{
  _BYTE *WeakRetained;
  _BYTE *v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    WeakRetained[496] = 0;
    if (WeakRetained[497])
    {
      WeakRetained[497] = 0;
      v2 = WeakRetained;
      objc_msgSend(WeakRetained, "loadSummariesWithForceReload:", 0);
      WeakRetained = v2;
    }
  }

}

void __65__PKDashboardPaymentPassDataSource_loadSummariesWithForceReload___block_invoke_2_388(uint64_t a1)
{
  _QWORD *WeakRetained;
  void *v3;
  void *v4;
  _QWORD *v5;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = (void *)WeakRetained[59];
    v5 = WeakRetained;
    objc_msgSend(*(id *)(a1 + 32), "lastObject");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "spendingSummaryStartingWithDate:type:includingLastPeriodChange:completion:", v4, *(_QWORD *)(a1 + 48), 1, &__block_literal_global_390);

    WeakRetained = v5;
  }

}

void __65__PKDashboardPaymentPassDataSource_loadSummariesWithForceReload___block_invoke_392(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  NSObject *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  __int16 v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v7 = a2;
  v8 = a3;
  v9 = a4;
  PKLogFacilityTypeGetObject();
  v10 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    v11 = *(_QWORD *)(a1 + 32);
    v12 = 134218752;
    v13 = v11;
    v14 = 2048;
    v15 = objc_msgSend(v7, "count");
    v16 = 2048;
    v17 = objc_msgSend(v8, "count");
    v18 = 2048;
    v19 = objc_msgSend(v9, "count");
    _os_log_impl(&dword_19D178000, v10, OS_LOG_TYPE_DEFAULT, "Dashboard loading (%p): Fetched available summaries (%lu/%lu/%lu)", (uint8_t *)&v12, 0x2Au);
  }

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

- ($65C3FA8A572F9D8A414E710B16373297)_peerPaymentDashboardCondition
{
  uint64_t v3;
  uint64_t v4;
  _BOOL8 v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  $65C3FA8A572F9D8A414E710B16373297 result;

  v3 = -[PKPeerPaymentAccount state](self->_peerPaymentAccount, "state");
  v4 = PKPeerPaymentAccountResolutionForAccountAndPeerPaymentPass();
  v6 = -[PKPaymentPass activationState](self->_pass, "activationState") != PKPaymentPassActivationStateDeactivated
    && (unint64_t)(v3 - 1) < 2;
  v7 = v4 == 5 || v4 == 0;
  v8 = 256;
  if (v7)
    v8 = 0;
  v9 = v8 | v6;
  v10 = v4;
  result.var2 = v10;
  result.var0 = v9;
  result.var1 = BYTE1(v9);
  return result;
}

- (BOOL)_canShowTransactions
{
  int v4;
  int v5;
  void *v6;
  void *v7;
  BOOL v8;
  void *v9;
  uint64_t v10;
  char v11;
  int v12;
  uint64_t v13;
  _BOOL4 v14;
  int v15;
  void *v16;
  int v17;
  uint64_t v18;
  unint64_t v19;

  if (-[PKDashboardPaymentPassDataSource _isCreditPass](self, "_isCreditPass"))
    return +[PKCreditAccountController shouldDisplayTransactionsForTransactionSourceCollection:withAccount:](PKCreditAccountController, "shouldDisplayTransactionsForTransactionSourceCollection:withAccount:", self->_transactionSourceCollection, self->_account);
  if (-[PKDashboardPaymentPassDataSource _isPayLaterPass](self, "_isPayLaterPass"))
    goto LABEL_4;
  v5 = -[PKPaymentDefaultDataProvider supportsTransactionsForPass:](self->_paymentDataProvider, "supportsTransactionsForPass:", self->_pass);
  -[PKPaymentPass devicePrimaryPaymentApplication](self->_pass, "devicePrimaryPaymentApplication");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6)
  {
    -[PKPaymentPass devicePrimaryPaymentApplication](self->_pass, "devicePrimaryPaymentApplication");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "state") == 7;

  }
  else
  {
    v8 = 0;
  }

  -[PKPaymentPass devicePrimaryPaymentApplication](self->_pass, "devicePrimaryPaymentApplication");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "state");

  v11 = -[PKPaymentPass settings](self->_pass, "settings");
  v12 = -[PKPaymentPass hasAssociatedPeerPaymentAccount](self->_pass, "hasAssociatedPeerPaymentAccount");
  v13 = -[PKPaymentPass associatedAccountFeatureIdentifier](self->_pass, "associatedAccountFeatureIdentifier");
  v14 = -[PKDashboardPaymentPassDataSource isBankConnectLinked](self, "isBankConnectLinked");
  v15 = 0;
  if (!self->_isAccessPass && ((v5 ^ 1) & 1) == 0 && !v8 && v10 != 6)
  {
    -[PKTransactionSourceCollection transactionSourceIdentifiers](self->_transactionSourceCollection, "transactionSourceIdentifiers");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v16, "count"))
      v15 = 1;
    else
      v15 = v14;

  }
  v17 = v15 & ((v11 & 8) != 0);
  if (v13 == 4)
    v17 = v15;
  v4 = ((v12 | v14) & 1) != 0 ? v15 : v17;
  if ((v4 & v12) == 1)
  {
    v18 = -[PKPeerPaymentAccount state](self->_peerPaymentAccount, "state");
    LOBYTE(v4) = -[PKPaymentPass activationState](self->_pass, "activationState") - 5 < 0xFFFFFFFFFFFFFFFELL;
    if (v18 == 3)
    {
      v19 = -[PKPeerPaymentAccount stateReason](self->_peerPaymentAccount, "stateReason");
      if (v19 <= 5 && ((1 << v19) & 0x31) != 0)
LABEL_4:
        LOBYTE(v4) = 0;
    }
  }
  return v4;
}

- (BOOL)_canFilterTransactions
{
  return self->_isShowingPeerPaymentPendingRequests || -[PKAccount feature](self->_account, "feature") == 2;
}

- (void)_reloadTransactionGrouping
{
  _BOOL4 v3;
  uint64_t v4;
  void *v5;
  _BOOL4 v6;

  v3 = -[PKDashboardPaymentPassDataSource isBankConnectLinked](self, "isBankConnectLinked");
  if ((-[PKPaymentPass hasAssociatedPeerPaymentAccount](self->_pass, "hasAssociatedPeerPaymentAccount") & 1) != 0)
    goto LABEL_7;
  -[PKPaymentPass associatedAccountServiceAccountIdentifier](self->_pass, "associatedAccountServiceAccountIdentifier");
  v4 = objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    v5 = (void *)v4;
    v6 = -[PKDashboardPaymentPassDataSource _isCreditPass](self, "_isCreditPass");

    if (v6 || v3)
      goto LABEL_7;
LABEL_6:
    if (!-[PKDashboardPaymentPassDataSource _isAppleBalancePass](self, "_isAppleBalancePass"))
      return;
    goto LABEL_7;
  }
  if (!v3)
    goto LABEL_6;
LABEL_7:
  self->_transactionGrouping = 2;
}

- (void)reloadTransactions
{
  NSObject *v3;
  void *filterType;
  id v5;
  _BOOL4 v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, void *, void *, void *);
  void *v21;
  id v22[2];
  _QWORD v23[4];
  id v24;
  void *v25;
  _QWORD v26[2];
  void *v27;
  _QWORD v28[2];
  void *v29;
  void *v30;
  void *v31;
  uint8_t buf[4];
  PKDashboardPaymentPassDataSource *v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  if (self->_transactionSourceCollection)
  {
    if (!-[PKDashboardPaymentPassDataSource _canShowTransactions](self, "_canShowTransactions"))
    {
      -[PKDashboardPaymentPassDataSource updateWithTransactions:](self, "updateWithTransactions:", MEMORY[0x1E0C9AA60]);
LABEL_28:
      -[PKDashboardPaymentPassDataSource loadSummariesWithForceReload:](self, "loadSummariesWithForceReload:", 1);
      return;
    }
    PKLogFacilityTypeGetObject();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 134217984;
      v33 = self;
      _os_log_impl(&dword_19D178000, v3, OS_LOG_TYPE_DEFAULT, "Dashboard loading (%p): Fetching transactions", buf, 0xCu);
    }

    if (!-[PKDashboardPaymentPassDataSource isBankConnectLinked](self, "isBankConnectLinked"))
    {
      filterType = (void *)self->_filterType;
      v5 = objc_alloc_init(MEMORY[0x1E0D66B90]);
      objc_initWeak((id *)buf, self);
      v6 = -[PKDashboardPaymentPassDataSource _canFilterTransactions](self, "_canFilterTransactions");
      v7 = MEMORY[0x1E0C809B0];
      if (v6)
      {
        switch((unint64_t)filterType)
        {
          case 1uLL:
            objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", 9);
            v8 = (void *)objc_claimAutoreleasedReturnValue();
            v30 = v8;
            objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v30, 1);
            v9 = objc_claimAutoreleasedReturnValue();
            goto LABEL_15;
          case 2uLL:
            objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", 3);
            v8 = (void *)objc_claimAutoreleasedReturnValue();
            v31 = v8;
            objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v31, 1);
            v9 = objc_claimAutoreleasedReturnValue();
            goto LABEL_15;
          case 3uLL:
            objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", 5);
            v8 = (void *)objc_claimAutoreleasedReturnValue();
            v28[0] = v8;
            objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", 6);
            v11 = (void *)objc_claimAutoreleasedReturnValue();
            v28[1] = v11;
            objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v28, 2);
            v12 = objc_claimAutoreleasedReturnValue();
            goto LABEL_18;
          case 4uLL:
            objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", 0);
            v8 = (void *)objc_claimAutoreleasedReturnValue();
            v29 = v8;
            objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v29, 1);
            v9 = objc_claimAutoreleasedReturnValue();
            goto LABEL_15;
          case 5uLL:
            objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", 10);
            v8 = (void *)objc_claimAutoreleasedReturnValue();
            v27 = v8;
            objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v27, 1);
            v9 = objc_claimAutoreleasedReturnValue();
LABEL_15:
            v13 = (void *)v9;
            goto LABEL_19;
          case 6uLL:
            v10 = 0;
            v14 = 1;
            goto LABEL_23;
          case 7uLL:
            objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", 1);
            v8 = (void *)objc_claimAutoreleasedReturnValue();
            v26[0] = v8;
            objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", 7);
            v11 = (void *)objc_claimAutoreleasedReturnValue();
            v26[1] = v11;
            objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v26, 2);
            v12 = objc_claimAutoreleasedReturnValue();
LABEL_18:
            v13 = (void *)v12;

LABEL_19:
            v10 = 0;
            goto LABEL_20;
          case 8uLL:
            objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", 3);
            v17 = (void *)objc_claimAutoreleasedReturnValue();
            v25 = v17;
            objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v25, 1);
            v13 = (void *)objc_claimAutoreleasedReturnValue();

            v10 = 2;
            -[PKDashboardTransactionFetcher filterPeerPaymentPaymentMode:](self->_transactionFetcher, "filterPeerPaymentPaymentMode:", 2);
LABEL_20:
            if (!v13)
              goto LABEL_22;
            -[PKDashboardTransactionFetcher filterTypes:](self->_transactionFetcher, "filterTypes:", v13);
            v14 = 0;
            break;
          default:
            v10 = 0;
LABEL_22:
            v14 = 0;
LABEL_23:
            -[PKDashboardTransactionFetcher filterTypes:](self->_transactionFetcher, "filterTypes:", 0);
            v13 = 0;
            break;
        }
        -[PKDashboardTransactionFetcher filterDisputesOnly:](self->_transactionFetcher, "filterDisputesOnly:", v14);
        -[PKDashboardTransactionFetcher filterPeerPaymentPaymentMode:](self->_transactionFetcher, "filterPeerPaymentPaymentMode:", v10);
        if (filterType)
        {
          v23[0] = v7;
          v23[1] = 3221225472;
          v23[2] = __54__PKDashboardPaymentPassDataSource_reloadTransactions__block_invoke;
          v23[3] = &unk_1E3E66E50;
          objc_copyWeak(&v24, (id *)buf);
          objc_msgSend(v5, "addOperation:", v23);
          objc_destroyWeak(&v24);
        }

      }
      v18 = v7;
      v19 = 3221225472;
      v20 = __54__PKDashboardPaymentPassDataSource_reloadTransactions__block_invoke_4;
      v21 = &unk_1E3E72C78;
      objc_copyWeak(v22, (id *)buf);
      v22[1] = filterType;
      objc_msgSend(v5, "addOperation:", &v18);
      objc_msgSend(MEMORY[0x1E0C99E38], "null", v18, v19, v20, v21);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v16 = (id)objc_msgSend(v5, "evaluateWithInput:completion:", v15, 0);

      objc_destroyWeak(v22);
      objc_destroyWeak((id *)buf);

      goto LABEL_28;
    }
  }
}

void __54__PKDashboardPaymentPassDataSource_reloadTransactions__block_invoke(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  id *v10;
  _QWORD *WeakRetained;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  _QWORD v17[4];
  id v18;
  id v19;
  id v20;

  v7 = a2;
  v8 = a3;
  v9 = a4;
  v10 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    objc_msgSend(MEMORY[0x1E0C99D68], "date");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = (void *)WeakRetained[15];
    PKStartOfMonth();
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    PKEndOfMonth();
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "setLimit:startDate:endDate:", -1, v14, v15);

    v16 = (void *)WeakRetained[15];
    v17[0] = MEMORY[0x1E0C809B0];
    v17[1] = 3221225472;
    v17[2] = __54__PKDashboardPaymentPassDataSource_reloadTransactions__block_invoke_2;
    v17[3] = &unk_1E3E72C30;
    objc_copyWeak(&v20, v10);
    v19 = v9;
    v18 = v8;
    objc_msgSend(v16, "reloadTransactionsWithCompletion:", v17);

    objc_destroyWeak(&v20);
  }

}

void __54__PKDashboardPaymentPassDataSource_reloadTransactions__block_invoke_2(id *a1, void *a2)
{
  id v3;
  id v4;
  _QWORD v5[4];
  id v6;
  id v7;
  id v8;
  id v9;

  v3 = a2;
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 3221225472;
  v5[2] = __54__PKDashboardPaymentPassDataSource_reloadTransactions__block_invoke_3;
  v5[3] = &unk_1E3E67750;
  objc_copyWeak(&v9, a1 + 6);
  v6 = v3;
  v8 = a1[5];
  v7 = a1[4];
  v4 = v3;
  dispatch_async(MEMORY[0x1E0C80D38], v5);

  objc_destroyWeak(&v9);
}

void __54__PKDashboardPaymentPassDataSource_reloadTransactions__block_invoke_3(uint64_t a1)
{
  id *WeakRetained;
  id *v3;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_storeStrong(WeakRetained + 53, *(id *)(a1 + 32));
    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
    WeakRetained = v3;
  }

}

void __54__PKDashboardPaymentPassDataSource_reloadTransactions__block_invoke_4(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  id WeakRetained;
  void *v11;
  void *v12;
  _QWORD v13[4];
  id v14[2];

  v7 = a2;
  v8 = a3;
  v9 = a4;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v11 = WeakRetained;
  if (WeakRetained)
  {
    v12 = (void *)*((_QWORD *)WeakRetained + 14);
    v13[0] = MEMORY[0x1E0C809B0];
    v13[1] = 3221225472;
    v13[2] = __54__PKDashboardPaymentPassDataSource_reloadTransactions__block_invoke_5;
    v13[3] = &unk_1E3E671E8;
    objc_copyWeak(v14, (id *)(a1 + 32));
    v14[1] = *(id *)(a1 + 40);
    objc_msgSend(v12, "reloadTransactionsWithCompletion:", v13);
    objc_destroyWeak(v14);
  }

}

void __54__PKDashboardPaymentPassDataSource_reloadTransactions__block_invoke_5(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  _QWORD block[4];
  id v6;
  id v7[2];

  v3 = a2;
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __54__PKDashboardPaymentPassDataSource_reloadTransactions__block_invoke_6;
  block[3] = &unk_1E3E671C0;
  objc_copyWeak(v7, (id *)(a1 + 32));
  v7[1] = *(id *)(a1 + 40);
  v6 = v3;
  v4 = v3;
  dispatch_async(MEMORY[0x1E0C80D38], block);

  objc_destroyWeak(v7);
}

void __54__PKDashboardPaymentPassDataSource_reloadTransactions__block_invoke_6(uint64_t a1)
{
  _QWORD *WeakRetained;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  _QWORD *v9;
  _QWORD v10[5];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v9 = WeakRetained;
    if (!objc_msgSend(WeakRetained, "_canFilterTransactions") || !*(_QWORD *)(a1 + 48))
    {
      objc_msgSend(MEMORY[0x1E0C99D48], "currentCalendar");
      v3 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0C99D68], "date");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      v5 = objc_msgSend(v3, "component:fromDate:", 8, v4);

      v6 = *(void **)(a1 + 32);
      v10[0] = MEMORY[0x1E0C809B0];
      v10[1] = 3221225472;
      v10[2] = __54__PKDashboardPaymentPassDataSource_reloadTransactions__block_invoke_7;
      v10[3] = &__block_descriptor_40_e37_B32__0__PKPaymentTransaction_8Q16_B24l;
      v10[4] = v5;
      objc_msgSend(v6, "pk_objectsPassingTest:", v10);
      v7 = objc_claimAutoreleasedReturnValue();
      v8 = (void *)v9[53];
      v9[53] = v7;

    }
    objc_msgSend(v9, "updateWithTransactions:", *(_QWORD *)(a1 + 32));
    WeakRetained = v9;
  }

}

BOOL __54__PKDashboardPaymentPassDataSource_reloadTransactions__block_invoke_7(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;

  v3 = (void *)MEMORY[0x1E0C99D48];
  v4 = a2;
  objc_msgSend(v3, "currentCalendar");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "transactionDate");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = objc_msgSend(v5, "component:fromDate:", 8, v6);
  return v7 == *(_QWORD *)(a1 + 32);
}

- (BOOL)isGroupInTheCurrentYear:(id)a3
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  char v8;

  if (!a3)
    return 0;
  objc_msgSend(a3, "group");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "startDate");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0C99D48], "currentCalendar");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "components:fromDate:", 6, v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99D68], "date");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v5, "date:matchesComponents:", v7, v6);

  return v8;
}

- (void)reloadTransactionGroups
{
  unint64_t transactionGrouping;
  _BOOL4 v4;
  int v5;
  NSObject *v6;
  const __CFString *v7;
  const __CFString *v8;
  unsigned int v9;
  const __CFString *v10;
  NSObject *v11;
  unint64_t v12;
  id *v13;
  void *v14;
  _QWORD v15[5];
  id v16;
  _QWORD v17[4];
  id v18;
  _QWORD v19[4];
  id v20;
  uint8_t buf[4];
  unint64_t v22;
  __int16 v23;
  const __CFString *v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  if (!self->_transactionSourceCollection)
  {
    PKLogFacilityTypeGetObject();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
    }
    goto LABEL_25;
  }
  -[PKDashboardPaymentPassDataSource _reloadTransactionGrouping](self, "_reloadTransactionGrouping");
  if (-[PKDashboardPaymentPassDataSource isBankConnectLinked](self, "isBankConnectLinked"))
  {
    transactionGrouping = self->_transactionGrouping;
    if (transactionGrouping != 2)
    {
      PKLogFacilityTypeGetObject();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      {
        *(_DWORD *)buf = 134217984;
        v22 = transactionGrouping;
        _os_log_error_impl(&dword_19D178000, v11, OS_LOG_TYPE_ERROR, "Bank Connect transactions can be grouped only by mixed grouping type, but an attempt to group them by type %lu has happened.", buf, 0xCu);
      }
LABEL_25:

      return;
    }
  }
  v4 = -[PKDashboardPaymentPassDataSource _canShowTransactions](self, "_canShowTransactions");
  if (-[PKDashboardPaymentPassDataSource isBankConnectLinked](self, "isBankConnectLinked")
    || (-[PKPaymentPass hasAssociatedPeerPaymentAccount](self->_pass, "hasAssociatedPeerPaymentAccount") & 1) != 0
    || -[PKDashboardPaymentPassDataSource _isCreditPass](self, "_isCreditPass")
    || -[PKDashboardPaymentPassDataSource _isAppleBalancePass](self, "_isAppleBalancePass"))
  {
    v5 = 1;
  }
  else
  {
    -[PKPaymentPass devicePrimaryContactlessPaymentApplication](self->_pass, "devicePrimaryContactlessPaymentApplication");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "paymentNetworkIdentifier");
    v5 = PKTransactionsUnlimitedForCredentialType();

  }
  PKLogFacilityTypeGetObject();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v7 = CFSTR("NO");
    if (v4)
      v8 = CFSTR("YES");
    else
      v8 = CFSTR("NO");
    if (v5)
      v7 = CFSTR("YES");
    *(_DWORD *)buf = 138412546;
    v22 = (unint64_t)v8;
    v23 = 2112;
    v24 = v7;
    _os_log_impl(&dword_19D178000, v6, OS_LOG_TYPE_DEFAULT, "Groups reloading: canShowTransactions - %@, supportsTransactionGroups - %@", buf, 0x16u);
  }

  if ((v5 & 1) == 0)
  {
    self->_transactionsPerPeriodLoaded = 1;
    -[PKDashboardPaymentPassDataSource _updateWithTransactionGroups:](self, "_updateWithTransactionGroups:", MEMORY[0x1E0C9AA60]);
    return;
  }
  v9 = (self->_filterType > 8) | (0xE0u >> self->_filterType);
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    v10 = CFSTR("NO");
    if ((v9 & 1) != 0)
      v10 = CFSTR("YES");
    *(_DWORD *)buf = 138412290;
    v22 = (unint64_t)v10;
    _os_log_impl(&dword_19D178000, v6, OS_LOG_TYPE_DEFAULT, "Groups reloading: shouldHideGroups - %@", buf, 0xCu);
  }

  if (v9 & 1 | !v4)
  {
    -[PKDashboardPaymentPassDataSource _updateWithTransactionGroups:](self, "_updateWithTransactionGroups:", MEMORY[0x1E0C9AA60]);
    return;
  }
  objc_initWeak((id *)buf, self);
  v12 = self->_transactionGrouping;
  switch(v12)
  {
    case 2uLL:
      v15[0] = MEMORY[0x1E0C809B0];
      v15[1] = 3221225472;
      v15[2] = __59__PKDashboardPaymentPassDataSource_reloadTransactionGroups__block_invoke_3;
      v15[3] = &unk_1E3E665B8;
      v13 = &v16;
      objc_copyWeak(&v16, (id *)buf);
      v15[4] = self;
      -[PKDashboardPaymentPassDataSource _yearlyTransactionGroupsWithCompletion:](self, "_yearlyTransactionGroupsWithCompletion:", v15);
      goto LABEL_37;
    case 1uLL:
      v17[0] = MEMORY[0x1E0C809B0];
      v17[1] = 3221225472;
      v17[2] = __59__PKDashboardPaymentPassDataSource_reloadTransactionGroups__block_invoke_2;
      v17[3] = &unk_1E3E61BE0;
      v13 = &v18;
      objc_copyWeak(&v18, (id *)buf);
      -[PKDashboardPaymentPassDataSource _yearlyTransactionGroupsWithCompletion:](self, "_yearlyTransactionGroupsWithCompletion:", v17);
      goto LABEL_37;
    case 0uLL:
      v19[0] = MEMORY[0x1E0C809B0];
      v19[1] = 3221225472;
      v19[2] = __59__PKDashboardPaymentPassDataSource_reloadTransactionGroups__block_invoke;
      v19[3] = &unk_1E3E61BE0;
      v13 = &v20;
      objc_copyWeak(&v20, (id *)buf);
      -[PKDashboardPaymentPassDataSource _monthlyTransactionGroupsWithCompletion:](self, "_monthlyTransactionGroupsWithCompletion:", v19);
LABEL_37:
      objc_destroyWeak(v13);
      break;
  }
  objc_destroyWeak((id *)buf);
}

void __59__PKDashboardPaymentPassDataSource_reloadTransactionGroups__block_invoke(uint64_t a1, void *a2)
{
  id WeakRetained;
  void *v4;
  id v5;

  v5 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v4 = WeakRetained;
  if (WeakRetained)
    objc_msgSend(WeakRetained, "_updateWithTransactionGroups:", v5);

}

void __59__PKDashboardPaymentPassDataSource_reloadTransactionGroups__block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  _QWORD v6[2];

  v6[1] = *MEMORY[0x1E0C80C00];
  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v6[0] = v3;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v6, 1);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(WeakRetained, "_updateWithTransactionGroups:", v5);

  }
}

void __59__PKDashboardPaymentPassDataSource_reloadTransactionGroups__block_invoke_3(uint64_t a1, void *a2)
{
  id v3;
  id *v4;
  id WeakRetained;
  void *v6;
  uint64_t v7;
  id v8;
  _QWORD v9[4];
  id v10;
  id v11;

  v3 = a2;
  v4 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(v3, "firstObject");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6 && objc_msgSend(*(id *)(a1 + 32), "isGroupInTheCurrentYear:", v6))
  {
    objc_msgSend(v3, "pk_arrayByRemovingObject:", v6);
    v7 = objc_claimAutoreleasedReturnValue();

    v3 = (id)v7;
  }
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = __59__PKDashboardPaymentPassDataSource_reloadTransactionGroups__block_invoke_4;
  v9[3] = &unk_1E3E665B8;
  objc_copyWeak(&v11, v4);
  v8 = v3;
  v10 = v8;
  objc_msgSend(WeakRetained, "_monthlyTransactionGroupsWithCompletion:", v9);

  objc_destroyWeak(&v11);
}

void __59__PKDashboardPaymentPassDataSource_reloadTransactionGroups__block_invoke_4(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  id v6;
  int v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  int v18;
  void *v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t i;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t *v33;
  uint64_t v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  int v44;
  void *v45;
  void *v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  id obj;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[2];
  _BYTE v68[128];
  _BYTE v69[128];
  _BYTE v70[128];
  uint64_t v71;

  v71 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    objc_msgSend(MEMORY[0x1E0C99D48], "currentCalendar");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0C99D68], "date");
    v42 = (void *)objc_claimAutoreleasedReturnValue();
    v61 = 0u;
    v62 = 0u;
    v63 = 0u;
    v64 = 0u;
    v6 = v3;
    v43 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v61, v70, 16);
    if (v43)
    {
      v37 = WeakRetained;
      v38 = v3;
      v7 = 0;
      v39 = *(_QWORD *)v62;
      v40 = v6;
      v41 = a1;
      do
      {
        v8 = 0;
        do
        {
          v48 = v7;
          if (*(_QWORD *)v62 != v39)
            objc_enumerationMutation(v6);
          v47 = v8;
          v50 = *(void **)(*((_QWORD *)&v61 + 1) + 8 * v8);
          objc_msgSend(v50, "firstObject", v37, v38);
          v46 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v46, "group");
          v9 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v9, "startDate");
          v10 = objc_claimAutoreleasedReturnValue();

          v45 = (void *)v10;
          objc_msgSend(v5, "components:fromDate:", 6, v10);
          v11 = (void *)objc_claimAutoreleasedReturnValue();
          v44 = objc_msgSend(v5, "date:matchesComponents:", v42, v11);
          v57 = 0u;
          v58 = 0u;
          v59 = 0u;
          v60 = 0u;
          obj = *(id *)(a1 + 32);
          v12 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v57, v69, 16);
          if (v12)
          {
            v13 = v12;
            v14 = *(_QWORD *)v58;
            v49 = *(_QWORD *)v58;
            do
            {
              v15 = 0;
              v51 = v13;
              do
              {
                if (*(_QWORD *)v58 != v14)
                  objc_enumerationMutation(obj);
                objc_msgSend(*(id *)(*((_QWORD *)&v57 + 1) + 8 * v15), "group");
                v16 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v16, "startDate");
                v17 = (void *)objc_claimAutoreleasedReturnValue();
                v18 = objc_msgSend(v5, "date:matchesComponents:", v17, v11);

                if (v18)
                {
                  v19 = v11;
                  v20 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
                  v53 = 0u;
                  v54 = 0u;
                  v55 = 0u;
                  v56 = 0u;
                  v21 = v50;
                  v22 = objc_msgSend(v21, "countByEnumeratingWithState:objects:count:", &v53, v68, 16);
                  if (v22)
                  {
                    v23 = v22;
                    v24 = *(_QWORD *)v54;
                    do
                    {
                      for (i = 0; i != v23; ++i)
                      {
                        if (*(_QWORD *)v54 != v24)
                          objc_enumerationMutation(v21);
                        objc_msgSend(*(id *)(*((_QWORD *)&v53 + 1) + 8 * i), "group");
                        v26 = (void *)objc_claimAutoreleasedReturnValue();
                        objc_msgSend(v20, "addObject:", v26);

                      }
                      v23 = objc_msgSend(v21, "countByEnumeratingWithState:objects:count:", &v53, v68, 16);
                    }
                    while (v23);
                  }

                  v27 = (void *)objc_msgSend(v20, "copy");
                  objc_msgSend(v16, "setGroups:", v27);

                  v11 = v19;
                  v14 = v49;
                  v13 = v51;
                }

                ++v15;
              }
              while (v15 != v13);
              v13 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v57, v69, 16);
            }
            while (v13);
          }
          v7 = v44 | v48;

          v8 = v47 + 1;
          v6 = v40;
          a1 = v41;
        }
        while (v47 + 1 != v43);
        v43 = objc_msgSend(v40, "countByEnumeratingWithState:objects:count:", &v61, v70, 16);
      }
      while (v43);

      WeakRetained = v37;
      v3 = v38;
      if ((v7 & 1) != 0)
      {
        v28 = objc_msgSend(*(id *)(v41 + 32), "count");
        objc_msgSend(v40, "firstObject");
        v29 = objc_claimAutoreleasedReturnValue();
        v30 = (void *)v29;
        if (v28)
        {
          v31 = *(_QWORD *)(v41 + 32);
          v67[0] = v29;
          v67[1] = v31;
          v32 = (void *)MEMORY[0x1E0C99D20];
          v33 = v67;
          v34 = 2;
        }
        else
        {
          v66 = v29;
          v32 = (void *)MEMORY[0x1E0C99D20];
          v33 = &v66;
          v34 = 1;
        }
        objc_msgSend(v32, "arrayWithObjects:count:", v33, v34);
        v35 = (void *)objc_claimAutoreleasedReturnValue();

        goto LABEL_34;
      }
    }
    else
    {

    }
    if (objc_msgSend(*(id *)(a1 + 32), "count"))
    {
      v65 = *(_QWORD *)(a1 + 32);
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v65, 1);
      v35 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v35 = (void *)MEMORY[0x1E0C9AA60];
    }
LABEL_34:
    objc_msgSend(v35, "pk_arrayBySafelyApplyingBlock:", &__block_literal_global_398);
    v36 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(WeakRetained, "_updateWithTransactionGroups:", v36);
  }

}

id __59__PKDashboardPaymentPassDataSource_reloadTransactionGroups__block_invoke_5(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  id v4;

  v2 = a2;
  if (objc_msgSend(v2, "count"))
    v3 = v2;
  else
    v3 = 0;
  v4 = v3;

  return v4;
}

- (void)_yearlyTransactionGroupsWithCompletion:(id)a3
{
  id v4;
  uint64_t v5;
  id v6;
  void (**v7)(void *, void *);
  _BOOL4 v8;
  NSObject *v9;
  _BOOL4 v10;
  void *v11;
  PKDashboardTransactionFetcher *transactionFetcher;
  _QWORD v13[4];
  void (**v14)(void *, void *);
  _QWORD aBlock[4];
  id v16;
  id v17;
  id location;
  uint8_t buf[4];
  PKDashboardPaymentPassDataSource *v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  objc_initWeak(&location, self);
  v5 = MEMORY[0x1E0C809B0];
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = __75__PKDashboardPaymentPassDataSource__yearlyTransactionGroupsWithCompletion___block_invoke;
  aBlock[3] = &unk_1E3E63110;
  objc_copyWeak(&v17, &location);
  v6 = v4;
  v16 = v6;
  v7 = (void (**)(void *, void *))_Block_copy(aBlock);
  v8 = -[PKDashboardPaymentPassDataSource isBankConnectLinked](self, "isBankConnectLinked");
  PKLogFacilityTypeGetObject();
  v9 = objc_claimAutoreleasedReturnValue();
  v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);
  if (v8)
  {
    if (v10)
    {
      *(_DWORD *)buf = 134217984;
      v20 = self;
      _os_log_impl(&dword_19D178000, v9, OS_LOG_TYPE_DEFAULT, "Dashboard loading (%p): Processing FinanceKit yearly transaction groups", buf, 0xCu);
    }

    -[PKDashboardPaymentPassDataSource bankConnectYearlyTransactionGroups](self, "bankConnectYearlyTransactionGroups");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v7[2](v7, v11);
  }
  else
  {
    if (v10)
    {
      *(_DWORD *)buf = 134217984;
      v20 = self;
      _os_log_impl(&dword_19D178000, v9, OS_LOG_TYPE_DEFAULT, "Dashboard loading (%p): Fetching yearly transaction groups", buf, 0xCu);
    }

    transactionFetcher = self->_transactionFetcher;
    v13[0] = v5;
    v13[1] = 3221225472;
    v13[2] = __75__PKDashboardPaymentPassDataSource__yearlyTransactionGroupsWithCompletion___block_invoke_399;
    v13[3] = &unk_1E3E61828;
    v14 = v7;
    -[PKDashboardTransactionFetcher transactionCountByPeriod:withCompletion:](transactionFetcher, "transactionCountByPeriod:withCompletion:", 4, v13);
    v11 = v14;
  }

  objc_destroyWeak(&v17);
  objc_destroyWeak(&location);

}

void __75__PKDashboardPaymentPassDataSource__yearlyTransactionGroupsWithCompletion___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  _QWORD *WeakRetained;
  _QWORD *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  PKDashboardPaymentTransactionGroupItem *v13;
  uint64_t v14;
  void *v15;
  id v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5 = WeakRetained;
  if (WeakRetained)
  {
    if ((objc_msgSend(WeakRetained, "_canShowTransactions") & 1) != 0)
    {
      v6 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithCapacity:", objc_msgSend(v3, "count"));
      v17 = 0u;
      v18 = 0u;
      v19 = 0u;
      v20 = 0u;
      v16 = v3;
      v7 = v3;
      v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
      if (v8)
      {
        v9 = v8;
        v10 = *(_QWORD *)v18;
        do
        {
          v11 = 0;
          do
          {
            if (*(_QWORD *)v18 != v10)
              objc_enumerationMutation(v7);
            v12 = *(_QWORD *)(*((_QWORD *)&v17 + 1) + 8 * v11);
            v13 = objc_alloc_init(PKDashboardPaymentTransactionGroupItem);
            -[PKDashboardPaymentTransactionGroupItem setGroup:](v13, "setGroup:", v12);
            -[PKDashboardPaymentTransactionGroupItem setTransactionSourceCollection:](v13, "setTransactionSourceCollection:", v5[6]);
            -[PKDashboardPaymentTransactionGroupItem setFamilyCollection:](v13, "setFamilyCollection:", v5[97]);
            -[PKDashboardPaymentTransactionGroupItem setAccount:](v13, "setAccount:", v5[48]);
            -[PKDashboardPaymentTransactionGroupItem setAccountUserCollection:](v13, "setAccountUserCollection:", v5[94]);
            -[PKDashboardPaymentTransactionGroupItem setPhysicalCards:](v13, "setPhysicalCards:", v5[96]);
            objc_msgSend(v6, "addObject:", v13);

            ++v11;
          }
          while (v9 != v11);
          v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
        }
        while (v9);
      }

      v14 = *(_QWORD *)(a1 + 32);
      v15 = (void *)objc_msgSend(v6, "copy");
      (*(void (**)(uint64_t, void *))(v14 + 16))(v14, v15);

      v3 = v16;
    }
    else
    {
      (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
    }
  }

}

void __75__PKDashboardPaymentPassDataSource__yearlyTransactionGroupsWithCompletion___block_invoke_399(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  _QWORD v6[4];
  id v7;
  id v8;

  v3 = a2;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __75__PKDashboardPaymentPassDataSource__yearlyTransactionGroupsWithCompletion___block_invoke_2;
  v6[3] = &unk_1E3E618A0;
  v4 = *(id *)(a1 + 32);
  v7 = v3;
  v8 = v4;
  v5 = v3;
  dispatch_async(MEMORY[0x1E0C80D38], v6);

}

uint64_t __75__PKDashboardPaymentPassDataSource__yearlyTransactionGroupsWithCompletion___block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

- (id)groupItemForTransactionGroup:(id)a3
{
  id v4;
  PKDashboardPaymentTransactionGroupItem *v5;

  v4 = a3;
  v5 = objc_alloc_init(PKDashboardPaymentTransactionGroupItem);
  -[PKDashboardPaymentTransactionGroupItem setGroup:](v5, "setGroup:", v4);

  -[PKDashboardPaymentTransactionGroupItem setTransactionSourceCollection:](v5, "setTransactionSourceCollection:", self->_transactionSourceCollection);
  -[PKDashboardPaymentTransactionGroupItem setFamilyCollection:](v5, "setFamilyCollection:", self->_familyCollection);
  -[PKDashboardPaymentTransactionGroupItem setAccount:](v5, "setAccount:", self->_account);
  -[PKDashboardPaymentTransactionGroupItem setAccountUserCollection:](v5, "setAccountUserCollection:", self->_accountUserCollection);
  -[PKDashboardPaymentTransactionGroupItem setPhysicalCards:](v5, "setPhysicalCards:", self->_physicalCards);
  return v5;
}

- (void)_monthlyTransactionGroupsWithCompletion:(id)a3
{
  id v4;
  NSObject *v5;
  uint64_t v6;
  id v7;
  void (**v8)(void *, void *);
  _BOOL4 v9;
  _BOOL4 v10;
  void *v11;
  PKDashboardTransactionFetcher *transactionFetcher;
  _QWORD v13[4];
  void (**v14)(void *, void *);
  _QWORD aBlock[4];
  id v16;
  id v17;
  id location;
  uint8_t buf[4];
  PKDashboardPaymentPassDataSource *v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  PKLogFacilityTypeGetObject();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134217984;
    v20 = self;
    _os_log_impl(&dword_19D178000, v5, OS_LOG_TYPE_DEFAULT, "Dashboard loading (%p): Fetching monthly transaction groups", buf, 0xCu);
  }

  objc_initWeak(&location, self);
  v6 = MEMORY[0x1E0C809B0];
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = __76__PKDashboardPaymentPassDataSource__monthlyTransactionGroupsWithCompletion___block_invoke;
  aBlock[3] = &unk_1E3E63110;
  objc_copyWeak(&v17, &location);
  v7 = v4;
  v16 = v7;
  v8 = (void (**)(void *, void *))_Block_copy(aBlock);
  v9 = -[PKDashboardPaymentPassDataSource isBankConnectLinked](self, "isBankConnectLinked");
  v10 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
  if (v9)
  {
    if (v10)
    {
      *(_DWORD *)buf = 134217984;
      v20 = self;
      _os_log_impl(&dword_19D178000, v5, OS_LOG_TYPE_DEFAULT, "Dashboard loading (%p): Processing FinanceKit monthly transaction groups", buf, 0xCu);
    }

    -[PKDashboardPaymentPassDataSource bankConnectMonthlyTransactionGroups](self, "bankConnectMonthlyTransactionGroups");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v8[2](v8, v11);
  }
  else
  {
    if (v10)
    {
      *(_DWORD *)buf = 134217984;
      v20 = self;
      _os_log_impl(&dword_19D178000, v5, OS_LOG_TYPE_DEFAULT, "Dashboard loading (%p): Fetching monthly transaction groups", buf, 0xCu);
    }

    transactionFetcher = self->_transactionFetcher;
    v13[0] = v6;
    v13[1] = 3221225472;
    v13[2] = __76__PKDashboardPaymentPassDataSource__monthlyTransactionGroupsWithCompletion___block_invoke_402;
    v13[3] = &unk_1E3E61828;
    v14 = v8;
    -[PKDashboardTransactionFetcher transactionCountByPeriod:withCompletion:](transactionFetcher, "transactionCountByPeriod:withCompletion:", 8, v13);
    v11 = v14;
  }

  objc_destroyWeak(&v17);
  objc_destroyWeak(&location);

}

void __76__PKDashboardPaymentPassDataSource__monthlyTransactionGroupsWithCompletion___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  id WeakRetained;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t j;
  void *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  void *v32;
  void *v33;
  id obj;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _BYTE v43[128];
  _BYTE v44[128];
  uint64_t v45;

  v45 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5 = WeakRetained;
  if (WeakRetained)
  {
    if ((objc_msgSend(WeakRetained, "_canShowTransactions") & 1) != 0)
    {
      v30 = a1;
      v33 = v5;
      objc_msgSend(MEMORY[0x1E0C99D48], "currentCalendar");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0C99D68], "date");
      v7 = objc_claimAutoreleasedReturnValue();
      v8 = objc_alloc_init(MEMORY[0x1E0C99E08]);
      v39 = 0u;
      v40 = 0u;
      v41 = 0u;
      v42 = 0u;
      v31 = v3;
      obj = v3;
      v9 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v39, v44, 16);
      v32 = (void *)v7;
      if (v9)
      {
        v10 = v9;
        v11 = *(_QWORD *)v40;
        do
        {
          for (i = 0; i != v10; ++i)
          {
            if (*(_QWORD *)v40 != v11)
              objc_enumerationMutation(obj);
            v13 = *(void **)(*((_QWORD *)&v39 + 1) + 8 * i);
            objc_msgSend(v13, "startDate");
            v14 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v6, "components:fromDate:", 14, v14);
            v15 = (void *)objc_claimAutoreleasedReturnValue();
            if ((objc_msgSend(v6, "date:matchesComponents:", v7, v15) & 1) == 0)
            {
              objc_msgSend(v6, "components:fromDate:", 6, v14);
              v16 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v8, "objectForKey:", v16);
              v17 = (id)objc_claimAutoreleasedReturnValue();
              if (!v17)
              {
                v17 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
                objc_msgSend(v8, "setObject:forKey:", v17, v16);
              }
              objc_msgSend(v33, "groupItemForTransactionGroup:", v13);
              v18 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v17, "addObject:", v18);

              v7 = (uint64_t)v32;
            }

          }
          v10 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v39, v44, 16);
        }
        while (v10);
      }

      v19 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
      objc_msgSend(v8, "allKeys");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v20, "sortedArrayUsingComparator:", &__block_literal_global_401);
      v21 = (void *)objc_claimAutoreleasedReturnValue();

      v37 = 0u;
      v38 = 0u;
      v35 = 0u;
      v36 = 0u;
      v22 = v21;
      v23 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v35, v43, 16);
      if (v23)
      {
        v24 = v23;
        v25 = *(_QWORD *)v36;
        do
        {
          for (j = 0; j != v24; ++j)
          {
            if (*(_QWORD *)v36 != v25)
              objc_enumerationMutation(v22);
            objc_msgSend(v8, "objectForKey:", *(_QWORD *)(*((_QWORD *)&v35 + 1) + 8 * j));
            v27 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v19, "addObject:", v27);

          }
          v24 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v35, v43, 16);
        }
        while (v24);
      }

      v28 = *(_QWORD *)(v30 + 32);
      v29 = (void *)objc_msgSend(v19, "copy");
      (*(void (**)(uint64_t, void *))(v28 + 16))(v28, v29);

      v3 = v31;
      v5 = v33;
    }
    else
    {
      (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
    }
  }

}

uint64_t __76__PKDashboardPaymentPassDataSource__monthlyTransactionGroupsWithCompletion___block_invoke_2(uint64_t a1, void *a2, void *a3)
{
  id v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a2;
  v5 = a3;
  v6 = v4;
  v7 = v5;
  v8 = objc_msgSend(v6, "era");
  if (v8 == objc_msgSend(v7, "era"))
  {
    v9 = objc_msgSend(v6, "year");
    if (v9 == objc_msgSend(v7, "year"))
    {
      v10 = 0;
      goto LABEL_9;
    }
    v11 = objc_msgSend(v6, "year");
    v12 = objc_msgSend(v7, "year");
  }
  else
  {
    v11 = objc_msgSend(v6, "era");
    v12 = objc_msgSend(v7, "era");
  }
  if (v11 > v12)
    v10 = -1;
  else
    v10 = 1;
LABEL_9:

  return v10;
}

void __76__PKDashboardPaymentPassDataSource__monthlyTransactionGroupsWithCompletion___block_invoke_402(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  _QWORD v6[4];
  id v7;
  id v8;

  v3 = a2;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __76__PKDashboardPaymentPassDataSource__monthlyTransactionGroupsWithCompletion___block_invoke_2_403;
  v6[3] = &unk_1E3E618A0;
  v4 = *(id *)(a1 + 32);
  v7 = v3;
  v8 = v4;
  v5 = v3;
  dispatch_async(MEMORY[0x1E0C80D38], v6);

}

uint64_t __76__PKDashboardPaymentPassDataSource__monthlyTransactionGroupsWithCompletion___block_invoke_2_403(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 32));
}

- (void)_updateWithTransactionGroups:(id)a3
{
  id v4;
  void *v5;
  NSObject *v6;
  void *v7;
  uint64_t v8;
  id v9;
  void *v10;
  void *v11;
  int v12;
  id WeakRetained;
  id v14;
  _QWORD v15[4];
  id v16;
  id v17;
  id v18[3];
  _QWORD aBlock[4];
  id v20;
  id v21[2];
  uint8_t buf[4];
  PKDashboardPaymentPassDataSource *v23;
  __int16 v24;
  void *v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)objc_msgSend(v4, "count");
  PKLogFacilityTypeGetObject();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134218240;
    v23 = self;
    v24 = 2048;
    v25 = v5;
    _os_log_impl(&dword_19D178000, v6, OS_LOG_TYPE_DEFAULT, "Dashboard loading (%p): Fetched transaction groups: %lu", buf, 0x16u);
  }

  v7 = -[NSArray count](self->_transactionGroups, "count");
  objc_initWeak((id *)buf, self);
  v8 = MEMORY[0x1E0C809B0];
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = __65__PKDashboardPaymentPassDataSource__updateWithTransactionGroups___block_invoke;
  aBlock[3] = &unk_1E3E671C0;
  objc_copyWeak(v21, (id *)buf);
  v9 = v4;
  v20 = v9;
  v21[1] = v5;
  v10 = _Block_copy(aBlock);
  v11 = v10;
  if (self->_allContentIsLoaded)
  {
    v12 = !-[PKDashboardPaymentPassDataSource isBankConnectLinked](self, "isBankConnectLinked");
    if (!v9)
      LOBYTE(v12) = 1;
    if ((v12 & 1) != 0)
    {
      WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
      if (WeakRetained)
      {
        v15[0] = v8;
        v15[1] = 3221225472;
        v15[2] = __65__PKDashboardPaymentPassDataSource__updateWithTransactionGroups___block_invoke_2;
        v15[3] = &unk_1E3E72D20;
        objc_copyWeak(v18, (id *)buf);
        v17 = v11;
        v18[1] = v5;
        v18[2] = v7;
        v14 = WeakRetained;
        v16 = v14;
        objc_msgSend(v14, "performBatchUpdates:completion:", v15, 0);

        objc_destroyWeak(v18);
      }
    }
    else
    {
      -[PKDashboardPaymentPassDataSource _calculateDiffAndUpdateWithTransactionGroups:](self, "_calculateDiffAndUpdateWithTransactionGroups:", v9);
    }
  }
  else
  {
    (*((void (**)(void *))v10 + 2))(v10);
    -[PKDashboardPaymentPassDataSource updateContentIsLoaded](self, "updateContentIsLoaded");
  }

  objc_destroyWeak(v21);
  objc_destroyWeak((id *)buf);

}

void __65__PKDashboardPaymentPassDataSource__updateWithTransactionGroups___block_invoke(uint64_t a1)
{
  _BYTE *WeakRetained;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    WeakRetained[144] = 1;
    v6 = WeakRetained;
    v3 = objc_msgSend(*(id *)(a1 + 32), "copy");
    v4 = (void *)*((_QWORD *)v6 + 111);
    *((_QWORD *)v6 + 111) = v3;

    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", *(_QWORD *)(a1 + 48));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*((id *)v6 + 8), "setObject:forKeyedSubscript:", v5, &unk_1E3FAD930);

    WeakRetained = v6;
  }

}

void __65__PKDashboardPaymentPassDataSource__updateWithTransactionGroups___block_invoke_2(uint64_t a1)
{
  id WeakRetained;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v15 = WeakRetained;
    v3 = objc_msgSend(WeakRetained, "firstSectionIndexForSectionIdentifier:", 16);
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
    v4 = *(_QWORD *)(a1 + 56);
    v5 = *(_QWORD *)(a1 + 64);
    if (v4 <= v5)
    {
      if (v4 >= v5)
      {
        WeakRetained = v15;
        if (!v4)
          goto LABEL_8;
        v8 = *(void **)(a1 + 32);
        v9 = (void *)MEMORY[0x1E0CB36B8];
        v10 = v3;
        goto LABEL_7;
      }
      v12 = *(void **)(a1 + 32);
      objc_msgSend(MEMORY[0x1E0CB36B8], "indexSetWithIndexesInRange:", v4 + v3, v5 - v4);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "deleteSections:", v13);

      v8 = *(void **)(a1 + 32);
      v9 = (void *)MEMORY[0x1E0CB36B8];
      v10 = v3 - 1;
      v11 = *(_QWORD *)(a1 + 56);
    }
    else
    {
      v6 = *(void **)(a1 + 32);
      objc_msgSend(MEMORY[0x1E0CB36B8], "indexSetWithIndexesInRange:", v5 + v3, v4 - v5);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "insertSections:", v7);

      v8 = *(void **)(a1 + 32);
      v9 = (void *)MEMORY[0x1E0CB36B8];
      v10 = v3 - 1;
      v11 = *(_QWORD *)(a1 + 64);
    }
    v4 = v11 + 1;
LABEL_7:
    objc_msgSend(v9, "indexSetWithIndexesInRange:", v10, v4);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "reloadSections:", v14);

    WeakRetained = v15;
  }
LABEL_8:

}

- (void)transactionsChanged:(id)a3
{
  id v4;
  void *v5;
  PKDashboardTransactionFetcher *currentMonthFetcher;
  void *v7;
  void *v8;
  PKDashboardTransactionFetcher *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  NSArray *v13;
  NSArray *currentMonthTransactions;
  _QWORD v15[4];
  id v16;
  id v17;
  id location;
  _QWORD v19[5];

  v4 = a3;
  if (!-[PKDashboardPaymentPassDataSource isBankConnectLinked](self, "isBankConnectLinked"))
  {
    if (-[PKDashboardPaymentPassDataSource _canFilterTransactions](self, "_canFilterTransactions") && self->_filterType)
    {
      objc_initWeak(&location, self);
      objc_msgSend(MEMORY[0x1E0C99D68], "date");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      currentMonthFetcher = self->_currentMonthFetcher;
      PKStartOfMonth();
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      PKEndOfMonth();
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardTransactionFetcher setLimit:startDate:endDate:](currentMonthFetcher, "setLimit:startDate:endDate:", -1, v7, v8);

      v9 = self->_currentMonthFetcher;
      v15[0] = MEMORY[0x1E0C809B0];
      v15[1] = 3221225472;
      v15[2] = __56__PKDashboardPaymentPassDataSource_transactionsChanged___block_invoke_2;
      v15[3] = &unk_1E3E665B8;
      objc_copyWeak(&v17, &location);
      v16 = v4;
      -[PKDashboardTransactionFetcher reloadTransactionsWithCompletion:](v9, "reloadTransactionsWithCompletion:", v15);

      objc_destroyWeak(&v17);
      objc_destroyWeak(&location);
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99D48], "currentCalendar");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0C99D68], "date");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = objc_msgSend(v10, "component:fromDate:", 8, v11);

      v19[0] = MEMORY[0x1E0C809B0];
      v19[1] = 3221225472;
      v19[2] = __56__PKDashboardPaymentPassDataSource_transactionsChanged___block_invoke;
      v19[3] = &__block_descriptor_40_e37_B32__0__PKPaymentTransaction_8Q16_B24l;
      v19[4] = v12;
      objc_msgSend(v4, "pk_objectsPassingTest:", v19);
      v13 = (NSArray *)objc_claimAutoreleasedReturnValue();
      currentMonthTransactions = self->_currentMonthTransactions;
      self->_currentMonthTransactions = v13;

      -[PKDashboardPaymentPassDataSource updateWithTransactions:](self, "updateWithTransactions:", v4);
      -[PKDashboardPaymentPassDataSource reloadTransactionGroups](self, "reloadTransactionGroups");
    }
  }

}

BOOL __56__PKDashboardPaymentPassDataSource_transactionsChanged___block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;

  v3 = (void *)MEMORY[0x1E0C99D48];
  v4 = a2;
  objc_msgSend(v3, "currentCalendar");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "transactionDate");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = objc_msgSend(v5, "component:fromDate:", 8, v6);
  return v7 == *(_QWORD *)(a1 + 32);
}

void __56__PKDashboardPaymentPassDataSource_transactionsChanged___block_invoke_2(uint64_t a1, void *a2)
{
  id *WeakRetained;
  id *v5;
  id v6;

  v6 = a2;
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  v5 = WeakRetained;
  if (WeakRetained)
  {
    objc_storeStrong(WeakRetained + 53, a2);
    objc_msgSend(v5, "updateWithTransactions:", *(_QWORD *)(a1 + 32));
    objc_msgSend(v5, "reloadTransactionGroups");
  }

}

- (void)updateWithTransactions:(id)a3
{
  id v4;
  NSObject *v5;
  id v6;
  NSArray *v7;
  NSArray *previousTransactions;
  _BOOL4 v9;
  void *v10;
  id v11;
  NSArray *transactions;
  uint64_t v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  void *v17;
  void *v18;
  char v19;
  void *v20;
  unint64_t v21;
  void *v22;
  int v23;
  NSDate *v24;
  NSDate *lastTransactionReload;
  NSArray *v26;
  NSArray *v27;
  id WeakRetained;
  id v29;
  unint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t i;
  uint64_t v37;
  void *v38;
  id v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint8_t v44[128];
  uint8_t buf[4];
  PKDashboardPaymentPassDataSource *v46;
  __int16 v47;
  uint64_t v48;
  uint64_t v49;

  v49 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  PKLogFacilityTypeGetObject();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134218240;
    v46 = self;
    v47 = 2048;
    v48 = objc_msgSend(v4, "count");
    _os_log_impl(&dword_19D178000, v5, OS_LOG_TYPE_DEFAULT, "Dashboard loading (%p): Fetched transactions: %lu", buf, 0x16u);
  }

  v6 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  os_unfair_lock_lock(&self->_lockTransactions);
  v7 = (NSArray *)objc_msgSend(v4, "copy");
  previousTransactions = self->_previousTransactions;
  self->_previousTransactions = v7;

  os_unfair_lock_unlock(&self->_lockTransactions);
  v9 = -[PKDashboardPaymentPassDataSource _canShowTransactions](self, "_canShowTransactions");
  v10 = (void *)MEMORY[0x1E0C9AA60];
  if (v9)
    v10 = v4;
  v11 = v10;
  transactions = self->_transactions;
  if (transactions)
  {
    v13 = -[NSArray count](transactions, "count");
    if (v13 == objc_msgSend(v11, "count"))
    {
      v14 = v4;
      v15 = -[PKDashboardPaymentPassDataSource firstSectionIndexForSectionIdentifier:](self, "firstSectionIndexForSectionIdentifier:", 12);
      if (objc_msgSend(v11, "count"))
      {
        v16 = 0;
        do
        {
          if (self->_forceTransactionsUpdate
            || (objc_msgSend(v11, "objectAtIndex:", v16),
                v17 = (void *)objc_claimAutoreleasedReturnValue(),
                -[NSArray objectAtIndex:](self->_transactions, "objectAtIndex:", v16),
                v18 = (void *)objc_claimAutoreleasedReturnValue(),
                v19 = PKEqualObjects(),
                v18,
                v17,
                (v19 & 1) == 0))
          {
            objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", v16, v15);
            v20 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v6, "addObject:", v20);

          }
          ++v16;
        }
        while (v16 < objc_msgSend(v11, "count"));
      }
      v21 = -[PKDashboardPaymentPassDataSource firstSectionIndexForSectionIdentifier:](self, "firstSectionIndexForSectionIdentifier:", 2);
      objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", 4, v21);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "addObject:", v22);

      v23 = 0;
      v4 = v14;
      goto LABEL_17;
    }
    if (-[PKDashboardPaymentPassDataSource isBankConnectLinked](self, "isBankConnectLinked"))
    {
      -[PKDashboardPaymentPassDataSource _calculateDiffAndUpdateWithTransactions:](self, "_calculateDiffAndUpdateWithTransactions:", v11);
      goto LABEL_33;
    }
  }
  v23 = 1;
LABEL_17:
  self->_forceTransactionsUpdate = 0;
  objc_msgSend(MEMORY[0x1E0C99D68], "date");
  v24 = (NSDate *)objc_claimAutoreleasedReturnValue();
  lastTransactionReload = self->_lastTransactionReload;
  self->_lastTransactionReload = v24;

  v26 = (NSArray *)objc_msgSend(v11, "copy");
  v27 = self->_transactions;
  self->_transactions = v26;

  if (self->_allContentIsLoaded)
  {
    WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
    if (WeakRetained)
    {
      if (v23)
      {
        v29 = objc_alloc_init(MEMORY[0x1E0CB3788]);
        objc_msgSend(v29, "addIndex:", -[PKDashboardPaymentPassDataSource firstSectionIndexForSectionIdentifier:](self, "firstSectionIndexForSectionIdentifier:", 12));
        v30 = -[PKDashboardPaymentPassDataSource firstSectionIndexForSectionIdentifier:](self, "firstSectionIndexForSectionIdentifier:", 2);
        objc_msgSend(v29, "addIndex:", v30);
        objc_msgSend(WeakRetained, "reloadSections:", v29);
        objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", 4, v30);
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v6, "addObject:", v31);

      }
      else
      {
        v39 = v4;
        v42 = 0u;
        v43 = 0u;
        v40 = 0u;
        v41 = 0u;
        v32 = v6;
        v33 = objc_msgSend(v32, "countByEnumeratingWithState:objects:count:", &v40, v44, 16);
        if (v33)
        {
          v34 = v33;
          v35 = *(_QWORD *)v41;
          do
          {
            for (i = 0; i != v34; ++i)
            {
              if (*(_QWORD *)v41 != v35)
                objc_enumerationMutation(v32);
              v37 = *(_QWORD *)(*((_QWORD *)&v40 + 1) + 8 * i);
              -[PKDashboardPaymentPassDataSource itemAtIndexPath:](self, "itemAtIndexPath:", v37);
              v38 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(WeakRetained, "itemChanged:atIndexPath:", v38, v37);

            }
            v34 = objc_msgSend(v32, "countByEnumeratingWithState:objects:count:", &v40, v44, 16);
          }
          while (v34);
        }

        v4 = v39;
        if (!objc_msgSend(v32, "count"))
          goto LABEL_32;
      }
      if (self->_account)
        -[PKDashboardPaymentPassDataSource reloadMessages](self, "reloadMessages");
    }
LABEL_32:

    goto LABEL_33;
  }
  -[PKDashboardPaymentPassDataSource updateContentIsLoaded](self, "updateContentIsLoaded");
LABEL_33:

}

- (void)_localeDidChangeNotification:(id)a3
{
  _QWORD v3[4];
  id v4;
  id location;

  objc_initWeak(&location, self);
  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = __65__PKDashboardPaymentPassDataSource__localeDidChangeNotification___block_invoke;
  v3[3] = &unk_1E3E61310;
  objc_copyWeak(&v4, &location);
  dispatch_async(MEMORY[0x1E0C80D38], v3);
  objc_destroyWeak(&v4);
  objc_destroyWeak(&location);
}

void __65__PKDashboardPaymentPassDataSource__localeDidChangeNotification___block_invoke(uint64_t a1)
{
  _BYTE *WeakRetained;
  _BYTE *v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    WeakRetained[145] = 1;
    v2 = WeakRetained;
    objc_msgSend(WeakRetained, "reloadTransactions");
    WeakRetained = v2;
  }

}

- (void)_updateTransactionsTimer
{
  NSObject *timerTransactions;
  OS_dispatch_source *v4;
  OS_dispatch_source *v5;
  OS_dispatch_source *v6;
  NSObject *v7;
  dispatch_time_t v8;
  NSObject *v9;
  _QWORD v10[4];
  id v11;
  id location;

  timerTransactions = self->_timerTransactions;
  if (timerTransactions)
  {
    if (!self->_activeState.foregroundActive)
    {
      dispatch_source_cancel(timerTransactions);
      v4 = self->_timerTransactions;
      self->_timerTransactions = 0;

    }
  }
  else if (self->_activeState.foregroundActive)
  {
    v5 = (OS_dispatch_source *)dispatch_source_create(MEMORY[0x1E0C80DD0], 0, 0, MEMORY[0x1E0C80D38]);
    v6 = self->_timerTransactions;
    self->_timerTransactions = v5;

    v7 = self->_timerTransactions;
    v8 = dispatch_time(0, 60000000000);
    dispatch_source_set_timer(v7, v8, 0xDF8475800uLL, 0x6FC23AC00uLL);
    objc_initWeak(&location, self);
    v9 = self->_timerTransactions;
    v10[0] = MEMORY[0x1E0C809B0];
    v10[1] = 3221225472;
    v10[2] = __60__PKDashboardPaymentPassDataSource__updateTransactionsTimer__block_invoke;
    v10[3] = &unk_1E3E61310;
    objc_copyWeak(&v11, &location);
    dispatch_source_set_event_handler(v9, v10);
    dispatch_resume((dispatch_object_t)self->_timerTransactions);
    objc_destroyWeak(&v11);
    objc_destroyWeak(&location);
  }
}

void __60__PKDashboardPaymentPassDataSource__updateTransactionsTimer__block_invoke(uint64_t a1)
{
  id *WeakRetained;
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id *v8;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v8 = WeakRetained;
    if (objc_msgSend(WeakRetained, "isBankConnectLinked"))
    {
      v2 = objc_msgSend(v8, "firstSectionIndexForSectionIdentifier:", 3);
      objc_msgSend(v8, "delegate");
      v3 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB36B8], "indexSetWithIndex:", v2);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "reloadSections:", v4);
    }
    else
    {
      v3 = v8[20];
      if (!v3)
      {
LABEL_10:

        WeakRetained = v8;
        goto LABEL_11;
      }
      objc_msgSend(MEMORY[0x1E0C99D48], "currentCalendar");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      v5 = objc_msgSend(v4, "component:fromDate:", 16, v3);
      objc_msgSend(MEMORY[0x1E0C99D68], "date");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      v7 = objc_msgSend(v4, "component:fromDate:", 16, v6);

      *((_BYTE *)v8 + 145) = 1;
      if (v5 == v7)
      {
        if ((objc_msgSend(v8, "_isPayLaterPass") & 1) == 0)
          objc_msgSend(v8, "updateWithTransactions:", v8[9]);
      }
      else
      {
        objc_msgSend(v8, "reloadAllContent");
      }
    }

    goto LABEL_10;
  }
LABEL_11:

}

- (void)reloadAuxiliaryItems
{
  void *v3;
  void *v4;
  void *v5;
  NSUInteger v6;
  void *v7;
  id WeakRetained;
  PKPaymentPass *v9;
  id *v10;
  PKPaymentPass *pass;
  _QWORD v12[4];
  id v13;
  id v14[3];
  _QWORD v15[4];
  id v16;
  id v17[2];
  id location;

  -[PKPaymentPass auxiliaryPassInformation](self->_pass, "auxiliaryPassInformation");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = (void *)objc_msgSend(v3, "copy");

  v5 = (void *)objc_msgSend(v4, "count");
  v6 = -[NSArray count](self->_auxiliarySectionInfo, "count");
  if (!self->_allContentIsLoaded)
  {
    objc_initWeak(&location, self);
    pass = self->_pass;
    v15[0] = MEMORY[0x1E0C809B0];
    v15[1] = 3221225472;
    v15[2] = __56__PKDashboardPaymentPassDataSource_reloadAuxiliaryItems__block_invoke;
    v15[3] = &unk_1E3E671C0;
    objc_copyWeak(v17, &location);
    v16 = v4;
    v17[1] = v5;
    -[PKDashboardPaymentPassDataSource _fetchMerchantForAuxiliarySections:pass:completion:](self, "_fetchMerchantForAuxiliarySections:pass:completion:", v16, pass, v15);

    v10 = v17;
    goto LABEL_5;
  }
  v7 = (void *)v6;
  WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);

  if (WeakRetained)
  {
    objc_initWeak(&location, self);
    v9 = self->_pass;
    v12[0] = MEMORY[0x1E0C809B0];
    v12[1] = 3221225472;
    v12[2] = __56__PKDashboardPaymentPassDataSource_reloadAuxiliaryItems__block_invoke_2;
    v12[3] = &unk_1E3E72D48;
    objc_copyWeak(v14, &location);
    v14[1] = v5;
    v14[2] = v7;
    v13 = v4;
    -[PKDashboardPaymentPassDataSource _fetchMerchantForAuxiliarySections:pass:completion:](self, "_fetchMerchantForAuxiliarySections:pass:completion:", v13, v9, v12);

    v10 = v14;
LABEL_5:
    objc_destroyWeak(v10);
    objc_destroyWeak(&location);
  }

}

void __56__PKDashboardPaymentPassDataSource_reloadAuxiliaryItems__block_invoke(uint64_t a1)
{
  id *WeakRetained;
  void *v3;
  id *v4;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v4 = WeakRetained;
    objc_storeStrong(WeakRetained + 10, *(id *)(a1 + 32));
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", *(_QWORD *)(a1 + 48));
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4[8], "setObject:forKeyedSubscript:", v3, &unk_1E3FAD948);

    WeakRetained = v4;
    if (!*((_BYTE *)v4 + 88))
    {
      *((_BYTE *)v4 + 88) = 1;
      objc_msgSend(v4, "updateContentIsLoaded");
      WeakRetained = v4;
    }
  }

}

void __56__PKDashboardPaymentPassDataSource_reloadAuxiliaryItems__block_invoke_2(uint64_t a1)
{
  id *WeakRetained;
  uint64_t v3;
  unint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id *v15;
  _QWORD v16[5];
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (!WeakRetained)
    goto LABEL_13;
  v15 = WeakRetained;
  v3 = objc_msgSend(WeakRetained, "firstSectionIndexForSectionIdentifier:", 17);
  v5 = (unint64_t *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 48);
  if (v6 > v4)
  {
    objc_msgSend(MEMORY[0x1E0CB36B8], "indexSetWithIndexesInRange:", v4 + v3, v6 - v4);
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = 0;
LABEL_6:
    v6 = *v5;
LABEL_7:
    objc_msgSend(MEMORY[0x1E0CB36B8], "indexSetWithIndexesInRange:", v3, v6);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = (void *)v8;
    v11 = (void *)v7;
    goto LABEL_8;
  }
  if (v6 < v4)
  {
    objc_msgSend(MEMORY[0x1E0CB36B8], "indexSetWithIndexesInRange:", v6 + v3, v4 - v6);
    v8 = objc_claimAutoreleasedReturnValue();
    v7 = 0;
    v5 = (unint64_t *)(a1 + 48);
    goto LABEL_6;
  }
  v8 = 0;
  v7 = 0;
  v10 = 0;
  v11 = 0;
  v9 = 0;
  if (v6)
    goto LABEL_7;
LABEL_8:
  if (v9 || v11 || v10)
  {
    v12 = objc_loadWeakRetained(v15 + 5);
    v16[0] = MEMORY[0x1E0C809B0];
    v16[1] = 3221225472;
    v16[2] = __56__PKDashboardPaymentPassDataSource_reloadAuxiliaryItems__block_invoke_3;
    v16[3] = &unk_1E3E6C390;
    v16[4] = v15;
    v13 = *(id *)(a1 + 32);
    v22 = *(_QWORD *)(a1 + 48);
    v17 = v13;
    v18 = v12;
    v19 = v11;
    v20 = v10;
    v21 = v9;
    v14 = v12;
    objc_msgSend(v14, "performBatchUpdates:completion:", v16, 0);

  }
  WeakRetained = v15;
LABEL_13:

}

uint64_t __56__PKDashboardPaymentPassDataSource_reloadAuxiliaryItems__block_invoke_3(uint64_t a1)
{
  void *v2;

  objc_storeStrong((id *)(*(_QWORD *)(a1 + 32) + 80), *(id *)(a1 + 40));
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", *(_QWORD *)(a1 + 80));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 64), "setObject:forKeyedSubscript:", v2, &unk_1E3FAD948);

  objc_msgSend(*(id *)(a1 + 48), "insertSections:", *(_QWORD *)(a1 + 56));
  objc_msgSend(*(id *)(a1 + 48), "deleteSections:", *(_QWORD *)(a1 + 64));
  return objc_msgSend(*(id *)(a1 + 48), "reloadSections:", *(_QWORD *)(a1 + 72));
}

- (void)_fetchMerchantForAuxiliarySections:(id)a3 pass:(id)a4 completion:(id)a5
{
  id v7;
  id v8;
  id v9;
  NSObject *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  id obj;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD block[4];
  id v28;
  _QWORD v29[5];
  NSObject *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _BYTE v39[128];
  _BYTE v40[128];
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v7 = a3;
  v8 = a4;
  v22 = a5;
  v9 = objc_alloc_init(MEMORY[0x1E0D672B0]);
  v10 = dispatch_group_create();
  v35 = 0u;
  v36 = 0u;
  v37 = 0u;
  v38 = 0u;
  obj = v7;
  v25 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v35, v40, 16);
  if (v25)
  {
    v24 = *(_QWORD *)v36;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v36 != v24)
          objc_enumerationMutation(obj);
        v26 = v11;
        v12 = *(void **)(*((_QWORD *)&v35 + 1) + 8 * v11);
        v31 = 0u;
        v32 = 0u;
        v33 = 0u;
        v34 = 0u;
        objc_msgSend(v12, "items", v22);
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        v14 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v31, v39, 16);
        if (v14)
        {
          v15 = v14;
          v16 = *(_QWORD *)v32;
          do
          {
            for (i = 0; i != v15; ++i)
            {
              if (*(_QWORD *)v32 != v16)
                objc_enumerationMutation(v13);
              v18 = *(void **)(*((_QWORD *)&v31 + 1) + 8 * i);
              objc_msgSend(v18, "merchant");
              v19 = (void *)objc_claimAutoreleasedReturnValue();

              if (!v19)
              {
                dispatch_group_enter(v10);
                objc_msgSend(v8, "uniqueID");
                v20 = (void *)objc_claimAutoreleasedReturnValue();
                v29[0] = MEMORY[0x1E0C809B0];
                v29[1] = 3221225472;
                v29[2] = __87__PKDashboardPaymentPassDataSource__fetchMerchantForAuxiliarySections_pass_completion___block_invoke;
                v29[3] = &unk_1E3E72D70;
                v29[4] = v18;
                v30 = v10;
                objc_msgSend(v9, "merchantForPassUniqueIdentifier:withAuxiliaryPassInformationItem:completion:", v20, v18, v29);

              }
            }
            v15 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v31, v39, 16);
          }
          while (v15);
        }

        v11 = v26 + 1;
      }
      while (v26 + 1 != v25);
      v25 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v35, v40, 16);
    }
    while (v25);
  }

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __87__PKDashboardPaymentPassDataSource__fetchMerchantForAuxiliarySections_pass_completion___block_invoke_3;
  block[3] = &unk_1E3E61590;
  v28 = v22;
  v21 = v22;
  dispatch_group_notify(v10, MEMORY[0x1E0C80D38], block);

}

void __87__PKDashboardPaymentPassDataSource__fetchMerchantForAuxiliarySections_pass_completion___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  _QWORD block[5];
  id v7;
  id v8;

  v3 = a2;
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __87__PKDashboardPaymentPassDataSource__fetchMerchantForAuxiliarySections_pass_completion___block_invoke_2;
  block[3] = &unk_1E3E61400;
  v4 = *(void **)(a1 + 40);
  block[4] = *(_QWORD *)(a1 + 32);
  v7 = v3;
  v8 = v4;
  v5 = v3;
  dispatch_async(MEMORY[0x1E0C80D38], block);

}

void __87__PKDashboardPaymentPassDataSource__fetchMerchantForAuxiliarySections_pass_completion___block_invoke_2(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setMerchant:", *(_QWORD *)(a1 + 40));
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

uint64_t __87__PKDashboardPaymentPassDataSource__fetchMerchantForAuxiliarySections_pass_completion___block_invoke_3(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

- (void)reloadTiles
{
  void *v3;
  PKPaymentDefaultDataProvider *paymentDataProvider;
  _QWORD v5[5];
  id v6;
  id location;

  objc_initWeak(&location, self);
  -[PKPaymentPass uniqueID](self->_pass, "uniqueID");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  paymentDataProvider = self->_paymentDataProvider;
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 3221225472;
  v5[2] = __47__PKDashboardPaymentPassDataSource_reloadTiles__block_invoke;
  v5[3] = &unk_1E3E665B8;
  objc_copyWeak(&v6, &location);
  v5[4] = v3;
  -[PKPaymentDefaultDataProvider tilesForPassWithUniqueIdentifier:context:completion:](paymentDataProvider, "tilesForPassWithUniqueIdentifier:context:completion:", v3, 1, v5);
  objc_destroyWeak(&v6);

  objc_destroyWeak(&location);
}

void __47__PKDashboardPaymentPassDataSource_reloadTiles__block_invoke(uint64_t a1, void *a2)
{
  id v3;
  id *WeakRetained;
  id *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  char v11;
  uint64_t v12;
  _QWORD block[6];
  id v14;

  v3 = a2;
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  v5 = WeakRetained;
  if (WeakRetained)
  {
    v6 = *(void **)(a1 + 32);
    objc_msgSend(WeakRetained[109], "uniqueID");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = v6;
    v9 = v7;
    if (v8 == v9)
    {

    }
    else
    {
      v10 = v9;
      if (!v8 || !v9)
      {

        goto LABEL_10;
      }
      v11 = objc_msgSend(v8, "isEqualToString:", v9);

      if ((v11 & 1) == 0)
        goto LABEL_10;
    }
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = __47__PKDashboardPaymentPassDataSource_reloadTiles__block_invoke_2;
    block[3] = &unk_1E3E61400;
    v12 = *(_QWORD *)(a1 + 32);
    block[4] = v5;
    block[5] = v12;
    v14 = v3;
    dispatch_async(MEMORY[0x1E0C80D38], block);

  }
LABEL_10:

}

void __47__PKDashboardPaymentPassDataSource_reloadTiles__block_invoke_2(uint64_t a1)
{
  void *v2;
  int v3;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 872), "uniqueID");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = PKEqualObjects();

  if (v3)
    objc_msgSend(*(id *)(a1 + 32), "_updateWithTiles:", *(_QWORD *)(a1 + 48));
}

- (void)_updateWithTiles:(id)a3
{
  id v4;
  NSArray *v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  id WeakRetained;
  _QWORD v11[5];
  id v12;
  id v13;
  _QWORD aBlock[4];
  id v15;
  id v16;
  id location;

  v4 = a3;
  v5 = self->_tileGroups;
  objc_initWeak(&location, self);
  v6 = MEMORY[0x1E0C809B0];
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = __53__PKDashboardPaymentPassDataSource__updateWithTiles___block_invoke;
  aBlock[3] = &unk_1E3E61B68;
  objc_copyWeak(&v16, &location);
  v7 = v4;
  v15 = v7;
  v8 = _Block_copy(aBlock);
  v9 = v8;
  if (self->_allContentIsLoaded)
  {
    WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
    v11[0] = v6;
    v11[1] = 3221225472;
    v11[2] = __53__PKDashboardPaymentPassDataSource__updateWithTiles___block_invoke_2;
    v11[3] = &unk_1E3E61478;
    objc_copyWeak(&v13, &location);
    v11[4] = v5;
    v12 = v9;
    objc_msgSend(WeakRetained, "performBatchUpdates:completion:", v11, 0);

    objc_destroyWeak(&v13);
  }
  else
  {
    (*((void (**)(void *))v8 + 2))(v8);
    -[PKDashboardPaymentPassDataSource updateContentIsLoaded](self, "updateContentIsLoaded");
  }

  objc_destroyWeak(&v16);
  objc_destroyWeak(&location);

}

void __53__PKDashboardPaymentPassDataSource__updateWithTiles___block_invoke(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  char v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  _QWORD v14[2];

  v14[1] = *MEMORY[0x1E0C80C00];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  *((_BYTE *)WeakRetained + 304) = 1;
  if (objc_msgSend(*(id *)(a1 + 32), "count")
    && (objc_msgSend(*(id *)(a1 + 32), "objectAtIndexedSubscript:", 0),
        v3 = (void *)objc_claimAutoreleasedReturnValue(),
        objc_msgSend(v3, "metadata"),
        v4 = (void *)objc_claimAutoreleasedReturnValue(),
        v5 = objc_msgSend(v4, "isGroupType"),
        v4,
        v3,
        (v5 & 1) == 0))
  {
    objc_msgSend(MEMORY[0x1E0D66F50], "_createDefaultDashboardGroupTileWithChildTiles:", *(_QWORD *)(a1 + 32));
    v8 = objc_claimAutoreleasedReturnValue();
    v9 = (void *)v8;
    if (v8)
    {
      v14[0] = v8;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v14, 1);
      v10 = objc_claimAutoreleasedReturnValue();
      v11 = (void *)*((_QWORD *)WeakRetained + 37);
      *((_QWORD *)WeakRetained + 37) = v10;
    }
    else
    {
      v11 = (void *)*((_QWORD *)WeakRetained + 37);
      *((_QWORD *)WeakRetained + 37) = 0;
    }

  }
  else
  {
    if (objc_msgSend(*(id *)(a1 + 32), "count"))
    {
      v6 = objc_msgSend(*(id *)(a1 + 32), "copy");
      v7 = (void *)*((_QWORD *)WeakRetained + 37);
      *((_QWORD *)WeakRetained + 37) = v6;
    }
    else
    {
      v7 = (void *)*((_QWORD *)WeakRetained + 37);
      *((_QWORD *)WeakRetained + 37) = 0;
    }

  }
  v12 = objc_msgSend(*((id *)WeakRetained + 37), "count");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*((id *)WeakRetained + 8), "setObject:forKeyedSubscript:", v13, &unk_1E3FAD918);

}

void __53__PKDashboardPaymentPassDataSource__updateWithTiles___block_invoke_2(uint64_t a1)
{
  void *v2;
  _QWORD *WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
    +[PKCollectionViewItemsDiffCalculator calculateDiffBetweenOldSections:andNewSections:sectionIdentifier:sectionItemsAccessor:firstSectionIndex:](PKCollectionViewItemsDiffCalculator, "calculateDiffBetweenOldSections:andNewSections:sectionIdentifier:sectionItemsAccessor:firstSectionIndex:", *(_QWORD *)(a1 + 32), WeakRetained[37], &__block_literal_global_410, &__block_literal_global_412, objc_msgSend(WeakRetained, "firstSectionIndexForSectionIdentifier:", 1));
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(WeakRetained, "_applyDiff:", v2);

  }
}

id __53__PKDashboardPaymentPassDataSource__updateWithTiles___block_invoke_3(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;

  objc_msgSend(a2, "metadata");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "identifier");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id __53__PKDashboardPaymentPassDataSource__updateWithTiles___block_invoke_4(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  _QWORD v8[2];

  v8[1] = *MEMORY[0x1E0C80C00];
  objc_msgSend(a2, "tiles");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "count");

  if (!v3)
    return MEMORY[0x1E0C9AA60];
  objc_msgSend(MEMORY[0x1E0CB3A28], "UUID");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "UUIDString");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v8[0] = v5;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v8, 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

- (void)_applyDiff:(id)a3
{
  id v4;
  id WeakRetained;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  unint64_t v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  void *v27;
  void *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _BYTE v33[128];
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
  objc_msgSend(v4, "deletedIndexPaths");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(WeakRetained, "deleteItemsAtIndexPaths:", v6);

  v7 = objc_loadWeakRetained((id *)&self->_delegate);
  objc_msgSend(v4, "deletedSections");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "deleteSections:", v8);

  v9 = objc_loadWeakRetained((id *)&self->_delegate);
  objc_msgSend(v4, "insertedIndexPaths");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "insertItemsAtIndexPaths:", v10);

  v11 = objc_loadWeakRetained((id *)&self->_delegate);
  objc_msgSend(v4, "insertedSections");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "insertSections:", v12);

  objc_msgSend(v4, "movedFromIndexPaths");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "movedToIndexPaths");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v13, "count"))
  {
    v15 = 0;
    do
    {
      v16 = objc_loadWeakRetained((id *)&self->_delegate);
      objc_msgSend(v13, "objectAtIndexedSubscript:", v15);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "objectAtIndexedSubscript:", v15);
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "moveItemAtIndexPath:toIndexPath:", v17, v18);

      ++v15;
    }
    while (objc_msgSend(v13, "count") > v15);
  }
  v28 = v4;
  objc_msgSend(v4, "changedIndexPaths", v14);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v29 = 0u;
  v30 = 0u;
  v31 = 0u;
  v32 = 0u;
  v20 = objc_msgSend(v19, "countByEnumeratingWithState:objects:count:", &v29, v33, 16);
  if (v20)
  {
    v21 = v20;
    v22 = *(_QWORD *)v30;
    do
    {
      v23 = 0;
      do
      {
        if (*(_QWORD *)v30 != v22)
          objc_enumerationMutation(v19);
        v24 = *(_QWORD *)(*((_QWORD *)&v29 + 1) + 8 * v23);
        v25 = objc_loadWeakRetained((id *)&self->_delegate);
        -[PKDashboardPaymentPassDataSource itemAtIndexPath:](self, "itemAtIndexPath:", v24);
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v25, "itemChanged:atIndexPath:", v26, v24);

        ++v23;
      }
      while (v21 != v23);
      v21 = objc_msgSend(v19, "countByEnumeratingWithState:objects:count:", &v29, v33, 16);
    }
    while (v21);
  }

}

- (void)reloadHomeKitRestrictedGuestAccessState
{
  id v3;
  void *v4;
  _QWORD v5[6];
  id v6;
  id location;

  if ((-[PKPaymentPass isHomeKeyPass](self->_pass, "isHomeKeyPass") & 1) != 0)
  {
    v3 = objc_alloc_init(MEMORY[0x1E0D66DC0]);
    -[PKPaymentPass serialNumber](self->_pass, "serialNumber");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_initWeak(&location, self);
    v5[0] = MEMORY[0x1E0C809B0];
    v5[1] = 3221225472;
    v5[2] = __75__PKDashboardPaymentPassDataSource_reloadHomeKitRestrictedGuestAccessState__block_invoke;
    v5[3] = &unk_1E3E72DF8;
    v5[4] = v3;
    v5[5] = v4;
    objc_copyWeak(&v6, &location);
    objc_msgSend(v3, "hasHomeAccessScheduleForPassSerialNumber:withCompletion:", v4, v5);
    objc_destroyWeak(&v6);
    objc_destroyWeak(&location);

  }
  else
  {
    self->_homeKitRestrictedGuestAccessStateLoaded = 1;
  }
}

void __75__PKDashboardPaymentPassDataSource_reloadHomeKitRestrictedGuestAccessState__block_invoke(uint64_t a1, int a2, void *a3)
{
  id v5;
  void *v6;
  uint64_t v7;
  id WeakRetained;
  void *v9;
  _QWORD block[5];
  _QWORD v11[4];
  id v12;
  id v13;

  v5 = a3;
  if (a2)
  {
    v6 = *(void **)(a1 + 32);
    v7 = *(_QWORD *)(a1 + 40);
    v11[0] = MEMORY[0x1E0C809B0];
    v11[1] = 3221225472;
    v11[2] = __75__PKDashboardPaymentPassDataSource_reloadHomeKitRestrictedGuestAccessState__block_invoke_2;
    v11[3] = &unk_1E3E62FA0;
    objc_copyWeak(&v13, (id *)(a1 + 48));
    v12 = v5;
    objc_msgSend(v6, "isHomeAccessRestrictedForPassSerialNumber:withCompletion:", v7, v11);

    objc_destroyWeak(&v13);
  }
  else
  {
    WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    if (WeakRetained)
    {
      v9 = WeakRetained;
      block[0] = MEMORY[0x1E0C809B0];
      block[1] = 3221225472;
      block[2] = __75__PKDashboardPaymentPassDataSource_reloadHomeKitRestrictedGuestAccessState__block_invoke_4;
      block[3] = &unk_1E3E612E8;
      block[4] = WeakRetained;
      dispatch_async(MEMORY[0x1E0C80D38], block);

    }
  }

}

void __75__PKDashboardPaymentPassDataSource_reloadHomeKitRestrictedGuestAccessState__block_invoke_2(uint64_t a1, char a2)
{
  id WeakRetained;
  void *v5;
  _QWORD block[5];
  id v7;
  char v8;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v5 = WeakRetained;
  if (WeakRetained)
  {
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = __75__PKDashboardPaymentPassDataSource_reloadHomeKitRestrictedGuestAccessState__block_invoke_3;
    block[3] = &unk_1E3E64908;
    block[4] = WeakRetained;
    v7 = *(id *)(a1 + 32);
    v8 = a2;
    dispatch_async(MEMORY[0x1E0C80D38], block);

  }
}

uint64_t __75__PKDashboardPaymentPassDataSource_reloadHomeKitRestrictedGuestAccessState__block_invoke_3(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_updateWithHomeKitHasHomeAccessSchedule:homeIdentifier:isHomeAccessRestricted:", 1, *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 48));
}

uint64_t __75__PKDashboardPaymentPassDataSource_reloadHomeKitRestrictedGuestAccessState__block_invoke_4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_updateWithHomeKitHasHomeAccessSchedule:homeIdentifier:isHomeAccessRestricted:", 0, 0, 0);
}

- (void)_updateWithHomeKitHasHomeAccessSchedule:(BOOL)a3 homeIdentifier:(id)a4 isHomeAccessRestricted:(BOOL)a5
{
  _BOOL4 v5;
  int v7;
  id v9;
  int homeKitHasHomeGuestAccessSchedule;
  _BOOL4 v11;
  id WeakRetained;
  id v13;

  v5 = a5;
  v7 = a3;
  v9 = a4;
  homeKitHasHomeGuestAccessSchedule = self->_homeKitHasHomeGuestAccessSchedule;
  v11 = homeKitHasHomeGuestAccessSchedule != v7;
  if (homeKitHasHomeGuestAccessSchedule != v7)
    self->_homeKitHasHomeGuestAccessSchedule = v7;
  v13 = v9;
  if ((-[NSUUID isEqual:](self->_homeKitHomeIdentifier, "isEqual:", v9) & 1) == 0)
  {
    objc_storeStrong((id *)&self->_homeKitHomeIdentifier, a4);
    v11 = 1;
  }
  if (self->_homeKitIsHomeAccessRestricted != v5)
  {
    self->_homeKitIsHomeAccessRestricted = v5;
    v11 = 1;
  }
  self->_homeKitRestrictedGuestAccessStateLoaded = 1;
  -[PKDashboardPaymentPassDataSource reloadMessages](self, "reloadMessages");
  if (self->_allContentIsLoaded)
  {
    if (v11)
    {
      WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
      objc_msgSend(WeakRetained, "reloadNavigationBarAnimated:", 1);

    }
  }
  else
  {
    -[PKDashboardPaymentPassDataSource updateContentIsLoaded](self, "updateContentIsLoaded");
  }

}

- (void)reloadMessages
{
  _QWORD v2[4];
  id v3;
  id location;

  objc_initWeak(&location, self);
  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __50__PKDashboardPaymentPassDataSource_reloadMessages__block_invoke;
  v2[3] = &unk_1E3E61310;
  objc_copyWeak(&v3, &location);
  dispatch_async(MEMORY[0x1E0C80D38], v2);
  objc_destroyWeak(&v3);
  objc_destroyWeak(&location);
}

void __50__PKDashboardPaymentPassDataSource_reloadMessages__block_invoke(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_reloadMessages");

}

- (void)reloadCreditRecoveryPaymentPlans
{
  PKAccountService *accountService;
  void *v4;
  _QWORD v5[4];
  id v6;
  id location;

  objc_initWeak(&location, self);
  accountService = self->_accountService;
  -[PKAccount accountIdentifier](self->_account, "accountIdentifier");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 3221225472;
  v5[2] = __68__PKDashboardPaymentPassDataSource_reloadCreditRecoveryPaymentPlans__block_invoke;
  v5[3] = &unk_1E3E72E48;
  objc_copyWeak(&v6, &location);
  -[PKAccountService creditRecoveryPaymentPlanInformationForAccountIdentifier:allowFetchFromServer:completion:](accountService, "creditRecoveryPaymentPlanInformationForAccountIdentifier:allowFetchFromServer:completion:", v4, 1, v5);

  objc_destroyWeak(&v6);
  objc_destroyWeak(&location);
}

void __68__PKDashboardPaymentPassDataSource_reloadCreditRecoveryPaymentPlans__block_invoke(uint64_t a1, char a2, char a3)
{
  _QWORD v5[4];
  id v6;
  char v7;
  char v8;

  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 3221225472;
  v5[2] = __68__PKDashboardPaymentPassDataSource_reloadCreditRecoveryPaymentPlans__block_invoke_2;
  v5[3] = &unk_1E3E72E20;
  objc_copyWeak(&v6, (id *)(a1 + 32));
  v7 = a2;
  v8 = a3;
  dispatch_async(MEMORY[0x1E0C80D38], v5);
  objc_destroyWeak(&v6);
}

void __68__PKDashboardPaymentPassDataSource_reloadCreditRecoveryPaymentPlans__block_invoke_2(uint64_t a1)
{
  _BYTE *WeakRetained;
  _BYTE *v3;
  char v4;
  NSObject *v5;
  uint8_t v6[16];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    v4 = *(_BYTE *)(a1 + 40);
    if ((v4 != 0) == (WeakRetained[720] == 0) || (*(_BYTE *)(a1 + 41) != 0) == (WeakRetained[721] == 0))
    {
      PKLogFacilityTypeGetObject();
      v5 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v6 = 0;
        _os_log_impl(&dword_19D178000, v5, OS_LOG_TYPE_DEFAULT, "Dashboard credit recovery payment plans have changed", v6, 2u);
      }

      v4 = *(_BYTE *)(a1 + 40);
    }
    v3[720] = v4;
    v3[721] = *(_BYTE *)(a1 + 41);
    v3[722] = 1;
    objc_msgSend(v3, "_reloadMessages");
    if (!v3[739])
      objc_msgSend(v3, "updateContentIsLoaded");
  }

}

- (void)_reloadMessages
{
  NSObject *v3;
  NSObject *v4;
  uint64_t v5;
  PKPrecursorPassUpgradeController *v6;
  id v7;
  PKPaymentPass *pass;
  void *v9;
  PKPrecursorPassUpgradeController *v10;
  NSObject *v11;
  _BOOL8 v12;
  uint64_t v14;
  NSObject *v15;
  PKAccount *account;
  void *v17;
  _BOOL4 v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  NSObject *v23;
  void *v24;
  uint64_t v25;
  PKPeerPaymentAccount *peerPaymentAccount;
  void *v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  char v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  void *v42;
  PKAccount *v43;
  void *v44;
  NSObject *v45;
  id v46;
  void *v47;
  void *v48;
  uint64_t v49;
  PKAccount *v50;
  _BOOL4 v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  void *v55;
  NSObject *v56;
  void *v57;
  NSObject *v58;
  uint64_t v59;
  void *v60;
  NSObject *v61;
  void *v62;
  PKPeerPaymentAccount *v63;
  void *v64;
  char v65;
  void *v66;
  int v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  void *v72;
  double v73;
  double v74;
  void *v75;
  void *v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  void *v86;
  void *v87;
  id v88;
  NSObject *group;
  void *v90;
  void *v91;
  void *v92;
  id v93;
  void *v94;
  id v95;
  void *v96;
  id v97;
  void *v98;
  id v99;
  void *v100;
  id v101;
  BOOL v102;
  id v103;
  void *v104;
  id v105;
  PKPrecursorPassUpgradeController *v106;
  id v107;
  void *v108;
  void *v109;
  void *v110;
  void *v111;
  id v112;
  void *v113;
  id v114;
  _QWORD block[4];
  id v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  id v124;
  id v125;
  id v126;
  id v127;
  id v128;
  id v129;
  id v130;
  id v131;
  id v132;
  id v133;
  id v134;
  PKDashboardPaymentPassDataSource *v135;
  uint64_t *v136;
  _QWORD *v137;
  _QWORD *v138;
  _QWORD *v139;
  _QWORD *v140;
  _QWORD *v141;
  uint64_t *v142;
  _QWORD *v143;
  uint64_t *v144;
  uint64_t *v145;
  uint64_t *v146;
  uint64_t *v147;
  _QWORD *v148;
  uint64_t *v149;
  uint64_t *v150;
  _QWORD *v151;
  _QWORD *v152;
  _QWORD *v153;
  uint64_t *v154;
  uint64_t *v155;
  _QWORD *v156;
  _QWORD *v157;
  _QWORD *v158;
  _QWORD *v159;
  uint64_t *v160;
  _QWORD *v161;
  id v162;
  BOOL v163;
  id location;
  _QWORD v165[4];
  NSObject *v166;
  _QWORD *v167;
  _QWORD v168[5];
  id v169;
  _QWORD v170[4];
  NSObject *v171;
  _QWORD *v172;
  _QWORD v173[4];
  NSObject *v174;
  _QWORD *v175;
  _QWORD v176[4];
  NSObject *v177;
  _QWORD *v178;
  _QWORD v179[4];
  NSObject *v180;
  _QWORD *v181;
  _QWORD v182[5];
  id v183;
  uint64_t v184;
  uint64_t *v185;
  uint64_t v186;
  uint64_t (*v187)(uint64_t, uint64_t);
  void (*v188)(uint64_t);
  id v189;
  _QWORD v190[5];
  id v191;
  _QWORD v192[5];
  id v193;
  uint64_t v194;
  uint64_t *v195;
  uint64_t v196;
  uint64_t (*v197)(uint64_t, uint64_t);
  void (*v198)(uint64_t);
  id v199;
  _QWORD v200[4];
  NSObject *v201;
  _QWORD *v202;
  _QWORD v203[4];
  NSObject *v204;
  _QWORD *v205;
  _QWORD v206[4];
  NSObject *v207;
  _QWORD *v208;
  _QWORD v209[4];
  NSObject *v210;
  _QWORD v211[6];
  _QWORD v212[6];
  _QWORD v213[6];
  _QWORD v214[4];
  NSObject *v215;
  _QWORD *v216;
  _QWORD v217[5];
  id v218;
  _QWORD v219[4];
  PKPrecursorPassUpgradeController *v220;
  PKDashboardPaymentPassDataSource *v221;
  NSObject *v222;
  _QWORD *v223;
  uint64_t *v224;
  uint64_t v225;
  uint64_t *v226;
  uint64_t v227;
  uint64_t (*v228)(uint64_t, uint64_t);
  void (*v229)(uint64_t);
  id v230;
  _QWORD v231[5];
  id v232;
  uint64_t v233;
  uint64_t *v234;
  uint64_t v235;
  uint64_t (*v236)(uint64_t, uint64_t);
  void (*v237)(uint64_t);
  id v238;
  _QWORD v239[5];
  id v240;
  _QWORD v241[5];
  id v242;
  uint64_t v243;
  uint64_t *v244;
  uint64_t v245;
  uint64_t (*v246)(uint64_t, uint64_t);
  void (*v247)(uint64_t);
  id v248;
  _QWORD v249[5];
  id v250;
  uint64_t v251;
  uint64_t *v252;
  uint64_t v253;
  uint64_t (*v254)(uint64_t, uint64_t);
  void (*v255)(uint64_t);
  id v256;
  uint64_t v257;
  uint64_t *v258;
  uint64_t v259;
  uint64_t (*v260)(uint64_t, uint64_t);
  void (*v261)(uint64_t);
  id v262;
  uint64_t v263;
  uint64_t *v264;
  uint64_t v265;
  uint64_t (*v266)(uint64_t, uint64_t);
  void (*v267)(uint64_t);
  id v268;
  uint64_t v269;
  uint64_t *v270;
  uint64_t v271;
  uint64_t (*v272)(uint64_t, uint64_t);
  void (*v273)(uint64_t);
  id v274;
  uint64_t v275;
  uint64_t *v276;
  uint64_t v277;
  uint64_t (*v278)(uint64_t, uint64_t);
  void (*v279)(uint64_t);
  id v280;
  uint64_t v281;
  uint64_t *v282;
  uint64_t v283;
  uint64_t (*v284)(uint64_t, uint64_t);
  void (*v285)(uint64_t);
  id v286;
  _QWORD v287[5];
  id v288;
  _QWORD v289[5];
  id v290;
  _QWORD v291[5];
  id v292;
  _QWORD v293[5];
  id v294;
  _QWORD v295[3];
  char v296;
  _QWORD v297[4];
  NSObject *v298;
  _QWORD *v299;
  _QWORD v300[5];
  id v301;

  if (self->_engagementMessagesLoaded
    && self->_familyCollectionLoaded
    && self->_homeKitRestrictedGuestAccessStateLoaded)
  {
    v3 = dispatch_group_create();
    v300[0] = 0;
    v300[1] = v300;
    v300[2] = 0x3032000000;
    v300[3] = __Block_byref_object_copy__41;
    v300[4] = __Block_byref_object_dispose__41;
    v301 = 0;
    dispatch_group_enter(v3);
    v297[0] = MEMORY[0x1E0C809B0];
    v297[1] = 3221225472;
    v297[2] = __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke;
    v297[3] = &unk_1E3E72E70;
    v299 = v300;
    v4 = v3;
    v298 = v4;
    -[PKDashboardPaymentPassDataSource _messagesForAccountStatusWithCompletion:](self, "_messagesForAccountStatusWithCompletion:", v297);
    -[PKDashboardPaymentPassDataSource _messageForSessionActive](self, "_messageForSessionActive");
    v113 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPaymentPassDataSource _messageForAutoReload](self, "_messageForAutoReload");
    v5 = objc_claimAutoreleasedReturnValue();
    -[PKDashboardPaymentPassDataSource _messageForExpressEducation](self, "_messageForExpressEducation");
    v110 = (void *)objc_claimAutoreleasedReturnValue();
    v111 = (void *)v5;
    v295[0] = 0;
    v295[1] = v295;
    v295[2] = 0x2020000000;
    v296 = 0;
    v293[0] = 0;
    v293[1] = v293;
    v293[2] = 0x3032000000;
    v293[3] = __Block_byref_object_copy__41;
    v293[4] = __Block_byref_object_dispose__41;
    v294 = 0;
    v107 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
    v291[0] = 0;
    v291[1] = v291;
    v291[2] = 0x3032000000;
    v291[3] = __Block_byref_object_copy__41;
    v291[4] = __Block_byref_object_dispose__41;
    v292 = 0;
    v289[0] = 0;
    v289[1] = v289;
    v289[2] = 0x3032000000;
    v289[3] = __Block_byref_object_copy__41;
    v289[4] = __Block_byref_object_dispose__41;
    v290 = 0;
    v287[0] = 0;
    v287[1] = v287;
    v287[2] = 0x3032000000;
    v287[3] = __Block_byref_object_copy__41;
    v287[4] = __Block_byref_object_dispose__41;
    v288 = 0;
    v281 = 0;
    v282 = &v281;
    v283 = 0x3032000000;
    v284 = __Block_byref_object_copy__41;
    v285 = __Block_byref_object_dispose__41;
    v286 = 0;
    v275 = 0;
    v276 = &v275;
    v277 = 0x3032000000;
    v278 = __Block_byref_object_copy__41;
    v279 = __Block_byref_object_dispose__41;
    v280 = 0;
    v269 = 0;
    v270 = &v269;
    v271 = 0x3032000000;
    v272 = __Block_byref_object_copy__41;
    v273 = __Block_byref_object_dispose__41;
    v274 = 0;
    v263 = 0;
    v264 = &v263;
    v265 = 0x3032000000;
    v266 = __Block_byref_object_copy__41;
    v267 = __Block_byref_object_dispose__41;
    v268 = 0;
    v257 = 0;
    v258 = &v257;
    v259 = 0x3032000000;
    v260 = __Block_byref_object_copy__41;
    v261 = __Block_byref_object_dispose__41;
    v262 = 0;
    v251 = 0;
    v252 = &v251;
    v253 = 0x3032000000;
    v254 = __Block_byref_object_copy__41;
    v255 = __Block_byref_object_dispose__41;
    v256 = 0;
    v249[0] = 0;
    v249[1] = v249;
    v249[2] = 0x3032000000;
    v249[3] = __Block_byref_object_copy__41;
    v249[4] = __Block_byref_object_dispose__41;
    v250 = 0;
    v243 = 0;
    v244 = &v243;
    v245 = 0x3032000000;
    v246 = __Block_byref_object_copy__41;
    v247 = __Block_byref_object_dispose__41;
    v248 = 0;
    v241[0] = 0;
    v241[1] = v241;
    v241[2] = 0x3032000000;
    v241[3] = __Block_byref_object_copy__41;
    v241[4] = __Block_byref_object_dispose__41;
    v242 = 0;
    v239[0] = 0;
    v239[1] = v239;
    v239[2] = 0x3032000000;
    v239[3] = __Block_byref_object_copy__41;
    v239[4] = __Block_byref_object_dispose__41;
    v240 = 0;
    v233 = 0;
    v234 = &v233;
    v235 = 0x3032000000;
    v236 = __Block_byref_object_copy__41;
    v237 = __Block_byref_object_dispose__41;
    v238 = 0;
    v231[0] = 0;
    v231[1] = v231;
    v231[2] = 0x3032000000;
    v231[3] = __Block_byref_object_copy__41;
    v231[4] = __Block_byref_object_dispose__41;
    v232 = 0;
    v225 = 0;
    v226 = &v225;
    v227 = 0x3032000000;
    v228 = __Block_byref_object_copy__41;
    v229 = __Block_byref_object_dispose__41;
    v230 = 0;
    dispatch_group_enter(v4);
    v6 = self->_precursorUpgradeController;
    if (!v6)
    {
      v7 = objc_alloc(MEMORY[0x1E0D674E8]);
      pass = self->_pass;
      objc_msgSend(MEMORY[0x1E0D673C8], "sharedService");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v6 = (PKPrecursorPassUpgradeController *)objc_msgSend(v7, "initWithPass:webService:", pass, v9);

      objc_storeStrong((id *)&self->_precursorUpgradeController, v6);
    }
    v219[0] = MEMORY[0x1E0C809B0];
    v219[1] = 3221225472;
    v219[2] = __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_2;
    v219[3] = &unk_1E3E72E98;
    v10 = v6;
    v220 = v10;
    v221 = self;
    v223 = v231;
    v224 = &v233;
    v11 = v4;
    v222 = v11;
    -[PKDashboardPaymentPassDataSource _messageForPrecursorPassUpgradeWithController:completion:](self, "_messageForPrecursorPassUpgradeWithController:completion:", v10, v219);
    v217[0] = 0;
    v217[1] = v217;
    v217[2] = 0x3032000000;
    v217[3] = __Block_byref_object_copy__41;
    v217[4] = __Block_byref_object_dispose__41;
    v218 = 0;
    dispatch_group_enter(v11);
    v106 = v10;
    if (v234[5])
      v12 = 1;
    else
      v12 = self->_isAccessPass || v113 != 0;
    v14 = MEMORY[0x1E0C809B0];
    v214[0] = MEMORY[0x1E0C809B0];
    v214[1] = 3221225472;
    v214[2] = __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_3;
    v214[3] = &unk_1E3E72EC0;
    v216 = v217;
    v15 = v11;
    v215 = v15;
    -[PKDashboardPaymentPassDataSource _messageFromPaymentServiceSuppressingPassStateChanges:completion:](self, "_messageFromPaymentServiceSuppressingPassStateChanges:completion:", v12, v214);
    account = self->_account;
    if (account)
    {
      -[PKAccount creditDetails](account, "creditDetails");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      if (v17)
      {
        v18 = +[PKCreditAccountController shouldDisplayAccountInformationForTransactionSourceCollection:withAccount:](PKCreditAccountController, "shouldDisplayAccountInformationForTransactionSourceCollection:withAccount:", self->_transactionSourceCollection, self->_account);

        if (v18)
        {
          -[PKDashboardPaymentPassDataSource _messagesForPhysicalCard](self, "_messagesForPhysicalCard");
          v104 = (void *)objc_claimAutoreleasedReturnValue();
          -[PKDashboardPaymentPassDataSource _messagesForPhysicalCardExpiration](self, "_messagesForPhysicalCardExpiration");
          v109 = (void *)objc_claimAutoreleasedReturnValue();
          -[PKDashboardPaymentPassDataSource _messagesForInstallmentPlans](self, "_messagesForInstallmentPlans");
          v19 = objc_claimAutoreleasedReturnValue();
          v20 = (void *)v282[5];
          v282[5] = v19;

          -[PKDashboardPaymentPassDataSource _messageForBroadwayDiscoverability](self, "_messageForBroadwayDiscoverability");
          v21 = objc_claimAutoreleasedReturnValue();
          v22 = (void *)v226[5];
          v226[5] = v21;

          v23 = objc_alloc_init(MEMORY[0x1E0D66B90]);
          -[PKAccount creditDetails](self->_account, "creditDetails");
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          v25 = objc_msgSend(v24, "rewardsDestination");

          if (v25 == 1)
          {
            v213[0] = v14;
            v213[1] = 3221225472;
            v213[2] = __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_4;
            v213[3] = &unk_1E3E64F70;
            v213[4] = self;
            v213[5] = v293;
            -[NSObject addOperation:](v23, "addOperation:", v213);
          }
          else if (v25 == 3)
          {
            v212[0] = v14;
            v212[1] = 3221225472;
            v212[2] = __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_6;
            v212[3] = &unk_1E3E64F70;
            v212[4] = self;
            v212[5] = v293;
            -[NSObject addOperation:](v23, "addOperation:", v212);
          }
          v211[0] = v14;
          v211[1] = 3221225472;
          v211[2] = __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_8;
          v211[3] = &unk_1E3E64F70;
          v211[4] = self;
          v211[5] = v291;
          -[NSObject addOperation:](v23, "addOperation:", v211);
          dispatch_group_enter(v15);
          objc_msgSend(MEMORY[0x1E0C99E38], "null");
          v44 = (void *)objc_claimAutoreleasedReturnValue();
          v209[0] = v14;
          v209[1] = 3221225472;
          v209[2] = __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_11;
          v209[3] = &unk_1E3E72F10;
          v45 = v15;
          v210 = v45;
          v46 = (id)-[NSObject evaluateWithInput:completion:](v23, "evaluateWithInput:completion:", v44, v209);

          -[PKDashboardPaymentPassDataSource _cardSharingEducationMessages](self, "_cardSharingEducationMessages");
          v47 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v107, "addObjectsFromArray:", v47);

          dispatch_group_enter(v45);
          v206[0] = v14;
          v206[1] = 3221225472;
          v206[2] = __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_12;
          v206[3] = &unk_1E3E72EC0;
          v208 = v289;
          v207 = v45;
          -[PKDashboardPaymentPassDataSource _messageForPaymentFailedWithCompletion:](self, "_messageForPaymentFailedWithCompletion:", v206);

          goto LABEL_35;
        }
      }
    }
    peerPaymentAccount = self->_peerPaymentAccount;
    if (!peerPaymentAccount)
      goto LABEL_29;
    -[PKPeerPaymentAccount associatedPassUniqueID](peerPaymentAccount, "associatedPassUniqueID");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKPaymentPass uniqueID](self->_pass, "uniqueID");
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    v29 = v27;
    v30 = v28;
    if (v29 == v30)
    {

    }
    else
    {
      v31 = v30;
      if (!v29 || !v30)
      {

        goto LABEL_29;
      }
      v32 = objc_msgSend(v29, "isEqualToString:", v30);

      if ((v32 & 1) == 0)
      {
LABEL_29:
        v43 = self->_account;
        if (!v43 || -[PKAccount feature](v43, "feature") != 4)
        {
          v109 = 0;
          v104 = 0;
          goto LABEL_36;
        }
        dispatch_group_enter(v15);
        v200[0] = v14;
        v200[1] = 3221225472;
        v200[2] = __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_14;
        v200[3] = &unk_1E3E633C0;
        v202 = v239;
        v201 = v15;
        -[PKDashboardPaymentPassDataSource appleBalanceDashboardMessagesWithCompletion:](self, "appleBalanceDashboardMessagesWithCompletion:", v200);
        v109 = 0;
        v104 = 0;
        v23 = v201;
LABEL_35:

LABEL_36:
        v194 = 0;
        v195 = &v194;
        v196 = 0x3032000000;
        v197 = __Block_byref_object_copy__41;
        v198 = __Block_byref_object_dispose__41;
        v199 = 0;
        v192[0] = 0;
        v192[1] = v192;
        v192[2] = 0x3032000000;
        v192[3] = __Block_byref_object_copy__41;
        v192[4] = __Block_byref_object_dispose__41;
        v193 = 0;
        v190[0] = 0;
        v190[1] = v190;
        v190[2] = 0x3032000000;
        v190[3] = __Block_byref_object_copy__41;
        v190[4] = __Block_byref_object_dispose__41;
        v191 = 0;
        v184 = 0;
        v185 = &v184;
        v186 = 0x3032000000;
        v187 = __Block_byref_object_copy__41;
        v188 = __Block_byref_object_dispose__41;
        v189 = 0;
        v182[0] = 0;
        v182[1] = v182;
        v182[2] = 0x3032000000;
        v182[3] = __Block_byref_object_copy__41;
        v182[4] = __Block_byref_object_dispose__41;
        v183 = 0;
        -[PKPaymentPass devicePrimaryPaymentApplication](self->_pass, "devicePrimaryPaymentApplication");
        v48 = (void *)objc_claimAutoreleasedReturnValue();
        v49 = objc_msgSend(v48, "state");

        if (v49 == 7)
        {
          v102 = 0;
          goto LABEL_48;
        }
        v50 = self->_account;
        if (v50)
        {
          if (-[PKAccount type](v50, "type") == 1)
          {
            v51 = 0;
            v102 = -[PKAccount state](self->_account, "state") != 1;
LABEL_45:
            dispatch_group_enter(v15);
            v179[0] = v14;
            v179[1] = 3221225472;
            v179[2] = __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_15;
            v179[3] = &unk_1E3E72E70;
            v181 = v192;
            v180 = v15;
            -[PKDashboardPaymentPassDataSource _messagesForPeerPaymentPendingRequestsWithCompletion:](self, "_messagesForPeerPaymentPendingRequestsWithCompletion:", v179);
            if (v51)
            {
              -[PKDashboardPaymentPassDataSource _peerPaymentAccountStatusMessage](self, "_peerPaymentAccountStatusMessage");
              v52 = objc_claimAutoreleasedReturnValue();
              v53 = (void *)v185[5];
              v185[5] = v52;

            }
            -[PKDashboardPaymentPassDataSource recurringPaymentDashboardMessages](self, "recurringPaymentDashboardMessages");
            v54 = objc_claimAutoreleasedReturnValue();
            v55 = (void *)v195[5];
            v195[5] = v54;

LABEL_48:
            if (self->_showAMPEnrollmentMessage)
            {
              -[PKDashboardPaymentPassDataSource _messageForAMPEnrollment](self, "_messageForAMPEnrollment");
              v100 = (void *)objc_claimAutoreleasedReturnValue();
            }
            else
            {
              v100 = 0;
            }
            dispatch_group_enter(v15);
            v176[0] = v14;
            v176[1] = 3221225472;
            v176[2] = __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_16;
            v176[3] = &unk_1E3E72EC0;
            v178 = v287;
            v56 = v15;
            v177 = v56;
            -[PKDashboardPaymentPassDataSource _messageForEnableNotificationsWithCompletion:](self, "_messageForEnableNotificationsWithCompletion:", v176);
            -[PKDashboardPaymentPassDataSource _messageForPaymentInformationEventExtensionInstallation](self, "_messageForPaymentInformationEventExtensionInstallation");
            v98 = (void *)objc_claimAutoreleasedReturnValue();
            -[PKDashboardPaymentPassDataSource _messagesForAccountUserInvitations](self, "_messagesForAccountUserInvitations");
            v96 = (void *)objc_claimAutoreleasedReturnValue();
            -[PKDashboardPaymentPassDataSource _messagesForAccountUserSetupCashForFamily](self, "_messagesForAccountUserSetupCashForFamily");
            v94 = (void *)objc_claimAutoreleasedReturnValue();
            -[PKDashboardPaymentPassDataSource _messagesToOrderPhysicalCardForUnderageParticipants](self, "_messagesToOrderPhysicalCardForUnderageParticipants");
            v92 = (void *)objc_claimAutoreleasedReturnValue();
            -[PKDashboardPaymentPassDataSource _messagesForLockedCardParticipants](self, "_messagesForLockedCardParticipants");
            v108 = (void *)objc_claimAutoreleasedReturnValue();
            -[PKDashboardPaymentPassDataSource _messageForAccountPendingFamilyMembers](self, "_messageForAccountPendingFamilyMembers");
            v91 = (void *)objc_claimAutoreleasedReturnValue();
            -[PKDashboardPaymentPassDataSource _messageForFirstMonthCoOwners](self, "_messageForFirstMonthCoOwners");
            v90 = (void *)objc_claimAutoreleasedReturnValue();
            if ((-[PKPaymentPass supportedRadioTechnologies](self->_pass, "supportedRadioTechnologies") & 2) != 0)
            {
              -[PKDashboardPaymentPassDataSource _messageForRangingSuspendedPass](self, "_messageForRangingSuspendedPass");
              v57 = (void *)objc_claimAutoreleasedReturnValue();
            }
            else
            {
              v57 = 0;
            }
            dispatch_group_enter(v56);
            v173[0] = v14;
            v173[1] = 3221225472;
            v173[2] = __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_17;
            v173[3] = &unk_1E3E72EC0;
            v175 = v249;
            v58 = v56;
            v174 = v58;
            -[PKDashboardPaymentPassDataSource _messageForUnusableIdentityPassWithCompletion:](self, "_messageForUnusableIdentityPassWithCompletion:", v173);
            -[PKDashboardPaymentPassDataSource _messageForIdentityFirstTimeUse](self, "_messageForIdentityFirstTimeUse");
            v59 = objc_claimAutoreleasedReturnValue();
            v60 = (void *)v244[5];
            v244[5] = v59;

            dispatch_group_enter(v58);
            v170[0] = v14;
            v170[1] = 3221225472;
            v170[2] = __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_18;
            v170[3] = &unk_1E3E72EC0;
            v172 = v241;
            v61 = v58;
            v171 = v61;
            -[PKDashboardPaymentPassDataSource _messageForPassInconsistencyWithCompletion:](self, "_messageForPassInconsistencyWithCompletion:", v170);
            -[PKDashboardPaymentPassDataSource _messageForDeviceAssessmentEducation](self, "_messageForDeviceAssessmentEducation");
            v62 = (void *)objc_claimAutoreleasedReturnValue();
            v168[0] = 0;
            v168[1] = v168;
            v168[2] = 0x3032000000;
            v168[3] = __Block_byref_object_copy__41;
            v168[4] = __Block_byref_object_dispose__41;
            v169 = 0;
            if (PKFinHealthPeerPaymentSuggestionsEnabled()
              && -[PKPeerPaymentAccount supportsRecurringPayments](self->_peerPaymentAccount, "supportsRecurringPayments"))
            {
              v63 = self->_peerPaymentAccount;
              -[PKFamilyMemberCollection currentUser](self->_familyCollection, "currentUser");
              v64 = (void *)objc_claimAutoreleasedReturnValue();
              if (-[PKPeerPaymentAccount isEligibleForRecurringPaymentsForUser:](v63, "isEligibleForRecurringPaymentsForUser:", v64))
              {
                v65 = PKIsVision();

                if ((v65 & 1) != 0)
                  goto LABEL_60;
                dispatch_group_enter(v61);
                v165[0] = v14;
                v165[1] = 3221225472;
                v165[2] = __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_19;
                v165[3] = &unk_1E3E633C0;
                v167 = v168;
                v166 = v61;
                -[PKDashboardPaymentPassDataSource _recurringPeerPaymentSuggestionsWithCompletion:](self, "_recurringPeerPaymentSuggestionsWithCompletion:", v165);
                v64 = v166;
              }

            }
LABEL_60:
            objc_msgSend(MEMORY[0x1E0D673C8], "sharedService");
            v66 = (void *)objc_claimAutoreleasedReturnValue();
            v67 = PKVirtualCardEnabledWithWebService();

            if (!v67)
            {
              v71 = 0;
LABEL_71:
              -[PKDashboardPaymentPassDataSource messageForSavingsAccountFDIC](self, "messageForSavingsAccountFDIC");
              v75 = (void *)objc_claimAutoreleasedReturnValue();
              -[PKDashboardPaymentPassDataSource messagesForSavingsAccountStatus](self, "messagesForSavingsAccountStatus");
              v76 = (void *)objc_claimAutoreleasedReturnValue();
              group = v61;
              -[PKDashboardPaymentPassDataSource _messageForHomeAccessRestricted](self, "_messageForHomeAccessRestricted");
              v87 = (void *)objc_claimAutoreleasedReturnValue();
              objc_initWeak(&location, self);
              block[0] = v14;
              block[1] = 3221225472;
              block[2] = __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_20;
              block[3] = &unk_1E3E72F78;
              objc_copyWeak(&v162, &location);
              v136 = &v184;
              v137 = v289;
              v138 = v300;
              v139 = v295;
              v86 = v57;
              v116 = v57;
              v117 = v108;
              v140 = v249;
              v141 = v231;
              v118 = v109;
              v119 = v75;
              v120 = v76;
              v121 = v113;
              v142 = &v233;
              v143 = v217;
              v122 = v62;
              v123 = v111;
              v144 = &v263;
              v145 = &v257;
              v146 = &v269;
              v147 = &v251;
              v124 = v110;
              v125 = v91;
              v126 = v90;
              v127 = v96;
              v128 = v94;
              v129 = v92;
              v148 = v182;
              v149 = &v281;
              v150 = &v225;
              v151 = v287;
              v130 = v104;
              v131 = v71;
              v152 = v293;
              v153 = v192;
              v154 = &v194;
              v155 = &v275;
              v132 = v100;
              v133 = v98;
              v156 = v190;
              v157 = v241;
              v158 = v239;
              v159 = v291;
              v163 = v102;
              v160 = &v243;
              v161 = v168;
              v134 = v87;
              v135 = self;
              v88 = v87;
              v99 = v98;
              v103 = v100;
              v77 = v71;
              v78 = v104;
              v105 = v92;
              v101 = v94;
              v97 = v96;
              v95 = v90;
              v93 = v91;
              v79 = v110;
              v80 = v111;
              v81 = v62;
              v114 = v113;
              v82 = v76;
              v83 = v75;
              v112 = v109;
              v84 = v108;
              v85 = v86;
              dispatch_group_notify(group, MEMORY[0x1E0C80D38], block);

              objc_destroyWeak(&v162);
              objc_destroyWeak(&location);
              _Block_object_dispose(v168, 8);

              _Block_object_dispose(v182, 8);
              _Block_object_dispose(&v184, 8);

              _Block_object_dispose(v190, 8);
              _Block_object_dispose(v192, 8);

              _Block_object_dispose(&v194, 8);
              _Block_object_dispose(v217, 8);

              _Block_object_dispose(&v225, 8);
              _Block_object_dispose(v231, 8);

              _Block_object_dispose(&v233, 8);
              _Block_object_dispose(v239, 8);

              _Block_object_dispose(v241, 8);
              _Block_object_dispose(&v243, 8);

              _Block_object_dispose(v249, 8);
              _Block_object_dispose(&v251, 8);

              _Block_object_dispose(&v257, 8);
              _Block_object_dispose(&v263, 8);

              _Block_object_dispose(&v269, 8);
              _Block_object_dispose(&v275, 8);

              _Block_object_dispose(&v281, 8);
              _Block_object_dispose(v287, 8);

              _Block_object_dispose(v289, 8);
              _Block_object_dispose(v291, 8);

              _Block_object_dispose(v293, 8);
              _Block_object_dispose(v295, 8);

              _Block_object_dispose(v300, 8);
              return;
            }
            -[PKPaymentPass paymentPass](self->_pass, "paymentPass");
            v68 = (void *)objc_claimAutoreleasedReturnValue();
            v69 = objc_msgSend(v68, "associatedAccountFeatureIdentifier");
            if (objc_msgSend(v68, "supportsVirtualCardNumber")
              && (objc_msgSend(v68, "hasActiveVirtualCard") & 1) == 0)
            {
              -[PKPaymentPass ingestedDate](self->_pass, "ingestedDate");
              v72 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v72, "timeIntervalSinceNow");
              v74 = fabs(v73);

              if (v74 > 300.0)
              {
                -[PKDashboardPaymentPassDataSource _messageForSetUpVirtualCardWithFeatureIdentifier:](self, "_messageForSetUpVirtualCardWithFeatureIdentifier:", v69);
                v70 = objc_claimAutoreleasedReturnValue();
                goto LABEL_68;
              }
            }
            else if (objc_msgSend(v68, "hasActiveVirtualCard"))
            {
              -[PKDashboardPaymentPassDataSource _messageForVirtualCardEnabledWithFeatureIdentifier:](self, "_messageForVirtualCardEnabledWithFeatureIdentifier:", v69);
              v70 = objc_claimAutoreleasedReturnValue();
LABEL_68:
              v71 = (void *)v70;
LABEL_70:

              goto LABEL_71;
            }
            v71 = 0;
            goto LABEL_70;
          }
        }
        else if (self->_peerPaymentAccount && PKPeerPaymentAccountResolutionForAccountAndPeerPaymentPass() == 3)
        {
          v102 = 0;
          v51 = -[PKPeerPaymentAccount role](self->_peerPaymentAccount, "role") == 0;
          goto LABEL_45;
        }
        v102 = 0;
        v51 = 0;
        goto LABEL_45;
      }
    }
    dispatch_group_enter(v15);
    v203[0] = v14;
    v203[1] = 3221225472;
    v203[2] = __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_13;
    v203[3] = &unk_1E3E72EC0;
    v205 = v293;
    v204 = v15;
    -[PKDashboardPaymentPassDataSource _messageForPeerPaymentIdentityVerificationForRewardsWithCompletion:](self, "_messageForPeerPaymentIdentityVerificationForRewardsWithCompletion:", v203);
    -[PKDashboardPaymentPassDataSource _messageForPeerPaymentLockedAccountByAssociatedAccount](self, "_messageForPeerPaymentLockedAccountByAssociatedAccount");
    v33 = objc_claimAutoreleasedReturnValue();
    v34 = (void *)v270[5];
    v270[5] = v33;

    -[PKDashboardPaymentPassDataSource _messageForPeerPaymentFamilySharing](self, "_messageForPeerPaymentFamilySharing");
    v35 = objc_claimAutoreleasedReturnValue();
    v36 = (void *)v276[5];
    v276[5] = v35;

    -[PKDashboardPaymentPassDataSource _messageForPeerPaymentAssociatedAccountStateChangedForSecurityReasons](self, "_messageForPeerPaymentAssociatedAccountStateChangedForSecurityReasons");
    v37 = objc_claimAutoreleasedReturnValue();
    v38 = (void *)v264[5];
    v264[5] = v37;

    -[PKDashboardPaymentPassDataSource _messageForPeerPaymentAssociatedAccountLockedAccount](self, "_messageForPeerPaymentAssociatedAccountLockedAccount");
    v39 = objc_claimAutoreleasedReturnValue();
    v40 = (void *)v258[5];
    v258[5] = v39;

    -[PKDashboardPaymentPassDataSource _messageForPeerPaymentAssociatedAccountPending](self, "_messageForPeerPaymentAssociatedAccountPending");
    v41 = objc_claimAutoreleasedReturnValue();
    v42 = (void *)v252[5];
    v252[5] = v41;

    v109 = 0;
    v104 = 0;
    v23 = v204;
    goto LABEL_35;
  }
}

void __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke(uint64_t a1, void *a2)
{
  id v4;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  v4 = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_2(uint64_t a1, void *a2)
{
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v8 = a2;
  if (v8)
  {
    objc_msgSend(*(id *)(a1 + 32), "setDelegate:", *(_QWORD *)(a1 + 40));
    objc_storeStrong((id *)(*(_QWORD *)(a1 + 40) + 176), *(id *)(a1 + 32));
    v3 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8);
    v4 = v8;
    v5 = *(void **)(v3 + 40);
    *(_QWORD *)(v3 + 40) = v4;
  }
  else
  {
    objc_msgSend(*(id *)(a1 + 40), "_messageForPaymentApplicationStatus");
    v6 = objc_claimAutoreleasedReturnValue();
    v7 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 8);
    v5 = *(void **)(v7 + 40);
    *(_QWORD *)(v7 + 40) = v6;
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

void __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_3(uint64_t a1, void *a2)
{
  id v4;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  v4 = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_4(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  _QWORD v12[4];
  id v13;
  id v14;
  uint64_t v15;

  v6 = a3;
  v7 = a4;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 3221225472;
  v12[2] = __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_5;
  v12[3] = &unk_1E3E72EE8;
  v9 = *(void **)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v14 = v7;
  v15 = v8;
  v13 = v6;
  v10 = v6;
  v11 = v7;
  objc_msgSend(v9, "_messageForPeerPaymentRewardsRedemptionWithCompletion:", v12);

}

void __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_5(uint64_t a1, void *a2)
{
  id v4;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), a2);
  v4 = a2;
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

void __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_6(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  _QWORD v12[4];
  id v13;
  id v14;
  uint64_t v15;

  v6 = a3;
  v7 = a4;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 3221225472;
  v12[2] = __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_7;
  v12[3] = &unk_1E3E72EE8;
  v9 = *(void **)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v14 = v7;
  v15 = v8;
  v13 = v6;
  v10 = v6;
  v11 = v7;
  objc_msgSend(v9, "messageForSavingsRewardsRedemptionWithCompletion:", v12);

}

void __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_7(uint64_t a1, void *a2)
{
  id v4;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), a2);
  v4 = a2;
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

void __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_8(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  _QWORD v12[5];
  id v13;
  id v14;
  uint64_t v15;

  v6 = a3;
  v7 = a4;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 3221225472;
  v12[2] = __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_9;
  v12[3] = &unk_1E3E6C750;
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v14 = v7;
  v15 = v9;
  v12[4] = v8;
  v13 = v6;
  v10 = v6;
  v11 = v7;
  dispatch_async(MEMORY[0x1E0C80D38], v12);

}

void __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_9(uint64_t a1)
{
  void *v2;
  id v3;
  __int128 v4;
  _QWORD v5[4];
  id v6;
  __int128 v7;

  v2 = *(void **)(a1 + 32);
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 3221225472;
  v5[2] = __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_10;
  v5[3] = &unk_1E3E72EE8;
  v4 = *(_OWORD *)(a1 + 48);
  v3 = (id)v4;
  v7 = v4;
  v6 = *(id *)(a1 + 40);
  objc_msgSend(v2, "_messageForInterestChargeWithCompletion:", v5);

}

void __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_10(uint64_t a1, void *a2)
{
  id v4;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), a2);
  v4 = a2;
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

}

void __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_11(uint64_t a1)
{
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_12(uint64_t a1, void *a2)
{
  id v4;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  v4 = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_13(uint64_t a1, void *a2)
{
  id v4;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  v4 = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_14(uint64_t a1, void *a2)
{
  id v4;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  v4 = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_15(uint64_t a1, void *a2)
{
  id v4;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  v4 = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_16(uint64_t a1, void *a2)
{
  id v4;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  v4 = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_17(uint64_t a1, void *a2)
{
  id v4;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  v4 = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_18(uint64_t a1, void *a2)
{
  id v4;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  v4 = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_19(uint64_t a1, void *a2)
{
  id v4;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  v4 = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_20(uint64_t a1)
{
  id *WeakRetained;
  id v3;
  void *v4;
  unint64_t v5;
  unsigned int v7;
  uint64_t v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  id *v19;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 400));
  if (!WeakRetained)
    goto LABEL_109;
  v19 = WeakRetained;
  *((_BYTE *)WeakRetained + 320) = 1;
  v3 = objc_alloc_init(MEMORY[0x1E0C99E10]);
  v4 = v3;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 192) + 8) + 40))
  {
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 200) + 8) + 40))
      objc_msgSend(v3, "addObject:");
    v5 = objc_msgSend(v19[48], "stateReason");
    if (objc_msgSend(v19[48], "state") != 2 || v5 > 8)
      v7 = 0;
    else
      v7 = (0x10Au >> v5) & 1;
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 208) + 8) + 40)
      && ((*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 216) + 8) + 24) != 0) & ~v7) == 0)
    {
      objc_msgSend(v4, "unionOrderedSet:");
    }
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 224) + 8) + 40))
      objc_msgSend(v4, "addObject:");
    if (*(_QWORD *)(a1 + 32))
      objc_msgSend(v4, "addObject:");
    if (objc_msgSend(*(id *)(a1 + 40), "count"))
      objc_msgSend(v4, "addObjectsFromArray:", *(_QWORD *)(a1 + 40));
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 232) + 8) + 40))
      objc_msgSend(v4, "addObject:");
    v8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 240) + 8) + 40);
    if (v8)
    {
      v9 = v19[48];
      if (v9)
      {
        if (objc_msgSend(v9, "state") == 4)
          goto LABEL_27;
        v8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 240) + 8) + 40);
      }
      objc_msgSend(v4, "addObject:", v8);
    }
LABEL_27:
    if (objc_msgSend(*(id *)(a1 + 48), "count"))
      objc_msgSend(v4, "addObjectsFromArray:", *(_QWORD *)(a1 + 48));
    if (*(_QWORD *)(a1 + 56))
      objc_msgSend(v4, "addObject:");
    if (*(_QWORD *)(a1 + 64))
      objc_msgSend(v4, "addObjectsFromArray:");
    if (*(_QWORD *)(a1 + 72))
      objc_msgSend(v4, "addObject:");
    if (*(_QWORD *)(a1 + 80))
      objc_msgSend(v4, "addObject:");
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 248) + 8) + 40))
      objc_msgSend(v4, "addObject:");
    if (*(_QWORD *)(a1 + 88))
      objc_msgSend(v4, "addObject:");
    if (*(_QWORD *)(a1 + 96))
      objc_msgSend(v4, "addObject:");
    if (objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 256) + 8) + 40), "count"))
      objc_msgSend(v4, "addObjectsFromArray:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 256) + 8) + 40));
    if (objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 264) + 8) + 40), "count"))
      objc_msgSend(v4, "addObjectsFromArray:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 264) + 8) + 40));
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 272) + 8) + 40))
      objc_msgSend(v4, "addObject:");
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 280) + 8) + 40))
      objc_msgSend(v4, "addObject:");
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 288) + 8) + 40))
      objc_msgSend(v4, "addObject:");
    objc_msgSend(v19, "payLaterDashboardMessageComposer");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "dashboardMessages");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "array");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "addObjectsFromArray:", v12);

    if (*(_QWORD *)(a1 + 104))
      objc_msgSend(v4, "addObject:");
    if (*(_QWORD *)(a1 + 112))
      objc_msgSend(v4, "addObject:");
    if (objc_msgSend(*(id *)(a1 + 120), "count"))
      objc_msgSend(v4, "addObjectsFromArray:", *(_QWORD *)(a1 + 120));
    if (objc_msgSend(*(id *)(a1 + 128), "count"))
      objc_msgSend(v4, "addObjectsFromArray:", *(_QWORD *)(a1 + 128));
    if (objc_msgSend(*(id *)(a1 + 136), "count"))
      objc_msgSend(v4, "addObjectsFromArray:", *(_QWORD *)(a1 + 136));
    if (objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 296) + 8) + 40), "count"))
      objc_msgSend(v4, "addObjectsFromArray:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 296) + 8) + 40));
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 304) + 8) + 40))
      objc_msgSend(v4, "addObject:");
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 312) + 8) + 40))
      objc_msgSend(v4, "addObject:");
    if (objc_msgSend(*(id *)(a1 + 144), "count"))
      objc_msgSend(v4, "addObjectsFromArray:", *(_QWORD *)(a1 + 144));
    if (*(_QWORD *)(a1 + 152))
      objc_msgSend(v4, "addObject:");
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 320) + 8) + 40))
      objc_msgSend(v4, "addObject:");
    if (objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 328) + 8) + 40), "count"))
      objc_msgSend(v4, "unionOrderedSet:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 328) + 8) + 40));
    if (objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 336) + 8) + 40), "count"))
      objc_msgSend(v4, "unionOrderedSet:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 336) + 8) + 40));
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 344) + 8) + 40))
      objc_msgSend(v4, "addObject:");
    if (objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 352) + 8) + 40), "count"))
      objc_msgSend(v4, "unionOrderedSet:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 352) + 8) + 40));
    if (*(_QWORD *)(a1 + 160))
      objc_msgSend(v4, "addObject:");
    if (*(_QWORD *)(a1 + 168))
      objc_msgSend(v4, "addObject:");
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 360) + 8) + 40))
      objc_msgSend(v4, "addObject:");
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 368) + 8) + 40))
      objc_msgSend(v4, "addObjectsFromArray:");
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 376) + 8) + 40))
      objc_msgSend(v4, "addObject:");
    if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 384) + 8) + 40))
      goto LABEL_95;
  }
  objc_msgSend(v4, "addObject:");
LABEL_95:
  if (objc_msgSend(v19[74], "count"))
  {
    if (*(_BYTE *)(a1 + 408))
    {
      objc_msgSend(v19[74], "pk_objectsPassingTest:", &__block_literal_global_424);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "addObjectsFromArray:", v13);

    }
    else
    {
      objc_msgSend(v4, "addObjectsFromArray:", v19[74]);
    }
  }
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 392) + 8) + 40))
    objc_msgSend(v4, "addObjectsFromArray:");
  if (*(_QWORD *)(a1 + 176))
    objc_msgSend(v4, "addObject:");
  v14 = objc_msgSend(v4, "copy");
  v15 = v19[39];
  v19[39] = (id)v14;

  if (*((_BYTE *)v19 + 739))
  {
    v16 = objc_loadWeakRetained(v19 + 5);
    if (v16)
    {
      v17 = objc_msgSend(*(id *)(a1 + 184), "firstSectionIndexForSectionIdentifier:", 8);
      objc_msgSend(MEMORY[0x1E0CB36B8], "indexSetWithIndex:", v17);
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "reloadSections:", v18);

    }
  }
  else
  {
    objc_msgSend(v19, "updateContentIsLoaded");
  }

  WeakRetained = v19;
LABEL_109:

}

BOOL __51__PKDashboardPaymentPassDataSource__reloadMessages__block_invoke_21(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "type") == 3;
}

- (void)reloadSecondaryMessages
{
  void *v3;
  void *v4;
  _BOOL4 v5;
  void *v6;
  uint64_t v7;
  NSOrderedSet *v8;
  NSOrderedSet *secondaryMessages;
  PKDashboardDataSourceDelegate **p_delegate;
  id WeakRetained;
  unint64_t v12;
  id v13;
  void *v14;
  id v15;

  self->_secondaryMessagesLoaded = 1;
  v15 = objc_alloc_init(MEMORY[0x1E0C99E10]);
  -[PKDashboardPaymentPassDataSource bankConnectMessage](self, "bankConnectMessage");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    -[PKDashboardPaymentPassDataSource bankConnectMessage](self, "bankConnectMessage");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "addObject:", v4);

  }
  if (-[NSOrderedSet count](self->_secondaryMessages, "count"))
  {
    v5 = 1;
    v6 = v15;
  }
  else
  {
    v7 = objc_msgSend(v15, "count");
    v6 = v15;
    v5 = v7 != 0;
  }
  v8 = (NSOrderedSet *)objc_msgSend(v6, "copy");
  secondaryMessages = self->_secondaryMessages;
  self->_secondaryMessages = v8;

  if (self->_allContentIsLoaded)
  {
    p_delegate = &self->_delegate;
    WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
    if (!WeakRetained)
      v5 = 0;

    if (v5)
    {
      v12 = -[PKDashboardPaymentPassDataSource firstSectionIndexForSectionIdentifier:](self, "firstSectionIndexForSectionIdentifier:", 9);
      v13 = objc_loadWeakRetained((id *)p_delegate);
      objc_msgSend(MEMORY[0x1E0CB36B8], "indexSetWithIndex:", v12);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "reloadSections:", v14);

    }
  }
  else
  {
    -[PKDashboardPaymentPassDataSource updateContentIsLoaded](self, "updateContentIsLoaded");
  }

}

- (id)_messageForDeviceAssessmentEducation
{
  PKDashboardPassMessage *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  if (self->_shouldDisplayDeviceAssessmentEducation)
  {
    v3 = objc_alloc_init(PKDashboardPassMessage);
    -[PKDashboardPassMessage setIdentifier:](v3, "setIdentifier:", CFSTR("deviceAssessmentEducation"));
    -[PKDashboardPaymentPassDataSource _deviceAssessmentEducationImage](self, "_deviceAssessmentEducationImage");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setImage:](v3, "setImage:", v4);

    PKLocalizedPaymentString(CFSTR("DEVICE_ASSESSMENT_PASS_DETAILS_EDUCATION_TITLE"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setTitle:](v3, "setTitle:", v5);

    PKLocalizedPaymentString(CFSTR("DEVICE_ASSESSMENT_PASS_DETAILS_EDUCATION_BODY"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setMessage:](v3, "setMessage:", v6);

    PKLocalizedPaymentString(CFSTR("DEVICE_ASSESSMENT_PASS_DETAILS_LEARN_MORE_BUTTON"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setButtonTitle:](v3, "setButtonTitle:", v7);

    -[PKDashboardPassMessage setShowDisclosure:](v3, "setShowDisclosure:", 1);
    -[PKDashboardPaymentPassDataSource actionCallingSelectorWeakly:](self, "actionCallingSelectorWeakly:", sel_openDeviceAssessmentEducationLearnMore);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setActionOnButtonPress:](v3, "setActionOnButtonPress:", v8);

    -[PKDashboardPaymentPassDataSource actionCallingSelectorWeakly:](self, "actionCallingSelectorWeakly:", sel_dismissOnDeviceAssessmentEducation);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setActionOnDismiss:](v3, "setActionOnDismiss:", v9);

    -[PKDashboardPassMessage setActionOnViewed:](v3, "setActionOnViewed:", &__block_literal_global_437_0);
  }
  else
  {
    v3 = 0;
  }
  return v3;
}

void __72__PKDashboardPaymentPassDataSource__messageForDeviceAssessmentEducation__block_invoke()
{
  unint64_t v0;
  NSObject *v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  uint8_t v6[16];

  if (PKTorinoConsentSyncEnabled())
  {
    v0 = objc_msgSend(MEMORY[0x1E0D65188], "pk_privacyContentVersionForContext:", 1);
    if (v0 > PKHasSeenPrivacyTermsVersion())
    {
      PKSetHasSeenPrivacyTermsVersion();
      PKLogFacilityTypeGetObject();
      v1 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)v6 = 0;
        _os_log_impl(&dword_19D178000, v1, OS_LOG_TYPE_DEFAULT, "Privacy UI State sync to server", v6, 2u);
      }

      objc_msgSend(MEMORY[0x1E0D673C8], "sharedService");
      v2 = (void *)objc_claimAutoreleasedReturnValue();
      v3 = objc_alloc(MEMORY[0x1E0D674F8]);
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", v0);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      v5 = (void *)objc_msgSend(v3, "initWithPrivacyUiState:", v4);

      objc_msgSend(v2, "sendPrivacyDeviceAssessmentStateWithRequest:completion:", v5, &__block_literal_global_442);
    }
  }
  else
  {
    PKSetHasSeenDeviceAssessmentEducation();
  }
}

void __72__PKDashboardPaymentPassDataSource__messageForDeviceAssessmentEducation__block_invoke_440(uint64_t a1, int a2, void *a3)
{
  id v4;
  NSObject *v5;
  _BOOL4 v6;
  const char *v7;
  uint8_t *v8;
  __int16 v9;
  __int16 v10;

  v4 = a3;
  PKLogFacilityTypeGetObject();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
  if (a2)
  {
    if (v6)
    {
      v10 = 0;
      v7 = "Privacy UI State version has been synced";
      v8 = (uint8_t *)&v10;
LABEL_6:
      _os_log_impl(&dword_19D178000, v5, OS_LOG_TYPE_DEFAULT, v7, v8, 2u);
    }
  }
  else if (v6)
  {
    v9 = 0;
    v7 = "Privacy UI State version has failed to sync";
    v8 = (uint8_t *)&v9;
    goto LABEL_6;
  }

}

- (id)_deviceAssessmentEducationImage
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  objc_msgSend(MEMORY[0x1E0DC3888], "configurationWithPointSize:", 26.0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0DC3870], "systemImageNamed:withConfiguration:", CFSTR("shield.lefthalf.filled"), v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0DC3658], "whiteColor");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "imageWithTintColor:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0DC3658], "blackColor");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  PKUIImageWithBackground(v5, v6, 45.0, 45.0);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

- (void)openDeviceAssessmentEducationLearnMore
{
  void *v2;
  id v3;

  -[UIView pkui_viewControllerFromResponderChain](self->_groupView, "pkui_viewControllerFromResponderChain");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    objc_msgSend(MEMORY[0x1E0D65198], "presenterForPrivacySplashWithIdentifier:", CFSTR("com.apple.onboarding.applepay"));
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "setPresentingViewController:", v3);
    objc_msgSend(v2, "present");

  }
}

- (void)dismissOnDeviceAssessmentEducation
{
  self->_shouldDisplayDeviceAssessmentEducation = 0;
  -[PKDashboardPaymentPassDataSource reloadMessages](self, "reloadMessages");
}

- (id)actionCallingSelectorWeakly:(SEL)a3
{
  void *v4;
  _QWORD aBlock[4];
  id v7[2];
  id location;

  objc_initWeak(&location, self);
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = __64__PKDashboardPaymentPassDataSource_actionCallingSelectorWeakly___block_invoke;
  aBlock[3] = &unk_1E3E66D38;
  objc_copyWeak(v7, &location);
  v7[1] = (id)a3;
  v4 = _Block_copy(aBlock);
  objc_destroyWeak(v7);
  objc_destroyWeak(&location);
  return v4;
}

void __64__PKDashboardPaymentPassDataSource_actionCallingSelectorWeakly___block_invoke(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    ((void (*)(id, _QWORD))objc_msgSend(WeakRetained, "methodForSelector:", *(_QWORD *)(a1 + 40)))(WeakRetained, *(_QWORD *)(a1 + 40));
    WeakRetained = v3;
  }

}

- (id)_messageForPaymentApplicationStatus
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  PKDashboardPassMessage *v9;
  void *v10;
  uint64_t v12;
  void *v13;
  char v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  char v21;
  PKPaymentPass *pass;
  void *v23;
  void (*v24)(void);
  const __CFString *v25;
  uint64_t v26;
  PKPaymentPass *v27;
  unint64_t v28;
  __CFString **v29;
  void *v30;
  uint64_t v31;
  unint64_t v32;
  void *v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  PKPaymentVerificationController *paymentVerificationController;
  void *v40;
  PKPaymentVerificationController *v41;
  PKPaymentPass *v42;
  uint64_t v43;
  PKPaymentVerificationController *v44;
  PKPaymentVerificationController *v45;
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  void *v56;
  void *v57;
  id v58;
  id v59;
  void *v60;
  int v61;
  void *v62;
  void *v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  void *v82;
  void *v83;
  void *v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  int v95;
  void *v96;
  void *v97;
  void *v98;
  void *v99;
  void *v100;
  void *v101;
  char v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  NSString *v106;
  void *v107;
  void *v108;
  uint64_t v109;
  void *v110;
  void *v111;
  void *v112;
  void *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  _QWORD aBlock[4];
  id v120;
  _QWORD v121[4];
  id v122;
  _QWORD v123[4];
  id v124;
  _QWORD v125[4];
  id v126[3];
  id location[2];

  dispatch_assert_queue_V2(MEMORY[0x1E0C80D38]);
  objc_initWeak(location, self);
  if (self->_isInRestrictedMode)
  {
    PKLocalizedPaymentString(CFSTR("RESTRICTED_MODE_TITLE"));
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    PKLocalizedPaymentString(CFSTR("RESTRICTED_MODE_MESSAGE"));
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = 0;
    v6 = 0;
    v118 = 0;
    v7 = 0;
    goto LABEL_3;
  }
  if (!-[PKPaymentPass hasAssociatedPeerPaymentAccount](self->_pass, "hasAssociatedPeerPaymentAccount"))
  {
LABEL_11:
    v5 = 0;
    v118 = 0;
    v7 = 0;
    v16 = 0;
    v17 = 0;
    v18 = 0;
    v14 = 0;
    goto LABEL_12;
  }
  v12 = -[PKDashboardPaymentPassDataSource _peerPaymentDashboardCondition](self, "_peerPaymentDashboardCondition");
  v14 = 0;
  v5 = 0;
  LODWORD(v118) = 0;
  if (!self->_peerPaymentAccount)
  {
    HIDWORD(v118) = 0;
    v7 = 0;
    v16 = 0;
    v17 = 0;
    v18 = 0;
    goto LABEL_12;
  }
  v15 = (void *)v12;
  HIDWORD(v118) = 0;
  v7 = 0;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  if ((v12 & 0x100) == 0)
    goto LABEL_12;
  v19 = v13;
  if (-[PKPaymentPass activationState](self->_pass, "activationState") == PKPaymentPassActivationStateSuspended)
    goto LABEL_11;
  switch((unint64_t)v19)
  {
    case 1uLL:
      PKLocalizedPeerPaymentString(CFSTR("PEER_PAYMENT_SETUP_APPLE_CASH_TITLE"));
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      PKLocalizedPeerPaymentString(CFSTR("PEER_PAYMENT_ACCOUNT_STATE_FOOTER_ACTION_SETUP"));
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKPeerPaymentAccountResolutionController account](self->_peerPaymentAccountResolutionController, "account");
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v30, "stage") != 1)
        goto LABEL_128;
      v31 = objc_msgSend(v30, "pendingPaymentCount");
      if (v31 < 2)
      {
        if (v31 != 1)
          goto LABEL_128;
        PKSharedCacheGetStringForKey();
        v96 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v96, "length"))
        {
          v97 = (void *)MEMORY[0x1E0D673F8];
          -[PKDashboardPaymentPassDataSource _contactResolver](self, "_contactResolver");
          v98 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v97, "displayNameForAddress:contactResolver:", v96, v98);
          v99 = (void *)objc_claimAutoreleasedReturnValue();

          if (objc_msgSend(v99, "length"))
            v100 = v99;
          else
            v100 = v96;
          PKLocalizedPeerPaymentString(CFSTR("PEER_PAYMENT_ACCOUNT_STATE_FOOTER_SETUP_PERSONALIZED_PENDING_PAYMENTS_BODY"), CFSTR("%@"), v100);
          v17 = (void *)objc_claimAutoreleasedReturnValue();

        }
        else
        {
          PKLocalizedPeerPaymentString(CFSTR("PEER_PAYMENT_ACCOUNT_STATE_FOOTER_SETUP_DEFAULT_PENDING_PAYMENTS_BODY"));
          v17 = (void *)objc_claimAutoreleasedReturnValue();
        }

      }
      else
      {
        PKLocalizedPeerPaymentString(CFSTR("PEER_PAYMENT_ACCOUNT_STATE_FOOTER_SETUP_DEFAULT_PENDING_PAYMENTS_BODY"));
        v17 = (void *)objc_claimAutoreleasedReturnValue();
      }
      if (v17)
        goto LABEL_129;
LABEL_128:
      PKLocalizedPeerPaymentString(CFSTR("PEER_PAYMENT_ACCOUNT_STATE_FOOTER_SETUP_BODY"));
      v17 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_129:
      -[PKDashboardPaymentPassDataSource _messageImageWithName:extension:](self, "_messageImageWithName:extension:", CFSTR("AppleCashIcon"), CFSTR("pdf"));
      v7 = (void *)objc_claimAutoreleasedReturnValue();

      goto LABEL_130;
    case 2uLL:
      PKLocalizedPeerPaymentString(CFSTR("PEER_PAYMENT_ACCOUNT_STATE_FOOTER_IDENTITY_VERIFICATION_BUTTON"));
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      PKLocalizedPeerPaymentString(CFSTR("PEER_PAYMENT_ACCOUNT_STATE_FOOTER_IDENTITY_VERIFICATION_BODY"));
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPaymentPassDataSource _messageImageWithName:extension:](self, "_messageImageWithName:extension:", CFSTR("MessageAlert"), CFSTR("pdf"));
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      if (v16)
      {
        LODWORD(v118) = self->_performingPeerPaymentResolution;
        goto LABEL_132;
      }
      v5 = 0;
      v118 = 0;
      v18 = 0;
      goto LABEL_135;
    case 3uLL:
      v51 = -[PKPeerPaymentAccount role](self->_peerPaymentAccount, "role");
      if (v51 == 1)
      {
        PKLocalizedPeerPaymentLexingtonString(CFSTR("PEER_PAYMENT_DASHBOARD_PARTICIPANT_ACCOUNT_LOCKED_BY_BANK_TITLE"));
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        PKLocalizedPeerPaymentLexingtonString(CFSTR("PEER_PAYMENT_DASHBOARD_PARTICIPANT_ACCOUNT_LOCKED_BY_BANK_MESSAGE"));
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        v16 = 0;
        goto LABEL_96;
      }
      if (v51)
      {
        v16 = 0;
        v17 = 0;
LABEL_95:
        v18 = 0;
        goto LABEL_96;
      }
      -[PKPeerPaymentAccountResolutionController account](self->_peerPaymentAccountResolutionController, "account");
      v52 = (void *)objc_claimAutoreleasedReturnValue();
      v53 = objc_msgSend(v52, "stateReason");

      v54 = v53 & 0xFFFFFFFFFFFFFFFELL;
      if ((v53 & 0xFFFFFFFFFFFFFFFELL) == 4)
      {
        v9 = 0;
        goto LABEL_6;
      }
      PKLocalizedPeerPaymentString(CFSTR("PEER_PAYMENT_ACCOUNT_STATE_FOOTER_CONTACT_SUPPORT_BUTTON"));
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKPeerPaymentAccountResolutionController account](self->_peerPaymentAccountResolutionController, "account");
      v104 = (void *)objc_claimAutoreleasedReturnValue();
      v105 = objc_msgSend(v104, "state");

      if (v105 != 2)
      {
        PKLocalizedPeerPaymentString(CFSTR("PEER_PAYMENT_ACCOUNT_STATE_FOOTER_CONTACT_SUPPORT_BODY"));
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        goto LABEL_95;
      }
      if (v54 != 6)
      {
        PKDeviceSpecificLocalizedStringKeyForKey(CFSTR("PEER_PAYMENT_ACCOUNT_STATE_FOOTER_RESTRICTED_CONTACT_SUPPORT_BODY"), 0);
        v106 = (NSString *)objc_claimAutoreleasedReturnValue();
        PKLocalizedPeerPaymentString(v106);
        v17 = (void *)objc_claimAutoreleasedReturnValue();

        goto LABEL_95;
      }
      PKLocalizedPeerPaymentString(CFSTR("PEER_PAYMENT_ACCOUNT_STATE_RESTRICTED_NOMO_TITLE"));
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      PKLocalizedPeerPaymentString(CFSTR("PEER_PAYMENT_ACCOUNT_STATE_RESTRICTED_NOMO_MESSAGE"));
      v17 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_96:
      -[PKDashboardPaymentPassDataSource _messageImageWithName:extension:](self, "_messageImageWithName:extension:", CFSTR("MessageAlert"), CFSTR("pdf"));
      v92 = objc_claimAutoreleasedReturnValue();
LABEL_101:
      v7 = (void *)v92;
LABEL_130:
      if (v16)
      {
        LODWORD(v118) = self->_performingPeerPaymentResolution;
        if (!v18)
        {
LABEL_132:
          PKLocalizedPeerPaymentString(CFSTR("PEER_PAYMENT_ACCOUNT_STATE_FOOTER_TITLE"));
          v18 = (void *)objc_claimAutoreleasedReturnValue();
        }
        v125[0] = MEMORY[0x1E0C809B0];
        v125[1] = 3221225472;
        v125[2] = __71__PKDashboardPaymentPassDataSource__messageForPaymentApplicationStatus__block_invoke;
        v125[3] = &unk_1E3E71038;
        objc_copyWeak(v126, location);
        v126[1] = v15;
        v126[2] = v19;
        v5 = _Block_copy(v125);
        objc_destroyWeak(v126);
        HIDWORD(v118) = 1;
      }
      else
      {
        v5 = 0;
        v118 = 0;
      }
LABEL_135:
      v14 = 1;
LABEL_12:
      if ((PKNeedsLostModeExitAuth() & 1) != 0)
        v20 = 7;
      else
        v20 = -[PKPaymentPass effectiveContactlessPaymentApplicationState](self->_pass, "effectiveContactlessPaymentApplicationState");
      v117 = v20;
      if (v20 == 1)
        v21 = 1;
      else
        v21 = v14;
      if ((v21 & 1) != 0)
      {
        v8 = v16;
        v4 = v17;
        v3 = v18;
      }
      else
      {
        PKPassLocalizedStringForStateWithFormat(CFSTR("PASS_DASHBOARD_TITLE"), &self->_pass->super, 0);
        v3 = (void *)objc_claimAutoreleasedReturnValue();

        pass = self->_pass;
        -[PKPaymentPass localizedDescription](pass, "localizedDescription");
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        PKPassLocalizedStringForStateWithFormat(CFSTR("PASS_DASHBOARD_DETAIL"), &pass->super, CFSTR("%@"), v23);
        v4 = (void *)objc_claimAutoreleasedReturnValue();

        PKPassLocalizedStringForStateWithFormat(CFSTR("PASS_DASHBOARD_BUTTON_TITLE"), &self->_pass->super, 0);
        v8 = (void *)objc_claimAutoreleasedReturnValue();

        if (objc_msgSend(v3, "length"))
        {
          if (objc_msgSend(v4, "length"))
            goto LABEL_24;
          goto LABEL_29;
        }
      }
      if ((v14 & 1) != 0)
        goto LABEL_24;
LABEL_29:
      if ((-[PKPaymentPass supportsBarcodePayment](self->_pass, "supportsBarcodePayment") & 1) != 0)
      {
        v24 = (void (*)(void))MEMORY[0x1E0D6BD88];
        v25 = CFSTR("_ACCOUNT");
        goto LABEL_47;
      }
      v26 = -[PKPaymentPass cardType](self->_pass, "cardType");
      v27 = self->_pass;
      if (v26 == 3)
      {
        v28 = -[PKPaymentPass accessType](v27, "accessType") - 1;
        if (v28 < 6)
        {
          v29 = &off_1E3E73B18[v28];
          v24 = (void (*)(void))MEMORY[0x1E0D6BDD0];
LABEL_44:
          v25 = *v29;
          goto LABEL_47;
        }
        goto LABEL_45;
      }
      if (-[PKPaymentPass cardType](v27, "cardType") != 4)
      {
LABEL_45:
        v24 = (void (*)(void))MEMORY[0x1E0D6BDD0];
        goto LABEL_46;
      }
      v32 = -[PKPaymentPass identityType](self->_pass, "identityType");
      if (v32 < 4)
      {
        v29 = &off_1E3E73B48[v32];
        v24 = (void (*)(void))MEMORY[0x1E0D6BDF8];
        goto LABEL_44;
      }
      v24 = (void (*)(void))MEMORY[0x1E0D6BDF8];
LABEL_46:
      v25 = &stru_1E3E7D690;
LABEL_47:
      if ((-[PKPaymentPass isShellPass](self->_pass, "isShellPass") & 1) != 0)
      {
LABEL_48:
        v9 = 0;
        goto LABEL_5;
      }
      v9 = 0;
      switch(v117)
      {
        case 0uLL:
        case 8uLL:
          goto LABEL_50;
        case 1uLL:
          -[PKPeerPaymentAccount associatedPassUniqueID](self->_peerPaymentAccount, "associatedPassUniqueID");
          v56 = (void *)objc_claimAutoreleasedReturnValue();
          -[PKPaymentPass uniqueID](self->_pass, "uniqueID");
          v57 = (void *)objc_claimAutoreleasedReturnValue();
          v58 = v56;
          v59 = v57;
          v60 = v59;
          if (v58 == v59)
          {

          }
          else
          {
            if (!v58 || !v59)
            {

LABEL_112:
              goto LABEL_113;
            }
            v61 = objc_msgSend(v58, "isEqualToString:", v59);

            if (!v61)
              goto LABEL_112;
          }
          v93 = -[PKPeerPaymentAccount role](self->_peerPaymentAccount, "role");

          if (v93 == 1)
          {
            v94 = -[PKPeerPaymentAccount isParticipantAccountLockedByOwner](self->_peerPaymentAccount, "isParticipantAccountLockedByOwner");
            v95 = 1;
            goto LABEL_114;
          }
LABEL_113:
          v95 = 0;
          v94 = 0;
LABEL_114:
          -[PKPaymentPass devicePrimaryContactlessPaymentApplication](self->_pass, "devicePrimaryContactlessPaymentApplication");
          v101 = (void *)objc_claimAutoreleasedReturnValue();
          if (v101
            || (-[PKPaymentPass deviceInAppPaymentApplications](self->_pass, "deviceInAppPaymentApplications"),
                v101 = (void *)objc_claimAutoreleasedReturnValue(),
                !objc_msgSend(v101, "count")))
          {

            goto LABEL_48;
          }
          v102 = -[PKPaymentPass supportsBarcodePayment](self->_pass, "supportsBarcodePayment") | v94;

          if ((v102 & 1) != 0)
            goto LABEL_48;
          if (v95)
          {
            PKLocalizedPeerPaymentLexingtonString(CFSTR("PEER_PAYMENT_DASHBOARD_PARTCIPANT_MESSAGE_PASS_PROVISIONED_TITLE"));
            v103 = objc_claimAutoreleasedReturnValue();

            PKLocalizedPeerPaymentLexingtonString(CFSTR("PEER_PAYMENT_DASHBOARD_PARTCIPANT_MESSAGE_PASS_PROVISIONED_NO_CONTACTLESS_MESSAGE"));
            v79 = objc_claimAutoreleasedReturnValue();

            v3 = (void *)v103;
LABEL_84:
            v4 = (void *)v79;
            goto LABEL_24;
          }
          -[PKPaymentPass organizationName](self->_pass, "organizationName");
          v107 = (void *)objc_claimAutoreleasedReturnValue();

          if (v107)
          {
            -[PKPaymentPass organizationName](self->_pass, "organizationName");
            v108 = (void *)objc_claimAutoreleasedReturnValue();
            PKLocalizedPaymentString(CFSTR("DASHBOARD_MESSAGE_TITLE_FORMAT"), CFSTR("%@"), v108);
            v109 = objc_claimAutoreleasedReturnValue();

          }
          else
          {
            PKLocalizedPaymentString(CFSTR("DASHBOARD_MESSAGE_DEFAULT_TITLE"));
            v109 = objc_claimAutoreleasedReturnValue();

          }
          -[PKPaymentPass localizedDescription](self->_pass, "localizedDescription");
          v110 = (void *)objc_claimAutoreleasedReturnValue();
          PKLocalizedPaymentString(CFSTR("PAYMENT_APP_NO_CONTACTLESS"), CFSTR("%@"), v110);
          v91 = objc_claimAutoreleasedReturnValue();

          v3 = (void *)v109;
          goto LABEL_91;
        case 2uLL:
          -[PKPaymentPass provisioningMetadata](self->_pass, "provisioningMetadata");
          v62 = (void *)objc_claimAutoreleasedReturnValue();
          v63 = v62;
          if (!v62 || objc_msgSend(v62, "sourceDeviceType") != 1)
          {
            PKLocalizedPaymentString(CFSTR("ACTIVATING_TITLE"));
            v114 = objc_claimAutoreleasedReturnValue();

            objc_msgSend(CFSTR("ACTIVATING_MESSAGE"), "stringByAppendingString:", v25);
            v65 = (void *)objc_claimAutoreleasedReturnValue();
            v24();
            v66 = objc_claimAutoreleasedReturnValue();
            goto LABEL_89;
          }
          PKLocalizedPaymentString(CFSTR("TRANSFERRING_TITLE"));
          v114 = objc_claimAutoreleasedReturnValue();

          objc_msgSend(v63, "localizedSourceDeviceDescription");
          v64 = objc_claimAutoreleasedReturnValue();
          v65 = (void *)v64;
          if (v64)
          {
            PKLocalizedPaymentString(CFSTR("TRANSFERRING_MESSAGE_TRANSFERRING_DEVICE"), CFSTR("%@"), v64);
            v66 = objc_claimAutoreleasedReturnValue();
LABEL_89:
            v91 = v66;
            goto LABEL_90;
          }
          PKLocalizedPaymentString(CFSTR("TRANSFERRING_MESSAGE_TRANSFERRING"));
          v91 = objc_claimAutoreleasedReturnValue();
          v65 = 0;
LABEL_90:

          v3 = (void *)v114;
LABEL_91:
          v4 = (void *)v91;
LABEL_24:
          v6 = 0;
          if (!objc_msgSend(v8, "length") || v5)
            goto LABEL_4;
          if (v117 <= 0xA)
          {
            if (((1 << v117) & 0x521) != 0)
            {
              aBlock[0] = MEMORY[0x1E0C809B0];
              aBlock[1] = 3221225472;
              aBlock[2] = __71__PKDashboardPaymentPassDataSource__messageForPaymentApplicationStatus__block_invoke_4;
              aBlock[3] = &unk_1E3E61310;
              objc_copyWeak(&v120, location);
              v5 = _Block_copy(aBlock);
              objc_destroyWeak(&v120);
              v6 = 1;
              goto LABEL_4;
            }
            if (((1 << v117) & 0x18) != 0)
            {
              v123[0] = MEMORY[0x1E0C809B0];
              v123[1] = 3221225472;
              v123[2] = __71__PKDashboardPaymentPassDataSource__messageForPaymentApplicationStatus__block_invoke_2;
              v123[3] = &unk_1E3E61310;
              objc_copyWeak(&v124, location);
              v5 = _Block_copy(v123);
              objc_destroyWeak(&v124);
              v6 = 0;
              HIDWORD(v118) = 1;
              goto LABEL_4;
            }
            if (v117 == 7)
            {
              v121[0] = MEMORY[0x1E0C809B0];
              v121[1] = 3221225472;
              v121[2] = __71__PKDashboardPaymentPassDataSource__messageForPaymentApplicationStatus__block_invoke_3;
              v121[3] = &unk_1E3E61310;
              objc_copyWeak(&v122, location);
              v5 = _Block_copy(v121);
              objc_destroyWeak(&v122);
              v6 = 0;
              goto LABEL_4;
            }
          }

          v5 = 0;
          v6 = 0;
LABEL_3:
          v8 = 0;
LABEL_4:
          v9 = objc_alloc_init(PKDashboardPassMessage);
          -[PKDashboardPassMessage setIdentifier:](v9, "setIdentifier:", CFSTR("applicationState"));
          objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", self->_pass);
          v10 = (void *)objc_claimAutoreleasedReturnValue();
          -[PKDashboardPassMessage setAnalyticsReporterSubject:](v9, "setAnalyticsReporterSubject:", v10);

          -[PKDashboardPassMessage setTitle:](v9, "setTitle:", v3);
          -[PKDashboardPassMessage setMessage:](v9, "setMessage:", v4);
          -[PKDashboardPassMessage setButtonTitle:](v9, "setButtonTitle:", v8);
          -[PKDashboardPassMessage setActionOnButtonPress:](v9, "setActionOnButtonPress:", v5);
          -[PKDashboardPassMessage setShowSpinner:](v9, "setShowSpinner:", v118);
          -[PKDashboardPassMessage setShowDisclosure:](v9, "setShowDisclosure:", HIDWORD(v118));
          -[PKDashboardPassMessage setIsDestructiveAction:](v9, "setIsDestructiveAction:", v6);
          -[PKDashboardPassMessage setImage:](v9, "setImage:", v7);
LABEL_5:

LABEL_6:
          objc_destroyWeak(location);
          return v9;
        case 3uLL:
        case 4uLL:
          paymentVerificationController = self->_paymentVerificationController;
          if (!paymentVerificationController)
          {
            objc_msgSend(MEMORY[0x1E0D673C8], "sharedService");
            v40 = (void *)objc_claimAutoreleasedReturnValue();
            v41 = [PKPaymentVerificationController alloc];
            v42 = self->_pass;
            -[PKPassGroupView frontmostPassView](self->_groupView, "frontmostPassView");
            v43 = objc_claimAutoreleasedReturnValue();
            v44 = -[PKPaymentVerificationController initWithPaymentPass:passView:webService:context:delegate:setupDelegate:verificationContext:](v41, "initWithPaymentPass:passView:webService:context:delegate:setupDelegate:verificationContext:", v42, v43, v40, 0, self, 0, 2);
            v45 = self->_paymentVerificationController;
            self->_paymentVerificationController = v44;

            v113 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D67230]), "initWithWebService:", v40);
            -[PKPaymentVerificationController setProvisioningController:](self->_paymentVerificationController, "setProvisioningController:", v113);
            -[PKPaymentVerificationController verificationRecord](self->_paymentVerificationController, "verificationRecord");
            v46 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v46, "channel");
            v47 = (void *)objc_claimAutoreleasedReturnValue();
            LOBYTE(v43) = objc_msgSend(v47, "needsServerRequest");

            if ((v43 & 1) == 0)
              -[PKPaymentVerificationController clearSelectedChannel](self->_paymentVerificationController, "clearSelectedChannel");

            paymentVerificationController = self->_paymentVerificationController;
          }
          -[PKPaymentVerificationController verificationTitleString](paymentVerificationController, "verificationTitleString");
          v48 = objc_claimAutoreleasedReturnValue();

          -[PKPaymentVerificationController verificationBodyString](self->_paymentVerificationController, "verificationBodyString");
          v49 = objc_claimAutoreleasedReturnValue();

          -[PKPaymentVerificationController continueVerificationButtonTitle](self->_paymentVerificationController, "continueVerificationButtonTitle");
          v50 = objc_claimAutoreleasedReturnValue();

          v3 = (void *)v48;
          v4 = (void *)v49;
          v8 = (void *)v50;
          goto LABEL_24;
        case 5uLL:
          objc_msgSend(CFSTR("PAYMENT_APP_ERROR_TITLE"), "stringByAppendingString:", v25);
          v67 = (void *)objc_claimAutoreleasedReturnValue();
          v24();
          v34 = objc_claimAutoreleasedReturnValue();

          objc_msgSend(CFSTR("PAYMENT_APP_VERIFICATION_TERMINATED"), "stringByAppendingString:", v25);
          v68 = (void *)objc_claimAutoreleasedReturnValue();
          v24();
          v36 = objc_claimAutoreleasedReturnValue();

          objc_msgSend(CFSTR("DELETE_PASS"), "stringByAppendingString:", v25);
          v37 = (void *)objc_claimAutoreleasedReturnValue();
          v24();
          v38 = objc_claimAutoreleasedReturnValue();
          goto LABEL_79;
        case 6uLL:
          objc_msgSend(CFSTR("PAYMENT_APP_ERROR_TITLE"), "stringByAppendingString:", v25);
          v70 = (void *)objc_claimAutoreleasedReturnValue();
          v24();
          v115 = objc_claimAutoreleasedReturnValue();

          objc_msgSend(CFSTR("PAYMENT_APP_SUSPENDED_BY_ISSUER"), "stringByAppendingString:", v25);
          v71 = (void *)objc_claimAutoreleasedReturnValue();
          v24();
          v72 = (void *)objc_claimAutoreleasedReturnValue();

          -[PKPaymentPass organizationName](self->_pass, "organizationName");
          v111 = (void *)objc_claimAutoreleasedReturnValue();
          PKStringWithValidatedFormat();
          v73 = objc_claimAutoreleasedReturnValue();

          -[PKDashboardPaymentPassDataSource _messageImageWithName:extension:](self, "_messageImageWithName:extension:", CFSTR("MessageAlert"), CFSTR("pdf"), v111);
          v74 = objc_claimAutoreleasedReturnValue();

          v3 = (void *)v115;
          v4 = (void *)v73;
          goto LABEL_86;
        case 7uLL:
          PKLocalizedPaymentString(CFSTR("PAYMENT_APP_SUSPENDED_LOST_MODE_TITLE"));
          v75 = objc_claimAutoreleasedReturnValue();

          PKLocalizedPaymentString(CFSTR("PAYMENT_APP_SUSPENDED_LOST_MODE_DETAIL"));
          v76 = objc_claimAutoreleasedReturnValue();

          PKLocalizedPaymentString(CFSTR("PAYMENT_APP_SUSPENDED_LOST_MODE_ACTION"));
          v77 = objc_claimAutoreleasedReturnValue();

          -[PKDashboardPaymentPassDataSource _messageImageWithName:extension:](self, "_messageImageWithName:extension:", CFSTR("MessageAlert"), CFSTR("pdf"));
          v78 = objc_claimAutoreleasedReturnValue();

          LODWORD(v118) = self->_performingLostModeExit;
          HIDWORD(v118) = 1;
          v3 = (void *)v75;
          v4 = (void *)v76;
          v8 = (void *)v77;
          v7 = (void *)v78;
          goto LABEL_24;
        case 9uLL:
          -[PKPaymentPass localizedSuspendedReason](self->_pass, "localizedSuspendedReason");
          v79 = objc_claimAutoreleasedReturnValue();
          if (v79)
          {
            objc_msgSend(CFSTR("PAYMENT_APP_ERROR_TITLE"), "stringByAppendingString:", v25);
            v80 = (void *)objc_claimAutoreleasedReturnValue();
            v24();
            v81 = objc_claimAutoreleasedReturnValue();

            v3 = (void *)v81;
            goto LABEL_84;
          }
LABEL_50:
          objc_msgSend(CFSTR("PAYMENT_APP_ERROR_TITLE"), "stringByAppendingString:", v25);
          v33 = (void *)objc_claimAutoreleasedReturnValue();
          v24();
          v34 = objc_claimAutoreleasedReturnValue();

          objc_msgSend(CFSTR("PAYMENT_APP_ERROR_BODY"), "stringByAppendingString:", v25);
          v35 = (void *)objc_claimAutoreleasedReturnValue();
          v24();
          v36 = objc_claimAutoreleasedReturnValue();

          objc_msgSend(CFSTR("DELETE_PASS"), "stringByAppendingString:", v25);
          v37 = (void *)objc_claimAutoreleasedReturnValue();
          v24();
          v38 = objc_claimAutoreleasedReturnValue();
LABEL_79:
          v69 = (void *)v38;

          v3 = (void *)v34;
          v4 = (void *)v36;
          v8 = v69;
          goto LABEL_24;
        case 0xAuLL:
          objc_msgSend(CFSTR("PAYMENT_APP_ERROR_TITLE"), "stringByAppendingString:", v25);
          v82 = (void *)objc_claimAutoreleasedReturnValue();
          v24();
          v116 = objc_claimAutoreleasedReturnValue();

          objc_msgSend(CFSTR("PAYMENT_APP_REMOVED_BY_ISSUER"), "stringByAppendingString:", v25);
          v83 = (void *)objc_claimAutoreleasedReturnValue();
          v24();
          v84 = (void *)objc_claimAutoreleasedReturnValue();

          -[PKPaymentPass organizationName](self->_pass, "organizationName");
          v112 = (void *)objc_claimAutoreleasedReturnValue();
          PKStringWithValidatedFormat();
          v85 = objc_claimAutoreleasedReturnValue();

          objc_msgSend(CFSTR("DELETE_PASS"), "stringByAppendingString:", v25, v112);
          v86 = (void *)objc_claimAutoreleasedReturnValue();
          v24();
          v87 = objc_claimAutoreleasedReturnValue();

          -[PKDashboardPaymentPassDataSource _messageImageWithName:extension:](self, "_messageImageWithName:extension:", CFSTR("MessageAlert"), CFSTR("pdf"));
          v74 = objc_claimAutoreleasedReturnValue();

          v3 = (void *)v116;
          v4 = (void *)v85;
          v8 = (void *)v87;
LABEL_86:
          v7 = (void *)v74;
          goto LABEL_24;
        case 0xFuLL:
          PKLocalizedCredentialString(CFSTR("DASHBOARD_MESSAGE_REVOKING_TITLE"));
          v88 = objc_claimAutoreleasedReturnValue();

          -[PKDashboardPaymentPassDataSource revokingAccessMessage](self, "revokingAccessMessage");
          v89 = objc_claimAutoreleasedReturnValue();

          -[PKDashboardPaymentPassDataSource _messageImageWithName:extension:](self, "_messageImageWithName:extension:", CFSTR("MessageAlert"), CFSTR("pdf"));
          v90 = objc_claimAutoreleasedReturnValue();

          v3 = (void *)v88;
          v4 = (void *)v89;
          v7 = (void *)v90;
          goto LABEL_24;
        default:
          goto LABEL_5;
      }
    case 4uLL:
      v55 = -[PKPeerPaymentAccount role](self->_peerPaymentAccount, "role");
      if (v55 == 1)
      {
        PKLocalizedPeerPaymentLexingtonString(CFSTR("PEER_PAYMENT_DASHBAORD_ASSOCIATED_ACCOUNT_CLOSED_ALERT_TITLE"));
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        PKLocalizedPeerPaymentLexingtonString(CFSTR("PEER_PAYMENT_DASHBAORD_ASSOCIATED_ACCOUNT_CLOSED_ALERT_MESSAGE"));
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        v16 = 0;
      }
      else
      {
        if (v55)
        {
          v16 = 0;
          v17 = 0;
        }
        else
        {
          PKLocalizedPeerPaymentString(CFSTR("PEER_PAYMENT_ACCOUNT_STATE_FOOTER_REOPEN_CARD_BUTTON"));
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          PKLocalizedPeerPaymentString(CFSTR("PEER_PAYMENT_ACCOUNT_STATE_FOOTER_REOPEN_CARD_BODY"));
          v17 = (void *)objc_claimAutoreleasedReturnValue();
        }
        v18 = 0;
      }
      -[PKDashboardPaymentPassDataSource _messageImageWithName:extension:](self, "_messageImageWithName:extension:", CFSTR("AppleCashIcon"), CFSTR("pdf"));
      v92 = objc_claimAutoreleasedReturnValue();
      goto LABEL_101;
    default:
      goto LABEL_11;
  }
}

void __71__PKDashboardPaymentPassDataSource__messageForPaymentApplicationStatus__block_invoke(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained, "_peerPaymentResolutionTappedWithResolution:", *(_QWORD *)(a1 + 48));
    WeakRetained = v3;
  }

}

void __71__PKDashboardPaymentPassDataSource__messageForPaymentApplicationStatus__block_invoke_2(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_verificationButtonTapped");

}

void __71__PKDashboardPaymentPassDataSource__messageForPaymentApplicationStatus__block_invoke_3(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_lostModeButtonTapped");

}

void __71__PKDashboardPaymentPassDataSource__messageForPaymentApplicationStatus__block_invoke_4(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_deleteButtonPressed");

}

- (id)_messageForExpressEducation
{
  PKDashboardPassMessage *v3;
  id v5;
  void *v6;
  int v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  int IsAvailable;
  const __CFString *v14;
  void *v15;
  void *v16;
  _QWORD v17[4];
  id v18;
  id location;

  dispatch_assert_queue_V2(MEMORY[0x1E0C80D38]);
  if (-[PKPaymentPass isTransitPass](self->_pass, "isTransitPass")
    && PKExpressEducationHasDismissedMessage() == 2
    && -[PKPaymentPass activationState](self->_pass, "activationState") == PKPaymentPassActivationStateActivated)
  {
    v5 = objc_alloc_init(MEMORY[0x1E0D672B0]);
    -[PKPaymentPass uniqueID](self->_pass, "uniqueID");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v5, "isExpressModeEnabledForPassUniqueIdentifier:", v6);

    if (v7)
    {
      v3 = objc_alloc_init(PKDashboardPassMessage);
      -[PKDashboardPassMessage setIdentifier:](v3, "setIdentifier:", CFSTR("expressEducationSetup"));
      PKLocalizedPaymentString(CFSTR("DASHBOARD_MESSAGE_EXPRESS_EDUCATION_TRANSIT_TITLE"));
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setTitle:](v3, "setTitle:", v8);

      PKLocalizedPaymentString(CFSTR("DASHBOARD_MESSAGE_EXPRESS_EDUCATION_TRANSIT_MESSAGE"));
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setMessage:](v3, "setMessage:", v9);

      objc_msgSend(MEMORY[0x1E0DC3E88], "currentTraitCollection");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = objc_msgSend(v10, "userInterfaceStyle");

      if ((PKSystemApertureIsAvailable() & 1) != 0)
      {
        v12 = 3;
      }
      else
      {
        IsAvailable = PKPearlIsAvailable();
        v12 = 1;
        if (IsAvailable)
          v12 = 2;
      }
      v14 = CFSTR("Light");
      if (v11 == 2)
        v14 = CFSTR("Dark");
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Express_Tip_Gen%lu_%@"), v12, v14);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      PKUIImageNamed(v15);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setImage:](v3, "setImage:", v16);

      -[PKDashboardPassMessage setImageOnTrailingEdge:](v3, "setImageOnTrailingEdge:", 1);
      -[PKDashboardPassMessage setImageContentMode:](v3, "setImageContentMode:", 6);
      -[PKDashboardPassMessage setImageRequestExtraLarge:](v3, "setImageRequestExtraLarge:", 1);
      objc_initWeak(&location, self);
      v17[0] = MEMORY[0x1E0C809B0];
      v17[1] = 3221225472;
      v17[2] = __63__PKDashboardPaymentPassDataSource__messageForExpressEducation__block_invoke;
      v17[3] = &unk_1E3E61310;
      objc_copyWeak(&v18, &location);
      -[PKDashboardPassMessage setActionOnDismiss:](v3, "setActionOnDismiss:", v17);
      objc_destroyWeak(&v18);
      objc_destroyWeak(&location);

    }
    else
    {
      v3 = 0;
    }

  }
  else
  {
    v3 = 0;
  }
  return v3;
}

void __63__PKDashboardPaymentPassDataSource__messageForExpressEducation__block_invoke(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    PKExpressEducationSetHasDismissedMessage();
    objc_msgSend(WeakRetained, "reloadMessages");
  }

}

- (id)_messageForAutoReload
{
  void *v3;
  char BoolForKey;
  PKDashboardPassMessage *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  double v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  _QWORD v22[4];
  id v23;
  _QWORD v24[4];
  id v25;
  id location;

  dispatch_assert_queue_V2(MEMORY[0x1E0C80D38]);
  PKDismissedKeyForPass();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  BoolForKey = PKSharedCacheGetBoolForKey();

  if ((BoolForKey & 1) != 0
    || !+[PKPaymentAutoReloadSetupController shouldOfferAutoReloadForPass:](PKPaymentAutoReloadSetupController, "shouldOfferAutoReloadForPass:", self->_pass))
  {
    v5 = 0;
  }
  else
  {
    objc_initWeak(&location, self);
    v5 = objc_alloc_init(PKDashboardPassMessage);
    -[PKDashboardPassMessage setIdentifier:](v5, "setIdentifier:", CFSTR("autoReloadSetup"));
    objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", self->_pass);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setAnalyticsReporterSubject:](v5, "setAnalyticsReporterSubject:", v6);

    PKLocalizedPaymentString(CFSTR("PASS_DETAILS_AUTO_RELOAD"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setTitle:](v5, "setTitle:", v7);

    PKLocalizedPaymentString(CFSTR("PASS_DETAILS_AUTO_RELOAD_DASHBOARD_MESSAGE"));
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setMessage:](v5, "setMessage:", v8);

    PKLocalizedPaymentString(CFSTR("PASS_DETAILS_SETUP_AUTO_RELOAD"));
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setButtonTitle:](v5, "setButtonTitle:", v9);

    objc_msgSend(MEMORY[0x1E0DC3888], "configurationWithPointSize:", 26.0);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    +[PKPaymentPassDetailAutoReloadSectionController autoTopUpActionForPass:](PKPaymentPassDetailAutoReloadSectionController, "autoTopUpActionForPass:", self->_pass);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "autoTopUpItem");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "currency");
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    if (objc_msgSend(v13, "isEqualToString:", CFSTR("KRW")))
    {
      PKPassKitUIBundle();
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "URLForResource:withExtension:", CFSTR("WonIconArrowCirclePath"), CFSTR("pdf"));
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v16 = PKUIScreenScale();
      PKUIImageFromPDF(v15, 45.0, 45.0, v16);
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0DC3870], "systemImageNamed:withConfiguration:", CFSTR("dollarsign.arrow.circlepath"), v10);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0DC3658], "whiteColor");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "imageWithTintColor:", v14);
    }
    v17 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0DC3658], "blackColor");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    PKUIImageWithBackground(v17, v18, 45.0, 45.0);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setImage:](v5, "setImage:", v19);

    v20 = MEMORY[0x1E0C809B0];
    v24[0] = MEMORY[0x1E0C809B0];
    v24[1] = 3221225472;
    v24[2] = __57__PKDashboardPaymentPassDataSource__messageForAutoReload__block_invoke;
    v24[3] = &unk_1E3E61310;
    objc_copyWeak(&v25, &location);
    -[PKDashboardPassMessage setActionOnDismiss:](v5, "setActionOnDismiss:", v24);
    v22[0] = v20;
    v22[1] = 3221225472;
    v22[2] = __57__PKDashboardPaymentPassDataSource__messageForAutoReload__block_invoke_2;
    v22[3] = &unk_1E3E61310;
    objc_copyWeak(&v23, &location);
    -[PKDashboardPassMessage setActionOnButtonPress:](v5, "setActionOnButtonPress:", v22);
    objc_destroyWeak(&v23);
    objc_destroyWeak(&v25);

    objc_destroyWeak(&location);
  }
  return v5;
}

void __57__PKDashboardPaymentPassDataSource__messageForAutoReload__block_invoke(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  void *v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    PKDismissedKeyForPass();
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    PKSharedCacheSetBoolForKey();

    objc_msgSend(v3, "reloadMessages");
    WeakRetained = v3;
  }

}

void __57__PKDashboardPaymentPassDataSource__messageForAutoReload__block_invoke_2(uint64_t a1)
{
  PKPaymentAutoReloadSetupController *v1;
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v1 = -[PKPaymentAutoReloadSetupController initWithPass:paymentDataProvider:viewStyle:delegate:]([PKPaymentAutoReloadSetupController alloc], "initWithPass:paymentDataProvider:viewStyle:delegate:", *((_QWORD *)WeakRetained + 109), *((_QWORD *)WeakRetained + 31), 0);
    v2 = (void *)*((_QWORD *)WeakRetained + 13);
    *((_QWORD *)WeakRetained + 13) = v1;

    objc_msgSend(*((id *)WeakRetained + 13), "presentAutoTopUpFlow");
  }

}

- (void)recipientPickerViewControllerRequestsDismissViewController:(id)a3
{
  void *v3;
  void *v4;
  id v5;

  -[PKDashboardPaymentPassDataSource groupView](self, "groupView", a3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "pkui_viewControllerFromResponderChain");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "navigationController");
  v5 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v5, "dismissViewControllerAnimated:completion:", 1, 0);
}

- (void)autoReloadSetupController:(id)a3 requestsPresentViewController:(id)a4
{
  PKPassGroupView *groupView;
  id v5;
  id v6;

  groupView = self->_groupView;
  v5 = a4;
  -[UIView pkui_viewControllerFromResponderChain](groupView, "pkui_viewControllerFromResponderChain");
  v6 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "presentViewController:animated:completion:", v5, 1, 0);

}

- (void)autoReloadSetupController:(id)a3 requestsDismissViewController:(id)a4
{
  id v4;

  -[UIView pkui_viewControllerFromResponderChain](self->_groupView, "pkui_viewControllerFromResponderChain", a3, a4);
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "dismissViewControllerAnimated:completion:", 1, 0);

}

- (id)_messageForSessionActive
{
  PKDashboardPassMessage *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  dispatch_assert_queue_V2(MEMORY[0x1E0C80D38]);
  if (self->_sessionActive)
  {
    v3 = objc_alloc_init(PKDashboardPassMessage);
    -[PKDashboardPassMessage setIdentifier:](v3, "setIdentifier:", CFSTR("sessionActive"));
    objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", self->_pass);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setAnalyticsReporterSubject:](v3, "setAnalyticsReporterSubject:", v4);

    PKLocalizedPaymentString(CFSTR("PAYMENT_DEVICE_UNAVAILABLE_TITLE"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setTitle:](v3, "setTitle:", v5);

    -[PKPaymentPass localizedDescription](self->_pass, "localizedDescription");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    PKLocalizedPaymentString(CFSTR("PAYMENT_CARD_UNAVAILABLE_MESSAGE"), CFSTR("%@"), v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setMessage:](v3, "setMessage:", v7);

  }
  else
  {
    v3 = 0;
  }
  return v3;
}

- (void)_messageFromPaymentServiceSuppressingPassStateChanges:(BOOL)a3 completion:(id)a4
{
  id v6;
  PKPaymentDefaultDataProvider *paymentDataProvider;
  void *v8;
  id v9;
  _QWORD v10[4];
  id v11;
  id v12;
  BOOL v13;
  id location;

  v6 = a4;
  dispatch_assert_queue_V2(MEMORY[0x1E0C80D38]);
  objc_initWeak(&location, self);
  paymentDataProvider = self->_paymentDataProvider;
  -[PKPaymentPass uniqueID](self->_pass, "uniqueID");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = __101__PKDashboardPaymentPassDataSource__messageFromPaymentServiceSuppressingPassStateChanges_completion___block_invoke;
  v10[3] = &unk_1E3E73028;
  objc_copyWeak(&v12, &location);
  v13 = a3;
  v9 = v6;
  v11 = v9;
  -[PKPaymentDefaultDataProvider messagesForPaymentPassWithUniqueIdentifier:completion:](paymentDataProvider, "messagesForPaymentPassWithUniqueIdentifier:completion:", v8, v10);

  objc_destroyWeak(&v12);
  objc_destroyWeak(&location);

}

void __101__PKDashboardPaymentPassDataSource__messageFromPaymentServiceSuppressingPassStateChanges_completion___block_invoke(uint64_t a1, void *a2)
{
  id *WeakRetained;
  id *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  int v10;
  _BOOL4 v11;
  void *v12;
  void *v13;
  void *v14;
  int v15;
  uint64_t v16;
  char v17;
  id v18;
  void *v19;
  void *v20;
  char v21;
  PKDashboardPassMessage *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  int v26;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  id v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  id v44;
  id v45;
  _QWORD v46[4];
  id v47;
  id v48;
  id v49;
  _QWORD v50[4];
  id v51;
  id v52;
  _QWORD v53[5];
  _QWORD v54[3];

  v54[1] = *MEMORY[0x1E0C80C00];
  v45 = a2;
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  v4 = WeakRetained;
  if (!WeakRetained)
    goto LABEL_52;
  v44 = WeakRetained[109];
  objc_msgSend(v4[23], "associatedPassUniqueID");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4[109], "uniqueID");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = v5;
  v8 = v6;
  v9 = v8;
  if (v7 == v8)
  {

    goto LABEL_8;
  }
  if (v7 && v8)
  {
    v10 = objc_msgSend(v7, "isEqualToString:", v8);

    if (!v10)
      goto LABEL_10;
LABEL_8:
    v11 = objc_msgSend(v4[23], "role") == 1;
    goto LABEL_11;
  }

LABEL_10:
  v11 = 0;
LABEL_11:

  objc_msgSend(MEMORY[0x1E0CB3928], "sortDescriptorWithKey:ascending:", CFSTR("messageDate"), 0);
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  v54[0] = v43;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v54, 1);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v45, "sortedArrayUsingDescriptors:", v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v13, "firstObject");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  if (v14)
    v15 = objc_msgSend(v4, "_shouldPaymentMessageAppear:", v14);
  else
    v15 = 0;
  if (!*(_BYTE *)(a1 + 48))
  {
    if (!v11)
    {
      v17 = 0;
      goto LABEL_21;
    }
    goto LABEL_19;
  }
  v16 = objc_msgSend(v14, "messageType");
  v17 = v16 == 1;
  if (v16 != 1 && v11)
LABEL_19:
    v17 = objc_msgSend(v4[23], "isParticipantAccountLockedByOwner");
LABEL_21:
  v18 = v13;
  v19 = v18;
  if (v15)
  {
    objc_msgSend(v18, "pk_arrayByRemovingObject:", v14);
    v42 = (void *)objc_claimAutoreleasedReturnValue();
    v20 = v19;
  }
  else
  {
    v20 = v14;
    v42 = v18;
    v14 = 0;
  }

  v53[0] = MEMORY[0x1E0C809B0];
  v53[1] = 3221225472;
  v53[2] = __101__PKDashboardPaymentPassDataSource__messageFromPaymentServiceSuppressingPassStateChanges_completion___block_invoke_2;
  v53[3] = &unk_1E3E73000;
  v53[4] = v4;
  objc_msgSend(v42, "enumerateObjectsUsingBlock:", v53);
  if (v14)
    v21 = v17;
  else
    v21 = 1;
  if ((v21 & 1) != 0)
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  }
  else
  {
    v22 = objc_alloc_init(PKDashboardPassMessage);
    if (v11)
    {
      PKLocalizedPeerPaymentLexingtonString(CFSTR("PEER_PAYMENT_DASHBOARD_PARTCIPANT_MESSAGE_PASS_PROVISIONED_TITLE"));
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setTitle:](v22, "setTitle:", v23);

      PKLocalizedPeerPaymentLexingtonString(CFSTR("PEER_PAYMENT_DASHBOARD_PARTCIPANT_MESSAGE_PASS_PROVISIONED_MESSAGE"));
      v24 = objc_claimAutoreleasedReturnValue();
    }
    else
    {
      objc_msgSend(v44, "organizationName");
      v25 = (void *)objc_claimAutoreleasedReturnValue();

      if (v25)
      {
        v26 = objc_msgSend(v4[109], "isIdentityPass");
        objc_msgSend(v44, "organizationName");
        v27 = objc_claimAutoreleasedReturnValue();
        v28 = (void *)v27;
        if (v26)
        {
          -[PKDashboardPassMessage setTitle:](v22, "setTitle:", v27);
        }
        else
        {
          PKLocalizedPaymentString(CFSTR("DASHBOARD_MESSAGE_TITLE_FORMAT"), CFSTR("%@"), v27);
          v30 = (void *)objc_claimAutoreleasedReturnValue();
          -[PKDashboardPassMessage setTitle:](v22, "setTitle:", v30);

        }
        objc_msgSend(v14, "content");
        v24 = objc_claimAutoreleasedReturnValue();
      }
      else
      {
        PKLocalizedPaymentString(CFSTR("DASHBOARD_MESSAGE_DEFAULT_TITLE"));
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        -[PKDashboardPassMessage setTitle:](v22, "setTitle:", v29);

        objc_msgSend(v14, "content");
        v24 = objc_claimAutoreleasedReturnValue();
      }
    }
    v31 = (void *)v24;
    -[PKDashboardPassMessage setMessage:](v22, "setMessage:", v24);

    if (objc_msgSend(v44, "hasAssociatedPeerPaymentAccount"))
    {
      objc_msgSend(v4, "_messageImageWithName:extension:", CFSTR("AppleCashIcon"), CFSTR("pdf"));
      v32 = objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v33 = v4[48];
      if (v33 && objc_msgSend(v33, "feature") == 2)
      {
        objc_msgSend(v4, "_messageImageWithName:extension:", CFSTR("AppleCardIcon"), CFSTR("pdf"));
        v32 = objc_claimAutoreleasedReturnValue();
      }
      else
      {
        PKDashboardMessagePassIcon(v44);
        v32 = objc_claimAutoreleasedReturnValue();
      }
    }
    v34 = (void *)v32;
    -[PKDashboardPassMessage setImage:](v22, "setImage:", v32);

    -[PKDashboardPassMessage identifier](v22, "identifier");
    v35 = (void *)objc_claimAutoreleasedReturnValue();

    if (v35)
    {
      -[PKDashboardPassMessage identifier](v22, "identifier");
      v36 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setIdentifier:](v22, "setIdentifier:", v36);

    }
    else
    {
      -[PKDashboardPassMessage setIdentifier:](v22, "setIdentifier:", CFSTR("messageService"));
    }
    objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", v4[109]);
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setAnalyticsReporterSubject:](v22, "setAnalyticsReporterSubject:", v37);

    v50[0] = MEMORY[0x1E0C809B0];
    v50[1] = 3221225472;
    v50[2] = __101__PKDashboardPaymentPassDataSource__messageFromPaymentServiceSuppressingPassStateChanges_completion___block_invoke_3;
    v50[3] = &unk_1E3E61B68;
    objc_copyWeak(&v52, (id *)(a1 + 40));
    v38 = v14;
    v51 = v38;
    -[PKDashboardPassMessage setActionOnDismiss:](v22, "setActionOnDismiss:", v50);
    if (objc_msgSend(v38, "allowDeepLink"))
    {
      v39 = v4[31];
      objc_msgSend(v44, "uniqueID");
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v39, "messagesAppLaunchTokenForPassWithUniqueIdentifier:", v40);
      v41 = (void *)objc_claimAutoreleasedReturnValue();

      if (v41)
      {
        v46[0] = MEMORY[0x1E0C809B0];
        v46[1] = 3221225472;
        v46[2] = __101__PKDashboardPaymentPassDataSource__messageFromPaymentServiceSuppressingPassStateChanges_completion___block_invoke_4;
        v46[3] = &unk_1E3E61EE8;
        objc_copyWeak(&v49, (id *)(a1 + 40));
        v47 = v38;
        v48 = v41;
        -[PKDashboardPassMessage setActionOnMessagePress:](v22, "setActionOnMessagePress:", v46);

        objc_destroyWeak(&v49);
      }

    }
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();

    objc_destroyWeak(&v52);
  }

LABEL_52:
}

void __101__PKDashboardPaymentPassDataSource__messageFromPaymentServiceSuppressingPassStateChanges_completion___block_invoke_2(uint64_t a1, void *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 248);
  objc_msgSend(a2, "identifier");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "archiveMessageWithIdentifier:", v3);

}

void __101__PKDashboardPaymentPassDataSource__messageFromPaymentServiceSuppressingPassStateChanges_completion___block_invoke_3(uint64_t a1)
{
  _QWORD *WeakRetained;
  void *v3;
  void *v4;
  id v5;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = (void *)WeakRetained[31];
    v5 = WeakRetained;
    objc_msgSend(*(id *)(a1 + 32), "identifier");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "archiveMessageWithIdentifier:", v4);

    objc_msgSend(v5, "reloadMessages");
    WeakRetained = v5;
  }

}

void __101__PKDashboardPaymentPassDataSource__messageFromPaymentServiceSuppressingPassStateChanges_completion___block_invoke_4(uint64_t a1)
{
  _QWORD *WeakRetained;
  void *v3;
  void *v4;
  _QWORD *v5;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v5 = WeakRetained;
    +[PKPaymentNotificationAppURLHelper appURLForMessageNotification:pass:appLaunchToken:](PKPaymentNotificationAppURLHelper, "appURLForMessageNotification:pass:appLaunchToken:", *(_QWORD *)(a1 + 32), WeakRetained[109], *(_QWORD *)(a1 + 40));
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    if (v3)
    {
      objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "openURL:configuration:completionHandler:", v3, 0, 0);

    }
    WeakRetained = v5;
  }

}

- (BOOL)_shouldPaymentMessageAppear:(id)a3
{
  id v4;
  os_unfair_lock_s *p_lockTransactions;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  BOOL v10;

  v4 = a3;
  if (!objc_msgSend(v4, "archiveOnNextTransaction"))
    goto LABEL_5;
  p_lockTransactions = &self->_lockTransactions;
  os_unfair_lock_lock(&self->_lockTransactions);
  -[NSArray firstObject](self->_previousTransactions, "firstObject");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  os_unfair_lock_unlock(p_lockTransactions);
  if (!v6)
    goto LABEL_5;
  objc_msgSend(v6, "transactionDate");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "messageDate");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v7, "compare:", v8);

  if (v9 == 1)
    v10 = 0;
  else
LABEL_5:
    v10 = 1;

  return v10;
}

- (void)_messagesForAccountStatusWithCompletion:(id)a3
{
  id v4;
  NSObject *v5;
  PKPaymentDefaultDataProvider *paymentDataProvider;
  void *v7;
  uint64_t v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  BOOL v15;
  PKAccountService *accountService;
  void *v17;
  id v18;
  _QWORD block[4];
  id v20;
  id v21;
  _QWORD *v22;
  _QWORD *v23;
  id v24;
  BOOL v25;
  id location;
  _QWORD v27[4];
  NSObject *v28;
  _QWORD *v29;
  _QWORD v30[5];
  id v31;
  _QWORD v32[4];
  NSObject *v33;
  _QWORD *v34;
  _QWORD v35[5];
  id v36;

  v4 = a3;
  if (self->_account && !-[PKDashboardPaymentPassDataSource _isPayLaterPass](self, "_isPayLaterPass"))
  {
    v5 = dispatch_group_create();
    dispatch_group_enter(v5);
    v35[0] = 0;
    v35[1] = v35;
    v35[2] = 0x3032000000;
    v35[3] = __Block_byref_object_copy__41;
    v35[4] = __Block_byref_object_dispose__41;
    v36 = 0;
    paymentDataProvider = self->_paymentDataProvider;
    -[PKAccount accountIdentifier](self->_account, "accountIdentifier");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = MEMORY[0x1E0C809B0];
    v32[0] = MEMORY[0x1E0C809B0];
    v32[1] = 3221225472;
    v32[2] = __76__PKDashboardPaymentPassDataSource__messagesForAccountStatusWithCompletion___block_invoke;
    v32[3] = &unk_1E3E690B0;
    v34 = v35;
    v9 = v5;
    v33 = v9;
    -[PKPaymentDefaultDataProvider transactionsRequiringReviewForAccountWithIdentifier:completion:](paymentDataProvider, "transactionsRequiringReviewForAccountWithIdentifier:completion:", v7, v32);

    -[PKAccount creditDetails](self->_account, "creditDetails");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "accountSummary");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "pastDueAmount");
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0CB3598], "zero");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = objc_msgSend(v13, "compare:", v12);

    v30[0] = 0;
    v30[1] = v30;
    v30[2] = 0x3032000000;
    v30[3] = __Block_byref_object_copy__41;
    v30[4] = __Block_byref_object_dispose__41;
    v31 = 0;
    v15 = v14 == -1;
    if (v14 == -1)
    {
      dispatch_group_enter(v9);
      accountService = self->_accountService;
      -[PKAccount accountIdentifier](self->_account, "accountIdentifier");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      v27[0] = v8;
      v27[1] = 3221225472;
      v27[2] = __76__PKDashboardPaymentPassDataSource__messagesForAccountStatusWithCompletion___block_invoke_605;
      v27[3] = &unk_1E3E73050;
      v29 = v30;
      v28 = v9;
      -[PKAccountService eventsForAccountIdentifier:types:startDate:endDate:orderedByDate:limit:completion:](accountService, "eventsForAccountIdentifier:types:startDate:endDate:orderedByDate:limit:completion:", v17, &unk_1E3FAE8D8, 0, 0, 1, 1, v27);

    }
    objc_initWeak(&location, self);
    block[0] = v8;
    block[1] = 3221225472;
    block[2] = __76__PKDashboardPaymentPassDataSource__messagesForAccountStatusWithCompletion___block_invoke_2;
    block[3] = &unk_1E3E730D8;
    objc_copyWeak(&v24, &location);
    v25 = v15;
    v22 = v35;
    v23 = v30;
    v20 = v12;
    v21 = v4;
    v18 = v12;
    dispatch_group_notify(v9, MEMORY[0x1E0C80D38], block);

    objc_destroyWeak(&v24);
    objc_destroyWeak(&location);
    _Block_object_dispose(v30, 8);

    _Block_object_dispose(v35, 8);
  }
  else
  {
    (*((void (**)(id, _QWORD))v4 + 2))(v4, 0);
  }

}

void __76__PKDashboardPaymentPassDataSource__messagesForAccountStatusWithCompletion___block_invoke(uint64_t a1, void *a2)
{
  id v4;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  v4 = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void __76__PKDashboardPaymentPassDataSource__messagesForAccountStatusWithCompletion___block_invoke_605(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  objc_msgSend(a2, "firstObject");
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void __76__PKDashboardPaymentPassDataSource__messagesForAccountStatusWithCompletion___block_invoke_2(uint64_t a1)
{
  uint64_t v1;
  id *v2;
  id *WeakRetained;
  id v4;
  char v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  PKDashboardPassMessage *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  PKDashboardPassMessage *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  PKDashboardPassMessage *v28;
  NSDecimalNumber *v29;
  void *v30;
  NSString *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void *v44;
  void *v45;
  int v46;
  void *v47;
  const __CFString *v48;
  int v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  __CFString *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  unint64_t v61;
  id v62;
  void *v63;
  id v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  uint64_t v72;
  void *v73;
  id v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  int v81;
  PKDashboardPassMessage *v82;
  void *v83;
  void *v84;
  void *v85;
  id *v86;
  void *v87;
  void *v88;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  PKDashboardPassMessage *v93;
  void *v94;
  void *v95;
  void *v96;
  void *v97;
  void *v98;
  int ShouldShowVPANReissuedMessage;
  void *v100;
  void *v101;
  void *v102;
  id v103;
  id v104;
  void *v105;
  char v106;
  void *v107;
  void *v108;
  void *v109;
  void *v110;
  void *v111;
  uint64_t v112;
  PKDashboardPassMessage *v113;
  void *v114;
  void *v115;
  void *v116;
  uint64_t v117;
  void *v118;
  int ShouldShowVPANUpdatedMessage;
  PKDashboardPassMessage *v120;
  void *v121;
  void *v122;
  void *v123;
  void *v124;
  void *v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  uint64_t v129;
  void *v130;
  void *v131;
  void *v132;
  void *v133;
  void *v134;
  void *v135;
  void *v136;
  void *v137;
  void *v138;
  void *v139;
  void *v140;
  void *v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  void *v145;
  id *from;
  _QWORD v147[4];
  id v148;
  _QWORD v149[4];
  id v150;
  _QWORD v151[4];
  id v152;
  _QWORD v153[4];
  id v154;
  _QWORD v155[4];
  id v156;
  _QWORD v157[4];
  id v158;
  _QWORD v159[4];
  id v160;
  _QWORD v161[4];
  id v162;
  _QWORD v163[4];
  id v164;
  _QWORD v165[4];
  id v166;
  _QWORD v167[5];
  id v168;
  uint8_t buf[16];
  _QWORD aBlock[4];
  id v171[2];

  v1 = a1;
  v2 = (id *)(a1 + 64);
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 64));
  if (!WeakRetained)
    goto LABEL_130;
  from = v2;
  v4 = objc_alloc_init(MEMORY[0x1E0C99E10]);
  objc_msgSend(WeakRetained[48], "feature");
  v144 = v1;
  if (!*((_BYTE *)WeakRetained + 720) && !*((_BYTE *)WeakRetained + 721)
    || objc_msgSend(WeakRetained[48], "stateReason") == 2)
  {
    v5 = 0;
    goto LABEL_28;
  }
  if (!*((_BYTE *)WeakRetained + 720))
  {
    if (!*((_BYTE *)WeakRetained + 721))
    {
      v6 = 0;
      v7 = 0;
      v8 = 0;
      v9 = 0;
LABEL_24:
      PKLogFacilityTypeGetObject();
      v10 = (PKDashboardPassMessage *)objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(&v10->super, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl(&dword_19D178000, &v10->super, OS_LOG_TYPE_DEFAULT, "User is eligible or enrolled in a payment plan, but account status is neither Restricted nor Closed+ChargedOff. Not showing payment plans dashboard message.", buf, 2u);
      }
      v5 = 0;
      goto LABEL_27;
    }
    goto LABEL_11;
  }
  if (*((_BYTE *)WeakRetained + 721))
  {
LABEL_11:
    if (objc_msgSend(WeakRetained[48], "state") == 2
      || objc_msgSend(WeakRetained[48], "isClosedAndChargedOff"))
    {
      PKLocalizedFeatureString();
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      PKLocalizedFeatureString();
      v7 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v7 = 0;
      v6 = 0;
    }
    PKLocalizedFeatureString();
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = &__block_literal_global_627;
    if (!v6)
      goto LABEL_24;
    goto LABEL_22;
  }
  if (objc_msgSend(WeakRetained[48], "state") == 2
    || objc_msgSend(WeakRetained[48], "isClosedAndChargedOff"))
  {
    PKLocalizedFeatureString();
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    PKLocalizedFeatureString();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  PKLocalizedFeatureString();
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = __76__PKDashboardPaymentPassDataSource__messagesForAccountStatusWithCompletion___block_invoke_3;
  aBlock[3] = &unk_1E3E61310;
  objc_copyWeak(v171, v2);
  v9 = _Block_copy(aBlock);
  objc_destroyWeak(v171);
  if (!v6)
    goto LABEL_24;
LABEL_22:
  if (!v7)
    goto LABEL_24;
  v10 = objc_alloc_init(PKDashboardPassMessage);
  -[PKDashboardPassMessage setIdentifier:](v10, "setIdentifier:", CFSTR("creditRecoveryPaymentPlans"));
  -[PKDashboardPassMessage setTitle:](v10, "setTitle:", v6);
  -[PKDashboardPassMessage setMessage:](v10, "setMessage:", v7);
  objc_msgSend(WeakRetained, "_messageImageWithName:extension:", CFSTR("MessageAlert"), CFSTR("pdf"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPassMessage setImage:](v10, "setImage:", v11);

  v5 = 1;
  -[PKDashboardPassMessage setShowDisclosure:](v10, "setShowDisclosure:", 1);
  -[PKDashboardPassMessage setButtonTitle:](v10, "setButtonTitle:", v8);
  -[PKDashboardPassMessage setActionOnButtonPress:](v10, "setActionOnButtonPress:", v9);
  objc_msgSend(v4, "addObject:", v10);
LABEL_27:

  v1 = v144;
LABEL_28:
  v12 = objc_msgSend(WeakRetained[48], "state");
  v13 = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v1 + 48) + 8) + 40), "count");
  if (v13)
    v14 = v12 == 3;
  else
    v14 = 1;
  if (!v14)
  {
    v15 = v13;
    if (objc_msgSend(WeakRetained[48], "state") == 1)
    {
      PKLocalizedString(CFSTR("ACCOUNT_SERVICE_ACCOUNT_REVIEW_MESSAGE_ACTIVE"), CFSTR("%ld"), v15);
      v16 = objc_claimAutoreleasedReturnValue();
    }
    else
    {
      if (v15 == 1)
      {
        PKLocalizedFeatureString();
      }
      else
      {
        v129 = v15;
        PKLocalizedFeatureString();
      }
      v16 = objc_claimAutoreleasedReturnValue();
    }
    v17 = (void *)v16;
    v18 = objc_alloc_init(PKDashboardPassMessage);
    -[PKDashboardPassMessage setIdentifier:](v18, "setIdentifier:", CFSTR("transactionsToReview"));
    PKLocalizedFeatureString();
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setTitle:](v18, "setTitle:", v19);

    -[PKDashboardPassMessage setMessage:](v18, "setMessage:", v17);
    -[PKDashboardPassMessage setShowDisclosure:](v18, "setShowDisclosure:", 1);
    objc_msgSend(WeakRetained, "_messageImageWithName:extension:", CFSTR("MessageAlert"), CFSTR("pdf"));
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setImage:](v18, "setImage:", v20);

    PKLocalizedFeatureString();
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setButtonTitle:](v18, "setButtonTitle:", v21);

    v167[0] = MEMORY[0x1E0C809B0];
    v167[1] = 3221225472;
    v167[2] = __76__PKDashboardPaymentPassDataSource__messagesForAccountStatusWithCompletion___block_invoke_645;
    v167[3] = &unk_1E3E719B0;
    objc_copyWeak(&v168, from);
    v167[4] = *(_QWORD *)(v1 + 48);
    -[PKDashboardPassMessage setActionOnButtonPress:](v18, "setActionOnButtonPress:", v167);
    objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", WeakRetained[109]);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setAnalyticsReporterSubject:](v18, "setAnalyticsReporterSubject:", v22);

    objc_msgSend(v4, "addObject:", v18);
    objc_destroyWeak(&v168);

  }
  v145 = v4;
  if (*(_BYTE *)(v1 + 72) && v12 != 3)
  {
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1 + 56) + 8) + 40))
    {
      objc_msgSend(MEMORY[0x1E0C99D48], "currentCalendar");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v1 + 56) + 8) + 40), "date");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v23, "components:fromDate:", 14, v24);
      v25 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(MEMORY[0x1E0C99D68], "date");
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(v1 + 56) + 8) + 40), "expirationDate");
      v27 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v23, "date:matchesComponents:", v26, v25) && v27)
        objc_msgSend(v27, "compare:", v26);

    }
    v28 = objc_alloc_init(PKDashboardPassMessage);
    v29 = *(NSDecimalNumber **)(v1 + 32);
    objc_msgSend(WeakRetained[48], "creditDetails");
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v30, "currencyCode");
    v31 = (NSString *)objc_claimAutoreleasedReturnValue();
    PKCurrencyAmountCreate(v29, v31);
    v32 = (void *)objc_claimAutoreleasedReturnValue();

    PKLocalizedFeatureString();
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setButtonTitle:](v28, "setButtonTitle:", v33);

    objc_msgSend(v32, "minimalFormattedStringValue");
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    PKLocalizedFeatureString();
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setMessage:](v28, "setMessage:", v35, v34);

    -[PKDashboardPassMessage setIdentifier:](v28, "setIdentifier:", CFSTR("accountPastDue"));
    objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", WeakRetained[109]);
    v36 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setAnalyticsReporterSubject:](v28, "setAnalyticsReporterSubject:", v36);

    PKLocalizedFeatureString();
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setTitle:](v28, "setTitle:", v37);

    objc_msgSend(WeakRetained, "_messageImageWithName:extension:", CFSTR("MessageAlert"), CFSTR("pdf"));
    v38 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setImage:](v28, "setImage:", v38);

    v165[0] = MEMORY[0x1E0C809B0];
    v165[1] = 3221225472;
    v165[2] = __76__PKDashboardPaymentPassDataSource__messagesForAccountStatusWithCompletion___block_invoke_2_657;
    v165[3] = &unk_1E3E61310;
    objc_copyWeak(&v166, from);
    -[PKDashboardPassMessage setActionOnButtonPress:](v28, "setActionOnButtonPress:", v165);
    objc_msgSend(v4, "addObject:", v28);
    objc_destroyWeak(&v166);

  }
  if ((v5 & 1) == 0)
  {
    v39 = objc_msgSend(WeakRetained[48], "state");
    if (v39 != 4)
    {
      if (v39 == 3)
      {
        PKLocalizedFeatureString();
        v40 = (void *)objc_claimAutoreleasedReturnValue();
        if ((unint64_t)(objc_msgSend(WeakRetained[48], "stateReason") - 5) <= 2)
        {
          PKLocalizedFeatureString();
          v42 = objc_claimAutoreleasedReturnValue();
          if (v42)
            goto LABEL_61;
        }
      }
      else
      {
        if (v39 != 2)
        {
          v46 = 0;
          v49 = 0;
          v143 = 0;
          v47 = 0;
          v40 = 0;
          goto LABEL_63;
        }
        PKLocalizedFeatureString();
        v40 = (void *)objc_claimAutoreleasedReturnValue();
        v41 = objc_msgSend(WeakRetained[48], "stateReason");
        if ((unint64_t)(v41 - 1) <= 7 && ((0x87u >> (v41 - 1)) & 1) != 0)
        {
          PKLocalizedFeatureString();
          v42 = objc_claimAutoreleasedReturnValue();
          if (v42)
          {
LABEL_61:
            v47 = (void *)v42;
            v46 = 0;
            v143 = 0;
            v49 = 1;
LABEL_63:
            v48 = CFSTR("accountStatus");
LABEL_77:
            objc_msgSend(WeakRetained[94], "currentAccountUser", v129);
            v54 = (void *)objc_claimAutoreleasedReturnValue();
            v55 = v54;
            if (!v40 && v54)
            {
              if (objc_msgSend(v54, "accessLevel") != 2)
              {
                v40 = 0;
                v4 = v145;
                goto LABEL_107;
              }
              objc_msgSend(v55, "preferences");
              v56 = (void *)objc_claimAutoreleasedReturnValue();
              v57 = v56;
              if (v56 && (objc_msgSend(v56, "spendingEnabled") & 1) == 0)
              {
                v142 = v46;
                objc_msgSend(WeakRetained[94], "accountUsers");
                v58 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v58, "objectsPassingTest:", &__block_literal_global_689);
                v59 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v59, "allObjects");
                v60 = (void *)objc_claimAutoreleasedReturnValue();

                PKLocalizedMadisonString(CFSTR("ACCOUNT_USER_SPENDING_RESTRICTED_TITLE"));
                v40 = (void *)objc_claimAutoreleasedReturnValue();
                v61 = objc_msgSend(v60, "count");
                v140 = v60;
                if (v61 < 2)
                {
                  if (v61 == 1)
                  {
                    objc_msgSend(v60, "firstObject");
                    v73 = (void *)objc_claimAutoreleasedReturnValue();
                    v74 = WeakRetained[97];
                    v75 = v73;
                    v137 = v73;
                    objc_msgSend(v73, "altDSID");
                    v133 = v57;
                    v76 = (void *)objc_claimAutoreleasedReturnValue();
                    objc_msgSend(v74, "familyMemberForAltDSID:", v76);
                    v139 = (void *)objc_claimAutoreleasedReturnValue();

                    v77 = (void *)MEMORY[0x1E0D66C60];
                    objc_msgSend(v75, "nameComponents");
                    v78 = (void *)objc_claimAutoreleasedReturnValue();
                    objc_msgSend(v77, "contactForFamilyMember:nameComponents:imageData:", v139, v78, 0);
                    v79 = (void *)objc_claimAutoreleasedReturnValue();

                    objc_msgSend(v79, "givenName");
                    v80 = (void *)objc_claimAutoreleasedReturnValue();
                    PKLocalizedMadisonString(CFSTR("ACCOUNT_USER_SPENDING_RESTRICTED_ONE_OWNER_MESSAGE"), CFSTR("%@"), v80);
                    v72 = objc_claimAutoreleasedReturnValue();

                    v57 = v133;
                    v47 = v137;
                  }
                  else
                  {
                    PKLocalizedMadisonString(CFSTR("ACCOUNT_USER_SPENDING_RESTRICTED_GENERIC_MESSAGE"));
                    v72 = objc_claimAutoreleasedReturnValue();
                  }
                }
                else
                {
                  objc_msgSend(v60, "objectAtIndexedSubscript:", 0);
                  v138 = (void *)objc_claimAutoreleasedReturnValue();
                  v62 = WeakRetained[97];
                  objc_msgSend(v138, "altDSID");
                  v132 = v57;
                  v63 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v62, "familyMemberForAltDSID:", v63);
                  v136 = (void *)objc_claimAutoreleasedReturnValue();

                  objc_msgSend(v60, "objectAtIndexedSubscript:", 1);
                  v135 = (void *)objc_claimAutoreleasedReturnValue();
                  v64 = WeakRetained[97];
                  objc_msgSend(v135, "altDSID");
                  v65 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v64, "familyMemberForAltDSID:", v65);
                  v134 = (void *)objc_claimAutoreleasedReturnValue();

                  v66 = (void *)MEMORY[0x1E0D66C60];
                  objc_msgSend(v138, "nameComponents");
                  v67 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v66, "contactForFamilyMember:nameComponents:imageData:", v136, v67, 0);
                  v131 = (void *)objc_claimAutoreleasedReturnValue();

                  v68 = (void *)MEMORY[0x1E0D66C60];
                  objc_msgSend(v135, "nameComponents");
                  v69 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v68, "contactForFamilyMember:nameComponents:imageData:", v134, v69, 0);
                  v130 = (void *)objc_claimAutoreleasedReturnValue();

                  objc_msgSend(v131, "givenName");
                  v70 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v130, "givenName");
                  v71 = (void *)objc_claimAutoreleasedReturnValue();
                  PKLocalizedMadisonString(CFSTR("ACCOUNT_USER_SPENDING_RESTRICTED_TWO_OWNERS_MESSAGE"), CFSTR("%@%@"), v70, v71);
                  v72 = objc_claimAutoreleasedReturnValue();

                  v57 = v132;
                  v47 = v138;
                }
                v46 = v142;

                v47 = (void *)v72;
              }
              else
              {
                v40 = 0;
              }

            }
            if (v40)
            {
              v141 = v55;
              v81 = v46;
              v82 = objc_alloc_init(PKDashboardPassMessage);
              -[PKDashboardPassMessage setIdentifier:](v82, "setIdentifier:", v48);
              -[PKDashboardPassMessage setReportToAnalytics:](v82, "setReportToAnalytics:", HIDWORD(v143));
              -[PKDashboardPassMessage setTitle:](v82, "setTitle:", v40);
              -[PKDashboardPassMessage setMessage:](v82, "setMessage:", v47);
              objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", WeakRetained[109]);
              v83 = (void *)objc_claimAutoreleasedReturnValue();
              -[PKDashboardPassMessage setAnalyticsReporterSubject:](v82, "setAnalyticsReporterSubject:", v83);

              objc_msgSend(WeakRetained, "_messageImageWithName:extension:", CFSTR("MessageAlert"), CFSTR("pdf"));
              v84 = (void *)objc_claimAutoreleasedReturnValue();
              -[PKDashboardPassMessage setImage:](v82, "setImage:", v84);

              if ((_DWORD)v143)
              {
                PKLocalizedFeatureString();
                v85 = (void *)objc_claimAutoreleasedReturnValue();
                -[PKDashboardPassMessage setButtonTitle:](v82, "setButtonTitle:", v85);

                v163[0] = MEMORY[0x1E0C809B0];
                v163[1] = 3221225472;
                v163[2] = __76__PKDashboardPaymentPassDataSource__messagesForAccountStatusWithCompletion___block_invoke_4_701;
                v163[3] = &unk_1E3E61310;
                v86 = &v164;
                objc_copyWeak(&v164, from);
                -[PKDashboardPassMessage setActionOnButtonPress:](v82, "setActionOnButtonPress:", v163);
              }
              else
              {
                if (HIDWORD(v143))
                {
                  if ((objc_msgSend(WeakRetained[109], "supportsBarcodePayment") & 1) != 0)
                    PKLocalizedAquamanString(CFSTR("DELETE_PASS_ACCOUNT"));
                  else
                    PKLocalizedPaymentString(CFSTR("DELETE_PASS"));
                  v88 = (void *)objc_claimAutoreleasedReturnValue();
                  v4 = v145;
                  -[PKDashboardPassMessage setButtonTitle:](v82, "setButtonTitle:", v88);

                  v161[0] = MEMORY[0x1E0C809B0];
                  v161[1] = 3221225472;
                  v161[2] = __76__PKDashboardPaymentPassDataSource__messagesForAccountStatusWithCompletion___block_invoke_5;
                  v161[3] = &unk_1E3E61310;
                  v86 = &v162;
                  objc_copyWeak(&v162, from);
                  -[PKDashboardPassMessage setActionOnButtonPress:](v82, "setActionOnButtonPress:", v161);
                  -[PKDashboardPassMessage setIsDestructiveAction:](v82, "setIsDestructiveAction:", 1);
                  goto LABEL_105;
                }
                if (!v49)
                {
                  v4 = v145;
                  if (!v81)
                  {
LABEL_106:
                    objc_msgSend(v4, "addObject:", v82);

                    v1 = v144;
                    v55 = v141;
                    goto LABEL_107;
                  }
                  PKLocalizedMadisonString(CFSTR("ACCOUNT_CLOSURE_LEARN_MORE_BUTTON"));
                  v89 = (void *)objc_claimAutoreleasedReturnValue();
                  -[PKDashboardPassMessage setButtonTitle:](v82, "setButtonTitle:", v89);

                  v157[0] = MEMORY[0x1E0C809B0];
                  v157[1] = 3221225472;
                  v157[2] = __76__PKDashboardPaymentPassDataSource__messagesForAccountStatusWithCompletion___block_invoke_7;
                  v157[3] = &unk_1E3E61310;
                  v86 = &v158;
                  objc_copyWeak(&v158, from);
                  -[PKDashboardPassMessage setActionOnButtonPress:](v82, "setActionOnButtonPress:", v157);
LABEL_105:
                  objc_destroyWeak(v86);
                  goto LABEL_106;
                }
                PKLocalizedFeatureString();
                v87 = (void *)objc_claimAutoreleasedReturnValue();
                -[PKDashboardPassMessage setButtonTitle:](v82, "setButtonTitle:", v87);

                -[PKDashboardPassMessage setShowDisclosure:](v82, "setShowDisclosure:", 1);
                v159[0] = MEMORY[0x1E0C809B0];
                v159[1] = 3221225472;
                v159[2] = __76__PKDashboardPaymentPassDataSource__messagesForAccountStatusWithCompletion___block_invoke_6;
                v159[3] = &unk_1E3E61310;
                v86 = &v160;
                objc_copyWeak(&v160, from);
                -[PKDashboardPassMessage setActionOnButtonPress:](v82, "setActionOnButtonPress:", v159);
              }
              v4 = v145;
              goto LABEL_105;
            }
            v1 = v144;
            v4 = v145;
LABEL_107:

            goto LABEL_108;
          }
        }
      }
      PKLocalizedFeatureString();
      v42 = objc_claimAutoreleasedReturnValue();
      goto LABEL_61;
    }
    objc_msgSend(WeakRetained[48], "creditDetails");
    v43 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v43, "accountSummary");
    v44 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v44, "adjustedBalance");
    v45 = (void *)objc_claimAutoreleasedReturnValue();
    v46 = objc_msgSend(WeakRetained[48], "isCoOwner");
    if (v46)
    {
      PKLocalizedFeatureString();
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      PKLocalizedFeatureString();
      v47 = (void *)objc_claimAutoreleasedReturnValue();
      v143 = 0;
LABEL_57:
      v48 = CFSTR("accountStatusClosedNoBalance");
LABEL_76:

      v49 = 0;
      v1 = v144;
      goto LABEL_77;
    }
    if (v45 && objc_msgSend(WeakRetained[48], "supportsSchedulePayment"))
    {
      PKLocalizedFeatureString();
      v40 = (void *)objc_claimAutoreleasedReturnValue();
      PKLocalizedFeatureString();
      v47 = (void *)objc_claimAutoreleasedReturnValue();
      v143 = 1;
    }
    else
    {
      v50 = objc_msgSend(WeakRetained[48], "accessLevel", v129);
      if (v50 == 2)
      {
        v51 = v46;
        v52 = objc_msgSend(WeakRetained[96], "count");
        PKLocalizedMadisonString(CFSTR("ACCOUNT_SERVICE_ACCOUNT_CLOSED_PARTICIPANT_TITLE"));
        v40 = (void *)objc_claimAutoreleasedReturnValue();
        v14 = v52 == 0;
        v46 = v51;
        if (v14)
          v53 = CFSTR("ACCOUNT_SERVICE_ACCOUNT_CLOSED_PARTICIPANT_MESSAGE");
        else
          v53 = CFSTR("ACCOUNT_SERVICE_ACCOUNT_CLOSED_PARTICIPANT_WITH_PHYSICAL_CARD_MESSAGE");
        PKLocalizedMadisonString(&v53->isa);
        v47 = (void *)objc_claimAutoreleasedReturnValue();
        v143 = 0x100000000;
        v48 = CFSTR("accountStatusClosedParticipant");
        goto LABEL_76;
      }
      if (v50 == 1)
      {
        PKLocalizedFeatureString();
        v40 = (void *)objc_claimAutoreleasedReturnValue();
        PKLocalizedFeatureString();
        v47 = (void *)objc_claimAutoreleasedReturnValue();
        v143 = 0x100000000;
        goto LABEL_57;
      }
      v143 = 0;
      v47 = 0;
      v40 = 0;
    }
    v48 = CFSTR("accountStatus");
    goto LABEL_76;
  }
LABEL_108:
  objc_msgSend(WeakRetained[48], "creditDetails", v129);
  v90 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v90, "virtualCards");
  v91 = (void *)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend(v91, "count"))
  {
    objc_msgSend(v91, "anyObject");
    v92 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v92 = 0;
  }
  if (objc_msgSend(WeakRetained[48], "state") == 1
    && objc_msgSend(v91, "count") == 1
    && objc_msgSend(v92, "state") == 3)
  {
    v93 = objc_alloc_init(PKDashboardPassMessage);
    -[PKDashboardPassMessage setIdentifier:](v93, "setIdentifier:", CFSTR("virtualCardSuspended"));
    PKLocalizedFeatureString();
    v94 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setTitle:](v93, "setTitle:", v94);

    PKLocalizedFeatureString();
    v95 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setMessage:](v93, "setMessage:", v95);

    objc_msgSend(WeakRetained, "_messageImageWithName:extension:", CFSTR("MessageAlert"), CFSTR("pdf"));
    v96 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setImage:](v93, "setImage:", v96);

    PKLocalizedFeatureString();
    v97 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setButtonTitle:](v93, "setButtonTitle:", v97);

    v155[0] = MEMORY[0x1E0C809B0];
    v155[1] = 3221225472;
    v155[2] = __76__PKDashboardPaymentPassDataSource__messagesForAccountStatusWithCompletion___block_invoke_8;
    v155[3] = &unk_1E3E61310;
    objc_copyWeak(&v156, from);
    -[PKDashboardPassMessage setActionOnButtonPress:](v93, "setActionOnButtonPress:", v155);
    objc_msgSend(v4, "addObject:", v93);
    objc_destroyWeak(&v156);

  }
  objc_msgSend(WeakRetained[48], "accountIdentifier");
  v98 = (void *)objc_claimAutoreleasedReturnValue();
  ShouldShowVPANReissuedMessage = PKCardShouldShowVPANReissuedMessage();

  if (!ShouldShowVPANReissuedMessage)
    goto LABEL_127;
  PKLocalizedFeatureString();
  v100 = (void *)objc_claimAutoreleasedReturnValue();
  PKCardAltDSIDForVPANReissuedMessage();
  v101 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v101, "length"))
  {
    PKCurrentUserAltDSID();
    v102 = (void *)objc_claimAutoreleasedReturnValue();
    v103 = v101;
    v104 = v102;
    if (v103 == v104)
    {
      v107 = v103;
      v108 = v103;
    }
    else
    {
      v105 = v104;
      if (v103 && v104)
      {
        v106 = objc_msgSend(v103, "isEqualToString:", v104);

        if ((v106 & 1) != 0)
          goto LABEL_126;
      }
      else
      {

      }
      objc_msgSend(WeakRetained[94], "accountUserWithAltDSID:", v103);
      v108 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(WeakRetained[97], "familyMemberForAltDSID:", v103);
      v107 = (void *)objc_claimAutoreleasedReturnValue();
      v109 = (void *)MEMORY[0x1E0D66C60];
      objc_msgSend(v108, "nameComponents");
      v110 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v109, "contactForFamilyMember:nameComponents:imageData:", v107, v110, 0);
      v103 = (id)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v103, "givenName");
      v111 = (void *)objc_claimAutoreleasedReturnValue();
      PKLocalizedMadisonString(CFSTR("ACCOUNT_SERVICE_VIRTUAL_CARD_AUTO_REISSUED_ACCOUNT_USER_MESSAGE_BODY"), CFSTR("%@"), v111);
      v112 = objc_claimAutoreleasedReturnValue();

      v100 = (void *)v112;
    }

  }
LABEL_126:
  v113 = objc_alloc_init(PKDashboardPassMessage);
  -[PKDashboardPassMessage setIdentifier:](v113, "setIdentifier:", CFSTR("virtualCardAutoReissued"));
  PKLocalizedFeatureString();
  v114 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPassMessage setTitle:](v113, "setTitle:", v114);

  -[PKDashboardPassMessage setMessage:](v113, "setMessage:", v100);
  objc_msgSend(WeakRetained, "_messageImageWithName:extension:", CFSTR("MessageAlert"), CFSTR("pdf"));
  v115 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPassMessage setImage:](v113, "setImage:", v115);

  PKLocalizedFeatureString();
  v116 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPassMessage setButtonTitle:](v113, "setButtonTitle:", v116);

  v117 = MEMORY[0x1E0C809B0];
  v153[0] = MEMORY[0x1E0C809B0];
  v153[1] = 3221225472;
  v153[2] = __76__PKDashboardPaymentPassDataSource__messagesForAccountStatusWithCompletion___block_invoke_9;
  v153[3] = &unk_1E3E61310;
  objc_copyWeak(&v154, from);
  -[PKDashboardPassMessage setActionOnButtonPress:](v113, "setActionOnButtonPress:", v153);
  v151[0] = v117;
  v151[1] = 3221225472;
  v151[2] = __76__PKDashboardPaymentPassDataSource__messagesForAccountStatusWithCompletion___block_invoke_10;
  v151[3] = &unk_1E3E61310;
  objc_copyWeak(&v152, from);
  -[PKDashboardPassMessage setActionOnDismiss:](v113, "setActionOnDismiss:", v151);
  v4 = v145;
  objc_msgSend(v145, "addObject:", v113);
  objc_destroyWeak(&v152);
  objc_destroyWeak(&v154);

  v1 = v144;
LABEL_127:
  objc_msgSend(WeakRetained[48], "accountIdentifier");
  v118 = (void *)objc_claimAutoreleasedReturnValue();
  ShouldShowVPANUpdatedMessage = PKAppleCardShouldShowVPANUpdatedMessage();

  if (ShouldShowVPANUpdatedMessage)
  {
    v120 = objc_alloc_init(PKDashboardPassMessage);
    -[PKDashboardPassMessage setIdentifier:](v120, "setIdentifier:", CFSTR("virtualCardUpdated"));
    PKLocalizedFeatureString();
    v121 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setTitle:](v120, "setTitle:", v121);

    PKLocalizedFeatureString();
    v122 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setMessage:](v120, "setMessage:", v122);

    objc_msgSend(MEMORY[0x1E0DC3870], "systemImageNamed:", CFSTR("creditcard.and.123"));
    v123 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setImage:](v120, "setImage:", v123);

    objc_msgSend(MEMORY[0x1E0DC3658], "labelColor");
    v124 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setImageTintColor:](v120, "setImageTintColor:", v124);

    -[PKDashboardPassMessage setShowDisclosure:](v120, "setShowDisclosure:", 1);
    PKLocalizedFeatureString();
    v125 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setButtonTitle:](v120, "setButtonTitle:", v125);

    v126 = MEMORY[0x1E0C809B0];
    v149[0] = MEMORY[0x1E0C809B0];
    v149[1] = 3221225472;
    v149[2] = __76__PKDashboardPaymentPassDataSource__messagesForAccountStatusWithCompletion___block_invoke_11;
    v149[3] = &unk_1E3E61310;
    objc_copyWeak(&v150, from);
    -[PKDashboardPassMessage setActionOnDismiss:](v120, "setActionOnDismiss:", v149);
    v147[0] = v126;
    v147[1] = 3221225472;
    v147[2] = __76__PKDashboardPaymentPassDataSource__messagesForAccountStatusWithCompletion___block_invoke_12;
    v147[3] = &unk_1E3E61310;
    objc_copyWeak(&v148, from);
    -[PKDashboardPassMessage setActionOnButtonPress:](v120, "setActionOnButtonPress:", v147);
    objc_msgSend(v4, "addObject:", v120);
    objc_destroyWeak(&v148);
    objc_destroyWeak(&v150);

  }
  v127 = *(_QWORD *)(v1 + 40);
  v128 = (void *)objc_msgSend(v4, "copy");
  (*(void (**)(uint64_t, void *))(v127 + 16))(v127, v128);

LABEL_130:
}

void __76__PKDashboardPaymentPassDataSource__messagesForAccountStatusWithCompletion___block_invoke_3(uint64_t a1)
{
  PKBusinessChatAccountStateContext *v1;
  _QWORD *WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v1 = -[PKBusinessChatAccountStateContext initWithAccount:paymentPass:eligibleForRecoveryPaymentPlan:]([PKBusinessChatAccountStateContext alloc], "initWithAccount:paymentPass:eligibleForRecoveryPaymentPlan:", WeakRetained[48], WeakRetained[109], 1);
    objc_msgSend(WeakRetained, "_presentAccountResolution:forBusinessChatContext:", 3, v1);

  }
}

void __76__PKDashboardPaymentPassDataSource__messagesForAccountStatusWithCompletion___block_invoke_4()
{
  void *v0;
  id v1;

  v1 = (id)objc_msgSend(objc_alloc(MEMORY[0x1E0C99E98]), "initWithString:", CFSTR("https://support.apple.com/HT213514"));
  objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "openURL:configuration:completionHandler:", v1, 0, 0);

}

void __76__PKDashboardPaymentPassDataSource__messagesForAccountStatusWithCompletion___block_invoke_645(uint64_t a1)
{
  void *v2;
  PKPaymentTransactionDetailViewController *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "anyObject");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    LOBYTE(v6) = 1;
    v3 = -[PKPaymentTransactionDetailViewController initWithTransaction:transactionSourceCollection:familyCollection:account:accountUserCollection:bankConnectInstitution:physicalCards:contactResolver:peerPaymentWebService:paymentServiceDataProvider:detailViewStyle:allowTransactionLinks:]([PKPaymentTransactionDetailViewController alloc], "initWithTransaction:transactionSourceCollection:familyCollection:account:accountUserCollection:bankConnectInstitution:physicalCards:contactResolver:peerPaymentWebService:paymentServiceDataProvider:detailViewStyle:allowTransactionLinks:", v2, *((_QWORD *)WeakRetained + 6), *((_QWORD *)WeakRetained + 97), *((_QWORD *)WeakRetained + 48), *((_QWORD *)WeakRetained + 94), 0, *((_QWORD *)WeakRetained + 96), 0, *((_QWORD *)WeakRetained + 108), *((_QWORD *)WeakRetained + 31), 0, v6);
    objc_msgSend(*((id *)WeakRetained + 1), "pkui_viewControllerFromResponderChain");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "navigationController");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "pushViewController:animated:", v3, 1);

  }
}

void __76__PKDashboardPaymentPassDataSource__messagesForAccountStatusWithCompletion___block_invoke_2_657(uint64_t a1)
{
  _QWORD *WeakRetained;
  void *v2;
  PKAccountServiceAccountResolutionController *v3;
  void *v4;
  id v5;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v5 = WeakRetained;
    v2 = (void *)WeakRetained[64];
    if (!v2)
    {
      v3 = -[PKAccountServiceAccountResolutionController initWithAccount:accountUserCollection:transactionSourceCollection:]([PKAccountServiceAccountResolutionController alloc], "initWithAccount:accountUserCollection:transactionSourceCollection:", *((_QWORD *)v5 + 48), *((_QWORD *)v5 + 94), *((_QWORD *)v5 + 6));
      v4 = (void *)*((_QWORD *)v5 + 64);
      *((_QWORD *)v5 + 64) = v3;

      objc_msgSend(*((id *)v5 + 64), "setDelegate:");
      v2 = (void *)*((_QWORD *)v5 + 64);
    }
    objc_msgSend(v2, "presentFlowForAccountResolution:configuration:completion:", 1, 0, 0);
    WeakRetained = v5;
  }

}

uint64_t __76__PKDashboardPaymentPassDataSource__messagesForAccountStatusWithCompletion___block_invoke_3_687(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;

  v2 = a2;
  if (objc_msgSend(v2, "accessLevel") == 1)
  {
    objc_msgSend(v2, "accountState");
    v3 = PKAccountStateIsTerminal() ^ 1;
  }
  else
  {
    v3 = 0;
  }

  return v3;
}

void __76__PKDashboardPaymentPassDataSource__messagesForAccountStatusWithCompletion___block_invoke_4_701(uint64_t a1)
{
  _QWORD *WeakRetained;
  void *v2;
  PKAccountServiceAccountResolutionController *v3;
  void *v4;
  id v5;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v5 = WeakRetained;
    v2 = (void *)WeakRetained[64];
    if (!v2)
    {
      v3 = -[PKAccountServiceAccountResolutionController initWithAccount:accountUserCollection:transactionSourceCollection:]([PKAccountServiceAccountResolutionController alloc], "initWithAccount:accountUserCollection:transactionSourceCollection:", *((_QWORD *)v5 + 48), *((_QWORD *)v5 + 94), *((_QWORD *)v5 + 6));
      v4 = (void *)*((_QWORD *)v5 + 64);
      *((_QWORD *)v5 + 64) = v3;

      objc_msgSend(*((id *)v5 + 64), "setDelegate:");
      v2 = (void *)*((_QWORD *)v5 + 64);
    }
    objc_msgSend(v2, "presentFlowForAccountResolution:configuration:completion:", 1, 0, 0);
    WeakRetained = v5;
  }

}

void __76__PKDashboardPaymentPassDataSource__messagesForAccountStatusWithCompletion___block_invoke_5(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = WeakRetained;
    objc_msgSend(WeakRetained, "_deleteButtonPressed");
    WeakRetained = v2;
  }

}

void __76__PKDashboardPaymentPassDataSource__messagesForAccountStatusWithCompletion___block_invoke_6(uint64_t a1)
{
  id *WeakRetained;
  PKBusinessChatAccountStateContext *v2;
  id *v3;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    if (objc_msgSend(WeakRetained[48], "feature") == 4)
    {
      objc_msgSend(v3, "_presentPassContactSupportWithOption:", 15);
    }
    else
    {
      v2 = -[PKBusinessChatAccountStateContext initWithAccount:paymentPass:eligibleForRecoveryPaymentPlan:]([PKBusinessChatAccountStateContext alloc], "initWithAccount:paymentPass:eligibleForRecoveryPaymentPlan:", v3[48], v3[109], 0);
      objc_msgSend(v3, "_presentAccountResolution:forBusinessChatContext:", 2, v2);

    }
    WeakRetained = v3;
  }

}

void __76__PKDashboardPaymentPassDataSource__messagesForAccountStatusWithCompletion___block_invoke_7(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = WeakRetained;
    objc_msgSend(WeakRetained, "_presentAboutClosedAccounts");
    WeakRetained = v2;
  }

}

void __76__PKDashboardPaymentPassDataSource__messagesForAccountStatusWithCompletion___block_invoke_8(uint64_t a1)
{
  PKBusinessChatAccountStateContext *v1;
  _QWORD *WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v1 = -[PKBusinessChatAccountStateContext initWithAccount:paymentPass:eligibleForRecoveryPaymentPlan:]([PKBusinessChatAccountStateContext alloc], "initWithAccount:paymentPass:eligibleForRecoveryPaymentPlan:", WeakRetained[48], WeakRetained[109], 0);
    objc_msgSend(WeakRetained, "_presentAccountResolution:forBusinessChatContext:", 2, v1);

  }
}

void __76__PKDashboardPaymentPassDataSource__messagesForAccountStatusWithCompletion___block_invoke_9(uint64_t a1)
{
  id *WeakRetained;
  void *v2;
  id *v3;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained, "_presentCardNumbers");
    objc_msgSend(v3[48], "accountIdentifier");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    PKCardSetShouldShowVPANReissuedMessage();

    PKCardSetAltDSIDForVPANReissuedMessage();
    objc_msgSend(v3, "reloadMessages");
    WeakRetained = v3;
  }

}

void __76__PKDashboardPaymentPassDataSource__messagesForAccountStatusWithCompletion___block_invoke_10(uint64_t a1)
{
  id *WeakRetained;
  void *v2;
  id *v3;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained[48], "accountIdentifier");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    PKCardSetShouldShowVPANReissuedMessage();

    PKCardSetAltDSIDForVPANReissuedMessage();
    objc_msgSend(v3, "reloadMessages");
    WeakRetained = v3;
  }

}

void __76__PKDashboardPaymentPassDataSource__messagesForAccountStatusWithCompletion___block_invoke_11(uint64_t a1)
{
  id *WeakRetained;
  void *v2;
  id *v3;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained[48], "accountIdentifier");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    PKAppleCardSetShouldShowVPANUpdatedMessage();

    objc_msgSend(v3, "reloadMessages");
    WeakRetained = v3;
  }

}

void __76__PKDashboardPaymentPassDataSource__messagesForAccountStatusWithCompletion___block_invoke_12(uint64_t a1)
{
  id *WeakRetained;
  void *v2;
  id *v3;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained, "_presentCardNumbers");
    objc_msgSend(v3[48], "accountIdentifier");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    PKAppleCardSetShouldShowVPANUpdatedMessage();

    objc_msgSend(v3, "reloadMessages");
    WeakRetained = v3;
  }

}

- (id)_cardSharingEducationMessages
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  PKDashboardPassMessage *v7;
  void *v8;
  void *v9;
  void *v10;
  PKFamilyMemberCollection *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  PKFamilyMemberCollection *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v31;
  PKFamilyMemberCollection *familyCollection;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  _QWORD v40[4];
  id v41;
  id location;

  if (self->_accountUsersLoaded
    && self->_accountUserInvitationsLoaded
    && self->_familyCollectionLoaded
    && self->_account)
  {
    objc_initWeak(&location, self);
    v3 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
    -[PKAccountUserCollection activeAccountUsers](self->_accountUserCollection, "activeAccountUsers");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "objectsPassingTest:", &__block_literal_global_726);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "allObjects");
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    if (!objc_msgSend(v6, "count"))
      goto LABEL_18;
    if (-[PKAccount accessLevel](self->_account, "accessLevel") != 2 || (PKSharedCacheGetBoolForKey() & 1) != 0)
    {
LABEL_16:
      if (objc_msgSend(v3, "count"))
      {
        v29 = (void *)objc_msgSend(v3, "copy");
LABEL_19:

        objc_destroyWeak(&location);
        return v29;
      }
LABEL_18:
      v29 = 0;
      goto LABEL_19;
    }
    v7 = objc_alloc_init(PKDashboardPassMessage);
    -[PKDashboardPassMessage setIdentifier:](v7, "setIdentifier:", CFSTR("welcomeToCardParticipantPrompt"));
    -[PKDashboardPassMessage setReportToAnalytics:](v7, "setReportToAnalytics:", 1);
    PKDashboardMessagePassIcon(self->_pass);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setImage:](v7, "setImage:", v8);

    PKLocalizedMadisonString(CFSTR("PARTICIPANT_DASHBOARD_WELCOME_TO_CARD_TITLE"));
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setTitle:](v7, "setTitle:", v9);

    if ((unint64_t)objc_msgSend(v6, "count") < 2)
    {
      if (!objc_msgSend(v6, "count"))
      {
        v27 = 0;
        goto LABEL_15;
      }
      v31 = (void *)MEMORY[0x1E0D66C60];
      familyCollection = self->_familyCollection;
      objc_msgSend(v6, "objectAtIndexedSubscript:", 0);
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v33, "altDSID");
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKFamilyMemberCollection familyMemberForAltDSID:](familyCollection, "familyMemberForAltDSID:", v34);
      v35 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "objectAtIndexedSubscript:", 0);
      v36 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v36, "nameComponents");
      v37 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v31, "contactForFamilyMember:nameComponents:imageData:", v35, v37, 0);
      v28 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v28, "givenName");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      PKLocalizedMadisonString(CFSTR("PARTICIPANT_DASHBOARD_WELCOME_TO_CARD_MESSAGE"), CFSTR("%@"), v24);
      v27 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v10 = (void *)MEMORY[0x1E0D66C60];
      v11 = self->_familyCollection;
      objc_msgSend(v6, "objectAtIndexedSubscript:", 0);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "altDSID");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKFamilyMemberCollection familyMemberForAltDSID:](v11, "familyMemberForAltDSID:", v13);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "objectAtIndexedSubscript:", 0);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "nameComponents");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "contactForFamilyMember:nameComponents:imageData:", v14, v16, 0);
      v39 = (void *)objc_claimAutoreleasedReturnValue();

      v17 = (void *)MEMORY[0x1E0D66C60];
      v18 = self->_familyCollection;
      objc_msgSend(v6, "objectAtIndexedSubscript:", 1);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v19, "altDSID");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKFamilyMemberCollection familyMemberForAltDSID:](v18, "familyMemberForAltDSID:", v20);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "objectAtIndexedSubscript:", 1);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v22, "nameComponents");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v17, "contactForFamilyMember:nameComponents:imageData:", v21, v23, 0);
      v24 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v39, "givenName");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v24, "givenName");
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      PKLocalizedMadisonString(CFSTR("PARTICIPANT_CO_OWNERS_DASHBOARD_WELCOME_TO_CARD_MESSAGE"), CFSTR("%@%@"), v25, v26);
      v27 = (void *)objc_claimAutoreleasedReturnValue();

      v28 = v39;
    }

LABEL_15:
    -[PKDashboardPassMessage setMessage:](v7, "setMessage:", v27);
    objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", self->_pass);
    v38 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setAnalyticsReporterSubject:](v7, "setAnalyticsReporterSubject:", v38);

    v40[0] = MEMORY[0x1E0C809B0];
    v40[1] = 3221225472;
    v40[2] = __65__PKDashboardPaymentPassDataSource__cardSharingEducationMessages__block_invoke_2;
    v40[3] = &unk_1E3E61310;
    objc_copyWeak(&v41, &location);
    -[PKDashboardPassMessage setActionOnDismiss:](v7, "setActionOnDismiss:", v40);
    objc_msgSend(v3, "addObject:", v7);
    objc_destroyWeak(&v41);

    goto LABEL_16;
  }
  v29 = 0;
  return v29;
}

BOOL __65__PKDashboardPaymentPassDataSource__cardSharingEducationMessages__block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "accessLevel") == 1;
}

void __65__PKDashboardPaymentPassDataSource__cardSharingEducationMessages__block_invoke_2(uint64_t a1)
{
  id WeakRetained;
  id v3;

  PKSharedCacheSetBoolForKey();
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained, "reloadMessages");
    WeakRetained = v3;
  }

}

- (void)_presentAccountResolution:(unint64_t)a3 forBusinessChatContext:(id)a4
{
  id v6;
  PKAccountServiceAccountResolutionController *v7;
  PKAccountServiceAccountResolutionController *accountResolutionController;
  id v9;

  v6 = a4;
  dispatch_assert_queue_V2(MEMORY[0x1E0C80D38]);
  if (!self->_accountResolutionController)
  {
    v7 = -[PKAccountServiceAccountResolutionController initWithAccount:accountUserCollection:transactionSourceCollection:]([PKAccountServiceAccountResolutionController alloc], "initWithAccount:accountUserCollection:transactionSourceCollection:", self->_account, self->_accountUserCollection, self->_transactionSourceCollection);
    accountResolutionController = self->_accountResolutionController;
    self->_accountResolutionController = v7;

    -[PKAccountServiceAccountResolutionController setDelegate:](self->_accountResolutionController, "setDelegate:", self);
  }
  v9 = objc_alloc_init(MEMORY[0x1E0D668F0]);
  objc_msgSend(v9, "setBusinessChatContext:", v6);

  -[PKAccountServiceAccountResolutionController presentFlowForAccountResolution:configuration:completion:](self->_accountResolutionController, "presentFlowForAccountResolution:configuration:completion:", a3, v9, 0);
}

- (void)_presentPassContactSupportWithOption:(unint64_t)a3
{
  -[PKSecureElementPassContactIssuerHelper presentContactViewController:](self->_contactIssuerHelper, "presentContactViewController:", a3);
}

- (void)_messageForPeerPaymentIdentityVerificationForRewardsWithCompletion:(id)a3
{
  void (**v4)(id, _QWORD);
  char BoolForKey;
  PKAccount *account;
  void *v7;
  PKPeerPaymentAccount *peerPaymentAccount;
  _QWORD v9[4];
  void (**v10)(id, _QWORD);
  id v11;
  id location;

  v4 = (void (**)(id, _QWORD))a3;
  dispatch_assert_queue_V2(MEMORY[0x1E0C80D38]);
  if (v4)
  {
    BoolForKey = PKSharedCacheGetBoolForKey();
    if (!self->_account || (BoolForKey & 1) != 0)
    {
      v4[2](v4, 0);
    }
    else
    {
      objc_initWeak(&location, self);
      account = self->_account;
      -[PKAccountUserCollection currentAccountUser](self->_accountUserCollection, "currentAccountUser");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      peerPaymentAccount = self->_peerPaymentAccount;
      v9[0] = MEMORY[0x1E0C809B0];
      v9[1] = 3221225472;
      v9[2] = __103__PKDashboardPaymentPassDataSource__messageForPeerPaymentIdentityVerificationForRewardsWithCompletion___block_invoke;
      v9[3] = &unk_1E3E73120;
      objc_copyWeak(&v11, &location);
      v10 = v4;
      +[PKCreditAccountController resolutionToReceiveCashbackForAccount:accountUser:withPeerPaymentAccount:completion:](PKCreditAccountController, "resolutionToReceiveCashbackForAccount:accountUser:withPeerPaymentAccount:completion:", account, v7, peerPaymentAccount, v9);

      objc_destroyWeak(&v11);
      objc_destroyWeak(&location);
    }
  }

}

void __103__PKDashboardPaymentPassDataSource__messageForPeerPaymentIdentityVerificationForRewardsWithCompletion___block_invoke(uint64_t a1, uint64_t a2)
{
  id *v4;
  _QWORD *WeakRetained;
  PKDashboardPassMessage *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  _QWORD v13[4];
  id v14;
  _QWORD v15[4];
  id v16[2];

  v4 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if (a2 == 2)
    {
      v6 = objc_alloc_init(PKDashboardPassMessage);
      PKLocalizedFeatureString();
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setTitle:](v6, "setTitle:", v7);

      PKLocalizedFeatureString();
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setMessage:](v6, "setMessage:", v8);

      -[PKDashboardPassMessage setIdentifier:](v6, "setIdentifier:", CFSTR("fixRewards"));
      objc_msgSend(WeakRetained, "_messageImageWithName:extension:", CFSTR("AppleCashIcon"), CFSTR("pdf"));
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setImage:](v6, "setImage:", v9);

      -[PKDashboardPassMessage setShowDisclosure:](v6, "setShowDisclosure:", 1);
      PKLocalizedPeerPaymentString(CFSTR("PEER_PAYMENT_ACCOUNT_STATE_FOOTER_IDENTITY_VERIFICATION_BUTTON"));
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setButtonTitle:](v6, "setButtonTitle:", v10);

      objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", WeakRetained[109]);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setAnalyticsReporterSubject:](v6, "setAnalyticsReporterSubject:", v11);

      v12 = MEMORY[0x1E0C809B0];
      v15[0] = MEMORY[0x1E0C809B0];
      v15[1] = 3221225472;
      v15[2] = __103__PKDashboardPaymentPassDataSource__messageForPeerPaymentIdentityVerificationForRewardsWithCompletion___block_invoke_2;
      v15[3] = &unk_1E3E66D38;
      objc_copyWeak(v16, v4);
      v16[1] = (id)2;
      -[PKDashboardPassMessage setActionOnButtonPress:](v6, "setActionOnButtonPress:", v15);
      v13[0] = v12;
      v13[1] = 3221225472;
      v13[2] = __103__PKDashboardPaymentPassDataSource__messageForPeerPaymentIdentityVerificationForRewardsWithCompletion___block_invoke_3;
      v13[3] = &unk_1E3E61310;
      objc_copyWeak(&v14, v4);
      -[PKDashboardPassMessage setActionOnDismiss:](v6, "setActionOnDismiss:", v13);
      (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
      objc_destroyWeak(&v14);
      objc_destroyWeak(v16);

    }
    else
    {
      (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
    }
  }

}

void __103__PKDashboardPaymentPassDataSource__messageForPeerPaymentIdentityVerificationForRewardsWithCompletion___block_invoke_2(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained, "_peerPaymentResolutionTappedWithResolution:", *(_QWORD *)(a1 + 40));
    WeakRetained = v3;
  }

}

void __103__PKDashboardPaymentPassDataSource__messageForPeerPaymentIdentityVerificationForRewardsWithCompletion___block_invoke_3(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    PKSharedCacheSetBoolForKey();
    objc_msgSend(WeakRetained, "reloadMessages");
  }

}

- (id)_messageForPeerPaymentFamilySharing
{
  int BoolForKey;
  PKPeerPaymentAccount *peerPaymentAccount;
  PKDashboardPassMessage *v5;
  void *v7;
  void *v8;
  uint64_t v9;
  NSObject *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t i;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  _QWORD v24[4];
  id v25;
  _QWORD v26[4];
  NSObject *v27;
  id v28;
  id buf[2];
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _BYTE v34[128];
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  dispatch_assert_queue_V2(MEMORY[0x1E0C80D38]);
  BoolForKey = PKSharedCacheGetBoolForKey();
  peerPaymentAccount = self->_peerPaymentAccount;
  if (peerPaymentAccount
    && ((-[PKPeerPaymentAccount supportsFamilySharing](peerPaymentAccount, "supportsFamilySharing") ^ 1 | BoolForKey) & 1) == 0
    && -[PKPeerPaymentAccount role](self->_peerPaymentAccount, "role") != 1)
  {
    -[PKPeerPaymentAccount associatedAccountInformation](self->_peerPaymentAccount, "associatedAccountInformation");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "associatedAccounts");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "count");

    if (v9)
    {
      PKLogFacilityTypeGetObject();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(buf[0]) = 0;
        _os_log_impl(&dword_19D178000, v10, OS_LOG_TYPE_DEFAULT, "Not showing peer payment family sharing dashboard message because the user has an associated account already.", (uint8_t *)buf, 2u);
      }
    }
    else
    {
      v10 = objc_alloc_init(MEMORY[0x1E0C99E20]);
      v30 = 0u;
      v31 = 0u;
      v32 = 0u;
      v33 = 0u;
      -[PKFamilyMemberCollection familyMembersByAltDSID](self->_familyCollection, "familyMembersByAltDSID");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "allValues");
      v12 = (void *)objc_claimAutoreleasedReturnValue();

      v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v30, v34, 16);
      if (v13)
      {
        v14 = 0;
        v15 = *(_QWORD *)v31;
        do
        {
          for (i = 0; i != v13; ++i)
          {
            if (*(_QWORD *)v31 != v15)
              objc_enumerationMutation(v12);
            v17 = *(void **)(*((_QWORD *)&v30 + 1) + 8 * i);
            if (objc_msgSend(v17, "isMe") && (objc_msgSend(v17, "isOrganizer") & 1) != 0)
            {
              v14 = 1;
            }
            else if (objc_msgSend(v17, "memberType") == 1 || objc_msgSend(v17, "memberType") == 2)
            {
              -[NSObject addObject:](v10, "addObject:", v17);
            }
          }
          v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v30, v34, 16);
        }
        while (v13);

        if ((v14 & 1) != 0)
        {
          v5 = objc_alloc_init(PKDashboardPassMessage);
          PKLocalizedPeerPaymentLexingtonString(CFSTR("PEER_PAYMENT_DASHBOARD_FAMILY_SHARING_TITLE"));
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          -[PKDashboardPassMessage setTitle:](v5, "setTitle:", v18);

          PKLocalizedPeerPaymentLexingtonString(CFSTR("PEER_PAYMENT_DASHBOARD_FAMILY_SHARING_MESSAGE"));
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          -[PKDashboardPassMessage setMessage:](v5, "setMessage:", v19);

          -[PKDashboardPassMessage setIdentifier:](v5, "setIdentifier:", CFSTR("peerPaymentFamilySharing"));
          -[PKDashboardPaymentPassDataSource _messageImageWithName:extension:](self, "_messageImageWithName:extension:", CFSTR("AppleCashIcon"), CFSTR("pdf"));
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          -[PKDashboardPassMessage setImage:](v5, "setImage:", v20);

          -[PKDashboardPassMessage setShowDisclosure:](v5, "setShowDisclosure:", 1);
          PKLocalizedPeerPaymentLexingtonString(CFSTR("PEER_PAYMENT_DASHBOARD_FAMILY_SHARING_BUTTON"));
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          -[PKDashboardPassMessage setButtonTitle:](v5, "setButtonTitle:", v21);

          objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", self->_pass);
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          -[PKDashboardPassMessage setAnalyticsReporterSubject:](v5, "setAnalyticsReporterSubject:", v22);

          objc_initWeak(buf, self);
          v23 = MEMORY[0x1E0C809B0];
          v26[0] = MEMORY[0x1E0C809B0];
          v26[1] = 3221225472;
          v26[2] = __71__PKDashboardPaymentPassDataSource__messageForPeerPaymentFamilySharing__block_invoke;
          v26[3] = &unk_1E3E61B68;
          objc_copyWeak(&v28, buf);
          v10 = v10;
          v27 = v10;
          -[PKDashboardPassMessage setActionOnButtonPress:](v5, "setActionOnButtonPress:", v26);
          v24[0] = v23;
          v24[1] = 3221225472;
          v24[2] = __71__PKDashboardPaymentPassDataSource__messageForPeerPaymentFamilySharing__block_invoke_745;
          v24[3] = &unk_1E3E61310;
          objc_copyWeak(&v25, buf);
          -[PKDashboardPassMessage setActionOnDismiss:](v5, "setActionOnDismiss:", v24);
          objc_destroyWeak(&v25);

          objc_destroyWeak(&v28);
          objc_destroyWeak(buf);
LABEL_26:

          return v5;
        }
      }
      else
      {

      }
    }
    v5 = 0;
    goto LABEL_26;
  }
  v5 = 0;
  return v5;
}

void __71__PKDashboardPaymentPassDataSource__messageForPeerPaymentFamilySharing__block_invoke(uint64_t a1)
{
  id WeakRetained;
  NSObject *v3;
  void *v4;
  void *v5;
  NSObject *v6;
  void *v7;
  int v8;
  NSObject *v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    if (objc_msgSend(*(id *)(a1 + 32), "count") == 1)
    {
      objc_msgSend(*(id *)(a1 + 32), "anyObject");
      v3 = objc_claimAutoreleasedReturnValue();
      -[NSObject altDSID](v3, "altDSID");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      PKPeerPaymentGetAppleCashFamilySettingsSensitiveURLForAltDSID();
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      PKLogFacilityTypeGetObject();
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        v8 = 138412290;
        v9 = v3;
        _os_log_impl(&dword_19D178000, v6, OS_LOG_TYPE_DEFAULT, "Opening apple cash feature in settings from dashboard for child %@", (uint8_t *)&v8, 0xCu);
      }

    }
    else
    {
      PKPeerPaymentGetAppleCashFamilySettingsSensitiveURLForAltDSID();
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      PKLogFacilityTypeGetObject();
      v3 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(v8) = 0;
        _os_log_impl(&dword_19D178000, v3, OS_LOG_TYPE_DEFAULT, "Opening apple cash feature in settings from dashboard", (uint8_t *)&v8, 2u);
      }
    }

    if (v5)
    {
      objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "openSensitiveURL:withOptions:", v5, 0);

    }
    PKSharedCacheSetBoolForKey();
    objc_msgSend(WeakRetained, "reloadMessages");

  }
}

void __71__PKDashboardPaymentPassDataSource__messageForPeerPaymentFamilySharing__block_invoke_745(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    PKSharedCacheSetBoolForKey();
    objc_msgSend(WeakRetained, "reloadMessages");
  }

}

- (id)_messageForPeerPaymentLockedAccountByAssociatedAccount
{
  PKPeerPaymentAccount *peerPaymentAccount;
  PKDashboardPassMessage *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  dispatch_assert_queue_V2(MEMORY[0x1E0C80D38]);
  peerPaymentAccount = self->_peerPaymentAccount;
  if (peerPaymentAccount
    && -[PKPeerPaymentAccount supportsFamilySharing](peerPaymentAccount, "supportsFamilySharing")
    && -[PKPeerPaymentAccount role](self->_peerPaymentAccount, "role")
    && -[PKPeerPaymentAccount isParticipantAccountLockedByOwner](self->_peerPaymentAccount, "isParticipantAccountLockedByOwner"))
  {
    v4 = objc_alloc_init(PKDashboardPassMessage);
    PKLocalizedPeerPaymentLexingtonString(CFSTR("PEER_PAYMENT_DASHBOARD_LOCKED_BY_ASSOCIATED_ACCOUNT_TITLE"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setTitle:](v4, "setTitle:", v5);

    PKLocalizedPeerPaymentLexingtonString(CFSTR("PEER_PAYMENT_DASHBOARD_LOCKED_BY_ASSOCIATED_ACCOUNT_MESSAGE"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setMessage:](v4, "setMessage:", v6);

    -[PKDashboardPassMessage setIdentifier:](v4, "setIdentifier:", CFSTR("peerPaymentLockedByAssociatedAccount"));
    -[PKDashboardPaymentPassDataSource _messageImageWithName:extension:](self, "_messageImageWithName:extension:", CFSTR("MessageAlert"), CFSTR("pdf"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setImage:](v4, "setImage:", v7);

    -[PKDashboardPassMessage setShowDisclosure:](v4, "setShowDisclosure:", 1);
    objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", self->_pass);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setAnalyticsReporterSubject:](v4, "setAnalyticsReporterSubject:", v8);

  }
  else
  {
    v4 = 0;
  }
  return v4;
}

- (id)_messageForPeerPaymentAssociatedAccountStateChangedForSecurityReasons
{
  PKPeerPaymentAccount *peerPaymentAccount;
  void *v4;
  void *v6;
  id v7;
  char v8;
  uint64_t v9;
  void *i;
  void *v11;
  PKPeerPaymentAccount *v12;
  void *v13;
  void *v14;
  char v15;
  void *v16;
  int v17;
  uint64_t j;
  void *v19;
  void *v20;
  void *v21;
  PKDashboardPassMessage *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t k;
  void *v32;
  void *v33;
  void *v34;
  PKDashboardPassMessage *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  id v42;
  id obj;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  _QWORD v50[5];
  id v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  _QWORD v56[5];
  id v57;
  id v58;
  id location;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  _BYTE v68[128];
  _BYTE v69[128];
  _BYTE v70[128];
  uint64_t v71;

  v71 = *MEMORY[0x1E0C80C00];
  dispatch_assert_queue_V2(MEMORY[0x1E0C80D38]);
  peerPaymentAccount = self->_peerPaymentAccount;
  if (peerPaymentAccount
    && -[PKPeerPaymentAccount supportsFamilySharing](peerPaymentAccount, "supportsFamilySharing")
    && -[PKPeerPaymentAccount role](self->_peerPaymentAccount, "role") != 1)
  {
    v49 = objc_alloc_init(MEMORY[0x1E0C99E20]);
    v44 = objc_alloc_init(MEMORY[0x1E0C99E20]);
    v64 = 0u;
    v65 = 0u;
    v66 = 0u;
    v67 = 0u;
    -[PKFamilyMemberCollection familyMembersByAltDSID](self->_familyCollection, "familyMembersByAltDSID");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "allValues");
    v7 = (id)objc_claimAutoreleasedReturnValue();

    v4 = (void *)objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v64, v70, 16);
    if (v4)
    {
      v8 = 0;
      v9 = *(_QWORD *)v65;
      do
      {
        for (i = 0; i != v4; i = (char *)i + 1)
        {
          if (*(_QWORD *)v65 != v9)
            objc_enumerationMutation(v7);
          v11 = *(void **)(*((_QWORD *)&v64 + 1) + 8 * (_QWORD)i);
          if (objc_msgSend(v11, "isMe") && (objc_msgSend(v11, "isOrganizer") & 1) != 0)
          {
            v8 = 1;
          }
          else
          {
            v12 = self->_peerPaymentAccount;
            objc_msgSend(v11, "altDSID");
            v13 = (void *)objc_claimAutoreleasedReturnValue();
            -[PKPeerPaymentAccount peerPaymentAccountWithAltDSID:](v12, "peerPaymentAccountWithAltDSID:", v13);
            v14 = (void *)objc_claimAutoreleasedReturnValue();

            if (v14)
            {
              v15 = objc_msgSend(v14, "isPariticipantAccountSecurityDowngraded");
              v16 = v49;
              if ((v15 & 1) != 0 || (v17 = objc_msgSend(v14, "isPariticipantAccountEmbargoRecovery"), v16 = v44, v17))
                objc_msgSend(v16, "addObject:", v11);
            }

          }
        }
        v4 = (void *)objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v64, v70, 16);
      }
      while (v4);

      if ((v8 & 1) == 0)
      {
        v4 = 0;
LABEL_41:

        return v4;
      }
      v7 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
      v62 = 0u;
      v63 = 0u;
      v60 = 0u;
      v61 = 0u;
      obj = v49;
      v47 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v60, v69, 16);
      if (v47)
      {
        v45 = *(id *)v61;
        do
        {
          for (j = 0; j != v47; ++j)
          {
            if (*(id *)v61 != v45)
              objc_enumerationMutation(obj);
            v19 = *(void **)(*((_QWORD *)&v60 + 1) + 8 * j);
            objc_msgSend(v19, "firstName");
            v20 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v19, "altDSID");
            v21 = (void *)objc_claimAutoreleasedReturnValue();
            v22 = objc_alloc_init(PKDashboardPassMessage);
            PKLocalizedPeerPaymentLexingtonString(CFSTR("PEER_PAYMENT_DASHBOARD_ASSOCIATED_ACCOUNT_LOCKED_AFTER_HSA2_UPGRADE_TITLE"), CFSTR("%@"), v20);
            v23 = (void *)objc_claimAutoreleasedReturnValue();
            -[PKDashboardPassMessage setTitle:](v22, "setTitle:", v23);

            PKLocalizedPeerPaymentLexingtonString(CFSTR("PEER_PAYMENT_DASHBOARD_ASSOCIATED_ACCOUNT_LOCKED_AFTER_HSA2_UPGRADE_MESSAGE"), CFSTR("%@"), v20);
            v24 = (void *)objc_claimAutoreleasedReturnValue();
            -[PKDashboardPassMessage setMessage:](v22, "setMessage:", v24);

            objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@-%@"), CFSTR("peerPaymentAssociatedAccountLockedHSA2Upgrade"), v21);
            v25 = (void *)objc_claimAutoreleasedReturnValue();
            -[PKDashboardPassMessage setIdentifier:](v22, "setIdentifier:", v25);
            -[PKDashboardPaymentPassDataSource _messageImageWithName:extension:](self, "_messageImageWithName:extension:", CFSTR("MessageAlert"), CFSTR("pdf"));
            v26 = (void *)objc_claimAutoreleasedReturnValue();
            -[PKDashboardPassMessage setImage:](v22, "setImage:", v26);

            -[PKDashboardPassMessage setShowDisclosure:](v22, "setShowDisclosure:", 1);
            PKLocalizedPeerPaymentLexingtonString(CFSTR("PEER_PAYMENT_DASHBOARD_ASSOCIATED_ACCOUNT_LOCKED_AFTER_HSA2_UPGRADE_BUTTON"));
            v27 = (void *)objc_claimAutoreleasedReturnValue();
            -[PKDashboardPassMessage setButtonTitle:](v22, "setButtonTitle:", v27);

            objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", self->_pass);
            v28 = (void *)objc_claimAutoreleasedReturnValue();
            -[PKDashboardPassMessage setAnalyticsReporterSubject:](v22, "setAnalyticsReporterSubject:", v28);

            objc_initWeak(&location, self);
            v56[0] = MEMORY[0x1E0C809B0];
            v56[1] = 3221225472;
            v56[2] = __105__PKDashboardPaymentPassDataSource__messageForPeerPaymentAssociatedAccountStateChangedForSecurityReasons__block_invoke;
            v56[3] = &unk_1E3E61EE8;
            objc_copyWeak(&v58, &location);
            v56[4] = v19;
            v29 = v21;
            v57 = v29;
            -[PKDashboardPassMessage setActionOnButtonPress:](v22, "setActionOnButtonPress:", v56);
            objc_msgSend(v7, "addObject:", v22);

            objc_destroyWeak(&v58);
            objc_destroyWeak(&location);

          }
          v47 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v60, v69, 16);
        }
        while (v47);
      }

      v54 = 0u;
      v55 = 0u;
      v52 = 0u;
      v53 = 0u;
      v46 = v44;
      v30 = objc_msgSend(v46, "countByEnumeratingWithState:objects:count:", &v52, v68, 16);
      if (v30)
      {
        v48 = *(_QWORD *)v53;
        do
        {
          for (k = 0; k != v30; ++k)
          {
            if (*(_QWORD *)v53 != v48)
              objc_enumerationMutation(v46);
            v32 = *(void **)(*((_QWORD *)&v52 + 1) + 8 * k);
            objc_msgSend(v32, "firstName");
            v33 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v32, "altDSID");
            v34 = (void *)objc_claimAutoreleasedReturnValue();
            v35 = objc_alloc_init(PKDashboardPassMessage);
            PKLocalizedPeerPaymentLexingtonString(CFSTR("PEER_PAYMENT_DASHBOARD_ASSOCIATED_ACCOUNT_LOCKED_AFTER_EMBARGO_RECOVERY_TITLE"));
            v36 = (void *)objc_claimAutoreleasedReturnValue();
            -[PKDashboardPassMessage setTitle:](v35, "setTitle:", v36);

            PKLocalizedPeerPaymentLexingtonString(CFSTR("PEER_PAYMENT_DASHBOARD_ASSOCIATED_ACCOUNT_LOCKED_AFTER_EMBARGO_RECOVERY_MESSAGE"), CFSTR("%@%@"), v33, v33);
            v37 = (void *)objc_claimAutoreleasedReturnValue();
            -[PKDashboardPassMessage setMessage:](v35, "setMessage:", v37);

            objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@-%@"), CFSTR("peerPaymentAssociatedAccountLockedEmbargoRecovery"), v34);
            v38 = (void *)objc_claimAutoreleasedReturnValue();
            -[PKDashboardPassMessage setIdentifier:](v35, "setIdentifier:", v38);
            -[PKDashboardPaymentPassDataSource _messageImageWithName:extension:](self, "_messageImageWithName:extension:", CFSTR("MessageAlert"), CFSTR("pdf"));
            v39 = (void *)objc_claimAutoreleasedReturnValue();
            -[PKDashboardPassMessage setImage:](v35, "setImage:", v39);

            -[PKDashboardPassMessage setShowDisclosure:](v35, "setShowDisclosure:", 1);
            PKLocalizedPeerPaymentLexingtonString(CFSTR("PEER_PAYMENT_DASHBOARD_ASSOCIATED_ACCOUNT_LOCKED_AFTER_EMBARGO_RECOVERY_BUTTON"));
            v40 = (void *)objc_claimAutoreleasedReturnValue();
            -[PKDashboardPassMessage setButtonTitle:](v35, "setButtonTitle:", v40);

            objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", self->_pass);
            v41 = (void *)objc_claimAutoreleasedReturnValue();
            -[PKDashboardPassMessage setAnalyticsReporterSubject:](v35, "setAnalyticsReporterSubject:", v41);

            v50[0] = MEMORY[0x1E0C809B0];
            v50[1] = 3221225472;
            v50[2] = __105__PKDashboardPaymentPassDataSource__messageForPeerPaymentAssociatedAccountStateChangedForSecurityReasons__block_invoke_764;
            v50[3] = &unk_1E3E61388;
            v50[4] = v32;
            v51 = v34;
            v42 = v34;
            -[PKDashboardPassMessage setActionOnButtonPress:](v35, "setActionOnButtonPress:", v50);
            objc_msgSend(v7, "addObject:", v35);

          }
          v30 = objc_msgSend(v46, "countByEnumeratingWithState:objects:count:", &v52, v68, 16);
        }
        while (v30);
      }

      if (objc_msgSend(v7, "count"))
        v4 = (void *)objc_msgSend(v7, "copy");
      else
        v4 = 0;
    }

    goto LABEL_41;
  }
  v4 = 0;
  return v4;
}

void __105__PKDashboardPaymentPassDataSource__messageForPeerPaymentAssociatedAccountStateChangedForSecurityReasons__block_invoke(uint64_t a1)
{
  id WeakRetained;
  NSObject *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    PKLogFacilityTypeGetObject();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      v4 = *(_QWORD *)(a1 + 32);
      v7 = 138412290;
      v8 = v4;
      _os_log_impl(&dword_19D178000, v3, OS_LOG_TYPE_DEFAULT, "Opening apple cash feature in settings from dashboard for child %@", (uint8_t *)&v7, 0xCu);
    }

    PKPeerPaymentGetAppleCashFamilySettingsSensitiveURLForAltDSID();
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "openSensitiveURL:withOptions:", v5, 0);

  }
}

void __105__PKDashboardPaymentPassDataSource__messageForPeerPaymentAssociatedAccountStateChangedForSecurityReasons__block_invoke_764(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  PKLogFacilityTypeGetObject();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    v3 = *(_QWORD *)(a1 + 32);
    v6 = 138412290;
    v7 = v3;
    _os_log_impl(&dword_19D178000, v2, OS_LOG_TYPE_DEFAULT, "Opening apple cash feature in settings from dashboard for child %@", (uint8_t *)&v6, 0xCu);
  }

  PKPeerPaymentGetAppleCashFamilySettingsSensitiveURLForAltDSID();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "openSensitiveURL:withOptions:", v4, 0);

}

- (id)_messageForPeerPaymentAssociatedAccountLockedAccount
{
  PKPeerPaymentAccount *peerPaymentAccount;
  void *v4;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  PKPeerPaymentAccount *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  void *v17;
  PKDashboardPassMessage *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  id obj;
  _QWORD v32[4];
  id v33;
  id location;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _BYTE v43[128];
  _BYTE v44[128];
  uint64_t v45;

  v45 = *MEMORY[0x1E0C80C00];
  dispatch_assert_queue_V2(MEMORY[0x1E0C80D38]);
  peerPaymentAccount = self->_peerPaymentAccount;
  if (peerPaymentAccount
    && -[PKPeerPaymentAccount supportsFamilySharing](peerPaymentAccount, "supportsFamilySharing")
    && -[PKPeerPaymentAccount role](self->_peerPaymentAccount, "role") != 1)
  {
    v29 = objc_alloc_init(MEMORY[0x1E0C99E20]);
    v39 = 0u;
    v40 = 0u;
    v41 = 0u;
    v42 = 0u;
    -[PKFamilyMemberCollection familyMembersByAltDSID](self->_familyCollection, "familyMembersByAltDSID");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "allValues");
    obj = (id)objc_claimAutoreleasedReturnValue();

    v7 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v39, v44, 16);
    if (v7)
    {
      v8 = *(_QWORD *)v40;
LABEL_8:
      v9 = 0;
      while (1)
      {
        if (*(_QWORD *)v40 != v8)
          objc_enumerationMutation(obj);
        v10 = *(void **)(*((_QWORD *)&v39 + 1) + 8 * v9);
        if (objc_msgSend(v10, "isMe"))
        {
          if (!objc_msgSend(v10, "isOrganizer"))
            break;
        }
        if ((objc_msgSend(v10, "isMe") & 1) == 0)
        {
          v11 = self->_peerPaymentAccount;
          objc_msgSend(v10, "altDSID");
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          -[PKPeerPaymentAccount peerPaymentAccountWithAltDSID:](v11, "peerPaymentAccountWithAltDSID:", v12);
          v13 = (void *)objc_claimAutoreleasedReturnValue();

          if (v13 && PKPeerPaymentAccountShouldContactSupport())
            objc_msgSend(v29, "addObject:", v10);

        }
        if (v7 == ++v9)
        {
          v7 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v39, v44, 16);
          if (v7)
            goto LABEL_8;
          goto LABEL_20;
        }
      }
    }
    else
    {
LABEL_20:

      obj = objc_alloc_init(MEMORY[0x1E0C99DE8]);
      v37 = 0u;
      v38 = 0u;
      v35 = 0u;
      v36 = 0u;
      v30 = v29;
      v14 = objc_msgSend(v30, "countByEnumeratingWithState:objects:count:", &v35, v43, 16);
      if (v14)
      {
        v15 = *(_QWORD *)v36;
        do
        {
          for (i = 0; i != v14; ++i)
          {
            if (*(_QWORD *)v36 != v15)
              objc_enumerationMutation(v30);
            v17 = *(void **)(*((_QWORD *)&v35 + 1) + 8 * i);
            v18 = objc_alloc_init(PKDashboardPassMessage);
            objc_msgSend(v17, "firstName");
            v19 = (void *)objc_claimAutoreleasedReturnValue();
            PKLocalizedPeerPaymentLexingtonString(CFSTR("PEER_PAYMENT_DASHBOARD_ASSOCIATED_ACCOUNT_LOCKED_BY_BANK_TITLE"), CFSTR("%@"), v19);
            v20 = (void *)objc_claimAutoreleasedReturnValue();
            -[PKDashboardPassMessage setTitle:](v18, "setTitle:", v20);

            objc_msgSend(v17, "firstName");
            v21 = (void *)objc_claimAutoreleasedReturnValue();
            PKLocalizedPeerPaymentLexingtonString(CFSTR("PEER_PAYMENT_DASHBOARD_ASSOCIATED_ACCOUNT_LOCKED_BY_BANK_MESSAGE"), CFSTR("%@"), v21);
            v22 = (void *)objc_claimAutoreleasedReturnValue();
            -[PKDashboardPassMessage setMessage:](v18, "setMessage:", v22);

            v23 = (void *)MEMORY[0x1E0CB3940];
            objc_msgSend(v17, "altDSID");
            v24 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v23, "stringWithFormat:", CFSTR("%@-%@"), CFSTR("peerPaymentAssociatedAccountLocked"), v24);
            v25 = (void *)objc_claimAutoreleasedReturnValue();

            -[PKDashboardPassMessage setIdentifier:](v18, "setIdentifier:", v25);
            -[PKDashboardPaymentPassDataSource _messageImageWithName:extension:](self, "_messageImageWithName:extension:", CFSTR("MessageAlert"), CFSTR("pdf"));
            v26 = (void *)objc_claimAutoreleasedReturnValue();
            -[PKDashboardPassMessage setImage:](v18, "setImage:", v26);

            -[PKDashboardPassMessage setShowDisclosure:](v18, "setShowDisclosure:", 1);
            PKLocalizedPeerPaymentString(CFSTR("PEER_PAYMENT_ACCOUNT_STATE_FOOTER_CONTACT_SUPPORT_BUTTON"));
            v27 = (void *)objc_claimAutoreleasedReturnValue();
            -[PKDashboardPassMessage setButtonTitle:](v18, "setButtonTitle:", v27);

            objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", self->_pass);
            v28 = (void *)objc_claimAutoreleasedReturnValue();
            -[PKDashboardPassMessage setAnalyticsReporterSubject:](v18, "setAnalyticsReporterSubject:", v28);

            objc_initWeak(&location, self);
            v32[0] = MEMORY[0x1E0C809B0];
            v32[1] = 3221225472;
            v32[2] = __88__PKDashboardPaymentPassDataSource__messageForPeerPaymentAssociatedAccountLockedAccount__block_invoke;
            v32[3] = &unk_1E3E61310;
            objc_copyWeak(&v33, &location);
            -[PKDashboardPassMessage setActionOnButtonPress:](v18, "setActionOnButtonPress:", v32);
            objc_msgSend(obj, "addObject:", v18);
            objc_destroyWeak(&v33);
            objc_destroyWeak(&location);

          }
          v14 = objc_msgSend(v30, "countByEnumeratingWithState:objects:count:", &v35, v43, 16);
        }
        while (v14);
      }

      if (objc_msgSend(obj, "count"))
      {
        v4 = (void *)objc_msgSend(obj, "copy");
LABEL_30:

        return v4;
      }
    }
    v4 = 0;
    goto LABEL_30;
  }
  v4 = 0;
  return v4;
}

void __88__PKDashboardPaymentPassDataSource__messageForPeerPaymentAssociatedAccountLockedAccount__block_invoke(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = WeakRetained;
    objc_msgSend(WeakRetained, "_peerPaymentResolutionTappedWithResolution:", 3);
    WeakRetained = v2;
  }

}

- (id)_messageForPeerPaymentAssociatedAccountPending
{
  PKPeerPaymentAccount *peerPaymentAccount;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  void *v10;
  PKDashboardPassMessage *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  _QWORD v22[5];
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  void (*v27)(uint64_t);
  id v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _BYTE v33[128];
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  dispatch_assert_queue_V2(MEMORY[0x1E0C80D38]);
  peerPaymentAccount = self->_peerPaymentAccount;
  if (peerPaymentAccount
    && -[PKPeerPaymentAccount supportsFamilySharing](peerPaymentAccount, "supportsFamilySharing")
    && -[PKPeerPaymentAccount role](self->_peerPaymentAccount, "role") != 1)
  {
    v31 = 0u;
    v32 = 0u;
    v29 = 0u;
    v30 = 0u;
    -[PKFamilyMemberCollection familyMembersByAltDSID](self->_familyCollection, "familyMembersByAltDSID");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "allValues");
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v29, v33, 16);
    if (v6)
    {
      v7 = *(_QWORD *)v30;
      while (2)
      {
        for (i = 0; i != v6; ++i)
        {
          if (*(_QWORD *)v30 != v7)
            objc_enumerationMutation(v5);
          v9 = *(void **)(*((_QWORD *)&v29 + 1) + 8 * i);
          if (objc_msgSend(v9, "isMe") && !objc_msgSend(v9, "isOrganizer"))
          {

            goto LABEL_18;
          }
        }
        v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v29, v33, 16);
        if (v6)
          continue;
        break;
      }
    }

    v23 = 0;
    v24 = &v23;
    v25 = 0x3032000000;
    v26 = __Block_byref_object_copy__41;
    v27 = __Block_byref_object_dispose__41;
    v28 = objc_alloc_init(MEMORY[0x1E0C99E20]);
    -[PKPeerPaymentAccount associatedAccountInformation](self->_peerPaymentAccount, "associatedAccountInformation");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v22[0] = MEMORY[0x1E0C809B0];
    v22[1] = 3221225472;
    v22[2] = __82__PKDashboardPaymentPassDataSource__messageForPeerPaymentAssociatedAccountPending__block_invoke;
    v22[3] = &unk_1E3E73148;
    v22[4] = &v23;
    objc_msgSend(v10, "enumerateAccountInvitationsUsingBlock:", v22);

    if (objc_msgSend((id)v24[5], "count"))
    {
      v11 = objc_alloc_init(PKDashboardPassMessage);
      if (objc_msgSend((id)v24[5], "count") == 1)
      {
        -[PKFamilyMemberCollection familyMembersByAltDSID](self->_familyCollection, "familyMembersByAltDSID");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend((id)v24[5], "anyObject");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "objectForKey:", v13);
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "firstName");
        v15 = (void *)objc_claimAutoreleasedReturnValue();

        if (objc_msgSend(v15, "length"))
          PKLocalizedPeerPaymentLexingtonString(CFSTR("PEER_PAYMENT_DASHBOARD_ASSOCIATED_ACCOUNT_PENDING_TITLE"), CFSTR("%@"), v15);
        else
          PKLocalizedPeerPaymentLexingtonString(CFSTR("PEER_PAYMENT_DASHBOARD_ASSOCIATED_ACCOUNT_PENDING_TITLE_NO_NAME"));
        v17 = (void *)objc_claimAutoreleasedReturnValue();

      }
      else
      {
        PKLocalizedPeerPaymentLexingtonString(CFSTR("PEER_PAYMENT_DASHBOARD_ASSOCIATED_ACCOUNT_PENDING_MULTIPLE_TITLE"));
        v17 = (void *)objc_claimAutoreleasedReturnValue();
      }
      -[PKDashboardPassMessage setTitle:](v11, "setTitle:", v17);
      PKLocalizedPeerPaymentLexingtonString(CFSTR("PEER_PAYMENT_DASHBOARD_ASSOCIATED_ACCOUNT_PENDING_DESCRIPTION"));
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setMessage:](v11, "setMessage:", v18);

      -[PKDashboardPassMessage setIdentifier:](v11, "setIdentifier:", CFSTR("peerPaymentAssociatedAccountPending"));
      -[PKDashboardPaymentPassDataSource _messageImageWithName:extension:](self, "_messageImageWithName:extension:", CFSTR("AppleCashIcon"), CFSTR("pdf"));
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setImage:](v11, "setImage:", v19);

      -[PKDashboardPassMessage setShowDisclosure:](v11, "setShowDisclosure:", 1);
      PKLocalizedPeerPaymentLexingtonString(CFSTR("PEER_PAYMENT_DASHBOARD_ASSOCIATED_ACCOUNT_PENDING_BUTTON"));
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setButtonTitle:](v11, "setButtonTitle:", v20);

      objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", self->_pass);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setAnalyticsReporterSubject:](v11, "setAnalyticsReporterSubject:", v21);

      -[PKDashboardPassMessage setActionOnButtonPress:](v11, "setActionOnButtonPress:", &__block_literal_global_780);
    }
    else
    {
      v11 = 0;
    }
    _Block_object_dispose(&v23, 8);

  }
  else
  {
LABEL_18:
    v11 = 0;
  }
  return v11;
}

void __82__PKDashboardPaymentPassDataSource__messageForPeerPaymentAssociatedAccountPending__block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  id v5;

  v5 = a2;
  if (objc_msgSend(v5, "status") == 1)
  {
    v3 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
    objc_msgSend(v5, "altDSID");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "addObject:", v4);

  }
}

void __82__PKDashboardPaymentPassDataSource__messageForPeerPaymentAssociatedAccountPending__block_invoke_2()
{
  void *v0;
  id v1;

  objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
  v1 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", CFSTR("https://support.apple.com/kb/HT211324"));
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "openURL:configuration:completionHandler:", v0, 0, 0);

}

- (void)_messageForPeerPaymentRewardsRedemptionWithCompletion:(id)a3
{
  id v4;
  PKAccount *v5;
  void *v6;
  uint64_t v7;
  char v8;
  void *v9;
  uint64_t v10;
  BOOL v11;
  void *v12;
  _QWORD v13[4];
  PKAccount *v14;
  id v15;
  id v16;
  char v17;
  BOOL v18;
  id location;

  v4 = a3;
  dispatch_assert_queue_V2(MEMORY[0x1E0C80D38]);
  if (v4)
  {
    v5 = self->_account;
    -[PKAccount creditDetails](v5, "creditDetails");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v6, "rewardsDestination");

    if (v5
      && -[PKAccount feature](v5, "feature") == 2
      && v7 == 1
      && ((v8 = PKSharedCacheGetBoolForKey() ^ 1,
           PKSharedCacheGetNumberForKey(),
           v9 = (void *)objc_claimAutoreleasedReturnValue(),
           v10 = objc_msgSend(v9, "integerValue"),
           v11 = v10 == 1,
           v9,
           (v8 & 1) != 0)
       || v10 == 1))
    {
      objc_initWeak(&location, self);
      objc_msgSend(MEMORY[0x1E0D67470], "sharedInstance");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v13[0] = MEMORY[0x1E0C809B0];
      v13[1] = 3221225472;
      v13[2] = __90__PKDashboardPaymentPassDataSource__messageForPeerPaymentRewardsRedemptionWithCompletion___block_invoke;
      v13[3] = &unk_1E3E731E0;
      objc_copyWeak(&v16, &location);
      v14 = v5;
      v17 = v8;
      v18 = v11;
      v15 = v4;
      objc_msgSend(v12, "accountWithCompletion:", v13);

      objc_destroyWeak(&v16);
      objc_destroyWeak(&location);
    }
    else
    {
      (*((void (**)(id, _QWORD))v4 + 2))(v4, 0);
    }

  }
}

void __90__PKDashboardPaymentPassDataSource__messageForPeerPaymentRewardsRedemptionWithCompletion___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  id *WeakRetained;
  id *v5;
  uint64_t v6;
  void *v7;
  _QWORD v8[4];
  id v9;
  id v10;
  id v11;
  __int16 v12;

  v3 = a2;
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  v5 = WeakRetained;
  if (WeakRetained)
  {
    v6 = *(_QWORD *)(a1 + 32);
    objc_msgSend(WeakRetained[94], "currentAccountUser");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8[0] = MEMORY[0x1E0C809B0];
    v8[1] = 3221225472;
    v8[2] = __90__PKDashboardPaymentPassDataSource__messageForPeerPaymentRewardsRedemptionWithCompletion___block_invoke_2;
    v8[3] = &unk_1E3E731B8;
    objc_copyWeak(&v11, (id *)(a1 + 48));
    v12 = *(_WORD *)(a1 + 56);
    v9 = v3;
    v10 = *(id *)(a1 + 40);
    +[PKCreditAccountController resolutionToReceiveCashbackForAccount:accountUser:withPeerPaymentAccount:completion:](PKCreditAccountController, "resolutionToReceiveCashbackForAccount:accountUser:withPeerPaymentAccount:completion:", v6, v7, v9, v8);

    objc_destroyWeak(&v11);
  }

}

void __90__PKDashboardPaymentPassDataSource__messageForPeerPaymentRewardsRedemptionWithCompletion___block_invoke_2(uint64_t a1, void *a2, uint64_t a3, int a4, uint64_t a5)
{
  id *v9;
  id *WeakRetained;
  id *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  const __CFString *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  PKPeerPaymentAccountResolutionController *v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  PKDashboardPassMessage *v32;
  void *v33;
  void *v34;
  uint64_t v35;
  const __CFString *v36;
  unsigned int v37;
  char v38;
  void *v39;
  char v40;
  _QWORD v41[4];
  id v42;
  char v43;
  _QWORD v44[4];
  id v45;
  id v46[2];
  char v47;
  char v48;

  v9 = (id *)(a1 + 48);
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  v11 = WeakRetained;
  if (!WeakRetained)
    goto LABEL_44;
  switch((unint64_t)a2)
  {
    case 0uLL:
    case 5uLL:
      v12 = 0;
      if (!*(_BYTE *)(a1 + 57))
      {
        v13 = 0;
        goto LABEL_35;
      }
      v13 = 0;
      if (a4)
      {
        PKLocalizedFeatureString();
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        PKLocalizedFeatureString();
        v14 = objc_claimAutoreleasedReturnValue();
        PKLocalizedFeatureString();
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        v15 = 1;
        v40 = 1;
        v16 = 1;
        v17 = CFSTR("rewardsRedepmtionDailyCashDiscovery");
        if (v14)
          goto LABEL_38;
      }
      goto LABEL_35;
    case 1uLL:
      if (!a5)
      {
        if (a4 && *(_BYTE *)(a1 + 57))
        {
          v40 = 1;
          goto LABEL_31;
        }
        goto LABEL_32;
      }
      if (a5 == 1)
      {
        if (a4 && *(_BYTE *)(a1 + 57))
        {
          v40 = 1;
LABEL_31:
          PKLocalizedFeatureString();
          v14 = objc_claimAutoreleasedReturnValue();
          goto LABEL_34;
        }
LABEL_32:
        v40 = 0;
        goto LABEL_33;
      }
      if (a5 != 2)
        goto LABEL_32;
      v40 = 0;
      if (*(_BYTE *)(a1 + 56))
        goto LABEL_31;
LABEL_33:
      v14 = 0;
LABEL_34:
      PKLocalizedFeatureString();
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      PKLocalizedPeerPaymentString(CFSTR("PEER_PAYMENT_SETUP_APPLE_CASH_BUTTON"));
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = 0;
      v16 = 1;
      v17 = CFSTR("rewardsRedepmtionSetUpDailyCash");
      if (v14)
      {
LABEL_38:
        v38 = v15;
        v39 = (void *)v14;
        if (!v11[25])
        {
          objc_msgSend(MEMORY[0x1E0D67480], "sharedService");
          v20 = objc_claimAutoreleasedReturnValue();
          v21 = v11[108];
          v11[108] = (id)v20;

          v22 = [PKPeerPaymentAccountResolutionController alloc];
          v37 = v16;
          v23 = *(_QWORD *)(a1 + 32);
          v24 = v11[108];
          v36 = v17;
          v25 = objc_alloc_init(MEMORY[0x1E0D66F18]);
          v26 = -[PKPeerPaymentAccountResolutionController initWithAccount:webService:context:delegate:passLibraryDataProvider:](v22, "initWithAccount:webService:context:delegate:passLibraryDataProvider:", v23, v24, 0, 0, v25);
          v27 = v11[25];
          v11[25] = (id)v26;

          objc_msgSend(v11[25], "setDelegate:", v11);
          objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
          v28 = (void *)objc_claimAutoreleasedReturnValue();
          v29 = *MEMORY[0x1E0D6B2B8];
          objc_msgSend(v11[108], "targetDevice");
          v30 = (void *)objc_claimAutoreleasedReturnValue();
          v14 = (uint64_t)v39;
          v31 = v29;
          v17 = v36;
          objc_msgSend(v28, "addObserver:selector:name:object:", v11, sel__peerPaymentAccountChanged_, v31, v30);

          v16 = v37;
        }
        v32 = objc_alloc_init(PKDashboardPassMessage);
        -[PKDashboardPassMessage setTitle:](v32, "setTitle:", v13);
        -[PKDashboardPassMessage setMessage:](v32, "setMessage:", v14);
        -[PKDashboardPassMessage setIdentifier:](v32, "setIdentifier:", v17);
        -[PKDashboardPassMessage setReportToAnalytics:](v32, "setReportToAnalytics:", v16);
        objc_msgSend(v11, "_messageImageWithName:extension:", CFSTR("CashBackIcon"), CFSTR("pdf"));
        v33 = (void *)objc_claimAutoreleasedReturnValue();
        -[PKDashboardPassMessage setImage:](v32, "setImage:", v33);

        -[PKDashboardPassMessage setShowDisclosure:](v32, "setShowDisclosure:", 1);
        objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", v11[109]);
        v34 = (void *)objc_claimAutoreleasedReturnValue();
        -[PKDashboardPassMessage setAnalyticsReporterSubject:](v32, "setAnalyticsReporterSubject:", v34);

        v35 = MEMORY[0x1E0C809B0];
        if (v12)
        {
          -[PKDashboardPassMessage setButtonTitle:](v32, "setButtonTitle:", v12);
          v44[0] = v35;
          v44[1] = 3221225472;
          v44[2] = __90__PKDashboardPaymentPassDataSource__messageForPeerPaymentRewardsRedemptionWithCompletion___block_invoke_3;
          v44[3] = &unk_1E3E73190;
          objc_copyWeak(v46, v9);
          v47 = v40;
          v48 = v38;
          v45 = *(id *)(a1 + 32);
          v46[1] = a2;
          -[PKDashboardPassMessage setActionOnButtonPress:](v32, "setActionOnButtonPress:", v44);

          objc_destroyWeak(v46);
        }
        v41[0] = v35;
        v41[1] = 3221225472;
        v41[2] = __90__PKDashboardPaymentPassDataSource__messageForPeerPaymentRewardsRedemptionWithCompletion___block_invoke_4;
        v41[3] = &unk_1E3E61C08;
        objc_copyWeak(&v42, v9);
        v43 = v40;
        -[PKDashboardPassMessage setActionOnDismiss:](v32, "setActionOnDismiss:", v41);
        (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
        objc_destroyWeak(&v42);

      }
      else
      {
LABEL_35:
        (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
      }

LABEL_44:
      return;
    case 2uLL:
      if (!*(_BYTE *)(a1 + 56))
        goto LABEL_22;
      PKLocalizedFeatureString();
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      PKLocalizedFeatureString();
      v14 = objc_claimAutoreleasedReturnValue();
      PKLocalizedPeerPaymentString(CFSTR("PEER_PAYMENT_ACCOUNT_STATE_FOOTER_IDENTITY_VERIFICATION_BUTTON"));
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v40 = 0;
      v15 = 0;
      v16 = 1;
      v17 = CFSTR("rewardsRedemptionIDVerification");
      if (!v14)
        goto LABEL_35;
      goto LABEL_38;
    case 3uLL:
      if (!*(_BYTE *)(a1 + 56))
        goto LABEL_22;
      PKLocalizedFeatureString();
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      PKLocalizedFeatureString();
      v14 = objc_claimAutoreleasedReturnValue();
      PKLocalizedFeatureString();
      v18 = objc_claimAutoreleasedReturnValue();
      goto LABEL_21;
    case 4uLL:
      if (!*(_BYTE *)(a1 + 56))
        goto LABEL_22;
      v19 = objc_msgSend(WeakRetained[23], "role");
      if (v19 == 1)
      {
        PKLocalizedPeerPaymentLexingtonString(CFSTR("PEER_PAYMENT_DASHBAORD_ASSOCIATED_ACCOUNT_CLOSED_ALERT_TITLE"));
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        PKLocalizedPeerPaymentLexingtonString(CFSTR("PEER_PAYMENT_DASHBAORD_ASSOCIATED_ACCOUNT_CLOSED_ALERT_MESSAGE"));
        v14 = objc_claimAutoreleasedReturnValue();
        v40 = 0;
        v15 = 0;
        v12 = 0;
      }
      else
      {
        if (v19)
        {
LABEL_22:
          v12 = 0;
          v13 = 0;
          goto LABEL_35;
        }
        PKLocalizedFeatureString();
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        PKLocalizedFeatureString();
        v14 = objc_claimAutoreleasedReturnValue();
        PKLocalizedPeerPaymentString(CFSTR("PEER_PAYMENT_ACCOUNT_STATE_FOOTER_REOPEN_CARD_BUTTON"));
        v18 = objc_claimAutoreleasedReturnValue();
LABEL_21:
        v12 = (void *)v18;
        v40 = 0;
        v15 = 0;
      }
      v16 = 0;
      v17 = CFSTR("fixRewards");
      if (v14)
        goto LABEL_38;
      goto LABEL_35;
    default:
      goto LABEL_22;
  }
}

void __90__PKDashboardPaymentPassDataSource__messageForPeerPaymentRewardsRedemptionWithCompletion___block_invoke_3(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  id v4;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v4 = WeakRetained;
    if (*(_BYTE *)(a1 + 56))
      PKSharedCacheSetObjectForKey();
    else
      PKSharedCacheSetBoolForKey();
    if (*(_BYTE *)(a1 + 57))
    {
      objc_msgSend(*(id *)(a1 + 32), "associatedPassUniqueID");
      v3 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "_presentPassWithPassUniqueIdentifier:", v3);

    }
    else
    {
      objc_msgSend(v4, "_peerPaymentResolutionTappedWithResolution:", *(_QWORD *)(a1 + 48));
    }
    WeakRetained = v4;
  }

}

void __90__PKDashboardPaymentPassDataSource__messageForPeerPaymentRewardsRedemptionWithCompletion___block_invoke_4(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    if (*(_BYTE *)(a1 + 40))
      PKSharedCacheSetObjectForKey();
    else
      PKSharedCacheSetBoolForKey();
    objc_msgSend(v3, "reloadMessages");
    WeakRetained = v3;
  }

}

- (void)_messageForPaymentFailedWithCompletion:(id)a3
{
  id v4;
  PKAccount *v5;
  PKAccount *v6;
  PKAccountService *accountService;
  void *v8;
  _QWORD v9[4];
  PKAccount *v10;
  id v11;
  id v12;
  id location;

  v4 = a3;
  dispatch_assert_queue_V2(MEMORY[0x1E0C80D38]);
  if (v4)
  {
    v5 = self->_account;
    v6 = v5;
    if (v5 && -[PKAccount feature](v5, "feature") == 2 && PKSharedCacheGetBoolForKey())
    {
      objc_initWeak(&location, self);
      accountService = self->_accountService;
      -[PKAccount accountIdentifier](v6, "accountIdentifier");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9[0] = MEMORY[0x1E0C809B0];
      v9[1] = 3221225472;
      v9[2] = __75__PKDashboardPaymentPassDataSource__messageForPaymentFailedWithCompletion___block_invoke;
      v9[3] = &unk_1E3E73208;
      objc_copyWeak(&v12, &location);
      v10 = v6;
      v11 = v4;
      -[PKAccountService eventsForAccountIdentifier:types:startDate:endDate:orderedByDate:limit:completion:](accountService, "eventsForAccountIdentifier:types:startDate:endDate:orderedByDate:limit:completion:", v8, &unk_1E3FAE8F0, 0, 0, 1, 1, v9);

      objc_destroyWeak(&v12);
      objc_destroyWeak(&location);
    }
    else
    {
      (*((void (**)(id, _QWORD))v4 + 2))(v4, 0);
    }

  }
}

void __75__PKDashboardPaymentPassDataSource__messageForPaymentFailedWithCompletion___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  _QWORD *WeakRetained;
  void *v8;
  void *v9;
  void *v10;
  PKDashboardPassMessage *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  const __CFString *v21;
  void *v22;
  void *v23;
  void *v24;
  _QWORD v25[4];
  id v26;
  _QWORD v27[4];
  id v28;
  _QWORD v29[4];
  id v30;
  id v31;

  v5 = a2;
  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    objc_msgSend(v5, "firstObject");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "items");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "anyObject");
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    if (v10 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0) && objc_msgSend(v10, "state") == 4)
    {
      objc_msgSend(*(id *)(a1 + 32), "feature");
      v11 = objc_alloc_init(PKDashboardPassMessage);
      -[PKDashboardPassMessage setIdentifier:](v11, "setIdentifier:", CFSTR("paymentFailed"));
      objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", WeakRetained[109]);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setAnalyticsReporterSubject:](v11, "setAnalyticsReporterSubject:", v12);

      PKLocalizedFeatureString();
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setTitle:](v11, "setTitle:", v13);

      v14 = objc_msgSend(v10, "statusCode");
      v15 = MEMORY[0x1E0C809B0];
      if (v14 == 1)
      {
        objc_msgSend(v10, "currencyAmount");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        v24 = v16;
        if (v16)
        {
          objc_msgSend(v16, "minimalFormattedStringValue");
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          PKLocalizedFeatureString();
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          -[PKDashboardPassMessage setMessage:](v11, "setMessage:", v18, v17, v24);

          v15 = MEMORY[0x1E0C809B0];
        }
        else
        {
          PKLocalizedFeatureString();
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          -[PKDashboardPassMessage setMessage:](v11, "setMessage:", v17);
        }

        PKLocalizedFeatureString();
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        -[PKDashboardPassMessage setButtonTitle:](v11, "setButtonTitle:", v22);

        v29[0] = v15;
        v29[1] = 3221225472;
        v29[2] = __75__PKDashboardPaymentPassDataSource__messageForPaymentFailedWithCompletion___block_invoke_2;
        v29[3] = &unk_1E3E61B68;
        objc_copyWeak(&v31, (id *)(a1 + 48));
        v30 = *(id *)(a1 + 32);
        -[PKDashboardPassMessage setActionOnButtonPress:](v11, "setActionOnButtonPress:", v29);

        objc_destroyWeak(&v31);
        v21 = CFSTR("MessageAlert");
      }
      else
      {
        PKLocalizedFeatureString();
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        -[PKDashboardPassMessage setMessage:](v11, "setMessage:", v19);

        v15 = MEMORY[0x1E0C809B0];
        PKLocalizedFeatureString();
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        -[PKDashboardPassMessage setButtonTitle:](v11, "setButtonTitle:", v20);

        v27[0] = v15;
        v27[1] = 3221225472;
        v27[2] = __75__PKDashboardPaymentPassDataSource__messageForPaymentFailedWithCompletion___block_invoke_4;
        v27[3] = &unk_1E3E61310;
        objc_copyWeak(&v28, (id *)(a1 + 48));
        -[PKDashboardPassMessage setActionOnButtonPress:](v11, "setActionOnButtonPress:", v27);
        objc_destroyWeak(&v28);
        v21 = CFSTR("Bank");
      }
      objc_msgSend(WeakRetained, "_messageImageWithName:extension:", v21, CFSTR("pdf"));
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setImage:](v11, "setImage:", v23);

      v25[0] = v15;
      v25[1] = 3221225472;
      v25[2] = __75__PKDashboardPaymentPassDataSource__messageForPaymentFailedWithCompletion___block_invoke_5;
      v25[3] = &unk_1E3E61310;
      objc_copyWeak(&v26, (id *)(a1 + 48));
      -[PKDashboardPassMessage setActionOnDismiss:](v11, "setActionOnDismiss:", v25);
      (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
      objc_destroyWeak(&v26);

    }
    else
    {
      (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
    }

  }
}

void __75__PKDashboardPaymentPassDataSource__messageForPaymentFailedWithCompletion___block_invoke_2(uint64_t a1)
{
  _QWORD *WeakRetained;
  id v3;
  void *v4;
  PKAccountServiceAccountResolutionController *v5;
  void *v6;
  _QWORD v7[5];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    v4 = (void *)WeakRetained[64];
    if (!v4)
    {
      v5 = -[PKAccountServiceAccountResolutionController initWithAccount:accountUserCollection:transactionSourceCollection:]([PKAccountServiceAccountResolutionController alloc], "initWithAccount:accountUserCollection:transactionSourceCollection:", *(_QWORD *)(a1 + 32), *((_QWORD *)v3 + 94), *((_QWORD *)v3 + 6));
      v6 = (void *)*((_QWORD *)v3 + 64);
      *((_QWORD *)v3 + 64) = v5;

      objc_msgSend(*((id *)v3 + 64), "setDelegate:", v3);
      v4 = (void *)*((_QWORD *)v3 + 64);
    }
    v7[0] = MEMORY[0x1E0C809B0];
    v7[1] = 3221225472;
    v7[2] = __75__PKDashboardPaymentPassDataSource__messageForPaymentFailedWithCompletion___block_invoke_3;
    v7[3] = &unk_1E3E62288;
    v7[4] = v3;
    objc_msgSend(v4, "presentFlowForAccountResolution:configuration:completion:", 1, 0, v7);
  }

}

uint64_t __75__PKDashboardPaymentPassDataSource__messageForPaymentFailedWithCompletion___block_invoke_3(uint64_t a1)
{
  PKSharedCacheSetBoolForKey();
  return objc_msgSend(*(id *)(a1 + 32), "reloadMessages");
}

void __75__PKDashboardPaymentPassDataSource__messageForPaymentFailedWithCompletion___block_invoke_4(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = WeakRetained;
    objc_msgSend(WeakRetained, "_presentPassDetailsWithAction:", 2);
    PKSharedCacheSetBoolForKey();
    objc_msgSend(v2, "reloadMessages");
    WeakRetained = v2;
  }

}

void __75__PKDashboardPaymentPassDataSource__messageForPaymentFailedWithCompletion___block_invoke_5(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    PKSharedCacheSetBoolForKey();
    objc_msgSend(WeakRetained, "reloadMessages");
  }

}

- (void)_messageForInterestChargeWithCompletion:(id)a3
{
  id v4;
  PKAccount *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  id v18;
  id v19;
  PKAccount *v20;
  void *v21;
  id v22;
  _QWORD v23[4];
  PKAccount *v24;
  id v25;
  _QWORD *v26;
  _QWORD *v27;
  id v28;
  _QWORD v29[4];
  PKAccount *v30;
  _QWORD *v31;
  _QWORD *v32;
  id v33;
  _QWORD v34[4];
  id v35;
  id v36;
  _QWORD *v37;
  id v38;
  id location;
  _QWORD v40[5];
  id v41;
  _QWORD v42[5];
  id v43;

  v4 = a3;
  dispatch_assert_queue_V2(MEMORY[0x1E0C80D38]);
  if (v4)
  {
    v5 = self->_account;
    v6 = -[PKAccount feature](v5, "feature");
    PKSharedCacheGetDateForKey();
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if (v5
      && v6 == 2
      && (-[PKAccount hideInterestChargeClarity](v5, "hideInterestChargeClarity") & 1) == 0
      && (objc_msgSend(MEMORY[0x1E0C99D68], "now"),
          v8 = (void *)objc_claimAutoreleasedReturnValue(),
          v9 = objc_msgSend(v7, "compare:", v8),
          v8,
          v9 != 1))
    {
      -[PKAccount creditDetails](v5, "creditDetails");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "accountSummary");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "balanceSummary");
      v12 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v12, "openingDate");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "dateByAddingTimeInterval:", -60.0);
      v14 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v12, "closingDate");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v42[0] = 0;
      v42[1] = v42;
      v42[2] = 0x3032000000;
      v42[3] = __Block_byref_object_copy__41;
      v42[4] = __Block_byref_object_dispose__41;
      v43 = 0;
      v40[0] = 0;
      v40[1] = v40;
      v40[2] = 0x3032000000;
      v40[3] = __Block_byref_object_copy__41;
      v40[4] = __Block_byref_object_dispose__41;
      v41 = 0;
      v16 = objc_alloc_init(MEMORY[0x1E0D66B90]);
      objc_initWeak(&location, self);
      v17 = MEMORY[0x1E0C809B0];
      v34[0] = MEMORY[0x1E0C809B0];
      v34[1] = 3221225472;
      v34[2] = __76__PKDashboardPaymentPassDataSource__messageForInterestChargeWithCompletion___block_invoke;
      v34[3] = &unk_1E3E68DE0;
      objc_copyWeak(&v38, &location);
      v18 = v14;
      v35 = v18;
      v19 = v15;
      v36 = v19;
      v37 = v42;
      objc_msgSend(v16, "addOperation:", v34);
      v29[0] = v17;
      v29[1] = 3221225472;
      v29[2] = __76__PKDashboardPaymentPassDataSource__messageForInterestChargeWithCompletion___block_invoke_2;
      v29[3] = &unk_1E3E70270;
      objc_copyWeak(&v33, &location);
      v31 = v42;
      v20 = v5;
      v30 = v20;
      v32 = v40;
      objc_msgSend(v16, "addOperation:", v29);
      objc_msgSend(MEMORY[0x1E0C99E38], "null");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      v23[0] = v17;
      v23[1] = 3221225472;
      v23[2] = __76__PKDashboardPaymentPassDataSource__messageForInterestChargeWithCompletion___block_invoke_6;
      v23[3] = &unk_1E3E732B8;
      objc_copyWeak(&v28, &location);
      v26 = v42;
      v25 = v4;
      v24 = v20;
      v27 = v40;
      v22 = (id)objc_msgSend(v16, "evaluateWithInput:completion:", v21, v23);

      objc_destroyWeak(&v28);
      objc_destroyWeak(&v33);

      objc_destroyWeak(&v38);
      objc_destroyWeak(&location);

      _Block_object_dispose(v40, 8);
      _Block_object_dispose(v42, 8);

    }
    else
    {
      (*((void (**)(id, _QWORD))v4 + 2))(v4, 0);
    }

  }
}

void __76__PKDashboardPaymentPassDataSource__messageForInterestChargeWithCompletion___block_invoke(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  id *WeakRetained;
  id v9;
  void *v10;
  id v11;
  _QWORD v12[4];
  id v13;
  id v14;
  uint64_t v15;

  v6 = a3;
  v7 = a4;
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    v9 = objc_alloc_init(MEMORY[0x1E0D673A0]);
    objc_msgSend(WeakRetained[6], "transactionSourceIdentifiers");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "setTransactionSourceIdentifiers:", v10);

    objc_msgSend(v9, "setTransactionTypes:", &unk_1E3FAE908);
    objc_msgSend(v9, "setDateOrder:", 1);
    objc_msgSend(v9, "setStartDate:", *(_QWORD *)(a1 + 32));
    objc_msgSend(v9, "setEndDate:", *(_QWORD *)(a1 + 40));
    objc_msgSend(v9, "setLimit:", 1);
    v11 = objc_alloc_init(MEMORY[0x1E0D672B0]);
    v12[0] = MEMORY[0x1E0C809B0];
    v12[1] = 3221225472;
    v12[2] = __76__PKDashboardPaymentPassDataSource__messageForInterestChargeWithCompletion___block_invoke_826;
    v12[3] = &unk_1E3E63688;
    v15 = *(_QWORD *)(a1 + 48);
    v14 = v7;
    v13 = v6;
    objc_msgSend(v11, "transactionsForRequest:completion:", v9, v12);

  }
}

uint64_t __76__PKDashboardPaymentPassDataSource__messageForInterestChargeWithCompletion___block_invoke_826(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;

  objc_msgSend(a2, "firstObject");
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

void __76__PKDashboardPaymentPassDataSource__messageForInterestChargeWithCompletion___block_invoke_2(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  _QWORD *WeakRetained;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  _QWORD v14[4];
  id v15;
  id v16;
  uint64_t v17;

  v6 = a3;
  v7 = a4;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "associatedStatementIdentifiers");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = v9;
  if (WeakRetained && objc_msgSend(v9, "count"))
  {
    v11 = (void *)WeakRetained[114];
    objc_msgSend(MEMORY[0x1E0C99E60], "setWithArray:", v10);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "accountIdentifier");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14[0] = MEMORY[0x1E0C809B0];
    v14[1] = 3221225472;
    v14[2] = __76__PKDashboardPaymentPassDataSource__messageForInterestChargeWithCompletion___block_invoke_3;
    v14[3] = &unk_1E3E6FBC0;
    v17 = *(_QWORD *)(a1 + 48);
    v16 = v7;
    v15 = v6;
    objc_msgSend(v11, "creditStatementsForStatementIdentifiers:accountIdentifier:completion:", v12, v13, v14);

  }
  else
  {
    (*((void (**)(id, id, _QWORD))v7 + 2))(v7, v6, 0);
  }

}

void __76__PKDashboardPaymentPassDataSource__messageForInterestChargeWithCompletion___block_invoke_3(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  id v8;

  objc_msgSend(a2, "allObjects");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "pk_objectsPassingTest:", &__block_literal_global_829);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v4, "sortedArrayUsingComparator:", &__block_literal_global_831);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v7 = *(void **)(v6 + 40);
  *(_QWORD *)(v6 + 40) = v5;
  v8 = v5;

  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
}

BOOL __76__PKDashboardPaymentPassDataSource__messageForInterestChargeWithCompletion___block_invoke_4(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  void *v4;
  _BOOL8 v5;

  v2 = a2;
  objc_msgSend(v2, "openingDate");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    objc_msgSend(v2, "closingDate");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = v4 != 0;

  }
  else
  {
    v5 = 0;
  }

  return v5;
}

BOOL __76__PKDashboardPaymentPassDataSource__messageForInterestChargeWithCompletion___block_invoke_5(uint64_t a1, void *a2, void *a3)
{
  id v4;
  void *v5;
  void *v6;
  _BOOL8 v7;

  v4 = a3;
  objc_msgSend(a2, "openingDate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "openingDate");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = objc_msgSend(v5, "compare:", v6) == 1;
  return v7;
}

void __76__PKDashboardPaymentPassDataSource__messageForInterestChargeWithCompletion___block_invoke_6(uint64_t a1)
{
  id v2;
  id v3;
  uint64_t v4;
  __int128 v5;
  _QWORD block[4];
  id v7;
  __int128 v8;
  uint64_t v9;
  id v10;

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __76__PKDashboardPaymentPassDataSource__messageForInterestChargeWithCompletion___block_invoke_7;
  block[3] = &unk_1E3E73290;
  objc_copyWeak(&v10, (id *)(a1 + 64));
  v5 = *(_OWORD *)(a1 + 40);
  v2 = (id)v5;
  v8 = v5;
  v3 = *(id *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 56);
  v7 = v3;
  v9 = v4;
  dispatch_async(MEMORY[0x1E0C80D38], block);

  objc_destroyWeak(&v10);
}

void __76__PKDashboardPaymentPassDataSource__messageForInterestChargeWithCompletion___block_invoke_7(uint64_t a1)
{
  id *v2;
  id *WeakRetained;
  PKDashboardPassMessage *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  int IsBetweenDates;
  char v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  char v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  id v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  _QWORD v56[4];
  id v57;
  id v58;
  uint64_t v59;
  id v60;
  _QWORD aBlock[4];
  id v62;
  id v63[2];

  v2 = (id *)(a1 + 64);
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 64));
  if (WeakRetained && *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40))
  {
    v4 = objc_alloc_init(PKDashboardPassMessage);
    -[PKDashboardPassMessage setIdentifier:](v4, "setIdentifier:", CFSTR("interestCharged"));
    PKDynamicLocalizedAppleCardString(CFSTR("ACCOUNT_SERVICE_ACCOUNT_INTEREST_CHARGED_MESSAGE_TITLE"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setTitle:](v4, "setTitle:", v5);

    objc_msgSend(WeakRetained, "_messageImageWithName:extension:", CFSTR("InterestIcon"), CFSTR("pdf"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setImage:](v4, "setImage:", v6);

    PKDynamicLocalizedAppleCardString(CFSTR("ACCOUNT_SERVICE_ACCOUNT_INTEREST_CHARGED_VIEW_BUTTON"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setButtonTitle:](v4, "setButtonTitle:", v7);

    -[PKDashboardPassMessage setShowDisclosure:](v4, "setShowDisclosure:", 1);
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "currencyAmount");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "formattedStringValue");
    v9 = objc_claimAutoreleasedReturnValue();

    v55 = (void *)v9;
    PKDynamicLocalizedAppleCardString(CFSTR("ACCOUNT_SERVICE_ACCOUNT_INTEREST_CHARGED_MESSAGE_GENERIC"), CFSTR("%1$@"), v9);
    v54 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "creditDetails");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "productTimeZone");
    v11 = objc_claimAutoreleasedReturnValue();

    v12 = objc_alloc(MEMORY[0x1E0C99D48]);
    v13 = (void *)objc_msgSend(v12, "initWithCalendarIdentifier:", *MEMORY[0x1E0C996C8]);
    v53 = (void *)v11;
    objc_msgSend(v13, "setTimeZone:", v11);
    v14 = objc_alloc_init(MEMORY[0x1E0C99D78]);
    objc_msgSend(v14, "setMonth:", 2);
    objc_msgSend(*(id *)(a1 + 32), "creditDetails");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "mergeDate");
    v16 = objc_claimAutoreleasedReturnValue();

    objc_msgSend(v13, "dateByAddingComponents:toDate:options:", v14, v16, 0);
    v17 = objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "transactionDate");
    v49 = (void *)objc_claimAutoreleasedReturnValue();
    v50 = (void *)v17;
    v51 = (void *)v16;
    IsBetweenDates = PKDateIsBetweenDates();
    v19 = objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "interestReassessment");
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "associatedStatementIdentifiers");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v21 = objc_msgSend(v20, "count");

    v52 = v14;
    if ((v19 & 1) == 0 && IsBetweenDates)
    {
      PKDynamicLocalizedAppleCardString(CFSTR("ACCOUNT_SERVICE_ACCOUNT_INTEREST_CHARGED_MESSAGE_CO_OWNERS_MERGED_RECENTLY"), CFSTR("%1$@"), v55);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      v23 = v53;
      v24 = v54;
LABEL_20:
      v37 = v13;

      goto LABEL_21;
    }
    if (v21 < 1)
      v25 = 1;
    else
      v25 = v19;
    if ((v25 & 1) != 0 || objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "count") != v21)
    {
      v37 = v13;
      v23 = v53;
      v22 = v54;
LABEL_21:
      -[PKDashboardPassMessage setMessage:](v4, "setMessage:", v22);
      v41 = MEMORY[0x1E0C809B0];
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 3221225472;
      aBlock[2] = __76__PKDashboardPaymentPassDataSource__messageForInterestChargeWithCompletion___block_invoke_8;
      aBlock[3] = &unk_1E3E61B68;
      objc_copyWeak(v63, v2);
      v42 = v23;
      v62 = v42;
      v43 = _Block_copy(aBlock);
      -[PKDashboardPassMessage setActionOnDismiss:](v4, "setActionOnDismiss:", v43);
      v56[0] = v41;
      v56[1] = 3221225472;
      v56[2] = __76__PKDashboardPaymentPassDataSource__messageForInterestChargeWithCompletion___block_invoke_9;
      v56[3] = &unk_1E3E69878;
      objc_copyWeak(&v60, v2);
      v59 = *(_QWORD *)(a1 + 48);
      v57 = *(id *)(a1 + 32);
      v44 = v43;
      v58 = v44;
      -[PKDashboardPassMessage setActionOnButtonPress:](v4, "setActionOnButtonPress:", v56);
      (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();

      objc_destroyWeak(&v60);
      objc_destroyWeak(v63);

      goto LABEL_22;
    }
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "objectAtIndexedSubscript:", 0);
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v26, "openingDate");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    v47 = v26;
    objc_msgSend(v26, "closingDate");
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    PKDatesMidpoint();
    v29 = objc_claimAutoreleasedReturnValue();

    v48 = (void *)v29;
    objc_msgSend(WeakRetained[42], "stringFromDate:", v29);
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    if (v21 == 1)
    {
      v38 = WeakRetained[43];
      v24 = v47;
      objc_msgSend(v47, "paymentDueDate");
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v38, "stringFromDate:", v39);
      v40 = objc_claimAutoreleasedReturnValue();

      v36 = (void *)v40;
      v46 = v30;
      PKDynamicLocalizedAppleCardString(CFSTR("ACCOUNT_SERVICE_ACCOUNT_INTEREST_CHARGED_MESSAGE_ONE_STATEMENT"), CFSTR("%1$@%2$@%3$@"), v55, v30, v40);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      v34 = v54;
    }
    else
    {
      if (v21 != 2)
      {
        v23 = v53;
        v22 = v54;
        v24 = v47;
        goto LABEL_19;
      }
      objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), "objectAtIndexedSubscript:", 1);
      v45 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v45, "openingDate");
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v45, "closingDate");
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      PKDatesMidpoint();
      v33 = v30;
      v34 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(WeakRetained[42], "stringFromDate:", v34);
      v35 = (void *)objc_claimAutoreleasedReturnValue();
      v46 = v33;
      PKDynamicLocalizedAppleCardString(CFSTR("ACCOUNT_SERVICE_ACCOUNT_INTEREST_CHARGED_MESSAGE_TWO_STATEMENTS"), CFSTR("%1$@%2$@%3$@"), v55, v33, v35);
      v22 = (void *)objc_claimAutoreleasedReturnValue();

      v36 = v45;
      v24 = v47;
    }

    v23 = v53;
    v30 = v46;
LABEL_19:

    goto LABEL_20;
  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
LABEL_22:

}

void __76__PKDashboardPaymentPassDataSource__messageForInterestChargeWithCompletion___block_invoke_8(uint64_t a1)
{
  void *v1;
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    objc_msgSend(MEMORY[0x1E0C99D68], "now");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    PKEndOfNextMonthAndTimeZone();
    v2 = (void *)objc_claimAutoreleasedReturnValue();

    PKSharedCacheSetObjectForKey();
    objc_msgSend(WeakRetained, "reloadMessages");

  }
}

void __76__PKDashboardPaymentPassDataSource__messageForInterestChargeWithCompletion___block_invoke_9(uint64_t a1)
{
  PKPaymentTransactionDetailViewController *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    LOBYTE(v5) = 1;
    v2 = -[PKPaymentTransactionDetailViewController initWithTransaction:transactionSourceCollection:familyCollection:account:accountUserCollection:bankConnectInstitution:physicalCards:contactResolver:peerPaymentWebService:paymentServiceDataProvider:detailViewStyle:allowTransactionLinks:]([PKPaymentTransactionDetailViewController alloc], "initWithTransaction:transactionSourceCollection:familyCollection:account:accountUserCollection:bankConnectInstitution:physicalCards:contactResolver:peerPaymentWebService:paymentServiceDataProvider:detailViewStyle:allowTransactionLinks:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), *((_QWORD *)WeakRetained + 6), *((_QWORD *)WeakRetained + 97), *(_QWORD *)(a1 + 32), *((_QWORD *)WeakRetained + 94), 0, *((_QWORD *)WeakRetained + 96), 0, *((_QWORD *)WeakRetained + 108), *((_QWORD *)WeakRetained + 31), 0, v5);
    objc_msgSend(*((id *)WeakRetained + 1), "pkui_viewControllerFromResponderChain");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "navigationController");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "pushViewController:animated:", v2, 1);

    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  }

}

- (void)_messageForEnableNotificationsWithCompletion:(id)a3
{
  void (**v4)(id, _QWORD);
  PKAccount *account;
  void *v6;
  void *v7;
  void (**v8)(id, _QWORD);
  _QWORD v9[5];
  id v10;
  id v11[2];
  id location;

  v4 = (void (**)(id, _QWORD))a3;
  dispatch_assert_queue_V2(MEMORY[0x1E0C80D38]);
  if (v4)
  {
    if (PKSharedCacheGetBoolForKey()
      || (account = self->_account) != 0
      && -[PKAccount feature](account, "feature") == 3
      && -[PKAccount state](self->_account, "state") == 3)
    {
      v4[2](v4, 0);
    }
    else
    {
      objc_initWeak(&location, self);
      v6 = (void *)-[PKAccount feature](self->_account, "feature");
      objc_msgSend(MEMORY[0x1E0D67768], "sharedInstance");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v9[0] = MEMORY[0x1E0C809B0];
      v9[1] = 3221225472;
      v9[2] = __81__PKDashboardPaymentPassDataSource__messageForEnableNotificationsWithCompletion___block_invoke;
      v9[3] = &unk_1E3E73328;
      objc_copyWeak(v11, &location);
      v8 = v4;
      v11[1] = v6;
      v9[4] = self;
      v10 = v8;
      objc_msgSend(v7, "authorizationStatusWithCompletion:", v9);

      objc_destroyWeak(v11);
      objc_destroyWeak(&location);
    }
  }

}

void __81__PKDashboardPaymentPassDataSource__messageForEnableNotificationsWithCompletion___block_invoke(uint64_t a1, void *a2, char a3)
{
  id v6;
  void *v7;
  _QWORD v8[5];
  id v9;
  id v10[3];
  char v11;

  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = __81__PKDashboardPaymentPassDataSource__messageForEnableNotificationsWithCompletion___block_invoke_2;
  v8[3] = &unk_1E3E73300;
  objc_copyWeak(v10, (id *)(a1 + 48));
  v6 = *(id *)(a1 + 40);
  v11 = a3;
  v7 = *(void **)(a1 + 56);
  v10[1] = a2;
  v10[2] = v7;
  v8[4] = *(_QWORD *)(a1 + 32);
  v9 = v6;
  dispatch_async(MEMORY[0x1E0C80D38], v8);

  objc_destroyWeak(v10);
}

void __81__PKDashboardPaymentPassDataSource__messageForEnableNotificationsWithCompletion___block_invoke_2(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id *WeakRetained;
  PKDashboardPassMessage *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  const __CFString *v15;
  void *v16;
  _QWORD v17[4];
  id v18;
  id location;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    if (*(_BYTE *)(a1 + 72) && *(_QWORD *)(a1 + 56) == 1)
    {
      v5 = objc_alloc_init(PKDashboardPassMessage);
      -[PKDashboardPassMessage setIdentifier:](v5, "setIdentifier:", CFSTR("enableNotifications"));
      -[PKDashboardPassMessage setReportToAnalytics:](v5, "setReportToAnalytics:", 1);
      objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", WeakRetained[109]);
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setAnalyticsReporterSubject:](v5, "setAnalyticsReporterSubject:", v6);

      PKLocalizedString(CFSTR("NOTIFICATIONS_DASHBOARD_TITLE"));
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      PKLocalizedString(CFSTR("NOTIFICATIONS_DASHBOARD_MESSAGE"));
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      PKLocalizedString(CFSTR("NOTIFICATIONS_DASHBOARD_CONTINUE"));
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      PKLocalizedFeatureStringWithDefaultValue();
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      PKLocalizedFeatureStringWithDefaultValue();
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      PKLocalizedFeatureStringWithDefaultValue();
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(WeakRetained[109], "isIdentityPass"))
      {
        PKLocalizedIdentityString(CFSTR("ACCOUNT_DASHBOARD_NOTIFICATIONS_DISABLED_TITLE"));
        v13 = objc_claimAutoreleasedReturnValue();

        PKLocalizedIdentityString(CFSTR("ACCOUNT_DASHBOARD_NOTIFICATIONS_DISABLED_MESSAGE"));
        v14 = objc_claimAutoreleasedReturnValue();

        v11 = (void *)v14;
        v10 = (void *)v13;
      }
      -[PKDashboardPassMessage setTitle:](v5, "setTitle:", v10);
      -[PKDashboardPassMessage setMessage:](v5, "setMessage:", v11);
      -[PKDashboardPassMessage setButtonTitle:](v5, "setButtonTitle:", v12);
      if (objc_msgSend(WeakRetained[109], "isAppleCardPass"))
        v15 = CFSTR("Broadway-45pt");
      else
        v15 = CFSTR("Category_bell_45pt");
      objc_msgSend(WeakRetained, "_messageImageWithName:extension:", v15, CFSTR("png"));
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setImage:](v5, "setImage:", v16);

      -[PKDashboardPassMessage setActionOnButtonPress:](v5, "setActionOnButtonPress:", &__block_literal_global_872);
      objc_initWeak(&location, *(id *)(a1 + 32));
      v17[0] = MEMORY[0x1E0C809B0];
      v17[1] = 3221225472;
      v17[2] = __81__PKDashboardPaymentPassDataSource__messageForEnableNotificationsWithCompletion___block_invoke_4;
      v17[3] = &unk_1E3E61310;
      objc_copyWeak(&v18, &location);
      -[PKDashboardPassMessage setActionOnDismiss:](v5, "setActionOnDismiss:", v17);
      objc_destroyWeak(&v18);
      objc_destroyWeak(&location);

    }
    else
    {
      v5 = 0;
    }
    (*(void (**)(_QWORD, PKDashboardPassMessage *, uint64_t, uint64_t))(*(_QWORD *)(a1 + 40) + 16))(*(_QWORD *)(a1 + 40), v5, v2, v3);

  }
  else
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  }

}

void __81__PKDashboardPaymentPassDataSource__messageForEnableNotificationsWithCompletion___block_invoke_3()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;

  v0 = (void *)MEMORY[0x1E0C99E98];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("prefs:root=NOTIFICATIONS_ID&path=%@"), *MEMORY[0x1E0D6B590]);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "URLWithString:", v1);
  v3 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "openSensitiveURL:withOptions:", v3, 0);

}

void __81__PKDashboardPaymentPassDataSource__messageForEnableNotificationsWithCompletion___block_invoke_4(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    PKSharedCacheSetBoolForKey();
    objc_msgSend(WeakRetained, "reloadMessages");
  }

}

- (id)_messagesForPhysicalCardExpiration
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  _BOOL4 v13;
  _BOOL4 v14;
  void *v15;
  double v16;
  void *v17;
  void *v18;
  char HasDismissedPhysicalCardExpiredMessage;
  PKDashboardPassMessage *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  _QWORD *v26;
  id *v27;
  void *v28;
  _QWORD *v29;
  void *v30;
  _BOOL4 v31;
  double v33;
  void *v34;
  void *v35;
  char HasDismissedPhysicalCardExpiringSoonMessage;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  uint64_t v43;
  id v44;
  void *v45;
  id *v46;
  id *v48;
  void *v49;
  _QWORD v50[5];
  id v51;
  _QWORD v52[5];
  id v53;
  _QWORD v54[5];
  id v55;
  _QWORD v56[5];
  id v57;
  id location[2];

  dispatch_assert_queue_V2(MEMORY[0x1E0C80D38]);
  if (!self->_account || !self->_physicalCardsLoaded)
  {
    v30 = 0;
    return v30;
  }
  v3 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  objc_initWeak(location, self);
  -[PKPhysicalCardController primaryPhysicalCard](self->_physicalCardController, "primaryPhysicalCard");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKPhysicalCardController expiredPhysicalCard](self->_physicalCardController, "expiredPhysicalCard");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (-[PKPhysicalCardController hasExpiredPhysicalCardOnly](self->_physicalCardController, "hasExpiredPhysicalCardOnly"))
  {
    v6 = v5;
  }
  else
  {
    v6 = v4;
  }
  v7 = v6;
  -[PKAccount accountIdentifier](self->_account, "accountIdentifier");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "identifier");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  PKAppleCardPhysicalCardExpiredMessagingStartDate();
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  -[PKAccount accountIdentifier](self->_account, "accountIdentifier");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "identifier");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  PKAppleCardPhysicalCardExpiringSoonMessagingStartDate();
  v49 = (void *)objc_claimAutoreleasedReturnValue();

  v13 = -[PKPhysicalCardController canReplacePhysicalCard](self->_physicalCardController, "canReplacePhysicalCard");
  if (v7)
    v14 = v13;
  else
    v14 = 0;
  if (v14 && v10)
  {
    objc_msgSend(MEMORY[0x1E0C99D68], "now");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "timeIntervalSinceDate:", v10);
    if (v16 <= 0.0)
    {

    }
    else
    {
      -[PKAccount accountIdentifier](self->_account, "accountIdentifier");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "identifier");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      HasDismissedPhysicalCardExpiredMessage = PKAppleCardHasDismissedPhysicalCardExpiredMessage();

      if ((HasDismissedPhysicalCardExpiredMessage & 1) == 0)
      {
        v20 = objc_alloc_init(PKDashboardPassMessage);
        PKLocalizedFeatureString();
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        -[PKDashboardPassMessage setTitle:](v20, "setTitle:", v21);

        PKLocalizedFeatureString();
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        -[PKDashboardPassMessage setMessage:](v20, "setMessage:", v22);

        -[PKDashboardPaymentPassDataSource _messageImageWithName:extension:](self, "_messageImageWithName:extension:", CFSTR("MessageAlert"), CFSTR("pdf"));
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        -[PKDashboardPassMessage setImage:](v20, "setImage:", v23);

        PKLocalizedFeatureString();
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        -[PKDashboardPassMessage setButtonTitle:](v20, "setButtonTitle:", v24);

        v25 = MEMORY[0x1E0C809B0];
        v56[0] = MEMORY[0x1E0C809B0];
        v56[1] = 3221225472;
        v56[2] = __70__PKDashboardPaymentPassDataSource__messagesForPhysicalCardExpiration__block_invoke;
        v56[3] = &unk_1E3E61B68;
        v48 = &v57;
        objc_copyWeak(&v57, location);
        v56[4] = v4;
        -[PKDashboardPassMessage setActionOnButtonPress:](v20, "setActionOnButtonPress:", v56);
        v54[0] = v25;
        v54[1] = 3221225472;
        v54[2] = __70__PKDashboardPaymentPassDataSource__messagesForPhysicalCardExpiration__block_invoke_3;
        v54[3] = &unk_1E3E61B68;
        v26 = v54;
        v27 = &v55;
        objc_copyWeak(&v55, location);
        v54[4] = v7;
        -[PKDashboardPassMessage setActionOnDismiss:](v20, "setActionOnDismiss:", v54);
        -[PKDashboardPassMessage setShowDisclosure:](v20, "setShowDisclosure:", 1);
        -[PKDashboardPassMessage setIdentifier:](v20, "setIdentifier:", CFSTR("physicalCardExpired"));
        -[PKDashboardPassMessage setReportToAnalytics:](v20, "setReportToAnalytics:", 1);
        objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", self->_pass);
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        -[PKDashboardPassMessage setAnalyticsReporterSubject:](v20, "setAnalyticsReporterSubject:", v28);

        objc_msgSend(v3, "addObject:", v20);
        v29 = v56;
LABEL_24:
        v46 = (id *)(v29 + 4);

        objc_destroyWeak(v27);
        objc_destroyWeak(v48);
LABEL_25:

        goto LABEL_26;
      }
    }
  }
  if (-[PKPhysicalCardController hasExpiredPhysicalCardOnly](self->_physicalCardController, "hasExpiredPhysicalCardOnly"))
  {
    goto LABEL_26;
  }
  v31 = -[PKPhysicalCardController canReplacePhysicalCard](self->_physicalCardController, "canReplacePhysicalCard");
  if (!v49 || !v31)
    goto LABEL_26;
  objc_msgSend(MEMORY[0x1E0C99D68], "now");
  v20 = (PKDashboardPassMessage *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPassMessage timeIntervalSinceDate:](v20, "timeIntervalSinceDate:", v49);
  if (v33 <= 0.0)
    goto LABEL_25;
  -[PKAccount accountIdentifier](self->_account, "accountIdentifier");
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "identifier");
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  HasDismissedPhysicalCardExpiringSoonMessage = PKAppleCardHasDismissedPhysicalCardExpiringSoonMessage();

  if ((HasDismissedPhysicalCardExpiringSoonMessage & 1) == 0)
  {
    v20 = objc_alloc_init(PKDashboardPassMessage);
    -[PKPhysicalCardController primaryPhysicalCardExpirationDate](self->_physicalCardController, "primaryPhysicalCardExpirationDate");
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    PKMediumDayAndMonthStringFromDate();
    v38 = (void *)objc_claimAutoreleasedReturnValue();
    PKLocalizedFeatureString();
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setTitle:](v20, "setTitle:", v39, v38);

    PKLocalizedFeatureString();
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setMessage:](v20, "setMessage:", v40);

    -[PKDashboardPaymentPassDataSource _messageImageWithName:extension:](self, "_messageImageWithName:extension:", CFSTR("MessageAlert"), CFSTR("pdf"));
    v41 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setImage:](v20, "setImage:", v41);

    PKLocalizedFeatureString();
    v42 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setButtonTitle:](v20, "setButtonTitle:", v42);

    v43 = MEMORY[0x1E0C809B0];
    v52[0] = MEMORY[0x1E0C809B0];
    v52[1] = 3221225472;
    v52[2] = __70__PKDashboardPaymentPassDataSource__messagesForPhysicalCardExpiration__block_invoke_4;
    v52[3] = &unk_1E3E61B68;
    v48 = &v53;
    objc_copyWeak(&v53, location);
    v44 = v4;
    v52[4] = v44;
    -[PKDashboardPassMessage setActionOnButtonPress:](v20, "setActionOnButtonPress:", v52);
    v50[0] = v43;
    v50[1] = 3221225472;
    v50[2] = __70__PKDashboardPaymentPassDataSource__messagesForPhysicalCardExpiration__block_invoke_6;
    v50[3] = &unk_1E3E61B68;
    v27 = &v51;
    objc_copyWeak(&v51, location);
    v50[4] = v44;
    -[PKDashboardPassMessage setActionOnDismiss:](v20, "setActionOnDismiss:", v50);
    v26 = v50;
    -[PKDashboardPassMessage setShowDisclosure:](v20, "setShowDisclosure:", 1);
    -[PKDashboardPassMessage setIdentifier:](v20, "setIdentifier:", CFSTR("physicalCardExpiringSoon"));
    -[PKDashboardPassMessage setReportToAnalytics:](v20, "setReportToAnalytics:", 1);
    objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", self->_pass);
    v45 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setAnalyticsReporterSubject:](v20, "setAnalyticsReporterSubject:", v45);

    objc_msgSend(v3, "addObject:", v20);
    v29 = v52;
    goto LABEL_24;
  }
LABEL_26:
  if (objc_msgSend(v3, "count"))
    v30 = (void *)objc_msgSend(v3, "copy");
  else
    v30 = 0;

  objc_destroyWeak(location);
  return v30;
}

void __70__PKDashboardPaymentPassDataSource__messagesForPhysicalCardExpiration__block_invoke(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  uint64_t v5;
  _QWORD v6[5];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    v4 = (void *)*((_QWORD *)WeakRetained + 49);
    v5 = *(_QWORD *)(a1 + 32);
    v6[0] = MEMORY[0x1E0C809B0];
    v6[1] = 3221225472;
    v6[2] = __70__PKDashboardPaymentPassDataSource__messagesForPhysicalCardExpiration__block_invoke_2;
    v6[3] = &unk_1E3E6A950;
    v6[4] = v3;
    objc_msgSend(v4, "replaceFlowViewControllerForReason:content:currentPhysicalCard:completion:", 1, 0, v5, v6);
  }

}

void __70__PKDashboardPaymentPassDataSource__messagesForPhysicalCardExpiration__block_invoke_2(uint64_t a1, void *a2, void *a3)
{
  id v5;
  PKNavigationController *v6;
  void *v7;
  id v8;

  v8 = a2;
  v5 = a3;
  if (v8)
  {
    v6 = -[PKNavigationController initWithRootViewController:]([PKNavigationController alloc], "initWithRootViewController:", v8);
    -[PKNavigationController setModalPresentationStyle:](v6, "setModalPresentationStyle:", 2);
LABEL_5:
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "pkui_viewControllerFromResponderChain");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "presentViewController:animated:completion:", v6, 1, 0);

    goto LABEL_6;
  }
  if (v5)
  {
    v6 = (PKNavigationController *)PKAlertForDisplayableErrorWithHandlers(v5, 0, 0, 0);
    goto LABEL_5;
  }
LABEL_6:

}

void __70__PKDashboardPaymentPassDataSource__messagesForPhysicalCardExpiration__block_invoke_3(uint64_t a1)
{
  id *WeakRetained;
  void *v3;
  void *v4;
  id *v5;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v5 = WeakRetained;
    objc_msgSend(WeakRetained[48], "accountIdentifier");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "identifier");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    PKAppleCardSetHasDismissedPhysicalCardExpiredMessage();

    objc_msgSend(v5, "reloadMessages");
    WeakRetained = v5;
  }

}

void __70__PKDashboardPaymentPassDataSource__messagesForPhysicalCardExpiration__block_invoke_4(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  uint64_t v5;
  _QWORD v6[5];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    v4 = (void *)*((_QWORD *)WeakRetained + 49);
    v5 = *(_QWORD *)(a1 + 32);
    v6[0] = MEMORY[0x1E0C809B0];
    v6[1] = 3221225472;
    v6[2] = __70__PKDashboardPaymentPassDataSource__messagesForPhysicalCardExpiration__block_invoke_5;
    v6[3] = &unk_1E3E6A950;
    v6[4] = v3;
    objc_msgSend(v4, "replaceFlowViewControllerForReason:content:currentPhysicalCard:completion:", 1, 0, v5, v6);
  }

}

void __70__PKDashboardPaymentPassDataSource__messagesForPhysicalCardExpiration__block_invoke_5(uint64_t a1, void *a2, void *a3)
{
  id v5;
  PKNavigationController *v6;
  void *v7;
  id v8;

  v8 = a2;
  v5 = a3;
  if (v8)
  {
    v6 = -[PKNavigationController initWithRootViewController:]([PKNavigationController alloc], "initWithRootViewController:", v8);
    -[PKNavigationController setModalPresentationStyle:](v6, "setModalPresentationStyle:", 2);
LABEL_5:
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "pkui_viewControllerFromResponderChain");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "presentViewController:animated:completion:", v6, 1, 0);

    goto LABEL_6;
  }
  if (v5)
  {
    v6 = (PKNavigationController *)PKAlertForDisplayableErrorWithHandlers(v5, 0, 0, 0);
    goto LABEL_5;
  }
LABEL_6:

}

void __70__PKDashboardPaymentPassDataSource__messagesForPhysicalCardExpiration__block_invoke_6(uint64_t a1)
{
  id *WeakRetained;
  void *v3;
  void *v4;
  id *v5;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v5 = WeakRetained;
    objc_msgSend(WeakRetained[48], "accountIdentifier");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "identifier");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    PKAppleCardSetHasDismissedPhysicalCardExpiringSoonMessage();

    objc_msgSend(v5, "reloadMessages");
    WeakRetained = v5;
  }

}

- (id)_messagesForPhysicalCard
{
  PKDashboardPassMessage *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t i;
  void *v12;
  void *v13;
  void *v14;
  PKAccountUserCollection *accountUserCollection;
  void *v16;
  uint64_t v17;
  BOOL v18;
  int v19;
  void *v20;
  int v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  _BOOL4 v27;
  PKDashboardPassMessage *v28;
  PKDashboardPassMessage *v29;
  void *v30;
  _BOOL4 v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  uint64_t v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  id v51;
  void *v52;
  void *v53;
  id v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  PKDashboardPassMessage *v82;
  void *v83;
  void *v84;
  void *v85;
  void *v86;
  void *v87;
  void *v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;
  id v94;
  id obj;
  uint64_t v96;
  uint64_t v97;
  PKDashboardPassMessage *v98;
  void *v99;
  void *v100;
  void *v101;
  PKDashboardPaymentPassDataSource *v102;
  void *v103;
  void *v104;
  _QWORD v105[4];
  id v106;
  _QWORD v107[4];
  id v108;
  _QWORD v109[4];
  id v110;
  _QWORD v111[4];
  id v112;
  id v113;
  _QWORD v114[4];
  id v115;
  id v116;
  _QWORD v117[4];
  id v118;
  _QWORD v119[5];
  _QWORD v120[4];
  id v121;
  id v122;
  _QWORD v123[4];
  id v124;
  _QWORD v125[4];
  id v126;
  _QWORD v127[5];
  id v128;
  id v129;
  _QWORD v130[4];
  id v131;
  id v132;
  _QWORD v133[4];
  id v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  _QWORD v139[4];
  id v140;
  _QWORD v141[4];
  id v142;
  id location;
  _BYTE v144[128];
  uint64_t v145;

  v145 = *MEMORY[0x1E0C80C00];
  dispatch_assert_queue_V2(MEMORY[0x1E0C80D38]);
  if (self->_account && self->_physicalCardsLoaded)
  {
    v94 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
    v102 = self;
    objc_initWeak(&location, self);
    if (-[PKPhysicalCardController canRequestNewPhysicalCard](self->_physicalCardController, "canRequestNewPhysicalCard")&& !-[PKPhysicalCardController canReplacePhysicalCard](self->_physicalCardController, "canReplacePhysicalCard")&& (PKSharedCacheGetBoolForKey() & 1) == 0)
    {
      v3 = objc_alloc_init(PKDashboardPassMessage);
      PKLocalizedFeatureString();
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setTitle:](v3, "setTitle:", v4);

      PKLocalizedFeatureString();
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setMessage:](v3, "setMessage:", v5);

      -[PKDashboardPaymentPassDataSource _messageImageWithName:extension:](v102, "_messageImageWithName:extension:", CFSTR("PhysicalCardMessageModule"), CFSTR("pdf"));
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setImage:](v3, "setImage:", v6);

      v7 = MEMORY[0x1E0C809B0];
      v141[0] = MEMORY[0x1E0C809B0];
      v141[1] = 3221225472;
      v141[2] = __60__PKDashboardPaymentPassDataSource__messagesForPhysicalCard__block_invoke;
      v141[3] = &unk_1E3E61310;
      objc_copyWeak(&v142, &location);
      -[PKDashboardPassMessage setActionOnDismiss:](v3, "setActionOnDismiss:", v141);
      PKLocalizedFeatureString();
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setButtonTitle:](v3, "setButtonTitle:", v8);

      v139[0] = v7;
      v139[1] = 3221225472;
      v139[2] = __60__PKDashboardPaymentPassDataSource__messagesForPhysicalCard__block_invoke_2;
      v139[3] = &unk_1E3E61310;
      objc_copyWeak(&v140, &location);
      -[PKDashboardPassMessage setActionOnButtonPress:](v3, "setActionOnButtonPress:", v139);
      -[PKDashboardPassMessage setIdentifier:](v3, "setIdentifier:", CFSTR("physicalCardOrder"));
      -[PKDashboardPassMessage setReportToAnalytics:](v3, "setReportToAnalytics:", 1);
      objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", v102->_pass);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setAnalyticsReporterSubject:](v3, "setAnalyticsReporterSubject:", v9);

      objc_msgSend(v94, "addObject:", v3);
      objc_destroyWeak(&v140);
      objc_destroyWeak(&v142);

      self = v102;
    }
    -[NSSet objectsPassingTest:](self->_physicalCards, "objectsPassingTest:", &__block_literal_global_900);
    v137 = 0u;
    v138 = 0u;
    v135 = 0u;
    v136 = 0u;
    obj = (id)objc_claimAutoreleasedReturnValue();
    v10 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v135, v144, 16);
    if (v10)
    {
      v96 = *(_QWORD *)v136;
      do
      {
        v97 = v10;
        for (i = 0; i != v97; ++i)
        {
          if (*(_QWORD *)v136 != v96)
            objc_enumerationMutation(obj);
          v12 = *(void **)(*((_QWORD *)&v135 + 1) + 8 * i);
          objc_msgSend(v12, "accountUserAltDSID", v89, v91);
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v12, "identifier");
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          accountUserCollection = self->_accountUserCollection;
          if (v13)
            -[PKAccountUserCollection accountUserWithAltDSID:](accountUserCollection, "accountUserWithAltDSID:", v13);
          else
            -[PKAccountUserCollection currentAccountUser](accountUserCollection, "currentAccountUser");
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          v17 = objc_msgSend(v16, "accessLevel");
          if (v16)
            v18 = v17 == 2;
          else
            v18 = 0;
          if ((!v18
             || (objc_msgSend(v16, "isCurrentUser") & 1) != 0
             || (objc_msgSend(v16, "supportsRequestPhysicalCard") & 1) != 0)
            && (-[PKAccount accessLevel](self->_account, "accessLevel") != 2
             || -[PKAccount supportsRequestPhysicalCard](self->_account, "supportsRequestPhysicalCard")))
          {
            if (v16)
              v19 = objc_msgSend(v16, "isCurrentUser");
            else
              v19 = 1;
            -[PKDashboardPaymentPassDataSource _lastPhysicalCardMessageDateKeyForPhysicalCardIdentifier:](self, "_lastPhysicalCardMessageDateKeyForPhysicalCardIdentifier:", v14);
            v99 = (void *)objc_claimAutoreleasedReturnValue();
            PKSharedCacheGetDateForKey();
            v20 = (void *)objc_claimAutoreleasedReturnValue();
            if (v20)
              v21 = 0;
            else
              v21 = v19;
            if (v21 == 1)
            {
              PKSharedCacheGetDateForKey();
              v20 = (void *)objc_claimAutoreleasedReturnValue();
            }
            if (v13)
            {
              -[PKFamilyMemberCollection familyMemberForAltDSID:](self->_familyCollection, "familyMemberForAltDSID:", v13);
              v104 = (void *)objc_claimAutoreleasedReturnValue();
            }
            else
            {
              v104 = 0;
            }
            v22 = (void *)MEMORY[0x1E0D66C60];
            objc_msgSend(v16, "nameComponents");
            v23 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v22, "contactForFamilyMember:nameComponents:imageData:", v104, v23, 0);
            v103 = (void *)objc_claimAutoreleasedReturnValue();

            objc_msgSend(v103, "givenName");
            v100 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v12, "latestShippingActivity");
            v24 = (void *)objc_claimAutoreleasedReturnValue();
            v25 = v24;
            v101 = v24;
            if (v24
              && objc_msgSend(v24, "shippingStatus")
              && (!v20
               || (objc_msgSend(v25, "timestamp"),
                   v26 = (void *)objc_claimAutoreleasedReturnValue(),
                   v27 = objc_msgSend(v20, "compare:", v26) == -1,
                   v26,
                   v25 = v101,
                   v27)))
            {
              switch(objc_msgSend(v25, "shippingStatus"))
              {
                case 1:
                  v29 = objc_alloc_init(PKDashboardPassMessage);
                  -[PKDashboardPaymentPassDataSource _messageImageWithName:extension:](v102, "_messageImageWithName:extension:", CFSTR("PhysicalCardMessageModule"), CFSTR("pdf"));
                  v33 = (void *)objc_claimAutoreleasedReturnValue();
                  -[PKDashboardPassMessage setImage:](v29, "setImage:", v33);

                  objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", v102->_pass);
                  v34 = (void *)objc_claimAutoreleasedReturnValue();
                  -[PKDashboardPassMessage setAnalyticsReporterSubject:](v29, "setAnalyticsReporterSubject:", v34);

                  if (v19)
                  {
                    PKLocalizedFeatureString();
                    v98 = (PKDashboardPassMessage *)objc_claimAutoreleasedReturnValue();
                    objc_msgSend(v101, "formattedEstimatedDeliveryDate");
                    v35 = (void *)objc_claimAutoreleasedReturnValue();
                    v90 = v35;
                  }
                  else
                  {
                    PKLocalizedFeatureString();
                    v98 = (PKDashboardPassMessage *)objc_claimAutoreleasedReturnValue();
                    objc_msgSend(v101, "formattedEstimatedDeliveryDate", v100);
                    v35 = (void *)objc_claimAutoreleasedReturnValue();
                    v90 = v100;
                    v91 = v35;
                  }
                  PKLocalizedFeatureString();
                  v93 = (void *)objc_claimAutoreleasedReturnValue();

                  -[PKDashboardPassMessage setTitle:](v29, "setTitle:", v98, v90);
                  -[PKDashboardPassMessage setMessage:](v29, "setMessage:", v93);
                  objc_msgSend(v12, "shipmentTrackingURL");
                  v54 = (id)objc_claimAutoreleasedReturnValue();
                  if (v54
                    || (objc_msgSend(v101, "shipmentTrackingURL"), (v54 = (id)objc_claimAutoreleasedReturnValue()) != 0))
                  {
                    PKLocalizedFeatureString();
                    v55 = (void *)objc_claimAutoreleasedReturnValue();
                    -[PKDashboardPassMessage setButtonTitle:](v29, "setButtonTitle:", v55);

                    v133[0] = MEMORY[0x1E0C809B0];
                    v133[1] = 3221225472;
                    v133[2] = __60__PKDashboardPaymentPassDataSource__messagesForPhysicalCard__block_invoke_5;
                    v133[3] = &unk_1E3E612E8;
                    v54 = v54;
                    v134 = v54;
                    -[PKDashboardPassMessage setActionOnButtonPress:](v29, "setActionOnButtonPress:", v133);

                  }
                  v130[0] = MEMORY[0x1E0C809B0];
                  v130[1] = 3221225472;
                  v130[2] = __60__PKDashboardPaymentPassDataSource__messagesForPhysicalCard__block_invoke_6;
                  v130[3] = &unk_1E3E61B68;
                  objc_copyWeak(&v132, &location);
                  v131 = v99;
                  -[PKDashboardPassMessage setActionOnDismiss:](v29, "setActionOnDismiss:", v130);
                  -[PKDashboardPaymentPassDataSource _physicalCardMessageIdentifierFromIdentifier:physicalCard:](v102, "_physicalCardMessageIdentifierFromIdentifier:physicalCard:", CFSTR("physicalCardShipped"), v12);
                  v56 = (void *)objc_claimAutoreleasedReturnValue();
                  -[PKDashboardPassMessage setIdentifier:](v29, "setIdentifier:", v56);

                  -[PKDashboardPassMessage setReportToAnalytics:](v29, "setReportToAnalytics:", 1);
                  objc_msgSend(v94, "addObject:", v29);

                  objc_destroyWeak(&v132);
                  goto LABEL_91;
                case 2:
                  v29 = objc_alloc_init(PKDashboardPassMessage);
                  if (v19)
                  {
                    PKLocalizedFeatureString();
                    v98 = (PKDashboardPassMessage *)objc_claimAutoreleasedReturnValue();
                    PKLocalizedFeatureString();
                  }
                  else
                  {
                    PKLocalizedFeatureString();
                    v98 = (PKDashboardPassMessage *)objc_claimAutoreleasedReturnValue();
                    v89 = v100;
                    PKLocalizedFeatureString();
                  }
                  v48 = (void *)objc_claimAutoreleasedReturnValue();
                  -[PKDashboardPassMessage setTitle:](v29, "setTitle:", v98, v89);
                  -[PKDashboardPassMessage setMessage:](v29, "setMessage:", v48);
                  -[PKDashboardPaymentPassDataSource _messageImageWithName:extension:](v102, "_messageImageWithName:extension:", CFSTR("PhysicalCardMessageModule"), CFSTR("pdf"));
                  v49 = (void *)objc_claimAutoreleasedReturnValue();
                  -[PKDashboardPassMessage setImage:](v29, "setImage:", v49);

                  objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", v102->_pass);
                  v50 = (void *)objc_claimAutoreleasedReturnValue();
                  -[PKDashboardPassMessage setAnalyticsReporterSubject:](v29, "setAnalyticsReporterSubject:", v50);

                  objc_msgSend(v12, "shipmentTrackingURL");
                  v51 = (id)objc_claimAutoreleasedReturnValue();
                  if (v51
                    || (objc_msgSend(v101, "shipmentTrackingURL"), (v51 = (id)objc_claimAutoreleasedReturnValue()) != 0))
                  {
                    PKLocalizedFeatureString();
                    v52 = (void *)objc_claimAutoreleasedReturnValue();
                    -[PKDashboardPassMessage setButtonTitle:](v29, "setButtonTitle:", v52);

                    v125[0] = MEMORY[0x1E0C809B0];
                    v125[1] = 3221225472;
                    v125[2] = __60__PKDashboardPaymentPassDataSource__messagesForPhysicalCard__block_invoke_8;
                    v125[3] = &unk_1E3E612E8;
                    v51 = v51;
                    v126 = v51;
                    -[PKDashboardPassMessage setActionOnButtonPress:](v29, "setActionOnButtonPress:", v125);

                  }
                  -[PKDashboardPaymentPassDataSource _physicalCardMessageIdentifierFromIdentifier:physicalCard:](v102, "_physicalCardMessageIdentifierFromIdentifier:physicalCard:", CFSTR("physicalCardOutForDelivery"), v12);
                  v53 = (void *)objc_claimAutoreleasedReturnValue();
                  -[PKDashboardPassMessage setIdentifier:](v29, "setIdentifier:", v53);

                  -[PKDashboardPassMessage setReportToAnalytics:](v29, "setReportToAnalytics:", 1);
                  objc_msgSend(v94, "addObject:", v29);

                  goto LABEL_91;
                case 3:
                  if ((v19 & 1) == 0 && !objc_msgSend(v16, "supportsPhysicalCardActivation"))
                    goto LABEL_93;
                  v29 = objc_alloc_init(PKDashboardPassMessage);
                  objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", v102->_pass);
                  v36 = (void *)objc_claimAutoreleasedReturnValue();
                  -[PKDashboardPassMessage setAnalyticsReporterSubject:](v29, "setAnalyticsReporterSubject:", v36);

                  if (v19)
                  {
                    PKLocalizedFeatureString();
                  }
                  else
                  {
                    v89 = v100;
                    PKLocalizedFeatureString();
                  }
                  v98 = (PKDashboardPassMessage *)objc_claimAutoreleasedReturnValue();
                  PKLocalizedFeatureString();
                  v71 = (void *)objc_claimAutoreleasedReturnValue();
                  PKLocalizedFeatureString();
                  v72 = (void *)objc_claimAutoreleasedReturnValue();
                  -[PKDashboardPassMessage setButtonTitle:](v29, "setButtonTitle:", v72);

                  v127[0] = MEMORY[0x1E0C809B0];
                  v127[1] = 3221225472;
                  v127[2] = __60__PKDashboardPaymentPassDataSource__messagesForPhysicalCard__block_invoke_7;
                  v127[3] = &unk_1E3E61EE8;
                  objc_copyWeak(&v129, &location);
                  v127[4] = v12;
                  v128 = v16;
                  -[PKDashboardPassMessage setActionOnButtonPress:](v29, "setActionOnButtonPress:", v127);
                  -[PKDashboardPassMessage setTitle:](v29, "setTitle:", v98);
                  -[PKDashboardPassMessage setMessage:](v29, "setMessage:", v71);
                  -[PKDashboardPaymentPassDataSource _messageImageWithName:extension:](v102, "_messageImageWithName:extension:", CFSTR("PhysicalCardMessageModule"), CFSTR("pdf"));
                  v73 = (void *)objc_claimAutoreleasedReturnValue();
                  -[PKDashboardPassMessage setImage:](v29, "setImage:", v73);

                  -[PKDashboardPaymentPassDataSource _physicalCardMessageIdentifierFromIdentifier:physicalCard:](v102, "_physicalCardMessageIdentifierFromIdentifier:physicalCard:", CFSTR("physicalCardDelivered"), v12);
                  v74 = (void *)objc_claimAutoreleasedReturnValue();
                  -[PKDashboardPassMessage setIdentifier:](v29, "setIdentifier:", v74);

                  -[PKDashboardPassMessage setReportToAnalytics:](v29, "setReportToAnalytics:", 1);
                  objc_msgSend(v94, "addObject:", v29);

                  objc_destroyWeak(&v129);
LABEL_91:

                  break;
                case 4:
                  v29 = objc_alloc_init(PKDashboardPassMessage);
                  PKLocalizedFeatureString();
                  v37 = (void *)objc_claimAutoreleasedReturnValue();
                  -[PKDashboardPassMessage setTitle:](v29, "setTitle:", v37);

                  objc_msgSend(v101, "localizedDeliveryExceptionReason");
                  v38 = objc_claimAutoreleasedReturnValue();
                  if (!v38)
                  {
                    if (v19)
                    {
                      PKLocalizedFeatureString();
                    }
                    else
                    {
                      v89 = v100;
                      PKLocalizedFeatureString();
                    }
                    v38 = objc_claimAutoreleasedReturnValue();
                  }
                  v98 = (PKDashboardPassMessage *)v38;
                  -[PKDashboardPassMessage setMessage:](v29, "setMessage:", v89);
                  -[PKDashboardPaymentPassDataSource _messageImageWithName:extension:](v102, "_messageImageWithName:extension:", CFSTR("MessageAlert"), CFSTR("pdf"));
                  v78 = (void *)objc_claimAutoreleasedReturnValue();
                  -[PKDashboardPassMessage setImage:](v29, "setImage:", v78);

                  PKLocalizedFeatureString();
                  v79 = (void *)objc_claimAutoreleasedReturnValue();
                  -[PKDashboardPassMessage setButtonTitle:](v29, "setButtonTitle:", v79);

                  v123[0] = MEMORY[0x1E0C809B0];
                  v123[1] = 3221225472;
                  v123[2] = __60__PKDashboardPaymentPassDataSource__messagesForPhysicalCard__block_invoke_9;
                  v123[3] = &unk_1E3E61310;
                  objc_copyWeak(&v124, &location);
                  -[PKDashboardPassMessage setActionOnButtonPress:](v29, "setActionOnButtonPress:", v123);
                  v120[0] = MEMORY[0x1E0C809B0];
                  v120[1] = 3221225472;
                  v120[2] = __60__PKDashboardPaymentPassDataSource__messagesForPhysicalCard__block_invoke_10;
                  v120[3] = &unk_1E3E61B68;
                  objc_copyWeak(&v122, &location);
                  v121 = v99;
                  -[PKDashboardPassMessage setActionOnDismiss:](v29, "setActionOnDismiss:", v120);
                  -[PKDashboardPaymentPassDataSource _physicalCardMessageIdentifierFromIdentifier:physicalCard:](v102, "_physicalCardMessageIdentifierFromIdentifier:physicalCard:", CFSTR("physicalCardCannotDeliver"), v12);
                  v80 = (void *)objc_claimAutoreleasedReturnValue();
                  -[PKDashboardPassMessage setIdentifier:](v29, "setIdentifier:", v80);

                  -[PKDashboardPassMessage setReportToAnalytics:](v29, "setReportToAnalytics:", 1);
                  objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", v102->_pass);
                  v81 = (void *)objc_claimAutoreleasedReturnValue();
                  -[PKDashboardPassMessage setAnalyticsReporterSubject:](v29, "setAnalyticsReporterSubject:", v81);

                  objc_msgSend(v94, "addObject:", v29);
                  objc_destroyWeak(&v122);
                  objc_destroyWeak(&v124);
                  goto LABEL_91;
                default:
                  goto LABEL_93;
              }
            }
            else
            {
              objc_msgSend(v12, "latestOrderActivity");
              v28 = (PKDashboardPassMessage *)objc_claimAutoreleasedReturnValue();
              v29 = v28;
              if (v28)
              {
                if (-[PKDashboardPassMessage activity](v28, "activity"))
                {
                  if (!v20
                    || (-[PKDashboardPassMessage date](v29, "date"),
                        v30 = (void *)objc_claimAutoreleasedReturnValue(),
                        v31 = objc_msgSend(v20, "compare:", v30) == -1,
                        v30,
                        v31))
                  {
                    switch(-[PKDashboardPassMessage activity](v29, "activity"))
                    {
                      case 1:
                        v98 = objc_alloc_init(PKDashboardPassMessage);
                        if (v19)
                        {
                          PKLocalizedFeatureString();
                          v32 = (void *)objc_claimAutoreleasedReturnValue();
                          PKLocalizedFeatureString();
                        }
                        else
                        {
                          PKLocalizedFeatureString();
                          v32 = (void *)objc_claimAutoreleasedReturnValue();
                          v89 = v100;
                          PKLocalizedFeatureString();
                        }
                        v57 = (void *)objc_claimAutoreleasedReturnValue();
                        -[PKDashboardPassMessage setTitle:](v98, "setTitle:", v32, v89);
                        -[PKDashboardPassMessage setMessage:](v98, "setMessage:", v57);
                        PKLocalizedFeatureString();
                        v58 = (void *)objc_claimAutoreleasedReturnValue();
                        -[PKDashboardPassMessage setButtonTitle:](v98, "setButtonTitle:", v58);

                        -[PKDashboardPaymentPassDataSource _messageImageWithName:extension:](v102, "_messageImageWithName:extension:", CFSTR("PhysicalCardMessageModule"), CFSTR("pdf"));
                        v59 = (void *)objc_claimAutoreleasedReturnValue();
                        -[PKDashboardPassMessage setImage:](v98, "setImage:", v59);

                        -[PKDashboardPassMessage setActionOnButtonPress:](v98, "setActionOnButtonPress:", &__block_literal_global_952);
                        v111[0] = MEMORY[0x1E0C809B0];
                        v111[1] = 3221225472;
                        v111[2] = __60__PKDashboardPaymentPassDataSource__messagesForPhysicalCard__block_invoke_15;
                        v111[3] = &unk_1E3E61B68;
                        objc_copyWeak(&v113, &location);
                        v112 = v99;
                        -[PKDashboardPassMessage setActionOnDismiss:](v98, "setActionOnDismiss:", v111);
                        -[PKDashboardPaymentPassDataSource _physicalCardMessageIdentifierFromIdentifier:physicalCard:](v102, "_physicalCardMessageIdentifierFromIdentifier:physicalCard:", CFSTR("physicalCardOrdered"), v12);
                        v60 = (void *)objc_claimAutoreleasedReturnValue();
                        -[PKDashboardPassMessage setIdentifier:](v98, "setIdentifier:", v60);

                        -[PKDashboardPassMessage setReportToAnalytics:](v98, "setReportToAnalytics:", 1);
                        objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", v102->_pass);
                        v61 = (void *)objc_claimAutoreleasedReturnValue();
                        -[PKDashboardPassMessage setAnalyticsReporterSubject:](v98, "setAnalyticsReporterSubject:", v61);

                        objc_msgSend(v94, "addObject:", v98);
                        objc_destroyWeak(&v113);

                        goto LABEL_91;
                      case 2:
                        v98 = objc_alloc_init(PKDashboardPassMessage);
                        if (v19)
                        {
                          PKLocalizedFeatureString();
                          v47 = (void *)objc_claimAutoreleasedReturnValue();
                          PKLocalizedFeatureString();
                        }
                        else
                        {
                          PKLocalizedFeatureString();
                          v47 = (void *)objc_claimAutoreleasedReturnValue();
                          v89 = v100;
                          PKLocalizedFeatureString();
                        }
                        v67 = (void *)objc_claimAutoreleasedReturnValue();
                        -[PKDashboardPassMessage setTitle:](v98, "setTitle:", v47, v89);
                        -[PKDashboardPassMessage setMessage:](v98, "setMessage:", v67);
                        -[PKDashboardPaymentPassDataSource _messageImageWithName:extension:](v102, "_messageImageWithName:extension:", CFSTR("DeliveryBox"), CFSTR("pdf"));
                        v68 = (void *)objc_claimAutoreleasedReturnValue();
                        -[PKDashboardPassMessage setImage:](v98, "setImage:", v68);

                        objc_msgSend(v12, "shipmentTrackingURL");
                        v69 = (void *)objc_claimAutoreleasedReturnValue();

                        PKLocalizedFeatureString();
                        if (v69)
                        {
                          v70 = (void *)objc_claimAutoreleasedReturnValue();
                          -[PKDashboardPassMessage setButtonTitle:](v98, "setButtonTitle:", v70);

                          v119[0] = MEMORY[0x1E0C809B0];
                          v119[1] = 3221225472;
                          v119[2] = __60__PKDashboardPaymentPassDataSource__messagesForPhysicalCard__block_invoke_11;
                          v119[3] = &unk_1E3E612E8;
                          v119[4] = v12;
                          -[PKDashboardPassMessage setActionOnButtonPress:](v98, "setActionOnButtonPress:", v119);
                        }
                        else
                        {
                          v75 = (void *)objc_claimAutoreleasedReturnValue();
                          -[PKDashboardPassMessage setButtonTitle:](v98, "setButtonTitle:", v75);

                          v117[0] = MEMORY[0x1E0C809B0];
                          v117[1] = 3221225472;
                          v117[2] = __60__PKDashboardPaymentPassDataSource__messagesForPhysicalCard__block_invoke_12;
                          v117[3] = &unk_1E3E61310;
                          objc_copyWeak(&v118, &location);
                          -[PKDashboardPassMessage setActionOnButtonPress:](v98, "setActionOnButtonPress:", v117);
                          objc_destroyWeak(&v118);
                        }
                        v114[0] = MEMORY[0x1E0C809B0];
                        v114[1] = 3221225472;
                        v114[2] = __60__PKDashboardPaymentPassDataSource__messagesForPhysicalCard__block_invoke_13;
                        v114[3] = &unk_1E3E61B68;
                        objc_copyWeak(&v116, &location);
                        v115 = v99;
                        -[PKDashboardPassMessage setActionOnDismiss:](v98, "setActionOnDismiss:", v114);
                        -[PKDashboardPaymentPassDataSource _physicalCardMessageIdentifierFromIdentifier:physicalCard:](v102, "_physicalCardMessageIdentifierFromIdentifier:physicalCard:", CFSTR("physicalCardShippedNoDate"), v12);
                        v76 = (void *)objc_claimAutoreleasedReturnValue();
                        -[PKDashboardPassMessage setIdentifier:](v98, "setIdentifier:", v76);

                        -[PKDashboardPassMessage setReportToAnalytics:](v98, "setReportToAnalytics:", 1);
                        objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", v102->_pass);
                        v77 = (void *)objc_claimAutoreleasedReturnValue();
                        -[PKDashboardPassMessage setAnalyticsReporterSubject:](v98, "setAnalyticsReporterSubject:", v77);

                        objc_msgSend(v94, "addObject:", v98);
                        objc_destroyWeak(&v116);

                        goto LABEL_91;
                      case 3:
                        v98 = objc_alloc_init(PKDashboardPassMessage);
                        if (v19)
                        {
                          PKLocalizedFeatureString();
                          v39 = (void *)objc_claimAutoreleasedReturnValue();
                          PKLocalizedFeatureString();
                        }
                        else
                        {
                          PKLocalizedFeatureString();
                          v39 = (void *)objc_claimAutoreleasedReturnValue();
                          v89 = v100;
                          PKLocalizedFeatureString();
                        }
                        v62 = (void *)objc_claimAutoreleasedReturnValue();
                        -[PKDashboardPassMessage setTitle:](v98, "setTitle:", v39, v89);
                        -[PKDashboardPassMessage setMessage:](v98, "setMessage:", v62);
                        PKLocalizedFeatureString();
                        v63 = (void *)objc_claimAutoreleasedReturnValue();
                        -[PKDashboardPassMessage setButtonTitle:](v98, "setButtonTitle:", v63);

                        -[PKDashboardPaymentPassDataSource _messageImageWithName:extension:](v102, "_messageImageWithName:extension:", CFSTR("MessageAlert"), CFSTR("pdf"));
                        v64 = (void *)objc_claimAutoreleasedReturnValue();
                        -[PKDashboardPassMessage setImage:](v98, "setImage:", v64);

                        v109[0] = MEMORY[0x1E0C809B0];
                        v109[1] = 3221225472;
                        v109[2] = __60__PKDashboardPaymentPassDataSource__messagesForPhysicalCard__block_invoke_16;
                        v109[3] = &unk_1E3E61310;
                        objc_copyWeak(&v110, &location);
                        -[PKDashboardPassMessage setActionOnButtonPress:](v98, "setActionOnButtonPress:", v109);
                        -[PKDashboardPaymentPassDataSource _physicalCardMessageIdentifierFromIdentifier:physicalCard:](v102, "_physicalCardMessageIdentifierFromIdentifier:physicalCard:", CFSTR("physicalCardFixShippingAddress"), v12);
                        v65 = (void *)objc_claimAutoreleasedReturnValue();
                        -[PKDashboardPassMessage setIdentifier:](v98, "setIdentifier:", v65);

                        -[PKDashboardPassMessage setReportToAnalytics:](v98, "setReportToAnalytics:", 1);
                        objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", v102->_pass);
                        v66 = (void *)objc_claimAutoreleasedReturnValue();
                        -[PKDashboardPassMessage setAnalyticsReporterSubject:](v98, "setAnalyticsReporterSubject:", v66);

                        objc_msgSend(v94, "addObject:", v98);
                        objc_destroyWeak(&v110);

                        goto LABEL_91;
                      case 4:
                        v98 = objc_alloc_init(PKDashboardPassMessage);
                        PKLocalizedFeatureString();
                        v40 = (void *)objc_claimAutoreleasedReturnValue();
                        -[PKDashboardPassMessage setTitle:](v98, "setTitle:", v40);

                        -[PKDashboardPassMessage localizedReason](v29, "localizedReason");
                        v41 = (void *)objc_claimAutoreleasedReturnValue();
                        v42 = v41;
                        if (!v41)
                        {
                          PKLocalizedFeatureString();
                          v92 = (void *)objc_claimAutoreleasedReturnValue();
                          v42 = v92;
                        }
                        -[PKDashboardPassMessage setMessage:](v98, "setMessage:", v42);
                        if (!v41)

                        PKLocalizedFeatureString();
                        v43 = (void *)objc_claimAutoreleasedReturnValue();
                        -[PKDashboardPassMessage setButtonTitle:](v98, "setButtonTitle:", v43);

                        -[PKDashboardPaymentPassDataSource _messageImageWithName:extension:](v102, "_messageImageWithName:extension:", CFSTR("MessageAlert"), CFSTR("pdf"));
                        v44 = (void *)objc_claimAutoreleasedReturnValue();
                        -[PKDashboardPassMessage setImage:](v98, "setImage:", v44);

                        v107[0] = MEMORY[0x1E0C809B0];
                        v107[1] = 3221225472;
                        v107[2] = __60__PKDashboardPaymentPassDataSource__messagesForPhysicalCard__block_invoke_17;
                        v107[3] = &unk_1E3E61310;
                        objc_copyWeak(&v108, &location);
                        -[PKDashboardPassMessage setActionOnButtonPress:](v98, "setActionOnButtonPress:", v107);
                        -[PKDashboardPaymentPassDataSource _physicalCardMessageIdentifierFromIdentifier:physicalCard:](v102, "_physicalCardMessageIdentifierFromIdentifier:physicalCard:", CFSTR("physicalCardOrderIssue"), v12);
                        v45 = (void *)objc_claimAutoreleasedReturnValue();
                        -[PKDashboardPassMessage setIdentifier:](v98, "setIdentifier:", v45);

                        -[PKDashboardPassMessage setReportToAnalytics:](v98, "setReportToAnalytics:", 1);
                        objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", v102->_pass);
                        v46 = (void *)objc_claimAutoreleasedReturnValue();
                        -[PKDashboardPassMessage setAnalyticsReporterSubject:](v98, "setAnalyticsReporterSubject:", v46);

                        objc_msgSend(v94, "addObject:", v98);
                        objc_destroyWeak(&v108);
                        goto LABEL_91;
                      default:
                        break;
                    }
                  }
                }
              }
            }

            v25 = v101;
LABEL_93:

          }
          self = v102;
        }
        v10 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v135, v144, 16);
      }
      while (v10);
    }

    if (-[PKAccount state](v102->_account, "state") == 1
      && -[PKPhysicalCardController physicalCardBlocked](v102->_physicalCardController, "physicalCardBlocked"))
    {
      v82 = objc_alloc_init(PKDashboardPassMessage);
      -[PKDashboardPassMessage setIdentifier:](v82, "setIdentifier:", CFSTR("physicalCardSuspended"));
      PKLocalizedFeatureString();
      v83 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setTitle:](v82, "setTitle:", v83);

      PKLocalizedFeatureString();
      v84 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setMessage:](v82, "setMessage:", v84);

      -[PKDashboardPaymentPassDataSource _messageImageWithName:extension:](v102, "_messageImageWithName:extension:", CFSTR("MessageAlert"), CFSTR("pdf"));
      v85 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setImage:](v82, "setImage:", v85);

      PKLocalizedFeatureString();
      v86 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setButtonTitle:](v82, "setButtonTitle:", v86);

      v105[0] = MEMORY[0x1E0C809B0];
      v105[1] = 3221225472;
      v105[2] = __60__PKDashboardPaymentPassDataSource__messagesForPhysicalCard__block_invoke_18;
      v105[3] = &unk_1E3E61310;
      objc_copyWeak(&v106, &location);
      -[PKDashboardPassMessage setActionOnButtonPress:](v82, "setActionOnButtonPress:", v105);
      objc_msgSend(v94, "addObject:", v82);
      objc_destroyWeak(&v106);

    }
    if (objc_msgSend(v94, "count", v89))
      v87 = (void *)objc_msgSend(v94, "copy");
    else
      v87 = 0;

    objc_destroyWeak(&location);
  }
  else
  {
    v87 = 0;
  }
  return v87;
}

void __60__PKDashboardPaymentPassDataSource__messagesForPhysicalCard__block_invoke(uint64_t a1)
{
  void *v1;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  PKSharedCacheSetBoolForKey();
  v1 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend(WeakRetained, "reloadMessages");
    v1 = WeakRetained;
  }

}

void __60__PKDashboardPaymentPassDataSource__messagesForPhysicalCard__block_invoke_2(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  void *v3;
  _QWORD v4[5];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = WeakRetained;
  if (WeakRetained)
  {
    v3 = (void *)*((_QWORD *)WeakRetained + 49);
    v4[0] = MEMORY[0x1E0C809B0];
    v4[1] = 3221225472;
    v4[2] = __60__PKDashboardPaymentPassDataSource__messagesForPhysicalCard__block_invoke_3;
    v4[3] = &unk_1E3E73350;
    v4[4] = v2;
    objc_msgSend(v3, "orderFlowViewControllerForReason:content:completion:", 0, 0, v4);
  }

}

void __60__PKDashboardPaymentPassDataSource__messagesForPhysicalCard__block_invoke_3(uint64_t a1, void *a2, void *a3)
{
  PKNavigationController *v5;
  void *v6;
  id v7;

  v7 = a2;
  if (v7)
  {
    v5 = -[PKNavigationController initWithRootViewController:]([PKNavigationController alloc], "initWithRootViewController:", v7);
    -[PKNavigationController setModalPresentationStyle:](v5, "setModalPresentationStyle:", 2);
  }
  else
  {
    v5 = (PKNavigationController *)PKAlertForDisplayableErrorWithHandlers(a3, 0, 0, 0);
  }
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "pkui_viewControllerFromResponderChain");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "presentViewController:animated:completion:", v5, 1, 0);

}

BOOL __60__PKDashboardPaymentPassDataSource__messagesForPhysicalCard__block_invoke_4(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "state") == 1;
}

void __60__PKDashboardPaymentPassDataSource__messagesForPhysicalCard__block_invoke_5(uint64_t a1)
{
  id v2;

  objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "openURL:configuration:completionHandler:", *(_QWORD *)(a1 + 32), 0, 0);

}

void __60__PKDashboardPaymentPassDataSource__messagesForPhysicalCard__block_invoke_6(uint64_t a1)
{
  void *v1;
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(MEMORY[0x1E0C99D68], "date");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  PKSharedCacheSetObjectForKey();

  v2 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend(WeakRetained, "reloadMessages");
    v2 = WeakRetained;
  }

}

void __60__PKDashboardPaymentPassDataSource__messagesForPhysicalCard__block_invoke_7(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained, "_presentActivatePhysicalCard:accountUser:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
    WeakRetained = v3;
  }

}

void __60__PKDashboardPaymentPassDataSource__messagesForPhysicalCard__block_invoke_8(uint64_t a1)
{
  id v2;

  objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "openURL:configuration:completionHandler:", *(_QWORD *)(a1 + 32), 0, 0);

}

void __60__PKDashboardPaymentPassDataSource__messagesForPhysicalCard__block_invoke_9(uint64_t a1)
{
  PKBusinessChatPhysicalCardContext *v1;
  void *v2;
  void *v3;
  void *v4;
  PKBusinessChatPhysicalCardContext *v5;
  id *WeakRetained;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v1 = [PKBusinessChatPhysicalCardContext alloc];
    objc_msgSend(WeakRetained[1], "frontmostPassView");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "pass");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "paymentPass");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = -[PKBusinessChatPhysicalCardContext initWithPaymentPass:intent:](v1, "initWithPaymentPass:intent:", v4, 3);

    objc_msgSend(WeakRetained, "_presentAccountResolution:forBusinessChatContext:", 3, v5);
  }

}

void __60__PKDashboardPaymentPassDataSource__messagesForPhysicalCard__block_invoke_10(uint64_t a1)
{
  void *v1;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(MEMORY[0x1E0C99D68], "date");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  PKSharedCacheSetObjectForKey();

  objc_msgSend(WeakRetained, "reloadMessages");
}

void __60__PKDashboardPaymentPassDataSource__messagesForPhysicalCard__block_invoke_11(uint64_t a1)
{
  void *v1;
  id v2;

  objc_msgSend(*(id *)(a1 + 32), "shipmentTrackingURL");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "openURL:configuration:completionHandler:", v2, 0, 0);

}

void __60__PKDashboardPaymentPassDataSource__messagesForPhysicalCard__block_invoke_12(uint64_t a1)
{
  PKBusinessChatPhysicalCardContext *v1;
  void *v2;
  void *v3;
  void *v4;
  PKBusinessChatPhysicalCardContext *v5;
  id *WeakRetained;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v1 = [PKBusinessChatPhysicalCardContext alloc];
    objc_msgSend(WeakRetained[1], "frontmostPassView");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "pass");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "paymentPass");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = -[PKBusinessChatPhysicalCardContext initWithPaymentPass:intent:](v1, "initWithPaymentPass:intent:", v4, 2);

    objc_msgSend(WeakRetained, "_presentAccountResolution:forBusinessChatContext:", 3, v5);
  }

}

void __60__PKDashboardPaymentPassDataSource__messagesForPhysicalCard__block_invoke_13(uint64_t a1)
{
  void *v1;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(MEMORY[0x1E0C99D68], "date");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  PKSharedCacheSetObjectForKey();

  objc_msgSend(WeakRetained, "reloadMessages");
}

void __60__PKDashboardPaymentPassDataSource__messagesForPhysicalCard__block_invoke_14()
{
  void *v0;
  id v1;

  objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", CFSTR("https://support.apple.com/kb/HT209434?cid=iOS_UI_AppleCard_article_HT209434#activate"));
  v1 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "openURL:configuration:completionHandler:", v1, 0, 0);

}

void __60__PKDashboardPaymentPassDataSource__messagesForPhysicalCard__block_invoke_15(uint64_t a1)
{
  void *v1;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    objc_msgSend(MEMORY[0x1E0C99D68], "date");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    PKSharedCacheSetObjectForKey();

    objc_msgSend(WeakRetained, "reloadMessages");
  }

}

void __60__PKDashboardPaymentPassDataSource__messagesForPhysicalCard__block_invoke_16(uint64_t a1)
{
  PKBusinessChatPhysicalCardContext *v1;
  void *v2;
  void *v3;
  void *v4;
  PKBusinessChatPhysicalCardContext *v5;
  id *WeakRetained;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v1 = [PKBusinessChatPhysicalCardContext alloc];
    objc_msgSend(WeakRetained[1], "frontmostPassView");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "pass");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "paymentPass");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = -[PKBusinessChatPhysicalCardContext initWithPaymentPass:intent:](v1, "initWithPaymentPass:intent:", v4, 1);

    objc_msgSend(WeakRetained, "_presentAccountResolution:forBusinessChatContext:", 3, v5);
  }

}

void __60__PKDashboardPaymentPassDataSource__messagesForPhysicalCard__block_invoke_17(uint64_t a1)
{
  PKBusinessChatPhysicalCardContext *v1;
  void *v2;
  void *v3;
  void *v4;
  PKBusinessChatPhysicalCardContext *v5;
  id *WeakRetained;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v1 = [PKBusinessChatPhysicalCardContext alloc];
    objc_msgSend(WeakRetained[1], "frontmostPassView");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "pass");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "paymentPass");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = -[PKBusinessChatPhysicalCardContext initWithPaymentPass:intent:](v1, "initWithPaymentPass:intent:", v4, 1);

    objc_msgSend(WeakRetained, "_presentAccountResolution:forBusinessChatContext:", 3, v5);
  }

}

void __60__PKDashboardPaymentPassDataSource__messagesForPhysicalCard__block_invoke_18(uint64_t a1)
{
  PKBusinessChatAccountStateContext *v1;
  _QWORD *WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v1 = -[PKBusinessChatAccountStateContext initWithAccount:paymentPass:eligibleForRecoveryPaymentPlan:]([PKBusinessChatAccountStateContext alloc], "initWithAccount:paymentPass:eligibleForRecoveryPaymentPlan:", WeakRetained[48], WeakRetained[109], 0);
    objc_msgSend(WeakRetained, "_presentAccountResolution:forBusinessChatContext:", 2, v1);

  }
}

- (id)_physicalCardMessageIdentifierFromIdentifier:(id)a3 physicalCard:(id)a4
{
  objc_class *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  void *v10;

  v5 = (objc_class *)MEMORY[0x1E0CB3940];
  v6 = a4;
  v7 = a3;
  v8 = [v5 alloc];
  objc_msgSend(v6, "identifier");
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  v10 = (void *)objc_msgSend(v8, "initWithFormat:", CFSTR("%@-%@"), v7, v9);
  return v10;
}

- (id)_lastPhysicalCardMessageDateKeyForPhysicalCardIdentifier:(id)a3
{
  objc_class *v3;
  id v4;
  id v5;
  void *v6;

  if (a3)
  {
    v3 = (objc_class *)MEMORY[0x1E0CB3940];
    v4 = a3;
    v5 = [v3 alloc];
    v6 = (void *)objc_msgSend(v5, "initWithFormat:", CFSTR("%@-%@"), *MEMORY[0x1E0D6B7D8], v4);

  }
  else
  {
    v6 = 0;
  }
  return v6;
}

- (void)_presentActivatePhysicalCard:(id)a3 accountUser:(id)a4
{
  id v6;
  id v7;
  PKNavigationController *v8;
  void *v9;
  PKPhysicalCardManualActivationViewController *v10;

  v6 = a4;
  v7 = a3;
  v10 = -[PKPhysicalCardManualActivationViewController initWithAccountService:account:accountUser:paymentPass:physicalCard:activationCode:]([PKPhysicalCardManualActivationViewController alloc], "initWithAccountService:account:accountUser:paymentPass:physicalCard:activationCode:", self->_accountService, self->_account, v6, self->_pass, v7, 0);

  v8 = -[PKNavigationController initWithRootViewController:]([PKNavigationController alloc], "initWithRootViewController:", v10);
  -[UIView pkui_viewControllerFromResponderChain](self->_groupView, "pkui_viewControllerFromResponderChain");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "presentViewController:animated:completion:", v8, 1, 0);

}

- (id)_downloadMessageIconURLAndReloadIfNecessary:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  _QWORD v11[4];
  id v12;
  id v13;
  id location;

  v4 = a3;
  if (!v4)
    goto LABEL_9;
  os_unfair_lock_lock(&self->_lockIcons);
  -[NSMutableDictionary objectForKey:](self->_icons, "objectForKey:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  os_unfair_lock_unlock(&self->_lockIcons);
  if (!v5)
  {
    objc_msgSend(MEMORY[0x1E0D66EA8], "sharedImageAssetDownloader");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "cachedDataForURL:", v4);
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0DC3870], "imageWithData:", v7);
    v8 = objc_claimAutoreleasedReturnValue();
    if (v8)
    {
      v5 = (void *)v8;
      os_unfair_lock_lock(&self->_lockIcons);
      -[NSMutableDictionary setObject:forKey:](self->_icons, "setObject:forKey:", v5, v4);
      os_unfair_lock_unlock(&self->_lockIcons);

      goto LABEL_10;
    }

    os_unfair_lock_lock(&self->_lockIcons);
    if ((-[NSMutableSet containsObject:](self->_iconDownloads, "containsObject:", v4) & 1) != 0
      || (-[NSMutableSet containsObject:](self->_iconFailedDownloads, "containsObject:", v4) & 1) != 0)
    {
      os_unfair_lock_unlock(&self->_lockIcons);
    }
    else
    {
      -[NSMutableSet addObject:](self->_iconDownloads, "addObject:", v4);
      os_unfair_lock_unlock(&self->_lockIcons);
      objc_initWeak(&location, self);
      objc_msgSend(MEMORY[0x1E0D66EA8], "sharedImageAssetDownloader");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v11[0] = MEMORY[0x1E0C809B0];
      v11[1] = 3221225472;
      v11[2] = __80__PKDashboardPaymentPassDataSource__downloadMessageIconURLAndReloadIfNecessary___block_invoke;
      v11[3] = &unk_1E3E733D8;
      objc_copyWeak(&v13, &location);
      v12 = v4;
      objc_msgSend(v9, "downloadFromUrl:completionHandler:", v12, v11);

      objc_destroyWeak(&v13);
      objc_destroyWeak(&location);
    }
LABEL_9:
    v5 = 0;
  }
LABEL_10:

  return v5;
}

void __80__PKDashboardPaymentPassDataSource__downloadMessageIconURLAndReloadIfNecessary___block_invoke(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  os_unfair_lock_s *WeakRetained;
  os_unfair_lock_s *v7;
  int os_unfair_lock_opaque_low;
  uint64_t v9;
  void *v10;
  id v11;

  v11 = a2;
  WeakRetained = (os_unfair_lock_s *)objc_loadWeakRetained((id *)(a1 + 40));
  v7 = WeakRetained;
  if (WeakRetained)
  {
    os_unfair_lock_lock(WeakRetained + 130);
    objc_msgSend(*(id *)&v7[132]._os_unfair_lock_opaque, "removeObject:", *(_QWORD *)(a1 + 32));
    if (a4 || !objc_msgSend(v11, "length"))
    {
      objc_msgSend(*(id *)&v7[134]._os_unfair_lock_opaque, "addObject:", *(_QWORD *)(a1 + 32));
    }
    else if (objc_msgSend(v11, "length"))
    {
      objc_msgSend(MEMORY[0x1E0DC3870], "imageWithData:", v11);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      if (v10)
      {
        LOBYTE(v7[138]._os_unfair_lock_opaque) = 1;
        objc_msgSend(*(id *)&v7[136]._os_unfair_lock_opaque, "setObject:forKey:", v10, *(_QWORD *)(a1 + 32));
      }

    }
    os_unfair_lock_opaque_low = LOBYTE(v7[138]._os_unfair_lock_opaque);
    v9 = objc_msgSend(*(id *)&v7[132]._os_unfair_lock_opaque, "count");
    os_unfair_lock_unlock(v7 + 130);
    if (os_unfair_lock_opaque_low && !v9)
    {
      os_unfair_lock_lock(v7 + 130);
      LOBYTE(v7[138]._os_unfair_lock_opaque) = 0;
      os_unfair_lock_unlock(v7 + 130);
      -[os_unfair_lock_s reloadMessages](v7, "reloadMessages");
    }
  }

}

- (void)_messagesForPeerPaymentPendingRequestsWithCompletion:(id)a3
{
  id v4;
  id v5;
  _QWORD v6[4];
  id v7;
  id v8;
  id location;

  v4 = a3;
  objc_initWeak(&location, self);
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __89__PKDashboardPaymentPassDataSource__messagesForPeerPaymentPendingRequestsWithCompletion___block_invoke;
  v6[3] = &unk_1E3E61C30;
  objc_copyWeak(&v8, &location);
  v5 = v4;
  v7 = v5;
  -[PKDashboardPaymentPassDataSource reloadPeerPaymentPendingRequestsWithCompletion:](self, "reloadPeerPaymentPendingRequestsWithCompletion:", v6);

  objc_destroyWeak(&v8);
  objc_destroyWeak(&location);

}

void __89__PKDashboardPaymentPassDataSource__messagesForPeerPaymentPendingRequestsWithCompletion___block_invoke(uint64_t a1, int a2)
{
  id *WeakRetained;
  id *v4;
  uint64_t i;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  PKDashboardPassMessage *v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  id v29;
  id *from;
  id obj;
  void *v32;
  void *v33;
  void *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  id *v38;
  id v39;
  void *v40;
  void *v41;
  _QWORD v42[5];
  id v43;
  id v44;
  _QWORD v45[5];
  id v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  _BYTE v51[128];
  uint64_t v52;

  v52 = *MEMORY[0x1E0C80C00];
  from = (id *)(a1 + 40);
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  v4 = WeakRetained;
  if (!a2 || !WeakRetained)
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
    goto LABEL_33;
  }
  v29 = objc_alloc_init(MEMORY[0x1E0C99E10]);
  v47 = 0u;
  v48 = 0u;
  v49 = 0u;
  v50 = 0u;
  v38 = v4;
  obj = v4[86];
  v37 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v47, v51, 16);
  if (!v37)
    goto LABEL_31;
  v35 = *(_QWORD *)v48;
  do
  {
    for (i = 0; i != v37; ++i)
    {
      if (*(_QWORD *)v48 != v35)
        objc_enumerationMutation(obj);
      v6 = *(void **)(*((_QWORD *)&v47 + 1) + 8 * i);
      objc_msgSend(v38, "_contactResolver");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "requesterAddress");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "contactForHandle:", v8);
      v9 = (id)objc_claimAutoreleasedReturnValue();

      v10 = (void *)MEMORY[0x1E0D67400];
      objc_msgSend(v6, "requesterAddress");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "displayNameForCounterpartHandle:contact:", v11, v9);
      v12 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v6, "currencyAmount");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "amount");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "currency");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      PKFormattedCurrencyStringFromNumber();
      v16 = (void *)objc_claimAutoreleasedReturnValue();

      if (v12 && v16)
      {
        objc_msgSend(v6, "expiryDate");
        v41 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v6, "lastDismissedDate");
        v40 = (void *)objc_claimAutoreleasedReturnValue();
        if (!v40)
          goto LABEL_16;
        objc_msgSend(MEMORY[0x1E0C99D48], "currentCalendar");
        v17 = (PKDashboardPassMessage *)objc_claimAutoreleasedReturnValue();
        -[PKDashboardPassMessage components:fromDate:toDate:options:](v17, "components:fromDate:toDate:options:", 16, v40, v41, 0);
        v18 = (id)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0C99D68], "date");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        -[PKDashboardPassMessage components:fromDate:toDate:options:](v17, "components:fromDate:toDate:options:", 16, v19, v41, 0);
        v39 = (id)objc_claimAutoreleasedReturnValue();

        if (objc_msgSend(v18, "day") != 1
          && objc_msgSend(v18, "day")
          && (objc_msgSend(v18, "day") < 2 || objc_msgSend(v39, "day") <= 1))
        {

LABEL_16:
          v17 = objc_alloc_init(PKDashboardPassMessage);
          objc_msgSend(v6, "requestToken");
          v36 = (void *)objc_claimAutoreleasedReturnValue();
          v39 = v12;
          PKLocalizedPeerPaymentString(CFSTR("PEER_PAYMENT_PENDING_REQUEST_SECONDARY_TITLE_FORMAT"), CFSTR("%@"), v16);
          v34 = (void *)objc_claimAutoreleasedReturnValue();
          -[PKDashboardPassMessage setType:](v17, "setType:", 3);
          -[PKDashboardPassMessage setIdentifier:](v17, "setIdentifier:", v36);
          -[PKDashboardPassMessage setTitle:](v17, "setTitle:", v39);
          -[PKDashboardPassMessage setSecondaryTitle:](v17, "setSecondaryTitle:", v34);
          objc_msgSend(MEMORY[0x1E0C99D48], "currentCalendar");
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0C99D68], "date");
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          PKStartOfDay();
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v20, "components:fromDate:toDate:options:", 16, v22, v41, 0);
          v33 = (void *)objc_claimAutoreleasedReturnValue();

          v23 = objc_msgSend(v33, "day");
          if (v23 == 1)
          {
            PKLocalizedPeerPaymentString(CFSTR("PEER_PAYMENT_PENDING_REQUEST_EXPIRATION_BADGE_VALUE_TOMORROW"));
            v32 = (void *)objc_claimAutoreleasedReturnValue();
          }
          else
          {
            if (v23)
              PKLocalizedPeerPaymentString(CFSTR("PEER_PAYMENT_PENDING_REQUEST_EXPIRATION_BADGE_FORMAT"), CFSTR("%ld"), v23);
            else
              PKLocalizedPeerPaymentString(CFSTR("PEER_PAYMENT_PENDING_REQUEST_EXPIRATION_BADGE_VALUE_TODAY"));
            v32 = (void *)objc_claimAutoreleasedReturnValue();
          }
          objc_msgSend(v6, "memo");
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          if (objc_msgSend(v24, "length"))
          {
            -[PKDashboardPassMessage setMessage:](v17, "setMessage:", v24);
            -[PKDashboardPassMessage setSecondaryMessage:](v17, "setSecondaryMessage:", v32);
          }
          else
          {
            -[PKDashboardPassMessage setMessage:](v17, "setMessage:", v32);
          }
          if (!v9)
          {
            v9 = objc_alloc_init(MEMORY[0x1E0C97360]);
            objc_msgSend(v9, "setContactType:", 0);
          }
          -[PKDashboardPassMessage setAvatarContact:](v17, "setAvatarContact:", v9);
          PKLocalizedPeerPaymentString(CFSTR("PEER_PAYMENT_PENDING_REQUEST_ACTION"));
          v25 = (void *)objc_claimAutoreleasedReturnValue();
          -[PKDashboardPassMessage setButtonTitle:](v17, "setButtonTitle:", v25);
          -[PKDashboardPassMessage setShowSpinner:](v17, "setShowSpinner:", objc_msgSend(v36, "isEqualToString:", v38[88]));
          v45[0] = MEMORY[0x1E0C809B0];
          v45[1] = 3221225472;
          v45[2] = __89__PKDashboardPaymentPassDataSource__messagesForPeerPaymentPendingRequestsWithCompletion___block_invoke_2;
          v45[3] = &unk_1E3E61B68;
          objc_copyWeak(&v46, from);
          v45[4] = v6;
          -[PKDashboardPassMessage setActionOnButtonPress:](v17, "setActionOnButtonPress:", v45);
          v42[0] = MEMORY[0x1E0C809B0];
          v42[1] = 3221225472;
          v42[2] = __89__PKDashboardPaymentPassDataSource__messagesForPeerPaymentPendingRequestsWithCompletion___block_invoke_3;
          v42[3] = &unk_1E3E61EE8;
          objc_copyWeak(&v44, from);
          v42[4] = v6;
          v18 = v36;
          v43 = v18;
          -[PKDashboardPassMessage setActionOnDismiss:](v17, "setActionOnDismiss:", v42);
          objc_msgSend(v29, "addObject:", v17);

          objc_destroyWeak(&v44);
          objc_destroyWeak(&v46);

        }
      }

    }
    v37 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v47, v51, 16);
  }
  while (v37);
LABEL_31:

  v26 = *(_QWORD *)(a1 + 32);
  v27 = (void *)objc_msgSend(v29, "copy");
  (*(void (**)(uint64_t, void *))(v26 + 16))(v26, v27);

  v4 = v38;
LABEL_33:

}

void __89__PKDashboardPaymentPassDataSource__messagesForPeerPaymentPendingRequestsWithCompletion___block_invoke_2(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained, "_pendingRequestActionButtonPressedWithRequest:", *(_QWORD *)(a1 + 32));
    WeakRetained = v3;
  }

}

void __89__PKDashboardPaymentPassDataSource__messagesForPeerPaymentPendingRequestsWithCompletion___block_invoke_3(uint64_t a1)
{
  id *v2;
  id *WeakRetained;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  id v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  _QWORD v22[4];
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  _QWORD v27[5];
  id v28;

  v2 = (id *)(a1 + 48);
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v4 = (void *)MEMORY[0x1E0DC3450];
    PKLocalizedPeerPaymentString(CFSTR("PEER_PAYMENT_PENDING_REQUEST_DISMISS_ALERT_TITLE"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    PKLocalizedPeerPaymentString(CFSTR("PEER_PAYMENT_PENDING_REQUEST_DISMISS_ALERT_MESSAGE"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "alertControllerWithTitle:message:preferredStyle:", v5, v6, 1);
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    v8 = (void *)MEMORY[0x1E0DC3448];
    PKLocalizedPeerPaymentString(CFSTR("PEER_PAYMENT_PENDING_REQUEST_DISMISS_ALERT_ACTION_DISMISS"));
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = MEMORY[0x1E0C809B0];
    v27[0] = MEMORY[0x1E0C809B0];
    v27[1] = 3221225472;
    v27[2] = __89__PKDashboardPaymentPassDataSource__messagesForPeerPaymentPendingRequestsWithCompletion___block_invoke_4;
    v27[3] = &unk_1E3E69FE8;
    objc_copyWeak(&v28, v2);
    v27[4] = *(_QWORD *)(a1 + 32);
    objc_msgSend(v8, "actionWithTitle:style:handler:", v9, 0, v27);
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    v12 = (void *)MEMORY[0x1E0DC3448];
    PKLocalizedPeerPaymentString(CFSTR("PEER_PAYMENT_PENDING_REQUEST_DISMISS_ALERT_ACTION_DECLINE"));
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v22[0] = v10;
    v22[1] = 3221225472;
    v22[2] = __89__PKDashboardPaymentPassDataSource__messagesForPeerPaymentPendingRequestsWithCompletion___block_invoke_5;
    v22[3] = &unk_1E3E73478;
    objc_copyWeak(&v26, v2);
    v14 = *(id *)(a1 + 40);
    v15 = *(_QWORD *)(a1 + 32);
    v23 = v14;
    v24 = v15;
    v16 = v7;
    v25 = v16;
    objc_msgSend(v12, "actionWithTitle:style:handler:", v13, 0, v22);
    v17 = (void *)objc_claimAutoreleasedReturnValue();

    v18 = (void *)MEMORY[0x1E0DC3448];
    PKLocalizedPeerPaymentString(CFSTR("PEER_PAYMENT_PENDING_REQUEST_DISMISS_ALERT_ACTION_CANCEL"));
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "actionWithTitle:style:handler:", v19, 1, 0);
    v20 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v16, "addAction:", v17);
    objc_msgSend(v16, "addAction:", v11);
    objc_msgSend(v16, "addAction:", v20);
    objc_msgSend(v16, "setPreferredAction:", v17);
    PKAccessibilityIDAlertSet(v16, (void *)*MEMORY[0x1E0D67A28]);
    objc_msgSend(v11, "setAccessibilityIdentifier:", *MEMORY[0x1E0D67FE0]);
    objc_msgSend(WeakRetained[1], "pkui_viewControllerFromResponderChain");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "presentViewController:animated:completion:", v16, 1, 0);

    objc_destroyWeak(&v26);
    objc_destroyWeak(&v28);

  }
}

void __89__PKDashboardPaymentPassDataSource__messagesForPeerPaymentPendingRequestsWithCompletion___block_invoke_4(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained, "dismissPendingRequestDashboardMessageWithRequest:", *(_QWORD *)(a1 + 32));
    WeakRetained = v3;
  }

}

void __89__PKDashboardPaymentPassDataSource__messagesForPeerPaymentPendingRequestsWithCompletion___block_invoke_5(id *a1, void *a2)
{
  id v3;
  id WeakRetained;
  _QWORD *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  _QWORD v11[4];
  id v12;
  id v13;
  id v14;
  id v15;

  v3 = a2;
  WeakRetained = objc_loadWeakRetained(a1 + 7);
  v5 = WeakRetained;
  if (WeakRetained && !*((_QWORD *)WeakRetained + 88))
  {
    objc_storeStrong((id *)WeakRetained + 88, a1[4]);
    objc_msgSend(v5, "reloadMessages");
    v6 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D673F8]), "initWithPeerPaymentWebService:", v5[108]);
    v7 = *MEMORY[0x1E0D6B210];
    objc_msgSend(a1[5], "requestToken");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v11[0] = MEMORY[0x1E0C809B0];
    v11[1] = 3221225472;
    v11[2] = __89__PKDashboardPaymentPassDataSource__messagesForPeerPaymentPendingRequestsWithCompletion___block_invoke_6;
    v11[3] = &unk_1E3E73450;
    objc_copyWeak(&v15, a1 + 7);
    v12 = a1[4];
    v9 = a1[6];
    v10 = a1[5];
    v13 = v9;
    v14 = v10;
    objc_msgSend(v6, "performPendingRequestAction:withRequestToken:completion:", v7, v8, v11);

    objc_destroyWeak(&v15);
  }

}

void __89__PKDashboardPaymentPassDataSource__messagesForPeerPaymentPendingRequestsWithCompletion___block_invoke_6(uint64_t a1, char a2, uint64_t a3, void *a4)
{
  id v6;
  id WeakRetained;
  void *v8;
  void *v9;
  NSObject *v10;
  void *v11;
  _QWORD block[4];
  id v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  uint8_t buf[4];
  void *v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v6 = a4;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  v8 = WeakRetained;
  if (WeakRetained)
  {
    v9 = (void *)*((_QWORD *)WeakRetained + 88);
    *((_QWORD *)WeakRetained + 88) = 0;

    objc_msgSend(v8, "reloadMessages");
    if ((a2 & 1) != 0)
    {
      objc_msgSend(v8, "dismissPendingRequestDashboardMessageWithRequest:", *(_QWORD *)(a1 + 48));
    }
    else
    {
      PKLogFacilityTypeGetObject();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend(v6, "localizedDescription");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138412290;
        v19 = v11;
        _os_log_impl(&dword_19D178000, v10, OS_LOG_TYPE_DEFAULT, "PKDashboardPaymentPassDataSource: Error attempting to reject pending request: %@", buf, 0xCu);

      }
      block[0] = MEMORY[0x1E0C809B0];
      block[1] = 3221225472;
      block[2] = __89__PKDashboardPaymentPassDataSource__messagesForPeerPaymentPendingRequestsWithCompletion___block_invoke_999;
      block[3] = &unk_1E3E73428;
      v13 = v6;
      objc_copyWeak(&v17, (id *)(a1 + 56));
      v14 = *(id *)(a1 + 32);
      v15 = *(id *)(a1 + 40);
      v16 = v8;
      dispatch_async(MEMORY[0x1E0C80D38], block);

      objc_destroyWeak(&v17);
    }
  }

}

void __89__PKDashboardPaymentPassDataSource__messagesForPeerPaymentPendingRequestsWithCompletion___block_invoke_999(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  _QWORD v12[4];
  id v13;
  id v14;
  id v15;

  objc_msgSend(*(id *)(a1 + 32), "userInfo");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = (void *)MEMORY[0x1E0DC3450];
  objc_msgSend(v2, "objectForKey:", *MEMORY[0x1E0CB2D68]);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "objectForKey:", *MEMORY[0x1E0CB2D80]);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "alertControllerWithTitle:message:preferredStyle:", v4, v5, 1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = (void *)MEMORY[0x1E0DC3448];
  PKLocalizedString(CFSTR("OK_BUTTON_TITLE"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 3221225472;
  v12[2] = __89__PKDashboardPaymentPassDataSource__messagesForPeerPaymentPendingRequestsWithCompletion___block_invoke_2_1002;
  v12[3] = &unk_1E3E73400;
  objc_copyWeak(&v15, (id *)(a1 + 64));
  v9 = v2;
  v13 = v9;
  v14 = *(id *)(a1 + 40);
  objc_msgSend(v7, "actionWithTitle:style:handler:", v8, 0, v12);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "addAction:", v10);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 56) + 8), "pkui_viewControllerFromResponderChain");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "presentViewController:animated:completion:", v6, 1, 0);

  objc_destroyWeak(&v15);
}

void __89__PKDashboardPaymentPassDataSource__messagesForPeerPaymentPendingRequestsWithCompletion___block_invoke_2_1002(uint64_t a1)
{
  id *WeakRetained;
  void *v3;
  void *v4;
  int v5;
  uint64_t v6;
  void *v8;
  void *v9;
  _QWORD v10[2];

  v10[1] = *MEMORY[0x1E0C80C00];
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    objc_msgSend(*(id *)(a1 + 32), "objectForKey:", *MEMORY[0x1E0CB3388]);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "domain");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v4, "isEqualToString:", *MEMORY[0x1E0D6B2D8]);

    if (v5)
    {
      v6 = objc_msgSend(v3, "code");
      if ((unint64_t)(v6 - 40314) <= 0x13 && ((1 << (v6 - 122)) & 0xC0003) != 0)
      {
        objc_msgSend(WeakRetained[108], "peerPaymentService");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        v10[0] = *(_QWORD *)(a1 + 40);
        objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v10, 1);
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "deletePeerPaymentPendingRequestsForRequestTokens:", v9);

      }
    }

  }
}

- (void)_pendingRequestActionButtonPressedWithRequest:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  PKPeerPaymentRemoteMessagesComposer *v7;
  void *v8;
  PKPeerPaymentRemoteMessagesComposer *v9;
  void *v10;
  _QWORD v11[4];
  id v12;
  PKPeerPaymentRemoteMessagesComposer *v13;
  id v14;
  id location;

  v4 = a3;
  objc_msgSend(v4, "requestToken");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D673F8]), "initWithPeerPaymentWebService:", self->_peerPaymentWebService);
  v7 = [PKPeerPaymentRemoteMessagesComposer alloc];
  -[UIView pkui_viewControllerFromResponderChain](self->_groupView, "pkui_viewControllerFromResponderChain");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = -[PKPeerPaymentRemoteMessagesComposer initWithPeerPaymentController:presentingViewController:actionType:sourceType:](v7, "initWithPeerPaymentController:presentingViewController:actionType:sourceType:", v6, v8, 1, 1);

  if (!self->_incomingRequestActionInProgressRequestToken)
  {
    objc_storeStrong((id *)&self->_incomingRequestActionInProgressRequestToken, v5);
    -[PKDashboardPaymentPassDataSource reloadMessages](self, "reloadMessages");
    objc_initWeak(&location, self);
    objc_msgSend(v4, "requesterAddress");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11[0] = MEMORY[0x1E0C809B0];
    v11[1] = 3221225472;
    v11[2] = __82__PKDashboardPaymentPassDataSource__pendingRequestActionButtonPressedWithRequest___block_invoke;
    v11[3] = &unk_1E3E63B10;
    objc_copyWeak(&v14, &location);
    v12 = v4;
    v13 = v9;
    -[PKPeerPaymentRemoteMessagesComposer validateRecipientWithAddress:completion:](v13, "validateRecipientWithAddress:completion:", v10, v11);

    objc_destroyWeak(&v14);
    objc_destroyWeak(&location);
  }

}

void __82__PKDashboardPaymentPassDataSource__pendingRequestActionButtonPressedWithRequest___block_invoke(id *a1, int a2)
{
  id *v4;
  id *WeakRetained;
  id *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  _QWORD v16[4];
  id v17;
  id v18;
  id v19;

  v4 = a1 + 6;
  WeakRetained = (id *)objc_loadWeakRetained(a1 + 6);
  v6 = WeakRetained;
  if (WeakRetained)
  {
    if (a2)
    {
      v7 = objc_alloc(MEMORY[0x1E0D67468]);
      objc_msgSend(a1[4], "requestToken");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = (void *)objc_msgSend(v7, "initWithRequestToken:deviceScoreIdentifier:", v8, 0);

      v10 = a1[5];
      objc_msgSend(a1[4], "currencyAmount");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(a1[4], "memo");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(a1[4], "sessionID");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6[1], "pkui_viewControllerFromResponderChain");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v16[0] = MEMORY[0x1E0C809B0];
      v16[1] = 3221225472;
      v16[2] = __82__PKDashboardPaymentPassDataSource__pendingRequestActionButtonPressedWithRequest___block_invoke_2;
      v16[3] = &unk_1E3E63B10;
      objc_copyWeak(&v19, v4);
      v17 = a1[5];
      v18 = a1[4];
      objc_msgSend(v10, "presentRemoteMessageComposerWithAmount:requestToken:memo:sessionID:overViewController:completion:", v11, v9, v12, v13, v14, v16);

      objc_destroyWeak(&v19);
    }
    else
    {
      v15 = WeakRetained[88];
      WeakRetained[88] = 0;

      objc_msgSend(v6, "reloadMessages");
    }
  }

}

void __82__PKDashboardPaymentPassDataSource__pendingRequestActionButtonPressedWithRequest___block_invoke_2(uint64_t a1, int a2)
{
  id *WeakRetained;
  id v5;
  void *v6;
  id *v7;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v5 = WeakRetained[88];
    WeakRetained[88] = 0;
    v7 = WeakRetained;

    objc_msgSend(v7[1], "pkui_viewControllerFromResponderChain");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "dismissViewControllerAnimated:completion:", 1, 0);

    if (a2)
      objc_msgSend(v7, "dismissPendingRequestDashboardMessageWithRequest:", *(_QWORD *)(a1 + 40));
    else
      objc_msgSend(v7, "reloadMessages");
    WeakRetained = v7;
  }

}

- (void)dismissPendingRequestDashboardMessageWithRequest:(id)a3
{
  PKPeerPaymentWebService *peerPaymentWebService;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  _QWORD v8[2];

  v8[1] = *MEMORY[0x1E0C80C00];
  peerPaymentWebService = self->_peerPaymentWebService;
  v4 = a3;
  -[PKPeerPaymentWebService peerPaymentService](peerPaymentWebService, "peerPaymentService");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99D68], "date");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setLastDismissedDate:", v6);

  v8[0] = v4;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v8, 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v5, "insertOrUpdatePeerPaymentPendingRequests:shouldScheduleNotifications:", v7, 0);
}

- (id)_messageForSetUpVirtualCardWithFeatureIdentifier:(unint64_t)a3
{
  void *v5;
  char BoolForKey;
  PKDashboardPassMessage *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  _QWORD v21[4];
  id v22;
  _QWORD v23[4];
  id v24;
  id location;
  _QWORD v26[2];
  _QWORD v27[3];

  v27[2] = *MEMORY[0x1E0C80C00];
  PKDismissedKeyForPass();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  BoolForKey = PKSharedCacheGetBoolForKey();

  if ((BoolForKey & 1) != 0
    || a3 == 1
    && (unint64_t)(-[PKPeerPaymentAccount state](self->_peerPaymentAccount, "state") - 5) > 0xFFFFFFFFFFFFFFFDLL)
  {
    v7 = 0;
  }
  else
  {
    v7 = objc_alloc_init(PKDashboardPassMessage);
    -[PKDashboardPassMessage setType:](v7, "setType:", 0);
    -[PKDashboardPassMessage setIdentifier:](v7, "setIdentifier:", CFSTR("virtualCardSetUp"));
    if (a3 == 1)
    {
      PKLocalizedCashVPANString(CFSTR("VIRTUAL_CARD_DASHBOARD_SETUP_TITLE_CASH"));
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setTitle:](v7, "setTitle:", v8);

      PKLocalizedCashVPANString(CFSTR("VIRTUAL_CARD_DASHBOARD_SETUP_BODY_CASH"));
    }
    else
    {
      PKLocalizedVirtualCardString(CFSTR("VIRTUAL_CARD_DASHBOARD_SETUP_TITLE"));
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setTitle:](v7, "setTitle:", v9);

      PKLocalizedVirtualCardString(CFSTR("VIRTUAL_CARD_DASHBOARD_SETUP_BODY"));
    }
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setMessage:](v7, "setMessage:", v10);

    PKLocalizedVirtualCardString(CFSTR("VIRTUAL_CARD_DASHBOARD_SETUP_BUTTON"));
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setButtonTitle:](v7, "setButtonTitle:", v11);

    -[PKDashboardPaymentPassDataSource _virtualCardDashboardImage](self, "_virtualCardDashboardImage");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setImage:](v7, "setImage:", v12);

    PKDefaultPaymentNetworkNameForPaymentPass();
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = (void *)v13;
    if (v13)
    {
      v15 = *MEMORY[0x1E0D694B0];
      v16 = *MEMORY[0x1E0D690E0];
      v26[0] = *MEMORY[0x1E0D68858];
      v26[1] = v16;
      v27[0] = v15;
      v27[1] = v13;
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v27, v26, 2);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setAdditionalEventAnalyticsOnButtonPress:](v7, "setAdditionalEventAnalyticsOnButtonPress:", v17);

    }
    -[PKDashboardPassMessage setReportToAnalytics:](v7, "setReportToAnalytics:", 1);
    objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", self->_pass);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setAnalyticsReporterSubject:](v7, "setAnalyticsReporterSubject:", v18);

    objc_initWeak(&location, self);
    v19 = MEMORY[0x1E0C809B0];
    v23[0] = MEMORY[0x1E0C809B0];
    v23[1] = 3221225472;
    v23[2] = __85__PKDashboardPaymentPassDataSource__messageForSetUpVirtualCardWithFeatureIdentifier___block_invoke;
    v23[3] = &unk_1E3E61310;
    objc_copyWeak(&v24, &location);
    -[PKDashboardPassMessage setActionOnButtonPress:](v7, "setActionOnButtonPress:", v23);
    v21[0] = v19;
    v21[1] = 3221225472;
    v21[2] = __85__PKDashboardPaymentPassDataSource__messageForSetUpVirtualCardWithFeatureIdentifier___block_invoke_2;
    v21[3] = &unk_1E3E61310;
    objc_copyWeak(&v22, &location);
    -[PKDashboardPassMessage setActionOnDismiss:](v7, "setActionOnDismiss:", v21);
    objc_destroyWeak(&v22);
    objc_destroyWeak(&v24);
    objc_destroyWeak(&location);

  }
  return v7;
}

void __85__PKDashboardPaymentPassDataSource__messageForSetUpVirtualCardWithFeatureIdentifier___block_invoke(uint64_t a1)
{
  PKVirtualCardEnrollmentViewController *v1;
  PKNavigationController *v2;
  void *v3;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v1 = -[PKVirtualCardEnrollmentViewController initWithPaymentPass:context:delegate:]([PKVirtualCardEnrollmentViewController alloc], "initWithPaymentPass:context:delegate:", *((_QWORD *)WeakRetained + 109), 0);
    v2 = -[PKNavigationController initWithRootViewController:]([PKNavigationController alloc], "initWithRootViewController:", v1);
    -[PKNavigationController setModalPresentationStyle:](v2, "setModalPresentationStyle:", 2);
    objc_msgSend(*((id *)WeakRetained + 1), "pkui_viewControllerFromResponderChain");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "presentViewController:animated:completion:", v2, 1, 0);

  }
}

void __85__PKDashboardPaymentPassDataSource__messageForSetUpVirtualCardWithFeatureIdentifier___block_invoke_2(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  void *v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    PKDismissedKeyForPass();
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    PKSharedCacheSetBoolForKey();

    objc_msgSend(v3, "reloadMessages");
    WeakRetained = v3;
  }

}

- (id)_messageForVirtualCardEnabledWithFeatureIdentifier:(unint64_t)a3
{
  void *v5;
  char BoolForKey;
  PKDashboardPassMessage *v8;
  void *v9;
  void *v10;
  _QWORD *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  _QWORD v17[4];
  id v18;
  id location;
  _QWORD v20[4];
  id v21;

  PKDismissedKeyForPass();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  BoolForKey = PKSharedCacheGetBoolForKey();

  if ((BoolForKey & 1) != 0
    || a3 == 1
    && (unint64_t)(-[PKPeerPaymentAccount state](self->_peerPaymentAccount, "state") - 5) > 0xFFFFFFFFFFFFFFFDLL)
  {
    return 0;
  }
  v8 = objc_alloc_init(PKDashboardPassMessage);
  -[PKDashboardPassMessage setType:](v8, "setType:", 0);
  -[PKDashboardPassMessage setIdentifier:](v8, "setIdentifier:", CFSTR("virtualCardEnabled"));
  PKLocalizedVirtualCardString(CFSTR("VIRTUAL_CARD_DASHBOARD_ENABLED_TITLE"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPassMessage setTitle:](v8, "setTitle:", v9);

  if (a3 == 1)
  {
    PKLocalizedCashVPANString(CFSTR("VIRTUAL_CARD_DASHBOARD_ENABLED_BODY_CASH"));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = (_QWORD *)MEMORY[0x1E0D69B50];
  }
  else
  {
    PKLocalizedVirtualCardString(CFSTR("VIRTUAL_CARD_DASHBOARD_ENABLED_BODY"));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = (_QWORD *)MEMORY[0x1E0D6BC88];
  }
  -[PKDashboardPassMessage setMessage:](v8, "setMessage:", v10);

  -[PKDashboardPaymentPassDataSource _virtualCardDashboardImage](self, "_virtualCardDashboardImage");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPassMessage setImage:](v8, "setImage:", v12);

  -[PKDashboardPassMessage setReportToAnalytics:](v8, "setReportToAnalytics:", 1);
  objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", self->_pass);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPassMessage setAnalyticsReporterSubject:](v8, "setAnalyticsReporterSubject:", v13);

  objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", *v11);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = MEMORY[0x1E0C809B0];
  if (v14)
  {
    PKLocalizedVirtualCardString(CFSTR("VIRTUAL_CARD_DASHBOARD_LEARN_MORE"));
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setButtonTitle:](v8, "setButtonTitle:", v16);

    v20[0] = v15;
    v20[1] = 3221225472;
    v20[2] = __87__PKDashboardPaymentPassDataSource__messageForVirtualCardEnabledWithFeatureIdentifier___block_invoke;
    v20[3] = &unk_1E3E612E8;
    v21 = v14;
    -[PKDashboardPassMessage setActionOnButtonPress:](v8, "setActionOnButtonPress:", v20);

  }
  objc_initWeak(&location, self);
  v17[0] = v15;
  v17[1] = 3221225472;
  v17[2] = __87__PKDashboardPaymentPassDataSource__messageForVirtualCardEnabledWithFeatureIdentifier___block_invoke_2;
  v17[3] = &unk_1E3E61310;
  objc_copyWeak(&v18, &location);
  -[PKDashboardPassMessage setActionOnDismiss:](v8, "setActionOnDismiss:", v17);
  objc_destroyWeak(&v18);
  objc_destroyWeak(&location);

  return v8;
}

void __87__PKDashboardPaymentPassDataSource__messageForVirtualCardEnabledWithFeatureIdentifier___block_invoke(uint64_t a1)
{
  id v2;

  objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "openURL:withOptions:", *(_QWORD *)(a1 + 32), 0);

}

void __87__PKDashboardPaymentPassDataSource__messageForVirtualCardEnabledWithFeatureIdentifier___block_invoke_2(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  void *v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    PKDismissedKeyForPass();
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    PKSharedCacheSetBoolForKey();

    objc_msgSend(v3, "reloadMessages");
    WeakRetained = v3;
  }

}

- (id)_virtualCardDashboardImage
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  objc_msgSend(MEMORY[0x1E0DC3888], "configurationWithPointSize:", 18.0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0DC3870], "systemImageNamed:withConfiguration:", CFSTR("creditcard.and.123"), v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0DC3658], "labelColor");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "imageWithTintColor:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0DC3E88], "currentTraitCollection");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v6, "userInterfaceStyle") == 2)
    objc_msgSend(MEMORY[0x1E0DC3658], "systemGray4Color");
  else
    objc_msgSend(MEMORY[0x1E0DC3658], "systemExtraLightGrayColor");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  PKUIImageWithBackground(v5, v7, 45.0, 45.0);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

- (void)virtualCardEnrollmentViewController:(id)a3 didCompleteWithSuccess:(BOOL)a4
{
  id v4;

  objc_msgSend(a3, "presentingViewController");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "dismissViewControllerAnimated:completion:", 1, 0);

}

- (id)_messageFromEngagementMessage:(id)a3
{
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  PKDashboardPassMessage *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  const __CFString *v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  void *v19;
  id *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  void *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  _QWORD v34[4];
  id v35;
  id v36;
  _QWORD v37[4];
  id v38;
  id v39;
  _QWORD v40[4];
  id v41;
  id v42[2];
  _QWORD v43[4];
  id v44;
  id v45;
  _QWORD v46[4];
  id v47;
  id v48;
  id v49;
  _QWORD v50[4];
  id v51;
  id v52;
  _QWORD v53[4];
  id v54;
  id v55;
  id location[2];

  v4 = a3;
  objc_msgSend(v4, "localizedTitle");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "localizedMessage");
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = (void *)v6;
  v8 = 0;
  if (v5 && v6)
  {
    v9 = objc_alloc_init(PKDashboardPassMessage);
    -[PKDashboardPassMessage setType:](v9, "setType:", 1);
    objc_msgSend(v4, "identifier");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setIdentifier:](v9, "setIdentifier:", v10);

    -[PKDashboardPassMessage setTitle:](v9, "setTitle:", v5);
    -[PKDashboardPassMessage setMessage:](v9, "setMessage:", v7);
    -[PKDashboardPassMessage setReportToAnalytics:](v9, "setReportToAnalytics:", 1);
    objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", self->_pass);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setAnalyticsReporterSubject:](v9, "setAnalyticsReporterSubject:", v11);

    -[PKDashboardPaymentPassDataSource _replaceDashboardMessagePlaceholders:](self, "_replaceDashboardMessagePlaceholders:", v9);
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v8)
    {
LABEL_30:

      goto LABEL_31;
    }
    objc_initWeak(location, self);
    objc_msgSend(v4, "iconURLs");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "objectForKey:", self->_scaleKey);
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "objectForKey:", CFSTR("pdf"));
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "objectForKey:", CFSTR("png"));
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    if (v13)
    {
      v14 = CFSTR("pdf");
      v15 = v13;
    }
    else
    {
      v15 = v32;
      if (!v32)
      {
        if (v31)
        {
          objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:");
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          -[PKDashboardPaymentPassDataSource _downloadMessageIconURLAndReloadIfNecessary:](self, "_downloadMessageIconURLAndReloadIfNecessary:", v22);
          v33 = (void *)objc_claimAutoreleasedReturnValue();

        }
        else
        {
          v33 = 0;
        }
        goto LABEL_9;
      }
      v14 = CFSTR("png");
    }
    -[PKDashboardPaymentPassDataSource _messageImageWithName:extension:](self, "_messageImageWithName:extension:", v15, v14);
    v33 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_9:
    v16 = MEMORY[0x1E0C809B0];
    v53[0] = MEMORY[0x1E0C809B0];
    v53[1] = 3221225472;
    v53[2] = __66__PKDashboardPaymentPassDataSource__messageFromEngagementMessage___block_invoke;
    v53[3] = &unk_1E3E61B68;
    objc_copyWeak(&v55, location);
    v17 = v4;
    v54 = v17;
    objc_msgSend(v8, "setActionOnViewed:", v53);
    objc_msgSend(v17, "action");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = v18;
    if (v18)
    {
      objc_msgSend(v18, "localizedTitle");
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      if (v30)
      {
        if (objc_msgSend(v19, "type"))
          objc_msgSend(v8, "setShowDisclosure:", 1);
        v16 = 4;
        switch(objc_msgSend(v19, "type"))
        {
          case 1:
            objc_msgSend(v8, "setButtonTitle:", v30);
            v16 = MEMORY[0x1E0C809B0];
            v50[0] = MEMORY[0x1E0C809B0];
            v50[1] = 3221225472;
            v50[2] = __66__PKDashboardPaymentPassDataSource__messageFromEngagementMessage___block_invoke_2;
            v50[3] = &unk_1E3E61B68;
            v20 = &v52;
            objc_copyWeak(&v52, location);
            v51 = v17;
            objc_msgSend(v8, "setActionOnButtonPress:", v50);
            v21 = v51;
            goto LABEL_22;
          case 2:
            objc_msgSend(v19, "actionInfo");
            v23 = (void *)objc_claimAutoreleasedReturnValue();
            v16 = MEMORY[0x1E0C809B0];
            v24 = v23;
            objc_msgSend(v23, "objectForKey:", *MEMORY[0x1E0D69D98]);
            v29 = objc_claimAutoreleasedReturnValue();

            v25 = (void *)v29;
            objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", v29);
            v28 = (void *)objc_claimAutoreleasedReturnValue();
            if (v28)
            {
              objc_msgSend(v8, "setButtonTitle:", v30);
              v46[0] = v16;
              v46[1] = 3221225472;
              v46[2] = __66__PKDashboardPaymentPassDataSource__messageFromEngagementMessage___block_invoke_3;
              v46[3] = &unk_1E3E68C58;
              v47 = v28;
              objc_copyWeak(&v49, location);
              v48 = v17;
              objc_msgSend(v8, "setActionOnButtonPress:", v46);

              objc_destroyWeak(&v49);
              v25 = (void *)v29;
            }

            break;
          case 3:
            objc_msgSend(v8, "setButtonTitle:", v30);
            v16 = MEMORY[0x1E0C809B0];
            v43[0] = MEMORY[0x1E0C809B0];
            v43[1] = 3221225472;
            v43[2] = __66__PKDashboardPaymentPassDataSource__messageFromEngagementMessage___block_invoke_4;
            v43[3] = &unk_1E3E61B68;
            v20 = &v45;
            objc_copyWeak(&v45, location);
            v44 = v17;
            objc_msgSend(v8, "setActionOnButtonPress:", v43);
            v21 = v44;
            goto LABEL_22;
          case 4:
            objc_msgSend(v8, "setButtonTitle:", v30);
            v16 = MEMORY[0x1E0C809B0];
            v37[0] = MEMORY[0x1E0C809B0];
            v37[1] = 3221225472;
            v37[2] = __66__PKDashboardPaymentPassDataSource__messageFromEngagementMessage___block_invoke_6;
            v37[3] = &unk_1E3E61B68;
            v20 = &v39;
            objc_copyWeak(&v39, location);
            v38 = v17;
            objc_msgSend(v8, "setActionOnButtonPress:", v37);
            v21 = v38;
LABEL_22:

            objc_destroyWeak(v20);
            break;
          case 5:
            v16 = 28;
            goto LABEL_24;
          case 6:
LABEL_24:
            objc_msgSend(v8, "setButtonTitle:", v30);
            v40[0] = MEMORY[0x1E0C809B0];
            v40[1] = 3221225472;
            v40[2] = __66__PKDashboardPaymentPassDataSource__messageFromEngagementMessage___block_invoke_5;
            v40[3] = &unk_1E3E671C0;
            objc_copyWeak(v42, location);
            v42[1] = (id)v16;
            v41 = v17;
            objc_msgSend(v8, "setActionOnButtonPress:", v40);

            objc_destroyWeak(v42);
            v16 = MEMORY[0x1E0C809B0];
            break;
          default:
            break;
        }
      }

    }
    objc_msgSend(v8, "setImage:", v33);
    if (objc_msgSend(v17, "type") == 3)
    {
      objc_msgSend(v8, "setActionOnDismiss:", 0);
    }
    else
    {
      v34[0] = v16;
      v34[1] = 3221225472;
      v34[2] = __66__PKDashboardPaymentPassDataSource__messageFromEngagementMessage___block_invoke_7;
      v34[3] = &unk_1E3E61B68;
      objc_copyWeak(&v36, location);
      v35 = v17;
      objc_msgSend(v8, "setActionOnDismiss:", v34);

      objc_destroyWeak(&v36);
    }
    v26 = v8;

    objc_destroyWeak(&v55);
    objc_destroyWeak(location);
    goto LABEL_30;
  }
LABEL_31:

  return v8;
}

void __66__PKDashboardPaymentPassDataSource__messageFromEngagementMessage___block_invoke(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained, "reportDisplayedEngagementMessageIfNeeded:", *(_QWORD *)(a1 + 32));
    WeakRetained = v3;
  }

}

void __66__PKDashboardPaymentPassDataSource__messageFromEngagementMessage___block_invoke_2(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained, "_presentPassDetailsWithAction:", 0);
    objc_msgSend(v3, "_updateDiscoveryEngagementMessageIfNeeded:", *(_QWORD *)(a1 + 32));
    WeakRetained = v3;
  }

}

void __66__PKDashboardPaymentPassDataSource__messageFromEngagementMessage___block_invoke_3(uint64_t a1)
{
  void *v2;
  id WeakRetained;
  id v4;

  objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "openSensitiveURL:withOptions:", *(_QWORD *)(a1 + 32), 0);

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v4 = WeakRetained;
    objc_msgSend(WeakRetained, "_updateDiscoveryEngagementMessageIfNeeded:", *(_QWORD *)(a1 + 40));
    WeakRetained = v4;
  }

}

void __66__PKDashboardPaymentPassDataSource__messageFromEngagementMessage___block_invoke_4(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained, "_presentCardNumbers");
    objc_msgSend(v3, "_updateDiscoveryEngagementMessageIfNeeded:", *(_QWORD *)(a1 + 32));
    WeakRetained = v3;
  }

}

void __66__PKDashboardPaymentPassDataSource__messageFromEngagementMessage___block_invoke_5(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  void *v5;
  PKAccountFlowController *v6;
  void *v7;
  PKNavigationController *v8;
  void *v9;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v2 = objc_alloc(MEMORY[0x1E0D67230]);
    objc_msgSend(MEMORY[0x1E0D673C8], "sharedService");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = (void *)objc_msgSend(v2, "initWithWebService:", v3);

    v5 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D66840]), "initWithAccount:", *((_QWORD *)WeakRetained + 48));
    v6 = -[PKAccountFlowController initWithAccountCredential:provisioningController:setupDelegate:context:operations:]([PKAccountFlowController alloc], "initWithAccountCredential:provisioningController:setupDelegate:context:operations:", v5, v4, WeakRetained, 0, *(_QWORD *)(a1 + 48));
    -[PKAccountFlowController firstAccountViewController](v6, "firstAccountViewController");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = -[PKNavigationController initWithRootViewController:]([PKNavigationController alloc], "initWithRootViewController:", v7);
    objc_msgSend(*((id *)WeakRetained + 1), "pkui_viewControllerFromResponderChain");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "presentViewController:animated:completion:", v8, 1, 0);

    objc_msgSend(WeakRetained, "_updateDiscoveryEngagementMessageIfNeeded:", *(_QWORD *)(a1 + 32));
  }

}

void __66__PKDashboardPaymentPassDataSource__messageFromEngagementMessage___block_invoke_6(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  id v5;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = (void *)*((_QWORD *)WeakRetained + 31);
    v5 = WeakRetained;
    objc_msgSend(*((id *)WeakRetained + 109), "uniqueID");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "setDefaultPaymentPassIdentifier:", v4);

    objc_msgSend(v5, "_updateDiscoveryEngagementMessageIfNeeded:", *(_QWORD *)(a1 + 32));
    WeakRetained = v5;
  }

}

void __66__PKDashboardPaymentPassDataSource__messageFromEngagementMessage___block_invoke_7(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained, "_updateDiscoveryEngagementMessageIfNeeded:", *(_QWORD *)(a1 + 32));
    WeakRetained = v3;
  }

}

- (id)_replaceDashboardMessagePlaceholders:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  v4 = a3;
  v5 = *MEMORY[0x1E0D69ED0];
  -[PKAccount redeemRewardsFeatureDescriptor](self->_account, "redeemRewardsFeatureDescriptor");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "savingsAPY");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if (v7)
  {
    -[NSNumberFormatter stringFromNumber:](self->_formatterPercentage, "stringFromNumber:", v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v8 = 0;
  }
  -[PKDashboardPaymentPassDataSource _replaceDashboardMessage:placeholder:replacement:](self, "_replaceDashboardMessage:placeholder:replacement:", v4, v5, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return v9;
}

- (id)_replaceDashboardMessage:(id)a3 placeholder:(id)a4 replacement:(id)a5
{
  id v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  void *v19;
  id v20;
  NSObject *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  uint8_t buf[4];
  id v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v7 = a3;
  v8 = a4;
  v27 = a5;
  objc_msgSend(v7, "dialogRequest");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "title");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "message");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "title");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "message");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v26 = v10;
  v14 = objc_msgSend(v10, "containsString:", v8);
  v15 = objc_msgSend(v11, "containsString:", v8);
  v16 = objc_msgSend(v12, "containsString:", v8);
  v17 = objc_msgSend(v13, "containsString:", v8);
  v18 = v17;
  if ((v14 & 1) == 0 && (v15 & 1) == 0 && (v16 & 1) == 0 && !v17)
    goto LABEL_11;
  if (v27)
  {
    if (v14)
    {
      objc_msgSend(v26, "stringByReplacingOccurrencesOfString:withString:", v8, v27);
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "setTitle:", v23);

      if (!v15)
      {
LABEL_8:
        if (!v16)
          goto LABEL_9;
        goto LABEL_18;
      }
    }
    else if (!v15)
    {
      goto LABEL_8;
    }
    objc_msgSend(v11, "stringByReplacingOccurrencesOfString:withString:", v8, v27);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "setMessage:", v24);

    if (!v16)
    {
LABEL_9:
      if (!v18)
      {
LABEL_11:
        v20 = v7;
        goto LABEL_12;
      }
LABEL_10:
      objc_msgSend(v13, "stringByReplacingOccurrencesOfString:withString:", v8, v27);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "setMessage:", v19);

      goto LABEL_11;
    }
LABEL_18:
    objc_msgSend(v12, "stringByReplacingOccurrencesOfString:withString:", v8, v27);
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "setTitle:", v25);

    if (!v18)
      goto LABEL_11;
    goto LABEL_10;
  }
  PKLogFacilityTypeGetObject();
  v22 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    v29 = v8;
    _os_log_impl(&dword_19D178000, v22, OS_LOG_TYPE_DEFAULT, "Unavailable to replace placeholder '%@' for dashboard message", buf, 0xCu);
  }

  v20 = 0;
LABEL_12:

  return v20;
}

- (void)_updateDiscoveryEngagementMessageIfNeeded:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  _QWORD v7[4];
  id v8;
  id location;

  v4 = a3;
  objc_initWeak(&location, self);
  objc_msgSend(MEMORY[0x1E0D66D00], "sharedInstance");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "identifier");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = __78__PKDashboardPaymentPassDataSource__updateDiscoveryEngagementMessageIfNeeded___block_invoke;
  v7[3] = &unk_1E3E61DB8;
  objc_copyWeak(&v8, &location);
  objc_msgSend(v5, "updateDiscoveryEngagementMessageWithIdentifier:forAction:completion:", v6, 2, v7);

  objc_destroyWeak(&v8);
  objc_destroyWeak(&location);

}

void __78__PKDashboardPaymentPassDataSource__updateDiscoveryEngagementMessageIfNeeded___block_invoke(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = WeakRetained;
    objc_msgSend(WeakRetained, "reloadMessages");
    WeakRetained = v2;
  }

}

- (void)reportDisplayedEngagementMessageIfNeeded:(id)a3
{
  void *v4;
  id obj;

  objc_msgSend(a3, "identifier");
  obj = (id)objc_claimAutoreleasedReturnValue();
  if (!-[NSString isEqualToString:](self->_lastReportedDiscoveryIdentifier, "isEqualToString:"))
  {
    objc_msgSend(MEMORY[0x1E0D66D00], "sharedInstance");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "displayedDiscoveryEngagementMessageWithIdentifier:", obj);

    objc_storeStrong((id *)&self->_lastReportedDiscoveryIdentifier, obj);
  }

}

- (id)_messagesForInstallmentPlans
{
  void *v3;
  uint64_t i;
  void *v5;
  void *v6;
  uint64_t v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  NSDecimalNumber *v13;
  NSString *v14;
  void *v15;
  void *v16;
  void *v17;
  NSString *v18;
  void *v19;
  void *v20;
  PKDashboardPassMessage *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  double v28;
  void *v29;
  void *v31;
  uint64_t v32;
  id v33;
  void *v34;
  PKDashboardPaymentPassDataSource *val;
  id obj;
  void *v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  _QWORD v42[4];
  id v43;
  id v44;
  id v45;
  _QWORD v46[5];
  id v47;
  id location;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  _BYTE v53[128];
  uint64_t v54;

  v54 = *MEMORY[0x1E0C80C00];
  dispatch_assert_queue_V2(MEMORY[0x1E0C80D38]);
  val = self;
  -[PKAccount creditDetails](self->_account, "creditDetails");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "installmentPlans");
  v31 = (void *)objc_claimAutoreleasedReturnValue();

  if (!objc_msgSend(v31, "count"))
  {
    v29 = 0;
    goto LABEL_31;
  }
  v33 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  PKSharedCacheGetArrayForKey();
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  v51 = 0u;
  v52 = 0u;
  v49 = 0u;
  v50 = 0u;
  obj = v31;
  v40 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v49, v53, 16);
  if (!v40)
    goto LABEL_29;
  v39 = *(_QWORD *)v50;
  v32 = *MEMORY[0x1E0C996C8];
  do
  {
    for (i = 0; i != v40; ++i)
    {
      if (*(_QWORD *)v50 != v39)
        objc_enumerationMutation(obj);
      v5 = *(void **)(*((_QWORD *)&v49 + 1) + 8 * i);
      objc_msgSend(v5, "identifier");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      v7 = objc_msgSend(v5, "state");
      if (v7 == 2)
      {
        objc_msgSend(v5, "payments");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "firstObject");
        v9 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend(v9, "statement");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "product");
        v38 = (void *)objc_claimAutoreleasedReturnValue();
        v11 = 0;
        if (v9)
        {
          v41 = 0;
          v8 = 0;
          if (v10)
          {
            if (objc_msgSend(v9, "isPaid") && !PKForceNewInstallmentDashboardModule())
            {
              v11 = 0;
              v41 = 0;
              v8 = 0;
            }
            else
            {
              objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@-%@"), CFSTR("installmentPlanPayment"), v6);
              v8 = (id)objc_claimAutoreleasedReturnValue();
              PKLocalizedBeekmanString(CFSTR("APPLE_CARD_INSTALLMENTS"));
              v41 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v9, "amountDue");
              v13 = (NSDecimalNumber *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v9, "currencyCode");
              v14 = (NSString *)objc_claimAutoreleasedReturnValue();
              PKCurrencyAmountCreate(v13, v14);
              v34 = (void *)objc_claimAutoreleasedReturnValue();

              objc_msgSend(MEMORY[0x1E0C99D48], "calendarWithIdentifier:", v32);
              v15 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v10, "closingDate");
              v16 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v15, "components:fromDate:", 8, v16);
              v17 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v17, "month");

              PKGregorianMonthSpecificLocalizedStringKeyForKey();
              v18 = (NSString *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v38, "model");
              v19 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v34, "formattedStringValue");
              v20 = (void *)objc_claimAutoreleasedReturnValue();
              PKLocalizedBeekmanString(v18, CFSTR("%@%@"), v19, v20);
              v11 = (void *)objc_claimAutoreleasedReturnValue();

            }
          }
        }
        else
        {
          v41 = 0;
          v8 = 0;
        }

      }
      else
      {
        if (v7 != 1)
        {
          v8 = 0;
          v41 = 0;
          v11 = 0;
          goto LABEL_27;
        }
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@-%@"), CFSTR("installmentPlanInitiated"), v6);
        v8 = (id)objc_claimAutoreleasedReturnValue();
        PKLocalizedBeekmanString(CFSTR("APPLE_CARD_INSTALLMENTS"));
        v41 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "product");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "model");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        PKLocalizedBeekmanString(CFSTR("INSTALLMENT_ADDED_MESSAGE"), CFSTR("%@"), v10);
        v11 = (void *)objc_claimAutoreleasedReturnValue();
      }

      if (v8 && (objc_msgSend(v37, "containsObject:", v8) & 1) == 0)
      {
        v21 = objc_alloc_init(PKDashboardPassMessage);
        -[PKDashboardPassMessage setIdentifier:](v21, "setIdentifier:", v8);
        -[PKDashboardPassMessage setShowDisclosure:](v21, "setShowDisclosure:", 1);
        -[PKDashboardPassMessage setTitle:](v21, "setTitle:", v41);
        -[PKDashboardPassMessage setMessage:](v21, "setMessage:", v11);
        PKLocalizedBeekmanString(CFSTR("VIEW_INSTALLMENT_DETAILS_BUTTON"));
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        -[PKDashboardPassMessage setButtonTitle:](v21, "setButtonTitle:", v22);

        objc_msgSend(v5, "product");
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v23, "iconURLForScale:suffix:", 0, PKUIScreenScale());
        v24 = (void *)objc_claimAutoreleasedReturnValue();

        -[PKDashboardPaymentPassDataSource _downloadMessageIconURLAndReloadIfNecessary:](val, "_downloadMessageIconURLAndReloadIfNecessary:", v24);
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        if (!v25)
        {
          PKPassKitUIBundle();
          v26 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v26, "URLForResource:withExtension:", CFSTR("InstallmentsFallback"), CFSTR("pdf"));
          v27 = (void *)objc_claimAutoreleasedReturnValue();

          if (v27)
          {
            v28 = PKUIScreenScale();
            PKUIImageFromPDF(v27, 45.0, 45.0, v28);
            v25 = (void *)objc_claimAutoreleasedReturnValue();
          }
          else
          {
            v25 = 0;
          }

        }
        -[PKDashboardPassMessage setImage:](v21, "setImage:", v25);
        objc_initWeak(&location, val);
        v46[0] = MEMORY[0x1E0C809B0];
        v46[1] = 3221225472;
        v46[2] = __64__PKDashboardPaymentPassDataSource__messagesForInstallmentPlans__block_invoke;
        v46[3] = &unk_1E3E61B68;
        objc_copyWeak(&v47, &location);
        v46[4] = v5;
        -[PKDashboardPassMessage setActionOnButtonPress:](v21, "setActionOnButtonPress:", v46);
        v42[0] = MEMORY[0x1E0C809B0];
        v42[1] = 3221225472;
        v42[2] = __64__PKDashboardPaymentPassDataSource__messagesForInstallmentPlans__block_invoke_2;
        v42[3] = &unk_1E3E61EE8;
        objc_copyWeak(&v45, &location);
        v8 = v8;
        v43 = v8;
        v44 = v37;
        -[PKDashboardPassMessage setActionOnDismiss:](v21, "setActionOnDismiss:", v42);
        objc_msgSend(v33, "addObject:", v21);

        objc_destroyWeak(&v45);
        objc_destroyWeak(&v47);
        objc_destroyWeak(&location);

      }
LABEL_27:

    }
    v40 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v49, v53, 16);
  }
  while (v40);
LABEL_29:

  v29 = (void *)objc_msgSend(v33, "copy");
LABEL_31:

  return v29;
}

void __64__PKDashboardPaymentPassDataSource__messagesForInstallmentPlans__block_invoke(uint64_t a1)
{
  PKTransactionHistoryViewController *v2;
  void *v3;
  void *v4;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v2 = -[PKTransactionHistoryViewController initWithInstallmentPlan:transactionSourceCollection:familyCollection:account:accountUserCollection:physicalCards:]([PKTransactionHistoryViewController alloc], "initWithInstallmentPlan:transactionSourceCollection:familyCollection:account:accountUserCollection:physicalCards:", *(_QWORD *)(a1 + 32), *((_QWORD *)WeakRetained + 6), *((_QWORD *)WeakRetained + 97), *((_QWORD *)WeakRetained + 48), *((_QWORD *)WeakRetained + 94), *((_QWORD *)WeakRetained + 96));
    objc_msgSend(*((id *)WeakRetained + 1), "pkui_viewControllerFromResponderChain");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "navigationController");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "pushViewController:animated:", v2, 1);

  }
}

void __64__PKDashboardPaymentPassDataSource__messagesForInstallmentPlans__block_invoke_2(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  uint64_t v4;
  void *v5;
  _QWORD v6[2];

  v6[1] = *MEMORY[0x1E0C80C00];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (!objc_msgSend(*(id *)(a1 + 32), "hasPrefix:", CFSTR("installmentPlanPayment"))
    || (PKStoreDemoModeEnabled() & 1) == 0)
  {
    v3 = *(void **)(a1 + 40);
    if (v3)
    {
      objc_msgSend(v3, "arrayByAddingObject:", *(_QWORD *)(a1 + 32));
      v4 = objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v6[0] = *(_QWORD *)(a1 + 32);
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v6, 1);
      v4 = objc_claimAutoreleasedReturnValue();
    }
    v5 = (void *)v4;
    PKSharedCacheSetObjectForKey();

  }
  if (WeakRetained)
    objc_msgSend(WeakRetained, "reloadMessages");

}

- (id)_peerPaymentAccountStatusMessage
{
  uint64_t v3;
  uint64_t v4;
  PKDashboardPassMessage *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;

  v3 = -[PKPeerPaymentAccount state](self->_peerPaymentAccount, "state");
  v4 = -[PKPeerPaymentAccount stateReason](self->_peerPaymentAccount, "stateReason");
  if (v3 == 3 && v4 == 4)
  {
    v9 = objc_alloc_init(PKDashboardPassMessage);
    -[PKDashboardPassMessage setIdentifier:](v9, "setIdentifier:", CFSTR("peerPaymentLockedAndInReview"));
    PKDynamicLocalizedPeerPaymentString();
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setTitle:](v9, "setTitle:", v10);

    PKDynamicLocalizedPeerPaymentString();
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setMessage:](v9, "setMessage:", v11);

    PKDynamicLocalizedPeerPaymentString();
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setButtonTitle:](v9, "setButtonTitle:", v12);

    -[PKDashboardPaymentPassDataSource _messageImageWithName:extension:](self, "_messageImageWithName:extension:", CFSTR("MessageAlert"), CFSTR("pdf"));
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setImage:](v9, "setImage:", v13);

    v14 = &__block_literal_global_1047;
LABEL_22:
    -[PKDashboardPassMessage setActionOnButtonPress:](v9, "setActionOnButtonPress:", v14);
    return v9;
  }
  if (v3 == 2 && v4 == 5)
  {
    v9 = objc_alloc_init(PKDashboardPassMessage);
    -[PKDashboardPassMessage setIdentifier:](v9, "setIdentifier:", CFSTR("peerPaymentRestrictedAndTerminal"));
    PKDynamicLocalizedPeerPaymentString();
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setTitle:](v9, "setTitle:", v15);

    PKDynamicLocalizedPeerPaymentString();
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setMessage:](v9, "setMessage:", v16);

    PKDynamicLocalizedPeerPaymentString();
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setButtonTitle:](v9, "setButtonTitle:", v17);

    -[PKDashboardPaymentPassDataSource _messageImageWithName:extension:](self, "_messageImageWithName:extension:", CFSTR("MessageAlert"), CFSTR("pdf"));
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setImage:](v9, "setImage:", v18);

    v14 = &__block_literal_global_1056;
    goto LABEL_22;
  }
  if (v3 == 3 && v4 == 5)
  {
    v9 = objc_alloc_init(PKDashboardPassMessage);
    -[PKDashboardPassMessage setIdentifier:](v9, "setIdentifier:", CFSTR("peerPaymentLockedAndTerminal"));
    PKDynamicLocalizedPeerPaymentString();
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setTitle:](v9, "setTitle:", v19);

    PKDynamicLocalizedPeerPaymentString();
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setMessage:](v9, "setMessage:", v20);

    PKDynamicLocalizedPeerPaymentString();
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setButtonTitle:](v9, "setButtonTitle:", v21);

    -[PKDashboardPaymentPassDataSource _messageImageWithName:extension:](self, "_messageImageWithName:extension:", CFSTR("MessageAlert"), CFSTR("pdf"));
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setImage:](v9, "setImage:", v22);

    v14 = &__block_literal_global_1065;
    goto LABEL_22;
  }
  if (v3 == 2 && v4 == 4)
  {
    v9 = objc_alloc_init(PKDashboardPassMessage);
    -[PKDashboardPassMessage setIdentifier:](v9, "setIdentifier:", CFSTR("peerPaymentRestrictedAndInReview"));
    PKDynamicLocalizedPeerPaymentString();
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setTitle:](v9, "setTitle:", v23);

    PKDynamicLocalizedPeerPaymentString();
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setMessage:](v9, "setMessage:", v24);

    PKDynamicLocalizedPeerPaymentString();
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setButtonTitle:](v9, "setButtonTitle:", v25);

    -[PKDashboardPaymentPassDataSource _messageImageWithName:extension:](self, "_messageImageWithName:extension:", CFSTR("MessageAlert"), CFSTR("pdf"));
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setImage:](v9, "setImage:", v26);

    v14 = &__block_literal_global_1074;
    goto LABEL_22;
  }
  v9 = 0;
  return v9;
}

void __68__PKDashboardPaymentPassDataSource__peerPaymentAccountStatusMessage__block_invoke()
{
  void *v0;
  id v1;

  objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", CFSTR("https://support.apple.com/ht207932?cid=mc-ols-applecash-article_ht207932-ios_ui-03042022#inreview"));
  v1 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "openSensitiveURL:withOptions:", v1, 0);

}

void __68__PKDashboardPaymentPassDataSource__peerPaymentAccountStatusMessage__block_invoke_2()
{
  void *v0;
  id v1;

  objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", CFSTR("https://support.apple.com/ht207932?cid=mc-ols-applecash-article_ht207932-ios_ui-03102022#restricted"));
  v1 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "openSensitiveURL:withOptions:", v1, 0);

}

void __68__PKDashboardPaymentPassDataSource__peerPaymentAccountStatusMessage__block_invoke_3()
{
  void *v0;
  id v1;

  objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", CFSTR("https://support.apple.com/ht207932?cid=mc-ols-applecash-article_ht207932-ios_ui-03102022#locked"));
  v1 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "openSensitiveURL:withOptions:", v1, 0);

}

void __68__PKDashboardPaymentPassDataSource__peerPaymentAccountStatusMessage__block_invoke_4()
{
  void *v0;
  id v1;

  objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", CFSTR("https://support.apple.com/ht207932?cid=mc-ols-applecash-article_ht207932-ios_ui-03042022#inreview"));
  v1 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "openSensitiveURL:withOptions:", v1, 0);

}

- (id)_messageForAMPEnrollment
{
  PKDashboardPassMessage *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  _QWORD v11[4];
  id v12;
  _QWORD v13[4];
  id v14;
  id location;

  dispatch_assert_queue_V2(MEMORY[0x1E0C80D38]);
  v3 = objc_alloc_init(PKDashboardPassMessage);
  -[PKDashboardPassMessage setIdentifier:](v3, "setIdentifier:", CFSTR("ampEnrollment"));
  objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", self->_pass);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPassMessage setAnalyticsReporterSubject:](v3, "setAnalyticsReporterSubject:", v4);

  -[PKDashboardPassMessage setShowDisclosure:](v3, "setShowDisclosure:", 1);
  -[PKDashboardPassMessage setShowSpinner:](v3, "setShowSpinner:", self->_performingAMPEnrollment);
  -[PKPaymentPass localizedDescription](self->_pass, "localizedDescription");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  PKLocalizedAMPString(CFSTR("PASS_DASHBOARD_AMP_MESSAGE_TITLE_FMT"), CFSTR("%@"), v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPassMessage setTitle:](v3, "setTitle:", v6);

  PKLocalizedAMPString(CFSTR("PASS_DASHBOARD_AMP_MESSAGE_DETAIL"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPassMessage setMessage:](v3, "setMessage:", v7);

  PKLocalizedAMPString(CFSTR("PASS_DASHBOARD_AMP_BUTTON_TITLE"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPassMessage setButtonTitle:](v3, "setButtonTitle:", v8);

  -[PKDashboardPassMessage setImage:](v3, "setImage:", self->_AMPEnrollmentIcon);
  objc_initWeak(&location, self);
  v9 = MEMORY[0x1E0C809B0];
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 3221225472;
  v13[2] = __60__PKDashboardPaymentPassDataSource__messageForAMPEnrollment__block_invoke;
  v13[3] = &unk_1E3E61310;
  objc_copyWeak(&v14, &location);
  -[PKDashboardPassMessage setActionOnButtonPress:](v3, "setActionOnButtonPress:", v13);
  v11[0] = v9;
  v11[1] = 3221225472;
  v11[2] = __60__PKDashboardPaymentPassDataSource__messageForAMPEnrollment__block_invoke_2;
  v11[3] = &unk_1E3E61310;
  objc_copyWeak(&v12, &location);
  -[PKDashboardPassMessage setActionOnDismiss:](v3, "setActionOnDismiss:", v11);
  objc_destroyWeak(&v12);
  objc_destroyWeak(&v14);
  objc_destroyWeak(&location);
  return v3;
}

void __60__PKDashboardPaymentPassDataSource__messageForAMPEnrollment__block_invoke(uint64_t a1)
{
  _QWORD *WeakRetained;
  _QWORD *v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = WeakRetained;
    objc_msgSend(WeakRetained, "_addToAMPButtonTappedForPass:", WeakRetained[109]);
    WeakRetained = v2;
  }

}

void __60__PKDashboardPaymentPassDataSource__messageForAMPEnrollment__block_invoke_2(uint64_t a1)
{
  _BYTE *WeakRetained;
  void *v2;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    WeakRetained[568] = 0;
    v3 = WeakRetained;
    AMPEnrollmentDismissedKeyForPass();
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    PKSharedCacheSetBoolForKey();

    objc_msgSend(v3, "reloadMessages");
    WeakRetained = v3;
  }

}

- (id)_messagesForAccountUserInvitations
{
  NSArray *accountUserInvitations;
  PKDashboardPassMessage *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t i;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  BOOL v30;
  PKDashboardPassMessage *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  uint64_t v39;
  PKDashboardPaymentPassDataSource *v40;
  uint64_t j;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  PKDashboardPassMessage *v53;
  void *v54;
  void *v55;
  void *v56;
  void *v57;
  void *v58;
  void *v59;
  void *v60;
  uint64_t v61;
  PKDashboardPaymentPassDataSource *v62;
  uint64_t k;
  void *v64;
  void *v65;
  uint64_t v66;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  PKDashboardPassMessage *v73;
  void *v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  void *v82;
  void *v83;
  void *v84;
  id v85;
  id v86;
  id obj;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  _QWORD v98[5];
  id v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  _QWORD v104[5];
  id v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  _QWORD v110[4];
  id v111;
  id *v112;
  id v113;
  _QWORD v114[4];
  id v115;
  id v116;
  BOOL v117;
  id from;
  id location;
  id *p_location;
  uint64_t v121;
  uint64_t (*v122)(uint64_t, uint64_t);
  void (*v123)(uint64_t);
  id v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  _QWORD v129[4];
  id v130;
  uint64_t *v131;
  id v132;
  _QWORD v133[4];
  id v134;
  uint64_t v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t (*v138)(uint64_t, uint64_t);
  void (*v139)(uint64_t);
  id v140;
  _QWORD v141[5];
  _BYTE v142[128];
  _BYTE v143[128];
  _BYTE v144[128];
  uint64_t v145;

  v145 = *MEMORY[0x1E0C80C00];
  if (self->_accountUsersLoaded
    && self->_accountUserInvitationsLoaded
    && self->_familyCollectionLoaded
    && self->_account)
  {
    -[PKPaymentPass uniqueID](self->_pass, "uniqueID");
    v82 = (void *)objc_claimAutoreleasedReturnValue();
    v88 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
    -[PKAccountUserCollection accountUsersExcludingCurrentAccountUser](self->_accountUserCollection, "accountUsersExcludingCurrentAccountUser");
    v83 = (void *)objc_claimAutoreleasedReturnValue();
    accountUserInvitations = self->_accountUserInvitations;
    v141[0] = MEMORY[0x1E0C809B0];
    v141[1] = 3221225472;
    v141[2] = __70__PKDashboardPaymentPassDataSource__messagesForAccountUserInvitations__block_invoke;
    v141[3] = &unk_1E3E73520;
    v141[4] = self;
    -[NSArray pk_objectsPassingTest:](accountUserInvitations, "pk_objectsPassingTest:", v141);
    v84 = (void *)objc_claimAutoreleasedReturnValue();
    v135 = 0;
    v136 = &v135;
    v137 = 0x3032000000;
    v138 = __Block_byref_object_copy__41;
    v139 = __Block_byref_object_dispose__41;
    PKSharedCacheGetArrayForKey();
    v140 = (id)objc_claimAutoreleasedReturnValue();
    if (!objc_msgSend(v83, "count")
      && !objc_msgSend(v84, "count")
      && +[PKAccountInvitationController canInviteAccountUserWithAccount:](PKAccountInvitationController, "canInviteAccountUserWithAccount:", self->_account)&& (objc_msgSend((id)v136[5], "containsObject:", v82) & 1) == 0)
    {
      v3 = objc_alloc_init(PKDashboardPassMessage);
      -[PKDashboardPassMessage setIdentifier:](v3, "setIdentifier:", CFSTR("createAccountUserInvitationPrompt"));
      -[PKDashboardPassMessage setShowDisclosure:](v3, "setShowDisclosure:", 1);
      PKLocalizedMadisonString(CFSTR("START_SHARING_DASHBOARD_MESSAGE_TITLE"));
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setTitle:](v3, "setTitle:", v4);

      PKLocalizedMadisonString(CFSTR("START_SHARING_DASHBOARD_MESSAGE"));
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setMessage:](v3, "setMessage:", v5);

      PKLocalizedMadisonString(CFSTR("START_SHARING_DASHBOARD_BUTTON"));
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setButtonTitle:](v3, "setButtonTitle:", v6);

      PKDashboardMessagePassIcon(self->_pass);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setImage:](v3, "setImage:", v7);

      -[PKDashboardPassMessage setReportToAnalytics:](v3, "setReportToAnalytics:", 1);
      objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", self->_pass);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setAnalyticsReporterSubject:](v3, "setAnalyticsReporterSubject:", v8);

      v9 = objc_alloc_init(MEMORY[0x1E0C99E08]);
      objc_msgSend(MEMORY[0x1E0D66820], "analyticsAccountTypeForAccount:", self->_account);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      if (v10)
        objc_msgSend(v9, "setObject:forKey:", v10, *MEMORY[0x1E0D68AA8]);
      v11 = (void *)objc_msgSend(v9, "copy");
      -[PKDashboardPassMessage setAdditionalEventAnalyticsOnButtonPress:](v3, "setAdditionalEventAnalyticsOnButtonPress:", v11);

      objc_initWeak(&location, self);
      v133[0] = MEMORY[0x1E0C809B0];
      v133[1] = 3221225472;
      v133[2] = __70__PKDashboardPaymentPassDataSource__messagesForAccountUserInvitations__block_invoke_2;
      v133[3] = &unk_1E3E61310;
      objc_copyWeak(&v134, &location);
      -[PKDashboardPassMessage setActionOnButtonPress:](v3, "setActionOnButtonPress:", v133);
      v129[0] = MEMORY[0x1E0C809B0];
      v129[1] = 3221225472;
      v129[2] = __70__PKDashboardPaymentPassDataSource__messagesForAccountUserInvitations__block_invoke_3;
      v129[3] = &unk_1E3E6D160;
      objc_copyWeak(&v132, &location);
      v131 = &v135;
      v130 = v82;
      -[PKDashboardPassMessage setActionOnDismiss:](v3, "setActionOnDismiss:", v129);
      objc_msgSend(v88, "addObject:", v3);

      objc_destroyWeak(&v132);
      objc_destroyWeak(&v134);
      objc_destroyWeak(&location);

    }
    objc_msgSend(v84, "pk_objectsPassingTest:", &__block_literal_global_1089);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v127 = 0u;
    v128 = 0u;
    v125 = 0u;
    v126 = 0u;
    obj = v12;
    v13 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v125, v144, 16);
    if (v13)
    {
      v91 = *(_QWORD *)v126;
      do
      {
        v94 = v13;
        for (i = 0; i != v94; ++i)
        {
          if (*(_QWORD *)v126 != v91)
            objc_enumerationMutation(obj);
          v15 = *(void **)(*((_QWORD *)&v125 + 1) + 8 * i);
          objc_msgSend(v15, "applicationIdentifier");
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          location = 0;
          p_location = &location;
          v121 = 0x3032000000;
          v122 = __Block_byref_object_copy__41;
          v123 = __Block_byref_object_dispose__41;
          PKSharedCacheGetArrayForKey();
          v124 = (id)objc_claimAutoreleasedReturnValue();
          if ((objc_msgSend(p_location[5], "containsObject:", v16) & 1) == 0)
          {
            objc_msgSend(v15, "invitationDetails");
            v17 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v17, "accountUserAltDSID");
            v18 = (void *)objc_claimAutoreleasedReturnValue();

            -[PKAccountUserCollection accountUserWithAltDSID:](self->_accountUserCollection, "accountUserWithAltDSID:", v18);
            v19 = (void *)objc_claimAutoreleasedReturnValue();
            v20 = v19;
            if (v19)
            {
              objc_msgSend(v19, "accountState");
              if ((PKAccountStateIsTerminal() & 1) == 0)
              {
                -[PKFamilyMemberCollection familyMembersByAltDSID](self->_familyCollection, "familyMembersByAltDSID");
                v21 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v20, "altDSID");
                v22 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v21, "objectForKey:", v22);
                v23 = (void *)objc_claimAutoreleasedReturnValue();

                v24 = (void *)MEMORY[0x1E0D66C60];
                objc_msgSend(v20, "nameComponents");
                v25 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v24, "contactForFamilyMember:nameComponents:imageData:", v23, v25, 0);
                v26 = (void *)objc_claimAutoreleasedReturnValue();

                objc_msgSend(v26, "givenName");
                v27 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v15, "invitationDetails");
                v28 = (void *)objc_claimAutoreleasedReturnValue();
                v29 = objc_msgSend(v28, "accountUserAccessLevel");
                v30 = v29 == 1;

                v31 = objc_alloc_init(PKDashboardPassMessage);
                -[PKDashboardPassMessage setIdentifier:](v31, "setIdentifier:", v16);
                if (v29 == 1)
                {
                  PKLocalizedMadisonString(CFSTR("OWNER_DASHBOARD_OWNER_CARD_SHARING_EDUCATION_TITLE"));
                  v32 = (void *)objc_claimAutoreleasedReturnValue();
                  -[PKDashboardPassMessage setTitle:](v31, "setTitle:", v32);

                  PKLocalizedMadisonString(CFSTR("OWNER_DASHBOARD_OWNER_CARD_SHARING_EDUCATION_MESSAGE"), CFSTR("%@"), v27);
                  v33 = (void *)objc_claimAutoreleasedReturnValue();
                  -[PKDashboardPassMessage setMessage:](v31, "setMessage:", v33);

                  PKLocalizedMadisonString(CFSTR("OWNER_DASHBOARD_OWNER_CARD_SHARING_EDUCATION_BUTTON"));
                }
                else
                {
                  PKLocalizedMadisonString(CFSTR("OWNER_DASHBOARD_PARTICIPANT_CARD_SHARING_EDUCATION_TITLE"));
                  v35 = (void *)objc_claimAutoreleasedReturnValue();
                  -[PKDashboardPassMessage setTitle:](v31, "setTitle:", v35);

                  PKLocalizedMadisonString(CFSTR("OWNER_DASHBOARD_PARTICIPANT_CARD_SHARING_EDUCATION_MESSAGE"), CFSTR("%@"), v27);
                  v36 = (void *)objc_claimAutoreleasedReturnValue();
                  -[PKDashboardPassMessage setMessage:](v31, "setMessage:", v36);

                  PKLocalizedMadisonString(CFSTR("OWNER_DASHBOARD_PARTICIPANT_CARD_SHARING_EDUCATION_ACTION"), CFSTR("%@"), v27);
                }
                v34 = (void *)objc_claimAutoreleasedReturnValue();
                -[PKDashboardPassMessage setButtonTitle:](v31, "setButtonTitle:", v34);

                -[PKDashboardPassMessage setShowDisclosure:](v31, "setShowDisclosure:", 1);
                PKDashboardMessagePassIcon(self->_pass);
                v37 = (void *)objc_claimAutoreleasedReturnValue();
                -[PKDashboardPassMessage setImage:](v31, "setImage:", v37);

                -[PKDashboardPassMessage setReportToAnalytics:](v31, "setReportToAnalytics:", 1);
                objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", self->_pass);
                v38 = (void *)objc_claimAutoreleasedReturnValue();
                -[PKDashboardPassMessage setAnalyticsReporterSubject:](v31, "setAnalyticsReporterSubject:", v38);

                objc_initWeak(&from, self);
                v114[0] = MEMORY[0x1E0C809B0];
                v114[1] = 3221225472;
                v114[2] = __70__PKDashboardPaymentPassDataSource__messagesForAccountUserInvitations__block_invoke_5;
                v114[3] = &unk_1E3E67148;
                objc_copyWeak(&v116, &from);
                v117 = v30;
                v115 = v20;
                -[PKDashboardPassMessage setActionOnButtonPress:](v31, "setActionOnButtonPress:", v114);
                v110[0] = MEMORY[0x1E0C809B0];
                v110[1] = 3221225472;
                v110[2] = __70__PKDashboardPaymentPassDataSource__messagesForAccountUserInvitations__block_invoke_6;
                v110[3] = &unk_1E3E6D160;
                objc_copyWeak(&v113, &from);
                v112 = &location;
                v111 = v16;
                -[PKDashboardPassMessage setActionOnDismiss:](v31, "setActionOnDismiss:", v110);
                objc_msgSend(v88, "addObject:", v31);

                objc_destroyWeak(&v113);
                objc_destroyWeak(&v116);
                objc_destroyWeak(&from);

              }
            }

          }
          _Block_object_dispose(&location, 8);

        }
        v13 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v125, v144, 16);
      }
      while (v13);
    }

    objc_msgSend(v84, "pk_objectsPassingTest:", &__block_literal_global_1102);
    v108 = 0u;
    v109 = 0u;
    v106 = 0u;
    v107 = 0u;
    v86 = (id)objc_claimAutoreleasedReturnValue();
    v39 = objc_msgSend(v86, "countByEnumeratingWithState:objects:count:", &v106, v143, 16);
    v40 = self;
    if (v39)
    {
      v89 = *(_QWORD *)v107;
      do
      {
        v95 = v39;
        for (j = 0; j != v95; ++j)
        {
          if (*(_QWORD *)v107 != v89)
            objc_enumerationMutation(v86);
          v42 = *(void **)(*((_QWORD *)&v106 + 1) + 8 * j);
          objc_msgSend(v42, "applicationIdentifier");
          v43 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v42, "invitationDetails");
          v44 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v44, "accountUserAltDSID");
          v45 = (void *)objc_claimAutoreleasedReturnValue();
          -[PKAccountUserCollection accountUserWithAltDSID:](v40->_accountUserCollection, "accountUserWithAltDSID:", v45);
          v46 = (void *)objc_claimAutoreleasedReturnValue();
          v47 = v46;
          if (!v46 || (objc_msgSend(v46, "accountState"), (PKAccountStateIsTerminal() & 1) == 0))
          {
            if (objc_msgSend(v44, "accountUserAccessLevel") == 1)
            {
              -[PKFamilyMemberCollection familyMembersByAltDSID](v40->_familyCollection, "familyMembersByAltDSID");
              v48 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v48, "objectForKey:", v45);
              v92 = (void *)objc_claimAutoreleasedReturnValue();

              v49 = (void *)MEMORY[0x1E0D66C60];
              objc_msgSend(v47, "nameComponents");
              v50 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v49, "contactForFamilyMember:nameComponents:imageData:", v92, v50, 0);
              v51 = (void *)objc_claimAutoreleasedReturnValue();

              objc_msgSend(v51, "givenName");
              v52 = (void *)objc_claimAutoreleasedReturnValue();
              v53 = objc_alloc_init(PKDashboardPassMessage);
              -[PKDashboardPassMessage setIdentifier:](v53, "setIdentifier:", v43);
              PKLocalizedMadisonString(CFSTR("ACCOUNT_USER_JOINT_OFFER_READY_TITLE"));
              v54 = (void *)objc_claimAutoreleasedReturnValue();
              -[PKDashboardPassMessage setTitle:](v53, "setTitle:", v54);

              PKLocalizedMadisonString(CFSTR("ACCOUNT_USER_JOINT_OFFER_READY_MESSAGE"), CFSTR("%@"), v52);
              v55 = (void *)objc_claimAutoreleasedReturnValue();
              -[PKDashboardPassMessage setMessage:](v53, "setMessage:", v55);

              PKLocalizedMadisonString(CFSTR("ACCOUNT_USER_JOINT_OFFER_READY_BUTTON"));
              v56 = (void *)objc_claimAutoreleasedReturnValue();
              -[PKDashboardPassMessage setButtonTitle:](v53, "setButtonTitle:", v56);

              -[PKDashboardPassMessage setShowDisclosure:](v53, "setShowDisclosure:", 1);
              PKDashboardMessagePassIcon(self->_pass);
              v57 = (void *)objc_claimAutoreleasedReturnValue();
              -[PKDashboardPassMessage setImage:](v53, "setImage:", v57);

              -[PKDashboardPassMessage setReportToAnalytics:](v53, "setReportToAnalytics:", 1);
              objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", self->_pass);
              v58 = (void *)objc_claimAutoreleasedReturnValue();
              -[PKDashboardPassMessage setAnalyticsReporterSubject:](v53, "setAnalyticsReporterSubject:", v58);

              objc_initWeak(&location, self);
              v104[0] = MEMORY[0x1E0C809B0];
              v104[1] = 3221225472;
              v104[2] = __70__PKDashboardPaymentPassDataSource__messagesForAccountUserInvitations__block_invoke_8;
              v104[3] = &unk_1E3E61B68;
              objc_copyWeak(&v105, &location);
              v104[4] = v42;
              -[PKDashboardPassMessage setActionOnButtonPress:](v53, "setActionOnButtonPress:", v104);
              objc_msgSend(v88, "addObject:", v53);
              objc_destroyWeak(&v105);
              objc_destroyWeak(&location);

            }
          }

          v40 = self;
        }
        v39 = objc_msgSend(v86, "countByEnumeratingWithState:objects:count:", &v106, v143, 16);
      }
      while (v39);
    }

    -[PKInboxDataSource activeInboxMessages](self->_inboxDataSource, "activeInboxMessages");
    v59 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v59, "pk_objectsPassingTest:", &__block_literal_global_1110);
    v60 = (void *)objc_claimAutoreleasedReturnValue();

    v102 = 0u;
    v103 = 0u;
    v100 = 0u;
    v101 = 0u;
    v85 = v60;
    v61 = objc_msgSend(v85, "countByEnumeratingWithState:objects:count:", &v100, v142, 16);
    v62 = self;
    if (v61)
    {
      v90 = *(_QWORD *)v101;
      do
      {
        v93 = v61;
        for (k = 0; k != v93; ++k)
        {
          if (*(_QWORD *)v101 != v90)
            objc_enumerationMutation(v85);
          v64 = *(void **)(*((_QWORD *)&v100 + 1) + 8 * k);
          objc_msgSend(v64, "accountUserInvitation");
          v65 = (void *)objc_claimAutoreleasedReturnValue();
          v66 = objc_msgSend(v65, "feature");
          if (v66 == -[PKAccount feature](v62->_account, "feature"))
          {
            objc_msgSend(v65, "applicationIdentifier");
            v96 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v65, "invitationDetails");
            v67 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v67, "originatorAltDSID");
            v68 = (void *)objc_claimAutoreleasedReturnValue();
            -[PKFamilyMemberCollection familyMemberForAltDSID:](self->_familyCollection, "familyMemberForAltDSID:", v68);
            v69 = (void *)objc_claimAutoreleasedReturnValue();
            v70 = (void *)MEMORY[0x1E0D66C60];
            objc_msgSend(v67, "originatorNameComponents");
            v71 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v70, "contactForFamilyMember:nameComponents:imageData:", v69, v71, 0);
            v72 = (void *)objc_claimAutoreleasedReturnValue();

            v73 = objc_alloc_init(PKDashboardPassMessage);
            -[PKDashboardPassMessage setIdentifier:](v73, "setIdentifier:", v96);
            PKLocalizedMadisonString(CFSTR("NEW_OWNER_INVITATION_DASHBOARD_TITLE"));
            v74 = (void *)objc_claimAutoreleasedReturnValue();
            -[PKDashboardPassMessage setTitle:](v73, "setTitle:", v74);

            objc_msgSend(v72, "givenName");
            v75 = (void *)objc_claimAutoreleasedReturnValue();
            PKLocalizedMadisonString(CFSTR("NEW_OWNER_INVITATION_DASHBOARD_MESSAGE"), CFSTR("%@"), v75);
            v76 = (void *)objc_claimAutoreleasedReturnValue();
            -[PKDashboardPassMessage setMessage:](v73, "setMessage:", v76);

            PKLocalizedMadisonString(CFSTR("NEW_OWNER_INVITATION_DASHBOARD_BUTTON"));
            v77 = (void *)objc_claimAutoreleasedReturnValue();
            -[PKDashboardPassMessage setButtonTitle:](v73, "setButtonTitle:", v77);

            -[PKDashboardPassMessage setShowDisclosure:](v73, "setShowDisclosure:", 1);
            PKDashboardMessagePassIcon(self->_pass);
            v78 = (void *)objc_claimAutoreleasedReturnValue();
            -[PKDashboardPassMessage setImage:](v73, "setImage:", v78);

            -[PKDashboardPassMessage setReportToAnalytics:](v73, "setReportToAnalytics:", 1);
            objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", self->_pass);
            v79 = (void *)objc_claimAutoreleasedReturnValue();
            -[PKDashboardPassMessage setAnalyticsReporterSubject:](v73, "setAnalyticsReporterSubject:", v79);

            objc_initWeak(&location, self);
            v98[0] = MEMORY[0x1E0C809B0];
            v98[1] = 3221225472;
            v98[2] = __70__PKDashboardPaymentPassDataSource__messagesForAccountUserInvitations__block_invoke_10;
            v98[3] = &unk_1E3E61B68;
            objc_copyWeak(&v99, &location);
            v98[4] = v64;
            -[PKDashboardPassMessage setActionOnButtonPress:](v73, "setActionOnButtonPress:", v98);
            objc_msgSend(v88, "addObject:", v73);
            objc_destroyWeak(&v99);
            objc_destroyWeak(&location);

          }
          v62 = self;
        }
        v61 = objc_msgSend(v85, "countByEnumeratingWithState:objects:count:", &v100, v142, 16);
      }
      while (v61);
    }

    if (objc_msgSend(v88, "count"))
      v80 = (void *)objc_msgSend(v88, "copy");
    else
      v80 = 0;

    _Block_object_dispose(&v135, 8);
  }
  else
  {
    v80 = 0;
  }
  return v80;
}

BOOL __70__PKDashboardPaymentPassDataSource__messagesForAccountUserInvitations__block_invoke(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  int v11;
  _BOOL8 v13;

  v3 = a2;
  v4 = objc_msgSend(v3, "applicationState");
  objc_msgSend(v3, "invitationDetails");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v5, "originatorAltDSID");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 776), "currentUserAltDSID");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = v6;
  v9 = v7;
  v10 = v9;
  if (v8 == v9)
  {

  }
  else
  {
    if (!v8 || !v9)
    {

LABEL_14:
      v13 = 0;
      goto LABEL_15;
    }
    v11 = objc_msgSend(v8, "isEqualToString:", v9);

    if (!v11)
      goto LABEL_14;
  }
  v13 = v4 != 4 && v4 != 1;
LABEL_15:

  return v13;
}

void __70__PKDashboardPaymentPassDataSource__messagesForAccountUserInvitations__block_invoke_2(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = WeakRetained;
    objc_msgSend(WeakRetained, "_presentCreateAccountUserInvitation");
    WeakRetained = v2;
  }

}

void __70__PKDashboardPaymentPassDataSource__messagesForAccountUserInvitations__block_invoke_3(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  void *v5;
  _QWORD v6[2];

  v6[1] = *MEMORY[0x1E0C80C00];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v3 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
    if (v3)
    {
      objc_msgSend(v3, "arrayByAddingObject:", *(_QWORD *)(a1 + 32));
      v4 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v6[0] = *(_QWORD *)(a1 + 32);
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v6, 1);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
    }
    v5 = v4;
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), v4);

    PKSharedCacheSetObjectForKey();
    objc_msgSend(WeakRetained, "reloadMessages");
  }

}

BOOL __70__PKDashboardPaymentPassDataSource__messagesForAccountUserInvitations__block_invoke_4(uint64_t a1, void *a2)
{
  return (objc_msgSend(a2, "applicationState") & 0xFFFFFFFFFFFFFFFELL) == 8;
}

void __70__PKDashboardPaymentPassDataSource__messagesForAccountUserInvitations__block_invoke_5(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained, "reloadMessages");
    if (*(_BYTE *)(a1 + 48))
      objc_msgSend(v3, "_presentPassDetailsWithAction:", 0);
    else
      objc_msgSend(v3, "_presentAccountUserDetails:", *(_QWORD *)(a1 + 32));
    WeakRetained = v3;
  }

}

void __70__PKDashboardPaymentPassDataSource__messagesForAccountUserInvitations__block_invoke_6(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  void *v5;
  _QWORD v6[2];

  v6[1] = *MEMORY[0x1E0C80C00];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v3 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
    if (v3)
    {
      objc_msgSend(v3, "arrayByAddingObject:", *(_QWORD *)(a1 + 32));
      v4 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v6[0] = *(_QWORD *)(a1 + 32);
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v6, 1);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
    }
    v5 = v4;
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), v4);

    PKSharedCacheSetObjectForKey();
    objc_msgSend(WeakRetained, "reloadMessages");
  }

}

BOOL __70__PKDashboardPaymentPassDataSource__messagesForAccountUserInvitations__block_invoke_7(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "applicationState") == 6;
}

void __70__PKDashboardPaymentPassDataSource__messagesForAccountUserInvitations__block_invoke_8(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained, "_presentAccountUserInvitation:", *(_QWORD *)(a1 + 32));
    WeakRetained = v3;
  }

}

BOOL __70__PKDashboardPaymentPassDataSource__messagesForAccountUserInvitations__block_invoke_9(uint64_t a1, void *a2)
{
  id v2;
  _BOOL8 v3;
  void *v4;
  void *v5;

  v2 = a2;
  if (objc_msgSend(v2, "type"))
  {
    v3 = 0;
  }
  else
  {
    objc_msgSend(v2, "accountUserInvitation");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "invitationDetails");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v3 = objc_msgSend(v5, "accountUserAccessLevel") == 1;

  }
  return v3;
}

void __70__PKDashboardPaymentPassDataSource__messagesForAccountUserInvitations__block_invoke_10(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained, "_presentInboxMessage:", *(_QWORD *)(a1 + 32));
    WeakRetained = v3;
  }

}

- (id)_messagesForAccountUserSetupCashForFamily
{
  PKPeerPaymentAccount *peerPaymentAccount;
  void *v4;
  int v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t i;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  PKDashboardPassMessage *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  id v28;
  void *v29;
  id obj;
  uint64_t v31;
  _QWORD v32[4];
  id v33;
  uint64_t *v34;
  id v35;
  _QWORD v36[5];
  id v37;
  id location;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t);
  void (*v43)(uint64_t);
  id v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t (*v48)(uint64_t, uint64_t);
  void (*v49)(uint64_t);
  id v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  _BYTE v55[128];
  uint64_t v56;

  v56 = *MEMORY[0x1E0C80C00];
  if (self->_accountUsersLoaded
    && (peerPaymentAccount = self->_peerPaymentAccount) != 0
    && self->_familyCollectionLoaded
    && -[PKPeerPaymentAccount supportsFamilySharing](peerPaymentAccount, "supportsFamilySharing")
    && -[PKPeerPaymentAccount role](self->_peerPaymentAccount, "role") != 1
    && (-[PKFamilyMemberCollection currentUser](self->_familyCollection, "currentUser"),
        v4 = (void *)objc_claimAutoreleasedReturnValue(),
        v5 = objc_msgSend(v4, "isOrganizer"),
        v4,
        v5))
  {
    objc_msgSend(MEMORY[0x1E0D66F08], "sharedInstance");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKPeerPaymentAccount associatedPassUniqueID](self->_peerPaymentAccount, "associatedPassUniqueID");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "passWithUniqueID:", v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "paymentPass");
    v29 = (void *)objc_claimAutoreleasedReturnValue();

    if (v29)
    {
      v28 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
      -[PKAccountUserCollection accountUsersExcludingCurrentAccountUser](self->_accountUserCollection, "accountUsersExcludingCurrentAccountUser");
      v53 = 0u;
      v54 = 0u;
      v51 = 0u;
      v52 = 0u;
      obj = (id)objc_claimAutoreleasedReturnValue();
      v9 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v51, v55, 16);
      if (v9)
      {
        v31 = *(_QWORD *)v52;
        do
        {
          for (i = 0; i != v9; ++i)
          {
            if (*(_QWORD *)v52 != v31)
              objc_enumerationMutation(obj);
            v11 = *(void **)(*((_QWORD *)&v51 + 1) + 8 * i);
            objc_msgSend(v11, "altDSID");
            v12 = (void *)objc_claimAutoreleasedReturnValue();
            v45 = 0;
            v46 = &v45;
            v47 = 0x3032000000;
            v48 = __Block_byref_object_copy__41;
            v49 = __Block_byref_object_dispose__41;
            -[PKFamilyMemberCollection familyMemberForAltDSID:](self->_familyCollection, "familyMemberForAltDSID:", v12);
            v50 = (id)objc_claimAutoreleasedReturnValue();
            v13 = (void *)v46[5];
            if (v13 && objc_msgSend(v13, "memberType") && objc_msgSend((id)v46[5], "memberType") != -1)
            {
              v39 = 0;
              v40 = &v39;
              v41 = 0x3032000000;
              v42 = __Block_byref_object_copy__41;
              v43 = __Block_byref_object_dispose__41;
              PKSharedCacheGetArrayForKey();
              v44 = (id)objc_claimAutoreleasedReturnValue();
              if ((objc_msgSend((id)v40[5], "containsObject:", v12) & 1) == 0)
              {
                -[PKPeerPaymentAccount peerPaymentAccountWithAltDSID:](self->_peerPaymentAccount, "peerPaymentAccountWithAltDSID:", v12);
                v14 = (void *)objc_claimAutoreleasedReturnValue();
                if (!v14)
                {
                  v15 = (void *)MEMORY[0x1E0D66C60];
                  v16 = v46[5];
                  objc_msgSend(v11, "nameComponents");
                  v17 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v15, "contactForFamilyMember:nameComponents:imageData:", v16, v17, 0);
                  v18 = (void *)objc_claimAutoreleasedReturnValue();

                  objc_msgSend(v18, "givenName");
                  v19 = (void *)objc_claimAutoreleasedReturnValue();
                  v20 = objc_alloc_init(PKDashboardPassMessage);
                  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@-%@"), CFSTR("accountUserSetupCashForFamily"), v12);
                  v21 = (void *)objc_claimAutoreleasedReturnValue();
                  -[PKDashboardPassMessage setIdentifier:](v20, "setIdentifier:", v21);
                  -[PKDashboardPassMessage setShowDisclosure:](v20, "setShowDisclosure:", 1);
                  PKLocalizedMadisonString(CFSTR("SETUP_APPLE_CASH_FOR_ACCOUNT_USER_TITLE"), CFSTR("%@"), v19);
                  v22 = (void *)objc_claimAutoreleasedReturnValue();
                  -[PKDashboardPassMessage setTitle:](v20, "setTitle:", v22);

                  PKLocalizedMadisonString(CFSTR("SETUP_APPLE_CASH_FOR_ACCOUNT_USER_MESSAGE"), CFSTR("%@"), v19);
                  v23 = (void *)objc_claimAutoreleasedReturnValue();
                  -[PKDashboardPassMessage setMessage:](v20, "setMessage:", v23);

                  PKLocalizedMadisonString(CFSTR("SETUP_APPLE_CASH_FOR_ACCOUNT_USER_BUTTON"), CFSTR("%@"), v19);
                  v24 = (void *)objc_claimAutoreleasedReturnValue();
                  -[PKDashboardPassMessage setButtonTitle:](v20, "setButtonTitle:", v24);

                  PKDashboardMessagePassIcon(v29);
                  v25 = (void *)objc_claimAutoreleasedReturnValue();
                  -[PKDashboardPassMessage setImage:](v20, "setImage:", v25);

                  objc_initWeak(&location, self);
                  v36[0] = MEMORY[0x1E0C809B0];
                  v36[1] = 3221225472;
                  v36[2] = 0x19DC59000;
                  v36[3] = &unk_1E3E719B0;
                  objc_copyWeak(&v37, &location);
                  v36[4] = &v45;
                  -[PKDashboardPassMessage setActionOnButtonPress:](v20, "setActionOnButtonPress:", v36);
                  v32[0] = MEMORY[0x1E0C809B0];
                  v32[1] = 3221225472;
                  v32[2] = __77__PKDashboardPaymentPassDataSource__messagesForAccountUserSetupCashForFamily__block_invoke_2;
                  v32[3] = &unk_1E3E6D160;
                  objc_copyWeak(&v35, &location);
                  v34 = &v39;
                  v33 = v12;
                  -[PKDashboardPassMessage setActionOnDismiss:](v20, "setActionOnDismiss:", v32);
                  objc_msgSend(v28, "addObject:", v20);

                  objc_destroyWeak(&v35);
                  objc_destroyWeak(&v37);
                  objc_destroyWeak(&location);

                  v14 = 0;
                }

              }
              _Block_object_dispose(&v39, 8);

            }
            _Block_object_dispose(&v45, 8);

          }
          v9 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v51, v55, 16);
        }
        while (v9);
      }

      if (objc_msgSend(v28, "count"))
        v26 = (void *)objc_msgSend(v28, "copy");
      else
        v26 = 0;

    }
    else
    {
      v26 = 0;
    }

  }
  else
  {
    v26 = 0;
  }
  return v26;
}

void __77__PKDashboardPaymentPassDataSource__messagesForAccountUserSetupCashForFamily__block_invoke(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained, "_presentApplCashFamilySetupForFamilyMember:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40));
    WeakRetained = v3;
  }

}

void __77__PKDashboardPaymentPassDataSource__messagesForAccountUserSetupCashForFamily__block_invoke_2(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  void *v5;
  _QWORD v6[2];

  v6[1] = *MEMORY[0x1E0C80C00];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v3 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
    if (v3)
    {
      objc_msgSend(v3, "arrayByAddingObject:", *(_QWORD *)(a1 + 32));
      v4 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v6[0] = *(_QWORD *)(a1 + 32);
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v6, 1);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
    }
    v5 = v4;
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), v4);

    PKSharedCacheSetObjectForKey();
    objc_msgSend(WeakRetained, "reloadMessages");
  }

}

- (id)_messagesToOrderPhysicalCardForUnderageParticipants
{
  PKAccount *account;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  char v21;
  id v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  PKDashboardPassMessage *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  id v36;
  void *v37;
  id obj;
  NSSet *v39;
  uint64_t v40;
  uint64_t v41;
  PKDashboardPaymentPassDataSource *val;
  uint64_t v43;
  _QWORD v44[4];
  id v45;
  uint64_t *v46;
  id v47;
  _QWORD v48[5];
  id v49;
  id location;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t (*v62)(uint64_t, uint64_t);
  void (*v63)(uint64_t);
  id v64;
  _BYTE v65[128];
  _BYTE v66[128];
  uint64_t v67;

  v67 = *MEMORY[0x1E0C80C00];
  if (!self->_accountUsersLoaded
    || !self->_physicalCardsLoaded
    || !self->_accountUserInvitationsLoaded
    || !self->_familyCollectionLoaded
    || (account = self->_account) == 0
    || -[PKAccount accessLevel](account, "accessLevel") != 1
    || !self->_physicalCardController
    || !-[PKAccount supportsRequestPhysicalCard](self->_account, "supportsRequestPhysicalCard"))
  {
    v34 = 0;
    return v34;
  }
  val = self;
  v36 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v59 = 0;
  v60 = &v59;
  v61 = 0x3032000000;
  v62 = __Block_byref_object_copy__41;
  v63 = __Block_byref_object_dispose__41;
  PKSharedCacheGetArrayForKey();
  v64 = (id)objc_claimAutoreleasedReturnValue();
  -[PKAccountUserCollection activeAccountUsers](self->_accountUserCollection, "activeAccountUsers");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "allObjects");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "pk_objectsPassingTest:", &__block_literal_global_1124);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v57 = 0u;
  v58 = 0u;
  v55 = 0u;
  v56 = 0u;
  obj = v6;
  v7 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v55, v66, 16);
  if (!v7)
    goto LABEL_39;
  v40 = *(_QWORD *)v56;
  do
  {
    v41 = v7;
    for (i = 0; i != v41; ++i)
    {
      if (*(_QWORD *)v56 != v40)
        objc_enumerationMutation(obj);
      v9 = *(void **)(*((_QWORD *)&v55 + 1) + 8 * i);
      objc_msgSend(v9, "altDSID");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKFamilyMemberCollection familyMemberForAltDSID:](val->_familyCollection, "familyMemberForAltDSID:", v10);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = v11;
      if (!v11
        || !objc_msgSend(v11, "memberType")
        || objc_msgSend(v12, "memberType") == -1
        || (objc_msgSend((id)v60[5], "containsObject:", v10) & 1) != 0
        || !objc_msgSend(v9, "supportsRequestPhysicalCard"))
      {
        goto LABEL_37;
      }
      v37 = v9;
      v53 = 0u;
      v54 = 0u;
      v51 = 0u;
      v52 = 0u;
      v39 = val->_physicalCards;
      v13 = -[NSSet countByEnumeratingWithState:objects:count:](v39, "countByEnumeratingWithState:objects:count:", &v51, v65, 16);
      if (!v13)
      {
LABEL_32:

        goto LABEL_35;
      }
      v43 = *(_QWORD *)v52;
LABEL_21:
      v14 = 0;
      while (1)
      {
        if (*(_QWORD *)v52 != v43)
          objc_enumerationMutation(v39);
        v15 = *(void **)(*((_QWORD *)&v51 + 1) + 8 * v14);
        objc_msgSend(v15, "accountUserAltDSID");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        v17 = v16;
        if (!v16)
          goto LABEL_30;
        v18 = v16;
        v19 = v10;
        v20 = v19;
        if (v18 == v19)
          break;
        if (v10)
        {
          v21 = objc_msgSend(v18, "isEqualToString:", v19);

          if ((v21 & 1) != 0)
            goto LABEL_34;
        }
        else
        {

        }
LABEL_30:

        if (v13 == ++v14)
        {
          v13 = -[NSSet countByEnumeratingWithState:objects:count:](v39, "countByEnumeratingWithState:objects:count:", &v51, v65, 16);
          if (v13)
            goto LABEL_21;
          goto LABEL_32;
        }
      }

      v18 = v20;
LABEL_34:
      v22 = v15;

      if (v22)
        goto LABEL_36;
LABEL_35:
      v23 = (void *)MEMORY[0x1E0D66C60];
      objc_msgSend(v37, "nameComponents");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v23, "contactForFamilyMember:nameComponents:imageData:", v12, v24, 0);
      v25 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v25, "givenName");
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      v27 = objc_alloc_init(PKDashboardPassMessage);
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@-%@"), CFSTR("createAccountUserInvitationPrompt"), v10);
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setIdentifier:](v27, "setIdentifier:", v28);
      -[PKDashboardPassMessage setShowDisclosure:](v27, "setShowDisclosure:", 1);
      PKLocalizedMadisonString(CFSTR("OWNER_DASHBOARD_URDER_UNDERAGE_PARTCIPANT_PHYSICAL_CARD_TITLE"));
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setTitle:](v27, "setTitle:", v29);

      PKLocalizedMadisonString(CFSTR("OWNER_DASHBOARD_URDER_UNDERAGE_PARTCIPANT_PHYSICAL_CARD_MESSAGE"), CFSTR("%@"), v26);
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setMessage:](v27, "setMessage:", v30);

      PKLocalizedMadisonString(CFSTR("OWNER_DASHBOARD_URDER_UNDERAGE_PARTCIPANT_PHYSICAL_CARD_ACTION"));
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setButtonTitle:](v27, "setButtonTitle:", v31);

      PKDashboardMessagePassIcon(val->_pass);
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setImage:](v27, "setImage:", v32);

      -[PKDashboardPassMessage setReportToAnalytics:](v27, "setReportToAnalytics:", 1);
      objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", val->_pass);
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPassMessage setAnalyticsReporterSubject:](v27, "setAnalyticsReporterSubject:", v33);

      objc_initWeak(&location, val);
      v48[0] = MEMORY[0x1E0C809B0];
      v48[1] = 3221225472;
      v48[2] = __87__PKDashboardPaymentPassDataSource__messagesToOrderPhysicalCardForUnderageParticipants__block_invoke_2;
      v48[3] = &unk_1E3E61B68;
      objc_copyWeak(&v49, &location);
      v48[4] = v37;
      -[PKDashboardPassMessage setActionOnButtonPress:](v27, "setActionOnButtonPress:", v48);
      v44[0] = MEMORY[0x1E0C809B0];
      v44[1] = 3221225472;
      v44[2] = __87__PKDashboardPaymentPassDataSource__messagesToOrderPhysicalCardForUnderageParticipants__block_invoke_4;
      v44[3] = &unk_1E3E6D160;
      objc_copyWeak(&v47, &location);
      v46 = &v59;
      v45 = v10;
      -[PKDashboardPassMessage setActionOnDismiss:](v27, "setActionOnDismiss:", v44);
      objc_msgSend(v36, "addObject:", v27);

      objc_destroyWeak(&v47);
      objc_destroyWeak(&v49);
      objc_destroyWeak(&location);

      v22 = 0;
LABEL_36:

LABEL_37:
    }
    v7 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v55, v66, 16);
  }
  while (v7);
LABEL_39:

  if (objc_msgSend(v36, "count"))
    v34 = (void *)objc_msgSend(v36, "copy");
  else
    v34 = 0;

  _Block_object_dispose(&v59, 8);
  return v34;
}

uint64_t __87__PKDashboardPaymentPassDataSource__messagesToOrderPhysicalCardForUnderageParticipants__block_invoke(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;

  v2 = a2;
  if (objc_msgSend(v2, "accessLevel") == 2)
    v3 = objc_msgSend(v2, "isCurrentUser") ^ 1;
  else
    v3 = 0;

  return v3;
}

void __87__PKDashboardPaymentPassDataSource__messagesToOrderPhysicalCardForUnderageParticipants__block_invoke_2(uint64_t a1)
{
  _QWORD *WeakRetained;
  PKPhysicalCardController *v3;
  _QWORD v4[5];

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = -[PKPhysicalCardController initWithAccountService:paymentPass:account:accountUser:physicalCards:]([PKPhysicalCardController alloc], "initWithAccountService:paymentPass:account:accountUser:physicalCards:", WeakRetained[114], WeakRetained[109], WeakRetained[48], *(_QWORD *)(a1 + 32), WeakRetained[96]);
    v4[0] = MEMORY[0x1E0C809B0];
    v4[1] = 3221225472;
    v4[2] = __87__PKDashboardPaymentPassDataSource__messagesToOrderPhysicalCardForUnderageParticipants__block_invoke_3;
    v4[3] = &unk_1E3E73350;
    v4[4] = WeakRetained;
    -[PKPhysicalCardController orderFlowViewControllerForReason:content:completion:](v3, "orderFlowViewControllerForReason:content:completion:", 0, 0, v4);

  }
}

void __87__PKDashboardPaymentPassDataSource__messagesToOrderPhysicalCardForUnderageParticipants__block_invoke_3(uint64_t a1, void *a2, void *a3)
{
  PKNavigationController *v5;
  void *v6;
  id v7;

  v7 = a2;
  if (v7)
  {
    v5 = -[PKNavigationController initWithRootViewController:]([PKNavigationController alloc], "initWithRootViewController:", v7);
    -[PKNavigationController setModalPresentationStyle:](v5, "setModalPresentationStyle:", 2);
  }
  else
  {
    v5 = (PKNavigationController *)PKAlertForDisplayableErrorWithHandlers(a3, 0, 0, 0);
  }
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "pkui_viewControllerFromResponderChain");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "presentViewController:animated:completion:", v5, 1, 0);

}

void __87__PKDashboardPaymentPassDataSource__messagesToOrderPhysicalCardForUnderageParticipants__block_invoke_4(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  void *v5;
  _QWORD v6[2];

  v6[1] = *MEMORY[0x1E0C80C00];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v3 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
    if (v3)
    {
      objc_msgSend(v3, "arrayByAddingObject:", *(_QWORD *)(a1 + 32));
      v4 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v6[0] = *(_QWORD *)(a1 + 32);
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v6, 1);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
    }
    v5 = v4;
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), v4);

    PKSharedCacheSetObjectForKey();
    objc_msgSend(WeakRetained, "reloadMessages");
  }

}

- (id)_messagesForLockedCardParticipants
{
  PKAccount *account;
  void *v4;
  void *v5;
  void *v6;
  uint64_t i;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  PKDashboardPassMessage *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  id obj;
  uint64_t v25;
  id v26;
  uint64_t v27;
  _QWORD v28[4];
  id v29;
  id location;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _BYTE v35[128];
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  if (self->_accountUsersLoaded
    && self->_accountUserInvitationsLoaded
    && self->_familyCollectionLoaded
    && (account = self->_account) != 0
    && -[PKAccount accessLevel](account, "accessLevel") == 1)
  {
    v26 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
    -[PKAccountUserCollection activeAccountUsers](self->_accountUserCollection, "activeAccountUsers");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "allObjects");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "pk_objectsPassingTest:", &__block_literal_global_1131);
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    v33 = 0u;
    v34 = 0u;
    v31 = 0u;
    v32 = 0u;
    obj = v6;
    v27 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v31, v35, 16);
    if (v27)
    {
      v25 = *(_QWORD *)v32;
      do
      {
        for (i = 0; i != v27; ++i)
        {
          if (*(_QWORD *)v32 != v25)
            objc_enumerationMutation(obj);
          v8 = *(void **)(*((_QWORD *)&v31 + 1) + 8 * i);
          objc_msgSend(v8, "altDSID");
          v9 = (void *)objc_claimAutoreleasedReturnValue();
          -[PKFamilyMemberCollection familyMemberForAltDSID:](self->_familyCollection, "familyMemberForAltDSID:", v9);
          v10 = (void *)objc_claimAutoreleasedReturnValue();
          v11 = (void *)MEMORY[0x1E0D66C60];
          objc_msgSend(v8, "nameComponents");
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v11, "contactForFamilyMember:nameComponents:imageData:", v10, v12, 0);
          v13 = (void *)objc_claimAutoreleasedReturnValue();

          objc_msgSend(v13, "givenName");
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          v15 = objc_alloc_init(PKDashboardPassMessage);
          objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@-%@"), CFSTR("cardParticipantLocked"), v9);
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          -[PKDashboardPassMessage setIdentifier:](v15, "setIdentifier:", v16);
          -[PKDashboardPassMessage setShowDisclosure:](v15, "setShowDisclosure:", 1);
          PKLocalizedMadisonString(CFSTR("PARTICIPANT_LOCKED_DASHBOARD_TITLE"), CFSTR("%@"), v14);
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          -[PKDashboardPassMessage setTitle:](v15, "setTitle:", v17);

          PKLocalizedMadisonString(CFSTR("PARTICIPANT_LOCKED_DASHBOARD_MESSAGE"), CFSTR("%@"), v14);
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          -[PKDashboardPassMessage setMessage:](v15, "setMessage:", v18);

          PKLocalizedMadisonString(CFSTR("PARTICIPANT_LOCKED_DASHBOARD_ACTION"));
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          -[PKDashboardPassMessage setButtonTitle:](v15, "setButtonTitle:", v19);

          PKDashboardMessagePassIcon(self->_pass);
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          -[PKDashboardPassMessage setImage:](v15, "setImage:", v20);

          -[PKDashboardPassMessage setReportToAnalytics:](v15, "setReportToAnalytics:", 1);
          objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", self->_pass);
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          -[PKDashboardPassMessage setAnalyticsReporterSubject:](v15, "setAnalyticsReporterSubject:", v21);

          objc_initWeak(&location, self);
          v28[0] = MEMORY[0x1E0C809B0];
          v28[1] = 3221225472;
          v28[2] = __70__PKDashboardPaymentPassDataSource__messagesForLockedCardParticipants__block_invoke_2;
          v28[3] = &unk_1E3E61310;
          objc_copyWeak(&v29, &location);
          -[PKDashboardPassMessage setActionOnButtonPress:](v15, "setActionOnButtonPress:", v28);
          objc_msgSend(v26, "addObject:", v15);
          objc_destroyWeak(&v29);
          objc_destroyWeak(&location);

        }
        v27 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v31, v35, 16);
      }
      while (v27);
    }

    if (objc_msgSend(v26, "count"))
      v22 = (void *)objc_msgSend(v26, "copy");
    else
      v22 = 0;

  }
  else
  {
    v22 = 0;
  }
  return v22;
}

uint64_t __70__PKDashboardPaymentPassDataSource__messagesForLockedCardParticipants__block_invoke(uint64_t a1, void *a2)
{
  id v2;
  uint64_t v3;

  v2 = a2;
  if (objc_msgSend(v2, "accessLevel") == 2 && objc_msgSend(v2, "accountState") == 3)
    v3 = objc_msgSend(v2, "isCurrentUser") ^ 1;
  else
    v3 = 0;

  return v3;
}

void __70__PKDashboardPaymentPassDataSource__messagesForLockedCardParticipants__block_invoke_2(uint64_t a1)
{
  PKBusinessChatAccountStateContext *v1;
  _QWORD *WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v1 = -[PKBusinessChatAccountStateContext initWithAccount:paymentPass:eligibleForRecoveryPaymentPlan:]([PKBusinessChatAccountStateContext alloc], "initWithAccount:paymentPass:eligibleForRecoveryPaymentPlan:", WeakRetained[48], WeakRetained[109], 0);
    objc_msgSend(WeakRetained, "_presentAccountResolution:forBusinessChatContext:", 2, v1);

  }
}

- (id)_messageForAccountPendingFamilyMembers
{
  PKDashboardPassMessage *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  _QWORD v11[4];
  id v12;
  _QWORD v13[4];
  id v14;
  id location;

  if (self->_accountPendingFamilyMembersLoaded
    && (PKSharedCacheGetBoolForKey() & 1) == 0
    && -[NSArray count](self->_accountPendingFamilyMembers, "count"))
  {
    v3 = objc_alloc_init(PKDashboardPassMessage);
    -[PKDashboardPassMessage setIdentifier:](v3, "setIdentifier:", CFSTR("accountPendingFamilyMember"));
    -[PKDashboardPassMessage setShowDisclosure:](v3, "setShowDisclosure:", 1);
    PKLocalizedMadisonString(CFSTR("ACCOUNT_PENDING_FAMILY_MEMBER_TITLE"));
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setTitle:](v3, "setTitle:", v4);

    PKLocalizedMadisonString(CFSTR("ACCOUNT_PENDING_FAMILY_MEMBER_MESSAGE"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setMessage:](v3, "setMessage:", v5);

    PKLocalizedMadisonString(CFSTR("ACCOUNT_PENDING_FAMILY_MEMBER_BUTTON"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setButtonTitle:](v3, "setButtonTitle:", v6);

    PKDashboardMessagePassIcon(self->_pass);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setImage:](v3, "setImage:", v7);

    -[PKDashboardPassMessage setReportToAnalytics:](v3, "setReportToAnalytics:", 1);
    objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", self->_pass);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setAnalyticsReporterSubject:](v3, "setAnalyticsReporterSubject:", v8);

    objc_initWeak(&location, self);
    v9 = MEMORY[0x1E0C809B0];
    v13[0] = MEMORY[0x1E0C809B0];
    v13[1] = 3221225472;
    v13[2] = __74__PKDashboardPaymentPassDataSource__messageForAccountPendingFamilyMembers__block_invoke;
    v13[3] = &unk_1E3E61310;
    objc_copyWeak(&v14, &location);
    -[PKDashboardPassMessage setActionOnButtonPress:](v3, "setActionOnButtonPress:", v13);
    v11[0] = v9;
    v11[1] = 3221225472;
    v11[2] = __74__PKDashboardPaymentPassDataSource__messageForAccountPendingFamilyMembers__block_invoke_2;
    v11[3] = &unk_1E3E61310;
    objc_copyWeak(&v12, &location);
    -[PKDashboardPassMessage setActionOnDismiss:](v3, "setActionOnDismiss:", v11);
    objc_destroyWeak(&v12);
    objc_destroyWeak(&v14);
    objc_destroyWeak(&location);
  }
  else
  {
    v3 = 0;
  }
  return v3;
}

void __74__PKDashboardPaymentPassDataSource__messageForAccountPendingFamilyMembers__block_invoke(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    PKSharedCacheSetBoolForKey();
    objc_msgSend(WeakRetained, "_presentCreateAccountUserInvitation");
  }

}

void __74__PKDashboardPaymentPassDataSource__messageForAccountPendingFamilyMembers__block_invoke_2(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = WeakRetained;
    PKSharedCacheSetBoolForKey();
    WeakRetained = v2;
  }

}

- (id)_messageForFirstMonthCoOwners
{
  PKAccount *account;
  PKDashboardPassMessage *v4;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  NSObject *v11;
  void *v12;
  id v13;
  NSObject *v14;
  void *v15;
  void *v16;
  NSString *v17;
  void *v18;
  NSString *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  _QWORD v25[4];
  id v26;
  _QWORD v27[4];
  id v28;
  id location[2];

  if (self->_accountUsersLoaded && self->_accountUserInvitationsLoaded && self->_familyCollectionLoaded)
  {
    account = self->_account;
    if (account)
    {
      if (-[PKAccount accessLevel](account, "accessLevel") == 1
        && -[PKAccount isCoOwner](self->_account, "isCoOwner")
        && (PKSharedCacheGetBoolForKey() & 1) == 0)
      {
        -[PKAccount creditDetails](self->_account, "creditDetails");
        v6 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v6, "accountSummary");
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "mergeSummary");
        v8 = (void *)objc_claimAutoreleasedReturnValue();

        objc_msgSend(v8, "accountDetails");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "pk_anyObjectPassingTest:", &__block_literal_global_1145);
        v10 = (void *)objc_claimAutoreleasedReturnValue();

        if (!v10)
        {
          PKLogFacilityTypeGetObject();
          v11 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
          {
            LOWORD(location[0]) = 0;
            _os_log_impl(&dword_19D178000, v11, OS_LOG_TYPE_DEFAULT, "Not showing first month merge balance dashboard message because no account had a statement balance", (uint8_t *)location, 2u);
          }
          v4 = 0;
          goto LABEL_23;
        }
        -[PKAccount creditDetails](self->_account, "creditDetails");
        v11 = objc_claimAutoreleasedReturnValue();
        -[NSObject mergeDate](v11, "mergeDate");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        if (v12)
        {
          if (!-[NSObject isInMonthOfMerge](v11, "isInMonthOfMerge"))
          {
            v4 = 0;
            goto LABEL_22;
          }
          v13 = objc_alloc(MEMORY[0x1E0C99D48]);
          v14 = objc_msgSend(v13, "initWithCalendarIdentifier:", *MEMORY[0x1E0C996C8]);
          PKStartOfLastMonth();
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          -[NSObject components:fromDate:](v14, "components:fromDate:", 8, v15);
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v16, "month");

          PKGregorianMonthSpecificLocalizedStringKeyForKey();
          v17 = (NSString *)objc_claimAutoreleasedReturnValue();
          PKLocalizedMadisonString(v17);
          v18 = (void *)objc_claimAutoreleasedReturnValue();

          PKGregorianMonthSpecificLocalizedStringKeyForKey();
          v19 = (NSString *)objc_claimAutoreleasedReturnValue();
          PKLocalizedMadisonString(v19);
          v20 = (void *)objc_claimAutoreleasedReturnValue();

          v4 = objc_alloc_init(PKDashboardPassMessage);
          -[PKDashboardPassMessage setIdentifier:](v4, "setIdentifier:", CFSTR("accountCoOwnerFirstMonthMerge"));
          -[PKDashboardPassMessage setTitle:](v4, "setTitle:", v18);
          -[PKDashboardPassMessage setMessage:](v4, "setMessage:", v20);
          PKLocalizedMadisonString(CFSTR("ACCOUNT_COOWNER_FIRST_MERGE_MONTH_BUTTON"));
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          -[PKDashboardPassMessage setButtonTitle:](v4, "setButtonTitle:", v21);

          -[PKDashboardPassMessage setShowDisclosure:](v4, "setShowDisclosure:", 1);
          PKDashboardMessagePassIcon(self->_pass);
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          -[PKDashboardPassMessage setImage:](v4, "setImage:", v22);

          -[PKDashboardPassMessage setReportToAnalytics:](v4, "setReportToAnalytics:", 1);
          objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", self->_pass);
          v23 = (void *)objc_claimAutoreleasedReturnValue();
          -[PKDashboardPassMessage setAnalyticsReporterSubject:](v4, "setAnalyticsReporterSubject:", v23);

          objc_initWeak(location, self);
          v24 = MEMORY[0x1E0C809B0];
          v27[0] = MEMORY[0x1E0C809B0];
          v27[1] = 3221225472;
          v27[2] = __65__PKDashboardPaymentPassDataSource__messageForFirstMonthCoOwners__block_invoke_1152;
          v27[3] = &unk_1E3E61310;
          objc_copyWeak(&v28, location);
          -[PKDashboardPassMessage setActionOnDismiss:](v4, "setActionOnDismiss:", v27);
          v25[0] = v24;
          v25[1] = 3221225472;
          v25[2] = __65__PKDashboardPaymentPassDataSource__messageForFirstMonthCoOwners__block_invoke_2;
          v25[3] = &unk_1E3E61310;
          objc_copyWeak(&v26, location);
          -[PKDashboardPassMessage setActionOnButtonPress:](v4, "setActionOnButtonPress:", v25);
          objc_destroyWeak(&v26);
          objc_destroyWeak(&v28);
          objc_destroyWeak(location);

        }
        else
        {
          PKLogFacilityTypeGetObject();
          v14 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
          {
            LOWORD(location[0]) = 0;
            _os_log_impl(&dword_19D178000, v14, OS_LOG_TYPE_DEFAULT, "Error: no merge date defined on a co-owner account", (uint8_t *)location, 2u);
          }
          v4 = 0;
        }

LABEL_22:
LABEL_23:

        return v4;
      }
    }
  }
  v4 = 0;
  return v4;
}

BOOL __65__PKDashboardPaymentPassDataSource__messageForFirstMonthCoOwners__block_invoke(uint64_t a1, void *a2)
{
  void *v2;
  _BOOL8 v3;

  objc_msgSend(a2, "statementBalance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2 != 0;

  return v3;
}

void __65__PKDashboardPaymentPassDataSource__messageForFirstMonthCoOwners__block_invoke_1152(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    PKSharedCacheSetBoolForKey();
    objc_msgSend(WeakRetained, "reloadMessages");
  }

}

void __65__PKDashboardPaymentPassDataSource__messageForFirstMonthCoOwners__block_invoke_2(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    PKSharedCacheSetBoolForKey();
    objc_msgSend(WeakRetained, "_presentBalanceDetails");
  }

}

- (id)_messageImageWithName:(id)a3 extension:(id)a4
{
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  __CFString *v13;
  __CFString *v14;
  int v15;
  void *v16;
  double v17;
  void *v18;

  v6 = a3;
  v7 = a4;
  v8 = v7;
  if (v6)
  {
    objc_msgSend(v6, "stringByAppendingFormat:", CFSTR(".%@"), v7);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v9)
    {
      v11 = 0;
LABEL_14:

      goto LABEL_15;
    }
    os_unfair_lock_lock(&self->_lockImages);
    -[NSMutableDictionary objectForKey:](self->_messageImagesCache, "objectForKey:", v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    os_unfair_lock_unlock(&self->_lockImages);
    if (v10)
    {
      v11 = v10;
LABEL_13:

      goto LABEL_14;
    }
    PKPassKitUIBundle();
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = v8;
    v14 = v13;
    if (v13 == CFSTR("pdf")
      || v13 && (v15 = -[__CFString isEqualToString:](v13, "isEqualToString:", CFSTR("pdf")), v14, v15))
    {
      objc_msgSend(v12, "URLForResource:withExtension:", v6, v14);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v17 = PKUIScreenScale();
      PKUIImageFromPDF(v16, 45.0, 45.0, v17);
      v18 = (void *)objc_claimAutoreleasedReturnValue();

      if (!v18)
      {
LABEL_12:
        v11 = v18;

        goto LABEL_13;
      }
    }
    else
    {
      PKUIImageNamed(v6);
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      if (!v18)
        goto LABEL_12;
    }
    os_unfair_lock_lock(&self->_lockImages);
    -[NSMutableDictionary setObject:forKey:](self->_messageImagesCache, "setObject:forKey:", v18, v9);
    os_unfair_lock_unlock(&self->_lockImages);
    goto LABEL_12;
  }
  v11 = 0;
LABEL_15:

  return v11;
}

- (id)revokingAccessMessage
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  const __CFString *v7;
  __CFString *v8;
  void *v9;

  -[PKPaymentPass devicePrimaryPaymentApplication](self->_pass, "devicePrimaryPaymentApplication");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "subcredentials");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "anyObject");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v4, "entitlement");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "carKeyEntitlementType");

  v7 = CFSTR("DASHBOARD_MESSAGE_FULL_ACCESS_REVOKING_MESSAGE");
  if (v6 == 1)
    v7 = CFSTR("DASHBOARD_MESSAGE_UNLOCK_ONLY_REVOKING_MESSAGE");
  if (v6 == 6)
    v8 = CFSTR("DASHBOARD_MESSAGE_PROPRIETARY_ACCESS_REVOKING_MESSAGE");
  else
    v8 = (__CFString *)v7;
  PKLocalizedCredentialString(&v8->isa);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return v9;
}

- (id)_messageForPaymentInformationEventExtensionInstallation
{
  void *v3;
  PKDashboardPassMessage *v4;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  _QWORD v12[4];
  id v13;
  uint64_t *v14;
  id v15;
  _QWORD v16[4];
  id v17;
  id location;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t);
  void (*v23)(uint64_t);
  id v24;

  -[PKPaymentPass uniqueID](self->_pass, "uniqueID");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = 0;
  v20 = &v19;
  v21 = 0x3032000000;
  v22 = __Block_byref_object_copy__41;
  v23 = __Block_byref_object_dispose__41;
  PKSharedCacheGetArrayForKey();
  v24 = (id)objc_claimAutoreleasedReturnValue();
  if (-[PKPaymentPass supportsBarcodePayment](self->_pass, "supportsBarcodePayment")
    && (objc_msgSend((id)v20[5], "containsObject:", v3) & 1) == 0
    && -[PKLinkedApplication state](self->_linkedApplication, "state") == 1
    && !-[PKLinkedApplication isInstalled](self->_linkedApplication, "isInstalled"))
  {
    -[PKPaymentPass organizationName](self->_pass, "organizationName");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = objc_alloc_init(PKDashboardPassMessage);
    -[PKDashboardPassMessage setIdentifier:](v4, "setIdentifier:", CFSTR("paymentInformationExtensionInstallPrompt"));
    PKDashboardMessagePassIcon(self->_pass);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setImage:](v4, "setImage:", v7);

    PKLocalizedAquamanString(CFSTR("DASHBOARD_APP_INSTALL_MESSAGE_TITLE"), CFSTR("%@"), v6);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setTitle:](v4, "setTitle:", v8);

    PKLocalizedAquamanString(CFSTR("DASHBOARD_APP_INSTALL_MESSAGE_BODY"), CFSTR("%@%@"), v6, v6);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setMessage:](v4, "setMessage:", v9);

    PKLocalizedAquamanString(CFSTR("VIEW_IN_APP_STORE"));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setButtonTitle:](v4, "setButtonTitle:", v10);

    -[PKDashboardPassMessage setShowDisclosure:](v4, "setShowDisclosure:", 1);
    objc_initWeak(&location, self);
    v11 = MEMORY[0x1E0C809B0];
    v16[0] = MEMORY[0x1E0C809B0];
    v16[1] = 3221225472;
    v16[2] = __91__PKDashboardPaymentPassDataSource__messageForPaymentInformationEventExtensionInstallation__block_invoke;
    v16[3] = &unk_1E3E61310;
    objc_copyWeak(&v17, &location);
    -[PKDashboardPassMessage setActionOnButtonPress:](v4, "setActionOnButtonPress:", v16);
    v12[0] = v11;
    v12[1] = 3221225472;
    v12[2] = __91__PKDashboardPaymentPassDataSource__messageForPaymentInformationEventExtensionInstallation__block_invoke_2;
    v12[3] = &unk_1E3E6D160;
    objc_copyWeak(&v15, &location);
    v14 = &v19;
    v13 = v3;
    -[PKDashboardPassMessage setActionOnDismiss:](v4, "setActionOnDismiss:", v12);

    objc_destroyWeak(&v15);
    objc_destroyWeak(&v17);
    objc_destroyWeak(&location);

  }
  else
  {
    v4 = 0;
  }
  _Block_object_dispose(&v19, 8);

  return v4;
}

void __91__PKDashboardPaymentPassDataSource__messageForPaymentInformationEventExtensionInstallation__block_invoke(uint64_t a1)
{
  id WeakRetained;
  void *v2;
  void *v3;
  id v4;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = (void *)*((_QWORD *)WeakRetained + 79);
    v4 = WeakRetained;
    objc_msgSend(*((id *)WeakRetained + 1), "pkui_viewControllerFromResponderChain");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "openApplication:", v3);

    WeakRetained = v4;
  }

}

void __91__PKDashboardPaymentPassDataSource__messageForPaymentInformationEventExtensionInstallation__block_invoke_2(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  void *v5;
  _QWORD v6[2];

  v6[1] = *MEMORY[0x1E0C80C00];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v3 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
    if (v3)
    {
      objc_msgSend(v3, "arrayByAddingObject:", *(_QWORD *)(a1 + 32));
      v4 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v6[0] = *(_QWORD *)(a1 + 32);
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v6, 1);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
    }
    v5 = v4;
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), v4);

    PKSharedCacheSetObjectForKey();
    objc_msgSend(WeakRetained, "reloadMessages");
  }

}

- (void)_messageForUnusableIdentityPassWithCompletion:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  _QWORD v12[4];
  id v13;
  id v14;
  id location;
  _QWORD v16[2];

  v16[1] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[PKPaymentPass devicePrimaryContactlessPaymentApplication](self->_pass, "devicePrimaryContactlessPaymentApplication");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "subcredentials");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "anyObject");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "identifier");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (-[PKPaymentPass isIdentityPass](self->_pass, "isIdentityPass")
    && -[PKPaymentPass activationState](self->_pass, "activationState") == PKPaymentPassActivationStateActivated
    && v8)
  {
    objc_initWeak(&location, self);
    v9 = objc_alloc(MEMORY[0x1E0D168D0]);
    v16[0] = *MEMORY[0x1E0D6A1C0];
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v16, 1);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = (void *)objc_msgSend(v9, "initWithPartitions:", v10);

    v12[0] = MEMORY[0x1E0C809B0];
    v12[1] = 3221225472;
    v12[2] = __82__PKDashboardPaymentPassDataSource__messageForUnusableIdentityPassWithCompletion___block_invoke;
    v12[3] = &unk_1E3E73668;
    objc_copyWeak(&v14, &location);
    v13 = v4;
    objc_msgSend(v11, "propertiesOfCredential:completion:", v8, v12);

    objc_destroyWeak(&v14);
    objc_destroyWeak(&location);
  }
  else
  {
    (*((void (**)(id, _QWORD))v4 + 2))(v4, 0);
  }

}

void __82__PKDashboardPaymentPassDataSource__messageForUnusableIdentityPassWithCompletion___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  _QWORD block[4];
  id v7;
  id v8;
  id v9;

  v3 = a2;
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __82__PKDashboardPaymentPassDataSource__messageForUnusableIdentityPassWithCompletion___block_invoke_2;
  block[3] = &unk_1E3E61478;
  objc_copyWeak(&v9, (id *)(a1 + 40));
  v4 = *(id *)(a1 + 32);
  v7 = v3;
  v8 = v4;
  v5 = v3;
  dispatch_async(MEMORY[0x1E0C80D38], block);

  objc_destroyWeak(&v9);
}

void __82__PKDashboardPaymentPassDataSource__messageForUnusableIdentityPassWithCompletion___block_invoke_2(uint64_t a1)
{
  id *v2;
  id *WeakRetained;
  void *v4;
  int v5;
  unint64_t v6;
  __CFString *v7;
  void *v8;
  void *v9;
  PKDashboardPassMessage *v10;
  void *v11;
  __CFString *v12;
  void *v13;
  void *v14;
  void *v15;
  _QWORD v16[4];
  id v17;

  v2 = (id *)(a1 + 48);
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    objc_msgSend(*(id *)(a1 + 32), "options");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v4, "presentmentAuthPolicy") == 2)
      v5 = objc_msgSend(*(id *)(a1 + 32), "hasUsablePresentmentAuthPolicy") ^ 1;
    else
      v5 = 0;

    v6 = objc_msgSend(WeakRetained[109], "identityType");
    if (v6 > 3)
    {
      v8 = 0;
      v9 = 0;
      if (!v5)
        goto LABEL_8;
    }
    else
    {
      v7 = off_1E3E73BC8[v6];
      PKLocalizedIdentityString(&off_1E3E73BA8[v6]->isa);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      PKLocalizedIdentityString(&v7->isa);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      if (!v5)
      {
LABEL_8:
        (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
LABEL_14:

        goto LABEL_15;
      }
    }
    v10 = objc_alloc_init(PKDashboardPassMessage);
    -[PKDashboardPassMessage setIdentifier:](v10, "setIdentifier:", CFSTR("identityUnusable"));
    objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", WeakRetained[109]);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setAnalyticsReporterSubject:](v10, "setAnalyticsReporterSubject:", v11);

    -[PKDashboardPassMessage setTitle:](v10, "setTitle:", v8);
    if (PKPearlIsAvailable())
      v12 = CFSTR("DASHBOARD_UNAVAILABLE_FACEID");
    else
      v12 = CFSTR("DASHBOARD_UNAVAILABLE_TOUCHID");
    objc_msgSend(WeakRetained[109], "localizedDescription");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    PKLocalizedIdentityString(&v12->isa, CFSTR("%@"), v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setMessage:](v10, "setMessage:", v14);

    objc_msgSend(WeakRetained, "_messageImageWithName:extension:", CFSTR("MessageAlert"), CFSTR("pdf"));
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setImage:](v10, "setImage:", v15);

    -[PKDashboardPassMessage setButtonTitle:](v10, "setButtonTitle:", v9);
    -[PKDashboardPassMessage setIsDestructiveAction:](v10, "setIsDestructiveAction:", 1);
    v16[0] = MEMORY[0x1E0C809B0];
    v16[1] = 3221225472;
    v16[2] = __82__PKDashboardPaymentPassDataSource__messageForUnusableIdentityPassWithCompletion___block_invoke_3;
    v16[3] = &unk_1E3E61310;
    objc_copyWeak(&v17, v2);
    -[PKDashboardPassMessage setActionOnButtonPress:](v10, "setActionOnButtonPress:", v16);
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
    objc_destroyWeak(&v17);

    goto LABEL_14;
  }
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
LABEL_15:

}

void __82__PKDashboardPaymentPassDataSource__messageForUnusableIdentityPassWithCompletion___block_invoke_3(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = WeakRetained;
    objc_msgSend(WeakRetained, "_deleteButtonPressed");
    WeakRetained = v2;
  }

}

- (id)_messageForIdentityFirstTimeUse
{
  PKDashboardPassMessage *v3;
  unint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  void *v18;
  id v19;
  id location;

  if (!-[PKPaymentPass isIdentityPass](self->_pass, "isIdentityPass")
    || -[PKPaymentPass activationState](self->_pass, "activationState")
    || PKIdentityHasDismissedFirstTimeUseEducationMessage())
  {
    v3 = 0;
  }
  else
  {
    v3 = objc_alloc_init(PKDashboardPassMessage);
    -[PKDashboardPassMessage setIdentifier:](v3, "setIdentifier:", CFSTR("identityFirstTimeUse"));
    v5 = -[PKPaymentPass identityType](self->_pass, "identityType");
    if (v5 > 3)
    {
      v6 = 0;
    }
    else
    {
      PKLocalizedIdentityString(&off_1E3E73BE8[v5]->isa);
      v6 = (void *)objc_claimAutoreleasedReturnValue();
    }
    -[PKDashboardPassMessage setTitle:](v3, "setTitle:", v6);
    PKLocalizedIdentityString(CFSTR("DASHBOARD_IDENTITY_FIRST_TIME_USE_MESSAGE"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setMessage:](v3, "setMessage:", v7);

    PKLocalizedIdentityString(CFSTR("DASHBOARD_IDENTITY_LEARN_MORE_TITLE"));
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setButtonTitle:](v3, "setButtonTitle:", v8);

    objc_msgSend(MEMORY[0x1E0DC3888], "configurationWithPointSize:", 26.0);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0DC3870], "systemImageNamed:withConfiguration:", CFSTR("person.text.rectangle.fill"), v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0DC3658], "whiteColor");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "imageWithTintColor:", v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0DC3658], "blackColor");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    PKUIImageWithBackground(v12, v13, 45.0, 45.0);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setImage:](v3, "setImage:", v14);

    objc_initWeak(&location, self);
    v15 = MEMORY[0x1E0C809B0];
    v16 = 3221225472;
    v17 = __67__PKDashboardPaymentPassDataSource__messageForIdentityFirstTimeUse__block_invoke;
    v18 = &unk_1E3E61310;
    objc_copyWeak(&v19, &location);
    -[PKDashboardPassMessage setActionOnDismiss:](v3, "setActionOnDismiss:", &v15);
    -[PKDashboardPassMessage setActionOnButtonPress:](v3, "setActionOnButtonPress:", &__block_literal_global_1197, v15, v16, v17, v18);
    objc_destroyWeak(&v19);
    objc_destroyWeak(&location);

  }
  return v3;
}

void __67__PKDashboardPaymentPassDataSource__messageForIdentityFirstTimeUse__block_invoke(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    PKIdentitySetHasDismissedFirstTimeUseEducationMessageKey();
    objc_msgSend(WeakRetained, "reloadMessages");
  }

}

void __67__PKDashboardPaymentPassDataSource__messageForIdentityFirstTimeUse__block_invoke_2()
{
  void *v0;
  id v1;

  objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
  v1 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", CFSTR("https://learn.wallet.apple/id"));
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "openURL:configuration:completionHandler:", v0, 0, 0);

}

- (void)_messageForPrecursorPassUpgradeWithController:(id)a3 completion:(id)a4
{
  id v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  _QWORD v11[5];
  id v12;
  id v13;

  v6 = a3;
  v7 = a4;
  objc_msgSend(v6, "devicePrimaryPrecursorRequest");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = __93__PKDashboardPaymentPassDataSource__messageForPrecursorPassUpgradeWithController_completion___block_invoke;
  v11[3] = &unk_1E3E736B0;
  v12 = v6;
  v13 = v7;
  v11[4] = self;
  v9 = v6;
  v10 = v7;
  objc_msgSend(v9, "requestDescriptionFor:completion:", v8, v11);

}

void __93__PKDashboardPaymentPassDataSource__messageForPrecursorPassUpgradeWithController_completion___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  PKDashboardPassMessage *v4;
  void *v5;
  void *v6;
  void *v7;
  unint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[4];
  id v17;
  id v18;
  id v19;
  id location;

  v3 = a2;
  if (v3)
  {
    v4 = objc_alloc_init(PKDashboardPassMessage);
    -[PKDashboardPassMessage setIdentifier:](v4, "setIdentifier:", CFSTR("precursorActionRequired"));
    objc_msgSend(v3, "localizedTitle");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setTitle:](v4, "setTitle:", v5);

    objc_msgSend(v3, "localizedDescription");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setMessage:](v4, "setMessage:", v6);

    objc_msgSend(v3, "localizedActionText");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setButtonTitle:](v4, "setButtonTitle:", v7);

    -[PKDashboardPassMessage setShowSpinner:](v4, "setShowSpinner:", *(unsigned __int8 *)(*(_QWORD *)(a1 + 32) + 211));
    v8 = objc_msgSend(v3, "actionType");
    if (v8 <= 4)
    {
      if (((1 << v8) & 0x13) != 0)
      {
        v9 = (void *)MEMORY[0x1E0DC3870];
        objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 872), "iconImage");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "imageWithPKImage:", v10);
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        -[PKDashboardPassMessage setImage:](v4, "setImage:", v11);

      }
      else
      {
        objc_msgSend(*(id *)(a1 + 32), "_messageImageWithName:extension:", CFSTR("MessageAlert"), CFSTR("pdf"));
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        -[PKDashboardPassMessage setImage:](v4, "setImage:", v12);

        -[PKDashboardPassMessage setIsDestructiveAction:](v4, "setIsDestructiveAction:", 1);
      }
    }
    objc_msgSend(v3, "localizedActionText");
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    if (v13)
    {
      objc_initWeak(&location, *(id *)(a1 + 32));
      v16[0] = MEMORY[0x1E0C809B0];
      v16[1] = 3221225472;
      v16[2] = __93__PKDashboardPaymentPassDataSource__messageForPrecursorPassUpgradeWithController_completion___block_invoke_2;
      v16[3] = &unk_1E3E61EE8;
      objc_copyWeak(&v19, &location);
      v17 = v3;
      v18 = *(id *)(a1 + 40);
      -[PKDashboardPassMessage setActionOnButtonPress:](v4, "setActionOnButtonPress:", v16);

      objc_destroyWeak(&v19);
      objc_destroyWeak(&location);
    }
    (*(void (**)(_QWORD, PKDashboardPassMessage *, uint64_t, uint64_t))(*(_QWORD *)(a1 + 48) + 16))(*(_QWORD *)(a1 + 48), v4, v14, v15);

  }
  else
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  }

}

void __93__PKDashboardPaymentPassDataSource__messageForPrecursorPassUpgradeWithController_completion___block_invoke_2(uint64_t a1)
{
  id WeakRetained;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v6 = WeakRetained;
    v3 = objc_msgSend(*(id *)(a1 + 32), "actionType") - 1;
    WeakRetained = v6;
    switch(v3)
    {
      case 0:
        objc_msgSend(v6, "_presentPrecursorActionFlowWithController:", *(_QWORD *)(a1 + 40));
        goto LABEL_8;
      case 1:
      case 2:
        objc_msgSend(v6, "_deleteButtonPressed");
        goto LABEL_8;
      case 3:
        objc_msgSend(*(id *)(a1 + 32), "actionURL");
        v4 = (void *)objc_claimAutoreleasedReturnValue();
        if (v4)
        {
          objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
          v5 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v5, "openURL:configuration:completionHandler:", v4, 0, 0);

        }
LABEL_8:
        WeakRetained = v6;
        break;
      default:
        break;
    }
  }

}

- (BOOL)performPrecursorPassAction
{
  PKPrecursorPassUpgradeController *precursorUpgradeController;

  precursorUpgradeController = self->_precursorUpgradeController;
  if (precursorUpgradeController)
    -[PKDashboardPaymentPassDataSource _presentPrecursorActionFlowWithController:](self, "_presentPrecursorActionFlowWithController:", self->_precursorUpgradeController);
  return precursorUpgradeController != 0;
}

- (void)_presentPrecursorActionFlowWithController:(id)a3
{
  id v4;
  uint64_t v5;
  void (**v6)(void *, uint64_t);
  PKPaymentSetupDismissibleNavigationController *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  PKPaymentPass *pass;
  void (**v15)(void *, uint64_t);
  PKPaymentSetupDismissibleNavigationController *v16;
  _QWORD v17[4];
  PKPaymentSetupDismissibleNavigationController *v18;
  void (**v19)(void *, uint64_t);
  _QWORD v20[4];
  PKPaymentSetupDismissibleNavigationController *v21;
  void (**v22)(void *, uint64_t);
  id v23;
  _QWORD aBlock[4];
  id v25;
  id location[2];

  v4 = a3;
  objc_initWeak(location, self);
  v5 = MEMORY[0x1E0C809B0];
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = __78__PKDashboardPaymentPassDataSource__presentPrecursorActionFlowWithController___block_invoke;
  aBlock[3] = &unk_1E3E61C58;
  objc_copyWeak(&v25, location);
  v6 = (void (**)(void *, uint64_t))_Block_copy(aBlock);
  v6[2](v6, 1);
  v7 = -[PKPaymentSetupDismissibleNavigationController initWithContext:]([PKPaymentSetupDismissibleNavigationController alloc], "initWithContext:", 0);
  v8 = objc_alloc(MEMORY[0x1E0D67230]);
  objc_msgSend(MEMORY[0x1E0D673C8], "sharedService");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = (void *)objc_msgSend(v8, "initWithWebService:", v9);

  v11 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D67540]), "initWithEnvironment:provisioningController:groupsController:", 0, v10, 0);
  objc_msgSend(v11, "setIsFollowupProvisioning:", 1);
  -[UIView pkui_viewControllerFromResponderChain](self->_groupView, "pkui_viewControllerFromResponderChain");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "navigationController");
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  pass = self->_pass;
  v20[0] = v5;
  v20[1] = 3221225472;
  v20[2] = __78__PKDashboardPaymentPassDataSource__presentPrecursorActionFlowWithController___block_invoke_2;
  v20[3] = &unk_1E3E61B90;
  objc_copyWeak(&v23, location);
  v21 = v7;
  v22 = v6;
  v17[0] = v5;
  v17[1] = 3221225472;
  v17[2] = __78__PKDashboardPaymentPassDataSource__presentPrecursorActionFlowWithController___block_invoke_4;
  v17[3] = &unk_1E3E618A0;
  v15 = v22;
  v19 = v15;
  v16 = v21;
  v18 = v16;
  +[PKProvisioningFlowBridge startPrecursorPassFlowWithNavController:context:pass:precursorController:parentNavController:presentNavController:completion:](PKProvisioningFlowBridge, "startPrecursorPassFlowWithNavController:context:pass:precursorController:parentNavController:presentNavController:completion:", v16, v11, pass, v4, v13, v20, v17);

  objc_destroyWeak(&v23);
  objc_destroyWeak(&v25);
  objc_destroyWeak(location);

}

void __78__PKDashboardPaymentPassDataSource__presentPrecursorActionFlowWithController___block_invoke(uint64_t a1, int a2)
{
  _BYTE *WeakRetained;
  _BYTE *v4;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained && (((WeakRetained[211] == 0) ^ a2) & 1) == 0)
  {
    WeakRetained[211] = a2;
    v4 = WeakRetained;
    objc_msgSend(WeakRetained, "reloadMessages");
    WeakRetained = v4;
  }

}

void __78__PKDashboardPaymentPassDataSource__presentPrecursorActionFlowWithController___block_invoke_2(uint64_t a1)
{
  id *WeakRetained;
  id *v3;
  void *v4;
  uint64_t v5;
  _QWORD v6[4];
  id v7;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend(WeakRetained[1], "pkui_viewControllerFromResponderChain");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v6[0] = MEMORY[0x1E0C809B0];
    v6[1] = 3221225472;
    v6[2] = __78__PKDashboardPaymentPassDataSource__presentPrecursorActionFlowWithController___block_invoke_3;
    v6[3] = &unk_1E3E61590;
    v5 = *(_QWORD *)(a1 + 32);
    v7 = *(id *)(a1 + 40);
    objc_msgSend(v4, "presentViewController:animated:completion:", v5, 1, v6);

  }
}

uint64_t __78__PKDashboardPaymentPassDataSource__presentPrecursorActionFlowWithController___block_invoke_3(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t __78__PKDashboardPaymentPassDataSource__presentPrecursorActionFlowWithController___block_invoke_4(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  return objc_msgSend(*(id *)(a1 + 32), "dismissViewControllerAnimated:completion:", 1, 0);
}

- (void)_messageForPassInconsistencyWithCompletion:(id)a3
{
  void (**v4)(id, _QWORD);
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  PKSecureElement *secureElement;
  id v10;
  _QWORD v11[4];
  id v12;
  id v13;
  void (**v14)(id, _QWORD);
  id v15;
  id location;

  v4 = (void (**)(id, _QWORD))a3;
  if (v4)
  {
    -[PKPaymentPass devicePrimaryContactlessPaymentApplication](self->_pass, "devicePrimaryContactlessPaymentApplication");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "subcredentials");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if ((PKUIOnlyDemoModeEnabled() & 1) != 0
      || PKStoreDemoModeEnabled()
      || !-[PKPaymentPass isCarKeyPass](self->_pass, "isCarKeyPass")
      || -[PKPaymentPass activationState](self->_pass, "activationState")
      || !v6)
    {
      v4[2](v4, 0);
    }
    else
    {
      objc_msgSend(v5, "applicationIdentifier");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_initWeak(&location, self);
      v8 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99E60]), "initWithObjects:", v7, 0);
      secureElement = self->_secureElement;
      v11[0] = MEMORY[0x1E0C809B0];
      v11[1] = 3221225472;
      v11[2] = __79__PKDashboardPaymentPassDataSource__messageForPassInconsistencyWithCompletion___block_invoke;
      v11[3] = &unk_1E3E736D8;
      objc_copyWeak(&v15, &location);
      v14 = v4;
      v10 = v7;
      v12 = v10;
      v13 = v6;
      -[PKSecureElement appletCredentialsForAIDs:completion:](secureElement, "appletCredentialsForAIDs:completion:", v8, v11);

      objc_destroyWeak(&v15);
      objc_destroyWeak(&location);

    }
  }

}

void __79__PKDashboardPaymentPassDataSource__messageForPassInconsistencyWithCompletion___block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  id v5;
  _QWORD *WeakRetained;
  id v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  PKDashboardPassMessage *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[128];
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained && !a3)
  {
    v7 = objc_alloc(MEMORY[0x1E0C99E60]);
    objc_msgSend(v5, "objectForKey:", *(_QWORD *)(a1 + 32));
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(v7, "initWithArray:", v8);

    if (objc_msgSend(*(id *)(a1 + 40), "intersectsSet:", v9))
    {
      (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
    }
    else
    {
      v22 = 0u;
      v23 = 0u;
      v20 = 0u;
      v21 = 0u;
      v10 = *(id *)(a1 + 40);
      v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
      if (v11)
      {
        v12 = v11;
        v13 = *(_QWORD *)v21;
        while (2)
        {
          v14 = 0;
          do
          {
            if (*(_QWORD *)v21 != v13)
              objc_enumerationMutation(v10);
            if (objc_msgSend(*(id *)(*((_QWORD *)&v20 + 1) + 8 * v14), "state", (_QWORD)v20) == 1)
            {

              v15 = objc_alloc_init(PKDashboardPassMessage);
              -[PKDashboardPassMessage setIdentifier:](v15, "setIdentifier:", CFSTR("keyInconsistent"));
              objc_msgSend(WeakRetained, "_messageImageWithName:extension:", CFSTR("MessageAlert"), CFSTR("pdf"));
              v16 = (void *)objc_claimAutoreleasedReturnValue();
              -[PKDashboardPassMessage setImage:](v15, "setImage:", v16);

              objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", WeakRetained[109]);
              v17 = (void *)objc_claimAutoreleasedReturnValue();
              -[PKDashboardPassMessage setAnalyticsReporterSubject:](v15, "setAnalyticsReporterSubject:", v17);

              PKLocalizedCredentialString(CFSTR("INCONSISTENT_KEY_TITLE"));
              v18 = (void *)objc_claimAutoreleasedReturnValue();
              -[PKDashboardPassMessage setTitle:](v15, "setTitle:", v18);

              PKLocalizedCredentialString(CFSTR("INCONSISTENT_KEY_BODY"));
              v19 = (void *)objc_claimAutoreleasedReturnValue();
              -[PKDashboardPassMessage setMessage:](v15, "setMessage:", v19);

              -[PKDashboardPassMessage setIsDestructiveAction:](v15, "setIsDestructiveAction:", 0);
              goto LABEL_16;
            }
            ++v14;
          }
          while (v12 != v14);
          v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
          if (v12)
            continue;
          break;
        }
      }

      v15 = 0;
LABEL_16:
      (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();

    }
  }
  else
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
  }

}

- (void)executeEngagementActionForURL:(id)a3
{
  void *v4;
  PKPaymentDefaultDataProvider *paymentDataProvider;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  PKAccountFlowController *v10;
  void *v11;
  void *v12;
  PKDashboardPaymentPassDataSource *v13;
  uint64_t v14;
  id v15;
  void *v16;
  PKAccountFlowController *v17;
  void *v18;
  PKNavigationController *v19;
  void *v20;
  id v21;

  v21 = a3;
  switch(PKEnagementActionTypeForActionURL())
  {
    case 1:
      -[PKDashboardPaymentPassDataSource _presentPassDetailsWithAction:](self, "_presentPassDetailsWithAction:", 0);
      break;
    case 2:
      objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "openSensitiveURL:withOptions:", v21, 0);
      goto LABEL_6;
    case 3:
      -[PKDashboardPaymentPassDataSource _presentCardNumbers](self, "_presentCardNumbers");
      break;
    case 4:
      paymentDataProvider = self->_paymentDataProvider;
      -[PKPaymentPass uniqueID](self->_pass, "uniqueID");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKPaymentDefaultDataProvider setDefaultPaymentPassIdentifier:](paymentDataProvider, "setDefaultPaymentPassIdentifier:", v4);
LABEL_6:

      break;
    case 5:
      v6 = objc_alloc(MEMORY[0x1E0D67230]);
      objc_msgSend(MEMORY[0x1E0D673C8], "sharedService");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = (void *)objc_msgSend(v6, "initWithWebService:", v7);

      v9 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D66840]), "initWithAccount:", self->_account);
      objc_msgSend(v9, "setPaymentPass:", self->_pass);
      v10 = [PKAccountFlowController alloc];
      v11 = v9;
      v12 = v8;
      v13 = self;
      v14 = 24;
      goto LABEL_9;
    case 6:
      v15 = objc_alloc(MEMORY[0x1E0D67230]);
      objc_msgSend(MEMORY[0x1E0D673C8], "sharedService");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = (void *)objc_msgSend(v15, "initWithWebService:", v16);

      v9 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D66840]), "initWithAccount:", self->_account);
      objc_msgSend(v9, "setPaymentPass:", self->_pass);
      v10 = [PKAccountFlowController alloc];
      v11 = v9;
      v12 = v8;
      v13 = self;
      v14 = 4;
LABEL_9:
      v17 = -[PKAccountFlowController initWithAccountCredential:provisioningController:setupDelegate:context:operations:](v10, "initWithAccountCredential:provisioningController:setupDelegate:context:operations:", v11, v12, v13, 0, v14);
      -[PKAccountFlowController firstAccountViewController](v17, "firstAccountViewController");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      v19 = -[PKNavigationController initWithRootViewController:]([PKNavigationController alloc], "initWithRootViewController:", v18);
      -[UIView pkui_viewControllerFromResponderChain](self->_groupView, "pkui_viewControllerFromResponderChain");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v20, "presentViewController:animated:completion:", v19, 1, 0);

      break;
    default:
      break;
  }

}

- (id)_messageForRangingSuspendedPass
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  PKDashboardPassMessage *v7;
  void *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  __CFString *v22;
  __CFString *v23;
  __CFString *v24;
  __CFString *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (-[PKPaymentPass effectiveContactlessPaymentApplicationState](self->_pass, "effectiveContactlessPaymentApplicationState") == 1)
  {
    -[PKPaymentPass devicePrimaryContactlessPaymentApplication](self->_pass, "devicePrimaryContactlessPaymentApplication");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "subcredentials");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "anyObject");
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    v6 = objc_alloc_init(MEMORY[0x1E0D672B0]);
    v7 = 0;
    if (v3 && v5)
    {
      objc_msgSend(v3, "applicationIdentifier");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = objc_msgSend(v6, "rangingSuspensionReasonForAppletSubcredential:forPaymentApplicationID:", v5, v8);

      v10 = -[PKPaymentPass isHomeKeyPass](self->_pass, "isHomeKeyPass");
      if ((v10 & 1) != 0)
      {
        v11 = 1;
      }
      else
      {
        objc_msgSend(v5, "entitlement");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "value");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "unsignedIntegerValue");
        v11 = PKAppletSubcredentialEntitlementTypeFromValue();

      }
      v7 = 0;
      if (-[PKPaymentPass activationState](self->_pass, "activationState") == PKPaymentPassActivationStateActivated)
      {
        if (v9)
        {
          -[PKPaymentPass secureElementPass](self->_pass, "secureElementPass");
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          v15 = objc_msgSend(v14, "supportedRadioTechnologies");

          v7 = objc_alloc_init(PKDashboardPassMessage);
          -[PKDashboardPassMessage setIdentifier:](v7, "setIdentifier:", CFSTR("identityUnusable"));
          -[PKDashboardPaymentPassDataSource _messageImageWithName:extension:](self, "_messageImageWithName:extension:", CFSTR("MessageAlert"), CFSTR("pdf"));
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          -[PKDashboardPassMessage setImage:](v7, "setImage:", v16);

          objc_msgSend(MEMORY[0x1E0D66A58], "subjectToReportDashboardAnalyticsForPass:", self->_pass);
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          -[PKDashboardPassMessage setAnalyticsReporterSubject:](v7, "setAnalyticsReporterSubject:", v17);

          switch(PKRangingSuspensionDisplayableReasonForRangingSuspensionReason())
          {
            case 0:

              v7 = 0;
              goto LABEL_12;
            case 1:
              PKLocalizedCredentialString(CFSTR("AIRPLANE_MODE_ENABLED_TITLE"));
              v19 = (void *)objc_claimAutoreleasedReturnValue();
              PKLocalizedCredentialString(CFSTR("TURN_OFF_AIRPLANE_MODE"));
              v20 = (void *)objc_claimAutoreleasedReturnValue();
              switch(v11)
              {
                case 0:
                case 2:
                case 3:
                case 4:
                case 5:
                  if (v15 == 2)
                    v22 = CFSTR("AIRPLANE_MODE_ENABLED_BODY_FULL_ACCESS_BT_ONLY");
                  else
                    v22 = CFSTR("AIRPLANE_MODE_ENABLED_BODY_FULL_ACCESS");
                  goto LABEL_28;
                case 1:
                  if (v15 == 2)
                  {
                    v22 = CFSTR("AIRPLANE_MODE_ENABLED_BODY_UNLOCK_ONLY_BT_ONLY");
LABEL_28:
                    PKLocalizedCredentialString(&v22->isa);
                    v27 = objc_claimAutoreleasedReturnValue();
                    goto LABEL_29;
                  }
                  if (!v10)
                  {
                    v22 = CFSTR("AIRPLANE_MODE_ENABLED_BODY_UNLOCK_ONLY");
                    goto LABEL_28;
                  }
                  PKLocalizedHomeKitUWBString(CFSTR("AIRPLANE_MODE_ENABLED_BODY_UNLOCK_ONLY_HOME_KEY"));
                  v27 = objc_claimAutoreleasedReturnValue();
LABEL_29:
                  v18 = (void *)v27;
LABEL_30:
                  v21 = &__block_literal_global_1213;
                  break;
                case 6:
                  if (v15 == 2)
                    v22 = CFSTR("AIRPLANE_MODE_ENABLED_BODY_PROPRIETARY_BT_ONLY");
                  else
                    v22 = CFSTR("AIRPLANE_MODE_ENABLED_BODY_PROPRIETARY");
                  goto LABEL_28;
                default:
                  v18 = 0;
                  goto LABEL_30;
              }
              goto LABEL_39;
            case 2:
              PKLocalizedCredentialString(CFSTR("BLUETOOTH_DISABLED_TITLE"));
              v19 = (void *)objc_claimAutoreleasedReturnValue();
              PKLocalizedCredentialString(CFSTR("TURN_ON_BLUETOOTH_TITLE"));
              v20 = (void *)objc_claimAutoreleasedReturnValue();
              switch(v11)
              {
                case 0:
                case 2:
                case 3:
                case 4:
                case 5:
                  if (v15 == 2)
                    v23 = CFSTR("BLUETOOTH_DISABLED_BODY_FULL_ACCESS_BT_ONLY");
                  else
                    v23 = CFSTR("BLUETOOTH_DISABLED_BODY_FULL_ACCESS");
                  goto LABEL_32;
                case 1:
                  if (v15 == 2)
                  {
                    v23 = CFSTR("BLUETOOTH_DISABLED_BODY_UNLOCK_ONLY_BT_ONLY");
LABEL_32:
                    PKLocalizedCredentialString(&v23->isa);
                    v28 = objc_claimAutoreleasedReturnValue();
                    goto LABEL_33;
                  }
                  if (!v10)
                  {
                    v23 = CFSTR("BLUETOOTH_DISABLED_BODY_UNLOCK_ONLY");
                    goto LABEL_32;
                  }
                  PKLocalizedHomeKitUWBString(CFSTR("BLUETOOTH_DISABLED_BODY_UNLOCK_ONLY_HOME_KEY"));
                  v28 = objc_claimAutoreleasedReturnValue();
LABEL_33:
                  v18 = (void *)v28;
LABEL_34:
                  v21 = &__block_literal_global_1234;
                  break;
                case 6:
                  if (v15 == 2)
                    v23 = CFSTR("BLUETOOTH_DISABLED_BODY_PROPRIETARY_BT_ONLY");
                  else
                    v23 = CFSTR("BLUETOOTH_DISABLED_BODY_PROPRIETARY");
                  goto LABEL_32;
                default:
                  v18 = 0;
                  goto LABEL_34;
              }
              goto LABEL_39;
            case 3:
              PKLocalizedCredentialString(CFSTR("KNOWN_PROHIBITED_LOCATION_TITLE"));
              v19 = (void *)objc_claimAutoreleasedReturnValue();
              PKLocalizedCredentialString(CFSTR("LEARN_MORE_BUTTON_TITLE"));
              v20 = (void *)objc_claimAutoreleasedReturnValue();
              switch(v11)
              {
                case 0:
                case 2:
                case 3:
                case 4:
                case 5:
                  if (v15 == 2)
                    v24 = CFSTR("KNOWN_PROHIBITED_LOCATION_BODY_BT_ONLY_FULL_ACCESS");
                  else
                    v24 = CFSTR("KNOWN_PROHIBITED_LOCATION_BODY_FULL_ACCESS");
                  goto LABEL_36;
                case 1:
                  if (v15 == 2)
                  {
                    v24 = CFSTR("KNOWN_PROHIBITED_LOCATION_BODY_BT_ONLY_UNLOCK_ONLY");
LABEL_36:
                    PKLocalizedCredentialString(&v24->isa);
                    v29 = objc_claimAutoreleasedReturnValue();
                    goto LABEL_37;
                  }
                  if (!v10)
                  {
                    v24 = CFSTR("KNOWN_PROHIBITED_LOCATION_BODY_UNLOCK_ONLY");
                    goto LABEL_36;
                  }
                  PKLocalizedHomeKitUWBString(CFSTR("KNOWN_PROHIBITED_LOCATION_BODY_UNLOCK_ONLY_HOME_KEY"));
                  v29 = objc_claimAutoreleasedReturnValue();
LABEL_37:
                  v18 = (void *)v29;
LABEL_38:
                  v21 = &__block_literal_global_1255;
LABEL_39:
                  -[PKDashboardPassMessage setTitle:](v7, "setTitle:", v19);
                  -[PKDashboardPassMessage setMessage:](v7, "setMessage:", v18);
                  -[PKDashboardPassMessage setButtonTitle:](v7, "setButtonTitle:", v20);
                  -[PKDashboardPassMessage setIsDestructiveAction:](v7, "setIsDestructiveAction:", 0);
                  -[PKDashboardPassMessage setActionOnButtonPress:](v7, "setActionOnButtonPress:", v21);

                  break;
                case 6:
                  if (v15 == 2)
                    v24 = CFSTR("KNOWN_PROHIBITED_LOCATION_BODY_BT_ONLY_PROPRIETARY");
                  else
                    v24 = CFSTR("KNOWN_PROHIBITED_LOCATION_BODY_PROPRIETARY");
                  goto LABEL_36;
                default:
                  v18 = 0;
                  goto LABEL_38;
              }
              break;
            case 4:
              PKLocalizedCredentialString(CFSTR("UWB_UPDATE_FAILED_TITLE"));
              v19 = (void *)objc_claimAutoreleasedReturnValue();
              PKLocalizedCredentialString(CFSTR("LEARN_MORE_BUTTON_TITLE"));
              v20 = (void *)objc_claimAutoreleasedReturnValue();
              switch(v11)
              {
                case 0:
                case 2:
                case 3:
                case 4:
                case 5:
                  v25 = CFSTR("UWB_UPDATE_FAILED_BODY_FULL_ACCESS");
                  goto LABEL_24;
                case 1:
                  if (v10)
                  {
                    PKLocalizedHomeKitUWBString(CFSTR("UWB_UPDATE_FAILED_BODY_UNLOCK_ONLY_HOME_KEY"));
                    v26 = objc_claimAutoreleasedReturnValue();
                  }
                  else
                  {
                    v25 = CFSTR("UWB_UPDATE_FAILED_BODY_UNLOCK_ONLY");
LABEL_24:
                    PKLocalizedCredentialString(&v25->isa);
                    v26 = objc_claimAutoreleasedReturnValue();
                  }
                  v18 = (void *)v26;
LABEL_26:
                  v21 = &__block_literal_global_1274;
                  break;
                case 6:
                  v25 = CFSTR("UWB_UPDATE_FAILED_BODY_PROPRIETARY");
                  goto LABEL_24;
                default:
                  v18 = 0;
                  goto LABEL_26;
              }
              goto LABEL_39;
            default:
LABEL_12:
              v18 = 0;
              v19 = 0;
              v20 = 0;
              v21 = 0;
              goto LABEL_39;
          }
        }
      }
    }

  }
  else
  {
    v7 = 0;
  }
  return v7;
}

void __67__PKDashboardPaymentPassDataSource__messageForRangingSuspendedPass__block_invoke()
{
  void *v0;
  id v1;

  objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
  v1 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", CFSTR("prefs:root="));
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "openSensitiveURL:withOptions:", v0, 0);

}

void __67__PKDashboardPaymentPassDataSource__messageForRangingSuspendedPass__block_invoke_2()
{
  void *v0;
  id v1;

  objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
  v1 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", CFSTR("prefs:root=Bluetooth"));
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "openSensitiveURL:withOptions:", v0, 0);

}

void __67__PKDashboardPaymentPassDataSource__messageForRangingSuspendedPass__block_invoke_3()
{
  void *v0;
  id v1;

  objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
  v1 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", CFSTR("https://support.apple.com/HT212274"));
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "openURL:configuration:completionHandler:", v0, 0, 0);

}

void __67__PKDashboardPaymentPassDataSource__messageForRangingSuspendedPass__block_invoke_4()
{
  void *v0;
  id v1;

  objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
  v1 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", CFSTR("https://support.apple.com/en-us/HT208733"));
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "openURL:configuration:completionHandler:", v0, 0, 0);

}

- (id)_messageForHomeAccessRestricted
{
  PKDashboardPassMessage *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  _QWORD v13[4];
  id v14;
  id location;

  if (!self->_homeKitIsHomeAccessRestricted)
    return 0;
  v3 = objc_alloc_init(PKDashboardPassMessage);
  -[PKDashboardPassMessage setIdentifier:](v3, "setIdentifier:", CFSTR("homeAccessRestricted"));
  PKLocalizedHomeKitUWBString(CFSTR("DASHBOARD_HOME_ACCESS_RESTRICTED_TITLE"));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPassMessage setTitle:](v3, "setTitle:", v4);

  PKLocalizedHomeKitUWBString(CFSTR("DASHBOARD_HOME_ACCESS_RESTRICTED_MESSAGE"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPassMessage setMessage:](v3, "setMessage:", v5);

  objc_msgSend(MEMORY[0x1E0DC3888], "configurationWithPointSize:", 26.0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0DC3870], "systemImageNamed:withConfiguration:", CFSTR("lock.badge.clock.fill"), v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0DC3658], "secondaryLabelColor");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "imageWithTintColor:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0DC3658], "clearColor");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  PKUIImageWithBackground(v9, v10, 45.0, 45.0);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPassMessage setImage:](v3, "setImage:", v11);

  -[PKDashboardPassMessage setIsDestructiveAction:](v3, "setIsDestructiveAction:", 0);
  objc_initWeak(&location, self);
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 3221225472;
  v13[2] = __67__PKDashboardPaymentPassDataSource__messageForHomeAccessRestricted__block_invoke;
  v13[3] = &unk_1E3E61310;
  objc_copyWeak(&v14, &location);
  -[PKDashboardPassMessage setActionOnMessagePress:](v3, "setActionOnMessagePress:", v13);
  objc_destroyWeak(&v14);
  objc_destroyWeak(&location);

  return v3;
}

void __67__PKDashboardPaymentPassDataSource__messageForHomeAccessRestricted__block_invoke(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = WeakRetained;
    objc_msgSend(WeakRetained, "_presentRestrictedGuestAccessSchedule");
    WeakRetained = v2;
  }

}

- (id)_messageForBroadwayDiscoverability
{
  PKDashboardPassMessage *v3;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  _QWORD v10[4];
  id v11;
  _QWORD v12[4];
  id v13;
  id location;

  if (PKIsPhone()
    && PKBroadwayDiscoverability2024Enabled()
    && (PKAppleCardDismissedBroadwayDiscoverabilityMessage() & 1) == 0)
  {
    v3 = objc_alloc_init(PKDashboardPassMessage);
    -[PKDashboardPassMessage setType:](v3, "setType:", 1);
    -[PKDashboardPassMessage setIdentifier:](v3, "setIdentifier:", CFSTR("broadwayDiscoverability"));
    PKLocalizedBroadwayDiscoverabilityString(CFSTR("EXPLORE_DASHBOARD_MESSAGE_TITLE"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setTitle:](v3, "setTitle:", v5);

    PKLocalizedBroadwayDiscoverabilityString(CFSTR("EXPLORE_DASHBOARD_MESSAGE"));
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setMessage:](v3, "setMessage:", v6);

    PKLocalizedBroadwayDiscoverabilityString(CFSTR("EXPLORE_DASHBOARD_ACTION_TITLE"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setButtonTitle:](v3, "setButtonTitle:", v7);

    PKUIImageNamed(CFSTR("AppleCardFeatures-Benefits"));
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setImage:](v3, "setImage:", v8);

    -[PKDashboardPassMessage setShowDisclosure:](v3, "setShowDisclosure:", 1);
    objc_initWeak(&location, self);
    v9 = MEMORY[0x1E0C809B0];
    v12[0] = MEMORY[0x1E0C809B0];
    v12[1] = 3221225472;
    v12[2] = __70__PKDashboardPaymentPassDataSource__messageForBroadwayDiscoverability__block_invoke;
    v12[3] = &unk_1E3E61310;
    objc_copyWeak(&v13, &location);
    -[PKDashboardPassMessage setActionOnButtonPress:](v3, "setActionOnButtonPress:", v12);
    v10[0] = v9;
    v10[1] = 3221225472;
    v10[2] = __70__PKDashboardPaymentPassDataSource__messageForBroadwayDiscoverability__block_invoke_2;
    v10[3] = &unk_1E3E61310;
    objc_copyWeak(&v11, &location);
    -[PKDashboardPassMessage setActionOnDismiss:](v3, "setActionOnDismiss:", v10);
    objc_destroyWeak(&v11);
    objc_destroyWeak(&v13);
    objc_destroyWeak(&location);
  }
  else
  {
    v3 = 0;
  }
  return v3;
}

void __70__PKDashboardPaymentPassDataSource__messageForBroadwayDiscoverability__block_invoke(uint64_t a1)
{
  PKAppleCardFeaturesAndBenefitsViewController *v1;
  void *v2;
  void *v3;
  id *WeakRetained;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v1 = objc_alloc_init(PKAppleCardFeaturesAndBenefitsViewController);
    objc_msgSend(WeakRetained[1], "pkui_viewControllerFromResponderChain");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "navigationController");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "pushViewController:animated:", v1, 1);

  }
}

void __70__PKDashboardPaymentPassDataSource__messageForBroadwayDiscoverability__block_invoke_2(uint64_t a1)
{
  id WeakRetained;

  PKAppleCardSetDismissedBroadwayDiscoverabilityMessage();
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "reloadMessages");

}

- (void)visibilityDidChangeToState:(unsigned __int8)a3
{
  if (a3 == 1)
  {
    -[PKDashboardPaymentPassDataSource reloadBankConnectData](self, "reloadBankConnectData");
    -[PKDashboardPaymentPassDataSource reloadAssociatedPaymentRewardsBalance](self, "reloadAssociatedPaymentRewardsBalance");
  }
}

- (void)groupViewDidChangeFrontmostPassView:(id)a3 withContext:(id)a4
{
  -[PKDashboardPaymentPassDataSource _setPassView:](self, "_setPassView:", a3, a4);
  -[PKDashboardPaymentPassDataSource reloadFrontmostPass](self, "reloadFrontmostPass");
  -[PKDashboardPaymentPassDataSource reloadAllContent](self, "reloadAllContent");
}

- (void)_setPassView:(id)a3
{
  PKPassView *v5;
  PKPassView *passView;
  PKPassView *v7;

  v5 = (PKPassView *)a3;
  passView = self->_passView;
  if (passView != v5)
  {
    v7 = v5;
    -[PKPassView removePassViewObserver:](passView, "removePassViewObserver:", self);
    objc_storeStrong((id *)&self->_passView, a3);
    -[PKPassView addPassViewObserver:](self->_passView, "addPassViewObserver:", self);
    v5 = v7;
  }

}

- (void)passView:(id)a3 didUpdatePassState:(id)a4
{
  unint64_t v5;
  unint64_t v6;
  void *v7;
  void *v8;
  id WeakRetained;

  v5 = -[PKDashboardPaymentPassDataSource firstSectionIndexForSectionIdentifier:](self, "firstSectionIndexForSectionIdentifier:", 1, a4);
  WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
  if (-[NSArray count](self->_tileGroups, "count"))
  {
    v6 = 0;
    do
    {
      objc_msgSend(MEMORY[0x1E0CB36B0], "indexPathForItem:inSection:", 0, v5 + v6);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPaymentPassDataSource itemAtIndexPath:](self, "itemAtIndexPath:", v7);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(WeakRetained, "itemChanged:atIndexPath:", v8, v7);

      ++v6;
    }
    while (v6 < -[NSArray count](self->_tileGroups, "count"));
  }

}

- (void)updateContentIsLoaded
{
  const __CFString *v3;
  const __CFString *v4;
  const __CFString *v5;
  const __CFString *v6;
  const __CFString *v7;
  const __CFString *v8;
  const __CFString *v9;
  const __CFString *v10;
  const __CFString *v11;
  const __CFString *v12;
  const __CFString *v13;
  const __CFString *v14;
  void *v15;
  PKDashboardPaymentPassDataSource *v16;
  const __CFString *v17;
  const __CFString *v18;
  const __CFString *v19;
  const __CFString *v20;
  const __CFString *v21;
  char v22;
  _BOOL4 v23;
  const __CFString *v24;
  const __CFString *v25;
  const __CFString *v26;
  NSObject *v27;
  char v28;
  id WeakRetained;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t i;
  const __CFString *v36;
  const __CFString *v37;
  const __CFString *v38;
  const __CFString *v39;
  void *v40;
  void *v41;
  id v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint8_t v47[128];
  uint8_t buf[4];
  PKDashboardPaymentPassDataSource *v49;
  uint64_t v50;

  v50 = *MEMORY[0x1E0C80C00];
  if (!self->_allContentIsLoaded)
  {
    -[PKPaymentPass uniqueID](self->_pass, "uniqueID");
    v41 = (void *)objc_claimAutoreleasedReturnValue();
    v42 = objc_alloc(MEMORY[0x1E0CB37A0]);
    if (self->_messagesLoaded)
      v3 = CFSTR("YES");
    else
      v3 = CFSTR("NO");
    v39 = v3;
    v40 = (void *)MEMORY[0x1E0CB3940];
    if (self->_secondaryMessagesLoaded)
      v4 = CFSTR("YES");
    else
      v4 = CFSTR("NO");
    if (self->_engagementMessagesLoaded)
      v5 = CFSTR("YES");
    else
      v5 = CFSTR("NO");
    v37 = v5;
    v38 = v4;
    if (self->_balanceLoaded)
      v6 = CFSTR("YES");
    else
      v6 = CFSTR("NO");
    v36 = v6;
    if (self->_productsLoaded)
      v7 = CFSTR("YES");
    else
      v7 = CFSTR("NO");
    if (self->_scheduledPaymentsLoaded)
      v8 = CFSTR("YES");
    else
      v8 = CFSTR("NO");
    if (self->_familyCollectionLoaded)
      v9 = CFSTR("YES");
    else
      v9 = CFSTR("NO");
    if (self->_creditRecoveryPaymentPlansLoaded)
      v10 = CFSTR("YES");
    else
      v10 = CFSTR("NO");
    if (self->_tilesLoaded)
      v11 = CFSTR("YES");
    else
      v11 = CFSTR("NO");
    if (self->_auxiliarySectionInfoLoaded)
      v12 = CFSTR("YES");
    else
      v12 = CFSTR("NO");
    if (self->_homeKitRestrictedGuestAccessStateLoaded)
      v13 = CFSTR("YES");
    else
      v13 = CFSTR("NO");
    if (-[PKDashboardPaymentPassDataSource accountsLoaded](self, "accountsLoaded"))
      v14 = CFSTR("YES");
    else
      v14 = CFSTR("NO");
    objc_msgSend(v40, "stringWithFormat:", CFSTR("Dashboard loading (%p): %@ - m:%@, sm:%@, em:%@, b:%@, p:%@, sp:%@, f:%@, crpp:%@, ti:%@, as:%@, rg:%@, a:%@"), self, v41, v39, v38, v37, v36, v7, v8, v9, v10, v11, v12, v13, v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = (PKDashboardPaymentPassDataSource *)objc_msgSend(v42, "initWithString:", v15);

    if (self->_accountUsersLoaded)
      v17 = CFSTR("YES");
    else
      v17 = CFSTR("NO");
    -[PKDashboardPaymentPassDataSource appendFormat:](v16, "appendFormat:", CFSTR(" u:%@"), v17);
    if (self->_accountUserInvitationsLoaded)
      v18 = CFSTR("YES");
    else
      v18 = CFSTR("NO");
    -[PKDashboardPaymentPassDataSource appendFormat:](v16, "appendFormat:", CFSTR(" ui:%@"), v18);
    if (-[PKDashboardPaymentPassDataSource financingPlansLoaded](self, "financingPlansLoaded"))
      v19 = CFSTR("YES");
    else
      v19 = CFSTR("NO");
    -[PKDashboardPaymentPassDataSource appendFormat:](v16, "appendFormat:", CFSTR(" fp:%@"), v19);
    if (self->_physicalCardsLoaded)
      v20 = CFSTR("YES");
    else
      v20 = CFSTR("NO");
    -[PKDashboardPaymentPassDataSource appendFormat:](v16, "appendFormat:", CFSTR(" pc:%@"), v20);
    if (-[PKDashboardPaymentPassDataSource recurringPeerPaymentsLoaded](self, "recurringPeerPaymentsLoaded"))
      v21 = CFSTR("YES");
    else
      v21 = CFSTR("NO");
    -[PKDashboardPaymentPassDataSource appendFormat:](v16, "appendFormat:", CFSTR(" rpp:%@"), v21);
    if (-[PKDashboardPaymentPassDataSource isBankConnectSupported](self, "isBankConnectSupported")
      && !-[PKDashboardPaymentPassDataSource bankConnectDataLoaded](self, "bankConnectDataLoaded"))
    {
      -[PKDashboardPaymentPassDataSource appendFormat:](v16, "appendFormat:", CFSTR(" bc:%@"), CFSTR("NO"));
      v23 = 0;
      v22 = 1;
    }
    else
    {
      -[PKDashboardPaymentPassDataSource appendFormat:](v16, "appendFormat:", CFSTR(" bc:%@"), CFSTR("YES"));
      if (-[PKDashboardPaymentPassDataSource isBankConnectLinked](self, "isBankConnectLinked"))
      {
        v22 = 0;
        v23 = 1;
      }
      else
      {
        if (self->_transactions)
          v24 = CFSTR("YES");
        else
          v24 = CFSTR("NO");
        if (self->_transactionsPerPeriodLoaded)
          v25 = CFSTR("YES");
        else
          v25 = CFSTR("NO");
        if (self->_transactionSourceCollection)
          v26 = CFSTR("YES");
        else
          v26 = CFSTR("NO");
        -[PKDashboardPaymentPassDataSource appendFormat:](v16, "appendFormat:", CFSTR(" t:%@, tg:%@, tsc:%@"), v24, v25, v26);
        if (self->_transactions && self->_transactionsPerPeriodLoaded)
        {
          v22 = 0;
          v23 = self->_transactionSourceCollection != 0;
        }
        else
        {
          v22 = 0;
          v23 = 0;
        }
      }
    }
    PKLogFacilityTypeGetObject();
    v27 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138543362;
      v49 = v16;
      _os_log_impl(&dword_19D178000, v27, OS_LOG_TYPE_DEFAULT, "%{public}@", buf, 0xCu);
    }

    if (v23
      && self->_tilesLoaded
      && self->_messagesLoaded
      && self->_secondaryMessagesLoaded
      && self->_auxiliarySectionInfoLoaded
      && self->_balanceLoaded
      && self->_productsLoaded
      && self->_scheduledPaymentsLoaded
      && self->_familyCollectionLoaded
      && self->_creditRecoveryPaymentPlansLoaded
      && self->_physicalCardsLoaded
      && self->_engagementMessagesLoaded
      && self->_accountUsersLoaded
      && self->_accountUserInvitationsLoaded
      && -[PKDashboardPaymentPassDataSource financingPlansLoaded](self, "financingPlansLoaded")
      && -[PKDashboardPaymentPassDataSource accountsLoaded](self, "accountsLoaded")
      && -[PKDashboardPaymentPassDataSource recurringPeerPaymentsLoaded](self, "recurringPeerPaymentsLoaded"))
    {
      v28 = self->_homeKitRestrictedGuestAccessStateLoaded ? v22 : 1;
      if ((v28 & 1) == 0)
      {
        if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 134217984;
          v49 = self;
          _os_log_impl(&dword_19D178000, v27, OS_LOG_TYPE_DEFAULT, "Dashboard loading (%p): Completed", buf, 0xCu);
        }

        self->_allContentIsLoaded = 1;
        WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
        v30 = WeakRetained;
        if (WeakRetained)
          objc_msgSend(WeakRetained, "contentIsLoaded");
        v45 = 0u;
        v46 = 0u;
        v43 = 0u;
        v44 = 0u;
        v31 = (void *)-[NSMutableArray copy](self->_executionBlocksContentIsLoaded, "copy");
        v32 = objc_msgSend(v31, "countByEnumeratingWithState:objects:count:", &v43, v47, 16);
        if (v32)
        {
          v33 = v32;
          v34 = *(_QWORD *)v44;
          do
          {
            for (i = 0; i != v33; ++i)
            {
              if (*(_QWORD *)v44 != v34)
                objc_enumerationMutation(v31);
              (*(void (**)(void))(*(_QWORD *)(*((_QWORD *)&v43 + 1) + 8 * i) + 16))();
            }
            v33 = objc_msgSend(v31, "countByEnumeratingWithState:objects:count:", &v43, v47, 16);
          }
          while (v33);
        }

        -[NSMutableArray removeAllObjects](self->_executionBlocksContentIsLoaded, "removeAllObjects");
      }
    }

  }
}

- (void)reloadAllContent
{
  -[PKDashboardPaymentPassDataSource reloadDialogRequests](self, "reloadDialogRequests");
  -[PKDashboardPaymentPassDataSource reloadAccount](self, "reloadAccount");
  -[PKDashboardPaymentPassDataSource reloadTransitSection](self, "reloadTransitSection");
  -[PKDashboardPaymentPassDataSource reloadBankConnectData](self, "reloadBankConnectData");
  -[PKDashboardPaymentPassDataSource reloadAssociatedPaymentRewardsBalance](self, "reloadAssociatedPaymentRewardsBalance");
}

- (void)secureElementDidEnterRestrictedMode:(id)a3
{
  self->_isInRestrictedMode = 1;
  -[PKDashboardPaymentPassDataSource reloadMessages](self, "reloadMessages", a3);
}

- (void)secureElementDidLeaveRestrictedMode:(id)a3
{
  self->_isInRestrictedMode = 0;
  -[PKDashboardPaymentPassDataSource reloadMessages](self, "reloadMessages", a3);
}

- (void)dashboardMessageComposer:(id)a3 requestPushViewController:(id)a4
{
  PKPassGroupView *groupView;
  id v5;
  void *v6;
  id v7;

  groupView = self->_groupView;
  v5 = a4;
  -[UIView pkui_viewControllerFromResponderChain](groupView, "pkui_viewControllerFromResponderChain");
  v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "navigationController");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "pushViewController:animated:", v5, 1);

}

- (void)dashboardMessageComposer:(id)a3 requestPresentViewController:(id)a4
{
  PKPassGroupView *groupView;
  id v5;
  id v6;

  groupView = self->_groupView;
  v5 = a4;
  -[UIView pkui_viewControllerFromResponderChain](groupView, "pkui_viewControllerFromResponderChain");
  v6 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "presentViewController:animated:completion:", v5, 1, 0);

}

- (void)dashboardMessageComposer:(id)a3 requestPresentPassDetailsForPass:(id)a4
{
  id v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  char v13;
  void *v14;
  id v15;

  v15 = a3;
  v6 = a4;
  v7 = v6;
  if (v6)
  {
    objc_msgSend(v6, "uniqueID");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKPaymentPass uniqueID](self->_pass, "uniqueID");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = v8;
    v11 = v9;
    if (v10 == v11)
    {

    }
    else
    {
      v12 = v11;
      if (!v10 || !v11)
      {

LABEL_10:
        objc_msgSend(v7, "uniqueID");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        PKOpenPassDetails();

        goto LABEL_11;
      }
      v13 = objc_msgSend(v10, "isEqualToString:", v11);

      if ((v13 & 1) == 0)
        goto LABEL_10;
    }
    -[PKDashboardPaymentPassDataSource _presentPassDetailsWithHandler:](self, "_presentPassDetailsWithHandler:", 0);
  }
LABEL_11:

}

- (void)dashboardMessageComposer:(id)a3 requestPresentFinancingPlanDetails:(id)a4
{
  id v6;
  id v7;
  PKPayLaterFinancingPlanViewController *v8;
  void *v9;
  void *v10;
  PKPayLaterFinancingPlanViewController *v11;
  PKPayLaterFinancingPlanViewController *v12;
  _QWORD v13[4];
  PKPayLaterFinancingPlanViewController *v14;
  id v15;
  id location;

  v6 = a3;
  v7 = a4;
  if (v7)
  {
    v8 = [PKPayLaterFinancingPlanViewController alloc];
    -[PKDashboardPaymentPassDataSource account](self, "account");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPaymentPassDataSource paymentIntentController](self, "paymentIntentController");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = -[PKPayLaterFinancingPlanViewController initWithFinancingPlan:payLaterAccount:paymentIntentController:merchantIcon:iconGenerator:](v8, "initWithFinancingPlan:payLaterAccount:paymentIntentController:merchantIcon:iconGenerator:", v7, v9, v10, 0, 0);

    objc_initWeak(&location, self);
    v13[0] = MEMORY[0x1E0C809B0];
    v13[1] = 3221225472;
    v13[2] = __96__PKDashboardPaymentPassDataSource_dashboardMessageComposer_requestPresentFinancingPlanDetails___block_invoke;
    v13[3] = &unk_1E3E62FA0;
    objc_copyWeak(&v15, &location);
    v12 = v11;
    v14 = v12;
    -[PKPayLaterFinancingPlanViewController preflightWithCompletion:](v12, "preflightWithCompletion:", v13);

    objc_destroyWeak(&v15);
    objc_destroyWeak(&location);

  }
}

void __96__PKDashboardPaymentPassDataSource_dashboardMessageComposer_requestPresentFinancingPlanDetails___block_invoke(uint64_t a1)
{
  id *WeakRetained;
  void *v3;
  void *v4;
  id *v5;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v5 = WeakRetained;
    objc_msgSend(WeakRetained[1], "pkui_viewControllerFromResponderChain");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "navigationController");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "pushViewController:animated:", *(_QWORD *)(a1 + 32), 1);

    WeakRetained = v5;
  }

}

- (void)_lostModeButtonTapped
{
  NSObject *v2;
  NSObject *v4;
  void *v5;
  _QWORD v6[4];
  id v7;
  id buf[2];

  if (self->_performingLostModeExit)
  {
    PKLogFacilityTypeGetObject();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(buf[0]) = 0;
      _os_log_impl(&dword_19D178000, v2, OS_LOG_TYPE_DEFAULT, "Skipping FMDFMIP lost mode exit.", (uint8_t *)buf, 2u);
    }

  }
  else
  {
    self->_performingLostModeExit = 1;
    -[PKDashboardPaymentPassDataSource reloadMessages](self, "reloadMessages");
    PKLogFacilityTypeGetObject();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(buf[0]) = 0;
      _os_log_impl(&dword_19D178000, v4, OS_LOG_TYPE_DEFAULT, "Starting FMDFMIP lost mode exit.", (uint8_t *)buf, 2u);
    }

    objc_initWeak(buf, self);
    objc_msgSend(MEMORY[0x1E0D21380], "sharedInstance");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6[0] = MEMORY[0x1E0C809B0];
    v6[1] = 3221225472;
    v6[2] = __57__PKDashboardPaymentPassDataSource__lostModeButtonTapped__block_invoke;
    v6[3] = &unk_1E3E61DB8;
    objc_copyWeak(&v7, buf);
    objc_msgSend(v5, "initiateLostModeExitAuthWithCompletion:", v6);

    objc_destroyWeak(&v7);
    objc_destroyWeak(buf);
  }
}

void __57__PKDashboardPaymentPassDataSource__lostModeButtonTapped__block_invoke(uint64_t a1, void *a2)
{
  id v3;
  NSObject *v4;
  _BOOL4 v5;
  void *v6;
  _QWORD block[4];
  id v8;
  uint8_t buf[4];
  void *v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  PKLogFacilityTypeGetObject();
  v4 = objc_claimAutoreleasedReturnValue();
  v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);
  if (v3)
  {
    if (v5)
    {
      objc_msgSend(v3, "localizedDescription");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v10 = v6;
      _os_log_impl(&dword_19D178000, v4, OS_LOG_TYPE_DEFAULT, "Error exiting lost mode: %@", buf, 0xCu);

    }
  }
  else
  {
    if (v5)
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_19D178000, v4, OS_LOG_TYPE_DEFAULT, "Completed FMDFMIP lost mode exit.", buf, 2u);
    }

    PKSetNeedsLostModeExitAuth();
  }
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __57__PKDashboardPaymentPassDataSource__lostModeButtonTapped__block_invoke_1319;
  block[3] = &unk_1E3E61310;
  objc_copyWeak(&v8, (id *)(a1 + 32));
  dispatch_async(MEMORY[0x1E0C80D38], block);
  objc_destroyWeak(&v8);

}

void __57__PKDashboardPaymentPassDataSource__lostModeButtonTapped__block_invoke_1319(uint64_t a1)
{
  _BYTE *WeakRetained;
  _BYTE *v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    WeakRetained[210] = 0;
    v2 = WeakRetained;
    objc_msgSend(WeakRetained, "reloadMessages");
    WeakRetained = v2;
  }

}

- (void)_deleteButtonPressed
{
  -[PKPassGroupView deleteButtonPressed](self->_groupView, "deleteButtonPressed");
}

- (void)_presentAboutClosedAccounts
{
  void *v3;
  PKAccountClosedViewController *v4;
  PKNavigationController *v5;
  id v6;

  -[UIView pkui_viewControllerFromResponderChain](self->_groupView, "pkui_viewControllerFromResponderChain");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "navigationController");
  v6 = (id)objc_claimAutoreleasedReturnValue();

  v4 = -[PKAccountClosedViewController initWithAccount:accountUserCollection:familyMemberCollection:context:]([PKAccountClosedViewController alloc], "initWithAccount:accountUserCollection:familyMemberCollection:context:", self->_account, self->_accountUserCollection, self->_familyCollection, 0);
  v5 = -[PKNavigationController initWithRootViewController:]([PKNavigationController alloc], "initWithRootViewController:", v4);
  objc_msgSend(v6, "presentViewController:animated:completion:", v5, 1, 0);

}

- (void)_presentCardNumbers
{
  void *v2;
  id v3;

  -[UIView pkui_viewControllerFromResponderChain](self->_groupView, "pkui_viewControllerFromResponderChain");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "navigationController");
  v3 = (id)objc_claimAutoreleasedReturnValue();

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    objc_msgSend(v3, "presentCardNumbers");

}

- (void)_presentPassDetailsWithAction:(unint64_t)a3
{
  void *v4;
  id v5;

  -[UIView pkui_viewControllerFromResponderChain](self->_groupView, "pkui_viewControllerFromResponderChain");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "navigationController");
  v5 = (id)objc_claimAutoreleasedReturnValue();

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    objc_msgSend(v5, "presentPassDetailsAnimated:action:", 1, a3);

}

- (void)_presentPassDetailsWithHandler:(id)a3
{
  void *v4;
  void *v5;
  id v6;

  v6 = a3;
  -[UIView pkui_viewControllerFromResponderChain](self->_groupView, "pkui_viewControllerFromResponderChain");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "navigationController");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    objc_msgSend(v5, "presentPassDetailsAnimated:handler:", 1, v6);

}

- (void)_presentPassWithPassUniqueIdentifier:(id)a3
{
  void *v4;
  void *v5;
  void *v6;
  id v7;

  v7 = a3;
  -[UIView pkui_viewControllerFromResponderChain](self->_groupView, "pkui_viewControllerFromResponderChain");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "navigationController");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {
    objc_msgSend(v5, "presentingViewController");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
      objc_msgSend(v6, "presentPassWithUniqueID:animated:completionHandler:", v7, 1, 0);

  }
}

- (void)_presentApplCashFamilySetupForFamilyMember:(id)a3
{
  id v4;
  PKPeerPaymentAssociatedAccountsController *v5;
  PKFamilyMemberCollection *familyCollection;
  PKContactAvatarManager *avatarManager;
  id v8;
  PKPeerPaymentAssociatedAccountsController *v9;
  PKPeerPaymentAssociatedAccountsController *associatedAccountsController;
  void *v11;
  void *v12;
  PKPeerPaymentAssociatedAccountPresentationContext *v13;

  v4 = a3;
  v5 = [PKPeerPaymentAssociatedAccountsController alloc];
  familyCollection = self->_familyCollection;
  avatarManager = self->_avatarManager;
  v8 = objc_alloc_init(MEMORY[0x1E0D66F18]);
  v9 = -[PKPeerPaymentAssociatedAccountsController initWithFamilyCollection:avatarManager:passLibraryDataProvider:context:](v5, "initWithFamilyCollection:avatarManager:passLibraryDataProvider:context:", familyCollection, avatarManager, v8, 0);
  associatedAccountsController = self->_associatedAccountsController;
  self->_associatedAccountsController = v9;

  v13 = -[PKPeerPaymentAssociatedAccountPresentationContext initWithPKFamilyMember:setupType:]([PKPeerPaymentAssociatedAccountPresentationContext alloc], "initWithPKFamilyMember:setupType:", v4, 1);
  -[UIView pkui_viewControllerFromResponderChain](self->_groupView, "pkui_viewControllerFromResponderChain");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "navigationController");
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  -[PKPeerPaymentAssociatedAccountsController presentAssociatedAccountsFlowWithPresentationContext:fromNavigationController:](self->_associatedAccountsController, "presentAssociatedAccountsFlowWithPresentationContext:fromNavigationController:", v13, v12);
}

- (void)_presentBalanceDetails
{
  PKCreditBalanceDetailsViewController *v3;
  PKTransactionSourceCollection *transactionSourceCollection;
  PKFamilyMemberCollection *familyCollection;
  void *v6;
  void *v7;
  void *v8;
  PKCreditBalanceDetailsViewController *v9;

  v3 = [PKCreditBalanceDetailsViewController alloc];
  transactionSourceCollection = self->_transactionSourceCollection;
  familyCollection = self->_familyCollection;
  objc_msgSend(MEMORY[0x1E0D673C8], "sharedService");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = -[PKCreditBalanceDetailsViewController initWithStyle:transactionSourceCollection:familyCollection:webService:account:accountUserCollection:physicalCards:statement:previousStatements:](v3, "initWithStyle:transactionSourceCollection:familyCollection:webService:account:accountUserCollection:physicalCards:statement:previousStatements:", 0, transactionSourceCollection, familyCollection, v6, self->_account, self->_accountUserCollection, self->_physicalCards, 0, 0);

  -[UIView pkui_viewControllerFromResponderChain](self->_groupView, "pkui_viewControllerFromResponderChain");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "navigationController");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "pushViewController:animated:", v9, 1);

}

- (void)_presentCreateAccountUserInvitation
{
  id v3;

  -[UIView pkui_viewControllerFromResponderChain](self->_groupView, "pkui_viewControllerFromResponderChain");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  +[PKAccountInvitationController presentCreateAccountUserInvitationWithViewController:account:accountUserCollection:familyMemberCollection:context:completion:](PKAccountInvitationController, "presentCreateAccountUserInvitationWithViewController:account:accountUserCollection:familyMemberCollection:context:completion:", v3, self->_account, self->_accountUserCollection, self->_familyCollection, 0, 0);

}

- (void)_presentAccountUserDetails:(id)a3
{
  id v4;
  id v5;
  _QWORD v6[4];
  id v7;

  v4 = a3;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __63__PKDashboardPaymentPassDataSource__presentAccountUserDetails___block_invoke;
  v6[3] = &unk_1E3E73780;
  v7 = v4;
  v5 = v4;
  -[PKDashboardPaymentPassDataSource _presentPassDetailsWithHandler:](self, "_presentPassDetailsWithHandler:", v6);

}

void __63__PKDashboardPaymentPassDataSource__presentAccountUserDetails___block_invoke(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  objc_msgSend(v2, "altDSID");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "presentAccountUserDetailsForAccountUserAltDSID:", v4);

}

- (void)_presentAccountUserInvitation:(id)a3
{
  id v4;
  id v5;
  _QWORD v6[4];
  id v7;

  v4 = a3;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __66__PKDashboardPaymentPassDataSource__presentAccountUserInvitation___block_invoke;
  v6[3] = &unk_1E3E73780;
  v7 = v4;
  v5 = v4;
  -[PKDashboardPaymentPassDataSource _presentPassDetailsWithHandler:](self, "_presentPassDetailsWithHandler:", v6);

}

void __66__PKDashboardPaymentPassDataSource__presentAccountUserInvitation___block_invoke(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  objc_msgSend(v2, "applicationIdentifier");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "presentAccountUserInvitationWithIdentifier:", v4);

}

- (void)_presentInboxMessage:(id)a3
{
  id v4;
  PKInboxDataSource *inboxDataSource;
  _QWORD v6[4];
  id v7;
  id v8;
  id location;

  v4 = a3;
  if (self->_inboxDataSource)
  {
    objc_initWeak(&location, self);
    inboxDataSource = self->_inboxDataSource;
    v6[0] = MEMORY[0x1E0C809B0];
    v6[1] = 3221225472;
    v6[2] = __57__PKDashboardPaymentPassDataSource__presentInboxMessage___block_invoke;
    v6[3] = &unk_1E3E61B68;
    objc_copyWeak(&v8, &location);
    v7 = v4;
    -[PKInboxDataSource updateInboxWithCompletion:](inboxDataSource, "updateInboxWithCompletion:", v6);

    objc_destroyWeak(&v8);
    objc_destroyWeak(&location);
  }

}

void __57__PKDashboardPaymentPassDataSource__presentInboxMessage___block_invoke(uint64_t a1)
{
  _QWORD v2[4];
  id v3;
  id v4;

  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __57__PKDashboardPaymentPassDataSource__presentInboxMessage___block_invoke_2;
  v2[3] = &unk_1E3E61B68;
  objc_copyWeak(&v4, (id *)(a1 + 40));
  v3 = *(id *)(a1 + 32);
  dispatch_async(MEMORY[0x1E0C80D38], v2);

  objc_destroyWeak(&v4);
}

void __57__PKDashboardPaymentPassDataSource__presentInboxMessage___block_invoke_2(uint64_t a1)
{
  id *WeakRetained;
  id *v3;
  PKInboxViewController *v4;
  PKNavigationController *v5;
  void *v6;
  PKInboxViewController *v7;
  _QWORD v8[4];
  PKInboxViewController *v9;
  id v10;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  v3 = WeakRetained;
  if (WeakRetained && objc_msgSend(WeakRetained[57], "hasInboxMessages"))
  {
    v4 = -[PKInboxViewController initWithInboxDataSource:contactAvatarManager:context:]([PKInboxViewController alloc], "initWithInboxDataSource:contactAvatarManager:context:", v3[57], v3[98], 0);
    v5 = -[PKNavigationController initWithRootViewController:]([PKNavigationController alloc], "initWithRootViewController:", v4);
    objc_msgSend(v3[1], "pkui_viewControllerFromResponderChain");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v8[0] = MEMORY[0x1E0C809B0];
    v8[1] = 3221225472;
    v8[2] = __57__PKDashboardPaymentPassDataSource__presentInboxMessage___block_invoke_3;
    v8[3] = &unk_1E3E61388;
    v9 = v4;
    v10 = *(id *)(a1 + 32);
    v7 = v4;
    objc_msgSend(v6, "presentViewController:animated:completion:", v5, 1, v8);

  }
}

void __57__PKDashboardPaymentPassDataSource__presentInboxMessage___block_invoke_3(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 40), "identifier");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "presentInboxMessageWithIdentifier:", v2);

}

- (void)_presentRestrictedGuestAccessSchedule
{
  NSUUID *homeKitHomeIdentifier;
  NSUUID *v3;
  _QWORD v4[6];

  homeKitHomeIdentifier = self->_homeKitHomeIdentifier;
  if (homeKitHomeIdentifier)
  {
    v4[0] = MEMORY[0x1E0C809B0];
    v4[1] = 3221225472;
    v4[2] = __73__PKDashboardPaymentPassDataSource__presentRestrictedGuestAccessSchedule__block_invoke;
    v4[3] = &unk_1E3E61388;
    v4[4] = self;
    v4[5] = homeKitHomeIdentifier;
    v3 = homeKitHomeIdentifier;
    dispatch_async(MEMORY[0x1E0C80D38], v4);

  }
}

void __73__PKDashboardPaymentPassDataSource__presentRestrictedGuestAccessSchedule__block_invoke(uint64_t a1)
{
  void *v2;
  id v3;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 8), "pkui_viewControllerFromResponderChain");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "navigationController");
  v3 = (id)objc_claimAutoreleasedReturnValue();

  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    objc_msgSend(v3, "presentRestrictedGuestAccessScheduleWithHomeIdentifier:", *(_QWORD *)(a1 + 40));

}

- (BOOL)_canDisplayBalance
{
  _BOOL4 v3;

  if (-[PKDashboardPaymentPassDataSource _isCreditPass](self, "_isCreditPass"))
  {
    LOBYTE(v3) = +[PKCreditAccountController shouldDisplayAccountInformationForTransactionSourceCollection:withAccount:](PKCreditAccountController, "shouldDisplayAccountInformationForTransactionSourceCollection:withAccount:", self->_transactionSourceCollection, self->_account);
  }
  else if (-[PKDashboardPaymentPassDataSource _isPayLaterPass](self, "_isPayLaterPass"))
  {
    LOBYTE(v3) = -[PKDashboardPaymentPassDataSource canDisplayPayLaterBalance](self, "canDisplayPayLaterBalance");
  }
  else if (-[PKDashboardPaymentPassDataSource _isAppleBalancePass](self, "_isAppleBalancePass"))
  {
    LOBYTE(v3) = -[PKDashboardPaymentPassDataSource canDisplayAppleBalanceBalance](self, "canDisplayAppleBalanceBalance");
  }
  else
  {
    v3 = -[PKDashboardPaymentPassDataSource _isPeerPaymentPass](self, "_isPeerPaymentPass");
    if (v3)
      LOBYTE(v3) = -[PKDashboardPaymentPassDataSource canDisplayPeerPaymentBalanceModule](self, "canDisplayPeerPaymentBalanceModule");
  }
  return v3;
}

- (void)_performReloadTransitSection
{
  void *v3;
  NSObject *v4;
  void *v5;
  PKPaymentDefaultDataProvider *paymentDataProvider;
  uint64_t v7;
  id v8;
  NSObject *v9;
  PKPaymentDefaultDataProvider *v10;
  NSObject *v11;
  PKPaymentDefaultDataProvider *v12;
  NSObject *v13;
  _QWORD block[7];
  id v15;
  _QWORD v16[4];
  NSObject *v17;
  _QWORD *v18;
  _QWORD v19[4];
  NSObject *v20;
  _QWORD *v21;
  _QWORD v22[4];
  id v23;
  NSObject *v24;
  _QWORD *v25;
  id v26;
  id location;
  _QWORD v28[5];
  id v29;
  _QWORD v30[5];
  id v31;
  _QWORD v32[5];
  id v33;

  -[PKPaymentPass uniqueID](self->_pass, "uniqueID");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = dispatch_group_create();
  v32[0] = 0;
  v32[1] = v32;
  v32[2] = 0x3032000000;
  v32[3] = __Block_byref_object_copy__41;
  v32[4] = __Block_byref_object_dispose__41;
  v33 = 0;
  v30[0] = 0;
  v30[1] = v30;
  v30[2] = 0x3032000000;
  v30[3] = __Block_byref_object_copy__41;
  v30[4] = __Block_byref_object_dispose__41;
  v31 = 0;
  v28[0] = 0;
  v28[1] = v28;
  v28[2] = 0x3032000000;
  v28[3] = __Block_byref_object_copy__41;
  v28[4] = __Block_byref_object_dispose__41;
  v29 = 0;
  objc_initWeak(&location, self);
  -[PKPaymentPass devicePrimaryPaymentApplication](self->_pass, "devicePrimaryPaymentApplication");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  dispatch_group_enter(v4);
  paymentDataProvider = self->_paymentDataProvider;
  v7 = MEMORY[0x1E0C809B0];
  v22[0] = MEMORY[0x1E0C809B0];
  v22[1] = 3221225472;
  v22[2] = __64__PKDashboardPaymentPassDataSource__performReloadTransitSection__block_invoke;
  v22[3] = &unk_1E3E737A8;
  objc_copyWeak(&v26, &location);
  v25 = v32;
  v8 = v5;
  v23 = v8;
  v9 = v4;
  v24 = v9;
  -[PKPaymentDefaultDataProvider transitStateWithPassUniqueIdentifier:paymentApplication:completion:](paymentDataProvider, "transitStateWithPassUniqueIdentifier:paymentApplication:completion:", v3, v8, v22);
  dispatch_group_enter(v9);
  v10 = self->_paymentDataProvider;
  v19[0] = v7;
  v19[1] = 3221225472;
  v19[2] = __64__PKDashboardPaymentPassDataSource__performReloadTransitSection__block_invoke_2;
  v19[3] = &unk_1E3E690B0;
  v21 = v30;
  v11 = v9;
  v20 = v11;
  -[PKPaymentDefaultDataProvider balancesForPaymentPassWithUniqueIdentifier:completion:](v10, "balancesForPaymentPassWithUniqueIdentifier:completion:", v3, v19);
  dispatch_group_enter(v11);
  v12 = self->_paymentDataProvider;
  v16[0] = v7;
  v16[1] = 3221225472;
  v16[2] = __64__PKDashboardPaymentPassDataSource__performReloadTransitSection__block_invoke_3;
  v16[3] = &unk_1E3E633C0;
  v18 = v28;
  v13 = v11;
  v17 = v13;
  -[PKPaymentDefaultDataProvider plansForPaymentPassWithUniqueIdentifier:completion:](v12, "plansForPaymentPassWithUniqueIdentifier:completion:", v3, v16);
  block[0] = v7;
  block[1] = 3221225472;
  block[2] = __64__PKDashboardPaymentPassDataSource__performReloadTransitSection__block_invoke_4;
  block[3] = &unk_1E3E737D0;
  objc_copyWeak(&v15, &location);
  block[4] = v32;
  block[5] = v30;
  block[6] = v28;
  dispatch_group_notify(v13, MEMORY[0x1E0C80D38], block);
  objc_destroyWeak(&v15);

  objc_destroyWeak(&v26);
  objc_destroyWeak(&location);
  _Block_object_dispose(v28, 8);

  _Block_object_dispose(v30, 8);
  _Block_object_dispose(v32, 8);

}

void __64__PKDashboardPaymentPassDataSource__performReloadTransitSection__block_invoke(uint64_t a1, void *a2)
{
  id WeakRetained;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;

  v8 = a2;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  v4 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend(v8, "transitPassPropertiesWithPaymentApplication:pass:", *(_QWORD *)(a1 + 32), *((_QWORD *)WeakRetained + 109));
    v5 = objc_claimAutoreleasedReturnValue();
    v6 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    v7 = *(void **)(v6 + 40);
    *(_QWORD *)(v6 + 40) = v5;

  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 40));

}

void __64__PKDashboardPaymentPassDataSource__performReloadTransitSection__block_invoke_2(uint64_t a1, void *a2)
{
  id v4;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  v4 = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void __64__PKDashboardPaymentPassDataSource__performReloadTransitSection__block_invoke_3(uint64_t a1, void *a2)
{
  id v4;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  v4 = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

void __64__PKDashboardPaymentPassDataSource__performReloadTransitSection__block_invoke_4(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained, "_updateTransitBalanceProperties:dynamicBalances:dynamicPlans:", *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40));
    WeakRetained = v3;
  }

}

- (void)reloadTransitSection
{
  PKTransitBalanceModel *transitBalanceModel;
  PKPaymentPass *v4;
  PKPaymentPass *pass;

  transitBalanceModel = self->_transitBalanceModel;
  if (!transitBalanceModel
    || (-[PKTransitBalanceModel pass](transitBalanceModel, "pass"),
        v4 = (PKPaymentPass *)objc_claimAutoreleasedReturnValue(),
        pass = self->_pass,
        v4,
        v4 != pass))
  {
    -[PKDashboardPaymentPassDataSource _performReloadTransitSection](self, "_performReloadTransitSection");
  }
}

- (void)_cancelExpirationTimerIfNeeded
{
  NSObject *expirationTimer;

  expirationTimer = self->_expirationTimer;
  if (expirationTimer)
    dispatch_source_cancel(expirationTimer);
}

- (void)_scheduleExpirationTimerForCommutePlans:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  double v10;
  double v11;
  OS_dispatch_source *v12;
  OS_dispatch_source *expirationTimer;
  NSObject *v14;
  double v15;
  dispatch_time_t v16;
  NSObject *v17;
  _QWORD v18[4];
  id v19;
  id location;

  v4 = a3;
  v5 = v4;
  if (v4 && objc_msgSend(v4, "count"))
  {
    objc_msgSend(v5, "sortedArrayUsingComparator:", &__block_literal_global_1330);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "firstObject");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "expiryDate");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    if (v8)
    {
      objc_msgSend(MEMORY[0x1E0C99D68], "date");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "timeIntervalSinceDate:", v9);
      v11 = v10;

      if (v11 >= 1.0)
      {
        -[PKDashboardPaymentPassDataSource _cancelExpirationTimerIfNeeded](self, "_cancelExpirationTimerIfNeeded");
        v12 = (OS_dispatch_source *)dispatch_source_create(MEMORY[0x1E0C80DD0], 0, 0, MEMORY[0x1E0C80D38]);
        expirationTimer = self->_expirationTimer;
        self->_expirationTimer = v12;

        v14 = self->_expirationTimer;
        v15 = v11 * 1000000000.0;
        v16 = dispatch_time(0, (uint64_t)v15);
        dispatch_source_set_timer(v14, v16, (unint64_t)v15, 0);
        objc_initWeak(&location, self);
        v17 = self->_expirationTimer;
        v18[0] = MEMORY[0x1E0C809B0];
        v18[1] = 3221225472;
        v18[2] = __76__PKDashboardPaymentPassDataSource__scheduleExpirationTimerForCommutePlans___block_invoke_2;
        v18[3] = &unk_1E3E61310;
        objc_copyWeak(&v19, &location);
        dispatch_source_set_event_handler(v17, v18);
        dispatch_resume((dispatch_object_t)self->_expirationTimer);
        objc_destroyWeak(&v19);
        objc_destroyWeak(&location);
      }
    }

  }
  else
  {
    -[PKDashboardPaymentPassDataSource _cancelExpirationTimerIfNeeded](self, "_cancelExpirationTimerIfNeeded");
  }

}

uint64_t __76__PKDashboardPaymentPassDataSource__scheduleExpirationTimerForCommutePlans___block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;

  v4 = a3;
  objc_msgSend(a2, "expiryDate");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "expiryDate");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (v5)
  {
    if (v6)
      v7 = objc_msgSend(v5, "compare:", v6);
    else
      v7 = -1;
  }
  else
  {
    v7 = 1;
  }

  return v7;
}

void __76__PKDashboardPaymentPassDataSource__scheduleExpirationTimerForCommutePlans___block_invoke_2(uint64_t a1)
{
  _QWORD *WeakRetained;
  void *v2;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = (void *)WeakRetained[91];
    WeakRetained[91] = 0;
    v3 = WeakRetained;

    objc_msgSend(v3, "_performReloadTransitSection");
    WeakRetained = v3;
  }

}

- (void)_updateTransitBalanceProperties:(id)a3 dynamicBalances:(id)a4 dynamicPlans:(id)a5
{
  id v8;
  id v9;
  id v10;
  PKPaymentPass *v11;
  NSUInteger v12;
  PKTransitBalanceModel *v13;
  void *v14;
  PKPaymentPass *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  unsigned int (**v20)(_QWORD);
  unsigned int (**v21)(_QWORD);
  id WeakRetained;
  unint64_t v23;
  void *v24;
  NSArray *transitItems;
  _QWORD v26[4];
  id v27;
  unint64_t v28;
  _QWORD aBlock[4];
  PKPaymentPass *v30;
  id v31;
  PKDashboardPaymentPassDataSource *v32;
  NSUInteger v33;

  v8 = a3;
  v9 = a4;
  v10 = a5;
  v11 = self->_pass;
  if (-[PKPaymentPass isStoredValuePass](v11, "isStoredValuePass"))
  {
    v12 = -[NSArray count](self->_transitItems, "count");
    v13 = self->_transitBalanceModel;
    v14 = v13;
    if (!v13
      || (-[PKTransitBalanceModel pass](v13, "pass"),
          v15 = (PKPaymentPass *)objc_claimAutoreleasedReturnValue(),
          v15,
          v15 != v11))
    {
      v16 = objc_msgSend(objc_alloc(MEMORY[0x1E0D67740]), "initWithPass:", v11);

      v14 = (void *)v16;
    }
    if (v8)
      objc_msgSend(v14, "setTransitProperties:", v8);
    if (v9)
      objc_msgSend(v14, "updateWithDynamicBalances:", v9);
    if (v10)
      objc_msgSend(v14, "updateWithDynamicCommutePlans:", v10);
    objc_msgSend(v14, "displayableCommutePlans");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPaymentPassDataSource _scheduleExpirationTimerForCommutePlans:](self, "_scheduleExpirationTimerForCommutePlans:", v17);

    v18 = MEMORY[0x1E0C809B0];
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 3221225472;
    aBlock[2] = __97__PKDashboardPaymentPassDataSource__updateTransitBalanceProperties_dynamicBalances_dynamicPlans___block_invoke;
    aBlock[3] = &unk_1E3E73860;
    v30 = v11;
    v19 = v14;
    v31 = v19;
    v32 = self;
    v33 = v12;
    v20 = (unsigned int (**)(_QWORD))_Block_copy(aBlock);
    v21 = v20;
    if (self->_allContentIsLoaded)
    {
      WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
      if (WeakRetained)
      {
        v23 = -[PKDashboardPaymentPassDataSource firstSectionIndexForSectionIdentifier:](self, "firstSectionIndexForSectionIdentifier:", 7);
        if (v21[2](v21))
        {
          objc_msgSend(MEMORY[0x1E0CB36B8], "indexSetWithIndex:", v23);
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(WeakRetained, "reloadSections:", v24);
        }
        else
        {
          transitItems = self->_transitItems;
          v26[0] = v18;
          v26[1] = 3221225472;
          v26[2] = __97__PKDashboardPaymentPassDataSource__updateTransitBalanceProperties_dynamicBalances_dynamicPlans___block_invoke_3;
          v26[3] = &unk_1E3E73888;
          v28 = v23;
          v27 = WeakRetained;
          -[NSArray enumerateObjectsUsingBlock:](transitItems, "enumerateObjectsUsingBlock:", v26);
          v24 = v27;
        }

      }
    }
    else
    {
      v20[2](v20);
      -[PKDashboardPaymentPassDataSource updateContentIsLoaded](self, "updateContentIsLoaded");
    }

  }
}

BOOL __97__PKDashboardPaymentPassDataSource__updateTransitBalanceProperties_dynamicBalances_dynamicPlans___block_invoke(uint64_t a1)
{
  id v2;
  void (**v3)(void *, uint64_t);
  int v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  _BOOL8 v19;
  uint64_t v21;
  uint64_t v22;
  PKDashboardTransitItem *(*v23)(uint64_t, uint64_t);
  void *v24;
  id v25;
  id v26;

  v2 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  if (objc_msgSend(*(id *)(a1 + 32), "activationState"))
    goto LABEL_15;
  v21 = MEMORY[0x1E0C809B0];
  v22 = 3221225472;
  v23 = __97__PKDashboardPaymentPassDataSource__updateTransitBalanceProperties_dynamicBalances_dynamicPlans___block_invoke_2;
  v24 = &unk_1E3E73838;
  v25 = *(id *)(a1 + 32);
  v26 = *(id *)(a1 + 40);
  v3 = (void (**)(void *, uint64_t))_Block_copy(&v21);
  v4 = objc_msgSend(*(id *)(a1 + 32), "isEMoneyPass", v21, v22, v23, v24);
  v5 = *(void **)(a1 + 40);
  if (v4)
  {
    if (objc_msgSend(v5, "hasCurrencyBalance"))
    {
      v3[2](v3, 1);
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v2, "addObject:", v6);

    }
    if ((objc_msgSend(*(id *)(a1 + 40), "hasPointsBalance") & 1) == 0)
      goto LABEL_10;
    v7 = 2;
    goto LABEL_9;
  }
  if (objc_msgSend(v5, "hasBalanceContent"))
  {
    v7 = 0;
LABEL_9:
    v3[2](v3, v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "addObject:", v8);

  }
LABEL_10:
  if (objc_msgSend(*(id *)(a1 + 40), "hasCommutePlanContent"))
  {
    v3[2](v3, 3);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 40), "displayableCommutePlans");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "setTransitCommutePlans:", v10);

    objc_msgSend(v2, "addObject:", v9);
  }
  objc_msgSend(*(id *)(a1 + 32), "actionGroups");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = objc_msgSend(v11, "count");

  if (v12)
  {
    v3[2](v3, 4);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 40), "displayableCommutePlans");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "setTransitCommutePlans:", v14);

    objc_msgSend(*(id *)(a1 + 32), "actionGroups");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "setActionGroups:", v15);

    objc_msgSend(v2, "addObject:", v13);
  }

LABEL_15:
  objc_storeStrong((id *)(*(_QWORD *)(a1 + 48) + 216), *(id *)(a1 + 40));
  v16 = objc_msgSend(v2, "copy");
  v17 = *(_QWORD *)(a1 + 48);
  v18 = *(void **)(v17 + 224);
  *(_QWORD *)(v17 + 224) = v16;

  *(_BYTE *)(*(_QWORD *)(a1 + 48) + 232) = 1;
  v19 = objc_msgSend(v2, "count") != *(_QWORD *)(a1 + 56);

  return v19;
}

PKDashboardTransitItem *__97__PKDashboardPaymentPassDataSource__updateTransitBalanceProperties_dynamicBalances_dynamicPlans___block_invoke_2(uint64_t a1, uint64_t a2)
{
  return -[PKDashboardTransitItem initWithPass:transitBalanceModel:type:]([PKDashboardTransitItem alloc], "initWithPass:transitBalanceModel:type:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), a2);
}

void __97__PKDashboardPaymentPassDataSource__updateTransitBalanceProperties_dynamicBalances_dynamicPlans___block_invoke_3(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  uint64_t v6;
  id v7;
  id v8;

  v5 = (void *)MEMORY[0x1E0CB36B0];
  v6 = *(_QWORD *)(a1 + 40);
  v7 = a2;
  objc_msgSend(v5, "indexPathForItem:inSection:", a3, v6);
  v8 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "itemChanged:atIndexPath:", v7, v8);

}

- (BOOL)_passAvailableForAMPEnrollment
{
  void *v3;
  char BoolForKey;
  int v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  __int16 v10;

  AMPEnrollmentDismissedKeyForPass();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  BoolForKey = PKSharedCacheGetBoolForKey();

  if ((BoolForKey & 1) != 0)
    goto LABEL_6;
  v5 = -[PKPaymentPass hasAssociatedPeerPaymentAccount](self->_pass, "hasAssociatedPeerPaymentAccount");
  if (!v5)
    return v5;
  -[PKPeerPaymentAccount currentBalance](self->_peerPaymentAccount, "currentBalance");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "amount");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3598], "zero");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v7, "compare:", v8);

  v10 = -[PKDashboardPaymentPassDataSource _peerPaymentDashboardCondition](self, "_peerPaymentDashboardCondition");
  if (v9 != 1)
  {
LABEL_6:
    LOBYTE(v5) = 0;
    return v5;
  }
  LOBYTE(v5) = (v10 & 0x101) != 0x100
            || -[PKPaymentPass activationState](self->_pass, "activationState") == PKPaymentPassActivationStateSuspended;
  return v5;
}

- (void)_fetchAMPEnrollmentEligibility
{
  PKAMPEnrollmentManager *AMPEnrollmentManager;
  PKPaymentPass *pass;
  uint64_t v5;
  _QWORD v6[4];
  id v7;
  _QWORD v8[4];
  id v9;
  id location;

  objc_initWeak(&location, self);
  AMPEnrollmentManager = self->_AMPEnrollmentManager;
  pass = self->_pass;
  v5 = MEMORY[0x1E0C809B0];
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = __66__PKDashboardPaymentPassDataSource__fetchAMPEnrollmentEligibility__block_invoke;
  v8[3] = &unk_1E3E634A8;
  objc_copyWeak(&v9, &location);
  v6[0] = v5;
  v6[1] = 3221225472;
  v6[2] = __66__PKDashboardPaymentPassDataSource__fetchAMPEnrollmentEligibility__block_invoke_3;
  v6[3] = &unk_1E3E65F18;
  objc_copyWeak(&v7, &location);
  -[PKAMPEnrollmentManager enrollmentStatusForPaymentPass:completion:progress:](AMPEnrollmentManager, "enrollmentStatusForPaymentPass:completion:progress:", pass, v8, v6);
  objc_destroyWeak(&v7);
  objc_destroyWeak(&v9);
  objc_destroyWeak(&location);
}

void __66__PKDashboardPaymentPassDataSource__fetchAMPEnrollmentEligibility__block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  NSObject *v6;
  _QWORD v7[4];
  id v8[2];
  uint8_t buf[4];
  id v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  if (v5)
  {
    PKLogFacilityTypeGetObject();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138543362;
      v10 = v5;
      _os_log_impl(&dword_19D178000, v6, OS_LOG_TYPE_DEFAULT, "enrollmentStatusForPaymentPass completion error: %{public}@", buf, 0xCu);
    }

  }
  else if (a2)
  {
    v7[0] = MEMORY[0x1E0C809B0];
    v7[1] = 3221225472;
    v7[2] = __66__PKDashboardPaymentPassDataSource__fetchAMPEnrollmentEligibility__block_invoke_1336;
    v7[3] = &unk_1E3E66D38;
    objc_copyWeak(v8, (id *)(a1 + 32));
    v8[1] = a2;
    dispatch_async(MEMORY[0x1E0C80D38], v7);
    objc_destroyWeak(v8);
  }

}

void __66__PKDashboardPaymentPassDataSource__fetchAMPEnrollmentEligibility__block_invoke_1336(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  void *v4;
  _QWORD v5[4];
  id v6;

  v2 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v4 = WeakRetained;
  if (WeakRetained)
  {
    *((_BYTE *)WeakRetained + 568) = 1;
    *((_BYTE *)WeakRetained + 209) = *(_QWORD *)(a1 + 40) == 2;
    v5[0] = MEMORY[0x1E0C809B0];
    v5[1] = 3221225472;
    v5[2] = __66__PKDashboardPaymentPassDataSource__fetchAMPEnrollmentEligibility__block_invoke_2;
    v5[3] = &unk_1E3E61310;
    objc_copyWeak(&v6, v2);
    objc_msgSend(v4, "_fetchAMPEnrollmentIconIfNeeded:", v5);
    objc_destroyWeak(&v6);
  }

}

void __66__PKDashboardPaymentPassDataSource__fetchAMPEnrollmentEligibility__block_invoke_2(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "reloadMessages");

}

void __66__PKDashboardPaymentPassDataSource__fetchAMPEnrollmentEligibility__block_invoke_3(uint64_t a1, char a2, void *a3)
{
  id v5;
  NSObject *v6;
  _QWORD v7[4];
  id v8;
  char v9;
  uint8_t buf[4];
  id v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  if (v5)
  {
    PKLogFacilityTypeGetObject();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138543362;
      v11 = v5;
      _os_log_impl(&dword_19D178000, v6, OS_LOG_TYPE_DEFAULT, "enrollmentStatusForPaymentPass progress error: %{public}@", buf, 0xCu);
    }

  }
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = __66__PKDashboardPaymentPassDataSource__fetchAMPEnrollmentEligibility__block_invoke_1338;
  v7[3] = &unk_1E3E61C08;
  objc_copyWeak(&v8, (id *)(a1 + 32));
  v9 = a2;
  dispatch_async(MEMORY[0x1E0C80D38], v7);
  objc_destroyWeak(&v8);

}

void __66__PKDashboardPaymentPassDataSource__fetchAMPEnrollmentEligibility__block_invoke_1338(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  void *v4;
  _QWORD v5[4];
  id v6;

  v2 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v4 = WeakRetained;
  if (WeakRetained)
  {
    *((_BYTE *)WeakRetained + 568) = *(_BYTE *)(a1 + 40) ^ 1;
    *((_BYTE *)WeakRetained + 209) = 0;
    v5[0] = MEMORY[0x1E0C809B0];
    v5[1] = 3221225472;
    v5[2] = __66__PKDashboardPaymentPassDataSource__fetchAMPEnrollmentEligibility__block_invoke_2_1339;
    v5[3] = &unk_1E3E61310;
    objc_copyWeak(&v6, v2);
    objc_msgSend(v4, "_fetchAMPEnrollmentIconIfNeeded:", v5);
    objc_destroyWeak(&v6);
  }

}

void __66__PKDashboardPaymentPassDataSource__fetchAMPEnrollmentEligibility__block_invoke_2_1339(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "reloadMessages");

}

- (void)_addToAMPButtonTappedForPass:(id)a3
{
  id v4;
  void *v5;
  PKAMPEnrollmentManager *AMPEnrollmentManager;
  _QWORD v7[4];
  id v8;
  id v9;
  id v10;
  id from;
  id location;

  v4 = a3;
  if (!self->_performingAMPEnrollment)
  {
    self->_performingAMPEnrollment = 1;
    -[PKDashboardPaymentPassDataSource reloadMessages](self, "reloadMessages");
    -[UIView pkui_viewControllerFromResponderChain](self->_groupView, "pkui_viewControllerFromResponderChain");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_initWeak(&location, v5);

    objc_initWeak(&from, self);
    AMPEnrollmentManager = self->_AMPEnrollmentManager;
    v7[0] = MEMORY[0x1E0C809B0];
    v7[1] = 3221225472;
    v7[2] = __65__PKDashboardPaymentPassDataSource__addToAMPButtonTappedForPass___block_invoke;
    v7[3] = &unk_1E3E738F8;
    objc_copyWeak(&v9, &from);
    v8 = v4;
    objc_copyWeak(&v10, &location);
    -[PKAMPEnrollmentManager enrollPaymentPass:isDefault:completion:](AMPEnrollmentManager, "enrollPaymentPass:isDefault:completion:", v8, 0, v7);
    objc_destroyWeak(&v10);

    objc_destroyWeak(&v9);
    objc_destroyWeak(&from);
    objc_destroyWeak(&location);
  }

}

void __65__PKDashboardPaymentPassDataSource__addToAMPButtonTappedForPass___block_invoke(id *a1, char a2, void *a3)
{
  id v5;
  id v6;
  _QWORD block[4];
  id v8;
  id v9;
  id v10;
  id v11;
  char v12;

  v5 = a3;
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __65__PKDashboardPaymentPassDataSource__addToAMPButtonTappedForPass___block_invoke_2;
  block[3] = &unk_1E3E738D0;
  v8 = v5;
  v6 = v5;
  objc_copyWeak(&v10, a1 + 5);
  v12 = a2;
  v9 = a1[4];
  objc_copyWeak(&v11, a1 + 6);
  dispatch_async(MEMORY[0x1E0C80D38], block);
  objc_destroyWeak(&v11);

  objc_destroyWeak(&v10);
}

void __65__PKDashboardPaymentPassDataSource__addToAMPButtonTappedForPass___block_invoke_2(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  id WeakRetained;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  _QWORD v27[4];
  id v28;
  id v29;
  _QWORD v30[4];
  id v31;
  uint8_t buf[4];
  uint64_t v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v2 = *(_QWORD *)(a1 + 32);
  if (v2)
  {
    PKLogFacilityTypeGetObject();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138543362;
      v33 = v2;
      _os_log_impl(&dword_19D178000, v3, OS_LOG_TYPE_DEFAULT, "enrollPaymentPass error: %{public}@", buf, 0xCu);
    }

  }
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v5 = WeakRetained;
  if (WeakRetained)
  {
    *((_BYTE *)WeakRetained + 568) = *(_BYTE *)(a1 + 64) ^ 1;
    *((_BYTE *)WeakRetained + 209) = 0;
    AMPEnrollmentDismissedKeyForPass();
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    PKSharedCacheSetBoolForKey();

    v30[0] = MEMORY[0x1E0C809B0];
    v30[1] = 3221225472;
    v30[2] = __65__PKDashboardPaymentPassDataSource__addToAMPButtonTappedForPass___block_invoke_1340;
    v30[3] = &unk_1E3E61310;
    objc_copyWeak(&v31, (id *)(a1 + 48));
    objc_msgSend(v5, "_fetchAMPEnrollmentIconIfNeeded:", v30);
    objc_destroyWeak(&v31);
  }
  v7 = objc_loadWeakRetained((id *)(a1 + 56));
  if (v7)
  {
    v8 = (void *)MEMORY[0x1E0DC3450];
    if (*(_BYTE *)(a1 + 64))
    {
      PKLocalizedAMPString(CFSTR("PASS_DASHBOARD_ADD_TO_AMP_SUCCESS_MESSAGE_TITLE"));
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(a1 + 40), "localizedDescription");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      PKLocalizedAMPString(CFSTR("PASS_DASHBOARD_ADD_TO_AMP_SUCCESS_MESSAGE_DETAIL_FMT"), CFSTR("%@"), v10);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "alertControllerWithTitle:message:preferredStyle:", v9, v11, 1);
      v12 = (void *)objc_claimAutoreleasedReturnValue();

      v13 = (void *)MEMORY[0x1E0DC3448];
      PKLocalizedAMPString(CFSTR("PASS_DASHBOARD_ADD_TO_AMP_VIEW_IN_SETTINGS_ACTION"));
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "actionWithTitle:style:handler:", v14, 0, &__block_literal_global_1348);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "addAction:", v15);

      v16 = (void *)MEMORY[0x1E0DC3448];
      PKLocalizedAMPString(CFSTR("PASS_DASHBOARD_ADD_TO_AMP_CONTINUE_ACTION"));
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "actionWithTitle:style:handler:", v17, 1, 0);
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "addAction:", v18);

    }
    else
    {
      PKLocalizedAMPString(CFSTR("PASS_DASHBOARD_ADD_TO_AMP_FAILURE_MESSAGE_TITLE"));
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      PKLocalizedAMPString(CFSTR("PASS_DASHBOARD_ADD_TO_AMP_FAILURE_MESSAGE_DETAIL"));
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "alertControllerWithTitle:message:preferredStyle:", v19, v20, 1);
      v12 = (void *)objc_claimAutoreleasedReturnValue();

      v21 = (void *)MEMORY[0x1E0DC3448];
      PKLocalizedAMPString(CFSTR("PASS_DASHBOARD_ADD_TO_AMP_ADD_LATER_ACTION"));
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v21, "actionWithTitle:style:handler:", v22, 1, 0);
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "addAction:", v23);

      v24 = (void *)MEMORY[0x1E0DC3448];
      PKLocalizedAMPString(CFSTR("PASS_DASHBOARD_ADD_TO_AMP_TRY_AGAIN_ACTION"));
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      v27[0] = MEMORY[0x1E0C809B0];
      v27[1] = 3221225472;
      v27[2] = __65__PKDashboardPaymentPassDataSource__addToAMPButtonTappedForPass___block_invoke_3;
      v27[3] = &unk_1E3E69FE8;
      objc_copyWeak(&v29, (id *)(a1 + 48));
      v28 = *(id *)(a1 + 40);
      objc_msgSend(v24, "actionWithTitle:style:handler:", v25, 0, v27);
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "addAction:", v26);

      objc_destroyWeak(&v29);
    }
    objc_msgSend(v7, "presentViewController:animated:completion:", v12, 1, 0);

  }
}

void __65__PKDashboardPaymentPassDataSource__addToAMPButtonTappedForPass___block_invoke_1340(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "reloadMessages");

}

void __65__PKDashboardPaymentPassDataSource__addToAMPButtonTappedForPass___block_invoke_2_1347()
{
  void *v0;
  id v1;

  objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", CFSTR("prefs:root=APPLE_ACCOUNT&path=ICLOUD_SERVICE&path=PAYMENT_AND_SHIPPING"));
  v1 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "openSensitiveURL:withOptions:", v1, 0);

}

void __65__PKDashboardPaymentPassDataSource__addToAMPButtonTappedForPass___block_invoke_3(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_addToAMPButtonTappedForPass:", *(_QWORD *)(a1 + 32));

}

- (void)_fetchAMPEnrollmentIconIfNeeded:(id)a3
{
  id v4;
  void *v5;
  NSObject *v6;
  _QWORD block[4];
  id v8;
  id v9;
  id location;

  v4 = a3;
  v5 = v4;
  if (self->_showAMPEnrollmentMessage && !self->_AMPEnrollmentIcon)
  {
    objc_initWeak(&location, self);
    dispatch_get_global_queue(25, 0);
    v6 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = __68__PKDashboardPaymentPassDataSource__fetchAMPEnrollmentIconIfNeeded___block_invoke;
    block[3] = &unk_1E3E61C80;
    objc_copyWeak(&v9, &location);
    v8 = v5;
    dispatch_async(v6, block);

    objc_destroyWeak(&v9);
    objc_destroyWeak(&location);
  }
  else if (v4)
  {
    (*((void (**)(id))v4 + 2))(v4);
  }

}

void __68__PKDashboardPaymentPassDataSource__fetchAMPEnrollmentIconIfNeeded___block_invoke(uint64_t a1)
{
  id v2;
  void *v3;
  void *v4;
  id v5;
  _QWORD block[4];
  id v7;
  id v8;
  id v9;

  v2 = objc_alloc(MEMORY[0x1E0CA5870]);
  v3 = (void *)objc_msgSend(v2, "initWithBundleIdentifier:allowPlaceholder:error:", *MEMORY[0x1E0D6A5A8], 1, 0);
  PKUIGetAppIconForApplicationRecord(v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __68__PKDashboardPaymentPassDataSource__fetchAMPEnrollmentIconIfNeeded___block_invoke_2;
  block[3] = &unk_1E3E61B90;
  objc_copyWeak(&v9, (id *)(a1 + 40));
  v7 = v4;
  v8 = *(id *)(a1 + 32);
  v5 = v4;
  dispatch_async(MEMORY[0x1E0C80D38], block);

  objc_destroyWeak(&v9);
}

void __68__PKDashboardPaymentPassDataSource__fetchAMPEnrollmentIconIfNeeded___block_invoke_2(uint64_t a1)
{
  id *WeakRetained;
  id *v3;
  uint64_t v4;
  id *v5;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  v3 = WeakRetained;
  v5 = WeakRetained;
  if (WeakRetained)
  {
    objc_storeStrong(WeakRetained + 72, *(id *)(a1 + 32));
    v3 = v5;
  }
  v4 = *(_QWORD *)(a1 + 40);
  if (v4)
  {
    (*(void (**)(void))(v4 + 16))();
    v3 = v5;
  }

}

- (id)AMPEnagementPlacementForCurrentlyDisplayedPass
{
  id *v3;
  id v4;

  if (-[PKDashboardPaymentPassDataSource _isCreditPass](self, "_isCreditPass"))
  {
    v3 = (id *)MEMORY[0x1E0D69EB8];
  }
  else if (-[PKDashboardPaymentPassDataSource _isPeerPaymentPass](self, "_isPeerPaymentPass"))
  {
    v3 = (id *)MEMORY[0x1E0D69EC0];
  }
  else
  {
    if (!-[PKDashboardPaymentPassDataSource _isPayLaterPass](self, "_isPayLaterPass"))
    {
      v4 = 0;
      return v4;
    }
    v3 = (id *)MEMORY[0x1E0D69EC8];
  }
  v4 = *v3;
  return v4;
}

- (void)reloadDialogRequests
{
  void *v3;
  void *v4;
  _QWORD v5[5];
  id v6;

  -[PKDashboardPaymentPassDataSource AMPEnagementPlacementForCurrentlyDisplayedPass](self, "AMPEnagementPlacementForCurrentlyDisplayedPass");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    objc_msgSend(MEMORY[0x1E0D66D00], "sharedInstance");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5[0] = MEMORY[0x1E0C809B0];
    v5[1] = 3221225472;
    v5[2] = __56__PKDashboardPaymentPassDataSource_reloadDialogRequests__block_invoke;
    v5[3] = &unk_1E3E6CFD8;
    v5[4] = self;
    v6 = v3;
    objc_msgSend(v4, "dialogRequestsForPlacement:completion:", v6, v5);

  }
  else
  {
    self->_engagementMessagesLoaded = 1;
    -[PKDashboardPaymentPassDataSource updateContentIsLoaded](self, "updateContentIsLoaded");
  }

}

void __56__PKDashboardPaymentPassDataSource_reloadDialogRequests__block_invoke(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  _QWORD v5[4];
  id v6;
  id v7;
  id v8;
  id location;

  v3 = a2;
  objc_initWeak(&location, *(id *)(a1 + 32));
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 3221225472;
  v5[2] = __56__PKDashboardPaymentPassDataSource_reloadDialogRequests__block_invoke_2;
  v5[3] = &unk_1E3E61EE8;
  objc_copyWeak(&v8, &location);
  v6 = v3;
  v7 = *(id *)(a1 + 40);
  v4 = v3;
  dispatch_async(MEMORY[0x1E0C80D38], v5);

  objc_destroyWeak(&v8);
  objc_destroyWeak(&location);
}

void __56__PKDashboardPaymentPassDataSource_reloadDialogRequests__block_invoke_2(uint64_t a1)
{
  id *v2;
  _QWORD *WeakRetained;
  void *v4;
  uint64_t v5;
  void *v6;
  _QWORD v7[4];
  id v8;
  _QWORD *v9;
  id v10;

  v2 = (id *)(a1 + 48);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v4 = *(void **)(a1 + 32);
    v7[0] = MEMORY[0x1E0C809B0];
    v7[1] = 3221225472;
    v7[2] = __56__PKDashboardPaymentPassDataSource_reloadDialogRequests__block_invoke_3;
    v7[3] = &unk_1E3E73948;
    objc_copyWeak(&v10, v2);
    v8 = *(id *)(a1 + 40);
    v9 = WeakRetained;
    objc_msgSend(v4, "pk_arrayBySafelyApplyingBlock:", v7);
    v5 = objc_claimAutoreleasedReturnValue();
    v6 = (void *)WeakRetained[74];
    WeakRetained[74] = v5;

    *((_BYTE *)WeakRetained + 600) = 1;
    objc_msgSend(WeakRetained, "updateContentIsLoaded");
    objc_msgSend(WeakRetained, "reloadMessages");

    objc_destroyWeak(&v10);
  }

}

id __56__PKDashboardPaymentPassDataSource_reloadDialogRequests__block_invoke_3(id *a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  void *v12;
  id v13;
  id v14;
  id v15;
  _QWORD v16[4];
  id v17;

  v3 = a2;
  v4 = MEMORY[0x1E0C809B0];
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 3221225472;
  v16[2] = __56__PKDashboardPaymentPassDataSource_reloadDialogRequests__block_invoke_4;
  v16[3] = &unk_1E3E73920;
  objc_copyWeak(&v17, a1 + 6);
  +[PKDashboardPassMessage messageFromDialogRequest:withAction:](PKDashboardPassMessage, "messageFromDialogRequest:withAction:", v3, v16);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v4;
  v10 = 3221225472;
  v11 = __56__PKDashboardPaymentPassDataSource_reloadDialogRequests__block_invoke_5;
  v12 = &unk_1E3E62F50;
  v6 = v3;
  v13 = v6;
  v14 = a1[4];
  objc_copyWeak(&v15, a1 + 6);
  objc_msgSend(v5, "setActionOnDismiss:", &v9);
  objc_msgSend(a1[5], "_replaceDashboardMessagePlaceholders:", v5, v9, v10, v11, v12);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_destroyWeak(&v15);

  objc_destroyWeak(&v17);
  return v7;
}

void __56__PKDashboardPaymentPassDataSource_reloadDialogRequests__block_invoke_4(uint64_t a1, void *a2)
{
  id *v2;
  id v3;
  id WeakRetained;

  v2 = (id *)(a1 + 32);
  v3 = a2;
  WeakRetained = objc_loadWeakRetained(v2);
  objc_msgSend(WeakRetained, "executeEngagementActionForURL:", v3);

}

void __56__PKDashboardPaymentPassDataSource_reloadDialogRequests__block_invoke_5(uint64_t a1)
{
  void *v2;
  void *v3;
  id WeakRetained;

  objc_msgSend(MEMORY[0x1E0D66D00], "sharedInstance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "identifier");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "dismissDialogRequestWithIdentifier:forPlacement:completion:", v3, *(_QWORD *)(a1 + 40), 0);

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend(WeakRetained, "reloadDialogRequests");

}

- (BOOL)_isCreditPass
{
  return -[PKDashboardPaymentPassDataSource _passFeature](self, "_passFeature") == 2;
}

- (BOOL)_isPeerPaymentPass
{
  return -[PKDashboardPaymentPassDataSource _passFeature](self, "_passFeature") == 1;
}

- (BOOL)_isPayLaterPass
{
  return -[PKDashboardPaymentPassDataSource _passFeature](self, "_passFeature") == 3;
}

- (BOOL)_isAppleBalancePass
{
  return -[PKDashboardPaymentPassDataSource _passFeature](self, "_passFeature") == 4;
}

- (void)didUpdateFamilyMembers:(id)a3
{
  id v4;
  id v5;
  _QWORD block[4];
  id v7;
  id v8;
  id location;

  v4 = a3;
  objc_initWeak(&location, self);
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __59__PKDashboardPaymentPassDataSource_didUpdateFamilyMembers___block_invoke;
  block[3] = &unk_1E3E61B68;
  objc_copyWeak(&v8, &location);
  v7 = v4;
  v5 = v4;
  dispatch_async(MEMORY[0x1E0C80D38], block);

  objc_destroyWeak(&v8);
  objc_destroyWeak(&location);
}

void __59__PKDashboardPaymentPassDataSource_didUpdateFamilyMembers___block_invoke(uint64_t a1)
{
  void *v2;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D66D88]), "initWithFamilyMembers:", *(_QWORD *)(a1 + 32));
    objc_msgSend(WeakRetained, "_updateWithFamilyCollection:", v2);

  }
}

- (void)paymentPassWithUniqueIdentifier:(id)a3 didEnableMessageService:(BOOL)a4
{
  id v5;
  id v6;
  _QWORD block[4];
  id v8;
  id v9;
  id location;

  v5 = a3;
  objc_initWeak(&location, self);
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __92__PKDashboardPaymentPassDataSource_paymentPassWithUniqueIdentifier_didEnableMessageService___block_invoke;
  block[3] = &unk_1E3E61B68;
  objc_copyWeak(&v9, &location);
  v8 = v5;
  v6 = v5;
  dispatch_async(MEMORY[0x1E0C80D38], block);

  objc_destroyWeak(&v9);
  objc_destroyWeak(&location);
}

void __92__PKDashboardPaymentPassDataSource_paymentPassWithUniqueIdentifier_didEnableMessageService___block_invoke(uint64_t a1)
{
  id *WeakRetained;
  id *v2;
  id v3;
  void *v4;
  int v5;
  BOOL v6;
  id *v7;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  v2 = WeakRetained;
  if (WeakRetained)
  {
    v7 = WeakRetained;
    v3 = objc_loadWeakRetained(WeakRetained + 5);
    if (*((_BYTE *)v7 + 739))
    {
      objc_msgSend(v7[109], "uniqueID");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      v5 = PKEqualObjects();

      if (v5)
        v6 = v3 == 0;
      else
        v6 = 1;
      if (!v6)
        objc_msgSend(v7, "reloadMessages");
    }

    v2 = v7;
  }

}

- (void)passWithUniqueIdentifier:(id)a3 didUpdateTiles:(id)a4 forContext:(int64_t)a5
{
  id v8;
  id v9;
  _QWORD v10[4];
  id v11;
  id v12;
  id v13;
  id location;

  v8 = a3;
  v9 = a4;
  if (a5 == 1)
  {
    objc_initWeak(&location, self);
    v10[0] = MEMORY[0x1E0C809B0];
    v10[1] = 3221225472;
    v10[2] = __87__PKDashboardPaymentPassDataSource_passWithUniqueIdentifier_didUpdateTiles_forContext___block_invoke;
    v10[3] = &unk_1E3E61EE8;
    objc_copyWeak(&v13, &location);
    v11 = v8;
    v12 = v9;
    dispatch_async(MEMORY[0x1E0C80D38], v10);

    objc_destroyWeak(&v13);
    objc_destroyWeak(&location);
  }

}

void __87__PKDashboardPaymentPassDataSource_passWithUniqueIdentifier_didUpdateTiles_forContext___block_invoke(uint64_t a1)
{
  id *WeakRetained;
  void *v3;
  int v4;
  id *v5;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v5 = WeakRetained;
    objc_msgSend(WeakRetained[109], "uniqueID");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = PKEqualObjects();

    WeakRetained = v5;
    if (v4)
    {
      objc_msgSend(v5, "_updateWithTiles:", *(_QWORD *)(a1 + 40));
      WeakRetained = v5;
    }
  }

}

- (void)paymentPassWithUniqueIdentifier:(id)a3 didReceiveMessage:(id)a4
{
  id v5;
  id v6;
  _QWORD block[4];
  id v8;
  id v9;
  id location;

  v5 = a3;
  objc_initWeak(&location, self);
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __86__PKDashboardPaymentPassDataSource_paymentPassWithUniqueIdentifier_didReceiveMessage___block_invoke;
  block[3] = &unk_1E3E61B68;
  objc_copyWeak(&v9, &location);
  v8 = v5;
  v6 = v5;
  dispatch_async(MEMORY[0x1E0C80D38], block);

  objc_destroyWeak(&v9);
  objc_destroyWeak(&location);
}

void __86__PKDashboardPaymentPassDataSource_paymentPassWithUniqueIdentifier_didReceiveMessage___block_invoke(uint64_t a1)
{
  id *WeakRetained;
  id *v2;
  id v3;
  void *v4;
  int v5;
  BOOL v6;
  id *v7;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  v2 = WeakRetained;
  if (WeakRetained)
  {
    v7 = WeakRetained;
    v3 = objc_loadWeakRetained(WeakRetained + 5);
    if (*((_BYTE *)v7 + 739))
    {
      objc_msgSend(v7[109], "uniqueID");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      v5 = PKEqualObjects();

      if (v5)
        v6 = v3 == 0;
      else
        v6 = 1;
      if (!v6)
        objc_msgSend(v7, "reloadMessages");
    }

    v2 = v7;
  }

}

- (void)paymentPassWithUniqueIdentifier:(id)a3 didUpdateWithTransitPassProperties:(id)a4
{
  id v6;
  id v7;
  id v8;
  id v9;
  _QWORD v10[4];
  id v11;
  id v12;
  id v13;
  id location;

  v6 = a3;
  v7 = a4;
  objc_initWeak(&location, self);
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = __103__PKDashboardPaymentPassDataSource_paymentPassWithUniqueIdentifier_didUpdateWithTransitPassProperties___block_invoke;
  v10[3] = &unk_1E3E61EE8;
  objc_copyWeak(&v13, &location);
  v11 = v6;
  v12 = v7;
  v8 = v7;
  v9 = v6;
  dispatch_async(MEMORY[0x1E0C80D38], v10);

  objc_destroyWeak(&v13);
  objc_destroyWeak(&location);
}

void __103__PKDashboardPaymentPassDataSource_paymentPassWithUniqueIdentifier_didUpdateWithTransitPassProperties___block_invoke(uint64_t a1)
{
  id *WeakRetained;
  void *v3;
  int v4;
  id *v5;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    if (*((_BYTE *)WeakRetained + 739))
    {
      v5 = WeakRetained;
      objc_msgSend(WeakRetained[109], "uniqueID");
      v3 = (void *)objc_claimAutoreleasedReturnValue();
      v4 = PKEqualObjects();

      WeakRetained = v5;
      if (v4)
      {
        objc_msgSend(v5, "_updateTransitBalanceProperties:dynamicBalances:dynamicPlans:", *(_QWORD *)(a1 + 40), 0, 0);
        WeakRetained = v5;
      }
    }
  }

}

- (void)paymentPassWithUniqueIdentifier:(id)a3 didReceiveBalanceUpdate:(id)a4
{
  id v6;
  id v7;
  id v8;
  id v9;
  _QWORD v10[4];
  id v11;
  id v12;
  id v13;
  id location;

  v6 = a3;
  v7 = a4;
  objc_initWeak(&location, self);
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = __92__PKDashboardPaymentPassDataSource_paymentPassWithUniqueIdentifier_didReceiveBalanceUpdate___block_invoke;
  v10[3] = &unk_1E3E61EE8;
  objc_copyWeak(&v13, &location);
  v11 = v6;
  v12 = v7;
  v8 = v7;
  v9 = v6;
  dispatch_async(MEMORY[0x1E0C80D38], v10);

  objc_destroyWeak(&v13);
  objc_destroyWeak(&location);
}

void __92__PKDashboardPaymentPassDataSource_paymentPassWithUniqueIdentifier_didReceiveBalanceUpdate___block_invoke(uint64_t a1)
{
  id *WeakRetained;
  void *v3;
  int v4;
  id *v5;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v5 = WeakRetained;
    objc_msgSend(WeakRetained[109], "uniqueID");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = PKEqualObjects();

    WeakRetained = v5;
    if (v4)
    {
      if (*((_BYTE *)v5 + 739))
      {
        objc_msgSend(v5, "_updateTransitBalanceProperties:dynamicBalances:dynamicPlans:", 0, *(_QWORD *)(a1 + 40), 0);
        WeakRetained = v5;
      }
    }
  }

}

- (void)paymentPassWithUniqueIdentifier:(id)a3 didReceivePlanUpdate:(id)a4
{
  id v6;
  id v7;
  id v8;
  id v9;
  _QWORD v10[4];
  id v11;
  id v12;
  id v13;
  id location;

  v6 = a3;
  v7 = a4;
  objc_initWeak(&location, self);
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = __89__PKDashboardPaymentPassDataSource_paymentPassWithUniqueIdentifier_didReceivePlanUpdate___block_invoke;
  v10[3] = &unk_1E3E61EE8;
  objc_copyWeak(&v13, &location);
  v11 = v6;
  v12 = v7;
  v8 = v7;
  v9 = v6;
  dispatch_async(MEMORY[0x1E0C80D38], v10);

  objc_destroyWeak(&v13);
  objc_destroyWeak(&location);
}

void __89__PKDashboardPaymentPassDataSource_paymentPassWithUniqueIdentifier_didReceivePlanUpdate___block_invoke(uint64_t a1)
{
  id *WeakRetained;
  void *v3;
  int v4;
  id *v5;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v5 = WeakRetained;
    objc_msgSend(WeakRetained[109], "uniqueID");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = PKEqualObjects();

    WeakRetained = v5;
    if (v4)
    {
      if (*((_BYTE *)v5 + 739))
      {
        objc_msgSend(v5, "_updateTransitBalanceProperties:dynamicBalances:dynamicPlans:", 0, 0, *(_QWORD *)(a1 + 40));
        WeakRetained = v5;
      }
    }
  }

}

- (void)credential:(id)a3 forPaymentApplication:(id)a4 didUpdateRangingSuspensionReasons:(unint64_t)a5
{
  id v6;
  id v7;
  _QWORD block[4];
  id v9;
  id v10;
  id location;

  v6 = a3;
  objc_initWeak(&location, self);
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __103__PKDashboardPaymentPassDataSource_credential_forPaymentApplication_didUpdateRangingSuspensionReasons___block_invoke;
  block[3] = &unk_1E3E61B68;
  objc_copyWeak(&v10, &location);
  v9 = v6;
  v7 = v6;
  dispatch_async(MEMORY[0x1E0C80D38], block);

  objc_destroyWeak(&v10);
  objc_destroyWeak(&location);
}

void __103__PKDashboardPaymentPassDataSource_credential_forPaymentApplication_didUpdateRangingSuspensionReasons___block_invoke(uint64_t a1)
{
  id *WeakRetained;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  int v8;
  id *v9;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v9 = WeakRetained;
    objc_msgSend(WeakRetained[109], "devicePrimaryPaymentApplication");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "subcredentials");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "anyObject");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "identifier");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "identifier");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = PKEqualObjects();

    WeakRetained = v9;
    if (v8)
    {
      objc_msgSend(v9, "reloadMessages");
      WeakRetained = v9;
    }
  }

}

- (void)sharesDidUpdateWithPaymentPassWithUniqueIdentifier:(id)a3
{
  id v4;
  id v5;
  _QWORD block[4];
  id v7;
  id v8;
  id location;

  v4 = a3;
  objc_initWeak(&location, self);
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __87__PKDashboardPaymentPassDataSource_sharesDidUpdateWithPaymentPassWithUniqueIdentifier___block_invoke;
  block[3] = &unk_1E3E61B68;
  objc_copyWeak(&v8, &location);
  v7 = v4;
  v5 = v4;
  dispatch_async(MEMORY[0x1E0C80D38], block);

  objc_destroyWeak(&v8);
  objc_destroyWeak(&location);
}

void __87__PKDashboardPaymentPassDataSource_sharesDidUpdateWithPaymentPassWithUniqueIdentifier___block_invoke(uint64_t a1)
{
  id *WeakRetained;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  BOOL v8;
  int v9;
  id *v10;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v10 = WeakRetained;
    objc_msgSend(WeakRetained[109], "uniqueID");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = *(void **)(a1 + 32);
    v5 = v3;
    v6 = v4;
    if (v5 == v6)
    {

      WeakRetained = v10;
      goto LABEL_11;
    }
    v7 = v6;
    if (v5)
      v8 = v6 == 0;
    else
      v8 = 1;
    if (v8)
    {

LABEL_12:
      WeakRetained = v10;
      goto LABEL_13;
    }
    v9 = objc_msgSend(v5, "isEqualToString:", v6);

    WeakRetained = v10;
    if (v9)
    {
LABEL_11:
      v5 = objc_loadWeakRetained(WeakRetained + 5);
      objc_msgSend(v5, "reloadNavigationBarAnimated:", 1);
      goto LABEL_12;
    }
  }
LABEL_13:

}

- (void)inboxDataSourceDidUpdateInboxMessages:(id)a3
{
  _QWORD v3[4];
  id v4;
  id location;

  objc_initWeak(&location, self);
  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = __74__PKDashboardPaymentPassDataSource_inboxDataSourceDidUpdateInboxMessages___block_invoke;
  v3[3] = &unk_1E3E61310;
  objc_copyWeak(&v4, &location);
  dispatch_async(MEMORY[0x1E0C80D38], v3);
  objc_destroyWeak(&v4);
  objc_destroyWeak(&location);
}

void __74__PKDashboardPaymentPassDataSource_inboxDataSourceDidUpdateInboxMessages___block_invoke(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = WeakRetained;
    objc_msgSend(WeakRetained, "reloadMessages");
    WeakRetained = v2;
  }

}

- (void)_peerPaymentAccountChanged:(id)a3
{
  _QWORD v3[4];
  id v4;
  id location;

  objc_initWeak(&location, self);
  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = __63__PKDashboardPaymentPassDataSource__peerPaymentAccountChanged___block_invoke;
  v3[3] = &unk_1E3E61310;
  objc_copyWeak(&v4, &location);
  dispatch_async(MEMORY[0x1E0C80D38], v3);
  objc_destroyWeak(&v4);
  objc_destroyWeak(&location);
}

void __63__PKDashboardPaymentPassDataSource__peerPaymentAccountChanged___block_invoke(uint64_t a1)
{
  id *WeakRetained;
  void *v2;
  uint64_t v3;
  id v4;
  id *v5;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v5 = WeakRetained;
    objc_msgSend(WeakRetained[108], "targetDevice");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "account");
    v3 = objc_claimAutoreleasedReturnValue();
    v4 = v5[23];
    v5[23] = (id)v3;

    if (objc_msgSend(v5, "_isCreditPass"))
    {
      objc_msgSend(v5, "reloadMessages");
    }
    else
    {
      *((_BYTE *)v5 + 235) = 1;
      objc_msgSend(v5, "reloadAccount");
    }
    WeakRetained = v5;
  }

}

- (void)_peerPaymentResolutionTappedWithResolution:(unint64_t)a3
{
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  PKPeerPaymentAccountResolutionController *peerPaymentAccountResolutionController;
  PKPeerPaymentAccountResolutionController *v11;
  void *v12;
  _QWORD v13[4];
  id v14;
  _QWORD v15[4];
  id v16;
  id location;

  if (!self->_performingPeerPaymentResolution)
  {
    -[PKPeerPaymentAccountResolutionController account](self->_peerPaymentAccountResolutionController, "account");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = v5;
    if (v5)
    {
      v7 = objc_msgSend(v5, "pendingPaymentCount");
      PKSharedCacheGetStringForKey();
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      self->_performingPeerPaymentResolution = 1;
      objc_initWeak(&location, self);
      if (a3 == 1 && v7 == 1 && objc_msgSend(v8, "length"))
      {
        v9 = objc_alloc_init(MEMORY[0x1E0D673D8]);
        objc_msgSend(v9, "setRegistrationFlowState:", 2);
        objc_msgSend(v9, "setSenderAddress:", v8);
        peerPaymentAccountResolutionController = self->_peerPaymentAccountResolutionController;
        v15[0] = MEMORY[0x1E0C809B0];
        v15[1] = 3221225472;
        v15[2] = __79__PKDashboardPaymentPassDataSource__peerPaymentResolutionTappedWithResolution___block_invoke;
        v15[3] = &unk_1E3E61C58;
        objc_copyWeak(&v16, &location);
        -[PKPeerPaymentAccountResolutionController presentFlowForAccountResolution:configuration:completion:](peerPaymentAccountResolutionController, "presentFlowForAccountResolution:configuration:completion:", 1, v9, v15);
        objc_destroyWeak(&v16);

      }
      else
      {
        v11 = self->_peerPaymentAccountResolutionController;
        v13[0] = MEMORY[0x1E0C809B0];
        v13[1] = 3221225472;
        v13[2] = __79__PKDashboardPaymentPassDataSource__peerPaymentResolutionTappedWithResolution___block_invoke_2;
        v13[3] = &unk_1E3E61C58;
        objc_copyWeak(&v14, &location);
        -[PKPeerPaymentAccountResolutionController presentFlowForAccountResolution:configuration:completion:](v11, "presentFlowForAccountResolution:configuration:completion:", a3, 0, v13);
        objc_destroyWeak(&v14);
      }
      objc_destroyWeak(&location);
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", CFSTR("prefs:root=PASSBOOK"));
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "openSensitiveURL:withOptions:", v8, 0);

    }
  }
}

void __79__PKDashboardPaymentPassDataSource__peerPaymentResolutionTappedWithResolution___block_invoke(uint64_t a1)
{
  _BYTE *WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
    WeakRetained[208] = 0;

}

void __79__PKDashboardPaymentPassDataSource__peerPaymentResolutionTappedWithResolution___block_invoke_2(uint64_t a1)
{
  _BYTE *WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
    WeakRetained[208] = 0;

}

- (id)_contactResolver
{
  PKContactResolver *contactResolver;
  id v4;
  void *v5;
  void *v6;
  Class v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  PKContactResolver *v13;
  PKContactResolver *v14;
  _QWORD v16[4];

  v16[3] = *MEMORY[0x1E0C80C00];
  contactResolver = self->_contactResolver;
  if (!contactResolver)
  {
    v4 = objc_alloc_init(MEMORY[0x1E0C97298]);
    objc_msgSend(MEMORY[0x1E0D67400], "requiredContactKeys");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = (void *)objc_msgSend(v5, "mutableCopy");

    v7 = _MergedGlobals_663();
    objc_msgSend(MEMORY[0x1E0DC3708], "currentDevice");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[objc_class descriptorForRequiredKeysWithThreeDTouchEnabled:](v7, "descriptorForRequiredKeysWithThreeDTouchEnabled:", objc_msgSend(v8, "_supportsForceTouch"));
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend((Class)off_1ED06C4F8(), "descriptorForRequiredKeys", v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v16[1] = v10;
    objc_msgSend((Class)off_1ED06C500(), "descriptorForRequiredKeys");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v16[2] = v11;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v16, 3);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "addObjectsFromArray:", v12);

    v13 = (PKContactResolver *)objc_msgSend(objc_alloc(MEMORY[0x1E0D66C60]), "initWithContactStore:keysToFetch:", v4, v6);
    v14 = self->_contactResolver;
    self->_contactResolver = v13;

    contactResolver = self->_contactResolver;
  }
  return contactResolver;
}

- (void)peerPaymentAccountResolutionController:(id)a3 requestsPresentViewController:(id)a4 animated:(BOOL)a5
{
  _BOOL8 v5;
  PKPassGroupView *groupView;
  id v7;
  id v8;

  v5 = a5;
  groupView = self->_groupView;
  v7 = a4;
  -[UIView pkui_viewControllerFromResponderChain](groupView, "pkui_viewControllerFromResponderChain");
  v8 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "presentViewController:animated:completion:", v7, v5, 0);

}

- (void)peerPaymentAccountResolutionController:(id)a3 requestsDismissCurrentViewControllerAnimated:(BOOL)a4
{
  _BOOL8 v4;
  id v5;

  v4 = a4;
  -[UIView pkui_viewControllerFromResponderChain](self->_groupView, "pkui_viewControllerFromResponderChain", a3);
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "dismissViewControllerAnimated:completion:", v4, 0);

}

- (void)reloadPeerPaymentPendingRequestsWithCompletion:(id)a3
{
  id v4;
  uint64_t v5;
  uint64_t (**v6)(void);
  void *v7;
  unint64_t v8;
  id WeakRetained;
  void *v10;
  _QWORD v11[5];
  id v12;
  uint64_t (**v13)(void);
  id v14;
  _QWORD aBlock[4];
  id v16;
  id location;

  v4 = a3;
  objc_initWeak(&location, self);
  v5 = MEMORY[0x1E0C809B0];
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = __83__PKDashboardPaymentPassDataSource_reloadPeerPaymentPendingRequestsWithCompletion___block_invoke;
  aBlock[3] = &unk_1E3E63AE8;
  objc_copyWeak(&v16, &location);
  v6 = (uint64_t (**)(void))_Block_copy(aBlock);
  if ((v6[2]() & 1) != 0)
  {
    v7 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D673F8]), "initWithPeerPaymentWebService:", self->_peerPaymentWebService);
    v11[0] = v5;
    v11[1] = 3221225472;
    v11[2] = __83__PKDashboardPaymentPassDataSource_reloadPeerPaymentPendingRequestsWithCompletion___block_invoke_2;
    v11[3] = &unk_1E3E73998;
    objc_copyWeak(&v14, &location);
    v12 = v4;
    v13 = v6;
    v11[4] = self;
    objc_msgSend(v7, "pendingRequestsWithCompletion:", v11);

    objc_destroyWeak(&v14);
  }
  else
  {
    if (self->_isShowingPeerPaymentPendingRequests)
    {
      self->_isShowingPeerPaymentPendingRequests = 0;
      if (self->_allContentIsLoaded)
      {
        v8 = -[PKDashboardPaymentPassDataSource firstSectionIndexForSectionIdentifier:](self, "firstSectionIndexForSectionIdentifier:", 10);
        WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
        objc_msgSend(MEMORY[0x1E0CB36B8], "indexSetWithIndex:", v8);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(WeakRetained, "reloadSections:", v10);

      }
    }
    if (v4)
      (*((void (**)(id, _QWORD))v4 + 2))(v4, 0);
  }

  objc_destroyWeak(&v16);
  objc_destroyWeak(&location);

}

BOOL __83__PKDashboardPaymentPassDataSource_reloadPeerPaymentPendingRequestsWithCompletion___block_invoke(uint64_t a1)
{
  id *WeakRetained;
  _BOOL8 v2;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  v2 = (PKUseMockSURFServer() & 1) == 0
    && objc_msgSend(WeakRetained, "_isPeerPaymentPass")
    && WeakRetained[23]
    && !objc_msgSend(WeakRetained[109], "activationState")
    && objc_msgSend(WeakRetained[23], "state") == 1;

  return v2;
}

void __83__PKDashboardPaymentPassDataSource_reloadPeerPaymentPendingRequestsWithCompletion___block_invoke_2(uint64_t a1, char a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  _QWORD block[4];
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  char v20;

  v7 = a3;
  v8 = a4;
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __83__PKDashboardPaymentPassDataSource_reloadPeerPaymentPendingRequestsWithCompletion___block_invoke_3;
  block[3] = &unk_1E3E73970;
  objc_copyWeak(&v19, (id *)(a1 + 56));
  v20 = a2;
  v14 = v8;
  v17 = *(id *)(a1 + 40);
  v15 = v7;
  v9 = *(id *)(a1 + 48);
  v10 = *(_QWORD *)(a1 + 32);
  v18 = v9;
  v16 = v10;
  v11 = v7;
  v12 = v8;
  dispatch_async(MEMORY[0x1E0C80D38], block);

  objc_destroyWeak(&v19);
}

void __83__PKDashboardPaymentPassDataSource_reloadPeerPaymentPendingRequestsWithCompletion___block_invoke_3(uint64_t a1)
{
  id *WeakRetained;
  id *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  void *v13;
  void *v14;
  int v15;
  void *v16;
  char v17;
  void *v18;
  void *v19;
  int v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  id v26;
  void *v27;
  NSObject *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id *v33;
  id v34;
  id v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint8_t v40[128];
  uint8_t buf[4];
  void *v42;
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 72));
  v3 = WeakRetained;
  if (!WeakRetained)
    goto LABEL_27;
  v4 = *(void **)(a1 + 32);
  if (*(_BYTE *)(a1 + 80))
  {
    if (!v4)
    {
      v33 = WeakRetained;
      v35 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
      v34 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
      v36 = 0u;
      v37 = 0u;
      v38 = 0u;
      v39 = 0u;
      v32 = a1;
      v5 = *(id *)(a1 + 40);
      v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v36, v40, 16);
      if (v6)
      {
        v7 = v6;
        v8 = *(_QWORD *)v37;
        v9 = *MEMORY[0x1E0D6B218];
        v10 = *MEMORY[0x1E0D6B210];
        v11 = *MEMORY[0x1E0D6B208];
        do
        {
          for (i = 0; i != v7; ++i)
          {
            if (*(_QWORD *)v37 != v8)
              objc_enumerationMutation(v5);
            v13 = *(void **)(*((_QWORD *)&v36 + 1) + 8 * i);
            objc_msgSend(v13, "status", v32);
            v14 = (void *)objc_claimAutoreleasedReturnValue();
            v15 = objc_msgSend(v14, "isEqualToString:", v9);

            if (v15)
            {
              objc_msgSend(v13, "actions");
              v16 = (void *)objc_claimAutoreleasedReturnValue();
              v17 = objc_msgSend(v16, "containsObject:", v10);

              v18 = v35;
              if ((v17 & 1) != 0
                || (objc_msgSend(v13, "actions"),
                    v19 = (void *)objc_claimAutoreleasedReturnValue(),
                    v20 = objc_msgSend(v19, "containsObject:", v11),
                    v19,
                    v18 = v34,
                    v20))
              {
                objc_msgSend(v18, "addObject:", v13);
              }
            }
          }
          v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v36, v40, 16);
        }
        while (v7);
      }

      v21 = objc_msgSend(v35, "copy");
      v3 = v33;
      v22 = v33[86];
      v33[86] = (id)v21;

      v23 = objc_msgSend(v34, "copy");
      v24 = v33[87];
      v33[87] = (id)v23;

      *((_BYTE *)v33 + 680) = (*(uint64_t (**)(void))(*(_QWORD *)(v32 + 64) + 16))();
      if (*((_BYTE *)v33 + 739))
      {
        v25 = objc_msgSend(*(id *)(v32 + 48), "firstSectionIndexForSectionIdentifier:", 10);
        v26 = objc_loadWeakRetained(v33 + 5);
        objc_msgSend(MEMORY[0x1E0CB36B8], "indexSetWithIndex:", v25);
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v26, "reloadSections:", v27);

      }
      else
      {
        objc_msgSend(v33, "updateContentIsLoaded");
      }
      v31 = *(_QWORD *)(v32 + 56);
      if (v31)
        (*(void (**)(uint64_t, uint64_t))(v31 + 16))(v31, 1);

      goto LABEL_27;
    }
    goto LABEL_18;
  }
  if (v4)
  {
LABEL_18:
    PKLogFacilityTypeGetObject();
    v28 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v4, "localizedDescription");
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412290;
      v42 = v29;
      _os_log_impl(&dword_19D178000, v28, OS_LOG_TYPE_DEFAULT, "PKDashboardPaymentPassDataSource: Error retrieving pending requests: %@", buf, 0xCu);

    }
  }
  v30 = *(_QWORD *)(a1 + 56);
  if (v30)
    (*(void (**)(uint64_t, _QWORD))(v30 + 16))(v30, 0);
LABEL_27:

}

- (void)pendingRequestsChanged
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __58__PKDashboardPaymentPassDataSource_pendingRequestsChanged__block_invoke;
  block[3] = &unk_1E3E612E8;
  block[4] = self;
  dispatch_async(MEMORY[0x1E0C80D38], block);
}

uint64_t __58__PKDashboardPaymentPassDataSource_pendingRequestsChanged__block_invoke(uint64_t a1)
{
  uint64_t result;

  result = objc_msgSend(*(id *)(a1 + 32), "_isPeerPaymentPass");
  if ((_DWORD)result)
    return objc_msgSend(*(id *)(a1 + 32), "reloadMessages");
  return result;
}

- (void)recurringPaymentsChanged
{
  _QWORD block[5];

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __60__PKDashboardPaymentPassDataSource_recurringPaymentsChanged__block_invoke;
  block[3] = &unk_1E3E612E8;
  block[4] = self;
  dispatch_async(MEMORY[0x1E0C80D38], block);
}

void __60__PKDashboardPaymentPassDataSource_recurringPaymentsChanged__block_invoke(uint64_t a1)
{
  void *v2;
  _QWORD v3[4];
  id v4;
  id location;

  if (objc_msgSend(*(id *)(a1 + 32), "_isPeerPaymentPass"))
  {
    objc_initWeak(&location, *(id *)(a1 + 32));
    v2 = *(void **)(a1 + 32);
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __60__PKDashboardPaymentPassDataSource_recurringPaymentsChanged__block_invoke_2;
    v3[3] = &unk_1E3E61310;
    objc_copyWeak(&v4, &location);
    objc_msgSend(v2, "reloadRecurringPeerPaymentsWithCompletion:", v3);
    objc_destroyWeak(&v4);
    objc_destroyWeak(&location);
  }
}

void __60__PKDashboardPaymentPassDataSource_recurringPaymentsChanged__block_invoke_2(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "reloadMessages");

}

- (void)_verificationButtonTapped
{
  PKPaymentSetupDismissibleNavigationController *v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  PKPaymentPass *pass;
  PKPaymentVerificationController *paymentVerificationController;
  PKPaymentSetupDismissibleNavigationController *v10;
  _QWORD v11[4];
  PKPaymentSetupDismissibleNavigationController *v12;
  id v13;
  id location;

  v3 = -[PKPaymentSetupDismissibleNavigationController initWithContext:]([PKPaymentSetupDismissibleNavigationController alloc], "initWithContext:", 0);
  v4 = objc_alloc(MEMORY[0x1E0D67230]);
  objc_msgSend(MEMORY[0x1E0D673C8], "sharedService");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_msgSend(v4, "initWithWebService:", v5);

  v7 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D67540]), "initWithEnvironment:provisioningController:groupsController:", 0, v6, 0);
  objc_msgSend(v7, "setIsFollowupProvisioning:", 1);
  objc_initWeak(&location, self);
  pass = self->_pass;
  paymentVerificationController = self->_paymentVerificationController;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = __61__PKDashboardPaymentPassDataSource__verificationButtonTapped__block_invoke;
  v11[3] = &unk_1E3E61B68;
  objc_copyWeak(&v13, &location);
  v10 = v3;
  v12 = v10;
  +[PKProvisioningFlowBridge startVerificationFlowWithNavController:context:pass:verificationController:presentNavController:](PKProvisioningFlowBridge, "startVerificationFlowWithNavController:context:pass:verificationController:presentNavController:", v10, v7, pass, paymentVerificationController, v11);

  objc_destroyWeak(&v13);
  objc_destroyWeak(&location);

}

void __61__PKDashboardPaymentPassDataSource__verificationButtonTapped__block_invoke(uint64_t a1)
{
  id *WeakRetained;
  void *v3;
  id *v4;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v4 = WeakRetained;
    objc_msgSend(WeakRetained[1], "pkui_viewControllerFromResponderChain");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "presentViewController:animated:completion:", *(_QWORD *)(a1 + 32), 1, 0);

    WeakRetained = v4;
  }

}

- (void)presentVerificationViewController:(id)a3 animated:(BOOL)a4 completion:(id)a5
{
  _BOOL8 v6;
  id v8;
  id v9;
  void *v10;
  void *v11;
  _QWORD v12[4];
  id v13;
  id v14;
  id v15;
  BOOL v16;

  v6 = a4;
  v8 = a3;
  v9 = a5;
  -[UIView pkui_viewControllerFromResponderChain](self->_groupView, "pkui_viewControllerFromResponderChain");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "presentedViewController");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if (v11)
  {
    v12[0] = MEMORY[0x1E0C809B0];
    v12[1] = 3221225472;
    v12[2] = __90__PKDashboardPaymentPassDataSource_presentVerificationViewController_animated_completion___block_invoke;
    v12[3] = &unk_1E3E66EC8;
    v13 = v10;
    v14 = v8;
    v16 = v6;
    v15 = v9;
    objc_msgSend(v13, "dismissViewControllerAnimated:completion:", v6, v12);

  }
  else
  {
    objc_msgSend(v10, "presentViewController:animated:completion:", v8, v6, v9);
  }

}

uint64_t __90__PKDashboardPaymentPassDataSource_presentVerificationViewController_animated_completion___block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "presentViewController:animated:completion:", *(_QWORD *)(a1 + 40), *(unsigned __int8 *)(a1 + 56), *(_QWORD *)(a1 + 48));
}

- (void)dismissVerificationViewControllerAnimated:(BOOL)a3
{
  _BOOL8 v3;
  void *v4;
  id v5;

  v3 = a3;
  -[UIView pkui_viewControllerFromResponderChain](self->_groupView, "pkui_viewControllerFromResponderChain");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "presentedViewController");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "dismissViewControllerAnimated:completion:", v3, 0);

}

- (id)presentationContext
{
  void *v2;
  void *v3;
  void *v4;

  -[UIView pkui_viewControllerFromResponderChain](self->_groupView, "pkui_viewControllerFromResponderChain");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "view");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "window");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

- (void)invalidatedSpendingSummaryOfType:(unint64_t)a3 startingWithDate:(id)a4
{
  id v6;
  id v7;
  _QWORD v8[4];
  id v9;
  id v10[2];
  id location;

  v6 = a4;
  objc_initWeak(&location, self);
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = __86__PKDashboardPaymentPassDataSource_invalidatedSpendingSummaryOfType_startingWithDate___block_invoke;
  v8[3] = &unk_1E3E671C0;
  objc_copyWeak(v10, &location);
  v10[1] = (id)a3;
  v9 = v6;
  v7 = v6;
  dispatch_async(MEMORY[0x1E0C80D38], v8);

  objc_destroyWeak(v10);
  objc_destroyWeak(&location);
}

void __86__PKDashboardPaymentPassDataSource_invalidatedSpendingSummaryOfType_startingWithDate___block_invoke(uint64_t a1)
{
  id *WeakRetained;
  id *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  id *v7;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    v4 = *(_QWORD *)(a1 + 48);
    v7 = WeakRetained;
    v5 = objc_msgSend(WeakRetained[61], "summaryType");
    v3 = v7;
    if (v4 == v5)
    {
      v6 = PKEqualObjects();
      v3 = v7;
      if (v6)
      {
        objc_msgSend(v7, "loadSummariesWithForceReload:", 0);
        v3 = v7;
      }
    }
  }

}

- (void)invalidatedSpendingSummariesOfType:(unint64_t)a3
{
  _QWORD block[4];
  id v5[2];
  id location;

  objc_initWeak(&location, self);
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __71__PKDashboardPaymentPassDataSource_invalidatedSpendingSummariesOfType___block_invoke;
  block[3] = &unk_1E3E66D38;
  objc_copyWeak(v5, &location);
  v5[1] = (id)a3;
  dispatch_async(MEMORY[0x1E0C80D38], block);
  objc_destroyWeak(v5);
  objc_destroyWeak(&location);
}

void __71__PKDashboardPaymentPassDataSource_invalidatedSpendingSummariesOfType___block_invoke(uint64_t a1)
{
  id *WeakRetained;
  uint64_t v3;
  BOOL v4;
  id *v5;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v3 = *(_QWORD *)(a1 + 40);
    v5 = WeakRetained;
    v4 = v3 == objc_msgSend(WeakRetained[61], "summaryType");
    WeakRetained = v5;
    if (v4)
    {
      objc_msgSend(v5, "loadSummariesWithForceReload:", 0);
      WeakRetained = v5;
    }
  }

}

- (void)invalidatedSummariesAvailable
{
  _QWORD v2[4];
  id v3;
  id location;

  objc_initWeak(&location, self);
  v2[0] = MEMORY[0x1E0C809B0];
  v2[1] = 3221225472;
  v2[2] = __65__PKDashboardPaymentPassDataSource_invalidatedSummariesAvailable__block_invoke;
  v2[3] = &unk_1E3E61310;
  objc_copyWeak(&v3, &location);
  dispatch_async(MEMORY[0x1E0C80D38], v2);
  objc_destroyWeak(&v3);
  objc_destroyWeak(&location);
}

void __65__PKDashboardPaymentPassDataSource_invalidatedSummariesAvailable__block_invoke(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "loadSummariesWithForceReload:", 1);

}

- (void)accountServiceAccountResolutionController:(id)a3 requestsPresentViewController:(id)a4 animated:(BOOL)a5
{
  PKPassGroupView *groupView;
  id v6;
  id v7;

  groupView = self->_groupView;
  v6 = a4;
  -[UIView pkui_viewControllerFromResponderChain](groupView, "pkui_viewControllerFromResponderChain");
  v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "presentViewController:animated:completion:", v6, 1, 0);

}

- (void)discoveryService:(id)a3 dialogRequestsChangedForPlacement:(id)a4
{
  id v5;
  id v6;
  _QWORD block[4];
  id v8;
  id v9;
  id location;

  v5 = a4;
  objc_initWeak(&location, self);
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __87__PKDashboardPaymentPassDataSource_discoveryService_dialogRequestsChangedForPlacement___block_invoke;
  block[3] = &unk_1E3E61B68;
  objc_copyWeak(&v9, &location);
  v8 = v5;
  v6 = v5;
  dispatch_async(MEMORY[0x1E0C80D38], block);

  objc_destroyWeak(&v9);
  objc_destroyWeak(&location);
}

void __87__PKDashboardPaymentPassDataSource_discoveryService_dialogRequestsChangedForPlacement___block_invoke(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  int v8;
  id v9;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = *(void **)(a1 + 32);
    v9 = WeakRetained;
    objc_msgSend(WeakRetained, "AMPEnagementPlacementForCurrentlyDisplayedPass");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = v3;
    v6 = v4;
    if (v5 == v6)
    {

    }
    else
    {
      v7 = v6;
      if (!v5 || !v6)
      {

        goto LABEL_10;
      }
      v8 = objc_msgSend(v5, "isEqualToString:", v6);

      WeakRetained = v9;
      if (!v8)
        goto LABEL_11;
    }
    objc_msgSend(v9, "reloadDialogRequests");
LABEL_10:
    WeakRetained = v9;
  }
LABEL_11:

}

- (void)accountUsersChanged:(id)a3 forAccountIdentifier:(id)a4
{
  id v6;
  id v7;
  id v8;
  id v9;
  _QWORD v10[4];
  id v11;
  id v12;
  id v13;
  id location;

  v6 = a3;
  v7 = a4;
  objc_initWeak(&location, self);
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = __77__PKDashboardPaymentPassDataSource_accountUsersChanged_forAccountIdentifier___block_invoke;
  v10[3] = &unk_1E3E61EE8;
  objc_copyWeak(&v13, &location);
  v11 = v7;
  v12 = v6;
  v8 = v6;
  v9 = v7;
  dispatch_async(MEMORY[0x1E0C80D38], v10);

  objc_destroyWeak(&v13);
  objc_destroyWeak(&location);
}

void __77__PKDashboardPaymentPassDataSource_accountUsersChanged_forAccountIdentifier___block_invoke(uint64_t a1)
{
  id *WeakRetained;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  char v8;
  id *v9;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v3 = *(void **)(a1 + 32);
    v9 = WeakRetained;
    objc_msgSend(WeakRetained[109], "associatedAccountServiceAccountIdentifier");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = v3;
    v6 = v4;
    if (v5 == v6)
    {

    }
    else
    {
      v7 = v6;
      if (!v5 || !v6)
      {

        goto LABEL_10;
      }
      v8 = objc_msgSend(v5, "isEqualToString:", v6);

      WeakRetained = v9;
      if ((v8 & 1) == 0)
        goto LABEL_11;
    }
    v7 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D66940]), "initWithAccountUsers:", *(_QWORD *)(a1 + 40));
    objc_msgSend(v9, "reloadAccountUsersWithNewAccountUserCollection:", v7);
LABEL_10:

    WeakRetained = v9;
  }
LABEL_11:

}

- (void)physicalCardsChanged:(id)a3 forAccountIdentifier:(id)a4
{
  id v6;
  id v7;
  id v8;
  id v9;
  _QWORD v10[4];
  id v11;
  id v12;
  id v13;
  id location;

  v6 = a3;
  v7 = a4;
  objc_initWeak(&location, self);
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = __78__PKDashboardPaymentPassDataSource_physicalCardsChanged_forAccountIdentifier___block_invoke;
  v10[3] = &unk_1E3E61EE8;
  objc_copyWeak(&v13, &location);
  v11 = v7;
  v12 = v6;
  v8 = v6;
  v9 = v7;
  dispatch_async(MEMORY[0x1E0C80D38], v10);

  objc_destroyWeak(&v13);
  objc_destroyWeak(&location);
}

void __78__PKDashboardPaymentPassDataSource_physicalCardsChanged_forAccountIdentifier___block_invoke(uint64_t a1)
{
  id *WeakRetained;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  char v8;
  id *v9;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v3 = *(void **)(a1 + 32);
    v9 = WeakRetained;
    objc_msgSend(WeakRetained[109], "associatedAccountServiceAccountIdentifier");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = v3;
    v6 = v4;
    if (v5 == v6)
    {

    }
    else
    {
      v7 = v6;
      if (!v5 || !v6)
      {

        goto LABEL_10;
      }
      v8 = objc_msgSend(v5, "isEqualToString:", v6);

      WeakRetained = v9;
      if ((v8 & 1) == 0)
        goto LABEL_11;
    }
    objc_msgSend(v9, "reloadPhysicalCardsWithNewPhysicalCards:", *(_QWORD *)(a1 + 40));
LABEL_10:
    WeakRetained = v9;
  }
LABEL_11:

}

- (void)featureApplicationAdded:(id)a3
{
  id v4;
  id v5;
  _QWORD block[4];
  id v7;
  id v8;
  id location;

  v4 = a3;
  objc_initWeak(&location, self);
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __60__PKDashboardPaymentPassDataSource_featureApplicationAdded___block_invoke;
  block[3] = &unk_1E3E61B68;
  objc_copyWeak(&v8, &location);
  v7 = v4;
  v5 = v4;
  dispatch_async(MEMORY[0x1E0C80D38], block);

  objc_destroyWeak(&v8);
  objc_destroyWeak(&location);
}

void __60__PKDashboardPaymentPassDataSource_featureApplicationAdded___block_invoke(uint64_t a1)
{
  id *WeakRetained;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  char v8;
  id *v9;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v9 = WeakRetained;
    objc_msgSend(*(id *)(a1 + 32), "accountIdentifier");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    if (v3)
    {
      objc_msgSend(v9[109], "associatedAccountServiceAccountIdentifier");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      v5 = v3;
      v6 = v4;
      if (v5 == v6)
      {

      }
      else
      {
        v7 = v6;
        if (!v6)
        {

          goto LABEL_10;
        }
        v8 = objc_msgSend(v5, "isEqualToString:", v6);

        if ((v8 & 1) == 0)
          goto LABEL_10;
      }
      objc_msgSend(v9, "reloadAccountUserInvitationsWithNewAccountUserInvitations:", 0);
    }
LABEL_10:

    WeakRetained = v9;
  }

}

- (void)featureApplicationChanged:(id)a3
{
  id v4;
  id v5;
  _QWORD block[4];
  id v7;
  id v8;
  id location;

  v4 = a3;
  objc_initWeak(&location, self);
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __62__PKDashboardPaymentPassDataSource_featureApplicationChanged___block_invoke;
  block[3] = &unk_1E3E61B68;
  objc_copyWeak(&v8, &location);
  v7 = v4;
  v5 = v4;
  dispatch_async(MEMORY[0x1E0C80D38], block);

  objc_destroyWeak(&v8);
  objc_destroyWeak(&location);
}

void __62__PKDashboardPaymentPassDataSource_featureApplicationChanged___block_invoke(uint64_t a1)
{
  id *WeakRetained;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  char v8;
  id *v9;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v9 = WeakRetained;
    objc_msgSend(*(id *)(a1 + 32), "accountIdentifier");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    if (v3)
    {
      objc_msgSend(v9[109], "associatedAccountServiceAccountIdentifier");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      v5 = v3;
      v6 = v4;
      if (v5 == v6)
      {

      }
      else
      {
        v7 = v6;
        if (!v6)
        {

          goto LABEL_10;
        }
        v8 = objc_msgSend(v5, "isEqualToString:", v6);

        if ((v8 & 1) == 0)
          goto LABEL_10;
      }
      objc_msgSend(v9, "reloadAccountUserInvitationsWithNewAccountUserInvitations:", 0);
    }
LABEL_10:

    WeakRetained = v9;
  }

}

- (void)featureApplicationRemoved:(id)a3
{
  id v4;
  id v5;
  _QWORD block[4];
  id v7;
  id v8;
  id location;

  v4 = a3;
  objc_initWeak(&location, self);
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __62__PKDashboardPaymentPassDataSource_featureApplicationRemoved___block_invoke;
  block[3] = &unk_1E3E61B68;
  objc_copyWeak(&v8, &location);
  v7 = v4;
  v5 = v4;
  dispatch_async(MEMORY[0x1E0C80D38], block);

  objc_destroyWeak(&v8);
  objc_destroyWeak(&location);
}

void __62__PKDashboardPaymentPassDataSource_featureApplicationRemoved___block_invoke(uint64_t a1)
{
  id *WeakRetained;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  char v8;
  id *v9;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v9 = WeakRetained;
    objc_msgSend(*(id *)(a1 + 32), "accountIdentifier");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    if (v3)
    {
      objc_msgSend(v9[109], "associatedAccountServiceAccountIdentifier");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      v5 = v3;
      v6 = v4;
      if (v5 == v6)
      {

      }
      else
      {
        v7 = v6;
        if (!v6)
        {

          goto LABEL_10;
        }
        v8 = objc_msgSend(v5, "isEqualToString:", v6);

        if ((v8 & 1) == 0)
          goto LABEL_10;
      }
      objc_msgSend(v9, "reloadAccountUserInvitationsWithNewAccountUserInvitations:", 0);
    }
LABEL_10:

    WeakRetained = v9;
  }

}

- (void)accountFinancingPlanUpdated:(id)a3 oldFinancingPlan:(id)a4 accountIdentifier:(id)a5
{
  id v6;
  id v7;
  _QWORD block[4];
  id v9;
  id v10;
  id location;

  v6 = a5;
  objc_initWeak(&location, self);
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __99__PKDashboardPaymentPassDataSource_accountFinancingPlanUpdated_oldFinancingPlan_accountIdentifier___block_invoke;
  block[3] = &unk_1E3E61B68;
  objc_copyWeak(&v10, &location);
  v9 = v6;
  v7 = v6;
  dispatch_async(MEMORY[0x1E0C80D38], block);

  objc_destroyWeak(&v10);
  objc_destroyWeak(&location);
}

void __99__PKDashboardPaymentPassDataSource_accountFinancingPlanUpdated_oldFinancingPlan_accountIdentifier___block_invoke(uint64_t a1)
{
  id *WeakRetained;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  char v8;
  id *v9;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = *(void **)(a1 + 32);
    if (v3)
    {
      v9 = WeakRetained;
      objc_msgSend(WeakRetained[109], "associatedAccountServiceAccountIdentifier");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      v5 = v3;
      v6 = v4;
      if (v5 == v6)
      {

      }
      else
      {
        v7 = v6;
        if (!v6)
        {

          goto LABEL_10;
        }
        v8 = objc_msgSend(v5, "isEqualToString:", v6);

        WeakRetained = v9;
        if ((v8 & 1) == 0)
          goto LABEL_11;
      }
      objc_msgSend(v9, "reloadFinancingPlans");
LABEL_10:
      WeakRetained = v9;
    }
  }
LABEL_11:

}

- (void)accountFinancingPlanAdded:(id)a3 accountIdentifier:(id)a4
{
  id v5;
  id v6;
  _QWORD block[4];
  id v8;
  id v9;
  id location;

  v5 = a4;
  objc_initWeak(&location, self);
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __80__PKDashboardPaymentPassDataSource_accountFinancingPlanAdded_accountIdentifier___block_invoke;
  block[3] = &unk_1E3E61B68;
  objc_copyWeak(&v9, &location);
  v8 = v5;
  v6 = v5;
  dispatch_async(MEMORY[0x1E0C80D38], block);

  objc_destroyWeak(&v9);
  objc_destroyWeak(&location);
}

void __80__PKDashboardPaymentPassDataSource_accountFinancingPlanAdded_accountIdentifier___block_invoke(uint64_t a1)
{
  id *WeakRetained;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  char v8;
  id *v9;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = *(void **)(a1 + 32);
    if (v3)
    {
      v9 = WeakRetained;
      objc_msgSend(WeakRetained[109], "associatedAccountServiceAccountIdentifier");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      v5 = v3;
      v6 = v4;
      if (v5 == v6)
      {

      }
      else
      {
        v7 = v6;
        if (!v6)
        {

          goto LABEL_10;
        }
        v8 = objc_msgSend(v5, "isEqualToString:", v6);

        WeakRetained = v9;
        if ((v8 & 1) == 0)
          goto LABEL_11;
      }
      objc_msgSend(v9, "reloadFinancingPlans");
LABEL_10:
      WeakRetained = v9;
    }
  }
LABEL_11:

}

- (void)accountFinancingPlanRemoved:(id)a3 accountIdentifier:(id)a4
{
  id v5;
  id v6;
  _QWORD block[4];
  id v8;
  id v9;
  id location;

  v5 = a4;
  objc_initWeak(&location, self);
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __82__PKDashboardPaymentPassDataSource_accountFinancingPlanRemoved_accountIdentifier___block_invoke;
  block[3] = &unk_1E3E61B68;
  objc_copyWeak(&v9, &location);
  v8 = v5;
  v6 = v5;
  dispatch_async(MEMORY[0x1E0C80D38], block);

  objc_destroyWeak(&v9);
  objc_destroyWeak(&location);
}

void __82__PKDashboardPaymentPassDataSource_accountFinancingPlanRemoved_accountIdentifier___block_invoke(uint64_t a1)
{
  id *WeakRetained;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  char v8;
  id *v9;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = *(void **)(a1 + 32);
    if (v3)
    {
      v9 = WeakRetained;
      objc_msgSend(WeakRetained[109], "associatedAccountServiceAccountIdentifier");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      v5 = v3;
      v6 = v4;
      if (v5 == v6)
      {

      }
      else
      {
        v7 = v6;
        if (!v6)
        {

          goto LABEL_10;
        }
        v8 = objc_msgSend(v5, "isEqualToString:", v6);

        WeakRetained = v9;
        if ((v8 & 1) == 0)
          goto LABEL_11;
      }
      objc_msgSend(v9, "reloadFinancingPlans");
LABEL_10:
      WeakRetained = v9;
    }
  }
LABEL_11:

}

- (void)accountChanged:(id)a3
{
  id v4;
  id v5;
  _QWORD block[4];
  id v7;
  id v8;
  id location;

  v4 = a3;
  objc_initWeak(&location, self);
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __51__PKDashboardPaymentPassDataSource_accountChanged___block_invoke;
  block[3] = &unk_1E3E61B68;
  objc_copyWeak(&v8, &location);
  v7 = v4;
  v5 = v4;
  dispatch_async(MEMORY[0x1E0C80D38], block);

  objc_destroyWeak(&v8);
  objc_destroyWeak(&location);
}

void __51__PKDashboardPaymentPassDataSource_accountChanged___block_invoke(uint64_t a1)
{
  id *WeakRetained;
  void *v3;
  id v4;
  id v5;
  void *v6;
  int v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  id v13;
  id v14;
  void *v15;
  int v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    objc_msgSend(*(id *)(a1 + 32), "accountIdentifier");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    if (v3)
    {
      objc_msgSend(WeakRetained[48], "accountIdentifier");
      v4 = (id)objc_claimAutoreleasedReturnValue();
      v5 = v3;
      v6 = v5;
      if (v4 == v5)
      {

      }
      else
      {
        if (!v4)
        {

LABEL_10:
          v19 = 0u;
          v20 = 0u;
          v17 = 0u;
          v18 = 0u;
          objc_msgSend(WeakRetained, "accounts", 0);
          v8 = (void *)objc_claimAutoreleasedReturnValue();
          v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
          if (v9)
          {
            v10 = v9;
            v11 = *(_QWORD *)v18;
            while (2)
            {
              for (i = 0; i != v10; ++i)
              {
                if (*(_QWORD *)v18 != v11)
                  objc_enumerationMutation(v8);
                objc_msgSend(*(id *)(*((_QWORD *)&v17 + 1) + 8 * i), "accountIdentifier");
                v13 = (id)objc_claimAutoreleasedReturnValue();
                v14 = v6;
                v15 = v14;
                if (v13 == v14)
                {

LABEL_24:
                  objc_msgSend(WeakRetained, "reloadAccounts");
                  goto LABEL_25;
                }
                if (v13)
                {
                  v16 = objc_msgSend(v13, "isEqualToString:", v14);

                  if (v16)
                    goto LABEL_24;
                }
                else
                {

                }
              }
              v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
              if (v10)
                continue;
              break;
            }
          }
LABEL_25:

          goto LABEL_26;
        }
        v7 = objc_msgSend(v4, "isEqualToString:", v5);

        if (!v7)
          goto LABEL_10;
      }
      objc_msgSend(WeakRetained, "reloadAccount");
    }
LABEL_26:

  }
}

- (void)accountAdded:(id)a3
{
  _QWORD v3[4];
  id v4;
  id location;

  objc_initWeak(&location, self);
  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = __49__PKDashboardPaymentPassDataSource_accountAdded___block_invoke;
  v3[3] = &unk_1E3E61310;
  objc_copyWeak(&v4, &location);
  dispatch_async(MEMORY[0x1E0C80D38], v3);
  objc_destroyWeak(&v4);
  objc_destroyWeak(&location);
}

void __49__PKDashboardPaymentPassDataSource_accountAdded___block_invoke(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = WeakRetained;
    objc_msgSend(WeakRetained, "reloadAccounts");
    WeakRetained = v2;
  }

}

- (void)accountRemoved:(id)a3
{
  _QWORD v3[4];
  id v4;
  id location;

  objc_initWeak(&location, self);
  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = __51__PKDashboardPaymentPassDataSource_accountRemoved___block_invoke;
  v3[3] = &unk_1E3E61310;
  objc_copyWeak(&v4, &location);
  dispatch_async(MEMORY[0x1E0C80D38], v3);
  objc_destroyWeak(&v4);
  objc_destroyWeak(&location);
}

void __51__PKDashboardPaymentPassDataSource_accountRemoved___block_invoke(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = WeakRetained;
    objc_msgSend(WeakRetained, "reloadAccounts");
    WeakRetained = v2;
  }

}

- (void)didUpdateAppleBalancePromotion:(id)a3 forAccountIdentifier:(id)a4
{
  _QWORD v4[4];
  id v5;
  id location;

  objc_initWeak(&location, self);
  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __88__PKDashboardPaymentPassDataSource_didUpdateAppleBalancePromotion_forAccountIdentifier___block_invoke;
  v4[3] = &unk_1E3E61310;
  objc_copyWeak(&v5, &location);
  dispatch_async(MEMORY[0x1E0C80D38], v4);
  objc_destroyWeak(&v5);
  objc_destroyWeak(&location);
}

void __88__PKDashboardPaymentPassDataSource_didUpdateAppleBalancePromotion_forAccountIdentifier___block_invoke(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = WeakRetained;
    objc_msgSend(WeakRetained, "reloadMessages");
    WeakRetained = v2;
  }

}

- (void)didRemoveAppleBalancePromotionWithUniqueIdentifier:(id)a3 forAccountIdentifier:(id)a4
{
  _QWORD v4[4];
  id v5;
  id location;

  objc_initWeak(&location, self);
  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __108__PKDashboardPaymentPassDataSource_didRemoveAppleBalancePromotionWithUniqueIdentifier_forAccountIdentifier___block_invoke;
  v4[3] = &unk_1E3E61310;
  objc_copyWeak(&v5, &location);
  dispatch_async(MEMORY[0x1E0C80D38], v4);
  objc_destroyWeak(&v5);
  objc_destroyWeak(&location);
}

void __108__PKDashboardPaymentPassDataSource_didRemoveAppleBalancePromotionWithUniqueIdentifier_forAccountIdentifier___block_invoke(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = WeakRetained;
    objc_msgSend(WeakRetained, "reloadMessages");
    WeakRetained = v2;
  }

}

- (void)creditRecoveryPaymentPlansChangedForAccountIdentifier:(id)a3
{
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  char v9;
  _QWORD v10[4];
  id v11;
  id location;

  v4 = a3;
  if (v4)
  {
    -[PKPaymentPass associatedAccountServiceAccountIdentifier](self->_pass, "associatedAccountServiceAccountIdentifier");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = v4;
    v7 = v5;
    if (v7 == v6)
    {

    }
    else
    {
      v8 = v7;
      if (!v7)
      {

        goto LABEL_9;
      }
      v9 = objc_msgSend(v6, "isEqualToString:", v7);

      if ((v9 & 1) == 0)
        goto LABEL_9;
    }
    objc_initWeak(&location, self);
    v10[0] = MEMORY[0x1E0C809B0];
    v10[1] = 3221225472;
    v10[2] = __90__PKDashboardPaymentPassDataSource_creditRecoveryPaymentPlansChangedForAccountIdentifier___block_invoke;
    v10[3] = &unk_1E3E61310;
    objc_copyWeak(&v11, &location);
    dispatch_async(MEMORY[0x1E0C80D38], v10);
    objc_destroyWeak(&v11);
    objc_destroyWeak(&location);
  }
LABEL_9:

}

void __90__PKDashboardPaymentPassDataSource_creditRecoveryPaymentPlansChangedForAccountIdentifier___block_invoke(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = WeakRetained;
    objc_msgSend(WeakRetained, "reloadCreditRecoveryPaymentPlans");
    WeakRetained = v2;
  }

}

- (void)foregroundActiveArbiter:(id)a3 didUpdateForegroundActiveState:(id)a4
{
  BOOL foreground;

  foreground = self->_activeState.foreground;
  self->_activeState = ($77BFE790A1370D46B4241309C9753022)a4;
  if (a4.var0 && !foreground)
  {
    -[PKDashboardPaymentPassDataSource reloadAllContent](self, "reloadAllContent", a3);
    self->_forceTransactionsUpdate = 1;
    -[PKDashboardPaymentPassDataSource reloadTransactions](self, "reloadTransactions");
    -[PKDashboardPaymentPassDataSource reloadTransactionGroups](self, "reloadTransactionGroups");
  }
  -[PKDashboardPaymentPassDataSource _updateTransactionsTimer](self, "_updateTransactionsTimer", a3);
}

- (void)viewControllerDidTerminateSetupFlow:(id)a3
{
  id v3;

  objc_msgSend(a3, "presentingViewController");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "dismissViewControllerAnimated:completion:", 1, 0);

}

- (void)viewControllerDidCancelSetupFlow:(id)a3
{
  id v3;

  objc_msgSend(a3, "presentingViewController");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "dismissViewControllerAnimated:completion:", 1, 0);

}

- (void)contactIssuerHelper:(id)a3 didRequestPresentViewController:(id)a4 animated:(BOOL)a5 completion:(id)a6
{
  _BOOL8 v6;
  PKPassGroupView *groupView;
  id v9;
  id v10;
  id v11;

  v6 = a5;
  groupView = self->_groupView;
  v9 = a6;
  v10 = a4;
  -[UIView pkui_viewControllerFromResponderChain](groupView, "pkui_viewControllerFromResponderChain");
  v11 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "presentViewController:animated:completion:", v10, v6, v9);

}

- (void)contactIssuerHelper:(id)a3 didRequestDismissViewControllerAnimated:(BOOL)a4 completion:(id)a5
{
  _BOOL8 v5;
  PKPassGroupView *groupView;
  id v7;
  id v8;

  v5 = a4;
  groupView = self->_groupView;
  v7 = a5;
  -[UIView pkui_viewControllerFromResponderChain](groupView, "pkui_viewControllerFromResponderChain");
  v8 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "dismissViewControllerAnimated:completion:", v5, v7);

}

- (id)peerPaymentBalanceItem
{
  PKDashboardBalanceItem *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  __CFString *v12;
  void *v13;
  void *v14;
  _QWORD v16[5];
  id v17;
  id location;

  v3 = objc_alloc_init(PKDashboardBalanceItem);
  -[PKDashboardPaymentPassDataSource peerPaymentAccount](self, "peerPaymentAccount");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "currentBalance");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "formattedStringValue");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardBalanceItem setBalance:](v3, "setBalance:", v6);

  PKLocalizedPeerPaymentString(CFSTR("PEER_PAYMENT_BALANCE_MODULE_TITLE_BALANCE"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardBalanceItem setTitle:](v3, "setTitle:", v7);

  objc_msgSend(MEMORY[0x1E0DC3658], "labelColor");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardBalanceItem setTitleColor:](v3, "setTitleColor:", v8);

  PKLocalizedPeerPaymentString(CFSTR("PEER_PAYMENT_BALANCE_MODULE_ACTION"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardBalanceItem setTopUpTitle:](v3, "setTopUpTitle:", v9);

  -[PKDashboardPaymentPassDataSource peerPaymentThresholdTopUp](self, "peerPaymentThresholdTopUp");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = v10;
  if (v10)
  {
    if (objc_msgSend(v10, "status") == 4)
      v12 = CFSTR("DASHBOARD_BALANCE_THRESHOLD_PAUSED");
    else
      v12 = CFSTR("DASHBOARD_BALANCE_THRESHOLD_ON");
    PKLocalizedPeerPaymentRecurringString(&v12->isa);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardBalanceItem setAvailableCredit:](v3, "setAvailableCredit:", v13);

  }
  objc_initWeak(&location, self);
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 3221225472;
  v16[2] = __58__PKDashboardPaymentPassDataSource_peerPaymentBalanceItem__block_invoke;
  v16[3] = &unk_1E3E61B68;
  objc_copyWeak(&v17, &location);
  v16[4] = self;
  -[PKDashboardBalanceItem setTopUpAction:](v3, "setTopUpAction:", v16);
  -[PKDashboardPaymentPassDataSource peerPaymentAccount](self, "peerPaymentAccount");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardBalanceItem setTopUpEnabled:](v3, "setTopUpEnabled:", objc_msgSend(v14, "state") == 1);

  objc_destroyWeak(&v17);
  objc_destroyWeak(&location);

  return v3;
}

void __58__PKDashboardPaymentPassDataSource_peerPaymentBalanceItem__block_invoke(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _QWORD *WeakRetained;
  _QWORD *v13;
  void *v14;
  void *v15;
  void *v16;
  PKRecipientPickerViewController *v17;
  void *v18;
  PKRecipientPickerViewController *v19;
  void *v20;
  PKNavigationController *v21;
  _QWORD v22[5];
  _QWORD v23[6];

  v23[5] = *MEMORY[0x1E0C80C00];
  v2 = *MEMORY[0x1E0D698D0];
  objc_msgSend(MEMORY[0x1E0D66A58], "reporterForSubject:", *MEMORY[0x1E0D698D0]);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v3)
    objc_msgSend(MEMORY[0x1E0D66A58], "beginSubjectReporting:", v2);
  v4 = (void *)MEMORY[0x1E0D66A58];
  v5 = *MEMORY[0x1E0D69298];
  v6 = *MEMORY[0x1E0D68F50];
  v22[0] = *MEMORY[0x1E0D68C90];
  v22[1] = v6;
  v7 = *MEMORY[0x1E0D68FA8];
  v23[0] = v5;
  v23[1] = v7;
  v8 = *MEMORY[0x1E0D68B18];
  v9 = *MEMORY[0x1E0D68858];
  v22[2] = *MEMORY[0x1E0D68AA0];
  v22[3] = v9;
  v10 = *MEMORY[0x1E0D69300];
  v23[2] = v8;
  v23[3] = v10;
  v22[4] = *MEMORY[0x1E0D692A8];
  v23[4] = *MEMORY[0x1E0D692B0];
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v23, v22, 5);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "subject:sendEvent:", v2, v11);

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v13 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend(WeakRetained, "groupView");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "pkui_viewControllerFromResponderChain");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "navigationController");
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    v17 = [PKRecipientPickerViewController alloc];
    objc_msgSend(v13, "transactionSourceCollection");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = -[PKRecipientPickerViewController initWithTransactionSourceCollection:familyCollection:peerPaymentSendFlowType:](v17, "initWithTransactionSourceCollection:familyCollection:peerPaymentSendFlowType:", v18, v13[97], 1);

    -[PKRecipientPickerViewController setDelegate:](v19, "setDelegate:", *(_QWORD *)(a1 + 32));
    objc_msgSend(*(id *)(a1 + 32), "nearbyPeerPaymentViewProvider");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKRecipientPickerViewController setNearbyViewProvider:](v19, "setNearbyViewProvider:", v20);

    v21 = -[PKNavigationController initWithRootViewController:]([PKNavigationController alloc], "initWithRootViewController:", v19);
    -[PKNavigationController setModalPresentationStyle:](v21, "setModalPresentationStyle:", 1);
    objc_msgSend(v16, "presentViewController:animated:completion:", v21, 1, 0);

  }
}

- (BOOL)canDisplayPeerPaymentBalanceModule
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;

  v3 = -[PKPeerPaymentAccount state](self->_peerPaymentAccount, "state");
  -[PKDashboardPaymentPassDataSource pass](self, "pass");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "effectiveContactlessPaymentApplicationState");

  -[PKDashboardPaymentPassDataSource pass](self, "pass");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "secureElementPass");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "passActivationState");

  if (v5 != 1)
    return 0;
  return (unint64_t)(v3 - 1) < 2 && v8 != 4;
}

- (void)_recurringPeerPaymentSuggestionsWithCompletion:(id)a3
{
  id v4;
  PKPaymentPass *pass;
  FHSearchSuggestionController *searchSuggestionController;
  _QWORD v7[4];
  id v8;
  _QWORD *v9;
  id v10;
  _QWORD v11[5];
  id v12;
  id location;

  v4 = a3;
  dispatch_assert_queue_V2(MEMORY[0x1E0C80D38]);
  pass = self->_pass;
  if (pass
    && -[PKPaymentPass isValid](pass, "isValid")
    && -[PKPaymentPass isPeerPaymentPass](self->_pass, "isPeerPaymentPass"))
  {
    objc_initWeak(&location, self);
    v11[0] = 0;
    v11[1] = v11;
    v11[2] = 0x3032000000;
    v11[3] = __Block_byref_object_copy__41;
    v11[4] = __Block_byref_object_dispose__41;
    v12 = (id)objc_opt_new();
    searchSuggestionController = self->_searchSuggestionController;
    v7[0] = MEMORY[0x1E0C809B0];
    v7[1] = 3221225472;
    v7[2] = __83__PKDashboardPaymentPassDataSource__recurringPeerPaymentSuggestionsWithCompletion___block_invoke;
    v7[3] = &unk_1E3E739E8;
    objc_copyWeak(&v10, &location);
    v8 = v4;
    v9 = v11;
    -[FHSearchSuggestionController allPeerPaymentForecastingSignals:](searchSuggestionController, "allPeerPaymentForecastingSignals:", v7);

    objc_destroyWeak(&v10);
    _Block_object_dispose(v11, 8);

    objc_destroyWeak(&location);
  }
  else
  {
    (*((void (**)(id, _QWORD))v4 + 2))(v4, MEMORY[0x1E0C9AA60]);
  }

}

void __83__PKDashboardPaymentPassDataSource__recurringPeerPaymentSuggestionsWithCompletion___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  _QWORD v6[4];
  id v7;
  id v8;
  uint64_t v9;
  id v10;

  v3 = a2;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __83__PKDashboardPaymentPassDataSource__recurringPeerPaymentSuggestionsWithCompletion___block_invoke_2;
  v6[3] = &unk_1E3E739C0;
  objc_copyWeak(&v10, (id *)(a1 + 48));
  v4 = *(id *)(a1 + 32);
  v7 = v3;
  v8 = v4;
  v9 = *(_QWORD *)(a1 + 40);
  v5 = v3;
  dispatch_async(MEMORY[0x1E0C80D38], v6);

  objc_destroyWeak(&v10);
}

void __83__PKDashboardPaymentPassDataSource__recurringPeerPaymentSuggestionsWithCompletion___block_invoke_2(uint64_t a1)
{
  id *WeakRetained;
  id *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t i;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[128];
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 56));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend(WeakRetained[23], "currentBalance");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "currency");
    v18 = (void *)objc_claimAutoreleasedReturnValue();

    v21 = 0u;
    v22 = 0u;
    v19 = 0u;
    v20 = 0u;
    v5 = *(id *)(a1 + 32);
    v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
    if (v6)
    {
      v7 = v6;
      v8 = 0;
      v9 = *(_QWORD *)v20;
      do
      {
        for (i = 0; i != v7; ++i)
        {
          if (*(_QWORD *)v20 != v9)
            objc_enumerationMutation(v5);
          v11 = *(void **)(*((_QWORD *)&v19 + 1) + 8 * i);
          v12 = objc_msgSend(v11, "forecastingType");
          objc_msgSend(v11, "peerPaymentHeuristicIds");
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          if (v12 == 3)
          {
            v14 = v11;
            if ((objc_msgSend(v3, "_isExistingRecurringPeerPayment:", v14) & 1) == 0)
            {
              objc_msgSend(v3, "_messageForPersonWithAmount:withHeuristicIds:andCurrencyCode:", v14, v13, v18);
              v15 = objc_claimAutoreleasedReturnValue();

              v8 = (void *)v15;
            }

          }
          if (v8)
            objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "addObject:", v8);

        }
        v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
      }
      while (v7);
    }
    else
    {
      v8 = 0;
    }

    v16 = *(_QWORD *)(a1 + 40);
    v17 = (void *)objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40), "copy");
    (*(void (**)(uint64_t, void *))(v16 + 16))(v16, v17);

  }
  else
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  }

}

- (BOOL)_isExistingRecurringPeerPayment:(id)a3
{
  id v4;
  NSArray *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  char v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v5 = self->_recurringPeerPayments;
  v6 = -[NSArray countByEnumeratingWithState:objects:count:](v5, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
  if (v6)
  {
    v7 = *(_QWORD *)v17;
    do
    {
      for (i = 0; i != v6; ++i)
      {
        if (*(_QWORD *)v17 != v7)
          objc_enumerationMutation(v5);
        v9 = *(void **)(*((_QWORD *)&v16 + 1) + 8 * i);
        objc_msgSend(v4, "amount", (_QWORD)v16);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "amount");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        if ((objc_msgSend(v10, "isEqualToNumber:", v11) & 1) != 0)
        {
          objc_msgSend(v4, "personId");
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v9, "recipientAddress");
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          v14 = objc_msgSend(v12, "isEqualToString:", v13);

          if ((v14 & 1) != 0)
          {
            LOBYTE(v6) = 1;
            goto LABEL_12;
          }
        }
        else
        {

        }
      }
      v6 = -[NSArray countByEnumeratingWithState:objects:count:](v5, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
    }
    while (v6);
  }
LABEL_12:

  return v6;
}

- (void)_dismissRecurringPeerPaymentSuggestionsWithIdentifiers:(id)a3 dismissalType:(unint64_t)a4
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  FHSearchSuggestionController *searchSuggestionController;
  void *v19;
  id obj;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[128];
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  obj = a3;
  v5 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v23;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v23 != v7)
          objc_enumerationMutation(obj);
        v9 = *(_QWORD *)(*((_QWORD *)&v22 + 1) + 8 * v8);
        v10 = objc_alloc_init(MEMORY[0x1E0C99E08]);
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", 0);
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        off_1ED06C508();
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "setObject:forKey:", v11, v12);

        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", 1);
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        off_1ED06C510();
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "setObject:forKey:", v13, v14);

        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", a4);
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        off_1ED06C518();
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "setObject:forKey:", v15, v16);

        off_1ED06C520();
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "setObject:forKey:", v9, v17);

        searchSuggestionController = self->_searchSuggestionController;
        v19 = (void *)objc_msgSend(v10, "copy");
        -[FHSearchSuggestionController recordUserInteraction:](searchSuggestionController, "recordUserInteraction:", v19);

        ++v8;
      }
      while (v6 != v8);
      v6 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
    }
    while (v6);
  }

}

- (id)_messageForPersonWithAmount:(id)a3 withHeuristicIds:(id)a4 andCurrencyCode:(id)a5
{
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t i;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  char v21;
  void *v22;
  uint64_t v23;
  PKDashboardPassMessage *v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  __CFString *v29;
  void *v30;
  uint64_t v31;
  id v32;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  id v39;
  PKDashboardPassMessage *v40;
  id v41;
  void *v42;
  void *v43;
  id v44;
  void *v45;
  _QWORD v46[4];
  id v47;
  id v48;
  _QWORD v49[4];
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56[2];
  _OWORD v57[4];
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  id location;
  _BYTE v63[128];
  _BYTE v64[128];
  uint64_t v65;

  v65 = *MEMORY[0x1E0C80C00];
  v44 = a3;
  v39 = a4;
  v41 = a5;
  objc_initWeak(&location, self);
  objc_msgSend(v44, "personId");
  v45 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPaymentPassDataSource _contactResolver](self, "_contactResolver");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "contactForHandle:", v45);
  v43 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v43, "givenName");
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v44, "periodicCategory");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v34 = (void *)PKPeerPaymentRecurringPaymentFrequencyFromString();

  objc_msgSend(v44, "signalDate");
  v38 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v44, "dayOfWeek");
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v44, "amount");
  v10 = objc_claimAutoreleasedReturnValue();
  PKCurrencyAmountMake();
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  v37 = (void *)v10;
  if (!objc_msgSend(v42, "length"))
  {
    v24 = 0;
    goto LABEL_33;
  }
  v40 = objc_alloc_init(PKDashboardPassMessage);
  v60 = 0u;
  v61 = 0u;
  v58 = 0u;
  v59 = 0u;
  -[PKFamilyMemberCollection familyMembersByAltDSID](self->_familyCollection, "familyMembersByAltDSID");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "allValues");
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v58, v64, 16);
  if (v13)
  {
    v14 = 0;
    v15 = *(_QWORD *)v59;
    do
    {
      for (i = 0; i != v13; ++i)
      {
        if (*(_QWORD *)v59 != v15)
          objc_enumerationMutation(v12);
        v17 = *(void **)(*((_QWORD *)&v58 + 1) + 8 * i);
        if (objc_msgSend(v17, "memberType") == 1 || objc_msgSend(v17, "memberType") == 2)
        {
          objc_msgSend(v17, "contact");
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          v19 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D66C48]), "initWithCNContact:", v18);
          objc_msgSend(v19, "contactHandle");
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          v21 = objc_msgSend(v45, "isEqualToString:", v20);

          v14 |= v21;
        }
      }
      v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v58, v64, 16);
    }
    while (v13);

    if ((v14 & 1) != 0)
    {
      if (v34 == (void *)3)
      {
        objc_msgSend(v36, "minimalFormattedStringValue");
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        PKLocalizedPeerPaymentRecurringString(CFSTR("PEER_PAYMENT_SUGGESTION_MONTHLY_ALLOWANCE_MESSAGE_CONTENT"), CFSTR("%@%@"), v42, v22);
        v23 = objc_claimAutoreleasedReturnValue();
        goto LABEL_28;
      }
      if (v34 == (void *)2)
      {
        objc_msgSend(v36, "minimalFormattedStringValue");
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        PKLocalizedPeerPaymentRecurringString(CFSTR("PEER_PAYMENT_SUGGESTION_ALLOWANCE_BIWEEKLY_MESSAGE_CONTENT"), CFSTR("%@%@%@"), v42, v22, v35);
        v23 = objc_claimAutoreleasedReturnValue();
        goto LABEL_28;
      }
      if (v34 == (void *)1)
      {
        objc_msgSend(v36, "minimalFormattedStringValue");
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        PKLocalizedPeerPaymentRecurringString(CFSTR("PEER_PAYMENT_SUGGESTION_ALLOWANCE_WEEKLY_MESSAGE_CONTENT"), CFSTR("%@%@%@"), v42, v22, v35);
        v23 = objc_claimAutoreleasedReturnValue();
LABEL_28:
        v25 = (void *)v23;

        goto LABEL_29;
      }
      goto LABEL_23;
    }
  }
  else
  {

  }
  if (v34 == (void *)3)
  {
    objc_msgSend(v36, "minimalFormattedStringValue");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    PKLocalizedPeerPaymentRecurringString(CFSTR("PEER_PAYMENT_SUGGESTION_MONTHLY_MESSAGE_CONTENT"), CFSTR("%@%@"), v42, v22);
    v23 = objc_claimAutoreleasedReturnValue();
    goto LABEL_28;
  }
  if (v34 == (void *)2)
  {
    objc_msgSend(v36, "minimalFormattedStringValue");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    PKLocalizedPeerPaymentRecurringString(CFSTR("PEER_PAYMENT_SUGGESTION_BIWEEKLY_MESSAGE_CONTENT"), CFSTR("%@%@%@"), v42, v22, v35);
    v23 = objc_claimAutoreleasedReturnValue();
    goto LABEL_28;
  }
  if (v34 == (void *)1)
  {
    objc_msgSend(v36, "minimalFormattedStringValue");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    PKLocalizedPeerPaymentRecurringString(CFSTR("PEER_PAYMENT_SUGGESTION_WEEKLY_MESSAGE_CONTENT"), CFSTR("%@%@%@"), v42, v22, v35);
    v23 = objc_claimAutoreleasedReturnValue();
    goto LABEL_28;
  }
LABEL_23:
  v25 = 0;
LABEL_29:
  PKLocalizedPeerPaymentRecurringString(CFSTR("PEER_PAYMENT_SUGGESTION_MESSAGE_TITLE"), CFSTR("%@"), v42);
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPassMessage setTitle:](v40, "setTitle:", v26);
  -[PKDashboardPassMessage setMessage:](v40, "setMessage:", v25);
  -[PKDashboardPassMessage setAvatarContact:](v40, "setAvatarContact:", v43);
  PKLocalizedPeerPaymentRecurringString(CFSTR("PEER_PAYMENT_SUGGESTION_SETUP"));
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPassMessage setButtonTitle:](v40, "setButtonTitle:", v27);

  memset(v57, 0, sizeof(v57));
  v28 = v39;
  if (objc_msgSend(v28, "countByEnumeratingWithState:objects:count:", v57, v63, 16))
    v29 = (__CFString *)**((id **)&v57[0] + 1);
  else
    v29 = CFSTR("Unknown");

  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("recurringSuggestion-%@"), v29);
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPassMessage setIdentifier:](v40, "setIdentifier:", v30);

  v31 = MEMORY[0x1E0C809B0];
  v49[0] = MEMORY[0x1E0C809B0];
  v49[1] = 3221225472;
  v49[2] = __97__PKDashboardPaymentPassDataSource__messageForPersonWithAmount_withHeuristicIds_andCurrencyCode___block_invoke;
  v49[3] = &unk_1E3E688D0;
  objc_copyWeak(v56, &location);
  v50 = v43;
  v51 = v45;
  v52 = v41;
  v53 = v37;
  v56[1] = v34;
  v54 = v38;
  v32 = v28;
  v55 = v32;
  -[PKDashboardPassMessage setActionOnButtonPress:](v40, "setActionOnButtonPress:", v49);
  v46[0] = v31;
  v46[1] = 3221225472;
  v46[2] = __97__PKDashboardPaymentPassDataSource__messageForPersonWithAmount_withHeuristicIds_andCurrencyCode___block_invoke_2;
  v46[3] = &unk_1E3E61B68;
  objc_copyWeak(&v48, &location);
  v47 = v32;
  -[PKDashboardPassMessage setActionOnDismiss:](v40, "setActionOnDismiss:", v46);
  v24 = v40;

  objc_destroyWeak(&v48);
  objc_destroyWeak(v56);

LABEL_33:
  objc_destroyWeak(&location);

  return v24;
}

void __97__PKDashboardPaymentPassDataSource__messageForPersonWithAmount_withHeuristicIds_andCurrencyCode___block_invoke(uint64_t a1)
{
  void *v2;
  PKPeerPaymentRemoteMessagesComposer *v3;
  void *v4;
  PKPeerPaymentRemoteMessagesComposer *v5;
  void *v6;
  id v7;
  PKAmountKeypadViewController *v8;
  PKNavigationController *v9;
  void *v10;
  void *v11;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 80));
  if (WeakRetained)
  {
    v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D673F8]), "initWithPeerPaymentWebService:", *((_QWORD *)WeakRetained + 108));
    v3 = [PKPeerPaymentRemoteMessagesComposer alloc];
    objc_msgSend(*((id *)WeakRetained + 1), "pkui_viewControllerFromResponderChain");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = -[PKPeerPaymentRemoteMessagesComposer initWithPeerPaymentController:presentingViewController:actionType:sourceType:](v3, "initWithPeerPaymentController:presentingViewController:actionType:sourceType:", v2, v4, 2, 1);

    v6 = (void *)objc_msgSend(objc_alloc(getCNComposeRecipientClass()), "initWithContact:address:kind:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), 5);
    v7 = objc_alloc_init(MEMORY[0x1E0D67448]);
    objc_msgSend(v7, "setCurrency:", *(_QWORD *)(a1 + 48));
    objc_msgSend(v7, "setAmount:", *(_QWORD *)(a1 + 56));
    objc_msgSend(v7, "setFrequency:", *(_QWORD *)(a1 + 88));
    objc_msgSend(v7, "setStartDate:", *(_QWORD *)(a1 + 64));
    v8 = -[PKAmountKeypadViewController initWithRemoteMessagesComposer:recipient:sendFlowType:familyCollection:]([PKAmountKeypadViewController alloc], "initWithRemoteMessagesComposer:recipient:sendFlowType:familyCollection:", v5, v6, 2, *((_QWORD *)WeakRetained + 97));
    -[PKAmountKeypadViewController setRecurringPeerPayment:](v8, "setRecurringPeerPayment:", v7);
    -[PKAmountKeypadViewController setShowCancelButton:](v8, "setShowCancelButton:", 1);
    v9 = -[PKNavigationController initWithRootViewController:]([PKNavigationController alloc], "initWithRootViewController:", v8);
    objc_msgSend(*((id *)WeakRetained + 1), "pkui_viewControllerFromResponderChain");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "navigationController");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "presentViewController:animated:completion:", v9, 1, 0);

    objc_msgSend(WeakRetained, "_dismissRecurringPeerPaymentSuggestionsWithIdentifiers:dismissalType:", *(_QWORD *)(a1 + 72), 2);
    objc_msgSend(WeakRetained, "reloadMessages");

  }
}

void __97__PKDashboardPaymentPassDataSource__messageForPersonWithAmount_withHeuristicIds_andCurrencyCode___block_invoke_2(uint64_t a1)
{
  id WeakRetained;
  id v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained, "_dismissRecurringPeerPaymentSuggestionsWithIdentifiers:dismissalType:", *(_QWORD *)(a1 + 32), 1);
    objc_msgSend(v3, "reloadMessages");
    WeakRetained = v3;
  }

}

- (void)setTransactions:(id)a3
{
  NSArray *v4;
  NSArray *transactions;

  v4 = (NSArray *)objc_msgSend(a3, "copy");
  transactions = self->_transactions;
  self->_transactions = v4;

}

- (void)_calculateDiffAndUpdateWithTransactions:(id)a3
{
  id v4;
  NSDate *v5;
  NSDate *lastTransactionReload;
  id WeakRetained;
  NSArray *v8;
  NSArray *transactions;
  _QWORD v10[5];
  id v11;
  id v12;
  id location;

  v4 = a3;
  self->_forceTransactionsUpdate = 0;
  objc_msgSend(MEMORY[0x1E0C99D68], "date");
  v5 = (NSDate *)objc_claimAutoreleasedReturnValue();
  lastTransactionReload = self->_lastTransactionReload;
  self->_lastTransactionReload = v5;

  if (self->_allContentIsLoaded)
  {
    WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
    if (WeakRetained)
    {
      objc_initWeak(&location, self);
      v10[0] = MEMORY[0x1E0C809B0];
      v10[1] = 3221225472;
      v10[2] = __76__PKDashboardPaymentPassDataSource__calculateDiffAndUpdateWithTransactions___block_invoke;
      v10[3] = &unk_1E3E61EE8;
      objc_copyWeak(&v12, &location);
      v10[4] = self;
      v11 = v4;
      objc_msgSend(WeakRetained, "performBatchUpdates:completion:", v10, 0);

      objc_destroyWeak(&v12);
      objc_destroyWeak(&location);
    }

  }
  else
  {
    v8 = (NSArray *)objc_msgSend(v4, "copy");
    transactions = self->_transactions;
    self->_transactions = v8;

    -[PKDashboardPaymentPassDataSource updateContentIsLoaded](self, "updateContentIsLoaded");
  }

}

void __76__PKDashboardPaymentPassDataSource__calculateDiffAndUpdateWithTransactions___block_invoke(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  NSObject *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint8_t buf[4];
  uint64_t v13;
  __int16 v14;
  uint64_t v15;
  __int16 v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  +[PKCollectionViewItemsDiffCalculator calculateDiffBetweenOldItems:andNewItems:inSection:](PKCollectionViewItemsDiffCalculator, "calculateDiffBetweenOldItems:andNewItems:inSection:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 72), *(_QWORD *)(a1 + 40), objc_msgSend(*(id *)(a1 + 32), "firstSectionIndexForSectionIdentifier:", 12));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  PKLogFacilityTypeGetObject();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    objc_msgSend(v3, "deletedIndexPaths");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v11, "count");
    objc_msgSend(v3, "insertedIndexPaths");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v6, "count");
    objc_msgSend(v3, "movedFromIndexPaths");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "count");
    objc_msgSend(v3, "changedIndexPaths");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 134218752;
    v13 = v5;
    v14 = 2048;
    v15 = v7;
    v16 = 2048;
    v17 = v9;
    v18 = 2048;
    v19 = objc_msgSend(v10, "count");
    _os_log_impl(&dword_19D178000, v4, OS_LOG_TYPE_DEFAULT, "Bank Connect transactions batch updates: %ld deletions, %ld insertions, %ld moves, %ld updates", buf, 0x2Au);

  }
  objc_msgSend(WeakRetained, "setTransactions:", *(_QWORD *)(a1 + 40));
  objc_msgSend(WeakRetained, "_applyDiff:", v3);

}

- (void)_calculateDiffAndUpdateWithTransactionGroups:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _BOOL4 v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  id WeakRetained;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  _QWORD v32[4];
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39[3];
  _QWORD aBlock[4];
  id v41;
  id v42;
  id location[2];

  v4 = a3;
  v5 = (void *)-[NSArray mutableCopy](self->_transactionGroups, "mutableCopy");
  v6 = (void *)objc_msgSend(v4, "mutableCopy");
  v28 = (void *)objc_msgSend(v5, "count");
  v27 = (void *)objc_msgSend(v6, "count");
  if (objc_msgSend(v5, "count"))
  {
    objc_msgSend(v5, "firstObject");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "firstObject");
    v8 = objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v8 = 0;
  }
  if (objc_msgSend(v6, "count"))
  {
    objc_msgSend(v6, "firstObject");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "firstObject");
    v10 = objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v10 = 0;
  }
  v30 = (void *)v8;
  if (v8)
    LODWORD(v8) = -[PKDashboardPaymentPassDataSource isGroupInTheCurrentYear:](self, "isGroupInTheCurrentYear:", v8);
  v29 = (void *)v10;
  if (v10)
    v11 = -[PKDashboardPaymentPassDataSource isGroupInTheCurrentYear:](self, "isGroupInTheCurrentYear:", v10);
  else
    v11 = 0;
  v12 = (void *)MEMORY[0x1E0C9AA60];
  v13 = (void *)MEMORY[0x1E0C9AA60];
  if ((_DWORD)v8)
  {
    objc_msgSend(v5, "firstObject");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "removeObjectAtIndex:", 0);
  }
  objc_msgSend(v5, "firstObject");
  v14 = objc_claimAutoreleasedReturnValue();
  v15 = (void *)v14;
  if (v14)
    v16 = (void *)v14;
  else
    v16 = v12;
  v31 = v16;

  v17 = v12;
  if (v11)
  {
    objc_msgSend(v6, "firstObject");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "removeObjectAtIndex:", 0);
  }
  objc_msgSend(v6, "firstObject");
  v18 = objc_claimAutoreleasedReturnValue();
  v19 = (void *)v18;
  if (v18)
    v20 = (void *)v18;
  else
    v20 = v12;
  v21 = v20;

  WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
  if (WeakRetained)
  {
    objc_initWeak(location, self);
    v23 = MEMORY[0x1E0C809B0];
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 3221225472;
    aBlock[2] = __81__PKDashboardPaymentPassDataSource__calculateDiffAndUpdateWithTransactionGroups___block_invoke;
    aBlock[3] = &unk_1E3E61B68;
    objc_copyWeak(&v42, location);
    v26 = v4;
    v41 = v4;
    v24 = _Block_copy(aBlock);
    v32[0] = v23;
    v32[1] = 3221225472;
    v32[2] = __81__PKDashboardPaymentPassDataSource__calculateDiffAndUpdateWithTransactionGroups___block_invoke_2;
    v32[3] = &unk_1E3E73A10;
    objc_copyWeak(v39, location);
    v25 = v24;
    v38 = v25;
    v39[1] = v27;
    v39[2] = v28;
    v33 = WeakRetained;
    v34 = v13;
    v35 = v17;
    v36 = v31;
    v37 = v21;
    objc_msgSend(v33, "performBatchUpdates:completion:", v32, 0);

    objc_destroyWeak(v39);
    objc_destroyWeak(&v42);
    objc_destroyWeak(location);
    v4 = v26;
  }

}

void __81__PKDashboardPaymentPassDataSource__calculateDiffAndUpdateWithTransactionGroups___block_invoke(uint64_t a1)
{
  _BYTE *WeakRetained;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    WeakRetained[144] = 1;
    v6 = WeakRetained;
    v3 = objc_msgSend(*(id *)(a1 + 32), "copy");
    v4 = (void *)*((_QWORD *)v6 + 111);
    *((_QWORD *)v6 + 111) = v3;

    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(*(id *)(a1 + 32), "count"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*((id *)v6 + 8), "setObject:forKeyedSubscript:", v5, &unk_1E3FAD930);

    WeakRetained = v6;
  }

}

void __81__PKDashboardPaymentPassDataSource__calculateDiffAndUpdateWithTransactionGroups___block_invoke_2(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  uint64_t v4;
  _BOOL8 v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  NSObject *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  NSObject *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint8_t buf[4];
  uint64_t v37;
  __int16 v38;
  uint64_t v39;
  __int16 v40;
  uint64_t v41;
  __int16 v42;
  uint64_t v43;
  uint64_t v44;

  v44 = *MEMORY[0x1E0C80C00];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 80));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    v4 = objc_msgSend(WeakRetained, "firstSectionIndexForSectionIdentifier:", 16);
    v5 = v4 != 0;
    (*(void (**)(void))(*(_QWORD *)(a1 + 72) + 16))();
    v7 = *(_QWORD *)(a1 + 88);
    v6 = *(_QWORD *)(a1 + 96);
    if (v7 > v6)
    {
      v8 = *(void **)(a1 + 32);
      objc_msgSend(MEMORY[0x1E0CB36B8], "indexSetWithIndexesInRange:", v6 + v4, v7 - v6);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "insertSections:", v9);

      v10 = *(void **)(a1 + 32);
      v11 = (void *)MEMORY[0x1E0CB36B8];
      v12 = v4 - v5;
      v13 = *(_QWORD *)(a1 + 96);
LABEL_6:
      objc_msgSend(v11, "indexSetWithIndexesInRange:", v12, v13 + v5);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "reloadSections:", v16);
LABEL_7:

      goto LABEL_8;
    }
    if (v7 < v6)
    {
      v14 = *(void **)(a1 + 32);
      objc_msgSend(MEMORY[0x1E0CB36B8], "indexSetWithIndexesInRange:", v7 + v4, v6 - v7);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "deleteSections:", v15);

      v10 = *(void **)(a1 + 32);
      v11 = (void *)MEMORY[0x1E0CB36B8];
      v12 = v4 - v5;
      v13 = *(_QWORD *)(a1 + 88);
      goto LABEL_6;
    }
    if (objc_msgSend(*(id *)(a1 + 40), "count") && objc_msgSend(*(id *)(a1 + 48), "count"))
    {
      +[PKCollectionViewItemsDiffCalculator calculateDiffBetweenOldItems:andNewItems:inSection:](PKCollectionViewItemsDiffCalculator, "calculateDiffBetweenOldItems:andNewItems:inSection:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), v4);
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      PKLogFacilityTypeGetObject();
      v18 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend(v17, "deletedIndexPaths");
        v35 = (void *)objc_claimAutoreleasedReturnValue();
        v34 = objc_msgSend(v35, "count");
        objc_msgSend(v17, "insertedIndexPaths");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        v20 = objc_msgSend(v19, "count");
        objc_msgSend(v17, "movedFromIndexPaths");
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        v22 = objc_msgSend(v21, "count");
        objc_msgSend(v17, "changedIndexPaths");
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 134218752;
        v37 = v34;
        v38 = 2048;
        v39 = v20;
        v40 = 2048;
        v41 = v22;
        v42 = 2048;
        v43 = objc_msgSend(v23, "count");
        _os_log_impl(&dword_19D178000, v18, OS_LOG_TYPE_DEFAULT, "Bank Connect monthly transaction groups batch updates: %ld deletions, %ld insertions, %ld moves, %ld updates", buf, 0x2Au);

      }
      objc_msgSend(v3, "_applyDiff:", v17);

      v24 = 1;
    }
    else
    {
      v24 = 0;
    }
    if (objc_msgSend(*(id *)(a1 + 56), "count") && objc_msgSend(*(id *)(a1 + 64), "count"))
    {
      +[PKCollectionViewItemsDiffCalculator calculateDiffBetweenOldItems:andNewItems:inSection:](PKCollectionViewItemsDiffCalculator, "calculateDiffBetweenOldItems:andNewItems:inSection:", *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), v24 + v4);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      PKLogFacilityTypeGetObject();
      v25 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend(v16, "deletedIndexPaths");
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        v27 = objc_msgSend(v26, "count");
        objc_msgSend(v16, "insertedIndexPaths");
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        v29 = objc_msgSend(v28, "count");
        objc_msgSend(v16, "movedFromIndexPaths");
        v30 = (void *)objc_claimAutoreleasedReturnValue();
        v31 = objc_msgSend(v30, "count");
        objc_msgSend(v16, "changedIndexPaths");
        v32 = (void *)objc_claimAutoreleasedReturnValue();
        v33 = objc_msgSend(v32, "count");
        *(_DWORD *)buf = 134218752;
        v37 = v27;
        v38 = 2048;
        v39 = v29;
        v40 = 2048;
        v41 = v31;
        v42 = 2048;
        v43 = v33;
        _os_log_impl(&dword_19D178000, v25, OS_LOG_TYPE_DEFAULT, "Bank Connect yearly transaction groups batch updates: %ld deletions, %ld insertions, %ld moves, %ld updates", buf, 0x2Au);

      }
      objc_msgSend(v3, "_applyDiff:", v16);
      goto LABEL_7;
    }
  }
LABEL_8:

}

- (PKAccount)account
{
  return self->_account;
}

- (PKAccountUserCollection)accountUserCollection
{
  return self->_accountUserCollection;
}

- (NSArray)accountUserInvitations
{
  return self->_accountUserInvitations;
}

- (NSSet)physicalCards
{
  return self->_physicalCards;
}

- (PKFamilyMemberCollection)familyCollection
{
  return self->_familyCollection;
}

- (PKDashboardTransactionFetcher)transactionFetcher
{
  return self->_transactionFetcher;
}

- (PKContactAvatarManager)avatarManager
{
  return self->_avatarManager;
}

- (PKSpendingSummaryFetcher)summaryFetcher
{
  return self->_summaryFetcher;
}

- (PKTransactionSourceCollection)transactionSourceCollection
{
  return self->_transactionSourceCollection;
}

- (NSArray)weeks
{
  return self->_weeks;
}

- (void)setWeeks:(id)a3
{
  objc_storeStrong((id *)&self->_weeks, a3);
}

- (NSArray)months
{
  return self->_months;
}

- (void)setMonths:(id)a3
{
  objc_storeStrong((id *)&self->_months, a3);
}

- (NSArray)years
{
  return self->_years;
}

- (NSArray)recurringPayments
{
  return self->_recurringPayments;
}

- (NSOrderedSet)secondaryMessages
{
  return self->_secondaryMessages;
}

- (BOOL)homeKitHasHomeGuestAccessSchedule
{
  return self->_homeKitHasHomeGuestAccessSchedule;
}

- (NSUUID)homeKitHomeIdentifier
{
  return self->_homeKitHomeIdentifier;
}

- (PKDashboardPaymentPassDataSourceDelegate)customDelegate
{
  return (PKDashboardPaymentPassDataSourceDelegate *)objc_loadWeakRetained((id *)&self->_customDelegate);
}

- (void)setCustomDelegate:(id)a3
{
  objc_storeWeak((id *)&self->_customDelegate, a3);
}

- (NSArray)recurringPeerPayments
{
  return self->_recurringPeerPayments;
}

- (void)setRecurringPeerPayments:(id)a3
{
  objc_storeStrong((id *)&self->_recurringPeerPayments, a3);
}

- (NSArray)upcomingRecurringPeerPayments
{
  return self->_upcomingRecurringPeerPayments;
}

- (void)setUpcomingRecurringPeerPayments:(id)a3
{
  objc_storeStrong((id *)&self->_upcomingRecurringPeerPayments, a3);
}

- (PKPeerPaymentRecurringPayment)peerPaymentThresholdTopUp
{
  return self->_peerPaymentThresholdTopUp;
}

- (void)setPeerPaymentThresholdTopUp:(id)a3
{
  objc_storeStrong((id *)&self->_peerPaymentThresholdTopUp, a3);
}

- (BOOL)recurringPeerPaymentsLoaded
{
  return self->_recurringPeerPaymentsLoaded;
}

- (void)setRecurringPeerPaymentsLoaded:(BOOL)a3
{
  self->_recurringPeerPaymentsLoaded = a3;
}

- (BOOL)canShowPeerPaymentRecurringPayments
{
  return self->_canShowPeerPaymentRecurringPayments;
}

- (void)setCanShowPeerPaymentRecurringPayments:(BOOL)a3
{
  self->_canShowPeerPaymentRecurringPayments = a3;
}

- (NSArray)accounts
{
  return self->_accounts;
}

- (void)setAccounts:(id)a3
{
  objc_storeStrong((id *)&self->_accounts, a3);
}

- (BOOL)accountsLoaded
{
  return self->_accountsLoaded;
}

- (void)setAccountsLoaded:(BOOL)a3
{
  self->_accountsLoaded = a3;
}

- (BOOL)allContentIsLoaded
{
  return self->_allContentIsLoaded;
}

- (void)setAllContentIsLoaded:(BOOL)a3
{
  self->_allContentIsLoaded = a3;
}

- (PKDashboardDataSourceDelegate)delegate
{
  return (PKDashboardDataSourceDelegate *)objc_loadWeakRetained((id *)&self->_delegate);
}

- (void)setDelegate:(id)a3
{
  objc_storeWeak((id *)&self->_delegate, a3);
}

- (PKPeerPaymentAccount)peerPaymentAccount
{
  return self->_peerPaymentAccount;
}

- (void)setPeerPaymentAccount:(id)a3
{
  objc_storeStrong((id *)&self->_peerPaymentAccount, a3);
}

- (PKPeerPaymentWebService)peerPaymentWebService
{
  return self->_peerPaymentWebService;
}

- (void)setPeerPaymentWebService:(id)a3
{
  objc_storeStrong((id *)&self->_peerPaymentWebService, a3);
}

- (PKPaymentPass)pass
{
  return self->_pass;
}

- (void)setPass:(id)a3
{
  objc_storeStrong((id *)&self->_pass, a3);
}

- (BOOL)performingAccountUpdate
{
  return self->_performingAccountUpdate;
}

- (void)setPerformingAccountUpdate:(BOOL)a3
{
  self->_performingAccountUpdate = a3;
}

- (PKPassPresentationContext)context
{
  return self->_context;
}

- (void)setContext:(id)a3
{
  objc_storeStrong((id *)&self->_context, a3);
}

- (NSError)accountUpdateError
{
  return self->_accountUpdateError;
}

- (void)setAccountUpdateError:(id)a3
{
  objc_storeStrong((id *)&self->_accountUpdateError, a3);
}

- (NSArray)transactionGroups
{
  return self->_transactionGroups;
}

- (void)setTransactionGroups:(id)a3
{
  objc_storeStrong((id *)&self->_transactionGroups, a3);
}

- (PKPayLaterDashboardMessageComposer)payLaterDashboardMessageComposer
{
  return self->_payLaterDashboardMessageComposer;
}

- (void)setPayLaterDashboardMessageComposer:(id)a3
{
  objc_storeStrong((id *)&self->_payLaterDashboardMessageComposer, a3);
}

- (void)setTransactionsCount:(unint64_t)a3
{
  self->_transactionsCount = a3;
}

- (PKAccountService)accountService
{
  return self->_accountService;
}

- (void)setAccountService:(id)a3
{
  objc_storeStrong((id *)&self->_accountService, a3);
}

- (PKPaymentRewardsBalance)associatedPaymentRewardsBalance
{
  return self->_associatedPaymentRewardsBalance;
}

- (void)setAssociatedPaymentRewardsBalance:(id)a3
{
  objc_storeStrong((id *)&self->_associatedPaymentRewardsBalance, a3);
}

- (PKNearbyPeerPaymentViewProvider)nearbyPeerPaymentViewProvider
{
  return self->_nearbyPeerPaymentViewProvider;
}

- (void)setNearbyPeerPaymentViewProvider:(id)a3
{
  objc_storeStrong((id *)&self->_nearbyPeerPaymentViewProvider, a3);
}

- (PKPayLaterFinancingPlansFetcher)plansFetcher
{
  return self->_plansFetcher;
}

- (void)setPlansFetcher:(id)a3
{
  objc_storeStrong((id *)&self->_plansFetcher, a3);
}

- (PKPayLaterInstallmentPresenter)installmentPresenter
{
  return self->_installmentPresenter;
}

- (void)setInstallmentPresenter:(id)a3
{
  objc_storeStrong((id *)&self->_installmentPresenter, a3);
}

- (NSArray)financingPlans
{
  return self->_financingPlans;
}

- (void)setFinancingPlans:(id)a3
{
  objc_storeStrong((id *)&self->_financingPlans, a3);
}

- (int64_t)completedFinancingPlansCount
{
  return self->_completedFinancingPlansCount;
}

- (void)setCompletedFinancingPlansCount:(int64_t)a3
{
  self->_completedFinancingPlansCount = a3;
}

- (NSArray)payLaterUpcomingInstallments
{
  return self->_payLaterUpcomingInstallments;
}

- (void)setPayLaterUpcomingInstallments:(id)a3
{
  objc_storeStrong((id *)&self->_payLaterUpcomingInstallments, a3);
}

- (NSDictionary)installmentIdentifierToFinancingPlan
{
  return self->_installmentIdentifierToFinancingPlan;
}

- (void)setInstallmentIdentifierToFinancingPlan:(id)a3
{
  objc_storeStrong((id *)&self->_installmentIdentifierToFinancingPlan, a3);
}

- (PKCurrencyAmount)payLaterDueNext30Days
{
  return self->_payLaterDueNext30Days;
}

- (void)setPayLaterDueNext30Days:(id)a3
{
  objc_storeStrong((id *)&self->_payLaterDueNext30Days, a3);
}

- (PKCurrencyAmount)payLaterTotalPending
{
  return self->_payLaterTotalPending;
}

- (void)setPayLaterTotalPending:(id)a3
{
  objc_storeStrong((id *)&self->_payLaterTotalPending, a3);
}

- (PKPayLaterCalendarViewController)payLaterCalendarViewController
{
  return self->_payLaterCalendarViewController;
}

- (void)setPayLaterCalendarViewController:(id)a3
{
  objc_storeStrong((id *)&self->_payLaterCalendarViewController, a3);
}

- (PKPayLaterPaymentIntentController)paymentIntentController
{
  return self->_paymentIntentController;
}

- (void)setPaymentIntentController:(id)a3
{
  objc_storeStrong((id *)&self->_paymentIntentController, a3);
}

- (BOOL)financingPlansLoaded
{
  return self->_financingPlansLoaded;
}

- (void)setFinancingPlansLoaded:(BOOL)a3
{
  self->_financingPlansLoaded = a3;
}

- (BOOL)loadingFinancingPlans
{
  return self->_loadingFinancingPlans;
}

- (void)setLoadingFinancingPlans:(BOOL)a3
{
  self->_loadingFinancingPlans = a3;
}

- (BOOL)hasMoreFinancingPlansToLoad
{
  return self->_hasMoreFinancingPlansToLoad;
}

- (void)setHasMoreFinancingPlansToLoad:(BOOL)a3
{
  self->_hasMoreFinancingPlansToLoad = a3;
}

- (BOOL)shouldDisplayPayLaterItems
{
  return self->_shouldDisplayPayLaterItems;
}

- (void)setShouldDisplayPayLaterItems:(BOOL)a3
{
  self->_shouldDisplayPayLaterItems = a3;
}

- (BOOL)hasPayLaterEligibleSpend
{
  return self->_hasPayLaterEligibleSpend;
}

- (void)setHasPayLaterEligibleSpend:(BOOL)a3
{
  self->_hasPayLaterEligibleSpend = a3;
}

- (BOOL)bankConnectDataLoaded
{
  return self->_bankConnectDataLoaded;
}

- (void)setBankConnectDataLoaded:(BOOL)a3
{
  self->_bankConnectDataLoaded = a3;
}

- (FKBankConnectAccountsProvider)bankConnectAccountsProvider
{
  return self->_bankConnectAccountsProvider;
}

- (void)setBankConnectAccountsProvider:(id)a3
{
  objc_storeStrong((id *)&self->_bankConnectAccountsProvider, a3);
}

- (FKBankConnectImageProvider)bankConnectImageProvider
{
  return self->_bankConnectImageProvider;
}

- (void)setBankConnectImageProvider:(id)a3
{
  objc_storeStrong((id *)&self->_bankConnectImageProvider, a3);
}

- (FKBankConnectInstitutionMatcher)bankConnectInstitutionMatcher
{
  return self->_bankConnectInstitutionMatcher;
}

- (void)setBankConnectInstitutionMatcher:(id)a3
{
  objc_storeStrong((id *)&self->_bankConnectInstitutionMatcher, a3);
}

- (FKBankConnectTransactionsAndGroupsProvider)bankConnectTransactionsProvider
{
  return self->_bankConnectTransactionsProvider;
}

- (void)setBankConnectTransactionsProvider:(id)a3
{
  objc_storeStrong((id *)&self->_bankConnectTransactionsProvider, a3);
}

- (FKBankConnectMessagesManager)bankConnectMessagesManager
{
  return self->_bankConnectMessagesManager;
}

- (void)setBankConnectMessagesManager:(id)a3
{
  objc_storeStrong((id *)&self->_bankConnectMessagesManager, a3);
}

- (PKDashboardBankConnectLinkedAccountData)bankConnectLinkedAccountData
{
  return self->_bankConnectLinkedAccountData;
}

- (void)setBankConnectLinkedAccountData:(id)a3
{
  objc_storeStrong((id *)&self->_bankConnectLinkedAccountData, a3);
}

- (NSArray)bankConnectMonthlyTransactionGroups
{
  return self->_bankConnectMonthlyTransactionGroups;
}

- (void)setBankConnectMonthlyTransactionGroups:(id)a3
{
  objc_storeStrong((id *)&self->_bankConnectMonthlyTransactionGroups, a3);
}

- (NSArray)bankConnectYearlyTransactionGroups
{
  return self->_bankConnectYearlyTransactionGroups;
}

- (void)setBankConnectYearlyTransactionGroups:(id)a3
{
  objc_storeStrong((id *)&self->_bankConnectYearlyTransactionGroups, a3);
}

- (PKDashboardPassMessage)bankConnectMessage
{
  return self->_bankConnectMessage;
}

- (void)setBankConnectMessage:(id)a3
{
  objc_storeStrong((id *)&self->_bankConnectMessage, a3);
}

- (PKCurrencyAmount)lastUpdatedBalance
{
  return self->_lastUpdatedBalance;
}

- (void)setLastUpdatedBalance:(id)a3
{
  objc_storeStrong((id *)&self->_lastUpdatedBalance, a3);
}

- (PKAppleBalanceAddMoneyUIManager)appleBalanceAddMoneyUIManager
{
  return self->_appleBalanceAddMoneyUIManager;
}

- (void)setAppleBalanceAddMoneyUIManager:(id)a3
{
  objc_storeStrong((id *)&self->_appleBalanceAddMoneyUIManager, a3);
}

- (void).cxx_destruct
{
  objc_storeStrong((id *)&self->_appleBalanceAddMoneyUIManager, 0);
  objc_storeStrong((id *)&self->_lastUpdatedBalance, 0);
  objc_storeStrong((id *)&self->_bankConnectMessage, 0);
  objc_storeStrong((id *)&self->_bankConnectYearlyTransactionGroups, 0);
  objc_storeStrong((id *)&self->_bankConnectMonthlyTransactionGroups, 0);
  objc_storeStrong((id *)&self->_bankConnectLinkedAccountData, 0);
  objc_storeStrong((id *)&self->_bankConnectMessagesManager, 0);
  objc_storeStrong((id *)&self->_bankConnectTransactionsProvider, 0);
  objc_storeStrong((id *)&self->_bankConnectInstitutionMatcher, 0);
  objc_storeStrong((id *)&self->_bankConnectImageProvider, 0);
  objc_storeStrong((id *)&self->_bankConnectAccountsProvider, 0);
  objc_storeStrong((id *)&self->_paymentIntentController, 0);
  objc_storeStrong((id *)&self->_payLaterCalendarViewController, 0);
  objc_storeStrong((id *)&self->_payLaterTotalPending, 0);
  objc_storeStrong((id *)&self->_payLaterDueNext30Days, 0);
  objc_storeStrong((id *)&self->_installmentIdentifierToFinancingPlan, 0);
  objc_storeStrong((id *)&self->_payLaterUpcomingInstallments, 0);
  objc_storeStrong((id *)&self->_financingPlans, 0);
  objc_storeStrong((id *)&self->_installmentPresenter, 0);
  objc_storeStrong((id *)&self->_plansFetcher, 0);
  objc_storeStrong((id *)&self->_nearbyPeerPaymentViewProvider, 0);
  objc_storeStrong((id *)&self->_associatedPaymentRewardsBalance, 0);
  objc_storeStrong((id *)&self->_accountService, 0);
  objc_storeStrong((id *)&self->_payLaterDashboardMessageComposer, 0);
  objc_storeStrong((id *)&self->_transactionGroups, 0);
  objc_storeStrong((id *)&self->_accountUpdateError, 0);
  objc_storeStrong((id *)&self->_pass, 0);
  objc_storeStrong((id *)&self->_peerPaymentWebService, 0);
  objc_storeStrong((id *)&self->_accounts, 0);
  objc_storeStrong((id *)&self->_peerPaymentThresholdTopUp, 0);
  objc_storeStrong((id *)&self->_upcomingRecurringPeerPayments, 0);
  objc_storeStrong((id *)&self->_recurringPeerPayments, 0);
  objc_storeStrong((id *)&self->_secondaryMessages, 0);
  objc_storeStrong((id *)&self->_recurringPayments, 0);
  objc_storeStrong((id *)&self->_years, 0);
  objc_storeStrong((id *)&self->_months, 0);
  objc_storeStrong((id *)&self->_weeks, 0);
  objc_storeStrong((id *)&self->_avatarManager, 0);
  objc_storeStrong((id *)&self->_familyCollection, 0);
  objc_storeStrong((id *)&self->_physicalCards, 0);
  objc_storeStrong((id *)&self->_accountUserInvitations, 0);
  objc_storeStrong((id *)&self->_accountUserCollection, 0);
  objc_storeStrong((id *)&self->_expirationTimer, 0);
  objc_storeStrong((id *)&self->_searchSuggestionController, 0);
  objc_storeStrong((id *)&self->_incomingRequestActionInProgressRequestToken, 0);
  objc_storeStrong((id *)&self->_outgoingRequests, 0);
  objc_storeStrong((id *)&self->_incomingRequests, 0);
  objc_storeStrong((id *)&self->_contactIssuerHelper, 0);
  objc_storeStrong((id *)&self->_lastReportedDiscoveryIdentifier, 0);
  objc_storeStrong((id *)&self->_linkedApplication, 0);
  objc_storeStrong((id *)&self->_sourcesPerFundingSourceIdentifier, 0);
  objc_storeStrong((id *)&self->_messageImagesCache, 0);
  objc_storeStrong((id *)&self->_engagementMessages, 0);
  objc_storeStrong((id *)&self->_AMPEnrollmentManager, 0);
  objc_storeStrong((id *)&self->_AMPEnrollmentIcon, 0);
  objc_storeStrong((id *)&self->_scaleKey, 0);
  objc_storeStrong((id *)&self->_icons, 0);
  objc_storeStrong((id *)&self->_iconFailedDownloads, 0);
  objc_storeStrong((id *)&self->_iconDownloads, 0);
  objc_storeStrong((id *)&self->_accountResolutionController, 0);
  objc_storeStrong((id *)&self->_homeKitHomeIdentifier, 0);
  objc_storeStrong((id *)&self->_currentSummary, 0);
  objc_storeStrong((id *)&self->_startCurrentPeriod, 0);
  objc_storeStrong((id *)&self->_summaryFetcher, 0);
  objc_storeStrong((id *)&self->_inboxDataSource, 0);
  objc_storeStrong((id *)&self->_accountPendingFamilyMembers, 0);
  objc_storeStrong((id *)&self->_currentMonthTransactions, 0);
  objc_storeStrong((id *)&self->_pendingPayments, 0);
  objc_storeStrong((id *)&self->_upcomingScheduledPayments, 0);
  objc_storeStrong((id *)&self->_currentStatement, 0);
  objc_storeStrong((id *)&self->_physicalCardController, 0);
  objc_storeStrong((id *)&self->_account, 0);
  objc_storeStrong((id *)&self->_context, 0);
  objc_storeStrong((id *)&self->_executionBlocksContentIsLoaded, 0);
  objc_storeStrong((id *)&self->_formatterPercentage, 0);
  objc_storeStrong((id *)&self->_formatterMonthDay, 0);
  objc_storeStrong((id *)&self->_formatterMonth, 0);
  objc_storeStrong((id *)&self->_formatterYear, 0);
  objc_storeStrong((id *)&self->_messages, 0);
  objc_storeStrong((id *)&self->_tileGroups, 0);
  objc_storeStrong((id *)&self->_secureElement, 0);
  objc_storeStrong((id *)&self->_paymentVerificationController, 0);
  objc_storeStrong((id *)&self->_paymentDataProvider, 0);
  objc_storeStrong((id *)&self->_transitItems, 0);
  objc_storeStrong((id *)&self->_transitBalanceModel, 0);
  objc_storeStrong((id *)&self->_peerPaymentAccountResolutionController, 0);
  objc_storeStrong((id *)&self->_contactResolver, 0);
  objc_storeStrong((id *)&self->_peerPaymentAccount, 0);
  objc_storeStrong((id *)&self->_precursorUpgradeController, 0);
  objc_storeStrong((id *)&self->_lastTransactionReload, 0);
  objc_storeStrong((id *)&self->_timerTransactions, 0);
  objc_storeStrong((id *)&self->_previousTransactions, 0);
  objc_storeStrong((id *)&self->_currentMonthFetcher, 0);
  objc_storeStrong((id *)&self->_transactionFetcher, 0);
  objc_storeStrong((id *)&self->_autoReloadSetupController, 0);
  objc_storeStrong((id *)&self->_associatedAccountsController, 0);
  objc_storeStrong((id *)&self->_auxiliarySectionInfo, 0);
  objc_storeStrong((id *)&self->_transactions, 0);
  objc_storeStrong((id *)&self->_dynamicSections, 0);
  objc_storeStrong((id *)&self->_transactionSourceCollection, 0);
  objc_destroyWeak((id *)&self->_delegate);
  objc_destroyWeak((id *)&self->_customDelegate);
  objc_storeStrong((id *)&self->_group, 0);
  objc_storeStrong((id *)&self->_passView, 0);
  objc_storeStrong((id *)&self->_groupView, 0);
}

- (void)_fetchBankConnectTransactions
{
  NSObject *v3;
  void *v4;
  uint8_t v5[16];

  if (-[PKDashboardPaymentPassDataSource isBankConnectLinked](self, "isBankConnectLinked"))
  {
    PKLogFacilityTypeGetObject();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_19D178000, v3, OS_LOG_TYPE_DEFAULT, "Starting fetching Bank Connect transactions and groups", v5, 2u);
    }

    -[PKDashboardPaymentPassDataSource bankConnectTransactionsProvider](self, "bankConnectTransactionsProvider");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "performFetchAndStartObservingNotifications");

  }
}

- (void)clearBankConnectData
{
  void *v3;
  _QWORD v4[4];
  id v5;
  id location;

  objc_initWeak(&location, self);
  -[PKDashboardPaymentPassDataSource delegate](self, "delegate");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __69__PKDashboardPaymentPassDataSource_BankConnect__clearBankConnectData__block_invoke;
  v4[3] = &unk_1E3E61310;
  objc_copyWeak(&v5, &location);
  objc_msgSend(v3, "performBatchUpdates:completion:", v4, 0);

  objc_destroyWeak(&v5);
  objc_destroyWeak(&location);
}

void __69__PKDashboardPaymentPassDataSource_BankConnect__clearBankConnectData__block_invoke(uint64_t a1)
{
  id WeakRetained;
  id v2;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v2 = WeakRetained;
    objc_msgSend(WeakRetained, "setBankConnectLinkedAccountData:", 0);
    objc_msgSend(v2, "_hideLatestTransactions");
    objc_msgSend(v2, "_hideTransactionGroups");
    objc_msgSend(v2, "_reloadBalance");
    objc_msgSend(v2, "_hideBankConnectMessageAndReloadIfNeeded");
    WeakRetained = v2;
  }

}

- (void)reloadBankConnectData
{
  NSObject *v3;
  void *v4;
  _QWORD v5[4];
  id v6;
  id buf[2];

  if (-[PKDashboardPaymentPassDataSource isBankConnectSupported](self, "isBankConnectSupported")
    && -[PKDashboardPaymentPassDataSource _isBankConnectPassReady](self, "_isBankConnectPassReady"))
  {
    PKLogFacilityTypeGetObject();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(buf[0]) = 0;
      _os_log_impl(&dword_19D178000, v3, OS_LOG_TYPE_DEFAULT, "Starting to reload Bank Connect account", (uint8_t *)buf, 2u);
    }

    objc_initWeak(buf, self);
    -[PKDashboardPaymentPassDataSource bankConnectAccountsProvider](self, "bankConnectAccountsProvider");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5[0] = MEMORY[0x1E0C809B0];
    v5[1] = 3221225472;
    v5[2] = __70__PKDashboardPaymentPassDataSource_BankConnect__reloadBankConnectData__block_invoke;
    v5[3] = &unk_1E3E77728;
    objc_copyWeak(&v6, buf);
    objc_msgSend(v4, "accountAndReconsentStatusWithCompletion:", v5);

    -[PKDashboardPaymentPassDataSource _refetchBalanceAndTransactions](self, "_refetchBalanceAndTransactions");
    objc_destroyWeak(&v6);
    objc_destroyWeak(buf);
  }
  else
  {
    -[PKDashboardPaymentPassDataSource setBankConnectDataLoaded:](self, "setBankConnectDataLoaded:", 1);
    if (-[PKDashboardPaymentPassDataSource isBankConnectLinked](self, "isBankConnectLinked"))
      -[PKDashboardPaymentPassDataSource clearBankConnectData](self, "clearBankConnectData");
    -[PKDashboardPaymentPassDataSource _hideBankConnectMessageAndReloadIfNeeded](self, "_hideBankConnectMessageAndReloadIfNeeded");
  }
}

void __70__PKDashboardPaymentPassDataSource_BankConnect__reloadBankConnectData__block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  _QWORD block[4];
  id v10;
  id v11;
  id v12;

  v5 = a2;
  v6 = a3;
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __70__PKDashboardPaymentPassDataSource_BankConnect__reloadBankConnectData__block_invoke_2;
  block[3] = &unk_1E3E62F50;
  v10 = v5;
  v11 = v6;
  v7 = v6;
  v8 = v5;
  objc_copyWeak(&v12, (id *)(a1 + 32));
  dispatch_async(MEMORY[0x1E0C80D38], block);
  objc_destroyWeak(&v12);

}

void __70__PKDashboardPaymentPassDataSource_BankConnect__reloadBankConnectData__block_invoke_2(uint64_t a1)
{
  void *v2;
  NSObject *v3;
  const char *v4;
  NSObject *v5;
  uint32_t v6;
  uint64_t v7;
  id WeakRetained;
  void *v9;
  uint64_t v10;
  void *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*(id *)(a1 + 32), "account");
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v2)
  {
    PKLogFacilityTypeGetObject();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      v7 = *(_QWORD *)(a1 + 40);
      v12 = 138412290;
      v13 = v7;
      v5 = v3;
      v6 = 12;
      goto LABEL_7;
    }
LABEL_8:

    goto LABEL_9;
  }
  if (objc_msgSend(*(id *)(a1 + 32), "consentStatus") == 1)
  {
    PKLogFacilityTypeGetObject();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v12) = 0;
      v4 = "Bank Connect consent status is invalid";
      v5 = v3;
      v6 = 2;
LABEL_7:
      _os_log_impl(&dword_19D178000, v5, OS_LOG_TYPE_DEFAULT, v4, (uint8_t *)&v12, v6);
      goto LABEL_8;
    }
    goto LABEL_8;
  }
LABEL_9:
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend(*(id *)(a1 + 32), "account");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(*(id *)(a1 + 32), "consentStatus");
  objc_msgSend(*(id *)(a1 + 32), "institution");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(WeakRetained, "updateWithBankConnectAccount:consentStatus:institution:", v9, v10, v11);

}

- (BOOL)_isShowingSetUpMessage
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  __CFString *v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  -[PKDashboardPaymentPassDataSource secondaryMessages](self, "secondaryMessages", 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = *(_QWORD *)v9;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v9 != v4)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * i), "identifier");
        v6 = (__CFString *)objc_claimAutoreleasedReturnValue();

        if (v6 == CFSTR("bankConnectSetUp"))
        {
          LOBYTE(v3) = 1;
          goto LABEL_11;
        }
      }
      v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_11:

  return v3;
}

- (void)updateWithBankConnectAccount:(id)a3 consentStatus:(unint64_t)a4 institution:(id)a5
{
  id v8;
  id v9;
  id v10;
  id v11;
  void (**v12)(_QWORD);
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  void *v16;
  id v17;
  PKDashboardPaymentPassDataSource *v18;
  id v19;
  unint64_t v20;

  v8 = a3;
  v9 = a5;
  -[PKDashboardPaymentPassDataSource setBankConnectDataLoaded:](self, "setBankConnectDataLoaded:", 1);
  v13 = MEMORY[0x1E0C809B0];
  v14 = 3221225472;
  v15 = __104__PKDashboardPaymentPassDataSource_BankConnect__updateWithBankConnectAccount_consentStatus_institution___block_invoke;
  v16 = &unk_1E3E664B0;
  v17 = v8;
  v18 = self;
  v19 = v9;
  v20 = a4;
  v10 = v9;
  v11 = v8;
  v12 = (void (**)(_QWORD))_Block_copy(&v13);
  if (-[PKDashboardPaymentPassDataSource allContentIsLoaded](self, "allContentIsLoaded", v13, v14, v15, v16))
  {
    v12[2](v12);
  }
  else
  {
    -[PKDashboardPaymentPassDataSource executeAfterContentIsLoaded:](self, "executeAfterContentIsLoaded:", v12);
    -[PKDashboardPaymentPassDataSource updateContentIsLoaded](self, "updateContentIsLoaded");
  }

}

void __104__PKDashboardPaymentPassDataSource_BankConnect__updateWithBankConnectAccount_consentStatus_institution___block_invoke(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  _BOOL4 v6;
  int v7;
  void *v8;
  void *v9;
  __CFString *v10;
  void *v11;
  int v12;
  PKDashboardBankConnectLinkedAccountData *v13;
  void *v14;
  id v15;

  v3 = *(_QWORD *)(a1 + 32);
  v2 = *(void **)(a1 + 40);
  if (v3)
  {
    objc_msgSend(v2, "bankConnectLinkedAccountData");
    v4 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(*(id *)(a1 + 40), "bankConnectLinkedAccountData");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v5, "consentStatus") == 1 && *(_QWORD *)(a1 + 56) == 0;

    if (v4)
      v7 = v6;
    else
      v7 = 1;
    objc_msgSend(*(id *)(a1 + 32), "fullyQualifiedAccountIdentifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "accountID");
    v15 = (id)objc_claimAutoreleasedReturnValue();

    objc_msgSend(*(id *)(a1 + 40), "bankConnectMessage");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "identifier");
    v10 = (__CFString *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(*(id *)(a1 + 40), "bankConnectMessagesManager");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = objc_msgSend(v11, "isAccountMessageDismissed:forAccountIdentifier:", 2, v15);

    if (v10 != CFSTR("bankConnectConnected") || v12)
      objc_msgSend(*(id *)(a1 + 40), "_hideBankConnectMessageAndReloadIfNeeded");
    v13 = objc_alloc_init(PKDashboardBankConnectLinkedAccountData);
    -[PKDashboardBankConnectLinkedAccountData setAccount:](v13, "setAccount:", *(_QWORD *)(a1 + 32));
    -[PKDashboardBankConnectLinkedAccountData setConsentStatus:](v13, "setConsentStatus:", *(_QWORD *)(a1 + 56));
    -[PKDashboardBankConnectLinkedAccountData setInstitution:](v13, "setInstitution:", *(_QWORD *)(a1 + 48));
    objc_msgSend(*(id *)(a1 + 40), "setBankConnectLinkedAccountData:", v13);
    objc_msgSend(*(id *)(a1 + 40), "_reloadBalance");
    objc_msgSend(*(id *)(a1 + 40), "_showBankConnectMessageIfNeeded");
    v14 = *(void **)(a1 + 40);
    if (v7)
    {
      objc_msgSend(v14, "_fetchBankConnectTransactions");
    }
    else if ((objc_msgSend(v14, "isBankConnectLinked") & 1) == 0)
    {
      objc_msgSend(*(id *)(a1 + 40), "reloadTransactions");
      objc_msgSend(*(id *)(a1 + 40), "reloadTransactionGroups");
    }

  }
  else if ((objc_msgSend(v2, "_isShowingSetUpMessage") & 1) == 0)
  {
    objc_msgSend(*(id *)(a1 + 40), "_hideBankConnectMessageAndReloadIfNeeded");
    objc_msgSend(*(id *)(a1 + 40), "setBankConnectLinkedAccountData:", 0);
    objc_msgSend(*(id *)(a1 + 40), "_reloadBalance");
    objc_msgSend(*(id *)(a1 + 40), "_hideLatestTransactions");
    objc_msgSend(*(id *)(a1 + 40), "_hideTransactionGroups");
    objc_msgSend(*(id *)(a1 + 40), "reloadTransactions");
    objc_msgSend(*(id *)(a1 + 40), "reloadTransactionGroups");
    objc_msgSend(*(id *)(a1 + 40), "_showBankConnectMessageIfNeeded");
  }
}

- (void)_refetchBalanceAndTransactions
{
  void *v3;
  void *v4;
  void *v5;
  id v6;

  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObjects:", *MEMORY[0x1E0CADCA8], *MEMORY[0x1E0CADCB0], *MEMORY[0x1E0CADCC0], 0);
  v6 = (id)objc_claimAutoreleasedReturnValue();
  v3 = (void *)MEMORY[0x1E0CADCF0];
  -[PKDashboardPaymentPassDataSource pass](self, "pass");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "primaryAccountIdentifier");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "refreshAttributes:forPrimaryAccountIdentifier:completionHandler:", v6, v5, &__block_literal_global_200);

}

void __79__PKDashboardPaymentPassDataSource_BankConnect___refetchBalanceAndTransactions__block_invoke(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  void *v4;
  int v5;
  void *v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v2 = a2;
  if (v2)
  {
    PKLogFacilityTypeGetObject();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v2, "localizedDescription");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      v5 = 138412290;
      v6 = v4;
      _os_log_error_impl(&dword_19D178000, v3, OS_LOG_TYPE_ERROR, "Failed to refresh Bank Connect attributes with error: %@", (uint8_t *)&v5, 0xCu);

    }
  }

}

- (BOOL)isBankConnectSupported
{
  void *v2;
  char v3;

  -[PKDashboardPaymentPassDataSource pass](self, "pass");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = PKBankConnectAvailableForPass();

  return v3;
}

- (BOOL)_isBankConnectPassReady
{
  void *v2;
  void *v3;
  uint64_t v4;

  -[PKDashboardPaymentPassDataSource pass](self, "pass");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "devicePrimaryPaymentApplication");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "state");

  return v4 == 1;
}

- (BOOL)isBankConnectLinked
{
  void *v3;
  uint64_t v4;
  void *v5;
  BOOL v6;
  BOOL v7;

  if (!-[PKDashboardPaymentPassDataSource isBankConnectSupported](self, "isBankConnectSupported"))
    return 0;
  -[PKDashboardPaymentPassDataSource bankConnectLinkedAccountData](self, "bankConnectLinkedAccountData");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "consentStatus");
  objc_msgSend(v3, "account");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
    v6 = v4 == 0;
  else
    v6 = 0;
  v7 = v6;

  return v7;
}

- (BOOL)hasBankConnectAccountBalance
{
  void *v3;
  void *v4;
  void *v5;
  BOOL v6;

  -[PKDashboardPaymentPassDataSource bankConnectLinkedAccountData](self, "bankConnectLinkedAccountData");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "account");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (-[PKDashboardPaymentPassDataSource isBankConnectLinked](self, "isBankConnectLinked")
    && objc_msgSend(v4, "isAccountEnabled"))
  {
    objc_msgSend(v4, "balance");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = v5 != 0;

  }
  else
  {
    v6 = 0;
  }

  return v6;
}

- (BOOL)hasBankConnectTransactions
{
  void *v2;
  BOOL v3;

  -[PKDashboardPaymentPassDataSource bankConnectLinkedAccountData](self, "bankConnectLinkedAccountData");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2 != 0;

  return v3;
}

- (BOOL)hasBankConnectAuthTypesAvailable:(id)a3
{
  id v4;
  NSObject *v5;
  char v6;
  char v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];
  uint8_t v29[128];
  uint8_t buf[4];
  id v31;
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  PKLogFacilityTypeGetObject();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    v31 = v4;
    _os_log_impl(&dword_19D178000, v5, OS_LOG_TYPE_DEFAULT, "Handling Bank Connect bank app availability for %@", buf, 0xCu);
  }

  v6 = objc_msgSend(v4, "supportedAuthTypes");
  if ((v6 & 4) != 0)
  {
    LOBYTE(v14) = 1;
  }
  else
  {
    v7 = v6;
    if ((v6 & 1) != 0)
    {
      v26 = 0u;
      v27 = 0u;
      v24 = 0u;
      v25 = 0u;
      objc_msgSend(v4, "extensionsBundleIdentifiers");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v24, v29, 16);
      if (v9)
      {
        v10 = v9;
        v11 = *(_QWORD *)v25;
LABEL_7:
        v12 = 0;
        while (1)
        {
          if (*(_QWORD *)v25 != v11)
            objc_enumerationMutation(v8);
          objc_msgSend(MEMORY[0x1E0CA5848], "bundleRecordWithBundleIdentifier:allowPlaceholder:error:", *(_QWORD *)(*((_QWORD *)&v24 + 1) + 8 * v12), 0, 0);
          v13 = (void *)objc_claimAutoreleasedReturnValue();

          if (v13)
            goto LABEL_26;
          if (v10 == ++v12)
          {
            v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v24, v29, 16);
            if (v10)
              goto LABEL_7;
            break;
          }
        }
      }

    }
    if ((v7 & 2) != 0)
    {
      v22 = 0u;
      v23 = 0u;
      v20 = 0u;
      v21 = 0u;
      -[PKDashboardPaymentPassDataSource pass](self, "pass", 0);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "associatedApplicationIdentifiers");
      v8 = (void *)objc_claimAutoreleasedReturnValue();

      v14 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v20, v28, 16);
      if (!v14)
      {
LABEL_27:

        goto LABEL_28;
      }
      v16 = *(_QWORD *)v21;
LABEL_19:
      v17 = 0;
      while (1)
      {
        if (*(_QWORD *)v21 != v16)
          objc_enumerationMutation(v8);
        objc_msgSend(MEMORY[0x1E0CA5898], "bundleRecordWithApplicationIdentifier:error:", *(_QWORD *)(*((_QWORD *)&v20 + 1) + 8 * v17), 0);
        v18 = (void *)objc_claimAutoreleasedReturnValue();

        if (v18)
          break;
        if (v14 == ++v17)
        {
          v14 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v20, v28, 16);
          if (v14)
            goto LABEL_19;
          goto LABEL_27;
        }
      }
LABEL_26:
      LOBYTE(v14) = 1;
      goto LABEL_27;
    }
    LOBYTE(v14) = 0;
  }
LABEL_28:

  return v14;
}

- (void)_reloadBalance
{
  unint64_t v3;
  void *v4;
  id v5;

  v3 = -[PKDashboardPaymentPassDataSource firstSectionIndexForSectionIdentifier:](self, "firstSectionIndexForSectionIdentifier:", 3);
  -[PKDashboardPaymentPassDataSource delegate](self, "delegate");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB36B8], "indexSetWithIndex:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "reloadSections:", v4);

}

- (void)_hideLatestTransactions
{
  -[PKDashboardPaymentPassDataSource updateWithTransactions:](self, "updateWithTransactions:", MEMORY[0x1E0C9AA60]);
}

- (void)_hideTransactionGroups
{
  uint64_t v3;

  v3 = MEMORY[0x1E0C9AA60];
  -[PKDashboardPaymentPassDataSource setBankConnectMonthlyTransactionGroups:](self, "setBankConnectMonthlyTransactionGroups:", MEMORY[0x1E0C9AA60]);
  -[PKDashboardPaymentPassDataSource setBankConnectYearlyTransactionGroups:](self, "setBankConnectYearlyTransactionGroups:", v3);
}

- (id)getPassProductType
{
  void *v2;
  void *v3;
  uint64_t v4;
  id *v5;
  id v6;

  -[PKDashboardPaymentPassDataSource bankConnectLinkedAccountData](self, "bankConnectLinkedAccountData");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "account");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v4 = objc_msgSend(v3, "accountType");
  v5 = (id *)MEMORY[0x1E0D69380];
  if (v4 == 1)
    v5 = (id *)MEMORY[0x1E0D69378];
  v6 = *v5;

  return v6;
}

- (void)_hideBankConnectMessageAndReloadIfNeeded
{
  void *v3;

  -[PKDashboardPaymentPassDataSource bankConnectMessage](self, "bankConnectMessage");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  -[PKDashboardPaymentPassDataSource setBankConnectMessage:](self, "setBankConnectMessage:", 0);
  if (v3)
    -[PKDashboardPaymentPassDataSource reloadSecondaryMessages](self, "reloadSecondaryMessages");
}

- (void)_showBankConnectMessageIfNeeded
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  int v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  char v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  PKDashboardPaymentPassDataSource *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  char v33;
  void *v34;
  char v35;
  void *v36;
  void *v37;
  uint64_t v38;
  void *v39;
  void *v40;
  char v41;
  void *v42;
  char v43;
  void *v44;
  void *v45;
  void *v46;
  uint64_t v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  _QWORD v52[5];
  id v53;
  id location;

  if (-[PKDashboardPaymentPassDataSource _isBankConnectPassReady](self, "_isBankConnectPassReady"))
  {
    -[PKDashboardPaymentPassDataSource bankConnectLinkedAccountData](self, "bankConnectLinkedAccountData");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "account");
    v4 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v4, "fullyQualifiedAccountIdentifier");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "fullyQualifiedAccountIdentifier");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "accountID");
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    -[PKDashboardPaymentPassDataSource bankConnectLinkedAccountData](self, "bankConnectLinkedAccountData");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "institution");
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    if (v5)
    {
      -[PKDashboardPaymentPassDataSource bankConnectMessagesManager](self, "bankConnectMessagesManager");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "shouldDisplayBackgroundRefreshConfirmationMessageForFQAID:", v5);
      v11 = (void *)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      v11 = 0;
    }
    objc_msgSend(v9, "termsAndConditions");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v12, "shouldNotifyAboutChanges");
    -[PKDashboardPaymentPassDataSource bankConnectLinkedAccountData](self, "bankConnectLinkedAccountData");
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    if (v14)
    {
      -[PKDashboardPaymentPassDataSource bankConnectLinkedAccountData](self, "bankConnectLinkedAccountData");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v16 = objc_msgSend(v15, "consentStatus");

      if (v16 == 1)
      {
        -[PKDashboardPaymentPassDataSource bankConnectMessagesManager](self, "bankConnectMessagesManager");
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        v18 = objc_msgSend(v17, "isAccountMessageDismissed:forAccountIdentifier:", 1, v7);

        if ((v18 & 1) == 0)
        {
          -[PKDashboardPaymentPassDataSource bankConnectLinkedAccountData](self, "bankConnectLinkedAccountData");
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v19, "account");
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v20, "consentUUID");
          v21 = (void *)objc_claimAutoreleasedReturnValue();

          -[PKDashboardPaymentPassDataSource _createReconsentMessageWithInstitution:withPreviousConsentUUID:](self, "_createReconsentMessageWithInstitution:withPreviousConsentUUID:", v9, v21);
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          v23 = self;
          v24 = v22;
          v25 = v9;
          v26 = 1;
LABEL_24:
          -[PKDashboardPaymentPassDataSource _showBankConnectMessage:forInstitution:shouldUseInstitutionLogo:](v23, "_showBankConnectMessage:forInstitution:shouldUseInstitutionLogo:", v24, v25, v26);

        }
LABEL_25:

        return;
      }
      if (objc_msgSend(v4, "isAccountMismatched"))
      {
        -[PKDashboardPaymentPassDataSource bankConnectMessagesManager](self, "bankConnectMessagesManager");
        v34 = (void *)objc_claimAutoreleasedReturnValue();
        v35 = objc_msgSend(v34, "isAccountMessageDismissed:forAccountIdentifier:", 3, v7);

        if ((v35 & 1) == 0)
        {
          -[PKDashboardPaymentPassDataSource bankConnectLinkedAccountData](self, "bankConnectLinkedAccountData");
          v45 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v45, "account");
          v46 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v46, "consentUUID");
          v21 = (void *)objc_claimAutoreleasedReturnValue();

          -[PKDashboardPaymentPassDataSource _createMismatchedAccountMessageWithInstitution:withPreviousConsentUUID:](self, "_createMismatchedAccountMessageWithInstitution:withPreviousConsentUUID:", v9, v21);
          v22 = (void *)objc_claimAutoreleasedReturnValue();
          v23 = self;
          v24 = v22;
          v25 = v9;
          v26 = 0;
          goto LABEL_24;
        }
      }
      if (v11 && objc_msgSend(v11, "shouldShowPrompt"))
      {
        -[PKDashboardPaymentPassDataSource bankConnectLinkedAccountData](self, "bankConnectLinkedAccountData");
        v36 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v11, "token");
        v37 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v36, "setBackgroundRefreshConfirmationToken:", v37);

        -[PKDashboardPaymentPassDataSource _createBackgroundRefreshConfirmationMessageWithInstitution:](self, "_createBackgroundRefreshConfirmationMessageWithInstitution:", v9);
        v38 = objc_claimAutoreleasedReturnValue();
        goto LABEL_22;
      }
      if (!v13
        || (-[PKDashboardPaymentPassDataSource bankConnectMessagesManager](self, "bankConnectMessagesManager"),
            v40 = (void *)objc_claimAutoreleasedReturnValue(),
            v41 = objc_msgSend(v40, "isAccountMessageDismissed:forAccountIdentifier:", 5, v7),
            v40,
            (v41 & 1) != 0))
      {
        -[PKDashboardPaymentPassDataSource bankConnectMessagesManager](self, "bankConnectMessagesManager");
        v42 = (void *)objc_claimAutoreleasedReturnValue();
        v43 = objc_msgSend(v42, "isAccountMessageDismissed:forAccountIdentifier:", 2, v7);

        if ((v43 & 1) != 0)
          goto LABEL_25;
        -[PKDashboardPaymentPassDataSource _createConnectedMessageWithInstitution:](self, "_createConnectedMessageWithInstitution:", v9);
        v38 = objc_claimAutoreleasedReturnValue();
LABEL_22:
        v44 = (void *)v38;
        -[PKDashboardPaymentPassDataSource _showBankConnectMessage:forInstitution:shouldUseInstitutionLogo:](self, "_showBankConnectMessage:forInstitution:shouldUseInstitutionLogo:", v38, v9, 1);

        goto LABEL_25;
      }
      -[PKDashboardPaymentPassDataSource _createTermsAndConditionsUpdateMessageWithTermsAndConditions:](self, "_createTermsAndConditionsUpdateMessageWithTermsAndConditions:", v12);
      v47 = objc_claimAutoreleasedReturnValue();
      if (!v47)
        goto LABEL_25;
      v30 = (void *)v47;
      v51 = v12;
      v27 = v7;
      v28 = v11;
      -[PKDashboardPaymentPassDataSource bankConnectMessage](self, "bankConnectMessage");
      v48 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v48, "identifier");
      v49 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v30, "identifier");
      v50 = (void *)objc_claimAutoreleasedReturnValue();
      if ((objc_msgSend(v49, "isEqualToString:", v50) & 1) == 0)
      {
        -[PKDashboardPaymentPassDataSource setBankConnectMessage:](self, "setBankConnectMessage:", v30);
        -[PKDashboardPaymentPassDataSource reloadSecondaryMessages](self, "reloadSecondaryMessages");
      }

    }
    else
    {
      v51 = v12;
      v27 = v7;
      v28 = v11;
      -[PKDashboardPaymentPassDataSource pass](self, "pass");
      v29 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v29, "fkPaymentPass");
      v30 = (void *)objc_claimAutoreleasedReturnValue();

      -[PKDashboardPaymentPassDataSource bankConnectMessagesManager](self, "bankConnectMessagesManager");
      v31 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v30, "primaryAccountIdentifier");
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      v33 = objc_msgSend(v31, "isPassMessageDismissed:forFPANIdentifier:", 0, v32);

      if ((v33 & 1) == 0)
      {
        objc_initWeak(&location, self);
        -[PKDashboardPaymentPassDataSource bankConnectInstitutionMatcher](self, "bankConnectInstitutionMatcher");
        v39 = (void *)objc_claimAutoreleasedReturnValue();
        v11 = v28;
        v52[0] = MEMORY[0x1E0C809B0];
        v52[1] = 3221225472;
        v52[2] = __80__PKDashboardPaymentPassDataSource_BankConnect___showBankConnectMessageIfNeeded__block_invoke;
        v52[3] = &unk_1E3E77770;
        v52[4] = self;
        objc_copyWeak(&v53, &location);
        objc_msgSend(v39, "institutionForPaymentPass:withCompletion:", v30, v52);
        v7 = v27;

        objc_destroyWeak(&v53);
        objc_destroyWeak(&location);

        goto LABEL_17;
      }
    }

    v11 = v28;
    v7 = v27;
LABEL_17:
    v12 = v51;
    goto LABEL_25;
  }
}

void __80__PKDashboardPaymentPassDataSource_BankConnect___showBankConnectMessageIfNeeded__block_invoke(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  id v5;
  _QWORD block[4];
  id v7;
  uint64_t v8;
  id v9;

  v3 = a2;
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __80__PKDashboardPaymentPassDataSource_BankConnect___showBankConnectMessageIfNeeded__block_invoke_2;
  block[3] = &unk_1E3E62F50;
  v4 = *(_QWORD *)(a1 + 32);
  v7 = v3;
  v8 = v4;
  v5 = v3;
  objc_copyWeak(&v9, (id *)(a1 + 40));
  dispatch_async(MEMORY[0x1E0C80D38], block);
  objc_destroyWeak(&v9);

}

void __80__PKDashboardPaymentPassDataSource_BankConnect___showBankConnectMessageIfNeeded__block_invoke_2(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  int v4;
  id WeakRetained;

  if (*(_QWORD *)(a1 + 32))
  {
    objc_msgSend(*(id *)(a1 + 40), "bankConnectLinkedAccountData");
    WeakRetained = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(WeakRetained, "account");
    v2 = objc_claimAutoreleasedReturnValue();
    if (v2)
    {
      v3 = (void *)v2;
    }
    else
    {
      v4 = objc_msgSend(*(id *)(a1 + 40), "hasBankConnectAuthTypesAvailable:", *(_QWORD *)(a1 + 32));

      if (!v4)
        return;
      WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
      objc_msgSend(*(id *)(a1 + 40), "_createSetupMessageWithInstitution:", *(_QWORD *)(a1 + 32));
      v3 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(WeakRetained, "_showBankConnectMessage:forInstitution:shouldUseInstitutionLogo:", v3, *(_QWORD *)(a1 + 32), 1);
    }

  }
}

- (void)_showBankConnectMessage:(id)a3 forInstitution:(id)a4 shouldUseInstitutionLogo:(BOOL)a5
{
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  double v14;
  void *v15;
  _QWORD v16[4];
  id v17;
  PKDashboardPaymentPassDataSource *v18;
  BOOL v19;

  v8 = a3;
  v9 = a4;
  -[PKDashboardPaymentPassDataSource bankConnectMessage](self, "bankConnectMessage");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "identifier");
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v8, "identifier");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v11, "isEqualToString:", v12) & 1) == 0)
  {
    -[PKDashboardPaymentPassDataSource bankConnectImageProvider](self, "bankConnectImageProvider");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    if (v13)
    {
      v14 = PKUIScreenScale();
      objc_msgSend(v9, "institutionIdentifier");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v16[0] = MEMORY[0x1E0C809B0];
      v16[1] = 3221225472;
      v16[2] = __113__PKDashboardPaymentPassDataSource_BankConnect___showBankConnectMessage_forInstitution_shouldUseInstitutionLogo___block_invoke;
      v16[3] = &unk_1E3E77798;
      v19 = a5;
      v17 = v8;
      v18 = self;
      objc_msgSend(v13, "logoForInstitutionID:size:scale:completion:", v15, v16, 45.0, 45.0, v14);

    }
    else
    {
      -[PKDashboardPaymentPassDataSource setBankConnectMessage:](self, "setBankConnectMessage:", v8);
      -[PKDashboardPaymentPassDataSource reloadSecondaryMessages](self, "reloadSecondaryMessages");
    }

  }
}

void __113__PKDashboardPaymentPassDataSource_BankConnect___showBankConnectMessage_forInstitution_shouldUseInstitutionLogo___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  _QWORD v7[4];
  id v8;
  id v9;
  uint64_t v10;
  char v11;

  v3 = a2;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = __113__PKDashboardPaymentPassDataSource_BankConnect___showBankConnectMessage_forInstitution_shouldUseInstitutionLogo___block_invoke_2;
  v7[3] = &unk_1E3E64E10;
  v8 = v3;
  v11 = *(_BYTE *)(a1 + 48);
  v4 = *(id *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v9 = v4;
  v10 = v5;
  v6 = v3;
  dispatch_async(MEMORY[0x1E0C80D38], v7);

}

uint64_t __113__PKDashboardPaymentPassDataSource_BankConnect___showBankConnectMessage_forInstitution_shouldUseInstitutionLogo___block_invoke_2(uint64_t result)
{
  uint64_t v1;
  void *v2;
  void *v3;

  if (*(_QWORD *)(result + 32))
  {
    v1 = result;
    v2 = *(void **)(result + 40);
    if (*(_BYTE *)(result + 56))
    {
      objc_msgSend(*(id *)(result + 40), "setImage:");
    }
    else
    {
      objc_msgSend(*(id *)(result + 48), "_mismatchedAccountImageWithInstitutionImage:");
      v3 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v2, "setImage:", v3);

    }
    objc_msgSend(*(id *)(v1 + 48), "setBankConnectMessage:", *(_QWORD *)(v1 + 40));
    return objc_msgSend(*(id *)(v1 + 48), "reloadSecondaryMessages");
  }
  return result;
}

- (id)_createReconsentMessageWithInstitution:(id)a3 withPreviousConsentUUID:(id)a4
{
  id v6;
  id v7;
  PKDashboardPassMessage *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  _QWORD v16[4];
  id v17;
  _QWORD v18[4];
  id v19;
  id v20;
  id v21;
  id location;

  v6 = a3;
  v7 = a4;
  v8 = objc_alloc_init(PKDashboardPassMessage);
  -[PKDashboardPassMessage setIdentifier:](v8, "setIdentifier:", CFSTR("bankConnectReconsent"));
  -[PKDashboardPassMessage setShowDisclosure:](v8, "setShowDisclosure:", 1);
  PKLocalizedBankConnectString(CFSTR("BANK_CONNECT_DASHBOARD_MESSAGE_RECONNECT_TITLE"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPassMessage setTitle:](v8, "setTitle:", v9);

  PKLocalizedBankConnectString(CFSTR("BANK_CONNECT_DASHBOARD_RECONNECT_MESSAGE"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPassMessage setMessage:](v8, "setMessage:", v10);

  PKLocalizedBankConnectString(CFSTR("BANK_CONNECT_DASHBOARD_RECONNECT_BUTTON"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPassMessage setButtonTitle:](v8, "setButtonTitle:", v11);

  objc_initWeak(&location, self);
  v12 = MEMORY[0x1E0C809B0];
  v18[0] = MEMORY[0x1E0C809B0];
  v18[1] = 3221225472;
  v18[2] = __112__PKDashboardPaymentPassDataSource_BankConnect___createReconsentMessageWithInstitution_withPreviousConsentUUID___block_invoke;
  v18[3] = &unk_1E3E61EE8;
  objc_copyWeak(&v21, &location);
  v13 = v6;
  v19 = v13;
  v14 = v7;
  v20 = v14;
  -[PKDashboardPassMessage setActionOnButtonPress:](v8, "setActionOnButtonPress:", v18);
  v16[0] = v12;
  v16[1] = 3221225472;
  v16[2] = __112__PKDashboardPaymentPassDataSource_BankConnect___createReconsentMessageWithInstitution_withPreviousConsentUUID___block_invoke_2;
  v16[3] = &unk_1E3E61310;
  objc_copyWeak(&v17, &location);
  -[PKDashboardPassMessage setActionOnDismiss:](v8, "setActionOnDismiss:", v16);
  objc_destroyWeak(&v17);

  objc_destroyWeak(&v21);
  objc_destroyWeak(&location);

  return v8;
}

void __112__PKDashboardPaymentPassDataSource_BankConnect___createReconsentMessageWithInstitution_withPreviousConsentUUID___block_invoke(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  objc_msgSend(WeakRetained, "_reconsentInstitution:withPreviousConsentUUID:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));

}

void __112__PKDashboardPaymentPassDataSource_BankConnect___createReconsentMessageWithInstitution_withPreviousConsentUUID___block_invoke_2(uint64_t a1)
{
  id *v1;
  id WeakRetained;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  _QWORD block[4];
  id v8;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "bankConnectLinkedAccountData");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "accountID");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = objc_loadWeakRetained(v1);
    objc_msgSend(v5, "bankConnectMessagesManager");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setIsDismissed:forAccountMessage:withAccountIdentifier:", 1, 1, v4);

  }
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __112__PKDashboardPaymentPassDataSource_BankConnect___createReconsentMessageWithInstitution_withPreviousConsentUUID___block_invoke_3;
  block[3] = &unk_1E3E61310;
  objc_copyWeak(&v8, v1);
  dispatch_async(MEMORY[0x1E0C80D38], block);
  objc_destroyWeak(&v8);

}

void __112__PKDashboardPaymentPassDataSource_BankConnect___createReconsentMessageWithInstitution_withPreviousConsentUUID___block_invoke_3(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_hideBankConnectMessageAndReloadIfNeeded");

}

- (id)_createSetupMessageWithInstitution:(id)a3
{
  id v4;
  PKDashboardPassMessage *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;
  _QWORD v13[5];
  id v14;
  _QWORD v15[4];
  id v16;
  id v17;
  id location;

  v4 = a3;
  v5 = objc_alloc_init(PKDashboardPassMessage);
  -[PKDashboardPassMessage setIdentifier:](v5, "setIdentifier:", CFSTR("bankConnectSetUp"));
  -[PKDashboardPassMessage setShowDisclosure:](v5, "setShowDisclosure:", 0);
  PKLocalizedBankConnectString(CFSTR("BANK_CONNECT_DASHBOARD_MESSAGE_SETUP_TITLE"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPassMessage setTitle:](v5, "setTitle:", v6);

  objc_msgSend(v4, "name");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  PKLocalizedBankConnectString(CFSTR("BANK_CONNECT_DASHBOARD_SETUP_MESSAGE"), CFSTR("%@"), v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPassMessage setMessage:](v5, "setMessage:", v8);

  PKLocalizedBankConnectString(CFSTR("BANK_CONNECT_DASHBOARD_SETUP_BUTTON"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPassMessage setButtonTitle:](v5, "setButtonTitle:", v9);

  objc_initWeak(&location, self);
  v10 = MEMORY[0x1E0C809B0];
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 3221225472;
  v15[2] = __84__PKDashboardPaymentPassDataSource_BankConnect___createSetupMessageWithInstitution___block_invoke;
  v15[3] = &unk_1E3E61B68;
  objc_copyWeak(&v17, &location);
  v11 = v4;
  v16 = v11;
  -[PKDashboardPassMessage setActionOnButtonPress:](v5, "setActionOnButtonPress:", v15);
  v13[0] = v10;
  v13[1] = 3221225472;
  v13[2] = __84__PKDashboardPaymentPassDataSource_BankConnect___createSetupMessageWithInstitution___block_invoke_2;
  v13[3] = &unk_1E3E61B68;
  objc_copyWeak(&v14, &location);
  v13[4] = self;
  -[PKDashboardPassMessage setActionOnDismiss:](v5, "setActionOnDismiss:", v13);
  objc_destroyWeak(&v14);

  objc_destroyWeak(&v17);
  objc_destroyWeak(&location);

  return v5;
}

void __84__PKDashboardPaymentPassDataSource_BankConnect___createSetupMessageWithInstitution___block_invoke(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "_authorizeInstitution:", *(_QWORD *)(a1 + 32));

}

void __84__PKDashboardPaymentPassDataSource_BankConnect___createSetupMessageWithInstitution___block_invoke_2(uint64_t a1)
{
  id *v2;
  id WeakRetained;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  _QWORD block[4];
  id v9;

  v2 = (id *)(a1 + 40);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  objc_msgSend(WeakRetained, "bankConnectMessagesManager");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "pass");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "fkPaymentPass");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "primaryAccountIdentifier");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setIsDismissed:forPassMessage:withFPANIdentifier:", 1, 0, v7);

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __84__PKDashboardPaymentPassDataSource_BankConnect___createSetupMessageWithInstitution___block_invoke_3;
  block[3] = &unk_1E3E61310;
  objc_copyWeak(&v9, v2);
  dispatch_async(MEMORY[0x1E0C80D38], block);
  objc_destroyWeak(&v9);
}

void __84__PKDashboardPaymentPassDataSource_BankConnect___createSetupMessageWithInstitution___block_invoke_3(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_hideBankConnectMessageAndReloadIfNeeded");

}

- (id)_createBackgroundRefreshConfirmationMessageWithInstitution:(id)a3
{
  id v4;
  PKDashboardPassMessage *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  _QWORD v12[4];
  id v13;
  _QWORD v14[5];
  id v15;
  id location;

  v4 = a3;
  v5 = objc_alloc_init(PKDashboardPassMessage);
  -[PKDashboardPassMessage setIdentifier:](v5, "setIdentifier:", CFSTR("bankConnectBackgroundRefreshConfirmation"));
  -[PKDashboardPassMessage setShowDisclosure:](v5, "setShowDisclosure:", 1);
  PKLocalizedBankConnectString(CFSTR("BANK_CONNECT_DASHBOARD_MESSAGE_RECONFIRMATION_TITLE"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPassMessage setTitle:](v5, "setTitle:", v6);

  objc_msgSend(v4, "name");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  PKLocalizedBankConnectString(CFSTR("BANK_CONNECT_DASHBOARD_RECONFIRMATION_MESSAGE"), CFSTR("%@"), v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPassMessage setMessage:](v5, "setMessage:", v8);

  PKLocalizedBankConnectString(CFSTR("BANK_CONNECT_DASHBOARD_RECONFIRMATION_BUTTON"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPassMessage setButtonTitle:](v5, "setButtonTitle:", v9);

  objc_initWeak(&location, self);
  v10 = MEMORY[0x1E0C809B0];
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 3221225472;
  v14[2] = __108__PKDashboardPaymentPassDataSource_BankConnect___createBackgroundRefreshConfirmationMessageWithInstitution___block_invoke;
  v14[3] = &unk_1E3E612C0;
  v14[4] = self;
  objc_copyWeak(&v15, &location);
  -[PKDashboardPassMessage setActionOnButtonPress:](v5, "setActionOnButtonPress:", v14);
  v12[0] = v10;
  v12[1] = 3221225472;
  v12[2] = __108__PKDashboardPaymentPassDataSource_BankConnect___createBackgroundRefreshConfirmationMessageWithInstitution___block_invoke_4;
  v12[3] = &unk_1E3E61310;
  objc_copyWeak(&v13, &location);
  -[PKDashboardPassMessage setActionOnDismiss:](v5, "setActionOnDismiss:", v12);
  objc_destroyWeak(&v13);
  objc_destroyWeak(&v15);
  objc_destroyWeak(&location);

  return v5;
}

void __108__PKDashboardPaymentPassDataSource_BankConnect___createBackgroundRefreshConfirmationMessageWithInstitution___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  _QWORD v5[4];
  id v6;

  objc_msgSend(*(id *)(a1 + 32), "groupView");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "pkui_viewControllerFromResponderChain");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    -[objc_class makeViewController](getFKBankConnectBackgroundRefreshConfirmationViewControllerProviderClass_0(), "makeViewController");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    if (v4)
    {
      v5[0] = MEMORY[0x1E0C809B0];
      v5[1] = 3221225472;
      v5[2] = __108__PKDashboardPaymentPassDataSource_BankConnect___createBackgroundRefreshConfirmationMessageWithInstitution___block_invoke_2;
      v5[3] = &unk_1E3E61310;
      objc_copyWeak(&v6, (id *)(a1 + 40));
      objc_msgSend(v3, "presentViewController:animated:completion:", v4, 1, v5);
      objc_destroyWeak(&v6);
    }

  }
}

void __108__PKDashboardPaymentPassDataSource_BankConnect___createBackgroundRefreshConfirmationMessageWithInstitution___block_invoke_2(uint64_t a1)
{
  _QWORD block[4];
  id v2;

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __108__PKDashboardPaymentPassDataSource_BankConnect___createBackgroundRefreshConfirmationMessageWithInstitution___block_invoke_3;
  block[3] = &unk_1E3E61310;
  objc_copyWeak(&v2, (id *)(a1 + 32));
  dispatch_async(MEMORY[0x1E0C80D38], block);
  objc_destroyWeak(&v2);
}

void __108__PKDashboardPaymentPassDataSource_BankConnect___createBackgroundRefreshConfirmationMessageWithInstitution___block_invoke_3(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_hideBankConnectMessageAndReloadIfNeeded");

}

void __108__PKDashboardPaymentPassDataSource_BankConnect___createBackgroundRefreshConfirmationMessageWithInstitution___block_invoke_4(uint64_t a1)
{
  id *v1;
  id WeakRetained;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  _QWORD block[4];
  id v8;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "bankConnectMessagesManager");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_loadWeakRetained(v1);
  objc_msgSend(v4, "bankConnectLinkedAccountData");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "backgroundRefreshConfirmationToken");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "dismissBackgroundRefreshConfirmationMessageWithToken:", v6);

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __108__PKDashboardPaymentPassDataSource_BankConnect___createBackgroundRefreshConfirmationMessageWithInstitution___block_invoke_5;
  block[3] = &unk_1E3E61310;
  objc_copyWeak(&v8, v1);
  dispatch_async(MEMORY[0x1E0C80D38], block);
  objc_destroyWeak(&v8);
}

void __108__PKDashboardPaymentPassDataSource_BankConnect___createBackgroundRefreshConfirmationMessageWithInstitution___block_invoke_5(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_hideBankConnectMessageAndReloadIfNeeded");

}

- (id)_createConnectedMessageWithInstitution:(id)a3
{
  id v4;
  PKDashboardPassMessage *v5;
  void *v6;
  void *v7;
  void *v8;
  _QWORD v10[4];
  id v11;
  id location;

  v4 = a3;
  v5 = objc_alloc_init(PKDashboardPassMessage);
  -[PKDashboardPassMessage setIdentifier:](v5, "setIdentifier:", CFSTR("bankConnectConnected"));
  -[PKDashboardPassMessage setShowDisclosure:](v5, "setShowDisclosure:", 1);
  objc_msgSend(v4, "name");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  PKLocalizedBankConnectString(CFSTR("BANK_CONNECT_DASHBOARD_MESSAGE_CONNECTED_TITLE"), CFSTR("%@"), v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPassMessage setTitle:](v5, "setTitle:", v7);

  PKLocalizedBankConnectString(CFSTR("BANK_CONNECT_DASHBOARD_CONNECTED_MESSAGE"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPassMessage setMessage:](v5, "setMessage:", v8);

  objc_initWeak(&location, self);
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = __88__PKDashboardPaymentPassDataSource_BankConnect___createConnectedMessageWithInstitution___block_invoke;
  v10[3] = &unk_1E3E61310;
  objc_copyWeak(&v11, &location);
  -[PKDashboardPassMessage setActionOnDismiss:](v5, "setActionOnDismiss:", v10);
  objc_destroyWeak(&v11);
  objc_destroyWeak(&location);

  return v5;
}

void __88__PKDashboardPaymentPassDataSource_BankConnect___createConnectedMessageWithInstitution___block_invoke(uint64_t a1)
{
  id *v1;
  id WeakRetained;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  _QWORD block[4];
  id v8;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "bankConnectLinkedAccountData");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "accountID");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = objc_loadWeakRetained(v1);
    objc_msgSend(v5, "bankConnectMessagesManager");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setIsDismissed:forAccountMessage:withAccountIdentifier:", 1, 2, v4);

  }
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __88__PKDashboardPaymentPassDataSource_BankConnect___createConnectedMessageWithInstitution___block_invoke_2;
  block[3] = &unk_1E3E61310;
  objc_copyWeak(&v8, v1);
  dispatch_async(MEMORY[0x1E0C80D38], block);
  objc_destroyWeak(&v8);

}

void __88__PKDashboardPaymentPassDataSource_BankConnect___createConnectedMessageWithInstitution___block_invoke_2(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_hideBankConnectMessageAndReloadIfNeeded");

}

- (id)_createTermsAndConditionsUpdateMessageWithTermsAndConditions:(id)a3
{
  id v4;
  void *v5;
  NSObject *v6;
  id v7;
  void *v8;
  PKDashboardPassMessage *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  _QWORD v19[4];
  id v20;
  _QWORD v21[5];
  id v22;
  id v23;
  id location[4];

  location[3] = *(id *)MEMORY[0x1E0C80C00];
  v4 = a3;
  objc_msgSend(v4, "identifier");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    objc_msgSend(v4, "inEffectOn");
    v6 = objc_claimAutoreleasedReturnValue();
    v7 = objc_alloc_init(MEMORY[0x1E0CB3578]);
    objc_msgSend(MEMORY[0x1E0C99D48], "calendarWithIdentifier:", *MEMORY[0x1E0C996C8]);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "setCalendar:", v8);

    objc_msgSend(v7, "setDateStyle:", 3);
    objc_msgSend(v7, "setTimeStyle:", 0);
    v9 = objc_alloc_init(PKDashboardPassMessage);
    -[PKDashboardPassMessage setIdentifier:](v9, "setIdentifier:", CFSTR("bankConnectTermsAndConditionsUpdate"));
    PKLocalizedBankConnectString(CFSTR("BANK_CONNECT_DASHBOARD_MESSAGE_TERMS_AND_CONDITIONS_UPDATE_TITLE"));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setTitle:](v9, "setTitle:", v10);

    objc_msgSend(v7, "stringFromDate:", v6);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    PKLocalizedBankConnectString(CFSTR("BANK_CONNECT_DASHBOARD_TERMS_AND_CONDITIONS_UPDATE_MESSAGE"), CFSTR("%@"), v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setMessage:](v9, "setMessage:", v12);

    PKLocalizedBankConnectString(CFSTR("BANK_CONNECT_DASHBOARD_TERMS_AND_CONDITIONS_UPDATE_BUTTON"));
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setButtonTitle:](v9, "setButtonTitle:", v13);

    v14 = (void *)MEMORY[0x1E0DC3870];
    PKPassKitCoreBundle();
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "imageNamed:inBundle:", CFSTR("GenericIcon"), v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPassMessage setImage:](v9, "setImage:", v16);

    objc_initWeak(location, self);
    v17 = MEMORY[0x1E0C809B0];
    v21[0] = MEMORY[0x1E0C809B0];
    v21[1] = 3221225472;
    v21[2] = __110__PKDashboardPaymentPassDataSource_BankConnect___createTermsAndConditionsUpdateMessageWithTermsAndConditions___block_invoke;
    v21[3] = &unk_1E3E62F50;
    v21[4] = self;
    v22 = v5;
    objc_copyWeak(&v23, location);
    -[PKDashboardPassMessage setActionOnButtonPress:](v9, "setActionOnButtonPress:", v21);
    v19[0] = v17;
    v19[1] = 3221225472;
    v19[2] = __110__PKDashboardPaymentPassDataSource_BankConnect___createTermsAndConditionsUpdateMessageWithTermsAndConditions___block_invoke_4;
    v19[3] = &unk_1E3E61310;
    objc_copyWeak(&v20, location);
    -[PKDashboardPassMessage setActionOnDismiss:](v9, "setActionOnDismiss:", v19);
    objc_destroyWeak(&v20);
    objc_destroyWeak(&v23);

    objc_destroyWeak(location);
  }
  else
  {
    PKLogFacilityTypeGetObject();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      LODWORD(location[0]) = 138412290;
      *(id *)((char *)location + 4) = v4;
      _os_log_error_impl(&dword_19D178000, v6, OS_LOG_TYPE_ERROR, "Failed to create a message for T&Cs %@", (uint8_t *)location, 0xCu);
    }
    v9 = 0;
  }

  return v9;
}

void __110__PKDashboardPaymentPassDataSource_BankConnect___createTermsAndConditionsUpdateMessageWithTermsAndConditions___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  Class FKBankConnectTermsAndConditionsViewControllerProviderClass;
  uint64_t v5;
  void *v6;
  _QWORD v7[4];
  id v8;

  objc_msgSend(*(id *)(a1 + 32), "groupView");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "pkui_viewControllerFromResponderChain");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    FKBankConnectTermsAndConditionsViewControllerProviderClass = getFKBankConnectTermsAndConditionsViewControllerProviderClass();
    v5 = *(_QWORD *)(a1 + 40);
    v7[0] = MEMORY[0x1E0C809B0];
    v7[1] = 3221225472;
    v7[2] = __110__PKDashboardPaymentPassDataSource_BankConnect___createTermsAndConditionsUpdateMessageWithTermsAndConditions___block_invoke_2;
    v7[3] = &unk_1E3E61310;
    objc_copyWeak(&v8, (id *)(a1 + 48));
    -[objc_class makeViewControllerWithTermsAndConditionsID:completion:](FKBankConnectTermsAndConditionsViewControllerProviderClass, "makeViewControllerWithTermsAndConditionsID:completion:", v5, v7);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (v6)
      objc_msgSend(v3, "presentViewController:animated:completion:", v6, 1, 0);

    objc_destroyWeak(&v8);
  }

}

void __110__PKDashboardPaymentPassDataSource_BankConnect___createTermsAndConditionsUpdateMessageWithTermsAndConditions___block_invoke_2(uint64_t a1)
{
  _QWORD block[4];
  id v2;

  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __110__PKDashboardPaymentPassDataSource_BankConnect___createTermsAndConditionsUpdateMessageWithTermsAndConditions___block_invoke_3;
  block[3] = &unk_1E3E61310;
  objc_copyWeak(&v2, (id *)(a1 + 32));
  dispatch_async(MEMORY[0x1E0C80D38], block);
  objc_destroyWeak(&v2);
}

void __110__PKDashboardPaymentPassDataSource_BankConnect___createTermsAndConditionsUpdateMessageWithTermsAndConditions___block_invoke_3(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "reloadBankConnectData");

}

void __110__PKDashboardPaymentPassDataSource_BankConnect___createTermsAndConditionsUpdateMessageWithTermsAndConditions___block_invoke_4(uint64_t a1)
{
  id *v1;
  id WeakRetained;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  _QWORD block[4];
  id v8;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "bankConnectLinkedAccountData");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "accountID");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = objc_loadWeakRetained(v1);
    objc_msgSend(v5, "bankConnectMessagesManager");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setIsDismissed:forAccountMessage:withAccountIdentifier:", 1, 5, v4);

  }
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __110__PKDashboardPaymentPassDataSource_BankConnect___createTermsAndConditionsUpdateMessageWithTermsAndConditions___block_invoke_5;
  block[3] = &unk_1E3E61310;
  objc_copyWeak(&v8, v1);
  dispatch_async(MEMORY[0x1E0C80D38], block);
  objc_destroyWeak(&v8);

}

void __110__PKDashboardPaymentPassDataSource_BankConnect___createTermsAndConditionsUpdateMessageWithTermsAndConditions___block_invoke_5(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_hideBankConnectMessageAndReloadIfNeeded");

}

- (id)_createMismatchedAccountMessageWithInstitution:(id)a3 withPreviousConsentUUID:(id)a4
{
  id v6;
  id v7;
  PKDashboardPassMessage *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  _QWORD v17[4];
  id v18;
  _QWORD v19[5];
  id v20;
  id v21;
  id v22;
  id location;

  v6 = a3;
  v7 = a4;
  v8 = objc_alloc_init(PKDashboardPassMessage);
  -[PKDashboardPassMessage setIdentifier:](v8, "setIdentifier:", CFSTR("bankConnectMismatchedAccount"));
  -[PKDashboardPassMessage setShowDisclosure:](v8, "setShowDisclosure:", 1);
  PKLocalizedBankConnectString(CFSTR("BANK_CONNECT_DASHBOARD_MESSAGE_MISMATCHED_ACOUNT_TITLE"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPassMessage setTitle:](v8, "setTitle:", v9);

  PKLocalizedBankConnectString(CFSTR("BANK_CONNECT_DASHBOARD_MESSAGE_MISMATCHED_ACOUNT_DESCRIPTION"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPassMessage setMessage:](v8, "setMessage:", v10);

  PKLocalizedBankConnectString(CFSTR("BANK_CONNECT_DASHBOARD_MESSAGE_MISMATCHED_ACOUNT_BUTTON"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPassMessage setButtonTitle:](v8, "setButtonTitle:", v11);

  -[PKDashboardPaymentPassDataSource _mismatchedAccountImageWithInstitutionImage:](self, "_mismatchedAccountImageWithInstitutionImage:", 0);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  -[PKDashboardPassMessage setImage:](v8, "setImage:", v12);

  objc_initWeak(&location, self);
  v13 = MEMORY[0x1E0C809B0];
  v19[0] = MEMORY[0x1E0C809B0];
  v19[1] = 3221225472;
  v19[2] = __120__PKDashboardPaymentPassDataSource_BankConnect___createMismatchedAccountMessageWithInstitution_withPreviousConsentUUID___block_invoke;
  v19[3] = &unk_1E3E64B70;
  v19[4] = self;
  v14 = v6;
  v20 = v14;
  v15 = v7;
  v21 = v15;
  objc_copyWeak(&v22, &location);
  -[PKDashboardPassMessage setActionOnButtonPress:](v8, "setActionOnButtonPress:", v19);
  v17[0] = v13;
  v17[1] = 3221225472;
  v17[2] = __120__PKDashboardPaymentPassDataSource_BankConnect___createMismatchedAccountMessageWithInstitution_withPreviousConsentUUID___block_invoke_4;
  v17[3] = &unk_1E3E61310;
  objc_copyWeak(&v18, &location);
  -[PKDashboardPassMessage setActionOnDismiss:](v8, "setActionOnDismiss:", v17);
  objc_destroyWeak(&v18);
  objc_destroyWeak(&v22);

  objc_destroyWeak(&location);
  return v8;
}

void __120__PKDashboardPaymentPassDataSource_BankConnect___createMismatchedAccountMessageWithInstitution_withPreviousConsentUUID___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  Class FKBankConnectReviewAccountConnectionFlowViewControllerProviderClass;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  void *v12;
  _QWORD v13[4];
  id v14;
  id v15;
  id v16;

  objc_msgSend(*(id *)(a1 + 32), "groupView");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "pkui_viewControllerFromResponderChain");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    +[PKDismissalPreventionAssertionManager sharedInstance](PKDismissalPreventionAssertionManager, "sharedInstance");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "acquireAssertion");
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    FKBankConnectReviewAccountConnectionFlowViewControllerProviderClass = getFKBankConnectReviewAccountConnectionFlowViewControllerProviderClass();
    v7 = *(_QWORD *)(a1 + 40);
    objc_msgSend(*(id *)(a1 + 32), "pass");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = *(_QWORD *)(a1 + 48);
    v13[0] = MEMORY[0x1E0C809B0];
    v13[1] = 3221225472;
    v13[2] = __120__PKDashboardPaymentPassDataSource_BankConnect___createMismatchedAccountMessageWithInstitution_withPreviousConsentUUID___block_invoke_2;
    v13[3] = &unk_1E3E63B10;
    objc_copyWeak(&v16, (id *)(a1 + 56));
    v10 = v3;
    v14 = v10;
    v11 = v5;
    v15 = v11;
    -[objc_class makeViewControllerWithInstitution:paymentPass:previousConsentUUID:completion:](FKBankConnectReviewAccountConnectionFlowViewControllerProviderClass, "makeViewControllerWithInstitution:paymentPass:previousConsentUUID:completion:", v7, v8, v9, v13);
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v10, "presentViewController:animated:completion:", v12, 1, 0);
    objc_destroyWeak(&v16);

  }
}

uint64_t __120__PKDashboardPaymentPassDataSource_BankConnect___createMismatchedAccountMessageWithInstitution_withPreviousConsentUUID___block_invoke_2(id *a1, int a2)
{
  id WeakRetained;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  _QWORD block[4];
  id v10;

  if (a2)
  {
    WeakRetained = objc_loadWeakRetained(a1 + 6);
    objc_msgSend(WeakRetained, "bankConnectLinkedAccountData");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "accountID");
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    if (v5)
    {
      v6 = objc_loadWeakRetained(a1 + 6);
      objc_msgSend(v6, "bankConnectMessagesManager");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "setIsDismissed:forAccountMessage:withAccountIdentifier:", 1, 3, v5);

    }
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = __120__PKDashboardPaymentPassDataSource_BankConnect___createMismatchedAccountMessageWithInstitution_withPreviousConsentUUID___block_invoke_3;
    block[3] = &unk_1E3E61310;
    objc_copyWeak(&v10, a1 + 6);
    dispatch_async(MEMORY[0x1E0C80D38], block);
    objc_destroyWeak(&v10);

  }
  objc_msgSend(a1[4], "dismissViewControllerAnimated:completion:", 1, 0);
  return objc_msgSend(a1[5], "invalidate");
}

void __120__PKDashboardPaymentPassDataSource_BankConnect___createMismatchedAccountMessageWithInstitution_withPreviousConsentUUID___block_invoke_3(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_hideBankConnectMessageAndReloadIfNeeded");

}

void __120__PKDashboardPaymentPassDataSource_BankConnect___createMismatchedAccountMessageWithInstitution_withPreviousConsentUUID___block_invoke_4(uint64_t a1)
{
  id *v1;
  id WeakRetained;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  _QWORD block[4];
  id v8;

  v1 = (id *)(a1 + 32);
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "bankConnectLinkedAccountData");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "accountID");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = objc_loadWeakRetained(v1);
    objc_msgSend(v5, "bankConnectMessagesManager");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setIsDismissed:forAccountMessage:withAccountIdentifier:", 1, 3, v4);

  }
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = __120__PKDashboardPaymentPassDataSource_BankConnect___createMismatchedAccountMessageWithInstitution_withPreviousConsentUUID___block_invoke_5;
  block[3] = &unk_1E3E61310;
  objc_copyWeak(&v8, v1);
  dispatch_async(MEMORY[0x1E0C80D38], block);
  objc_destroyWeak(&v8);

}

void __120__PKDashboardPaymentPassDataSource_BankConnect___createMismatchedAccountMessageWithInstitution_withPreviousConsentUUID___block_invoke_5(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_hideBankConnectMessageAndReloadIfNeeded");

}

- (id)_mismatchedAccountImageWithInstitutionImage:(id)a3
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  double v10;
  CGFloat v11;
  void *v12;
  _QWORD v14[3];
  CGSize v15;

  v14[2] = *MEMORY[0x1E0C80C00];
  v3 = a3;
  v4 = (void *)MEMORY[0x1E0DC3888];
  objc_msgSend(MEMORY[0x1E0DC3658], "systemBackgroundColor");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v14[0] = v5;
  objc_msgSend(MEMORY[0x1E0DC3658], "labelColor");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v14[1] = v6;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v14, 2);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "configurationWithPaletteColors:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0DC3870], "systemImageNamed:withConfiguration:", CFSTR("exclamationmark.circle.fill"), v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v3)
  {
    PKUIImageNamed(CFSTR("BankAccountAppInverted"));
    v3 = (id)objc_claimAutoreleasedReturnValue();
  }
  objc_msgSend(v9, "scale");
  v11 = v10;
  v15.width = 50.0;
  v15.height = 50.0;
  UIGraphicsBeginImageContextWithOptions(v15, 0, v11);
  objc_msgSend(v3, "drawInRect:", 0.0, 0.0, 40.0, 40.0);
  objc_msgSend(v9, "drawInRect:", 30.0, 30.0, 20.0, 20.0);
  UIGraphicsGetImageFromCurrentImageContext();
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  UIGraphicsEndImageContext();

  return v12;
}

- (void)_startRefetchingData
{
  void *v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;

  -[PKDashboardPaymentPassDataSource bankConnectLinkedAccountData](self, "bankConnectLinkedAccountData");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "account");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "fullyQualifiedAccountIdentifier");
  v13 = (id)objc_claimAutoreleasedReturnValue();

  v4 = objc_alloc(MEMORY[0x1E0CB3940]);
  v5 = (void *)objc_msgSend(v4, "initWithFormat:", CFSTR("prefs:root=PASSBOOK&path=%@"), *MEMORY[0x1E0D6BAC8]);
  if (v13)
  {
    v6 = objc_alloc(MEMORY[0x1E0CB3940]);
    objc_msgSend(v13, "institutionID");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "accountID");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(v6, "initWithFormat:", CFSTR("/%@/%@"), v7, v8);

    objc_msgSend(v5, "stringByAppendingString:", v9);
    v10 = objc_claimAutoreleasedReturnValue();

    v5 = (void *)v10;
  }
  objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", v5);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "openSensitiveURL:withOptions:", v11, 0);

}

- (void)_authorizeInstitution:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  Class FKBankConnectAuthorizationViewControllerProviderClass_0;
  void *v21;
  id v22;
  id v23;
  void *v24;
  _QWORD v25[4];
  id v26;
  id v27;
  id v28;
  id location;
  _QWORD v30[6];
  _QWORD v31[7];

  v31[6] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[PKDashboardPaymentPassDataSource groupView](self, "groupView");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "pkui_viewControllerFromResponderChain");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  -[PKDashboardPaymentPassDataSource _beginReportingIfNecessary](self, "_beginReportingIfNecessary");
  v7 = (void *)MEMORY[0x1E0D66A58];
  v8 = *MEMORY[0x1E0D68B18];
  v9 = *MEMORY[0x1E0D68F50];
  v30[0] = *MEMORY[0x1E0D68AA0];
  v30[1] = v9;
  v10 = *MEMORY[0x1E0D68FB8];
  v31[0] = v8;
  v31[1] = v10;
  v11 = *MEMORY[0x1E0D68858];
  v31[2] = *MEMORY[0x1E0D68DB8];
  v12 = *MEMORY[0x1E0D69028];
  v30[2] = v11;
  v30[3] = v12;
  -[PKDashboardPaymentPassDataSource getPassProductType](self, "getPassProductType");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v31[3] = v13;
  v30[4] = *MEMORY[0x1E0D68D88];
  objc_msgSend(v4, "name");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v31[4] = v14;
  v30[5] = *MEMORY[0x1E0D69010];
  -[PKDashboardPaymentPassDataSource pass](self, "pass");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "issuerCountryCode");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v31[5] = v16;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v31, v30, 6);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "subject:sendEvent:", *MEMORY[0x1E0D69910], v17);

  if (v6)
  {
    objc_initWeak(&location, self);
    +[PKDismissalPreventionAssertionManager sharedInstance](PKDismissalPreventionAssertionManager, "sharedInstance");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "acquireAssertion");
    v19 = (void *)objc_claimAutoreleasedReturnValue();

    FKBankConnectAuthorizationViewControllerProviderClass_0 = getFKBankConnectAuthorizationViewControllerProviderClass_0();
    -[PKDashboardPaymentPassDataSource pass](self, "pass");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    v25[0] = MEMORY[0x1E0C809B0];
    v25[1] = 3221225472;
    v25[2] = __71__PKDashboardPaymentPassDataSource_BankConnect___authorizeInstitution___block_invoke;
    v25[3] = &unk_1E3E63B10;
    objc_copyWeak(&v28, &location);
    v22 = v6;
    v26 = v22;
    v23 = v19;
    v27 = v23;
    -[objc_class makeAuthorizationViewControllerWithPaymentPass:institution:completion:](FKBankConnectAuthorizationViewControllerProviderClass_0, "makeAuthorizationViewControllerWithPaymentPass:institution:completion:", v21, v4, v25);
    v24 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v22, "presentViewController:animated:completion:", v24, 1, 0);
    objc_destroyWeak(&v28);

    objc_destroyWeak(&location);
  }

}

uint64_t __71__PKDashboardPaymentPassDataSource_BankConnect___authorizeInstitution___block_invoke(id *a1, int a2)
{
  id WeakRetained;

  if (a2)
  {
    WeakRetained = objc_loadWeakRetained(a1 + 6);
    objc_msgSend(WeakRetained, "reloadBankConnectData");

  }
  objc_msgSend(a1[4], "dismissViewControllerAnimated:completion:", 1, 0);
  return objc_msgSend(a1[5], "invalidate");
}

- (void)_reconsentInstitution:(id)a3 withPreviousConsentUUID:(id)a4
{
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  Class FKBankConnectAuthorizationViewControllerProviderClass_0;
  void *v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(id *, int);
  void *v20;
  id v21;
  id v22;
  id v23;
  id location;

  v6 = a3;
  v7 = a4;
  -[PKDashboardPaymentPassDataSource groupView](self, "groupView");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "pkui_viewControllerFromResponderChain");
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if (v9)
  {
    objc_initWeak(&location, self);
    +[PKDismissalPreventionAssertionManager sharedInstance](PKDismissalPreventionAssertionManager, "sharedInstance");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "acquireAssertion");
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    FKBankConnectAuthorizationViewControllerProviderClass_0 = getFKBankConnectAuthorizationViewControllerProviderClass_0();
    -[PKDashboardPaymentPassDataSource pass](self, "pass");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = MEMORY[0x1E0C809B0];
    v18 = 3221225472;
    v19 = __95__PKDashboardPaymentPassDataSource_BankConnect___reconsentInstitution_withPreviousConsentUUID___block_invoke;
    v20 = &unk_1E3E63B10;
    objc_copyWeak(&v23, &location);
    v14 = v9;
    v21 = v14;
    v15 = v11;
    v22 = v15;
    -[objc_class makeReconsentAuthorizationViewControllerWithPaymentPass:institution:previousConsentUUID:completion:](FKBankConnectAuthorizationViewControllerProviderClass_0, "makeReconsentAuthorizationViewControllerWithPaymentPass:institution:previousConsentUUID:completion:", v13, v6, v7, &v17);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v14, "presentViewController:animated:completion:", v16, 1, 0, v17, v18, v19, v20);
    objc_destroyWeak(&v23);

    objc_destroyWeak(&location);
  }

}

uint64_t __95__PKDashboardPaymentPassDataSource_BankConnect___reconsentInstitution_withPreviousConsentUUID___block_invoke(id *a1, int a2)
{
  id WeakRetained;

  if (a2)
  {
    WeakRetained = objc_loadWeakRetained(a1 + 6);
    objc_msgSend(WeakRetained, "reloadBankConnectData");

  }
  objc_msgSend(a1[4], "dismissViewControllerAnimated:completion:", 1, 0);
  return objc_msgSend(a1[5], "invalidate");
}

- (void)didUpdateLatestTransactions:(id)a3 monthlyTransactionGroups:(id)a4 yearlyTransactionGroups:(id)a5
{
  id v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t j;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t k;
  void *v33;
  PKDashboardPaymentPassDataSource *v34;
  id v35;
  id v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  _BYTE v49[128];
  _BYTE v50[128];
  _BYTE v51[128];
  uint64_t v52;

  v52 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = a4;
  v10 = a5;
  if (-[PKDashboardPaymentPassDataSource isBankConnectLinked](self, "isBankConnectLinked"))
  {
    v11 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithCapacity:", objc_msgSend(v8, "count"));
    v34 = self;
    -[PKDashboardPaymentPassDataSource bankConnectLinkedAccountData](self, "bankConnectLinkedAccountData");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "institution");
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    v47 = 0u;
    v48 = 0u;
    v45 = 0u;
    v46 = 0u;
    v36 = v8;
    v14 = v8;
    v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v45, v51, 16);
    if (v15)
    {
      v16 = v15;
      v17 = *(_QWORD *)v46;
      do
      {
        for (i = 0; i != v16; ++i)
        {
          if (*(_QWORD *)v46 != v17)
            objc_enumerationMutation(v14);
          v19 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D67370]), "initFromFKTransaction:institution:", *(_QWORD *)(*((_QWORD *)&v45 + 1) + 8 * i), v13);
          objc_msgSend(v11, "addObject:", v19);

        }
        v16 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v45, v51, 16);
      }
      while (v16);
    }

    objc_msgSend(MEMORY[0x1E0D67370], "augmentTransactionsIfNeeded:usingDataProvider:", v11, 0);
    v20 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithCapacity:", objc_msgSend(v9, "count"));
    v41 = 0u;
    v42 = 0u;
    v43 = 0u;
    v44 = 0u;
    v21 = v9;
    v22 = objc_msgSend(v21, "countByEnumeratingWithState:objects:count:", &v41, v50, 16);
    if (v22)
    {
      v23 = v22;
      v24 = *(_QWORD *)v42;
      do
      {
        for (j = 0; j != v23; ++j)
        {
          if (*(_QWORD *)v42 != v24)
            objc_enumerationMutation(v21);
          v26 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D67388]), "initFromFKTransactionGroup:", *(_QWORD *)(*((_QWORD *)&v41 + 1) + 8 * j));
          objc_msgSend(v20, "addObject:", v26);

        }
        v23 = objc_msgSend(v21, "countByEnumeratingWithState:objects:count:", &v41, v50, 16);
      }
      while (v23);
    }
    v35 = v9;

    v27 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithCapacity:", objc_msgSend(v10, "count"));
    v37 = 0u;
    v38 = 0u;
    v39 = 0u;
    v40 = 0u;
    v28 = v10;
    v29 = objc_msgSend(v28, "countByEnumeratingWithState:objects:count:", &v37, v49, 16);
    if (v29)
    {
      v30 = v29;
      v31 = *(_QWORD *)v38;
      do
      {
        for (k = 0; k != v30; ++k)
        {
          if (*(_QWORD *)v38 != v31)
            objc_enumerationMutation(v28);
          v33 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D67388]), "initFromFKTransactionGroup:", *(_QWORD *)(*((_QWORD *)&v37 + 1) + 8 * k));
          objc_msgSend(v27, "addObject:", v33);

        }
        v30 = objc_msgSend(v28, "countByEnumeratingWithState:objects:count:", &v37, v49, 16);
      }
      while (v30);
    }

    -[PKDashboardPaymentPassDataSource setBankConnectMonthlyTransactionGroups:](v34, "setBankConnectMonthlyTransactionGroups:", v20);
    -[PKDashboardPaymentPassDataSource setBankConnectYearlyTransactionGroups:](v34, "setBankConnectYearlyTransactionGroups:", v27);
    -[PKDashboardPaymentPassDataSource updateWithTransactions:](v34, "updateWithTransactions:", v11);
    -[PKDashboardPaymentPassDataSource reloadTransactionGroups](v34, "reloadTransactionGroups");

    v9 = v35;
    v8 = v36;
  }

}

- (void)bankConnectAccountDidChange:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  char v8;
  NSObject *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  int v13;
  void *v14;
  __int16 v15;
  id v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[PKDashboardPaymentPassDataSource bankConnectLinkedAccountData](self, "bankConnectLinkedAccountData");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (v5)
  {
    objc_msgSend(v5, "account");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "isEqual:", v4);

    if ((v8 & 1) == 0)
    {
      PKLogFacilityTypeGetObject();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend(v6, "account");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        v13 = 138412546;
        v14 = v10;
        v15 = 2112;
        v16 = v4;
        _os_log_impl(&dword_19D178000, v9, OS_LOG_TYPE_DEFAULT, "Handling Bank Connect account update from %@ to %@", (uint8_t *)&v13, 0x16u);

      }
      v11 = objc_msgSend(v6, "consentStatus");
      objc_msgSend(v6, "institution");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      -[PKDashboardPaymentPassDataSource updateWithBankConnectAccount:consentStatus:institution:](self, "updateWithBankConnectAccount:consentStatus:institution:", v4, v11, v12);

    }
  }
  else
  {
    -[PKDashboardPaymentPassDataSource reloadBankConnectData](self, "reloadBankConnectData");
  }

}

- (void)bankConnectConsentStatusDidChange:(unint64_t)a3
{
  void *v5;
  void *v6;
  NSObject *v7;
  void *v8;
  void *v9;
  int v10;
  uint64_t v11;
  __int16 v12;
  unint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  -[PKDashboardPaymentPassDataSource bankConnectLinkedAccountData](self, "bankConnectLinkedAccountData");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (v5 && objc_msgSend(v5, "consentStatus") != a3)
  {
    PKLogFacilityTypeGetObject();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      v10 = 134218240;
      v11 = objc_msgSend(v6, "consentStatus");
      v12 = 2048;
      v13 = a3;
      _os_log_impl(&dword_19D178000, v7, OS_LOG_TYPE_DEFAULT, "Handling Bank Connect consent status update from %ld to %ld", (uint8_t *)&v10, 0x16u);
    }

    objc_msgSend(v6, "account");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "institution");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    -[PKDashboardPaymentPassDataSource updateWithBankConnectAccount:consentStatus:institution:](self, "updateWithBankConnectAccount:consentStatus:institution:", v8, a3, v9);

  }
}

- (void)_beginReportingIfNecessary
{
  uint64_t v2;
  void *v3;

  v2 = *MEMORY[0x1E0D69910];
  objc_msgSend(MEMORY[0x1E0D66A58], "reporterForSubject:", *MEMORY[0x1E0D69910]);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v3)
  {
    _didBeginPassManagementSubject = 1;
    objc_msgSend(MEMORY[0x1E0D66A58], "beginSubjectReporting:", v2);
  }
}

@end
