void type metadata accessor for HKSPSleepWidgetState(uint64_t a1)
{
  sub_22CC08D64(a1, &qword_2540656F8, (uint64_t)&unk_24F76F628, MEMORY[0x24BEE4D40]);
}

uint64_t initializeBufferWithCopyOfBuffer for SleepStageWidgetViewModel(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

void destroy for SleepStageWidgetViewModel(uint64_t a1)
{
  if (*(_QWORD *)a1)
  {
    swift_bridgeObjectRelease();

  }
}

uint64_t initializeWithCopy for SleepStageWidgetViewModel(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  id v7;

  if (*(_QWORD *)a2)
  {
    v4 = *(void **)(a2 + 8);
    v5 = *(void **)(a2 + 16);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v5;
    swift_bridgeObjectRetain();
    v6 = v4;
    v7 = v5;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  }
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t assignWithCopy for SleepStageWidgetViewModel(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  __int128 v17;

  v4 = *(_QWORD *)a1;
  v5 = *a2;
  if (v4)
  {
    if (v5)
    {
      *(_QWORD *)a1 = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v6 = *(void **)(a1 + 8);
      v7 = (void *)a2[1];
      *(_QWORD *)(a1 + 8) = v7;
      v8 = v7;

      v9 = *(void **)(a1 + 16);
      v10 = (void *)a2[2];
      *(_QWORD *)(a1 + 16) = v10;
      v11 = v10;

    }
    else
    {
      sub_22CC06744(a1);
      v16 = a2[2];
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_QWORD *)(a1 + 16) = v16;
    }
  }
  else if (v5)
  {
    *(_QWORD *)a1 = v5;
    v12 = (void *)a2[1];
    *(_QWORD *)(a1 + 8) = v12;
    v13 = (void *)a2[2];
    *(_QWORD *)(a1 + 16) = v13;
    swift_bridgeObjectRetain();
    v14 = v12;
    v15 = v13;
  }
  else
  {
    v17 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_OWORD *)a1 = v17;
  }
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  return a1;
}

uint64_t sub_22CC06744(uint64_t a1)
{
  destroy for SleepDaySummaryResults(a1);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SleepStageWidgetViewModel(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  if (!*(_QWORD *)a1)
    goto LABEL_5;
  if (!*(_QWORD *)a2)
  {
    sub_22CC06744(a1);
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    goto LABEL_6;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

LABEL_6:
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for SleepStageWidgetViewModel(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 25))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SleepStageWidgetViewModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SleepStageWidgetRectangularView()
{
  return &type metadata for SleepStageWidgetRectangularView;
}

_UNKNOWN **sub_22CC068D0()
{
  return &protocol witness table for SleepStageWidgetViewModel;
}

unint64_t sub_22CC068DC(uint64_t a1)
{
  unint64_t result;

  result = sub_22CC06900();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22CC06900()
{
  unint64_t result;

  result = qword_254066500;
  if (!qword_254066500)
  {
    result = MEMORY[0x22E3063F8](&unk_22CC6648C, &type metadata for SleepStageWidgetRectangularView);
    atomic_store(result, (unint64_t *)&qword_254066500);
  }
  return result;
}

uint64_t sub_22CC06944()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22CC06954@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  char v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  uint64_t v27;
  _QWORD v29[2];
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  void *v40;
  char v41;

  v37 = a1;
  sub_22CC082A8(0, &qword_254065340, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v2 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v33 = (char *)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v29 - v4;
  sub_22CC07A70();
  v35 = *(_QWORD *)(v6 - 8);
  v36 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC07AE8(0);
  v34 = v9;
  v32 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v31 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v30 = (char *)v29 - v12;
  v14 = *(void **)(v1 + 8);
  v15 = *(void **)(v1 + 16);
  v16 = *(_BYTE *)(v1 + 24);
  v38 = *(void **)v1;
  v13 = v38;
  v39 = v14;
  v40 = v15;
  v41 = v16;
  v29[1] = sub_22CC06CC4();
  v38 = v13;
  v39 = v14;
  v40 = v15;
  v41 = v16;
  sub_22CC06E1C();
  sub_22CC0812C(v13, v14, v15);
  if (qword_254066790 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  sub_22CC0816C((uint64_t)v13, v14, v15);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v13;
  *(_QWORD *)(v17 + 24) = v14;
  *(_QWORD *)(v17 + 32) = v15;
  *(_BYTE *)(v17 + 40) = v16;
  sub_22CC0812C(v13, v14, v15);
  type metadata accessor for SleepStageResultsView(0);
  sub_22CC07B74(&qword_2540664E0, type metadata accessor for SleepStageResultsView, (uint64_t)&unk_22CC68BD0);
  sub_22CC659A0();
  v18 = (id)HKSPSleepURL();
  if (v18)
  {
    v19 = v18;
    v20 = (uint64_t)v33;
    sub_22CC64FD4();

    v21 = sub_22CC64FE0();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 0, 1, v21);
  }
  else
  {
    v22 = sub_22CC64FE0();
    v20 = (uint64_t)v33;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v33, 1, 1, v22);
  }
  sub_22CC081F0(v20, (uint64_t)v5);
  sub_22CC07B74(&qword_255C3C980, (uint64_t (*)(uint64_t))sub_22CC07A70, MEMORY[0x24BE49E70]);
  v23 = v31;
  v24 = v36;
  sub_22CC65778();
  sub_22CC0824C((uint64_t)v5);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v24);
  v25 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
  v26 = v30;
  v27 = v34;
  v25(v30, v23, v34);
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v25)(v37, v26, v27);
}

uint64_t sub_22CC06CC4()
{
  uint64_t v0;
  id v1;
  void *v2;
  void *v3;
  char v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v1 = *(id *)v0;
  v2 = *(void **)(v0 + 8);
  v3 = *(void **)(v0 + 16);
  v4 = *(_BYTE *)(v0 + 24);
  sub_22CC0812C(*(id *)v0, v2, v3);
  v5 = sub_22CC070E0(v1, v2, v3, v4);
  sub_22CC0816C((uint64_t)v1, v2, v3);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v16 = MEMORY[0x24BEE4AF8];
    sub_22CC085FC(0, v6, 0);
    v7 = v16;
    sub_22CC08C70();
    v8 = v5 + 40;
    do
    {
      v9 = sub_22CC65D18();
      v11 = v10;
      v13 = *(_QWORD *)(v16 + 16);
      v12 = *(_QWORD *)(v16 + 24);
      if (v13 >= v12 >> 1)
        sub_22CC085FC(v12 > 1, v13 + 1, 1);
      v8 += 16;
      *(_QWORD *)(v16 + 16) = v13 + 1;
      v14 = v16 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v9;
      *(_QWORD *)(v14 + 40) = v11;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return v7;
}

uint64_t sub_22CC06E1C()
{
  uint64_t v0;
  id v1;
  void *v2;
  void *v3;
  int v4;
  BOOL v5;
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(id *)v0;
  v2 = *(void **)(v0 + 8);
  v3 = *(void **)(v0 + 16);
  v4 = *(unsigned __int8 *)(v0 + 24);
  if (v4 == 3)
  {
    if (v1)
      v5 = v2 == 0;
    else
      v5 = 1;
    if (v5)
      return sub_22CC07934();
  }
  else if (v4 == 2 || v1 == 0 || v2 == 0)
  {
    return sub_22CC07934();
  }
  sub_22CC0812C(*(id *)v0, *(void **)(v0 + 8), *(void **)(v0 + 16));
  objc_msgSend(v2, sel_sleepDuration);
  if (v9 <= COERCE_DOUBLE(1) || v9 <= 0.0)
  {
    objc_msgSend(v2, sel_inBedDuration);
    v11 = v10;
    sub_22CC0816C((uint64_t)v1, v2, v3);
    if (v11 > COERCE_DOUBLE(1) && v11 > 0.0)
      goto LABEL_21;
    return sub_22CC07934();
  }
  sub_22CC0816C((uint64_t)v1, v2, v3);
LABEL_21:
  sub_22CC08D64(0, (unint64_t *)&qword_254065EB0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_22CC663F0;
  sub_22CC0812C(v1, v2, v3);
  v13 = sub_22CC07448(v1, v2, v3, v4);
  v15 = v14;
  sub_22CC0816C((uint64_t)v1, v2, v3);
  *(_QWORD *)(v12 + 32) = v13;
  *(_QWORD *)(v12 + 40) = v15;
  return v12;
}

id sub_22CC06FA0@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t *v14;
  char *v15;
  uint64_t v17;

  v10 = type metadata accessor for SleepStageResultsView(0);
  MEMORY[0x24BDAC7A8]();
  v12 = (uint64_t *)((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v12 = swift_getKeyPath();
  v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_22CC082A8(0, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v14 = (uint64_t *)((char *)v12 + *(int *)(v10 + 20));
  *v14 = swift_getKeyPath();
  sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], v13);
  swift_storeEnumTagMultiPayload();
  v15 = (char *)v12 + *(int *)(v10 + 24);
  *(_QWORD *)v15 = a1;
  *((_QWORD *)v15 + 1) = a2;
  *((_QWORD *)v15 + 2) = a3;
  v15[24] = a4;
  sub_22CC08308((uint64_t)v12, a5);
  return sub_22CC0812C(a1, a2, a3);
}

uint64_t sub_22CC070E0(void *a1, void *a2, void *a3, char a4)
{
  uint64_t inited;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v25;

  sub_22CC08D64(0, (unint64_t *)&qword_254065EB0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22CC66400;
  v9 = (unint64_t)sub_22CC07BB4(a1, a2, a3, a4);
  v11 = v10;
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(inited + 40) = v10;
  v12 = (unint64_t)sub_22CC09484(a1, a2, a3, a4);
  v14 = v13;
  *(_QWORD *)(inited + 48) = v12;
  *(_QWORD *)(inited + 56) = v13;
  v15 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0)
    v15 = v9 & 0xFFFFFFFFFFFFLL;
  v16 = MEMORY[0x24BEE4AF8];
  if (v15)
  {
    v25 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_22CC085FC(0, 1, 1);
    v16 = v25;
    v18 = *(_QWORD *)(v25 + 16);
    v17 = *(_QWORD *)(v25 + 24);
    if (v18 >= v17 >> 1)
    {
      sub_22CC085FC(v17 > 1, v18 + 1, 1);
      v16 = v25;
    }
    *(_QWORD *)(v16 + 16) = v18 + 1;
    v19 = v16 + 16 * v18;
    *(_QWORD *)(v19 + 32) = v9;
    *(_QWORD *)(v19 + 40) = v11;
  }
  v20 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0)
    v20 = v12 & 0xFFFFFFFFFFFFLL;
  if (v20)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_22CC085FC(0, *(_QWORD *)(v16 + 16) + 1, 1);
    v22 = *(_QWORD *)(v16 + 16);
    v21 = *(_QWORD *)(v16 + 24);
    if (v22 >= v21 >> 1)
      sub_22CC085FC(v21 > 1, v22 + 1, 1);
    *(_QWORD *)(v16 + 16) = v22 + 1;
    v23 = v16 + 16 * v22;
    *(_QWORD *)(v23 + 32) = v12;
    *(_QWORD *)(v23 + 40) = v14;
  }
  swift_release();
  return v16;
}

uint64_t sub_22CC072AC()
{
  uint64_t inited;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;

  sub_22CC08D64(0, (unint64_t *)&qword_254065EB0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_22CC66400;
  v1 = (unint64_t)sub_22CC07E70();
  v3 = v2;
  *(_QWORD *)(inited + 32) = v1;
  *(_QWORD *)(inited + 40) = v2;
  v4 = (unint64_t)sub_22CC09740();
  v6 = v5;
  *(_QWORD *)(inited + 48) = v4;
  *(_QWORD *)(inited + 56) = v5;
  v7 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0)
    v7 = v1 & 0xFFFFFFFFFFFFLL;
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v17 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_22CC085FC(0, 1, 1);
    v8 = v17;
    v10 = *(_QWORD *)(v17 + 16);
    v9 = *(_QWORD *)(v17 + 24);
    if (v10 >= v9 >> 1)
    {
      sub_22CC085FC(v9 > 1, v10 + 1, 1);
      v8 = v17;
    }
    *(_QWORD *)(v8 + 16) = v10 + 1;
    v11 = v8 + 16 * v10;
    *(_QWORD *)(v11 + 32) = v1;
    *(_QWORD *)(v11 + 40) = v3;
  }
  v12 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0)
    v12 = v4 & 0xFFFFFFFFFFFFLL;
  if (v12)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_22CC085FC(0, *(_QWORD *)(v8 + 16) + 1, 1);
    v14 = *(_QWORD *)(v8 + 16);
    v13 = *(_QWORD *)(v8 + 24);
    if (v14 >= v13 >> 1)
      sub_22CC085FC(v13 > 1, v14 + 1, 1);
    *(_QWORD *)(v8 + 16) = v14 + 1;
    v15 = v8 + 16 * v14;
    *(_QWORD *)(v15 + 32) = v4;
    *(_QWORD *)(v15 + 40) = v6;
  }
  swift_release();
  return v8;
}

uint64_t sub_22CC07448(void *a1, void *a2, void *a3, char a4)
{
  id v10;
  id v11;
  id v12;
  void *v13;
  double v14;
  double v15;
  id v16;
  id v17;
  void *v18;
  double v19;
  double v20;

  if (a4 != 2 && a1 != 0 && a3 != 0)
  {
    sub_22CC0812C(a1, a2, a3);
    v10 = a2;
    v11 = a3;
    swift_bridgeObjectRetain();
    v12 = objc_msgSend(v11, sel_averageSleepDuration);
    if (v12)
    {
      v13 = v12;
      objc_msgSend(v12, sel__value);
      v15 = v14;

      sub_22CC0816C((uint64_t)a1, a2, a3);
      sub_22CC0816C((uint64_t)a1, a2, a3);
      if (v15 > COERCE_DOUBLE(1))
        goto LABEL_9;
    }
    else
    {
      sub_22CC0816C((uint64_t)a1, a2, a3);
      sub_22CC0816C((uint64_t)a1, a2, a3);
    }
    sub_22CC0812C(a1, a2, a3);
    swift_bridgeObjectRetain();
    v16 = v10;
    v17 = objc_msgSend(v11, sel_averageInBedDuration);
    if (v17)
    {
      v18 = v17;
      objc_msgSend(v17, sel__value);
      v20 = v19;

      sub_22CC0816C((uint64_t)a1, a2, a3);
      sub_22CC0816C((uint64_t)a1, a2, a3);
      if (v20 > COERCE_DOUBLE(1))
      {
        if (qword_254065700 == -1)
          return sub_22CC64F74();
        goto LABEL_20;
      }
    }
    else
    {
      sub_22CC0816C((uint64_t)a1, a2, a3);
      sub_22CC0816C((uint64_t)a1, a2, a3);
    }
  }
LABEL_9:
  if (qword_254065700 != -1)
LABEL_20:
    swift_once();
  return sub_22CC64F74();
}

uint64_t sub_22CC076B0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  BOOL v4;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  double v13;
  double v14;
  id v15;
  id v16;
  void *v17;
  double v18;
  double v19;

  v1 = v0 + *(int *)(type metadata accessor for SleepWidgetViewModel() + 40);
  v2 = *(void **)v1;
  v3 = *(void **)(v1 + 16);
  if (*(_QWORD *)v1)
    v4 = v3 == 0;
  else
    v4 = 1;
  if (!v4)
  {
    v6 = *(void **)(v1 + 8);
    v7 = v6;
    v8 = v3;
    swift_bridgeObjectRetain();
    v9 = v7;
    v10 = v8;
    swift_bridgeObjectRetain();
    v11 = objc_msgSend(v10, sel_averageSleepDuration);
    if (v11)
    {
      v12 = v11;
      objc_msgSend(v11, sel__value);
      v14 = v13;

      sub_22CC0816C((uint64_t)v2, v6, v3);
      sub_22CC0816C((uint64_t)v2, v6, v3);
      if (v14 > COERCE_DOUBLE(1))
        goto LABEL_6;
    }
    else
    {
      sub_22CC0816C((uint64_t)v2, v6, v3);
      sub_22CC0816C((uint64_t)v2, v6, v3);
    }
    sub_22CC0812C(v2, v6, v3);
    swift_bridgeObjectRetain();
    v15 = v9;
    v16 = objc_msgSend(v10, sel_averageInBedDuration);
    if (v16)
    {
      v17 = v16;
      objc_msgSend(v16, sel__value);
      v19 = v18;

      sub_22CC0816C((uint64_t)v2, v6, v3);
      sub_22CC0816C((uint64_t)v2, v6, v3);
      if (v19 > COERCE_DOUBLE(1))
      {
        if (qword_254065700 == -1)
          return sub_22CC64F74();
        goto LABEL_17;
      }
    }
    else
    {
      sub_22CC0816C((uint64_t)v2, v6, v3);
      sub_22CC0816C((uint64_t)v2, v6, v3);
    }
  }
LABEL_6:
  if (qword_254065700 != -1)
LABEL_17:
    swift_once();
  return sub_22CC64F74();
}

uint64_t sub_22CC07934()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_22CC08D64(0, (unint64_t *)&qword_254065EB0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_22CC66400;
  if (qword_254065700 != -1)
    swift_once();
  *(_QWORD *)(v0 + 32) = sub_22CC64F74();
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 48) = sub_22CC64F74();
  *(_QWORD *)(v0 + 56) = v2;
  return v0;
}

uint64_t sub_22CC07A54()
{
  return sub_22CC657A8();
}

void sub_22CC07A70()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3C970)
  {
    type metadata accessor for SleepStageResultsView(255);
    sub_22CC07B74(&qword_2540664E0, type metadata accessor for SleepStageResultsView, (uint64_t)&unk_22CC68BD0);
    v0 = sub_22CC659AC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3C970);
  }
}

void sub_22CC07AE8(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_255C3C978)
  {
    sub_22CC07A70();
    v5[0] = v2;
    v5[1] = sub_22CC07B74(&qword_255C3C980, (uint64_t (*)(uint64_t))sub_22CC07A70, MEMORY[0x24BE49E70]);
    v3 = MEMORY[0x22E3063BC](a1, v5, MEMORY[0x24BDFAC50], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_255C3C978);
  }
}

uint64_t sub_22CC07B74(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x22E3063F8](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

void *sub_22CC07BB4(void *a1, void *a2, void *a3, char a4)
{
  void *v4;
  id v9;
  id v10;
  id v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  double v22;
  double v23;
  double v24;
  double v25;

  if (a4 == 2)
    return 0;
  v4 = 0;
  if (a1 && a3)
  {
    sub_22CC0812C(a1, a2, a3);
    v9 = a2;
    v10 = a3;
    swift_bridgeObjectRetain();
    v11 = objc_msgSend(v10, sel_averageSleepDuration);
    if (v11)
    {
      v12 = v11;
      objc_msgSend(v11, sel__value);
      v14 = v13;

      sub_22CC0816C((uint64_t)a1, a2, a3);
      sub_22CC0816C((uint64_t)a1, a2, a3);
      if (v14 > COERCE_DOUBLE(1))
      {
        sub_22CC65BEC();
        v16 = v15;
        v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14F8]), sel_init);
        objc_msgSend(v17, sel_setUnitsStyle_, 5);
        objc_msgSend(v17, sel_setAllowedUnits_, 96);
        v18 = objc_msgSend(v17, sel_stringFromTimeInterval_, v16);
        if (v18)
          goto LABEL_9;
        goto LABEL_14;
      }
    }
    else
    {
      sub_22CC0816C((uint64_t)a1, a2, a3);
      sub_22CC0816C((uint64_t)a1, a2, a3);
    }
    sub_22CC0812C(a1, a2, a3);
    swift_bridgeObjectRetain();
    v20 = v9;
    v21 = objc_msgSend(v10, sel_averageInBedDuration);
    v4 = v21;
    if (!v21)
    {
      sub_22CC0816C((uint64_t)a1, a2, a3);
      sub_22CC0816C((uint64_t)a1, a2, a3);
      return v4;
    }
    objc_msgSend(v21, sel__value);
    v23 = v22;

    sub_22CC0816C((uint64_t)a1, a2, a3);
    sub_22CC0816C((uint64_t)a1, a2, a3);
    if (v23 <= COERCE_DOUBLE(1))
      return 0;
    sub_22CC65BEC();
    v25 = v24;
    v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14F8]), sel_init);
    objc_msgSend(v17, sel_setUnitsStyle_, 5);
    objc_msgSend(v17, sel_setAllowedUnits_, 96);
    v18 = objc_msgSend(v17, sel_stringFromTimeInterval_, v25);
    if (v18)
    {
LABEL_9:
      v19 = v18;
      v4 = (void *)sub_22CC65B2C();

      return v4;
    }
LABEL_14:

    return 0;
  }
  return v4;
}

void *sub_22CC07E70()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  double v21;
  double v22;
  double v23;
  double v24;

  v1 = v0 + *(int *)(type metadata accessor for SleepWidgetViewModel() + 40);
  v2 = *(void **)v1;
  if (!*(_QWORD *)v1)
    return 0;
  v3 = *(void **)(v1 + 16);
  if (v3)
  {
    v4 = *(void **)(v1 + 8);
    v5 = v4;
    v6 = v3;
    swift_bridgeObjectRetain();
    v7 = v5;
    v8 = v6;
    swift_bridgeObjectRetain();
    v9 = objc_msgSend(v8, sel_averageSleepDuration);
    if (v9)
    {
      v10 = v9;
      objc_msgSend(v9, sel__value);
      v12 = v11;

      sub_22CC0816C((uint64_t)v2, v4, v3);
      sub_22CC0816C((uint64_t)v2, v4, v3);
      if (v12 > COERCE_DOUBLE(1))
      {
        sub_22CC65BEC();
        v14 = v13;
        v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14F8]), sel_init);
        objc_msgSend(v15, sel_setUnitsStyle_, 5);
        objc_msgSend(v15, sel_setAllowedUnits_, 96);
        v16 = objc_msgSend(v15, sel_stringFromTimeInterval_, v14);
        if (v16)
        {
LABEL_6:
          v17 = v16;
          v3 = (void *)sub_22CC65B2C();

          return v3;
        }
        goto LABEL_11;
      }
    }
    else
    {
      sub_22CC0816C((uint64_t)v2, v4, v3);
      sub_22CC0816C((uint64_t)v2, v4, v3);
    }
    sub_22CC0812C(v2, v4, v3);
    swift_bridgeObjectRetain();
    v18 = v7;
    v19 = objc_msgSend(v8, sel_averageInBedDuration);
    if (!v19)
    {
      sub_22CC0816C((uint64_t)v2, v4, v3);
      sub_22CC0816C((uint64_t)v2, v4, v3);
      return 0;
    }
    v20 = v19;
    objc_msgSend(v19, sel__value);
    v22 = v21;

    sub_22CC0816C((uint64_t)v2, v4, v3);
    sub_22CC0816C((uint64_t)v2, v4, v3);
    if (v22 <= COERCE_DOUBLE(1))
      return 0;
    sub_22CC65BEC();
    v24 = v23;
    v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14F8]), sel_init);
    objc_msgSend(v15, sel_setUnitsStyle_, 5);
    objc_msgSend(v15, sel_setAllowedUnits_, 96);
    v16 = objc_msgSend(v15, sel_stringFromTimeInterval_, v24);
    if (v16)
      goto LABEL_6;
LABEL_11:

    return 0;
  }
  return v3;
}

id sub_22CC0812C(id result, void *a2, void *a3)
{
  id v3;

  if (result)
  {
    v3 = a3;
    swift_bridgeObjectRetain();
    return a2;
  }
  return result;
}

void sub_22CC0816C(uint64_t a1, void *a2, void *a3)
{
  if (a1)
  {
    swift_bridgeObjectRelease();

  }
}

uint64_t sub_22CC081A8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
  {
    swift_bridgeObjectRelease();

  }
  return swift_deallocObject();
}

id sub_22CC081E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_22CC06FA0(*(void **)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(_BYTE *)(v1 + 40), a1);
}

uint64_t sub_22CC081F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_22CC082A8(0, &qword_254065340, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22CC0824C(uint64_t a1)
{
  uint64_t v2;

  sub_22CC082A8(0, &qword_254065340, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_22CC082A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_22CC08308(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SleepStageResultsView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_22CC0834C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_22CC08360(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_22CC08374(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_22CC08388@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_22CC08398()
{
  sub_22CC65EE0();
  sub_22CC65EEC();
  return sub_22CC65EF8();
}

uint64_t sub_22CC083DC()
{
  return sub_22CC65EEC();
}

uint64_t sub_22CC08404()
{
  sub_22CC65EE0();
  sub_22CC65EEC();
  return sub_22CC65EF8();
}

BOOL sub_22CC08444(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

void sub_22CC08474(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

void sub_22CC08480(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_22CC08488@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_22CC0849C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

_QWORD *sub_22CC084B0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_22CC084DC@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_22CC08500(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_22CC08514@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_22CC08528(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_22CC0853C(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_22CC08550(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_22CC08564()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_22CC08574()
{
  return sub_22CC65D3C();
}

_QWORD *sub_22CC0858C(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

_QWORD *sub_22CC085A0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

BOOL sub_22CC085AC(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_22CC085C0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_22CC08EE8(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_22CC085FC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_22CC0866C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_22CC08618(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_22CC087E8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_22CC08634(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_22CC08980(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_22CC08650(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_22CC08AF0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_22CC0866C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_22CC08D64(0, (unint64_t *)&qword_254065EB0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_22CC65E74();
  __break(1u);
  return result;
}

uint64_t sub_22CC087E8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_22CC08D64(0, &qword_255C3C998, (uint64_t)&type metadata for SleepWidgetChartBar, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8])
      memmove(v12, v13, 48 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_22CC65E74();
  __break(1u);
  return result;
}

uint64_t sub_22CC08980(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_22CC082A8(0, &qword_255C3C988, (uint64_t (*)(uint64_t))type metadata accessor for HKCategoryValueSleepAnalysis, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_22CC65E74();
  __break(1u);
  return result;
}

uint64_t sub_22CC08AF0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_22CC08D64(0, &qword_255C3C990, (uint64_t)&type metadata for Segment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  v14 = 24 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v12, v13, v14);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    memcpy(v12, v13, v14);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_22CC65E74();
  __break(1u);
  return result;
}

unint64_t sub_22CC08C70()
{
  unint64_t result;

  result = qword_2540656D0;
  if (!qword_2540656D0)
  {
    result = MEMORY[0x22E3063F8](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2540656D0);
  }
  return result;
}

void type metadata accessor for HKCategoryValueSleepAnalysis(uint64_t a1)
{
  sub_22CC08D64(a1, &qword_255C3C9A0, (uint64_t)&unk_24F76F6F0, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for HKSleepDaySummaryQueryOptions(uint64_t a1)
{
  sub_22CC08D64(a1, &qword_255C3C9A8, (uint64_t)&unk_24F76F710, MEMORY[0x24BEE4D40]);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for BarView.Range(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for BarView.Range(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for HKDayIndexRange(uint64_t a1)
{
  sub_22CC08D64(a1, &qword_255C3C9B0, (uint64_t)&unk_24F76F790, MEMORY[0x24BEE4D40]);
}

void sub_22CC08D64(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(0, a3);
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_22CC08DA8()
{
  sub_22CC07A70();
  sub_22CC07B74(&qword_255C3C980, (uint64_t (*)(uint64_t))sub_22CC07A70, MEMORY[0x24BE49E70]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22CC08E08()
{
  return sub_22CC07B74(&qword_255C3C9B8, (uint64_t (*)(uint64_t))type metadata accessor for HKSleepDaySummaryQueryOptions, (uint64_t)&unk_22CC665C4);
}

uint64_t sub_22CC08E34()
{
  return sub_22CC07B74(&qword_255C3C9C0, (uint64_t (*)(uint64_t))type metadata accessor for HKSleepDaySummaryQueryOptions, (uint64_t)&unk_22CC66594);
}

uint64_t sub_22CC08E60()
{
  return sub_22CC07B74(&qword_255C3C9C8, (uint64_t (*)(uint64_t))type metadata accessor for HKSleepDaySummaryQueryOptions, (uint64_t)&unk_22CC665EC);
}

uint64_t sub_22CC08E8C()
{
  return sub_22CC07B74(&qword_255C3C9D0, (uint64_t (*)(uint64_t))type metadata accessor for HKSleepDaySummaryQueryOptions, (uint64_t)&unk_22CC66624);
}

uint64_t sub_22CC08EB8()
{
  return sub_22CC07B74(qword_255C3C9D8, (uint64_t (*)(uint64_t))type metadata accessor for HKCategoryValueSleepAnalysis, (uint64_t)&unk_22CC66730);
}

uint64_t sub_22CC08EE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

ValueMetadata *type metadata accessor for SleepStageWidgetCircularView()
{
  return &type metadata for SleepStageWidgetCircularView;
}

unint64_t sub_22CC08F54(uint64_t a1)
{
  unint64_t result;

  result = sub_22CC08F78();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_22CC08F78()
{
  unint64_t result;

  result = qword_2540664F8;
  if (!qword_2540664F8)
  {
    result = MEMORY[0x22E3063F8](&unk_22CC6681C, &type metadata for SleepStageWidgetCircularView);
    atomic_store(result, (unint64_t *)&qword_2540664F8);
  }
  return result;
}

uint64_t sub_22CC08FBC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22CC08FCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  _QWORD v35[3];
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v2 = v1;
  v43 = a1;
  sub_22CC082A8(0, &qword_254065340, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v41 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v42 = (uint64_t)v35 - v6;
  v7 = sub_22CC659D0();
  MEMORY[0x24BDAC7A8](v7);
  v8 = sub_22CC65274();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_22CC659DC();
  v39 = *(_QWORD *)(v12 - 8);
  v40 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC09A00(0);
  v37 = *(_QWORD *)(v15 - 8);
  v38 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v36 = (char *)v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(void **)v2;
  v17 = *(void **)(v2 + 8);
  v19 = *(void **)(v2 + 16);
  v20 = *(unsigned __int8 *)(v2 + 24);
  sub_22CC65268();
  v21 = sub_22CC65238();
  v35[1] = v22;
  v35[2] = v21;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v20 != 2)
  {
    if (v18)
    {
      if (v17)
      {
        objc_msgSend(v17, sel_sleepDuration);
        if (v23 > COERCE_DOUBLE(1) && v23 > 0.0)
        {
          sub_22CC082A8(0, qword_255C3CA10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
          sub_22CC64F5C();
          *(_OWORD *)(swift_allocObject() + 16) = xmmword_22CC663F0;
          sub_22CC0812C(v18, v17, v19);
          sub_22CC09484(v18, v17, v19, v20);
          sub_22CC0816C((uint64_t)v18, v17, v19);
          sub_22CC65B74();
          swift_bridgeObjectRelease();
        }
      }
    }
  }
  v24 = MEMORY[0x24BEE4AF8];
  sub_22CC0812C(v18, v17, v19);
  if (qword_254066790 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  sub_22CC0816C((uint64_t)v18, v17, v19);
  v44 = v24;
  v25 = (uint64_t (*)(uint64_t))MEMORY[0x24BE49EA8];
  sub_22CC07B74(&qword_254066778, (uint64_t (*)(uint64_t))MEMORY[0x24BE49EA8], MEMORY[0x24BE49EB0]);
  sub_22CC082A8(0, &qword_2540667B0, v25, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_22CC09A8C();
  sub_22CC65D48();
  sub_22CC659B8();
  v26 = (id)HKSPSleepURL();
  if (v26)
  {
    v27 = v26;
    v28 = (uint64_t)v41;
    sub_22CC64FD4();

    v29 = sub_22CC64FE0();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 0, 1, v29);
  }
  else
  {
    v30 = sub_22CC64FE0();
    v28 = (uint64_t)v41;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v41, 1, 1, v30);
  }
  v31 = v42;
  sub_22CC081F0(v28, v42);
  sub_22CC07B74(&qword_254066780, (uint64_t (*)(uint64_t))MEMORY[0x24BE49EB8], MEMORY[0x24BE49E88]);
  v32 = v36;
  v33 = v40;
  sub_22CC65778();
  sub_22CC0824C(v31);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v14, v33);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v37 + 32))(v43, v32, v38);
}

void *sub_22CC09484(void *a1, void *a2, void *a3, char a4)
{
  void *v4;
  id v9;
  id v10;
  id v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  double v22;
  double v23;
  double v24;
  double v25;

  if (a4 == 2)
    return 0;
  v4 = 0;
  if (a1 && a3)
  {
    sub_22CC0812C(a1, a2, a3);
    v9 = a2;
    v10 = a3;
    swift_bridgeObjectRetain();
    v11 = objc_msgSend(v10, sel_averageSleepDuration);
    if (v11)
    {
      v12 = v11;
      objc_msgSend(v11, sel__value);
      v14 = v13;

      sub_22CC0816C((uint64_t)a1, a2, a3);
      sub_22CC0816C((uint64_t)a1, a2, a3);
      if (v14 > COERCE_DOUBLE(1))
      {
        sub_22CC65BEC();
        v16 = v15;
        v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14F8]), sel_init);
        objc_msgSend(v17, sel_setUnitsStyle_, 1);
        objc_msgSend(v17, sel_setAllowedUnits_, 96);
        v18 = objc_msgSend(v17, sel_stringFromTimeInterval_, v16);
        if (v18)
          goto LABEL_9;
        goto LABEL_14;
      }
    }
    else
    {
      sub_22CC0816C((uint64_t)a1, a2, a3);
      sub_22CC0816C((uint64_t)a1, a2, a3);
    }
    sub_22CC0812C(a1, a2, a3);
    swift_bridgeObjectRetain();
    v20 = v9;
    v21 = objc_msgSend(v10, sel_averageInBedDuration);
    v4 = v21;
    if (!v21)
    {
      sub_22CC0816C((uint64_t)a1, a2, a3);
      sub_22CC0816C((uint64_t)a1, a2, a3);
      return v4;
    }
    objc_msgSend(v21, sel__value);
    v23 = v22;

    sub_22CC0816C((uint64_t)a1, a2, a3);
    sub_22CC0816C((uint64_t)a1, a2, a3);
    if (v23 <= COERCE_DOUBLE(1))
      return 0;
    sub_22CC65BEC();
    v25 = v24;
    v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14F8]), sel_init);
    objc_msgSend(v17, sel_setUnitsStyle_, 1);
    objc_msgSend(v17, sel_setAllowedUnits_, 96);
    v18 = objc_msgSend(v17, sel_stringFromTimeInterval_, v25);
    if (v18)
    {
LABEL_9:
      v19 = v18;
      v4 = (void *)sub_22CC65B2C();

      return v4;
    }
LABEL_14:

    return 0;
  }
  return v4;
}

void *sub_22CC09740()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  double v21;
  double v22;
  double v23;
  double v24;

  v1 = v0 + *(int *)(type metadata accessor for SleepWidgetViewModel() + 40);
  v2 = *(void **)v1;
  if (!*(_QWORD *)v1)
    return 0;
  v3 = *(void **)(v1 + 16);
  if (v3)
  {
    v4 = *(void **)(v1 + 8);
    v5 = v4;
    v6 = v3;
    swift_bridgeObjectRetain();
    v7 = v5;
    v8 = v6;
    swift_bridgeObjectRetain();
    v9 = objc_msgSend(v8, sel_averageSleepDuration);
    if (v9)
    {
      v10 = v9;
      objc_msgSend(v9, sel__value);
      v12 = v11;

      sub_22CC0816C((uint64_t)v2, v4, v3);
      sub_22CC0816C((uint64_t)v2, v4, v3);
      if (v12 > COERCE_DOUBLE(1))
      {
        sub_22CC65BEC();
        v14 = v13;
        v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14F8]), sel_init);
        objc_msgSend(v15, sel_setUnitsStyle_, 1);
        objc_msgSend(v15, sel_setAllowedUnits_, 96);
        v16 = objc_msgSend(v15, sel_stringFromTimeInterval_, v14);
        if (v16)
        {
LABEL_6:
          v17 = v16;
          v3 = (void *)sub_22CC65B2C();

          return v3;
        }
        goto LABEL_11;
      }
    }
    else
    {
      sub_22CC0816C((uint64_t)v2, v4, v3);
      sub_22CC0816C((uint64_t)v2, v4, v3);
    }
    sub_22CC0812C(v2, v4, v3);
    swift_bridgeObjectRetain();
    v18 = v7;
    v19 = objc_msgSend(v8, sel_averageInBedDuration);
    if (!v19)
    {
      sub_22CC0816C((uint64_t)v2, v4, v3);
      sub_22CC0816C((uint64_t)v2, v4, v3);
      return 0;
    }
    v20 = v19;
    objc_msgSend(v19, sel__value);
    v22 = v21;

    sub_22CC0816C((uint64_t)v2, v4, v3);
    sub_22CC0816C((uint64_t)v2, v4, v3);
    if (v22 <= COERCE_DOUBLE(1))
      return 0;
    sub_22CC65BEC();
    v24 = v23;
    v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14F8]), sel_init);
    objc_msgSend(v15, sel_setUnitsStyle_, 1);
    objc_msgSend(v15, sel_setAllowedUnits_, 96);
    v16 = objc_msgSend(v15, sel_stringFromTimeInterval_, v24);
    if (v16)
      goto LABEL_6;
LABEL_11:

    return 0;
  }
  return v3;
}

void sub_22CC09A00(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  if (!qword_255C3CA08)
  {
    v4[0] = sub_22CC659DC();
    v4[1] = sub_22CC07B74(&qword_254066780, (uint64_t (*)(uint64_t))MEMORY[0x24BE49EB8], MEMORY[0x24BE49E88]);
    v2 = MEMORY[0x22E3063BC](a1, v4, MEMORY[0x24BDFAC50], 0);
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_255C3CA08);
  }
}

unint64_t sub_22CC09A8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2540667B8;
  if (!qword_2540667B8)
  {
    sub_22CC082A8(255, &qword_2540667B0, (uint64_t (*)(uint64_t))MEMORY[0x24BE49EA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2540667B8);
  }
  return result;
}

uint64_t sub_22CC09AEC()
{
  sub_22CC659DC();
  sub_22CC07B74(&qword_254066780, (uint64_t (*)(uint64_t))MEMORY[0x24BE49EB8], MEMORY[0x24BE49E88]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22CC09B4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = sub_22CC652BC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC652A4();
  v6 = sub_22CC652B0();
  v7 = sub_22CC65C64();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v18 = v9;
    *(_DWORD *)v8 = 136446210;
    v17 = sub_22CC5C47C(0xD000000000000020, 0x800000022CC668C0, &v18);
    sub_22CC65D00();
    _os_log_impl(&dword_22CC04000, v6, v7, "[%{public}s] Returning placeholder for sleep stage widget...", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E306470](v9, -1, -1);
    MEMORY[0x22E306470](v8, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_22CC65034();
  v10 = (int *)type metadata accessor for SleepStageWidgetEntry(0);
  v11 = a1 + v10[5];
  sub_22CC65034();
  v12 = sub_22CC6504C();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 0, 1, v12);
  v13 = a1 + v10[7];
  v14 = sub_22CC65ACC();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  v16 = a1 + v10[6];
  *(_QWORD *)v16 = 0;
  *(_QWORD *)(v16 + 8) = 0;
  *(_QWORD *)(v16 + 16) = 0;
  *(_BYTE *)(v16 + 24) = 3;
  return result;
}

void sub_22CC09D64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  unint64_t v26;
  char *v27;
  uint64_t (**v28)(uint64_t);
  id v29;
  id v30;
  id v31;
  void *v32;
  void *v33;
  void *v34;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  void *v43;

  v4 = v3;
  v38 = a2;
  v39 = a3;
  v6 = type metadata accessor for SleepStageWidgetTimelineProvider(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22CC652BC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC652A4();
  v14 = sub_22CC652B0();
  v15 = sub_22CC65C64();
  if (os_log_type_enabled(v14, v15))
  {
    v35[1] = a1;
    v16 = swift_slowAlloc();
    v36 = v7;
    v17 = (uint8_t *)v16;
    v18 = swift_slowAlloc();
    v37 = v8;
    v19 = v18;
    v41 = (void *)v18;
    v35[0] = v10;
    *(_DWORD *)v17 = 136446210;
    v40 = sub_22CC5C47C(0xD000000000000020, 0x800000022CC668C0, (uint64_t *)&v41);
    sub_22CC65D00();
    _os_log_impl(&dword_22CC04000, v14, v15, "[%{public}s] Getting snapshot for sleep stage widget...", v17, 0xCu);
    swift_arrayDestroy();
    v20 = v19;
    v8 = v37;
    MEMORY[0x22E306470](v20, -1, -1);
    v21 = v17;
    v7 = v36;
    MEMORY[0x22E306470](v21, -1, -1);

    (*(void (**)(char *, _QWORD))(v11 + 8))(v13, v35[0]);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v38;
  *(_QWORD *)(v22 + 24) = v39;
  swift_retain();
  sub_22CC65AD8();
  v24 = (void *)v4[3];
  v25 = (void *)v4[4];
  v41 = (void *)v4[2];
  v23 = v41;
  v42 = v24;
  v43 = v25;
  sub_22CC0DE10((uint64_t)v4, (uint64_t)v9, type metadata accessor for SleepStageWidgetTimelineProvider);
  v26 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v27 = (char *)swift_allocObject();
  sub_22CC0DDCC((uint64_t)v9, (uint64_t)&v27[v26], type metadata accessor for SleepStageWidgetTimelineProvider);
  v28 = (uint64_t (**)(uint64_t))&v27[(v8 + v26 + 7) & 0xFFFFFFFFFFFFFFF8];
  *v28 = sub_22CC0DDB0;
  v28[1] = (uint64_t (*)(uint64_t))v22;
  v29 = v23;
  v30 = v24;
  v31 = v25;
  swift_retain();
  SleepWidgetViewModelProvider.currentSleepStageWidgetViewModel(showLiveContent:completion:)(1, (void (*)(void **, uint64_t))sub_22CC0DAEC, v27);
  swift_release();
  v32 = v41;
  v33 = v42;
  v34 = v43;
  swift_release();

}

uint64_t sub_22CC0A060(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint8_t *v15;
  _QWORD v17[3];
  uint64_t v18;

  v6 = sub_22CC652BC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC652A4();
  v10 = sub_22CC652B0();
  v11 = sub_22CC65C64();
  if (os_log_type_enabled(v10, v11))
  {
    v17[1] = a3;
    v12 = swift_slowAlloc();
    v17[0] = a1;
    v13 = (uint8_t *)v12;
    v14 = swift_slowAlloc();
    v18 = v14;
    *(_DWORD *)v13 = 136446210;
    v17[2] = sub_22CC5C47C(0xD000000000000020, 0x800000022CC668C0, &v18);
    sub_22CC65D00();
    _os_log_impl(&dword_22CC04000, v10, v11, "[%{public}s] Returning snapshot for sleep stage widget", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E306470](v14, -1, -1);
    v15 = v13;
    a1 = v17[0];
    MEMORY[0x22E306470](v15, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return a2(a1);
}

void sub_22CC0A218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  unint64_t v26;
  char *v27;
  uint64_t (**v28)(uint64_t);
  id v29;
  id v30;
  id v31;
  void *v32;
  void *v33;
  void *v34;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  void *v43;

  v4 = v3;
  v38 = a2;
  v39 = a3;
  v6 = type metadata accessor for SleepStageWidgetTimelineProvider(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22CC652BC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC652A4();
  v14 = sub_22CC652B0();
  v15 = sub_22CC65C64();
  if (os_log_type_enabled(v14, v15))
  {
    v35[1] = a1;
    v16 = swift_slowAlloc();
    v36 = v7;
    v17 = (uint8_t *)v16;
    v18 = swift_slowAlloc();
    v37 = v8;
    v19 = v18;
    v41 = (void *)v18;
    v35[0] = v10;
    *(_DWORD *)v17 = 136446210;
    v40 = sub_22CC5C47C(0xD000000000000020, 0x800000022CC668C0, (uint64_t *)&v41);
    sub_22CC65D00();
    _os_log_impl(&dword_22CC04000, v14, v15, "[%{public}s] Getting timeline for sleep stage widget...", v17, 0xCu);
    swift_arrayDestroy();
    v20 = v19;
    v8 = v37;
    MEMORY[0x22E306470](v20, -1, -1);
    v21 = v17;
    v7 = v36;
    MEMORY[0x22E306470](v21, -1, -1);

    (*(void (**)(char *, _QWORD))(v11 + 8))(v13, v35[0]);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v38;
  *(_QWORD *)(v22 + 24) = v39;
  swift_retain();
  sub_22CC65AD8();
  v24 = (void *)v4[3];
  v25 = (void *)v4[4];
  v41 = (void *)v4[2];
  v23 = v41;
  v42 = v24;
  v43 = v25;
  sub_22CC0DE10((uint64_t)v4, (uint64_t)v9, type metadata accessor for SleepStageWidgetTimelineProvider);
  v26 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v27 = (char *)swift_allocObject();
  sub_22CC0DDCC((uint64_t)v9, (uint64_t)&v27[v26], type metadata accessor for SleepStageWidgetTimelineProvider);
  v28 = (uint64_t (**)(uint64_t))&v27[(v8 + v26 + 7) & 0xFFFFFFFFFFFFFFF8];
  *v28 = sub_22CC0DB44;
  v28[1] = (uint64_t (*)(uint64_t))v22;
  v29 = v23;
  v30 = v24;
  v31 = v25;
  swift_retain();
  SleepWidgetViewModelProvider.currentSleepStageWidgetViewModel(showLiveContent:completion:)(1, (void (*)(void **, uint64_t))sub_22CC0DAEC, v27);
  swift_release();
  v32 = v41;
  v33 = v42;
  v34 = v43;
  swift_release();

}

uint64_t sub_22CC0A514(uint64_t a1, void (*a2)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(_QWORD);
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v48 = a1;
  sub_22CC0DC78();
  v50 = *(_QWORD *)(v3 - 8);
  v51 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v49 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v38 - v6;
  v8 = sub_22CC6504C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_22CC65AB4();
  v46 = *(_QWORD *)(v12 - 8);
  v47 = v12;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v44 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v45 = (char *)&v38 - v15;
  v16 = sub_22CC652BC();
  v43 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC652A4();
  v19 = sub_22CC652B0();
  v20 = sub_22CC65C64();
  if (os_log_type_enabled(v19, v20))
  {
    v41 = v8;
    v21 = swift_slowAlloc();
    v40 = v9;
    v22 = (uint8_t *)v21;
    v23 = swift_slowAlloc();
    v42 = a2;
    v24 = v23;
    v53 = v23;
    v39 = v16;
    *(_DWORD *)v22 = 136446210;
    v52 = sub_22CC5C47C(0xD000000000000020, 0x800000022CC668C0, &v53);
    v8 = v41;
    sub_22CC65D00();
    _os_log_impl(&dword_22CC04000, v19, v20, "[%{public}s] Returning timeline for sleep stage widget", v22, 0xCu);
    swift_arrayDestroy();
    v25 = v24;
    a2 = v42;
    MEMORY[0x22E306470](v25, -1, -1);
    v26 = v22;
    v9 = v40;
    MEMORY[0x22E306470](v26, -1, -1);

    (*(void (**)(char *, uint64_t))(v43 + 8))(v18, v39);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v43 + 8))(v18, v16);
  }
  v27 = type metadata accessor for SleepStageWidgetEntry(0);
  v28 = v48;
  sub_22CC0DCF0(v48 + *(int *)(v27 + 20), (uint64_t)v7, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  v30 = v45;
  if (v29 == 1)
  {
    sub_22CC0DD48((uint64_t)v7, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    sub_22CC65AA8();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    sub_22CC65A9C();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  sub_22CC082A8(0, qword_255C3CA48, type metadata accessor for SleepStageWidgetEntry, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v31 = *(unsigned __int8 *)(*(_QWORD *)(v27 - 8) + 80);
  v32 = (v31 + 32) & ~v31;
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_22CC663F0;
  sub_22CC0DE10(v28, v33 + v32, type metadata accessor for SleepStageWidgetEntry);
  v35 = v46;
  v34 = v47;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v44, v30, v47);
  sub_22CC07B74(&qword_254066508, type metadata accessor for SleepStageWidgetEntry, (uint64_t)&unk_22CC669A8);
  v36 = v49;
  sub_22CC65AE4();
  a2(v36);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v36, v51);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v30, v34);
}

uint64_t sub_22CC0A998(uint64_t a1, void *a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  void *v18;
  int v19;
  id v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  _BOOL4 v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t);
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  void *v70;
  char v71;

  v63 = a5;
  v64 = a4;
  v57 = a3;
  v62 = type metadata accessor for SleepStageWidgetEntry(0);
  MEMORY[0x24BDAC7A8](v62);
  v59 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = sub_22CC6504C();
  v61 = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66);
  v60 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_22CC652BC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v53 - v14;
  v16 = *(void **)a1;
  v17 = *(void **)(a1 + 8);
  v18 = *(void **)(a1 + 16);
  v19 = *(unsigned __int8 *)(a1 + 24);
  v65 = v13;
  if (a2)
  {
    v20 = a2;
    sub_22CC652A4();
    v21 = a2;
    v22 = a2;
    v23 = sub_22CC652B0();
    v24 = sub_22CC65C4C();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = swift_slowAlloc();
      v54 = v10;
      v55 = (uint64_t)v16;
      v56 = v9;
      v26 = v17;
      v27 = v18;
      v28 = v19;
      v29 = v25;
      v30 = swift_slowAlloc();
      v68 = v30;
      *(_DWORD *)v29 = 136446466;
      v67 = sub_22CC5C47C(0xD000000000000020, 0x800000022CC668C0, &v68);
      sub_22CC65D00();
      *(_WORD *)(v29 + 12) = 2082;
      v53 = v29 + 14;
      v67 = (uint64_t)a2;
      v31 = a2;
      sub_22CC0DAF0();
      v32 = sub_22CC65B44();
      v67 = sub_22CC5C47C(v32, v33, &v68);
      sub_22CC65D00();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22CC04000, v23, v24, "[%{public}s] Error getting sleep stage widget viewModel: %{public}s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x22E306470](v30, -1, -1);
      v34 = v29;
      v19 = v28;
      v18 = v27;
      v17 = v26;
      v16 = (void *)v55;
      v9 = v56;
      v10 = v54;
      MEMORY[0x22E306470](v34, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    v13 = v65;
  }
  sub_22CC652A4();
  sub_22CC0812C(v16, v17, v18);
  sub_22CC0812C(v16, v17, v18);
  v35 = sub_22CC652B0();
  v36 = sub_22CC65C64();
  v37 = os_log_type_enabled(v35, v36);
  v58 = v19;
  if (v37)
  {
    v38 = swift_slowAlloc();
    v55 = swift_slowAlloc();
    v67 = v55;
    *(_DWORD *)v38 = 136446466;
    v68 = sub_22CC5C47C(0xD000000000000020, 0x800000022CC668C0, &v67);
    sub_22CC65D00();
    *(_WORD *)(v38 + 12) = 2082;
    v68 = (uint64_t)v16;
    v69 = v17;
    v70 = v18;
    v71 = v19;
    sub_22CC0812C(v16, v17, v18);
    v39 = sub_22CC65B44();
    v56 = v9;
    v40 = v16;
    v68 = sub_22CC5C47C(v39, v41, &v67);
    sub_22CC65D00();
    swift_bridgeObjectRelease();
    sub_22CC0816C((uint64_t)v16, v17, v18);
    sub_22CC0816C((uint64_t)v16, v17, v18);
    _os_log_impl(&dword_22CC04000, v35, v36, "[%{public}s] Returning sleep stage widget viewModel: %{public}s", (uint8_t *)v38, 0x16u);
    v42 = v55;
    swift_arrayDestroy();
    MEMORY[0x22E306470](v42, -1, -1);
    MEMORY[0x22E306470](v38, -1, -1);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v65, v56);
    v43 = v66;
  }
  else
  {
    sub_22CC0816C((uint64_t)v16, v17, v18);
    sub_22CC0816C((uint64_t)v16, v17, v18);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    v43 = v66;
    v40 = v16;
  }
  v44 = v60;
  sub_22CC65040();
  v45 = v61;
  v46 = (uint64_t)v59;
  (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v59, v44, v43);
  type metadata accessor for SleepStageWidgetTimelineProvider(0);
  v47 = v62;
  Calendar.midnight(after:)(v46 + *(int *)(v62 + 20));
  v48 = v46 + *(int *)(v47 + 28);
  v68 = (uint64_t)v40;
  v69 = v17;
  v70 = v18;
  v49 = v58;
  v71 = v58;
  sub_22CC0812C(v40, v17, v18);
  SleepStageWidgetViewModel.timelineEntryRelevance.getter(v48);
  v50 = sub_22CC65ACC();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v48, 0, 1, v50);
  v51 = v46 + *(int *)(v47 + 24);
  *(_QWORD *)v51 = v40;
  *(_QWORD *)(v51 + 8) = v17;
  *(_QWORD *)(v51 + 16) = v18;
  *(_BYTE *)(v51 + 24) = v49;
  v64(v46);
  sub_22CC0DE54(v46, type metadata accessor for SleepStageWidgetEntry);
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v44, v66);
}

uint64_t sub_22CC0AFA4@<X0>(uint64_t a1@<X8>)
{
  return sub_22CC09B4C(a1);
}

uint64_t sub_22CC0AFC0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_22CC0ED00;
  return sub_22CC0B010(a1);
}

uint64_t sub_22CC0B010(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[3] = a1;
  v2[4] = v1;
  v2[5] = type metadata accessor for SleepStageWidgetEntry(0);
  v2[6] = swift_task_alloc();
  v3 = sub_22CC652BC();
  v2[7] = v3;
  v2[8] = *(_QWORD *)(v3 - 8);
  v2[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22CC0B094()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;

  sub_22CC652A4();
  v1 = sub_22CC652B0();
  v2 = sub_22CC65C64();
  if (os_log_type_enabled(v1, v2))
  {
    v4 = v0[8];
    v3 = v0[9];
    v5 = v0[7];
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v15 = v7;
    *(_DWORD *)v6 = 136446210;
    v0[2] = sub_22CC5C47C(0xD000000000000020, 0x800000022CC668C0, &v15);
    sub_22CC65D00();
    _os_log_impl(&dword_22CC04000, v1, v2, "[%{public}s] returning widget relevance", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E306470](v7, -1, -1);
    MEMORY[0x22E306470](v6, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    v9 = v0[8];
    v8 = v0[9];
    v10 = v0[7];

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  v11 = v0[4];
  v12 = swift_task_alloc();
  v0[10] = v12;
  *(_QWORD *)(v12 + 16) = v11;
  *(_BYTE *)(v12 + 24) = 1;
  v13 = (_QWORD *)swift_task_alloc();
  v0[11] = v13;
  *v13 = v0;
  v13[1] = sub_22CC0B28C;
  return sub_22CC65EA4();
}

uint64_t sub_22CC0B28C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22CC0B2E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;
  int v7;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = v1 + *(int *)(*(_QWORD *)(v0 + 40) + 24);
  v4 = *(id *)v3;
  v5 = *(void **)(v3 + 8);
  v6 = *(void **)(v3 + 16);
  v7 = *(unsigned __int8 *)(v3 + 24);
  sub_22CC0812C(*(id *)v3, v5, v6);
  sub_22CC0B40C((uint64_t)v4, (uint64_t)v5, (uint64_t)v6, v7, v2);
  sub_22CC0816C((uint64_t)v4, v5, v6);
  sub_22CC0DE54(v1, type metadata accessor for SleepStageWidgetEntry);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_22CC0B3A0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22CC0ED00;
  return sub_22CC65A78();
}

uint64_t sub_22CC0B40C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;

  v37 = a4;
  v35 = a2;
  v36 = a3;
  v38 = a5;
  v6 = sub_22CC6504C();
  v32 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v31 - v10;
  v12 = sub_22CC64EB4();
  MEMORY[0x24BDAC7A8](v12);
  sub_22CC0D990();
  v34 = v13;
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC082A8(0, &qword_254065F50, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v31 - v18;
  v20 = sub_22CC64F08();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v31 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = a1;
  v40 = v35;
  v41 = v36;
  v42 = v37;
  SleepStageWidgetViewModel.relevantDateInterval.getter(v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_22CC0DD48((uint64_t)v19, &qword_254065F50, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
    return sub_22CC659E8();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v23, v19, v20);
    sub_22CC64EF0();
    sub_22CC64ED8();
    sub_22CC64EA8();
    v25 = v33;
    v26 = *(void (**)(char *, uint64_t))(v32 + 8);
    v26(v9, v33);
    v26(v11, v25);
    sub_22CC65A24();
    sub_22CC082A8(0, &qword_254065F88, (uint64_t (*)(uint64_t))sub_22CC0D990, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v27 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_22CC663F0;
    v29 = v28 + v27;
    v30 = v34;
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 16))(v29, v16, v34);
    sub_22CC659E8();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v30);
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  }
}

uint64_t sub_22CC0B714@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a1;
  v1 = sub_22CC6504C();
  v26 = *(_QWORD *)(v1 - 8);
  v27 = v1;
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v26 - v5;
  v7 = sub_22CC64EB4();
  MEMORY[0x24BDAC7A8](v7);
  sub_22CC0D990();
  v28 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC082A8(0, &qword_254065F50, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v26 - v13;
  v15 = sub_22CC64F08();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  SleepWidgetViewModel.relevantDateInterval.getter((uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_22CC0DD48((uint64_t)v14, &qword_254065F50, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
    return sub_22CC659E8();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    sub_22CC64EF0();
    sub_22CC64ED8();
    sub_22CC64EA8();
    v20 = v27;
    v21 = *(void (**)(char *, uint64_t))(v26 + 8);
    v21(v4, v27);
    v21(v6, v20);
    sub_22CC65A24();
    sub_22CC082A8(0, &qword_254065F88, (uint64_t (*)(uint64_t))sub_22CC0D990, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v22 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_22CC663F0;
    v24 = v23 + v22;
    v25 = v28;
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 16))(v24, v11, v28);
    sub_22CC659E8();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v25);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
}

void sub_22CC0B9F8(uint64_t a1, _QWORD *a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  unint64_t v17;
  char *v18;
  uint64_t (**v19)(uint64_t);
  id v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  void *v25;
  _BYTE v26[4];
  int v27;
  void *v28;
  void *v29;
  void *v30;

  v27 = a3;
  v5 = type metadata accessor for SleepStageWidgetTimelineProvider(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  sub_22CC0D9E8();
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16))(&v26[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v9);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = swift_allocObject();
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v10 + 32))(v13 + v12, &v26[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)], v9);
  v15 = (void *)a2[3];
  v16 = (void *)a2[4];
  v28 = (void *)a2[2];
  v14 = v28;
  v29 = v15;
  v30 = v16;
  sub_22CC0DE10((uint64_t)a2, (uint64_t)&v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for SleepStageWidgetTimelineProvider);
  v17 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v18 = (char *)swift_allocObject();
  sub_22CC0DDCC((uint64_t)&v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t)&v18[v17], type metadata accessor for SleepStageWidgetTimelineProvider);
  v19 = (uint64_t (**)(uint64_t))&v18[(v7 + v17 + 7) & 0xFFFFFFFFFFFFFFF8];
  *v19 = sub_22CC0DAAC;
  v19[1] = (uint64_t (*)(uint64_t))v13;
  v20 = v14;
  v21 = v15;
  v22 = v16;
  swift_retain();
  SleepWidgetViewModelProvider.currentSleepStageWidgetViewModel(showLiveContent:completion:)(v27, (void (*)(void **, uint64_t))sub_22CC0DAEC, v18);
  swift_release();
  v23 = v28;
  v24 = v29;
  v25 = v30;
  swift_release();

}

uint64_t sub_22CC0BBC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v6;

  v2 = type metadata accessor for SleepStageWidgetEntry(0);
  MEMORY[0x24BDAC7A8](v2);
  sub_22CC0DE10(a1, (uint64_t)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  sub_22CC0D9E8();
  return sub_22CC65BD4();
}

uint64_t sub_22CC0BC4C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_22CC0BC9C;
  return sub_22CC0B010(a1);
}

uint64_t sub_22CC0BC9C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_22CC0BCE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_22CC6504C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_22CC0BD1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_22CC0DCF0(v2 + *(int *)(a1 + 28), a2, &qword_2540660D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFB270]);
}

SleepWidgetUI::SleepStageWidget __swiftcall SleepStageWidget.init()()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  SleepWidgetUI::SleepStageWidget result;

  v1 = v0;
  v2 = sub_22CC65B2C();
  *v1 = v2;
  v1[1] = (uint64_t)v3;
  result.kind._object = v3;
  result.kind._countAndFlagsBits = v2;
  return result;
}

uint64_t SleepStageWidget.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t OpaqueTypeConformance2;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  _QWORD v53[2];
  __int128 v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;

  v68 = a1;
  v1 = sub_22CC6507C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for SleepStageWidgetTimelineProvider(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (_QWORD *)((char *)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v53 - v9;
  sub_22CC0C4B0();
  v55 = v11;
  *(_QWORD *)&v54 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC0C730(0);
  v59 = v14;
  v57 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v56 = (char *)v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC0C7D8(0);
  v64 = v16;
  v60 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v58 = (char *)v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC0C8A4(0);
  v66 = *(_QWORD *)(v18 - 8);
  v67 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v63 = (char *)v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC0C9AC(0);
  v65 = v20;
  v62 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v61 = (char *)v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BDCEF70], v1);
  swift_bridgeObjectRetain();
  sub_22CC65088();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3C40]), sel_init);
  *v8 = v22;
  v23 = objc_allocWithZone(MEMORY[0x24BEA9950]);
  v24 = v22;
  v25 = (void *)sub_22CC65B20();
  v26 = objc_msgSend(v23, sel_initWithIdentifier_healthStore_options_, v25, v24, 1);

  v8[1] = v26;
  v27 = objc_allocWithZone(MEMORY[0x24BDD3968]);
  v28 = v24;
  v29 = v26;
  v30 = objc_msgSend(v27, sel_init);
  v8[2] = v28;
  v8[3] = v29;
  v8[4] = v30;
  sub_22CC0DDCC((uint64_t)v8, (uint64_t)v10, type metadata accessor for SleepStageWidgetTimelineProvider);
  sub_22CC0C510();
  sub_22CC0C698();
  sub_22CC07B74(&qword_2540657B8, type metadata accessor for SleepStageWidgetTimelineProvider, (uint64_t)&unk_22CC66950);
  sub_22CC65A84();
  if (qword_254065700 != -1)
    swift_once();
  v53[1] = 0x800000022CC69720;
  v71 = sub_22CC64F74();
  v72 = v31;
  v32 = sub_22CC07B74(&qword_254065938, (uint64_t (*)(uint64_t))sub_22CC0C4B0, MEMORY[0x24BDFB170]);
  v33 = sub_22CC08C70();
  v35 = v55;
  v34 = v56;
  sub_22CC654FC();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v13, v35);
  v36 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
  sub_22CC082A8(0, &qword_254065960, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAFE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_22CC65A54();
  v37 = swift_allocObject();
  v54 = xmmword_22CC663F0;
  *(_OWORD *)(v37 + 16) = xmmword_22CC663F0;
  sub_22CC65A48();
  sub_22CC082A8(0, (unint64_t *)&qword_254065958, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], v36);
  v38 = sub_22CC65A3C();
  v39 = *(_QWORD *)(v38 - 8);
  v40 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = v54;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v39 + 104))(v41 + v40, *MEMORY[0x24BDFAED8], v38);
  v71 = v35;
  v42 = MEMORY[0x24BEE0D00];
  v72 = MEMORY[0x24BEE0D00];
  v73 = v32;
  v74 = v33;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v45 = v58;
  v44 = v59;
  sub_22CC654F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v34, v44);
  v71 = sub_22CC64F74();
  v72 = v46;
  v69 = v44;
  v70 = OpaqueTypeConformance2;
  v47 = swift_getOpaqueTypeConformance2();
  v49 = v63;
  v48 = v64;
  sub_22CC654D8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v45, v48);
  _s13SleepWidgetUI0a5StageB4ViewV17supportedFamiliesSay0B3Kit0B6FamilyOGvgZ_0();
  v71 = v48;
  v72 = v42;
  v73 = v47;
  v74 = v33;
  swift_getOpaqueTypeConformance2();
  v50 = v61;
  v51 = v67;
  sub_22CC654E4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v49, v51);
  sub_22CC0CD20();
  return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v50, v65);
}

uint64_t type metadata accessor for SleepStageWidgetTimelineProvider(uint64_t a1)
{
  return sub_22CC0D950(a1, (uint64_t *)&unk_254065A90);
}

void sub_22CC0C4B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254065940)
  {
    sub_22CC0C510();
    sub_22CC0C698();
    v0 = sub_22CC65A90();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254065940);
  }
}

void sub_22CC0C510()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2540658B0)
  {
    sub_22CC0C574();
    sub_22CC0C63C();
    v0 = sub_22CC6534C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2540658B0);
  }
}

void sub_22CC0C574()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_254065920)
  {
    type metadata accessor for SleepStageWidgetView();
    sub_22CC6504C();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
    sub_22CC07B74(&qword_2540657C0, (uint64_t (*)(uint64_t))type metadata accessor for SleepStageWidgetView, (uint64_t)&protocol conformance descriptor for SleepStageWidgetView);
    sub_22CC07B74(&qword_2540657B0, v0, MEMORY[0x24BDCE930]);
    v1 = sub_22CC658A4();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_254065920);
  }
}

void sub_22CC0C63C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254065910)
  {
    sub_22CC654B4();
    v0 = sub_22CC65538();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254065910);
  }
}

unint64_t sub_22CC0C698()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_2540658A8;
  if (!qword_2540658A8)
  {
    sub_22CC0C510();
    v2 = v1;
    v3[0] = sub_22CC07B74(&qword_254065918, (uint64_t (*)(uint64_t))sub_22CC0C574, MEMORY[0x24BDF44C8]);
    v3[1] = sub_22CC07B74(&qword_254065908, (uint64_t (*)(uint64_t))sub_22CC0C63C, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_2540658A8);
  }
  return result;
}

void sub_22CC0C730(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!qword_2540658F8)
  {
    sub_22CC0C4B0();
    v3 = v2;
    v4 = sub_22CC07B74(&qword_254065938, (uint64_t (*)(uint64_t))sub_22CC0C4B0, MEMORY[0x24BDFB170]);
    v5 = sub_22CC08C70();
    v8[0] = v3;
    v8[1] = MEMORY[0x24BEE0D00];
    v8[2] = v4;
    v8[3] = v5;
    v6 = MEMORY[0x22E3063BC](a1, v8, MEMORY[0x24BDFABC8], 0);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_2540658F8);
  }
}

void sub_22CC0C7D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v6[4];

  if (!qword_2540658F0)
  {
    sub_22CC0C730(255);
    v3 = v2;
    sub_22CC0C4B0();
    v6[2] = sub_22CC07B74(&qword_254065938, (uint64_t (*)(uint64_t))sub_22CC0C4B0, MEMORY[0x24BDFB170]);
    v6[3] = sub_22CC08C70();
    v6[0] = v3;
    v6[1] = swift_getOpaqueTypeConformance2();
    v4 = MEMORY[0x22E3063BC](a1, v6, MEMORY[0x24BDFABB8], 0);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_2540658F0);
  }
}

void sub_22CC0C8A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!qword_2540658C8)
  {
    sub_22CC0C7D8(255);
    v3 = v2;
    sub_22CC0C730(255);
    sub_22CC0C4B0();
    sub_22CC07B74(&qword_254065938, (uint64_t (*)(uint64_t))sub_22CC0C4B0, MEMORY[0x24BDFB170]);
    v4 = sub_22CC08C70();
    v5 = MEMORY[0x24BEE0D00];
    swift_getOpaqueTypeConformance2();
    v8[0] = v3;
    v8[1] = v5;
    v8[2] = swift_getOpaqueTypeConformance2();
    v8[3] = v4;
    v6 = MEMORY[0x22E3063BC](a1, v8, MEMORY[0x24BDFAB98], 0);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_2540658C8);
  }
}

void sub_22CC0C9AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  if (!qword_2540658D8)
  {
    sub_22CC0C8A4(255);
    v3 = v2;
    sub_22CC0C7D8(255);
    sub_22CC0C730(255);
    sub_22CC0C4B0();
    sub_22CC07B74(&qword_254065938, (uint64_t (*)(uint64_t))sub_22CC0C4B0, MEMORY[0x24BDFB170]);
    v4 = sub_22CC08C70();
    swift_getOpaqueTypeConformance2();
    v7[2] = swift_getOpaqueTypeConformance2();
    v7[3] = v4;
    v7[0] = v3;
    v7[1] = swift_getOpaqueTypeConformance2();
    v5 = MEMORY[0x22E3063BC](a1, v7, MEMORY[0x24BDFABA8], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_2540658D8);
  }
}

uint64_t sub_22CC0CAD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t *v17;
  char *v18;
  char *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v26[12];
  int v27;
  uint64_t v28;
  uint64_t v29;

  v28 = a1;
  v29 = a2;
  v3 = (int *)type metadata accessor for SleepStageWidgetView();
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (uint64_t *)&v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v4);
  v8 = &v26[-v7];
  sub_22CC0C574();
  v10 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v12 = &v26[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = a1 + *(int *)(type metadata accessor for SleepStageWidgetEntry(0) + 24);
  v15 = *(void **)v13;
  v14 = *(void **)(v13 + 8);
  v16 = *(void **)(v13 + 16);
  v27 = *(unsigned __int8 *)(v13 + 24);
  *v6 = swift_getKeyPath();
  sub_22CC082A8(0, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v17 = (uint64_t *)((char *)v6 + v3[5]);
  *v17 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  v18 = (char *)v6 + v3[6];
  *(_QWORD *)v18 = swift_getKeyPath();
  *((_QWORD *)v18 + 1) = 0;
  *((_QWORD *)v18 + 2) = 0;
  *((_QWORD *)v18 + 3) = 0;
  v18[32] = 0;
  v19 = (char *)v6 + v3[7];
  *(_QWORD *)v19 = v15;
  *((_QWORD *)v19 + 1) = v14;
  *((_QWORD *)v19 + 2) = v16;
  v19[24] = v27;
  sub_22CC0DDCC((uint64_t)v6, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for SleepStageWidgetView);
  sub_22CC0DE10((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for SleepStageWidgetView);
  v20 = &v12[*(int *)(v10 + 52)];
  v21 = sub_22CC6504C();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v20, v28, v21);
  sub_22CC0812C(v15, v14, v16);
  sub_22CC0DE54((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for SleepStageWidgetView);
  v22 = sub_22CC652F8();
  v23 = v29;
  sub_22CC0DE10((uint64_t)v12, v29, (uint64_t (*)(_QWORD))sub_22CC0C574);
  sub_22CC0C510();
  *(_QWORD *)(v23 + *(int *)(v24 + 36)) = v22;
  return sub_22CC0DE54((uint64_t)v12, (uint64_t (*)(_QWORD))sub_22CC0C574);
}

id sub_22CC0CD20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  id result;
  void *v10;
  unsigned int v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t OpaqueTypeConformance2;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;

  v1 = v0;
  v2 = sub_22CC652BC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v36 - v7;
  result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (result)
  {
    v10 = result;
    v11 = objc_msgSend(result, sel_hksp_supportsHealthData);

    v38 = v11;
    if (v11)
    {
      sub_22CC652A4();
      v12 = sub_22CC652B0();
      v13 = sub_22CC65C64();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        v15 = swift_slowAlloc();
        v40 = v15;
        v37 = v2;
        *(_DWORD *)v14 = 136446210;
        v39 = sub_22CC5C47C(0xD00000000000004ALL, 0x800000022CC69790, &v40);
        sub_22CC65D00();
        _os_log_impl(&dword_22CC04000, v12, v13, "[%{public}s] sleep stage widget supported", v14, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22E306470](v15, -1, -1);
        MEMORY[0x22E306470](v14, -1, -1);

        (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v37);
LABEL_10:
        sub_22CC0C9AC(0);
        sub_22CC0C8A4(255);
        v23 = v22;
        sub_22CC0C7D8(255);
        v25 = v24;
        sub_22CC0C730(255);
        v27 = v26;
        sub_22CC0C4B0();
        v29 = v28;
        v30 = sub_22CC07B74(&qword_254065938, (uint64_t (*)(uint64_t))sub_22CC0C4B0, MEMORY[0x24BDFB170]);
        v31 = sub_22CC08C70();
        v32 = MEMORY[0x24BEE0D00];
        v40 = v29;
        v41 = MEMORY[0x24BEE0D00];
        v42 = v30;
        v43 = v31;
        OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
        v40 = v27;
        v41 = OpaqueTypeConformance2;
        v34 = swift_getOpaqueTypeConformance2();
        v40 = v25;
        v41 = v32;
        v42 = v34;
        v43 = v31;
        v35 = swift_getOpaqueTypeConformance2();
        v40 = v23;
        v41 = v35;
        swift_getOpaqueTypeConformance2();
        return (id)sub_22CC65508();
      }

      v20 = *(void (**)(char *, uint64_t))(v3 + 8);
      v21 = v8;
    }
    else
    {
      sub_22CC652A4();
      v16 = sub_22CC652B0();
      v17 = sub_22CC65C64();
      if (os_log_type_enabled(v16, v17))
      {
        v37 = v1;
        v18 = (uint8_t *)swift_slowAlloc();
        v19 = swift_slowAlloc();
        v40 = v19;
        *(_DWORD *)v18 = 136446210;
        v39 = sub_22CC5C47C(0xD00000000000004ALL, 0x800000022CC69790, &v40);
        sub_22CC65D00();
        _os_log_impl(&dword_22CC04000, v16, v17, "[%{public}s] sleep stage widget not supported", v18, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22E306470](v19, -1, -1);
        MEMORY[0x22E306470](v18, -1, -1);
      }

      v20 = *(void (**)(char *, uint64_t))(v3 + 8);
      v21 = v6;
    }
    v20(v21, v2);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_22CC0D140@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_22CC65B2C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_22CC0D174()
{
  return swift_getOpaqueTypeConformance2();
}

_QWORD *initializeBufferWithCopyOfBuffer for SleepStageWidget(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for SleepStageWidget()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for SleepStageWidget(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for SleepStageWidget(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SleepStageWidget(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SleepStageWidget(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SleepStageWidget()
{
  return &type metadata for SleepStageWidget;
}

uint64_t sub_22CC0D2BC()
{
  sub_22CC0C9AC(255);
  sub_22CC0C8A4(255);
  sub_22CC0C7D8(255);
  sub_22CC0C730(255);
  sub_22CC0C4B0();
  sub_22CC07B74(&qword_254065938, (uint64_t (*)(uint64_t))sub_22CC0C4B0, MEMORY[0x24BDFB170]);
  sub_22CC08C70();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  return swift_getOpaqueTypeConformance2();
}

char *sub_22CC0D3E0(char *a1, char **a2, uint64_t a3)
{
  int v3;
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = a2[1];
    v7 = a2[2];
    *((_QWORD *)a1 + 1) = v6;
    *((_QWORD *)a1 + 2) = v7;
    v8 = a2[3];
    v9 = a2[4];
    *((_QWORD *)a1 + 3) = v8;
    *((_QWORD *)a1 + 4) = v9;
    v10 = *(int *)(a3 + 32);
    v11 = &a1[v10];
    v12 = (uint64_t)a2 + v10;
    v13 = sub_22CC65118();
    v14 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    v15 = v4;
    v16 = v6;
    v17 = v7;
    v18 = v8;
    v19 = v9;
    v14(v11, v12, v13);
  }
  return v5;
}

uint64_t sub_22CC0D4A4(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  v4 = (char *)a1 + *(int *)(a2 + 32);
  v5 = sub_22CC65118();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_22CC0D50C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;

  v4 = *(void **)a2;
  v5 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v5;
  v6 = *(void **)(a2 + 16);
  v7 = *(void **)(a2 + 24);
  a1[2] = v6;
  a1[3] = v7;
  v8 = *(void **)(a2 + 32);
  a1[4] = v8;
  v9 = *(int *)(a3 + 32);
  v10 = (char *)a1 + v9;
  v11 = a2 + v9;
  v12 = sub_22CC65118();
  v13 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v14 = v4;
  v15 = v5;
  v16 = v6;
  v17 = v7;
  v18 = v8;
  v13(v10, v11, v12);
  return a1;
}

uint64_t sub_22CC0D5A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  v9 = *(void **)(a2 + 8);
  v10 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v9;
  v11 = v9;

  v12 = *(void **)(a2 + 16);
  v13 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v12;
  v14 = v12;

  v15 = *(void **)(a2 + 24);
  v16 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v15;
  v17 = v15;

  v18 = *(void **)(a2 + 32);
  v19 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v18;
  v20 = v18;

  v21 = *(int *)(a3 + 32);
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = sub_22CC65118();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v22, v23, v24);
  return a1;
}

uint64_t sub_22CC0D668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(int *)(a3 + 32);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_22CC65118();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_22CC0D6CC(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = a2[1];

  v8 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = a2[2];

  v9 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = a2[3];

  v10 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = a2[4];

  v11 = *(int *)(a3 + 32);
  v12 = a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_22CC65118();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_22CC0D778()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC0D784(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_22CC65118();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 32)], a2, v8);
  }
}

uint64_t sub_22CC0D800()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_22CC0D80C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_22CC65118();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 32)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_22CC0D880()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22CC65118();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22CC0D910()
{
  return sub_22CC07B74(&qword_254066508, type metadata accessor for SleepStageWidgetEntry, (uint64_t)&unk_22CC669A8);
}

uint64_t type metadata accessor for SleepStageWidgetEntry(uint64_t a1)
{
  return sub_22CC0D950(a1, qword_254065F98);
}

uint64_t sub_22CC0D950(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

void sub_22CC0D984(uint64_t a1)
{
  uint64_t v1;

  sub_22CC0B9F8(a1, *(_QWORD **)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

void sub_22CC0D990()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254065F70)
  {
    v0 = sub_22CC65A30();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254065F70);
  }
}

void sub_22CC0D9E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254065F78)
  {
    type metadata accessor for SleepStageWidgetEntry(255);
    v0 = sub_22CC65BE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254065F78);
  }
}

uint64_t sub_22CC0DA4C()
{
  uint64_t v0;
  uint64_t v1;

  sub_22CC0D9E8();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_22CC0DAAC(uint64_t a1)
{
  sub_22CC0D9E8();
  return sub_22CC0BBC4(a1);
}

unint64_t sub_22CC0DAF0()
{
  unint64_t result;

  result = qword_255C3CA38;
  if (!qword_255C3CA38)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_255C3CA38);
  }
  return result;
}

uint64_t sub_22CC0DB44(uint64_t a1)
{
  uint64_t v1;

  return sub_22CC0A514(a1, *(void (**)(_QWORD))(v1 + 16));
}

uint64_t objectdestroy_6Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id *v3;
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for SleepStageWidgetTimelineProvider(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (id *)(v0 + ((v2 + 16) & ~v2));

  v4 = (char *)v3 + *(int *)(v1 + 32);
  v5 = sub_22CC65118();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22CC0DC14(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(type metadata accessor for SleepStageWidgetTimelineProvider(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_22CC0A998(a1, a2, v2 + v6, *(void (**)(uint64_t))v7, *(_QWORD *)(v7 + 8));
}

void sub_22CC0DC78()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3CA40)
  {
    type metadata accessor for SleepStageWidgetEntry(255);
    sub_22CC07B74(&qword_254066508, type metadata accessor for SleepStageWidgetEntry, (uint64_t)&unk_22CC669A8);
    v0 = sub_22CC65AF0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3CA40);
  }
}

uint64_t sub_22CC0DCF0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_22CC082A8(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_22CC0DD48(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  sub_22CC082A8(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_22CC0DD8C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22CC0DDB0(uint64_t a1)
{
  uint64_t v1;

  return sub_22CC0A060(a1, *(uint64_t (**)(uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_22CC0DDCC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_22CC0DE10(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_22CC0DE54(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *sub_22CC0DE90(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22CC6504C();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = a3[5];
    v11 = &a1[v10];
    v12 = &a2[v10];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v10], 1, v7))
    {
      sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v9(v11, v12, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
    v15 = a3[6];
    v16 = &a1[v15];
    v17 = &a2[v15];
    v18 = *(_QWORD *)&a2[v15];
    if (v18)
    {
      v19 = (void *)*((_QWORD *)v17 + 1);
      v20 = (void *)*((_QWORD *)v17 + 2);
      *(_QWORD *)v16 = v18;
      *((_QWORD *)v16 + 1) = v19;
      *((_QWORD *)v16 + 2) = v20;
      swift_bridgeObjectRetain();
      v21 = v19;
      v22 = v20;
    }
    else
    {
      *(_OWORD *)v16 = *(_OWORD *)v17;
      *((_QWORD *)v16 + 2) = *((_QWORD *)v17 + 2);
    }
    v16[24] = v17[24];
    v23 = a3[7];
    v24 = &a1[v23];
    v25 = &a2[v23];
    v26 = sub_22CC65ACC();
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      sub_22CC082A8(0, &qword_2540660D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFB270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
  }
  return a1;
}

uint64_t sub_22CC0E084(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v4 = sub_22CC6504C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  v7 = a1 + a2[5];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4))
    v6(v7, v4);
  v8 = a1 + a2[6];
  if (*(_QWORD *)v8)
  {
    swift_bridgeObjectRelease();

  }
  v9 = a1 + a2[7];
  v10 = sub_22CC65ACC();
  v11 = *(_QWORD *)(v10 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  return result;
}

char *sub_22CC0E174(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = sub_22CC6504C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v9], 1, v6))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  v13 = a3[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = *(_QWORD *)&a2[v13];
  if (v16)
  {
    v17 = (void *)*((_QWORD *)v15 + 1);
    v18 = (void *)*((_QWORD *)v15 + 2);
    *(_QWORD *)v14 = v16;
    *((_QWORD *)v14 + 1) = v17;
    *((_QWORD *)v14 + 2) = v18;
    swift_bridgeObjectRetain();
    v19 = v17;
    v20 = v18;
  }
  else
  {
    *(_OWORD *)v14 = *(_OWORD *)v15;
    *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
  }
  v14[24] = v15[24];
  v21 = a3[7];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = sub_22CC65ACC();
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    sub_22CC082A8(0, &qword_2540660D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFB270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  return a1;
}

uint64_t sub_22CC0E33C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(void *, uint64_t, uint64_t);
  int v38;
  int v39;
  uint64_t v40;

  v6 = sub_22CC6504C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(a1 + v9, 1, v6);
  v14 = v12((uint64_t)v11, 1, v6);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v10, v11, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v10, (uint64_t)v11, v6);
LABEL_7:
  v16 = a3[6];
  v17 = a1 + v16;
  v18 = (__int128 *)(a2 + v16);
  v19 = *(_QWORD *)(a2 + v16);
  if (*(_QWORD *)(a1 + v16))
  {
    if (v19)
    {
      *(_QWORD *)v17 = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v20 = *(void **)(v17 + 8);
      v21 = (void *)*((_QWORD *)v18 + 1);
      *(_QWORD *)(v17 + 8) = v21;
      v22 = v21;

      v23 = *(void **)(v17 + 16);
      v24 = (void *)*((_QWORD *)v18 + 2);
      *(_QWORD *)(v17 + 16) = v24;
      v25 = v24;

    }
    else
    {
      sub_22CC06744(a1 + v16);
      v30 = *((_QWORD *)v18 + 2);
      *(_OWORD *)v17 = *v18;
      *(_QWORD *)(v17 + 16) = v30;
    }
  }
  else if (v19)
  {
    *(_QWORD *)v17 = v19;
    v26 = (void *)*((_QWORD *)v18 + 1);
    *(_QWORD *)(v17 + 8) = v26;
    v27 = (void *)*((_QWORD *)v18 + 2);
    *(_QWORD *)(v17 + 16) = v27;
    swift_bridgeObjectRetain();
    v28 = v26;
    v29 = v27;
  }
  else
  {
    v31 = *v18;
    *(_QWORD *)(v17 + 16) = *((_QWORD *)v18 + 2);
    *(_OWORD *)v17 = v31;
  }
  *(_BYTE *)(v17 + 24) = *((_BYTE *)v18 + 24);
  v32 = a3[7];
  v33 = (void *)(a1 + v32);
  v34 = (void *)(a2 + v32);
  v35 = sub_22CC65ACC();
  v36 = *(_QWORD *)(v35 - 8);
  v37 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v36 + 48);
  v38 = v37(v33, 1, v35);
  v39 = v37(v34, 1, v35);
  if (!v38)
  {
    if (!v39)
    {
      (*(void (**)(void *, void *, uint64_t))(v36 + 24))(v33, v34, v35);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v36 + 8))(v33, v35);
    goto LABEL_20;
  }
  if (v39)
  {
LABEL_20:
    sub_22CC082A8(0, &qword_2540660D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFB270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v36 + 16))(v33, v34, v35);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  return a1;
}

char *sub_22CC0E600(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_22CC6504C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v9], 1, v6))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  v13 = a3[6];
  v14 = a3[7];
  v15 = &a1[v13];
  v16 = &a2[v13];
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 9) = *(_OWORD *)(v16 + 9);
  v17 = &a1[v14];
  v18 = &a2[v14];
  v19 = sub_22CC65ACC();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    sub_22CC082A8(0, &qword_2540660D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFB270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  return a1;
}

uint64_t sub_22CC0E798(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(void *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;

  v6 = sub_22CC6504C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(a1 + v9, 1, v6);
  v14 = v12((uint64_t)v11, 1, v6);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v10, v11, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v10, (uint64_t)v11, v6);
LABEL_7:
  v16 = a3[6];
  v17 = a1 + v16;
  v18 = a2 + v16;
  if (*(_QWORD *)(a1 + v16))
  {
    if (*(_QWORD *)v18)
    {
      *(_QWORD *)v17 = *(_QWORD *)v18;
      swift_bridgeObjectRelease();
      v19 = *(void **)(v17 + 8);
      *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);

      v20 = *(void **)(v17 + 16);
      *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);

      goto LABEL_12;
    }
    sub_22CC06744(v17);
  }
  *(_OWORD *)v17 = *(_OWORD *)v18;
  *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
LABEL_12:
  *(_BYTE *)(v17 + 24) = *(_BYTE *)(v18 + 24);
  v21 = a3[7];
  v22 = (void *)(a1 + v21);
  v23 = (void *)(a2 + v21);
  v24 = sub_22CC65ACC();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v25 + 40))(v22, v23, v24);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v25 + 8))(v22, v24);
    goto LABEL_17;
  }
  if (v28)
  {
LABEL_17:
    sub_22CC082A8(0, &qword_2540660D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFB270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v25 + 32))(v22, v23, v24);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  return a1;
}

uint64_t sub_22CC0EA10()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC0EA1C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t v15;

  v6 = sub_22CC6504C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v10 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
  {
    v11 = v9;
    v12 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  if ((_DWORD)a2 != 2147483646)
  {
    sub_22CC082A8(0, &qword_2540660D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFB270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v11 = v15;
    v10 = *(_QWORD *)(v15 - 8);
    v12 = a3[7];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  v13 = *(_QWORD *)(a1 + a3[6]);
  if (v13 >= 0xFFFFFFFF)
    LODWORD(v13) = -1;
  v14 = v13 - 1;
  if (v14 < 0)
    v14 = -1;
  return (v14 + 1);
}

uint64_t sub_22CC0EB24()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_22CC0EB30(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v8 = sub_22CC6504C();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      if (a3 == 2147483646)
      {
        *(_QWORD *)(a1 + a4[6]) = a2;
        return;
      }
      sub_22CC082A8(0, &qword_2540660D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFB270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v10 = v16;
      v14 = *(_QWORD *)(v16 - 8);
      v15 = a4[7];
    }
    v12 = a1 + v15;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  v11(v12, a2, a2, v10);
}

void sub_22CC0EC28()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_22CC6504C();
  if (v0 <= 0x3F)
  {
    sub_22CC082A8(319, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    if (v1 <= 0x3F)
    {
      sub_22CC082A8(319, &qword_2540660D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFB270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_22CC0ED0C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  void *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  void *v37;
  char *v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  void *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  char *v47;
  uint64_t v48;

  v4 = type metadata accessor for SleepWidgetViewModel();
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v6 = (int *)v4;
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v7 = *(int *)(v4 + 20);
    v8 = (void *)(a1 + v7);
    v9 = (char *)a2 + v7;
    v10 = sub_22CC64F20();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
    if (v12(v9, 1, v10))
    {
      sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v15 = v6[6];
    v16 = (void *)(a1 + v15);
    v17 = (char *)a2 + v15;
    if (v12((char *)a2 + v15, 1, v10))
    {
      sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v16, v17, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
    }
    *(_BYTE *)(a1 + v6[7]) = *((_BYTE *)a2 + v6[7]);
    v19 = v6[8];
    v20 = a1 + v19;
    v21 = (uint64_t)a2 + v19;
    v22 = sub_22CC6504C();
    v23 = *(_QWORD *)(v22 - 8);
    v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16);
    v24(v20, v21, v22);
    v25 = v6[9];
    v26 = *(void **)((char *)a2 + v25);
    *(_QWORD *)(a1 + v25) = v26;
    v27 = v6[10];
    v28 = (_QWORD *)(a1 + v27);
    v29 = (uint64_t)a2 + v27;
    v30 = *(uint64_t *)((char *)a2 + v27);
    v31 = v26;
    if (v30)
    {
      v33 = *(void **)(v29 + 8);
      v32 = *(void **)(v29 + 16);
      *v28 = v30;
      v28[1] = v33;
      v28[2] = v32;
      swift_bridgeObjectRetain();
      v34 = v33;
      v35 = v32;
    }
    else
    {
      *(_OWORD *)v28 = *(_OWORD *)v29;
      v28[2] = *(_QWORD *)(v29 + 16);
    }
    v36 = v6[11];
    v37 = (void *)(a1 + v36);
    v38 = (char *)a2 + v36;
    v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    if (v39((char *)a2 + v36, 1, v22))
    {
      sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      v24((uint64_t)v37, (uint64_t)v38, v22);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v37, 0, 1, v22);
    }
    v41 = v6[12];
    v42 = (void *)(a1 + v41);
    v43 = (char *)a2 + v41;
    if (v39((char *)a2 + v41, 1, v22))
    {
      sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      v24((uint64_t)v42, (uint64_t)v43, v22);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v42, 0, 1, v22);
    }
    v45 = v6[13];
    v46 = (void *)(a1 + v45);
    v47 = (char *)a2 + v45;
    if (v39(v47, 1, v22))
    {
      sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      v24((uint64_t)v46, (uint64_t)v47, v22);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v46, 0, 1, v22);
    }
  }
  return a1;
}

uint64_t sub_22CC0F0C8(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  void (*v17)(uint64_t, uint64_t);

  v2 = (int *)type metadata accessor for SleepWidgetViewModel();
  v3 = a1 + v2[5];
  v4 = sub_22CC64F20();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  v7 = a1 + v2[6];
  if (!v6(v7, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  v8 = a1 + v2[8];
  v9 = sub_22CC6504C();
  v10 = *(_QWORD *)(v9 - 8);
  v17 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v17(v8, v9);

  v11 = a1 + v2[10];
  if (*(_QWORD *)v11)
  {
    swift_bridgeObjectRelease();

  }
  v12 = a1 + v2[11];
  v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v13(v12, 1, v9))
    v17(v12, v9);
  v14 = a1 + v2[12];
  if (!v13(v14, 1, v9))
    v17(v14, v9);
  v15 = a1 + v2[13];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v13)(v15, 1, v9);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v17)(v15, v9);
  return result;
}

uint64_t sub_22CC0F26C(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(const void *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(void *, const void *, uint64_t);
  uint64_t v22;
  void *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  void *v34;
  const void *v35;
  unsigned int (*v36)(const void *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  void *v39;
  const void *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  const void *v44;
  uint64_t v45;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = (int *)type metadata accessor for SleepWidgetViewModel();
  v5 = v4[5];
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = sub_22CC64F20();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
  if (v10(v7, 1, v8))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  v12 = v4[6];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  if (v10((const void *)(a2 + v12), 1, v8))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v13, v14, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v13, 0, 1, v8);
  }
  *(_BYTE *)(a1 + v4[7]) = *(_BYTE *)(a2 + v4[7]);
  v16 = v4[8];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  v19 = sub_22CC6504C();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(void (**)(void *, const void *, uint64_t))(v20 + 16);
  v21(v17, v18, v19);
  v22 = v4[9];
  v23 = *(void **)(a2 + v22);
  *(_QWORD *)(a1 + v22) = v23;
  v24 = v4[10];
  v25 = (_QWORD *)(a1 + v24);
  v26 = a2 + v24;
  v27 = *(_QWORD *)(a2 + v24);
  v28 = v23;
  if (v27)
  {
    v30 = *(void **)(v26 + 8);
    v29 = *(void **)(v26 + 16);
    *v25 = v27;
    v25[1] = v30;
    v25[2] = v29;
    swift_bridgeObjectRetain();
    v31 = v30;
    v32 = v29;
  }
  else
  {
    *(_OWORD *)v25 = *(_OWORD *)v26;
    v25[2] = *(_QWORD *)(v26 + 16);
  }
  v33 = v4[11];
  v34 = (void *)(a1 + v33);
  v35 = (const void *)(a2 + v33);
  v36 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48);
  if (v36((const void *)(a2 + v33), 1, v19))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    v21(v34, v35, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v34, 0, 1, v19);
  }
  v38 = v4[12];
  v39 = (void *)(a1 + v38);
  v40 = (const void *)(a2 + v38);
  if (v36((const void *)(a2 + v38), 1, v19))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    v21(v39, v40, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v39, 0, 1, v19);
  }
  v42 = v4[13];
  v43 = (void *)(a1 + v42);
  v44 = (const void *)(a2 + v42);
  if (v36(v44, 1, v19))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    v21(v43, v44, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v43, 0, 1, v19);
  }
  return a1;
}

uint64_t sub_22CC0F5FC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  void *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  _QWORD *v32;
  __int128 *v33;
  uint64_t v34;
  void *v35;
  void *v36;
  id v37;
  void *v38;
  void *v39;
  id v40;
  void *v41;
  void *v42;
  id v43;
  id v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  void *v48;
  char *v49;
  uint64_t (*v50)(uint64_t, uint64_t, uint64_t);
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  char *v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  char *v62;
  int v63;
  int v64;
  uint64_t v65;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  v5 = (int *)type metadata accessor for SleepWidgetViewModel();
  v6 = v5[5];
  v7 = (void *)(a1 + v6);
  v8 = (char *)a2 + v6;
  v9 = sub_22CC64F20();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = v5[6];
  v16 = (void *)(a1 + v15);
  v17 = (char *)a2 + v15;
  v18 = v11((void *)(a1 + v15), 1, v9);
  v19 = v11(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v16, v9);
LABEL_12:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
LABEL_13:
  *(_BYTE *)(a1 + v5[7]) = *((_BYTE *)a2 + v5[7]);
  v21 = v5[8];
  v22 = a1 + v21;
  v23 = (uint64_t)a2 + v21;
  v24 = sub_22CC6504C();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 24);
  v26(v22, v23, v24);
  v27 = v5[9];
  v28 = *(void **)((char *)a2 + v27);
  v29 = *(void **)(a1 + v27);
  *(_QWORD *)(a1 + v27) = v28;
  v30 = v28;

  v31 = v5[10];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (__int128 *)((char *)a2 + v31);
  v34 = *(uint64_t *)((char *)a2 + v31);
  if (*(_QWORD *)(a1 + v31))
  {
    if (v34)
    {
      *v32 = v34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v35 = (void *)v32[1];
      v36 = (void *)*((_QWORD *)v33 + 1);
      v32[1] = v36;
      v37 = v36;

      v38 = (void *)v32[2];
      v39 = (void *)*((_QWORD *)v33 + 2);
      v32[2] = v39;
      v40 = v39;

    }
    else
    {
      sub_22CC06744(a1 + v31);
      v45 = *((_QWORD *)v33 + 2);
      *(_OWORD *)v32 = *v33;
      v32[2] = v45;
    }
  }
  else if (v34)
  {
    *v32 = v34;
    v41 = (void *)*((_QWORD *)v33 + 1);
    v32[1] = v41;
    v42 = (void *)*((_QWORD *)v33 + 2);
    v32[2] = v42;
    swift_bridgeObjectRetain();
    v43 = v41;
    v44 = v42;
  }
  else
  {
    v46 = *v33;
    v32[2] = *((_QWORD *)v33 + 2);
    *(_OWORD *)v32 = v46;
  }
  v47 = v5[11];
  v48 = (void *)(a1 + v47);
  v49 = (char *)a2 + v47;
  v50 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  v51 = v50(a1 + v47, 1, v24);
  v52 = v50((uint64_t)v49, 1, v24);
  if (v51)
  {
    if (!v52)
    {
      (*(void (**)(void *, char *, uint64_t))(v25 + 16))(v48, v49, v24);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v48, 0, 1, v24);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  if (v52)
  {
    (*(void (**)(void *, uint64_t))(v25 + 8))(v48, v24);
LABEL_27:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    goto LABEL_28;
  }
  v26((uint64_t)v48, (uint64_t)v49, v24);
LABEL_28:
  v54 = v5[12];
  v55 = (void *)(a1 + v54);
  v56 = (char *)a2 + v54;
  v57 = v50(a1 + v54, 1, v24);
  v58 = v50((uint64_t)v56, 1, v24);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(void *, char *, uint64_t))(v25 + 16))(v55, v56, v24);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v55, 0, 1, v24);
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  if (v58)
  {
    (*(void (**)(void *, uint64_t))(v25 + 8))(v55, v24);
LABEL_33:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    goto LABEL_34;
  }
  v26((uint64_t)v55, (uint64_t)v56, v24);
LABEL_34:
  v60 = v5[13];
  v61 = (void *)(a1 + v60);
  v62 = (char *)a2 + v60;
  v63 = v50(a1 + v60, 1, v24);
  v64 = v50((uint64_t)v62, 1, v24);
  if (!v63)
  {
    if (!v64)
    {
      v26((uint64_t)v61, (uint64_t)v62, v24);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v25 + 8))(v61, v24);
    goto LABEL_39;
  }
  if (v64)
  {
LABEL_39:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v25 + 16))(v61, v62, v24);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v61, 0, 1, v24);
  return a1;
}

uint64_t sub_22CC0FB50(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(const void *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(void *, const void *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  unsigned int (*v28)(const void *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  const void *v36;
  uint64_t v37;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = (int *)type metadata accessor for SleepWidgetViewModel();
  v5 = v4[5];
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = sub_22CC64F20();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
  if (v10(v7, 1, v8))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  v12 = v4[6];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  if (v10((const void *)(a2 + v12), 1, v8))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v13, v14, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v13, 0, 1, v8);
  }
  *(_BYTE *)(a1 + v4[7]) = *(_BYTE *)(a2 + v4[7]);
  v16 = v4[8];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  v19 = sub_22CC6504C();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(void (**)(void *, const void *, uint64_t))(v20 + 32);
  v21(v17, v18, v19);
  *(_QWORD *)(a1 + v4[9]) = *(_QWORD *)(a2 + v4[9]);
  v22 = v4[10];
  v23 = a1 + v22;
  v24 = a2 + v22;
  *(_QWORD *)(v23 + 16) = *(_QWORD *)(v24 + 16);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  v25 = v4[11];
  v26 = (void *)(a1 + v25);
  v27 = (const void *)(a2 + v25);
  v28 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48);
  if (v28((const void *)(a2 + v25), 1, v19))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v21(v26, v27, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v26, 0, 1, v19);
  }
  v30 = v4[12];
  v31 = (void *)(a1 + v30);
  v32 = (const void *)(a2 + v30);
  if (v28((const void *)(a2 + v30), 1, v19))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    v21(v31, v32, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v31, 0, 1, v19);
  }
  v34 = v4[13];
  v35 = (void *)(a1 + v34);
  v36 = (const void *)(a2 + v34);
  if (v28(v36, 1, v19))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    v21(v35, v36, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v35, 0, 1, v19);
  }
  return a1;
}

uint64_t sub_22CC0FEB4(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void *, uint64_t, uint64_t);
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  void *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  void *v34;
  const void *v35;
  uint64_t (*v36)(uint64_t, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  const void *v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  const void *v48;
  int v49;
  int v50;
  uint64_t v51;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = (int *)type metadata accessor for SleepWidgetViewModel();
  v5 = v4[5];
  v6 = (void *)(a1 + v5);
  v7 = (void *)(a2 + v5);
  v8 = sub_22CC64F20();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  v11 = v10(v6, 1, v8);
  v12 = v10(v7, 1, v8);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 32))(v6, v7, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v9 + 8))(v6, v8);
LABEL_6:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v9 + 40))(v6, v7, v8);
LABEL_7:
  v14 = v4[6];
  v15 = (void *)(a1 + v14);
  v16 = (void *)(a2 + v14);
  v17 = v10((void *)(a1 + v14), 1, v8);
  v18 = v10(v16, 1, v8);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 32))(v15, v16, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v15, 0, 1, v8);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v9 + 8))(v15, v8);
LABEL_12:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v9 + 40))(v15, v16, v8);
LABEL_13:
  *(_BYTE *)(a1 + v4[7]) = *(_BYTE *)(a2 + v4[7]);
  v20 = v4[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = sub_22CC6504C();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 40);
  v25(v21, v22, v23);
  v26 = v4[9];
  v27 = *(void **)(a1 + v26);
  *(_QWORD *)(a1 + v26) = *(_QWORD *)(a2 + v26);

  v28 = v4[10];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  if (*(_QWORD *)(a1 + v28))
  {
    if (*v30)
    {
      *v29 = *v30;
      swift_bridgeObjectRelease();
      v31 = (void *)v29[1];
      v29[1] = v30[1];

      v32 = (void *)v29[2];
      v29[2] = v30[2];

      goto LABEL_18;
    }
    sub_22CC06744((uint64_t)v29);
  }
  *(_OWORD *)v29 = *(_OWORD *)v30;
  v29[2] = v30[2];
LABEL_18:
  v33 = v4[11];
  v34 = (void *)(a1 + v33);
  v35 = (const void *)(a2 + v33);
  v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  v37 = v36(a1 + v33, 1, v23);
  v38 = v36((uint64_t)v35, 1, v23);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v34, v35, v23);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v34, 0, 1, v23);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v38)
  {
    (*(void (**)(void *, uint64_t))(v24 + 8))(v34, v23);
LABEL_23:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_24;
  }
  v25((uint64_t)v34, (uint64_t)v35, v23);
LABEL_24:
  v40 = v4[12];
  v41 = (void *)(a1 + v40);
  v42 = (const void *)(a2 + v40);
  v43 = v36(a1 + v40, 1, v23);
  v44 = v36((uint64_t)v42, 1, v23);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v41, v42, v23);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v41, 0, 1, v23);
      goto LABEL_30;
    }
    goto LABEL_29;
  }
  if (v44)
  {
    (*(void (**)(void *, uint64_t))(v24 + 8))(v41, v23);
LABEL_29:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_30;
  }
  v25((uint64_t)v41, (uint64_t)v42, v23);
LABEL_30:
  v46 = v4[13];
  v47 = (void *)(a1 + v46);
  v48 = (const void *)(a2 + v46);
  v49 = v36(a1 + v46, 1, v23);
  v50 = v36((uint64_t)v48, 1, v23);
  if (!v49)
  {
    if (!v50)
    {
      v25((uint64_t)v47, (uint64_t)v48, v23);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v24 + 8))(v47, v23);
    goto LABEL_35;
  }
  if (v50)
  {
LABEL_35:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v47, v48, v23);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v47, 0, 1, v23);
  return a1;
}

uint64_t sub_22CC103B8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC103C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SleepWidgetViewModel();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_22CC10400()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC1040C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SleepWidgetViewModel();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for GreetingSleepWidgetCircularView()
{
  uint64_t result;

  result = qword_2540664C0;
  if (!qword_2540664C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22CC10488()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SleepWidgetViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_UNKNOWN **sub_22CC104F0()
{
  return &protocol witness table for SleepWidgetViewModel;
}

uint64_t sub_22CC104FC(uint64_t a1)
{
  uint64_t result;

  result = sub_22CC07B74(&qword_2540664B8, (uint64_t (*)(uint64_t))type metadata accessor for GreetingSleepWidgetCircularView, (uint64_t)&unk_22CC66ADC);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22CC10538()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22CC10548@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void *v14;
  uint64_t v15;
  BOOL v16;
  double v17;
  uint64_t (*v18)(uint64_t);
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = v1;
  v22 = a1;
  v3 = sub_22CC659D0();
  MEMORY[0x24BDAC7A8](v3);
  v4 = sub_22CC65274();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_22CC659DC();
  v8 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC65268();
  v11 = sub_22CC65238();
  v20[1] = v12;
  v20[2] = v11;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v13 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SleepWidgetViewModel() + 40));
  v14 = (void *)v13[1];
  v15 = MEMORY[0x24BEE4AF8];
  if (*v13)
    v16 = v14 == 0;
  else
    v16 = 1;
  if (!v16)
  {
    objc_msgSend(v14, sel_sleepDuration);
    if (v17 > COERCE_DOUBLE(1) && v17 > 0.0)
    {
      sub_22CC082A8(0, qword_255C3CA10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
      sub_22CC64F5C();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_22CC663F0;
      sub_22CC09740();
      sub_22CC65B74();
      swift_bridgeObjectRelease();
    }
  }
  if (qword_254066798 != -1)
    swift_once();
  v23 = v15;
  v18 = (uint64_t (*)(uint64_t))MEMORY[0x24BE49EA8];
  sub_22CC07B74(&qword_254066778, (uint64_t (*)(uint64_t))MEMORY[0x24BE49EA8], MEMORY[0x24BE49EB0]);
  sub_22CC082A8(0, &qword_2540667B0, v18, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_22CC09A8C();
  swift_bridgeObjectRetain();
  sub_22CC65D48();
  sub_22CC659B8();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(v22, v10, v21);
}

uint64_t sub_22CC1081C()
{
  return sub_22CC07B74(&qword_254066780, (uint64_t (*)(uint64_t))MEMORY[0x24BE49EB8], MEMORY[0x24BE49E88]);
}

_QWORD *sub_22CC10848(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v7 = *(int *)(a3 + 28);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    sub_22CC082A8(0, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_22CC65A3C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v12 = *(int *)(a3 + 32);
    v13 = (_QWORD *)((char *)v4 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v15 = sub_22CC65A18();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_22CC109E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a1 + *(int *)(a2 + 28);
  sub_22CC082A8(0, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_22CC65A3C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  v6 = a1 + *(int *)(a2 + 32);
  sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v7 = sub_22CC65A18();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t sub_22CC10AD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(int *)(a3 + 28);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  sub_22CC082A8(0, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_22CC65A3C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    *v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v10 = *(int *)(a3 + 32);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13 = sub_22CC65A18();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  }
  else
  {
    *v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_22CC10C48(uint64_t a1, __int128 *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;

  v4 = *a2;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_OWORD *)a1 = v4;
  *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  if ((__int128 *)a1 != a2)
  {
    v7 = *(int *)(a3 + 28);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (_QWORD *)((char *)a2 + v7);
    v10 = (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10];
    sub_22CC10DF8(a1 + v7, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10]);
    sub_22CC082A8(0, &qword_2540658A0, v10, MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_22CC65A3C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v12 = *(int *)(a3 + 32);
    v13 = (_QWORD *)(a1 + v12);
    v14 = (_QWORD *)((char *)a2 + v12);
    v15 = (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0];
    sub_22CC10DF8(a1 + v12, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0]);
    sub_22CC082A8(0, &qword_2540665B0, v15, MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v16 = sub_22CC65A18();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v13, v14, v16);
    }
    else
    {
      *v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_22CC10DF8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  sub_22CC082A8(0, a2, a3, MEMORY[0x24BDEB560]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_22CC10E3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(int *)(a3 + 28);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  sub_22CC082A8(0, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
  v10 = v9;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_22CC65A3C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v7, v8, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  v12 = *(int *)(a3 + 32);
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
  v16 = v15;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = sub_22CC65A18();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v13, v14, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  return a1;
}

uint64_t sub_22CC10FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 28);
    v7 = (void *)(a1 + v6);
    v8 = (const void *)(a2 + v6);
    v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10];
    sub_22CC10DF8(a1 + v6, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10]);
    sub_22CC082A8(0, &qword_2540658A0, v9, MEMORY[0x24BDEB560]);
    v11 = v10;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_22CC65A3C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v7, v8, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    v13 = *(int *)(a3 + 32);
    v14 = (void *)(a1 + v13);
    v15 = (const void *)(a2 + v13);
    v16 = (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0];
    sub_22CC10DF8(a1 + v13, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0]);
    sub_22CC082A8(0, &qword_2540665B0, v16, MEMORY[0x24BDEB560]);
    v18 = v17;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v19 = sub_22CC65A18();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v14, v15, v19);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_22CC1115C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC11168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 16);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    sub_22CC082A8(0, &qword_255C3CAB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB580]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 28);
    }
    else
    {
      sub_22CC082A8(0, qword_255C3CAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB580]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a3 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_22CC11230()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC1123C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 16) = -(char)a2;
  }
  else
  {
    sub_22CC082A8(0, &qword_255C3CAB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB580]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 28);
    }
    else
    {
      sub_22CC082A8(0, qword_255C3CAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB580]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a4 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for PlaceholderBarView(uint64_t a1)
{
  return sub_22CC0D950(a1, qword_255C3CB18);
}

void sub_22CC11318()
{
  unint64_t v0;
  unint64_t v1;

  sub_22CC082A8(319, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
  {
    sub_22CC082A8(319, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

_QWORD *sub_22CC113F0(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_22CC082A8(0, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_22CC65A3C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = a3[5];
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (_QWORD *)((char *)a2 + v9);
    sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_22CC65A18();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v13 = a3[6];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = *(_QWORD *)v15;
    v17 = v15[8];
    sub_22CC11614(*(_QWORD *)v15, v17);
    *(_QWORD *)v14 = v16;
    v14[8] = v17;
    v18 = a3[7];
    v19 = a3[8];
    v20 = (_QWORD *)((char *)a1 + v18);
    v21 = (_QWORD *)((char *)a2 + v18);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = v21[3];
    v20[2] = v21[2];
    v20[3] = v23;
    v24 = v21[5];
    v20[4] = v21[4];
    v20[5] = v24;
    v25 = (char *)a1 + v19;
    v26 = (char *)a2 + v19;
    *(_OWORD *)v25 = *(_OWORD *)v26;
    v25[16] = v26[16];
    v27 = a3[10];
    *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
    *((_BYTE *)a1 + v27) = *((_BYTE *)a2 + v27);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_22CC11614(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t sub_22CC11620(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_22CC082A8(0, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_22CC65A3C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  v5 = a1 + *(int *)(a2 + 20);
  sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_22CC65A18();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  sub_22CC11750(*(_QWORD *)(a1 + *(int *)(a2 + 24)), *(_BYTE *)(a1 + *(int *)(a2 + 24) + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22CC11750(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_release();
  return result;
}

_QWORD *sub_22CC1175C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  sub_22CC082A8(0, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_22CC65A3C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_22CC65A18();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = *(_QWORD *)v13;
  v15 = v13[8];
  sub_22CC11614(*(_QWORD *)v13, v15);
  *(_QWORD *)v12 = v14;
  v12[8] = v15;
  v16 = a3[7];
  v17 = a3[8];
  v18 = (_QWORD *)((char *)a1 + v16);
  v19 = (_QWORD *)((char *)a2 + v16);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = v19[3];
  v18[2] = v19[2];
  v18[3] = v21;
  v22 = v19[5];
  v18[4] = v19[4];
  v18[5] = v22;
  v23 = (char *)a1 + v17;
  v24 = (char *)a2 + v17;
  *(_OWORD *)v23 = *(_OWORD *)v24;
  v23[16] = v24[16];
  v25 = a3[10];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  *((_BYTE *)a1 + v25) = *((_BYTE *)a2 + v25);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_22CC11954(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;

  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10];
    sub_22CC10DF8((uint64_t)a1, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10]);
    sub_22CC082A8(0, &qword_2540658A0, v6, MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_22CC65A3C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v8 = a3[5];
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0];
    sub_22CC10DF8((uint64_t)a1 + v8, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0]);
    sub_22CC082A8(0, &qword_2540665B0, v11, MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_22CC65A18();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
    }
    else
    {
      *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v13 = a3[6];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = *(_QWORD *)v15;
  v17 = v15[8];
  sub_22CC11614(*(_QWORD *)v15, v17);
  v18 = *(_QWORD *)v14;
  v19 = v14[8];
  *(_QWORD *)v14 = v16;
  v14[8] = v17;
  sub_22CC11750(v18, v19);
  v20 = a3[7];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  *(_QWORD *)((char *)a1 + v20) = *(_QWORD *)((char *)a2 + v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21[2] = v22[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21[3] = v22[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21[4] = v22[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21[5] = v22[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = a3[8];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = *(_OWORD *)v25;
  v24[16] = v25[16];
  *(_OWORD *)v24 = v26;
  v27 = a3[9];
  v28 = (_QWORD *)((char *)a1 + v27);
  v29 = (_QWORD *)((char *)a2 + v27);
  *v28 = *v29;
  v28[1] = v29[1];
  *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
  return a1;
}

char *sub_22CC11BF4(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;

  sub_22CC082A8(0, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
  v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_22CC65A3C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
  v13 = v12;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = sub_22CC65A18();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v10, v11, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  v15 = a3[6];
  v16 = a3[7];
  v17 = &a1[v15];
  v18 = &a2[v15];
  *(_QWORD *)v17 = *(_QWORD *)v18;
  v17[8] = v18[8];
  v19 = &a1[v16];
  v20 = &a2[v16];
  v21 = *((_OWORD *)v20 + 1);
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *((_OWORD *)v19 + 1) = v21;
  *((_OWORD *)v19 + 2) = *((_OWORD *)v20 + 2);
  v22 = a3[8];
  v23 = a3[9];
  v24 = &a1[v22];
  v25 = &a2[v22];
  *(_OWORD *)v24 = *(_OWORD *)v25;
  v24[16] = v25[16];
  *(_OWORD *)&a1[v23] = *(_OWORD *)&a2[v23];
  a1[a3[10]] = a2[a3[10]];
  return a1;
}

char *sub_22CC11D9C(char *a1, char *a2, int *a3)
{
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;

  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10];
    sub_22CC10DF8((uint64_t)a1, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10]);
    sub_22CC082A8(0, &qword_2540658A0, v6, MEMORY[0x24BDEB560]);
    v8 = v7;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_22CC65A3C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    v10 = a3[5];
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0];
    sub_22CC10DF8((uint64_t)&a1[v10], &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0]);
    sub_22CC082A8(0, &qword_2540665B0, v13, MEMORY[0x24BDEB560]);
    v15 = v14;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v16 = sub_22CC65A18();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v11, v12, v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
  }
  v17 = a3[6];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = *(_QWORD *)v19;
  LOBYTE(v19) = v19[8];
  v21 = *(_QWORD *)v18;
  v22 = v18[8];
  *(_QWORD *)v18 = v20;
  v18[8] = (char)v19;
  sub_22CC11750(v21, v22);
  v23 = a3[7];
  v24 = &a1[v23];
  v25 = &a2[v23];
  *(_QWORD *)&a1[v23] = *(_QWORD *)&a2[v23];
  swift_bridgeObjectRelease();
  *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
  swift_bridgeObjectRelease();
  *((_QWORD *)v24 + 2) = *((_QWORD *)v25 + 2);
  swift_bridgeObjectRelease();
  *((_QWORD *)v24 + 3) = *((_QWORD *)v25 + 3);
  swift_bridgeObjectRelease();
  *((_QWORD *)v24 + 4) = *((_QWORD *)v25 + 4);
  swift_bridgeObjectRelease();
  *((_QWORD *)v24 + 5) = *((_QWORD *)v25 + 5);
  swift_bridgeObjectRelease();
  v26 = a3[8];
  v27 = a3[9];
  v28 = &a1[v26];
  v29 = &a2[v26];
  *(_OWORD *)v28 = *(_OWORD *)v29;
  v28[16] = v29[16];
  *(_OWORD *)&a1[v27] = *(_OWORD *)&a2[v27];
  a1[a3[10]] = a2[a3[10]];
  return a1;
}

uint64_t sub_22CC11FE4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC11FF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  sub_22CC082A8(0, &qword_255C3CAB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB580]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  sub_22CC082A8(0, qword_255C3CAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB580]);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t sub_22CC120C8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_22CC120D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_22CC082A8(0, &qword_255C3CAB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB580]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
LABEL_5:
    v11(v12, a2, a2, v10);
    return;
  }
  sub_22CC082A8(0, qword_255C3CAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB580]);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
}

uint64_t type metadata accessor for BarView(uint64_t a1)
{
  return sub_22CC0D950(a1, qword_255C3CBB8);
}

void sub_22CC121BC()
{
  unint64_t v0;
  unint64_t v1;

  sub_22CC082A8(319, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
  {
    sub_22CC082A8(319, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_22CC122A0()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_22CC122B0()
{
  id v0;
  double v1;
  double v2;
  double result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v0, sel_scale);
  v2 = v1;

  result = 1.0 / v2;
  *(double *)&qword_255C3CAA0 = 1.0 / v2;
  return result;
}

double sub_22CC12318()
{
  double result;

  if (qword_255C3C8F0 != -1)
    swift_once();
  result = *(double *)&qword_255C3CAA0;
  qword_255C3CAA8 = qword_255C3CAA0;
  return result;
}

uint64_t sub_22CC12360@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int *v19;
  __int128 *v20;
  __int128 v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t (*v29)(_QWORD);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;

  v40 = a1;
  sub_22CC15DF0(0, &qword_255C3CC28, &qword_255C3CC30, (uint64_t (*)(uint64_t))sub_22CC14D1C, &qword_255C3CC60);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (uint64_t *)((char *)&v37 - v3);
  sub_22CC15094();
  v39 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v38 = (uint64_t)&v37 - v9;
  sub_22CC15138(0, &qword_255C3CC78, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF380]);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v37 - v11;
  sub_22CC082A8(0, &qword_255C3CAB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB580]);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (uint64_t *)((char *)&v37 - v14);
  v16 = type metadata accessor for PlaceholderBarView(0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (int *)type metadata accessor for BarView(0);
  v20 = (__int128 *)(v1 + v19[7]);
  v21 = v20[1];
  v41 = *v20;
  v42 = v21;
  v43 = v20[2];
  v22 = sub_22CC45A80();
  v23 = v1 + v19[8];
  if ((v22 & 1) != 0)
  {
    v24 = *(_QWORD *)(v23 + 8);
    v38 = *(_QWORD *)v23;
    v25 = *(_BYTE *)(v23 + 16);
    v26 = *(_BYTE *)(v1 + v19[10]);
    *v15 = swift_getKeyPath();
    v27 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_22CC082A8(0, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
    swift_storeEnumTagMultiPayload();
    *(_QWORD *)&v18[*(int *)(v16 + 32)] = swift_getKeyPath();
    sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], v27);
    swift_storeEnumTagMultiPayload();
    *(_QWORD *)v18 = v38;
    *((_QWORD *)v18 + 1) = v24;
    v18[16] = v25;
    *((_QWORD *)v18 + 3) = 0x4018000000000000;
    v18[32] = v26;
    sub_22CC15424((uint64_t)v15, (uint64_t)&v18[*(int *)(v16 + 28)]);
    sub_22CC0DE10((uint64_t)v18, (uint64_t)v12, type metadata accessor for PlaceholderBarView);
    swift_storeEnumTagMultiPayload();
    sub_22CC07B74(&qword_254065600, type metadata accessor for PlaceholderBarView, (uint64_t)&unk_22CC66C38);
    sub_22CC152DC();
    sub_22CC65520();
    v28 = (uint64_t)v18;
    v29 = type metadata accessor for PlaceholderBarView;
  }
  else
  {
    v30 = v39;
    if ((*(_BYTE *)(v23 + 16) & 1) != 0)
      v31 = sub_22CC65904();
    else
      v31 = sub_22CC6591C();
    *v4 = v31;
    v4[1] = v32;
    sub_22CC151A0();
    sub_22CC12764(v1, (uint64_t)v4 + *(int *)(v33 + 44));
    v34 = sub_22CC65808();
    sub_22CC1521C((uint64_t)v4, (uint64_t)v8);
    *(_QWORD *)&v8[*(int *)(v30 + 36)] = v34;
    sub_22CC15280((uint64_t)v4);
    v35 = v38;
    sub_22CC0DDCC((uint64_t)v8, v38, (uint64_t (*)(_QWORD))sub_22CC15094);
    sub_22CC0DE10(v35, (uint64_t)v12, (uint64_t (*)(_QWORD))sub_22CC15094);
    swift_storeEnumTagMultiPayload();
    sub_22CC07B74(&qword_254065600, type metadata accessor for PlaceholderBarView, (uint64_t)&unk_22CC66C38);
    sub_22CC152DC();
    sub_22CC65520();
    v28 = v35;
    v29 = (uint64_t (*)(_QWORD))sub_22CC15094;
  }
  return sub_22CC0DE54(v28, v29);
}

uint64_t sub_22CC12764@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  void (*v68)(char *, char *, uint64_t);
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  int *v81;
  int *v82;
  char *v83;
  char *v84;
  char *v85;
  void (*v86)(char *, uint64_t);
  uint64_t v87;
  uint64_t v88;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t KeyPath;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t OpaqueTypeConformance2;
  char *v128;
  char *v129;
  char *v130;
  char *v131;
  uint64_t v132;
  unint64_t v133;
  _DWORD v134[2];
  _BYTE v135[7];
  unsigned __int8 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unsigned __int8 v160;
  _BYTE v161[7];
  uint64_t v162;
  uint64_t v163;

  v98 = a2;
  v3 = type metadata accessor for BarView(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](v3);
  sub_22CC14EAC();
  v93 = v6;
  v121 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v120 = (char *)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v97 = (char *)&v90 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v96 = (char *)&v90 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v95 = (char *)&v90 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v94 = (char *)&v90 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v104 = (char *)&v90 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v101 = (char *)&v90 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v130 = (char *)&v90 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v128 = (char *)&v90 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v129 = (char *)&v90 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v131 = (char *)&v90 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v103 = (char *)&v90 - v29;
  sub_22CC13280(*(double *)(a1 + *(int *)(v3 + 32)), *(double *)(a1 + *(int *)(v3 + 32) + 8), *(_BYTE *)(a1 + *(int *)(v3 + 32) + 16), (uint64_t)&v146);
  v106 = v146;
  v118 = v148;
  v119 = v147;
  v116 = v150;
  v117 = v149;
  v114 = v152;
  v115 = v151;
  v112 = v154;
  v113 = v153;
  v110 = v156;
  v111 = v155;
  v108 = v158;
  v109 = v157;
  v107 = v159;
  v30 = v160;
  v102 = sub_22CC65814();
  KeyPath = swift_getKeyPath();
  v136 = v30;
  v31 = (uint64_t *)(a1 + *(int *)(v3 + 28));
  v32 = *v31;
  v99 = v31;
  v33 = sub_22CC134B4(v32);
  v34 = *(_QWORD *)(v33 + 16);
  v146 = 0;
  v147 = v34;
  v92 = swift_getKeyPath();
  v100 = (uint64_t)&v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC0DE10(a1, v100, type metadata accessor for BarView);
  v35 = *(unsigned __int8 *)(v4 + 80);
  v36 = (v35 + 24) & ~v35;
  v123 = ((v5 + v36 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  v124 = v36;
  v132 = v35 | 7;
  v133 = (v5 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = v33;
  sub_22CC0DDCC((uint64_t)&v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v37 + v36, type metadata accessor for BarView);
  *(_QWORD *)(v37 + ((v5 + v36 + 7) & 0xFFFFFFFFFFFFFFF8)) = 0;
  sub_22CC1600C(0, &qword_2540656E8, MEMORY[0x24BEE1768], MEMORY[0x24BEE1780], MEMORY[0x24BEE1B68]);
  v125 = v38;
  sub_22CC14F5C();
  v122 = v39;
  v126 = sub_22CC14FC8();
  *(_QWORD *)&v137 = MEMORY[0x24BDF4780];
  *((_QWORD *)&v137 + 1) = MEMORY[0x24BDF4760];
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  sub_22CC658E0();
  v40 = v31[1];
  v92 = _HKCategoryValueSleepAnalysisDefaultAsleepValue();
  v41 = sub_22CC134B4(v40);
  v42 = *(_QWORD *)(v41 + 16);
  v146 = 0;
  v147 = v42;
  swift_getKeyPath();
  v43 = v100;
  sub_22CC0DE10(a1, v100, type metadata accessor for BarView);
  v44 = swift_allocObject();
  *(_QWORD *)(v44 + 16) = v41;
  v45 = v124;
  sub_22CC0DDCC(v43, v44 + v124, type metadata accessor for BarView);
  *(_QWORD *)(v44 + v133) = v92;
  sub_22CC658E0();
  v46 = v99;
  v47 = v99[3];
  v91 = a1;
  v48 = sub_22CC134B4(v47);
  v49 = *(_QWORD *)(v48 + 16);
  v146 = 0;
  v147 = v49;
  v92 = swift_getKeyPath();
  v50 = a1;
  v51 = v100;
  sub_22CC0DE10(v50, v100, type metadata accessor for BarView);
  v52 = swift_allocObject();
  *(_QWORD *)(v52 + 16) = v48;
  v53 = v52 + v45;
  v54 = v51;
  sub_22CC0DDCC(v51, v53, type metadata accessor for BarView);
  *(_QWORD *)(v52 + v133) = 5;
  sub_22CC658E0();
  v55 = v91;
  v56 = sub_22CC134B4(v46[2]);
  v57 = *(_QWORD *)(v56 + 16);
  v146 = 0;
  v147 = v57;
  v92 = swift_getKeyPath();
  sub_22CC0DE10(v55, v54, type metadata accessor for BarView);
  v58 = swift_allocObject();
  *(_QWORD *)(v58 + 16) = v56;
  sub_22CC0DDCC(v54, v58 + v124, type metadata accessor for BarView);
  *(_QWORD *)(v58 + v133) = 3;
  sub_22CC658E0();
  v59 = sub_22CC134B4(v46[4]);
  v60 = *(_QWORD *)(v59 + 16);
  v146 = 0;
  v147 = v60;
  v92 = swift_getKeyPath();
  sub_22CC0DE10(v55, v54, type metadata accessor for BarView);
  v61 = swift_allocObject();
  *(_QWORD *)(v61 + 16) = v59;
  v62 = v124;
  sub_22CC0DDCC(v54, v61 + v124, type metadata accessor for BarView);
  v63 = v133;
  *(_QWORD *)(v61 + v133) = 4;
  sub_22CC658E0();
  v64 = sub_22CC134B4(v99[5]);
  v65 = *(_QWORD *)(v64 + 16);
  v146 = 0;
  v147 = v65;
  swift_getKeyPath();
  sub_22CC0DE10(v55, v54, type metadata accessor for BarView);
  v66 = swift_allocObject();
  *(_QWORD *)(v66 + 16) = v64;
  sub_22CC0DDCC(v54, v66 + v62, type metadata accessor for BarView);
  *(_QWORD *)(v66 + v63) = 2;
  v67 = v101;
  sub_22CC658E0();
  LOBYTE(v66) = v136;
  LODWORD(v133) = v136;
  v134[0] = *(_DWORD *)v135;
  *(_DWORD *)((char *)v134 + 3) = *(_DWORD *)&v135[3];
  v68 = *(void (**)(char *, char *, uint64_t))(v121 + 16);
  v69 = v104;
  v70 = v93;
  v68(v104, v103, v93);
  v71 = v94;
  v68(v94, v131, v70);
  v72 = v95;
  v68(v95, v129, v70);
  v73 = v96;
  v68(v96, v128, v70);
  v74 = v97;
  v68(v97, v130, v70);
  v68(v120, v67, v70);
  *(_QWORD *)&v137 = v106;
  *((_QWORD *)&v137 + 1) = v119;
  *(_QWORD *)&v138 = v118;
  *((_QWORD *)&v138 + 1) = v117;
  *(_QWORD *)&v139 = v116;
  *((_QWORD *)&v139 + 1) = v115;
  *(_QWORD *)&v140 = v114;
  *((_QWORD *)&v140 + 1) = v113;
  *(_QWORD *)&v141 = v112;
  *((_QWORD *)&v141 + 1) = v111;
  *(_QWORD *)&v142 = v110;
  *((_QWORD *)&v142 + 1) = v109;
  *(_QWORD *)&v143 = v108;
  *((_QWORD *)&v143 + 1) = v107;
  LOBYTE(v144) = v66;
  *(_DWORD *)((char *)&v144 + 1) = v134[0];
  DWORD1(v144) = *(_DWORD *)((char *)v134 + 3);
  *((_QWORD *)&v144 + 1) = KeyPath;
  v145 = v102;
  v75 = (char *)v98;
  *(_QWORD *)(v98 + 128) = v102;
  v76 = v143;
  v77 = v142;
  *((_OWORD *)v75 + 4) = v141;
  *((_OWORD *)v75 + 5) = v77;
  v78 = v140;
  *((_OWORD *)v75 + 2) = v139;
  *((_OWORD *)v75 + 3) = v78;
  v79 = v138;
  *(_OWORD *)v75 = v137;
  *((_OWORD *)v75 + 1) = v79;
  v80 = v144;
  *((_OWORD *)v75 + 6) = v76;
  *((_OWORD *)v75 + 7) = v80;
  sub_22CC14D1C();
  v82 = v81;
  v68(&v75[v81[12]], v69, v70);
  v68(&v75[v82[16]], v71, v70);
  v68(&v75[v82[20]], v72, v70);
  v83 = v73;
  v68(&v75[v82[24]], v73, v70);
  v84 = v74;
  v68(&v75[v82[28]], v74, v70);
  v85 = v120;
  v68(&v75[v82[32]], v120, v70);
  sub_22CC158AC((uint64_t)&v137);
  v86 = *(void (**)(char *, uint64_t))(v121 + 8);
  v87 = KeyPath;
  swift_retain();
  v88 = v102;
  swift_retain();
  v86(v101, v70);
  v86(v130, v70);
  v86(v128, v70);
  v86(v129, v70);
  v86(v131, v70);
  v86(v103, v70);
  swift_release();
  swift_release();
  v86(v85, v70);
  v86(v84, v70);
  v86(v83, v70);
  v86(v72, v70);
  v86(v71, v70);
  v86(v104, v70);
  v146 = v106;
  v147 = v119;
  v148 = v118;
  v149 = v117;
  v150 = v116;
  v151 = v115;
  v152 = v114;
  v153 = v113;
  v154 = v112;
  v155 = v111;
  v156 = v110;
  v157 = v109;
  v158 = v108;
  v159 = v107;
  v160 = v133;
  *(_DWORD *)v161 = v134[0];
  *(_DWORD *)&v161[3] = *(_DWORD *)((char *)v134 + 3);
  v162 = v87;
  v163 = v88;
  return sub_22CC14C2C((uint64_t)&v146);
}

double sub_22CC13280@<D0>(double a1@<X0>, double a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  double result;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  char v18;
  _OWORD v19[7];
  char v20;

  if ((a3 & 1) != 0)
  {
    sub_22CC65904();
    sub_22CC652EC();
  }
  else
  {
    sub_22CC65904();
    sub_22CC5FAF8(a2, 0, 0.0, 1, a2, 0, 0.0, 1, v19, a1, 0, a1, 0);
  }
  v7 = MEMORY[0x24BDF52F8];
  v8 = MEMORY[0x24BDEDBD8];
  v9 = MEMORY[0x24BDED2D0];
  sub_22CC1600C(0, &qword_255C3CC08, MEMORY[0x24BDF52F8], MEMORY[0x24BDEDBD8], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  v10 = MEMORY[0x24BDEBEF8];
  sub_22CC1600C(0, &qword_254065650, v7, MEMORY[0x24BDEBEF8], (uint64_t (*)(_QWORD, uint64_t, uint64_t))v9);
  sub_22CC14CA4(&qword_255C3CC10, &qword_255C3CC08, v8, MEMORY[0x24BDEDBB8]);
  sub_22CC14CA4(&qword_255C3CC20, &qword_254065650, v10, MEMORY[0x24BDEBEE0]);
  sub_22CC65520();
  result = *(double *)v19;
  v12 = v19[1];
  v13 = v19[2];
  v14 = v19[3];
  v15 = v19[4];
  v16 = v19[5];
  v17 = v19[6];
  v18 = v20;
  *(_OWORD *)a4 = v19[0];
  *(_OWORD *)(a4 + 16) = v12;
  *(_OWORD *)(a4 + 32) = v13;
  *(_OWORD *)(a4 + 48) = v14;
  *(_OWORD *)(a4 + 64) = v15;
  *(_OWORD *)(a4 + 80) = v16;
  *(_OWORD *)(a4 + 96) = v17;
  *(_BYTE *)(a4 + 112) = v18;
  return result;
}

uint64_t sub_22CC134B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  double *v5;
  double v6;
  double v7;
  uint64_t result;
  double *v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  double *v13;
  double *v14;
  double v15;
  char v16;
  double v17;
  double v18;
  uint64_t v19;
  double *v20;
  double v21;
  double v22;
  char v23;
  double v24;
  unint64_t v25;
  unint64_t v26;
  double *v27;
  int64_t v28;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return MEMORY[0x24BEE4AF8];
  v4 = type metadata accessor for BarView(0);
  v5 = (double *)(v1 + *(int *)(v4 + 36));
  v6 = *v5;
  v7 = *(double *)(v1 + *(int *)(v4 + 32) + 8) / (v5[1] - *v5);
  result = swift_bridgeObjectRetain();
  v9 = (double *)(a1 + 48);
  v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    v15 = *(v9 - 2);
    v16 = *(_BYTE *)v9;
    v17 = v7 * (v15 - v6);
    v18 = v7 * (*(v9 - 1) - v15);
    v19 = v10[2];
    if (!v19)
    {
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        v28 = 1;
LABEL_21:
        result = (uint64_t)sub_22CC468F4(0, v28, 1, v10);
        v10 = (_QWORD *)result;
      }
LABEL_4:
      v12 = v10[2];
      v11 = v10[3];
      if (v12 >= v11 >> 1)
      {
        result = (uint64_t)sub_22CC468F4((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
        v10 = (_QWORD *)result;
      }
      v10[2] = v12 + 1;
      v13 = (double *)&v10[3 * v12];
      v13[4] = v17;
      v14 = v13 + 4;
      goto LABEL_7;
    }
    v20 = (double *)&v10[3 * v19];
    v21 = v20[1];
    v22 = v20[2];
    v23 = *((_BYTE *)v20 + 24);
    if (qword_255C3C8F8 != -1)
      result = swift_once();
    v24 = v17 - (v21 + v22);
    if (v24 >= *(double *)&qword_255C3CAA8)
    {
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        v28 = v10[2] + 1;
        goto LABEL_21;
      }
      goto LABEL_4;
    }
    if (!v10[2])
      break;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) != 0)
    {
      v25 = v10[2];
      if (!v25)
        goto LABEL_28;
    }
    else
    {
      result = (uint64_t)sub_22CC15BF0(v10);
      v10 = (_QWORD *)result;
      v25 = *(_QWORD *)(result + 16);
      if (!v25)
        goto LABEL_28;
    }
    v10[2] = v25 - 1;
    v26 = v10[3];
    if (v25 > v26 >> 1)
    {
      result = (uint64_t)sub_22CC468F4((_QWORD *)(v26 > 1), v25, 1, v10);
      v10 = (_QWORD *)result;
    }
    v16 |= v23;
    v18 = v18 + v22 + v24;
    v10[2] = v25;
    v27 = (double *)&v10[3 * v25 - 3];
    v27[4] = v21;
    v14 = v27 + 4;
LABEL_7:
    v14[1] = v18;
    *((_BYTE *)v14 + 16) = v16;
    v9 += 3;
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v10;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_22CC13708@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  int v28;
  _QWORD v29[3];
  uint64_t v30;

  v10 = sub_22CC65A18();
  v11 = *(_QWORD *)(v10 - 8);
  result = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a1;
  if ((*a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v15 < *(_QWORD *)(a2 + 16))
  {
    v16 = a2 + 24 * v15;
    v17 = *(double *)(v16 + 32);
    v18 = *(double *)(v16 + 40);
    v19 = *(_BYTE *)(v16 + 48);
    v20 = type metadata accessor for BarView(0);
    v29[1] = a5;
    v21 = v20;
    sub_22CC207D8((uint64_t)v14);
    v22 = a3 + *(int *)(v21 + 24);
    v23 = *(_QWORD *)v22;
    v24 = *(_BYTE *)(v22 + 8);
    sub_22CC11614(*(_QWORD *)v22, v24);
    v25 = sub_22CC20A38(v23, v24);
    sub_22CC11750(v23, v24);
    v26 = sub_22CC138C8(v19, (uint64_t)v14, v25 & 1, a4);
    v27 = *(void (**)(char *, uint64_t))(v11 + 8);
    v27(v14, v10);
    sub_22CC207D8((uint64_t)v14);
    v28 = sub_22CC13BB4(v19, (uint64_t)v14, a4);
    v27(v14, v10);
    sub_22CC13CA4(v26, v28, &v30, v17, v18);
    swift_release();
    v29[2] = v30;
    sub_22CC6576C();
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t sub_22CC138C8(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  void *v16;
  uint64_t v18;

  v7 = sub_22CC65A18();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC65A0C();
  v11 = sub_22CC659F4();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v12 = 0;
  if ((v11 & 1) != 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_22CC657E4();
      v12 = sub_22CC6582C();
      swift_release();
    }
    else
    {
      switch(a4)
      {
        case 0:
          if ((a1 & 1) == 0)
          {
            v15 = objc_msgSend((id)objc_opt_self(), sel_systemGray5Color);
            goto LABEL_24;
          }
          if (qword_254065700 != -1)
            swift_once();
          v13 = (id)qword_254067950;
          v14 = sub_22CC65850();
          goto LABEL_25;
        case 1:
          if ((a1 & 1) == 0)
            goto LABEL_10;
          goto LABEL_12;
        case 2:
          v16 = (void *)objc_opt_self();
          if ((a1 & 1) == 0)
            goto LABEL_23;
          v15 = objc_msgSend(v16, sel_hk_sleepAwakeColor);
          goto LABEL_24;
        case 3:
          v16 = (void *)objc_opt_self();
          if ((a1 & 1) == 0)
            goto LABEL_23;
          v15 = objc_msgSend(v16, sel_hk_sleepAsleepCoreColor);
          goto LABEL_24;
        case 4:
          v16 = (void *)objc_opt_self();
          if ((a1 & 1) == 0)
            goto LABEL_23;
          v15 = objc_msgSend(v16, sel_hk_sleepAsleepDeepColor);
          goto LABEL_24;
        case 5:
          v16 = (void *)objc_opt_self();
          if ((a1 & 1) != 0)
            v15 = objc_msgSend(v16, sel_hk_sleepAsleepREMColor);
          else
LABEL_23:
            v15 = objc_msgSend(v16, sel_systemGray3Color);
          goto LABEL_24;
        default:
          if ((a1 & 1) != 0)
          {
LABEL_12:
            v14 = sub_22CC657E4();
          }
          else
          {
LABEL_10:
            v15 = objc_msgSend((id)objc_opt_self(), sel_systemGray3Color);
LABEL_24:
            v14 = MEMORY[0x22E3058E8](v15);
          }
LABEL_25:
          v12 = v14;
          break;
      }
    }
  }
  return v12;
}

uint64_t sub_22CC13BB4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v12;

  v5 = sub_22CC65A18();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC65A0C();
  sub_22CC07B74(&qword_255C3CD20, v6, MEMORY[0x24BDFADF0]);
  v10 = sub_22CC65B14();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
  if ((v10 & 1) != 0)
    return sub_22CC65544();
  if ((a1 & 1) != 0)
  {
    if (a3)
      return sub_22CC65544();
    return sub_22CC6555C();
  }
  if (a3)
    return sub_22CC6555C();
  return sub_22CC65550();
}

uint64_t sub_22CC13CA4@<X0>(uint64_t a1@<X1>, int a2@<W2>, uint64_t *a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  char v36;
  char v37;
  char v38;
  _BYTE *v39;
  _BYTE *v40;
  __n128 v41;
  double v42;
  void (*v43)(_BYTE *, uint64_t);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(void);
  _BYTE *v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  _BYTE *v53;
  int v54;
  _BYTE *v55;
  double *v56;
  double v57;
  double v58;
  uint64_t result;
  _BYTE v60[4];
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t KeyPath;
  _BYTE *v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  _BYTE *v83;
  _BYTE *v84;
  uint64_t v85;
  _BYTE *v86;
  uint64_t v87;
  uint64_t *v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;

  v80 = a2;
  v88 = a3;
  sub_22CC15688();
  v82 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v86 = &v60[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v79 = sub_22CC65358();
  MEMORY[0x24BDAC7A8](v79);
  v12 = (double *)&v60[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = sub_22CC65A3C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = &v60[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v60[-v18];
  sub_22CC15700();
  v78 = v20;
  MEMORY[0x24BDAC7A8](v20);
  v22 = &v60[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_22CC15874(0);
  v81 = v23;
  MEMORY[0x24BDAC7A8](v23);
  v83 = &v60[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_22CC15890(0);
  v85 = v25;
  MEMORY[0x24BDAC7A8](v25);
  v84 = &v60[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_255C3C8F0 != -1)
    swift_once();
  v27 = 1.0;
  v77 = v17;
  if (*(double *)&qword_255C3CAA0 >= a5)
  {
    if ((qword_255C3CAA0 & 0xFFFFFFFFFFFFFLL) != 0)
      v29 = a5;
    else
      v29 = *(double *)&qword_255C3CAA0;
    if ((~qword_255C3CAA0 & 0x7FF0000000000000) != 0)
      v28 = *(double *)&qword_255C3CAA0;
    else
      v28 = v29;
    v27 = 0.5;
    if (a5 / *(double *)&qword_255C3CAA0 > 0.5)
      v27 = a5 / *(double *)&qword_255C3CAA0;
  }
  else
  {
    v28 = a5;
  }
  v30 = type metadata accessor for BarView(0);
  v31 = v5 + *(int *)(v30 + 32);
  sub_22CC14368(*(double *)v31, *(_BYTE *)(v31 + 16), (uint64_t)&v89, v28);
  v74 = *((_QWORD *)&v89 + 1);
  v75 = v89;
  v72 = *((_QWORD *)&v90 + 1);
  v73 = v90;
  v70 = *((_QWORD *)&v91 + 1);
  v71 = v91;
  v68 = *((_QWORD *)&v92 + 1);
  v69 = v92;
  v66 = *((_QWORD *)&v93 + 1);
  v67 = v93;
  v64 = *((_QWORD *)&v94 + 1);
  v65 = v94;
  v62 = *((_QWORD *)&v95 + 1);
  v63 = v95;
  v61 = v96;
  KeyPath = swift_getKeyPath();
  v87 = a1;
  swift_retain();
  sub_22CC207A8((uint64_t)v19);
  v32 = *(unsigned __int8 *)(v31 + 16);
  v33 = v5 + *(int *)(v30 + 24);
  v34 = *(_QWORD *)v33;
  v35 = v19;
  v36 = *(_BYTE *)(v33 + 8);
  sub_22CC11614(*(_QWORD *)v33, v36);
  v37 = sub_22CC20A38(v34, v36);
  v38 = v36;
  v39 = v35;
  sub_22CC11750(v34, v38);
  v40 = v77;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v14 + 16))(v77, v39, v13);
  if ((*(unsigned int (**)(_BYTE *, uint64_t))(v14 + 88))(v40, v13) == *MEMORY[0x24BDFAF08])
  {
    v41.n128_u64[0] = 3.0;
    if ((v37 & 1) != 0)
      v41.n128_f64[0] = 4.0;
    if (v32)
      v42 = 2.0;
    else
      v42 = v41.n128_f64[0];
    v43 = *(void (**)(_BYTE *, uint64_t))(v14 + 8);
  }
  else
  {
    v43 = *(void (**)(_BYTE *, uint64_t))(v14 + 8);
    v43(v40, v13);
    v42 = 2.0;
  }
  *(_QWORD *)&v89 = v75;
  *((_QWORD *)&v89 + 1) = v74;
  *(_QWORD *)&v90 = v73;
  *((_QWORD *)&v90 + 1) = v72;
  *(_QWORD *)&v91 = v71;
  *((_QWORD *)&v91 + 1) = v70;
  *(_QWORD *)&v92 = v69;
  *((_QWORD *)&v92 + 1) = v68;
  *(_QWORD *)&v93 = v67;
  *((_QWORD *)&v93 + 1) = v66;
  *(_QWORD *)&v94 = v65;
  *((_QWORD *)&v94 + 1) = v64;
  *(_QWORD *)&v95 = v63;
  *((_QWORD *)&v95 + 1) = v62;
  LOBYTE(v96) = v61;
  DWORD1(v96) = v80;
  *((_QWORD *)&v96 + 1) = KeyPath;
  v97 = v87;
  ((void (*)(_BYTE *, uint64_t, __n128))v43)(v39, v13, v41);
  v44 = (char *)v12 + *(int *)(v79 + 20);
  v45 = *MEMORY[0x24BDEEB68];
  v46 = sub_22CC654A8();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 104))(v44, v45, v46);
  *v12 = v42;
  v12[1] = v42;
  v47 = MEMORY[0x24BDED998];
  v48 = v86;
  sub_22CC0DE10((uint64_t)v12, (uint64_t)v86, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  *(_WORD *)&v48[*(int *)(v82 + 36)] = 256;
  sub_22CC0DE10((uint64_t)v48, (uint64_t)&v22[*(int *)(v78 + 36)], (uint64_t (*)(_QWORD))sub_22CC15688);
  v49 = v96;
  *((_OWORD *)v22 + 6) = v95;
  *((_OWORD *)v22 + 7) = v49;
  *((_QWORD *)v22 + 16) = v97;
  v50 = v92;
  *((_OWORD *)v22 + 2) = v91;
  *((_OWORD *)v22 + 3) = v50;
  v51 = v94;
  *((_OWORD *)v22 + 4) = v93;
  *((_OWORD *)v22 + 5) = v51;
  v52 = v90;
  *(_OWORD *)v22 = v89;
  *((_OWORD *)v22 + 1) = v52;
  sub_22CC158AC((uint64_t)&v89);
  sub_22CC0DE54((uint64_t)v48, (uint64_t (*)(_QWORD))sub_22CC15688);
  sub_22CC0DE54((uint64_t)v12, (uint64_t (*)(_QWORD))v47);
  swift_release();
  swift_release();
  v53 = v83;
  sub_22CC0DE10((uint64_t)v22, (uint64_t)v83, (uint64_t (*)(_QWORD))sub_22CC15700);
  *(double *)&v53[*(int *)(v81 + 36)] = v27;
  sub_22CC0DE54((uint64_t)v22, (uint64_t (*)(_QWORD))sub_22CC15700);
  v54 = *(unsigned __int8 *)(v31 + 16);
  v55 = v84;
  sub_22CC0DE10((uint64_t)v53, (uint64_t)v84, (uint64_t (*)(_QWORD))sub_22CC15874);
  v56 = (double *)&v55[*(int *)(v85 + 36)];
  v57 = 0.0;
  if (v54)
    v58 = 0.0;
  else
    v58 = a4;
  if (v54)
    v57 = a4;
  *v56 = v58;
  v56[1] = v57;
  sub_22CC0DE54((uint64_t)v53, (uint64_t (*)(_QWORD))sub_22CC15874);
  sub_22CC158DC(&qword_255C3CCE0, (uint64_t (*)(uint64_t))sub_22CC15890, sub_22CC15944, MEMORY[0x24BDEC438]);
  result = sub_22CC658D4();
  *v88 = result;
  return result;
}

double sub_22CC14368@<D0>(double a1@<X0>, char a2@<W2>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  double result;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  char v18;
  _OWORD v19[7];
  char v20;

  if ((a2 & 1) != 0)
  {
    sub_22CC65904();
    sub_22CC652EC();
  }
  else
  {
    sub_22CC65904();
    sub_22CC5FAF8(a4, 0, 0.0, 1, a4, 0, 0.0, 1, v19, a1, 0, a1, 0);
  }
  v7 = MEMORY[0x24BDF52F8];
  v8 = MEMORY[0x24BDEDBD8];
  v9 = MEMORY[0x24BDED2D0];
  sub_22CC1600C(0, &qword_255C3CC08, MEMORY[0x24BDF52F8], MEMORY[0x24BDEDBD8], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  v10 = MEMORY[0x24BDEBEF8];
  sub_22CC1600C(0, &qword_254065650, v7, MEMORY[0x24BDEBEF8], (uint64_t (*)(_QWORD, uint64_t, uint64_t))v9);
  sub_22CC14CA4(&qword_255C3CC10, &qword_255C3CC08, v8, MEMORY[0x24BDEDBB8]);
  sub_22CC14CA4(&qword_255C3CC20, &qword_254065650, v10, MEMORY[0x24BDEBEE0]);
  sub_22CC65520();
  result = *(double *)v19;
  v12 = v19[1];
  v13 = v19[2];
  v14 = v19[3];
  v15 = v19[4];
  v16 = v19[5];
  v17 = v19[6];
  v18 = v20;
  *(_OWORD *)a3 = v19[0];
  *(_OWORD *)(a3 + 16) = v12;
  *(_OWORD *)(a3 + 32) = v13;
  *(_OWORD *)(a3 + 48) = v14;
  *(_OWORD *)(a3 + 64) = v15;
  *(_OWORD *)(a3 + 80) = v16;
  *(_OWORD *)(a3 + 96) = v17;
  *(_BYTE *)(a3 + 112) = v18;
  return result;
}

uint64_t sub_22CC145A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22CC145B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  char v10;
  id v11;
  uint64_t v12;
  uint64_t v14;

  v1 = sub_22CC65A18();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_22CC65A3C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v0, v5);
  v9 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v8, v5);
  if (v9 != *MEMORY[0x24BDFAED8])
  {
    if (v9 != *MEMORY[0x24BDFAF08])
    {
      v12 = sub_22CC657E4();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return v12;
    }
    goto LABEL_5;
  }
  sub_22CC65A00();
  v10 = sub_22CC659F4();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if ((v10 & 1) != 0)
  {
LABEL_5:
    sub_22CC65808();
    v12 = sub_22CC6582C();
    swift_release();
    return v12;
  }
  v11 = objc_msgSend((id)objc_opt_self(), sel_systemGray5Color);
  return MEMORY[0x22E3058E8](v11);
}

uint64_t sub_22CC1473C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unsigned __int8 v12;
  uint64_t v13;
  double v14;
  BOOL v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t KeyPath;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  char v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unsigned __int8 v86;
  _BYTE v87[7];
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unsigned __int8 v91;
  uint64_t v92;
  unsigned __int8 v93;
  uint64_t v94;
  uint64_t v95;
  _BYTE v96[7];
  unsigned __int8 v97;

  v4 = sub_22CC65A18();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_22CC65A3C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC13280(*(double *)a1, *(double *)(a1 + 8), *(_BYTE *)(a1 + 16), (uint64_t)&v72);
  v51 = v73;
  v52 = v72;
  v49 = v75;
  v50 = v74;
  v48 = v76;
  v53 = v77;
  v45 = v79;
  v46 = v78;
  v59 = v81;
  v60 = v80;
  v57 = v83;
  v58 = v82;
  v55 = v85;
  v56 = v84;
  v12 = v86;
  v47 = sub_22CC65814();
  KeyPath = swift_getKeyPath();
  v97 = v12;
  sub_22CC65910();
  sub_22CC652EC();
  v44 = v90;
  v43 = v91;
  v39 = v93;
  v41 = v94;
  v42 = v92;
  v40 = v95;
  if (*(_BYTE *)(a1 + 32) == 1)
  {
    type metadata accessor for PlaceholderBarView(0);
    v37 = v8;
    sub_22CC207A8((uint64_t)v11);
    sub_22CC207D8((uint64_t)v7);
    v38 = sub_22CC145B0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v37);
  }
  else
  {
    v38 = sub_22CC65814();
  }
  v13 = swift_getKeyPath();
  v14 = *(double *)(a1 + 8) * 0.5 - *(double *)(a1 + 24) * 0.5;
  v15 = *(_BYTE *)(a1 + 16) == 0;
  LODWORD(v37) = v97;
  if (v15)
    v16 = v14;
  else
    v16 = 0.0;
  if (v15)
    v14 = 0.0;
  v18 = v51;
  v17 = v52;
  *(_QWORD *)&v61 = v52;
  *((_QWORD *)&v61 + 1) = v51;
  v19 = v49;
  v20 = v50;
  *(_QWORD *)&v62 = v50;
  *((_QWORD *)&v62 + 1) = v49;
  v21 = v48;
  *(_QWORD *)&v63 = v48;
  *((_QWORD *)&v63 + 1) = v53;
  v23 = v45;
  v22 = v46;
  *(_QWORD *)&v64 = v46;
  *((_QWORD *)&v64 + 1) = v45;
  *(_QWORD *)&v65 = v60;
  *((_QWORD *)&v65 + 1) = v59;
  *(_QWORD *)&v66 = v58;
  *((_QWORD *)&v66 + 1) = v57;
  *(_QWORD *)&v67 = v56;
  *((_QWORD *)&v67 + 1) = v55;
  LOBYTE(v68) = v97;
  *(_DWORD *)((char *)&v68 + 1) = *(_DWORD *)v96;
  DWORD1(v68) = *(_DWORD *)&v96[3];
  v24 = v47;
  *((_QWORD *)&v68 + 1) = KeyPath;
  v69 = v47;
  v25 = v64;
  *(_OWORD *)(a2 + 32) = v63;
  *(_OWORD *)(a2 + 48) = v25;
  v26 = v65;
  v27 = v66;
  v28 = v68;
  *(_OWORD *)(a2 + 96) = v67;
  *(_OWORD *)(a2 + 112) = v28;
  *(_OWORD *)(a2 + 64) = v26;
  *(_OWORD *)(a2 + 80) = v27;
  v29 = v62;
  *(_OWORD *)a2 = v61;
  *(_OWORD *)(a2 + 16) = v29;
  v30 = v43;
  v71 = v43;
  v31 = v39;
  v70 = v39;
  v32 = v44;
  *(_QWORD *)(a2 + 128) = v24;
  *(_QWORD *)(a2 + 136) = v32;
  *(_BYTE *)(a2 + 144) = v30;
  *(_QWORD *)(a2 + 152) = v42;
  *(_BYTE *)(a2 + 160) = v31;
  v33 = v40;
  *(_QWORD *)(a2 + 168) = v41;
  *(_QWORD *)(a2 + 176) = v33;
  v34 = v38;
  *(_QWORD *)(a2 + 184) = v13;
  *(_QWORD *)(a2 + 192) = v34;
  *(double *)(a2 + 200) = v16;
  *(double *)(a2 + 208) = v14;
  sub_22CC158AC((uint64_t)&v61);
  v72 = v17;
  v73 = v18;
  v74 = v20;
  v75 = v19;
  v76 = v21;
  v77 = v53;
  v78 = v22;
  v79 = v23;
  v80 = v60;
  v81 = v59;
  v82 = v58;
  v83 = v57;
  v84 = v56;
  v85 = v55;
  v86 = v37;
  *(_DWORD *)v87 = *(_DWORD *)v96;
  *(_DWORD *)&v87[3] = *(_DWORD *)&v96[3];
  v88 = KeyPath;
  v89 = v24;
  return sub_22CC14C2C((uint64_t)&v72);
}

double sub_22CC14AF4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  double result;
  __int128 v13;
  _OWORD v14[13];
  uint64_t v15;

  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
    v3 = sub_22CC65904();
  else
    v3 = sub_22CC6591C();
  v5 = v3;
  v6 = v4;
  sub_22CC1473C(v1, (uint64_t)v14);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = v14[11];
  *(_OWORD *)(a1 + 176) = v14[10];
  *(_OWORD *)(a1 + 192) = v7;
  *(_OWORD *)(a1 + 208) = v14[12];
  *(_QWORD *)(a1 + 224) = v15;
  v8 = v14[7];
  *(_OWORD *)(a1 + 112) = v14[6];
  *(_OWORD *)(a1 + 128) = v8;
  v9 = v14[9];
  *(_OWORD *)(a1 + 144) = v14[8];
  *(_OWORD *)(a1 + 160) = v9;
  v10 = v14[3];
  *(_OWORD *)(a1 + 48) = v14[2];
  *(_OWORD *)(a1 + 64) = v10;
  v11 = v14[5];
  *(_OWORD *)(a1 + 80) = v14[4];
  *(_OWORD *)(a1 + 96) = v11;
  result = *(double *)v14;
  v13 = v14[1];
  *(_OWORD *)(a1 + 16) = v14[0];
  *(_OWORD *)(a1 + 32) = v13;
  return result;
}

uint64_t sub_22CC14B8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_22CC653AC();
  *a1 = result;
  return result;
}

uint64_t sub_22CC14BB4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_22CC653AC();
  *a1 = result;
  return result;
}

uint64_t sub_22CC14BDC()
{
  swift_retain();
  return sub_22CC653B8();
}

uint64_t sub_22CC14C04()
{
  swift_retain();
  return sub_22CC653B8();
}

uint64_t sub_22CC14C2C(uint64_t a1)
{
  swift_release();
  swift_release();
  return a1;
}

unint64_t sub_22CC14C60()
{
  unint64_t result;

  result = qword_255C3CC18;
  if (!qword_255C3CC18)
  {
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDF52D0], MEMORY[0x24BDF52F8]);
    atomic_store(result, (unint64_t *)&qword_255C3CC18);
  }
  return result;
}

uint64_t sub_22CC14CA4(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    sub_22CC1600C(255, a2, MEMORY[0x24BDF52F8], a3, (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    v8 = v7;
    v9[0] = sub_22CC14C60();
    v9[1] = a4;
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

void sub_22CC14D1C()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_255C3CC38)
  {
    sub_22CC15774(255, &qword_255C3CC40, (void (*)(uint64_t))sub_22CC14DAC);
    sub_22CC14EAC();
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_255C3CC38);
  }
}

void sub_22CC14DAC()
{
  uint64_t v0;
  uint64_t (*v1)(void);
  unint64_t v2;
  uint64_t v3;

  if (!qword_255C3CC48)
  {
    v0 = MEMORY[0x24BDF52F8];
    v1 = MEMORY[0x24BDED2D0];
    sub_22CC1600C(255, &qword_255C3CC08, MEMORY[0x24BDF52F8], MEMORY[0x24BDEDBD8], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    sub_22CC1600C(255, &qword_254065650, v0, MEMORY[0x24BDEBEF8], (uint64_t (*)(_QWORD, uint64_t, uint64_t))v1);
    v2 = sub_22CC6552C();
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_255C3CC48);
  }
}

void sub_22CC14E58()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2540656C8)
  {
    v0 = sub_22CC65CF4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2540656C8);
  }
}

void sub_22CC14EAC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3CC50)
  {
    sub_22CC1600C(255, &qword_2540656E8, MEMORY[0x24BEE1768], MEMORY[0x24BEE1780], MEMORY[0x24BEE1B68]);
    sub_22CC14F5C();
    sub_22CC14FC8();
    v0 = sub_22CC658EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3CC50);
  }
}

void sub_22CC14F5C()
{
  unint64_t v0;
  uint64_t v1;
  _QWORD v2[2];

  if (!qword_255C3CC58)
  {
    v2[0] = MEMORY[0x24BDF4780];
    v2[1] = MEMORY[0x24BDF4760];
    v0 = MEMORY[0x22E3063BC](0, v2, MEMORY[0x24BDFAC10], 0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3CC58);
  }
}

unint64_t sub_22CC14FC8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v4[2];

  result = qword_2540656F0;
  if (!qword_2540656F0)
  {
    sub_22CC1600C(255, &qword_2540656E8, MEMORY[0x24BEE1768], MEMORY[0x24BEE1780], MEMORY[0x24BEE1B68]);
    v2 = v1;
    v3 = sub_22CC15050();
    v4[0] = MEMORY[0x24BEE17A8];
    v4[1] = v3;
    result = MEMORY[0x22E3063F8](MEMORY[0x24BEE1BD0], v2, v4);
    atomic_store(result, (unint64_t *)&qword_2540656F0);
  }
  return result;
}

unint64_t sub_22CC15050()
{
  unint64_t result;

  result = qword_2540656D8;
  if (!qword_2540656D8)
  {
    result = MEMORY[0x22E3063F8](MEMORY[0x24BEE1790], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_2540656D8);
  }
  return result;
}

void sub_22CC15094()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3CC68)
  {
    sub_22CC15DF0(255, &qword_255C3CC28, &qword_255C3CC30, (uint64_t (*)(uint64_t))sub_22CC14D1C, &qword_255C3CC60);
    sub_22CC1600C(255, &qword_255C3CC70, MEMORY[0x24BDF3E48], MEMORY[0x24BDF3E18], MEMORY[0x24BDF06F8]);
    v0 = sub_22CC6534C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3CC68);
  }
}

void sub_22CC15138(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v6 = type metadata accessor for PlaceholderBarView(255);
    sub_22CC15094();
    v8 = a3(a1, v6, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_22CC151A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3CC80)
  {
    sub_22CC082A8(255, &qword_255C3CC30, (uint64_t (*)(uint64_t))sub_22CC14D1C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    v0 = sub_22CC65310();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3CC80);
  }
}

uint64_t sub_22CC1521C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_22CC15DF0(0, &qword_255C3CC28, &qword_255C3CC30, (uint64_t (*)(uint64_t))sub_22CC14D1C, &qword_255C3CC60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22CC15280(uint64_t a1)
{
  uint64_t v2;

  sub_22CC15DF0(0, &qword_255C3CC28, &qword_255C3CC30, (uint64_t (*)(uint64_t))sub_22CC14D1C, &qword_255C3CC60);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_22CC152DC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255C3CC88;
  if (!qword_255C3CC88)
  {
    sub_22CC15094();
    v2 = v1;
    v3[0] = sub_22CC15364();
    v3[1] = sub_22CC153CC(&qword_255C3CC98, &qword_255C3CC70, MEMORY[0x24BDF3E48], MEMORY[0x24BDF3E18]);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_255C3CC88);
  }
  return result;
}

unint64_t sub_22CC15364()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255C3CC90;
  if (!qword_255C3CC90)
  {
    sub_22CC15DF0(255, &qword_255C3CC28, &qword_255C3CC30, (uint64_t (*)(uint64_t))sub_22CC14D1C, &qword_255C3CC60);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDF4750], v1);
    atomic_store(result, (unint64_t *)&qword_255C3CC90);
  }
  return result;
}

uint64_t sub_22CC153CC(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_22CC1600C(255, a2, a3, a4, MEMORY[0x24BDF06F8]);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDF0710], v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22CC15424(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_22CC082A8(0, &qword_255C3CAB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB580]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroyTm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = type metadata accessor for BarView(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 24) & ~v2;
  swift_bridgeObjectRelease();
  v4 = v0 + v3;
  sub_22CC082A8(0, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_22CC65A3C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_release();
  }
  v6 = v4 + *(int *)(v1 + 20);
  sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_22CC65A18();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  sub_22CC11750(*(_QWORD *)(v4 + *(int *)(v1 + 24)), *(_BYTE *)(v4 + *(int *)(v1 + 24) + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_22CC15614@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for BarView(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_22CC13708(a1, *(_QWORD *)(v2 + 16), v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)), a2);
}

void sub_22CC15688()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3CCA0)
  {
    sub_22CC65358();
    sub_22CC07B74(&qword_255C3CCA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDED998], MEMORY[0x24BDED990]);
    v0 = sub_22CC652D4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3CCA0);
  }
}

void sub_22CC15700()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3CCB0)
  {
    sub_22CC15774(255, &qword_255C3CCB8, (void (*)(uint64_t))sub_22CC157F0);
    sub_22CC15688();
    v0 = sub_22CC6534C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3CCB0);
  }
}

void sub_22CC15774(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    sub_22CC082A8(255, &qword_2540656A0, (uint64_t (*)(uint64_t))sub_22CC14E58, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
    v4 = sub_22CC6534C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_22CC157F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3CCC0)
  {
    sub_22CC14DAC();
    sub_22CC1600C(255, &qword_255C3CCC8, MEMORY[0x24BDEFCF8], MEMORY[0x24BDEFCD0], MEMORY[0x24BDF06F8]);
    v0 = sub_22CC6534C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3CCC0);
  }
}

void sub_22CC15874(uint64_t a1)
{
  sub_22CC15F14(a1, &qword_255C3CCD0, (void (*)(uint64_t))sub_22CC15700);
}

void sub_22CC15890(uint64_t a1)
{
  sub_22CC15F14(a1, &qword_255C3CCD8, sub_22CC15874);
}

uint64_t sub_22CC158AC(uint64_t a1)
{
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_22CC158DC(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = a2(255);
    v9[0] = a3();
    v9[1] = a4;
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22CC15944()
{
  return sub_22CC158DC(&qword_255C3CCE8, (uint64_t (*)(uint64_t))sub_22CC15874, (uint64_t (*)(void))sub_22CC15968, MEMORY[0x24BDECC38]);
}

unint64_t sub_22CC15968()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255C3CCF0;
  if (!qword_255C3CCF0)
  {
    sub_22CC15700();
    v2 = v1;
    v3[0] = sub_22CC159E8();
    v3[1] = sub_22CC07B74(&qword_255C3CD18, (uint64_t (*)(uint64_t))sub_22CC15688, MEMORY[0x24BDEB950]);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_255C3CCF0);
  }
  return result;
}

unint64_t sub_22CC159E8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255C3CCF8;
  if (!qword_255C3CCF8)
  {
    sub_22CC15774(255, &qword_255C3CCB8, (void (*)(uint64_t))sub_22CC157F0);
    v2 = v1;
    v3[0] = sub_22CC15A60();
    v3[1] = sub_22CC15B90();
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_255C3CCF8);
  }
  return result;
}

unint64_t sub_22CC15A60()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255C3CD00;
  if (!qword_255C3CD00)
  {
    sub_22CC157F0();
    v2 = v1;
    v3[0] = sub_22CC15AE8();
    v3[1] = sub_22CC153CC(&qword_255C3CD10, &qword_255C3CCC8, MEMORY[0x24BDEFCF8], MEMORY[0x24BDEFCD0]);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_255C3CD00);
  }
  return result;
}

unint64_t sub_22CC15AE8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255C3CD08;
  if (!qword_255C3CD08)
  {
    sub_22CC14DAC();
    v2 = v1;
    v3[0] = sub_22CC14CA4(&qword_255C3CC10, &qword_255C3CC08, MEMORY[0x24BDEDBD8], MEMORY[0x24BDEDBB8]);
    v3[1] = sub_22CC14CA4(&qword_255C3CC20, &qword_254065650, MEMORY[0x24BDEBEF8], MEMORY[0x24BDEBEE0]);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDEF3E0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_255C3CD08);
  }
  return result;
}

unint64_t sub_22CC15B90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254065698;
  if (!qword_254065698)
  {
    sub_22CC082A8(255, &qword_2540656A0, (uint64_t (*)(uint64_t))sub_22CC14E58, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDF1028], v1);
    atomic_store(result, (unint64_t *)&qword_254065698);
  }
  return result;
}

_QWORD *sub_22CC15BF0(_QWORD *a1)
{
  return sub_22CC468F4(0, a1[2], 0, a1);
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for Segment(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Segment(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for BarSegment()
{
  return &type metadata for BarSegment;
}

ValueMetadata *type metadata accessor for BarView.Range()
{
  return &type metadata for BarView.Range;
}

uint64_t getEnumTagSinglePayload for BarView.Configuration(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BarView.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_22CC15D5C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_22CC15D68(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for BarView.Configuration()
{
  return &type metadata for BarView.Configuration;
}

unint64_t sub_22CC15D88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255C3CD28;
  if (!qword_255C3CD28)
  {
    sub_22CC15DF0(255, &qword_255C3CD30, &qword_255C3CD38, (uint64_t (*)(uint64_t))sub_22CC15E80, &qword_255C3CD48);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDF4750], v1);
    atomic_store(result, (unint64_t *)&qword_255C3CD28);
  }
  return result;
}

void sub_22CC15DF0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), unint64_t *a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_22CC082A8(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_22CC16054(a5, a3, a4);
    v9 = sub_22CC658C8();
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_22CC15E80()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255C3CD40)
  {
    sub_22CC15774(255, &qword_255C3CC40, (void (*)(uint64_t))sub_22CC14DAC);
    sub_22CC15F14(255, &qword_254065678, (void (*)(uint64_t))sub_22CC15F70);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255C3CD40);
  }
}

void sub_22CC15F14(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_22CC6534C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_22CC15F70()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254065670)
  {
    sub_22CC1600C(255, &qword_254065648, MEMORY[0x24BDF4458], MEMORY[0x24BDEBEF8], (uint64_t (*)(_QWORD, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    sub_22CC082A8(255, &qword_2540656A0, (uint64_t (*)(uint64_t))sub_22CC14E58, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
    v0 = sub_22CC6534C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254065670);
  }
}

void sub_22CC1600C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    v6 = a5(0, a3, a4);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_22CC16054(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_22CC082A8(255, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDF5428], v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22CC160A0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255C3CD50;
  if (!qword_255C3CD50)
  {
    sub_22CC15138(255, &qword_255C3CD58, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
    v2 = v1;
    v3[0] = sub_22CC07B74(&qword_254065600, type metadata accessor for PlaceholderBarView, (uint64_t)&unk_22CC66C38);
    v3[1] = sub_22CC152DC();
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDEF3E0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_255C3CD50);
  }
  return result;
}

_QWORD *sub_22CC16134(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  void *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  char *v41;
  char *v42;
  unsigned int (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  int *v62;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v7 = (int *)type metadata accessor for SleepWidgetViewModel();
    v8 = v7[5];
    v9 = (char *)v4 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_22CC64F20();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    if (v13(v10, 1, v11))
    {
      sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = v7[6];
    v17 = (char *)v4 + v16;
    v18 = (char *)a2 + v16;
    if (v13((char *)a2 + v16, 1, v11))
    {
      sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v18, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
    }
    *((_BYTE *)v4 + v7[7]) = *((_BYTE *)a2 + v7[7]);
    v20 = v7[8];
    v21 = (char *)v4 + v20;
    v22 = (uint64_t)a2 + v20;
    v23 = sub_22CC6504C();
    v24 = *(_QWORD *)(v23 - 8);
    v25 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
    v25(v21, v22, v23);
    v26 = v7[9];
    v27 = *(void **)((char *)a2 + v26);
    *(_QWORD *)((char *)v4 + v26) = v27;
    v28 = v7[10];
    v29 = (_QWORD *)((char *)v4 + v28);
    v30 = (uint64_t)a2 + v28;
    v31 = *(uint64_t *)((char *)a2 + v28);
    v32 = v27;
    if (v31)
    {
      v62 = v7;
      v33 = v24;
      v34 = v25;
      v35 = v6;
      v36 = *(void **)(v30 + 8);
      v37 = *(void **)(v30 + 16);
      *v29 = v31;
      v29[1] = v36;
      v29[2] = v37;
      swift_bridgeObjectRetain();
      v38 = v36;
      v6 = v35;
      v25 = v34;
      v24 = v33;
      v7 = v62;
      v39 = v37;
    }
    else
    {
      *(_OWORD *)v29 = *(_OWORD *)v30;
      v29[2] = *(_QWORD *)(v30 + 16);
    }
    v40 = v7[11];
    v41 = (char *)v4 + v40;
    v42 = (char *)a2 + v40;
    v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
    if (v43((char *)a2 + v40, 1, v23))
    {
      sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      v25(v41, (uint64_t)v42, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v41, 0, 1, v23);
    }
    v45 = v7[12];
    v46 = (char *)v4 + v45;
    v47 = (char *)a2 + v45;
    if (v43((char *)a2 + v45, 1, v23))
    {
      sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      v25(v46, (uint64_t)v47, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v46, 0, 1, v23);
    }
    v49 = v7[13];
    v50 = (char *)v4 + v49;
    v51 = (char *)a2 + v49;
    if (v43((char *)a2 + v49, 1, v23))
    {
      sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      v25(v50, (uint64_t)v51, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v50, 0, 1, v23);
    }
    v53 = *(int *)(v6 + 20);
    v54 = (_QWORD *)((char *)v4 + v53);
    v55 = (uint64_t *)((char *)a2 + v53);
    sub_22CC082A8(0, &qword_254065610, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v56 = sub_22CC65340();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v54, v55, v56);
    }
    else
    {
      *v54 = *v55;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v57 = *(int *)(v6 + 24);
    v58 = (_QWORD *)((char *)v4 + v57);
    v59 = (uint64_t *)((char *)a2 + v57);
    sub_22CC082A8(0, &qword_254065608, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v60 = sub_22CC65070();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v58, v59, v60);
    }
    else
    {
      *v58 = *v59;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_22CC1663C(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = (int *)type metadata accessor for SleepWidgetViewModel();
  v5 = a1 + v4[5];
  v6 = sub_22CC64F20();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  v9 = a1 + v4[6];
  if (!v8(v9, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v9, v6);
  v10 = a1 + v4[8];
  v11 = sub_22CC6504C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v13(v10, v11);

  v14 = a1 + v4[10];
  if (*(_QWORD *)v14)
  {
    swift_bridgeObjectRelease();

  }
  v15 = a1 + v4[11];
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (!v16(v15, 1, v11))
    v13(v15, v11);
  v17 = a1 + v4[12];
  if (!v16(v17, 1, v11))
    v13(v17, v11);
  v18 = a1 + v4[13];
  if (!v16(v18, 1, v11))
    v13(v18, v11);
  v19 = a1 + *(int *)(a2 + 20);
  sub_22CC082A8(0, &qword_254065610, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = sub_22CC65340();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  }
  else
  {
    swift_release();
  }
  v21 = a1 + *(int *)(a2 + 24);
  sub_22CC082A8(0, &qword_254065608, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v22 = sub_22CC65070();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
}

uint64_t sub_22CC16894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(void *, const void *, uint64_t);
  uint64_t v24;
  void *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  void *v36;
  const void *v37;
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  void *v41;
  const void *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  const void *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v57;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = (int *)type metadata accessor for SleepWidgetViewModel();
  v7 = v6[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_22CC64F20();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = v6[6];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  if (v12((const void *)(a2 + v14), 1, v10))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v15, v16, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  v57 = a3;
  *(_BYTE *)(a1 + v6[7]) = *(_BYTE *)(a2 + v6[7]);
  v18 = v6[8];
  v19 = (void *)(a1 + v18);
  v20 = (const void *)(a2 + v18);
  v21 = sub_22CC6504C();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(void (**)(void *, const void *, uint64_t))(v22 + 16);
  v23(v19, v20, v21);
  v24 = v6[9];
  v25 = *(void **)(a2 + v24);
  *(_QWORD *)(a1 + v24) = v25;
  v26 = v6[10];
  v27 = (_QWORD *)(a1 + v26);
  v28 = a2 + v26;
  v29 = *(_QWORD *)(a2 + v26);
  v30 = v25;
  if (v29)
  {
    v31 = *(void **)(v28 + 8);
    v32 = *(void **)(v28 + 16);
    *v27 = v29;
    v27[1] = v31;
    v27[2] = v32;
    swift_bridgeObjectRetain();
    v33 = v31;
    v34 = v32;
  }
  else
  {
    *(_OWORD *)v27 = *(_OWORD *)v28;
    v27[2] = *(_QWORD *)(v28 + 16);
  }
  v35 = v6[11];
  v36 = (void *)(a1 + v35);
  v37 = (const void *)(a2 + v35);
  v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
  if (v38(a2 + v35, 1, v21))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    v23(v36, v37, v21);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v36, 0, 1, v21);
  }
  v40 = v6[12];
  v41 = (void *)(a1 + v40);
  v42 = (const void *)(a2 + v40);
  if (v38(a2 + v40, 1, v21))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    v23(v41, v42, v21);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v41, 0, 1, v21);
  }
  v44 = v6[13];
  v45 = (void *)(a1 + v44);
  v46 = (const void *)(a2 + v44);
  if (v38(a2 + v44, 1, v21))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    v23(v45, v46, v21);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v45, 0, 1, v21);
  }
  v48 = *(int *)(v57 + 20);
  v49 = (_QWORD *)(a1 + v48);
  v50 = (_QWORD *)(a2 + v48);
  sub_22CC082A8(0, &qword_254065610, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v51 = sub_22CC65340();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
  }
  else
  {
    *v49 = *v50;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v52 = *(int *)(v57 + 24);
  v53 = (_QWORD *)(a1 + v52);
  v54 = (_QWORD *)(a2 + v52);
  sub_22CC082A8(0, &qword_254065608, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v55 = sub_22CC65070();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
  }
  else
  {
    *v53 = *v54;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_22CC16D58(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char *v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  _QWORD *v33;
  __int128 *v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  void *v42;
  void *v43;
  id v44;
  id v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  void *v49;
  char *v50;
  uint64_t (*v51)(uint64_t, uint64_t, uint64_t);
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  char *v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  char *v63;
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t (*v71)(uint64_t);
  uint64_t (*v72)(uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t (*v77)(uint64_t);
  uint64_t (*v78)(uint64_t, uint64_t);
  uint64_t v79;

  v5 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v5;
  v6 = (int *)type metadata accessor for SleepWidgetViewModel();
  v7 = v6[5];
  v8 = (void *)(a1 + v7);
  v9 = (char *)a2 + v7;
  v10 = sub_22CC64F20();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  v16 = v6[6];
  v17 = (void *)(a1 + v16);
  v18 = (char *)a2 + v16;
  v19 = v12((void *)(a1 + v16), 1, v10);
  v20 = v12(v18, 1, v10);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v17, v18, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v17, v10);
LABEL_12:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, char *, uint64_t))(v11 + 24))(v17, v18, v10);
LABEL_13:
  *(_BYTE *)(a1 + v6[7]) = *((_BYTE *)a2 + v6[7]);
  v22 = v6[8];
  v23 = a1 + v22;
  v24 = (uint64_t)a2 + v22;
  v25 = sub_22CC6504C();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 24);
  v27(v23, v24, v25);
  v28 = v6[9];
  v29 = *(void **)((char *)a2 + v28);
  v30 = *(void **)(a1 + v28);
  *(_QWORD *)(a1 + v28) = v29;
  v31 = v29;

  v32 = v6[10];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (__int128 *)((char *)a2 + v32);
  v35 = *(uint64_t *)((char *)a2 + v32);
  if (*(_QWORD *)(a1 + v32))
  {
    if (v35)
    {
      *v33 = v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v36 = (void *)v33[1];
      v37 = (void *)*((_QWORD *)v34 + 1);
      v33[1] = v37;
      v38 = v37;

      v39 = (void *)v33[2];
      v40 = (void *)*((_QWORD *)v34 + 2);
      v33[2] = v40;
      v41 = v40;

    }
    else
    {
      sub_22CC06744(a1 + v32);
      v46 = *((_QWORD *)v34 + 2);
      *(_OWORD *)v33 = *v34;
      v33[2] = v46;
    }
  }
  else if (v35)
  {
    *v33 = v35;
    v42 = (void *)*((_QWORD *)v34 + 1);
    v33[1] = v42;
    v43 = (void *)*((_QWORD *)v34 + 2);
    v33[2] = v43;
    swift_bridgeObjectRetain();
    v44 = v42;
    v45 = v43;
  }
  else
  {
    v47 = *v34;
    v33[2] = *((_QWORD *)v34 + 2);
    *(_OWORD *)v33 = v47;
  }
  v48 = v6[11];
  v49 = (void *)(a1 + v48);
  v50 = (char *)a2 + v48;
  v51 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  v52 = v51(a1 + v48, 1, v25);
  v53 = v51((uint64_t)v50, 1, v25);
  if (v52)
  {
    if (!v53)
    {
      (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v49, v50, v25);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v49, 0, 1, v25);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  if (v53)
  {
    (*(void (**)(void *, uint64_t))(v26 + 8))(v49, v25);
LABEL_27:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    goto LABEL_28;
  }
  v27((uint64_t)v49, (uint64_t)v50, v25);
LABEL_28:
  v55 = v6[12];
  v56 = (void *)(a1 + v55);
  v57 = (char *)a2 + v55;
  v58 = v51(a1 + v55, 1, v25);
  v59 = v51((uint64_t)v57, 1, v25);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v56, v57, v25);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v56, 0, 1, v25);
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  if (v59)
  {
    (*(void (**)(void *, uint64_t))(v26 + 8))(v56, v25);
LABEL_33:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_34;
  }
  v27((uint64_t)v56, (uint64_t)v57, v25);
LABEL_34:
  v61 = v6[13];
  v62 = (void *)(a1 + v61);
  v63 = (char *)a2 + v61;
  v64 = v51(a1 + v61, 1, v25);
  v65 = v51((uint64_t)v63, 1, v25);
  if (v64)
  {
    v66 = a3;
    if (!v65)
    {
      (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v62, v63, v25);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v62, 0, 1, v25);
      if ((uint64_t *)a1 == a2)
        return a1;
      goto LABEL_41;
    }
LABEL_40:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    if ((uint64_t *)a1 == a2)
      return a1;
    goto LABEL_41;
  }
  v66 = a3;
  if (v65)
  {
    (*(void (**)(void *, uint64_t))(v26 + 8))(v62, v25);
    goto LABEL_40;
  }
  v27((uint64_t)v62, (uint64_t)v63, v25);
  if ((uint64_t *)a1 == a2)
    return a1;
LABEL_41:
  v68 = *(int *)(v66 + 20);
  v69 = (_QWORD *)(a1 + v68);
  v70 = (uint64_t *)((char *)a2 + v68);
  v71 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
  v72 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_22CC17438(a1 + v68, &qword_254065610, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDEB560]);
  sub_22CC082A8(0, &qword_254065610, v71, v72);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v73 = sub_22CC65340();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v69, v70, v73);
  }
  else
  {
    *v69 = *v70;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v74 = *(int *)(v66 + 24);
  v75 = (_QWORD *)(a1 + v74);
  v76 = (uint64_t *)((char *)a2 + v74);
  v77 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8];
  v78 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_22CC17438(a1 + v74, &qword_254065608, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDEB560]);
  sub_22CC082A8(0, &qword_254065608, v77, v78);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v79 = sub_22CC65070();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v79 - 8) + 16))(v75, v76, v79);
  }
  else
  {
    *v75 = *v76;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_22CC17438(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v5;

  sub_22CC082A8(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_22CC17474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(void *, const void *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const void *v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  const void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  const void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = (int *)type metadata accessor for SleepWidgetViewModel();
  v7 = v6[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_22CC64F20();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = v6[6];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  if (v12((const void *)(a2 + v14), 1, v10))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v15, v16, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  *(_BYTE *)(a1 + v6[7]) = *(_BYTE *)(a2 + v6[7]);
  v18 = v6[8];
  v19 = (void *)(a1 + v18);
  v20 = (const void *)(a2 + v18);
  v21 = sub_22CC6504C();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(void (**)(void *, const void *, uint64_t))(v22 + 32);
  v23(v19, v20, v21);
  *(_QWORD *)(a1 + v6[9]) = *(_QWORD *)(a2 + v6[9]);
  v24 = v6[10];
  v25 = a1 + v24;
  v26 = a2 + v24;
  *(_QWORD *)(v25 + 16) = *(_QWORD *)(v26 + 16);
  *(_OWORD *)v25 = *(_OWORD *)v26;
  v27 = v6[11];
  v28 = (void *)(a1 + v27);
  v29 = (const void *)(a2 + v27);
  v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
  if (v30(a2 + v27, 1, v21))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    v23(v28, v29, v21);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v28, 0, 1, v21);
  }
  v32 = v6[12];
  v33 = (void *)(a1 + v32);
  v34 = (const void *)(a2 + v32);
  if (v30(a2 + v32, 1, v21))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    v23(v33, v34, v21);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v33, 0, 1, v21);
  }
  v36 = v6[13];
  v37 = (void *)(a1 + v36);
  v38 = (const void *)(a2 + v36);
  if (v30(a2 + v36, 1, v21))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    v23(v37, v38, v21);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v37, 0, 1, v21);
  }
  v40 = *(int *)(a3 + 20);
  v41 = (void *)(a1 + v40);
  v42 = (const void *)(a2 + v40);
  sub_22CC082A8(0, &qword_254065610, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDEB560]);
  v44 = v43;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v45 = sub_22CC65340();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v41, v42, v45);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  v46 = *(int *)(a3 + 24);
  v47 = (void *)(a1 + v46);
  v48 = (const void *)(a2 + v46);
  sub_22CC082A8(0, &qword_254065608, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDEB560]);
  v50 = v49;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v51 = sub_22CC65070();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v47, v48, v51);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  return a1;
}

uint64_t sub_22CC178F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  void *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  void *v35;
  const void *v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t);
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  const void *v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  const void *v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  const void *v56;
  uint64_t (*v57)(uint64_t);
  uint64_t (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  const void *v64;
  uint64_t (*v65)(uint64_t);
  uint64_t (*v66)(uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = (int *)type metadata accessor for SleepWidgetViewModel();
  v6 = v5[5];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_22CC64F20();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  v15 = v5[6];
  v16 = (void *)(a1 + v15);
  v17 = (void *)(a2 + v15);
  v18 = v11((void *)(a1 + v15), 1, v9);
  v19 = v11(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v16, v17, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v16, v9);
LABEL_12:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v16, v17, v9);
LABEL_13:
  *(_BYTE *)(a1 + v5[7]) = *(_BYTE *)(a2 + v5[7]);
  v21 = v5[8];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = sub_22CC6504C();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 40);
  v26(v22, v23, v24);
  v27 = v5[9];
  v28 = *(void **)(a1 + v27);
  *(_QWORD *)(a1 + v27) = *(_QWORD *)(a2 + v27);

  v29 = v5[10];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (_QWORD *)(a2 + v29);
  if (*(_QWORD *)(a1 + v29))
  {
    if (*v31)
    {
      *v30 = *v31;
      swift_bridgeObjectRelease();
      v32 = (void *)v30[1];
      v30[1] = v31[1];

      v33 = (void *)v30[2];
      v30[2] = v31[2];

      goto LABEL_18;
    }
    sub_22CC06744((uint64_t)v30);
  }
  *(_OWORD *)v30 = *(_OWORD *)v31;
  v30[2] = v31[2];
LABEL_18:
  v34 = v5[11];
  v35 = (void *)(a1 + v34);
  v36 = (const void *)(a2 + v34);
  v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  v38 = v37(a1 + v34, 1, v24);
  v39 = v37((uint64_t)v36, 1, v24);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(void *, const void *, uint64_t))(v25 + 32))(v35, v36, v24);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v35, 0, 1, v24);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v39)
  {
    (*(void (**)(void *, uint64_t))(v25 + 8))(v35, v24);
LABEL_23:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    goto LABEL_24;
  }
  v26((uint64_t)v35, (uint64_t)v36, v24);
LABEL_24:
  v41 = v5[12];
  v42 = (void *)(a1 + v41);
  v43 = (const void *)(a2 + v41);
  v44 = v37(a1 + v41, 1, v24);
  v45 = v37((uint64_t)v43, 1, v24);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(void *, const void *, uint64_t))(v25 + 32))(v42, v43, v24);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v42, 0, 1, v24);
      goto LABEL_30;
    }
    goto LABEL_29;
  }
  if (v45)
  {
    (*(void (**)(void *, uint64_t))(v25 + 8))(v42, v24);
LABEL_29:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    goto LABEL_30;
  }
  v26((uint64_t)v42, (uint64_t)v43, v24);
LABEL_30:
  v47 = v5[13];
  v48 = (void *)(a1 + v47);
  v49 = (const void *)(a2 + v47);
  v50 = v37(a1 + v47, 1, v24);
  v51 = v37((uint64_t)v49, 1, v24);
  if (v50)
  {
    v52 = a3;
    if (!v51)
    {
      (*(void (**)(void *, const void *, uint64_t))(v25 + 32))(v48, v49, v24);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v48, 0, 1, v24);
      if (a1 == a2)
        return a1;
      goto LABEL_37;
    }
LABEL_36:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    if (a1 == a2)
      return a1;
    goto LABEL_37;
  }
  v52 = a3;
  if (v51)
  {
    (*(void (**)(void *, uint64_t))(v25 + 8))(v48, v24);
    goto LABEL_36;
  }
  v26((uint64_t)v48, (uint64_t)v49, v24);
  if (a1 == a2)
    return a1;
LABEL_37:
  v54 = *(int *)(v52 + 20);
  v55 = (void *)(a1 + v54);
  v56 = (const void *)(a2 + v54);
  v57 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
  v58 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_22CC17438(a1 + v54, &qword_254065610, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDEB560]);
  sub_22CC082A8(0, &qword_254065610, v57, v58);
  v60 = v59;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v61 = sub_22CC65340();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v55, v56, v61);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
  }
  v62 = *(int *)(v52 + 24);
  v63 = (void *)(a1 + v62);
  v64 = (const void *)(a2 + v62);
  v65 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8];
  v66 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_22CC17438(a1 + v62, &qword_254065608, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDEB560]);
  sub_22CC082A8(0, &qword_254065608, v65, v66);
  v68 = v67;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v69 = sub_22CC65070();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v69 - 8) + 32))(v63, v64, v69);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
  }
  return a1;
}

uint64_t sub_22CC17F7C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC17F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for SleepWidgetViewModel();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_22CC082A8(0, &qword_254065618, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDEB580]);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      sub_22CC082A8(0, &qword_255C3CD60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDEB580]);
      v8 = v14;
      v12 = *(_QWORD *)(v14 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_22CC18050()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC1805C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v8 = type metadata accessor for SleepWidgetViewModel();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_22CC082A8(0, &qword_254065618, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDEB580]);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      sub_22CC082A8(0, &qword_255C3CD60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDEB580]);
      v10 = v16;
      v14 = *(_QWORD *)(v16 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for BedtimeSleepWidgetView()
{
  uint64_t result;

  result = qword_254065360;
  if (!qword_254065360)
    return swift_getSingletonMetadata();
  return result;
}

void sub_22CC18168()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for SleepWidgetViewModel();
  if (v0 <= 0x3F)
  {
    sub_22CC082A8(319, &qword_254065610, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
    {
      sub_22CC082A8(319, &qword_254065608, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDEB560]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_22CC18238()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22CC18248@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  void (*v29)(_BYTE *, uint64_t);
  double v30;
  uint64_t (*v31)(uint64_t, uint64_t);
  uint64_t *v32;
  uint64_t v33;
  _BYTE *v34;
  char v35;
  uint64_t v36;
  _BYTE *v37;
  char v38;
  uint64_t v39;
  uint64_t KeyPath;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  _BYTE *v52;
  _BYTE *v53;
  char v54;
  _BYTE *v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE v63[12];
  _BOOL4 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _BYTE *v68;
  uint64_t v69;
  _BYTE *v70;
  _BYTE *v71;
  uint64_t v72;
  _BYTE *v73;
  _BYTE *v74;
  _BYTE *v75;
  uint64_t v76;

  v76 = a2;
  v67 = type metadata accessor for SleepWidgetViewModel();
  MEMORY[0x24BDAC7A8](v67);
  v71 = &v63[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v69 = type metadata accessor for ScheduleOccurrenceSectionView(0);
  MEMORY[0x24BDAC7A8](v69);
  v5 = &v63[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_22CC19154();
  v72 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v75 = &v63[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = MEMORY[0x24BDAC7A8](v7);
  v70 = &v63[-v10];
  MEMORY[0x24BDAC7A8](v9);
  v74 = &v63[-v11];
  v12 = sub_22CC65340();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = &v63[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v14);
  v18 = &v63[-v17];
  v19 = (int *)type metadata accessor for BedTitleView(0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v73 = &v63[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (uint64_t *)&v63[-v23];
  MEMORY[0x24BDAC7A8](v22);
  v68 = &v63[-v25];
  v26 = SleepWidgetViewModel.title.getter();
  v65 = v27;
  v66 = v26;
  v64 = (*(_BYTE *)(a1 + 8) & 1) == 0 && *(_QWORD *)a1 == 5;
  type metadata accessor for BedtimeSleepWidgetView();
  sub_22CC20BF0((uint64_t)v18);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v13 + 104))(v16, *MEMORY[0x24BDECF28], v12);
  sub_22CC07B74(&qword_254065620, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDECF70]);
  v28 = sub_22CC65B08();
  v29 = *(void (**)(_BYTE *, uint64_t))(v13 + 8);
  v29(v16, v12);
  v29(v18, v12);
  if ((sub_22CC187C8() & 1) != 0)
    v30 = 0.6;
  else
    v30 = 1.0;
  *v24 = swift_getKeyPath();
  v31 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v32 = (uint64_t *)((char *)v24 + v19[5]);
  v33 = v65;
  *v32 = v66;
  v32[1] = v33;
  *((_BYTE *)v24 + v19[6]) = v64;
  *((_BYTE *)v24 + v19[7]) = (v28 & 1) == 0;
  *(double *)((char *)v24 + v19[8]) = v30;
  v34 = v68;
  sub_22CC0DDCC((uint64_t)v24, (uint64_t)v68, type metadata accessor for BedTitleView);
  v35 = sub_22CC18A0C();
  v36 = 0x4010000000000000;
  if ((v35 & 1) != 0)
    v36 = 0;
  v66 = v36;
  v37 = v71;
  sub_22CC0DE10(a1, (uint64_t)v71, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetViewModel);
  v38 = *(_BYTE *)(a1 + *(int *)(v67 + 28));
  v39 = sub_22CC18A0C() & 1;
  KeyPath = swift_getKeyPath();
  v41 = v69;
  *(_QWORD *)&v5[*(int *)(v69 + 28)] = KeyPath;
  sub_22CC082A8(0, &qword_254065610, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], v31);
  swift_storeEnumTagMultiPayload();
  sub_22CC0DDCC((uint64_t)v37, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetViewModel);
  v5[*(int *)(v41 + 20)] = v38;
  *(_QWORD *)&v5[*(int *)(v41 + 24)] = v39;
  v42 = sub_22CC655E0();
  sub_22CC652C8();
  v44 = v43;
  v46 = v45;
  v48 = v47;
  v50 = v49;
  v51 = v70;
  sub_22CC0DE10((uint64_t)v5, (uint64_t)v70, type metadata accessor for ScheduleOccurrenceSectionView);
  v52 = &v51[*(int *)(v72 + 36)];
  *v52 = v42;
  *((_QWORD *)v52 + 1) = v44;
  *((_QWORD *)v52 + 2) = v46;
  *((_QWORD *)v52 + 3) = v48;
  *((_QWORD *)v52 + 4) = v50;
  v52[40] = 0;
  sub_22CC0DE54((uint64_t)v5, type metadata accessor for ScheduleOccurrenceSectionView);
  v53 = v74;
  sub_22CC0DDCC((uint64_t)v51, (uint64_t)v74, (uint64_t (*)(_QWORD))sub_22CC19154);
  v54 = sub_22CC18C5C();
  v55 = v73;
  sub_22CC0DE10((uint64_t)v34, (uint64_t)v73, type metadata accessor for BedTitleView);
  v56 = v75;
  sub_22CC0DE10((uint64_t)v53, (uint64_t)v75, (uint64_t (*)(_QWORD))sub_22CC19154);
  v57 = v76;
  sub_22CC0DE10((uint64_t)v55, v76, type metadata accessor for BedTitleView);
  sub_22CC190C8();
  v59 = v58;
  v60 = v57 + *(int *)(v58 + 48);
  *(_QWORD *)v60 = v66;
  *(_BYTE *)(v60 + 8) = 0;
  sub_22CC0DE10((uint64_t)v56, v57 + *(int *)(v58 + 64), (uint64_t (*)(_QWORD))sub_22CC19154);
  v61 = v57 + *(int *)(v59 + 80);
  *(_QWORD *)v61 = 0;
  *(_BYTE *)(v61 + 8) = 0;
  *(_BYTE *)(v61 + 9) = (v54 & 1) == 0;
  sub_22CC0DE54((uint64_t)v53, (uint64_t (*)(_QWORD))sub_22CC19154);
  sub_22CC0DE54((uint64_t)v34, type metadata accessor for BedTitleView);
  sub_22CC0DE54((uint64_t)v56, (uint64_t (*)(_QWORD))sub_22CC19154);
  return sub_22CC0DE54((uint64_t)v55, type metadata accessor for BedTitleView);
}

uint64_t sub_22CC187C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  int v16;
  char v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;

  v0 = sub_22CC65340();
  v22 = *(_QWORD *)(v0 - 8);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v21 - v4;
  sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v21 - v7;
  v9 = sub_22CC65070();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for BedtimeSleepWidgetView();
  sub_22CC20C24((uint64_t)v12);
  v13 = sub_22CC65064();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) != 0
    || (sub_22CC53F64((uint64_t)v8),
        v14 = sub_22CC6504C(),
        v15 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900],
        v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v8, 1, v14),
        sub_22CC17438((uint64_t)v8, (unint64_t *)&qword_254065348, v15, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]), v16 == 1))
  {
    v17 = 0;
  }
  else
  {
    sub_22CC20BF0((uint64_t)v5);
    v18 = v22;
    (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v3, *MEMORY[0x24BDECEA8], v0);
    sub_22CC07B74(&qword_254065620, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDECF70]);
    v17 = sub_22CC65B08() ^ 1;
    v19 = *(void (**)(char *, uint64_t))(v18 + 8);
    v19(v3, v0);
    v19(v5, v0);
  }
  return v17 & 1;
}

uint64_t sub_22CC18A0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t);
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char v14;
  int v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  v0 = sub_22CC65340();
  v26 = *(_QWORD *)(v0 - 8);
  v27 = v0;
  v1 = MEMORY[0x24BDAC7A8](v0);
  v25 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v24 = (uint64_t)&v24 - v3;
  v4 = sub_22CC65070();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v24 - v11;
  sub_22CC53F64((uint64_t)&v24 - v11);
  v13 = sub_22CC6504C();
  v14 = 1;
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13);
  sub_22CC17438((uint64_t)v12, (unint64_t *)&qword_254065348, v8, v9);
  if (v15 != 1)
  {
    type metadata accessor for BedtimeSleepWidgetView();
    sub_22CC20C24((uint64_t)v7);
    v16 = sub_22CC65064();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if ((v16 & 1) != 0)
    {
      v14 = 0;
    }
    else
    {
      v17 = v24;
      sub_22CC20BF0(v24);
      v19 = v25;
      v18 = v26;
      v20 = v27;
      (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v25, *MEMORY[0x24BDECEA0], v27);
      sub_22CC07B74(&qword_254065620, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDECF70]);
      v21 = sub_22CC65B08();
      v22 = *(void (**)(char *, uint64_t))(v18 + 8);
      v22(v19, v20);
      v22((char *)v17, v20);
      v14 = v21 ^ 1;
    }
  }
  return v14 & 1;
}

uint64_t sub_22CC18C5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(uint64_t);
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int v13;
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v0 = sub_22CC65340();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v17 - v5;
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v17 - v10;
  sub_22CC53F64((uint64_t)&v17 - v10);
  v12 = sub_22CC6504C();
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12);
  sub_22CC17438((uint64_t)v11, (unint64_t *)&qword_254065348, v7, v8);
  if (v13 == 1)
  {
    type metadata accessor for BedtimeSleepWidgetView();
    sub_22CC20BF0((uint64_t)v6);
    (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v4, *MEMORY[0x24BDECEA0], v0);
    sub_22CC07B74(&qword_254065620, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDECF70]);
    v14 = sub_22CC65B08() ^ 1;
    v15 = *(void (**)(char *, uint64_t))(v1 + 8);
    v15(v4, v0);
    v15(v6, v0);
  }
  else
  {
    v14 = sub_22CC18A0C();
  }
  return v14 & 1;
}

uint64_t sub_22CC18E20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t result;
  uint64_t v12;

  sub_22CC18FD8();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC19050();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = sub_22CC654CC();
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 0;
  sub_22CC19264();
  sub_22CC18248(v0, (uint64_t)&v6[*(int *)(v7 + 44)]);
  v8 = *MEMORY[0x24BDECEA8];
  v9 = sub_22CC65340();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 104))(v3, v8, v9);
  sub_22CC07B74(&qword_254065628, v10, MEMORY[0x24BDECF78]);
  result = sub_22CC65B14();
  if ((result & 1) != 0)
  {
    sub_22CC07B74(&qword_255C3CDA0, (uint64_t (*)(uint64_t))sub_22CC19050, MEMORY[0x24BDF4700]);
    sub_22CC07B74(&qword_2540657A0, (uint64_t (*)(uint64_t))sub_22CC18FD8, MEMORY[0x24BEE30C8]);
    sub_22CC657B4();
    sub_22CC0DE54((uint64_t)v3, (uint64_t (*)(_QWORD))sub_22CC18FD8);
    return sub_22CC0DE54((uint64_t)v6, (uint64_t (*)(_QWORD))sub_22CC19050);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_22CC18FD8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2540657A8)
  {
    sub_22CC65340();
    sub_22CC07B74(&qword_254065620, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDECF70]);
    v0 = sub_22CC65E80();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2540657A8);
  }
}

void sub_22CC19050()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3CD68)
  {
    sub_22CC082A8(255, &qword_255C3CD70, (uint64_t (*)(uint64_t))sub_22CC190C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_22CC19204();
    v0 = sub_22CC658BC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3CD68);
  }
}

void sub_22CC190C8()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_255C3CD78)
  {
    type metadata accessor for BedTitleView(255);
    sub_22CC19154();
    sub_22CC191B0();
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_255C3CD78);
  }
}

void sub_22CC19154()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3CD80)
  {
    type metadata accessor for ScheduleOccurrenceSectionView(255);
    v0 = sub_22CC6534C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3CD80);
  }
}

void sub_22CC191B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3CD88)
  {
    v0 = sub_22CC65CF4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3CD88);
  }
}

unint64_t sub_22CC19204()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255C3CD90;
  if (!qword_255C3CD90)
  {
    sub_22CC082A8(255, &qword_255C3CD70, (uint64_t (*)(uint64_t))sub_22CC190C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDF5428], v1);
    atomic_store(result, (unint64_t *)&qword_255C3CD90);
  }
  return result;
}

void sub_22CC19264()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3CD98)
  {
    sub_22CC082A8(255, &qword_255C3CD70, (uint64_t (*)(uint64_t))sub_22CC190C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    v0 = sub_22CC65310();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3CD98);
  }
}

uint64_t sub_22CC192F0()
{
  sub_22CC19050();
  sub_22CC18FD8();
  sub_22CC07B74(&qword_255C3CDA0, (uint64_t (*)(uint64_t))sub_22CC19050, MEMORY[0x24BDF4700]);
  sub_22CC07B74(&qword_2540657A0, (uint64_t (*)(uint64_t))sub_22CC18FD8, MEMORY[0x24BEE30C8]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t *sub_22CC19390(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_22CC19614(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_22CC65340();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = a3[5];
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    sub_22CC19630(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_22CC65A3C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v13 = a3[6];
    v14 = (uint64_t *)((char *)a1 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    sub_22CC1964C(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v16 = sub_22CC65A18();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      *v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v17 = a3[7];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = *(_QWORD *)v19;
    v21 = v19[8];
    sub_22CC11614(*(_QWORD *)v19, v21);
    *(_QWORD *)v18 = v20;
    v18[8] = v21;
    v22 = a3[8];
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = sub_22CC64F08();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
    v26 = *(int *)(type metadata accessor for SleepStageBarViewModel(0) + 20);
    v27 = &v23[v26];
    v28 = &v24[v26];
    v29 = *((_QWORD *)v28 + 1);
    *(_QWORD *)v27 = *(_QWORD *)v28;
    *((_QWORD *)v27 + 1) = v29;
    v30 = *((_QWORD *)v28 + 3);
    *((_QWORD *)v27 + 2) = *((_QWORD *)v28 + 2);
    *((_QWORD *)v27 + 3) = v30;
    v31 = *((_QWORD *)v28 + 5);
    *((_QWORD *)v27 + 4) = *((_QWORD *)v28 + 4);
    *((_QWORD *)v27 + 5) = v31;
    v32 = a3[9];
    v33 = *(void **)((char *)a2 + v32);
    *(uint64_t *)((char *)a1 + v32) = (uint64_t)v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v34 = v33;
  }
  return a1;
}

void sub_22CC19614(uint64_t a1)
{
  sub_22CC082A8(a1, &qword_254065610, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDEB560]);
}

void sub_22CC19630(uint64_t a1)
{
  sub_22CC082A8(a1, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
}

void sub_22CC1964C(uint64_t a1)
{
  sub_22CC082A8(a1, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
}

void sub_22CC19668(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_22CC19614(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_22CC65340();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  v5 = a1 + a2[5];
  sub_22CC19630(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_22CC65A3C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  v7 = a1 + a2[6];
  sub_22CC1964C(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_22CC65A18();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  sub_22CC11750(*(_QWORD *)(a1 + a2[7]), *(_BYTE *)(a1 + a2[7] + 8));
  v9 = a1 + a2[8];
  v10 = sub_22CC64F08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  type metadata accessor for SleepStageBarViewModel(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *sub_22CC197EC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;

  sub_22CC19614(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_22CC65340();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  sub_22CC19630(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_22CC65A3C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v11 = a3[6];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  sub_22CC1964C(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = sub_22CC65A18();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  else
  {
    *v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v15 = a3[7];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = *(_QWORD *)v17;
  v19 = v17[8];
  sub_22CC11614(*(_QWORD *)v17, v19);
  *(_QWORD *)v16 = v18;
  v16[8] = v19;
  v20 = a3[8];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_22CC64F08();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  v24 = *(int *)(type metadata accessor for SleepStageBarViewModel(0) + 20);
  v25 = &v21[v24];
  v26 = &v22[v24];
  v27 = *((_QWORD *)v26 + 1);
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *((_QWORD *)v25 + 1) = v27;
  v28 = *((_QWORD *)v26 + 3);
  *((_QWORD *)v25 + 2) = *((_QWORD *)v26 + 2);
  *((_QWORD *)v25 + 3) = v28;
  v29 = *((_QWORD *)v26 + 5);
  *((_QWORD *)v25 + 4) = *((_QWORD *)v26 + 4);
  *((_QWORD *)v25 + 5) = v29;
  v30 = a3[9];
  v31 = *(void **)((char *)a2 + v30);
  *(_QWORD *)((char *)a1 + v30) = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v32 = v31;
  return a1;
}

_QWORD *sub_22CC19A44(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;

  if (a1 != a2)
  {
    sub_22CC0DE54((uint64_t)a1, (uint64_t (*)(_QWORD))sub_22CC19614);
    sub_22CC19614(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_22CC65340();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v7 = a3[5];
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (_QWORD *)((char *)a2 + v7);
    sub_22CC0DE54((uint64_t)a1 + v7, (uint64_t (*)(_QWORD))sub_22CC19630);
    sub_22CC19630(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_22CC65A3C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v11 = a3[6];
    v12 = (_QWORD *)((char *)a1 + v11);
    v13 = (_QWORD *)((char *)a2 + v11);
    sub_22CC0DE54((uint64_t)a1 + v11, (uint64_t (*)(_QWORD))sub_22CC1964C);
    sub_22CC1964C(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = sub_22CC65A18();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v15 = a3[7];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = *(_QWORD *)v17;
  v19 = v17[8];
  sub_22CC11614(*(_QWORD *)v17, v19);
  v20 = *(_QWORD *)v16;
  v21 = v16[8];
  *(_QWORD *)v16 = v18;
  v16[8] = v19;
  sub_22CC11750(v20, v21);
  v22 = a3[8];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = sub_22CC64F08();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
  v26 = *(int *)(type metadata accessor for SleepStageBarViewModel(0) + 20);
  v27 = &v23[v26];
  v28 = &v24[v26];
  *(_QWORD *)&v23[v26] = *(_QWORD *)v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v27 + 2) = *((_QWORD *)v28 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v27 + 3) = *((_QWORD *)v28 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v27 + 4) = *((_QWORD *)v28 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v27 + 5) = *((_QWORD *)v28 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = a3[9];
  v30 = *(void **)((char *)a2 + v29);
  v31 = *(void **)((char *)a1 + v29);
  *(_QWORD *)((char *)a1 + v29) = v30;
  v32 = v30;

  return a1;
}

char *sub_22CC19D2C(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  __int128 v31;

  sub_22CC19614(0);
  v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_22CC65340();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  sub_22CC19630(0);
  v13 = v12;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = sub_22CC65A3C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v10, v11, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  sub_22CC1964C(0);
  v19 = v18;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = sub_22CC65A18();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v16, v17, v20);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  v21 = a3[7];
  v22 = a3[8];
  v23 = &a1[v21];
  v24 = &a2[v21];
  *(_QWORD *)v23 = *(_QWORD *)v24;
  v23[8] = v24[8];
  v25 = &a1[v22];
  v26 = &a2[v22];
  v27 = sub_22CC64F08();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
  v28 = *(int *)(type metadata accessor for SleepStageBarViewModel(0) + 20);
  v29 = &v25[v28];
  v30 = &v26[v28];
  v31 = *((_OWORD *)v30 + 1);
  *(_OWORD *)v29 = *(_OWORD *)v30;
  *((_OWORD *)v29 + 1) = v31;
  *((_OWORD *)v29 + 2) = *((_OWORD *)v30 + 2);
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  return a1;
}

char *sub_22CC19F28(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void *v35;

  if (a1 != a2)
  {
    sub_22CC0DE54((uint64_t)a1, (uint64_t (*)(_QWORD))sub_22CC19614);
    sub_22CC19614(0);
    v7 = v6;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_22CC65340();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    v9 = a3[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    sub_22CC0DE54((uint64_t)&a1[v9], (uint64_t (*)(_QWORD))sub_22CC19630);
    sub_22CC19630(0);
    v13 = v12;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = sub_22CC65A3C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v10, v11, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    v15 = a3[6];
    v16 = &a1[v15];
    v17 = &a2[v15];
    sub_22CC0DE54((uint64_t)&a1[v15], (uint64_t (*)(_QWORD))sub_22CC1964C);
    sub_22CC1964C(0);
    v19 = v18;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v20 = sub_22CC65A18();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v16, v17, v20);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
  }
  v21 = a3[7];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = *(_QWORD *)v23;
  LOBYTE(v23) = v23[8];
  v25 = *(_QWORD *)v22;
  v26 = v22[8];
  *(_QWORD *)v22 = v24;
  v22[8] = (char)v23;
  sub_22CC11750(v25, v26);
  v27 = a3[8];
  v28 = &a1[v27];
  v29 = &a2[v27];
  v30 = sub_22CC64F08();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = *(int *)(type metadata accessor for SleepStageBarViewModel(0) + 20);
  v32 = &v28[v31];
  v33 = &v29[v31];
  *(_QWORD *)v32 = *(_QWORD *)v33;
  swift_bridgeObjectRelease();
  *((_QWORD *)v32 + 1) = *((_QWORD *)v33 + 1);
  swift_bridgeObjectRelease();
  *((_QWORD *)v32 + 2) = *((_QWORD *)v33 + 2);
  swift_bridgeObjectRelease();
  *((_QWORD *)v32 + 3) = *((_QWORD *)v33 + 3);
  swift_bridgeObjectRelease();
  *((_QWORD *)v32 + 4) = *((_QWORD *)v33 + 4);
  swift_bridgeObjectRelease();
  *((_QWORD *)v32 + 5) = *((_QWORD *)v33 + 5);
  swift_bridgeObjectRelease();
  v34 = a3[9];
  v35 = *(void **)&a1[v34];
  *(_QWORD *)&a1[v34] = *(_QWORD *)&a2[v34];

  return a1;
}

uint64_t sub_22CC1A1C4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC1A1D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v17;

  sub_22CC082A8(0, &qword_254065618, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDEB580]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  sub_22CC082A8(0, &qword_255C3CAB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB580]);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_9:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  sub_22CC082A8(0, qword_255C3CAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB580]);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_9;
  }
  v15 = type metadata accessor for SleepStageBarViewModel(0);
  v12 = *(_QWORD *)(v15 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v15;
    v13 = a3[8];
    goto LABEL_9;
  }
  v17 = *(_QWORD *)(a1 + a3[9]);
  if (v17 >= 0xFFFFFFFF)
    LODWORD(v17) = -1;
  return (v17 + 1);
}

uint64_t sub_22CC1A308()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC1A314(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;

  sub_22CC082A8(0, &qword_254065618, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDEB580]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  sub_22CC082A8(0, &qword_255C3CAB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB580]);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_9:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  sub_22CC082A8(0, qword_255C3CAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB580]);
  v14 = *(_QWORD *)(v16 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v16;
    v15 = a4[6];
    goto LABEL_9;
  }
  result = type metadata accessor for SleepStageBarViewModel(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[8];
    goto LABEL_9;
  }
  *(_QWORD *)(a1 + a4[9]) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for SleepStageBarView()
{
  uint64_t result;

  result = qword_254065AC8;
  if (!qword_254065AC8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_22CC1A484()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_22CC19614(319);
  if (v0 <= 0x3F)
  {
    sub_22CC19630(319);
    if (v1 <= 0x3F)
    {
      sub_22CC1964C(319);
      if (v2 <= 0x3F)
      {
        type metadata accessor for SleepStageBarViewModel(319);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_22CC1A554()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22CC1A564@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  double v4;
  double v5;
  uint64_t v6;
  __int128 *v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  char v11;
  double v12;
  uint64_t v13;
  char v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _OWORD v24[3];

  sub_22CC65304();
  v5 = v4;
  v6 = a1 + *(int *)(type metadata accessor for SleepStageBarView() + 32);
  v7 = (__int128 *)(v6 + *(int *)(type metadata accessor for SleepStageBarViewModel(0) + 20));
  v8 = v7[2];
  v9 = *v7;
  v24[1] = v7[1];
  v24[2] = v8;
  v24[0] = v9;
  *(double *)&v10 = COERCE_DOUBLE(sub_22CC45B68());
  if ((v11 & 1) != 0 || (v12 = *(double *)&v10, *(double *)&v13 = COERCE_DOUBLE(sub_22CC45C08()), (v14 & 1) != 0))
  {
    sub_22CC1BA40(0, &qword_255C3CDB0, (uint64_t (*)(uint64_t))sub_22CC1B82C, sub_22CC1BBB8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF46E0]);
    v18 = v22;
    v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
    v20 = a2;
    v21 = 1;
  }
  else
  {
    v15 = *(double *)&v13;
    *(_QWORD *)a2 = sub_22CC654CC();
    *(_QWORD *)(a2 + 8) = 0;
    *(_BYTE *)(a2 + 16) = 0;
    sub_22CC1BBD4();
    sub_22CC1A6D4(a1, v24, (_QWORD *)(a2 + *(int *)(v16 + 44)), v5, v12, v15);
    sub_22CC1BA40(0, &qword_255C3CDB0, (uint64_t (*)(uint64_t))sub_22CC1B82C, sub_22CC1BBB8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF46E0]);
    v18 = v17;
    v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
    v20 = a2;
    v21 = 0;
  }
  return v19(v20, v21, 1, v18);
}

uint64_t sub_22CC1A6D4@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, _QWORD *a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  void (*v40)(char *, char *, uint64_t (*)(uint64_t));
  unint64_t v41;
  int v42;
  double v43;
  void (*v44)(char *, uint64_t (*)(uint64_t));
  uint64_t *v45;
  char *v46;
  _OWORD *v47;
  uint64_t v48;
  __int128 v49;
  double *v50;
  double *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char v55;
  __int128 v56;
  char v57;
  char v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  BOOL v63;
  char *v64;
  __int128 v65;
  char v66;
  uint64_t KeyPath;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  _QWORD *v73;
  int *v74;
  int *v75;
  char *v76;
  char *v77;
  _QWORD v79[2];
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  _QWORD *v86;
  uint64_t v87;
  char *v88;
  unsigned int v89;
  _OWORD *v90;
  uint64_t v91;
  int *v92;
  _QWORD *v93;
  __int128 v94;
  char v95;
  __int128 v96;
  char v97;
  __int128 v98;
  char v99;
  __int128 v100;
  char v101;
  uint64_t v102;

  v90 = a2;
  v86 = a3;
  sub_22CC18FD8();
  v79[1] = v10;
  MEMORY[0x24BDAC7A8](v10);
  v92 = (int *)((char *)v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22CC1B968(0);
  v83 = v12;
  v82 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v81 = (char *)v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC1B8EC();
  v80 = v14;
  v15 = MEMORY[0x24BDAC7A8](v14);
  v85 = (char *)v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v84 = (uint64_t)v79 - v17;
  v18 = (int *)type metadata accessor for BarView(0);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (_QWORD *)((char *)v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v19);
  v93 = (_QWORD *)((char *)v79 - v22);
  v23 = (uint64_t (*)(uint64_t))sub_22CC65A3C();
  v24 = (_QWORD *)*((_QWORD *)v23 - 1);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v88 = (char *)v79 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v87 = (uint64_t)v79 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)v79 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)v79 - v32;
  v34 = type metadata accessor for SleepStageBarView();
  sub_22CC207A8((uint64_t)v33);
  v35 = *(int *)(v34 + 28);
  v91 = a1;
  v36 = a1 + v35;
  v37 = *(_QWORD *)v36;
  v38 = *(_BYTE *)(v36 + 8);
  sub_22CC11614(*(_QWORD *)v36, v38);
  v39 = sub_22CC20A38(v37, v38);
  sub_22CC11750(v37, v38);
  v40 = (void (*)(char *, char *, uint64_t (*)(uint64_t)))v24[2];
  v40(v31, v33, v23);
  v41 = v24[11];
  v42 = ((uint64_t (*)(char *, uint64_t (*)(uint64_t)))v41)(v31, v23);
  v89 = *MEMORY[0x24BDFAF08];
  if (v42 != v89)
  {
    if (qword_255C3C900 != -1)
      goto LABEL_13;
    goto LABEL_7;
  }
  if ((v39 & 1) != 0)
    v43 = 24.0;
  else
    v43 = 16.0;
  v44 = (void (*)(char *, uint64_t (*)(uint64_t)))v24[1];
  v44(v33, v23);
  while (1)
  {
    *v21 = swift_getKeyPath();
    sub_22CC19630(0);
    swift_storeEnumTagMultiPayload();
    v45 = (uint64_t *)((char *)v21 + v18[5]);
    *v45 = swift_getKeyPath();
    sub_22CC1964C(0);
    swift_storeEnumTagMultiPayload();
    v46 = (char *)v21 + v18[6];
    *(_QWORD *)v46 = swift_getKeyPath();
    v46[8] = 0;
    v47 = (_OWORD *)((char *)v21 + v18[7]);
    v48 = (uint64_t)v90;
    v49 = v90[1];
    *v47 = *v90;
    v47[1] = v49;
    v47[2] = *(_OWORD *)(v48 + 32);
    v50 = (double *)((char *)v21 + v18[8]);
    *v50 = v43;
    v50[1] = a4;
    *((_BYTE *)v50 + 16) = 0;
    v51 = (double *)((char *)v21 + v18[9]);
    *v51 = a5;
    v51[1] = a6;
    *((_BYTE *)v21 + v18[10]) = 1;
    v24 = v93;
    sub_22CC0DDCC((uint64_t)v21, (uint64_t)v93, type metadata accessor for BarView);
    sub_22CC1BC60(v48);
    v52 = v87;
    sub_22CC207A8(v87);
    v53 = v88;
    v40(v88, (char *)v52, v23);
    v33 = (char *)((uint64_t (*)(char *, uint64_t (*)(uint64_t)))v41)(v53, v23);
    v41 = v89;
    if ((_DWORD)v33 != v89)
      v44(v53, v23);
    v44((char *)v52, v23);
    v54 = sub_22CC6549C();
    sub_22CC1AE44(v91, &v94);
    v55 = v95;
    v56 = v96;
    v57 = v97;
    v58 = v99;
    v59 = v100;
    v60 = v94;
    v61 = v98;
    v94 = (unint64_t)v54;
    v95 = 1;
    v96 = v60;
    v97 = v55;
    v98 = v56;
    v99 = v57;
    v100 = v61;
    v101 = v58;
    v102 = v59;
    v62 = *MEMORY[0x24BDECF28];
    v31 = (char *)sub_22CC65340();
    v23 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
    v18 = v92;
    (*(void (**)(int *, uint64_t, char *))(*((_QWORD *)v31 - 1) + 104))(v92, v62, v31);
    sub_22CC07B74(&qword_254065628, v23, MEMORY[0x24BDECF78]);
    if ((sub_22CC65B14() & 1) != 0)
      break;
    __break(1u);
LABEL_13:
    swift_once();
LABEL_7:
    v43 = *(double *)&qword_255C3CDA8;
    v44 = (void (*)(char *, uint64_t (*)(uint64_t)))v24[1];
    v44(v31, v23);
    v44(v33, v23);
  }
  v63 = (_DWORD)v33 != (_DWORD)v41;
  sub_22CC1BA40(0, &qword_255C3CDD8, (uint64_t (*)(uint64_t))sub_22CC1BAB0, sub_22CC1BB34, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF4480]);
  sub_22CC1BB50();
  sub_22CC07B74(&qword_2540657A0, (uint64_t (*)(uint64_t))sub_22CC18FD8, MEMORY[0x24BEE30C8]);
  v64 = v81;
  sub_22CC657B4();
  sub_22CC0DE54((uint64_t)v18, (uint64_t (*)(_QWORD))sub_22CC18FD8);
  v65 = v100;
  v66 = v101;
  sub_22CC1BCCC(v96, *((uint64_t *)&v96 + 1), v97);
  swift_bridgeObjectRelease();
  sub_22CC1BCCC(v65, *((uint64_t *)&v65 + 1), v66);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v68 = v82;
  v69 = (uint64_t)v85;
  v70 = v83;
  (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v85, v64, v83);
  v71 = (uint64_t *)(v69 + *(int *)(v80 + 36));
  *v71 = KeyPath;
  v71[1] = 0x3FE7AE147AE147AELL;
  (*(void (**)(char *, uint64_t))(v68 + 8))(v64, v70);
  v72 = v84;
  sub_22CC0DDCC(v69, v84, (uint64_t (*)(_QWORD))sub_22CC1B8EC);
  sub_22CC0DE10((uint64_t)v24, (uint64_t)v21, type metadata accessor for BarView);
  sub_22CC0DE10(v72, v69, (uint64_t (*)(_QWORD))sub_22CC1B8EC);
  v73 = v86;
  *v86 = 0;
  *((_BYTE *)v73 + 8) = 0;
  sub_22CC1B848();
  v75 = v74;
  sub_22CC0DE10((uint64_t)v21, (uint64_t)v73 + v74[12], type metadata accessor for BarView);
  v76 = (char *)v73 + v75[16];
  *(_QWORD *)v76 = 0;
  v76[8] = 0;
  v76[9] = v63;
  sub_22CC0DE10(v69, (uint64_t)v73 + v75[20], (uint64_t (*)(_QWORD))sub_22CC1B8EC);
  v77 = (char *)v73 + v75[24];
  *(_QWORD *)v77 = 0;
  v77[8] = 0;
  sub_22CC0DE54(v72, (uint64_t (*)(_QWORD))sub_22CC1B8EC);
  sub_22CC0DE54((uint64_t)v24, type metadata accessor for BarView);
  sub_22CC0DE54(v69, (uint64_t (*)(_QWORD))sub_22CC1B8EC);
  return sub_22CC0DE54((uint64_t)v21, type metadata accessor for BarView);
}

uint64_t sub_22CC1AE44@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  char *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  int v41;
  char *v42;
  char v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  void *v59;
  void *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  int v74;
  char *v75;
  char v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t);
  void (*v79)(uint64_t, uint64_t);
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  char v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v98;
  void (*v99)(uint64_t, uint64_t);
  int v100;
  void (*v101)(char *, uint64_t);
  int v102;
  unint64_t v103;
  uint64_t (*v104)(char *, uint64_t);
  void (*v105)(char *, char *, uint64_t);
  uint64_t v106;
  uint64_t v107;
  void (*v108)(char *, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;

  v119 = a2;
  v120 = sub_22CC65A18();
  v114 = *(_QWORD *)(v120 - 8);
  v3 = MEMORY[0x24BDAC7A8](v120);
  v118 = (uint64_t)&v98 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v117 = (char *)&v98 - v6;
  MEMORY[0x24BDAC7A8](v5);
  v112 = (uint64_t)&v98 - v7;
  v122 = sub_22CC65A3C();
  v8 = *(_QWORD *)(v122 - 8);
  v9 = MEMORY[0x24BDAC7A8](v122);
  v116 = (char *)&v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v121 = (uint64_t)&v98 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v98 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v98 - v16;
  v18 = sub_22CC6504C();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v98 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = (int *)type metadata accessor for SleepStageBarView();
  v23 = v22[9];
  v24 = *(void **)(a1 + v23);
  v109 = a1 + v22[8];
  v110 = v23;
  sub_22CC64EF0();
  v25 = (void *)sub_22CC6501C();
  v26 = *(void (**)(char *, uint64_t))(v19 + 8);
  v113 = v18;
  v27 = v18;
  v28 = v15;
  v108 = v26;
  v26(v21, v27);
  v29 = objc_msgSend(v24, sel_stringFromDate_, v25);

  v30 = sub_22CC65B2C();
  v32 = v31;

  v123 = v30;
  v124 = v32;
  v103 = sub_22CC08C70();
  v33 = sub_22CC65718();
  v111 = v34;
  v100 = v35;
  v107 = a1 + v22[5];
  sub_22CC207A8((uint64_t)v17);
  v36 = v22[6];
  v115 = a1;
  v37 = a1 + v36;
  v38 = v112;
  v106 = v37;
  sub_22CC207D8(v112);
  v39 = v15;
  v40 = v122;
  v105 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v105(v39, v17, v122);
  v104 = *(uint64_t (**)(char *, uint64_t))(v8 + 88);
  v41 = v104(v28, v40);
  v102 = *MEMORY[0x24BDFAED8];
  if (v41 == v102)
  {
    v42 = v117;
    sub_22CC65A00();
    v43 = sub_22CC659F4();
    v44 = v114;
    v45 = v42;
    v46 = v120;
    (*(void (**)(char *, uint64_t))(v114 + 8))(v45, v120);
    if ((v43 & 1) == 0)
    {
      sub_22CC657E4();
      goto LABEL_7;
    }
    goto LABEL_5;
  }
  v44 = v114;
  v46 = v120;
  if (v41 == *MEMORY[0x24BDFAF08])
  {
LABEL_5:
    sub_22CC65808();
    goto LABEL_7;
  }
  sub_22CC657E4();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v28, v122);
LABEL_7:
  v99 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
  v99(v38, v46);
  v101 = *(void (**)(char *, uint64_t))(v8 + 8);
  v101(v17, v122);
  v47 = v100 & 1;
  v48 = v33;
  v49 = v111;
  v50 = sub_22CC656F4();
  v52 = v51;
  v54 = v53;
  swift_release();
  sub_22CC1BCCC(v48, v49, v47);
  swift_bridgeObjectRelease();
  sub_22CC6561C();
  v55 = sub_22CC65700();
  v111 = v56;
  v112 = v55;
  v100 = v57;
  v114 = v58;
  swift_release();
  sub_22CC1BCCC(v50, v52, v54 & 1);
  swift_bridgeObjectRelease();
  v59 = *(void **)(v115 + v110);
  sub_22CC64ED8();
  v60 = (void *)sub_22CC6501C();
  v108(v21, v113);
  v61 = objc_msgSend(v59, sel_stringFromDate_, v60);

  v62 = sub_22CC65B2C();
  v64 = v63;

  v123 = v62;
  v124 = v64;
  v65 = sub_22CC65718();
  v67 = v66;
  v69 = v68;
  v70 = v121;
  sub_22CC207A8(v121);
  v71 = v118;
  sub_22CC207D8(v118);
  v72 = v116;
  v73 = v122;
  v105(v116, (char *)v70, v122);
  v74 = v104(v72, v73);
  if (v74 != v102)
  {
    v78 = v99;
    v77 = v120;
    if (v74 != *MEMORY[0x24BDFAF08])
    {
      sub_22CC657E4();
      v79 = (void (*)(uint64_t, uint64_t))v101;
      v101(v72, v122);
      goto LABEL_14;
    }
    goto LABEL_11;
  }
  v75 = v117;
  sub_22CC65A00();
  v76 = sub_22CC659F4();
  v77 = v120;
  v78 = v99;
  v99((uint64_t)v75, v120);
  if ((v76 & 1) != 0)
  {
LABEL_11:
    sub_22CC65808();
    goto LABEL_12;
  }
  sub_22CC657E4();
LABEL_12:
  v79 = (void (*)(uint64_t, uint64_t))v101;
LABEL_14:
  v80 = v100 & 1;
  v78(v71, v77);
  v79(v121, v122);
  v81 = sub_22CC656F4();
  v83 = v82;
  v85 = v84;
  swift_release();
  sub_22CC1BCCC(v65, v67, v69 & 1);
  swift_bridgeObjectRelease();
  sub_22CC6561C();
  v86 = sub_22CC65700();
  v88 = v87;
  v90 = v89;
  v92 = v91;
  swift_release();
  v93 = v90 & 1;
  sub_22CC1BCCC(v81, v83, v85 & 1);
  swift_bridgeObjectRelease();
  LOBYTE(v123) = v80;
  v94 = v119;
  v96 = v111;
  v95 = v112;
  *v119 = v112;
  v94[1] = v96;
  *((_BYTE *)v94 + 16) = v80;
  v94[3] = v114;
  v94[4] = 0x3FE0000000000000;
  *((_BYTE *)v94 + 40) = 0;
  v94[6] = v86;
  v94[7] = v88;
  *((_BYTE *)v94 + 64) = v93;
  v94[9] = v92;
  sub_22CC1BCE4(v95, v96, v80);
  swift_bridgeObjectRetain();
  sub_22CC1BCE4(v86, v88, v93);
  swift_bridgeObjectRetain();
  sub_22CC1BCCC(v86, v88, v93);
  swift_bridgeObjectRelease();
  sub_22CC1BCCC(v95, v96, v123);
  return swift_bridgeObjectRelease();
}

uint64_t sub_22CC1B564@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](a1);
  sub_22CC0DE10(v2, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for SleepStageBarView);
  v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = swift_allocObject();
  result = sub_22CC0DDCC((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, (uint64_t (*)(_QWORD))type metadata accessor for SleepStageBarView);
  *a2 = sub_22CC1B7E0;
  a2[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v7;
  return result;
}

uint64_t sub_22CC1B618()
{
  uint64_t v0;
  int *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = (int *)type metadata accessor for SleepStageBarView();
  v2 = (*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + v2;
  sub_22CC19614(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_22CC65340();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v2, v4);
  }
  else
  {
    swift_release();
  }
  v5 = v3 + v1[5];
  sub_22CC19630(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_22CC65A3C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  v7 = v3 + v1[6];
  sub_22CC1964C(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_22CC65A18();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }
  sub_22CC11750(*(_QWORD *)(v3 + v1[7]), *(_BYTE *)(v3 + v1[7] + 8));
  v9 = v3 + v1[8];
  v10 = sub_22CC64F08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  type metadata accessor for SleepStageBarViewModel(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_22CC1B7E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SleepStageBarView() - 8) + 80);
  return sub_22CC1A564(v1 + ((v3 + 16) & ~v3), a1);
}

void sub_22CC1B82C(uint64_t a1)
{
  sub_22CC082A8(a1, &qword_255C3CDB8, (uint64_t (*)(uint64_t))sub_22CC1B848, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_22CC1B848()
{
  uint64_t v0;
  unint64_t TupleTypeMetadata;
  uint64_t v2;

  if (!qword_255C3CDC0)
  {
    v0 = MEMORY[0x24BDF4638];
    type metadata accessor for BarView(255);
    sub_22CC08D64(255, (unint64_t *)&qword_255C3CD88, v0, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    sub_22CC1B8EC();
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v2)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_255C3CDC0);
  }
}

void sub_22CC1B8EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3CDC8)
  {
    sub_22CC1B968(255);
    sub_22CC08D64(255, (unint64_t *)&qword_254065688, MEMORY[0x24BEE50B0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF1008]);
    v0 = sub_22CC6534C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3CDC8);
  }
}

void sub_22CC1B968(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  if (!qword_255C3CDD0)
  {
    sub_22CC1BA40(255, &qword_255C3CDD8, (uint64_t (*)(uint64_t))sub_22CC1BAB0, sub_22CC1BB34, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF4480]);
    v3 = v2;
    sub_22CC18FD8();
    v7[0] = v3;
    v7[1] = v4;
    v7[2] = sub_22CC1BB50();
    v7[3] = sub_22CC07B74(&qword_2540657A0, (uint64_t (*)(uint64_t))sub_22CC18FD8, MEMORY[0x24BEE30C8]);
    v5 = MEMORY[0x22E3063BC](a1, v7, MEMORY[0x24BDF2800], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_255C3CDD0);
  }
}

void sub_22CC1BA40(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*a2)
  {
    v9 = a3(255);
    v10 = a4();
    v11 = a5(a1, v9, v10);
    if (!v12)
      atomic_store(v11, a2);
  }
}

void sub_22CC1BAB0(uint64_t a1)
{
  sub_22CC082A8(a1, &qword_255C3CDE0, (uint64_t (*)(uint64_t))sub_22CC1BACC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_22CC1BACC()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_255C3CDE8)
  {
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_255C3CDE8);
  }
}

uint64_t sub_22CC1BB34()
{
  return sub_22CC07B74(&qword_255C3CDF0, (uint64_t (*)(uint64_t))sub_22CC1BAB0, MEMORY[0x24BDF5428]);
}

unint64_t sub_22CC1BB50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255C3CDF8;
  if (!qword_255C3CDF8)
  {
    sub_22CC1BA40(255, &qword_255C3CDD8, (uint64_t (*)(uint64_t))sub_22CC1BAB0, sub_22CC1BB34, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF4480]);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDF4498], v1);
    atomic_store(result, (unint64_t *)&qword_255C3CDF8);
  }
  return result;
}

uint64_t sub_22CC1BBB8()
{
  return sub_22CC07B74(&qword_255C3CE00, (uint64_t (*)(uint64_t))sub_22CC1B82C, MEMORY[0x24BDF5428]);
}

void sub_22CC1BBD4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3CE08)
  {
    sub_22CC1B82C(255);
    v0 = sub_22CC65310();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3CE08);
  }
}

void sub_22CC1BC38()
{
  qword_255C3CDA8 = 0x403E000000000000;
}

uint64_t sub_22CC1BC60(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_22CC1BCCC(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

uint64_t sub_22CC1BCE4(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain();
  else
    return swift_bridgeObjectRetain();
}

unint64_t sub_22CC1BCF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255C3CE10;
  if (!qword_255C3CE10)
  {
    sub_22CC1BA40(255, &qword_255C3CE18, (uint64_t (*)(uint64_t))sub_22CC1BD60, (uint64_t (*)(void))sub_22CC1BDD4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEC6E0]);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDEC6F8], v1);
    atomic_store(result, (unint64_t *)&qword_255C3CE10);
  }
  return result;
}

void sub_22CC1BD60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3CE20)
  {
    sub_22CC1BA40(255, &qword_255C3CDB0, (uint64_t (*)(uint64_t))sub_22CC1B82C, sub_22CC1BBB8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF46E0]);
    v0 = sub_22CC65CF4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3CE20);
  }
}

unint64_t sub_22CC1BDD4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_255C3CE28;
  if (!qword_255C3CE28)
  {
    sub_22CC1BD60();
    v2 = v1;
    v3 = sub_22CC1BE34();
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDF5578], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_255C3CE28);
  }
  return result;
}

unint64_t sub_22CC1BE34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255C3CE30;
  if (!qword_255C3CE30)
  {
    sub_22CC1BA40(255, &qword_255C3CDB0, (uint64_t (*)(uint64_t))sub_22CC1B82C, sub_22CC1BBB8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF46E0]);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDF4700], v1);
    atomic_store(result, (unint64_t *)&qword_255C3CE30);
  }
  return result;
}

uint64_t sub_22CC1BE9C()
{
  return swift_deallocClassInstance();
}

uint64_t _s8SentinelCMa()
{
  return objc_opt_self();
}

id sub_22CC1BECC()
{
  uint64_t ObjCClassFromMetadata;
  id result;

  _s8SentinelCMa();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  qword_254067950 = (uint64_t)result;
  return result;
}

unint64_t sub_22CC1BF20(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(const void *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  void *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  void *v41;
  void *v42;
  id v43;
  id v44;
  uint64_t v45;
  void *v46;
  const void *v47;
  unsigned int (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  void *v51;
  const void *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  const void *v56;
  uint64_t v57;
  unint64_t v59;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v21 = v20 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    sub_22CC11614(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v8;
    v9 = *(int *)(a3 + 20);
    v10 = a1 + v9;
    v11 = a2 + v9;
    *(_QWORD *)v10 = *(_QWORD *)(a2 + v9);
    *(_BYTE *)(v10 + 8) = *(_BYTE *)(a2 + v9 + 8);
    v12 = (int *)type metadata accessor for SleepWidgetViewModel();
    v13 = v12[5];
    v14 = (void *)(v10 + v13);
    v15 = (const void *)(v11 + v13);
    v16 = sub_22CC64F20();
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48);
    if (v18(v15, 1, v16))
    {
      sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    v22 = v12[6];
    v23 = (void *)(v10 + v22);
    v24 = (const void *)(v11 + v22);
    if (v18((const void *)(v11 + v22), 1, v16))
    {
      sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(v23, v24, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v23, 0, 1, v16);
    }
    v59 = a1;
    *(_BYTE *)(v10 + v12[7]) = *(_BYTE *)(v11 + v12[7]);
    v26 = v12[8];
    v27 = v10 + v26;
    v28 = v11 + v26;
    v29 = sub_22CC6504C();
    v30 = *(_QWORD *)(v29 - 8);
    v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16);
    v31(v27, v28, v29);
    v32 = v12[9];
    v33 = *(void **)(v11 + v32);
    *(_QWORD *)(v10 + v32) = v33;
    v34 = v12[10];
    v35 = (_QWORD *)(v10 + v34);
    v36 = v11 + v34;
    v37 = *(_QWORD *)(v11 + v34);
    v38 = v33;
    if (v37)
    {
      v39 = v30;
      v40 = v31;
      v41 = *(void **)(v36 + 8);
      v42 = *(void **)(v36 + 16);
      *v35 = v37;
      v35[1] = v41;
      v35[2] = v42;
      swift_bridgeObjectRetain();
      v43 = v41;
      v31 = v40;
      v30 = v39;
      v44 = v42;
    }
    else
    {
      *(_OWORD *)v35 = *(_OWORD *)v36;
      v35[2] = *(_QWORD *)(v36 + 16);
    }
    v45 = v12[11];
    v46 = (void *)(v10 + v45);
    v47 = (const void *)(v11 + v45);
    v48 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
    if (v48(v11 + v45, 1, v29))
    {
      sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      v31((uint64_t)v46, (uint64_t)v47, v29);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v46, 0, 1, v29);
    }
    v21 = v59;
    v50 = v12[12];
    v51 = (void *)(v10 + v50);
    v52 = (const void *)(v11 + v50);
    if (v48(v11 + v50, 1, v29))
    {
      sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      v31((uint64_t)v51, (uint64_t)v52, v29);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v51, 0, 1, v29);
    }
    v54 = v12[13];
    v55 = (void *)(v10 + v54);
    v56 = (const void *)(v11 + v54);
    if (v48(v11 + v54, 1, v29))
    {
      sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    }
    else
    {
      v31((uint64_t)v55, (uint64_t)v56, v29);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v55, 0, 1, v29);
    }
  }
  return v21;
}

uint64_t sub_22CC1C328(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  void (*v20)(uint64_t, uint64_t);

  sub_22CC11750(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  v4 = a1 + *(int *)(a2 + 20);
  v5 = (int *)type metadata accessor for SleepWidgetViewModel();
  v6 = v4 + v5[5];
  v7 = sub_22CC64F20();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v10 = v4 + v5[6];
  if (!v9(v10, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10, v7);
  v11 = v4 + v5[8];
  v12 = sub_22CC6504C();
  v13 = *(_QWORD *)(v12 - 8);
  v20 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v20(v11, v12);

  v14 = v4 + v5[10];
  if (*(_QWORD *)v14)
  {
    swift_bridgeObjectRelease();

  }
  v15 = v4 + v5[11];
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (!v16(v15, 1, v12))
    v20(v15, v12);
  v17 = v4 + v5[12];
  if (!v16(v17, 1, v12))
    v20(v17, v12);
  v18 = v4 + v5[13];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v16)(v18, 1, v12);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v20)(v18, v12);
  return result;
}

uint64_t sub_22CC1C4E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(const void *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(void *, const void *, uint64_t);
  uint64_t v29;
  void *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  void *v41;
  const void *v42;
  unsigned int (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  void *v46;
  const void *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  const void *v51;
  uint64_t v52;
  uint64_t v54;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_22CC11614(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v8 = *(int *)(a3 + 20);
  v54 = a1;
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)(a2 + v8);
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(a2 + v8 + 8);
  v11 = (int *)type metadata accessor for SleepWidgetViewModel();
  v12 = v11[5];
  v13 = (void *)(v9 + v12);
  v14 = (const void *)(v10 + v12);
  v15 = sub_22CC64F20();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
  if (v17(v14, 1, v15))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v19 = v11[6];
  v20 = (void *)(v9 + v19);
  v21 = (const void *)(v10 + v19);
  if (v17((const void *)(v10 + v19), 1, v15))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v20, v21, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v20, 0, 1, v15);
  }
  *(_BYTE *)(v9 + v11[7]) = *(_BYTE *)(v10 + v11[7]);
  v23 = v11[8];
  v24 = (void *)(v9 + v23);
  v25 = (const void *)(v10 + v23);
  v26 = sub_22CC6504C();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(void (**)(void *, const void *, uint64_t))(v27 + 16);
  v28(v24, v25, v26);
  v29 = v11[9];
  v30 = *(void **)(v10 + v29);
  *(_QWORD *)(v9 + v29) = v30;
  v31 = v11[10];
  v32 = (_QWORD *)(v9 + v31);
  v33 = v10 + v31;
  v34 = *(_QWORD *)(v10 + v31);
  v35 = v30;
  if (v34)
  {
    v36 = *(void **)(v33 + 8);
    v37 = *(void **)(v33 + 16);
    *v32 = v34;
    v32[1] = v36;
    v32[2] = v37;
    swift_bridgeObjectRetain();
    v38 = v36;
    v39 = v37;
  }
  else
  {
    *(_OWORD *)v32 = *(_OWORD *)v33;
    v32[2] = *(_QWORD *)(v33 + 16);
  }
  v40 = v11[11];
  v41 = (void *)(v9 + v40);
  v42 = (const void *)(v10 + v40);
  v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
  if (v43(v10 + v40, 1, v26))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    v28(v41, v42, v26);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v41, 0, 1, v26);
  }
  v45 = v11[12];
  v46 = (void *)(v9 + v45);
  v47 = (const void *)(v10 + v45);
  if (v43(v10 + v45, 1, v26))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    v28(v46, v47, v26);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v46, 0, 1, v26);
  }
  v49 = v11[13];
  v50 = (void *)(v9 + v49);
  v51 = (const void *)(v10 + v49);
  if (v43(v10 + v49, 1, v26))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  else
  {
    v28(v50, v51, v26);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v50, 0, 1, v26);
  }
  return v54;
}

uint64_t sub_22CC1C8AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  uint64_t v39;
  _QWORD *v40;
  __int128 *v41;
  uint64_t v42;
  void *v43;
  void *v44;
  id v45;
  void *v46;
  void *v47;
  id v48;
  void *v49;
  void *v50;
  id v51;
  id v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  void *v56;
  const void *v57;
  uint64_t (*v58)(uint64_t, uint64_t, uint64_t);
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  const void *v64;
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  const void *v70;
  int v71;
  int v72;
  uint64_t v73;
  void (*v75)(uint64_t, uint64_t, uint64_t);

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_22CC11614(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_22CC11750(v8, v9);
  v10 = *(int *)(a3 + 20);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = *(_QWORD *)(a2 + v10);
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  *(_QWORD *)v11 = v13;
  v14 = (int *)type metadata accessor for SleepWidgetViewModel();
  v15 = v14[5];
  v16 = (void *)(v11 + v15);
  v17 = (void *)(v12 + v15);
  v18 = sub_22CC64F20();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v19 + 8))(v16, v18);
LABEL_6:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v19 + 24))(v16, v17, v18);
LABEL_7:
  v24 = v14[6];
  v25 = (void *)(v11 + v24);
  v26 = (void *)(v12 + v24);
  v27 = v20((void *)(v11 + v24), 1, v18);
  v28 = v20(v26, 1, v18);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v25, v26, v18);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v25, 0, 1, v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v28)
  {
    (*(void (**)(void *, uint64_t))(v19 + 8))(v25, v18);
LABEL_12:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v19 + 24))(v25, v26, v18);
LABEL_13:
  *(_BYTE *)(v11 + v14[7]) = *(_BYTE *)(v12 + v14[7]);
  v30 = v14[8];
  v31 = v11 + v30;
  v32 = v12 + v30;
  v33 = sub_22CC6504C();
  v34 = *(_QWORD *)(v33 - 8);
  v75 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 24);
  v75(v31, v32, v33);
  v35 = v14[9];
  v36 = *(void **)(v12 + v35);
  v37 = *(void **)(v11 + v35);
  *(_QWORD *)(v11 + v35) = v36;
  v38 = v36;

  v39 = v14[10];
  v40 = (_QWORD *)(v11 + v39);
  v41 = (__int128 *)(v12 + v39);
  v42 = *(_QWORD *)(v12 + v39);
  if (*(_QWORD *)(v11 + v39))
  {
    if (v42)
    {
      *v40 = v42;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v43 = (void *)v40[1];
      v44 = (void *)*((_QWORD *)v41 + 1);
      v40[1] = v44;
      v45 = v44;

      v46 = (void *)v40[2];
      v47 = (void *)*((_QWORD *)v41 + 2);
      v40[2] = v47;
      v48 = v47;

    }
    else
    {
      sub_22CC06744(v11 + v39);
      v53 = *((_QWORD *)v41 + 2);
      *(_OWORD *)v40 = *v41;
      v40[2] = v53;
    }
  }
  else if (v42)
  {
    *v40 = v42;
    v49 = (void *)*((_QWORD *)v41 + 1);
    v40[1] = v49;
    v50 = (void *)*((_QWORD *)v41 + 2);
    v40[2] = v50;
    swift_bridgeObjectRetain();
    v51 = v49;
    v52 = v50;
  }
  else
  {
    v54 = *v41;
    v40[2] = *((_QWORD *)v41 + 2);
    *(_OWORD *)v40 = v54;
  }
  v55 = v14[11];
  v56 = (void *)(v11 + v55);
  v57 = (const void *)(v12 + v55);
  v58 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
  v59 = v58(v11 + v55, 1, v33);
  v60 = v58((uint64_t)v57, 1, v33);
  if (v59)
  {
    if (!v60)
    {
      (*(void (**)(void *, const void *, uint64_t))(v34 + 16))(v56, v57, v33);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v56, 0, 1, v33);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  if (v60)
  {
    (*(void (**)(void *, uint64_t))(v34 + 8))(v56, v33);
LABEL_27:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    goto LABEL_28;
  }
  v75((uint64_t)v56, (uint64_t)v57, v33);
LABEL_28:
  v62 = v14[12];
  v63 = (void *)(v11 + v62);
  v64 = (const void *)(v12 + v62);
  v65 = v58(v11 + v62, 1, v33);
  v66 = v58((uint64_t)v64, 1, v33);
  if (v65)
  {
    if (!v66)
    {
      (*(void (**)(void *, const void *, uint64_t))(v34 + 16))(v63, v64, v33);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v63, 0, 1, v33);
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  if (v66)
  {
    (*(void (**)(void *, uint64_t))(v34 + 8))(v63, v33);
LABEL_33:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    goto LABEL_34;
  }
  v75((uint64_t)v63, (uint64_t)v64, v33);
LABEL_34:
  v68 = v14[13];
  v69 = (void *)(v11 + v68);
  v70 = (const void *)(v12 + v68);
  v71 = v58(v11 + v68, 1, v33);
  v72 = v58((uint64_t)v70, 1, v33);
  if (!v71)
  {
    if (!v72)
    {
      v75((uint64_t)v69, (uint64_t)v70, v33);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v34 + 8))(v69, v33);
    goto LABEL_39;
  }
  if (v72)
  {
LABEL_39:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v34 + 16))(v69, v70, v33);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v69, 0, 1, v33);
  return a1;
}

uint64_t sub_22CC1CE50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(void *, const void *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  const void *v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const void *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  const void *v39;
  uint64_t v40;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(a3 + 20);
  v5 = a1 + v4;
  v6 = a2 + v4;
  *(_QWORD *)v5 = *(_QWORD *)(a2 + v4);
  *(_BYTE *)(v5 + 8) = *(_BYTE *)(a2 + v4 + 8);
  v7 = (int *)type metadata accessor for SleepWidgetViewModel();
  v8 = v7[5];
  v9 = (void *)(v5 + v8);
  v10 = (const void *)(v6 + v8);
  v11 = sub_22CC64F20();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = v7[6];
  v16 = (void *)(v5 + v15);
  v17 = (const void *)(v6 + v15);
  if (v13((const void *)(v6 + v15), 1, v11))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v16, v17, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  *(_BYTE *)(v5 + v7[7]) = *(_BYTE *)(v6 + v7[7]);
  v19 = v7[8];
  v20 = (void *)(v5 + v19);
  v21 = (const void *)(v6 + v19);
  v22 = sub_22CC6504C();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(void (**)(void *, const void *, uint64_t))(v23 + 32);
  v24(v20, v21, v22);
  *(_QWORD *)(v5 + v7[9]) = *(_QWORD *)(v6 + v7[9]);
  v25 = v7[10];
  v26 = v5 + v25;
  v27 = v6 + v25;
  *(_QWORD *)(v26 + 16) = *(_QWORD *)(v27 + 16);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  v28 = v7[11];
  v29 = (void *)(v5 + v28);
  v30 = (const void *)(v6 + v28);
  v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  if (v31(v6 + v28, 1, v22))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    v24(v29, v30, v22);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v29, 0, 1, v22);
  }
  v33 = v7[12];
  v34 = (void *)(v5 + v33);
  v35 = (const void *)(v6 + v33);
  if (v31(v6 + v33, 1, v22))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    v24(v34, v35, v22);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v34, 0, 1, v22);
  }
  v37 = v7[13];
  v38 = (void *)(v5 + v37);
  v39 = (const void *)(v6 + v37);
  if (v31(v6 + v37, 1, v22))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    v24(v38, v39, v22);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v38, 0, 1, v22);
  }
  return a1;
}

uint64_t sub_22CC1D1CC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  void *v39;
  void *v40;
  uint64_t v41;
  void *v42;
  const void *v43;
  uint64_t (*v44)(uint64_t, uint64_t, uint64_t);
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  const void *v50;
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  const void *v56;
  int v57;
  int v58;
  uint64_t v59;
  void (*v61)(uint64_t, uint64_t, uint64_t);

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_22CC11750(v8, v9);
  v10 = *(int *)(a3 + 20);
  v11 = a1 + v10;
  v12 = (uint64_t)a2 + v10;
  *(_QWORD *)v11 = *(uint64_t *)((char *)a2 + v10);
  *(_BYTE *)(v11 + 8) = *((_BYTE *)a2 + v10 + 8);
  v13 = (int *)type metadata accessor for SleepWidgetViewModel();
  v14 = v13[5];
  v15 = (void *)(v11 + v14);
  v16 = (void *)(v12 + v14);
  v17 = sub_22CC64F20();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 32))(v15, v16, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
LABEL_6:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 40))(v15, v16, v17);
LABEL_7:
  v23 = v13[6];
  v24 = (void *)(v11 + v23);
  v25 = (void *)(v12 + v23);
  v26 = v19((void *)(v11 + v23), 1, v17);
  v27 = v19(v25, 1, v17);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 32))(v24, v25, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v24, 0, 1, v17);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v27)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v24, v17);
LABEL_12:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 40))(v24, v25, v17);
LABEL_13:
  *(_BYTE *)(v11 + v13[7]) = *(_BYTE *)(v12 + v13[7]);
  v29 = v13[8];
  v30 = v11 + v29;
  v31 = v12 + v29;
  v32 = sub_22CC6504C();
  v33 = *(_QWORD *)(v32 - 8);
  v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 40);
  v61(v30, v31, v32);
  v34 = v13[9];
  v35 = *(void **)(v11 + v34);
  *(_QWORD *)(v11 + v34) = *(_QWORD *)(v12 + v34);

  v36 = v13[10];
  v37 = (_QWORD *)(v11 + v36);
  v38 = (_QWORD *)(v12 + v36);
  if (*(_QWORD *)(v11 + v36))
  {
    if (*v38)
    {
      *v37 = *v38;
      swift_bridgeObjectRelease();
      v39 = (void *)v37[1];
      v37[1] = v38[1];

      v40 = (void *)v37[2];
      v37[2] = v38[2];

      goto LABEL_18;
    }
    sub_22CC06744((uint64_t)v37);
  }
  *(_OWORD *)v37 = *(_OWORD *)v38;
  v37[2] = v38[2];
LABEL_18:
  v41 = v13[11];
  v42 = (void *)(v11 + v41);
  v43 = (const void *)(v12 + v41);
  v44 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
  v45 = v44(v11 + v41, 1, v32);
  v46 = v44((uint64_t)v43, 1, v32);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(void *, const void *, uint64_t))(v33 + 32))(v42, v43, v32);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v42, 0, 1, v32);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v46)
  {
    (*(void (**)(void *, uint64_t))(v33 + 8))(v42, v32);
LABEL_23:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    goto LABEL_24;
  }
  v61((uint64_t)v42, (uint64_t)v43, v32);
LABEL_24:
  v48 = v13[12];
  v49 = (void *)(v11 + v48);
  v50 = (const void *)(v12 + v48);
  v51 = v44(v11 + v48, 1, v32);
  v52 = v44((uint64_t)v50, 1, v32);
  if (v51)
  {
    if (!v52)
    {
      (*(void (**)(void *, const void *, uint64_t))(v33 + 32))(v49, v50, v32);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v49, 0, 1, v32);
      goto LABEL_30;
    }
    goto LABEL_29;
  }
  if (v52)
  {
    (*(void (**)(void *, uint64_t))(v33 + 8))(v49, v32);
LABEL_29:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    goto LABEL_30;
  }
  v61((uint64_t)v49, (uint64_t)v50, v32);
LABEL_30:
  v54 = v13[13];
  v55 = (void *)(v11 + v54);
  v56 = (const void *)(v12 + v54);
  v57 = v44(v11 + v54, 1, v32);
  v58 = v44((uint64_t)v56, 1, v32);
  if (!v57)
  {
    if (!v58)
    {
      v61((uint64_t)v55, (uint64_t)v56, v32);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v33 + 8))(v55, v32);
    goto LABEL_35;
  }
  if (v58)
  {
LABEL_35:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v33 + 32))(v55, v56, v32);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v55, 0, 1, v32);
  return a1;
}

uint64_t sub_22CC1D714()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC1D720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = type metadata accessor for SleepWidgetViewModel();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_22CC1D794()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC1D7A0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 8) = -(char)a2;
  }
  else
  {
    v7 = type metadata accessor for SleepWidgetViewModel();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SleepWidgetSmallView()
{
  uint64_t result;

  result = qword_254066590;
  if (!qword_254066590)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22CC1D84C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SleepWidgetViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22CC1D8C0(uint64_t a1)
{
  uint64_t result;

  result = sub_22CC07B74(&qword_254066588, (uint64_t (*)(uint64_t))type metadata accessor for SleepWidgetSmallView, (uint64_t)&unk_22CC66FC8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22CC1D8FC(uint64_t a1)
{
  uint64_t result;

  result = sub_22CC07B74(&qword_255C3CE60, (uint64_t (*)(uint64_t))type metadata accessor for SleepWidgetSmallView, (uint64_t)&unk_22CC66F90);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22CC1D938()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22CC1D948@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v45 = a1;
  v2 = sub_22CC65574();
  v43 = *(_QWORD *)(v2 - 8);
  v44 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC1DC64(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v40 - v9;
  sub_22CC1DD48();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC1DEFC();
  v15 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC1DF58(0);
  v41 = *(_QWORD *)(v18 - 8);
  v42 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v13 = sub_22CC654CC();
  *((_QWORD *)v13 + 1) = 0;
  v13[16] = 0;
  sub_22CC1E060();
  v22 = &v13[*(int *)(v21 + 44)];
  *(_QWORD *)v22 = sub_22CC65490();
  *((_QWORD *)v22 + 1) = 0;
  v22[16] = 0;
  sub_22CC1E0C4();
  v24 = (uint64_t)&v22[*(int *)(v23 + 44)];
  sub_22CC47A5C((uint64_t)v10);
  sub_22CC0DE10((uint64_t)v10, (uint64_t)v8, (uint64_t (*)(_QWORD))sub_22CC1DC64);
  sub_22CC0DE10((uint64_t)v8, v24, (uint64_t (*)(_QWORD))sub_22CC1DC64);
  sub_22CC1DE38();
  v26 = v24 + *(int *)(v25 + 48);
  *(_QWORD *)v26 = 0;
  *(_BYTE *)(v26 + 8) = 0;
  sub_22CC0DE54((uint64_t)v10, (uint64_t (*)(_QWORD))sub_22CC1DC64);
  sub_22CC0DE54((uint64_t)v8, (uint64_t (*)(_QWORD))sub_22CC1DC64);
  v27 = sub_22CC655C8();
  v28 = *(_QWORD *)v1;
  v29 = *(_BYTE *)(v1 + 8);
  sub_22CC11614(v28, v29);
  sub_22CC20A38(v28, v29);
  sub_22CC11750(v28, v29);
  sub_22CC652C8();
  v31 = v30;
  v33 = v32;
  v35 = v34;
  v37 = v36;
  sub_22CC0DE10((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(_QWORD))sub_22CC1DD48);
  v38 = &v17[*(int *)(v15 + 36)];
  *v38 = v27;
  *((_QWORD *)v38 + 1) = v31;
  *((_QWORD *)v38 + 2) = v33;
  *((_QWORD *)v38 + 3) = v35;
  *((_QWORD *)v38 + 4) = v37;
  v38[40] = 0;
  sub_22CC0DE54((uint64_t)v13, (uint64_t (*)(_QWORD))sub_22CC1DD48);
  sub_22CC65568();
  sub_22CC1DFE0();
  sub_22CC657C0();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v4, v44);
  sub_22CC0DE54((uint64_t)v17, (uint64_t (*)(_QWORD))sub_22CC1DEFC);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v41 + 32))(v45, v20, v42);
}

void sub_22CC1DC64(uint64_t a1)
{
  sub_22CC1DC8C(a1, &qword_2540666F0, sub_22CC1DC78);
}

void sub_22CC1DC78(uint64_t a1)
{
  sub_22CC1DC8C(a1, &qword_2540666C0, (void (*)(uint64_t))sub_22CC1DCDC);
}

void sub_22CC1DC8C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_22CC6552C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_22CC1DCDC()
{
  unint64_t v0;
  uint64_t v1;
  _QWORD v2[2];

  if (!qword_254066708)
  {
    v2[0] = MEMORY[0x24BDF4780];
    v2[1] = MEMORY[0x24BDF4760];
    v0 = MEMORY[0x22E3063BC](0, v2, MEMORY[0x24BDFAC50], 0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254066708);
  }
}

void sub_22CC1DD48()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3CE68)
  {
    sub_22CC1DDC0();
    sub_22CC07B74(&qword_255C3CE90, (uint64_t (*)(uint64_t))sub_22CC1DDC0, MEMORY[0x24BDF4498]);
    v0 = sub_22CC658BC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3CE68);
  }
}

void sub_22CC1DDC0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3CE70)
  {
    sub_22CC082A8(255, &qword_255C3CE78, (uint64_t (*)(uint64_t))sub_22CC1DE38, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_22CC1DE9C();
    v0 = sub_22CC65898();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3CE70);
  }
}

void sub_22CC1DE38()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255C3CE80)
  {
    sub_22CC1DC64(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255C3CE80);
  }
}

unint64_t sub_22CC1DE9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255C3CE88;
  if (!qword_255C3CE88)
  {
    sub_22CC082A8(255, &qword_255C3CE78, (uint64_t (*)(uint64_t))sub_22CC1DE38, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDF5428], v1);
    atomic_store(result, (unint64_t *)&qword_255C3CE88);
  }
  return result;
}

void sub_22CC1DEFC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3CE98)
  {
    sub_22CC1DD48();
    v0 = sub_22CC6534C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3CE98);
  }
}

void sub_22CC1DF58(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  if (!qword_255C3CEA0)
  {
    sub_22CC1DEFC();
    v3 = v2;
    v4 = sub_22CC1DFE0();
    v7[0] = v3;
    v7[1] = MEMORY[0x24BDECD60];
    v7[2] = v4;
    v7[3] = MEMORY[0x24BDECD48];
    v5 = MEMORY[0x22E3063BC](a1, v7, MEMORY[0x24BDF2DE8], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_255C3CEA0);
  }
}

unint64_t sub_22CC1DFE0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255C3CEA8;
  if (!qword_255C3CEA8)
  {
    sub_22CC1DEFC();
    v2 = v1;
    v3[0] = sub_22CC07B74(&qword_255C3CEB0, (uint64_t (*)(uint64_t))sub_22CC1DD48, MEMORY[0x24BDF4700]);
    v3[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_255C3CEA8);
  }
  return result;
}

void sub_22CC1E060()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3CEB8)
  {
    sub_22CC1DDC0();
    v0 = sub_22CC65310();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3CEB8);
  }
}

void sub_22CC1E0C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3CEC0)
  {
    sub_22CC082A8(255, &qword_255C3CE78, (uint64_t (*)(uint64_t))sub_22CC1DE38, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    v0 = sub_22CC65310();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3CEC0);
  }
}

uint64_t sub_22CC1E140()
{
  sub_22CC1DEFC();
  sub_22CC1DFE0();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22CC1E19C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(void *, const void *, uint64_t);
  uint64_t v25;
  void *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  void *v37;
  char *v38;
  unsigned int (*v39)(const void *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  void *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  char *v47;
  uint64_t v48;

  v4 = type metadata accessor for SleepWidgetViewModel();
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v6 = (int *)v4;
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v7 = *(int *)(v4 + 20);
    v8 = (void *)(a1 + v7);
    v9 = (char *)a2 + v7;
    v10 = sub_22CC64F20();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
    if (v12(v9, 1, v10))
    {
      sub_22CC1E530(0, &qword_254065338, (void (*)(uint64_t))MEMORY[0x24BDCBDE0]);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v15 = v6[6];
    v16 = (void *)(a1 + v15);
    v17 = (char *)a2 + v15;
    if (v12((char *)a2 + v15, 1, v10))
    {
      sub_22CC1E530(0, &qword_254065338, (void (*)(uint64_t))MEMORY[0x24BDCBDE0]);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v16, v17, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
    }
    *(_BYTE *)(a1 + v6[7]) = *((_BYTE *)a2 + v6[7]);
    v19 = v6[8];
    v20 = (void *)(a1 + v19);
    v21 = (char *)a2 + v19;
    v22 = sub_22CC6504C();
    v23 = *(_QWORD *)(v22 - 8);
    v24 = *(void (**)(void *, const void *, uint64_t))(v23 + 16);
    v24(v20, v21, v22);
    v25 = v6[9];
    v26 = *(void **)((char *)a2 + v25);
    *(_QWORD *)(a1 + v25) = v26;
    v27 = v6[10];
    v28 = (_QWORD *)(a1 + v27);
    v29 = (uint64_t)a2 + v27;
    v30 = *(uint64_t *)((char *)a2 + v27);
    v31 = v26;
    if (v30)
    {
      v33 = *(void **)(v29 + 8);
      v32 = *(void **)(v29 + 16);
      *v28 = v30;
      v28[1] = v33;
      v28[2] = v32;
      swift_bridgeObjectRetain();
      v34 = v33;
      v35 = v32;
    }
    else
    {
      *(_OWORD *)v28 = *(_OWORD *)v29;
      v28[2] = *(_QWORD *)(v29 + 16);
    }
    v36 = v6[11];
    v37 = (void *)(a1 + v36);
    v38 = (char *)a2 + v36;
    v39 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48);
    if (v39((char *)a2 + v36, 1, v22))
    {
      sub_22CC1E530(0, (unint64_t *)&qword_254065348, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      v24(v37, v38, v22);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v37, 0, 1, v22);
    }
    v41 = v6[12];
    v42 = (void *)(a1 + v41);
    v43 = (char *)a2 + v41;
    if (v39((char *)a2 + v41, 1, v22))
    {
      sub_22CC1E530(0, (unint64_t *)&qword_254065348, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      v24(v42, v43, v22);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v42, 0, 1, v22);
    }
    v45 = v6[13];
    v46 = (void *)(a1 + v45);
    v47 = (char *)a2 + v45;
    if (v39(v47, 1, v22))
    {
      sub_22CC1E530(0, (unint64_t *)&qword_254065348, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      v24(v46, v47, v22);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v46, 0, 1, v22);
    }
  }
  return a1;
}

void sub_22CC1E530(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_22CC65CF4();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_22CC1E57C(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(const void *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(void *, const void *, uint64_t);
  uint64_t v22;
  void *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  void *v34;
  const void *v35;
  unsigned int (*v36)(const void *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  void *v39;
  const void *v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  const void *v44;
  uint64_t v45;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = (int *)type metadata accessor for SleepWidgetViewModel();
  v5 = v4[5];
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = sub_22CC64F20();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
  if (v10(v7, 1, v8))
  {
    sub_22CC1E530(0, &qword_254065338, (void (*)(uint64_t))MEMORY[0x24BDCBDE0]);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  v12 = v4[6];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  if (v10((const void *)(a2 + v12), 1, v8))
  {
    sub_22CC1E530(0, &qword_254065338, (void (*)(uint64_t))MEMORY[0x24BDCBDE0]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v13, v14, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v13, 0, 1, v8);
  }
  *(_BYTE *)(a1 + v4[7]) = *(_BYTE *)(a2 + v4[7]);
  v16 = v4[8];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  v19 = sub_22CC6504C();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(void (**)(void *, const void *, uint64_t))(v20 + 16);
  v21(v17, v18, v19);
  v22 = v4[9];
  v23 = *(void **)(a2 + v22);
  *(_QWORD *)(a1 + v22) = v23;
  v24 = v4[10];
  v25 = (_QWORD *)(a1 + v24);
  v26 = a2 + v24;
  v27 = *(_QWORD *)(a2 + v24);
  v28 = v23;
  if (v27)
  {
    v30 = *(void **)(v26 + 8);
    v29 = *(void **)(v26 + 16);
    *v25 = v27;
    v25[1] = v30;
    v25[2] = v29;
    swift_bridgeObjectRetain();
    v31 = v30;
    v32 = v29;
  }
  else
  {
    *(_OWORD *)v25 = *(_OWORD *)v26;
    v25[2] = *(_QWORD *)(v26 + 16);
  }
  v33 = v4[11];
  v34 = (void *)(a1 + v33);
  v35 = (const void *)(a2 + v33);
  v36 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48);
  if (v36((const void *)(a2 + v33), 1, v19))
  {
    sub_22CC1E530(0, (unint64_t *)&qword_254065348, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    v21(v34, v35, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v34, 0, 1, v19);
  }
  v38 = v4[12];
  v39 = (void *)(a1 + v38);
  v40 = (const void *)(a2 + v38);
  if (v36((const void *)(a2 + v38), 1, v19))
  {
    sub_22CC1E530(0, (unint64_t *)&qword_254065348, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    v21(v39, v40, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v39, 0, 1, v19);
  }
  v42 = v4[13];
  v43 = (void *)(a1 + v42);
  v44 = (const void *)(a2 + v42);
  if (v36(v44, 1, v19))
  {
    sub_22CC1E530(0, (unint64_t *)&qword_254065348, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    v21(v43, v44, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v43, 0, 1, v19);
  }
  return a1;
}

uint64_t sub_22CC1E8E4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  void *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  char *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  void *v28;
  void *v29;
  id v30;
  uint64_t v31;
  _QWORD *v32;
  __int128 *v33;
  uint64_t v34;
  void *v35;
  void *v36;
  id v37;
  void *v38;
  void *v39;
  id v40;
  void *v41;
  void *v42;
  id v43;
  id v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  void *v48;
  char *v49;
  uint64_t (*v50)(uint64_t, uint64_t, uint64_t);
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  char *v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  char *v62;
  int v63;
  int v64;
  uint64_t v65;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  v5 = (int *)type metadata accessor for SleepWidgetViewModel();
  v6 = v5[5];
  v7 = (void *)(a1 + v6);
  v8 = (char *)a2 + v6;
  v9 = sub_22CC64F20();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_22CC1E530(0, &qword_254065338, (void (*)(uint64_t))MEMORY[0x24BDCBDE0]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = v5[6];
  v16 = (void *)(a1 + v15);
  v17 = (char *)a2 + v15;
  v18 = v11((void *)(a1 + v15), 1, v9);
  v19 = v11(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v16, v9);
LABEL_12:
    sub_22CC1E530(0, &qword_254065338, (void (*)(uint64_t))MEMORY[0x24BDCBDE0]);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
LABEL_13:
  *(_BYTE *)(a1 + v5[7]) = *((_BYTE *)a2 + v5[7]);
  v21 = v5[8];
  v22 = a1 + v21;
  v23 = (uint64_t)a2 + v21;
  v24 = sub_22CC6504C();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 24);
  v26(v22, v23, v24);
  v27 = v5[9];
  v28 = *(void **)((char *)a2 + v27);
  v29 = *(void **)(a1 + v27);
  *(_QWORD *)(a1 + v27) = v28;
  v30 = v28;

  v31 = v5[10];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (__int128 *)((char *)a2 + v31);
  v34 = *(uint64_t *)((char *)a2 + v31);
  if (*(_QWORD *)(a1 + v31))
  {
    if (v34)
    {
      *v32 = v34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v35 = (void *)v32[1];
      v36 = (void *)*((_QWORD *)v33 + 1);
      v32[1] = v36;
      v37 = v36;

      v38 = (void *)v32[2];
      v39 = (void *)*((_QWORD *)v33 + 2);
      v32[2] = v39;
      v40 = v39;

    }
    else
    {
      sub_22CC06744(a1 + v31);
      v45 = *((_QWORD *)v33 + 2);
      *(_OWORD *)v32 = *v33;
      v32[2] = v45;
    }
  }
  else if (v34)
  {
    *v32 = v34;
    v41 = (void *)*((_QWORD *)v33 + 1);
    v32[1] = v41;
    v42 = (void *)*((_QWORD *)v33 + 2);
    v32[2] = v42;
    swift_bridgeObjectRetain();
    v43 = v41;
    v44 = v42;
  }
  else
  {
    v46 = *v33;
    v32[2] = *((_QWORD *)v33 + 2);
    *(_OWORD *)v32 = v46;
  }
  v47 = v5[11];
  v48 = (void *)(a1 + v47);
  v49 = (char *)a2 + v47;
  v50 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  v51 = v50(a1 + v47, 1, v24);
  v52 = v50((uint64_t)v49, 1, v24);
  if (v51)
  {
    if (!v52)
    {
      (*(void (**)(void *, char *, uint64_t))(v25 + 16))(v48, v49, v24);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v48, 0, 1, v24);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  if (v52)
  {
    (*(void (**)(void *, uint64_t))(v25 + 8))(v48, v24);
LABEL_27:
    sub_22CC1E530(0, (unint64_t *)&qword_254065348, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    goto LABEL_28;
  }
  v26((uint64_t)v48, (uint64_t)v49, v24);
LABEL_28:
  v54 = v5[12];
  v55 = (void *)(a1 + v54);
  v56 = (char *)a2 + v54;
  v57 = v50(a1 + v54, 1, v24);
  v58 = v50((uint64_t)v56, 1, v24);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(void *, char *, uint64_t))(v25 + 16))(v55, v56, v24);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v55, 0, 1, v24);
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  if (v58)
  {
    (*(void (**)(void *, uint64_t))(v25 + 8))(v55, v24);
LABEL_33:
    sub_22CC1E530(0, (unint64_t *)&qword_254065348, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    goto LABEL_34;
  }
  v26((uint64_t)v55, (uint64_t)v56, v24);
LABEL_34:
  v60 = v5[13];
  v61 = (void *)(a1 + v60);
  v62 = (char *)a2 + v60;
  v63 = v50(a1 + v60, 1, v24);
  v64 = v50((uint64_t)v62, 1, v24);
  if (!v63)
  {
    if (!v64)
    {
      v26((uint64_t)v61, (uint64_t)v62, v24);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v25 + 8))(v61, v24);
    goto LABEL_39;
  }
  if (v64)
  {
LABEL_39:
    sub_22CC1E530(0, (unint64_t *)&qword_254065348, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v25 + 16))(v61, v62, v24);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v61, 0, 1, v24);
  return a1;
}

uint64_t sub_22CC1EE10(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(const void *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(void *, const void *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  unsigned int (*v28)(const void *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  void *v31;
  const void *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  const void *v36;
  uint64_t v37;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = (int *)type metadata accessor for SleepWidgetViewModel();
  v5 = v4[5];
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  v8 = sub_22CC64F20();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48);
  if (v10(v7, 1, v8))
  {
    sub_22CC1E530(0, &qword_254065338, (void (*)(uint64_t))MEMORY[0x24BDCBDE0]);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  v12 = v4[6];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  if (v10((const void *)(a2 + v12), 1, v8))
  {
    sub_22CC1E530(0, &qword_254065338, (void (*)(uint64_t))MEMORY[0x24BDCBDE0]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v13, v14, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v13, 0, 1, v8);
  }
  *(_BYTE *)(a1 + v4[7]) = *(_BYTE *)(a2 + v4[7]);
  v16 = v4[8];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  v19 = sub_22CC6504C();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(void (**)(void *, const void *, uint64_t))(v20 + 32);
  v21(v17, v18, v19);
  *(_QWORD *)(a1 + v4[9]) = *(_QWORD *)(a2 + v4[9]);
  v22 = v4[10];
  v23 = a1 + v22;
  v24 = a2 + v22;
  *(_QWORD *)(v23 + 16) = *(_QWORD *)(v24 + 16);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  v25 = v4[11];
  v26 = (void *)(a1 + v25);
  v27 = (const void *)(a2 + v25);
  v28 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48);
  if (v28((const void *)(a2 + v25), 1, v19))
  {
    sub_22CC1E530(0, (unint64_t *)&qword_254065348, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v21(v26, v27, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v26, 0, 1, v19);
  }
  v30 = v4[12];
  v31 = (void *)(a1 + v30);
  v32 = (const void *)(a2 + v30);
  if (v28((const void *)(a2 + v30), 1, v19))
  {
    sub_22CC1E530(0, (unint64_t *)&qword_254065348, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    v21(v31, v32, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v31, 0, 1, v19);
  }
  v34 = v4[13];
  v35 = (void *)(a1 + v34);
  v36 = (const void *)(a2 + v34);
  if (v28(v36, 1, v19))
  {
    sub_22CC1E530(0, (unint64_t *)&qword_254065348, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    v21(v35, v36, v19);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v35, 0, 1, v19);
  }
  return a1;
}

uint64_t sub_22CC1F14C(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void *, uint64_t, uint64_t);
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  void *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  void *v31;
  void *v32;
  uint64_t v33;
  void *v34;
  const void *v35;
  uint64_t (*v36)(uint64_t, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  const void *v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  const void *v48;
  int v49;
  int v50;
  uint64_t v51;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = (int *)type metadata accessor for SleepWidgetViewModel();
  v5 = v4[5];
  v6 = (void *)(a1 + v5);
  v7 = (void *)(a2 + v5);
  v8 = sub_22CC64F20();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  v11 = v10(v6, 1, v8);
  v12 = v10(v7, 1, v8);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 32))(v6, v7, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    (*(void (**)(void *, uint64_t))(v9 + 8))(v6, v8);
LABEL_6:
    sub_22CC1E530(0, &qword_254065338, (void (*)(uint64_t))MEMORY[0x24BDCBDE0]);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v9 + 40))(v6, v7, v8);
LABEL_7:
  v14 = v4[6];
  v15 = (void *)(a1 + v14);
  v16 = (void *)(a2 + v14);
  v17 = v10((void *)(a1 + v14), 1, v8);
  v18 = v10(v16, 1, v8);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 32))(v15, v16, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v15, 0, 1, v8);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v9 + 8))(v15, v8);
LABEL_12:
    sub_22CC1E530(0, &qword_254065338, (void (*)(uint64_t))MEMORY[0x24BDCBDE0]);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v9 + 40))(v15, v16, v8);
LABEL_13:
  *(_BYTE *)(a1 + v4[7]) = *(_BYTE *)(a2 + v4[7]);
  v20 = v4[8];
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = sub_22CC6504C();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 40);
  v25(v21, v22, v23);
  v26 = v4[9];
  v27 = *(void **)(a1 + v26);
  *(_QWORD *)(a1 + v26) = *(_QWORD *)(a2 + v26);

  v28 = v4[10];
  v29 = (_QWORD *)(a1 + v28);
  v30 = (_QWORD *)(a2 + v28);
  if (*(_QWORD *)(a1 + v28))
  {
    if (*v30)
    {
      *v29 = *v30;
      swift_bridgeObjectRelease();
      v31 = (void *)v29[1];
      v29[1] = v30[1];

      v32 = (void *)v29[2];
      v29[2] = v30[2];

      goto LABEL_18;
    }
    sub_22CC06744((uint64_t)v29);
  }
  *(_OWORD *)v29 = *(_OWORD *)v30;
  v29[2] = v30[2];
LABEL_18:
  v33 = v4[11];
  v34 = (void *)(a1 + v33);
  v35 = (const void *)(a2 + v33);
  v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  v37 = v36(a1 + v33, 1, v23);
  v38 = v36((uint64_t)v35, 1, v23);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v34, v35, v23);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v34, 0, 1, v23);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v38)
  {
    (*(void (**)(void *, uint64_t))(v24 + 8))(v34, v23);
LABEL_23:
    sub_22CC1E530(0, (unint64_t *)&qword_254065348, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_24;
  }
  v25((uint64_t)v34, (uint64_t)v35, v23);
LABEL_24:
  v40 = v4[12];
  v41 = (void *)(a1 + v40);
  v42 = (const void *)(a2 + v40);
  v43 = v36(a1 + v40, 1, v23);
  v44 = v36((uint64_t)v42, 1, v23);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v41, v42, v23);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v41, 0, 1, v23);
      goto LABEL_30;
    }
    goto LABEL_29;
  }
  if (v44)
  {
    (*(void (**)(void *, uint64_t))(v24 + 8))(v41, v23);
LABEL_29:
    sub_22CC1E530(0, (unint64_t *)&qword_254065348, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    goto LABEL_30;
  }
  v25((uint64_t)v41, (uint64_t)v42, v23);
LABEL_30:
  v46 = v4[13];
  v47 = (void *)(a1 + v46);
  v48 = (const void *)(a2 + v46);
  v49 = v36(a1 + v46, 1, v23);
  v50 = v36((uint64_t)v48, 1, v23);
  if (!v49)
  {
    if (!v50)
    {
      v25((uint64_t)v47, (uint64_t)v48, v23);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v24 + 8))(v47, v23);
    goto LABEL_35;
  }
  if (v50)
  {
LABEL_35:
    sub_22CC1E530(0, (unint64_t *)&qword_254065348, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v47, v48, v23);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v47, 0, 1, v23);
  return a1;
}

uint64_t sub_22CC1F628()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC1F634(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SleepWidgetViewModel();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_22CC1F670()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC1F67C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SleepWidgetViewModel();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SleepWidgetRectangularView()
{
  uint64_t result;

  result = qword_254066548;
  if (!qword_254066548)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22CC1F6F8(uint64_t a1)
{
  uint64_t result;

  result = sub_22CC1F760(&qword_254066540, (uint64_t)&unk_22CC67074);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22CC1F72C(uint64_t a1)
{
  uint64_t result;

  result = sub_22CC1F760(&qword_255C3CF18, (uint64_t)&unk_22CC6703C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22CC1F760(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for SleepWidgetRectangularView();
    result = MEMORY[0x22E3063F8](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22CC1F7A0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_22CC1F7B8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_2540666E8;
  if (!qword_2540666E8)
  {
    sub_22CC1DC8C(255, &qword_2540666F0, sub_22CC1DC78);
    v2 = v1;
    v3[0] = sub_22CC1F828();
    v3[1] = v3[0];
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDEF3E0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_2540666E8);
  }
  return result;
}

unint64_t sub_22CC1F828()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[4];

  result = qword_2540666B8;
  if (!qword_2540666B8)
  {
    sub_22CC1DC78(255);
    v2 = v1;
    v3[2] = MEMORY[0x24BDF4780];
    v3[3] = MEMORY[0x24BDF4760];
    v3[0] = swift_getOpaqueTypeConformance2();
    v3[1] = v3[0];
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDEF3E0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_2540666B8);
  }
  return result;
}

uint64_t SleepWidgetView.viewModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SleepWidgetView();
  return sub_22CC0DE10(v1 + *(int *)(v3 + 28), a1, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetViewModel);
}

uint64_t SleepWidgetView.init(model:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int *v4;
  uint64_t *v5;
  char *v6;

  *a2 = swift_getKeyPath();
  sub_22CC19630(0);
  swift_storeEnumTagMultiPayload();
  v4 = (int *)type metadata accessor for SleepWidgetView();
  v5 = (uint64_t *)((char *)a2 + v4[5]);
  *v5 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  v6 = (char *)a2 + v4[6];
  *(_QWORD *)v6 = swift_getKeyPath();
  *((_QWORD *)v6 + 1) = 0;
  *((_QWORD *)v6 + 2) = 0;
  *((_QWORD *)v6 + 3) = 0;
  v6[32] = 0;
  return sub_22CC0DDCC(a1, (uint64_t)a2 + v4[7], (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetViewModel);
}

uint64_t SleepWidgetView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, unint64_t, uint64_t);
  char v32;
  void (*v33)(char *, uint64_t);
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  char v45;
  uint64_t *v46;
  uint64_t v47;
  _QWORD v48[2];
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;

  v2 = v1;
  v56 = a1;
  v3 = sub_22CC65A3C();
  v59 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)v48 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v55 = (char *)v48 - v10;
  sub_22CC2106C();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC21168(0);
  v15 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC211A8(0);
  v52 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v53 = (char *)v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC1FE34(v2, (uint64_t)v13);
  v20 = sub_22CC657E4();
  KeyPath = swift_getKeyPath();
  sub_22CC0DE10((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(_QWORD))sub_22CC2106C);
  v22 = *(int *)(v15 + 36);
  v54 = v17;
  v23 = (uint64_t *)&v17[v22];
  v24 = (uint64_t)v9;
  *v23 = KeyPath;
  v23[1] = v20;
  v25 = v2;
  sub_22CC0DE54((uint64_t)v13, (uint64_t (*)(_QWORD))sub_22CC2106C);
  v26 = swift_getKeyPath();
  v27 = _s13SleepWidgetUI0aB4ViewV17supportedFamiliesSay0B3Kit0B6FamilyOGvgZ_0();
  v28 = v2 + *(int *)(type metadata accessor for SleepWidgetView() + 20);
  sub_22CC20804((uint64_t (*)(_QWORD))sub_22CC19630, (uint64_t (*)(_QWORD))MEMORY[0x24BDFAF10], 0x6146746567646957, 0xEC000000796C696DLL, v24);
  v29 = *(_QWORD *)(v27 + 16);
  v57 = v26;
  v60 = v24;
  if (!v29)
  {
    v34 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
    goto LABEL_5;
  }
  v30 = v59;
  v50 = (*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  v51 = v28;
  v31 = *(void (**)(char *, unint64_t, uint64_t))(v59 + 16);
  v31(v6, v27 + v50, v3);
  sub_22CC07B74((unint64_t *)&qword_254066788, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDFAF20]);
  swift_bridgeObjectRetain();
  v32 = sub_22CC65B14();
  v33 = *(void (**)(char *, uint64_t))(v30 + 8);
  v33(v6, v3);
  if ((v32 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v34 = (void (*)(uint64_t, uint64_t))v33;
LABEL_5:
    v36 = (uint64_t)v54;
    v35 = (uint64_t)v55;
    v37 = v56;
    v39 = v52;
    v38 = (uint64_t)v53;
LABEL_14:
    v34(v60, v3);
    swift_bridgeObjectRelease();
    sub_22CC20804((uint64_t (*)(_QWORD))sub_22CC19630, (uint64_t (*)(_QWORD))MEMORY[0x24BDFAF10], 0x6146746567646957, 0xEC000000796C696DLL, v35);
    v46 = (uint64_t *)(v38 + *(int *)(v39 + 36));
    sub_22CC211CC(0);
    (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))((char *)v46 + *(int *)(v47 + 28), v35, v3);
    *v46 = v57;
    sub_22CC0DE10(v36, v38, (uint64_t (*)(_QWORD))sub_22CC21168);
    v34(v35, v3);
    sub_22CC0DE54(v36, (uint64_t (*)(_QWORD))sub_22CC21168);
    return sub_22CC0DDCC(v38, v37, (uint64_t (*)(_QWORD))sub_22CC211A8);
  }
  v58 = (void (*)(uint64_t, uint64_t))v33;
  v49 = v27;
  if (v29 == 1)
  {
    swift_bridgeObjectRelease();
    v36 = (uint64_t)v54;
    v35 = (uint64_t)v55;
    v37 = v56;
LABEL_13:
    v39 = v52;
    v38 = (uint64_t)v53;
    v34 = v58;
    goto LABEL_14;
  }
  v48[1] = v25;
  v40 = *(_QWORD *)(v59 + 72);
  v41 = v49 + v40 + v50;
  v42 = 1;
  while (1)
  {
    result = ((uint64_t (*)(char *, unint64_t, uint64_t))v31)(v6, v41, v3);
    v44 = v42 + 1;
    if (__OFADD__(v42, 1))
      break;
    v45 = sub_22CC65B14();
    v58((uint64_t)v6, v3);
    if ((v45 & 1) == 0)
    {
      ++v42;
      v41 += v40;
      if (v44 != v29)
        continue;
    }
    swift_bridgeObjectRelease();
    v35 = (uint64_t)v55;
    v37 = v56;
    v36 = (uint64_t)v54;
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_22CC1FE34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  char *v39;
  unint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t KeyPath;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t result;
  uint64_t v49;
  uint64_t (*v50)();
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t);
  char *v85;

  v83 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF380];
  sub_22CC2352C(0, &qword_254066658, (uint64_t (*)(uint64_t, uint64_t, _QWORD))MEMORY[0x24BDEF380]);
  v74 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v75 = (uint64_t)&v59 - v5;
  sub_22CC2352C(0, &qword_2540666B0, (uint64_t (*)(uint64_t, uint64_t, _QWORD))MEMORY[0x24BDEF3B8]);
  v82 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v76 = (char *)&v59 - v7;
  v8 = type metadata accessor for SleepWidgetViewModel();
  MEMORY[0x24BDAC7A8](v8);
  v71 = (uint64_t)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for SleepWidgetSmallView();
  MEMORY[0x24BDAC7A8](v73);
  v72 = (uint64_t *)((char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v68 = type metadata accessor for SleepWidgetRectangularView();
  MEMORY[0x24BDAC7A8](v68);
  v61 = (uint64_t)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC2358C(0, &qword_254066668, v3);
  v78 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v81 = (char *)&v59 - v13;
  sub_22CC210F4(0, &qword_254066650, (uint64_t (*)(uint64_t))type metadata accessor for SleepWidgetCircularView, (uint64_t (*)(uint64_t))type metadata accessor for SleepWidgetRectangularView, v3);
  v65 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v67 = (uint64_t)&v59 - v15;
  sub_22CC210D0(0);
  v17 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v69 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = type metadata accessor for SleepWidgetCircularView();
  MEMORY[0x24BDAC7A8](v66);
  v63 = (uint64_t)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_22CC65A3C();
  v21 = MEMORY[0x24BDFAF10];
  v22 = *(_QWORD *)(v20 - 8);
  v23 = MEMORY[0x24BDAC7A8](v20);
  v25 = (char *)&v59 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v23);
  v28 = (char *)&v59 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v80 = (char *)&v59 - v29;
  v30 = _s13SleepWidgetUI0aB4ViewV17supportedFamiliesSay0B3Kit0B6FamilyOGvgZ_0();
  v31 = type metadata accessor for SleepWidgetView();
  v70 = a1 + *(int *)(v31 + 20);
  sub_22CC20804((uint64_t (*)(_QWORD))sub_22CC19630, (uint64_t (*)(_QWORD))v21, 0x6146746567646957, 0xEC000000796C696DLL, (uint64_t)v28);
  v64 = *(_QWORD *)(v30 + 16);
  v79 = v17;
  v77 = v31;
  if (!v64)
  {
    v38 = *(void (**)(char *, uint64_t))(v22 + 8);
    v35 = a1;
    v36 = (uint64_t)v80;
    v39 = v28;
LABEL_7:
    v37 = (uint64_t)v81;
    v38(v39, v20);
    goto LABEL_8;
  }
  v62 = a1;
  v32 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v33 = *(void (**)(char *, unint64_t, uint64_t))(v22 + 16);
  v33(v25, v30 + v32, v20);
  sub_22CC07B74((unint64_t *)&qword_254066788, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDFAF20]);
  swift_bridgeObjectRetain();
  v85 = v28;
  v34 = sub_22CC65B14();
  v84 = *(void (**)(char *, uint64_t))(v22 + 8);
  v84(v25, v20);
  if ((v34 & 1) == 0)
  {
    v40 = v32;
    v41 = v64;
    if (v64 != 1)
    {
      v60 = v22;
      v52 = v30;
      v53 = *(_QWORD *)(v22 + 72);
      v59 = v52;
      v54 = v52 + v53 + v40;
      v55 = 1;
      while (1)
      {
        result = ((uint64_t (*)(char *, unint64_t, uint64_t))v33)(v25, v54, v20);
        v56 = v55 + 1;
        if (__OFADD__(v55, 1))
          break;
        v57 = sub_22CC65B14();
        v84(v25, v20);
        if ((v57 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          v36 = (uint64_t)v80;
          v37 = (uint64_t)v81;
          v35 = v62;
          v38 = v84;
          v22 = v60;
          v84(v85, v20);
          goto LABEL_8;
        }
        ++v55;
        v54 += v53;
        if (v56 == v41)
        {
          swift_bridgeObjectRelease();
          v35 = v62;
          v36 = (uint64_t)v80;
          v37 = (uint64_t)v81;
          v38 = v84;
          v22 = v60;
          v84(v85, v20);
          goto LABEL_8;
        }
      }
      __break(1u);
      return result;
    }
    swift_bridgeObjectRelease();
    v35 = v62;
    v36 = (uint64_t)v80;
    v38 = v84;
    v39 = v85;
    goto LABEL_7;
  }
  swift_bridgeObjectRelease();
  v35 = v62;
  v36 = (uint64_t)v80;
  v37 = (uint64_t)v81;
  v38 = v84;
  v84(v85, v20);
LABEL_8:
  swift_bridgeObjectRelease();
  sub_22CC20804((uint64_t (*)(_QWORD))sub_22CC19630, (uint64_t (*)(_QWORD))MEMORY[0x24BDFAF10], 0x6146746567646957, 0xEC000000796C696DLL, v36);
  v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 88))(v36, v20);
  if (v42 == *MEMORY[0x24BDFAED8])
  {
    v43 = v71;
    sub_22CC0DE10(v35 + *(int *)(v77 + 28), v71, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetViewModel);
    KeyPath = swift_getKeyPath();
    v46 = (uint64_t)v72;
    v45 = v73;
    *v72 = KeyPath;
    *(_BYTE *)(v46 + 8) = 0;
    sub_22CC0DDCC(v43, v46 + *(int *)(v45 + 20), (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetViewModel);
    sub_22CC0DE10(v46, v75, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetSmallView);
    swift_storeEnumTagMultiPayload();
    sub_22CC07B74(&qword_254066588, (uint64_t (*)(uint64_t))type metadata accessor for SleepWidgetSmallView, (uint64_t)&unk_22CC66FC8);
    v47 = (uint64_t)v76;
    sub_22CC65520();
    sub_22CC23604(v47, v37);
    swift_storeEnumTagMultiPayload();
    sub_22CC233E8();
    sub_22CC23480();
    sub_22CC65520();
    sub_22CC23658(v47);
    return sub_22CC0DE54(v46, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetSmallView);
  }
  if (v42 == *MEMORY[0x24BDFAF00])
  {
    v49 = v63;
    sub_22CC0DE10(v35 + *(int *)(v77 + 28), v63, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetViewModel);
    v50 = type metadata accessor for SleepWidgetCircularView;
    sub_22CC0DE10(v49, v67, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetCircularView);
    swift_storeEnumTagMultiPayload();
    sub_22CC07B74(&qword_254066528, (uint64_t (*)(uint64_t))type metadata accessor for SleepWidgetCircularView, (uint64_t)&unk_22CC68770);
LABEL_14:
    sub_22CC07B74(&qword_254066540, (uint64_t (*)(uint64_t))type metadata accessor for SleepWidgetRectangularView, (uint64_t)&unk_22CC67074);
    v51 = (uint64_t)v69;
    sub_22CC65520();
    sub_22CC0DE10(v51, v37, (uint64_t (*)(_QWORD))sub_22CC210D0);
    swift_storeEnumTagMultiPayload();
    sub_22CC233E8();
    sub_22CC23480();
    sub_22CC65520();
    sub_22CC0DE54(v51, (uint64_t (*)(_QWORD))sub_22CC210D0);
    return sub_22CC0DE54(v49, (uint64_t (*)(_QWORD))v50);
  }
  if (v42 == *MEMORY[0x24BDFAF08])
  {
    v49 = v61;
    sub_22CC0DE10(v35 + *(int *)(v77 + 28), v61, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetViewModel);
    v50 = type metadata accessor for SleepWidgetRectangularView;
    sub_22CC0DE10(v49, v67, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetRectangularView);
    swift_storeEnumTagMultiPayload();
    sub_22CC07B74(&qword_254066528, (uint64_t (*)(uint64_t))type metadata accessor for SleepWidgetCircularView, (uint64_t)&unk_22CC68770);
    goto LABEL_14;
  }
  swift_storeEnumTagMultiPayload();
  sub_22CC07B74(&qword_254066588, (uint64_t (*)(uint64_t))type metadata accessor for SleepWidgetSmallView, (uint64_t)&unk_22CC66FC8);
  v58 = (uint64_t)v76;
  sub_22CC65520();
  sub_22CC23604(v58, v37);
  swift_storeEnumTagMultiPayload();
  sub_22CC233E8();
  sub_22CC23480();
  sub_22CC65520();
  sub_22CC23658(v58);
  return ((uint64_t (*)(uint64_t, uint64_t))v38)(v36, v20);
}

uint64_t sub_22CC207A8@<X0>(uint64_t a1@<X8>)
{
  return sub_22CC20804((uint64_t (*)(_QWORD))sub_22CC19630, (uint64_t (*)(_QWORD))MEMORY[0x24BDFAF10], 0x6146746567646957, 0xEC000000796C696DLL, a1);
}

uint64_t sub_22CC207D8@<X0>(uint64_t a1@<X8>)
{
  return sub_22CC20804((uint64_t (*)(_QWORD))sub_22CC1964C, (uint64_t (*)(_QWORD))MEMORY[0x24BDFADE0], 0xD000000000000013, 0x800000022CC69850, a1);
}

uint64_t sub_22CC20804@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  os_log_type_t v20;
  NSObject *v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = a3;
  v9 = v5;
  v11 = sub_22CC6546C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1(0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v25 - v16;
  sub_22CC0DE10(v9, (uint64_t)&v25 - v16, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    v20 = sub_22CC65C58();
    v21 = sub_22CC65598();
    if (os_log_type_enabled(v21, v20))
    {
      v26 = a4;
      v22 = swift_slowAlloc();
      v27 = a5;
      v23 = (uint8_t *)v22;
      v24 = swift_slowAlloc();
      v30 = v24;
      *(_DWORD *)v23 = 136315138;
      v29 = sub_22CC5C47C(v28, v26, &v30);
      sub_22CC65D00();
      _os_log_impl(&dword_22CC04000, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E306470](v24, -1, -1);
      MEMORY[0x22E306470](v23, -1, -1);
    }

    sub_22CC65460();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_22CC20A38(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_22CC6546C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return a1 & 1;
  swift_retain();
  v8 = sub_22CC65C58();
  v9 = sub_22CC65598();
  v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v15 = v12;
    *(_DWORD *)v11 = 136315138;
    v14 = sub_22CC5C47C(1819242306, 0xE400000000000000, &v15);
    sub_22CC65D00();
    _os_log_impl(&dword_22CC04000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E306470](v12, -1, -1);
    MEMORY[0x22E306470](v11, -1, -1);
  }

  sub_22CC65460();
  swift_getAtKeyPath();
  sub_22CC11750(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_22CC20BF0@<X0>(uint64_t a1@<X8>)
{
  return sub_22CC20804((uint64_t (*)(_QWORD))sub_22CC19614, (uint64_t (*)(_QWORD))MEMORY[0x24BDECF50], 0x5463696D616E7944, 0xEF657A6953657079, a1);
}

uint64_t sub_22CC20C24@<X0>(uint64_t a1@<X8>)
{
  return sub_22CC20804((uint64_t (*)(_QWORD))sub_22CC236A8, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEEA8], 0x656C61636F4CLL, 0xE600000000000000, a1);
}

uint64_t sub_22CC20C48@<X0>(uint64_t a1@<X8>)
{
  return sub_22CC20804((uint64_t (*)(_QWORD))sub_22CC23510, (uint64_t (*)(_QWORD))MEMORY[0x24BDF17A8], 0x747865746E6F43, 0xE700000000000000, a1);
}

uint64_t sub_22CC20C70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_22CC65388();
  *a1 = result;
  return result;
}

uint64_t sub_22CC20C98()
{
  swift_retain();
  return sub_22CC65394();
}

uint64_t _s13SleepWidgetUI0aB4ViewV17supportedFamiliesSay0B3Kit0B6FamilyOGvgZ_0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  void (*v8)(unint64_t, _QWORD, uint64_t);
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23[4];

  v23[3] = *MEMORY[0x24BDAC8D0];
  v0 = sub_22CC652BC();
  v20 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC082A8(0, (unint64_t *)&qword_254065958, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v3 = sub_22CC65A3C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 72);
  v6 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_22CC66400;
  v8 = *(void (**)(unint64_t, _QWORD, uint64_t))(v4 + 104);
  v8(v7 + v6, *MEMORY[0x24BDFAF00], v3);
  v8(v7 + v6 + v5, *MEMORY[0x24BDFAF08], v3);
  v22 = v7;
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_22CC663F0;
  v8(v9 + v6, *MEMORY[0x24BDFAED8], v3);
  sub_22CC2B6DC(v9);
  sub_22CC652A4();
  swift_bridgeObjectRetain_n();
  v10 = sub_22CC652B0();
  v11 = sub_22CC65C40();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v23[0] = v13;
    *(_DWORD *)v12 = 136446466;
    v21 = sub_22CC5C47C(0x6469577065656C53, 0xEF77656956746567, v23);
    v19 = v0;
    sub_22CC65D00();
    *(_WORD *)(v12 + 12) = 2082;
    v14 = swift_bridgeObjectRetain();
    v15 = MEMORY[0x22E305CA8](v14, v3);
    v17 = v16;
    swift_bridgeObjectRelease();
    v21 = sub_22CC5C47C(v15, v17, v23);
    sub_22CC65D00();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CC04000, v10, v11, "[%{public}s] supportedFamilies: %{public}s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x22E306470](v13, -1, -1);
    MEMORY[0x22E306470](v12, -1, -1);

    (*(void (**)(char *, uint64_t))(v20 + 8))(v2, v19);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v2, v0);
  }
  swift_beginAccess();
  return v22;
}

uint64_t type metadata accessor for SleepWidgetView()
{
  uint64_t result;

  result = qword_254065318;
  if (!qword_254065318)
    return swift_getSingletonMetadata();
  return result;
}

void sub_22CC2106C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254066730)
  {
    sub_22CC2358C(255, &qword_2540666E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
    v0 = sub_22CC65868();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254066730);
  }
}

void sub_22CC210D0(uint64_t a1)
{
  sub_22CC210F4(a1, &qword_2540666A0, (uint64_t (*)(uint64_t))type metadata accessor for SleepWidgetCircularView, (uint64_t (*)(uint64_t))type metadata accessor for SleepWidgetRectangularView, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
}

void sub_22CC210F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*a2)
  {
    v9 = a3(255);
    v10 = a4(255);
    v11 = a5(a1, v9, v10);
    if (!v12)
      atomic_store(v11, a2);
  }
}

void sub_22CC21168(uint64_t a1)
{
  sub_22CC210F4(a1, &qword_2540665F8, (uint64_t (*)(uint64_t))sub_22CC2106C, (uint64_t (*)(uint64_t))sub_22CC2118C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
}

void sub_22CC2118C(uint64_t a1)
{
  sub_22CC082A8(a1, &qword_2540656A0, (uint64_t (*)(uint64_t))sub_22CC14E58, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
}

void sub_22CC211A8(uint64_t a1)
{
  sub_22CC210F4(a1, &qword_254066628, (uint64_t (*)(uint64_t))sub_22CC21168, (uint64_t (*)(uint64_t))sub_22CC211CC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
}

void sub_22CC211CC(uint64_t a1)
{
  sub_22CC082A8(a1, &qword_254066700, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
}

uint64_t sub_22CC211E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_22CC65388();
  *a1 = result;
  return result;
}

uint64_t sub_22CC21210()
{
  swift_retain();
  return sub_22CC65394();
}

uint64_t sub_22CC21238()
{
  return swift_getOpaqueTypeConformance2();
}

_QWORD *initializeBufferWithCopyOfBuffer for SleepWidgetView(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char *v23;
  char *v24;
  int *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  void *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  void *v52;
  void *v53;
  id v54;
  id v55;
  uint64_t v56;
  char *v57;
  char *v58;
  unsigned int (*v59)(char *, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  _QWORD *v70;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    v9 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_22CC19630(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_22CC65A3C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v10 = a3[5];
    v11 = (_QWORD *)((char *)a1 + v10);
    v12 = (_QWORD *)((char *)a2 + v10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_22CC65A3C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v14 = a3[6];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = *(_QWORD *)v16;
    v18 = *((_QWORD *)v16 + 1);
    v19 = *((_QWORD *)v16 + 2);
    v20 = *((_QWORD *)v16 + 3);
    v21 = v16[32];
    sub_22CC21748(*(_QWORD *)v16, v18, v19, v20, v21);
    *(_QWORD *)v15 = v17;
    *((_QWORD *)v15 + 1) = v18;
    *((_QWORD *)v15 + 2) = v19;
    *((_QWORD *)v15 + 3) = v20;
    v15[32] = v21;
    v22 = a3[7];
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    *(_QWORD *)v23 = *(_QWORD *)((char *)a2 + v22);
    v23[8] = *((_BYTE *)a2 + v22 + 8);
    v25 = (int *)type metadata accessor for SleepWidgetViewModel();
    v26 = v25[5];
    v27 = &v23[v26];
    v28 = &v24[v26];
    v29 = sub_22CC64F20();
    v30 = *(_QWORD *)(v29 - 8);
    v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
    if (v31(v28, 1, v29))
    {
      sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    v33 = v25[6];
    v34 = &v23[v33];
    v35 = &v24[v33];
    if (v31(&v24[v33], 1, v29))
    {
      sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v34, v35, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v34, 0, 1, v29);
    }
    v70 = a1;
    v23[v25[7]] = v24[v25[7]];
    v37 = v25[8];
    v38 = &v23[v37];
    v39 = &v24[v37];
    v40 = sub_22CC6504C();
    v41 = *(_QWORD *)(v40 - 8);
    v42 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
    v42(v38, v39, v40);
    v43 = v25[9];
    v44 = *(void **)&v24[v43];
    *(_QWORD *)&v23[v43] = v44;
    v45 = v25[10];
    v46 = &v23[v45];
    v47 = &v24[v45];
    v48 = *(_QWORD *)&v24[v45];
    v49 = v44;
    if (v48)
    {
      v50 = v41;
      v51 = v42;
      v52 = (void *)*((_QWORD *)v47 + 1);
      v53 = (void *)*((_QWORD *)v47 + 2);
      *(_QWORD *)v46 = v48;
      *((_QWORD *)v46 + 1) = v52;
      *((_QWORD *)v46 + 2) = v53;
      swift_bridgeObjectRetain();
      v54 = v52;
      v42 = v51;
      v41 = v50;
      v55 = v53;
    }
    else
    {
      *(_OWORD *)v46 = *(_OWORD *)v47;
      *((_QWORD *)v46 + 2) = *((_QWORD *)v47 + 2);
    }
    v56 = v25[11];
    v57 = &v23[v56];
    v58 = &v24[v56];
    v59 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
    if (v59(&v24[v56], 1, v40))
    {
      sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      v42(v57, v58, v40);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v57, 0, 1, v40);
    }
    v9 = v70;
    v61 = v25[12];
    v62 = &v23[v61];
    v63 = &v24[v61];
    if (v59(&v24[v61], 1, v40))
    {
      sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    }
    else
    {
      v42(v62, v63, v40);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v62, 0, 1, v40);
    }
    v65 = v25[13];
    v66 = &v23[v65];
    v67 = &v24[v65];
    if (v59(&v24[v65], 1, v40))
    {
      sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    }
    else
    {
      v42(v66, v67, v40);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v66, 0, 1, v40);
    }
  }
  return v9;
}

uint64_t sub_22CC21748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if ((a5 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t destroy for SleepWidgetView(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  void (*v24)(uint64_t, uint64_t);

  sub_22CC19630(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_22CC65A3C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  v5 = a1 + a2[5];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_22CC65A3C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  v7 = a1 + a2[6];
  sub_22CC219A8(*(_QWORD *)v7, *(_QWORD *)(v7 + 8), *(_QWORD *)(v7 + 16), *(_QWORD *)(v7 + 24), *(_BYTE *)(v7 + 32));
  v8 = a1 + a2[7];
  v9 = (int *)type metadata accessor for SleepWidgetViewModel();
  v10 = v8 + v9[5];
  v11 = sub_22CC64F20();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (!v13(v10, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  v14 = v8 + v9[6];
  if (!v13(v14, 1, v11))
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v14, v11);
  v15 = v8 + v9[8];
  v16 = sub_22CC6504C();
  v17 = *(_QWORD *)(v16 - 8);
  v24 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
  v24(v15, v16);

  v18 = v8 + v9[10];
  if (*(_QWORD *)v18)
  {
    swift_bridgeObjectRelease();

  }
  v19 = v8 + v9[11];
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  if (!v20(v19, 1, v16))
    v24(v19, v16);
  v21 = v8 + v9[12];
  if (!v20(v21, 1, v16))
    v24(v21, v16);
  v22 = v8 + v9[13];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v20)(v22, 1, v16);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v24)(v22, v16);
  return result;
}

uint64_t sub_22CC219A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  if ((a5 & 1) == 0)
    return swift_release();
  return result;
}

_QWORD *initializeWithCopy for SleepWidgetView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  void *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  id v46;
  void *v47;
  void *v48;
  id v49;
  id v50;
  uint64_t v51;
  char *v52;
  char *v53;
  unsigned int (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  _QWORD *v65;

  sub_22CC19630(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_22CC65A3C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_22CC65A3C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = *(_QWORD *)v13;
  v15 = *((_QWORD *)v13 + 1);
  v16 = *((_QWORD *)v13 + 2);
  v17 = *((_QWORD *)v13 + 3);
  v18 = v13[32];
  sub_22CC21748(*(_QWORD *)v13, v15, v16, v17, v18);
  *(_QWORD *)v12 = v14;
  *((_QWORD *)v12 + 1) = v15;
  *((_QWORD *)v12 + 2) = v16;
  *((_QWORD *)v12 + 3) = v17;
  v12[32] = v18;
  v19 = a3[7];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  *(_QWORD *)v20 = *(_QWORD *)((char *)a2 + v19);
  v20[8] = *((_BYTE *)a2 + v19 + 8);
  v22 = (int *)type metadata accessor for SleepWidgetViewModel();
  v23 = v22[5];
  v24 = &v20[v23];
  v25 = &v21[v23];
  v26 = sub_22CC64F20();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  if (v28(v25, 1, v26))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  v30 = v22[6];
  v31 = &v20[v30];
  v32 = &v21[v30];
  if (v28(&v21[v30], 1, v26))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v31, v32, v26);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v31, 0, 1, v26);
  }
  v65 = a1;
  v20[v22[7]] = v21[v22[7]];
  v34 = v22[8];
  v35 = &v20[v34];
  v36 = &v21[v34];
  v37 = sub_22CC6504C();
  v38 = *(_QWORD *)(v37 - 8);
  v39 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
  v39(v35, v36, v37);
  v40 = v22[9];
  v41 = *(void **)&v21[v40];
  *(_QWORD *)&v20[v40] = v41;
  v42 = v22[10];
  v43 = &v20[v42];
  v44 = &v21[v42];
  v45 = *(_QWORD *)&v21[v42];
  v46 = v41;
  if (v45)
  {
    v47 = (void *)*((_QWORD *)v44 + 1);
    v48 = (void *)*((_QWORD *)v44 + 2);
    *(_QWORD *)v43 = v45;
    *((_QWORD *)v43 + 1) = v47;
    *((_QWORD *)v43 + 2) = v48;
    swift_bridgeObjectRetain();
    v49 = v47;
    v50 = v48;
  }
  else
  {
    *(_OWORD *)v43 = *(_OWORD *)v44;
    *((_QWORD *)v43 + 2) = *((_QWORD *)v44 + 2);
  }
  v51 = v22[11];
  v52 = &v20[v51];
  v53 = &v21[v51];
  v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
  if (v54(&v21[v51], 1, v37))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    v39(v52, v53, v37);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v52, 0, 1, v37);
  }
  v56 = v22[12];
  v57 = &v20[v56];
  v58 = &v21[v56];
  if (v54(&v21[v56], 1, v37))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
  }
  else
  {
    v39(v57, v58, v37);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v57, 0, 1, v37);
  }
  v60 = v22[13];
  v61 = &v20[v60];
  v62 = &v21[v60];
  if (v54(&v21[v60], 1, v37))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
  }
  else
  {
    v39(v61, v62, v37);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v61, 0, 1, v37);
  }
  return v65;
}

_QWORD *assignWithCopy for SleepWidgetView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  int v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  void *v50;
  id v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  void *v56;
  void *v57;
  id v58;
  void *v59;
  void *v60;
  id v61;
  void *v62;
  void *v63;
  id v64;
  id v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t (*v71)(char *, uint64_t, uint64_t);
  int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  int v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  int v84;
  int v85;
  uint64_t v86;
  void (*v88)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_22CC0DE54((uint64_t)a1, (uint64_t (*)(_QWORD))sub_22CC19630);
    sub_22CC19630(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_22CC65A3C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v7 = a3[5];
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (_QWORD *)((char *)a2 + v7);
    sub_22CC0DE54((uint64_t)a1 + v7, (uint64_t (*)(_QWORD))sub_22CC19630);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_22CC65A3C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = *(_QWORD *)v13;
  v15 = *((_QWORD *)v13 + 1);
  v16 = *((_QWORD *)v13 + 2);
  v17 = *((_QWORD *)v13 + 3);
  v18 = v13[32];
  sub_22CC21748(*(_QWORD *)v13, v15, v16, v17, v18);
  v19 = *(_QWORD *)v12;
  v20 = *((_QWORD *)v12 + 1);
  v21 = *((_QWORD *)v12 + 2);
  v22 = *((_QWORD *)v12 + 3);
  v23 = v12[32];
  *(_QWORD *)v12 = v14;
  *((_QWORD *)v12 + 1) = v15;
  *((_QWORD *)v12 + 2) = v16;
  *((_QWORD *)v12 + 3) = v17;
  v12[32] = v18;
  sub_22CC219A8(v19, v20, v21, v22, v23);
  v24 = a3[7];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = *(_QWORD *)((char *)a2 + v24);
  v25[8] = v26[8];
  *(_QWORD *)v25 = v27;
  v28 = (int *)type metadata accessor for SleepWidgetViewModel();
  v29 = v28[5];
  v30 = &v25[v29];
  v31 = &v26[v29];
  v32 = sub_22CC64F20();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
  LODWORD(v16) = v34(v30, 1, v32);
  v35 = v34(v31, 1, v32);
  if ((_DWORD)v16)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v30, v32);
LABEL_14:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_15;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 24))(v30, v31, v32);
LABEL_15:
  v37 = v28[6];
  v38 = &v25[v37];
  v39 = &v26[v37];
  v40 = v34(&v25[v37], 1, v32);
  v41 = v34(v39, 1, v32);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v38, v39, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v38, 0, 1, v32);
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v38, v32);
LABEL_20:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_21;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 24))(v38, v39, v32);
LABEL_21:
  v25[v28[7]] = v26[v28[7]];
  v43 = v28[8];
  v44 = &v25[v43];
  v45 = &v26[v43];
  v46 = sub_22CC6504C();
  v47 = *(_QWORD *)(v46 - 8);
  v88 = *(void (**)(char *, char *, uint64_t))(v47 + 24);
  v88(v44, v45, v46);
  v48 = v28[9];
  v49 = *(void **)&v26[v48];
  v50 = *(void **)&v25[v48];
  *(_QWORD *)&v25[v48] = v49;
  v51 = v49;

  v52 = v28[10];
  v53 = &v25[v52];
  v54 = &v26[v52];
  v55 = *(_QWORD *)&v26[v52];
  if (*(_QWORD *)&v25[v52])
  {
    if (v55)
    {
      *(_QWORD *)v53 = v55;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v56 = (void *)*((_QWORD *)v53 + 1);
      v57 = (void *)*((_QWORD *)v54 + 1);
      *((_QWORD *)v53 + 1) = v57;
      v58 = v57;

      v59 = (void *)*((_QWORD *)v53 + 2);
      v60 = (void *)*((_QWORD *)v54 + 2);
      *((_QWORD *)v53 + 2) = v60;
      v61 = v60;

    }
    else
    {
      sub_22CC06744((uint64_t)&v25[v52]);
      v66 = *((_QWORD *)v54 + 2);
      *(_OWORD *)v53 = *(_OWORD *)v54;
      *((_QWORD *)v53 + 2) = v66;
    }
  }
  else if (v55)
  {
    *(_QWORD *)v53 = v55;
    v62 = (void *)*((_QWORD *)v54 + 1);
    *((_QWORD *)v53 + 1) = v62;
    v63 = (void *)*((_QWORD *)v54 + 2);
    *((_QWORD *)v53 + 2) = v63;
    swift_bridgeObjectRetain();
    v64 = v62;
    v65 = v63;
  }
  else
  {
    v67 = *(_OWORD *)v54;
    *((_QWORD *)v53 + 2) = *((_QWORD *)v54 + 2);
    *(_OWORD *)v53 = v67;
  }
  v68 = v28[11];
  v69 = &v25[v68];
  v70 = &v26[v68];
  v71 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48);
  v72 = v71(&v25[v68], 1, v46);
  v73 = v71(v70, 1, v46);
  if (v72)
  {
    if (!v73)
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v69, v70, v46);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v69, 0, 1, v46);
      goto LABEL_36;
    }
    goto LABEL_35;
  }
  if (v73)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v69, v46);
LABEL_35:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    goto LABEL_36;
  }
  v88(v69, v70, v46);
LABEL_36:
  v75 = v28[12];
  v76 = &v25[v75];
  v77 = &v26[v75];
  v78 = v71(&v25[v75], 1, v46);
  v79 = v71(v77, 1, v46);
  if (v78)
  {
    if (!v79)
    {
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v76, v77, v46);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v76, 0, 1, v46);
      goto LABEL_42;
    }
    goto LABEL_41;
  }
  if (v79)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v76, v46);
LABEL_41:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
    goto LABEL_42;
  }
  v88(v76, v77, v46);
LABEL_42:
  v81 = v28[13];
  v82 = &v25[v81];
  v83 = &v26[v81];
  v84 = v71(&v25[v81], 1, v46);
  v85 = v71(v83, 1, v46);
  if (!v84)
  {
    if (!v85)
    {
      v88(v82, v83, v46);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v47 + 8))(v82, v46);
    goto LABEL_47;
  }
  if (v85)
  {
LABEL_47:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v82, v83, v46);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v82, 0, 1, v46);
  return a1;
}

char *initializeWithTake for SleepWidgetView(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  char *v18;
  char *v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  unsigned int (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;

  sub_22CC19630(0);
  v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_22CC65A3C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_22CC65A3C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  v13 = a3[6];
  v14 = a3[7];
  v15 = &a1[v13];
  v16 = &a2[v13];
  v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  v15[32] = v16[32];
  v18 = &a1[v14];
  v19 = &a2[v14];
  v18[8] = a2[v14 + 8];
  *(_QWORD *)v18 = *(_QWORD *)&a2[v14];
  v20 = (int *)type metadata accessor for SleepWidgetViewModel();
  v21 = v20[5];
  v22 = &v18[v21];
  v23 = &v19[v21];
  v24 = sub_22CC64F20();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  if (v26(v23, 1, v24))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  v28 = v20[6];
  v29 = &v18[v28];
  v30 = &v19[v28];
  if (v26(&v19[v28], 1, v24))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v29, v30, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v29, 0, 1, v24);
  }
  v18[v20[7]] = v19[v20[7]];
  v32 = v20[8];
  v33 = &v18[v32];
  v34 = &v19[v32];
  v35 = sub_22CC6504C();
  v36 = *(_QWORD *)(v35 - 8);
  v37 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  v37(v33, v34, v35);
  *(_QWORD *)&v18[v20[9]] = *(_QWORD *)&v19[v20[9]];
  v38 = v20[10];
  v39 = &v18[v38];
  v40 = &v19[v38];
  *((_QWORD *)v39 + 2) = *((_QWORD *)v40 + 2);
  *(_OWORD *)v39 = *(_OWORD *)v40;
  v41 = v20[11];
  v42 = &v18[v41];
  v43 = &v19[v41];
  v44 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
  if (v44(&v19[v41], 1, v35))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    v37(v42, v43, v35);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v42, 0, 1, v35);
  }
  v46 = v20[12];
  v47 = &v18[v46];
  v48 = &v19[v46];
  if (v44(&v19[v46], 1, v35))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    v37(v47, v48, v35);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v47, 0, 1, v35);
  }
  v50 = v20[13];
  v51 = &v18[v50];
  v52 = &v19[v50];
  if (v44(&v19[v50], 1, v35))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  else
  {
    v37(v51, v52, v35);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v51, 0, 1, v35);
  }
  return a1;
}

char *assignWithTake for SleepWidgetView(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  __int128 v22;
  uint64_t v23;
  char *v24;
  char *v25;
  int *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  void *v52;
  void *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t (*v57)(char *, uint64_t, uint64_t);
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  int v70;
  int v71;
  uint64_t v72;
  void (*v74)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_22CC0DE54((uint64_t)a1, (uint64_t (*)(_QWORD))sub_22CC19630);
    sub_22CC19630(0);
    v7 = v6;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_22CC65A3C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    v9 = a3[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    sub_22CC0DE54((uint64_t)&a1[v9], (uint64_t (*)(_QWORD))sub_22CC19630);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_22CC65A3C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
  }
  v13 = a3[6];
  v14 = &a1[v13];
  v15 = &a2[v13];
  v16 = v15[32];
  v17 = *(_QWORD *)v14;
  v18 = *((_QWORD *)v14 + 1);
  v19 = *((_QWORD *)v14 + 2);
  v20 = *((_QWORD *)v14 + 3);
  v21 = v14[32];
  v22 = *((_OWORD *)v15 + 1);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + 1) = v22;
  v14[32] = v16;
  sub_22CC219A8(v17, v18, v19, v20, v21);
  v23 = a3[7];
  v24 = &a1[v23];
  v25 = &a2[v23];
  *(_QWORD *)v24 = *(_QWORD *)&a2[v23];
  v24[8] = a2[v23 + 8];
  v26 = (int *)type metadata accessor for SleepWidgetViewModel();
  v27 = v26[5];
  v28 = &v24[v27];
  v29 = &v25[v27];
  v30 = sub_22CC64F20();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
  v33 = v32(v28, 1, v30);
  v34 = v32(v29, 1, v30);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v30);
LABEL_13:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 40))(v28, v29, v30);
LABEL_14:
  v36 = v26[6];
  v37 = &v24[v36];
  v38 = &v25[v36];
  v39 = v32(&v24[v36], 1, v30);
  v40 = v32(v38, 1, v30);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v37, v38, v30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v37, 0, 1, v30);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v40)
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v37, v30);
LABEL_19:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 40))(v37, v38, v30);
LABEL_20:
  v24[v26[7]] = v25[v26[7]];
  v42 = v26[8];
  v43 = &v24[v42];
  v44 = &v25[v42];
  v45 = sub_22CC6504C();
  v46 = *(_QWORD *)(v45 - 8);
  v74 = *(void (**)(char *, char *, uint64_t))(v46 + 40);
  v74(v43, v44, v45);
  v47 = v26[9];
  v48 = *(void **)&v24[v47];
  *(_QWORD *)&v24[v47] = *(_QWORD *)&v25[v47];

  v49 = v26[10];
  v50 = &v24[v49];
  v51 = &v25[v49];
  if (*(_QWORD *)&v24[v49])
  {
    if (*(_QWORD *)v51)
    {
      *(_QWORD *)v50 = *(_QWORD *)v51;
      swift_bridgeObjectRelease();
      v52 = (void *)*((_QWORD *)v50 + 1);
      *((_QWORD *)v50 + 1) = *((_QWORD *)v51 + 1);

      v53 = (void *)*((_QWORD *)v50 + 2);
      *((_QWORD *)v50 + 2) = *((_QWORD *)v51 + 2);

      goto LABEL_25;
    }
    sub_22CC06744((uint64_t)v50);
  }
  *(_OWORD *)v50 = *(_OWORD *)v51;
  *((_QWORD *)v50 + 2) = *((_QWORD *)v51 + 2);
LABEL_25:
  v54 = v26[11];
  v55 = &v24[v54];
  v56 = &v25[v54];
  v57 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48);
  v58 = v57(&v24[v54], 1, v45);
  v59 = v57(v56, 1, v45);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v55, v56, v45);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v55, 0, 1, v45);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v59)
  {
    (*(void (**)(char *, uint64_t))(v46 + 8))(v55, v45);
LABEL_30:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_31;
  }
  v74(v55, v56, v45);
LABEL_31:
  v61 = v26[12];
  v62 = &v24[v61];
  v63 = &v25[v61];
  v64 = v57(&v24[v61], 1, v45);
  v65 = v57(v63, 1, v45);
  if (v64)
  {
    if (!v65)
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v62, v63, v45);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v62, 0, 1, v45);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v65)
  {
    (*(void (**)(char *, uint64_t))(v46 + 8))(v62, v45);
LABEL_36:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    goto LABEL_37;
  }
  v74(v62, v63, v45);
LABEL_37:
  v67 = v26[13];
  v68 = &v24[v67];
  v69 = &v25[v67];
  v70 = v57(&v24[v67], 1, v45);
  v71 = v57(v69, 1, v45);
  if (!v70)
  {
    if (!v71)
    {
      v74(v68, v69, v45);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v46 + 8))(v68, v45);
    goto LABEL_42;
  }
  if (v71)
  {
LABEL_42:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v68, v69, v45);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v68, 0, 1, v45);
  return a1;
}

uint64_t getEnumTagSinglePayload for SleepWidgetView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC22FF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;
  uint64_t v10;

  sub_22CC082A8(0, &qword_255C3CAB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB580]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 254)
  {
    v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24) + 32);
    if (v9 > 1)
      return (v9 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v10 = type metadata accessor for SleepWidgetViewModel();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for SleepWidgetView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_22CC230C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  sub_22CC082A8(0, &qword_255C3CAB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB580]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 254)
    {
      *(_BYTE *)(a1 + *(int *)(a4 + 24) + 32) = -(char)a2;
      return;
    }
    v10 = type metadata accessor for SleepWidgetViewModel();
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  v11(v12, a2, a2, v10);
}

void sub_22CC2317C()
{
  unint64_t v0;
  unint64_t v1;

  sub_22CC19630(319);
  if (v0 <= 0x3F)
  {
    type metadata accessor for SleepWidgetViewModel();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

unint64_t sub_22CC23210()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_254066620;
  if (!qword_254066620)
  {
    sub_22CC211A8(255);
    v2 = v1;
    v3[0] = sub_22CC23290();
    v3[1] = sub_22CC07B74(&qword_2540666F8, (uint64_t (*)(uint64_t))sub_22CC211CC, MEMORY[0x24BDF1028]);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_254066620);
  }
  return result;
}

unint64_t sub_22CC23290()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_2540665F0;
  if (!qword_2540665F0)
  {
    sub_22CC21168(255);
    v2 = v1;
    v3[0] = sub_22CC23310();
    v3[1] = sub_22CC07B74((unint64_t *)&qword_254065698, (uint64_t (*)(uint64_t))sub_22CC2118C, MEMORY[0x24BDF1028]);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_2540665F0);
  }
  return result;
}

unint64_t sub_22CC23310()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_254066728;
  if (!qword_254066728)
  {
    sub_22CC2106C();
    v2 = v1;
    v3 = sub_22CC23370();
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDF3F50], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_254066728);
  }
  return result;
}

unint64_t sub_22CC23370()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_2540666D8;
  if (!qword_2540666D8)
  {
    sub_22CC2358C(255, &qword_2540666E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
    v2 = v1;
    v3[0] = sub_22CC233E8();
    v3[1] = sub_22CC23480();
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDEF3E0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_2540666D8);
  }
  return result;
}

unint64_t sub_22CC233E8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_254066698;
  if (!qword_254066698)
  {
    sub_22CC210D0(255);
    v2 = v1;
    v3[0] = sub_22CC07B74(&qword_254066528, (uint64_t (*)(uint64_t))type metadata accessor for SleepWidgetCircularView, (uint64_t)&unk_22CC68770);
    v3[1] = sub_22CC07B74(&qword_254066540, (uint64_t (*)(uint64_t))type metadata accessor for SleepWidgetRectangularView, (uint64_t)&unk_22CC67074);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDEF3E0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_254066698);
  }
  return result;
}

unint64_t sub_22CC23480()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_2540666A8;
  if (!qword_2540666A8)
  {
    sub_22CC2352C(255, &qword_2540666B0, (uint64_t (*)(uint64_t, uint64_t, _QWORD))MEMORY[0x24BDEF3B8]);
    v2 = v1;
    v3[0] = sub_22CC07B74(&qword_254066588, (uint64_t (*)(uint64_t))type metadata accessor for SleepWidgetSmallView, (uint64_t)&unk_22CC66FC8);
    v3[1] = MEMORY[0x24BDF5138];
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDEF3E0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_2540666A8);
  }
  return result;
}

void sub_22CC23510(uint64_t a1)
{
  sub_22CC082A8(a1, &qword_255C3CF20, (uint64_t (*)(uint64_t))MEMORY[0x24BDF17A8], MEMORY[0x24BDEB560]);
}

void sub_22CC2352C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = type metadata accessor for SleepWidgetSmallView();
    v7 = a3(a1, v6, MEMORY[0x24BDF5158]);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_22CC2358C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_22CC210D0(255);
    v7 = v6;
    sub_22CC2352C(255, &qword_2540666B0, (uint64_t (*)(uint64_t, uint64_t, _QWORD))MEMORY[0x24BDEF3B8]);
    v9 = a3(a1, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_22CC23604(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_22CC2352C(0, &qword_2540666B0, (uint64_t (*)(uint64_t, uint64_t, _QWORD))MEMORY[0x24BDEF3B8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22CC23658(uint64_t a1)
{
  uint64_t v2;

  sub_22CC2352C(0, &qword_2540666B0, (uint64_t (*)(uint64_t, uint64_t, _QWORD))MEMORY[0x24BDEF3B8]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_22CC236A8(uint64_t a1)
{
  sub_22CC082A8(a1, &qword_254065608, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDEB560]);
}

__n128 SleepSnidgetView.init(sleepDaySummaries:)@<Q0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result;
  unint64_t v4;
  __n128 v5;

  SleepDaySummaryResults.init(summaries:)(a1, &v4);
  result = v5;
  *(_QWORD *)a2 = v4;
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t SleepSnidgetView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  unsigned __int8 v27;
  uint64_t v28;
  int *v29;
  uint64_t *v30;
  uint64_t (*v31)(uint64_t, uint64_t);
  char *v32;
  uint64_t *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v38;
  uint64_t (*v39)(uint64_t);
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD v44[3];
  void *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  void *v61;
  uint64_t v62;

  v53 = sub_22CC6504C();
  v51 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v50 = (char *)v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = type metadata accessor for SleepWidgetChartView();
  MEMORY[0x24BDAC7A8](v58);
  v5 = (_QWORD *)((char *)v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22CC24428(0, &qword_255C3CF28, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF380]);
  v55 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v57 = (uint64_t)v44 - v7;
  v47 = sub_22CC651B4();
  v8 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v49 = (char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = sub_22CC651C0();
  v54 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v52 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC082A8(0, &qword_254066490, (uint64_t (*)(uint64_t))MEMORY[0x24BEA9A98], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v44 - v12;
  v14 = sub_22CC6513C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v46 = (char *)v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v48 = (char *)v44 - v18;
  v19 = *v1;
  v20 = (void *)v1[1];
  v21 = (void *)v1[2];
  v45 = v21;
  if (!v20)
  {
    v22 = v21;
    swift_bridgeObjectRetain();
    v24 = 0;
LABEL_8:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);

    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v44[1] = v8;
  v44[2] = a1;
  v22 = v21;
  v23 = v20;
  swift_bridgeObjectRetain();
  v24 = v23;
  if ((objc_msgSend(v24, sel_hasSleepStageData) & 1) == 0)
  {

    goto LABEL_8;
  }
  v25 = objc_msgSend(v24, sel_summaryFilteredToLastPeriod);
  if (v25
    && (v26 = v25, v27 = objc_msgSend(v25, sel_hasSleepStageData), v26, (v27 & 1) == 0))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_22CC65CA0();

    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
    swift_bridgeObjectRelease();
  }
LABEL_10:
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_22CC23E10((uint64_t)v13);
    v59 = v19;
    v60 = v20;
    v61 = v45;
    sub_22CC2BCBC(&v62);
    v28 = v62;
    v29 = (int *)v58;
    v30 = (_QWORD *)((char *)v5 + *(int *)(v58 + 28));
    *v30 = swift_getKeyPath();
    v31 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_22CC082A8(0, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
    swift_storeEnumTagMultiPayload();
    v32 = (char *)v5 + v29[8];
    *(_QWORD *)v32 = swift_getKeyPath();
    v32[8] = 0;
    v33 = (_QWORD *)((char *)v5 + v29[9]);
    *v33 = swift_getKeyPath();
    sub_22CC082A8(0, &qword_255C3CF20, (uint64_t (*)(uint64_t))MEMORY[0x24BDF17A8], v31);
    swift_storeEnumTagMultiPayload();
    v34 = (char *)v5 + v29[10];
    *(_QWORD *)v34 = swift_getKeyPath();
    v34[8] = 0;
    *v5 = v28;
    v5[1] = 13;
    v35 = v50;
    sub_22CC65040();
    v36 = sub_22CC647C4();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v35, v53);
    v5[2] = v36;
    sub_22CC240B0((uint64_t)v5, v57);
    swift_storeEnumTagMultiPayload();
    sub_22CC07B74(&qword_254065AB0, (uint64_t (*)(uint64_t))MEMORY[0x24BEA9BB0], MEMORY[0x24BEA9B40]);
    sub_22CC07B74(&qword_254065E10, (uint64_t (*)(uint64_t))type metadata accessor for SleepWidgetChartView, (uint64_t)&unk_22CC69288);
    sub_22CC65520();
    return sub_22CC240F4((uint64_t)v5);
  }
  else
  {
    v38 = v48;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v48, v13, v14);
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v46, v38, v14);
    v39 = (uint64_t (*)(uint64_t))MEMORY[0x24BEA9B98];
    sub_22CC082A8(0, &qword_2540667C8, (uint64_t (*)(uint64_t))MEMORY[0x24BEA9B98], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_22CC67250;
    sub_22CC651A8();
    sub_22CC6519C();
    sub_22CC65178();
    sub_22CC65160();
    v59 = v40;
    sub_22CC07B74(&qword_2540664A0, v39, MEMORY[0x24BEA9BA8]);
    sub_22CC082A8(0, &qword_2540667A0, v39, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    sub_22CC24130();
    sub_22CC65D48();
    sub_22CC651E4();
    swift_allocObject();
    sub_22CC651D8();
    v41 = v52;
    sub_22CC65148();
    v42 = v54;
    v43 = v56;
    (*(void (**)(uint64_t, char *, uint64_t))(v54 + 16))(v57, v41, v56);
    swift_storeEnumTagMultiPayload();
    sub_22CC07B74(&qword_254065AB0, (uint64_t (*)(uint64_t))MEMORY[0x24BEA9BB0], MEMORY[0x24BEA9B40]);
    sub_22CC07B74(&qword_254065E10, (uint64_t (*)(uint64_t))type metadata accessor for SleepWidgetChartView, (uint64_t)&unk_22CC69288);
    sub_22CC65520();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v43);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v38, v14);
  }
}

uint64_t sub_22CC23E10(uint64_t a1)
{
  uint64_t v2;

  sub_22CC082A8(0, &qword_254066490, (uint64_t (*)(uint64_t))MEMORY[0x24BEA9A98], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22CC23E68@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_22CC24490();
  result = sub_22CC65478();
  *a1 = v3;
  return result;
}

uint64_t sub_22CC23EB4()
{
  sub_22CC24490();
  return sub_22CC65484();
}

uint64_t sub_22CC23F04@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_22CC24490();
  result = sub_22CC65478();
  *a1 = v3;
  return result;
}

uint64_t sub_22CC23F50()
{
  sub_22CC24490();
  return sub_22CC65484();
}

uint64_t sub_22CC23F98()
{
  unsigned __int8 v1;

  sub_22CC6540C();
  sub_22CC07B74(&qword_255C3CF40, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAAC0], MEMORY[0x24BDFAAB8]);
  sub_22CC65478();
  return v1;
}

uint64_t sub_22CC23FF8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  sub_22CC6540C();
  sub_22CC07B74(&qword_255C3CF40, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAAC0], MEMORY[0x24BDFAAB8]);
  result = sub_22CC65478();
  *a1 = v3;
  return result;
}

uint64_t sub_22CC2406C()
{
  return sub_22CC653DC();
}

uint64_t sub_22CC2408C()
{
  return sub_22CC653DC();
}

uint64_t sub_22CC240B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SleepWidgetChartView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22CC240F4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SleepWidgetChartView();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_22CC24130()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2540667A8;
  if (!qword_2540667A8)
  {
    sub_22CC082A8(255, &qword_2540667A0, (uint64_t (*)(uint64_t))MEMORY[0x24BEA9B98], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2540667A8);
  }
  return result;
}

uint64_t sub_22CC24190()
{
  return swift_getOpaqueTypeConformance2();
}

void destroy for SleepDaySummaryResults(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

_QWORD *_s13SleepWidgetUI22SleepDaySummaryResultsVwCP_0(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain();
  v5 = v3;
  v6 = v4;
  return a1;
}

_QWORD *assignWithCopy for SleepDaySummaryResults(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[1];
  v5 = (void *)a2[1];
  a1[1] = v5;
  v6 = v5;

  v7 = (void *)a1[2];
  v8 = (void *)a2[2];
  a1[2] = v8;
  v9 = v8;

  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for SleepDaySummaryResults(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

uint64_t getEnumTagSinglePayload for SleepDaySummaryResults(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SleepDaySummaryResults(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SleepSnidgetView()
{
  return &type metadata for SleepSnidgetView;
}

unint64_t sub_22CC24380()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255C3CF30;
  if (!qword_255C3CF30)
  {
    sub_22CC24428(255, &qword_255C3CF38, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
    v2 = v1;
    v3[0] = sub_22CC07B74(&qword_254065AB0, (uint64_t (*)(uint64_t))MEMORY[0x24BEA9BB0], MEMORY[0x24BEA9B40]);
    v3[1] = sub_22CC07B74(&qword_254065E10, (uint64_t (*)(uint64_t))type metadata accessor for SleepWidgetChartView, (uint64_t)&unk_22CC69288);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDEF3E0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_255C3CF30);
  }
  return result;
}

void sub_22CC24428(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v6 = sub_22CC651C0();
    v7 = type metadata accessor for SleepWidgetChartView();
    v8 = a3(a1, v6, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

unint64_t sub_22CC24490()
{
  unint64_t result;

  result = qword_255C3CF48;
  if (!qword_255C3CF48)
  {
    result = MEMORY[0x22E3063F8](&unk_22CC69078, &type metadata for IsAppleWatchKey);
    atomic_store(result, (unint64_t *)&qword_255C3CF48);
  }
  return result;
}

uint64_t sub_22CC244D4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_22CC244DC(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  swift_release();
  return sub_22CC11750(*(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_22CC2452C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a2;
  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_QWORD *)(v2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(v2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(v2 + 56);
  LOBYTE(v2) = *(_BYTE *)(v2 + 64);
  swift_retain();
  sub_22CC11614(v6, v2);
  *(_QWORD *)(a1 + 56) = v6;
  *(_BYTE *)(a1 + 64) = v2;
  return a1;
}

uint64_t sub_22CC24598(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = a2;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, a2);
  v4 = v2[6];
  *(_QWORD *)(a1 + 40) = v2[5];
  *(_QWORD *)(a1 + 48) = v4;
  swift_retain();
  swift_release();
  v5 = v2[7];
  LOBYTE(v2) = *((_BYTE *)v2 + 64);
  sub_22CC11614(v5, (char)v2);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = *(_BYTE *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 64) = (_BYTE)v2;
  sub_22CC11750(v6, v7);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_22CC24794(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  char v5;
  uint64_t v6;
  char v7;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  v5 = *(_BYTE *)(a2 + 64);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = *(_BYTE *)(a1 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = v5;
  sub_22CC11750(v6, v7);
  return a1;
}

uint64_t sub_22CC247F8(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 65))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_22CC24840(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 65) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for SleepWidgetResultsView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SleepWidgetResultsView);
}

uint64_t sub_22CC248A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22CC248D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = sub_22CC65514();
  MEMORY[0x24BDAC7A8](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))((char *)&v7 - v5, a1, a2);
  swift_storeEnumTagMultiPayload();
  return sub_22CC65520();
}

uint64_t sub_22CC24998(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t TupleTypeMetadata;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  __int128 *v12;
  _OWORD *v13;
  unint64_t v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v4 = a1;
  v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    TupleTypeMetadata = *v5;
    MEMORY[0x24BDAC7A8](a1);
    v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
LABEL_12:
    v22 = 32;
    v23 = a2;
    do
    {
      if (a2 == 1)
        v24 = 0;
      else
        v24 = *(_DWORD *)(TupleTypeMetadata + v22);
      v26 = *v5++;
      v25 = v26;
      v27 = *v4++;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(&v8[v24], v27);
      v22 += 16;
      --v23;
    }
    while (v23);
    return sub_22CC65934();
  }
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v11 = 0;
    if (a2 < 4)
      goto LABEL_9;
    if ((unint64_t)(v10 - (char *)v5) < 0x20)
      goto LABEL_9;
    v11 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    v12 = (__int128 *)(v5 + 2);
    v13 = v10 + 16;
    v14 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v15 = *v12;
      *(v13 - 1) = *(v12 - 1);
      *v13 = v15;
      v12 += 2;
      v13 += 2;
      v14 -= 4;
    }
    while (v14);
    if (v11 != a2)
    {
LABEL_9:
      v16 = a2 - v11;
      v17 = v11;
      v18 = &v10[8 * v11];
      v19 = &v5[v17];
      do
      {
        v20 = *v19++;
        *(_QWORD *)v18 = v20;
        v18 += 8;
        --v16;
      }
      while (v16);
    }
  }
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  MEMORY[0x24BDAC7A8](TupleTypeMetadata);
  v8 = (char *)&v29 - v21;
  if (a2)
    goto LABEL_12;
  return sub_22CC65934();
}

uint64_t sub_22CC24B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v5 = sub_22CC65514();
  MEMORY[0x24BDAC7A8](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))((char *)&v8 - v6, a1, a3);
  swift_storeEnumTagMultiPayload();
  return sub_22CC65520();
}

uint64_t sub_22CC24C10()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_BYTE *)(v0 + 64);
  sub_22CC11614(v1, v2);
  v3 = sub_22CC20A38(v1, v2);
  sub_22CC11750(v1, v2);
  return v3 & 1;
}

uint64_t sub_22CC24C64@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  void (*v32)(char *, uint64_t);
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v38 = a2;
  sub_22CC18FD8();
  v5 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC27070(255);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v43 = v9;
  v44 = v7;
  v45 = MEMORY[0x24BDF4638];
  type metadata accessor for SleepWidgetResultsView.SummaryTextView(255, v7, v8, v10);
  v46 = sub_22CC6534C();
  type metadata accessor for SleepWidgetResultsView.SummaryValueStringView(255, v7, v8, v11);
  type metadata accessor for SleepWidgetResultsView.NoDataStringView(255, v7, v8, v12);
  sub_22CC6552C();
  sub_22CC65868();
  v47 = sub_22CC6534C();
  swift_getTupleTypeMetadata();
  v13 = sub_22CC65928();
  MEMORY[0x22E3063F8](MEMORY[0x24BDF5428], v13);
  v14 = sub_22CC658BC();
  v36 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v33 - v15;
  v17 = MEMORY[0x22E3063F8](MEMORY[0x24BDF4700], v14);
  v18 = sub_22CC07B74(&qword_2540657A0, (uint64_t (*)(uint64_t))sub_22CC18FD8, MEMORY[0x24BEE30C8]);
  v43 = v14;
  v44 = v5;
  v37 = v5;
  v35 = v17;
  v45 = v17;
  v46 = v18;
  v33[1] = v18;
  v19 = MEMORY[0x22E3063BC](0, &v43, MEMORY[0x24BDF2800], 0);
  v34 = *(_QWORD *)(v19 - 8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)v33 - v23;
  sub_22CC654CC();
  v40 = v7;
  v41 = v8;
  v42 = v2;
  sub_22CC658B0();
  v25 = *MEMORY[0x24BDECF38];
  v26 = sub_22CC65340();
  v27 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
  v28 = (uint64_t)v39;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v39, v25, v26);
  sub_22CC07B74(&qword_254065628, v27, MEMORY[0x24BDECF78]);
  result = sub_22CC65B14();
  if ((result & 1) != 0)
  {
    sub_22CC657B4();
    sub_22CC0DE54(v28, (uint64_t (*)(_QWORD))sub_22CC18FD8);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v14);
    v30 = v34;
    v31 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
    v31(v24, v22, v19);
    v32 = *(void (**)(char *, uint64_t))(v30 + 8);
    v32(v22, v19);
    v31(v38, v24, v19);
    return ((uint64_t (*)(char *, uint64_t))v32)(v24, v19);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22CC24FD8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(char *, char *, uint64_t);
  char *v92;
  void (*v93)(char *, uint64_t);
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  void (*v99)(char *, uint64_t);
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(char *, char *, uint64_t);
  void (*v106)(char *, uint64_t);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD v131[5];
  uint64_t v132;
  char v133;
  _QWORD v134[2];
  uint64_t v135;
  _QWORD v136[2];
  _QWORD v137[2];
  __int128 v138;
  uint64_t *v139;
  __int128 *v140;
  char *v141;
  __int128 v142;
  __int128 v143;
  char v144;
  __int128 v145;
  uint64_t *v146;
  __int128 *v147;
  char v148;
  __int128 v149;
  __int128 v150;
  char v151;
  __int128 v152;
  uint64_t v153;
  __int128 *v154;
  char v155;
  __int128 v156;
  __int128 v157;
  char v158;

  v118 = a5;
  v8 = type metadata accessor for SleepWidgetResultsView.SummaryValueStringView(255, a2, a3, a4);
  v124 = a3;
  v107 = type metadata accessor for SleepWidgetResultsView.NoDataStringView(255, a2, a3, v9);
  v108 = v8;
  v109 = sub_22CC6552C();
  v10 = sub_22CC65868();
  v112 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v111 = (char *)&v102 - v11;
  v114 = v12;
  v117 = sub_22CC6534C();
  v113 = *(_QWORD *)(v117 - 8);
  v13 = MEMORY[0x24BDAC7A8](v117);
  v116 = (char *)&v102 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v110 = (char *)&v102 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v115 = (char *)&v102 - v18;
  v123 = a2;
  v19 = *(_QWORD *)(a2 - 8);
  v20 = MEMORY[0x24BDAC7A8](v17);
  v122 = (char *)&v102 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v121 = (char *)&v102 - v22;
  v23 = type metadata accessor for HeaderView(0);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (uint64_t *)((char *)&v102 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22CC27094(0);
  v27 = v26;
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v102 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC27070(0);
  v120 = v30;
  v31 = MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)&v102 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v125 = (uint64_t)&v102 - v34;
  if (qword_254065700 != -1)
    swift_once();
  v101 = 0xE000000000000000;
  v35 = sub_22CC64F74();
  v37 = v36;
  *v25 = swift_getKeyPath();
  sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v38 = (uint64_t *)((char *)v25 + *(int *)(v23 + 20));
  *v38 = v35;
  v38[1] = v37;
  LOBYTE(v37) = sub_22CC655E0();
  sub_22CC652C8();
  v40 = v39;
  v42 = v41;
  v44 = v43;
  v46 = v45;
  sub_22CC0DE10((uint64_t)v25, (uint64_t)v29, type metadata accessor for HeaderView);
  v47 = &v29[*(int *)(v27 + 36)];
  *v47 = v37;
  *((_QWORD *)v47 + 1) = v40;
  *((_QWORD *)v47 + 2) = v42;
  *((_QWORD *)v47 + 3) = v44;
  *((_QWORD *)v47 + 4) = v46;
  v47[40] = 0;
  sub_22CC0DE54((uint64_t)v25, type metadata accessor for HeaderView);
  v48 = sub_22CC655D4();
  sub_22CC652C8();
  v50 = v49;
  v52 = v51;
  v54 = v53;
  v56 = v55;
  sub_22CC0DE10((uint64_t)v29, (uint64_t)v33, (uint64_t (*)(_QWORD))sub_22CC27094);
  v57 = &v33[*(int *)(v120 + 36)];
  v119 = v33;
  *v57 = v48;
  *((_QWORD *)v57 + 1) = v50;
  *((_QWORD *)v57 + 2) = v52;
  *((_QWORD *)v57 + 3) = v54;
  *((_QWORD *)v57 + 4) = v56;
  v57[40] = 0;
  sub_22CC0DE54((uint64_t)v29, (uint64_t (*)(_QWORD))sub_22CC27094);
  v58 = sub_22CC0DDCC((uint64_t)v33, v125, (uint64_t (*)(_QWORD))sub_22CC27070);
  v59 = v122;
  (*(void (**)(uint64_t))(a1 + 40))(v58);
  v105 = *(void (**)(_QWORD, _QWORD, _QWORD))(v19 + 16);
  v60 = v123;
  v105(v121, v59, v123);
  v106 = *(void (**)(_QWORD, _QWORD))(v19 + 8);
  v61 = v59;
  v62 = v60;
  v106(v61, v60);
  v63 = *(_QWORD *)(a1 + 24);
  v64 = *(_QWORD *)(a1 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)a1, v63);
  v65 = SleepWidgetModelProviding.summaryDurationTitle.getter(v63, v64);
  v67 = v66;
  v68 = *(_QWORD *)(a1 + 24);
  v69 = *(_QWORD *)(a1 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)a1, v68);
  v70 = (*(uint64_t (**)(uint64_t, uint64_t))(v69 + 24))(v68, v69);
  *(_QWORD *)&v152 = v65;
  *((_QWORD *)&v152 + 1) = v67;
  v153 = v70;
  v154 = v71;
  sub_22CC655E0();
  v72 = v62;
  v102 = a1;
  v73 = v62;
  v74 = v124;
  v76 = type metadata accessor for SleepWidgetResultsView.SummaryTextView(0, v72, v124, v75);
  v77 = MEMORY[0x22E3063F8](&unk_22CC67578, v76);
  sub_22CC657D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v138 = v145;
  v139 = v146;
  v140 = v147;
  LOBYTE(v141) = v148;
  v142 = v149;
  v143 = v150;
  v144 = v151;
  v78 = sub_22CC6534C();
  v137[0] = v77;
  v137[1] = MEMORY[0x24BDECC60];
  v79 = MEMORY[0x24BDECC60];
  v80 = MEMORY[0x22E3063F8](MEMORY[0x24BDED308], v78, v137);
  v103 = v78;
  v104 = v80;
  (*(void (**)(__int128 *, __int128 *, uint64_t))(*(_QWORD *)(v78 - 8) + 16))(&v152, &v138, v78);
  swift_bridgeObjectRelease();
  v81 = swift_bridgeObjectRelease();
  MEMORY[0x24BDAC7A8](v81);
  *(&v102 - 4) = v73;
  *(&v102 - 3) = v74;
  v101 = v102;
  v82 = MEMORY[0x22E3063F8](&unk_22CC67528, v108);
  v83 = MEMORY[0x22E3063F8](&unk_22CC674D8, v107);
  v136[0] = v82;
  v136[1] = v83;
  v84 = MEMORY[0x22E3063F8](MEMORY[0x24BDEF3E0], v109, v136);
  v85 = v111;
  sub_22CC6585C();
  sub_22CC655E0();
  sub_22CC24C10();
  v135 = v84;
  v86 = v114;
  v87 = MEMORY[0x22E3063F8](MEMORY[0x24BDF3F50], v114, &v135);
  v88 = v110;
  sub_22CC657D8();
  (*(void (**)(char *, uint64_t))(v112 + 8))(v85, v86);
  v134[0] = v87;
  v134[1] = v79;
  v89 = v117;
  v114 = MEMORY[0x22E3063F8](MEMORY[0x24BDED308], v117, v134);
  v90 = v113;
  v91 = *(void (**)(_QWORD, _QWORD, _QWORD))(v113 + 16);
  v92 = v115;
  v91(v115, v88, v89);
  v93 = *(void (**)(_QWORD, _QWORD))(v90 + 8);
  v93(v88, v89);
  v94 = (uint64_t)v119;
  sub_22CC0DE10(v125, (uint64_t)v119, (uint64_t (*)(_QWORD))sub_22CC27070);
  *(_QWORD *)&v138 = v94;
  v96 = v121;
  v95 = v122;
  v97 = v123;
  v105(v122, v121, v123);
  v132 = 0x4024000000000000;
  v133 = 0;
  *((_QWORD *)&v138 + 1) = v95;
  v139 = &v132;
  v145 = v152;
  v146 = (uint64_t *)v153;
  v147 = v154;
  v148 = v155;
  v149 = v156;
  v150 = v157;
  v151 = v158;
  v140 = &v145;
  v98 = v116;
  v91(v116, v92, v89);
  v141 = v98;
  v131[0] = v120;
  v131[1] = v97;
  v131[2] = MEMORY[0x24BDF4638];
  v131[3] = v103;
  v131[4] = v89;
  v126 = sub_22CC158DC(&qword_254065E38, (uint64_t (*)(uint64_t))sub_22CC27070, sub_22CC27180, MEMORY[0x24BDECC60]);
  v127 = v124;
  v128 = MEMORY[0x24BDF4610];
  v129 = v104;
  v130 = v114;
  sub_22CC24998((uint64_t *)&v138, 5uLL, (uint64_t)v131);
  v93(v92, v89);
  v99 = v106;
  v106(v96, v97);
  sub_22CC0DE54(v125, (uint64_t (*)(_QWORD))sub_22CC27070);
  v93(v98, v89);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v99(v95, v97);
  return sub_22CC0DE54((uint64_t)v119, (uint64_t (*)(_QWORD))sub_22CC27070);
}

uint64_t sub_22CC25864@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t *, uint64_t);
  void (*v36)(uint64_t *, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void (*v45)(char *, uint64_t *, uint64_t);
  void (*v46)(uint64_t *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[2];

  v61 = a5;
  v8 = type metadata accessor for SleepWidgetResultsView.NoDataStringView(0, a2, a3, a4);
  v54 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)((char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v9);
  v55 = (char *)&v52 - v12;
  v56 = a2;
  v57 = a3;
  v14 = type metadata accessor for SleepWidgetResultsView.SummaryValueStringView(0, a2, a3, v13);
  v53 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (uint64_t *)((char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v52 - v18;
  v20 = sub_22CC6552C();
  v59 = *(_QWORD *)(v20 - 8);
  v60 = v20;
  MEMORY[0x24BDAC7A8](v20);
  v58 = (char *)&v52 - v21;
  v22 = a1[3];
  v23 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  v24 = SleepWidgetModelProviding.hasDataLastNight.getter(v22, v23);
  v26 = a1[3];
  v25 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  if ((v24 & 1) != 0)
  {
    v27 = SleepWidgetModelProviding.summaryDurationText.getter(v26, v25);
    v29 = v28;
    v30 = a1[3];
    v31 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v30);
    v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 24))(v30, v31);
    sub_22CC25C34(v27, v29, v32, v33, v56, v57, v17);
    MEMORY[0x22E3063F8](&unk_22CC67528, v14);
    v34 = v53;
    v35 = *(void (**)(char *, uint64_t *, uint64_t))(v53 + 16);
    v35(v19, v17, v14);
    v36 = *(void (**)(uint64_t *, uint64_t))(v34 + 8);
    v36(v17, v14);
    v35((char *)v17, (uint64_t *)v19, v14);
    MEMORY[0x22E3063F8](&unk_22CC674D8, v8);
    v37 = v58;
    sub_22CC248D4((uint64_t)v17, v14);
    v36(v17, v14);
    v36((uint64_t *)v19, v14);
  }
  else
  {
    v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 16))(v26, v25);
    v39 = a1[3];
    v40 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v39);
    v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 24))(v39, v40);
    sub_22CC25CE8(v38, v41, v42, v56, v57, v11);
    MEMORY[0x22E3063F8](&unk_22CC674D8, v8);
    v43 = v54;
    v44 = v55;
    v45 = *(void (**)(char *, uint64_t *, uint64_t))(v54 + 16);
    v45(v55, v11, v8);
    v46 = *(void (**)(uint64_t *, uint64_t))(v43 + 8);
    v46(v11, v8);
    v45((char *)v11, (uint64_t *)v44, v8);
    MEMORY[0x22E3063F8](&unk_22CC67528, v14);
    v37 = v58;
    sub_22CC24B4C((uint64_t)v11, v14, v8);
    v46(v11, v8);
    v46((uint64_t *)v44, v8);
  }
  v47 = MEMORY[0x22E3063F8](&unk_22CC67528, v14);
  v48 = MEMORY[0x22E3063F8](&unk_22CC674D8, v8);
  v62[0] = v47;
  v62[1] = v48;
  v49 = v60;
  MEMORY[0x22E3063F8](MEMORY[0x24BDEF3E0], v60, v62);
  v50 = v59;
  (*(void (**)(uint64_t, char *, uint64_t))(v59 + 16))(v61, v37, v49);
  return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v37, v49);
}

uint64_t sub_22CC25C34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v14;
  uint64_t result;
  _QWORD *v16;
  _QWORD *v17;

  *a7 = swift_getKeyPath();
  sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  result = type metadata accessor for SleepWidgetResultsView.SummaryValueStringView(0, a5, a6, v14);
  v16 = (uint64_t *)((char *)a7 + *(int *)(result + 36));
  *v16 = a1;
  v16[1] = a2;
  v17 = (uint64_t *)((char *)a7 + *(int *)(result + 40));
  *v17 = a3;
  v17[1] = a4;
  return result;
}

uint64_t sub_22CC25CE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v12;
  uint64_t result;
  _QWORD *v14;

  *a6 = swift_getKeyPath();
  sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  result = type metadata accessor for SleepWidgetResultsView.NoDataStringView(0, a4, a5, v12);
  *(uint64_t *)((char *)a6 + *(int *)(result + 36)) = a1;
  v14 = (uint64_t *)((char *)a6 + *(int *)(result + 40));
  *v14 = a2;
  v14[1] = a3;
  return result;
}

uint64_t sub_22CC25D8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;

  sub_22CC08C70();
  swift_bridgeObjectRetain();
  v0 = sub_22CC65718();
  v2 = v1;
  v4 = v3 & 1;
  sub_22CC65844();
  v5 = sub_22CC656F4();
  v7 = v6;
  v9 = v8;
  swift_release();
  sub_22CC1BCCC(v0, v2, v4);
  swift_bridgeObjectRelease();
  sub_22CC656B8();
  v10 = sub_22CC65700();
  v12 = v11;
  LOBYTE(v2) = v13;
  swift_release();
  LOBYTE(v0) = v2 & 1;
  sub_22CC1BCCC(v5, v7, v9 & 1);
  swift_bridgeObjectRelease();
  sub_22CC65670();
  v14 = sub_22CC656E8();
  v16 = v15;
  v18 = v17 & 1;
  sub_22CC1BCCC(v10, v12, v0);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_22CC65B68();
  sub_22CC283FC(0);
  sub_22CC284F8();
  sub_22CC657CC();
  swift_bridgeObjectRelease();
  sub_22CC1BCCC(v14, v16, v18);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22CC25FC8()
{
  return sub_22CC25D8C();
}

uint64_t sub_22CC25FD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t KeyPath;
  _QWORD *v13;
  uint64_t v14;
  _QWORD v16[4];
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = sub_22CC64F5C();
  MEMORY[0x24BDAC7A8](v3);
  sub_22CC2612C((uint64_t)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_22CC6570C();
  v7 = v6;
  v9 = v8;
  v11 = v10 & 1;
  KeyPath = swift_getKeyPath();
  v16[2] = v5;
  v16[3] = v7;
  v17 = v11;
  v18 = v9;
  v19 = KeyPath;
  v20 = 0x3FE999999999999ALL;
  v13 = (_QWORD *)(v1 + *(int *)(a1 + 40));
  v14 = v13[1];
  v16[0] = *v13;
  v16[1] = v14;
  swift_bridgeObjectRetain();
  sub_22CC65B68();
  sub_22CC28418();
  sub_22CC2851C();
  sub_22CC657CC();
  swift_bridgeObjectRelease();
  sub_22CC1BCCC(v5, v7, v11);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22CC2612C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  _QWORD v62[2];
  uint64_t v63;
  char *v64;
  char *v65;
  void (*v66)(char *, uint64_t);
  unint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t KeyPath;
  uint64_t v85;

  v82 = a1;
  sub_22CC082A8(0, &qword_254065E90, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v77 = (char *)v62 - v2;
  v78 = sub_22CC656DC();
  v76 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78);
  v75 = (char *)v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_22CC65A18();
  v68 = *(_QWORD *)(v63 - 8);
  v4 = MEMORY[0x24BDAC7A8](v63);
  v65 = (char *)v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v64 = (char *)v62 - v6;
  sub_22CC285F8(0, &qword_254066480, (void (*)(void))sub_22CC285B4);
  v81 = v7;
  v70 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v79 = (char *)v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v62 - v10;
  sub_22CC285F8(0, &qword_254066488, (void (*)(void))sub_22CC28650);
  v13 = v12;
  v73 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v62 - v14;
  v16 = sub_22CC64FB0();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v69 = (char *)v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v74 = (char *)v62 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)v62 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  v80 = (char *)v62 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)v62 - v27;
  swift_bridgeObjectRetain();
  sub_22CC64FA4();
  sub_22CC64F68();
  sub_22CC64FA4();
  KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  v62[1] = sub_22CC28650();
  sub_22CC64F80();
  swift_release();
  v29 = *(void (**)(char *, uint64_t))(v17 + 8);
  v71 = v28;
  v29(v28, v16);
  sub_22CC65628();
  sub_22CC65670();
  v30 = sub_22CC65694();
  swift_release();
  v85 = v30;
  sub_22CC64F8C();
  swift_release();
  v31 = *(void (**)(char *, uint64_t))(v73 + 8);
  v72 = v15;
  v32 = v15;
  v33 = v63;
  v73 = v13;
  v66 = v31;
  v31(v32, v13);
  v83 = swift_getKeyPath();
  swift_getKeyPath();
  v67 = sub_22CC285B4();
  sub_22CC64F80();
  swift_release();
  v34 = v16;
  v35 = v16;
  v36 = (uint64_t)v64;
  v29(v24, v35);
  sub_22CC207D8(v36);
  v37 = v65;
  sub_22CC65A00();
  v38 = sub_22CC659F4();
  v39 = *(void (**)(char *, uint64_t))(v68 + 8);
  v39(v37, v33);
  if ((v38 & 1) != 0)
  {
    v40 = sub_22CC65844();
  }
  else
  {
    v41 = objc_msgSend((id)objc_opt_self(), sel_systemGrayColor);
    v40 = MEMORY[0x22E3058E8](v41);
  }
  v42 = v40;
  v39((char *)v36, v33);
  v85 = v42;
  v43 = v81;
  sub_22CC64F8C();
  swift_release();
  v70 = *(_QWORD *)(v70 + 8);
  ((void (*)(char *, uint64_t))v70)(v11, v43);
  sub_22CC64F50();
  v44 = v69;
  sub_22CC64FA4();
  v45 = swift_getKeyPath();
  v62[-2] = MEMORY[0x24BDAC7A8](v45);
  swift_getKeyPath();
  v46 = v72;
  sub_22CC64F80();
  swift_release();
  v29(v44, v34);
  v48 = v75;
  v47 = v76;
  v49 = v78;
  (*(void (**)(char *, _QWORD, uint64_t))(v76 + 104))(v75, *MEMORY[0x24BDF18A8], v78);
  v50 = *MEMORY[0x24BDF1668];
  v51 = sub_22CC6564C();
  v52 = *(_QWORD *)(v51 - 8);
  v53 = (uint64_t)v77;
  (*(void (**)(char *, uint64_t, uint64_t))(v52 + 104))(v77, v50, v51);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v52 + 56))(v53, 0, 1, v51);
  sub_22CC65688();
  sub_22CC17438(v53, &qword_254065E90, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v49);
  v54 = sub_22CC65640();
  swift_release();
  v85 = v54;
  v55 = v73;
  v56 = v74;
  sub_22CC64F8C();
  swift_release();
  v66(v46, v55);
  v57 = swift_getKeyPath();
  v62[-2] = MEMORY[0x24BDAC7A8](v57);
  swift_getKeyPath();
  v58 = v79;
  sub_22CC64F80();
  swift_release();
  v29(v56, v34);
  v85 = sub_22CC65838();
  v59 = v71;
  v60 = v81;
  sub_22CC64F8C();
  swift_release();
  ((void (*)(char *, uint64_t))v70)(v58, v60);
  sub_22CC64F44();
  v29(v59, v34);
  return ((uint64_t (*)(char *, uint64_t))v29)(v80, v34);
}

uint64_t sub_22CC26878(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  a4(0);
  return sub_22CC65B14() & 1;
}

uint64_t sub_22CC268D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  unsigned __int8 v8;
  unsigned __int8 v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_22CC2882C();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_22CC655A4();
  v9 = sub_22CC655BC();
  v10 = sub_22CC655B0();
  sub_22CC655B0();
  if (sub_22CC655B0() != v8)
    v10 = sub_22CC655B0();
  sub_22CC655B0();
  if (sub_22CC655B0() != v9)
    v10 = sub_22CC655B0();
  *v7 = v10;
  sub_22CC28CF0();
  sub_22CC269DC(v2, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v12, (uint64_t)&v7[*(int *)(v11 + 44)]);
  return sub_22CC0DDCC((uint64_t)v7, a2, (uint64_t (*)(_QWORD))sub_22CC2882C);
}

uint64_t sub_22CC269DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD v16[2];

  v16[0] = a5;
  v8 = type metadata accessor for SleepWidgetResultsView.NoDataStringView(0, a2, a3, a4);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v16 - v11;
  v16[1] = *(_QWORD *)(a1 + *(int *)(v10 + 36));
  swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
  v13 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v14 + v13, v12, v8);
  sub_22CC08D64(0, &qword_254065E98, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
  sub_22CC28934(0);
  sub_22CC28AB4();
  sub_22CC28B94(&qword_254066640, (uint64_t (*)(uint64_t))sub_22CC28934, sub_22CC28C04, sub_22CC28CD4);
  swift_bridgeObjectRetain();
  return sub_22CC658E0();
}

uint64_t sub_22CC26B74@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void (*v43)(char *, uint64_t);
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  uint64_t KeyPath;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v59[2];
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  __int16 v78;
  uint64_t v79;
  uint64_t v80;

  v66 = a3;
  v67 = a4;
  v60 = a2;
  v68 = a5;
  v62 = sub_22CC65A18();
  v64 = *(_QWORD *)(v62 - 8);
  v6 = MEMORY[0x24BDAC7A8](v62);
  v63 = (char *)v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v61 = (char *)v59 - v8;
  sub_22CC082A8(0, &qword_254065E90, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v59 - v10;
  v12 = sub_22CC656DC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC28934(0);
  MEMORY[0x24BDAC7A8](v16);
  v65 = (char *)v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a1;
  v19 = a1[1];
  v71 = v18;
  v72 = v19;
  sub_22CC08C70();
  swift_bridgeObjectRetain();
  v20 = sub_22CC65718();
  v22 = v21;
  v59[1] = v23;
  v25 = v24 & 1;
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x24BDF1878], v12);
  v26 = *MEMORY[0x24BDF1668];
  v27 = sub_22CC6564C();
  v28 = *(_QWORD *)(v27 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 104))(v11, v26, v27);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v11, 0, 1, v27);
  sub_22CC65688();
  sub_22CC17438((uint64_t)v11, &qword_254065E90, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_22CC65610();
  swift_release();
  v29 = sub_22CC65700();
  v31 = v30;
  LOBYTE(v12) = v32;
  swift_release();
  LOBYTE(v28) = v12 & 1;
  v33 = v60;
  sub_22CC1BCCC(v20, v22, v25);
  swift_bridgeObjectRelease();
  sub_22CC65658();
  v34 = sub_22CC656E8();
  v36 = v35;
  v38 = v37;
  v39 = v31;
  v40 = v62;
  sub_22CC1BCCC(v29, v39, v28);
  v41 = (uint64_t)v61;
  swift_bridgeObjectRelease();
  sub_22CC207D8(v41);
  v42 = v63;
  sub_22CC65A00();
  LOBYTE(v28) = sub_22CC659F4();
  v43 = *(void (**)(char *, uint64_t))(v64 + 8);
  v43(v42, v40);
  if ((v28 & 1) != 0)
  {
    sub_22CC65844();
  }
  else
  {
    v44 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    MEMORY[0x22E3058E8](v44);
  }
  v43((char *)v41, v40);
  v45 = sub_22CC656F4();
  v47 = v46;
  v49 = v48;
  v64 = v48;
  v51 = v50 & 1;
  sub_22CC1BCCC(v34, v36, v38 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v53 = swift_getKeyPath();
  v71 = v45;
  v72 = v47;
  v73 = v51;
  v74 = v49;
  v75 = KeyPath;
  v76 = 1;
  v77 = 0;
  v78 = 257;
  v79 = v53;
  v80 = 0x3FE999999999999ALL;
  v55 = (uint64_t *)(v33
                  + *(int *)(type metadata accessor for SleepWidgetResultsView.NoDataStringView(0, v66, v67, v54) + 40));
  v56 = v55[1];
  v69 = *v55;
  v70 = v56;
  swift_bridgeObjectRetain();
  sub_22CC65B68();
  sub_22CC289B8();
  sub_22CC28C04();
  v57 = (uint64_t)v65;
  sub_22CC657CC();
  swift_bridgeObjectRelease();
  sub_22CC1BCCC(v45, v47, v51);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_22CC0DDCC(v57, v68, (uint64_t (*)(_QWORD))sub_22CC28934);
}

void sub_22CC27070(uint64_t a1)
{
  sub_22CC270B8(a1, &qword_254065658, (uint64_t (*)(uint64_t))sub_22CC27094, MEMORY[0x24BDECC80], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
}

void sub_22CC27094(uint64_t a1)
{
  sub_22CC270B8(a1, &qword_254065630, type metadata accessor for HeaderView, MEMORY[0x24BDECC80], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
}

void sub_22CC270B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v9 = a3(255);
    v10 = a5(a1, v9, a4);
    if (!v11)
      atomic_store(v10, a2);
  }
}

uint64_t type metadata accessor for SleepWidgetResultsView.SummaryTextView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SleepWidgetResultsView.SummaryTextView);
}

uint64_t type metadata accessor for SleepWidgetResultsView.SummaryValueStringView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SleepWidgetResultsView.SummaryValueStringView);
}

uint64_t type metadata accessor for SleepWidgetResultsView.NoDataStringView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SleepWidgetResultsView.NoDataStringView);
}

uint64_t sub_22CC2713C@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_22CC24FD8(*(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a1, a2);
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_22CC27174@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_22CC25864(*(_QWORD **)(v2 + 32), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a1, a2);
}

uint64_t sub_22CC27180()
{
  return sub_22CC158DC(&qword_254065E20, (uint64_t (*)(uint64_t))sub_22CC27094, sub_22CC271A4, MEMORY[0x24BDECC60]);
}

uint64_t sub_22CC271A4()
{
  return sub_22CC07B74(&qword_254065E18, type metadata accessor for HeaderView, (uint64_t)&unk_22CC67A54);
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x22E306374](a1, v6, a5);
}

void sub_22CC271EC()
{
  sub_22CC278BC();
}

uint64_t *sub_22CC271FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_22CC65A18();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = *(int *)(a3 + 40);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 36)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 36));
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_22CC27304(uint64_t a1)
{
  uint64_t v2;

  sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_22CC65A18();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_22CC27398(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_22CC65A18();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = *(int *)(a3 + 40);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 36)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 36));
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_22CC27474(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t (*v6)(uint64_t);
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;

  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0];
    v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_22CC17438((uint64_t)a1, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
    sub_22CC082A8(0, &qword_2540665B0, v6, v7);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_22CC65A18();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 36)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 36));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = *(int *)(a3 + 40);
  v10 = (_QWORD *)((char *)a1 + v9);
  v11 = (_QWORD *)((char *)a2 + v9);
  *v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_22CC275A0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
  v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_22CC65A18();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  v9 = *(int *)(a3 + 40);
  *(_QWORD *)&a1[*(int *)(a3 + 36)] = *(_QWORD *)&a2[*(int *)(a3 + 36)];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  return a1;
}

char *sub_22CC27664(char *a1, char *a2, uint64_t a3)
{
  uint64_t (*v6)(uint64_t);
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0];
    v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_22CC17438((uint64_t)a1, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
    sub_22CC082A8(0, &qword_2540665B0, v6, v7);
    v9 = v8;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_22CC65A18();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  *(_QWORD *)&a1[*(int *)(a3 + 36)] = *(_QWORD *)&a2[*(int *)(a3 + 36)];
  swift_bridgeObjectRelease();
  v11 = *(int *)(a3 + 40);
  v12 = &a1[v11];
  v13 = &a2[v11];
  v15 = *(_QWORD *)v13;
  v14 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v12 = v15;
  *((_QWORD *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22CC27774()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC27780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  sub_22CC082A8(0, qword_255C3CAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB580]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 36));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_22CC27814()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_22CC27820(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  sub_22CC082A8(0, qword_255C3CAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB580]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, v8);
  else
    *(_QWORD *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
}

void sub_22CC278B0()
{
  sub_22CC278BC();
}

void sub_22CC278BC()
{
  unint64_t v0;

  sub_22CC082A8(319, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *sub_22CC2794C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_22CC65A18();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = *(int *)(a3 + 36);
    v10 = *(int *)(a3 + 40);
    v11 = (uint64_t *)((char *)a1 + v9);
    v12 = (uint64_t *)((char *)a2 + v9);
    v13 = v12[1];
    *v11 = *v12;
    v11[1] = v13;
    v14 = (uint64_t *)((char *)a1 + v10);
    v15 = (uint64_t *)((char *)a2 + v10);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_22CC27A5C(uint64_t a1)
{
  uint64_t v2;

  sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_22CC65A18();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_22CC27AF4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_22CC65A18();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = *(int *)(a3 + 36);
  v8 = *(int *)(a3 + 40);
  v9 = (_QWORD *)((char *)a1 + v7);
  v10 = (_QWORD *)((char *)a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)((char *)a1 + v8);
  v13 = (_QWORD *)((char *)a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_22CC27BD8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t (*v6)(uint64_t);
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;

  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0];
    v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_22CC17438((uint64_t)a1, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
    sub_22CC082A8(0, &qword_2540665B0, v6, v7);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_22CC65A18();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v9 = *(int *)(a3 + 36);
  v10 = (_QWORD *)((char *)a1 + v9);
  v11 = (_QWORD *)((char *)a2 + v9);
  *v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 40);
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  *v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_22CC27D14(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
  v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_22CC65A18();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  v9 = *(int *)(a3 + 40);
  *(_OWORD *)&a1[*(int *)(a3 + 36)] = *(_OWORD *)&a2[*(int *)(a3 + 36)];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  return a1;
}

char *sub_22CC27DD8(char *a1, char *a2, uint64_t a3)
{
  uint64_t (*v6)(uint64_t);
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0];
    v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_22CC17438((uint64_t)a1, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
    sub_22CC082A8(0, &qword_2540665B0, v6, v7);
    v9 = v8;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_22CC65A18();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  v11 = *(int *)(a3 + 36);
  v12 = &a1[v11];
  v13 = &a2[v11];
  v15 = *(_QWORD *)v13;
  v14 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v12 = v15;
  *((_QWORD *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  v16 = *(int *)(a3 + 40);
  v17 = &a1[v16];
  v18 = &a2[v16];
  v20 = *(_QWORD *)v18;
  v19 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v17 = v20;
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22CC27EF0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC27EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  sub_22CC082A8(0, qword_255C3CAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB580]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 36) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_22CC27F94()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_22CC27FA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  sub_22CC082A8(0, qword_255C3CAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB580]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, v8);
  else
    *(_QWORD *)(a1 + *(int *)(a4 + 36) + 8) = (a2 - 1);
}

uint64_t sub_22CC28034()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_22CC2803C()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_22CC28064(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_22CC280A0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_QWORD *sub_22CC28118(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22CC2815C(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_22CC281A4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_22CC281E4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *a1;
  v2 = a1[1];
  sub_22CC27070(255);
  type metadata accessor for SleepWidgetResultsView.SummaryTextView(255, v1, v2, v3);
  sub_22CC6534C();
  type metadata accessor for SleepWidgetResultsView.SummaryValueStringView(255, v1, v2, v4);
  type metadata accessor for SleepWidgetResultsView.NoDataStringView(255, v1, v2, v5);
  sub_22CC6552C();
  sub_22CC65868();
  sub_22CC6534C();
  swift_getTupleTypeMetadata();
  v6 = sub_22CC65928();
  MEMORY[0x22E3063F8](MEMORY[0x24BDF5428], v6);
  v7 = sub_22CC658BC();
  sub_22CC18FD8();
  MEMORY[0x22E3063F8](MEMORY[0x24BDF4700], v7);
  sub_22CC07B74(&qword_2540657A0, (uint64_t (*)(uint64_t))sub_22CC18FD8, MEMORY[0x24BEE30C8]);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22CC28350()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22CC28384()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22CC283B8()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_22CC283FC(uint64_t a1)
{
  sub_22CC28950(a1, &qword_254065668, (void (*)(uint64_t))sub_22CC28418, (void (*)(uint64_t))sub_22CC2848C);
}

void sub_22CC28418()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254065640)
  {
    sub_22CC08D64(255, (unint64_t *)&qword_254065688, MEMORY[0x24BEE50B0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF1008]);
    v0 = sub_22CC6534C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254065640);
  }
}

void sub_22CC2848C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2540656B8)
  {
    sub_22CC08D64(255, &qword_2540656E0, MEMORY[0x24BEE1768], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    v0 = sub_22CC65580();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2540656B8);
  }
}

uint64_t sub_22CC284F8()
{
  return sub_22CC28B94(&qword_254065660, (uint64_t (*)(uint64_t))sub_22CC283FC, sub_22CC2851C, sub_22CC28598);
}

uint64_t sub_22CC2851C()
{
  return sub_22CC28C68(&qword_254065638, (uint64_t (*)(uint64_t))sub_22CC28418, (uint64_t (*)(void))sub_22CC28538);
}

unint64_t sub_22CC28538()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254065680;
  if (!qword_254065680)
  {
    sub_22CC08D64(255, (unint64_t *)&qword_254065688, MEMORY[0x24BEE50B0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF1008]);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDF1028], v1);
    atomic_store(result, (unint64_t *)&qword_254065680);
  }
  return result;
}

uint64_t sub_22CC28598()
{
  return sub_22CC07B74(&qword_2540656B0, (uint64_t (*)(uint64_t))sub_22CC2848C, MEMORY[0x24BDF1028]);
}

unint64_t sub_22CC285B4()
{
  unint64_t result;

  result = qword_254066470;
  if (!qword_254066470)
  {
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDEACB8], MEMORY[0x24BDEACC8]);
    atomic_store(result, (unint64_t *)&qword_254066470);
  }
  return result;
}

void sub_22CC285F8(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3();
    v4 = sub_22CC64F98();
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_22CC28650()
{
  unint64_t result;

  result = qword_254066478;
  if (!qword_254066478)
  {
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDEACD0], MEMORY[0x24BDEACE0]);
    atomic_store(result, (unint64_t *)&qword_254066478);
  }
  return result;
}

void sub_22CC28694()
{
  sub_22CC64F38();
  __break(1u);
}

void sub_22CC286B0()
{
  sub_22CC28650();
  sub_22CC64FBC();
  __break(1u);
}

uint64_t sub_22CC286D4()
{
  return 8;
}

uint64_t sub_22CC286E0()
{
  return swift_release();
}

uint64_t sub_22CC286E8(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_22CC286F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22CC26878(a1, a2, a3, sub_22CC28808) & 1;
}

uint64_t sub_22CC28714(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, sub_22CC28808);
}

_QWORD *sub_22CC28720(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void sub_22CC2872C()
{
  sub_22CC64F2C();
  __break(1u);
}

void sub_22CC28748()
{
  sub_22CC285B4();
  sub_22CC64FBC();
  __break(1u);
}

uint64_t sub_22CC2876C()
{
  return 8;
}

uint64_t sub_22CC28778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22CC26878(a1, a2, a3, sub_22CC287E4) & 1;
}

uint64_t sub_22CC28798(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, sub_22CC287E4);
}

uint64_t keypath_hashTm(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  a3(0);
  return sub_22CC65AFC();
}

void sub_22CC287E4(uint64_t a1)
{
  sub_22CC270B8(a1, &qword_255C3CF50, MEMORY[0x24BDEAD80], MEMORY[0x24BDEACC8], MEMORY[0x24BEE4698]);
}

void sub_22CC28808(uint64_t a1)
{
  sub_22CC270B8(a1, &qword_255C3CF58, MEMORY[0x24BDEAD80], MEMORY[0x24BDEACE0], MEMORY[0x24BEE4698]);
}

void sub_22CC2882C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2540665C0)
  {
    sub_22CC2888C();
    sub_22CC28B14();
    v0 = sub_22CC652E0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2540665C0);
  }
}

void sub_22CC2888C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254066760)
  {
    sub_22CC08D64(255, &qword_254065E98, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    sub_22CC28934(255);
    sub_22CC28AB4();
    v0 = sub_22CC658EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254066760);
  }
}

void sub_22CC28934(uint64_t a1)
{
  sub_22CC28950(a1, &qword_254066648, (void (*)(uint64_t))sub_22CC289B8, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
}

void sub_22CC28950(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4(255);
    v6 = sub_22CC6534C();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_22CC289B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254065E58)
  {
    sub_22CC28A34(255);
    sub_22CC08D64(255, (unint64_t *)&qword_254065688, MEMORY[0x24BEE50B0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF1008]);
    v0 = sub_22CC6534C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254065E58);
  }
}

void sub_22CC28A34(uint64_t a1)
{
  sub_22CC270B8(a1, &qword_254065E48, (uint64_t (*)(uint64_t))sub_22CC28A58, MEMORY[0x24BDEDBA0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
}

void sub_22CC28A58()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254065E30)
  {
    sub_22CC2848C();
    v0 = sub_22CC6534C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254065E30);
  }
}

unint64_t sub_22CC28AB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254065EA0;
  if (!qword_254065EA0)
  {
    sub_22CC08D64(255, &qword_254065E98, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BEE12D8], v1);
    atomic_store(result, (unint64_t *)&qword_254065EA0);
  }
  return result;
}

unint64_t sub_22CC28B14()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_254066758;
  if (!qword_254066758)
  {
    sub_22CC2888C();
    v2 = v1;
    v3 = sub_22CC28B94(&qword_254066640, (uint64_t (*)(uint64_t))sub_22CC28934, sub_22CC28C04, sub_22CC28CD4);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDF4A08], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_254066758);
  }
  return result;
}

uint64_t sub_22CC28B94(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = a2(255);
    v9[0] = a3();
    v9[1] = a4();
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22CC28C04()
{
  return sub_22CC28B94(&qword_254065E50, (uint64_t (*)(uint64_t))sub_22CC289B8, sub_22CC28C28, (uint64_t (*)(void))sub_22CC28538);
}

uint64_t sub_22CC28C28()
{
  return sub_22CC158DC(&qword_254065E40, (uint64_t (*)(uint64_t))sub_22CC28A34, sub_22CC28C4C, MEMORY[0x24BDEDB80]);
}

uint64_t sub_22CC28C4C()
{
  return sub_22CC28C68(&qword_254065E28, (uint64_t (*)(uint64_t))sub_22CC28A58, sub_22CC28598);
}

uint64_t sub_22CC28C68(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[2];

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    v7 = a3();
    v8[0] = MEMORY[0x24BDF1F80];
    v8[1] = v7;
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDED308], v6, v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22CC28CD4()
{
  return sub_22CC07B74(&qword_255C3CF60, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
}

void sub_22CC28CF0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2540665C8)
  {
    sub_22CC2888C();
    sub_22CC28D58();
    v0 = sub_22CC65310();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2540665C8);
  }
}

unint64_t sub_22CC28D58()
{
  unint64_t result;

  result = qword_255C3CF68;
  if (!qword_255C3CF68)
  {
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDEDC40], MEMORY[0x24BDEDC50]);
    atomic_store(result, (unint64_t *)&qword_255C3CF68);
  }
  return result;
}

uint64_t sub_22CC28D9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SleepWidgetResultsView.NoDataStringView(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4)- 8)+ 80);
  sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_22CC65A18();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4 + ((v5 + 32) & ~v5), v6);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_22CC28E78@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SleepWidgetResultsView.NoDataStringView(0, v6, v7, a2)- 8)+ 80);
  return sub_22CC26B74(a1, v3 + ((v8 + 32) & ~v8), v6, v7, a3);
}

uint64_t sub_22CC28EE0()
{
  return sub_22CC28B94(&qword_254066630, (uint64_t (*)(uint64_t))sub_22CC28F14, sub_22CC284F8, sub_22CC28CD4);
}

void sub_22CC28F14(uint64_t a1)
{
  sub_22CC28950(a1, &qword_254066638, sub_22CC283FC, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
}

uint64_t sub_22CC28F30()
{
  return sub_22CC28B94(&qword_254066600, (uint64_t (*)(uint64_t))sub_22CC28F64, sub_22CC2851C, sub_22CC28CD4);
}

void sub_22CC28F64(uint64_t a1)
{
  sub_22CC28950(a1, &qword_254066608, (void (*)(uint64_t))sub_22CC28418, (void (*)(uint64_t))MEMORY[0x24BDF1088]);
}

uint64_t sub_22CC28F80()
{
  return sub_22CC07B74(&qword_2540665B8, (uint64_t (*)(uint64_t))sub_22CC2882C, MEMORY[0x24BDEBE40]);
}

__n128 SleepStageWidgetView.init(model:)@<Q0>(__n128 *a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v3;
  unsigned __int8 v4;
  int *v5;
  uint64_t *v6;
  char *v7;
  __n128 *v8;
  __n128 result;
  __n128 v10;

  v10 = *a1;
  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u8[8];
  *a2 = swift_getKeyPath();
  sub_22CC082A8(0, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v5 = (int *)type metadata accessor for SleepStageWidgetView();
  v6 = (uint64_t *)((char *)a2 + v5[5]);
  *v6 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  v7 = (char *)a2 + v5[6];
  *(_QWORD *)v7 = swift_getKeyPath();
  *((_QWORD *)v7 + 1) = 0;
  *((_QWORD *)v7 + 2) = 0;
  *((_QWORD *)v7 + 3) = 0;
  v7[32] = 0;
  v8 = (__n128 *)((char *)a2 + v5[7]);
  result = v10;
  *v8 = v10;
  v8[1].n128_u64[0] = v3;
  v8[1].n128_u8[8] = v4;
  return result;
}

uint64_t sub_22CC290B4()
{
  sub_22CC2B698();
  return sub_22CC65478();
}

uint64_t sub_22CC290F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v2 = sub_22CC65A3C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v11 - v7;
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  v9(v6, (uint64_t)v8, v2);
  sub_22CC2B698();
  sub_22CC65484();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

id SleepStageWidgetView.viewModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;

  v3 = v1 + *(int *)(type metadata accessor for SleepStageWidgetView() + 28);
  v4 = *(void **)v3;
  v5 = *(void **)(v3 + 8);
  v6 = *(void **)(v3 + 16);
  LOBYTE(v3) = *(_BYTE *)(v3 + 24);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v3;
  return sub_22CC0812C(v4, v5, v6);
}

uint64_t SleepStageWidgetView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(char *, unint64_t, uint64_t);
  char v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  unsigned int v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  void (*v69)(uint64_t, uint64_t);
  _QWORD v70[5];
  unsigned __int16 v71;
  unsigned __int8 v72;

  v63 = a1;
  sub_22CC082A8(0, &qword_254066700, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
  v53 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v62 = (char *)&v48 - v3;
  v4 = sub_22CC65A3C();
  v64 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v48 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v67 = (uint64_t)&v48 - v11;
  sub_22CC2A314();
  v13 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v65 = (uint64_t)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC29738(v1, (uint64_t)v70);
  v54 = v70[1];
  v66 = v70[2];
  v59 = v70[3];
  v60 = v70[0];
  v58 = v70[4];
  v57 = v71;
  v15 = v72;
  v61 = sub_22CC657E4();
  KeyPath = swift_getKeyPath();
  v52 = swift_getKeyPath();
  v17 = _s13SleepWidgetUI0a5StageB4ViewV17supportedFamiliesSay0B3Kit0B6FamilyOGvgZ_0();
  v18 = *(int *)(type metadata accessor for SleepStageWidgetView() + 20);
  v51 = v1;
  v50 = v1 + v18;
  sub_22CC207A8((uint64_t)v10);
  v19 = *(_QWORD *)(v17 + 16);
  v56 = v15;
  v55 = KeyPath;
  if (!v19)
  {
    v26 = v64;
    v28 = *(void (**)(uint64_t, uint64_t))(v64 + 8);
    v25 = v54;
    v27 = v10;
    v30 = v52;
    v29 = v53;
LABEL_12:
    v69 = v28;
    v28((uint64_t)v27, v4);
    swift_bridgeObjectRelease();
    v37 = v67;
    sub_22CC207A8(v67);
    v38 = *(int *)(v29 + 28);
    v39 = (uint64_t *)v62;
    (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(&v62[v38], v37, v4);
    *v39 = v30;
    v40 = *(int *)(v13 + 36);
    v41 = v65;
    sub_22CC2A550((uint64_t)v39, v65 + v40);
    v42 = v59;
    v43 = v60;
    *(_QWORD *)v41 = v60;
    *(_QWORD *)(v41 + 8) = v25;
    v44 = v66;
    *(_QWORD *)(v41 + 16) = v66;
    *(_QWORD *)(v41 + 24) = v42;
    v45 = v58;
    *(_QWORD *)(v41 + 32) = v58;
    v46 = v56;
    v47 = v57;
    *(_WORD *)(v41 + 40) = v57;
    *(_BYTE *)(v41 + 42) = v46;
    *(_QWORD *)(v41 + 48) = v55;
    *(_QWORD *)(v41 + 56) = v61;
    sub_22CC2A5B0(v43, v25, v44, v42, v45, v47, v46, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, unint64_t))sub_22CC2A5AC, (void (*)(uint64_t, _QWORD))sub_22CC11614, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_22CC0812C);
    swift_retain();
    swift_retain();
    sub_22CC2ADC0((uint64_t)v39, &qword_254066700, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
    v69(v67, v4);
    sub_22CC2A5B0(v43, v25, v66, v42, v45, v47, v46, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, unint64_t))sub_22CC2A5E4, (void (*)(uint64_t, _QWORD))sub_22CC11750, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_22CC0816C);
    swift_release();
    swift_release();
    return sub_22CC2A644(v65, v63);
  }
  v49 = v13;
  v20 = v64;
  v21 = (*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
  v22 = *(void (**)(char *, unint64_t, uint64_t))(v64 + 16);
  v22(v7, v17 + v21, v4);
  sub_22CC2A508();
  swift_bridgeObjectRetain();
  v68 = v10;
  v23 = sub_22CC65B14();
  v24 = *(void (**)(char *, uint64_t))(v20 + 8);
  v24(v7, v4);
  if ((v23 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v25 = v54;
    v26 = v64;
    v13 = v49;
    v27 = v68;
    v28 = (void (*)(uint64_t, uint64_t))v24;
    v29 = v53;
LABEL_11:
    v30 = v52;
    goto LABEL_12;
  }
  v48 = v17;
  v69 = (void (*)(uint64_t, uint64_t))v24;
  if (v19 == 1)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    v25 = v54;
    v29 = v53;
    v26 = v64;
    v13 = v49;
    v27 = v68;
    v28 = v69;
    goto LABEL_11;
  }
  v31 = v48 + *(_QWORD *)(v64 + 72) + v21;
  v32 = *(_QWORD *)(v64 + 72);
  v33 = 1;
  while (1)
  {
    result = ((uint64_t (*)(char *, unint64_t, uint64_t))v22)(v7, v31, v4);
    v35 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    v36 = sub_22CC65B14();
    v69((uint64_t)v7, v4);
    if ((v36 & 1) == 0)
    {
      ++v33;
      v31 += v32;
      if (v35 != v19)
        continue;
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

void sub_22CC29738(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  int v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  unsigned __int8 v26;
  uint64_t KeyPath;
  __int16 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  __int16 v35;
  char v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  __int16 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  __int16 v56;
  char v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  unsigned __int8 v61;
  char v62;
  __int128 v63;
  _BYTE v64[26];
  char v65;

  v49 = a2;
  v3 = sub_22CC65A3C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v43 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v43 - v11;
  v13 = _s13SleepWidgetUI0a5StageB4ViewV17supportedFamiliesSay0B3Kit0B6FamilyOGvgZ_0();
  v14 = type metadata accessor for SleepStageWidgetView();
  v47 = a1 + *(int *)(v14 + 20);
  sub_22CC207A8((uint64_t)v10);
  v15 = *(_QWORD *)(v13 + 16);
  v50 = v10;
  if (!v15)
  {
    v19 = *(void (**)(char *, uint64_t))(v4 + 8);
    v20 = v49;
    v19(v50, v3);
    goto LABEL_7;
  }
  v46 = v12;
  v45 = v14;
  v16 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v17 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
  v17(v7, v13 + v16, v3);
  sub_22CC2A508();
  swift_bridgeObjectRetain();
  v18 = sub_22CC65B14();
  v48 = v4;
  *(_QWORD *)&v52 = *(_QWORD *)(v4 + 8);
  ((void (*)(char *, uint64_t))v52)(v7, v3);
  if ((v18 & 1) != 0 || (*(_QWORD *)&v51 = v17, v44 = v13, v15 == 1))
  {
    swift_bridgeObjectRelease();
    v19 = (void (*)(char *, uint64_t))v52;
    v4 = v48;
    v14 = v45;
    v20 = v49;
    v12 = v46;
    ((void (*)(char *, uint64_t))v52)(v50, v3);
LABEL_7:
    swift_bridgeObjectRelease();
    sub_22CC207A8((uint64_t)v12);
    v21 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v12, v3);
    if (v21 == *MEMORY[0x24BDFAED8])
    {
      v22 = a1 + *(int *)(v14 + 28);
      v23 = *(void **)v22;
      v24 = *(void **)(v22 + 8);
      v25 = *(void **)(v22 + 16);
      v26 = *(_BYTE *)(v22 + 24);
      KeyPath = swift_getKeyPath();
      v63 = (unint64_t)KeyPath;
      *(_QWORD *)v64 = v23;
      *(_QWORD *)&v64[8] = v24;
      *(_QWORD *)&v64[16] = v25;
      *(_WORD *)&v64[24] = v26;
      sub_22CC0812C(v23, v24, v25);
      sub_22CC11614(KeyPath, 0);
      sub_22CC0812C(v23, v24, v25);
      sub_22CC2B608();
      sub_22CC65520();
      if (v62)
        v28 = 256;
      else
        v28 = 0;
      v53 = v58;
      v54 = v59;
      v55 = v60;
      v56 = v28 | v61;
      v57 = 1;
      sub_22CC2A4B8(0, &qword_254066680);
      sub_22CC2A4B8(0, &qword_254066690);
      sub_22CC2B508();
      sub_22CC2B588();
      sub_22CC65520();
      sub_22CC11750(KeyPath, 0);
    }
    else
    {
      if (v21 == *MEMORY[0x24BDFAF00])
      {
        v29 = a1 + *(int *)(v14 + 28);
        v23 = *(void **)v29;
        v24 = *(void **)(v29 + 8);
        v25 = *(void **)(v29 + 16);
        LOBYTE(v29) = *(_BYTE *)(v29 + 24);
        *(_QWORD *)&v63 = v23;
        *((_QWORD *)&v63 + 1) = v24;
        *(_QWORD *)v64 = v25;
        *(_WORD *)&v64[8] = v29;
      }
      else
      {
        if (v21 != *MEMORY[0x24BDFAF08])
        {
          v63 = 0u;
          memset(v64, 0, 25);
          v64[25] = 1;
          sub_22CC2B608();
          sub_22CC65520();
          if (v62)
            v42 = 256;
          else
            v42 = 0;
          v53 = v58;
          v54 = v59;
          v55 = v60;
          v56 = v42 | v61;
          v57 = 1;
          sub_22CC2A4B8(0, &qword_254066680);
          sub_22CC2A4B8(0, &qword_254066690);
          sub_22CC2B508();
          sub_22CC2B588();
          sub_22CC65520();
          v52 = v63;
          v51 = *(_OWORD *)v64;
          v34 = *(_QWORD *)&v64[16];
          v35 = *(_WORD *)&v64[24];
          v36 = v65;
          v19(v12, v3);
          v33 = v51;
          v32 = v52;
          goto LABEL_20;
        }
        v30 = a1 + *(int *)(v14 + 28);
        v23 = *(void **)v30;
        v24 = *(void **)(v30 + 8);
        v25 = *(void **)(v30 + 16);
        LOBYTE(v30) = *(_BYTE *)(v30 + 24);
        *(_QWORD *)&v63 = v23;
        *((_QWORD *)&v63 + 1) = v24;
        *(_QWORD *)v64 = v25;
        v64[8] = v30;
        v64[9] = 1;
      }
      sub_22CC0812C(v23, v24, v25);
      sub_22CC0812C(v23, v24, v25);
      sub_22CC08F78();
      sub_22CC06900();
      sub_22CC65520();
      v31 = 256;
      if (!BYTE9(v59))
        v31 = 0;
      v53 = v58;
      *(_QWORD *)&v54 = v59;
      *((_QWORD *)&v54 + 1) = v31 | BYTE8(v59);
      v55 = 0;
      v56 = 0;
      v57 = 0;
      sub_22CC2A4B8(0, &qword_254066680);
      sub_22CC2A4B8(0, &qword_254066690);
      sub_22CC2B508();
      sub_22CC2B588();
      sub_22CC65520();
    }
    sub_22CC0816C((uint64_t)v23, v24, v25);
    v32 = v63;
    v33 = *(_OWORD *)v64;
    v34 = *(_QWORD *)&v64[16];
    v35 = *(_WORD *)&v64[24];
    v36 = v65;
LABEL_20:
    *(_OWORD *)v20 = v32;
    *(_OWORD *)(v20 + 16) = v33;
    *(_QWORD *)(v20 + 32) = v34;
    *(_WORD *)(v20 + 40) = v35;
    *(_BYTE *)(v20 + 42) = v36;
    return;
  }
  v43 = a1;
  v37 = *(_QWORD *)(v48 + 72);
  v38 = v44 + v37 + v16;
  v39 = 1;
  while (1)
  {
    ((void (*)(char *, unint64_t, uint64_t))v51)(v7, v38, v3);
    v40 = v39 + 1;
    if (__OFADD__(v39, 1))
      break;
    v41 = sub_22CC65B14();
    ((void (*)(char *, uint64_t))v52)(v7, v3);
    if ((v41 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v20 = v49;
      v12 = v46;
      a1 = v43;
      v19 = (void (*)(char *, uint64_t))v52;
      v4 = v48;
      v14 = v45;
      ((void (*)(char *, uint64_t))v52)(v50, v3);
      goto LABEL_7;
    }
    ++v39;
    v38 += v37;
    if (v40 == v15)
    {
      swift_bridgeObjectRelease();
      a1 = v43;
      v20 = v49;
      v12 = v46;
      v19 = (void (*)(char *, uint64_t))v52;
      v4 = v48;
      v14 = v45;
      ((void (*)(char *, uint64_t))v52)(v50, v3);
      goto LABEL_7;
    }
  }
  __break(1u);
}

uint64_t sub_22CC29EA8()
{
  return sub_22CC65418();
}

uint64_t sub_22CC29EC8()
{
  return sub_22CC65418();
}

uint64_t type metadata accessor for SleepStageWidgetView()
{
  uint64_t result;

  result = qword_2540657C8;
  if (!qword_2540657C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22CC29F24()
{
  sub_22CC2B698();
  return sub_22CC65478();
}

void sub_22CC29F64(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(double *)a1 = MEMORY[0x22E305534]();
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
}

void sub_22CC29F90(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(double *)a1 = MEMORY[0x22E305534]();
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
}

uint64_t _s13SleepWidgetUI0a5StageB4ViewV17supportedFamiliesSay0B3Kit0B6FamilyOGvgZ_0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  void (*v8)(unint64_t, _QWORD, uint64_t);
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23[4];

  v23[3] = *MEMORY[0x24BDAC8D0];
  v0 = sub_22CC652BC();
  v20 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC082A8(0, (unint64_t *)&qword_254065958, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v3 = sub_22CC65A3C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 72);
  v6 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_22CC66400;
  v8 = *(void (**)(unint64_t, _QWORD, uint64_t))(v4 + 104);
  v8(v7 + v6, *MEMORY[0x24BDFAF00], v3);
  v8(v7 + v6 + v5, *MEMORY[0x24BDFAF08], v3);
  v22 = v7;
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_22CC663F0;
  v8(v9 + v6, *MEMORY[0x24BDFAED8], v3);
  sub_22CC2B6DC(v9);
  sub_22CC652A4();
  swift_bridgeObjectRetain_n();
  v10 = sub_22CC652B0();
  v11 = sub_22CC65C40();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = swift_slowAlloc();
    v13 = swift_slowAlloc();
    v23[0] = v13;
    *(_DWORD *)v12 = 136446466;
    v21 = sub_22CC5C47C(0xD000000000000014, 0x800000022CC67860, v23);
    v19 = v0;
    sub_22CC65D00();
    *(_WORD *)(v12 + 12) = 2082;
    v14 = swift_bridgeObjectRetain();
    v15 = MEMORY[0x22E305CA8](v14, v3);
    v17 = v16;
    swift_bridgeObjectRelease();
    v21 = sub_22CC5C47C(v15, v17, v23);
    sub_22CC65D00();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CC04000, v10, v11, "[%{public}s] supportedFamilies: %{public}s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x22E306470](v13, -1, -1);
    MEMORY[0x22E306470](v12, -1, -1);

    (*(void (**)(char *, uint64_t))(v20 + 8))(v2, v19);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v2, v0);
  }
  swift_beginAccess();
  return v22;
}

void sub_22CC2A314()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254066618)
  {
    sub_22CC2A390();
    sub_22CC082A8(255, &qword_254066700, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
    v0 = sub_22CC6534C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254066618);
  }
}

void sub_22CC2A390()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2540665E8)
  {
    sub_22CC082A8(255, &qword_254066720, (uint64_t (*)(uint64_t))sub_22CC2A424, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF3F28]);
    sub_22CC082A8(255, &qword_2540656A0, (uint64_t (*)(uint64_t))sub_22CC14E58, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
    v0 = sub_22CC6534C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2540665E8);
  }
}

void sub_22CC2A424()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2540666D0)
  {
    sub_22CC2A4B8(255, &qword_254066680);
    sub_22CC2A4B8(255, &qword_254066690);
    v0 = sub_22CC6552C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2540666D0);
  }
}

void sub_22CC2A4B8(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_22CC6552C();
    if (!v4)
      atomic_store(v3, a2);
  }
}

unint64_t sub_22CC2A508()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254066788;
  if (!qword_254066788)
  {
    v1 = sub_22CC65A3C();
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDFAF20], v1);
    atomic_store(result, (unint64_t *)&qword_254066788);
  }
  return result;
}

uint64_t sub_22CC2A550(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_22CC082A8(0, &qword_254066700, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22CC2A5B0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t (*a8)(uint64_t, uint64_t, uint64_t, unint64_t, unint64_t), void (*a9)(uint64_t, _QWORD), uint64_t (*a10)(uint64_t, uint64_t, uint64_t))
{
  if ((a7 & 1) != 0)
    return sub_22CC2A5E8(a1, a2, a3, a4, a5, a6, BYTE1(a6) & 1, a9, a10);
  else
    return a8(a1, a2, a3, a4, (a4 >> 8) & 1);
}

uint64_t sub_22CC2A5E8(uint64_t result, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, void (*a8)(uint64_t, _QWORD), uint64_t (*a9)(uint64_t, uint64_t, uint64_t))
{
  if ((a7 & 1) == 0)
  {
    a8(result, a2 & 1);
    return a9(a3, a4, a5);
  }
  return result;
}

uint64_t sub_22CC2A644(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_22CC2A314();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22CC2A688()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for SleepStageWidgetView(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char *v22;
  char *v23;
  void *v24;
  void *v25;
  id v26;
  id v27;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_22CC082A8(0, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_22CC65A3C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = a3[5];
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_22CC65A3C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v13 = a3[6];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = *(_QWORD *)v15;
    v17 = *((_QWORD *)v15 + 1);
    v18 = *((_QWORD *)v15 + 2);
    v19 = *((_QWORD *)v15 + 3);
    v20 = v15[32];
    sub_22CC21748(*(_QWORD *)v15, v17, v18, v19, v20);
    *(_QWORD *)v14 = v16;
    *((_QWORD *)v14 + 1) = v17;
    *((_QWORD *)v14 + 2) = v18;
    *((_QWORD *)v14 + 3) = v19;
    v14[32] = v20;
    v21 = a3[7];
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    if (*(_QWORD *)v23)
    {
      v24 = (void *)*((_QWORD *)v23 + 1);
      v25 = (void *)*((_QWORD *)v23 + 2);
      *(_QWORD *)v22 = *(_QWORD *)v23;
      *((_QWORD *)v22 + 1) = v24;
      *((_QWORD *)v22 + 2) = v25;
      swift_bridgeObjectRetain();
      v26 = v24;
      v27 = v25;
    }
    else
    {
      *(_OWORD *)v22 = *(_OWORD *)v23;
      *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);
    }
    v22[24] = v23[24];
  }
  return a1;
}

void destroy for SleepStageWidgetView(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_22CC082A8(0, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_22CC65A3C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  v5 = a1 + a2[5];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_22CC65A3C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  v7 = a1 + a2[6];
  sub_22CC219A8(*(_QWORD *)v7, *(_QWORD *)(v7 + 8), *(_QWORD *)(v7 + 16), *(_QWORD *)(v7 + 24), *(_BYTE *)(v7 + 32));
  v8 = a1 + a2[7];
  if (*(_QWORD *)v8)
  {
    swift_bridgeObjectRelease();

  }
}

_QWORD *initializeWithCopy for SleepStageWidgetView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char *v20;
  char *v21;
  void *v22;
  void *v23;
  id v24;
  id v25;

  sub_22CC082A8(0, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_22CC65A3C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_22CC65A3C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = *(_QWORD *)v13;
  v15 = *((_QWORD *)v13 + 1);
  v16 = *((_QWORD *)v13 + 2);
  v17 = *((_QWORD *)v13 + 3);
  v18 = v13[32];
  sub_22CC21748(*(_QWORD *)v13, v15, v16, v17, v18);
  *(_QWORD *)v12 = v14;
  *((_QWORD *)v12 + 1) = v15;
  *((_QWORD *)v12 + 2) = v16;
  *((_QWORD *)v12 + 3) = v17;
  v12[32] = v18;
  v19 = a3[7];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  if (*(_QWORD *)v21)
  {
    v22 = (void *)*((_QWORD *)v21 + 1);
    v23 = (void *)*((_QWORD *)v21 + 2);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *((_QWORD *)v20 + 1) = v22;
    *((_QWORD *)v20 + 2) = v23;
    swift_bridgeObjectRetain();
    v24 = v22;
    v25 = v23;
  }
  else
  {
    *(_OWORD *)v20 = *(_OWORD *)v21;
    *((_QWORD *)v20 + 2) = *((_QWORD *)v21 + 2);
  }
  v20[24] = v21[24];
  return a1;
}

_QWORD *assignWithCopy for SleepStageWidgetView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  uint64_t v39;
  __int128 v40;

  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_22CC2ADC0((uint64_t)a1, &qword_2540658A0, MEMORY[0x24BDEB560]);
    sub_22CC082A8(0, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], v6);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_22CC65A3C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v8 = a3[5];
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    sub_22CC2ADC0((uint64_t)a1 + v8, &qword_2540658A0, MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_22CC65A3C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *(_QWORD *)v14;
  v16 = *((_QWORD *)v14 + 1);
  v17 = *((_QWORD *)v14 + 2);
  v18 = *((_QWORD *)v14 + 3);
  v19 = v14[32];
  sub_22CC21748(*(_QWORD *)v14, v16, v17, v18, v19);
  v20 = *(_QWORD *)v13;
  v21 = *((_QWORD *)v13 + 1);
  v22 = *((_QWORD *)v13 + 2);
  v23 = *((_QWORD *)v13 + 3);
  v24 = v13[32];
  *(_QWORD *)v13 = v15;
  *((_QWORD *)v13 + 1) = v16;
  *((_QWORD *)v13 + 2) = v17;
  *((_QWORD *)v13 + 3) = v18;
  v13[32] = v19;
  sub_22CC219A8(v20, v21, v22, v23, v24);
  v25 = a3[7];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = *(_QWORD *)((char *)a2 + v25);
  if (*(_QWORD *)((char *)a1 + v25))
  {
    if (v28)
    {
      *(_QWORD *)v26 = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v29 = (void *)*((_QWORD *)v26 + 1);
      v30 = (void *)*((_QWORD *)v27 + 1);
      *((_QWORD *)v26 + 1) = v30;
      v31 = v30;

      v32 = (void *)*((_QWORD *)v26 + 2);
      v33 = (void *)*((_QWORD *)v27 + 2);
      *((_QWORD *)v26 + 2) = v33;
      v34 = v33;

    }
    else
    {
      sub_22CC06744((uint64_t)a1 + v25);
      v39 = *((_QWORD *)v27 + 2);
      *(_OWORD *)v26 = *(_OWORD *)v27;
      *((_QWORD *)v26 + 2) = v39;
    }
  }
  else if (v28)
  {
    *(_QWORD *)v26 = v28;
    v35 = (void *)*((_QWORD *)v27 + 1);
    *((_QWORD *)v26 + 1) = v35;
    v36 = (void *)*((_QWORD *)v27 + 2);
    *((_QWORD *)v26 + 2) = v36;
    swift_bridgeObjectRetain();
    v37 = v35;
    v38 = v36;
  }
  else
  {
    v40 = *(_OWORD *)v27;
    *((_QWORD *)v26 + 2) = *((_QWORD *)v27 + 2);
    *(_OWORD *)v26 = v40;
  }
  v26[24] = v27[24];
  return a1;
}

uint64_t sub_22CC2ADC0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v4;

  sub_22CC082A8(0, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

char *initializeWithTake for SleepStageWidgetView(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  __int128 v17;
  char *v18;
  char *v19;

  sub_22CC082A8(0, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
  v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_22CC65A3C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_22CC65A3C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  v13 = a3[6];
  v14 = a3[7];
  v15 = &a1[v13];
  v16 = &a2[v13];
  v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  v15[32] = v16[32];
  v18 = &a1[v14];
  v19 = &a2[v14];
  *(_OWORD *)(v18 + 9) = *(_OWORD *)(v19 + 9);
  *(_OWORD *)v18 = *(_OWORD *)v19;
  return a1;
}

char *assignWithTake for SleepStageWidgetView(char *a1, char *a2, int *a3)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void *v27;
  void *v28;

  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_22CC2ADC0((uint64_t)a1, &qword_2540658A0, MEMORY[0x24BDEB560]);
    sub_22CC082A8(0, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], v6);
    v8 = v7;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_22CC65A3C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    v10 = a3[5];
    v11 = &a1[v10];
    v12 = &a2[v10];
    sub_22CC2ADC0((uint64_t)&a1[v10], &qword_2540658A0, MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_22CC65A3C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
  }
  v14 = a3[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = v16[32];
  v18 = *(_QWORD *)v15;
  v19 = *((_QWORD *)v15 + 1);
  v20 = *((_QWORD *)v15 + 2);
  v21 = *((_QWORD *)v15 + 3);
  v22 = v15[32];
  v23 = *((_OWORD *)v16 + 1);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v23;
  v15[32] = v17;
  sub_22CC219A8(v18, v19, v20, v21, v22);
  v24 = a3[7];
  v25 = (uint64_t)&a1[v24];
  v26 = &a2[v24];
  if (!*(_QWORD *)&a1[v24])
    goto LABEL_12;
  if (!*(_QWORD *)v26)
  {
    sub_22CC06744(v25);
LABEL_12:
    *(_OWORD *)v25 = *(_OWORD *)v26;
    *(_QWORD *)(v25 + 16) = *((_QWORD *)v26 + 2);
    goto LABEL_13;
  }
  *(_QWORD *)v25 = *(_QWORD *)v26;
  swift_bridgeObjectRelease();
  v27 = *(void **)(v25 + 8);
  *(_QWORD *)(v25 + 8) = *((_QWORD *)v26 + 1);

  v28 = *(void **)(v25 + 16);
  *(_QWORD *)(v25 + 16) = *((_QWORD *)v26 + 2);

LABEL_13:
  *(_BYTE *)(v25 + 24) = v26[24];
  return a1;
}

uint64_t getEnumTagSinglePayload for SleepStageWidgetView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC2B154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  sub_22CC082A8(0, &qword_255C3CAB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB580]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for SleepStageWidgetView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_22CC2B200(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  sub_22CC082A8(0, &qword_255C3CAB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB580]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, v8);
  else
    *(_QWORD *)(a1 + *(int *)(a4 + 28)) = a2;
}

void sub_22CC2B290()
{
  unint64_t v0;

  sub_22CC082A8(319, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

unint64_t sub_22CC2B328()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_254066610;
  if (!qword_254066610)
  {
    sub_22CC2A314();
    v2 = v1;
    v3[0] = sub_22CC2B3A8();
    v3[1] = sub_22CC2B64C(&qword_2540666F8, &qword_254066700, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10]);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_254066610);
  }
  return result;
}

unint64_t sub_22CC2B3A8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_2540665E0;
  if (!qword_2540665E0)
  {
    sub_22CC2A390();
    v2 = v1;
    v3[0] = sub_22CC2B428();
    v3[1] = sub_22CC2B64C((unint64_t *)&qword_254065698, &qword_2540656A0, (uint64_t (*)(uint64_t))sub_22CC14E58);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_2540665E0);
  }
  return result;
}

unint64_t sub_22CC2B428()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_254066718;
  if (!qword_254066718)
  {
    sub_22CC082A8(255, &qword_254066720, (uint64_t (*)(uint64_t))sub_22CC2A424, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF3F28]);
    v2 = v1;
    v3 = sub_22CC2B4A0();
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDF3F50], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_254066718);
  }
  return result;
}

unint64_t sub_22CC2B4A0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_2540666C8;
  if (!qword_2540666C8)
  {
    sub_22CC2A424();
    v2 = v1;
    v3[0] = sub_22CC2B508();
    v3[1] = sub_22CC2B588();
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDEF3E0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_2540666C8);
  }
  return result;
}

unint64_t sub_22CC2B508()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_254066678;
  if (!qword_254066678)
  {
    sub_22CC2A4B8(255, &qword_254066680);
    v2 = v1;
    v3[0] = sub_22CC08F78();
    v3[1] = sub_22CC06900();
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDEF3E0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_254066678);
  }
  return result;
}

unint64_t sub_22CC2B588()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_254066688;
  if (!qword_254066688)
  {
    sub_22CC2A4B8(255, &qword_254066690);
    v2 = v1;
    v3[0] = sub_22CC2B608();
    v3[1] = MEMORY[0x24BDF5138];
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDEF3E0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_254066688);
  }
  return result;
}

unint64_t sub_22CC2B608()
{
  unint64_t result;

  result = qword_254066510;
  if (!qword_254066510)
  {
    result = MEMORY[0x22E3063F8](&unk_22CC69158, &type metadata for SleepStageWidgetSmallView);
    atomic_store(result, (unint64_t *)&qword_254066510);
  }
  return result;
}

uint64_t sub_22CC2B64C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_22CC082A8(255, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDF1028], v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_22CC2B698()
{
  unint64_t result;

  result = qword_254066580;
  if (!qword_254066580)
  {
    result = MEMORY[0x22E3063F8](&unk_22CC690B0, &type metadata for SleepWidgetFamilyKey);
    atomic_store(result, (unint64_t *)&qword_254066580);
  }
  return result;
}

uint64_t sub_22CC2B6DC(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  int64_t v5;
  int isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  int64_t v24;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(_QWORD *)(v3 + 24) >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v24 = v4 + v2;
  else
    v24 = v4;
  v3 = sub_22CC465E8(isUniquelyReferenced_nonNull_native, v24, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = *(_QWORD *)(v3 + 16);
  v10 = (*(_QWORD *)(v3 + 24) >> 1) - v9;
  v11 = sub_22CC65A3C();
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v3 + v13 + v14 * v9;
  v16 = a1 + v13;
  v17 = v14 * v8;
  v18 = v15 + v17;
  v19 = v16 + v17;
  if (v16 < v18 && v15 < v19)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v21 = *(_QWORD *)(v3 + 16);
  v22 = __OFADD__(v21, v8);
  v23 = v21 + v8;
  if (!v22)
  {
    *(_QWORD *)(v3 + 16) = v23;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_22CC65E74();
  __break(1u);
  return result;
}

uint64_t sub_22CC2B850(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_22CC46A40(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_22CC65E74();
  __break(1u);
  return result;
}

uint64_t sub_22CC2B9A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_22CC46B60(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = &v3[3 * v8 + 4];
  if (a1 + 32 < (unint64_t)&v9[3 * v2] && (unint64_t)v9 < a1 + 32 + 24 * v2)
    goto LABEL_24;
  memcpy(v9, (const void *)(a1 + 32), 24 * v2);
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_22CC65E74();
  __break(1u);
  return result;
}

void SleepDaySummaryResults.init(summaries:)(unint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  char *v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;

  if (!(a1 >> 62))
  {
    v4 = *(char **)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
LABEL_12:
    swift_bridgeObjectRelease();
    v7 = 0;
LABEL_13:
    *a2 = a1;
    a2[1] = (unint64_t)v7;
    a2[2] = (unint64_t)v4;
    return;
  }
  swift_bridgeObjectRetain();
  v4 = (char *)sub_22CC65E5C();
  if (!v4)
    goto LABEL_12;
LABEL_3:
  v5 = v4 - 1;
  if (__OFSUB__(v4, 1))
  {
    __break(1u);
    goto LABEL_15;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_15:
    v6 = (id)MEMORY[0x22E305EF4](v5, a1);
LABEL_8:
    v7 = v6;
    swift_bridgeObjectRelease();
    v8 = objc_msgSend(v7, sel_summaryFilteredToLastPeriod);
    if (v8)
    {
      v9 = v8;
      v10 = (void *)objc_opt_self();
      sub_22CC2F3E0(0, &qword_254065F90);
      v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_22CC678F0;
      *(_QWORD *)(v11 + 32) = v9;
      sub_22CC65BBC();
      sub_22CC2EA20(0, &qword_2540660F0);
      v12 = v9;
      v13 = (void *)sub_22CC65B98();
      swift_bridgeObjectRelease();
      v4 = (char *)objc_msgSend(v10, sel_sleepMetricsForDaySummaries_, v13);

    }
    else
    {
      v4 = 0;
    }
    goto LABEL_13;
  }
  if (((unint64_t)v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if ((unint64_t)v5 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v6 = *(id *)(a1 + 8 * (_QWORD)v5 + 32);
    goto LABEL_8;
  }
  __break(1u);
}

uint64_t sub_22CC2BCBC@<X0>(_QWORD *a1@<X8>)
{
  unint64_t *v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  _QWORD *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *isUniquelyReferenced_nonNull_native;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52[3];

  v3 = sub_22CC652BC();
  v4 = *(_QWORD **)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v47 - v8;
  v11 = *v1;
  v10 = (_QWORD *)v1[1];
  v12 = (void *)v1[2];
  v52[0] = *v1;
  v52[1] = (uint64_t)v10;
  v52[2] = (uint64_t)v12;
  v13 = (uint64_t)v52;
  if (!SleepDaySummaryResults.hasAnyDataInLastWeek.getter())
  {
    sub_22CC652A4();
    v18 = sub_22CC652B0();
    v19 = sub_22CC65C64();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v52[0] = v21;
      *(_DWORD *)v20 = 136446210;
      v51 = sub_22CC5C47C(0xD000000000000016, 0x800000022CC678F0, v52);
      sub_22CC65D00();
      _os_log_impl(&dword_22CC04000, v18, v19, "[%{public}s] no data in last week, returning nil", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E306470](v21, -1, -1);
      MEMORY[0x22E306470](v20, -1, -1);
    }

    result = ((uint64_t (*)(char *, uint64_t))v4[1])(v7, v3);
    v10 = 0;
    goto LABEL_45;
  }
  v14 = v11 >> 62;
  if (!(v11 >> 62))
  {
    v15 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v16 = -(uint64_t)v15;
    if (!__OFSUB__(0, v15))
      goto LABEL_4;
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  v13 = (uint64_t)v9;
  swift_bridgeObjectRetain_n();
  v15 = sub_22CC65E5C();
  swift_bridgeObjectRelease();
  v16 = -(uint64_t)v15;
  if (__OFSUB__(0, v15))
    goto LABEL_57;
LABEL_4:
  v50 = v9;
  if ((unint64_t)(v16 + 6) >= 7)
  {
    v13 = v15 - 7;
    if (!__OFSUB__(v15, 7))
    {
      if ((uint64_t)v15 >= v13)
      {
        if (!v14)
          goto LABEL_7;
        goto LABEL_14;
      }
LABEL_65:
      __break(1u);
      goto LABEL_66;
    }
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  if ((v15 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_64;
  }
  v13 = 0;
  if (!v14)
  {
LABEL_7:
    v17 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_15;
  }
LABEL_14:
  swift_bridgeObjectRetain();
  v17 = sub_22CC65E5C();
  swift_bridgeObjectRelease();
LABEL_15:
  if (v17 < v13)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  if (v13 < 0)
  {
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  if (v14)
  {
    swift_bridgeObjectRetain();
    v9 = (char *)sub_22CC65E5C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = *(char **)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if ((uint64_t)v9 < (uint64_t)v15)
    goto LABEL_60;
  if ((v15 & 0x8000000000000000) != 0)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  v49 = v4;
  if ((v11 & 0xC000000000000001) != 0 && v13 != v15)
  {
    if (v13 < v15)
    {
      sub_22CC2EA20(0, &qword_2540660F0);
      v23 = v13;
      do
      {
        v24 = v23 + 1;
        sub_22CC65DF0();
        v23 = v24;
      }
      while (v15 != v24);
      goto LABEL_27;
    }
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
LABEL_27:
  v48 = v3;
  if (v14)
  {
    swift_bridgeObjectRetain();
    v3 = sub_22CC65E68();
    v9 = v25;
    v13 = v26;
    v15 = v27;
    swift_bridgeObjectRelease_n();
    if ((v15 & 1) != 0)
      goto LABEL_32;
LABEL_31:
    v28 = sub_22CC2D204(v3, (uint64_t)v9, v13, v15);
    goto LABEL_38;
  }
  v3 = v11 & 0xFFFFFFFFFFFFFF8;
  v9 = (char *)((v11 & 0xFFFFFFFFFFFFFF8) + 32);
  v15 = (2 * v15) | 1;
  if ((v15 & 1) == 0)
    goto LABEL_31;
LABEL_32:
  v4 = a1;
  sub_22CC65EBC();
  swift_unknownObjectRetain_n();
  v29 = swift_dynamicCastClass();
  if (!v29)
  {
    swift_unknownObjectRelease();
    v29 = MEMORY[0x24BEE4AF8];
  }
  v30 = *(_QWORD *)(v29 + 16);
  swift_release();
  if (__OFSUB__(v15 >> 1, v13))
    goto LABEL_67;
  if (v30 != (v15 >> 1) - v13)
  {
LABEL_68:
    swift_unknownObjectRelease();
    a1 = v4;
    goto LABEL_31;
  }
  v28 = swift_dynamicCastClass();
  if (!v28)
  {
    swift_unknownObjectRelease();
    v28 = MEMORY[0x24BEE4AF8];
  }
LABEL_38:
  swift_unknownObjectRelease();
  v31 = v12;
  swift_bridgeObjectRetain();
  v32 = v10;
  v10 = (_QWORD *)sub_22CC2EA58(v28, v11, (uint64_t)v10);

  swift_bridgeObjectRelease();
  if ((v28 & 0x8000000000000000) == 0 && (v28 & 0x4000000000000000) == 0)
  {
    v33 = *(_QWORD *)(v28 + 16);
    goto LABEL_41;
  }
LABEL_62:
  swift_bridgeObjectRetain();
  v33 = sub_22CC65E5C();
  swift_release();
LABEL_41:
  v34 = v50;
  v35 = v33 - 7;
  if (v33 >= 7)
  {
    result = swift_release();
LABEL_45:
    *a1 = v10;
    return result;
  }
  v47 = a1;
  sub_22CC652A4();
  swift_bridgeObjectRetain_n();
  v36 = sub_22CC652B0();
  v37 = sub_22CC65C64();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = swift_slowAlloc();
    v39 = swift_slowAlloc();
    v52[0] = v39;
    *(_DWORD *)v38 = 136446466;
    v51 = sub_22CC5C47C(0xD000000000000016, 0x800000022CC678F0, v52);
    sub_22CC65D00();
    *(_WORD *)(v38 + 12) = 2082;
    v51 = v33;
    v40 = sub_22CC65E8C();
    v51 = sub_22CC5C47C(v40, v41, v52);
    sub_22CC65D00();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CC04000, v36, v37, "[%{public}s] lastSummaries.count = %{public}s, prepending empty bars", (uint8_t *)v38, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x22E306470](v39, -1, -1);
    MEMORY[0x22E306470](v38, -1, -1);

    ((void (*)(char *, uint64_t))v49[1])(v50, v48);
  }
  else
  {

    swift_release_n();
    ((void (*)(char *, uint64_t))v49[1])(v34, v48);
  }
  result = swift_release();
  a1 = v47;
  if (__OFSUB__(7, v33))
  {
    __break(1u);
  }
  else if (((7 - v33) & 0x8000000000000000) == 0)
  {
    v42 = v10[2];
    v43 = MEMORY[0x24BEE4AF8];
    do
    {
      isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
      if (!(_DWORD)isUniquelyReferenced_nonNull_native || v42 >= v10[3] >> 1)
        v10 = sub_22CC46908(isUniquelyReferenced_nonNull_native, v42 + 1, 1, v10);
      swift_arrayDestroy();
      v44 = v10[2];
      result = (uint64_t)memmove(v10 + 10, v10 + 4, 48 * v44);
      v42 = v44 + 1;
      v10[2] = v44 + 1;
      v10[4] = v43;
      v10[5] = v43;
      v10[6] = v43;
      v10[7] = v43;
      v10[8] = v43;
      v10[9] = v43;
    }
    while (!__CFADD__(v35++, 1));
    goto LABEL_45;
  }
  __break(1u);
  return result;
}

uint64_t SleepDaySummaryResults.lastSleepDuration.getter()
{
  return sub_22CC2C42C((SEL *)&selRef_sleepDuration);
}

uint64_t SleepDaySummaryResults.lastInBedDuration.getter()
{
  return sub_22CC2C42C((SEL *)&selRef_inBedDuration);
}

uint64_t sub_22CC2C42C(SEL *a1)
{
  uint64_t v1;
  double v2;

  if (*(_QWORD *)(v1 + 8) && (objc_msgSend(*(id *)(v1 + 8), *a1), v2 > COERCE_DOUBLE(1)))
    return *(_QWORD *)&v2;
  else
    return 0;
}

id SleepDaySummaryResults.sleepDurationForLastPeriod.getter()
{
  return sub_22CC2C490((SEL *)&selRef_averageSleepDuration);
}

id SleepDaySummaryResults.inBedDurationForLastPeriod.getter()
{
  return sub_22CC2C490((SEL *)&selRef_averageInBedDuration);
}

id sub_22CC2C490(SEL *a1)
{
  uint64_t v1;
  id result;
  void *v3;
  double v4;
  double v5;

  if (!*(_QWORD *)(v1 + 16))
    return 0;
  result = objc_msgSend(*(id *)(v1 + 16), *a1);
  if (!result)
    return result;
  v3 = result;
  objc_msgSend(result, sel__value);
  v5 = v4;

  if (v5 > COERCE_DOUBLE(1))
    return *(id *)&v5;
  else
    return 0;
}

BOOL SleepDaySummaryResults.hasAnyDataOnLastDay.getter()
{
  uint64_t v0;
  void *v1;
  double v2;
  double v3;
  _BOOL8 result;

  v1 = *(void **)(v0 + 8);
  result = 0;
  if (v1)
  {
    objc_msgSend(*(id *)(v0 + 8), sel_sleepDuration);
    if (v2 > COERCE_DOUBLE(1) && v2 > 0.0)
      return 1;
    objc_msgSend(v1, sel_inBedDuration);
    if (v3 > COERCE_DOUBLE(1) && v3 > 0.0)
      return 1;
  }
  return result;
}

BOOL SleepDaySummaryResults.hasAnyDataInLastWeek.getter()
{
  uint64_t v0;
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  id v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;

  v3 = *v1;
  v4 = (void *)((unint64_t)v3 >> 62);
  if ((unint64_t)v3 >> 62)
    goto LABEL_49;
  v5 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v6 = -(uint64_t)v5;
  if (__OFSUB__(0, v5))
    goto LABEL_54;
LABEL_3:
  if ((unint64_t)(v6 + 6) >= 7)
  {
    v0 = v5 - 7;
    if (!__OFSUB__(v5, 7))
    {
      if ((uint64_t)v5 >= v0)
      {
        if (!v4)
          goto LABEL_6;
        goto LABEL_10;
      }
LABEL_65:
      __break(1u);
      goto LABEL_66;
    }
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_64;
  }
  v0 = 0;
  if (!v4)
  {
LABEL_6:
    v7 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_11;
  }
LABEL_10:
  swift_bridgeObjectRetain();
  v7 = sub_22CC65E5C();
  swift_bridgeObjectRelease();
LABEL_11:
  if (v7 >= v0)
  {
    if (v0 < 0)
      goto LABEL_56;
    if (v4)
    {
      swift_bridgeObjectRetain();
      v2 = sub_22CC65E5C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v2 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    if (v2 < (uint64_t)v5)
      goto LABEL_57;
    if ((v5 & 0x8000000000000000) != 0)
      goto LABEL_58;
    if ((v3 & 0xC000000000000001) == 0 || v0 == v5)
    {
LABEL_23:
      if (v4)
      {
        swift_bridgeObjectRetain();
        v2 = sub_22CC65E68();
        v4 = v10;
        v0 = v11;
        v5 = v12;
        swift_bridgeObjectRelease_n();
        if ((v5 & 1) != 0)
          goto LABEL_28;
      }
      else
      {
        v2 = v3 & 0xFFFFFFFFFFFFFF8;
        v4 = (void *)((v3 & 0xFFFFFFFFFFFFFF8) + 32);
        v5 = (2 * v5) | 1;
        if ((v5 & 1) != 0)
        {
LABEL_28:
          sub_22CC65EBC();
          swift_unknownObjectRetain_n();
          v13 = swift_dynamicCastClass();
          if (!v13)
          {
            swift_unknownObjectRelease();
            v13 = MEMORY[0x24BEE4AF8];
          }
          v14 = *(_QWORD *)(v13 + 16);
          swift_release();
          if (!__OFSUB__(v5 >> 1, v0))
          {
            if (v14 == (v5 >> 1) - v0)
            {
              v0 = swift_dynamicCastClass();
              if (!v0)
              {
                swift_unknownObjectRelease();
                v0 = MEMORY[0x24BEE4AF8];
              }
              goto LABEL_34;
            }
            goto LABEL_68;
          }
LABEL_67:
          __break(1u);
LABEL_68:
          swift_unknownObjectRelease();
        }
      }
      v0 = sub_22CC2D204(v2, (uint64_t)v4, v0, v5);
LABEL_34:
      swift_unknownObjectRelease();
      if (v0 < 0 || (v0 & 0x4000000000000000) != 0)
        goto LABEL_59;
      v3 = *(_QWORD *)(v0 + 16);
      swift_bridgeObjectRetain();
      if (v3)
        goto LABEL_37;
      goto LABEL_60;
    }
    if (v0 < v5)
    {
      sub_22CC2EA20(0, &qword_2540660F0);
      v8 = v0;
      do
      {
        v9 = v8 + 1;
        sub_22CC65DF0();
        v8 = v9;
      }
      while (v5 != v9);
      goto LABEL_23;
    }
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  while (1)
  {
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    swift_bridgeObjectRetain();
    v3 = sub_22CC65E5C();
    if (!v3)
      break;
LABEL_37:
    v15 = 4;
    v2 = 0x24BDD3FA0uLL;
    while (1)
    {
      v16 = (v0 & 0xC000000000000001) != 0 ? (id)MEMORY[0x22E305EF4](v15 - 4, v0) : *(id *)(v0 + 8 * v15);
      v4 = v16;
      v17 = v15 - 3;
      if (__OFADD__(v15 - 4, 1))
        break;
      v18 = objc_msgSend(v16, sel_periods);
      sub_22CC2EA20(0, &qword_255C3CF70);
      v19 = sub_22CC65BA4();

      if (v19 >> 62)
      {
        swift_bridgeObjectRetain();
        v20 = sub_22CC65E5C();
        swift_bridgeObjectRelease();
      }
      else
      {
        v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      v21 = v20 > 0;
      if (v20 > 0)
        goto LABEL_62;

      ++v15;
      if (v17 == v3)
        goto LABEL_61;
    }
    __break(1u);
LABEL_49:
    if (v3 < 0)
      v0 = v3;
    else
      v0 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
    v5 = sub_22CC65E5C();
    swift_bridgeObjectRelease();
    v6 = -(uint64_t)v5;
    if (!__OFSUB__(0, v5))
      goto LABEL_3;
LABEL_54:
    __break(1u);
  }
LABEL_60:
  v21 = 0;
LABEL_61:
  v4 = 0;
LABEL_62:
  swift_release_n();

  return v21;
}

unint64_t SleepDaySummaryResults.sleepSampleEndDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t result;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = sub_22CC64F08();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC2D3A4();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(void **)(v1 + 8);
  if (!v10)
  {
    v19 = sub_22CC6504C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a1, 1, 1, v19);
  }
  v11 = objc_msgSend(v10, sel_periods);
  sub_22CC2EA20(0, &qword_255C3CF70);
  v12 = sub_22CC65BA4();

  if (!(v12 >> 62))
  {
    v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v13)
      goto LABEL_4;
LABEL_12:
    swift_bridgeObjectRelease();
    v20 = sub_22CC6504C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v9, 1, 1, v20);
    return sub_22CC2D3F8((uint64_t)v9, a1);
  }
  swift_bridgeObjectRetain();
  v13 = sub_22CC65E5C();
  swift_bridgeObjectRelease();
  if (!v13)
    goto LABEL_12;
LABEL_4:
  result = v13 - 1;
  if (__OFSUB__(v13, 1))
  {
    __break(1u);
    goto LABEL_15;
  }
  if ((v12 & 0xC000000000000001) != 0)
  {
LABEL_15:
    v15 = (id)MEMORY[0x22E305EF4](result, v12);
    goto LABEL_9;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v15 = *(id *)(v12 + 8 * result + 32);
LABEL_9:
    v16 = v15;
    swift_bridgeObjectRelease();
    v17 = objc_msgSend(v16, sel_dateInterval);

    sub_22CC64ECC();
    sub_22CC64ED8();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v18 = sub_22CC6504C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v9, 0, 1, v18);
    return sub_22CC2D3F8((uint64_t)v9, a1);
  }
  __break(1u);
  return result;
}

uint64_t HKSleepDaySummary.segments(_:highlightBehavior:)()
{
  void *v0;
  id v1;
  unint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = objc_msgSend(v0, sel_periods);
  sub_22CC2EA20(0, &qword_255C3CF70);
  v2 = sub_22CC65BA4();

  v3 = sub_22CC2E3E4(v2, sub_22CC2D43C);
  swift_bridgeObjectRelease();
  v4 = v3[2];
  if (v4)
  {
    swift_bridgeObjectRetain();
    v5 = 0;
    v6 = MEMORY[0x24BEE4AF8];
    do
    {
      v7 = v3[v5++ + 4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_22CC2B9A0(v7);
      swift_bridgeObjectRelease();
    }
    while (v4 != v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_22CC2CD00(uint64_t a1, id a2, uint64_t a3, void *a4, int a5)
{
  id v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;

  v9 = objc_msgSend(a2, sel_segments);
  sub_22CC2EA20(0, qword_255C3CFA0);
  v10 = sub_22CC65BA4();

  swift_bridgeObjectRetain();
  v11 = sub_22CC2F264(v10, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = a4;
  v13 = sub_22CC2F0C0(v11, v12, a5, a1);
  swift_bridgeObjectRelease();

  return v13;
}

BOOL sub_22CC2CDF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  sub_22CC65EE0();
  sub_22CC65EEC();
  v4 = sub_22CC65EF8();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(v8 + 8 * v6) == a1)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(_QWORD *)(v8 + 8 * v11);
    result = v12 == a1;
    if (v12 == a1)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_22CC2CEE0@<X0>(id *a1@<X0>, void *a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  id v19;
  id v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  BOOL v29;
  uint64_t v30;
  id v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  char *v38;
  int v39;
  id v40;

  v37 = a5;
  v36 = a4;
  v39 = a3;
  v40 = a2;
  v6 = sub_22CC6504C();
  v38 = *(char **)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v35 - v10;
  v12 = sub_22CC64F08();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v35 - v17;
  v19 = objc_msgSend(*a1, sel_dateInterval);
  sub_22CC64ECC();

  sub_22CC64EF0();
  v20 = objc_msgSend(v40, (SEL)&type metadata for SleepWidgetViewModel.AlarmState);
  sub_22CC64ECC();

  sub_22CC64EF0();
  v21 = *(void (**)(char *, uint64_t))(v13 + 8);
  v21(v16, v12);
  sub_22CC65004();
  v23 = v22;
  v24 = (void (*)(char *, uint64_t))*((_QWORD *)v38 + 1);
  v24(v9, v6);
  v24(v11, v6);
  v38 = v18;
  sub_22CC64ED8();
  v25 = objc_msgSend(v40, sel_dateInterval);
  sub_22CC64ECC();

  sub_22CC64EF0();
  v21(v16, v12);
  sub_22CC65004();
  v27 = v26;
  v24(v9, v6);
  v24(v11, v6);
  if (v39 != 2)
  {
    if (v39 == 1)
    {
      result = ((uint64_t (*)(char *, uint64_t))v21)(v38, v12);
      v29 = 1;
    }
    else
    {
      result = ((uint64_t (*)(char *, uint64_t))v21)(v38, v12);
      v29 = 0;
    }
    goto LABEL_9;
  }
  v30 = v36;
  v31 = objc_msgSend(v40, sel_periods);
  sub_22CC2EA20(0, &qword_255C3CF70);
  v32 = sub_22CC65BA4();

  if (v32 >> 62)
  {
    swift_bridgeObjectRetain();
    v33 = sub_22CC65E5C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v33 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  result = ((uint64_t (*)(char *, uint64_t))v21)(v38, v12);
  if (!__OFSUB__(v33, 1))
  {
    v29 = v33 - 1 == v30;
LABEL_9:
    v34 = v37;
    *v37 = v23;
    v34[1] = v27;
    *((_BYTE *)v34 + 16) = v29;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_22CC2D204(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x24BEE4AF8];
    v8 = v5;
    if (v5 <= 0)
    {
      v9 = (_QWORD *)MEMORY[0x24BEE4AF8];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0)
          goto LABEL_19;
        v12 = a2 + 8 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8)
          goto LABEL_19;
        sub_22CC2EA20(0, &qword_2540660F0);
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      sub_22CC2F3E0(0, &qword_254065F90);
      v9 = (_QWORD *)swift_allocObject();
      v10 = _swift_stdlib_malloc_size(v9);
      v11 = v10 - 32;
      if (v10 < 32)
        v11 = v10 - 25;
      v9[2] = v5;
      v9[3] = (2 * (v11 >> 3)) | 1;
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_22CC65E74();
  __break(1u);
  return result;
}

void sub_22CC2D3A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254065348)
  {
    sub_22CC6504C();
    v0 = sub_22CC65CF4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254065348);
  }
}

uint64_t sub_22CC2D3F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_22CC2D3A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22CC2D43C(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_22CC2CD00(a1, a2, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), *(unsigned __int8 *)(v2 + 32));
}

uint64_t sub_22CC2D448(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x24BEE4AF8];
    v8 = 2 * v5;
    if (v5 <= 0)
    {
      v9 = (_QWORD *)MEMORY[0x24BEE4AF8];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0)
          goto LABEL_19;
        v12 = a2 + 16 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8)
          goto LABEL_19;
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      sub_22CC2F3E0(0, (unint64_t *)&qword_254065EB0);
      v9 = (_QWORD *)swift_allocObject();
      v10 = _swift_stdlib_malloc_size(v9);
      v11 = v10 - 32;
      if (v10 < 32)
        v11 = v10 - 17;
      v9[2] = v5;
      v9[3] = 2 * (v11 >> 4);
      if (v4 != a3)
        goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  result = sub_22CC65E74();
  __break(1u);
  return result;
}

uint64_t sub_22CC2D5C4(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  v5 = *v2;
  sub_22CC65EE0();
  sub_22CC65EEC();
  v6 = sub_22CC65EF8();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v2;
    *v2 = 0x8000000000000000;
    sub_22CC2D984(a2, v8, isUniquelyReferenced_nonNull_native);
    *v2 = v13;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v9 = *(_QWORD *)(v5 + 48);
  if (*(_QWORD *)(v9 + 8 * v8) != a2)
  {
    v10 = ~v7;
    do
    {
      v8 = (v8 + 1) & v10;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v9 + 8 * v8) != a2);
  }
  result = 0;
  a2 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_22CC2D6E0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  sub_22CC2E9C0();
  result = sub_22CC65DB4();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      sub_22CC65EE0();
      sub_22CC65EEC();
      result = sub_22CC65EF8();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_22CC2D984(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_22CC2D6E0();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_22CC2DAD0();
      goto LABEL_14;
    }
    sub_22CC2DC60();
  }
  v8 = *v3;
  sub_22CC65EE0();
  sub_22CC65EEC();
  result = sub_22CC65EF8();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      type metadata accessor for HKCategoryValueSleepAnalysis(0);
      result = sub_22CC65EC8();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

void *sub_22CC2DAD0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_22CC2E9C0();
  v2 = *v0;
  v3 = sub_22CC65DA8();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_22CC2DC60()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  sub_22CC2E9C0();
  result = sub_22CC65DB4();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    sub_22CC65EE0();
    sub_22CC65EEC();
    result = sub_22CC65EF8();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

int64_t sub_22CC2DED4(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_22CC2DFB8(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  void *v4;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  id v13;
  char v14;
  id v15;
  void *v16;

  v6 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (sub_22CC65D6C() == *(_DWORD *)(a4 + 36))
      {
        sub_22CC65D78();
        sub_22CC2EA20(0, &qword_255C3CF78);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v4 = v16;
        swift_unknownObjectRelease();
        v8 = sub_22CC65CD0();
        v9 = -1 << *(_BYTE *)(a4 + 32);
        v6 = v8 & ~v9;
        if (((*(_QWORD *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
        {
          v10 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
          v11 = sub_22CC65CDC();

          if ((v11 & 1) == 0)
          {
            v12 = ~v9;
            do
            {
              v6 = (v6 + 1) & v12;
              if (((*(_QWORD *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
                goto LABEL_24;
              v13 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
              v14 = sub_22CC65CDC();

            }
            while ((v14 & 1) == 0);
          }

LABEL_20:
          v15 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v6);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v7 = a4;
  else
    v7 = a4 & 0xFFFFFFFFFFFFFF8;
  MEMORY[0x22E305E88](a1, a2, v7);
  sub_22CC2EA20(0, &qword_255C3CF78);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
}

uint64_t sub_22CC2E220(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_22CC2E2A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_22CC2E9C0();
    v3 = sub_22CC65DC0();
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    while (1)
    {
      v7 = *(_QWORD *)(v6 + 8 * v4);
      sub_22CC65EE0();
      sub_22CC65EEC();
      result = sub_22CC65EF8();
      v9 = -1 << *(_BYTE *)(v3 + 32);
      v10 = result & ~v9;
      v11 = v10 >> 6;
      v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
      v13 = 1 << v10;
      v14 = *(_QWORD *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(_QWORD *)(v14 + 8 * v10) == v7)
          goto LABEL_3;
        v15 = ~v9;
        while (1)
        {
          v10 = (v10 + 1) & v15;
          v11 = v10 >> 6;
          v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
          v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0)
            break;
          if (*(_QWORD *)(v14 + 8 * v10) == v7)
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
      *(_QWORD *)(v14 + 8 * v10) = v7;
      v16 = *(_QWORD *)(v3 + 16);
      v17 = __OFADD__(v16, 1);
      v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

_QWORD *sub_22CC2E3E4(unint64_t a1, uint64_t (*a2)(uint64_t, id))
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;

  if (a1 >> 62)
    goto LABEL_16;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = sub_22CC65E5C())
  {
    v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v5 = 4;
    v13 = v3;
    while (1)
    {
      v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x22E305EF4](v5 - 4, a1) : *(id *)(a1 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      v9 = a2(v5 - 4, v6);

      if (v9)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v4 = sub_22CC467EC(0, v4[2] + 1, 1, v4);
        v11 = v4[2];
        v10 = v4[3];
        if (v11 >= v10 >> 1)
          v4 = sub_22CC467EC((_QWORD *)(v10 > 1), v11 + 1, 1, v4);
        v4[2] = v11 + 1;
        v4[v11 + 4] = v9;
        v3 = v13;
      }
      ++v5;
      if (v8 == v3)
        goto LABEL_18;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
  v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_18:
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_22CC2E564(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  type metadata accessor for HKCategoryValueSleepAnalysis(0);
  sub_22CC2E978();
  result = sub_22CC65C04();
  v7 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_22CC2D5C4(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t _sSo28HKCategoryValueSleepAnalysisV0C8WidgetUIE15hk_asleepValuesShyABGvgZ_0()
{
  NSSet *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  int64_t v15;
  char v16;
  void *v17;
  void *v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  void (*v23)(char *, _QWORD);
  uint64_t v24;
  char v25[32];
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;

  v0 = HKCategoryValueSleepAnalysisAsleepValues();
  sub_22CC2EA20(0, &qword_255C3CF78);
  sub_22CC2E8A4();
  v1 = sub_22CC65BF8();

  v2 = v1 & 0xC000000000000001;
  if ((v1 & 0xC000000000000001) != 0)
  {
    v3 = sub_22CC65D84();
    if (v3)
      goto LABEL_3;
LABEL_6:
    swift_bridgeObjectRelease();
    v7 = MEMORY[0x24BEE4AF8];
LABEL_21:
    v24 = sub_22CC2E564(v7);
    swift_bridgeObjectRelease();
    return v24;
  }
  v3 = *(_QWORD *)(v1 + 16);
  if (!v3)
    goto LABEL_6;
LABEL_3:
  v29 = MEMORY[0x24BEE4AF8];
  sub_22CC08634(0, v3 & ~(v3 >> 63), 0);
  if (v2)
  {
    result = sub_22CC65D54();
    v6 = 1;
  }
  else
  {
    result = sub_22CC2E220(v1);
    v6 = v8 & 1;
  }
  v26 = result;
  v27 = v5;
  v28 = v6;
  if ((v3 & 0x8000000000000000) == 0)
  {
    do
    {
      while (1)
      {
        v15 = v26;
        v14 = v27;
        v16 = v28;
        sub_22CC2DFB8(v26, v27, v28, v1);
        v18 = v17;
        v19 = objc_msgSend(v17, sel_integerValue);

        v20 = v29;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = sub_22CC08634(0, *(_QWORD *)(v20 + 16) + 1, 1);
          v20 = v29;
        }
        v22 = *(_QWORD *)(v20 + 16);
        v21 = *(_QWORD *)(v20 + 24);
        if (v22 >= v21 >> 1)
        {
          result = sub_22CC08634(v21 > 1, v22 + 1, 1);
          v20 = v29;
        }
        *(_QWORD *)(v20 + 16) = v22 + 1;
        *(_QWORD *)(v20 + 8 * v22 + 32) = v19;
        if (v2)
          break;
        v9 = sub_22CC2DED4(v15, v14, v16, v1);
        v11 = v10;
        v13 = v12;
        sub_22CC2E96C(v15, v14, v16);
        v26 = v9;
        v27 = v11;
        v28 = v13 & 1;
        if (!--v3)
          goto LABEL_20;
      }
      if ((v16 & 1) == 0)
        goto LABEL_23;
      if (sub_22CC65D60())
        swift_isUniquelyReferenced_nonNull_native();
      sub_22CC2E8FC();
      v23 = (void (*)(char *, _QWORD))sub_22CC65C10();
      sub_22CC65D9C();
      v23(v25, 0);
      --v3;
    }
    while (v3);
LABEL_20:
    sub_22CC2E96C(v26, v27, v28);
    swift_bridgeObjectRelease();
    v7 = v29;
    goto LABEL_21;
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for SleepDaySummaryResults()
{
  return &type metadata for SleepDaySummaryResults;
}

unint64_t sub_22CC2E8A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255C3CF80;
  if (!qword_255C3CF80)
  {
    v1 = sub_22CC2EA20(255, &qword_255C3CF78);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_255C3CF80);
  }
  return result;
}

void sub_22CC2E8FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3CF88)
  {
    sub_22CC2EA20(255, &qword_255C3CF78);
    sub_22CC2E8A4();
    v0 = sub_22CC65C1C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3CF88);
  }
}

uint64_t sub_22CC2E96C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_22CC2E978()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255C3CF90;
  if (!qword_255C3CF90)
  {
    type metadata accessor for HKCategoryValueSleepAnalysis(255);
    result = MEMORY[0x22E3063F8](&unk_22CC66798, v1);
    atomic_store(result, (unint64_t *)&qword_255C3CF90);
  }
  return result;
}

void sub_22CC2E9C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3CF98)
  {
    type metadata accessor for HKCategoryValueSleepAnalysis(255);
    sub_22CC2E978();
    v0 = sub_22CC65DCC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3CF98);
  }
}

uint64_t sub_22CC2EA20(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_22CC2EA58(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  int64_t v23;
  int64_t v24;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  _QWORD *v33;
  id v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;
  int64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  int64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  unint64_t v54;
  unint64_t v55;
  int64x2_t *v56;
  uint64_t v57;
  int64x2_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;

  v4 = v3;
  v6 = a1;
  if (a1 >> 62)
    goto LABEL_74;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  v8 = MEMORY[0x24BEE4AF8];
  if (!v7)
    return MEMORY[0x24BEE4AF8];
  v68 = MEMORY[0x24BEE4AF8];
  sub_22CC08618(0, v7 & ~(v7 >> 63), 0);
  if ((v7 & 0x8000000000000000) == 0)
  {
    v9 = 0;
    result = v68;
    v61 = a3;
    v62 = v6 & 0xC000000000000001;
    v57 = v6 + 32;
    v58 = vdupq_n_s64(v8);
    v59 = v7;
    v60 = v6;
    while (1)
    {
      if (v9 == v7)
        goto LABEL_73;
      v63 = result;
      v64 = v9;
      if (!v62)
        break;
      v11 = (id)MEMORY[0x22E305EF4](v9, v6);
      if (a3)
        goto LABEL_11;
LABEL_12:
      v14 = sub_22CC2E2A8((uint64_t)&unk_24F76F428);
      v15 = objc_msgSend(v11, sel_periods);
      sub_22CC2EA20(0, &qword_255C3CF70);
      v16 = sub_22CC65BA4();

      MEMORY[0x24BDAC7A8](v17);
      v18 = v4;
      v19 = sub_22CC2E3E4(v16, (uint64_t (*)(uint64_t, id))sub_22CC2F424);
      swift_bridgeObjectRelease();
      v20 = v19[2];
      v65 = v11;
      if (v20)
      {
        v66 = v19;
        swift_bridgeObjectRetain();
        v4 = 0;
        v21 = (_QWORD *)MEMORY[0x24BEE4AF8];
        while (1)
        {
          v6 = v14;
          v22 = v66[v4 + 4];
          a3 = *(_QWORD *)(v22 + 16);
          v23 = v21[2];
          v24 = v23 + a3;
          if (__OFADD__(v23, a3))
          {
            __break(1u);
LABEL_66:
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            __break(1u);
LABEL_70:
            __break(1u);
LABEL_71:
            __break(1u);
LABEL_72:
            __break(1u);
LABEL_73:
            __break(1u);
LABEL_74:
            swift_bridgeObjectRetain();
            v7 = sub_22CC65E5C();
            swift_bridgeObjectRelease();
            goto LABEL_3;
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
          if ((_DWORD)isUniquelyReferenced_nonNull_native && v24 <= v21[3] >> 1)
          {
            if (*(_QWORD *)(v22 + 16))
              goto LABEL_25;
          }
          else
          {
            if (v23 <= v24)
              v26 = v23 + a3;
            else
              v26 = v23;
            v21 = sub_22CC46B60(isUniquelyReferenced_nonNull_native, v26, 1, v21);
            if (*(_QWORD *)(v22 + 16))
            {
LABEL_25:
              v27 = v21[2];
              if ((v21[3] >> 1) - v27 < a3)
                goto LABEL_69;
              v28 = &v21[3 * v27 + 4];
              if (v22 + 32 < (unint64_t)&v28[3 * a3] && (unint64_t)v28 < v22 + 32 + 24 * a3)
                goto LABEL_76;
              v14 = v6;
              memcpy(v28, (const void *)(v22 + 32), 24 * a3);
              if (a3)
              {
                v30 = v21[2];
                v31 = __OFADD__(v30, a3);
                v32 = v30 + a3;
                if (v31)
                  goto LABEL_71;
                v21[2] = v32;
              }
              goto LABEL_15;
            }
          }
          v14 = v6;
          if (a3)
            goto LABEL_66;
LABEL_15:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v20 == ++v4)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v33 = (_QWORD *)MEMORY[0x24BEE4AF8];
            v11 = v65;
            v4 = v18;
            goto LABEL_36;
          }
        }
      }
      swift_bridgeObjectRelease();
      v33 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v21 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_36:
      swift_bridgeObjectRelease();
      a3 = _sSo28HKCategoryValueSleepAnalysisV0C8WidgetUIE15hk_asleepValuesShyABGvgZ_0();
      v34 = objc_msgSend(v11, sel_periods);
      v35 = sub_22CC65BA4();

      MEMORY[0x24BDAC7A8](v36);
      v37 = v4;
      v38 = sub_22CC2E3E4(v35, (uint64_t (*)(uint64_t, id))sub_22CC2F424);
      swift_bridgeObjectRelease();
      v67 = v38[2];
      if (v67)
      {
        swift_bridgeObjectRetain();
        v4 = 0;
        while (1)
        {
          v6 = (uint64_t)v21;
          v39 = v33;
          v40 = v38;
          v41 = v38[v4 + 4];
          v42 = *(_QWORD *)(v41 + 16);
          v43 = v33[2];
          v44 = v43 + v42;
          if (__OFADD__(v43, v42))
            goto LABEL_67;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v45 = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
          if ((_DWORD)v45 && (v46 = v39, v44 <= v39[3] >> 1))
          {
            if (*(_QWORD *)(v41 + 16))
              goto LABEL_49;
          }
          else
          {
            if (v43 <= v44)
              v47 = v43 + v42;
            else
              v47 = v43;
            v46 = sub_22CC46B60(v45, v47, 1, v39);
            if (*(_QWORD *)(v41 + 16))
            {
LABEL_49:
              v48 = v46[2];
              if ((v46[3] >> 1) - v48 < v42)
                goto LABEL_70;
              v49 = &v46[3 * v48 + 4];
              if (v41 + 32 < (unint64_t)&v49[3 * v42] && (unint64_t)v49 < v41 + 32 + 24 * v42)
                goto LABEL_76;
              v38 = v40;
              v33 = v46;
              memcpy(v49, (const void *)(v41 + 32), 24 * v42);
              v21 = (_QWORD *)v6;
              if (v42)
              {
                v51 = v33[2];
                v31 = __OFADD__(v51, v42);
                v52 = v51 + v42;
                if (v31)
                  goto LABEL_72;
                v33[2] = v52;
              }
              goto LABEL_39;
            }
          }
          v33 = v46;
          v38 = v40;
          v21 = (_QWORD *)v6;
          if (v42)
            goto LABEL_68;
LABEL_39:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v67 == ++v4)
          {
            v53 = v33;

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v4 = v37;
            goto LABEL_60;
          }
        }
      }

      swift_bridgeObjectRelease();
      v53 = v33;
LABEL_60:
      swift_bridgeObjectRelease();
      result = v63;
      v55 = *(_QWORD *)(v63 + 16);
      v54 = *(_QWORD *)(v63 + 24);
      if (v55 >= v54 >> 1)
      {
        sub_22CC08618(v54 > 1, v55 + 1, 1);
        result = v63;
      }
      v9 = v64 + 1;
      *(_QWORD *)(result + 16) = v55 + 1;
      v56 = (int64x2_t *)(result + 48 * v55);
      v56[2].i64[0] = (uint64_t)v21;
      v56[2].i64[1] = (uint64_t)v53;
      v56[3] = v58;
      v56[4] = v58;
      v7 = v59;
      v6 = v60;
      a3 = v61;
      if (v64 + 1 == v59)
        return result;
    }
    v11 = *(id *)(v57 + 8 * v9);
    if (!a3)
      goto LABEL_12;
LABEL_11:
    sub_22CC2EA20(0, &qword_2540660F0);
    v12 = v11;
    v13 = (id)a3;
    sub_22CC65CDC();

    goto LABEL_12;
  }
  __break(1u);
LABEL_76:
  result = sub_22CC65E74();
  __break(1u);
  return result;
}

uint64_t sub_22CC2F0C0(unint64_t a1, void *a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  id v11;
  void *v12;
  __int128 v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  __int128 v18;
  id v22;
  __int128 v23;
  char v24;
  uint64_t v25;

  v5 = v4;
  if (a1 >> 62)
    goto LABEL_18;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v8 = MEMORY[0x24BEE4AF8];
    if (!v7)
      return v8;
    v25 = MEMORY[0x24BEE4AF8];
    result = sub_22CC08650(0, v7 & ~(v7 >> 63), 0);
    if (v7 < 0)
      break;
    v10 = 0;
    v8 = v25;
    while (v7 != v10)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v11 = (id)MEMORY[0x22E305EF4](v10, a1);
      else
        v11 = *(id *)(a1 + 8 * v10 + 32);
      v12 = v11;
      v22 = v11;
      sub_22CC2CEE0(&v22, a2, a3, a4, &v23);
      if (v5)
      {
        swift_release();

        return v8;
      }
      v5 = 0;

      v13 = v23;
      v14 = v24;
      v25 = v8;
      v16 = *(_QWORD *)(v8 + 16);
      v15 = *(_QWORD *)(v8 + 24);
      if (v16 >= v15 >> 1)
      {
        v18 = v23;
        sub_22CC08650(v15 > 1, v16 + 1, 1);
        v13 = v18;
        v8 = v25;
      }
      ++v10;
      *(_QWORD *)(v8 + 16) = v16 + 1;
      v17 = v8 + 24 * v16;
      *(_OWORD *)(v17 + 32) = v13;
      *(_BYTE *)(v17 + 48) = v14;
      if (v7 == v10)
        return v8;
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    v7 = sub_22CC65E5C();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_22CC2F264(unint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  unint64_t v10;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = a1;
  v14 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
    goto LABEL_16;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v12 = v3;
      v5 = 0;
      v6 = v3 & 0xC000000000000001;
      v7 = v3 & 0xFFFFFFFFFFFFFF8;
      v13 = v4;
      while (v6)
      {
        v8 = (id)MEMORY[0x22E305EF4](v5, v3);
LABEL_9:
        v9 = v8;
        v10 = v5 + 1;
        if (__OFADD__(v5, 1))
          goto LABEL_15;
        if (sub_22CC2CDF4((uint64_t)objc_msgSend(v8, sel_category), a2))
        {
          sub_22CC65E14();
          sub_22CC65E38();
          sub_22CC65E44();
          sub_22CC65E20();
          v3 = v12;
          v4 = v13;
        }
        else
        {

        }
        ++v5;
        if (v10 == v4)
          return v14;
      }
      if (v5 < *(_QWORD *)(v7 + 16))
        break;
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      v4 = sub_22CC65E5C();
      if (!v4)
        return MEMORY[0x24BEE4AF8];
    }
    v8 = *(id *)(v3 + 8 * v5 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x24BEE4AF8];
}

void sub_22CC2F3E0(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_22CC65E98();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_22CC2F428@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t *v22;
  uint64_t v24;
  uint64_t v25;

  v25 = a1;
  v2 = sub_22CC65A18();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v24 - v7;
  sub_22CC36A68(0, &qword_255C3D0E0, &qword_255C3D0E8, (uint64_t (*)(uint64_t))sub_22CC36400, &qword_255C3D128);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v24 - v10;
  sub_22CC3663C();
  v13 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v11 = sub_22CC6549C();
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 0;
  sub_22CC36D90(0, &qword_255C3D138, &qword_255C3D0E8, (uint64_t (*)(uint64_t))sub_22CC36400);
  sub_22CC2F618(v1, (uint64_t)&v11[*(int *)(v16 + 44)]);
  sub_22CC207D8((uint64_t)v8);
  sub_22CC65A00();
  v17 = sub_22CC659F4();
  v18 = *(void (**)(char *, uint64_t))(v3 + 8);
  v18(v6, v2);
  if ((v17 & 1) != 0)
    v19 = sub_22CC65820();
  else
    v19 = sub_22CC657E4();
  v20 = v19;
  v18(v8, v2);
  KeyPath = swift_getKeyPath();
  sub_22CC366E0((uint64_t)v11, (uint64_t)v15);
  v22 = (uint64_t *)&v15[*(int *)(v13 + 36)];
  *v22 = KeyPath;
  v22[1] = v20;
  sub_22CC36744((uint64_t)v11);
  return sub_22CC0DDCC((uint64_t)v15, v25, (uint64_t (*)(_QWORD))sub_22CC3663C);
}

uint64_t sub_22CC2F618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t KeyPath;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;

  v83 = a1;
  v90 = a2;
  v2 = MEMORY[0x24BDFAC10];
  sub_22CC390B0(0, &qword_255C3D120, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], MEMORY[0x24BDFAC10]);
  v88 = *(_QWORD *)(v3 - 8);
  v89 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v84 = (char *)&v74 - v4;
  sub_22CC36598(0, &qword_255C3D118, &qword_254065690, &qword_2540656C0, MEMORY[0x24BDF1948]);
  v87 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v85 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v86 = (uint64_t)&v74 - v8;
  sub_22CC082A8(0, &qword_254065E90, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v9);
  v82 = (char *)&v74 - v10;
  v11 = sub_22CC656DC();
  v80 = *(_QWORD *)(v11 - 8);
  v81 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v91 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_22CC65880();
  v76 = *(_QWORD *)(v13 - 8);
  v77 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_22CC65274();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC390B0(0, &qword_255C3D110, MEMORY[0x24BDF4108], MEMORY[0x24BDF40E8], v2);
  v21 = v20;
  v75 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v74 - v22;
  sub_22CC364B4();
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC364A0(0);
  v28 = v27;
  MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v74 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC3648C(0);
  v79 = v31;
  v32 = MEMORY[0x24BDAC7A8](v31);
  v78 = (uint64_t)&v74 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v32);
  v92 = (uint64_t)&v74 - v34;
  sub_22CC65268();
  v35 = sub_22CC65250();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  v93 = v35;
  v36 = MEMORY[0x24BDF4108];
  v37 = MEMORY[0x24BDF40E8];
  sub_22CC6576C();
  swift_release();
  v93 = v36;
  v94 = v37;
  swift_getOpaqueTypeConformance2();
  sub_22CC6579C();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v23, v21);
  v39 = v76;
  v38 = v77;
  (*(void (**)(char *, _QWORD, uint64_t))(v76 + 104))(v15, *MEMORY[0x24BDF40B0], v77);
  KeyPath = swift_getKeyPath();
  v41 = (uint64_t *)&v30[*(int *)(v28 + 36)];
  sub_22CC082A8(0, &qword_2540656A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDF40C0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
  (*(void (**)(char *, char *, uint64_t))(v39 + 16))((char *)v41 + *(int *)(v42 + 28), v15, v38);
  *v41 = KeyPath;
  sub_22CC0DE10((uint64_t)v26, (uint64_t)v30, (uint64_t (*)(_QWORD))sub_22CC364B4);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v15, v38);
  sub_22CC0DE54((uint64_t)v26, (uint64_t (*)(_QWORD))sub_22CC364B4);
  LODWORD(v77) = *MEMORY[0x24BDF1860];
  v43 = v80;
  v44 = v81;
  v76 = *(_QWORD *)(v80 + 104);
  v45 = v91;
  ((void (*)(char *))v76)(v91);
  v46 = sub_22CC6564C();
  v75 = *(_QWORD *)(*(_QWORD *)(v46 - 8) + 56);
  v47 = (uint64_t)v82;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v75)(v82, 1, 1, v46);
  sub_22CC65688();
  sub_22CC17438(v47, &qword_254065E90, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v80 = *(_QWORD *)(v43 + 8);
  ((void (*)(char *, uint64_t))v80)(v45, v44);
  sub_22CC65610();
  swift_release();
  sub_22CC65670();
  v48 = sub_22CC65694();
  swift_release();
  v49 = swift_getKeyPath();
  v50 = v78;
  sub_22CC0DE10((uint64_t)v30, v78, (uint64_t (*)(_QWORD))sub_22CC364A0);
  v51 = (uint64_t *)(v50 + *(int *)(v79 + 36));
  *v51 = v49;
  v51[1] = v48;
  sub_22CC0DE54((uint64_t)v30, (uint64_t (*)(_QWORD))sub_22CC364A0);
  sub_22CC0DDCC(v50, v92, (uint64_t (*)(_QWORD))sub_22CC3648C);
  v52 = sub_22CC65B5C();
  v54 = v53;
  type metadata accessor for HeaderView(0);
  v93 = v52;
  v94 = v54;
  swift_bridgeObjectRetain();
  sub_22CC65B68();
  swift_bridgeObjectRelease();
  sub_22CC08C70();
  v55 = sub_22CC65718();
  v57 = v56;
  v93 = v55;
  v94 = v56;
  LOBYTE(v28) = v58 & 1;
  v95 = v58 & 1;
  v96 = v59;
  v60 = v84;
  sub_22CC6576C();
  sub_22CC1BCCC(v55, v57, v28);
  swift_bridgeObjectRelease();
  v61 = v91;
  ((void (*)(char *, _QWORD, uint64_t))v76)(v91, v77, v44);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v75)(v47, 1, 1, v46);
  sub_22CC65688();
  sub_22CC17438(v47, &qword_254065E90, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  ((void (*)(char *, uint64_t))v80)(v61, v44);
  sub_22CC65610();
  swift_release();
  sub_22CC65670();
  v62 = sub_22CC65694();
  swift_release();
  v63 = swift_getKeyPath();
  v65 = v88;
  v64 = v89;
  v66 = (uint64_t)v85;
  (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v85, v60, v89);
  v67 = (uint64_t *)(v66 + *(int *)(v87 + 36));
  *v67 = v63;
  v67[1] = v62;
  (*(void (**)(char *, uint64_t))(v65 + 8))(v60, v64);
  v68 = v86;
  sub_22CC36890(v66, v86);
  v69 = v92;
  sub_22CC0DE10(v92, v50, (uint64_t (*)(_QWORD))sub_22CC3648C);
  sub_22CC368F4(v68, v66);
  v70 = v90;
  sub_22CC0DE10(v50, v90, (uint64_t (*)(_QWORD))sub_22CC3648C);
  sub_22CC36400();
  sub_22CC368F4(v66, v70 + *(int *)(v71 + 48));
  v72 = MEMORY[0x24BDF1948];
  sub_22CC36958(v68, &qword_255C3D118, &qword_254065690, &qword_2540656C0, MEMORY[0x24BDF1948]);
  sub_22CC0DE54(v69, (uint64_t (*)(_QWORD))sub_22CC3648C);
  sub_22CC36958(v66, &qword_255C3D118, &qword_254065690, &qword_2540656C0, v72);
  return sub_22CC0DE54(v50, (uint64_t (*)(_QWORD))sub_22CC3648C);
}

uint64_t sub_22CC2FE48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t result;
  uint64_t v20;
  uint64_t v21;

  v21 = a1;
  sub_22CC18FD8();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC36EF8();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC370E8(0);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_22CC654CC();
  v14 = *(_DWORD *)(v1 + *(int *)(type metadata accessor for ScheduleOccurrenceSectionView(0) + 24));
  *(_QWORD *)v7 = v13;
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = (v14 & 8) != 0;
  sub_22CC371BC(0, qword_255C3D208, &qword_255C3D1D0, (uint64_t (*)(uint64_t))sub_22CC36F90);
  sub_22CC30088(v1, &v7[*(int *)(v15 + 44)]);
  v16 = *MEMORY[0x24BDECEA8];
  v17 = sub_22CC65340();
  v18 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v4, v16, v17);
  sub_22CC07B74(&qword_254065628, v18, MEMORY[0x24BDECF78]);
  result = sub_22CC65B14();
  if ((result & 1) != 0)
  {
    sub_22CC07B74(&qword_255C3D200, (uint64_t (*)(uint64_t))sub_22CC36EF8, MEMORY[0x24BDF4700]);
    sub_22CC07B74(&qword_2540657A0, (uint64_t (*)(uint64_t))sub_22CC18FD8, MEMORY[0x24BEE30C8]);
    sub_22CC657B4();
    sub_22CC0DE54((uint64_t)v4, (uint64_t (*)(_QWORD))sub_22CC18FD8);
    sub_22CC0DE54((uint64_t)v7, (uint64_t (*)(_QWORD))sub_22CC36EF8);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(v21, v12, v9);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22CC30088@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(_QWORD);
  void (*v37)(char *, uint64_t);
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  char *v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  uint64_t v63;
  int *v64;
  uint64_t v65;
  void (*v66)(char *, _QWORD, uint64_t);
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  _BYTE *v82;
  uint64_t v83;
  int v84;
  uint64_t v85;

  v82 = a2;
  v77 = type metadata accessor for DateView(0);
  MEMORY[0x24BDAC7A8](v77);
  v76 = (uint64_t)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC37038(0, &qword_255C3D1E0, v4, sub_22CC370CC, MEMORY[0x24BEAA198]);
  v81 = v5;
  v79 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v80 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v75 = (char *)&v63 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v78 = (char *)&v63 - v10;
  v11 = (int *)type metadata accessor for ScheduleOccurrenceSectionView(0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v73 = (uint64_t)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v63 - v14;
  v16 = sub_22CC65340();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v63 - v21;
  v23 = type metadata accessor for SleepWidgetViewModel();
  v24 = MEMORY[0x24BDAC7A8](v23);
  v71 = (uint64_t)&v63 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (uint64_t)&v63 - v26;
  v28 = (int *)type metadata accessor for TimeView(0);
  v29 = MEMORY[0x24BDAC7A8](v28);
  v74 = (uint64_t)&v63 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)&v63 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v85 = (uint64_t)&v63 - v34;
  v35 = v11[6];
  v69 = v11[5];
  v70 = v27;
  v84 = *(unsigned __int8 *)(a1 + v69);
  v83 = v35;
  v72 = *(_QWORD *)(a1 + v35);
  sub_22CC0DE10(a1, v27, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetViewModel);
  v68 = a1 + v11[7];
  sub_22CC20BF0((uint64_t)v22);
  v36 = *(void (**)(_QWORD))(v17 + 104);
  v67 = *MEMORY[0x24BDECEA0];
  v66 = (void (*)(char *, _QWORD, uint64_t))v36;
  v36(v20);
  v65 = sub_22CC07B74(&qword_254065620, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDECF70]);
  LOBYTE(v27) = sub_22CC65B08();
  v37 = *(void (**)(char *, uint64_t))(v17 + 8);
  v37(v20, v16);
  v37(v22, v16);
  sub_22CC0DE10(a1, (uint64_t)v15, type metadata accessor for ScheduleOccurrenceSectionView);
  v64 = v11;
  if ((v27 & 1) != 0)
  {
    sub_22CC0DE54((uint64_t)v15, type metadata accessor for ScheduleOccurrenceSectionView);
    v38 = 0;
  }
  else
  {
    v39 = *(_QWORD *)&v15[v11[6]];
    sub_22CC0DE54((uint64_t)v15, type metadata accessor for ScheduleOccurrenceSectionView);
    v38 = (v39 & 4) == 0;
  }
  v40 = *(_QWORD *)(a1 + v83);
  sub_22CC0DDCC(v70, (uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetViewModel);
  v33[v28[5]] = v84;
  v33[v28[6]] = v38;
  *(_QWORD *)&v33[v28[7]] = v40;
  sub_22CC0DDCC((uint64_t)v33, v85, type metadata accessor for TimeView);
  v41 = v71;
  sub_22CC0DE10(a1, v71, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetViewModel);
  v42 = *(_BYTE *)(a1 + v69);
  sub_22CC20BF0((uint64_t)v22);
  v66(v20, v67, v16);
  v43 = sub_22CC65B08();
  v37(v20, v16);
  v37(v22, v16);
  v44 = v73;
  sub_22CC0DE10(a1, v73, type metadata accessor for ScheduleOccurrenceSectionView);
  if ((v43 & 1) != 0)
  {
    sub_22CC0DE54(v44, type metadata accessor for ScheduleOccurrenceSectionView);
    v45 = 0;
  }
  else
  {
    v46 = *(_QWORD *)(v44 + v64[6]);
    sub_22CC0DE54(v44, type metadata accessor for ScheduleOccurrenceSectionView);
    v45 = (v46 & 4) == 0;
  }
  v47 = *(_QWORD *)(a1 + v83);
  v48 = v76;
  sub_22CC0DDCC(v41, v76, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetViewModel);
  v49 = v77;
  *(_BYTE *)(v48 + *(int *)(v77 + 20)) = v42;
  *(_BYTE *)(v48 + *(int *)(v49 + 24)) = v45;
  *(_QWORD *)(v48 + *(int *)(v49 + 28)) = v47;
  sub_22CC370CC();
  v50 = v75;
  sub_22CC65760();
  sub_22CC0DE54(v48, type metadata accessor for DateView);
  v52 = v78;
  v51 = v79;
  v53 = v81;
  (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v78, v50, v81);
  v54 = v85;
  v55 = v74;
  sub_22CC0DE10(v85, v74, type metadata accessor for TimeView);
  v56 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
  v57 = v80;
  v56(v80, v52, v53);
  v58 = v82;
  *v82 = v84;
  *((_QWORD *)v58 + 1) = v72;
  sub_22CC36F90();
  v60 = v59;
  sub_22CC0DE10(v55, (uint64_t)&v58[*(int *)(v59 + 48)], type metadata accessor for TimeView);
  v56(&v58[*(int *)(v60 + 64)], v57, v53);
  v61 = *(void (**)(char *, uint64_t))(v51 + 8);
  v61(v52, v53);
  sub_22CC0DE54(v54, type metadata accessor for TimeView);
  v61(v57, v53);
  return sub_22CC0DE54(v55, type metadata accessor for TimeView);
}

_QWORD *sub_22CC30698(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_22CC65A18();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = a3[5];
    v10 = a3[6];
    v11 = (_QWORD *)((char *)a1 + v9);
    v12 = (_QWORD *)((char *)a2 + v9);
    v13 = v12[1];
    *v11 = *v12;
    v11[1] = v13;
    *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
    v14 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *(_QWORD *)((char *)a1 + v14) = *(_QWORD *)((char *)a2 + v14);
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *sub_22CC307B0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_22CC65A18();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)((char *)a1 + v7);
  v10 = (_QWORD *)((char *)a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
  v12 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_22CC30898(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t (*v6)(uint64_t);
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;

  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0];
    v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_22CC17438((uint64_t)a1, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
    sub_22CC082A8(0, &qword_2540665B0, v6, v7);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_22CC65A18();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v9 = a3[5];
  v10 = (_QWORD *)((char *)a1 + v9);
  v11 = (_QWORD *)((char *)a2 + v9);
  *v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  return a1;
}

char *sub_22CC309CC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
  v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_22CC65A18();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  v9 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  a1[v9] = a2[v9];
  v10 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  *(_QWORD *)&a1[v10] = *(_QWORD *)&a2[v10];
  return a1;
}

char *sub_22CC30AA4(char *a1, char *a2, int *a3)
{
  uint64_t (*v6)(uint64_t);
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0];
    v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_22CC17438((uint64_t)a1, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
    sub_22CC082A8(0, &qword_2540665B0, v6, v7);
    v9 = v8;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_22CC65A18();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  v11 = a3[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v15 = *(_QWORD *)v13;
  v14 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v12 = v15;
  *((_QWORD *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  v16 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  a1[v16] = a2[v16];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  return a1;
}

uint64_t sub_22CC30BC0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC30BD0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for BedTitleView(uint64_t a1)
{
  return sub_22CC0D950(a1, qword_255C3D000);
}

void sub_22CC30BF4()
{
  unint64_t v0;

  sub_22CC082A8(319, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

_QWORD *sub_22CC30C98(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  int *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  void *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  int *v34;
  void (*v35)(char *, uint64_t, uint64_t);
  void *v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  char *v41;
  char *v42;
  unsigned int (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  int *v59;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v7 = (int *)type metadata accessor for SleepWidgetViewModel();
    v8 = v7[5];
    v9 = (char *)v4 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_22CC64F20();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    if (v13(v10, 1, v11))
    {
      sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = v7[6];
    v17 = (char *)v4 + v16;
    v18 = (char *)a2 + v16;
    if (v13((char *)a2 + v16, 1, v11))
    {
      sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v18, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
    }
    *((_BYTE *)v4 + v7[7]) = *((_BYTE *)a2 + v7[7]);
    v20 = v7[8];
    v21 = (char *)v4 + v20;
    v22 = (uint64_t)a2 + v20;
    v23 = sub_22CC6504C();
    v24 = *(_QWORD *)(v23 - 8);
    v25 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
    v25(v21, v22, v23);
    v26 = v7[9];
    v27 = *(void **)((char *)a2 + v26);
    *(_QWORD *)((char *)v4 + v26) = v27;
    v28 = v7[10];
    v29 = (_QWORD *)((char *)v4 + v28);
    v30 = (uint64_t)a2 + v28;
    v31 = *(uint64_t *)((char *)a2 + v28);
    v32 = v27;
    if (v31)
    {
      v59 = v7;
      v33 = v24;
      v34 = v6;
      v35 = v25;
      v36 = *(void **)(v30 + 8);
      v37 = *(void **)(v30 + 16);
      *v29 = v31;
      v29[1] = v36;
      v29[2] = v37;
      swift_bridgeObjectRetain();
      v38 = v36;
      v25 = v35;
      v6 = v34;
      v24 = v33;
      v7 = v59;
      v39 = v37;
    }
    else
    {
      *(_OWORD *)v29 = *(_OWORD *)v30;
      v29[2] = *(_QWORD *)(v30 + 16);
    }
    v40 = v7[11];
    v41 = (char *)v4 + v40;
    v42 = (char *)a2 + v40;
    v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
    if (v43((char *)a2 + v40, 1, v23))
    {
      sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      v25(v41, (uint64_t)v42, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v41, 0, 1, v23);
    }
    v45 = v7[12];
    v46 = (char *)v4 + v45;
    v47 = (char *)a2 + v45;
    if (v43((char *)a2 + v45, 1, v23))
    {
      sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      v25(v46, (uint64_t)v47, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v46, 0, 1, v23);
    }
    v49 = v7[13];
    v50 = (char *)v4 + v49;
    v51 = (char *)a2 + v49;
    if (v43((char *)a2 + v49, 1, v23))
    {
      sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      v25(v50, (uint64_t)v51, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v50, 0, 1, v23);
    }
    v53 = v6[6];
    *((_BYTE *)v4 + v6[5]) = *((_BYTE *)a2 + v6[5]);
    *(_QWORD *)((char *)v4 + v53) = *(uint64_t *)((char *)a2 + v53);
    v54 = v6[7];
    v55 = (_QWORD *)((char *)v4 + v54);
    v56 = (uint64_t *)((char *)a2 + v54);
    sub_22CC082A8(0, &qword_254065610, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v57 = sub_22CC65340();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
    }
    else
    {
      *v55 = *v56;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_22CC31124(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = (int *)type metadata accessor for SleepWidgetViewModel();
  v5 = a1 + v4[5];
  v6 = sub_22CC64F20();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  v9 = a1 + v4[6];
  if (!v8(v9, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v9, v6);
  v10 = a1 + v4[8];
  v11 = sub_22CC6504C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v13(v10, v11);

  v14 = a1 + v4[10];
  if (*(_QWORD *)v14)
  {
    swift_bridgeObjectRelease();

  }
  v15 = a1 + v4[11];
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (!v16(v15, 1, v11))
    v13(v15, v11);
  v17 = a1 + v4[12];
  if (!v16(v17, 1, v11))
    v13(v17, v11);
  v18 = a1 + v4[13];
  if (!v16(v18, 1, v11))
    v13(v18, v11);
  v19 = a1 + *(int *)(a2 + 28);
  sub_22CC082A8(0, &qword_254065610, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v20 = sub_22CC65340();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
}

uint64_t sub_22CC31318(uint64_t a1, uint64_t a2, int *a3)
{
  int *v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(void *, const void *, uint64_t);
  uint64_t v23;
  void *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  void *v35;
  const void *v36;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  void *v40;
  const void *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  const void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = (int *)type metadata accessor for SleepWidgetViewModel();
  v6 = v5[5];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_22CC64F20();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = v5[6];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  if (v11((const void *)(a2 + v13), 1, v9))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v14, v15, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  *(_BYTE *)(a1 + v5[7]) = *(_BYTE *)(a2 + v5[7]);
  v17 = v5[8];
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  v20 = sub_22CC6504C();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(void (**)(void *, const void *, uint64_t))(v21 + 16);
  v22(v18, v19, v20);
  v23 = v5[9];
  v24 = *(void **)(a2 + v23);
  *(_QWORD *)(a1 + v23) = v24;
  v25 = v5[10];
  v26 = (_QWORD *)(a1 + v25);
  v27 = a2 + v25;
  v28 = *(_QWORD *)(a2 + v25);
  v29 = v24;
  if (v28)
  {
    v30 = *(void **)(v27 + 8);
    v31 = *(void **)(v27 + 16);
    *v26 = v28;
    v26[1] = v30;
    v26[2] = v31;
    swift_bridgeObjectRetain();
    v32 = v30;
    v33 = v31;
  }
  else
  {
    *(_OWORD *)v26 = *(_OWORD *)v27;
    v26[2] = *(_QWORD *)(v27 + 16);
  }
  v34 = v5[11];
  v35 = (void *)(a1 + v34);
  v36 = (const void *)(a2 + v34);
  v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  if (v37(a2 + v34, 1, v20))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    v22(v35, v36, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v35, 0, 1, v20);
  }
  v39 = v5[12];
  v40 = (void *)(a1 + v39);
  v41 = (const void *)(a2 + v39);
  if (v37(a2 + v39, 1, v20))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    v22(v40, v41, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v40, 0, 1, v20);
  }
  v43 = v5[13];
  v44 = (void *)(a1 + v43);
  v45 = (const void *)(a2 + v43);
  if (v37(a2 + v43, 1, v20))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    v22(v44, v45, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v44, 0, 1, v20);
  }
  v47 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v47) = *(_QWORD *)(a2 + v47);
  v48 = a3[7];
  v49 = (_QWORD *)(a1 + v48);
  v50 = (_QWORD *)(a2 + v48);
  sub_22CC082A8(0, &qword_254065610, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v51 = sub_22CC65340();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
  }
  else
  {
    *v49 = *v50;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_22CC31754(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char *v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  _QWORD *v33;
  __int128 *v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  void *v42;
  void *v43;
  id v44;
  id v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  void *v49;
  char *v50;
  uint64_t (*v51)(uint64_t, uint64_t, uint64_t);
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  char *v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  char *v63;
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t (*v70)(uint64_t);
  uint64_t (*v71)(uint64_t, uint64_t);
  uint64_t v72;

  v5 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v5;
  v6 = (int *)type metadata accessor for SleepWidgetViewModel();
  v7 = v6[5];
  v8 = (void *)(a1 + v7);
  v9 = (char *)a2 + v7;
  v10 = sub_22CC64F20();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  v16 = v6[6];
  v17 = (void *)(a1 + v16);
  v18 = (char *)a2 + v16;
  v19 = v12((void *)(a1 + v16), 1, v10);
  v20 = v12(v18, 1, v10);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v17, v18, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v17, v10);
LABEL_12:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, char *, uint64_t))(v11 + 24))(v17, v18, v10);
LABEL_13:
  *(_BYTE *)(a1 + v6[7]) = *((_BYTE *)a2 + v6[7]);
  v22 = v6[8];
  v23 = a1 + v22;
  v24 = (uint64_t)a2 + v22;
  v25 = sub_22CC6504C();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 24);
  v27(v23, v24, v25);
  v28 = v6[9];
  v29 = *(void **)((char *)a2 + v28);
  v30 = *(void **)(a1 + v28);
  *(_QWORD *)(a1 + v28) = v29;
  v31 = v29;

  v32 = v6[10];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (__int128 *)((char *)a2 + v32);
  v35 = *(uint64_t *)((char *)a2 + v32);
  if (*(_QWORD *)(a1 + v32))
  {
    if (v35)
    {
      *v33 = v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v36 = (void *)v33[1];
      v37 = (void *)*((_QWORD *)v34 + 1);
      v33[1] = v37;
      v38 = v37;

      v39 = (void *)v33[2];
      v40 = (void *)*((_QWORD *)v34 + 2);
      v33[2] = v40;
      v41 = v40;

    }
    else
    {
      sub_22CC06744(a1 + v32);
      v46 = *((_QWORD *)v34 + 2);
      *(_OWORD *)v33 = *v34;
      v33[2] = v46;
    }
  }
  else if (v35)
  {
    *v33 = v35;
    v42 = (void *)*((_QWORD *)v34 + 1);
    v33[1] = v42;
    v43 = (void *)*((_QWORD *)v34 + 2);
    v33[2] = v43;
    swift_bridgeObjectRetain();
    v44 = v42;
    v45 = v43;
  }
  else
  {
    v47 = *v34;
    v33[2] = *((_QWORD *)v34 + 2);
    *(_OWORD *)v33 = v47;
  }
  v48 = v6[11];
  v49 = (void *)(a1 + v48);
  v50 = (char *)a2 + v48;
  v51 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  v52 = v51(a1 + v48, 1, v25);
  v53 = v51((uint64_t)v50, 1, v25);
  if (v52)
  {
    if (!v53)
    {
      (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v49, v50, v25);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v49, 0, 1, v25);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  if (v53)
  {
    (*(void (**)(void *, uint64_t))(v26 + 8))(v49, v25);
LABEL_27:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    goto LABEL_28;
  }
  v27((uint64_t)v49, (uint64_t)v50, v25);
LABEL_28:
  v55 = v6[12];
  v56 = (void *)(a1 + v55);
  v57 = (char *)a2 + v55;
  v58 = v51(a1 + v55, 1, v25);
  v59 = v51((uint64_t)v57, 1, v25);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v56, v57, v25);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v56, 0, 1, v25);
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  if (v59)
  {
    (*(void (**)(void *, uint64_t))(v26 + 8))(v56, v25);
LABEL_33:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_34;
  }
  v27((uint64_t)v56, (uint64_t)v57, v25);
LABEL_34:
  v61 = v6[13];
  v62 = (void *)(a1 + v61);
  v63 = (char *)a2 + v61;
  v64 = v51(a1 + v61, 1, v25);
  v65 = v51((uint64_t)v63, 1, v25);
  if (v64)
  {
    if (!v65)
    {
      (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v62, v63, v25);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v62, 0, 1, v25);
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  if (v65)
  {
    (*(void (**)(void *, uint64_t))(v26 + 8))(v62, v25);
LABEL_39:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    goto LABEL_40;
  }
  v27((uint64_t)v62, (uint64_t)v63, v25);
LABEL_40:
  *(_BYTE *)(a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  *(_QWORD *)(a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
  if ((uint64_t *)a1 != a2)
  {
    v67 = a3[7];
    v68 = (_QWORD *)(a1 + v67);
    v69 = (uint64_t *)((char *)a2 + v67);
    v70 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
    v71 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_22CC17438(a1 + v67, &qword_254065610, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDEB560]);
    sub_22CC082A8(0, &qword_254065610, v70, v71);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v72 = sub_22CC65340();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(v68, v69, v72);
    }
    else
    {
      *v68 = *v69;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_22CC31D80(uint64_t a1, uint64_t a2, int *a3)
{
  int *v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(void *, const void *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const void *v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  const void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = (int *)type metadata accessor for SleepWidgetViewModel();
  v7 = v6[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_22CC64F20();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = v6[6];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  if (v12((const void *)(a2 + v14), 1, v10))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v15, v16, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  *(_BYTE *)(a1 + v6[7]) = *(_BYTE *)(a2 + v6[7]);
  v18 = v6[8];
  v19 = (void *)(a1 + v18);
  v20 = (const void *)(a2 + v18);
  v21 = sub_22CC6504C();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(void (**)(void *, const void *, uint64_t))(v22 + 32);
  v23(v19, v20, v21);
  *(_QWORD *)(a1 + v6[9]) = *(_QWORD *)(a2 + v6[9]);
  v24 = v6[10];
  v25 = a1 + v24;
  v26 = a2 + v24;
  *(_QWORD *)(v25 + 16) = *(_QWORD *)(v26 + 16);
  *(_OWORD *)v25 = *(_OWORD *)v26;
  v27 = v6[11];
  v28 = (void *)(a1 + v27);
  v29 = (const void *)(a2 + v27);
  v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
  if (v30(a2 + v27, 1, v21))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    v23(v28, v29, v21);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v28, 0, 1, v21);
  }
  v32 = v6[12];
  v33 = (void *)(a1 + v32);
  v34 = (const void *)(a2 + v32);
  if (v30(a2 + v32, 1, v21))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    v23(v33, v34, v21);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v33, 0, 1, v21);
  }
  v36 = v6[13];
  v37 = (void *)(a1 + v36);
  v38 = (const void *)(a2 + v36);
  if (v30(a2 + v36, 1, v21))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    v23(v37, v38, v21);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v37, 0, 1, v21);
  }
  v40 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v40) = *(_QWORD *)(a2 + v40);
  v41 = a3[7];
  v42 = (void *)(a1 + v41);
  v43 = (const void *)(a2 + v41);
  sub_22CC082A8(0, &qword_254065610, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDEB560]);
  v45 = v44;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v46 = sub_22CC65340();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v42, v43, v46);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  return a1;
}

uint64_t sub_22CC32188(uint64_t a1, uint64_t a2, int *a3)
{
  int *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  void *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  void *v35;
  const void *v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t);
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  const void *v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  const void *v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  const void *v56;
  uint64_t (*v57)(uint64_t);
  uint64_t (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = (int *)type metadata accessor for SleepWidgetViewModel();
  v6 = v5[5];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_22CC64F20();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  v15 = v5[6];
  v16 = (void *)(a1 + v15);
  v17 = (void *)(a2 + v15);
  v18 = v11((void *)(a1 + v15), 1, v9);
  v19 = v11(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v16, v17, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v16, v9);
LABEL_12:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v16, v17, v9);
LABEL_13:
  *(_BYTE *)(a1 + v5[7]) = *(_BYTE *)(a2 + v5[7]);
  v21 = v5[8];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = sub_22CC6504C();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 40);
  v26(v22, v23, v24);
  v27 = v5[9];
  v28 = *(void **)(a1 + v27);
  *(_QWORD *)(a1 + v27) = *(_QWORD *)(a2 + v27);

  v29 = v5[10];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (_QWORD *)(a2 + v29);
  if (*(_QWORD *)(a1 + v29))
  {
    if (*v31)
    {
      *v30 = *v31;
      swift_bridgeObjectRelease();
      v32 = (void *)v30[1];
      v30[1] = v31[1];

      v33 = (void *)v30[2];
      v30[2] = v31[2];

      goto LABEL_18;
    }
    sub_22CC06744((uint64_t)v30);
  }
  *(_OWORD *)v30 = *(_OWORD *)v31;
  v30[2] = v31[2];
LABEL_18:
  v34 = v5[11];
  v35 = (void *)(a1 + v34);
  v36 = (const void *)(a2 + v34);
  v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  v38 = v37(a1 + v34, 1, v24);
  v39 = v37((uint64_t)v36, 1, v24);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(void *, const void *, uint64_t))(v25 + 32))(v35, v36, v24);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v35, 0, 1, v24);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v39)
  {
    (*(void (**)(void *, uint64_t))(v25 + 8))(v35, v24);
LABEL_23:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    goto LABEL_24;
  }
  v26((uint64_t)v35, (uint64_t)v36, v24);
LABEL_24:
  v41 = v5[12];
  v42 = (void *)(a1 + v41);
  v43 = (const void *)(a2 + v41);
  v44 = v37(a1 + v41, 1, v24);
  v45 = v37((uint64_t)v43, 1, v24);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(void *, const void *, uint64_t))(v25 + 32))(v42, v43, v24);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v42, 0, 1, v24);
      goto LABEL_30;
    }
    goto LABEL_29;
  }
  if (v45)
  {
    (*(void (**)(void *, uint64_t))(v25 + 8))(v42, v24);
LABEL_29:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    goto LABEL_30;
  }
  v26((uint64_t)v42, (uint64_t)v43, v24);
LABEL_30:
  v47 = v5[13];
  v48 = (void *)(a1 + v47);
  v49 = (const void *)(a2 + v47);
  v50 = v37(a1 + v47, 1, v24);
  v51 = v37((uint64_t)v49, 1, v24);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(void *, const void *, uint64_t))(v25 + 32))(v48, v49, v24);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v48, 0, 1, v24);
      goto LABEL_36;
    }
    goto LABEL_35;
  }
  if (v51)
  {
    (*(void (**)(void *, uint64_t))(v25 + 8))(v48, v24);
LABEL_35:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    goto LABEL_36;
  }
  v26((uint64_t)v48, (uint64_t)v49, v24);
LABEL_36:
  v53 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v53) = *(_QWORD *)(a2 + v53);
  if (a1 != a2)
  {
    v54 = a3[7];
    v55 = (void *)(a1 + v54);
    v56 = (const void *)(a2 + v54);
    v57 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
    v58 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_22CC17438(a1 + v54, &qword_254065610, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDEB560]);
    sub_22CC082A8(0, &qword_254065610, v57, v58);
    v60 = v59;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v61 = sub_22CC65340();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v61 - 8) + 32))(v55, v56, v61);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_22CC32764()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC32770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v9;
  unsigned int v10;
  uint64_t v11;

  v6 = type metadata accessor for SleepWidgetViewModel();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 252)
  {
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) <= 3u)
      v9 = 3;
    else
      v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    v10 = v9 - 3;
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) >= 3u)
      return v10;
    else
      return 0;
  }
  else
  {
    sub_22CC082A8(0, &qword_254065618, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDEB580]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(a1 + *(int *)(a3 + 28), a2, v11);
  }
}

uint64_t sub_22CC32834()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC32840(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = type metadata accessor for SleepWidgetViewModel();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 252)
    {
      *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 3;
      return result;
    }
    sub_22CC082A8(0, &qword_254065618, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDEB580]);
    v10 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for ScheduleOccurrenceSectionView(uint64_t a1)
{
  return sub_22CC0D950(a1, qword_255C3D0A0);
}

void sub_22CC3290C()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for SleepWidgetViewModel();
  if (v0 <= 0x3F)
  {
    sub_22CC082A8(319, &qword_254065610, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_22CC329C0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_22CC65A18();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = *(int *)(a3 + 20);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_22CC32AB8(uint64_t a1)
{
  uint64_t v2;

  sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_22CC65A18();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

_QWORD *sub_22CC32B40(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_22CC65A18();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_22CC32C0C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t (*v6)(uint64_t);
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;

  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0];
    v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_22CC17438((uint64_t)a1, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
    sub_22CC082A8(0, &qword_2540665B0, v6, v7);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_22CC65A18();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v9 = *(int *)(a3 + 20);
  v10 = (_QWORD *)((char *)a1 + v9);
  v11 = (_QWORD *)((char *)a2 + v9);
  *v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_22CC32D1C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
  v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_22CC65A18();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_22CC32DD8(char *a1, char *a2, uint64_t a3)
{
  uint64_t (*v6)(uint64_t);
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0];
    v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_22CC17438((uint64_t)a1, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
    sub_22CC082A8(0, &qword_2540665B0, v6, v7);
    v9 = v8;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_22CC65A18();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  v11 = *(int *)(a3 + 20);
  v12 = &a1[v11];
  v13 = &a2[v11];
  v15 = *(_QWORD *)v13;
  v14 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v12 = v15;
  *((_QWORD *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22CC32ED4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  sub_22CC082A8(0, qword_255C3CAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB580]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_22CC32F7C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  sub_22CC082A8(0, qword_255C3CAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB580]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, v8);
  else
    *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
}

uint64_t type metadata accessor for HeaderView(uint64_t a1)
{
  return sub_22CC0D950(a1, (uint64_t *)&unk_2540665A0);
}

void sub_22CC33034()
{
  unint64_t v0;

  sub_22CC082A8(319, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_22CC330BC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22CC330CC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22CC330DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_22CC08EE4();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_22CC33118@<X0>(uint64_t a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t KeyPath;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v43[2];
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;

  v50 = a1;
  sub_22CC390B0(0, &qword_255C3D120, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], MEMORY[0x24BDFAC10]);
  v45 = *(_QWORD *)(v2 - 8);
  v46 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v44 = (char *)v43 - v3;
  sub_22CC36598(0, &qword_255C3D460, (unint64_t *)&qword_2540656B8, &qword_2540656E0, MEMORY[0x24BEE1768]);
  v5 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v43 - v6;
  sub_22CC396C0();
  MEMORY[0x24BDAC7A8](v8);
  v47 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v1;
  v11 = *((_QWORD *)v1 + 1);
  v51 = *v1;
  if ((v11 & 4) != 0)
  {
    LOBYTE(v52) = v10;
    if ((v11 & 8) != 0)
    {
      v12 = sub_22CC523BC();
      v14 = 1;
    }
    else
    {
      v12 = sub_22CC52484();
      v14 = 0;
    }
  }
  else
  {
    LOBYTE(v52) = v10;
    v12 = sub_22CC5254C();
    v14 = (v11 >> 3) & 1;
  }
  v43[0] = v11 & 4;
  v52 = v12;
  v53 = v13;
  sub_22CC08C70();
  v15 = sub_22CC65718();
  v17 = v16;
  v19 = v18;
  v48 = v5;
  v49 = v7;
  v43[1] = v14;
  if ((_DWORD)v14)
  {
    if (v51 == 2)
      sub_22CC65838();
    else
      sub_22CC657FC();
  }
  else if ((v11 & 2) != 0)
  {
    sub_22CC65820();
  }
  else
  {
    sub_22CC65844();
  }
  v20 = sub_22CC656F4();
  v22 = v21;
  v24 = v23;
  swift_release();
  sub_22CC1BCCC(v15, v17, v19 & 1);
  swift_bridgeObjectRelease();
  sub_22CC33578(v11);
  v25 = sub_22CC65700();
  v27 = v26;
  v29 = v28;
  v31 = v30;
  swift_release();
  sub_22CC1BCCC(v20, v22, v24 & 1);
  swift_bridgeObjectRelease();
  v52 = v25;
  v53 = v27;
  v54 = v29 & 1;
  v55 = v31;
  v32 = v44;
  sub_22CC6576C();
  sub_22CC1BCCC(v25, v27, v29 & 1);
  swift_bridgeObjectRelease();
  v33 = v43[0] >> 2;
  KeyPath = swift_getKeyPath();
  v36 = v45;
  v35 = v46;
  v37 = (uint64_t)v49;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v49, v32, v46);
  v38 = v37 + *(int *)(v48 + 36);
  *(_QWORD *)v38 = KeyPath;
  *(_QWORD *)(v38 + 8) = v33;
  *(_BYTE *)(v38 + 16) = 0;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v32, v35);
  if (qword_254066798 != -1)
    swift_once();
  v40 = qword_254067968;
  v39 = qword_254067970;
  v52 = 46;
  v53 = 0xE100000000000000;
  sub_22CC65B68();
  swift_bridgeObjectRelease();
  sub_22CC65B68();
  v52 = v40;
  v53 = v39;
  swift_bridgeObjectRetain();
  sub_22CC65B68();
  swift_bridgeObjectRelease();
  sub_22CC39744();
  v41 = (uint64_t)v47;
  sub_22CC657CC();
  swift_bridgeObjectRelease();
  sub_22CC36958(v37, &qword_255C3D460, (unint64_t *)&qword_2540656B8, &qword_2540656E0, MEMORY[0x24BEE1768]);
  return sub_22CC0DDCC(v41, v50, (uint64_t (*)(_QWORD))sub_22CC396C0);
}

uint64_t sub_22CC33578(char a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  sub_22CC082A8(0, &qword_254065E90, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v16 - v3;
  v5 = sub_22CC656DC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 8) != 0)
  {
    sub_22CC656D0();
    sub_22CC65670();
    v15 = sub_22CC65694();
    swift_release();
    return v15;
  }
  else if ((a1 & 4) != 0)
  {
    return sub_22CC354B4(a1);
  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BDF18C8], v5);
    v9 = *MEMORY[0x24BDF1660];
    v10 = sub_22CC6564C();
    v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1678];
    v12 = *(_QWORD *)(v10 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 104))(v4, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v4, 0, 1, v10);
    sub_22CC65670();
    v13 = sub_22CC65688();
    sub_22CC17438((uint64_t)v4, &qword_254065E90, v11, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return v13;
  }
}

uint64_t sub_22CC3373C()
{
  uint64_t v0;

  if (qword_254066798 != -1)
    swift_once();
  v0 = qword_254067968;
  sub_22CC65DD8();
  swift_bridgeObjectRelease();
  type metadata accessor for TimeView(0);
  sub_22CC65B68();
  swift_bridgeObjectRelease();
  sub_22CC65B68();
  swift_bridgeObjectRetain();
  sub_22CC65B68();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_22CC33874()
{
  uint64_t v0;

  if (qword_254066798 != -1)
    swift_once();
  v0 = qword_254067968;
  type metadata accessor for TimeView(0);
  sub_22CC65B68();
  swift_bridgeObjectRelease();
  sub_22CC65B68();
  swift_bridgeObjectRetain();
  sub_22CC65B68();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_22CC33984@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  int *v32;
  uint64_t v33;
  int v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(void);
  _QWORD v65[3];
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char v85;
  char v86[9];

  v2 = v1;
  v83 = a1;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF380];
  sub_22CC393E8(0, &qword_255C3D410, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF380]);
  v81 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v82 = (uint64_t)v65 - v5;
  sub_22CC3954C(0, &qword_255C3D438, v3);
  v72 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v75 = (uint64_t)v65 - v7;
  sub_22CC082A8(0, &qword_255C3D420, (uint64_t (*)(uint64_t))sub_22CC39460, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
  v73 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v74 = (uint64_t)v65 - v9;
  v10 = sub_22CC64FB0();
  MEMORY[0x24BDAC7A8](v10);
  v68 = (char *)v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TimeView.TimeText(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC394C0(0);
  v80 = v15;
  v16 = MEMORY[0x24BDAC7A8](v15);
  v69 = (uint64_t)v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v70 = (char *)v65 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v76 = (char *)v65 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v77 = (uint64_t)v65 - v22;
  sub_22CC3954C(0, &qword_255C3D418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
  v78 = v23;
  MEMORY[0x24BDAC7A8](v23);
  v71 = (char *)v65 - v24;
  v25 = sub_22CC6522C();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)v65 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)v65 - v30;
  v32 = (int *)type metadata accessor for TimeView(0);
  v33 = v32[5];
  v86[0] = *(_BYTE *)(v1 + v33);
  sub_22CC529C4(v86);
  v34 = *(unsigned __int8 *)(v1 + v32[6]);
  v35 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
  v84 = v31;
  v35(v29, v31, v25);
  v79 = v25;
  if (v34 != 1)
  {
    v53 = v25;
    v54 = *(void (**)(char *, uint64_t))(v26 + 8);
    v54(v29, v53);
LABEL_8:
    v85 = *(_BYTE *)(v2 + v33);
    v55 = *(_QWORD *)(v2 + v32[7]);
    SleepWidgetViewModel.scheduleOccurrenceTimeAttributedString(occurrence:isCondensed:)(&v85, (v55 & 4) != 0, (uint64_t)v14);
    *(_QWORD *)&v14[*(int *)(v12 + 20)] = v55;
    sub_22CC33874();
    sub_22CC395C0();
    v56 = (uint64_t)v76;
    sub_22CC657CC();
    swift_bridgeObjectRelease();
    sub_22CC0DE54((uint64_t)v14, type metadata accessor for TimeView.TimeText);
    v57 = v77;
    sub_22CC0DDCC(v56, v77, (uint64_t (*)(_QWORD))sub_22CC394C0);
    sub_22CC0DE10(v57, v82, (uint64_t (*)(_QWORD))sub_22CC394C0);
    swift_storeEnumTagMultiPayload();
    sub_22CC395DC();
    sub_22CC28B94(&qword_255C3D458, (uint64_t (*)(uint64_t))sub_22CC394C0, sub_22CC395C0, sub_22CC28CD4);
    sub_22CC65520();
    sub_22CC0DE54(v57, (uint64_t (*)(_QWORD))sub_22CC394C0);
    v58 = v79;
    v38 = v84;
    return ((uint64_t (*)(char *, uint64_t))v54)(v38, v58);
  }
  sub_22CC65208();
  v37 = v36;
  v67 = *(void (**)(char *, uint64_t))(v26 + 8);
  v67(v29, v25);
  swift_bridgeObjectRelease();
  if (!v37)
  {
    v54 = v67;
    goto LABEL_8;
  }
  v38 = v84;
  result = sub_22CC65208();
  if (v40)
  {
    v41 = v40;
    v66 = result;
    if ((sub_22CC651FC() & 1) != 0)
    {
      v42 = v32[7];
      v43 = *(_QWORD *)(v2 + v42);
      sub_22CC64FA4();
      sub_22CC64F68();
      *(_QWORD *)&v14[*(int *)(v12 + 20)] = v43;
      sub_22CC3373C();
      v66 = sub_22CC395C0();
      v44 = (uint64_t)v76;
      sub_22CC657CC();
      swift_bridgeObjectRelease();
      sub_22CC0DE54((uint64_t)v14, type metadata accessor for TimeView.TimeText);
      v45 = v77;
      sub_22CC0DDCC(v44, v77, (uint64_t (*)(_QWORD))sub_22CC394C0);
      sub_22CC65220();
      v46 = *(_QWORD *)(v2 + v42);
      sub_22CC64FA4();
      v38 = v84;
      sub_22CC64F68();
      *(_QWORD *)&v14[*(int *)(v12 + 20)] = v46;
      sub_22CC33874();
      v47 = (uint64_t)v70;
      v48 = v44;
      sub_22CC657CC();
      v49 = v45;
      swift_bridgeObjectRelease();
      sub_22CC0DE54((uint64_t)v14, type metadata accessor for TimeView.TimeText);
      sub_22CC0DDCC(v47, v44, (uint64_t (*)(_QWORD))sub_22CC394C0);
      sub_22CC0DE10(v45, v47, (uint64_t (*)(_QWORD))sub_22CC394C0);
    }
    else
    {
      sub_22CC65220();
      v59 = v32[7];
      v60 = *(_QWORD *)(v2 + v59);
      v65[2] = v41;
      sub_22CC64FA4();
      sub_22CC64F68();
      *(_QWORD *)&v14[*(int *)(v12 + 20)] = v60;
      sub_22CC33874();
      v65[1] = sub_22CC395C0();
      v44 = (uint64_t)v76;
      sub_22CC657CC();
      swift_bridgeObjectRelease();
      sub_22CC0DE54((uint64_t)v14, type metadata accessor for TimeView.TimeText);
      v61 = v77;
      sub_22CC0DDCC(v44, v77, (uint64_t (*)(_QWORD))sub_22CC394C0);
      v62 = *(_QWORD *)(v2 + v59);
      sub_22CC64FA4();
      sub_22CC64F68();
      *(_QWORD *)&v14[*(int *)(v12 + 20)] = v62;
      sub_22CC3373C();
      v47 = (uint64_t)v70;
      v48 = v44;
      sub_22CC657CC();
      v49 = v61;
      swift_bridgeObjectRelease();
      sub_22CC0DE54((uint64_t)v14, type metadata accessor for TimeView.TimeText);
      sub_22CC0DDCC(v47, v44, (uint64_t (*)(_QWORD))sub_22CC394C0);
      sub_22CC0DE10(v61, v47, (uint64_t (*)(_QWORD))sub_22CC394C0);
    }
    v50 = v69;
    sub_22CC0DE10(v44, v69, (uint64_t (*)(_QWORD))sub_22CC394C0);
    v51 = v74;
    sub_22CC0DE10(v47, v74, (uint64_t (*)(_QWORD))sub_22CC394C0);
    sub_22CC39460();
    sub_22CC0DE10(v50, v51 + *(int *)(v52 + 48), (uint64_t (*)(_QWORD))sub_22CC394C0);
    sub_22CC0DE54(v50, (uint64_t (*)(_QWORD))sub_22CC394C0);
    sub_22CC0DE54(v47, (uint64_t (*)(_QWORD))sub_22CC394C0);
    sub_22CC39664(v51, v75);
    swift_storeEnumTagMultiPayload();
    sub_22CC16054(&qword_255C3D450, &qword_255C3D420, (uint64_t (*)(uint64_t))sub_22CC39460);
    v63 = (uint64_t)v71;
    sub_22CC65520();
    v54 = v67;
    sub_22CC17438(v51, &qword_255C3D420, (uint64_t (*)(uint64_t))sub_22CC39460, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_22CC0DE54(v48, (uint64_t (*)(_QWORD))sub_22CC394C0);
    sub_22CC0DE54(v49, (uint64_t (*)(_QWORD))sub_22CC394C0);
    v64 = MEMORY[0x24BDEF3B8];
    sub_22CC36E70(v63, v82, (uint64_t)&qword_255C3D418, (uint64_t)MEMORY[0x24BDEF3B8], (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_22CC3954C);
    swift_storeEnumTagMultiPayload();
    sub_22CC395DC();
    sub_22CC28B94(&qword_255C3D458, (uint64_t (*)(uint64_t))sub_22CC394C0, sub_22CC395C0, sub_22CC28CD4);
    sub_22CC65520();
    sub_22CC36EBC(v63, (uint64_t)&qword_255C3D418, (uint64_t)v64, (uint64_t (*)(_QWORD))sub_22CC3954C);
    v58 = v79;
    return ((uint64_t (*)(char *, uint64_t))v54)(v38, v58);
  }
  __break(1u);
  return result;
}

uint64_t sub_22CC342D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  _QWORD v27[4];

  v3 = sub_22CC64F5C();
  MEMORY[0x24BDAC7A8](v3);
  (*(void (**)(char *, uint64_t))(v5 + 16))((char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v1);
  v6 = sub_22CC6570C();
  v8 = v7;
  v10 = v9;
  v11 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for TimeView.TimeText(0) + 20));
  if ((v11 & 2) != 0)
    sub_22CC65820();
  else
    sub_22CC65838();
  v12 = sub_22CC656F4();
  v14 = v13;
  v16 = v15;
  v27[1] = v17;
  swift_release();
  v18 = v16 & 1;
  sub_22CC1BCCC(v6, v8, v10 & 1);
  swift_bridgeObjectRelease();
  sub_22CC3446C(v11);
  v19 = sub_22CC65700();
  v21 = v20;
  v23 = v22;
  v25 = v24;
  swift_release();
  sub_22CC1BCCC(v12, v14, v18);
  swift_bridgeObjectRelease();
  result = swift_getKeyPath();
  *(_QWORD *)a1 = v19;
  *(_QWORD *)(a1 + 8) = v21;
  *(_BYTE *)(a1 + 16) = v23 & 1;
  *(_QWORD *)(a1 + 24) = v25;
  *(_QWORD *)(a1 + 32) = result;
  *(_QWORD *)(a1 + 40) = 1;
  *(_BYTE *)(a1 + 48) = 0;
  return result;
}

uint64_t sub_22CC3446C(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v23;

  v2 = sub_22CC656DC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_22CC656AC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC082A8(0, &qword_254065E90, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v23 - v11;
  if ((a1 & 8) != 0)
  {
    sub_22CC65634();
    sub_22CC65664();
    v17 = sub_22CC65694();
  }
  else
  {
    if ((a1 & 4) != 0)
    {
      sub_22CC65670();
      v18 = *MEMORY[0x24BDF1668];
      v19 = sub_22CC6564C();
      v20 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1678];
      v21 = *(_QWORD *)(v19 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v21 + 104))(v12, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v12, 0, 1, v19);
      sub_22CC6567C();
      sub_22CC17438((uint64_t)v12, &qword_254065E90, v20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BDF17C8], v6);
      v17 = sub_22CC656C4();
      swift_release();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return v17;
    }
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF1878], v2);
    v13 = *MEMORY[0x24BDF1668];
    v14 = sub_22CC6564C();
    v15 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1678];
    v16 = *(_QWORD *)(v14 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 104))(v12, v13, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v14);
    sub_22CC65688();
    sub_22CC17438((uint64_t)v12, &qword_254065E90, v15, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_22CC65610();
    swift_release();
    v17 = sub_22CC65640();
  }
  swift_release();
  return v17;
}

uint64_t sub_22CC34744@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  _BYTE v22[15];
  char v23;

  sub_22CC38EBC();
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v22[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_22CC3911C();
  v7 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)v5 = sub_22CC6549C();
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 0;
  sub_22CC36D90(0, &qword_255C3D3D8, &qword_255C3D390, (uint64_t (*)(uint64_t))sub_22CC38F54);
  sub_22CC348FC(v1, (uint64_t)&v5[*(int *)(v10 + 44)]);
  v11 = type metadata accessor for DateView(0);
  v12 = *(int *)(v11 + 28);
  v13 = *(_QWORD *)(v1 + v12);
  v23 = *(_BYTE *)(v1 + *(int *)(v11 + 20));
  v14 = sub_22CC35454(&v23, v13);
  KeyPath = swift_getKeyPath();
  sub_22CC0DE10((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_22CC38EBC);
  v16 = (uint64_t *)&v9[*(int *)(v7 + 36)];
  *v16 = KeyPath;
  v16[1] = v14;
  sub_22CC0DE54((uint64_t)v5, (uint64_t (*)(_QWORD))sub_22CC38EBC);
  v17 = sub_22CC354B4(*(_QWORD *)(v1 + v12));
  v18 = swift_getKeyPath();
  sub_22CC0DE10((uint64_t)v9, a1, (uint64_t (*)(_QWORD))sub_22CC3911C);
  sub_22CC39198(0, &qword_255C3D3E0, (void (*)(uint64_t))sub_22CC3911C);
  v20 = (uint64_t *)(a1 + *(int *)(v19 + 36));
  *v20 = v18;
  v20[1] = v17;
  return sub_22CC0DE54((uint64_t)v9, (uint64_t (*)(_QWORD))sub_22CC3911C);
}

uint64_t sub_22CC348FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL *v18;
  uint64_t v19;
  BOOL *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  BOOL *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(BOOL *, _QWORD, uint64_t);
  void (*v48)(BOOL *);
  uint64_t v49;
  void (*v50)(BOOL *, uint64_t);
  int v51;
  char v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  _BYTE *v67;
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  BOOL *v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t KeyPath;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  _BYTE *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  _BYTE *v89;
  _BYTE v90[12];
  unsigned int v91;
  void (*v92)(BOOL *, _QWORD, uint64_t);
  uint64_t v93;
  unsigned int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _BYTE *v100;
  uint64_t v101;
  _BYTE *v102;
  _BYTE *v103;
  _BYTE *v104;
  _BYTE *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _BYTE *v109;
  _BYTE *v110;
  _BYTE *v111;
  uint64_t v112;
  _BYTE *v113;
  uint64_t v114;
  _BYTE *v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  unint64_t v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char v124;

  v112 = a2;
  sub_22CC39108(0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v113 = &v90[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = MEMORY[0x24BDAC7A8](v4);
  v110 = &v90[-v7];
  MEMORY[0x24BDAC7A8](v6);
  v111 = &v90[-v8];
  sub_22CC39214(0, &qword_255C3D3E8, (uint64_t (*)(uint64_t, uint64_t, _QWORD))MEMORY[0x24BDEF380]);
  v10 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v12 = &v90[-v11];
  v106 = sub_22CC65880();
  v98 = *(_QWORD *)(v106 - 8);
  MEMORY[0x24BDAC7A8](v106);
  v105 = &v90[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_22CC65274();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = &v90[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v16);
  v20 = &v90[-v19];
  sub_22CC390B0(0, &qword_255C3D3B8, MEMORY[0x24BDF4108], MEMORY[0x24BDF40E8], MEMORY[0x24BEAA148]);
  v97 = v21;
  v101 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v100 = &v90[-v22];
  sub_22CC39014();
  v99 = v23;
  MEMORY[0x24BDAC7A8](v23);
  v103 = &v90[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_22CC38F84(0);
  v114 = v25;
  v26 = MEMORY[0x24BDAC7A8](v25);
  v102 = &v90[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v26);
  v104 = &v90[-v28];
  sub_22CC38F70(0);
  v30 = MEMORY[0x24BDAC7A8](v29);
  v109 = &v90[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v30);
  v115 = &v90[-v32];
  v33 = type metadata accessor for DateView(0);
  v34 = v33;
  v108 = *(int *)(v33 + 24);
  if ((*(_BYTE *)(a1 + v108) & 1) != 0)
    goto LABEL_5;
  v107 = v10;
  v35 = *(int *)(v33 + 20);
  v36 = *(unsigned __int8 *)(a1 + v35);
  LOBYTE(v118) = *(_BYTE *)(a1 + v35);
  if (!SleepWidgetViewModel.scheduleOccurrenceRelativeDateString(occurrence:)((unsigned __int8 *)&v118)
    && v37 == 0xE000000000000000)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    swift_storeEnumTagMultiPayload();
    sub_22CC28B94(&qword_255C3D3F8, (uint64_t (*)(uint64_t))sub_22CC38F84, (uint64_t (*)(void))sub_22CC392DC, (uint64_t (*)(void))sub_22CC39388);
    sub_22CC65520();
    goto LABEL_6;
  }
  v96 = v35;
  v42 = sub_22CC65EB0();
  swift_bridgeObjectRelease();
  if ((v42 & 1) != 0 || v36 == 3)
    goto LABEL_5;
  sub_22CC39274();
  v95 = v43;
  v44 = &v20[*(int *)(v43 + 48)];
  *v20 = v36 != 2;
  v45 = *MEMORY[0x24BEAA098];
  v46 = sub_22CC6525C();
  v47 = *(void (**)(BOOL *, _QWORD, uint64_t))(*(_QWORD *)(v46 - 8) + 104);
  v94 = v45;
  v93 = v46;
  v92 = v47;
  ((void (*)(BOOL *, uint64_t))v47)(v44, v45);
  v48 = *(void (**)(BOOL *))(v15 + 104);
  v91 = *MEMORY[0x24BEAA088];
  v48(v20);
  v49 = sub_22CC65250();
  v50 = *(void (**)(BOOL *, uint64_t))(v15 + 8);
  v50(v20, v14);
  v118 = v49;
  v51 = *(unsigned __int8 *)(a1 + v96);
  if (v51 == 3)
  {
    sub_22CC65268();
  }
  else
  {
    v73 = &v18[*(int *)(v95 + 48)];
    *v18 = v51 != 2;
    v92(v73, v94, v93);
    ((void (*)(BOOL *, _QWORD, uint64_t))v48)(v18, v91, v14);
  }
  v74 = v98;
  v75 = v97;
  v76 = v100;
  sub_22CC65730();
  v50(v18, v14);
  swift_release();
  v77 = *(_QWORD *)(a1 + *(int *)(v34 + 28));
  LOBYTE(v118) = *(_BYTE *)(a1 + v96);
  v78 = sub_22CC35328((unsigned __int8 *)&v118, v77);
  KeyPath = swift_getKeyPath();
  v80 = v101;
  v81 = (uint64_t)v103;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v101 + 16))(v103, v76, v75);
  v82 = (uint64_t *)(v81 + *(int *)(v99 + 36));
  *v82 = KeyPath;
  v82[1] = v78;
  (*(void (**)(_BYTE *, uint64_t))(v80 + 8))(v76, v75);
  v83 = v105;
  v84 = v106;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v74 + 104))(v105, *MEMORY[0x24BDF40B0], v106);
  v85 = swift_getKeyPath();
  v86 = (uint64_t)v102;
  v87 = (uint64_t *)&v102[*(int *)(v114 + 36)];
  sub_22CC082A8(0, &qword_2540656A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDF40C0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
  (*(void (**)(char *, _BYTE *, uint64_t))(v74 + 16))((char *)v87 + *(int *)(v88 + 28), v83, v84);
  *v87 = v85;
  sub_22CC0DE10(v81, v86, (uint64_t (*)(_QWORD))sub_22CC39014);
  (*(void (**)(_BYTE *, uint64_t))(v74 + 8))(v83, v84);
  sub_22CC0DE54(v81, (uint64_t (*)(_QWORD))sub_22CC39014);
  v89 = v104;
  sub_22CC0DDCC(v86, (uint64_t)v104, (uint64_t (*)(_QWORD))sub_22CC38F84);
  sub_22CC0DE10((uint64_t)v89, (uint64_t)v12, (uint64_t (*)(_QWORD))sub_22CC38F84);
  swift_storeEnumTagMultiPayload();
  sub_22CC28B94(&qword_255C3D3F8, (uint64_t (*)(uint64_t))sub_22CC38F84, (uint64_t (*)(void))sub_22CC392DC, (uint64_t (*)(void))sub_22CC39388);
  sub_22CC65520();
  sub_22CC0DE54((uint64_t)v89, (uint64_t (*)(_QWORD))sub_22CC38F84);
LABEL_6:
  if ((*(_BYTE *)(a1 + v108) & 1) != 0)
  {
    v38 = 0;
    v39 = 0xE000000000000000;
  }
  else
  {
    v40 = *(unsigned __int8 *)(a1 + *(int *)(v34 + 20));
    LOBYTE(v118) = *(_BYTE *)(a1 + *(int *)(v34 + 20));
    if (SleepWidgetViewModel.scheduleOccurrenceRelativeDateString(occurrence:)((unsigned __int8 *)&v118)
      || v41 != 0xE000000000000000)
    {
      v39 = 0xE000000000000000;
      v52 = sub_22CC65EB0();
      swift_bridgeObjectRelease();
      v38 = 0;
      if ((v52 & 1) == 0 && v40 != 3)
      {
        v38 = sub_22CC65B5C();
        v39 = v53;
      }
    }
    else
    {
      v39 = 0xE000000000000000;
      swift_bridgeObjectRelease();
      v38 = 0;
    }
  }
  LOBYTE(v118) = *(_BYTE *)(a1 + *(int *)(v34 + 20));
  SleepWidgetViewModel.scheduleOccurrenceRelativeDateString(occurrence:)((unsigned __int8 *)&v118);
  v118 = v38;
  v119 = v39;
  swift_bridgeObjectRetain();
  sub_22CC65B68();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_22CC08C70();
  v54 = sub_22CC65718();
  v56 = v55;
  v58 = v57;
  v60 = v59;
  v61 = (*(_QWORD *)(a1 + *(int *)(v34 + 28)) >> 2) & 1;
  v62 = swift_getKeyPath();
  v118 = v54;
  v119 = v56;
  v120 = v58 & 1;
  v114 = v60;
  v121 = v60;
  v122 = v62;
  v123 = v61;
  v124 = 0;
  if (qword_254066798 != -1)
    swift_once();
  v63 = qword_254067968;
  v64 = qword_254067970;
  v116 = 46;
  v117 = 0xE100000000000000;
  sub_22CC65B68();
  swift_bridgeObjectRelease();
  sub_22CC65B68();
  v116 = v63;
  v117 = v64;
  swift_bridgeObjectRetain();
  sub_22CC65B68();
  swift_bridgeObjectRelease();
  sub_22CC28A58();
  sub_22CC28C4C();
  v65 = (uint64_t)v110;
  sub_22CC657CC();
  swift_bridgeObjectRelease();
  sub_22CC1BCCC(v54, v56, v58 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  v66 = v111;
  sub_22CC0DDCC(v65, (uint64_t)v111, (uint64_t (*)(_QWORD))sub_22CC39108);
  v67 = v115;
  v68 = v109;
  sub_22CC0DE10((uint64_t)v115, (uint64_t)v109, (uint64_t (*)(_QWORD))sub_22CC38F70);
  v69 = v113;
  sub_22CC0DE10((uint64_t)v66, (uint64_t)v113, (uint64_t (*)(_QWORD))sub_22CC39108);
  v70 = v112;
  sub_22CC0DE10((uint64_t)v68, v112, (uint64_t (*)(_QWORD))sub_22CC38F70);
  sub_22CC38F54(0);
  sub_22CC0DE10((uint64_t)v69, v70 + *(int *)(v71 + 48), (uint64_t (*)(_QWORD))sub_22CC39108);
  sub_22CC0DE54((uint64_t)v66, (uint64_t (*)(_QWORD))sub_22CC39108);
  sub_22CC0DE54((uint64_t)v67, (uint64_t (*)(_QWORD))sub_22CC38F70);
  sub_22CC0DE54((uint64_t)v69, (uint64_t (*)(_QWORD))sub_22CC39108);
  return sub_22CC0DE54((uint64_t)v68, (uint64_t (*)(_QWORD))sub_22CC38F70);
}

uint64_t sub_22CC35328(unsigned __int8 *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  BOOL *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char v16;

  v4 = sub_22CC65274();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (BOOL *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  if ((a2 & 0xA) != 0)
  {
    v16 = v8;
    return sub_22CC35454(&v16, a2);
  }
  else
  {
    if (v8 == 3)
    {
      sub_22CC65268();
    }
    else
    {
      sub_22CC39274();
      v11 = &v7[*(int *)(v10 + 48)];
      *v7 = v8 != 2;
      v12 = *MEMORY[0x24BEAA098];
      v13 = sub_22CC6525C();
      (*(void (**)(BOOL *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v11, v12, v13);
      (*(void (**)(BOOL *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEAA088], v4);
    }
    v9 = sub_22CC65244();
    (*(void (**)(BOOL *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v9;
}

uint64_t sub_22CC35454(_BYTE *a1, char a2)
{
  id v3;

  if ((a2 & 0xA) != 0)
  {
    if (*a1 != 2)
      return sub_22CC65820();
    if ((a2 & 8) != 0)
    {
      v3 = objc_msgSend((id)objc_opt_self(), sel_systemGray2Color);
      JUMPOUT(0x22E3058E8);
    }
  }
  return sub_22CC65844();
}

uint64_t sub_22CC354B4(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, _QWORD, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = sub_22CC656AC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC082A8(0, &qword_254065E90, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v24 - v7;
  v9 = sub_22CC656DC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 8) != 0)
  {
    sub_22CC65634();
    sub_22CC65664();
    v19 = sub_22CC65694();
    swift_release();
    return v19;
  }
  else
  {
    v13 = *(void (**)(char *, _QWORD, uint64_t))(v10 + 104);
    if ((a1 & 4) != 0)
    {
      v13(v12, *MEMORY[0x24BDF18D8], v9);
      v21 = *MEMORY[0x24BDF1668];
      v22 = sub_22CC6564C();
      v23 = *(_QWORD *)(v22 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v23 + 104))(v8, v21, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v8, 0, 1, v22);
      sub_22CC65670();
      sub_22CC65688();
      sub_22CC17438((uint64_t)v8, &qword_254065E90, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF17C8], v2);
      v18 = sub_22CC656C4();
      swift_release();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    else
    {
      v13(v12, *MEMORY[0x24BDF18C8], v9);
      v14 = *MEMORY[0x24BDF1660];
      v15 = sub_22CC6564C();
      v16 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF1678];
      v17 = *(_QWORD *)(v15 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v8, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v8, 0, 1, v15);
      sub_22CC65670();
      v18 = sub_22CC65688();
      sub_22CC17438((uint64_t)v8, &qword_254065E90, v16, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
    return v18;
  }
}

uint64_t sub_22CC35788@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char v53;
  uint64_t KeyPath;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t OpaqueTypeConformance2;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  char *v74;
  char *v75;
  uint64_t v76;
  void (*v77)(char *, char *, uint64_t);
  char *v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t);
  void (*v81)(char *, uint64_t);
  _QWORD v83[3];
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  void (*v90)(char *, uint64_t);
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;

  v103 = a2;
  sub_22CC082A8(0, &qword_254065E90, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v88 = (char *)v83 - v4;
  v87 = sub_22CC656DC();
  v86 = *(_QWORD *)(v87 - 8);
  MEMORY[0x24BDAC7A8](v87);
  v85 = (char *)v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC37038(0, &qword_255C3D1A8, (uint64_t (*)(uint64_t))sub_22CC283FC, sub_22CC284F8, MEMORY[0x24BEAA188]);
  v7 = *(_QWORD *)(v6 - 8);
  v97 = v6;
  v98 = v7;
  MEMORY[0x24BDAC7A8](v6);
  v94 = (char *)v83 - v8;
  sub_22CC36CD0(0);
  v100 = v9;
  v102 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v95 = (char *)v83 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC36BE4(0);
  v101 = v11;
  v106 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v96 = (char *)v83 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v99 = (char *)v83 - v14;
  v104 = sub_22CC65A18();
  v15 = *(_QWORD *)(v104 - 8);
  MEMORY[0x24BDAC7A8](v104);
  v17 = (char *)v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC36A44(0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)v83 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC36A20(0);
  v22 = v21;
  v23 = *(_QWORD *)(v21 - 8);
  v92 = v21;
  v91 = v23;
  v24 = MEMORY[0x24BDAC7A8](v21);
  v105 = (char *)v83 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)v83 - v26;
  v93 = (char *)v83 - v26;
  *(_QWORD *)v20 = sub_22CC6549C();
  *((_QWORD *)v20 + 1) = 0;
  v20[16] = 1;
  sub_22CC36D90(0, &qword_255C3D1B0, &qword_255C3D168, (uint64_t (*)(uint64_t))sub_22CC36AF8);
  sub_22CC35FAC(a1, (uint64_t)&v20[*(int *)(v28 + 44)]);
  v89 = v17;
  v83[2] = a1;
  sub_22CC207D8((uint64_t)v17);
  sub_22CC36270(MEMORY[0x24BEAA1B8], MEMORY[0x24BEAA1B0]);
  v90 = *(void (**)(char *, uint64_t))(v15 + 8);
  v90(v17, v104);
  sub_22CC36BC8();
  v29 = v105;
  sub_22CC65724();
  swift_bridgeObjectRelease();
  sub_22CC0DE54((uint64_t)v20, (uint64_t (*)(_QWORD))sub_22CC36A44);
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v27, v29, v22);
  v84 = type metadata accessor for BedTitleView(0);
  v30 = (uint64_t *)(a1 + *(int *)(v84 + 20));
  v31 = v30[1];
  v107 = *v30;
  v108 = v31;
  sub_22CC08C70();
  swift_bridgeObjectRetain();
  v32 = sub_22CC65718();
  v34 = v33;
  v83[1] = v35;
  LOBYTE(v27) = v36 & 1;
  v37 = v86;
  v38 = v85;
  v39 = v87;
  (*(void (**)(char *, _QWORD, uint64_t))(v86 + 104))(v85, *MEMORY[0x24BDF18A8], v87);
  v40 = *MEMORY[0x24BDF1668];
  v41 = sub_22CC6564C();
  v42 = *(_QWORD *)(v41 - 8);
  v43 = (uint64_t)v88;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 104))(v88, v40, v41);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v42 + 56))(v43, 0, 1, v41);
  sub_22CC65688();
  sub_22CC17438(v43, &qword_254065E90, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1678], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v39);
  sub_22CC65610();
  swift_release();
  v44 = sub_22CC65700();
  v46 = v45;
  LOBYTE(v40) = v47;
  swift_release();
  LOBYTE(v39) = v40 & 1;
  sub_22CC1BCCC(v32, v34, (char)v27);
  swift_bridgeObjectRelease();
  sub_22CC65658();
  v48 = sub_22CC656E8();
  v87 = v48;
  v50 = v49;
  v86 = v49;
  v52 = v51;
  v88 = v51;
  LOBYTE(v40) = v53 & 1;
  sub_22CC1BCCC(v44, v46, v39);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v55 = swift_getKeyPath();
  v107 = v48;
  v108 = v50;
  v109 = v40;
  v110 = v52;
  v111 = KeyPath;
  v112 = 0x3FE8000000000000;
  v113 = v55;
  v114 = 1;
  v115 = 0;
  sub_22CC283FC(0);
  v57 = v56;
  v58 = sub_22CC284F8();
  v59 = v94;
  sub_22CC65754();
  sub_22CC1BCCC(v87, v86, v40);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v107 = v57;
  v108 = v58;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v61 = v95;
  v62 = v97;
  sub_22CC65760();
  v63 = v59;
  v64 = v62;
  (*(void (**)(char *, uint64_t))(v98 + 8))(v63, v62);
  v65 = (uint64_t)v89;
  sub_22CC207D8((uint64_t)v89);
  sub_22CC36270(MEMORY[0x24BEAA1B0], MEMORY[0x24BEAA1C0]);
  v90((char *)v65, v104);
  v107 = v64;
  v108 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  v66 = v96;
  v67 = v100;
  sub_22CC65724();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v102 + 8))(v61, v67);
  v68 = v106;
  v69 = v99;
  v70 = v66;
  v71 = v101;
  (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v99, v66, v101);
  v72 = v91;
  v73 = *(void (**)(char *, char *, uint64_t))(v91 + 16);
  v74 = v105;
  v75 = v93;
  v76 = v92;
  v73(v105, v93, v92);
  v77 = *(void (**)(char *, char *, uint64_t))(v68 + 16);
  v77(v66, v69, v71);
  v78 = v103;
  v73(v103, v74, v76);
  sub_22CC36994(0);
  v77(&v78[*(int *)(v79 + 48)], v70, v71);
  v80 = *(void (**)(char *, uint64_t))(v106 + 8);
  v80(v69, v71);
  v81 = *(void (**)(char *, uint64_t))(v72 + 8);
  v81(v75, v76);
  v80(v70, v71);
  return ((uint64_t (*)(char *, uint64_t))v81)(v74, v76);
}

uint64_t sub_22CC35FAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  __int128 v33;

  v21[1] = a1;
  v22 = a2;
  v2 = sub_22CC65874();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_22CC65274();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC394D4(0, &qword_255C3D178, (void (*)(uint64_t))sub_22CC36B6C);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v21 - v14;
  sub_22CC65268();
  sub_22CC65250();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3FD0], v2);
  v16 = sub_22CC6588C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  type metadata accessor for BedTitleView(0);
  sub_22CC658F8();
  sub_22CC652EC();
  v23 = v16;
  v24 = v29;
  v25 = v30;
  v26 = v31;
  v27 = v32;
  v28 = v33;
  sub_22CC36B6C();
  sub_22CC36E10();
  sub_22CC6579C();
  swift_release();
  sub_22CC36E70((uint64_t)v15, (uint64_t)v13, (uint64_t)&qword_255C3D178, (uint64_t)sub_22CC36B6C, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_22CC394D4);
  v17 = v22;
  sub_22CC36E70((uint64_t)v13, v22, (uint64_t)&qword_255C3D178, (uint64_t)sub_22CC36B6C, (uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_22CC394D4);
  sub_22CC36AF8();
  v19 = v17 + *(int *)(v18 + 48);
  *(_QWORD *)v19 = 0;
  *(_BYTE *)(v19 + 8) = 1;
  sub_22CC36EBC((uint64_t)v15, (uint64_t)&qword_255C3D178, (uint64_t)sub_22CC36B6C, (uint64_t (*)(_QWORD))sub_22CC394D4);
  return sub_22CC36EBC((uint64_t)v13, (uint64_t)&qword_255C3D178, (uint64_t)sub_22CC36B6C, (uint64_t (*)(_QWORD))sub_22CC394D4);
}

uint64_t sub_22CC36270(uint64_t (*a1)(void), uint64_t (*a2)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v4 = sub_22CC65A18();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC65A00();
  v8 = sub_22CC659F4();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_22CC08D64(0, &qword_255C3D1B8, MEMORY[0x24BDF3E48], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
  if ((v8 & 1) != 0)
  {
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_22CC663F0;
    *(_QWORD *)(v9 + 32) = sub_22CC65820();
    v13 = v9;
  }
  else
  {
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_22CC66400;
    *(_QWORD *)(v10 + 32) = a1();
    *(_QWORD *)(v10 + 40) = a2();
    v13 = v10;
  }
  sub_22CC65BBC();
  return v13;
}

uint64_t sub_22CC36394@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = sub_22CC654CC();
  *(_QWORD *)(a1 + 8) = 0x4010000000000000;
  *(_BYTE *)(a1 + 16) = 0;
  sub_22CC371BC(0, &qword_255C3D140, &qword_255C3D148, (uint64_t (*)(uint64_t))sub_22CC36994);
  return sub_22CC35788(v1, (char *)(a1 + *(int *)(v3 + 44)));
}

uint64_t sub_22CC363F0()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_22CC36400()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255C3D0F0)
  {
    sub_22CC3648C(255);
    sub_22CC36598(255, &qword_255C3D118, &qword_254065690, &qword_2540656C0, MEMORY[0x24BDF1948]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255C3D0F0);
  }
}

void sub_22CC3648C(uint64_t a1)
{
  sub_22CC39198(a1, &qword_255C3D0F8, sub_22CC364A0);
}

void sub_22CC364A0(uint64_t a1)
{
  sub_22CC38F98(a1, &qword_255C3D100, (void (*)(uint64_t))sub_22CC364B4);
}

void sub_22CC364B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3D108)
  {
    sub_22CC390B0(255, &qword_255C3D110, MEMORY[0x24BDF4108], MEMORY[0x24BDF40E8], MEMORY[0x24BDFAC10]);
    sub_22CC6558C();
    v0 = sub_22CC6534C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3D108);
  }
}

void sub_22CC36538(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_22CC08D64(255, a3, a4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    v5 = sub_22CC65580();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_22CC36598(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_22CC390B0(255, &qword_255C3D120, MEMORY[0x24BDF1FA8], MEMORY[0x24BDF1F80], MEMORY[0x24BDFAC10]);
    sub_22CC36538(255, a3, a4, a5);
    v9 = sub_22CC6534C();
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_22CC3663C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3D130)
  {
    sub_22CC36A68(255, &qword_255C3D0E0, &qword_255C3D0E8, (uint64_t (*)(uint64_t))sub_22CC36400, &qword_255C3D128);
    sub_22CC36538(255, &qword_2540656A0, (unint64_t *)&qword_2540656C8, MEMORY[0x24BDF3E48]);
    v0 = sub_22CC6534C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3D130);
  }
}

uint64_t sub_22CC366E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_22CC36A68(0, &qword_255C3D0E0, &qword_255C3D0E8, (uint64_t (*)(uint64_t))sub_22CC36400, &qword_255C3D128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22CC36744(uint64_t a1)
{
  uint64_t v2;

  sub_22CC36A68(0, &qword_255C3D0E0, &qword_255C3D0E8, (uint64_t (*)(uint64_t))sub_22CC36400, &qword_255C3D128);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22CC367A0()
{
  return sub_22CC65370();
}

uint64_t sub_22CC367C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_22CC65880();
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_22CC6537C();
}

uint64_t sub_22CC36840@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_22CC653E8();
  *a1 = result;
  return result;
}

uint64_t sub_22CC36868()
{
  swift_retain();
  return sub_22CC653F4();
}

uint64_t sub_22CC36890(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_22CC36598(0, &qword_255C3D118, &qword_254065690, &qword_2540656C0, MEMORY[0x24BDF1948]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22CC368F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_22CC36598(0, &qword_255C3D118, &qword_254065690, &qword_2540656C0, MEMORY[0x24BDF1948]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22CC36958(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t v6;

  sub_22CC36598(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

void sub_22CC36994(uint64_t a1)
{
  sub_22CC369B0(a1, &qword_255C3D150, sub_22CC36A20, sub_22CC36BE4);
}

void sub_22CC369B0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v7)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_22CC36A20(uint64_t a1)
{
  sub_22CC37038(a1, &qword_255C3D158, (uint64_t (*)(uint64_t))sub_22CC36A44, sub_22CC36BC8, MEMORY[0x24BEAA138]);
}

void sub_22CC36A44(uint64_t a1)
{
  sub_22CC36A68(a1, &qword_255C3D160, &qword_255C3D168, (uint64_t (*)(uint64_t))sub_22CC36AF8, &qword_255C3D188);
}

void sub_22CC36A68(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), unint64_t *a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_22CC082A8(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_22CC16054(a5, a3, a4);
    v9 = sub_22CC65898();
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_22CC36AF8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255C3D170)
  {
    sub_22CC394D4(255, &qword_255C3D178, (void (*)(uint64_t))sub_22CC36B6C);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255C3D170);
  }
}

void sub_22CC36B6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3D180)
  {
    v0 = sub_22CC6534C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3D180);
  }
}

uint64_t sub_22CC36BC8()
{
  return sub_22CC07B74(&qword_255C3D190, (uint64_t (*)(uint64_t))sub_22CC36A44, MEMORY[0x24BDF4498]);
}

void sub_22CC36BE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v6[2];

  if (!qword_255C3D198)
  {
    sub_22CC36CD0(255);
    v3 = v2;
    sub_22CC37038(255, &qword_255C3D1A8, (uint64_t (*)(uint64_t))sub_22CC283FC, sub_22CC284F8, MEMORY[0x24BEAA188]);
    sub_22CC283FC(255);
    sub_22CC284F8();
    swift_getOpaqueTypeConformance2();
    v6[0] = v3;
    v6[1] = swift_getOpaqueTypeConformance2();
    v4 = MEMORY[0x22E3063BC](a1, v6, MEMORY[0x24BEAA138], 0);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_255C3D198);
  }
}

void sub_22CC36CD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v6[2];

  if (!qword_255C3D1A0)
  {
    sub_22CC37038(255, &qword_255C3D1A8, (uint64_t (*)(uint64_t))sub_22CC283FC, sub_22CC284F8, MEMORY[0x24BEAA188]);
    v3 = v2;
    sub_22CC283FC(255);
    sub_22CC284F8();
    v6[0] = v3;
    v6[1] = swift_getOpaqueTypeConformance2();
    v4 = MEMORY[0x22E3063BC](a1, v6, MEMORY[0x24BEAA198], 0);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_255C3D1A0);
  }
}

void sub_22CC36D90(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_22CC082A8(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    v5 = sub_22CC65310();
    if (!v6)
      atomic_store(v5, a2);
  }
}

unint64_t sub_22CC36E10()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_255C3D1C0;
  if (!qword_255C3D1C0)
  {
    sub_22CC36B6C();
    v2[0] = MEMORY[0x24BDF40E8];
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_255C3D1C0);
  }
  return result;
}

uint64_t sub_22CC36E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, uint64_t, uint64_t))
{
  uint64_t v7;

  v7 = a5(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
  return a2;
}

uint64_t sub_22CC36EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v5;

  v5 = a4(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

void sub_22CC36EF8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3D1C8)
  {
    sub_22CC082A8(255, &qword_255C3D1D0, (uint64_t (*)(uint64_t))sub_22CC36F90, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_22CC16054(&qword_255C3D1F0, &qword_255C3D1D0, (uint64_t (*)(uint64_t))sub_22CC36F90);
    v0 = sub_22CC658BC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3D1C8);
  }
}

void sub_22CC36F90()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_255C3D1D8)
  {
    type metadata accessor for TimeView(255);
    sub_22CC37038(255, &qword_255C3D1E0, type metadata accessor for DateView, sub_22CC370CC, MEMORY[0x24BEAA198]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_255C3D1D8);
  }
}

uint64_t type metadata accessor for TimeView(uint64_t a1)
{
  return sub_22CC0D950(a1, qword_255C3D300);
}

void sub_22CC37038(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t a5)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD v11[2];

  if (!*a2)
  {
    v11[0] = a3(255);
    v11[1] = a4();
    v9 = MEMORY[0x22E3063BC](a1, v11, a5, 0);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t type metadata accessor for DateView(uint64_t a1)
{
  return sub_22CC0D950(a1, qword_255C3D268);
}

uint64_t sub_22CC370CC()
{
  return sub_22CC07B74(&qword_255C3D1E8, type metadata accessor for DateView, (uint64_t)&unk_22CC67E04);
}

void sub_22CC370E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  if (!qword_255C3D1F8)
  {
    sub_22CC36EF8();
    v3 = v2;
    sub_22CC18FD8();
    v7[0] = v3;
    v7[1] = v4;
    v7[2] = sub_22CC07B74(&qword_255C3D200, (uint64_t (*)(uint64_t))sub_22CC36EF8, MEMORY[0x24BDF4700]);
    v7[3] = sub_22CC07B74(&qword_2540657A0, (uint64_t (*)(uint64_t))sub_22CC18FD8, MEMORY[0x24BEE30C8]);
    v5 = MEMORY[0x22E3063BC](a1, v7, MEMORY[0x24BDF2800], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_255C3D1F8);
  }
}

void sub_22CC371BC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_22CC082A8(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    v5 = sub_22CC65310();
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_22CC37244()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC37254()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *sub_22CC37268(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  int *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  void *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  int *v34;
  void (*v35)(char *, uint64_t, uint64_t);
  void *v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  char *v41;
  char *v42;
  unsigned int (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  int *v55;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v7 = (int *)type metadata accessor for SleepWidgetViewModel();
    v8 = v7[5];
    v9 = (char *)v4 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_22CC64F20();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    if (v13(v10, 1, v11))
    {
      sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = v7[6];
    v17 = (char *)v4 + v16;
    v18 = (char *)a2 + v16;
    if (v13((char *)a2 + v16, 1, v11))
    {
      sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v18, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
    }
    *((_BYTE *)v4 + v7[7]) = *((_BYTE *)a2 + v7[7]);
    v20 = v7[8];
    v21 = (char *)v4 + v20;
    v22 = (uint64_t)a2 + v20;
    v23 = sub_22CC6504C();
    v24 = *(_QWORD *)(v23 - 8);
    v25 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
    v25(v21, v22, v23);
    v26 = v7[9];
    v27 = *(void **)((char *)a2 + v26);
    *(_QWORD *)((char *)v4 + v26) = v27;
    v28 = v7[10];
    v29 = (_QWORD *)((char *)v4 + v28);
    v30 = (uint64_t)a2 + v28;
    v31 = *(uint64_t *)((char *)a2 + v28);
    v32 = v27;
    if (v31)
    {
      v55 = v7;
      v33 = v24;
      v34 = v6;
      v35 = v25;
      v36 = *(void **)(v30 + 8);
      v37 = *(void **)(v30 + 16);
      *v29 = v31;
      v29[1] = v36;
      v29[2] = v37;
      swift_bridgeObjectRetain();
      v38 = v36;
      v25 = v35;
      v6 = v34;
      v24 = v33;
      v7 = v55;
      v39 = v37;
    }
    else
    {
      *(_OWORD *)v29 = *(_OWORD *)v30;
      v29[2] = *(_QWORD *)(v30 + 16);
    }
    v40 = v7[11];
    v41 = (char *)v4 + v40;
    v42 = (char *)a2 + v40;
    v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
    if (v43((char *)a2 + v40, 1, v23))
    {
      sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      v25(v41, (uint64_t)v42, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v41, 0, 1, v23);
    }
    v45 = v7[12];
    v46 = (char *)v4 + v45;
    v47 = (char *)a2 + v45;
    if (v43((char *)a2 + v45, 1, v23))
    {
      sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      v25(v46, (uint64_t)v47, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v46, 0, 1, v23);
    }
    v49 = v7[13];
    v50 = (char *)v4 + v49;
    v51 = (char *)a2 + v49;
    if (v43((char *)a2 + v49, 1, v23))
    {
      sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      v25(v50, (uint64_t)v51, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v50, 0, 1, v23);
    }
    v53 = v6[6];
    *((_BYTE *)v4 + v6[5]) = *((_BYTE *)a2 + v6[5]);
    *((_BYTE *)v4 + v53) = *((_BYTE *)a2 + v53);
    *(_QWORD *)((char *)v4 + v6[7]) = *(uint64_t *)((char *)a2 + v6[7]);
  }
  return v4;
}

uint64_t sub_22CC37670(uint64_t a1, uint64_t a2, int *a3)
{
  int *v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(void *, const void *, uint64_t);
  uint64_t v23;
  void *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  void *v35;
  const void *v36;
  unsigned int (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  void *v40;
  const void *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  const void *v45;
  uint64_t v46;
  uint64_t v47;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = (int *)type metadata accessor for SleepWidgetViewModel();
  v6 = v5[5];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_22CC64F20();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = v5[6];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  if (v11((const void *)(a2 + v13), 1, v9))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v14, v15, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  *(_BYTE *)(a1 + v5[7]) = *(_BYTE *)(a2 + v5[7]);
  v17 = v5[8];
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  v20 = sub_22CC6504C();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(void (**)(void *, const void *, uint64_t))(v21 + 16);
  v22(v18, v19, v20);
  v23 = v5[9];
  v24 = *(void **)(a2 + v23);
  *(_QWORD *)(a1 + v23) = v24;
  v25 = v5[10];
  v26 = (_QWORD *)(a1 + v25);
  v27 = a2 + v25;
  v28 = *(_QWORD *)(a2 + v25);
  v29 = v24;
  if (v28)
  {
    v30 = *(void **)(v27 + 8);
    v31 = *(void **)(v27 + 16);
    *v26 = v28;
    v26[1] = v30;
    v26[2] = v31;
    swift_bridgeObjectRetain();
    v32 = v30;
    v33 = v31;
  }
  else
  {
    *(_OWORD *)v26 = *(_OWORD *)v27;
    v26[2] = *(_QWORD *)(v27 + 16);
  }
  v34 = v5[11];
  v35 = (void *)(a1 + v34);
  v36 = (const void *)(a2 + v34);
  v37 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  if (v37(a2 + v34, 1, v20))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    v22(v35, v36, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v35, 0, 1, v20);
  }
  v39 = v5[12];
  v40 = (void *)(a1 + v39);
  v41 = (const void *)(a2 + v39);
  if (v37(a2 + v39, 1, v20))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    v22(v40, v41, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v40, 0, 1, v20);
  }
  v43 = v5[13];
  v44 = (void *)(a1 + v43);
  v45 = (const void *)(a2 + v43);
  if (v37(a2 + v43, 1, v20))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    v22(v44, v45, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v44, 0, 1, v20);
  }
  v47 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v47) = *(_BYTE *)(a2 + v47);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_22CC37A30(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char *v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  _QWORD *v33;
  __int128 *v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  void *v42;
  void *v43;
  id v44;
  id v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  void *v49;
  char *v50;
  uint64_t (*v51)(uint64_t, uint64_t, uint64_t);
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  char *v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  char *v63;
  int v64;
  int v65;
  uint64_t v66;

  v5 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v5;
  v6 = (int *)type metadata accessor for SleepWidgetViewModel();
  v7 = v6[5];
  v8 = (void *)(a1 + v7);
  v9 = (char *)a2 + v7;
  v10 = sub_22CC64F20();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  v16 = v6[6];
  v17 = (void *)(a1 + v16);
  v18 = (char *)a2 + v16;
  v19 = v12((void *)(a1 + v16), 1, v10);
  v20 = v12(v18, 1, v10);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v17, v18, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v17, v10);
LABEL_12:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, char *, uint64_t))(v11 + 24))(v17, v18, v10);
LABEL_13:
  *(_BYTE *)(a1 + v6[7]) = *((_BYTE *)a2 + v6[7]);
  v22 = v6[8];
  v23 = a1 + v22;
  v24 = (uint64_t)a2 + v22;
  v25 = sub_22CC6504C();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 24);
  v27(v23, v24, v25);
  v28 = v6[9];
  v29 = *(void **)((char *)a2 + v28);
  v30 = *(void **)(a1 + v28);
  *(_QWORD *)(a1 + v28) = v29;
  v31 = v29;

  v32 = v6[10];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (__int128 *)((char *)a2 + v32);
  v35 = *(uint64_t *)((char *)a2 + v32);
  if (*(_QWORD *)(a1 + v32))
  {
    if (v35)
    {
      *v33 = v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v36 = (void *)v33[1];
      v37 = (void *)*((_QWORD *)v34 + 1);
      v33[1] = v37;
      v38 = v37;

      v39 = (void *)v33[2];
      v40 = (void *)*((_QWORD *)v34 + 2);
      v33[2] = v40;
      v41 = v40;

    }
    else
    {
      sub_22CC06744(a1 + v32);
      v46 = *((_QWORD *)v34 + 2);
      *(_OWORD *)v33 = *v34;
      v33[2] = v46;
    }
  }
  else if (v35)
  {
    *v33 = v35;
    v42 = (void *)*((_QWORD *)v34 + 1);
    v33[1] = v42;
    v43 = (void *)*((_QWORD *)v34 + 2);
    v33[2] = v43;
    swift_bridgeObjectRetain();
    v44 = v42;
    v45 = v43;
  }
  else
  {
    v47 = *v34;
    v33[2] = *((_QWORD *)v34 + 2);
    *(_OWORD *)v33 = v47;
  }
  v48 = v6[11];
  v49 = (void *)(a1 + v48);
  v50 = (char *)a2 + v48;
  v51 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  v52 = v51(a1 + v48, 1, v25);
  v53 = v51((uint64_t)v50, 1, v25);
  if (v52)
  {
    if (!v53)
    {
      (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v49, v50, v25);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v49, 0, 1, v25);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  if (v53)
  {
    (*(void (**)(void *, uint64_t))(v26 + 8))(v49, v25);
LABEL_27:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    goto LABEL_28;
  }
  v27((uint64_t)v49, (uint64_t)v50, v25);
LABEL_28:
  v55 = v6[12];
  v56 = (void *)(a1 + v55);
  v57 = (char *)a2 + v55;
  v58 = v51(a1 + v55, 1, v25);
  v59 = v51((uint64_t)v57, 1, v25);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v56, v57, v25);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v56, 0, 1, v25);
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  if (v59)
  {
    (*(void (**)(void *, uint64_t))(v26 + 8))(v56, v25);
LABEL_33:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_34;
  }
  v27((uint64_t)v56, (uint64_t)v57, v25);
LABEL_34:
  v61 = v6[13];
  v62 = (void *)(a1 + v61);
  v63 = (char *)a2 + v61;
  v64 = v51(a1 + v61, 1, v25);
  v65 = v51((uint64_t)v63, 1, v25);
  if (!v64)
  {
    if (!v65)
    {
      v27((uint64_t)v62, (uint64_t)v63, v25);
      goto LABEL_40;
    }
    (*(void (**)(void *, uint64_t))(v26 + 8))(v62, v25);
    goto LABEL_39;
  }
  if (v65)
  {
LABEL_39:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v62, v63, v25);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v62, 0, 1, v25);
LABEL_40:
  *(_BYTE *)(a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  *(_BYTE *)(a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  return a1;
}

uint64_t sub_22CC37FB8(uint64_t a1, uint64_t a2, int *a3)
{
  int *v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(void *, const void *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const void *v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = (int *)type metadata accessor for SleepWidgetViewModel();
  v7 = v6[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_22CC64F20();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = v6[6];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  if (v12((const void *)(a2 + v14), 1, v10))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v15, v16, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  *(_BYTE *)(a1 + v6[7]) = *(_BYTE *)(a2 + v6[7]);
  v18 = v6[8];
  v19 = (void *)(a1 + v18);
  v20 = (const void *)(a2 + v18);
  v21 = sub_22CC6504C();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(void (**)(void *, const void *, uint64_t))(v22 + 32);
  v23(v19, v20, v21);
  *(_QWORD *)(a1 + v6[9]) = *(_QWORD *)(a2 + v6[9]);
  v24 = v6[10];
  v25 = a1 + v24;
  v26 = a2 + v24;
  *(_QWORD *)(v25 + 16) = *(_QWORD *)(v26 + 16);
  *(_OWORD *)v25 = *(_OWORD *)v26;
  v27 = v6[11];
  v28 = (void *)(a1 + v27);
  v29 = (const void *)(a2 + v27);
  v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
  if (v30(a2 + v27, 1, v21))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    v23(v28, v29, v21);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v28, 0, 1, v21);
  }
  v32 = v6[12];
  v33 = (void *)(a1 + v32);
  v34 = (const void *)(a2 + v32);
  if (v30(a2 + v32, 1, v21))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    v23(v33, v34, v21);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v33, 0, 1, v21);
  }
  v36 = v6[13];
  v37 = (void *)(a1 + v36);
  v38 = (const void *)(a2 + v36);
  if (v30(a2 + v36, 1, v21))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    v23(v37, v38, v21);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v37, 0, 1, v21);
  }
  v40 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v40) = *(_BYTE *)(a2 + v40);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_22CC38340(uint64_t a1, uint64_t a2, int *a3)
{
  int *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  void *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  void *v35;
  const void *v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t);
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  const void *v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  const void *v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = (int *)type metadata accessor for SleepWidgetViewModel();
  v6 = v5[5];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_22CC64F20();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  v15 = v5[6];
  v16 = (void *)(a1 + v15);
  v17 = (void *)(a2 + v15);
  v18 = v11((void *)(a1 + v15), 1, v9);
  v19 = v11(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v16, v17, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v16, v9);
LABEL_12:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v16, v17, v9);
LABEL_13:
  *(_BYTE *)(a1 + v5[7]) = *(_BYTE *)(a2 + v5[7]);
  v21 = v5[8];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = sub_22CC6504C();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 40);
  v26(v22, v23, v24);
  v27 = v5[9];
  v28 = *(void **)(a1 + v27);
  *(_QWORD *)(a1 + v27) = *(_QWORD *)(a2 + v27);

  v29 = v5[10];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (_QWORD *)(a2 + v29);
  if (*(_QWORD *)(a1 + v29))
  {
    if (*v31)
    {
      *v30 = *v31;
      swift_bridgeObjectRelease();
      v32 = (void *)v30[1];
      v30[1] = v31[1];

      v33 = (void *)v30[2];
      v30[2] = v31[2];

      goto LABEL_18;
    }
    sub_22CC06744((uint64_t)v30);
  }
  *(_OWORD *)v30 = *(_OWORD *)v31;
  v30[2] = v31[2];
LABEL_18:
  v34 = v5[11];
  v35 = (void *)(a1 + v34);
  v36 = (const void *)(a2 + v34);
  v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  v38 = v37(a1 + v34, 1, v24);
  v39 = v37((uint64_t)v36, 1, v24);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(void *, const void *, uint64_t))(v25 + 32))(v35, v36, v24);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v35, 0, 1, v24);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v39)
  {
    (*(void (**)(void *, uint64_t))(v25 + 8))(v35, v24);
LABEL_23:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    goto LABEL_24;
  }
  v26((uint64_t)v35, (uint64_t)v36, v24);
LABEL_24:
  v41 = v5[12];
  v42 = (void *)(a1 + v41);
  v43 = (const void *)(a2 + v41);
  v44 = v37(a1 + v41, 1, v24);
  v45 = v37((uint64_t)v43, 1, v24);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(void *, const void *, uint64_t))(v25 + 32))(v42, v43, v24);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v42, 0, 1, v24);
      goto LABEL_30;
    }
    goto LABEL_29;
  }
  if (v45)
  {
    (*(void (**)(void *, uint64_t))(v25 + 8))(v42, v24);
LABEL_29:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    goto LABEL_30;
  }
  v26((uint64_t)v42, (uint64_t)v43, v24);
LABEL_30:
  v47 = v5[13];
  v48 = (void *)(a1 + v47);
  v49 = (const void *)(a2 + v47);
  v50 = v37(a1 + v47, 1, v24);
  v51 = v37((uint64_t)v49, 1, v24);
  if (!v50)
  {
    if (!v51)
    {
      v26((uint64_t)v48, (uint64_t)v49, v24);
      goto LABEL_36;
    }
    (*(void (**)(void *, uint64_t))(v25 + 8))(v48, v24);
    goto LABEL_35;
  }
  if (v51)
  {
LABEL_35:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    goto LABEL_36;
  }
  (*(void (**)(void *, const void *, uint64_t))(v25 + 32))(v48, v49, v24);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v48, 0, 1, v24);
LABEL_36:
  v53 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v53) = *(_BYTE *)(a2 + v53);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_22CC38874()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_21Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for SleepWidgetViewModel();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_22CC38910()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_22Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for SleepWidgetViewModel();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  return result;
}

uint64_t sub_22CC38998()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SleepWidgetViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ScheduleOccurrenceTextView(unsigned __int8 *a1, unsigned int a2)
{
  int v3;
  int v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && a1[16])
    return (*(_DWORD *)a1 + 253);
  if (*a1 <= 3u)
    v3 = 3;
  else
    v3 = *a1;
  v4 = v3 - 4;
  if (*a1 < 3u)
    v5 = -1;
  else
    v5 = v4;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ScheduleOccurrenceTextView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScheduleOccurrenceTextView()
{
  return &type metadata for ScheduleOccurrenceTextView;
}

ValueMetadata *type metadata accessor for ScheduleOccurrenceSectionView.Options()
{
  return &type metadata for ScheduleOccurrenceSectionView.Options;
}

unint64_t sub_22CC38AD8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255C3D340;
  if (!qword_255C3D340)
  {
    sub_22CC3663C();
    v2 = v1;
    v3[0] = sub_22CC38B60();
    v3[1] = sub_22CC38BC8((unint64_t *)&qword_254065698, &qword_2540656A0, (unint64_t *)&qword_2540656C8, MEMORY[0x24BDF3E48]);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_255C3D340);
  }
  return result;
}

unint64_t sub_22CC38B60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255C3D348;
  if (!qword_255C3D348)
  {
    sub_22CC36A68(255, &qword_255C3D0E0, &qword_255C3D0E8, (uint64_t (*)(uint64_t))sub_22CC36400, &qword_255C3D128);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDF4498], v1);
    atomic_store(result, (unint64_t *)&qword_255C3D348);
  }
  return result;
}

uint64_t sub_22CC38BC8(unint64_t *a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_22CC36538(255, a2, a3, a4);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDF1028], v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_22CC38C08()
{
  return sub_22CC07B74(&qword_255C3D350, (uint64_t (*)(uint64_t))sub_22CC38C34, MEMORY[0x24BDF4700]);
}

void sub_22CC38C34()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3D358)
  {
    sub_22CC082A8(255, &qword_255C3D148, (uint64_t (*)(uint64_t))sub_22CC36994, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_22CC16054(&qword_255C3D360, &qword_255C3D148, (uint64_t (*)(uint64_t))sub_22CC36994);
    v0 = sub_22CC658BC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3D358);
  }
}

uint64_t sub_22CC38CCC()
{
  sub_22CC36EF8();
  sub_22CC18FD8();
  sub_22CC07B74(&qword_255C3D200, (uint64_t (*)(uint64_t))sub_22CC36EF8, MEMORY[0x24BDF4700]);
  sub_22CC07B74(&qword_2540657A0, (uint64_t (*)(uint64_t))sub_22CC18FD8, MEMORY[0x24BEE30C8]);
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_22CC38D70()
{
  unint64_t result;

  result = qword_255C3D368;
  if (!qword_255C3D368)
  {
    result = MEMORY[0x22E3063F8](&unk_22CC67C04, &type metadata for ScheduleOccurrenceSectionView.Options);
    atomic_store(result, (unint64_t *)&qword_255C3D368);
  }
  return result;
}

unint64_t sub_22CC38DB8()
{
  unint64_t result;

  result = qword_255C3D370;
  if (!qword_255C3D370)
  {
    result = MEMORY[0x22E3063F8](&unk_22CC67BD4, &type metadata for ScheduleOccurrenceSectionView.Options);
    atomic_store(result, (unint64_t *)&qword_255C3D370);
  }
  return result;
}

unint64_t sub_22CC38E00()
{
  unint64_t result;

  result = qword_255C3D378;
  if (!qword_255C3D378)
  {
    result = MEMORY[0x22E3063F8](&unk_22CC67C2C, &type metadata for ScheduleOccurrenceSectionView.Options);
    atomic_store(result, (unint64_t *)&qword_255C3D378);
  }
  return result;
}

unint64_t sub_22CC38E48()
{
  unint64_t result;

  result = qword_255C3D380;
  if (!qword_255C3D380)
  {
    result = MEMORY[0x22E3063F8](&unk_22CC67C64, &type metadata for ScheduleOccurrenceSectionView.Options);
    atomic_store(result, (unint64_t *)&qword_255C3D380);
  }
  return result;
}

uint64_t sub_22CC38E8C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22CC38E9C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22CC38EAC()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_22CC38EBC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3D388)
  {
    sub_22CC082A8(255, &qword_255C3D390, (uint64_t (*)(uint64_t))sub_22CC38F54, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_22CC16054(&qword_255C3D3C8, &qword_255C3D390, (uint64_t (*)(uint64_t))sub_22CC38F54);
    v0 = sub_22CC65898();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3D388);
  }
}

void sub_22CC38F54(uint64_t a1)
{
  sub_22CC369B0(a1, &qword_255C3D398, sub_22CC38F70, sub_22CC39108);
}

void sub_22CC38F70(uint64_t a1)
{
  sub_22CC39214(a1, &qword_255C3D3A0, (uint64_t (*)(uint64_t, uint64_t, _QWORD))MEMORY[0x24BDEF3B8]);
}

void sub_22CC38F84(uint64_t a1)
{
  sub_22CC38F98(a1, &qword_255C3D3A8, (void (*)(uint64_t))sub_22CC39014);
}

void sub_22CC38F98(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    sub_22CC082A8(255, &qword_2540656A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDF40C0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
    v4 = sub_22CC6534C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_22CC39014()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3D3B0)
  {
    sub_22CC390B0(255, &qword_255C3D3B8, MEMORY[0x24BDF4108], MEMORY[0x24BDF40E8], MEMORY[0x24BEAA148]);
    sub_22CC36538(255, &qword_2540656A0, (unint64_t *)&qword_2540656C8, MEMORY[0x24BDF3E48]);
    v0 = sub_22CC6534C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3D3B0);
  }
}

void sub_22CC390B0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[2];

  if (!*a2)
  {
    v8[0] = a3;
    v8[1] = a4;
    v6 = MEMORY[0x22E3063BC](0, v8, a5, 0);
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_22CC39108(uint64_t a1)
{
  sub_22CC394D4(a1, &qword_255C3D3C0, (void (*)(uint64_t))sub_22CC28A58);
}

void sub_22CC3911C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3D3D0)
  {
    sub_22CC38EBC();
    sub_22CC36538(255, &qword_2540656A0, (unint64_t *)&qword_2540656C8, MEMORY[0x24BDF3E48]);
    v0 = sub_22CC6534C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3D3D0);
  }
}

void sub_22CC39198(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    sub_22CC36538(255, &qword_254065690, &qword_2540656C0, MEMORY[0x24BDF1948]);
    v4 = sub_22CC6534C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_22CC39214(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_22CC38F84(255);
    v7 = a3(a1, v6, MEMORY[0x24BDF5158]);
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_22CC39274()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255C3D3F0)
  {
    sub_22CC6525C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255C3D3F0);
  }
}

unint64_t sub_22CC392DC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[4];

  result = qword_255C3D400;
  if (!qword_255C3D400)
  {
    sub_22CC39014();
    v2 = v1;
    v3[2] = MEMORY[0x24BDF4108];
    v3[3] = MEMORY[0x24BDF40E8];
    v3[0] = swift_getOpaqueTypeConformance2();
    v3[1] = sub_22CC38BC8((unint64_t *)&qword_254065698, &qword_2540656A0, (unint64_t *)&qword_2540656C8, MEMORY[0x24BDF3E48]);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_255C3D400);
  }
  return result;
}

unint64_t sub_22CC39388()
{
  unint64_t result;
  uint64_t v1;

  result = qword_255C3D408;
  if (!qword_255C3D408)
  {
    sub_22CC082A8(255, &qword_2540656A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDF40C0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDF1028], v1);
    atomic_store(result, (unint64_t *)&qword_255C3D408);
  }
  return result;
}

void sub_22CC393E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_22CC3954C(255, &qword_255C3D418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
    v7 = v6;
    sub_22CC394C0(255);
    v9 = a3(a1, v7, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_22CC39460()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255C3D428)
  {
    sub_22CC394C0(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255C3D428);
  }
}

void sub_22CC394C0(uint64_t a1)
{
  sub_22CC394D4(a1, &qword_255C3D430, (void (*)(uint64_t))type metadata accessor for TimeView.TimeText);
}

void sub_22CC394D4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    sub_22CC6558C();
    v4 = sub_22CC6534C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t type metadata accessor for TimeView.TimeText(uint64_t a1)
{
  return sub_22CC0D950(a1, qword_255C3D4D0);
}

void sub_22CC3954C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_22CC082A8(255, &qword_255C3D420, (uint64_t (*)(uint64_t))sub_22CC39460, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    v7 = a3(a1, v6, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_22CC395C0()
{
  return sub_22CC07B74(&qword_255C3D440, type metadata accessor for TimeView.TimeText, (uint64_t)&unk_22CC67E60);
}

unint64_t sub_22CC395DC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255C3D448;
  if (!qword_255C3D448)
  {
    sub_22CC3954C(255, &qword_255C3D418, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
    v2 = v1;
    v3[0] = sub_22CC16054(&qword_255C3D450, &qword_255C3D420, (uint64_t (*)(uint64_t))sub_22CC39460);
    v3[1] = v3[0];
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDEF3E0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_255C3D448);
  }
  return result;
}

uint64_t sub_22CC39664(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_22CC082A8(0, &qword_255C3D420, (uint64_t (*)(uint64_t))sub_22CC39460, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_22CC396C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3D468)
  {
    sub_22CC36598(255, &qword_255C3D460, (unint64_t *)&qword_2540656B8, &qword_2540656E0, MEMORY[0x24BEE1768]);
    sub_22CC6558C();
    v0 = sub_22CC6534C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3D468);
  }
}

unint64_t sub_22CC39744()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  result = qword_255C3D470;
  if (!qword_255C3D470)
  {
    v1 = MEMORY[0x24BEE1768];
    sub_22CC36598(255, &qword_255C3D460, (unint64_t *)&qword_2540656B8, &qword_2540656E0, MEMORY[0x24BEE1768]);
    v3 = v2;
    v4[2] = MEMORY[0x24BDF1FA8];
    v4[3] = MEMORY[0x24BDF1F80];
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = sub_22CC38BC8(&qword_2540656B0, (unint64_t *)&qword_2540656B8, &qword_2540656E0, v1);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDED308], v3, v4);
    atomic_store(result, (unint64_t *)&qword_255C3D470);
  }
  return result;
}

uint64_t *sub_22CC39820(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22CC64F5C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_22CC398A8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_22CC64F5C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_22CC398DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_22CC64F5C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_22CC39938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_22CC64F5C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_22CC39994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_22CC64F5C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_22CC399F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_22CC64F5C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_22CC39A4C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC39A58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_22CC64F5C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_22CC39A94()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC39AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_22CC64F5C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_22CC39AE0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22CC64F5C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_22CC39B58()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255C3D508;
  if (!qword_255C3D508)
  {
    sub_22CC39198(255, &qword_255C3D3E0, (void (*)(uint64_t))sub_22CC3911C);
    v2 = v1;
    v3[0] = sub_22CC39BF0();
    v3[1] = sub_22CC38BC8(&qword_255C3D520, &qword_254065690, &qword_2540656C0, MEMORY[0x24BDF1948]);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_255C3D508);
  }
  return result;
}

unint64_t sub_22CC39BF0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255C3D510;
  if (!qword_255C3D510)
  {
    sub_22CC3911C();
    v2 = v1;
    v3[0] = sub_22CC07B74(&qword_255C3D518, (uint64_t (*)(uint64_t))sub_22CC38EBC, MEMORY[0x24BDF4498]);
    v3[1] = sub_22CC38BC8((unint64_t *)&qword_254065698, &qword_2540656A0, (unint64_t *)&qword_2540656C8, MEMORY[0x24BDF3E48]);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_255C3D510);
  }
  return result;
}

unint64_t sub_22CC39C94()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255C3D528;
  if (!qword_255C3D528)
  {
    sub_22CC393E8(255, &qword_255C3D530, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
    v2 = v1;
    v3[0] = sub_22CC395DC();
    v3[1] = sub_22CC28B94(&qword_255C3D458, (uint64_t (*)(uint64_t))sub_22CC394C0, sub_22CC395C0, sub_22CC28CD4);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDEF3E0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_255C3D528);
  }
  return result;
}

uint64_t sub_22CC39D2C()
{
  return sub_22CC28B94(qword_255C3D538, (uint64_t (*)(uint64_t))sub_22CC396C0, (uint64_t (*)(void))sub_22CC39744, sub_22CC28CD4);
}

uint64_t sub_22CC39D60()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22CC39D74()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC39D80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = type metadata accessor for SleepWidgetViewModel();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_22CC39DF4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC39E00(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 8) = -(char)a2;
  }
  else
  {
    v7 = type metadata accessor for SleepWidgetViewModel();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for GreetingSleepWidgetRectangularView()
{
  uint64_t result;

  result = qword_255C3D598;
  if (!qword_255C3D598)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22CC39EAC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SleepWidgetViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22CC39F20(uint64_t a1)
{
  uint64_t result;

  result = sub_22CC07B74(&qword_255C3D5F8, (uint64_t (*)(uint64_t))type metadata accessor for GreetingSleepWidgetRectangularView, (uint64_t)&unk_22CC67F0C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22CC39F5C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22CC39F6C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  double v7;
  double v8;
  double v9;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SleepWidgetViewModel() + 40));
  v2 = *v1;
  if (*v1)
  {
    v3 = (void *)v1[1];
    if (v3)
    {
      v4 = (void *)v1[2];
      v5 = v4;
      swift_bridgeObjectRetain();
      v6 = v3;
      objc_msgSend(v6, sel_sleepDuration);
      if (v7 > COERCE_DOUBLE(1) && v7 > 0.0)
      {
        sub_22CC0816C(v2, v3, v4);
        return 1;
      }
      objc_msgSend(v6, sel_inBedDuration);
      v9 = v8;
      sub_22CC0816C(v2, v3, v4);
      if (v9 > COERCE_DOUBLE(1) && v9 > 0.0)
        return 1;
    }
  }
  return 0;
}

uint64_t sub_22CC3A058@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v16 = a1;
  v2 = type metadata accessor for GreetingSleepWidgetRectangularView();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2);
  sub_22CC3A670();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_22CC3A234();
  if ((sub_22CC39F6C() & 1) != 0)
  {
    sub_22CC3A9F4();
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_22CC663F0;
    *(_QWORD *)(v10 + 32) = sub_22CC076B0();
    *(_QWORD *)(v10 + 40) = v11;
  }
  else
  {
    sub_22CC07934();
  }
  if (qword_254066798 != -1)
    swift_once();
  sub_22CC0DE10(v1, (uint64_t)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for GreetingSleepWidgetRectangularView);
  v12 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v13 = swift_allocObject();
  sub_22CC3A974((uint64_t)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12);
  sub_22CC3A6D0();
  sub_22CC3A72C();
  swift_bridgeObjectRetain();
  sub_22CC659A0();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(v16, v9, v6);
}

uint64_t sub_22CC3A234()
{
  uint64_t v0;
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  type metadata accessor for GreetingSleepWidgetRectangularView();
  v0 = sub_22CC072AC();
  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_22CC085FC(0, v1, 0);
    v2 = v11;
    sub_22CC08C70();
    v3 = v0 + 40;
    do
    {
      v4 = sub_22CC65D18();
      v6 = v5;
      v8 = *(_QWORD *)(v11 + 16);
      v7 = *(_QWORD *)(v11 + 24);
      if (v8 >= v7 >> 1)
        sub_22CC085FC(v7 > 1, v8 + 1, 1);
      v3 += 16;
      *(_QWORD *)(v11 + 16) = v8 + 1;
      v9 = v11 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v4;
      *(_QWORD *)(v9 + 40) = v6;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return v2;
}

uint64_t sub_22CC3A360@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  char *v18;
  uint64_t *v19;
  char *v20;
  uint64_t v21;
  unsigned __int8 v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;

  v37 = a2;
  v36 = sub_22CC6504C();
  v3 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (int *)type metadata accessor for SleepWidgetChartView();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (uint64_t *)((char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = a1 + *(int *)(type metadata accessor for GreetingSleepWidgetRectangularView() + 20);
  v10 = (uint64_t *)(v9 + *(int *)(type metadata accessor for SleepWidgetViewModel() + 40));
  if (*v10)
  {
    v38 = *v10;
    v39 = *(_OWORD *)(v10 + 1);
    sub_22CC2BCBC(&v40);
    v11 = v40;
  }
  else
  {
    v11 = 0;
    v40 = 0;
  }
  v12 = *(_QWORD *)a1;
  v13 = *(_BYTE *)(a1 + 8);
  sub_22CC11614(v12, v13);
  v14 = sub_22CC20A38(v12, v13);
  sub_22CC11750(v12, v13);
  if ((v14 & 1) != 0)
    v15 = 2;
  else
    v15 = 0;
  v16 = (_QWORD *)((char *)v8 + v6[7]);
  *v16 = swift_getKeyPath();
  v17 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_22CC082A8(0, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v18 = (char *)v8 + v6[8];
  *(_QWORD *)v18 = swift_getKeyPath();
  v18[8] = 0;
  v19 = (_QWORD *)((char *)v8 + v6[9]);
  *v19 = swift_getKeyPath();
  sub_22CC082A8(0, &qword_255C3CF20, (uint64_t (*)(uint64_t))MEMORY[0x24BDF17A8], v17);
  swift_storeEnumTagMultiPayload();
  v20 = (char *)v8 + v6[10];
  *(_QWORD *)v20 = swift_getKeyPath();
  v20[8] = 0;
  *v8 = v11;
  v8[1] = v15;
  sub_22CC65040();
  v21 = sub_22CC647C4();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v36);
  v8[2] = v21;
  v22 = sub_22CC655D4();
  v23 = sub_22CC655F8();
  sub_22CC655F8();
  if (sub_22CC655F8() != v22)
    v23 = sub_22CC655F8();
  sub_22CC11614(v12, v13);
  sub_22CC20A38(v12, v13);
  sub_22CC11750(v12, v13);
  sub_22CC652C8();
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v32 = v37;
  sub_22CC0DE10((uint64_t)v8, v37, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetChartView);
  sub_22CC3A6D0();
  v34 = v32 + *(int *)(v33 + 36);
  *(_BYTE *)v34 = v23;
  *(_QWORD *)(v34 + 8) = v25;
  *(_QWORD *)(v34 + 16) = v27;
  *(_QWORD *)(v34 + 24) = v29;
  *(_QWORD *)(v34 + 32) = v31;
  *(_BYTE *)(v34 + 40) = 0;
  return sub_22CC240F4((uint64_t)v8);
}

void sub_22CC3A670()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3D600)
  {
    sub_22CC3A6D0();
    sub_22CC3A72C();
    v0 = sub_22CC659AC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3D600);
  }
}

void sub_22CC3A6D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3D608)
  {
    type metadata accessor for SleepWidgetChartView();
    v0 = sub_22CC6534C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3D608);
  }
}

unint64_t sub_22CC3A72C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255C3D610;
  if (!qword_255C3D610)
  {
    sub_22CC3A6D0();
    v2 = v1;
    v3[0] = sub_22CC07B74(&qword_254065E10, (uint64_t (*)(uint64_t))type metadata accessor for SleepWidgetChartView, (uint64_t)&unk_22CC69288);
    v3[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_255C3D610);
  }
  return result;
}

uint64_t sub_22CC3A7AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v1 = type metadata accessor for GreetingSleepWidgetRectangularView();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 16) & ~v2;
  sub_22CC11750(*(_QWORD *)(v0 + v3), *(_BYTE *)(v0 + v3 + 8));
  v4 = v0 + v3 + *(int *)(v1 + 20);
  v5 = (int *)type metadata accessor for SleepWidgetViewModel();
  v6 = v4 + v5[5];
  v7 = sub_22CC64F20();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v10 = v4 + v5[6];
  if (!v9(v10, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10, v7);
  v11 = v4 + v5[8];
  v12 = sub_22CC6504C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v14(v11, v12);

  v15 = v4 + v5[10];
  if (*(_QWORD *)v15)
  {
    swift_bridgeObjectRelease();

  }
  v16 = v4 + v5[11];
  v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (!v17(v16, 1, v12))
    v14(v16, v12);
  v18 = v4 + v5[12];
  if (!v17(v18, 1, v12))
    v14(v18, v12);
  v19 = v4 + v5[13];
  if (!v17(v19, 1, v12))
    v14(v19, v12);
  return swift_deallocObject();
}

uint64_t sub_22CC3A974(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GreetingSleepWidgetRectangularView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22CC3A9B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for GreetingSleepWidgetRectangularView() - 8) + 80);
  return sub_22CC3A360(v1 + ((v3 + 16) & ~v3), a1);
}

void sub_22CC3A9F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254065EB0)
  {
    v0 = sub_22CC65E98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254065EB0);
  }
}

uint64_t sub_22CC3AA60()
{
  return sub_22CC07B74(&qword_255C3D618, (uint64_t (*)(uint64_t))sub_22CC3A670, MEMORY[0x24BE49E70]);
}

ValueMetadata *type metadata accessor for SleepLauncherComplicationView()
{
  return &type metadata for SleepLauncherComplicationView;
}

uint64_t sub_22CC3AA9C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22CC3AAAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t v17;
  uint64_t *v18;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v23 = a1;
  v1 = sub_22CC659D0();
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_22CC65274();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_22CC659DC();
  v6 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC3AD80();
  v22 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC65268();
  v12 = sub_22CC65238();
  v20[1] = v13;
  v20[2] = v12;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (qword_255C3C940 != -1)
    swift_once();
  v24 = MEMORY[0x24BEE4AF8];
  v14 = (uint64_t (*)(uint64_t))MEMORY[0x24BE49EA8];
  sub_22CC07B74(&qword_254066778, (uint64_t (*)(uint64_t))MEMORY[0x24BE49EA8], MEMORY[0x24BE49EB0]);
  sub_22CC082A8(0, &qword_2540667B0, v14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_22CC09A8C();
  swift_bridgeObjectRetain();
  sub_22CC65D48();
  sub_22CC659C4();
  v15 = sub_22CC657E4();
  KeyPath = swift_getKeyPath();
  v17 = v21;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v11, v8, v21);
  v18 = (uint64_t *)&v11[*(int *)(v22 + 36)];
  *v18 = KeyPath;
  v18[1] = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v17);
  v24 = qword_255C3FD58;
  v25 = qword_255C3FD60;
  swift_bridgeObjectRetain();
  sub_22CC65B68();
  sub_22CC3AE04();
  sub_22CC657CC();
  swift_bridgeObjectRelease();
  return sub_22CC3AE84((uint64_t)v11);
}

void sub_22CC3AD80()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3D620)
  {
    sub_22CC659DC();
    sub_22CC082A8(255, &qword_2540656A0, (uint64_t (*)(uint64_t))sub_22CC14E58, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF1008]);
    v0 = sub_22CC6534C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3D620);
  }
}

unint64_t sub_22CC3AE04()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255C3D628;
  if (!qword_255C3D628)
  {
    sub_22CC3AD80();
    v2 = v1;
    v3[0] = sub_22CC07B74(&qword_254066780, (uint64_t (*)(uint64_t))MEMORY[0x24BE49EB8], MEMORY[0x24BE49E88]);
    v3[1] = sub_22CC15B90();
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_255C3D628);
  }
  return result;
}

uint64_t sub_22CC3AE84(uint64_t a1)
{
  uint64_t v2;

  sub_22CC3AD80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22CC3AEC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14[3];
  uint64_t v15;

  v0 = sub_22CC652BC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BEE4AF8];
  sub_22CC652A4();
  v4 = sub_22CC652B0();
  v5 = sub_22CC65C40();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = swift_slowAlloc();
    v7 = swift_slowAlloc();
    v14[0] = v7;
    *(_DWORD *)v6 = 136446466;
    v13 = sub_22CC5C47C(0xD00000000000001DLL, 0x800000022CC67FF0, v14);
    sub_22CC65D00();
    *(_WORD *)(v6 + 12) = 2082;
    v8 = sub_22CC65A3C();
    v9 = MEMORY[0x22E305CA8](MEMORY[0x24BEE4AF8], v8);
    v13 = sub_22CC5C47C(v9, v10, v14);
    sub_22CC65D00();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CC04000, v4, v5, "[%{public}s] supportedFamilies: %{public}s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x22E306470](v7, -1, -1);
    MEMORY[0x22E306470](v6, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_beginAccess();
  return v15;
}

unint64_t sub_22CC3B0BC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255C3D630;
  if (!qword_255C3D630)
  {
    sub_22CC3B13C();
    v2 = v1;
    v3[0] = sub_22CC3AE04();
    v3[1] = sub_22CC07B74(&qword_255C3CF60, (uint64_t (*)(uint64_t))MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_255C3D630);
  }
  return result;
}

void sub_22CC3B13C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3D638)
  {
    sub_22CC3AD80();
    sub_22CC6558C();
    v0 = sub_22CC6534C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3D638);
  }
}

uint64_t SleepStageWidgetViewModel.baseAccessibilityIdentifier.getter()
{
  uint64_t v0;

  if (qword_254066790 != -1)
    swift_once();
  v0 = qword_254067958;
  swift_bridgeObjectRetain();
  return v0;
}

__n128 SleepStageWidgetViewModel.init(summaryResults:overrideState:)@<Q0>(__n128 *a1@<X0>, unsigned __int8 *a2@<X1>, __n128 *a3@<X8>)
{
  unint64_t v3;
  unsigned __int8 v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = *a2;
  result = *a1;
  *a3 = *a1;
  a3[1].n128_u64[0] = v3;
  a3[1].n128_u8[8] = v4;
  return result;
}

SleepWidgetUI::SleepStageWidgetViewModel::OverrideState_optional __swiftcall SleepStageWidgetViewModel.OverrideState.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (SleepWidgetUI::SleepStageWidgetViewModel::OverrideState_optional)rawValue;
}

uint64_t SleepStageWidgetViewModel.OverrideState.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

BOOL sub_22CC3B234(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_22CC3B248()
{
  sub_22CC65EE0();
  sub_22CC65EEC();
  return sub_22CC65EF8();
}

uint64_t sub_22CC3B28C()
{
  return sub_22CC65EEC();
}

uint64_t sub_22CC3B2B4()
{
  sub_22CC65EE0();
  sub_22CC65EEC();
  return sub_22CC65EF8();
}

SleepWidgetUI::SleepStageWidgetViewModel::OverrideState_optional sub_22CC3B2F4(Swift::Int *a1)
{
  return SleepStageWidgetViewModel.OverrideState.init(rawValue:)(*a1);
}

void sub_22CC3B2FC(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

id SleepStageWidgetViewModel.summaryResults.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id v3;
  void *v4;
  void *v5;
  id result;

  if (*(_BYTE *)(v1 + 24) == 2)
  {
    v3 = 0;
    v4 = 0;
    v5 = 0;
  }
  else
  {
    v4 = *(void **)(v1 + 8);
    v5 = *(void **)(v1 + 16);
    v3 = *(id *)v1;
    result = sub_22CC0812C(*(id *)v1, v4, v5);
  }
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return result;
}

uint64_t SleepStageWidgetViewModel.noDataTexts.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_22CC3B5B0(0, (unint64_t *)&qword_254065EB0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE3598]);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_22CC680B0;
  if (qword_254065700 != -1)
    swift_once();
  *(_QWORD *)(v0 + 32) = sub_22CC64F74();
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 48) = sub_22CC64F74();
  *(_QWORD *)(v0 + 56) = v2;
  *(_QWORD *)(v0 + 64) = 11565;
  *(_QWORD *)(v0 + 72) = 0xE200000000000000;
  sub_22CC3B5B0(0, &qword_254065E98, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE1250]);
  sub_22CC3B5F8();
  v3 = sub_22CC65C28();
  swift_bridgeObjectRelease();
  return v3;
}

id sub_22CC3B4D8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id v3;
  void *v4;
  void *v5;
  id result;

  if (*(_BYTE *)(v1 + 24) == 2)
  {
    v3 = 0;
    v4 = 0;
    v5 = 0;
  }
  else
  {
    v4 = *(void **)(v1 + 8);
    v5 = *(void **)(v1 + 16);
    v3 = *(id *)v1;
    result = sub_22CC0812C(*(id *)v1, v4, v5);
  }
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return result;
}

uint64_t sub_22CC3B540()
{
  return SleepStageWidgetViewModel.noDataTexts.getter();
}

uint64_t sub_22CC3B554()
{
  uint64_t v0;

  if (qword_254066790 != -1)
    swift_once();
  v0 = qword_254067958;
  swift_bridgeObjectRetain();
  return v0;
}

void sub_22CC3B5B0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, _QWORD))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, MEMORY[0x24BEE0D00]);
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_22CC3B5F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254065EA8;
  if (!qword_254065EA8)
  {
    sub_22CC3B5B0(255, &qword_254065E98, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE1250]);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_254065EA8);
  }
  return result;
}

unint64_t sub_22CC3B654()
{
  unint64_t result;

  result = qword_255C3D640[0];
  if (!qword_255C3D640[0])
  {
    result = MEMORY[0x22E3063F8](&protocol conformance descriptor for SleepStageWidgetViewModel.OverrideState, &type metadata for SleepStageWidgetViewModel.OverrideState);
    atomic_store(result, qword_255C3D640);
  }
  return result;
}

ValueMetadata *type metadata accessor for SleepStageWidgetViewModel()
{
  return &type metadata for SleepStageWidgetViewModel;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for SleepStageWidgetViewModel.OverrideState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SleepStageWidgetViewModel.OverrideState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22CC3B790 + 4 * byte_22CC680C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22CC3B7C4 + 4 * byte_22CC680C0[v4]))();
}

uint64_t sub_22CC3B7C4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22CC3B7CC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22CC3B7D4);
  return result;
}

uint64_t sub_22CC3B7E0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22CC3B7E8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22CC3B7EC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22CC3B7F4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22CC3B800(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_22CC3B808(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for SleepStageWidgetViewModel.OverrideState()
{
  return &type metadata for SleepStageWidgetViewModel.OverrideState;
}

uint64_t sub_22CC3B820@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v2 = sub_22CC652BC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC652A4();
  v6 = sub_22CC652B0();
  v7 = sub_22CC65C64();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v25 = v9;
    *(_DWORD *)v8 = 136446210;
    v24 = sub_22CC5C47C(0xD00000000000001BLL, 0x800000022CC68200, &v25);
    sub_22CC65D00();
    _os_log_impl(&dword_22CC04000, v6, v7, "[%{public}s] Returning placeholder for sleep widget...", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E306470](v9, -1, -1);
    MEMORY[0x22E306470](v8, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_22CC65034();
  v10 = (int *)type metadata accessor for SleepWidgetEntry(0);
  v11 = a1 + v10[5];
  sub_22CC65034();
  v12 = sub_22CC6504C();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v13(v11, 0, 1, v12);
  v14 = a1 + v10[6];
  v15 = (int *)type metadata accessor for SleepWidgetViewModel();
  v16 = v14 + v15[5];
  v17 = sub_22CC64F20();
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v18(v16, 1, 1, v17);
  v18(v14 + v15[6], 1, 1, v17);
  sub_22CC65040();
  v19 = v15[9];
  *(_QWORD *)(v14 + v19) = objc_msgSend(objc_allocWithZone((Class)sub_22CC651F0()), sel_init);
  v13(v14 + v15[11], 1, 1, v12);
  v13(v14 + v15[12], 1, 1, v12);
  v13(v14 + v15[13], 1, 1, v12);
  *(_QWORD *)v14 = 0;
  *(_BYTE *)(v14 + 8) = 1;
  *(_BYTE *)(v14 + v15[7]) = 0;
  v20 = (_QWORD *)(v14 + v15[10]);
  *v20 = 0;
  v20[1] = 0;
  v20[2] = 0;
  v21 = a1 + v10[7];
  v22 = sub_22CC65ACC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
}

void sub_22CC3BB18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t (**v28)(uint64_t);
  id v29;
  id v30;
  id v31;
  void *v32;
  void *v33;
  void *v34;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  void *v43;

  v4 = v3;
  v38 = a2;
  v39 = a3;
  v6 = type metadata accessor for SleepWidgetTimelineProvider(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22CC652BC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC652A4();
  v14 = sub_22CC652B0();
  v15 = sub_22CC65C64();
  if (os_log_type_enabled(v14, v15))
  {
    v35[1] = a1;
    v16 = swift_slowAlloc();
    v36 = v7;
    v17 = (uint8_t *)v16;
    v18 = swift_slowAlloc();
    v37 = v8;
    v19 = v18;
    v41 = (void *)v18;
    v35[0] = v10;
    *(_DWORD *)v17 = 136446210;
    v40 = sub_22CC5C47C(0xD00000000000001BLL, 0x800000022CC68200, (uint64_t *)&v41);
    sub_22CC65D00();
    _os_log_impl(&dword_22CC04000, v14, v15, "[%{public}s] Getting snapshot for sleep widget...", v17, 0xCu);
    swift_arrayDestroy();
    v20 = v19;
    v8 = v37;
    MEMORY[0x22E306470](v20, -1, -1);
    v21 = v17;
    v7 = v36;
    MEMORY[0x22E306470](v21, -1, -1);

    (*(void (**)(char *, _QWORD))(v11 + 8))(v13, v35[0]);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v38;
  *(_QWORD *)(v22 + 24) = v39;
  swift_retain();
  sub_22CC65AD8();
  v24 = (void *)v4[3];
  v25 = (void *)v4[4];
  v41 = (void *)v4[2];
  v23 = v41;
  v42 = v24;
  v43 = v25;
  sub_22CC0DE10((uint64_t)v4, (uint64_t)v9, type metadata accessor for SleepWidgetTimelineProvider);
  v26 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v27 = swift_allocObject();
  sub_22CC0DDCC((uint64_t)v9, v27 + v26, type metadata accessor for SleepWidgetTimelineProvider);
  v28 = (uint64_t (**)(uint64_t))(v27 + ((v8 + v26 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v28 = sub_22CC3EF84;
  v28[1] = (uint64_t (*)(uint64_t))v22;
  v29 = v23;
  v30 = v24;
  v31 = v25;
  swift_retain();
  SleepWidgetViewModelProvider.currentSleepWidgetViewModel(showLiveContent:completion:)(1, (void (*)(char *, void *))sub_22CC3ED5C, v27);
  swift_release();
  v32 = v41;
  v33 = v42;
  v34 = v43;
  swift_release();

}

uint64_t sub_22CC3BE14(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint8_t *v15;
  _QWORD v17[3];
  uint64_t v18;

  v6 = sub_22CC652BC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC652A4();
  v10 = sub_22CC652B0();
  v11 = sub_22CC65C64();
  if (os_log_type_enabled(v10, v11))
  {
    v17[1] = a3;
    v12 = swift_slowAlloc();
    v17[0] = a1;
    v13 = (uint8_t *)v12;
    v14 = swift_slowAlloc();
    v18 = v14;
    *(_DWORD *)v13 = 136446210;
    v17[2] = sub_22CC5C47C(0xD00000000000001BLL, 0x800000022CC68200, &v18);
    sub_22CC65D00();
    _os_log_impl(&dword_22CC04000, v10, v11, "[%{public}s] Returning snapshot for sleep widget", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E306470](v14, -1, -1);
    v15 = v13;
    a1 = v17[0];
    MEMORY[0x22E306470](v15, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return a2(a1);
}

void sub_22CC3BFCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t (**v28)(uint64_t);
  id v29;
  id v30;
  id v31;
  void *v32;
  void *v33;
  void *v34;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  void *v43;

  v4 = v3;
  v38 = a2;
  v39 = a3;
  v6 = type metadata accessor for SleepWidgetTimelineProvider(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22CC652BC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC652A4();
  v14 = sub_22CC652B0();
  v15 = sub_22CC65C64();
  if (os_log_type_enabled(v14, v15))
  {
    v35[1] = a1;
    v16 = swift_slowAlloc();
    v36 = v7;
    v17 = (uint8_t *)v16;
    v18 = swift_slowAlloc();
    v37 = v8;
    v19 = v18;
    v41 = (void *)v18;
    v35[0] = v10;
    *(_DWORD *)v17 = 136446210;
    v40 = sub_22CC5C47C(0xD00000000000001BLL, 0x800000022CC68200, (uint64_t *)&v41);
    sub_22CC65D00();
    _os_log_impl(&dword_22CC04000, v14, v15, "[%{public}s] Getting timeline for sleep widget...", v17, 0xCu);
    swift_arrayDestroy();
    v20 = v19;
    v8 = v37;
    MEMORY[0x22E306470](v20, -1, -1);
    v21 = v17;
    v7 = v36;
    MEMORY[0x22E306470](v21, -1, -1);

    (*(void (**)(char *, _QWORD))(v11 + 8))(v13, v35[0]);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v38;
  *(_QWORD *)(v22 + 24) = v39;
  swift_retain();
  sub_22CC65AD8();
  v24 = (void *)v4[3];
  v25 = (void *)v4[4];
  v41 = (void *)v4[2];
  v23 = v41;
  v42 = v24;
  v43 = v25;
  sub_22CC0DE10((uint64_t)v4, (uint64_t)v9, type metadata accessor for SleepWidgetTimelineProvider);
  v26 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v27 = swift_allocObject();
  sub_22CC0DDCC((uint64_t)v9, v27 + v26, type metadata accessor for SleepWidgetTimelineProvider);
  v28 = (uint64_t (**)(uint64_t))(v27 + ((v8 + v26 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v28 = sub_22CC3EDB4;
  v28[1] = (uint64_t (*)(uint64_t))v22;
  v29 = v23;
  v30 = v24;
  v31 = v25;
  swift_retain();
  SleepWidgetViewModelProvider.currentSleepWidgetViewModel(showLiveContent:completion:)(1, (void (*)(char *, void *))sub_22CC3ED5C, v27);
  swift_release();
  v32 = v41;
  v33 = v42;
  v34 = v43;
  swift_release();

}

uint64_t sub_22CC3C2C8(uint64_t a1, void (*a2)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(_QWORD);
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v50 = a1;
  sub_22CC3EEE8();
  v4 = v3;
  v52 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v51 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v39 - v7;
  v9 = sub_22CC6504C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v44 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_22CC65AB4();
  v48 = *(_QWORD *)(v12 - 8);
  v49 = v12;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v46 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v47 = (char *)&v39 - v15;
  v16 = sub_22CC652BC();
  v45 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC652A4();
  v19 = sub_22CC652B0();
  v20 = sub_22CC65C64();
  if (os_log_type_enabled(v19, v20))
  {
    v42 = v4;
    v21 = swift_slowAlloc();
    v41 = v9;
    v22 = (uint8_t *)v21;
    v23 = swift_slowAlloc();
    v43 = a2;
    v24 = v23;
    v54 = v23;
    v40 = v16;
    *(_DWORD *)v22 = 136446210;
    v53 = sub_22CC5C47C(0xD00000000000001BLL, 0x800000022CC68200, &v54);
    v4 = v42;
    sub_22CC65D00();
    _os_log_impl(&dword_22CC04000, v19, v20, "[%{public}s] Returning timeline for sleep widget", v22, 0xCu);
    swift_arrayDestroy();
    v25 = v24;
    a2 = v43;
    MEMORY[0x22E306470](v25, -1, -1);
    v26 = v22;
    v9 = v41;
    MEMORY[0x22E306470](v26, -1, -1);

    (*(void (**)(char *, uint64_t))(v45 + 8))(v18, v40);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v45 + 8))(v18, v16);
  }
  v27 = type metadata accessor for SleepWidgetEntry(0);
  v28 = v50;
  sub_22CC0DCF0(v50 + *(int *)(v27 + 20), (uint64_t)v8, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  v30 = v47;
  if (v29 == 1)
  {
    sub_22CC3ED60((uint64_t)v8);
    sub_22CC65AA8();
  }
  else
  {
    v31 = v44;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v44, v8, v9);
    sub_22CC65A9C();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v31, v9);
  }
  sub_22CC082A8(0, qword_255C3D670, type metadata accessor for SleepWidgetEntry, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v32 = *(unsigned __int8 *)(*(_QWORD *)(v27 - 8) + 80);
  v33 = (v32 + 32) & ~v32;
  v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_22CC663F0;
  sub_22CC0DE10(v28, v34 + v33, type metadata accessor for SleepWidgetEntry);
  v36 = v48;
  v35 = v49;
  (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v46, v30, v49);
  sub_22CC07B74(&qword_254066558, type metadata accessor for SleepWidgetEntry, (uint64_t)&unk_22CC682E0);
  v37 = v51;
  sub_22CC65AE4();
  a2(v37);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v37, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v30, v35);
}

uint64_t sub_22CC3C74C(uint64_t a1, void *a2, uint64_t a3, void (*a4)(char *), uint64_t a5)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  id v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *);
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v57 = a5;
  v59 = a4;
  v53 = a3;
  v56 = type metadata accessor for SleepWidgetEntry(0);
  MEMORY[0x24BDAC7A8](v56);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v50 - v10;
  v58 = sub_22CC6504C();
  v63 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for SleepWidgetViewModel();
  MEMORY[0x24BDAC7A8](v14);
  v55 = (uint64_t)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_22CC652BC();
  v62 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v50 - v21;
  v60 = v19;
  v61 = v20;
  if (a2)
  {
    v23 = a2;
    sub_22CC652A4();
    v24 = a2;
    v25 = a2;
    v26 = sub_22CC652B0();
    v27 = sub_22CC65C4C();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v54 = a1;
      v29 = v28;
      v51 = swift_slowAlloc();
      v65 = v51;
      *(_DWORD *)v29 = 136446466;
      v52 = v13;
      v64 = sub_22CC5C47C(0xD00000000000001BLL, 0x800000022CC68200, &v65);
      sub_22CC65D00();
      *(_WORD *)(v29 + 12) = 2082;
      v64 = (uint64_t)a2;
      v30 = a2;
      sub_22CC0DAF0();
      v31 = sub_22CC65B44();
      v64 = sub_22CC5C47C(v31, v32, &v65);
      sub_22CC65D00();
      v13 = v52;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22CC04000, v26, v27, "[%{public}s] Error getting sleep widget viewModel: %{public}s", (uint8_t *)v29, 0x16u);
      v33 = v51;
      swift_arrayDestroy();
      MEMORY[0x22E306470](v33, -1, -1);
      v34 = v29;
      a1 = v54;
      MEMORY[0x22E306470](v34, -1, -1);

    }
    else
    {

    }
    v16 = v61;
    (*(void (**)(char *, uint64_t))(v62 + 8))(v22, v61);
    v19 = v60;
  }
  sub_22CC652A4();
  v35 = v55;
  sub_22CC0DE10(a1, v55, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetViewModel);
  v36 = sub_22CC652B0();
  v37 = sub_22CC65C64();
  if (os_log_type_enabled(v36, v37))
  {
    v38 = swift_slowAlloc();
    v54 = a1;
    v39 = v38;
    v51 = swift_slowAlloc();
    v52 = v11;
    v65 = v51;
    *(_DWORD *)v39 = 136446466;
    v64 = sub_22CC5C47C(0xD00000000000001BLL, 0x800000022CC68200, &v65);
    sub_22CC65D00();
    *(_WORD *)(v39 + 12) = 2082;
    v40 = SleepWidgetViewModel.description.getter();
    v64 = sub_22CC5C47C(v40, v41, &v65);
    sub_22CC65D00();
    swift_bridgeObjectRelease();
    sub_22CC0DE54(v35, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetViewModel);
    _os_log_impl(&dword_22CC04000, v36, v37, "[%{public}s] Returning sleep widget viewModel: %{public}s", (uint8_t *)v39, 0x16u);
    v42 = v51;
    swift_arrayDestroy();
    v11 = v52;
    MEMORY[0x22E306470](v42, -1, -1);
    v43 = v39;
    a1 = v54;
    MEMORY[0x22E306470](v43, -1, -1);

    (*(void (**)(char *, uint64_t))(v62 + 8))(v60, v61);
  }
  else
  {
    sub_22CC0DE54(v35, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetViewModel);

    (*(void (**)(char *, uint64_t))(v62 + 8))(v19, v16);
  }
  sub_22CC65040();
  v44 = v58;
  if ((*(_BYTE *)(a1 + 8) & 1) != 0 || (unint64_t)(*(_QWORD *)a1 - 6) > 0xFFFFFFFFFFFFFFFBLL)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v63 + 56))(v11, 1, 1, v58);
  }
  else
  {
    type metadata accessor for SleepWidgetTimelineProvider(0);
    Calendar.midnight(after:)((uint64_t)v11);
  }
  v45 = v63;
  (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v8, v13, v44);
  v46 = v56;
  sub_22CC0DCF0((uint64_t)v11, (uint64_t)&v8[*(int *)(v56 + 20)], (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  sub_22CC0DE10(a1, (uint64_t)&v8[*(int *)(v46 + 24)], (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetViewModel);
  v47 = (uint64_t)&v8[*(int *)(v46 + 28)];
  SleepWidgetViewModel.timelineEntryRelevance.getter(v47);
  v48 = sub_22CC65ACC();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v47, 0, 1, v48);
  v59(v8);
  sub_22CC0DE54((uint64_t)v8, type metadata accessor for SleepWidgetEntry);
  sub_22CC3ED60((uint64_t)v11);
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v13, v44);
}

uint64_t sub_22CC3CDA4@<X0>(uint64_t a1@<X8>)
{
  return sub_22CC3B820(a1);
}

uint64_t sub_22CC3CDC0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_22CC0ED00;
  return sub_22CC3CE10(a1);
}

uint64_t sub_22CC3CE10(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[4] = a1;
  v2[5] = v1;
  v2[6] = type metadata accessor for SleepWidgetEntry(0);
  v2[7] = swift_task_alloc();
  v3 = sub_22CC652BC();
  v2[8] = v3;
  v2[9] = *(_QWORD *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_22CC3CEA4()
{
  _QWORD *v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  sub_22CC652A4();
  v1 = sub_22CC652B0();
  v2 = sub_22CC65C64();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = v0[11];
    v4 = v0[8];
    v5 = v0[9];
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v14 = v7;
    *(_DWORD *)v6 = 136446210;
    v0[3] = sub_22CC5C47C(0xD00000000000001BLL, 0x800000022CC68200, &v14);
    sub_22CC65D00();
    _os_log_impl(&dword_22CC04000, v1, v2, "[%{public}s] fetching current entry for relevance...", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E306470](v7, -1, -1);
    MEMORY[0x22E306470](v6, -1, -1);

    v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  }
  else
  {
    v3 = v0[11];
    v4 = v0[8];
    v9 = v0[9];

    v8 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  }
  v8(v3, v4);
  v0[12] = v8;
  v10 = v0[5];
  v11 = swift_task_alloc();
  v0[13] = v11;
  *(_QWORD *)(v11 + 16) = v10;
  *(_BYTE *)(v11 + 24) = 1;
  v12 = (_QWORD *)swift_task_alloc();
  v0[14] = v12;
  *v12 = v0;
  v12[1] = sub_22CC3D0A0;
  return sub_22CC65EA4();
}

uint64_t sub_22CC3D0A0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_22CC3D0FC()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint8_t *v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  sub_22CC652A4();
  v1 = sub_22CC652B0();
  v2 = sub_22CC65C64();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(void (**)(uint64_t, uint64_t))(v0 + 96);
    v4 = *(_QWORD *)(v0 + 80);
    v5 = *(_QWORD *)(v0 + 64);
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v13 = v7;
    *(_DWORD *)v6 = 136446210;
    *(_QWORD *)(v0 + 16) = sub_22CC5C47C(0xD00000000000001BLL, 0x800000022CC68200, &v13);
    sub_22CC65D00();
    _os_log_impl(&dword_22CC04000, v1, v2, "[%{public}s] determining relevance for entry...", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E306470](v7, -1, -1);
    MEMORY[0x22E306470](v6, -1, -1);

    v3(v4, v5);
  }
  else
  {
    v8 = *(void (**)(uint64_t, uint64_t))(v0 + 96);
    v9 = *(_QWORD *)(v0 + 80);
    v10 = *(_QWORD *)(v0 + 64);

    v8(v9, v10);
  }
  v11 = *(_QWORD *)(v0 + 56);
  sub_22CC0B714(*(_QWORD *)(v0 + 32));
  sub_22CC0DE54(v11, type metadata accessor for SleepWidgetEntry);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_22CC3D2C0(uint64_t a1, _QWORD *a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t (**v19)(uint64_t);
  id v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  void *v25;
  _BYTE v26[4];
  int v27;
  void *v28;
  void *v29;
  void *v30;

  v27 = a3;
  v5 = type metadata accessor for SleepWidgetTimelineProvider(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  sub_22CC3EC58();
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v10 + 16))(&v26[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)], a1, v9);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = swift_allocObject();
  (*(void (**)(unint64_t, _BYTE *, uint64_t))(v10 + 32))(v13 + v12, &v26[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)], v9);
  v15 = (void *)a2[3];
  v16 = (void *)a2[4];
  v28 = (void *)a2[2];
  v14 = v28;
  v29 = v15;
  v30 = v16;
  sub_22CC0DE10((uint64_t)a2, (uint64_t)&v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for SleepWidgetTimelineProvider);
  v17 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v18 = swift_allocObject();
  sub_22CC0DDCC((uint64_t)&v26[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)], v18 + v17, type metadata accessor for SleepWidgetTimelineProvider);
  v19 = (uint64_t (**)(uint64_t))(v18 + ((v7 + v17 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v19 = sub_22CC3ED1C;
  v19[1] = (uint64_t (*)(uint64_t))v13;
  v20 = v14;
  v21 = v15;
  v22 = v16;
  swift_retain();
  SleepWidgetViewModelProvider.currentSleepWidgetViewModel(showLiveContent:completion:)(v27, (void (*)(char *, void *))sub_22CC3ED5C, v18);
  swift_release();
  v23 = v28;
  v24 = v29;
  v25 = v30;
  swift_release();

}

uint64_t sub_22CC3D48C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v6;

  v2 = type metadata accessor for SleepWidgetEntry(0);
  MEMORY[0x24BDAC7A8](v2);
  sub_22CC0DE10(a1, (uint64_t)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  sub_22CC3EC58();
  return sub_22CC65BD4();
}

uint64_t sub_22CC3D514(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_22CC0BC9C;
  return sub_22CC3CE10(a1);
}

SleepWidgetUI::SleepWidget __swiftcall SleepWidget.init()()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  SleepWidgetUI::SleepWidget result;

  v1 = v0;
  v2 = sub_22CC65B2C();
  *v1 = v2;
  v1[1] = (uint64_t)v3;
  result.kind._object = v3;
  result.kind._countAndFlagsBits = v2;
  return result;
}

uint64_t SleepWidget.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t OpaqueTypeConformance2;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  __int128 v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v68 = a1;
  v2 = sub_22CC6507C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SleepWidgetTimelineProvider(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (uint64_t *)((char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v54 - v10;
  sub_22CC3DC98();
  v13 = v12;
  v55 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC3DEBC(0);
  v59 = v16;
  v57 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v56 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC3DF64(0);
  v64 = v18;
  *(_QWORD *)&v60 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v58 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC3E040(0);
  v66 = *(_QWORD *)(v20 - 8);
  v67 = v20;
  MEMORY[0x24BDAC7A8](v20);
  v63 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC3E148(0);
  v65 = v22;
  v62 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v61 = (char *)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = *v1;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDCEF70], v2);
  swift_bridgeObjectRetain();
  sub_22CC65088();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3C40]), sel_init);
  *v9 = v24;
  v25 = objc_allocWithZone(MEMORY[0x24BEA9950]);
  v26 = v24;
  v27 = (void *)sub_22CC65B20();
  v28 = objc_msgSend(v25, sel_initWithIdentifier_healthStore_options_, v27, v26, 1);

  v9[1] = v28;
  v29 = objc_allocWithZone(MEMORY[0x24BDD3968]);
  v30 = v26;
  v31 = v28;
  v32 = objc_msgSend(v29, sel_init);
  v9[2] = v30;
  v9[3] = v31;
  v9[4] = v32;
  sub_22CC0DDCC((uint64_t)v9, (uint64_t)v11, type metadata accessor for SleepWidgetTimelineProvider);
  sub_22CC3DCF8();
  sub_22CC3DE24();
  sub_22CC07B74(&qword_254065860, type metadata accessor for SleepWidgetTimelineProvider, (uint64_t)"ሰ\"X(");
  sub_22CC65A84();
  if (qword_254065700 != -1)
    swift_once();
  v69 = sub_22CC64F74();
  v70 = v33;
  v34 = sub_22CC07B74(&qword_254065948, (uint64_t (*)(uint64_t))sub_22CC3DC98, MEMORY[0x24BDFB170]);
  v35 = sub_22CC08C70();
  v36 = MEMORY[0x24BEE0D00];
  v37 = v56;
  sub_22CC654FC();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v15, v13);
  v73 = sub_22CC64F74();
  v74 = v38;
  v69 = v13;
  v70 = v36;
  v71 = v34;
  v72 = v35;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v41 = v58;
  v40 = v59;
  sub_22CC654D8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v37, v40);
  _s13SleepWidgetUI0aB4ViewV17supportedFamiliesSay0B3Kit0B6FamilyOGvgZ_0();
  v69 = v40;
  v70 = v36;
  v71 = OpaqueTypeConformance2;
  v72 = v35;
  v42 = swift_getOpaqueTypeConformance2();
  v44 = v63;
  v43 = v64;
  sub_22CC654E4();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v41, v43);
  v45 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
  sub_22CC082A8(0, &qword_254065960, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAFE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  sub_22CC65A54();
  v46 = swift_allocObject();
  v60 = xmmword_22CC663F0;
  *(_OWORD *)(v46 + 16) = xmmword_22CC663F0;
  sub_22CC65A48();
  sub_22CC082A8(0, (unint64_t *)&qword_254065958, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], v45);
  v47 = sub_22CC65A3C();
  v48 = *(_QWORD *)(v47 - 8);
  v49 = (*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  v50 = swift_allocObject();
  *(_OWORD *)(v50 + 16) = v60;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v48 + 104))(v50 + v49, *MEMORY[0x24BDFAED8], v47);
  v69 = v43;
  v70 = v42;
  swift_getOpaqueTypeConformance2();
  v51 = v61;
  v52 = v67;
  sub_22CC654F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v44, v52);
  sub_22CC3E4DC();
  return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v51, v65);
}

uint64_t type metadata accessor for SleepWidgetTimelineProvider(uint64_t a1)
{
  return sub_22CC0D950(a1, (uint64_t *)&unk_254065AA0);
}

void sub_22CC3DC98()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254065950)
  {
    sub_22CC3DCF8();
    sub_22CC3DE24();
    v0 = sub_22CC65A90();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254065950);
  }
}

void sub_22CC3DCF8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2540658C0)
  {
    sub_22CC3DD5C();
    sub_22CC0C63C();
    v0 = sub_22CC6534C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2540658C0);
  }
}

void sub_22CC3DD5C()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_254065930)
  {
    type metadata accessor for SleepWidgetView();
    sub_22CC6504C();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
    sub_22CC07B74(qword_254065868, (uint64_t (*)(uint64_t))type metadata accessor for SleepWidgetView, (uint64_t)&protocol conformance descriptor for SleepWidgetView);
    sub_22CC07B74(&qword_2540657B0, v0, MEMORY[0x24BDCE930]);
    v1 = sub_22CC658A4();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_254065930);
  }
}

unint64_t sub_22CC3DE24()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_2540658B8;
  if (!qword_2540658B8)
  {
    sub_22CC3DCF8();
    v2 = v1;
    v3[0] = sub_22CC07B74(&qword_254065928, (uint64_t (*)(uint64_t))sub_22CC3DD5C, MEMORY[0x24BDF44C8]);
    v3[1] = sub_22CC07B74(&qword_254065908, (uint64_t (*)(uint64_t))sub_22CC0C63C, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_2540658B8);
  }
  return result;
}

void sub_22CC3DEBC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!qword_254065900)
  {
    sub_22CC3DC98();
    v3 = v2;
    v4 = sub_22CC07B74(&qword_254065948, (uint64_t (*)(uint64_t))sub_22CC3DC98, MEMORY[0x24BDFB170]);
    v5 = sub_22CC08C70();
    v8[0] = v3;
    v8[1] = MEMORY[0x24BEE0D00];
    v8[2] = v4;
    v8[3] = v5;
    v6 = MEMORY[0x22E3063BC](a1, v8, MEMORY[0x24BDFABC8], 0);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_254065900);
  }
}

void sub_22CC3DF64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  if (!qword_2540658D0)
  {
    sub_22CC3DEBC(255);
    v3 = v2;
    sub_22CC3DC98();
    sub_22CC07B74(&qword_254065948, (uint64_t (*)(uint64_t))sub_22CC3DC98, MEMORY[0x24BDFB170]);
    v4 = sub_22CC08C70();
    v7[0] = v3;
    v7[1] = MEMORY[0x24BEE0D00];
    v7[2] = swift_getOpaqueTypeConformance2();
    v7[3] = v4;
    v5 = MEMORY[0x22E3063BC](a1, v7, MEMORY[0x24BDFAB98], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_2540658D0);
  }
}

void sub_22CC3E040(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  if (!qword_2540658E0)
  {
    sub_22CC3DF64(255);
    v3 = v2;
    sub_22CC3DEBC(255);
    sub_22CC3DC98();
    sub_22CC07B74(&qword_254065948, (uint64_t (*)(uint64_t))sub_22CC3DC98, MEMORY[0x24BDFB170]);
    v4 = sub_22CC08C70();
    v7[2] = swift_getOpaqueTypeConformance2();
    v7[3] = v4;
    v7[0] = v3;
    v7[1] = swift_getOpaqueTypeConformance2();
    v5 = MEMORY[0x22E3063BC](a1, v7, MEMORY[0x24BDFABA8], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_2540658E0);
  }
}

void sub_22CC3E148(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  if (!qword_2540658E8)
  {
    sub_22CC3E040(255);
    v3 = v2;
    sub_22CC3DF64(255);
    sub_22CC3DEBC(255);
    sub_22CC3DC98();
    sub_22CC07B74(&qword_254065948, (uint64_t (*)(uint64_t))sub_22CC3DC98, MEMORY[0x24BDFB170]);
    v4 = sub_22CC08C70();
    v7[2] = swift_getOpaqueTypeConformance2();
    v7[3] = v4;
    swift_getOpaqueTypeConformance2();
    v7[0] = v3;
    v7[1] = swift_getOpaqueTypeConformance2();
    v5 = MEMORY[0x22E3063BC](a1, v7, MEMORY[0x24BDFABB8], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_2540658E8);
  }
}

uint64_t sub_22CC3E274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v4 = type metadata accessor for SleepWidgetViewModel();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for SleepWidgetView();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (uint64_t *)((char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v25 - v11;
  sub_22CC3DD5C();
  v14 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for SleepWidgetEntry(0);
  sub_22CC0DE10(a1 + *(int *)(v17 + 24), (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetViewModel);
  *v10 = swift_getKeyPath();
  sub_22CC082A8(0, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v18 = (uint64_t *)((char *)v10 + v7[5]);
  *v18 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  v19 = (char *)v10 + v7[6];
  *(_QWORD *)v19 = swift_getKeyPath();
  *((_QWORD *)v19 + 1) = 0;
  *((_QWORD *)v19 + 2) = 0;
  *((_QWORD *)v19 + 3) = 0;
  v19[32] = 0;
  sub_22CC0DDCC((uint64_t)v6, (uint64_t)v10 + v7[7], (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetViewModel);
  sub_22CC0DDCC((uint64_t)v10, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetView);
  sub_22CC0DE10((uint64_t)v12, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetView);
  v20 = &v16[*(int *)(v14 + 52)];
  v21 = sub_22CC6504C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v20, a1, v21);
  sub_22CC0DE54((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetView);
  v22 = sub_22CC652F8();
  sub_22CC0DE10((uint64_t)v16, a2, (uint64_t (*)(_QWORD))sub_22CC3DD5C);
  sub_22CC3DCF8();
  *(_QWORD *)(a2 + *(int *)(v23 + 36)) = v22;
  return sub_22CC0DE54((uint64_t)v16, (uint64_t (*)(_QWORD))sub_22CC3DD5C);
}

id sub_22CC3E4DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  id result;
  void *v10;
  unsigned int v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t OpaqueTypeConformance2;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;

  v1 = v0;
  v2 = sub_22CC652BC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v36 - v7;
  result = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (result)
  {
    v10 = result;
    v11 = objc_msgSend(result, sel_hksp_supportsSleepWidget);

    v38 = v11;
    if (v11)
    {
      sub_22CC652A4();
      v12 = sub_22CC652B0();
      v13 = sub_22CC65C40();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        v15 = swift_slowAlloc();
        v40 = v15;
        v37 = v2;
        *(_DWORD *)v14 = 136446210;
        v39 = sub_22CC5C47C(0xD00000000000006BLL, 0x800000022CC69950, &v40);
        sub_22CC65D00();
        _os_log_impl(&dword_22CC04000, v12, v13, "[%{public}s] sleep widget supported", v14, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22E306470](v15, -1, -1);
        MEMORY[0x22E306470](v14, -1, -1);

        (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v37);
LABEL_10:
        sub_22CC3E148(0);
        sub_22CC3E040(255);
        v23 = v22;
        sub_22CC3DF64(255);
        v25 = v24;
        sub_22CC3DEBC(255);
        v27 = v26;
        sub_22CC3DC98();
        v29 = v28;
        v30 = sub_22CC07B74(&qword_254065948, (uint64_t (*)(uint64_t))sub_22CC3DC98, MEMORY[0x24BDFB170]);
        v31 = sub_22CC08C70();
        v32 = MEMORY[0x24BEE0D00];
        v40 = v29;
        v41 = MEMORY[0x24BEE0D00];
        v42 = v30;
        v43 = v31;
        OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
        v40 = v27;
        v41 = v32;
        v42 = OpaqueTypeConformance2;
        v43 = v31;
        v34 = swift_getOpaqueTypeConformance2();
        v40 = v25;
        v41 = v34;
        v35 = swift_getOpaqueTypeConformance2();
        v40 = v23;
        v41 = v35;
        swift_getOpaqueTypeConformance2();
        return (id)sub_22CC65508();
      }

      v20 = *(void (**)(char *, uint64_t))(v3 + 8);
      v21 = v8;
    }
    else
    {
      sub_22CC652A4();
      v16 = sub_22CC652B0();
      v17 = sub_22CC65C64();
      if (os_log_type_enabled(v16, v17))
      {
        v37 = v1;
        v18 = (uint8_t *)swift_slowAlloc();
        v19 = swift_slowAlloc();
        v40 = v19;
        *(_DWORD *)v18 = 136446210;
        v39 = sub_22CC5C47C(0xD00000000000006BLL, 0x800000022CC69950, &v40);
        sub_22CC65D00();
        _os_log_impl(&dword_22CC04000, v16, v17, "[%{public}s] sleep widget not supported", v18, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x22E306470](v19, -1, -1);
        MEMORY[0x22E306470](v18, -1, -1);
      }

      v20 = *(void (**)(char *, uint64_t))(v3 + 8);
      v21 = v6;
    }
    v20(v21, v2);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_22CC3E8FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_22CC65B2C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_22CC3E930()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for SleepWidget()
{
  return &type metadata for SleepWidget;
}

uint64_t sub_22CC3E950()
{
  sub_22CC3E148(255);
  sub_22CC3E040(255);
  sub_22CC3DF64(255);
  sub_22CC3DEBC(255);
  sub_22CC3DC98();
  sub_22CC07B74(&qword_254065948, (uint64_t (*)(uint64_t))sub_22CC3DC98, MEMORY[0x24BDFB170]);
  sub_22CC08C70();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22CC3EA74()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC3EA80(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_22CC65118();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 32)], a2, v8);
  }
}

uint64_t sub_22CC3EAFC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_22CC3EB08(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_22CC65118();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 32)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_22CC3EB7C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22CC65118();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22CC3EC0C()
{
  return sub_22CC07B74(&qword_254066558, type metadata accessor for SleepWidgetEntry, (uint64_t)&unk_22CC682E0);
}

uint64_t type metadata accessor for SleepWidgetEntry(uint64_t a1)
{
  return sub_22CC0D950(a1, qword_254066030);
}

void sub_22CC3EC4C(uint64_t a1)
{
  uint64_t v1;

  sub_22CC3D2C0(a1, *(_QWORD **)(v1 + 16), *(unsigned __int8 *)(v1 + 24));
}

void sub_22CC3EC58()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254065F80)
  {
    type metadata accessor for SleepWidgetEntry(255);
    v0 = sub_22CC65BE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254065F80);
  }
}

uint64_t sub_22CC3ECBC()
{
  uint64_t v0;
  uint64_t v1;

  sub_22CC3EC58();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_22CC3ED1C(uint64_t a1)
{
  sub_22CC3EC58();
  return sub_22CC3D48C(a1);
}

uint64_t sub_22CC3ED60(uint64_t a1)
{
  uint64_t v2;

  sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22CC3EDB4(uint64_t a1)
{
  uint64_t v1;

  return sub_22CC3C2C8(a1, *(void (**)(_QWORD))(v1 + 16));
}

uint64_t objectdestroy_6Tm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id *v3;
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for SleepWidgetTimelineProvider(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (id *)(v0 + ((v2 + 16) & ~v2));

  v4 = (char *)v3 + *(int *)(v1 + 32);
  v5 = sub_22CC65118();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22CC3EE84(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(type metadata accessor for SleepWidgetTimelineProvider(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_22CC3C74C(a1, a2, v2 + v6, *(void (**)(char *))v7, *(_QWORD *)(v7 + 8));
}

void sub_22CC3EEE8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3D668)
  {
    type metadata accessor for SleepWidgetEntry(255);
    sub_22CC07B74(&qword_254066558, type metadata accessor for SleepWidgetEntry, (uint64_t)&unk_22CC682E0);
    v0 = sub_22CC65AF0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3D668);
  }
}

uint64_t sub_22CC3EF60()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22CC3EF84(uint64_t a1)
{
  uint64_t v1;

  return sub_22CC3BE14(a1, *(uint64_t (**)(uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24));
}

char *sub_22CC3EFA0(char *a1, char *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  id v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  void (*v63)(char *, char *, uint64_t);
  unsigned int (*v64)(char *, uint64_t, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22CC6504C();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = *(int *)(a3 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v64 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    v60 = v8;
    v63 = v9;
    if (v64(&a2[v10], 1, v7))
    {
      sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v9(v11, v12, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
    v61 = a3;
    v62 = a2;
    v15 = *(int *)(a3 + 24);
    v16 = &a1[v15];
    v17 = &a2[v15];
    *(_QWORD *)v16 = *(_QWORD *)&a2[v15];
    v16[8] = a2[v15 + 8];
    v18 = (int *)type metadata accessor for SleepWidgetViewModel();
    v19 = v18[5];
    v20 = &v16[v19];
    v21 = &v17[v19];
    v22 = sub_22CC64F20();
    v23 = *(_QWORD *)(v22 - 8);
    v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    if (v24(v21, 1, v22))
    {
      sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
    }
    v26 = v18[6];
    v27 = &v16[v26];
    v28 = &v17[v26];
    if (v24(&v17[v26], 1, v22))
    {
      sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v27, v28, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v27, 0, 1, v22);
    }
    v16[v18[7]] = v17[v18[7]];
    v63(&v16[v18[8]], &v17[v18[8]], v7);
    v30 = v18[9];
    v31 = *(void **)&v17[v30];
    *(_QWORD *)&v16[v30] = v31;
    v32 = v18[10];
    v33 = &v16[v32];
    v34 = &v17[v32];
    v35 = *(_QWORD *)&v17[v32];
    v36 = v31;
    if (v35)
    {
      v38 = (void *)*((_QWORD *)v34 + 1);
      v37 = (void *)*((_QWORD *)v34 + 2);
      *(_QWORD *)v33 = v35;
      *((_QWORD *)v33 + 1) = v38;
      *((_QWORD *)v33 + 2) = v37;
      swift_bridgeObjectRetain();
      v39 = v38;
      v40 = v37;
    }
    else
    {
      *(_OWORD *)v33 = *(_OWORD *)v34;
      *((_QWORD *)v33 + 2) = *((_QWORD *)v34 + 2);
    }
    v41 = v18[11];
    v42 = &v16[v41];
    v43 = &v17[v41];
    if (v64(&v17[v41], 1, v7))
    {
      sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      v63(v42, v43, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v42, 0, 1, v7);
    }
    v45 = v18[12];
    v46 = &v16[v45];
    v47 = &v17[v45];
    if (v64(&v17[v45], 1, v7))
    {
      sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      v63(v46, v47, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v46, 0, 1, v7);
    }
    v49 = v18[13];
    v50 = &v16[v49];
    v51 = &v17[v49];
    if (v64(&v17[v49], 1, v7))
    {
      sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      v63(v50, v51, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v50, 0, 1, v7);
    }
    v53 = *(int *)(v61 + 28);
    v54 = &a1[v53];
    v55 = (char *)v62 + v53;
    v56 = sub_22CC65ACC();
    v57 = *(_QWORD *)(v56 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
    {
      sub_22CC082A8(0, &qword_2540660D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFB270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v54, v55, v56);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
    }
  }
  return a1;
}

uint64_t sub_22CC3F4C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;

  v4 = sub_22CC6504C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  v7 = a1 + *(int *)(a2 + 20);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v8(v7, 1, v4))
    v6(v7, v4);
  v24 = a2;
  v9 = a1 + *(int *)(a2 + 24);
  v10 = (int *)type metadata accessor for SleepWidgetViewModel();
  v11 = v9 + v10[5];
  v12 = sub_22CC64F20();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (!v14(v11, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  v15 = v9 + v10[6];
  if (!v14(v15, 1, v12))
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v12);
  v6(v9 + v10[8], v4);

  v16 = v9 + v10[10];
  if (*(_QWORD *)v16)
  {
    swift_bridgeObjectRelease();

  }
  v17 = v9 + v10[11];
  if (!v8(v17, 1, v4))
    v6(v17, v4);
  v18 = v9 + v10[12];
  if (!v8(v18, 1, v4))
    v6(v18, v4);
  v19 = v9 + v10[13];
  if (!v8(v19, 1, v4))
    v6(v19, v4);
  v20 = a1 + *(int *)(v24 + 28);
  v21 = sub_22CC65ACC();
  v22 = *(_QWORD *)(v21 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
  return result;
}

char *sub_22CC3F6F8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(const void *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v59)(void *, const void *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;

  v6 = sub_22CC6504C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v59 = v8;
  v60 = v7;
  if (v12(&a2[v9], 1, v6))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  v61 = a3;
  v62 = a2;
  v14 = *(int *)(a3 + 24);
  v63 = a1;
  v15 = &a1[v14];
  v16 = &a2[v14];
  *(_QWORD *)v15 = *(_QWORD *)&a2[v14];
  v15[8] = a2[v14 + 8];
  v17 = (int *)type metadata accessor for SleepWidgetViewModel();
  v18 = v17[5];
  v19 = &v15[v18];
  v20 = &v16[v18];
  v21 = sub_22CC64F20();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48);
  if (v23(v20, 1, v21))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v19, v20, v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  v25 = v17[6];
  v26 = &v15[v25];
  v27 = &v16[v25];
  if (v23(&v16[v25], 1, v21))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v26, v27, v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v26, 0, 1, v21);
  }
  v15[v17[7]] = v16[v17[7]];
  v59(&v15[v17[8]], &v16[v17[8]], v6);
  v29 = v17[9];
  v30 = *(void **)&v16[v29];
  *(_QWORD *)&v15[v29] = v30;
  v31 = v17[10];
  v32 = &v15[v31];
  v33 = &v16[v31];
  v34 = *(_QWORD *)&v16[v31];
  v35 = v30;
  if (v34)
  {
    v37 = (void *)*((_QWORD *)v33 + 1);
    v36 = (void *)*((_QWORD *)v33 + 2);
    *(_QWORD *)v32 = v34;
    *((_QWORD *)v32 + 1) = v37;
    *((_QWORD *)v32 + 2) = v36;
    swift_bridgeObjectRetain();
    v38 = v37;
    v39 = v36;
  }
  else
  {
    *(_OWORD *)v32 = *(_OWORD *)v33;
    *((_QWORD *)v32 + 2) = *((_QWORD *)v33 + 2);
  }
  v40 = v17[11];
  v41 = &v15[v40];
  v42 = &v16[v40];
  if (v12(&v16[v40], 1, v6))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    v59(v41, v42, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v41, 0, 1, v6);
  }
  v44 = v17[12];
  v45 = &v15[v44];
  v46 = &v16[v44];
  if (v12(&v16[v44], 1, v6))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    v59(v45, v46, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v45, 0, 1, v6);
  }
  v48 = v17[13];
  v49 = &v15[v48];
  v50 = &v16[v48];
  if (v12(&v16[v48], 1, v6))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    v59(v49, v50, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v60 + 56))(v49, 0, 1, v6);
  }
  v52 = *(int *)(v61 + 28);
  v53 = &v63[v52];
  v54 = &v62[v52];
  v55 = sub_22CC65ACC();
  v56 = *(_QWORD *)(v55 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
  {
    sub_22CC082A8(0, &qword_2540660D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFB270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v53, v54, v55);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
  }
  return v63;
}

uint64_t sub_22CC3FBDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  void *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(void *, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  char *v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  id v39;
  uint64_t v40;
  _QWORD *v41;
  __int128 *v42;
  uint64_t v43;
  void *v44;
  void *v45;
  id v46;
  void *v47;
  void *v48;
  id v49;
  void *v50;
  void *v51;
  id v52;
  id v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  void *v57;
  char *v58;
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  char *v64;
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  char *v70;
  int v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(void *, uint64_t, uint64_t);
  int v81;
  int v82;
  uint64_t v83;
  void (*v85)(uint64_t, char *, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t (*v90)(uint64_t, uint64_t, uint64_t);

  v6 = sub_22CC6504C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(a1 + v9, 1, v6);
  v90 = v12;
  v14 = v12((uint64_t)v11, 1, v6);
  v85 = (void (*)(uint64_t, char *, uint64_t))v8;
  v86 = v7;
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v10, v11, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v10, (uint64_t)v11, v6);
LABEL_7:
  v87 = a3;
  v88 = a2;
  v16 = *(int *)(a3 + 24);
  v89 = a1;
  v17 = a1 + v16;
  v18 = (uint64_t *)(a2 + v16);
  v19 = *v18;
  *(_BYTE *)(v17 + 8) = *((_BYTE *)v18 + 8);
  *(_QWORD *)v17 = v19;
  v20 = (int *)type metadata accessor for SleepWidgetViewModel();
  v21 = v20[5];
  v22 = (void *)(v17 + v21);
  v23 = (char *)v18 + v21;
  v24 = sub_22CC64F20();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v28)
  {
    (*(void (**)(void *, uint64_t))(v25 + 8))(v22, v24);
LABEL_12:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, char *, uint64_t))(v25 + 24))(v22, v23, v24);
LABEL_13:
  v30 = v20[6];
  v31 = (void *)(v17 + v30);
  v32 = (char *)v18 + v30;
  v33 = v26((void *)(v17 + v30), 1, v24);
  v34 = v26(v32, 1, v24);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(void *, char *, uint64_t))(v25 + 16))(v31, v32, v24);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v31, 0, 1, v24);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v34)
  {
    (*(void (**)(void *, uint64_t))(v25 + 8))(v31, v24);
LABEL_18:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, char *, uint64_t))(v25 + 24))(v31, v32, v24);
LABEL_19:
  *(_BYTE *)(v17 + v20[7]) = *((_BYTE *)v18 + v20[7]);
  v85(v17 + v20[8], (char *)v18 + v20[8], v6);
  v36 = v20[9];
  v37 = *(void **)((char *)v18 + v36);
  v38 = *(void **)(v17 + v36);
  *(_QWORD *)(v17 + v36) = v37;
  v39 = v37;

  v40 = v20[10];
  v41 = (_QWORD *)(v17 + v40);
  v42 = (__int128 *)((char *)v18 + v40);
  v43 = *(uint64_t *)((char *)v18 + v40);
  if (*(_QWORD *)(v17 + v40))
  {
    if (v43)
    {
      *v41 = v43;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v44 = (void *)v41[1];
      v45 = (void *)*((_QWORD *)v42 + 1);
      v41[1] = v45;
      v46 = v45;

      v47 = (void *)v41[2];
      v48 = (void *)*((_QWORD *)v42 + 2);
      v41[2] = v48;
      v49 = v48;

    }
    else
    {
      sub_22CC06744(v17 + v40);
      v54 = *((_QWORD *)v42 + 2);
      *(_OWORD *)v41 = *v42;
      v41[2] = v54;
    }
  }
  else if (v43)
  {
    *v41 = v43;
    v50 = (void *)*((_QWORD *)v42 + 1);
    v41[1] = v50;
    v51 = (void *)*((_QWORD *)v42 + 2);
    v41[2] = v51;
    swift_bridgeObjectRetain();
    v52 = v50;
    v53 = v51;
  }
  else
  {
    v55 = *v42;
    v41[2] = *((_QWORD *)v42 + 2);
    *(_OWORD *)v41 = v55;
  }
  v56 = v20[11];
  v57 = (void *)(v17 + v56);
  v58 = (char *)v18 + v56;
  v59 = v90(v17 + v56, 1, v6);
  v60 = v90((uint64_t)v58, 1, v6);
  if (v59)
  {
    if (!v60)
    {
      (*(void (**)(void *, char *, uint64_t))(v86 + 16))(v57, v58, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v57, 0, 1, v6);
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  if (v60)
  {
    (*(void (**)(void *, uint64_t))(v86 + 8))(v57, v6);
LABEL_34:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    goto LABEL_35;
  }
  v85((uint64_t)v57, v58, v6);
LABEL_35:
  v62 = v20[12];
  v63 = (void *)(v17 + v62);
  v64 = (char *)v18 + v62;
  v65 = v90(v17 + v62, 1, v6);
  v66 = v90((uint64_t)v64, 1, v6);
  if (v65)
  {
    if (!v66)
    {
      (*(void (**)(void *, char *, uint64_t))(v86 + 16))(v63, v64, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v63, 0, 1, v6);
      goto LABEL_41;
    }
    goto LABEL_40;
  }
  if (v66)
  {
    (*(void (**)(void *, uint64_t))(v86 + 8))(v63, v6);
LABEL_40:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    goto LABEL_41;
  }
  v85((uint64_t)v63, v64, v6);
LABEL_41:
  v68 = v20[13];
  v69 = (void *)(v17 + v68);
  v70 = (char *)v18 + v68;
  v71 = v90(v17 + v68, 1, v6);
  v72 = v90((uint64_t)v70, 1, v6);
  if (v71)
  {
    v73 = v88;
    if (!v72)
    {
      (*(void (**)(void *, char *, uint64_t))(v86 + 16))(v69, v70, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v69, 0, 1, v6);
      goto LABEL_47;
    }
    goto LABEL_46;
  }
  v73 = v88;
  if (v72)
  {
    (*(void (**)(void *, uint64_t))(v86 + 8))(v69, v6);
LABEL_46:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    goto LABEL_47;
  }
  v85((uint64_t)v69, v70, v6);
LABEL_47:
  v75 = *(int *)(v87 + 28);
  v76 = (void *)(v89 + v75);
  v77 = (void *)(v73 + v75);
  v78 = sub_22CC65ACC();
  v79 = *(_QWORD *)(v78 - 8);
  v80 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v79 + 48);
  v81 = v80(v76, 1, v78);
  v82 = v80(v77, 1, v78);
  if (!v81)
  {
    if (!v82)
    {
      (*(void (**)(void *, void *, uint64_t))(v79 + 24))(v76, v77, v78);
      return v89;
    }
    (*(void (**)(void *, uint64_t))(v79 + 8))(v76, v78);
    goto LABEL_52;
  }
  if (v82)
  {
LABEL_52:
    sub_22CC082A8(0, &qword_2540660D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFB270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
    return v89;
  }
  (*(void (**)(void *, void *, uint64_t))(v79 + 16))(v76, v77, v78);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
  return v89;
}

char *sub_22CC4031C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(const void *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v51)(void *, const void *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;

  v6 = sub_22CC6504C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v51 = v8;
  v52 = v7;
  if (v12(&a2[v9], 1, v6))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  v53 = a3;
  v54 = a2;
  v14 = *(int *)(a3 + 24);
  v55 = a1;
  v15 = &a1[v14];
  v16 = &a2[v14];
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v15[8] = v16[8];
  v17 = (int *)type metadata accessor for SleepWidgetViewModel();
  v18 = v17[5];
  v19 = &v15[v18];
  v20 = &v16[v18];
  v21 = sub_22CC64F20();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48);
  if (v23(v20, 1, v21))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  v25 = v17[6];
  v26 = &v15[v25];
  v27 = &v16[v25];
  if (v23(&v16[v25], 1, v21))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v26, v27, v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v26, 0, 1, v21);
  }
  v15[v17[7]] = v16[v17[7]];
  v51(&v15[v17[8]], &v16[v17[8]], v6);
  *(_QWORD *)&v15[v17[9]] = *(_QWORD *)&v16[v17[9]];
  v29 = v17[10];
  v30 = &v15[v29];
  v31 = &v16[v29];
  *((_QWORD *)v30 + 2) = *((_QWORD *)v31 + 2);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  v32 = v17[11];
  v33 = &v15[v32];
  v34 = &v16[v32];
  if (v12(&v16[v32], 1, v6))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    v51(v33, v34, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v33, 0, 1, v6);
  }
  v36 = v17[12];
  v37 = &v15[v36];
  v38 = &v16[v36];
  if (v12(&v16[v36], 1, v6))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    v51(v37, v38, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v37, 0, 1, v6);
  }
  v40 = v17[13];
  v41 = &v15[v40];
  v42 = &v16[v40];
  if (v12(&v16[v40], 1, v6))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    v51(v41, v42, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v41, 0, 1, v6);
  }
  v44 = *(int *)(v53 + 28);
  v45 = &v55[v44];
  v46 = &v54[v44];
  v47 = sub_22CC65ACC();
  v48 = *(_QWORD *)(v47 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
  {
    sub_22CC082A8(0, &qword_2540660D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFB270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v45, v46, v47);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  }
  return v55;
}

uint64_t sub_22CC407D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  void *v40;
  void *v41;
  uint64_t v42;
  void *v43;
  const void *v44;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  const void *v50;
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  const void *v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(void *, uint64_t, uint64_t);
  int v67;
  int v68;
  uint64_t v69;
  void (*v71)(uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(uint64_t, uint64_t, uint64_t);

  v6 = sub_22CC6504C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = *(int *)(a3 + 20);
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v13 = v12(a1 + v9, 1, v6);
  v76 = v12;
  v14 = v12((uint64_t)v11, 1, v6);
  v71 = v8;
  v72 = v7;
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v10, v11, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v10, (uint64_t)v11, v6);
LABEL_7:
  v73 = a3;
  v74 = a2;
  v16 = *(int *)(a3 + 24);
  v75 = a1;
  v17 = a1 + v16;
  v18 = a2 + v16;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  v19 = (int *)type metadata accessor for SleepWidgetViewModel();
  v20 = v19[5];
  v21 = (void *)(v17 + v20);
  v22 = (void *)(v18 + v20);
  v23 = sub_22CC64F20();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25(v22, 1, v23);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 32))(v21, v22, v23);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v27)
  {
    (*(void (**)(void *, uint64_t))(v24 + 8))(v21, v23);
LABEL_12:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v24 + 40))(v21, v22, v23);
LABEL_13:
  v29 = v19[6];
  v30 = (void *)(v17 + v29);
  v31 = (void *)(v18 + v29);
  v32 = v25((void *)(v17 + v29), 1, v23);
  v33 = v25(v31, 1, v23);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 32))(v30, v31, v23);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v30, 0, 1, v23);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v33)
  {
    (*(void (**)(void *, uint64_t))(v24 + 8))(v30, v23);
LABEL_18:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(void *, void *, uint64_t))(v24 + 40))(v30, v31, v23);
LABEL_19:
  *(_BYTE *)(v17 + v19[7]) = *(_BYTE *)(v18 + v19[7]);
  v71(v17 + v19[8], v18 + v19[8], v6);
  v35 = v19[9];
  v36 = *(void **)(v17 + v35);
  *(_QWORD *)(v17 + v35) = *(_QWORD *)(v18 + v35);

  v37 = v19[10];
  v38 = (_QWORD *)(v17 + v37);
  v39 = (_QWORD *)(v18 + v37);
  if (*(_QWORD *)(v17 + v37))
  {
    if (*v39)
    {
      *v38 = *v39;
      swift_bridgeObjectRelease();
      v40 = (void *)v38[1];
      v38[1] = v39[1];

      v41 = (void *)v38[2];
      v38[2] = v39[2];

      goto LABEL_24;
    }
    sub_22CC06744((uint64_t)v38);
  }
  *(_OWORD *)v38 = *(_OWORD *)v39;
  v38[2] = v39[2];
LABEL_24:
  v42 = v19[11];
  v43 = (void *)(v17 + v42);
  v44 = (const void *)(v18 + v42);
  v45 = v76(v17 + v42, 1, v6);
  v46 = v76((uint64_t)v44, 1, v6);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(void *, const void *, uint64_t))(v72 + 32))(v43, v44, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v43, 0, 1, v6);
      goto LABEL_30;
    }
    goto LABEL_29;
  }
  if (v46)
  {
    (*(void (**)(void *, uint64_t))(v72 + 8))(v43, v6);
LABEL_29:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    goto LABEL_30;
  }
  v71((uint64_t)v43, (uint64_t)v44, v6);
LABEL_30:
  v48 = v19[12];
  v49 = (void *)(v17 + v48);
  v50 = (const void *)(v18 + v48);
  v51 = v76(v17 + v48, 1, v6);
  v52 = v76((uint64_t)v50, 1, v6);
  if (v51)
  {
    if (!v52)
    {
      (*(void (**)(void *, const void *, uint64_t))(v72 + 32))(v49, v50, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v49, 0, 1, v6);
      goto LABEL_36;
    }
    goto LABEL_35;
  }
  if (v52)
  {
    (*(void (**)(void *, uint64_t))(v72 + 8))(v49, v6);
LABEL_35:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    goto LABEL_36;
  }
  v71((uint64_t)v49, (uint64_t)v50, v6);
LABEL_36:
  v54 = v19[13];
  v55 = (void *)(v17 + v54);
  v56 = (const void *)(v18 + v54);
  v57 = v76(v17 + v54, 1, v6);
  v58 = v76((uint64_t)v56, 1, v6);
  if (v57)
  {
    v59 = v74;
    if (!v58)
    {
      (*(void (**)(void *, const void *, uint64_t))(v72 + 32))(v55, v56, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v55, 0, 1, v6);
      goto LABEL_42;
    }
    goto LABEL_41;
  }
  v59 = v74;
  if (v58)
  {
    (*(void (**)(void *, uint64_t))(v72 + 8))(v55, v6);
LABEL_41:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_42;
  }
  v71((uint64_t)v55, (uint64_t)v56, v6);
LABEL_42:
  v61 = *(int *)(v73 + 28);
  v62 = (void *)(v75 + v61);
  v63 = (void *)(v59 + v61);
  v64 = sub_22CC65ACC();
  v65 = *(_QWORD *)(v64 - 8);
  v66 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v65 + 48);
  v67 = v66(v62, 1, v64);
  v68 = v66(v63, 1, v64);
  if (!v67)
  {
    if (!v68)
    {
      (*(void (**)(void *, void *, uint64_t))(v65 + 40))(v62, v63, v64);
      return v75;
    }
    (*(void (**)(void *, uint64_t))(v65 + 8))(v62, v64);
    goto LABEL_47;
  }
  if (v68)
  {
LABEL_47:
    sub_22CC082A8(0, &qword_2540660D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFB270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    return v75;
  }
  (*(void (**)(void *, void *, uint64_t))(v65 + 32))(v62, v63, v64);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
  return v75;
}

uint64_t sub_22CC40EC4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC40ED0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_22CC6504C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = a3[5];
    }
    else
    {
      v14 = type metadata accessor for SleepWidgetViewModel();
      v12 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v13 = a3[6];
      }
      else
      {
        sub_22CC082A8(0, &qword_2540660D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFB270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        v8 = v15;
        v12 = *(_QWORD *)(v15 - 8);
        v13 = a3[7];
      }
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_22CC40FBC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC40FC8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v8 = sub_22CC6504C();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      v16 = type metadata accessor for SleepWidgetViewModel();
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[6];
      }
      else
      {
        sub_22CC082A8(0, &qword_2540660D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFB270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        v10 = v17;
        v14 = *(_QWORD *)(v17 - 8);
        v15 = a4[7];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_22CC410BC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_22CC6504C();
  if (v0 <= 0x3F)
  {
    sub_22CC082A8(319, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    if (v1 <= 0x3F)
    {
      type metadata accessor for SleepWidgetViewModel();
      if (v2 <= 0x3F)
      {
        sub_22CC082A8(319, &qword_2540660D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFB270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t SleepWidgetModelProviding.hasDataLastNight.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  id v4;
  double v5;
  double v7;
  double v8;
  uint64_t v9;
  id v10;
  void *v11;

  (*(void (**)(uint64_t *__return_ptr))(a2 + 8))(&v9);
  v2 = v9;
  if (v9)
  {
    v4 = v10;
    v3 = v11;
    if (v10)
    {
      objc_msgSend(v10, sel_sleepDuration);
      if (v5 > COERCE_DOUBLE(1) && v5 > 0.0)
      {
        sub_22CC0816C(v2, v4, v3);
        return 1;
      }
      objc_msgSend(v4, sel_inBedDuration);
      v8 = v7;
      sub_22CC0816C(v2, v4, v3);
      if (v8 > COERCE_DOUBLE(1) && v8 > 0.0)
        return 1;
    }
    else
    {
      sub_22CC0816C(v9, 0, v11);
    }
  }
  return 0;
}

uint64_t SleepWidgetModelProviding.hasAsleepDataLastNight.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  id v4;
  double v5;
  double v6;
  uint64_t v8;
  id v9;
  void *v10;

  (*(void (**)(uint64_t *__return_ptr))(a2 + 8))(&v8);
  v2 = v8;
  if (v8)
  {
    v4 = v9;
    v3 = v10;
    if (v9)
    {
      objc_msgSend(v9, sel_sleepDuration);
      v6 = v5;
      sub_22CC0816C(v2, v4, v3);
      if (v6 > COERCE_DOUBLE(1) && v6 > 0.0)
        return 1;
    }
    else
    {
      sub_22CC0816C(v8, 0, v10);
    }
  }
  return 0;
}

uint64_t SleepWidgetModelProviding.summaryDurationTitle.getter(uint64_t a1, uint64_t a2)
{
  void (*v4)(uint64_t *__return_ptr);
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  double v12;
  double v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  double v21;
  double v22;
  uint64_t v24;
  id v25;
  void *v26;

  v4 = *(void (**)(uint64_t *__return_ptr))(a2 + 8);
  v4(&v24);
  v5 = v24;
  if (!v24)
    goto LABEL_8;
  v6 = v25;
  v7 = v26;
  if (!v26)
  {
LABEL_7:
    sub_22CC0816C(v5, v6, v7);
    goto LABEL_8;
  }
  v8 = v25;
  v9 = v7;
  swift_bridgeObjectRetain();
  v10 = objc_msgSend(v9, sel_averageSleepDuration);
  if (!v10)
  {
    sub_22CC0816C(v5, v6, v7);
    goto LABEL_7;
  }
  v11 = v10;
  objc_msgSend(v10, sel__value);
  v13 = v12;

  sub_22CC0816C(v5, v6, v7);
  sub_22CC0816C(v5, v6, v7);
  if (v13 > COERCE_DOUBLE(1))
    goto LABEL_16;
LABEL_8:
  ((void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))v4)(&v24, a1, a2);
  v14 = v24;
  if (!v24)
    goto LABEL_16;
  v15 = v25;
  v16 = v26;
  if (!v26)
    goto LABEL_15;
  v17 = v25;
  v18 = v16;
  swift_bridgeObjectRetain();
  v19 = objc_msgSend(v18, sel_averageInBedDuration);
  if (!v19)
  {
    sub_22CC0816C(v14, v15, v16);
LABEL_15:
    sub_22CC0816C(v14, v15, v16);
    goto LABEL_16;
  }
  v20 = v19;
  objc_msgSend(v19, sel__value);
  v22 = v21;

  sub_22CC0816C(v14, v15, v16);
  sub_22CC0816C(v14, v15, v16);
  if (v22 > COERCE_DOUBLE(1))
  {
    if (qword_254065700 == -1)
      return sub_22CC64F74();
    goto LABEL_18;
  }
LABEL_16:
  if (qword_254065700 != -1)
LABEL_18:
    swift_once();
  return sub_22CC64F74();
}

uint64_t SleepWidgetModelProviding.summaryDurationText.getter(uint64_t a1, uint64_t a2)
{
  void (*v4)(uint64_t *__return_ptr);
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  void *v29;
  uint64_t v30;
  uint64_t v32;
  id v33;
  void *v34;

  v4 = *(void (**)(uint64_t *__return_ptr))(a2 + 8);
  v4(&v32);
  v5 = v32;
  if (!v32)
  {
LABEL_9:
    ((void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))v4)(&v32, a1, a2);
    v18 = v32;
    if (!v32)
      return 0;
    v19 = v33;
    v20 = v34;
    if (v34)
    {
      v21 = v33;
      v22 = v20;
      swift_bridgeObjectRetain();
      v23 = objc_msgSend(v22, sel_averageInBedDuration);
      if (v23)
      {
        v24 = v23;
        objc_msgSend(v23, sel__value);
        v26 = v25;

        sub_22CC0816C(v18, v19, v20);
        sub_22CC0816C(v18, v19, v20);
        if (v26 <= COERCE_DOUBLE(1))
          return 0;
        sub_22CC65BEC();
        v28 = v27;
        v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14F8]), sel_init);
        objc_msgSend(v16, sel_setUnitsStyle_, 5);
        objc_msgSend(v16, sel_setAllowedUnits_, 96);
        v17 = objc_msgSend(v16, sel_stringFromTimeInterval_, v28);
        if (!v17)
          goto LABEL_6;
        goto LABEL_14;
      }
      sub_22CC0816C(v18, v19, v20);
    }
    sub_22CC0816C(v18, v19, v20);
    return 0;
  }
  v6 = v33;
  v7 = v34;
  if (!v34)
  {
LABEL_8:
    sub_22CC0816C(v5, v6, v7);
    goto LABEL_9;
  }
  v8 = v33;
  v9 = v7;
  swift_bridgeObjectRetain();
  v10 = objc_msgSend(v9, sel_averageSleepDuration);
  if (!v10)
  {
    sub_22CC0816C(v5, v6, v7);
    goto LABEL_8;
  }
  v11 = v10;
  objc_msgSend(v10, sel__value);
  v13 = v12;

  sub_22CC0816C(v5, v6, v7);
  sub_22CC0816C(v5, v6, v7);
  if (v13 <= COERCE_DOUBLE(1))
    goto LABEL_9;
  sub_22CC65BEC();
  v15 = v14;
  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD14F8]), sel_init);
  objc_msgSend(v16, sel_setUnitsStyle_, 5);
  objc_msgSend(v16, sel_setAllowedUnits_, 96);
  v17 = objc_msgSend(v16, sel_stringFromTimeInterval_, v15);
  if (!v17)
  {
LABEL_6:

    return 0;
  }
LABEL_14:
  v29 = v17;
  v30 = sub_22CC65B2C();

  return v30;
}

uint64_t SleepDaySummaryResults.sleepDurationToDisplay.getter()
{
  return sub_22CC418A8((const char **)&selRef_averageSleepDuration);
}

uint64_t SleepDaySummaryResults.inBedDurationToDisplay.getter()
{
  return sub_22CC418A8((const char **)&selRef_averageInBedDuration);
}

uint64_t sub_22CC418A8(const char **a1)
{
  uint64_t v1;
  void *v2;
  id v4;
  id v5;
  const char *v6;
  id v7;
  void *v8;
  double v9;
  double v10;

  v2 = *(void **)(v1 + 16);
  if (v2)
  {
    v4 = *(id *)(v1 + 8);
    v5 = v2;
    v6 = *a1;
    swift_bridgeObjectRetain();
    v7 = objc_msgSend(v5, v6);
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v7, sel__value);
      v10 = v9;

      swift_bridgeObjectRelease();
      if (v10 > COERCE_DOUBLE(1))
        return *(_QWORD *)&v10;
    }
    else
    {

      swift_bridgeObjectRelease();
    }
  }
  return 0;
}

uint64_t dispatch thunk of SleepWidgetModelProviding.summaryResults.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SleepWidgetModelProviding.noDataTexts.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SleepWidgetModelProviding.baseAccessibilityIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t SleepWidgetRelevanceProvider.timelineEntryRelevance(_:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a2 + 24) + 8))(*(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

uint64_t SleepWidgetRelevanceProvider.widgetRelevance(_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;

  v33 = a2;
  v3 = sub_22CC6504C();
  v29 = *(_QWORD *)(v3 - 8);
  v30 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v28 - v7;
  v9 = sub_22CC64EB4();
  MEMORY[0x24BDAC7A8](v9);
  sub_22CC0D990();
  v32 = v10;
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v31 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC082A8(0, &qword_254065F50, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v28 - v14;
  v16 = sub_22CC64F08();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(_QWORD))(*(_QWORD *)(a1 + 24) + 16))(*(_QWORD *)(a1 + 16));
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_22CC0DD48((uint64_t)v15, &qword_254065F50, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
    return sub_22CC659E8();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    sub_22CC64EF0();
    sub_22CC64ED8();
    sub_22CC64EA8();
    v21 = v30;
    v22 = *(void (**)(char *, uint64_t))(v29 + 8);
    v22(v6, v30);
    v22(v8, v21);
    v23 = v31;
    sub_22CC65A24();
    sub_22CC082A8(0, &qword_254065F88, (uint64_t (*)(uint64_t))sub_22CC0D990, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v24 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_22CC663F0;
    v26 = v25 + v24;
    v27 = v32;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 16))(v26, v23, v32);
    sub_22CC659E8();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v23, v27);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  }
}

uint64_t SleepWidgetRelevanceProvider.relevantDateInterval(_:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(a2 + 24) + 16))(*(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
}

uint64_t SleepStageWidgetViewModel.timelineEntryRelevance.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_22CC082A8(0, &qword_2540660D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFB270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v20 - v4;
  if (*(_BYTE *)(v1 + 24) == 2)
    goto LABEL_8;
  v7 = *(_QWORD *)v1;
  v6 = *(void **)(v1 + 8);
  v8 = *(void **)(v1 + 16);
  if (!*(_QWORD *)v1)
  {
    sub_22CC0812C(0, *(void **)(v1 + 8), *(void **)(v1 + 16));
LABEL_8:
    v15 = sub_22CC65ACC();
    v16 = (uint64_t (*)(uint64_t))MEMORY[0x24BDFB270];
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v5, 1, 1, v15);
    sub_22CC65AC0();
    return sub_22CC0DD48((uint64_t)v5, &qword_2540660D0, v16);
  }
  v9 = *(void **)v1;
  v10 = *(void **)(v1 + 8);
  if (v8)
  {
    sub_22CC0812C(v9, v10, *(void **)(v1 + 16));
    v11 = v6;
    v12 = v8;
    swift_bridgeObjectRetain();
    v13 = objc_msgSend(v12, sel_averageSleepDuration);
    if (v13)
    {
      v14 = v13;
      objc_msgSend(v13, sel__value);

    }
    sub_22CC0816C(v7, v6, v8);
  }
  else
  {
    sub_22CC0812C(v9, v10, 0);
  }
  sub_22CC65AC0();
  sub_22CC0816C(v7, v6, v8);
  v18 = sub_22CC65ACC();
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v5, 0, 1, v18);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v19 + 32))(a1, v5, v18);
}

uint64_t SleepStageWidgetViewModel.relevantDateInterval.getter@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void *v19;
  void *v20;
  void (*v21)(char *, char *, uint64_t);
  NSObject *v22;
  os_log_type_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  os_log_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  os_log_t v37;
  int v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[3];
  uint64_t v44;

  v3 = sub_22CC652BC();
  v42 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v37 - v7;
  sub_22CC082A8(0, &qword_254065F50, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v37 - v10;
  v12 = sub_22CC64F08();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v37 - v17;
  if (*(_BYTE *)(v1 + 24) == 2)
    goto LABEL_7;
  v19 = *(void **)(v1 + 8);
  v20 = *(void **)(v1 + 16);
  if (!*(_QWORD *)v1)
  {
    sub_22CC0812C(0, v19, v20);
LABEL_7:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
LABEL_8:
    sub_22CC0DD48((uint64_t)v11, &qword_254065F50, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
    sub_22CC652A4();
    v31 = sub_22CC652B0();
    v32 = sub_22CC65C64();
    if (os_log_type_enabled(v31, v32))
    {
      v41 = v3;
      v33 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      v43[0] = v34;
      *(_DWORD *)v33 = 136446210;
      v44 = sub_22CC5C47C(0xD000000000000019, 0x800000022CC69A00, v43);
      sub_22CC65D00();
      _os_log_impl(&dword_22CC04000, v31, v32, "[%{public}s] not relevant", v33, 0xCu);
      v35 = 1;
      swift_arrayDestroy();
      MEMORY[0x22E306470](v34, -1, -1);
      MEMORY[0x22E306470](v33, -1, -1);

      (*(void (**)(char *, uint64_t))(v42 + 8))(v6, v41);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v42 + 8))(v6, v3);
      v35 = 1;
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(a1, v35, 1, v12);
  }
  v43[0] = *(_QWORD *)v1;
  v43[1] = (uint64_t)v19;
  v43[2] = (uint64_t)v20;
  sub_22CC423F0((uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    goto LABEL_8;
  v21 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v21(v18, v11, v12);
  sub_22CC652A4();
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v18, v12);
  v22 = sub_22CC652B0();
  v23 = sub_22CC65C64();
  v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    v25 = swift_slowAlloc();
    v38 = v24;
    v26 = v25;
    v39 = swift_slowAlloc();
    v43[0] = v39;
    *(_DWORD *)v26 = 136446466;
    v37 = v22;
    v44 = sub_22CC5C47C(0xD000000000000019, 0x800000022CC69A00, v43);
    v40 = a1;
    v41 = v3;
    sub_22CC65D00();
    *(_WORD *)(v26 + 12) = 2080;
    v27 = sub_22CC64EC0();
    v44 = sub_22CC5C47C(v27, v28, v43);
    a1 = v40;
    sub_22CC65D00();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    v29 = v37;
    _os_log_impl(&dword_22CC04000, v37, (os_log_type_t)v38, "[%{public}s] relevant for dates %s, privacy: .public)", (uint8_t *)v26, 0x16u);
    v30 = v39;
    swift_arrayDestroy();
    MEMORY[0x22E306470](v30, -1, -1);
    MEMORY[0x22E306470](v26, -1, -1);

    (*(void (**)(char *, uint64_t))(v42 + 8))(v8, v41);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);

    (*(void (**)(char *, uint64_t))(v42 + 8))(v8, v3);
  }
  v21(a1, v18, v12);
  v35 = 0;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(a1, v35, 1, v12);
}

uint64_t sub_22CC423F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  uint64_t v35;

  v35 = a1;
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_22CC082A8(0, &qword_254065F50, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v34 - v7;
  sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], v2);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v34 - v10;
  v12 = sub_22CC6504C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v34 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v34 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v34 - v22;
  v24 = *(void **)(v1 + 8);
  if (!v24)
    goto LABEL_7;
  v34 = v21;
  v25 = objc_msgSend(v24, sel_creationInterval);
  if (v25)
  {
    v26 = v25;
    sub_22CC64ECC();

    v27 = sub_22CC64F08();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v6, 0, 1, v27);
  }
  else
  {
    v27 = sub_22CC64F08();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v6, 1, 1, v27);
  }
  sub_22CC439A4((uint64_t)v6, (uint64_t)v8);
  sub_22CC64F08();
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v8, 1, v27) == 1)
  {
    sub_22CC0DD48((uint64_t)v8, &qword_254065F50, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
LABEL_7:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    goto LABEL_8;
  }
  sub_22CC64ED8();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v27);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v23, v11, v12);
    sub_22CC65010();
    v31 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    v31(v17, v23, v12);
    v31(v34, v20, v12);
    v32 = v35;
    sub_22CC64EE4();
    v33 = *(void (**)(char *, uint64_t))(v13 + 8);
    v33(v20, v12);
    v33(v23, v12);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v28 + 56))(v32, 0, 1, v27);
  }
LABEL_8:
  sub_22CC0DD48((uint64_t)v11, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  v29 = sub_22CC64F08();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v35, 1, 1, v29);
}

uint64_t SleepWidgetViewModel.timelineEntryRelevance.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_22CC082A8(0, &qword_2540660D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFB270], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v22 - v4;
  if ((*(_BYTE *)(v1 + 8) & 1) != 0 || (unint64_t)(*(_QWORD *)v1 - 2) < 2 || *(_QWORD *)v1 != 6)
    return sub_22CC65AC0();
  v6 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SleepWidgetViewModel() + 40));
  v7 = *v6;
  if (*v6)
  {
    v8 = (void *)v6[1];
    v9 = (void *)v6[2];
    if (v9)
    {
      v10 = v8;
      v11 = v9;
      swift_bridgeObjectRetain();
      v12 = v10;
      v13 = v11;
      swift_bridgeObjectRetain();
      v14 = objc_msgSend(v13, sel_averageSleepDuration);
      if (v14)
      {
        v15 = v14;
        objc_msgSend(v14, sel__value);

      }
      sub_22CC0816C(v7, v8, v9);
    }
    else
    {
      v19 = v8;
      swift_bridgeObjectRetain();
    }
    sub_22CC65AC0();
    sub_22CC0816C(v7, v8, v9);
    v20 = sub_22CC65ACC();
    v21 = *(_QWORD *)(v20 - 8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v5, 0, 1, v20);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v21 + 32))(a1, v5, v20);
  }
  else
  {
    v17 = sub_22CC65ACC();
    v18 = (uint64_t (*)(uint64_t))MEMORY[0x24BDFB270];
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v5, 1, 1, v17);
    sub_22CC65AC0();
    return sub_22CC0DD48((uint64_t)v5, &qword_2540660D0, v18);
  }
}

uint64_t SleepWidgetViewModel.relevantDateInterval.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  _BYTE v34[4];
  int v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v40 = a1;
  v1 = sub_22CC652BC();
  v38 = *(_QWORD *)(v1 - 8);
  v39 = v1;
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = &v34[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v2);
  v37 = &v34[-v5];
  v6 = sub_22CC64F08();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = &v34[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8);
  v12 = &v34[-v11];
  sub_22CC082A8(0, &qword_254065F68, (uint64_t (*)(uint64_t))type metadata accessor for SleepWidgetRelevantState, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v13);
  v15 = &v34[-v14];
  v16 = type metadata accessor for SleepWidgetRelevantState();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = &v34[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_22CC42EBC(v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_22CC0DD48((uint64_t)v15, &qword_254065F68, (uint64_t (*)(uint64_t))type metadata accessor for SleepWidgetRelevantState);
    sub_22CC652A4();
    v20 = sub_22CC652B0();
    v21 = sub_22CC65C64();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      v42 = v23;
      *(_DWORD *)v22 = 136446210;
      v41 = sub_22CC5C47C(0xD000000000000014, 0x800000022CC69A20, &v42);
      sub_22CC65D00();
      _os_log_impl(&dword_22CC04000, v20, v21, "[%{public}s] not relevant", v22, 0xCu);
      v24 = 1;
      swift_arrayDestroy();
      MEMORY[0x22E306470](v23, -1, -1);
      MEMORY[0x22E306470](v22, -1, -1);

      (*(void (**)(_BYTE *, uint64_t))(v38 + 8))(v4, v39);
    }
    else
    {

      (*(void (**)(_BYTE *, uint64_t))(v38 + 8))(v4, v39);
      v24 = 1;
    }
    v28 = v6;
  }
  else
  {
    sub_22CC43500((uint64_t)v15, (uint64_t)v19);
    sub_22CC4317C();
    sub_22CC652A4();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v10, v12, v6);
    v25 = sub_22CC652B0();
    v26 = sub_22CC65C64();
    v27 = v26;
    v28 = v6;
    if (os_log_type_enabled(v25, v26))
    {
      v29 = swift_slowAlloc();
      v36 = swift_slowAlloc();
      v42 = v36;
      *(_DWORD *)v29 = 136446466;
      v35 = v27;
      v41 = sub_22CC5C47C(0xD000000000000014, 0x800000022CC69A20, &v42);
      sub_22CC65D00();
      *(_WORD *)(v29 + 12) = 2080;
      v30 = sub_22CC64EC0();
      v41 = sub_22CC5C47C(v30, v31, &v42);
      sub_22CC65D00();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v10, v28);
      _os_log_impl(&dword_22CC04000, v25, (os_log_type_t)v35, "[%{public}s] relevant for dates %s, privacy: .public)", (uint8_t *)v29, 0x16u);
      v32 = v36;
      swift_arrayDestroy();
      MEMORY[0x22E306470](v32, -1, -1);
      MEMORY[0x22E306470](v29, -1, -1);

    }
    else
    {

      (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v10, v6);
    }
    (*(void (**)(_BYTE *, uint64_t))(v38 + 8))(v37, v39);
    sub_22CC43544((uint64_t)v19);
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v7 + 32))(v40, v12, v28);
    v24 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v40, v24, 1, v28);
}

uint64_t sub_22CC42EBC@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  _QWORD v26[2];
  __int128 v27;

  sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v26 - v7;
  v9 = sub_22CC6504C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v26 - v14;
  if ((*(_BYTE *)(v1 + 8) & 1) != 0)
    goto LABEL_6;
  if (*(_QWORD *)v1 != 6)
  {
    if (*(_QWORD *)v1 == 3)
    {
      v16 = type metadata accessor for SleepWidgetViewModel();
      sub_22CC43948(v1 + *(int *)(v16 + 44), (uint64_t)v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
      {
        v17 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
        v18 = (uint64_t)v8;
LABEL_10:
        sub_22CC0DD48(v18, (unint64_t *)&qword_254065348, v17);
        goto LABEL_11;
      }
      v23 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v23(v15, v8, v9);
      v23(a1, v15, v9);
      v24 = type metadata accessor for SleepWidgetRelevantState();
      goto LABEL_14;
    }
LABEL_6:
    v19 = type metadata accessor for SleepWidgetRelevantState();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a1, 1, 1, v19);
  }
  v21 = v1 + *(int *)(type metadata accessor for SleepWidgetViewModel() + 40);
  if (!*(_QWORD *)v21)
  {
LABEL_11:
    v22 = type metadata accessor for SleepWidgetRelevantState();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a1, 1, 1, v22);
  }
  v26[1] = *(_QWORD *)v21;
  v27 = *(_OWORD *)(v21 + 8);
  sub_22CC4330C((uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) == 1)
  {
    v17 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
    v18 = (uint64_t)v6;
    goto LABEL_10;
  }
  v25 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v25(v13, v6, v9);
  v25(a1, v13, v9);
  v24 = type metadata accessor for SleepWidgetRelevantState();
LABEL_14:
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(a1, 0, 1, v24);
}

uint64_t sub_22CC4317C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v1 = type metadata accessor for SleepWidgetRelevantState();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_22CC6504C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v20 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v20 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v20 - v15;
  sub_22CC43904(v0, (uint64_t)v3);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v16, v3, v4);
  sub_22CC65010();
  v17 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v17(v11, v16, v4);
  v17(v8, v14, v4);
  sub_22CC64EE4();
  v18 = *(void (**)(char *, uint64_t))(v5 + 8);
  v18(v14, v4);
  return ((uint64_t (*)(char *, uint64_t))v18)(v16, v4);
}

uint64_t sub_22CC4330C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  sub_22CC082A8(0, &qword_254065F50, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - v7;
  v9 = *(void **)(v1 + 8);
  if (!v9)
    goto LABEL_7;
  v10 = objc_msgSend(v9, sel_creationInterval);
  if (v10)
  {
    v11 = v10;
    sub_22CC64ECC();

    v12 = sub_22CC64F08();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 0, 1, v12);
  }
  else
  {
    v12 = sub_22CC64F08();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
  }
  sub_22CC439A4((uint64_t)v6, (uint64_t)v8);
  sub_22CC64F08();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12) == 1)
  {
    sub_22CC0DD48((uint64_t)v8, &qword_254065F50, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878]);
LABEL_7:
    v14 = sub_22CC6504C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a1, 1, 1, v14);
  }
  sub_22CC64ED8();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v12);
  v16 = sub_22CC6504C();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a1, 0, 1, v16);
}

uint64_t type metadata accessor for SleepWidgetRelevantState()
{
  uint64_t result;

  result = qword_254065F58;
  if (!qword_254065F58)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22CC43500(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SleepWidgetRelevantState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22CC43544(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SleepWidgetRelevantState();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t dispatch thunk of SleepWidgetRelevanceProviding.timelineEntryRelevance.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SleepWidgetRelevanceProviding.relevantDateInterval.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_22CC43590()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for SleepWidgetRelevanceProvider(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SleepWidgetRelevanceProvider);
}

uint64_t *sub_22CC435A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    swift_getEnumCaseMultiPayload();
    v6 = sub_22CC6504C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_22CC43650(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_22CC6504C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_22CC43684(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_getEnumCaseMultiPayload();
  v4 = sub_22CC6504C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_22CC436F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_22CC43544(a1);
    swift_getEnumCaseMultiPayload();
    v4 = sub_22CC6504C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_22CC4377C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_getEnumCaseMultiPayload();
  v4 = sub_22CC6504C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_22CC437F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_22CC43544(a1);
    swift_getEnumCaseMultiPayload();
    v4 = sub_22CC6504C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_22CC43874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t sub_22CC43880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_22CC43890()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_22CC438A0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22CC6504C();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_22CC43904(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SleepWidgetRelevantState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22CC43948(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22CC439A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_22CC082A8(0, &qword_254065F50, (uint64_t (*)(uint64_t))MEMORY[0x24BDCB878], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_22CC43A00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  id v6;
  uint64_t result;
  uint64_t v8;

  v0 = sub_22CC65118();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC650F4();
  v4 = objc_allocWithZone(MEMORY[0x24BE4A5A8]);
  v5 = (void *)sub_22CC650AC();
  v6 = objc_msgSend(v4, sel_initWithCalendar_, v5);

  result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_255C3FD50 = (uint64_t)v6;
  return result;
}

unint64_t sub_22CC43AB8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(const void *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  void *v38;
  id v39;
  id v40;
  uint64_t v41;
  void *v42;
  const void *v43;
  unsigned int (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  void *v47;
  const void *v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  const void *v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v20 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_BYTE *)(a2 + 8);
    sub_22CC11614(*(_QWORD *)a2, v8);
    *(_QWORD *)a1 = v7;
    *(_BYTE *)(a1 + 8) = v8;
    v55 = a3;
    v9 = *(int *)(a3 + 20);
    v10 = a1 + v9;
    v11 = a2 + v9;
    *(_QWORD *)v10 = *(_QWORD *)(a2 + v9);
    *(_BYTE *)(v10 + 8) = *(_BYTE *)(a2 + v9 + 8);
    v12 = (int *)type metadata accessor for SleepWidgetViewModel();
    v13 = v12[5];
    v14 = (void *)(v10 + v13);
    v15 = (const void *)(v11 + v13);
    v16 = sub_22CC64F20();
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48);
    if (v18(v15, 1, v16))
    {
      sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    v21 = v12[6];
    v22 = (void *)(v10 + v21);
    v23 = (const void *)(v11 + v21);
    if (v18((const void *)(v11 + v21), 1, v16))
    {
      sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(v22, v23, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v22, 0, 1, v16);
    }
    v56 = a2;
    *(_BYTE *)(v10 + v12[7]) = *(_BYTE *)(v11 + v12[7]);
    v25 = v12[8];
    v26 = v10 + v25;
    v27 = v11 + v25;
    v28 = sub_22CC6504C();
    v29 = *(_QWORD *)(v28 - 8);
    v57 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
    v57(v26, v27, v28);
    v30 = v12[9];
    v31 = *(void **)(v11 + v30);
    *(_QWORD *)(v10 + v30) = v31;
    v32 = v12[10];
    v33 = (_QWORD *)(v10 + v32);
    v34 = v11 + v32;
    v35 = *(_QWORD *)(v11 + v32);
    v36 = v31;
    if (v35)
    {
      v37 = *(void **)(v34 + 8);
      v38 = *(void **)(v34 + 16);
      *v33 = v35;
      v33[1] = v37;
      v33[2] = v38;
      swift_bridgeObjectRetain();
      v39 = v37;
      v40 = v38;
    }
    else
    {
      *(_OWORD *)v33 = *(_OWORD *)v34;
      v33[2] = *(_QWORD *)(v34 + 16);
    }
    v41 = v12[11];
    v42 = (void *)(v10 + v41);
    v43 = (const void *)(v11 + v41);
    v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
    if (v44(v11 + v41, 1, v28))
    {
      sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      v57((uint64_t)v42, (uint64_t)v43, v28);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v42, 0, 1, v28);
    }
    v46 = v12[12];
    v47 = (void *)(v10 + v46);
    v48 = (const void *)(v11 + v46);
    if (v44(v11 + v46, 1, v28))
    {
      sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      v57((uint64_t)v47, (uint64_t)v48, v28);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v47, 0, 1, v28);
    }
    v50 = v12[13];
    v51 = (void *)(v10 + v50);
    v52 = (const void *)(v11 + v50);
    if (v44(v11 + v50, 1, v28))
    {
      sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      v57((uint64_t)v51, (uint64_t)v52, v28);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v51, 0, 1, v28);
    }
    *(_BYTE *)(a1 + *(int *)(v55 + 24)) = *(_BYTE *)(v56 + *(int *)(v55 + 24));
  }
  return a1;
}

uint64_t sub_22CC43ED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(const void *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(void *, const void *, uint64_t);
  uint64_t v29;
  void *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  void *v41;
  const void *v42;
  unsigned int (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  void *v46;
  const void *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  const void *v51;
  uint64_t v52;
  uint64_t result;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_22CC11614(*(_QWORD *)a2, v7);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  v54 = a3;
  v55 = a2;
  v8 = *(int *)(a3 + 20);
  v56 = a1;
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)(a2 + v8);
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(a2 + v8 + 8);
  v11 = (int *)type metadata accessor for SleepWidgetViewModel();
  v12 = v11[5];
  v13 = (void *)(v9 + v12);
  v14 = (const void *)(v10 + v12);
  v15 = sub_22CC64F20();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
  if (v17(v14, 1, v15))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v19 = v11[6];
  v20 = (void *)(v9 + v19);
  v21 = (const void *)(v10 + v19);
  if (v17((const void *)(v10 + v19), 1, v15))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v20, v21, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v20, 0, 1, v15);
  }
  *(_BYTE *)(v9 + v11[7]) = *(_BYTE *)(v10 + v11[7]);
  v23 = v11[8];
  v24 = (void *)(v9 + v23);
  v25 = (const void *)(v10 + v23);
  v26 = sub_22CC6504C();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(void (**)(void *, const void *, uint64_t))(v27 + 16);
  v28(v24, v25, v26);
  v29 = v11[9];
  v30 = *(void **)(v10 + v29);
  *(_QWORD *)(v9 + v29) = v30;
  v31 = v11[10];
  v32 = (_QWORD *)(v9 + v31);
  v33 = v10 + v31;
  v34 = *(_QWORD *)(v10 + v31);
  v35 = v30;
  if (v34)
  {
    v36 = *(void **)(v33 + 8);
    v37 = *(void **)(v33 + 16);
    *v32 = v34;
    v32[1] = v36;
    v32[2] = v37;
    swift_bridgeObjectRetain();
    v38 = v36;
    v39 = v37;
  }
  else
  {
    *(_OWORD *)v32 = *(_OWORD *)v33;
    v32[2] = *(_QWORD *)(v33 + 16);
  }
  v40 = v11[11];
  v41 = (void *)(v9 + v40);
  v42 = (const void *)(v10 + v40);
  v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
  if (v43(v10 + v40, 1, v26))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    v28(v41, v42, v26);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v41, 0, 1, v26);
  }
  v45 = v11[12];
  v46 = (void *)(v9 + v45);
  v47 = (const void *)(v10 + v45);
  if (v43(v10 + v45, 1, v26))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    v28(v46, v47, v26);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v46, 0, 1, v26);
  }
  v49 = v11[13];
  v50 = (void *)(v9 + v49);
  v51 = (const void *)(v10 + v49);
  if (v43(v10 + v49, 1, v26))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  else
  {
    v28(v50, v51, v26);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v50, 0, 1, v26);
  }
  result = v56;
  *(_BYTE *)(v56 + *(int *)(v54 + 24)) = *(_BYTE *)(v55 + *(int *)(v54 + 24));
  return result;
}

uint64_t sub_22CC442B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  uint64_t v39;
  _QWORD *v40;
  __int128 *v41;
  uint64_t v42;
  void *v43;
  void *v44;
  id v45;
  void *v46;
  void *v47;
  id v48;
  void *v49;
  void *v50;
  id v51;
  id v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  void *v56;
  const void *v57;
  uint64_t (*v58)(uint64_t, uint64_t, uint64_t);
  int v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  const void *v64;
  int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  const void *v70;
  int v71;
  int v72;
  uint64_t v73;
  void (*v75)(uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;

  v6 = *(_QWORD *)a2;
  v7 = *(_BYTE *)(a2 + 8);
  sub_22CC11614(*(_QWORD *)a2, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_22CC11750(v8, v9);
  v76 = a3;
  v77 = a2;
  v10 = *(int *)(a3 + 20);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = *(_QWORD *)(a2 + v10);
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  *(_QWORD *)v11 = v13;
  v14 = (int *)type metadata accessor for SleepWidgetViewModel();
  v15 = v14[5];
  v16 = (void *)(v11 + v15);
  v17 = (void *)(v12 + v15);
  v18 = sub_22CC64F20();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v19 + 8))(v16, v18);
LABEL_6:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v19 + 24))(v16, v17, v18);
LABEL_7:
  v24 = v14[6];
  v25 = (void *)(v11 + v24);
  v26 = (void *)(v12 + v24);
  v27 = v20((void *)(v11 + v24), 1, v18);
  v28 = v20(v26, 1, v18);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v25, v26, v18);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v25, 0, 1, v18);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v28)
  {
    (*(void (**)(void *, uint64_t))(v19 + 8))(v25, v18);
LABEL_12:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v19 + 24))(v25, v26, v18);
LABEL_13:
  *(_BYTE *)(v11 + v14[7]) = *(_BYTE *)(v12 + v14[7]);
  v30 = v14[8];
  v31 = v11 + v30;
  v32 = v12 + v30;
  v33 = sub_22CC6504C();
  v34 = *(_QWORD *)(v33 - 8);
  v75 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 24);
  v75(v31, v32, v33);
  v35 = v14[9];
  v36 = *(void **)(v12 + v35);
  v37 = *(void **)(v11 + v35);
  *(_QWORD *)(v11 + v35) = v36;
  v38 = v36;

  v39 = v14[10];
  v40 = (_QWORD *)(v11 + v39);
  v41 = (__int128 *)(v12 + v39);
  v42 = *(_QWORD *)(v12 + v39);
  if (*(_QWORD *)(v11 + v39))
  {
    if (v42)
    {
      *v40 = v42;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v43 = (void *)v40[1];
      v44 = (void *)*((_QWORD *)v41 + 1);
      v40[1] = v44;
      v45 = v44;

      v46 = (void *)v40[2];
      v47 = (void *)*((_QWORD *)v41 + 2);
      v40[2] = v47;
      v48 = v47;

    }
    else
    {
      sub_22CC06744(v11 + v39);
      v53 = *((_QWORD *)v41 + 2);
      *(_OWORD *)v40 = *v41;
      v40[2] = v53;
    }
  }
  else if (v42)
  {
    *v40 = v42;
    v49 = (void *)*((_QWORD *)v41 + 1);
    v40[1] = v49;
    v50 = (void *)*((_QWORD *)v41 + 2);
    v40[2] = v50;
    swift_bridgeObjectRetain();
    v51 = v49;
    v52 = v50;
  }
  else
  {
    v54 = *v41;
    v40[2] = *((_QWORD *)v41 + 2);
    *(_OWORD *)v40 = v54;
  }
  v55 = v14[11];
  v56 = (void *)(v11 + v55);
  v57 = (const void *)(v12 + v55);
  v58 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
  v59 = v58(v11 + v55, 1, v33);
  v60 = v58((uint64_t)v57, 1, v33);
  if (v59)
  {
    if (!v60)
    {
      (*(void (**)(void *, const void *, uint64_t))(v34 + 16))(v56, v57, v33);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v56, 0, 1, v33);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  if (v60)
  {
    (*(void (**)(void *, uint64_t))(v34 + 8))(v56, v33);
LABEL_27:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    goto LABEL_28;
  }
  v75((uint64_t)v56, (uint64_t)v57, v33);
LABEL_28:
  v62 = v14[12];
  v63 = (void *)(v11 + v62);
  v64 = (const void *)(v12 + v62);
  v65 = v58(v11 + v62, 1, v33);
  v66 = v58((uint64_t)v64, 1, v33);
  if (v65)
  {
    if (!v66)
    {
      (*(void (**)(void *, const void *, uint64_t))(v34 + 16))(v63, v64, v33);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v63, 0, 1, v33);
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  if (v66)
  {
    (*(void (**)(void *, uint64_t))(v34 + 8))(v63, v33);
LABEL_33:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    goto LABEL_34;
  }
  v75((uint64_t)v63, (uint64_t)v64, v33);
LABEL_34:
  v68 = v14[13];
  v69 = (void *)(v11 + v68);
  v70 = (const void *)(v12 + v68);
  v71 = v58(v11 + v68, 1, v33);
  v72 = v58((uint64_t)v70, 1, v33);
  if (!v71)
  {
    if (!v72)
    {
      v75((uint64_t)v69, (uint64_t)v70, v33);
      goto LABEL_40;
    }
    (*(void (**)(void *, uint64_t))(v34 + 8))(v69, v33);
    goto LABEL_39;
  }
  if (v72)
  {
LABEL_39:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(void *, const void *, uint64_t))(v34 + 16))(v69, v70, v33);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v69, 0, 1, v33);
LABEL_40:
  *(_BYTE *)(a1 + *(int *)(v76 + 24)) = *(_BYTE *)(v77 + *(int *)(v76 + 24));
  return a1;
}

uint64_t sub_22CC44868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(void *, const void *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  const void *v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const void *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  const void *v39;
  uint64_t v40;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(a3 + 20);
  v5 = a1 + v4;
  v6 = a2 + v4;
  *(_QWORD *)v5 = *(_QWORD *)(a2 + v4);
  *(_BYTE *)(v5 + 8) = *(_BYTE *)(a2 + v4 + 8);
  v7 = (int *)type metadata accessor for SleepWidgetViewModel();
  v8 = v7[5];
  v9 = (void *)(v5 + v8);
  v10 = (const void *)(v6 + v8);
  v11 = sub_22CC64F20();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = v7[6];
  v16 = (void *)(v5 + v15);
  v17 = (const void *)(v6 + v15);
  if (v13((const void *)(v6 + v15), 1, v11))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v16, v17, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  *(_BYTE *)(v5 + v7[7]) = *(_BYTE *)(v6 + v7[7]);
  v19 = v7[8];
  v20 = (void *)(v5 + v19);
  v21 = (const void *)(v6 + v19);
  v22 = sub_22CC6504C();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(void (**)(void *, const void *, uint64_t))(v23 + 32);
  v24(v20, v21, v22);
  *(_QWORD *)(v5 + v7[9]) = *(_QWORD *)(v6 + v7[9]);
  v25 = v7[10];
  v26 = v5 + v25;
  v27 = v6 + v25;
  *(_QWORD *)(v26 + 16) = *(_QWORD *)(v27 + 16);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  v28 = v7[11];
  v29 = (void *)(v5 + v28);
  v30 = (const void *)(v6 + v28);
  v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  if (v31(v6 + v28, 1, v22))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    v24(v29, v30, v22);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v29, 0, 1, v22);
  }
  v33 = v7[12];
  v34 = (void *)(v5 + v33);
  v35 = (const void *)(v6 + v33);
  if (v31(v6 + v33, 1, v22))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    v24(v34, v35, v22);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v34, 0, 1, v22);
  }
  v37 = v7[13];
  v38 = (void *)(v5 + v37);
  v39 = (const void *)(v6 + v37);
  if (v31(v6 + v37, 1, v22))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    v24(v38, v39, v22);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v38, 0, 1, v22);
  }
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_22CC44C00(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  void *v39;
  void *v40;
  uint64_t v41;
  void *v42;
  const void *v43;
  uint64_t (*v44)(uint64_t, uint64_t, uint64_t);
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  const void *v50;
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  const void *v56;
  int v57;
  int v58;
  uint64_t v59;
  void (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t *v63;

  v6 = *a2;
  v7 = *((_BYTE *)a2 + 8);
  v8 = *(_QWORD *)a1;
  v9 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 8) = v7;
  sub_22CC11750(v8, v9);
  v62 = a3;
  v63 = a2;
  v10 = *(int *)(a3 + 20);
  v11 = a1 + v10;
  v12 = (uint64_t)a2 + v10;
  *(_QWORD *)v11 = *(uint64_t *)((char *)a2 + v10);
  *(_BYTE *)(v11 + 8) = *((_BYTE *)a2 + v10 + 8);
  v13 = (int *)type metadata accessor for SleepWidgetViewModel();
  v14 = v13[5];
  v15 = (void *)(v11 + v14);
  v16 = (void *)(v12 + v14);
  v17 = sub_22CC64F20();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19(v16, 1, v17);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 32))(v15, v16, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
LABEL_6:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 40))(v15, v16, v17);
LABEL_7:
  v23 = v13[6];
  v24 = (void *)(v11 + v23);
  v25 = (void *)(v12 + v23);
  v26 = v19((void *)(v11 + v23), 1, v17);
  v27 = v19(v25, 1, v17);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 32))(v24, v25, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v24, 0, 1, v17);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v27)
  {
    (*(void (**)(void *, uint64_t))(v18 + 8))(v24, v17);
LABEL_12:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 40))(v24, v25, v17);
LABEL_13:
  *(_BYTE *)(v11 + v13[7]) = *(_BYTE *)(v12 + v13[7]);
  v29 = v13[8];
  v30 = v11 + v29;
  v31 = v12 + v29;
  v32 = sub_22CC6504C();
  v33 = *(_QWORD *)(v32 - 8);
  v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 40);
  v61(v30, v31, v32);
  v34 = v13[9];
  v35 = *(void **)(v11 + v34);
  *(_QWORD *)(v11 + v34) = *(_QWORD *)(v12 + v34);

  v36 = v13[10];
  v37 = (_QWORD *)(v11 + v36);
  v38 = (_QWORD *)(v12 + v36);
  if (*(_QWORD *)(v11 + v36))
  {
    if (*v38)
    {
      *v37 = *v38;
      swift_bridgeObjectRelease();
      v39 = (void *)v37[1];
      v37[1] = v38[1];

      v40 = (void *)v37[2];
      v37[2] = v38[2];

      goto LABEL_18;
    }
    sub_22CC06744((uint64_t)v37);
  }
  *(_OWORD *)v37 = *(_OWORD *)v38;
  v37[2] = v38[2];
LABEL_18:
  v41 = v13[11];
  v42 = (void *)(v11 + v41);
  v43 = (const void *)(v12 + v41);
  v44 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
  v45 = v44(v11 + v41, 1, v32);
  v46 = v44((uint64_t)v43, 1, v32);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(void *, const void *, uint64_t))(v33 + 32))(v42, v43, v32);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v42, 0, 1, v32);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v46)
  {
    (*(void (**)(void *, uint64_t))(v33 + 8))(v42, v32);
LABEL_23:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    goto LABEL_24;
  }
  v61((uint64_t)v42, (uint64_t)v43, v32);
LABEL_24:
  v48 = v13[12];
  v49 = (void *)(v11 + v48);
  v50 = (const void *)(v12 + v48);
  v51 = v44(v11 + v48, 1, v32);
  v52 = v44((uint64_t)v50, 1, v32);
  if (v51)
  {
    if (!v52)
    {
      (*(void (**)(void *, const void *, uint64_t))(v33 + 32))(v49, v50, v32);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v49, 0, 1, v32);
      goto LABEL_30;
    }
    goto LABEL_29;
  }
  if (v52)
  {
    (*(void (**)(void *, uint64_t))(v33 + 8))(v49, v32);
LABEL_29:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    goto LABEL_30;
  }
  v61((uint64_t)v49, (uint64_t)v50, v32);
LABEL_30:
  v54 = v13[13];
  v55 = (void *)(v11 + v54);
  v56 = (const void *)(v12 + v54);
  v57 = v44(v11 + v54, 1, v32);
  v58 = v44((uint64_t)v56, 1, v32);
  if (!v57)
  {
    if (!v58)
    {
      v61((uint64_t)v55, (uint64_t)v56, v32);
      goto LABEL_36;
    }
    (*(void (**)(void *, uint64_t))(v33 + 8))(v55, v32);
    goto LABEL_35;
  }
  if (v58)
  {
LABEL_35:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    goto LABEL_36;
  }
  (*(void (**)(void *, const void *, uint64_t))(v33 + 32))(v55, v56, v32);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v55, 0, 1, v32);
LABEL_36:
  *(_BYTE *)(a1 + *(int *)(v62 + 24)) = *((_BYTE *)v63 + *(int *)(v62 + 24));
  return a1;
}

uint64_t sub_22CC4515C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC45168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = type metadata accessor for SleepWidgetViewModel();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_22CC451DC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC451E8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 8) = -(char)a2;
  }
  else
  {
    v7 = type metadata accessor for SleepWidgetViewModel();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for OccurrenceSleepWidgetRectangularView()
{
  uint64_t result;

  result = qword_255C3D750;
  if (!qword_255C3D750)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22CC45294()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SleepWidgetViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22CC45310(uint64_t a1)
{
  uint64_t result;

  result = sub_22CC07B74(&qword_255C3D7B8, (uint64_t (*)(uint64_t))type metadata accessor for OccurrenceSleepWidgetRectangularView, (uint64_t)&unk_22CC68524);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22CC4534C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22CC4535C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;

  v33 = a2;
  v3 = type metadata accessor for SleepWidgetViewModel();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (int *)type metadata accessor for ScheduleOccurrenceSectionView(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v32 - v10;
  sub_22CC4578C(0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v32 - v16;
  *(_QWORD *)v17 = sub_22CC65490();
  *((_QWORD *)v17 + 1) = 0;
  v17[16] = 1;
  v18 = *(_QWORD *)a1;
  v19 = *(_BYTE *)(a1 + 8);
  sub_22CC11614(*(_QWORD *)a1, v19);
  v20 = sub_22CC20A38(v18, v19);
  sub_22CC11750(v18, v19);
  if ((v20 & 1) != 0)
    v21 = 12;
  else
    v21 = 6;
  sub_22CC45934(0, &qword_255C3D810, sub_22CC457B0);
  v23 = (uint64_t)&v17[*(int *)(v22 + 44)];
  v24 = type metadata accessor for OccurrenceSleepWidgetRectangularView();
  sub_22CC0DE10(a1 + *(int *)(v24 + 20), (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetViewModel);
  v25 = *(_BYTE *)(a1 + *(int *)(v24 + 24));
  *(_QWORD *)&v11[v6[7]] = swift_getKeyPath();
  sub_22CC082A8(0, &qword_254065610, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  sub_22CC459A0((uint64_t)v5, (uint64_t)v11);
  v11[v6[5]] = v25;
  *(_QWORD *)&v11[v6[6]] = v21;
  sub_22CC0DE10((uint64_t)v11, (uint64_t)v9, type metadata accessor for ScheduleOccurrenceSectionView);
  sub_22CC0DE10((uint64_t)v9, v23, type metadata accessor for ScheduleOccurrenceSectionView);
  sub_22CC457CC(0);
  v27 = v23 + *(int *)(v26 + 48);
  *(_QWORD *)v27 = 0;
  *(_BYTE *)(v27 + 8) = 0;
  sub_22CC0DE54((uint64_t)v11, type metadata accessor for ScheduleOccurrenceSectionView);
  sub_22CC0DE54((uint64_t)v9, type metadata accessor for ScheduleOccurrenceSectionView);
  sub_22CC0DE10((uint64_t)v17, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_22CC4578C);
  v28 = v33;
  sub_22CC0DE10((uint64_t)v15, v33, (uint64_t (*)(_QWORD))sub_22CC4578C);
  sub_22CC45778(0);
  v30 = v28 + *(int *)(v29 + 48);
  *(_QWORD *)v30 = 0;
  *(_BYTE *)(v30 + 8) = 0;
  sub_22CC0DE54((uint64_t)v17, (uint64_t (*)(_QWORD))sub_22CC4578C);
  return sub_22CC0DE54((uint64_t)v15, (uint64_t (*)(_QWORD))sub_22CC4578C);
}

uint64_t sub_22CC45640@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v11;

  sub_22CC45738(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v5 = sub_22CC654C0();
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  sub_22CC45934(0, &qword_255C3D800, sub_22CC4575C);
  sub_22CC4535C(v1, (uint64_t)&v5[*(int *)(v6 + 44)]);
  KeyPath = swift_getKeyPath();
  sub_22CC0DE10((uint64_t)v5, a1, (uint64_t (*)(_QWORD))sub_22CC45738);
  sub_22CC4587C();
  v9 = (uint64_t *)(a1 + *(int *)(v8 + 36));
  *v9 = KeyPath;
  v9[1] = 0x3FE3333333333333;
  return sub_22CC0DE54((uint64_t)v5, (uint64_t (*)(_QWORD))sub_22CC45738);
}

void sub_22CC45738(uint64_t a1)
{
  sub_22CC1BA40(a1, &qword_255C3D7C0, (uint64_t (*)(uint64_t))sub_22CC4575C, sub_22CC45858, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF46E0]);
}

void sub_22CC4575C(uint64_t a1)
{
  sub_22CC082A8(a1, &qword_255C3D7C8, (uint64_t (*)(uint64_t))sub_22CC45778, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_22CC45778(uint64_t a1)
{
  sub_22CC457E0(a1, &qword_255C3D7D0, sub_22CC4578C);
}

void sub_22CC4578C(uint64_t a1)
{
  sub_22CC1BA40(a1, &qword_255C3D7D8, (uint64_t (*)(uint64_t))sub_22CC457B0, sub_22CC4583C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF4480]);
}

void sub_22CC457B0(uint64_t a1)
{
  sub_22CC082A8(a1, &qword_255C3D7E0, (uint64_t (*)(uint64_t))sub_22CC457CC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_22CC457CC(uint64_t a1)
{
  sub_22CC457E0(a1, &qword_255C3D7E8, (void (*)(uint64_t))type metadata accessor for ScheduleOccurrenceSectionView);
}

void sub_22CC457E0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_22CC4583C()
{
  return sub_22CC07B74(&qword_255C3D7F0, (uint64_t (*)(uint64_t))sub_22CC457B0, MEMORY[0x24BDF5428]);
}

uint64_t sub_22CC45858()
{
  return sub_22CC07B74(&qword_255C3D7F8, (uint64_t (*)(uint64_t))sub_22CC4575C, MEMORY[0x24BDF5428]);
}

void sub_22CC4587C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3D808)
  {
    sub_22CC45738(255);
    sub_22CC458E0();
    v0 = sub_22CC6534C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3D808);
  }
}

void sub_22CC458E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254065688)
  {
    v0 = sub_22CC65580();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254065688);
  }
}

void sub_22CC45934(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_22CC65310();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_22CC459A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SleepWidgetViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_22CC459E8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255C3D818;
  if (!qword_255C3D818)
  {
    sub_22CC4587C();
    v2 = v1;
    v3[0] = sub_22CC07B74(&qword_255C3D820, (uint64_t (*)(uint64_t))sub_22CC45738, MEMORY[0x24BDF4700]);
    v3[1] = sub_22CC07B74((unint64_t *)&qword_254065680, (uint64_t (*)(uint64_t))sub_22CC458E0, MEMORY[0x24BDF1028]);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_255C3D818);
  }
  return result;
}

uint64_t sub_22CC45A80()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double *v6;
  uint64_t v7;
  uint64_t v8;

  result = (uint64_t)sub_22CC4635C();
  v1 = *(_QWORD *)(result + 16);
  if (!v1)
    goto LABEL_17;
  if (!*(_QWORD *)(*(_QWORD *)(result + 32) + 16))
  {
    if (v1 != 1)
    {
      v7 = 5;
      while (1)
      {
        v8 = v7 - 3;
        if (__OFADD__(v7 - 4, 1))
          break;
        if (*(_QWORD *)(*(_QWORD *)(result + 8 * v7) + 16))
          goto LABEL_3;
        ++v7;
        if (v8 == v1)
          goto LABEL_17;
      }
      __break(1u);
      goto LABEL_19;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    return 1;
  }
LABEL_3:
  v2 = 0;
  while (1)
  {
    v3 = v2 + 1;
    if (__OFADD__(v2, 1))
      break;
    v4 = *(_QWORD *)(result + 32 + 8 * v2);
    v5 = *(_QWORD *)(v4 + 16);
    if (v5)
    {
      v6 = (double *)(v4 + 40);
      while (*v6 - *(v6 - 1) <= 0.0)
      {
        v6 += 3;
        if (!--v5)
          goto LABEL_4;
      }
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_4:
    v2 = v3;
    if (v3 == v1)
      goto LABEL_17;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_22CC45B68()
{
  _QWORD *v0;
  uint64_t v1;
  double v2;
  _QWORD *v3;
  char v4;
  double v5;

  v0 = sub_22CC4635C();
  v1 = v0[2];
  if (v1)
  {
    v2 = 0.0;
    v3 = v0 + 4;
    v4 = 1;
    do
    {
      if (*(_QWORD *)(*v3 + 16))
      {
        v5 = *(double *)(*v3 + 32);
        if ((v4 & 1) != 0)
        {
          v4 = 0;
        }
        else
        {
          v4 = 0;
          if (v5 >= v2)
            v5 = v2;
        }
        v2 = v5;
      }
      ++v3;
      --v1;
    }
    while (v1);
  }
  else
  {
    v2 = 0.0;
  }
  swift_bridgeObjectRelease();
  return *(_QWORD *)&v2;
}

uint64_t sub_22CC45C08()
{
  _QWORD *v0;
  uint64_t v1;
  double v2;
  _QWORD *v3;
  char v4;
  double v5;
  uint64_t v6;

  v0 = sub_22CC4635C();
  v1 = v0[2];
  if (v1)
  {
    v2 = 0.0;
    v3 = v0 + 4;
    v4 = 1;
    do
    {
      v6 = *(_QWORD *)(*v3 + 16);
      if (v6)
      {
        v5 = *(double *)(*v3 + 24 * v6 + 16);
        if ((v4 & 1) != 0)
        {
          v4 = 0;
        }
        else
        {
          v4 = 0;
          if (v5 < v2)
            v5 = v2;
        }
        v2 = v5;
      }
      ++v3;
      --v1;
    }
    while (v1);
  }
  else
  {
    v2 = 0.0;
  }
  swift_bridgeObjectRelease();
  return *(_QWORD *)&v2;
}

void static HighlightBehavior.defaultHighlightBehaviorForLastSummary.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

BOOL static HighlightBehavior.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_22CC45CD0()
{
  uint64_t v0;
  uint64_t v1;
  double *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  double v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  double *v14;
  double v15;
  double v16;
  uint64_t v18;

  v18 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (v18)
  {
    swift_bridgeObjectRetain_n();
    v1 = 0;
    v2 = (double *)MEMORY[0x24BEE4AF8];
    do
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v3 = sub_22CC4635C();
      v4 = v3[2];
      if (v4)
      {
        v5 = 0;
        v6 = 1;
        v7 = 0.0;
        do
        {
          v8 = v3[v5 + 4];
          if (*(_QWORD *)(v8 + 16))
          {
            if ((v6 & 1) != 0)
            {
              v6 = 0;
              v7 = *(double *)(v8 + 32);
            }
            else
            {
              v6 = 0;
              if (*(double *)(v8 + 32) < v7)
                v7 = *(double *)(v8 + 32);
            }
          }
          ++v5;
        }
        while (v4 != v5);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        if ((v6 & 1) == 0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v2 = (double *)sub_22CC46CA0(0, *((_QWORD *)v2 + 2) + 1, 1, v2);
          v10 = *((_QWORD *)v2 + 2);
          v9 = *((_QWORD *)v2 + 3);
          if (v10 >= v9 >> 1)
            v2 = (double *)sub_22CC46CA0((_QWORD *)(v9 > 1), v10 + 1, 1, v2);
          *((_QWORD *)v2 + 2) = v10 + 1;
          v2[v10 + 4] = v7;
        }
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
      }
      ++v1;
    }
    while (v1 != v18);
    swift_bridgeObjectRelease_n();
    v11 = *((_QWORD *)v2 + 2);
    if (v11)
      goto LABEL_20;
LABEL_27:
    swift_bridgeObjectRelease();
    return 0;
  }
  v2 = (double *)MEMORY[0x24BEE4AF8];
  v11 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
  if (!v11)
    goto LABEL_27;
LABEL_20:
  v12 = v2[4];
  v13 = v11 - 1;
  if (v11 != 1)
  {
    v14 = v2 + 5;
    do
    {
      v15 = *v14++;
      v16 = v15;
      if (v15 < v12)
        v12 = v16;
      --v13;
    }
    while (v13);
  }
  swift_bridgeObjectRelease();
  return *(_QWORD *)&v12;
}

uint64_t sub_22CC45FA0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  double *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  double *v17;
  double v18;
  double v19;
  _QWORD *v21;
  uint64_t v22;

  v22 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (v22)
  {
    swift_bridgeObjectRetain_n();
    v1 = 0;
    v21 = (_QWORD *)MEMORY[0x24BEE4AF8];
    do
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v2 = sub_22CC4635C();
      v3 = v2[2];
      if (v3)
      {
        v4 = 0;
        v5 = 1;
        v6 = 0.0;
        do
        {
          v7 = v2[v4 + 4];
          v8 = *(_QWORD *)(v7 + 16);
          if (v8)
          {
            v9 = v7 + 24 * v8;
            if ((v5 & 1) != 0)
            {
              v5 = 0;
              v6 = *(double *)(v9 + 16);
            }
            else
            {
              v5 = 0;
              if (v6 <= *(double *)(v9 + 16))
                v6 = *(double *)(v9 + 16);
            }
          }
          ++v4;
        }
        while (v3 != v4);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        if ((v5 & 1) == 0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            v10 = v21;
          else
            v10 = sub_22CC46CA0(0, v21[2] + 1, 1, v21);
          v12 = v10[2];
          v11 = v10[3];
          if (v12 >= v11 >> 1)
            v10 = sub_22CC46CA0((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
          v10[2] = v12 + 1;
          v21 = v10;
          *(double *)&v10[v12 + 4] = v6;
        }
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
      }
      ++v1;
    }
    while (v1 != v22);
    swift_bridgeObjectRelease_n();
    v13 = (double *)v21;
    v14 = v21[2];
    if (v14)
      goto LABEL_21;
LABEL_28:
    swift_bridgeObjectRelease();
    return 0;
  }
  v13 = (double *)MEMORY[0x24BEE4AF8];
  v14 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
  if (!v14)
    goto LABEL_28;
LABEL_21:
  v15 = v13[4];
  v16 = v14 - 1;
  if (v14 != 1)
  {
    v17 = v13 + 5;
    do
    {
      v18 = *v17++;
      v19 = v18;
      if (v15 < v18)
        v15 = v19;
      --v16;
    }
    while (v16);
  }
  swift_bridgeObjectRelease();
  return *(_QWORD *)&v15;
}

uint64_t HighlightBehavior.hash(into:)()
{
  return sub_22CC65EEC();
}

uint64_t HighlightBehavior.hashValue.getter()
{
  sub_22CC65EE0();
  sub_22CC65EEC();
  return sub_22CC65EF8();
}

uint64_t Segment.highlight.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t static Segment.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 == *(double *)a2 && *(double *)(a1 + 8) == *(double *)(a2 + 8))
    return (*(unsigned __int8 *)(a2 + 16) ^ *(unsigned __int8 *)(a1 + 16) ^ 1) & 1;
  else
    return 0;
}

uint64_t sub_22CC46328(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 == *(double *)a2 && *(double *)(a1 + 8) == *(double *)(a2 + 8))
    return (*(unsigned __int8 *)(a2 + 16) ^ *(unsigned __int8 *)(a1 + 16) ^ 1) & 1;
  else
    return 0;
}

_QWORD *sub_22CC4635C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  v6 = v0[4];
  v5 = v0[5];
  swift_bridgeObjectRetain();
  v7 = sub_22CC467EC(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v9 = v7[2];
  v8 = v7[3];
  v10 = v9 + 1;
  if (v9 >= v8 >> 1)
    v7 = sub_22CC467EC((_QWORD *)(v8 > 1), v9 + 1, 1, v7);
  v7[2] = v10;
  v7[v9 + 4] = v2;
  v11 = v7[3];
  v12 = v9 + 2;
  swift_bridgeObjectRetain();
  if ((uint64_t)(v9 + 2) > (uint64_t)(v11 >> 1))
    v7 = sub_22CC467EC((_QWORD *)(v11 > 1), v9 + 2, 1, v7);
  v7[2] = v12;
  v7[v10 + 4] = v1;
  v13 = v7[3];
  v14 = v9 + 3;
  swift_bridgeObjectRetain();
  if ((uint64_t)(v9 + 3) > (uint64_t)(v13 >> 1))
    v7 = sub_22CC467EC((_QWORD *)(v13 > 1), v9 + 3, 1, v7);
  v7[2] = v14;
  v7[v12 + 4] = v4;
  v15 = v7[3];
  v16 = v9 + 4;
  swift_bridgeObjectRetain();
  if ((uint64_t)(v9 + 4) > (uint64_t)(v15 >> 1))
    v7 = sub_22CC467EC((_QWORD *)(v15 > 1), v9 + 4, 1, v7);
  v7[2] = v16;
  v7[v14 + 4] = v3;
  v17 = v7[3];
  v18 = v9 + 5;
  swift_bridgeObjectRetain();
  if ((uint64_t)(v9 + 5) > (uint64_t)(v17 >> 1))
    v7 = sub_22CC467EC((_QWORD *)(v17 > 1), v9 + 5, 1, v7);
  v7[2] = v18;
  v7[v16 + 4] = v6;
  v19 = v7[3];
  v20 = v9 + 6;
  swift_bridgeObjectRetain();
  if (v20 > (uint64_t)(v19 >> 1))
    v7 = sub_22CC467EC((_QWORD *)(v19 > 1), v20, 1, v7);
  v7[2] = v20;
  v7[v18 + 4] = v5;
  return v7;
}

uint64_t sub_22CC4655C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  double *v4;
  double *v5;
  uint64_t v6;
  _BOOL4 v7;
  int v8;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = v2 - 1;
  v4 = (double *)(a2 + 48);
  v5 = (double *)(a1 + 48);
  do
  {
    v6 = v3;
    v7 = *(v5 - 2) != *(v4 - 2);
    if (*(v5 - 1) != *(v4 - 1))
      v7 = 1;
    v8 = v7 | *(unsigned __int8 *)v5 ^ *(unsigned __int8 *)v4;
    if ((v8 & 1) != 0)
      break;
    --v3;
    v4 += 3;
    v5 += 3;
  }
  while (v6);
  return (v8 ^ 1) & 1;
}

uint64_t sub_22CC465E8(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  sub_22CC478B0();
  v10 = *(_QWORD *)(sub_22CC65A3C() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_29:
    result = sub_22CC65E50();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(sub_22CC65A3C() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (unint64_t)v13 + v17;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(_QWORD *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_22CC47374(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

_QWORD *sub_22CC467EC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_22CC47844();
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_22CC46DC0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_22CC468F4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_22CC46B74(a1, a2, a3, a4, qword_255C3D848, (uint64_t)&type metadata for BarSegment);
}

_QWORD *sub_22CC46908(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_22CC08D64(0, &qword_255C3C998, (uint64_t)&type metadata for SleepWidgetChartBar, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_22CC47668(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_22CC46A40(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_22CC08D64(0, (unint64_t *)&qword_254065EB0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_22CC47578(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_22CC46B60(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_22CC46B74(a1, a2, a3, a4, &qword_255C3C990, (uint64_t)&type metadata for Segment);
}

_QWORD *sub_22CC46B74(_QWORD *result, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, uint64_t a6)
{
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  size_t v13;
  _QWORD *v14;

  v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    v9 = a2;
    goto LABEL_8;
  }
  v8 = a4[3];
  v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2)
    goto LABEL_8;
  if (v9 + 0x4000000000000000 >= 0)
  {
    v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v9 = a2;
LABEL_8:
    v10 = a4[2];
    if (v9 <= v10)
      v11 = a4[2];
    else
      v11 = v9;
    if (v11)
    {
      sub_22CC08D64(0, a5, a6, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      v12 = (_QWORD *)swift_allocObject();
      v13 = _swift_stdlib_malloc_size(v12);
      v12[2] = v10;
      v12[3] = 2 * ((uint64_t)(v13 - 32) / 24);
      v14 = v12 + 4;
      if ((v7 & 1) != 0)
      {
LABEL_13:
        if (v12 != a4 || v14 >= &a4[3 * v10 + 4])
          memmove(v14, a4 + 4, 24 * v10);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v12 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v14 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_22CC4748C(0, v10, (char *)v14, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

_QWORD *sub_22CC46CA0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_22CC08D64(0, &qword_255C3D830, MEMORY[0x24BEE13C8], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_22CC4775C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_22CC46DC0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_22CC08D64(0, &qword_255C3D840, (uint64_t)&type metadata for Segment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_22CC65E74();
  __break(1u);
  return result;
}

uint64_t _s13SleepWidgetUI0aB8ChartBarV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = a1[1];
  v4 = a1[2];
  v3 = a1[3];
  v6 = a1[4];
  v5 = a1[5];
  v7 = a2[1];
  v9 = a2[2];
  v8 = a2[3];
  v11 = a2[4];
  v10 = a2[5];
  if ((sub_22CC4655C(*a1, *a2) & 1) != 0
    && (sub_22CC4655C(v2, v7) & 1) != 0
    && (sub_22CC4655C(v4, v9) & 1) != 0
    && (sub_22CC4655C(v3, v8) & 1) != 0
    && (sub_22CC4655C(v6, v11) & 1) != 0)
  {
    return sub_22CC4655C(v5, v10);
  }
  else
  {
    return 0;
  }
}

unint64_t sub_22CC46FA8()
{
  unint64_t result;

  result = qword_255C3D828;
  if (!qword_255C3D828)
  {
    result = MEMORY[0x22E3063F8](&protocol conformance descriptor for HighlightBehavior, &type metadata for HighlightBehavior);
    atomic_store(result, (unint64_t *)&qword_255C3D828);
  }
  return result;
}

ValueMetadata *type metadata accessor for SleepWidgetChart()
{
  return &type metadata for SleepWidgetChart;
}

uint64_t storeEnumTagSinglePayload for HighlightBehavior(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22CC47048 + 4 * byte_22CC685E5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22CC4707C + 4 * byte_22CC685E0[v4]))();
}

uint64_t sub_22CC4707C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22CC47084(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22CC4708CLL);
  return result;
}

uint64_t sub_22CC47098(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22CC470A0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22CC470A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22CC470AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HighlightBehavior()
{
  return &type metadata for HighlightBehavior;
}

ValueMetadata *type metadata accessor for Segment()
{
  return &type metadata for Segment;
}

uint64_t destroy for SleepWidgetChartBar()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SleepWidgetChartBar(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SleepWidgetChartBar(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_OWORD *assignWithTake for SleepWidgetChartBar(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SleepWidgetChartBar(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SleepWidgetChartBar(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SleepWidgetChartBar()
{
  return &type metadata for SleepWidgetChartBar;
}

uint64_t sub_22CC47374(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(sub_22CC65A3C() - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  result = sub_22CC65E74();
  __break(1u);
  return result;
}

char *sub_22CC4748C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 24 * a1 + 32);
    v6 = 24 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_22CC65E74();
  __break(1u);
  return result;
}

uint64_t sub_22CC47578(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_22CC65E74();
  __break(1u);
  return result;
}

uint64_t sub_22CC47668(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_22CC65E74();
  __break(1u);
  return result;
}

char *sub_22CC4775C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_22CC65E74();
  __break(1u);
  return result;
}

void sub_22CC47844()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3D838)
  {
    sub_22CC08D64(255, &qword_255C3D840, (uint64_t)&type metadata for Segment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    v0 = sub_22CC65E98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3D838);
  }
}

void sub_22CC478B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254065958)
  {
    sub_22CC65A3C();
    v0 = sub_22CC65E98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254065958);
  }
}

uint64_t sub_22CC47904()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC47910(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SleepWidgetViewModel();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_22CC4794C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC47958(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SleepWidgetViewModel();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SleepWidgetCircularView()
{
  uint64_t result;

  result = qword_254066530;
  if (!qword_254066530)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22CC479D4(uint64_t a1)
{
  uint64_t result;

  result = sub_22CC07B74(&qword_254066528, (uint64_t (*)(uint64_t))type metadata accessor for SleepWidgetCircularView, (uint64_t)&unk_22CC68770);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22CC47A10(uint64_t a1)
{
  uint64_t result;

  result = sub_22CC07B74(&qword_255C3D8A0, (uint64_t (*)(uint64_t))type metadata accessor for SleepWidgetCircularView, (uint64_t)&unk_22CC68738);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22CC47A4C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22CC47A5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t KeyPath;
  uint64_t v73;
  uint64_t (*v74)(uint64_t);
  uint64_t (*v75)(uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  id v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (*v99)(uint64_t);
  uint64_t (*v100)(uint64_t, uint64_t);
  uint64_t v101;
  uint64_t v102;
  id v103;
  void *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v126;
  char *v127;
  char *v128;
  char *v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;

  v152 = a1;
  v135 = type metadata accessor for BedtimeSleepWidgetView();
  v1 = MEMORY[0x24BDAC7A8](v135);
  v134 = (uint64_t)&v126 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v142 = (uint64_t)&v126 - v3;
  v143 = type metadata accessor for GreetingSleepWidgetView();
  v4 = MEMORY[0x24BDAC7A8](v143);
  v154 = (uint64_t)&v126 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v126 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v138 = (uint64_t)&v126 - v9;
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF380];
  sub_22CC4A6D4(0, &qword_254066670, (uint64_t (*)(uint64_t))sub_22CC1DC78, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF380]);
  v151 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v146 = (char *)&v126 - v12;
  sub_22CC4A6D4(0, &qword_254066660, (uint64_t (*)(uint64_t))sub_22CC1DCDC, v10);
  v147 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v150 = (char *)&v126 - v14;
  sub_22CC1DC78(0);
  v144 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v145 = (char *)&v126 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC082A8(0, &qword_254065340, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v126 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v126 - v22;
  v24 = MEMORY[0x24BDAC7A8](v21);
  v132 = (char *)&v126 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v133 = (uint64_t)&v126 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v136 = (char *)&v126 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v137 = (uint64_t)&v126 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v129 = (char *)&v126 - v33;
  MEMORY[0x24BDAC7A8](v32);
  v131 = (uint64_t)&v126 - v34;
  sub_22CC082A8(0, &qword_254065618, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDEB580]);
  MEMORY[0x24BDAC7A8](v35);
  v140 = (uint64_t *)((char *)&v126 - v36);
  v37 = type metadata accessor for SleepWidgetViewModel();
  MEMORY[0x24BDAC7A8](v37);
  v139 = (uint64_t)&v126 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = type metadata accessor for UpcomingSleepWidgetView();
  v40 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v126 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v40);
  v141 = (uint64_t)&v126 - v43;
  sub_22CC1DCDC();
  v148 = *(_QWORD *)(v44 - 8);
  v149 = v44;
  v45 = MEMORY[0x24BDAC7A8](v44);
  v47 = (char *)&v126 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = MEMORY[0x24BDAC7A8](v45);
  v50 = (char *)&v126 - v49;
  v51 = MEMORY[0x24BDAC7A8](v48);
  v128 = (char *)&v126 - v52;
  v53 = MEMORY[0x24BDAC7A8](v51);
  v130 = (char *)&v126 - v54;
  v55 = MEMORY[0x24BDAC7A8](v53);
  v57 = (char *)&v126 - v56;
  v58 = MEMORY[0x24BDAC7A8](v55);
  v60 = (char *)&v126 - v59;
  v61 = MEMORY[0x24BDAC7A8](v58);
  v127 = (char *)&v126 - v62;
  MEMORY[0x24BDAC7A8](v61);
  v64 = (char *)&v126 - v63;
  v65 = v153 + *(int *)(type metadata accessor for SleepWidgetSmallView() + 20);
  if ((*(_BYTE *)(v65 + 8) & 1) != 0 || (v70 = *(_QWORD *)v65, *(_QWORD *)v65 > 7uLL))
  {
LABEL_2:
    v66 = v154;
    sub_22CC0DE10(v65, v154, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetViewModel);
    sub_22CC0DE10(v66, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for GreetingSleepWidgetView);
    sub_22CC07B74(&qword_2540653F8, (uint64_t (*)(uint64_t))type metadata accessor for GreetingSleepWidgetView, (uint64_t)&unk_22CC68A98);
    v155 = sub_22CC658D4();
    v67 = (id)HKSPSleepURL();
    if (v67)
    {
      v68 = v67;
      sub_22CC64FD4();

      v69 = sub_22CC64FE0();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v20, 0, 1, v69);
    }
    else
    {
      v83 = sub_22CC64FE0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v20, 1, 1, v83);
    }
    v85 = (uint64_t)v145;
    v84 = (uint64_t)v146;
    sub_22CC4A680((uint64_t)v20, (uint64_t)v23, &qword_254065340, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v86 = MEMORY[0x24BDF4780];
    v87 = MEMORY[0x24BDF4760];
    sub_22CC65778();
    sub_22CC0824C((uint64_t)v23);
    swift_release();
    sub_22CC0DE54(v154, (uint64_t (*)(_QWORD))type metadata accessor for GreetingSleepWidgetView);
    v88 = v148;
    v89 = v47;
    v90 = v149;
    (*(void (**)(char *, char *, uint64_t))(v148 + 32))(v50, v89, v149);
    (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v150, v50, v90);
    swift_storeEnumTagMultiPayload();
    v155 = v86;
    v156 = v87;
    swift_getOpaqueTypeConformance2();
    sub_22CC65520();
    sub_22CC0DE10(v85, v84, (uint64_t (*)(_QWORD))sub_22CC1DC78);
    swift_storeEnumTagMultiPayload();
    sub_22CC1F828();
    sub_22CC65520();
    v64 = v50;
    goto LABEL_22;
  }
  if (((1 << v70) & 0xC2) != 0)
  {
    v91 = v138;
    sub_22CC0DE10(v65, v138, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetViewModel);
    sub_22CC0DE10(v91, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for GreetingSleepWidgetView);
    sub_22CC07B74(&qword_2540653F8, (uint64_t (*)(uint64_t))type metadata accessor for GreetingSleepWidgetView, (uint64_t)&unk_22CC68A98);
    v155 = sub_22CC658D4();
    v92 = (id)HKSPSleepURL();
    if (v92)
    {
      v93 = v92;
      v94 = (uint64_t)v136;
      sub_22CC64FD4();

      v95 = sub_22CC64FE0();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56))(v94, 0, 1, v95);
    }
    else
    {
      v107 = sub_22CC64FE0();
      v94 = (uint64_t)v136;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 56))(v136, 1, 1, v107);
    }
    v85 = (uint64_t)v145;
    v108 = (uint64_t)v146;
    v109 = v137;
    sub_22CC4A680(v94, v137, &qword_254065340, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v110 = MEMORY[0x24BDF4780];
    v111 = MEMORY[0x24BDF4760];
    sub_22CC65778();
    sub_22CC0824C(v109);
    swift_release();
    sub_22CC0DE54(v91, (uint64_t (*)(_QWORD))type metadata accessor for GreetingSleepWidgetView);
    v88 = v148;
    v90 = v149;
    (*(void (**)(char *, char *, uint64_t))(v148 + 32))(v60, v57, v149);
    (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v150, v60, v90);
    swift_storeEnumTagMultiPayload();
    v155 = v110;
    v156 = v111;
    swift_getOpaqueTypeConformance2();
    sub_22CC65520();
    sub_22CC0DE10(v85, v108, (uint64_t (*)(_QWORD))sub_22CC1DC78);
    swift_storeEnumTagMultiPayload();
    sub_22CC1F828();
    sub_22CC65520();
    v64 = v60;
  }
  else
  {
    if (((1 << v70) & 0xC) == 0)
    {
      if (((1 << v70) & 0x30) != 0)
      {
        v71 = v139;
        sub_22CC0DE10(v65, v139, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetViewModel);
        KeyPath = swift_getKeyPath();
        v73 = (uint64_t)v140;
        *v140 = KeyPath;
        v74 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
        v75 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
        sub_22CC082A8(0, &qword_254065610, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDEB560]);
        swift_storeEnumTagMultiPayload();
        v76 = swift_getKeyPath();
        v77 = v135;
        v78 = v142;
        *(_QWORD *)(v142 + *(int *)(v135 + 24)) = v76;
        sub_22CC082A8(0, &qword_254065608, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], v75);
        swift_storeEnumTagMultiPayload();
        sub_22CC459A0(v71, v78);
        sub_22CC4A680(v73, v78 + *(int *)(v77 + 20), &qword_254065618, v74, MEMORY[0x24BDEB580]);
        sub_22CC0DE10(v78, v134, (uint64_t (*)(_QWORD))type metadata accessor for BedtimeSleepWidgetView);
        sub_22CC07B74(&qword_254065358, (uint64_t (*)(uint64_t))type metadata accessor for BedtimeSleepWidgetView, (uint64_t)&unk_22CC66D68);
        v155 = sub_22CC658D4();
        v79 = (id)HKSPSleepURL();
        if (v79)
        {
          v80 = v79;
          v81 = (uint64_t)v132;
          sub_22CC64FD4();

          v82 = sub_22CC64FE0();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(v81, 0, 1, v82);
        }
        else
        {
          v112 = sub_22CC64FE0();
          v81 = (uint64_t)v132;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 56))(v132, 1, 1, v112);
        }
        v85 = (uint64_t)v145;
        v113 = (uint64_t)v146;
        v88 = v148;
        v90 = v149;
        v114 = v133;
        sub_22CC4A680(v81, v133, &qword_254065340, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        v115 = MEMORY[0x24BDF4780];
        v116 = MEMORY[0x24BDF4760];
        v117 = v128;
        sub_22CC65778();
        sub_22CC0824C(v114);
        swift_release();
        sub_22CC0DE54(v142, (uint64_t (*)(_QWORD))type metadata accessor for BedtimeSleepWidgetView);
        v118 = v130;
        (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v130, v117, v90);
        (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v150, v118, v90);
        swift_storeEnumTagMultiPayload();
        v155 = v115;
        v156 = v116;
        swift_getOpaqueTypeConformance2();
        sub_22CC65520();
        sub_22CC0DE10(v85, v113, (uint64_t (*)(_QWORD))sub_22CC1DC78);
        swift_storeEnumTagMultiPayload();
        sub_22CC1F828();
        sub_22CC65520();
        v64 = v118;
        goto LABEL_22;
      }
      goto LABEL_2;
    }
    v96 = v139;
    sub_22CC0DE10(v65, v139, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetViewModel);
    v97 = swift_getKeyPath();
    v98 = (uint64_t)v140;
    *v140 = v97;
    v99 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
    v100 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_22CC082A8(0, &qword_254065610, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDEB560]);
    swift_storeEnumTagMultiPayload();
    v101 = swift_getKeyPath();
    v102 = v141;
    *(_QWORD *)(v141 + *(int *)(v39 + 24)) = v101;
    sub_22CC082A8(0, &qword_254065608, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], v100);
    swift_storeEnumTagMultiPayload();
    sub_22CC459A0(v96, v102);
    sub_22CC4A680(v98, v102 + *(int *)(v39 + 20), &qword_254065618, v99, MEMORY[0x24BDEB580]);
    sub_22CC0DE10(v102, (uint64_t)v42, (uint64_t (*)(_QWORD))type metadata accessor for UpcomingSleepWidgetView);
    sub_22CC07B74(&qword_254065468, (uint64_t (*)(uint64_t))type metadata accessor for UpcomingSleepWidgetView, (uint64_t)&unk_22CC68928);
    v155 = sub_22CC658D4();
    v103 = (id)HKSPSleepURL();
    if (v103)
    {
      v104 = v103;
      v105 = (uint64_t)v129;
      sub_22CC64FD4();

      v106 = sub_22CC64FE0();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 56))(v105, 0, 1, v106);
    }
    else
    {
      v119 = sub_22CC64FE0();
      v105 = (uint64_t)v129;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v119 - 8) + 56))(v129, 1, 1, v119);
    }
    v85 = (uint64_t)v145;
    v120 = (uint64_t)v146;
    v90 = v149;
    v121 = v131;
    sub_22CC4A680(v105, v131, &qword_254065340, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v122 = MEMORY[0x24BDF4780];
    v123 = MEMORY[0x24BDF4760];
    v124 = v127;
    sub_22CC65778();
    sub_22CC0824C(v121);
    swift_release();
    sub_22CC0DE54(v141, (uint64_t (*)(_QWORD))type metadata accessor for UpcomingSleepWidgetView);
    v88 = v148;
    (*(void (**)(char *, char *, uint64_t))(v148 + 32))(v64, v124, v90);
    (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v150, v64, v90);
    swift_storeEnumTagMultiPayload();
    v155 = v122;
    v156 = v123;
    swift_getOpaqueTypeConformance2();
    sub_22CC65520();
    sub_22CC0DE10(v85, v120, (uint64_t (*)(_QWORD))sub_22CC1DC78);
    swift_storeEnumTagMultiPayload();
    sub_22CC1F828();
    sub_22CC65520();
  }
LABEL_22:
  sub_22CC0DE54(v85, (uint64_t (*)(_QWORD))sub_22CC1DC78);
  return (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v64, v90);
}

uint64_t sub_22CC489E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t KeyPath;
  uint64_t v65;
  id v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  id v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  id v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t *v121;
  char *v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;

  v2 = v1;
  v134 = a1;
  v125 = type metadata accessor for GreetingSleepWidgetRectangularView();
  v3 = MEMORY[0x24BDAC7A8](v125);
  v123 = (uint64_t *)((char *)&v114 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = MEMORY[0x24BDAC7A8](v3);
  v124 = (uint64_t)&v114 - v6;
  MEMORY[0x24BDAC7A8](v5);
  v121 = (uint64_t *)((char *)&v114 - v7);
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF380];
  sub_22CC4A6D4(0, &qword_254066670, (uint64_t (*)(uint64_t))sub_22CC1DC78, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF380]);
  v127 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v130 = (uint64_t)&v114 - v10;
  sub_22CC4A6D4(0, &qword_254066660, (uint64_t (*)(uint64_t))sub_22CC1DCDC, v8);
  v131 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v132 = (char *)&v114 - v12;
  sub_22CC1DC78(0);
  v128 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v129 = (char *)&v114 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC082A8(0, &qword_254065340, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v122 = (char *)&v114 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v114 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18);
  v116 = (char *)&v114 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v117 = (uint64_t)&v114 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v118 = (char *)&v114 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v119 = (uint64_t)&v114 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v114 = (char *)&v114 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v115 = (uint64_t)&v114 - v31;
  v32 = type metadata accessor for SleepWidgetViewModel();
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)&v114 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for OccurrenceSleepWidgetRectangularView();
  v36 = MEMORY[0x24BDAC7A8](v35);
  v120 = (uint64_t *)((char *)&v114 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  v38 = MEMORY[0x24BDAC7A8](v36);
  v40 = (char *)&v114 - v39;
  MEMORY[0x24BDAC7A8](v38);
  v42 = (char *)&v114 - v41;
  sub_22CC1DCDC();
  v126 = v43;
  v133 = *(_QWORD *)(v43 - 8);
  v44 = MEMORY[0x24BDAC7A8](v2);
  v46 = (char *)&v114 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = MEMORY[0x24BDAC7A8](v44);
  v49 = (char *)&v114 - v48;
  v50 = MEMORY[0x24BDAC7A8](v47);
  v51 = MEMORY[0x24BDAC7A8](v50);
  v52 = MEMORY[0x24BDAC7A8](v51);
  v54 = (char *)&v114 - v53;
  v55 = MEMORY[0x24BDAC7A8](v52);
  v56 = MEMORY[0x24BDAC7A8](v55);
  v57 = MEMORY[0x24BDAC7A8](v56);
  v63 = (char *)&v114 - v62;
  if ((*(_BYTE *)(v57 + 8) & 1) != 0 || (v70 = *(_QWORD *)v57, *(_QWORD *)v57 > 7uLL))
  {
LABEL_2:
    sub_22CC0DE10(v57, (uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetViewModel);
    KeyPath = swift_getKeyPath();
    v65 = (uint64_t)v123;
    *v123 = KeyPath;
    *(_BYTE *)(v65 + 8) = 0;
    sub_22CC459A0((uint64_t)v34, v65 + *(int *)(v125 + 20));
    sub_22CC0DE10(v65, v124, (uint64_t (*)(_QWORD))type metadata accessor for GreetingSleepWidgetRectangularView);
    sub_22CC07B74(&qword_255C3D5F8, (uint64_t (*)(uint64_t))type metadata accessor for GreetingSleepWidgetRectangularView, (uint64_t)&unk_22CC67F0C);
    v135 = sub_22CC658D4();
    v66 = (id)HKSPSleepURL();
    if (v66)
    {
      v67 = v66;
      v68 = (uint64_t)v122;
      sub_22CC64FD4();

      v69 = sub_22CC64FE0();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v68, 0, 1, v69);
    }
    else
    {
      v78 = sub_22CC64FE0();
      v68 = (uint64_t)v122;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v122, 1, 1, v78);
    }
    v79 = (uint64_t)v129;
    v80 = v126;
    sub_22CC4A680(v68, (uint64_t)v20, &qword_254065340, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v81 = MEMORY[0x24BDF4780];
    v82 = MEMORY[0x24BDF4760];
    sub_22CC65778();
    sub_22CC0824C((uint64_t)v20);
    swift_release();
    sub_22CC0DE54(v65, (uint64_t (*)(_QWORD))type metadata accessor for GreetingSleepWidgetRectangularView);
    v83 = v133;
    (*(void (**)(char *, char *, uint64_t))(v133 + 32))(v49, v46, v80);
    (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v132, v49, v80);
    swift_storeEnumTagMultiPayload();
    v135 = v81;
    v136 = v82;
    swift_getOpaqueTypeConformance2();
    sub_22CC65520();
    sub_22CC0DE10(v79, v130, (uint64_t (*)(_QWORD))sub_22CC1DC78);
    swift_storeEnumTagMultiPayload();
    sub_22CC1F828();
    sub_22CC65520();
    v63 = v49;
    goto LABEL_23;
  }
  if (((1 << v70) & 0xC2) == 0)
  {
    if (((1 << v70) & 0xC) != 0)
    {
      v90 = v58;
      sub_22CC0DE10(v57, (uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetViewModel);
      v91 = (uint64_t)v42;
      *(_QWORD *)v42 = swift_getKeyPath();
      v42[8] = 0;
      sub_22CC459A0((uint64_t)v34, (uint64_t)&v42[*(int *)(v35 + 20)]);
      v42[*(int *)(v35 + 24)] = 3;
      sub_22CC0DE10((uint64_t)v42, (uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for OccurrenceSleepWidgetRectangularView);
      sub_22CC07B74(&qword_255C3D7B8, (uint64_t (*)(uint64_t))type metadata accessor for OccurrenceSleepWidgetRectangularView, (uint64_t)&unk_22CC68524);
      v135 = sub_22CC658D4();
      v92 = (id)HKSPSleepURL();
      if (v92)
      {
        v93 = v92;
        v94 = (uint64_t)v114;
        sub_22CC64FD4();

        v95 = sub_22CC64FE0();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56))(v94, 0, 1, v95);
      }
      else
      {
        v108 = sub_22CC64FE0();
        v94 = (uint64_t)v114;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 56))(v114, 1, 1, v108);
      }
      v79 = (uint64_t)v129;
      v109 = v130;
      v110 = v115;
      sub_22CC4A680(v94, v115, &qword_254065340, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v111 = MEMORY[0x24BDF4780];
      v112 = MEMORY[0x24BDF4760];
      sub_22CC65778();
      sub_22CC0824C(v110);
      swift_release();
      sub_22CC0DE54(v91, (uint64_t (*)(_QWORD))type metadata accessor for OccurrenceSleepWidgetRectangularView);
      v83 = v133;
      v80 = v126;
      (*(void (**)(char *, uint64_t, uint64_t))(v133 + 32))(v63, v90, v126);
      (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v132, v63, v80);
      swift_storeEnumTagMultiPayload();
      v135 = v111;
      v136 = v112;
      swift_getOpaqueTypeConformance2();
      sub_22CC65520();
      sub_22CC0DE10(v79, v109, (uint64_t (*)(_QWORD))sub_22CC1DC78);
      swift_storeEnumTagMultiPayload();
      sub_22CC1F828();
      goto LABEL_22;
    }
    if (((1 << v70) & 0x30) != 0)
    {
      v124 = v61;
      v125 = v59;
      v71 = v57;
      sub_22CC0DE10(v57, (uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetViewModel);
      LOBYTE(v71) = *(_BYTE *)(v71 + *(int *)(v32 + 28));
      v72 = swift_getKeyPath();
      v73 = v120;
      *v120 = v72;
      *((_BYTE *)v73 + 8) = 0;
      sub_22CC459A0((uint64_t)v34, (uint64_t)v73 + *(int *)(v35 + 20));
      *((_BYTE *)v73 + *(int *)(v35 + 24)) = v71;
      sub_22CC0DE10((uint64_t)v73, (uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for OccurrenceSleepWidgetRectangularView);
      sub_22CC07B74(&qword_255C3D7B8, (uint64_t (*)(uint64_t))type metadata accessor for OccurrenceSleepWidgetRectangularView, (uint64_t)&unk_22CC68524);
      v135 = sub_22CC658D4();
      v74 = (id)HKSPSleepURL();
      if (v74)
      {
        v75 = v74;
        v76 = (uint64_t)v116;
        sub_22CC64FD4();

        v77 = sub_22CC64FE0();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56))(v76, 0, 1, v77);
      }
      else
      {
        v102 = sub_22CC64FE0();
        v76 = (uint64_t)v116;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 56))(v116, 1, 1, v102);
      }
      v79 = (uint64_t)v129;
      v103 = v130;
      v80 = v126;
      v104 = v117;
      sub_22CC4A680(v76, v117, &qword_254065340, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v105 = MEMORY[0x24BDF4780];
      v106 = MEMORY[0x24BDF4760];
      v107 = v124;
      sub_22CC65778();
      sub_22CC0824C(v104);
      swift_release();
      sub_22CC0DE54((uint64_t)v120, (uint64_t (*)(_QWORD))type metadata accessor for OccurrenceSleepWidgetRectangularView);
      v83 = v133;
      v63 = (char *)v125;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v133 + 32))(v125, v107, v80);
      (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v132, v63, v80);
      swift_storeEnumTagMultiPayload();
      v135 = v105;
      v136 = v106;
      swift_getOpaqueTypeConformance2();
      sub_22CC65520();
      sub_22CC0DE10(v79, v103, (uint64_t (*)(_QWORD))sub_22CC1DC78);
      swift_storeEnumTagMultiPayload();
      sub_22CC1F828();
LABEL_22:
      sub_22CC65520();
      goto LABEL_23;
    }
    goto LABEL_2;
  }
  v123 = v60;
  sub_22CC0DE10(v57, (uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetViewModel);
  v84 = swift_getKeyPath();
  v85 = v121;
  *v121 = v84;
  *((_BYTE *)v85 + 8) = 0;
  sub_22CC459A0((uint64_t)v34, (uint64_t)v85 + *(int *)(v125 + 20));
  sub_22CC0DE10((uint64_t)v85, v124, (uint64_t (*)(_QWORD))type metadata accessor for GreetingSleepWidgetRectangularView);
  sub_22CC07B74(&qword_255C3D5F8, (uint64_t (*)(uint64_t))type metadata accessor for GreetingSleepWidgetRectangularView, (uint64_t)&unk_22CC67F0C);
  v135 = sub_22CC658D4();
  v86 = (id)HKSPSleepURL();
  if (v86)
  {
    v87 = v86;
    v88 = (uint64_t)v118;
    sub_22CC64FD4();

    v89 = sub_22CC64FE0();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 56))(v88, 0, 1, v89);
  }
  else
  {
    v96 = sub_22CC64FE0();
    v88 = (uint64_t)v118;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 56))(v118, 1, 1, v96);
  }
  v79 = (uint64_t)v129;
  v97 = v130;
  v80 = v126;
  v98 = v119;
  sub_22CC4A680(v88, v119, &qword_254065340, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v99 = MEMORY[0x24BDF4780];
  v100 = MEMORY[0x24BDF4760];
  sub_22CC65778();
  sub_22CC0824C(v98);
  swift_release();
  sub_22CC0DE54((uint64_t)v121, (uint64_t (*)(_QWORD))type metadata accessor for GreetingSleepWidgetRectangularView);
  v83 = v133;
  v101 = v123;
  (*(void (**)(uint64_t *, char *, uint64_t))(v133 + 32))(v123, v54, v80);
  (*(void (**)(char *, uint64_t *, uint64_t))(v83 + 16))(v132, v101, v80);
  swift_storeEnumTagMultiPayload();
  v135 = v99;
  v136 = v100;
  swift_getOpaqueTypeConformance2();
  sub_22CC65520();
  sub_22CC0DE10(v79, v97, (uint64_t (*)(_QWORD))sub_22CC1DC78);
  swift_storeEnumTagMultiPayload();
  sub_22CC1F828();
  sub_22CC65520();
  v63 = (char *)v101;
LABEL_23:
  sub_22CC0DE54(v79, (uint64_t (*)(_QWORD))sub_22CC1DC78);
  return (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v63, v80);
}

uint64_t sub_22CC497E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  id v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  id v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;

  v126 = a1;
  v112 = type metadata accessor for BedtimeSleepWidgetCircularView();
  v2 = MEMORY[0x24BDAC7A8](v112);
  v111 = (uint64_t)&v107 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v113 = (uint64_t)&v107 - v4;
  v120 = type metadata accessor for GreetingSleepWidgetCircularView();
  v5 = MEMORY[0x24BDAC7A8](v120);
  v118 = (uint64_t)&v107 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v119 = (uint64_t)&v107 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v117 = (uint64_t)&v107 - v9;
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF380];
  sub_22CC4A6D4(0, &qword_254066670, (uint64_t (*)(uint64_t))sub_22CC1DC78, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF380]);
  v122 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v125 = (uint64_t)&v107 - v12;
  sub_22CC4A6D4(0, &qword_254066660, (uint64_t (*)(uint64_t))sub_22CC1DCDC, v10);
  v127 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v128 = (char *)&v107 - v14;
  sub_22CC1DC78(0);
  v123 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v124 = (char *)&v107 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC082A8(0, &qword_254065340, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v107 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v107 - v22;
  v24 = MEMORY[0x24BDAC7A8](v21);
  v109 = (char *)&v107 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v110 = (uint64_t)&v107 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v114 = (char *)&v107 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v115 = (uint64_t)&v107 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v107 = (char *)&v107 - v33;
  MEMORY[0x24BDAC7A8](v32);
  v108 = (uint64_t)&v107 - v34;
  v35 = type metadata accessor for UpcomingSleepWidgetCircularView();
  v36 = MEMORY[0x24BDAC7A8](v35);
  v38 = (char *)&v107 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v36);
  v116 = (uint64_t)&v107 - v39;
  sub_22CC1DCDC();
  v121 = v40;
  v129 = *(_QWORD *)(v40 - 8);
  v41 = MEMORY[0x24BDAC7A8](v1);
  v43 = (char *)&v107 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = MEMORY[0x24BDAC7A8](v41);
  v46 = (char *)&v107 - v45;
  v47 = MEMORY[0x24BDAC7A8](v44);
  v48 = MEMORY[0x24BDAC7A8](v47);
  v49 = MEMORY[0x24BDAC7A8](v48);
  v51 = (char *)&v107 - v50;
  v52 = MEMORY[0x24BDAC7A8](v49);
  v53 = MEMORY[0x24BDAC7A8](v52);
  v55 = (char *)&v107 - v54;
  v56 = (uint64_t *)MEMORY[0x24BDAC7A8](v53);
  v61 = (char *)&v107 - v60;
  if ((*(_BYTE *)(v1 + 8) & 1) != 0 || (v66 = *v56, (unint64_t)*v56 > 7))
  {
LABEL_2:
    v62 = v118;
    sub_22CC0DE10((uint64_t)v56, v118, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetViewModel);
    sub_22CC0DE10(v62, v119, (uint64_t (*)(_QWORD))type metadata accessor for GreetingSleepWidgetCircularView);
    sub_22CC07B74(&qword_2540664B8, (uint64_t (*)(uint64_t))type metadata accessor for GreetingSleepWidgetCircularView, (uint64_t)&unk_22CC66ADC);
    v130 = sub_22CC658D4();
    v63 = (id)HKSPSleepURL();
    if (v63)
    {
      v64 = v63;
      sub_22CC64FD4();

      v65 = sub_22CC64FE0();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v20, 0, 1, v65);
    }
    else
    {
      v73 = sub_22CC64FE0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 56))(v20, 1, 1, v73);
    }
    sub_22CC4A680((uint64_t)v20, (uint64_t)v23, &qword_254065340, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v74 = MEMORY[0x24BDF4780];
    v75 = MEMORY[0x24BDF4760];
    sub_22CC65778();
    sub_22CC0824C((uint64_t)v23);
    swift_release();
    sub_22CC0DE54(v62, (uint64_t (*)(_QWORD))type metadata accessor for GreetingSleepWidgetCircularView);
    v76 = v129;
    v77 = v121;
    (*(void (**)(char *, char *, uint64_t))(v129 + 32))(v46, v43, v121);
    (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v128, v46, v77);
    swift_storeEnumTagMultiPayload();
    v130 = v74;
    v131 = v75;
    swift_getOpaqueTypeConformance2();
    v78 = (uint64_t)v124;
    sub_22CC65520();
    sub_22CC0DE10(v78, v125, (uint64_t (*)(_QWORD))sub_22CC1DC78);
    swift_storeEnumTagMultiPayload();
    sub_22CC1F828();
    sub_22CC65520();
    v61 = v46;
    goto LABEL_22;
  }
  if (((1 << v66) & 0xC2) != 0)
  {
    v118 = v58;
    v79 = v117;
    sub_22CC0DE10((uint64_t)v56, v117, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetViewModel);
    sub_22CC0DE10(v79, v119, (uint64_t (*)(_QWORD))type metadata accessor for GreetingSleepWidgetCircularView);
    sub_22CC07B74(&qword_2540664B8, (uint64_t (*)(uint64_t))type metadata accessor for GreetingSleepWidgetCircularView, (uint64_t)&unk_22CC66ADC);
    v130 = sub_22CC658D4();
    v80 = (id)HKSPSleepURL();
    if (v80)
    {
      v81 = v80;
      v82 = (uint64_t)v114;
      sub_22CC64FD4();

      v83 = sub_22CC64FE0();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v82, 0, 1, v83);
    }
    else
    {
      v89 = sub_22CC64FE0();
      v82 = (uint64_t)v114;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 56))(v114, 1, 1, v89);
    }
    v78 = (uint64_t)v124;
    v90 = v125;
    v77 = v121;
    v91 = v115;
    sub_22CC4A680(v82, v115, &qword_254065340, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v92 = MEMORY[0x24BDF4780];
    v93 = MEMORY[0x24BDF4760];
    sub_22CC65778();
    sub_22CC0824C(v91);
    swift_release();
    sub_22CC0DE54(v117, (uint64_t (*)(_QWORD))type metadata accessor for GreetingSleepWidgetCircularView);
    v76 = v129;
    v94 = v118;
    (*(void (**)(uint64_t, char *, uint64_t))(v129 + 32))(v118, v51, v77);
    (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v128, v94, v77);
    swift_storeEnumTagMultiPayload();
    v130 = v92;
    v131 = v93;
    swift_getOpaqueTypeConformance2();
    sub_22CC65520();
    sub_22CC0DE10(v78, v90, (uint64_t (*)(_QWORD))sub_22CC1DC78);
    swift_storeEnumTagMultiPayload();
    sub_22CC1F828();
    sub_22CC65520();
    v61 = (char *)v94;
  }
  else
  {
    if (((1 << v66) & 0xC) == 0)
    {
      if (((1 << v66) & 0x30) != 0)
      {
        v67 = v59;
        v120 = v57;
        v68 = v113;
        sub_22CC0DE10((uint64_t)v56, v113, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetViewModel);
        sub_22CC0DE10(v68, v111, (uint64_t (*)(_QWORD))type metadata accessor for BedtimeSleepWidgetCircularView);
        sub_22CC07B74(&qword_255C3D8A8, (uint64_t (*)(uint64_t))type metadata accessor for BedtimeSleepWidgetCircularView, (uint64_t)&unk_22CC688BC);
        v130 = sub_22CC658D4();
        v69 = (id)HKSPSleepURL();
        if (v69)
        {
          v70 = v69;
          v71 = (uint64_t)v109;
          sub_22CC64FD4();

          v72 = sub_22CC64FE0();
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v71, 0, 1, v72);
        }
        else
        {
          v95 = sub_22CC64FE0();
          v71 = (uint64_t)v109;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56))(v109, 1, 1, v95);
        }
        v78 = (uint64_t)v124;
        v96 = v125;
        v77 = v121;
        v97 = v110;
        sub_22CC4A680(v71, v110, &qword_254065340, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
        v98 = MEMORY[0x24BDF4780];
        v99 = MEMORY[0x24BDF4760];
        sub_22CC65778();
        sub_22CC0824C(v97);
        swift_release();
        sub_22CC0DE54(v68, (uint64_t (*)(_QWORD))type metadata accessor for BedtimeSleepWidgetCircularView);
        v76 = v129;
        v100 = (char *)v120;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v129 + 32))(v120, v67, v77);
        (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v128, v100, v77);
        swift_storeEnumTagMultiPayload();
        v130 = v98;
        v131 = v99;
        swift_getOpaqueTypeConformance2();
        sub_22CC65520();
        sub_22CC0DE10(v78, v96, (uint64_t (*)(_QWORD))sub_22CC1DC78);
        swift_storeEnumTagMultiPayload();
        sub_22CC1F828();
        sub_22CC65520();
        v61 = v100;
        goto LABEL_22;
      }
      goto LABEL_2;
    }
    v84 = v116;
    sub_22CC0DE10((uint64_t)v56, v116, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetViewModel);
    sub_22CC0DE10(v84, (uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for UpcomingSleepWidgetCircularView);
    sub_22CC07B74(qword_255C3D8B0, (uint64_t (*)(uint64_t))type metadata accessor for UpcomingSleepWidgetCircularView, (uint64_t)&unk_22CC68FFC);
    v130 = sub_22CC658D4();
    v85 = (id)HKSPSleepURL();
    if (v85)
    {
      v86 = v85;
      v87 = (uint64_t)v107;
      sub_22CC64FD4();

      v88 = sub_22CC64FE0();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v88 - 8) + 56))(v87, 0, 1, v88);
    }
    else
    {
      v101 = sub_22CC64FE0();
      v87 = (uint64_t)v107;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 56))(v107, 1, 1, v101);
    }
    v78 = (uint64_t)v124;
    v102 = v125;
    v77 = v121;
    v103 = v108;
    sub_22CC4A680(v87, v108, &qword_254065340, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v104 = MEMORY[0x24BDF4780];
    v105 = MEMORY[0x24BDF4760];
    sub_22CC65778();
    sub_22CC0824C(v103);
    swift_release();
    sub_22CC0DE54(v116, (uint64_t (*)(_QWORD))type metadata accessor for UpcomingSleepWidgetCircularView);
    v76 = v129;
    (*(void (**)(char *, char *, uint64_t))(v129 + 32))(v61, v55, v77);
    (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v128, v61, v77);
    swift_storeEnumTagMultiPayload();
    v130 = v104;
    v131 = v105;
    swift_getOpaqueTypeConformance2();
    sub_22CC65520();
    sub_22CC0DE10(v78, v102, (uint64_t (*)(_QWORD))sub_22CC1DC78);
    swift_storeEnumTagMultiPayload();
    sub_22CC1F828();
    sub_22CC65520();
  }
LABEL_22:
  sub_22CC0DE54(v78, (uint64_t (*)(_QWORD))sub_22CC1DC78);
  return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v61, v77);
}

uint64_t sub_22CC4A548()
{
  return sub_22CC653A0();
}

uint64_t sub_22CC4A568()
{
  return sub_22CC653A0();
}

uint64_t sub_22CC4A588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22CC4A5E0(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x24BDECF50], MEMORY[0x24BDEE028]);
}

uint64_t sub_22CC4A59C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22CC4A5E0(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x24BDECF50], MEMORY[0x24BDEE028]);
}

uint64_t sub_22CC4A5C0()
{
  return sub_22CC65400();
}

uint64_t sub_22CC4A5E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t (*a6)(char *))
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  a5(0);
  MEMORY[0x24BDAC7A8]();
  v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_22CC4A65C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_22CC4A5E0(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x24BDCEEA8], MEMORY[0x24BDEE3D8]);
}

uint64_t sub_22CC4A680(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v7;

  sub_22CC082A8(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

void sub_22CC4A6D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_22CC4A730()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC4A73C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SleepWidgetViewModel();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_22CC4A778()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC4A784(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SleepWidgetViewModel();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for BedtimeSleepWidgetCircularView()
{
  uint64_t result;

  result = qword_2540664A8;
  if (!qword_2540664A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22CC4A800(uint64_t a1)
{
  uint64_t result;

  result = sub_22CC07B74(&qword_255C3D8A8, (uint64_t (*)(uint64_t))type metadata accessor for BedtimeSleepWidgetCircularView, (uint64_t)&unk_22CC688BC);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22CC4A83C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22CC4A84C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  _QWORD v8[2];

  v8[0] = a1;
  v1 = sub_22CC659D0();
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_22CC65274();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC65268();
  sub_22CC65238();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (qword_254066798 != -1)
    swift_once();
  v8[1] = MEMORY[0x24BEE4AF8];
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BE49EA8];
  sub_22CC07B74(&qword_254066778, (uint64_t (*)(uint64_t))MEMORY[0x24BE49EA8], MEMORY[0x24BE49EB0]);
  sub_22CC082A8(0, &qword_2540667B0, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  sub_22CC09A8C();
  swift_bridgeObjectRetain();
  sub_22CC65D48();
  return sub_22CC659C4();
}

_QWORD *sub_22CC4AA00(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  void *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  char *v41;
  char *v42;
  unsigned int (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  int *v62;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v7 = (int *)type metadata accessor for SleepWidgetViewModel();
    v8 = v7[5];
    v9 = (char *)v4 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_22CC64F20();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    if (v13(v10, 1, v11))
    {
      sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = v7[6];
    v17 = (char *)v4 + v16;
    v18 = (char *)a2 + v16;
    if (v13((char *)a2 + v16, 1, v11))
    {
      sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v17, v18, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
    }
    *((_BYTE *)v4 + v7[7]) = *((_BYTE *)a2 + v7[7]);
    v20 = v7[8];
    v21 = (char *)v4 + v20;
    v22 = (uint64_t)a2 + v20;
    v23 = sub_22CC6504C();
    v24 = *(_QWORD *)(v23 - 8);
    v25 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
    v25(v21, v22, v23);
    v26 = v7[9];
    v27 = *(void **)((char *)a2 + v26);
    *(_QWORD *)((char *)v4 + v26) = v27;
    v28 = v7[10];
    v29 = (_QWORD *)((char *)v4 + v28);
    v30 = (uint64_t)a2 + v28;
    v31 = *(uint64_t *)((char *)a2 + v28);
    v32 = v27;
    if (v31)
    {
      v62 = v7;
      v33 = v24;
      v34 = v25;
      v35 = v6;
      v36 = *(void **)(v30 + 8);
      v37 = *(void **)(v30 + 16);
      *v29 = v31;
      v29[1] = v36;
      v29[2] = v37;
      swift_bridgeObjectRetain();
      v38 = v36;
      v6 = v35;
      v25 = v34;
      v24 = v33;
      v7 = v62;
      v39 = v37;
    }
    else
    {
      *(_OWORD *)v29 = *(_OWORD *)v30;
      v29[2] = *(_QWORD *)(v30 + 16);
    }
    v40 = v7[11];
    v41 = (char *)v4 + v40;
    v42 = (char *)a2 + v40;
    v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
    if (v43((char *)a2 + v40, 1, v23))
    {
      sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      v25(v41, (uint64_t)v42, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v41, 0, 1, v23);
    }
    v45 = v7[12];
    v46 = (char *)v4 + v45;
    v47 = (char *)a2 + v45;
    if (v43((char *)a2 + v45, 1, v23))
    {
      sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      v25(v46, (uint64_t)v47, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v46, 0, 1, v23);
    }
    v49 = v7[13];
    v50 = (char *)v4 + v49;
    v51 = (char *)a2 + v49;
    if (v43((char *)a2 + v49, 1, v23))
    {
      sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      v25(v50, (uint64_t)v51, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v50, 0, 1, v23);
    }
    v53 = *(int *)(v6 + 20);
    v54 = (_QWORD *)((char *)v4 + v53);
    v55 = (uint64_t *)((char *)a2 + v53);
    sub_22CC19614(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v56 = sub_22CC65340();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v54, v55, v56);
    }
    else
    {
      *v54 = *v55;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v57 = *(int *)(v6 + 24);
    v58 = (_QWORD *)((char *)v4 + v57);
    v59 = (uint64_t *)((char *)a2 + v57);
    sub_22CC236A8(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v60 = sub_22CC65070();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(v58, v59, v60);
    }
    else
    {
      *v58 = *v59;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_22CC4AED8(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = (int *)type metadata accessor for SleepWidgetViewModel();
  v5 = a1 + v4[5];
  v6 = sub_22CC64F20();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (!v8(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  v9 = a1 + v4[6];
  if (!v8(v9, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v9, v6);
  v10 = a1 + v4[8];
  v11 = sub_22CC6504C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v13(v10, v11);

  v14 = a1 + v4[10];
  if (*(_QWORD *)v14)
  {
    swift_bridgeObjectRelease();

  }
  v15 = a1 + v4[11];
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (!v16(v15, 1, v11))
    v13(v15, v11);
  v17 = a1 + v4[12];
  if (!v16(v17, 1, v11))
    v13(v17, v11);
  v18 = a1 + v4[13];
  if (!v16(v18, 1, v11))
    v13(v18, v11);
  v19 = a1 + *(int *)(a2 + 20);
  sub_22CC19614(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = sub_22CC65340();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
  }
  else
  {
    swift_release();
  }
  v21 = a1 + *(int *)(a2 + 24);
  sub_22CC236A8(0);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v22 = sub_22CC65070();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
}

uint64_t sub_22CC4B100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(void *, const void *, uint64_t);
  uint64_t v24;
  void *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  void *v36;
  const void *v37;
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  void *v41;
  const void *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  const void *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v57;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = (int *)type metadata accessor for SleepWidgetViewModel();
  v7 = v6[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_22CC64F20();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = v6[6];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  if (v12((const void *)(a2 + v14), 1, v10))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v15, v16, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  v57 = a3;
  *(_BYTE *)(a1 + v6[7]) = *(_BYTE *)(a2 + v6[7]);
  v18 = v6[8];
  v19 = (void *)(a1 + v18);
  v20 = (const void *)(a2 + v18);
  v21 = sub_22CC6504C();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(void (**)(void *, const void *, uint64_t))(v22 + 16);
  v23(v19, v20, v21);
  v24 = v6[9];
  v25 = *(void **)(a2 + v24);
  *(_QWORD *)(a1 + v24) = v25;
  v26 = v6[10];
  v27 = (_QWORD *)(a1 + v26);
  v28 = a2 + v26;
  v29 = *(_QWORD *)(a2 + v26);
  v30 = v25;
  if (v29)
  {
    v31 = *(void **)(v28 + 8);
    v32 = *(void **)(v28 + 16);
    *v27 = v29;
    v27[1] = v31;
    v27[2] = v32;
    swift_bridgeObjectRetain();
    v33 = v31;
    v34 = v32;
  }
  else
  {
    *(_OWORD *)v27 = *(_OWORD *)v28;
    v27[2] = *(_QWORD *)(v28 + 16);
  }
  v35 = v6[11];
  v36 = (void *)(a1 + v35);
  v37 = (const void *)(a2 + v35);
  v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
  if (v38(a2 + v35, 1, v21))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    v23(v36, v37, v21);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v36, 0, 1, v21);
  }
  v40 = v6[12];
  v41 = (void *)(a1 + v40);
  v42 = (const void *)(a2 + v40);
  if (v38(a2 + v40, 1, v21))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    v23(v41, v42, v21);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v41, 0, 1, v21);
  }
  v44 = v6[13];
  v45 = (void *)(a1 + v44);
  v46 = (const void *)(a2 + v44);
  if (v38(a2 + v44, 1, v21))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    v23(v45, v46, v21);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v45, 0, 1, v21);
  }
  v48 = *(int *)(v57 + 20);
  v49 = (_QWORD *)(a1 + v48);
  v50 = (_QWORD *)(a2 + v48);
  sub_22CC19614(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v51 = sub_22CC65340();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v49, v50, v51);
  }
  else
  {
    *v49 = *v50;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v52 = *(int *)(v57 + 24);
  v53 = (_QWORD *)(a1 + v52);
  v54 = (_QWORD *)(a2 + v52);
  sub_22CC236A8(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v55 = sub_22CC65070();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
  }
  else
  {
    *v53 = *v54;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_22CC4B594(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int *v6;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char *v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  _QWORD *v33;
  __int128 *v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  void *v42;
  void *v43;
  id v44;
  id v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  void *v49;
  char *v50;
  uint64_t (*v51)(uint64_t, uint64_t, uint64_t);
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  char *v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  char *v63;
  int v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;

  v5 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v5;
  v6 = (int *)type metadata accessor for SleepWidgetViewModel();
  v7 = v6[5];
  v8 = (void *)(a1 + v7);
  v9 = (char *)a2 + v7;
  v10 = sub_22CC64F20();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  v16 = v6[6];
  v17 = (void *)(a1 + v16);
  v18 = (char *)a2 + v16;
  v19 = v12((void *)(a1 + v16), 1, v10);
  v20 = v12(v18, 1, v10);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v17, v18, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v17, v10);
LABEL_12:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, char *, uint64_t))(v11 + 24))(v17, v18, v10);
LABEL_13:
  *(_BYTE *)(a1 + v6[7]) = *((_BYTE *)a2 + v6[7]);
  v22 = v6[8];
  v23 = a1 + v22;
  v24 = (uint64_t)a2 + v22;
  v25 = sub_22CC6504C();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 24);
  v27(v23, v24, v25);
  v28 = v6[9];
  v29 = *(void **)((char *)a2 + v28);
  v30 = *(void **)(a1 + v28);
  *(_QWORD *)(a1 + v28) = v29;
  v31 = v29;

  v32 = v6[10];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (__int128 *)((char *)a2 + v32);
  v35 = *(uint64_t *)((char *)a2 + v32);
  if (*(_QWORD *)(a1 + v32))
  {
    if (v35)
    {
      *v33 = v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v36 = (void *)v33[1];
      v37 = (void *)*((_QWORD *)v34 + 1);
      v33[1] = v37;
      v38 = v37;

      v39 = (void *)v33[2];
      v40 = (void *)*((_QWORD *)v34 + 2);
      v33[2] = v40;
      v41 = v40;

    }
    else
    {
      sub_22CC06744(a1 + v32);
      v46 = *((_QWORD *)v34 + 2);
      *(_OWORD *)v33 = *v34;
      v33[2] = v46;
    }
  }
  else if (v35)
  {
    *v33 = v35;
    v42 = (void *)*((_QWORD *)v34 + 1);
    v33[1] = v42;
    v43 = (void *)*((_QWORD *)v34 + 2);
    v33[2] = v43;
    swift_bridgeObjectRetain();
    v44 = v42;
    v45 = v43;
  }
  else
  {
    v47 = *v34;
    v33[2] = *((_QWORD *)v34 + 2);
    *(_OWORD *)v33 = v47;
  }
  v48 = v6[11];
  v49 = (void *)(a1 + v48);
  v50 = (char *)a2 + v48;
  v51 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  v52 = v51(a1 + v48, 1, v25);
  v53 = v51((uint64_t)v50, 1, v25);
  if (v52)
  {
    if (!v53)
    {
      (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v49, v50, v25);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v49, 0, 1, v25);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  if (v53)
  {
    (*(void (**)(void *, uint64_t))(v26 + 8))(v49, v25);
LABEL_27:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    goto LABEL_28;
  }
  v27((uint64_t)v49, (uint64_t)v50, v25);
LABEL_28:
  v55 = v6[12];
  v56 = (void *)(a1 + v55);
  v57 = (char *)a2 + v55;
  v58 = v51(a1 + v55, 1, v25);
  v59 = v51((uint64_t)v57, 1, v25);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v56, v57, v25);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v56, 0, 1, v25);
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  if (v59)
  {
    (*(void (**)(void *, uint64_t))(v26 + 8))(v56, v25);
LABEL_33:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_34;
  }
  v27((uint64_t)v56, (uint64_t)v57, v25);
LABEL_34:
  v61 = v6[13];
  v62 = (void *)(a1 + v61);
  v63 = (char *)a2 + v61;
  v64 = v51(a1 + v61, 1, v25);
  v65 = v51((uint64_t)v63, 1, v25);
  if (v64)
  {
    v66 = a3;
    if (!v65)
    {
      (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v62, v63, v25);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v62, 0, 1, v25);
      if ((uint64_t *)a1 == a2)
        return a1;
      goto LABEL_41;
    }
LABEL_40:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v67 - 8) + 64));
    if ((uint64_t *)a1 == a2)
      return a1;
    goto LABEL_41;
  }
  v66 = a3;
  if (v65)
  {
    (*(void (**)(void *, uint64_t))(v26 + 8))(v62, v25);
    goto LABEL_40;
  }
  v27((uint64_t)v62, (uint64_t)v63, v25);
  if ((uint64_t *)a1 == a2)
    return a1;
LABEL_41:
  v68 = *(int *)(v66 + 20);
  v69 = (_QWORD *)(a1 + v68);
  v70 = (uint64_t *)((char *)a2 + v68);
  sub_22CC0DE54(a1 + v68, (uint64_t (*)(_QWORD))sub_22CC19614);
  sub_22CC19614(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v71 = sub_22CC65340();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v71 - 8) + 16))(v69, v70, v71);
  }
  else
  {
    *v69 = *v70;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v72 = *(int *)(v66 + 24);
  v73 = (_QWORD *)(a1 + v72);
  v74 = (uint64_t *)((char *)a2 + v72);
  sub_22CC0DE54(a1 + v72, (uint64_t (*)(_QWORD))sub_22CC236A8);
  sub_22CC236A8(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v75 = sub_22CC65070();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v75 - 8) + 16))(v73, v74, v75);
  }
  else
  {
    *v73 = *v74;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_22CC4BC24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(void *, const void *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  const void *v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  void *v33;
  const void *v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  const void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  const void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = (int *)type metadata accessor for SleepWidgetViewModel();
  v7 = v6[5];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_22CC64F20();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = v6[6];
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  if (v12((const void *)(a2 + v14), 1, v10))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v15, v16, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  *(_BYTE *)(a1 + v6[7]) = *(_BYTE *)(a2 + v6[7]);
  v18 = v6[8];
  v19 = (void *)(a1 + v18);
  v20 = (const void *)(a2 + v18);
  v21 = sub_22CC6504C();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(void (**)(void *, const void *, uint64_t))(v22 + 32);
  v23(v19, v20, v21);
  *(_QWORD *)(a1 + v6[9]) = *(_QWORD *)(a2 + v6[9]);
  v24 = v6[10];
  v25 = a1 + v24;
  v26 = a2 + v24;
  *(_QWORD *)(v25 + 16) = *(_QWORD *)(v26 + 16);
  *(_OWORD *)v25 = *(_OWORD *)v26;
  v27 = v6[11];
  v28 = (void *)(a1 + v27);
  v29 = (const void *)(a2 + v27);
  v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
  if (v30(a2 + v27, 1, v21))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    v23(v28, v29, v21);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v28, 0, 1, v21);
  }
  v32 = v6[12];
  v33 = (void *)(a1 + v32);
  v34 = (const void *)(a2 + v32);
  if (v30(a2 + v32, 1, v21))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    v23(v33, v34, v21);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v33, 0, 1, v21);
  }
  v36 = v6[13];
  v37 = (void *)(a1 + v36);
  v38 = (const void *)(a2 + v36);
  if (v30(a2 + v36, 1, v21))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    v23(v37, v38, v21);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v37, 0, 1, v21);
  }
  v40 = *(int *)(a3 + 20);
  v41 = (void *)(a1 + v40);
  v42 = (const void *)(a2 + v40);
  sub_22CC19614(0);
  v44 = v43;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v45 = sub_22CC65340();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v41, v42, v45);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  v46 = *(int *)(a3 + 24);
  v47 = (void *)(a1 + v46);
  v48 = (const void *)(a2 + v46);
  sub_22CC236A8(0);
  v50 = v49;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v51 = sub_22CC65070();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v47, v48, v51);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  return a1;
}

uint64_t sub_22CC4C074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  void *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  void *v35;
  const void *v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t);
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  const void *v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  const void *v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  const void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  const void *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = (int *)type metadata accessor for SleepWidgetViewModel();
  v6 = v5[5];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_22CC64F20();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  v15 = v5[6];
  v16 = (void *)(a1 + v15);
  v17 = (void *)(a2 + v15);
  v18 = v11((void *)(a1 + v15), 1, v9);
  v19 = v11(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v16, v17, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v16, v9);
LABEL_12:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v16, v17, v9);
LABEL_13:
  *(_BYTE *)(a1 + v5[7]) = *(_BYTE *)(a2 + v5[7]);
  v21 = v5[8];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = sub_22CC6504C();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 40);
  v26(v22, v23, v24);
  v27 = v5[9];
  v28 = *(void **)(a1 + v27);
  *(_QWORD *)(a1 + v27) = *(_QWORD *)(a2 + v27);

  v29 = v5[10];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (_QWORD *)(a2 + v29);
  if (*(_QWORD *)(a1 + v29))
  {
    if (*v31)
    {
      *v30 = *v31;
      swift_bridgeObjectRelease();
      v32 = (void *)v30[1];
      v30[1] = v31[1];

      v33 = (void *)v30[2];
      v30[2] = v31[2];

      goto LABEL_18;
    }
    sub_22CC06744((uint64_t)v30);
  }
  *(_OWORD *)v30 = *(_OWORD *)v31;
  v30[2] = v31[2];
LABEL_18:
  v34 = v5[11];
  v35 = (void *)(a1 + v34);
  v36 = (const void *)(a2 + v34);
  v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  v38 = v37(a1 + v34, 1, v24);
  v39 = v37((uint64_t)v36, 1, v24);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(void *, const void *, uint64_t))(v25 + 32))(v35, v36, v24);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v35, 0, 1, v24);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v39)
  {
    (*(void (**)(void *, uint64_t))(v25 + 8))(v35, v24);
LABEL_23:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    goto LABEL_24;
  }
  v26((uint64_t)v35, (uint64_t)v36, v24);
LABEL_24:
  v41 = v5[12];
  v42 = (void *)(a1 + v41);
  v43 = (const void *)(a2 + v41);
  v44 = v37(a1 + v41, 1, v24);
  v45 = v37((uint64_t)v43, 1, v24);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(void *, const void *, uint64_t))(v25 + 32))(v42, v43, v24);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v42, 0, 1, v24);
      goto LABEL_30;
    }
    goto LABEL_29;
  }
  if (v45)
  {
    (*(void (**)(void *, uint64_t))(v25 + 8))(v42, v24);
LABEL_29:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    goto LABEL_30;
  }
  v26((uint64_t)v42, (uint64_t)v43, v24);
LABEL_30:
  v47 = v5[13];
  v48 = (void *)(a1 + v47);
  v49 = (const void *)(a2 + v47);
  v50 = v37(a1 + v47, 1, v24);
  v51 = v37((uint64_t)v49, 1, v24);
  if (v50)
  {
    v52 = a3;
    if (!v51)
    {
      (*(void (**)(void *, const void *, uint64_t))(v25 + 32))(v48, v49, v24);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v48, 0, 1, v24);
      if (a1 == a2)
        return a1;
      goto LABEL_37;
    }
LABEL_36:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    if (a1 == a2)
      return a1;
    goto LABEL_37;
  }
  v52 = a3;
  if (v51)
  {
    (*(void (**)(void *, uint64_t))(v25 + 8))(v48, v24);
    goto LABEL_36;
  }
  v26((uint64_t)v48, (uint64_t)v49, v24);
  if (a1 == a2)
    return a1;
LABEL_37:
  v54 = *(int *)(v52 + 20);
  v55 = (void *)(a1 + v54);
  v56 = (const void *)(a2 + v54);
  sub_22CC0DE54(a1 + v54, (uint64_t (*)(_QWORD))sub_22CC19614);
  sub_22CC19614(0);
  v58 = v57;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v59 = sub_22CC65340();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v55, v56, v59);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
  }
  v60 = *(int *)(v52 + 24);
  v61 = (void *)(a1 + v60);
  v62 = (const void *)(a2 + v60);
  sub_22CC0DE54(a1 + v60, (uint64_t (*)(_QWORD))sub_22CC236A8);
  sub_22CC236A8(0);
  v64 = v63;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v65 = sub_22CC65070();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v65 - 8) + 32))(v61, v62, v65);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
  }
  return a1;
}

uint64_t sub_22CC4C6AC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC4C6B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = type metadata accessor for SleepWidgetViewModel();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_22CC082A8(0, &qword_254065618, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDEB580]);
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      sub_22CC082A8(0, &qword_255C3CD60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDEB580]);
      v8 = v14;
      v12 = *(_QWORD *)(v14 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_22CC4C780()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC4C78C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v8 = type metadata accessor for SleepWidgetViewModel();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_22CC082A8(0, &qword_254065618, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDEB580]);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      sub_22CC082A8(0, &qword_255C3CD60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], MEMORY[0x24BDEB580]);
      v10 = v16;
      v14 = *(_QWORD *)(v16 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for UpcomingSleepWidgetView()
{
  uint64_t result;

  result = qword_254065470;
  if (!qword_254065470)
    return swift_getSingletonMetadata();
  return result;
}

void sub_22CC4C898()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  type metadata accessor for SleepWidgetViewModel();
  if (v0 <= 0x3F)
  {
    sub_22CC19614(319);
    if (v1 <= 0x3F)
    {
      sub_22CC236A8(319);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_22CC4C938()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22CC4C948@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t result;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;

  v23 = a1;
  sub_22CC18FD8();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC4DC88();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC4E178(0);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v7 = sub_22CC654CC();
  *((_QWORD *)v7 + 1) = 0;
  v7[16] = 0;
  sub_22CC4E24C();
  sub_22CC4CB94(v1, &v7[*(int *)(v13 + 44)]);
  v14 = *MEMORY[0x24BDECEA8];
  v15 = sub_22CC65340();
  v16 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v4, v14, v15);
  sub_22CC07B74(&qword_254065628, v16, MEMORY[0x24BDECF78]);
  result = sub_22CC65B14();
  if ((result & 1) != 0)
  {
    sub_22CC07B74(&qword_255C3D980, (uint64_t (*)(uint64_t))sub_22CC4DC88, MEMORY[0x24BDF4700]);
    sub_22CC07B74(&qword_2540657A0, (uint64_t (*)(uint64_t))sub_22CC18FD8, MEMORY[0x24BEE30C8]);
    sub_22CC657B4();
    sub_22CC0DE54((uint64_t)v4, (uint64_t (*)(_QWORD))sub_22CC18FD8);
    sub_22CC0DE54((uint64_t)v7, (uint64_t (*)(_QWORD))sub_22CC4DC88);
    KeyPath = swift_getKeyPath();
    v19 = v23;
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v23, v12, v9);
    sub_22CC4E2B8();
    v21 = (uint64_t *)(v19 + *(int *)(v20 + 36));
    *v21 = KeyPath;
    v21[1] = 0x3FE0000000000000;
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_22CC4CB94@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  char *v55;
  uint64_t v56;
  void (*v57)(void);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t result;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _BOOL8 v84;
  uint64_t KeyPath;
  int *v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  char *v91;
  void (*v92)(void);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  __int128 v122;
  uint64_t v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void (*v130)(char *, uint64_t, uint64_t);
  void (*v131)(void);
  char *v132;
  uint64_t v133;
  void (*v134)(char *, char *, uint64_t);
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  void (*v139)(char *, char *, uint64_t);
  char *v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char v146;
  char *v147;
  char v148;
  void (*v149)(char *, uint64_t);
  void (*v150)(char *, uint64_t);
  _QWORD v151[2];
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  int *v172;
  uint64_t v173;
  uint64_t v174;
  void (*v175)(void);
  char *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  char v185;
  char v186;
  _OWORD v187[8];

  v181 = a1;
  v167 = a2;
  sub_22CC4DF7C(0);
  v165 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v164 = (char *)v151 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC4DF08(0);
  v168 = v4;
  v180 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v166 = (char *)v151 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v163 = (char *)v151 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v179 = (char *)v151 - v9;
  v156 = type metadata accessor for SleepWidgetViewModel();
  v10 = MEMORY[0x24BDAC7A8](v156);
  v160 = (uint64_t)v151 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v152 = (uint64_t)v151 - v12;
  v159 = type metadata accessor for ScheduleOccurrenceSectionView(0);
  v13 = MEMORY[0x24BDAC7A8](v159);
  v161 = (char *)v151 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v155 = (char *)v151 - v15;
  sub_22CC19154();
  v158 = v16;
  v17 = MEMORY[0x24BDAC7A8](v16);
  v178 = (uint64_t)v151 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v157 = (uint64_t)v151 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v162 = (uint64_t)v151 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v153 = (uint64_t)v151 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v184 = (uint64_t)v151 - v25;
  sub_22CC18FD8();
  v151[1] = v26;
  MEMORY[0x24BDAC7A8](v26);
  v171 = (char *)v151 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_22CC65340();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)v151 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v34 = (char *)v151 - v33;
  v35 = type metadata accessor for HeaderView(0);
  MEMORY[0x24BDAC7A8](v35);
  v37 = (_QWORD *)((char *)v151 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22CC27094(0);
  v172 = v38;
  MEMORY[0x24BDAC7A8](v38);
  v40 = (char *)v151 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC27070(0);
  v170 = v41;
  MEMORY[0x24BDAC7A8](v41);
  v169 = (uint64_t)v151 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC4DDC8(0);
  v177 = v43;
  v183 = *(_QWORD *)(v43 - 8);
  v44 = MEMORY[0x24BDAC7A8](v43);
  v176 = (char *)v151 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = MEMORY[0x24BDAC7A8](v44);
  v151[0] = (char *)v151 - v47;
  MEMORY[0x24BDAC7A8](v46);
  v182 = (char *)v151 - v48;
  if (qword_254065700 != -1)
    swift_once();
  v49 = sub_22CC64F74();
  v51 = v50;
  *v37 = swift_getKeyPath();
  sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v52 = (uint64_t *)((char *)v37 + *(int *)(v35 + 20));
  *v52 = v49;
  v52[1] = v51;
  LOBYTE(v49) = sub_22CC655E0();
  v173 = v181 + *(int *)(type metadata accessor for UpcomingSleepWidgetView() + 20);
  sub_22CC20BF0((uint64_t)v34);
  v53 = *MEMORY[0x24BDECF38];
  v54 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 104);
  v54(v32, v53, v28);
  sub_22CC65334();
  v55 = v32;
  v56 = (uint64_t)v34;
  v57 = *(void (**)(void))(v29 + 8);
  v154 = v55;
  v57();
  v174 = v56;
  v175 = v57;
  ((void (*)(uint64_t, uint64_t))v57)(v56, v28);
  sub_22CC652C8();
  v59 = v58;
  v61 = v60;
  v63 = v62;
  v65 = v64;
  sub_22CC0DE10((uint64_t)v37, (uint64_t)v40, type metadata accessor for HeaderView);
  v66 = &v40[v172[9]];
  *v66 = v49;
  *((_QWORD *)v66 + 1) = v59;
  *((_QWORD *)v66 + 2) = v61;
  *((_QWORD *)v66 + 3) = v63;
  *((_QWORD *)v66 + 4) = v65;
  v66[40] = 0;
  sub_22CC0DE54((uint64_t)v37, type metadata accessor for HeaderView);
  v67 = sub_22CC655D4();
  sub_22CC652C8();
  v69 = v68;
  v71 = v70;
  v73 = v72;
  v75 = v74;
  v76 = v169;
  sub_22CC0DE10((uint64_t)v40, v169, (uint64_t (*)(_QWORD))sub_22CC27094);
  v77 = v76 + *(int *)(v170 + 36);
  *(_BYTE *)v77 = v67;
  *(_QWORD *)(v77 + 8) = v69;
  *(_QWORD *)(v77 + 16) = v71;
  *(_QWORD *)(v77 + 24) = v73;
  *(_QWORD *)(v77 + 32) = v75;
  *(_BYTE *)(v77 + 40) = 0;
  sub_22CC0DE54((uint64_t)v40, (uint64_t (*)(_QWORD))sub_22CC27094);
  v78 = (uint64_t)v171;
  v172 = (int *)v54;
  v54(v171, v53, v28);
  sub_22CC07B74(&qword_254065628, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDECF78]);
  result = sub_22CC65B14();
  if ((result & 1) != 0)
  {
    v80 = v76;
    sub_22CC4DE9C(&qword_254065E38, (uint64_t (*)(uint64_t))sub_22CC27070, sub_22CC27180);
    sub_22CC07B74(&qword_2540657A0, (uint64_t (*)(uint64_t))sub_22CC18FD8, MEMORY[0x24BEE30C8]);
    v81 = v151[0];
    sub_22CC657B4();
    sub_22CC0DE54(v78, (uint64_t (*)(_QWORD))sub_22CC18FD8);
    sub_22CC0DE54(v80, (uint64_t (*)(_QWORD))sub_22CC27070);
    (*(void (**)(char *, uint64_t, uint64_t))(v183 + 32))(v182, v81, v177);
    v82 = v181;
    v83 = v152;
    sub_22CC0DE10(v181, v152, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetViewModel);
    v84 = sub_22CC4DA1C();
    KeyPath = swift_getKeyPath();
    v86 = (int *)v159;
    v87 = (uint64_t)v155;
    *(_QWORD *)&v155[*(int *)(v159 + 28)] = KeyPath;
    sub_22CC19614(0);
    v169 = v88;
    swift_storeEnumTagMultiPayload();
    sub_22CC0DDCC(v83, v87, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetViewModel);
    *(_BYTE *)(v87 + v86[5]) = 3;
    *(_QWORD *)(v87 + v86[6]) = v84;
    v89 = sub_22CC655E0();
    v90 = v174;
    sub_22CC20BF0(v174);
    LODWORD(v170) = *MEMORY[0x24BDECEA0];
    v91 = v154;
    ((void (*)(char *))v172)(v154);
    v171 = (char *)sub_22CC07B74(&qword_254065620, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDECF70]);
    sub_22CC65B08();
    v92 = v175;
    ((void (*)(char *, uint64_t))v175)(v91, v28);
    ((void (*)(uint64_t, uint64_t))v92)(v90, v28);
    sub_22CC652C8();
    v94 = v93;
    v96 = v95;
    v98 = v97;
    v100 = v99;
    v101 = v153;
    sub_22CC0DE10(v87, v153, type metadata accessor for ScheduleOccurrenceSectionView);
    v102 = v158;
    v103 = v101 + *(int *)(v158 + 36);
    *(_BYTE *)v103 = v89;
    *(_QWORD *)(v103 + 8) = v94;
    *(_QWORD *)(v103 + 16) = v96;
    *(_QWORD *)(v103 + 24) = v98;
    *(_QWORD *)(v103 + 32) = v100;
    *(_BYTE *)(v103 + 40) = 0;
    sub_22CC0DE54(v87, type metadata accessor for ScheduleOccurrenceSectionView);
    sub_22CC0DDCC(v101, v184, (uint64_t (*)(_QWORD))sub_22CC19154);
    v104 = sub_22CC65910();
    sub_22CC5FC80(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v187, 0.0, 1, 7.0, 0, v104, v105, 0, 0);
    v106 = v160;
    sub_22CC0DE10(v82, v160, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetViewModel);
    LOBYTE(v87) = *(_BYTE *)(v82 + *(int *)(v156 + 28));
    v107 = sub_22CC4DA1C();
    v108 = swift_getKeyPath();
    v109 = (uint64_t)v161;
    *(_QWORD *)&v161[v86[7]] = v108;
    swift_storeEnumTagMultiPayload();
    sub_22CC0DDCC(v106, v109, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetViewModel);
    *(_BYTE *)(v109 + v86[5]) = v87;
    *(_QWORD *)(v109 + v86[6]) = v107;
    LOBYTE(v107) = sub_22CC655E0();
    sub_22CC652C8();
    v111 = v110;
    v113 = v112;
    v115 = v114;
    v117 = v116;
    v118 = v157;
    sub_22CC0DE10(v109, v157, type metadata accessor for ScheduleOccurrenceSectionView);
    v119 = v118 + *(int *)(v102 + 36);
    *(_BYTE *)v119 = v107;
    *(_QWORD *)(v119 + 8) = v111;
    *(_QWORD *)(v119 + 16) = v113;
    *(_QWORD *)(v119 + 24) = v115;
    *(_QWORD *)(v119 + 32) = v117;
    *(_BYTE *)(v119 + 40) = 0;
    sub_22CC0DE54(v109, type metadata accessor for ScheduleOccurrenceSectionView);
    v120 = v162;
    sub_22CC0DDCC(v118, v162, (uint64_t (*)(_QWORD))sub_22CC19154);
    v121 = v178;
    sub_22CC0DE10(v120, v178, (uint64_t (*)(_QWORD))sub_22CC19154);
    v122 = v187[5];
    v123 = (uint64_t)v164;
    *((_OWORD *)v164 + 4) = v187[4];
    *(_OWORD *)(v123 + 80) = v122;
    v124 = v187[7];
    *(_OWORD *)(v123 + 96) = v187[6];
    *(_OWORD *)(v123 + 112) = v124;
    v125 = v187[1];
    *(_OWORD *)v123 = v187[0];
    *(_OWORD *)(v123 + 16) = v125;
    v126 = v187[3];
    *(_OWORD *)(v123 + 32) = v187[2];
    *(_OWORD *)(v123 + 48) = v126;
    *(_QWORD *)(v123 + 128) = 0x3FF0000000000000;
    sub_22CC4DFB4();
    sub_22CC0DE10(v121, v123 + *(int *)(v127 + 48), (uint64_t (*)(_QWORD))sub_22CC19154);
    sub_22CC0DE54(v120, (uint64_t (*)(_QWORD))sub_22CC19154);
    sub_22CC0DE54(v121, (uint64_t (*)(_QWORD))sub_22CC19154);
    v128 = v174;
    sub_22CC20BF0(v174);
    v129 = v170;
    v130 = (void (*)(char *, uint64_t, uint64_t))v172;
    ((void (*)(char *, _QWORD, uint64_t))v172)(v91, v170, v28);
    sub_22CC65B08();
    v131 = v175;
    ((void (*)(char *, uint64_t))v175)(v91, v28);
    ((void (*)(uint64_t, uint64_t))v131)(v128, v28);
    sub_22CC4E100();
    v132 = v163;
    sub_22CC65760();
    sub_22CC0DE54(v123, (uint64_t (*)(_QWORD))sub_22CC4DF7C);
    v133 = v168;
    (*(void (**)(char *, char *, uint64_t))(v180 + 32))(v179, v132, v168);
    sub_22CC20BF0(v128);
    v130(v91, v129, v28);
    LODWORD(v181) = sub_22CC65B08();
    ((void (*)(char *, uint64_t))v131)(v91, v28);
    ((void (*)(uint64_t, uint64_t))v131)(v128, v28);
    v134 = *(void (**)(char *, char *, uint64_t))(v183 + 16);
    v135 = v176;
    v136 = v177;
    v134(v176, v182, v177);
    v186 = 0;
    v137 = v178;
    sub_22CC0DE10(v184, v178, (uint64_t (*)(_QWORD))sub_22CC19154);
    v138 = v180;
    v139 = *(void (**)(char *, char *, uint64_t))(v180 + 16);
    v140 = v166;
    v141 = v179;
    v139(v166, v179, v133);
    v185 = v181 & 1;
    v142 = v167;
    v134(v167, v135, v136);
    sub_22CC4DD1C();
    v144 = v143;
    v145 = &v142[*(int *)(v143 + 48)];
    v146 = v186;
    *(_QWORD *)v145 = 0;
    v145[8] = v146;
    sub_22CC0DE10(v137, (uint64_t)&v142[*(int *)(v143 + 64)], (uint64_t (*)(_QWORD))sub_22CC19154);
    v139(&v142[*(int *)(v144 + 80)], v140, v133);
    v147 = &v142[*(int *)(v144 + 96)];
    v148 = v185;
    *(_QWORD *)v147 = 0;
    v147[8] = 0;
    v147[9] = v148;
    v149 = *(void (**)(char *, uint64_t))(v138 + 8);
    v149(v141, v133);
    sub_22CC0DE54(v184, (uint64_t (*)(_QWORD))sub_22CC19154);
    v150 = *(void (**)(char *, uint64_t))(v183 + 8);
    v150(v182, v136);
    v149(v140, v133);
    sub_22CC0DE54(v137, (uint64_t (*)(_QWORD))sub_22CC19154);
    return ((uint64_t (*)(char *, uint64_t))v150)(v176, v136);
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_22CC4DA1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, _QWORD, uint64_t);
  char v13;
  void (*v14)(char *, uint64_t);
  char v15;
  char v16;
  char v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = sub_22CC65070();
  v21 = *(_QWORD *)(v1 - 8);
  v22 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_22CC65340();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
  v6 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v19 - v10;
  type metadata accessor for UpcomingSleepWidgetView();
  v20 = v0;
  sub_22CC20BF0((uint64_t)v11);
  v12 = *(void (**)(char *, _QWORD, uint64_t))(v6 + 104);
  v12(v9, *MEMORY[0x24BDECEA0], v4);
  sub_22CC07B74(&qword_254065620, v5, MEMORY[0x24BDECF70]);
  v13 = sub_22CC65B08();
  v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, v4);
  v14(v11, v4);
  if ((v13 & 1) == 0)
  {
    sub_22CC20C24((uint64_t)v3);
    v16 = sub_22CC65064();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v3, v22);
    if ((v16 & 1) != 0)
      return 0;
    sub_22CC20BF0((uint64_t)v11);
    v12(v9, *MEMORY[0x24BDECF00], v4);
    v17 = sub_22CC65B08();
    v14(v9, v4);
    v14(v11, v4);
    return (v17 & 1) != 0;
  }
  sub_22CC20BF0((uint64_t)v11);
  v12(v9, *MEMORY[0x24BDECF18], v4);
  v15 = sub_22CC65B08();
  v14(v9, v4);
  v14(v11, v4);
  return (v15 & 1) == 0;
}

void sub_22CC4DC88()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3D908)
  {
    sub_22CC4DD00(255);
    sub_22CC07B74(&qword_255C3D970, (uint64_t (*)(uint64_t))sub_22CC4DD00, MEMORY[0x24BDF5428]);
    v0 = sub_22CC658BC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3D908);
  }
}

void sub_22CC4DD00(uint64_t a1)
{
  sub_22CC082A8(a1, &qword_255C3D910, (uint64_t (*)(uint64_t))sub_22CC4DD1C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_22CC4DD1C()
{
  uint64_t v0;
  unint64_t TupleTypeMetadata;
  uint64_t v2;

  if (!qword_255C3D918)
  {
    sub_22CC4DDC8(255);
    v0 = MEMORY[0x24BDF4638];
    sub_22CC19154();
    sub_22CC4DF08(255);
    sub_22CC08D64(255, (unint64_t *)&qword_255C3CD88, v0, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1C68]);
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v2)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_255C3D918);
  }
}

void sub_22CC4DDC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  if (!qword_255C3D920)
  {
    sub_22CC27070(255);
    v3 = v2;
    sub_22CC18FD8();
    v7[0] = v3;
    v7[1] = v4;
    v7[2] = sub_22CC4DE9C(&qword_254065E38, (uint64_t (*)(uint64_t))sub_22CC27070, sub_22CC27180);
    v7[3] = sub_22CC07B74(&qword_2540657A0, (uint64_t (*)(uint64_t))sub_22CC18FD8, MEMORY[0x24BEE30C8]);
    v5 = MEMORY[0x22E3063BC](a1, v7, MEMORY[0x24BDF2800], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_255C3D920);
  }
}

uint64_t sub_22CC4DE9C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    v7[0] = a3();
    v7[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_22CC4DF08(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_255C3D928)
  {
    sub_22CC4DF7C(255);
    v5[0] = v2;
    v5[1] = sub_22CC4E100();
    v3 = MEMORY[0x22E3063BC](a1, v5, MEMORY[0x24BEAA198], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_255C3D928);
  }
}

void sub_22CC4DF7C(uint64_t a1)
{
  sub_22CC082A8(a1, &qword_255C3D930, (uint64_t (*)(uint64_t))sub_22CC4DF98, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF3F28]);
}

void sub_22CC4DF98(uint64_t a1)
{
  sub_22CC082A8(a1, &qword_255C3D938, (uint64_t (*)(uint64_t))sub_22CC4DFB4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_22CC4DFB4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_255C3D940)
  {
    sub_22CC4E020();
    sub_22CC19154();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_255C3D940);
  }
}

void sub_22CC4E020()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3D948)
  {
    sub_22CC4E0A4();
    sub_22CC270B8(255, &qword_255C3D958, MEMORY[0x24BDEFD08], MEMORY[0x24BDEFD00], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEFB28]);
    v0 = sub_22CC6534C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3D948);
  }
}

void sub_22CC4E0A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3D950)
  {
    v0 = sub_22CC6534C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3D950);
  }
}

unint64_t sub_22CC4E100()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_255C3D960;
  if (!qword_255C3D960)
  {
    sub_22CC4DF7C(255);
    v2 = v1;
    v3 = sub_22CC07B74(&qword_255C3D968, (uint64_t (*)(uint64_t))sub_22CC4DF98, MEMORY[0x24BDF5428]);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDF3F50], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_255C3D960);
  }
  return result;
}

void sub_22CC4E178(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  if (!qword_255C3D978)
  {
    sub_22CC4DC88();
    v3 = v2;
    sub_22CC18FD8();
    v7[0] = v3;
    v7[1] = v4;
    v7[2] = sub_22CC07B74(&qword_255C3D980, (uint64_t (*)(uint64_t))sub_22CC4DC88, MEMORY[0x24BDF4700]);
    v7[3] = sub_22CC07B74(&qword_2540657A0, (uint64_t (*)(uint64_t))sub_22CC18FD8, MEMORY[0x24BEE30C8]);
    v5 = MEMORY[0x22E3063BC](a1, v7, MEMORY[0x24BDF2800], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_255C3D978);
  }
}

void sub_22CC4E24C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3D988)
  {
    sub_22CC4DD00(255);
    v0 = sub_22CC65310();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3D988);
  }
}

void sub_22CC4E2B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3D990)
  {
    sub_22CC4E178(255);
    sub_22CC08D64(255, (unint64_t *)&qword_254065688, MEMORY[0x24BEE50B0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF1008]);
    v0 = sub_22CC6534C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3D990);
  }
}

unint64_t sub_22CC4E348()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[6];

  result = qword_255C3D998[0];
  if (!qword_255C3D998[0])
  {
    sub_22CC4E2B8();
    v2 = v1;
    sub_22CC4DC88();
    v4 = v3;
    sub_22CC18FD8();
    v6[2] = v4;
    v6[3] = v5;
    v6[4] = sub_22CC07B74(&qword_255C3D980, (uint64_t (*)(uint64_t))sub_22CC4DC88, MEMORY[0x24BDF4700]);
    v6[5] = sub_22CC07B74(&qword_2540657A0, (uint64_t (*)(uint64_t))sub_22CC18FD8, MEMORY[0x24BEE30C8]);
    v6[0] = swift_getOpaqueTypeConformance2();
    v6[1] = sub_22CC28538();
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDED308], v2, v6);
    atomic_store(result, qword_255C3D998);
  }
  return result;
}

ValueMetadata *type metadata accessor for SleepStageEmptyView()
{
  return &type metadata for SleepStageEmptyView;
}

uint64_t sub_22CC4E444()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22CC4E454()
{
  return sub_22CC65280();
}

unint64_t sub_22CC4E460()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254065AB8;
  if (!qword_254065AB8)
  {
    v1 = sub_22CC6528C();
    result = MEMORY[0x22E3063F8](MEMORY[0x24BEAA0C8], v1);
    atomic_store(result, (unint64_t *)&qword_254065AB8);
  }
  return result;
}

uint64_t sub_22CC4E4A8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC4E4B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SleepWidgetViewModel();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_22CC4E4F0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC4E4FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SleepWidgetViewModel();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for GreetingSleepWidgetView()
{
  uint64_t result;

  result = qword_254065400;
  if (!qword_254065400)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22CC4E578()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22CC4E588@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  char *v15;
  uint64_t *v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;

  v4 = sub_22CC6504C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for SleepWidgetChartView();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SleepWidgetViewModel() + 40));
  if (*v11)
  {
    v20 = *v11;
    v21 = *(_OWORD *)(v11 + 1);
    sub_22CC2BCBC(&v22);
    v12 = v22;
  }
  else
  {
    v12 = 0;
    v22 = 0;
  }
  v13 = (_QWORD *)((char *)v10 + v8[7]);
  *v13 = swift_getKeyPath();
  v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_22CC082A8(0, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v15 = (char *)v10 + v8[8];
  *(_QWORD *)v15 = swift_getKeyPath();
  v15[8] = 0;
  v16 = (_QWORD *)((char *)v10 + v8[9]);
  *v16 = swift_getKeyPath();
  sub_22CC082A8(0, &qword_255C3CF20, (uint64_t (*)(uint64_t))MEMORY[0x24BDF17A8], v14);
  swift_storeEnumTagMultiPayload();
  v17 = (char *)v10 + v8[10];
  *(_QWORD *)v17 = swift_getKeyPath();
  v17[8] = 0;
  *v10 = v12;
  v10[1] = 0;
  sub_22CC65040();
  v18 = sub_22CC647C4();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v10[2] = v18;
  return sub_22CC0DDCC((uint64_t)v10, a2, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetChartView);
}

uint64_t sub_22CC4E788@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *boxed_opaque_existential_1;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  _UNKNOWN **v13;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v12 = type metadata accessor for SleepWidgetViewModel();
  v13 = &protocol witness table for SleepWidgetViewModel;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v11);
  sub_22CC0DE10(v2, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetViewModel);
  sub_22CC0DE10(v2, (uint64_t)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for GreetingSleepWidgetView);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  sub_22CC0DDCC((uint64_t)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, (uint64_t (*)(_QWORD))type metadata accessor for GreetingSleepWidgetView);
  *(_QWORD *)(a2 + 56) = swift_getKeyPath();
  *(_BYTE *)(a2 + 64) = 0;
  result = sub_22CC4EAC0(&v11, a2);
  *(_QWORD *)(a2 + 40) = sub_22CC4EA80;
  *(_QWORD *)(a2 + 48) = v8;
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_22CC4E8D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for GreetingSleepWidgetView() - 8) + 80);
  v2 = v0 + ((v1 + 16) & ~v1);
  v3 = (int *)type metadata accessor for SleepWidgetViewModel();
  v4 = v2 + v3[5];
  v5 = sub_22CC64F20();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = v2 + v3[6];
  if (!v7(v8, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  v9 = v2 + v3[8];
  v10 = sub_22CC6504C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v12(v9, v10);

  v13 = v2 + v3[10];
  if (*(_QWORD *)v13)
  {
    swift_bridgeObjectRelease();

  }
  v14 = v2 + v3[11];
  v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (!v15(v14, 1, v10))
    v12(v14, v10);
  v16 = v2 + v3[12];
  if (!v15(v16, 1, v10))
    v12(v16, v10);
  v17 = v2 + v3[13];
  if (!v15(v17, 1, v10))
    v12(v17, v10);
  return swift_deallocObject();
}

uint64_t sub_22CC4EA80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for GreetingSleepWidgetView() - 8) + 80);
  return sub_22CC4E588(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_22CC4EAC0(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_22CC4EAEC()
{
  return sub_22CC07B74(&qword_254065E00, (uint64_t (*)(uint64_t))sub_22CC4EB18, (uint64_t)&unk_22CC673C0);
}

void sub_22CC4EB18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_254065E08)
  {
    v2 = type metadata accessor for SleepWidgetChartView();
    v3 = sub_22CC07B74(&qword_254065E10, (uint64_t (*)(uint64_t))type metadata accessor for SleepWidgetChartView, (uint64_t)&unk_22CC69288);
    v5 = type metadata accessor for SleepWidgetResultsView(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_254065E08);
  }
}

uint64_t Calendar.midnight(after:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;

  v2 = sub_22CC65100();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC2D3A4();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_22CC6504C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDCF220], v2);
  sub_22CC650DC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_22CC3ED60((uint64_t)v8);
    v13 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    sub_22CC65094();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v13 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, v13, 1, v9);
}

uint64_t *sub_22CC4ED30(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  void *v16;
  void *v17;
  id v18;
  id v19;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_22CC082A8(0, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_22CC65A3C();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = *(int *)(a3 + 20);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_22CC65A18();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v13 = *(int *)(a3 + 24);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    if (*(_QWORD *)v15)
    {
      v16 = (void *)*((_QWORD *)v15 + 1);
      v17 = (void *)*((_QWORD *)v15 + 2);
      *(_QWORD *)v14 = *(_QWORD *)v15;
      *((_QWORD *)v14 + 1) = v16;
      *((_QWORD *)v14 + 2) = v17;
      swift_bridgeObjectRetain();
      v18 = v16;
      v19 = v17;
    }
    else
    {
      *(_OWORD *)v14 = *(_OWORD *)v15;
      *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
    }
    v14[24] = v15[24];
  }
  return a1;
}

void sub_22CC4EEF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_22CC082A8(0, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_22CC65A3C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  v5 = a1 + *(int *)(a2 + 20);
  sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_22CC65A18();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  v7 = a1 + *(int *)(a2 + 24);
  if (*(_QWORD *)v7)
  {
    swift_bridgeObjectRelease();

  }
}

_QWORD *sub_22CC4F008(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  void *v14;
  void *v15;
  id v16;
  id v17;

  sub_22CC082A8(0, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_22CC65A3C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_22CC65A18();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v11 = *(int *)(a3 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  if (*(_QWORD *)v13)
  {
    v14 = (void *)*((_QWORD *)v13 + 1);
    v15 = (void *)*((_QWORD *)v13 + 2);
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *((_QWORD *)v12 + 1) = v14;
    *((_QWORD *)v12 + 2) = v15;
    swift_bridgeObjectRetain();
    v16 = v14;
    v17 = v15;
  }
  else
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
    *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
  }
  v12[24] = v13[24];
  return a1;
}

_QWORD *sub_22CC4F19C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  __int128 v28;

  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10];
    sub_22CC10DF8((uint64_t)a1, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10]);
    sub_22CC082A8(0, &qword_2540658A0, v6, MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_22CC65A3C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v8 = *(int *)(a3 + 20);
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0];
    sub_22CC10DF8((uint64_t)a1 + v8, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0]);
    sub_22CC082A8(0, &qword_2540665B0, v11, MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_22CC65A18();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v9, v10, v12);
    }
    else
    {
      *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v13 = *(int *)(a3 + 24);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = *(_QWORD *)((char *)a2 + v13);
  if (*(_QWORD *)((char *)a1 + v13))
  {
    if (v16)
    {
      *(_QWORD *)v14 = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v17 = (void *)*((_QWORD *)v14 + 1);
      v18 = (void *)*((_QWORD *)v15 + 1);
      *((_QWORD *)v14 + 1) = v18;
      v19 = v18;

      v20 = (void *)*((_QWORD *)v14 + 2);
      v21 = (void *)*((_QWORD *)v15 + 2);
      *((_QWORD *)v14 + 2) = v21;
      v22 = v21;

    }
    else
    {
      sub_22CC06744((uint64_t)a1 + v13);
      v27 = *((_QWORD *)v15 + 2);
      *(_OWORD *)v14 = *(_OWORD *)v15;
      *((_QWORD *)v14 + 2) = v27;
    }
  }
  else if (v16)
  {
    *(_QWORD *)v14 = v16;
    v23 = (void *)*((_QWORD *)v15 + 1);
    *((_QWORD *)v14 + 1) = v23;
    v24 = (void *)*((_QWORD *)v15 + 2);
    *((_QWORD *)v14 + 2) = v24;
    swift_bridgeObjectRetain();
    v25 = v23;
    v26 = v24;
  }
  else
  {
    v28 = *(_OWORD *)v15;
    *((_QWORD *)v14 + 2) = *((_QWORD *)v15 + 2);
    *(_OWORD *)v14 = v28;
  }
  v14[24] = v15[24];
  return a1;
}

char *sub_22CC4F3DC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;

  sub_22CC082A8(0, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
  v7 = v6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_22CC65A3C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
  v13 = v12;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = sub_22CC65A18();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v10, v11, v14);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  v15 = *(int *)(a3 + 24);
  v16 = &a1[v15];
  v17 = &a2[v15];
  *(_OWORD *)v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 9) = *(_OWORD *)(v17 + 9);
  return a1;
}

char *sub_22CC4F53C(char *a1, char *a2, uint64_t a3)
{
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;
  void *v21;

  if (a1 != a2)
  {
    v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10];
    sub_22CC10DF8((uint64_t)a1, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10]);
    sub_22CC082A8(0, &qword_2540658A0, v6, MEMORY[0x24BDEB560]);
    v8 = v7;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_22CC65A3C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    v10 = *(int *)(a3 + 20);
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0];
    sub_22CC10DF8((uint64_t)&a1[v10], &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0]);
    sub_22CC082A8(0, &qword_2540665B0, v13, MEMORY[0x24BDEB560]);
    v15 = v14;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v16 = sub_22CC65A18();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v11, v12, v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
  }
  v17 = *(int *)(a3 + 24);
  v18 = (uint64_t)&a1[v17];
  v19 = &a2[v17];
  if (!*(_QWORD *)&a1[v17])
    goto LABEL_12;
  if (!*(_QWORD *)v19)
  {
    sub_22CC06744(v18);
LABEL_12:
    *(_OWORD *)v18 = *(_OWORD *)v19;
    *(_QWORD *)(v18 + 16) = *((_QWORD *)v19 + 2);
    goto LABEL_13;
  }
  *(_QWORD *)v18 = *(_QWORD *)v19;
  swift_bridgeObjectRelease();
  v20 = *(void **)(v18 + 8);
  *(_QWORD *)(v18 + 8) = *((_QWORD *)v19 + 1);

  v21 = *(void **)(v18 + 16);
  *(_QWORD *)(v18 + 16) = *((_QWORD *)v19 + 2);

LABEL_13:
  *(_BYTE *)(v18 + 24) = v19[24];
  return a1;
}

uint64_t sub_22CC4F728()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC4F734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;
  int v15;

  sub_22CC082A8(0, &qword_255C3CAB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB580]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  sub_22CC082A8(0, qword_255C3CAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB580]);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  v15 = v14 - 1;
  if (v15 < 0)
    v15 = -1;
  return (v15 + 1);
}

uint64_t sub_22CC4F818()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_22CC4F824(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_22CC082A8(0, &qword_255C3CAB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB580]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
LABEL_5:
    v11(v12, a2, a2, v10);
    return;
  }
  sub_22CC082A8(0, qword_255C3CAB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB580]);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = a2;
}

uint64_t type metadata accessor for SleepStageResultsView(uint64_t a1)
{
  return sub_22CC0D950(a1, (uint64_t *)&unk_2540664E8);
}

void sub_22CC4F90C()
{
  unint64_t v0;
  unint64_t v1;

  sub_22CC082A8(319, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
  {
    sub_22CC082A8(319, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_22CC4F9C8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22CC4F9D8(char *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t);
  char v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;

  v30 = a1;
  sub_22CC518B0();
  v5 = v4;
  v6 = MEMORY[0x24BDAC7A8](v4);
  v28 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - v8;
  v10 = sub_22CC651B4();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BEA9B98];
  v12 = *(_QWORD *)(v10 - 8);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v25 - v16;
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v27 = v2;
  v18(v15, v2, v10);
  sub_22CC07B74(&qword_2540664A0, v11, MEMORY[0x24BEA9BA8]);
  sub_22CC65D24();
  sub_22CC07B74(&qword_254066498, (uint64_t (*)(uint64_t))MEMORY[0x24BEA9B98], MEMORY[0x24BEA9BA0]);
  v26 = a2;
  v19 = sub_22CC65B14() ^ 1;
  v29 = v5;
  v20 = &v9[*(int *)(v5 + 48)];
  *v9 = v19 & 1;
  if ((v19 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v10);
    v22 = v26;
    v18(v20, v26, v10);
    v18(v15, v22, v10);
    sub_22CC65D30();
    v21 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  }
  else
  {
    v21 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v21(v20, v17, v10);
  }
  v23 = &v28[*(int *)(v29 + 48)];
  v21(v23, v20, v10);
  v21(v30, v23, v10);
  return v19 & 1;
}

void sub_22CC4FC08(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  _QWORD v41[16];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v55 = a1;
  v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF380];
  sub_22CC51528(0, &qword_254065E68, (uint64_t (*)(uint64_t))type metadata accessor for SleepStageBarView, (uint64_t (*)(uint64_t, uint64_t, ValueMetadata *))MEMORY[0x24BDEF380]);
  v41[0] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v41[1] = (char *)v41 - v4;
  sub_22CC5150C(0);
  v54 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v41[2] = (char *)v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC210F4(0, &qword_255C3D9C8, (uint64_t (*)(uint64_t))sub_22CC51588, v7, v2);
  v51 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v53 = (char *)v41 - v9;
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x24BEA9BB0];
  sub_22CC210F4(0, &qword_255C3D9E0, (uint64_t (*)(uint64_t))sub_22CC515AC, (uint64_t (*)(uint64_t))MEMORY[0x24BEA9BB0], v2);
  v47 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v48 = (char *)v41 - v12;
  sub_22CC51588(0);
  v52 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v49 = (char *)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_22CC65070();
  v41[10] = *(_QWORD *)(v15 - 8);
  v41[11] = v15;
  MEMORY[0x24BDAC7A8](v15);
  v41[9] = (char *)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB580];
  sub_22CC082A8(0, &qword_255C3CAB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB580]);
  MEMORY[0x24BDAC7A8](v18);
  v41[6] = (char *)v41 - v19;
  sub_22CC082A8(0, &qword_254065618, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], v17);
  MEMORY[0x24BDAC7A8](v20);
  v41[5] = (char *)v41 - v21;
  v22 = type metadata accessor for SleepStageBarViewModel(0);
  MEMORY[0x24BDAC7A8](v22);
  v41[7] = (char *)v41 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for SleepStageBarView();
  v24 = MEMORY[0x24BDAC7A8](v42);
  v41[8] = (char *)v41 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v41[12] = (char *)v41 - v26;
  sub_22CC51528(0, &qword_255C3D9E8, (uint64_t (*)(uint64_t))sub_22CC515C8, (uint64_t (*)(uint64_t, uint64_t, ValueMetadata *))v2);
  v43 = v27;
  MEMORY[0x24BDAC7A8](v27);
  v46 = (char *)v41 - v28;
  sub_22CC210F4(0, &qword_254065E60, v10, (uint64_t (*)(uint64_t))type metadata accessor for SleepStageBarView, v2);
  v41[13] = v29;
  MEMORY[0x24BDAC7A8](v29);
  v41[14] = (char *)v41 - v30;
  sub_22CC515C8(0);
  v44 = v31;
  MEMORY[0x24BDAC7A8](v31);
  v41[15] = (char *)v41 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_22CC65A18();
  MEMORY[0x24BDAC7A8](v33);
  v34 = sub_22CC65A3C();
  MEMORY[0x24BDAC7A8](v34);
  v35 = sub_22CC651B4();
  MEMORY[0x24BDAC7A8](v35);
  v36 = sub_22CC6513C();
  MEMORY[0x24BDAC7A8](v36);
  v56 = sub_22CC651C0();
  v41[4] = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v41[3] = (char *)v41 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC515AC(0);
  v50 = v38;
  MEMORY[0x24BDAC7A8](v38);
  v45 = (char *)v41 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = (char *)sub_22CC50190
      + 4
      * word_22CC68B90[*(unsigned __int8 *)(v1
                                          + *(int *)(type metadata accessor for SleepStageResultsView(0) + 24)
                                          + 24)];
  __asm { BR              X11 }
}

uint64_t sub_22CC50190()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_22CC50C68(v0);
  sub_22CC207A8(v5);
  sub_22CC207D8(v7);
  sub_22CC50D54(v7, v3);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v7, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v5, v4);
  sub_22CC651E4();
  swift_allocObject();
  sub_22CC651D8();
  v9 = *(_QWORD *)(v8 - 312);
  sub_22CC65148();
  v10 = *(_QWORD *)(v8 - 304);
  v11 = *(_QWORD *)(v8 - 96);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v10 + 16))(*(_QWORD *)(v8 - 224), v9, v11);
  swift_storeEnumTagMultiPayload();
  sub_22CC07B74(&qword_254065AB0, (uint64_t (*)(uint64_t))MEMORY[0x24BEA9BB0], MEMORY[0x24BEA9B40]);
  sub_22CC07B74(&qword_254065AC0, (uint64_t (*)(uint64_t))type metadata accessor for SleepStageBarView, (uint64_t)&unk_22CC66E50);
  v12 = *(_QWORD *)(v8 - 216);
  sub_22CC65520();
  sub_22CC0DE10(v12, *(_QWORD *)(v8 - 176), (uint64_t (*)(_QWORD))sub_22CC515C8);
  swift_storeEnumTagMultiPayload();
  sub_22CC516E4();
  sub_22CC51600();
  v13 = *(_QWORD *)(v8 - 184);
  sub_22CC65520();
  sub_22CC0DE54(v12, (uint64_t (*)(_QWORD))sub_22CC515C8);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  v14 = *(_QWORD *)(v8 - 120);
  v15 = *(_QWORD *)(v8 - 152);
  sub_22CC0DE10(v13, *(_QWORD *)(v8 - 160), (uint64_t (*)(_QWORD))sub_22CC515AC);
  swift_storeEnumTagMultiPayload();
  sub_22CC51EC8(&qword_255C3D9F8, (uint64_t (*)(uint64_t))sub_22CC515AC, (uint64_t (*)(void))sub_22CC516E4, (uint64_t (*)(void))sub_22CC51600);
  sub_22CC07B74(&qword_254065AB0, (uint64_t (*)(uint64_t))MEMORY[0x24BEA9BB0], MEMORY[0x24BEA9B40]);
  sub_22CC65520();
  sub_22CC0DE10(v15, v14, (uint64_t (*)(_QWORD))sub_22CC51588);
  swift_storeEnumTagMultiPayload();
  sub_22CC51644();
  sub_22CC5177C();
  sub_22CC65520();
  sub_22CC0DE54(v15, (uint64_t (*)(_QWORD))sub_22CC51588);
  return sub_22CC0DE54(v13, (uint64_t (*)(_QWORD))sub_22CC515AC);
}

void sub_22CC5073C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t KeyPath;
  uint64_t *v17;
  uint64_t (*v18)(uint64_t);
  uint64_t (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t *v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v10 = *(void **)(v0 + 8);
  if (*(_QWORD *)v0)
  {
    if (v10 && (objc_msgSend(v10, sel_hasSleepStageData) & 1) != 0)
    {
      sub_22CC50C68(v1);
      sub_22CC207A8(v6);
      sub_22CC207D8(v8);
      sub_22CC50D54(v8, v4);
      (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v8, v7);
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v5);
      sub_22CC651E4();
      swift_allocObject();
      sub_22CC651D8();
      v11 = *(_QWORD *)(v9 - 312);
      sub_22CC65148();
      v12 = *(_QWORD *)(v9 - 304);
      v13 = *(_QWORD *)(v9 - 96);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v12 + 16))(*(_QWORD *)(v9 - 160), v11, v13);
      swift_storeEnumTagMultiPayload();
      sub_22CC51EC8(&qword_255C3D9F8, (uint64_t (*)(uint64_t))sub_22CC515AC, (uint64_t (*)(void))sub_22CC516E4, (uint64_t (*)(void))sub_22CC51600);
      sub_22CC07B74(&qword_254065AB0, (uint64_t (*)(uint64_t))MEMORY[0x24BEA9BB0], MEMORY[0x24BEA9B40]);
      v14 = *(_QWORD *)(v9 - 152);
      sub_22CC65520();
      sub_22CC0DE10(v14, *(_QWORD *)(v9 - 120), (uint64_t (*)(_QWORD))sub_22CC51588);
      swift_storeEnumTagMultiPayload();
      sub_22CC51644();
      sub_22CC5177C();
      sub_22CC65520();
      sub_22CC0DE54(v14, (uint64_t (*)(_QWORD))sub_22CC51588);
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
      JUMPOUT(0x22CC5071CLL);
    }
  }
  else
  {
    sub_22CC0812C(0, *(void **)(v0 + 8), *(void **)(v0 + 16));
  }
  if (sub_22CC5140C())
  {
    v15 = *(_QWORD *)(v9 - 280);
    sub_22CC512F0(v15);
    KeyPath = swift_getKeyPath();
    v17 = *(uint64_t **)(v9 - 296);
    *v17 = KeyPath;
    v18 = (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50];
    v19 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_22CC082A8(0, &qword_254065610, (uint64_t (*)(uint64_t))MEMORY[0x24BDECF50], MEMORY[0x24BDEB560]);
    swift_storeEnumTagMultiPayload();
    v20 = swift_getKeyPath();
    v21 = *(uint64_t **)(v9 - 288);
    *v21 = v20;
    v22 = (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10];
    sub_22CC082A8(0, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], v19);
    swift_storeEnumTagMultiPayload();
    v23 = swift_getKeyPath();
    v24 = *(_QWORD *)(v9 - 272);
    sub_22CC51814((uint64_t)v17, v24, &qword_254065618, v18);
    v25 = *(int **)(v9 - 208);
    sub_22CC51814((uint64_t)v21, v24 + v25[5], &qword_255C3CAB0, v22);
    v26 = (uint64_t *)(v24 + v25[6]);
    *v26 = swift_getKeyPath();
    sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], v19);
    swift_storeEnumTagMultiPayload();
    v27 = v24 + v25[7];
    *(_QWORD *)v27 = v23;
    *(_BYTE *)(v27 + 8) = 0;
    sub_22CC0DDCC(v15, v24 + v25[8], type metadata accessor for SleepStageBarViewModel);
    v28 = v25[9];
    sub_22CC51874();
    v29 = *(_QWORD *)(v9 - 264);
    sub_22CC65058();
    HKSPIsRemoveSpacesForTimeFormatEnabled();
    v30 = sub_22CC65C70();
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v9 - 256) + 8))(v29, *(_QWORD *)(v9 - 248));
    *(_QWORD *)(v24 + v28) = v30;
    v31 = v24;
    v32 = *(_QWORD *)(v9 - 240);
    sub_22CC0DDCC(v31, v32, (uint64_t (*)(_QWORD))type metadata accessor for SleepStageBarView);
    sub_22CC0DE10(v32, *(_QWORD *)(v9 - 328), (uint64_t (*)(_QWORD))type metadata accessor for SleepStageBarView);
    swift_storeEnumTagMultiPayload();
    sub_22CC07B74(&qword_254065AC0, (uint64_t (*)(uint64_t))type metadata accessor for SleepStageBarView, (uint64_t)&unk_22CC66E50);
    sub_22CC51600();
    v33 = *(_QWORD *)(v9 - 320);
    sub_22CC65520();
    sub_22CC0DE10(v33, *(_QWORD *)(v9 - 120), (uint64_t (*)(_QWORD))sub_22CC5150C);
    swift_storeEnumTagMultiPayload();
    sub_22CC51644();
    sub_22CC5177C();
    sub_22CC65520();
    sub_22CC0DE54(v33, (uint64_t (*)(_QWORD))sub_22CC5150C);
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_22CC07B74(&qword_254065AC0, (uint64_t (*)(uint64_t))type metadata accessor for SleepStageBarView, (uint64_t)&unk_22CC66E50);
    sub_22CC51600();
    v34 = *(_QWORD *)(v9 - 320);
    sub_22CC65520();
    sub_22CC0DE10(v34, *(_QWORD *)(v9 - 120), (uint64_t (*)(_QWORD))sub_22CC5150C);
    swift_storeEnumTagMultiPayload();
    sub_22CC51644();
    sub_22CC5177C();
    sub_22CC65520();
  }
  JUMPOUT(0x22CC50714);
}

uint64_t sub_22CC50C68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v11;

  v3 = sub_22CC6513C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1 + *(int *)(type metadata accessor for SleepStageResultsView(0) + 24);
  if (*(_BYTE *)(v7 + 24) != 2)
  {
    v8 = *(void **)(v7 + 8);
    if (*(_QWORD *)v7)
    {
      if (v8)
      {
        v9 = v8;
        sub_22CC65CA0();

        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a1, v6, v3);
      }
    }
    else
    {
      sub_22CC0812C(0, v8, *(void **)(v7 + 16));
    }
  }
  return sub_22CC65130();
}

uint64_t sub_22CC50D54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t (*v29)(_BYTE *, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  int v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  _BYTE *v52;
  char v53;
  void (*v54)(_BYTE *, uint64_t);
  uint64_t v55;
  char *v56;
  _BYTE v57[12];
  int v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  uint64_t v66;
  _BYTE *v67;
  uint64_t v68;
  void (*v69)(_BYTE *, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _BYTE *v73;
  _BYTE *v74;
  uint64_t v75;
  _BYTE *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t (*v79)(_BYTE *, uint64_t);
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v82 = a2;
  v75 = a1;
  v2 = sub_22CC65A18();
  v77 = *(_QWORD *)(v2 - 8);
  v78 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v67 = &v57[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v3);
  v76 = &v57[-v5];
  v6 = sub_22CC651B4();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEA9B98];
  v8 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v73 = &v57[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v80 = &v57[-v11];
  v12 = sub_22CC65A3C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v74 = &v57[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v14);
  v17 = &v57[-v16];
  sub_22CC082A8(0, &qword_2540667C8, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v19 = v18;
  v20 = *(_QWORD *)(v8 + 72);
  v71 = v8;
  v21 = *(unsigned __int8 *)(v8 + 80);
  v22 = (v21 + 32) & ~v21;
  v23 = v21 | 7;
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_22CC663F0;
  v70 = v22;
  sub_22CC65178();
  v83 = v24;
  v25 = sub_22CC07B74(&qword_2540664A0, v7, MEMORY[0x24BEA9BA8]);
  sub_22CC082A8(0, &qword_2540667A0, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  v27 = v26;
  v28 = sub_22CC24130();
  v68 = v6;
  sub_22CC65D48();
  v69 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16);
  v69(v17, v81, v12);
  v29 = *(uint64_t (**)(_BYTE *, uint64_t))(v13 + 88);
  v65 = v17;
  v72 = v12;
  v79 = v29;
  v30 = v29(v17, v12);
  v31 = *MEMORY[0x24BDFAF08];
  v63 = v19;
  v64 = v20;
  v66 = v13;
  v62 = v23;
  v61 = v25;
  v60 = v27;
  v59 = v28;
  if (v30 == v31)
  {
    v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_22CC680B0;
    sub_22CC65184();
    sub_22CC65190();
    sub_22CC6516C();
    v83 = v32;
    v33 = (uint64_t)v73;
    v34 = v68;
    sub_22CC65D48();
    v35 = v80;
    sub_22CC4F9D8(v80, v33);
    v36 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
    v36(v33, v34);
    v36((uint64_t)v35, v34);
    v37 = v81;
    v38 = v74;
    v39 = v72;
  }
  else
  {
    v58 = v31;
    v40 = v13;
    v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = xmmword_22CC66400;
    sub_22CC651A8();
    sub_22CC6519C();
    v83 = v41;
    v33 = (uint64_t)v73;
    v34 = v68;
    sub_22CC65D48();
    v42 = v80;
    sub_22CC4F9D8(v80, v33);
    v36 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
    v36(v33, v34);
    v36((uint64_t)v42, v34);
    v39 = v72;
    (*(void (**)(_BYTE *, uint64_t))(v40 + 8))(v65, v72);
    v37 = v81;
    v31 = v58;
    v38 = v74;
  }
  v69(v38, v37, v39);
  v43 = v79(v38, v39);
  if (v43 == v31 || v43 == *MEMORY[0x24BDFAED8])
  {
    v48 = v33;
    v50 = v76;
    v49 = v77;
    v51 = v78;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v77 + 16))(v76, v75, v78);
    v52 = v67;
    sub_22CC65A00();
    v53 = sub_22CC659F4();
    v54 = *(void (**)(_BYTE *, uint64_t))(v49 + 8);
    v54(v52, v51);
    result = ((uint64_t (*)(_BYTE *, uint64_t))v54)(v50, v51);
    if ((v53 & 1) != 0)
    {
      v55 = swift_allocObject();
      *(_OWORD *)(v55 + 16) = xmmword_22CC66400;
      sub_22CC65154();
      sub_22CC6519C();
      v83 = v55;
      sub_22CC65D48();
      v56 = v80;
      sub_22CC4F9D8(v80, v48);
      v36(v48, v34);
      return ((uint64_t (*)(char *, uint64_t))v36)(v56, v34);
    }
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v66 + 8))(v38, v39);
    v45 = v76;
    v44 = v77;
    v46 = v78;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v77 + 16))(v76, v75, v78);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v44 + 8))(v45, v46);
  }
  return result;
}

uint64_t sub_22CC512F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t *v10;

  v3 = v1 + *(int *)(type metadata accessor for SleepStageResultsView(0) + 24);
  v4 = MEMORY[0x24BEE4AF8];
  if (*(_BYTE *)(v3 + 24) == 2)
    goto LABEL_6;
  v5 = *(void **)(v3 + 8);
  if (!*(_QWORD *)v3)
  {
    sub_22CC0812C(0, v5, *(void **)(v3 + 16));
    goto LABEL_6;
  }
  if (!v5)
  {
LABEL_6:
    sub_22CC64EFC();
    result = type metadata accessor for SleepStageBarViewModel(0);
    v10 = (uint64_t *)(a1 + *(int *)(result + 20));
    *v10 = v4;
    v8 = v4;
    goto LABEL_7;
  }
  v6 = v5;
  sub_22CC65C94();
  sub_22CC2E2A8((uint64_t)&unk_24F76F4B0);
  v7 = HKSleepDaySummary.segments(_:highlightBehavior:)();
  swift_bridgeObjectRelease();
  _sSo28HKCategoryValueSleepAnalysisV0C8WidgetUIE15hk_asleepValuesShyABGvgZ_0();
  v8 = HKSleepDaySummary.segments(_:highlightBehavior:)();
  swift_bridgeObjectRelease();

  result = type metadata accessor for SleepStageBarViewModel(0);
  v10 = (uint64_t *)(a1 + *(int *)(result + 20));
  *v10 = v7;
LABEL_7:
  v10[1] = v8;
  v10[2] = v4;
  v10[3] = v4;
  v10[4] = v4;
  v10[5] = v4;
  return result;
}

BOOL sub_22CC5140C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  double v5;
  double v7;
  double v8;

  v1 = v0 + *(int *)(type metadata accessor for SleepStageResultsView(0) + 24);
  if (*(_BYTE *)(v1 + 24) == 2)
    return 0;
  v3 = *(id *)v1;
  v2 = *(void **)(v1 + 8);
  v4 = *(void **)(v1 + 16);
  if (!*(_QWORD *)v1)
  {
    sub_22CC0812C(0, *(void **)(v1 + 8), *(void **)(v1 + 16));
    return 0;
  }
  if (!v2)
    return 0;
  sub_22CC0812C(*(id *)v1, *(void **)(v1 + 8), *(void **)(v1 + 16));
  objc_msgSend(v2, sel_sleepDuration);
  if (v5 > COERCE_DOUBLE(1) && v5 > 0.0)
  {
    sub_22CC0816C((uint64_t)v3, v2, v4);
    return 1;
  }
  objc_msgSend(v2, sel_inBedDuration);
  v8 = v7;
  sub_22CC0816C((uint64_t)v3, v2, v4);
  return v8 > COERCE_DOUBLE(1) && v8 > 0.0;
}

void sub_22CC5150C(uint64_t a1)
{
  sub_22CC51528(a1, &qword_254065E88, (uint64_t (*)(uint64_t))type metadata accessor for SleepStageBarView, (uint64_t (*)(uint64_t, uint64_t, ValueMetadata *))MEMORY[0x24BDEF3B8]);
}

void sub_22CC51528(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, ValueMetadata *))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7, &type metadata for SleepStageEmptyView);
    if (!v9)
      atomic_store(v8, a2);
  }
}

void sub_22CC51588(uint64_t a1)
{
  sub_22CC210F4(a1, &qword_255C3D9D0, (uint64_t (*)(uint64_t))sub_22CC515AC, (uint64_t (*)(uint64_t))MEMORY[0x24BEA9BB0], (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
}

void sub_22CC515AC(uint64_t a1)
{
  sub_22CC51528(a1, &qword_255C3D9D8, (uint64_t (*)(uint64_t))sub_22CC515C8, (uint64_t (*)(uint64_t, uint64_t, ValueMetadata *))MEMORY[0x24BDEF3B8]);
}

void sub_22CC515C8(uint64_t a1)
{
  sub_22CC210F4(a1, &qword_254065E78, (uint64_t (*)(uint64_t))MEMORY[0x24BEA9BB0], (uint64_t (*)(uint64_t))type metadata accessor for SleepStageBarView, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
}

uint64_t type metadata accessor for SleepStageBarViewModel(uint64_t a1)
{
  return sub_22CC0D950(a1, qword_254065B70);
}

unint64_t sub_22CC51600()
{
  unint64_t result;

  result = qword_254065B68;
  if (!qword_254065B68)
  {
    result = MEMORY[0x22E3063F8](&unk_22CC68A24, &type metadata for SleepStageEmptyView);
    atomic_store(result, (unint64_t *)&qword_254065B68);
  }
  return result;
}

unint64_t sub_22CC51644()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255C3D9F0;
  if (!qword_255C3D9F0)
  {
    sub_22CC51588(255);
    v2 = v1;
    v3[0] = sub_22CC51EC8(&qword_255C3D9F8, (uint64_t (*)(uint64_t))sub_22CC515AC, (uint64_t (*)(void))sub_22CC516E4, (uint64_t (*)(void))sub_22CC51600);
    v3[1] = sub_22CC07B74(&qword_254065AB0, (uint64_t (*)(uint64_t))MEMORY[0x24BEA9BB0], MEMORY[0x24BEA9B40]);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDEF3E0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_255C3D9F0);
  }
  return result;
}

unint64_t sub_22CC516E4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_254065E70;
  if (!qword_254065E70)
  {
    sub_22CC515C8(255);
    v2 = v1;
    v3[0] = sub_22CC07B74(&qword_254065AB0, (uint64_t (*)(uint64_t))MEMORY[0x24BEA9BB0], MEMORY[0x24BEA9B40]);
    v3[1] = sub_22CC07B74(&qword_254065AC0, (uint64_t (*)(uint64_t))type metadata accessor for SleepStageBarView, (uint64_t)&unk_22CC66E50);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDEF3E0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_254065E70);
  }
  return result;
}

unint64_t sub_22CC5177C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_254065E80;
  if (!qword_254065E80)
  {
    sub_22CC5150C(255);
    v2 = v1;
    v3[0] = sub_22CC07B74(&qword_254065AC0, (uint64_t (*)(uint64_t))type metadata accessor for SleepStageBarView, (uint64_t)&unk_22CC66E50);
    v3[1] = sub_22CC51600();
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDEF3E0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_254065E80);
  }
  return result;
}

uint64_t sub_22CC51814(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_22CC082A8(0, a3, a4, MEMORY[0x24BDEB580]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

unint64_t sub_22CC51874()
{
  unint64_t result;

  result = qword_255C3DA00;
  if (!qword_255C3DA00)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_255C3DA00);
  }
  return result;
}

void sub_22CC518B0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2540667C0)
  {
    sub_22CC651B4();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2540667C0);
  }
}

uint64_t *sub_22CC51918(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_22CC64F08();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v12 = v10[3];
    v9[2] = v10[2];
    v9[3] = v12;
    v13 = v10[5];
    v9[4] = v10[4];
    v9[5] = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_22CC519EC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_22CC64F08();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_22CC51A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_22CC64F08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v11 = v9[3];
  v8[2] = v9[2];
  v8[3] = v11;
  v12 = v9[5];
  v8[4] = v9[4];
  v8[5] = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_22CC51B04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_22CC64F08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = *v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[2] = v9[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[3] = v9[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[4] = v9[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[5] = v9[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22CC51BF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;

  v6 = sub_22CC64F08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v8[2] = v9[2];
  return a1;
}

uint64_t sub_22CC51C5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_22CC64F08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + v7) = *v9;
  swift_bridgeObjectRelease();
  v8[1] = v9[1];
  swift_bridgeObjectRelease();
  v8[2] = v9[2];
  swift_bridgeObjectRelease();
  v8[3] = v9[3];
  swift_bridgeObjectRelease();
  v8[4] = v9[4];
  swift_bridgeObjectRelease();
  v8[5] = v9[5];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_22CC51D18()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC51D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_22CC64F08();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_22CC51DA0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC51DAC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_22CC64F08();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_22CC51E24()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22CC64F08();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22CC51E94()
{
  return sub_22CC51EC8(&qword_255C3DA08, (uint64_t (*)(uint64_t))sub_22CC51F38, (uint64_t (*)(void))sub_22CC51644, (uint64_t (*)(void))sub_22CC5177C);
}

uint64_t sub_22CC51EC8(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = a2(255);
    v9[0] = a3();
    v9[1] = a4();
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDEF3E0], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

void sub_22CC51F38(uint64_t a1)
{
  sub_22CC210F4(a1, &qword_255C3DA10, (uint64_t (*)(uint64_t))sub_22CC51588, (uint64_t (*)(uint64_t))sub_22CC5150C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
}

uint64_t SleepWidgetViewModel.baseAccessibilityIdentifier.getter()
{
  uint64_t v0;

  if (qword_254066798 != -1)
    swift_once();
  v0 = qword_254067968;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t SleepWidgetViewModel.title.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v22 = sub_22CC652BC();
  v1 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_22CC65070();
  v20 = *(_QWORD *)(v4 - 8);
  v21 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_22CC6507C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_22CC65118();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v0 + 8) & 1) != 0)
  {
LABEL_2:
    sub_22CC652A4();
    v15 = sub_22CC652B0();
    v16 = sub_22CC65C4C();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_22CC04000, v15, v16, "State has no title", v17, 2u);
      MEMORY[0x22E306470](v17, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v22);
    return 0;
  }
  else
  {
    switch(*(_QWORD *)v0)
    {
      case 2:
        if (qword_254065700 == -1)
          goto LABEL_10;
        goto LABEL_12;
      case 3:
      case 6:
        (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BDCEF70], v7);
        sub_22CC65088();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
        type metadata accessor for SleepWidgetViewModel();
        sub_22CC65058();
        sub_22CC650A0();
        (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v21);
        (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
        return sub_22CC65C34();
      case 4:
      case 5:
        if (qword_254065700 == -1)
          goto LABEL_10;
LABEL_12:
        swift_once();
LABEL_10:
        result = sub_22CC64F74();
        break;
      default:
        goto LABEL_2;
    }
  }
  return result;
}

BOOL SleepWidgetViewModel.hideTitle.getter()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + 8) & 1) == 0 && *(_QWORD *)v0 == 5;
}

BOOL SleepWidgetViewModel.showWakeUpDateView.getter()
{
  uint64_t (*v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  _BOOL8 v5;
  uint64_t v7;

  v0 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - v2;
  sub_22CC53F64((uint64_t)&v7 - v2);
  v4 = sub_22CC6504C();
  v5 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4) != 1;
  sub_22CC0DD48((uint64_t)v3, (unint64_t *)&qword_254065348, v0);
  return v5;
}

uint64_t sub_22CC523BC()
{
  if (qword_254065700 != -1)
    swift_once();
  return sub_22CC64F74();
}

uint64_t sub_22CC52484()
{
  if (qword_254065700 != -1)
    swift_once();
  return sub_22CC64F74();
}

uint64_t sub_22CC5254C()
{
  if (qword_254065700 != -1)
    swift_once();
  return sub_22CC64F74();
}

uint64_t SleepWidgetViewModel.scheduleOccurrenceTimeAttributedString(occurrence:isCondensed:)@<X0>(_BYTE *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  v6 = sub_22CC64FB0();
  MEMORY[0x24BDAC7A8](v6);
  sub_22CC082A8(0, &qword_255C3DA18, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v27 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v27 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v27 - v17;
  if (*a1 == 3)
  {
    v19 = (char *)&v27 - v17;
    if ((a2 & 1) != 0)
      SleepWidgetViewModel.localizedCondensedBedtimeAttributedString.getter((uint64_t)v19);
    else
      SleepWidgetViewModel.localizedBedtimeAttributedString.getter((uint64_t)v19);
    sub_22CC0DCF0((uint64_t)v18, (uint64_t)v16, &qword_255C3DA18, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8]);
    v20 = sub_22CC64F5C();
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v16, 1, v20) == 1)
    {
      if (qword_254065700 != -1)
        swift_once();
      sub_22CC64F74();
      sub_22CC64FA4();
      sub_22CC64F68();
      v22 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8];
      sub_22CC0DD48((uint64_t)v18, &qword_255C3DA18, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8]);
      v23 = (uint64_t)v16;
      return sub_22CC0DD48(v23, &qword_255C3DA18, v22);
    }
    sub_22CC0DD48((uint64_t)v18, &qword_255C3DA18, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8]);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v21 + 32))(a3, v16, v20);
  }
  else
  {
    if ((a2 & 1) != 0)
      SleepWidgetViewModel.localizedCondensedWakeUpAttributedString.getter((uint64_t)v13);
    else
      SleepWidgetViewModel.localizedWakeUpAttributedString.getter((uint64_t)v13);
    sub_22CC0DCF0((uint64_t)v13, (uint64_t)v10, &qword_255C3DA18, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8]);
    v24 = sub_22CC64F5C();
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v10, 1, v24) == 1)
    {
      if (qword_254065700 != -1)
        swift_once();
      sub_22CC64F74();
      sub_22CC64FA4();
      sub_22CC64F68();
      v22 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8];
      sub_22CC0DD48((uint64_t)v13, &qword_255C3DA18, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8]);
      v23 = (uint64_t)v10;
      return sub_22CC0DD48(v23, &qword_255C3DA18, v22);
    }
    sub_22CC0DD48((uint64_t)v13, &qword_255C3DA18, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8]);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v25 + 32))(a3, v10, v24);
  }
}

uint64_t sub_22CC529C4(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v15;

  v2 = sub_22CC6504C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC082A8(0, (unint64_t *)&qword_254065348, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v15 - v11;
  if (*a1 == 3)
    sub_22CC53D88((uint64_t)&v15 - v11);
  else
    sub_22CC53F64((uint64_t)&v15 - v11);
  sub_22CC0DCF0((uint64_t)v12, (uint64_t)v10, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v10, 1, v2) == 1)
  {
    sub_22CC0DD48((uint64_t)v10, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    if (qword_254065700 != -1)
      swift_once();
    sub_22CC64F74();
    sub_22CC65214();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v10, v2);
    v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
    objc_msgSend(v13, sel_setDateStyle_, 0);
    objc_msgSend(v13, sel_setTimeStyle_, 1);
    sub_22CC65C7C();

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_22CC0DD48((uint64_t)v12, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
}

uint64_t SleepWidgetViewModel.scheduleOccurrenceRelativeDateString(occurrence:)(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v29;

  sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v29 - v7;
  v9 = sub_22CC6504C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v29 - v14;
  v16 = *a1;
  v17 = type metadata accessor for SleepWidgetViewModel();
  v18 = v17;
  if (v16 == 3)
  {
    sub_22CC0DCF0(v1 + *(int *)(v17 + 48), (uint64_t)v8, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
      v22 = *(void **)(v1 + *(int *)(v18 + 36));
      v23 = (void *)sub_22CC6501C();
      v24 = objc_msgSend(v22, sel_stringFromDate_, v23);

      v21 = sub_22CC65B2C();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
      return v21;
    }
    v19 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
    v20 = (uint64_t)v8;
  }
  else
  {
    sub_22CC0DCF0(v1 + *(int *)(v17 + 52), (uint64_t)v6, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v6, v9);
      v25 = *(void **)(v1 + *(int *)(v18 + 36));
      v26 = (void *)sub_22CC6501C();
      v27 = objc_msgSend(v25, sel_stringFromDate_, v26);

      v21 = sub_22CC65B2C();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
      return v21;
    }
    v19 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
    v20 = (uint64_t)v6;
  }
  sub_22CC0DD48(v20, (unint64_t *)&qword_254065348, v19);
  return 0;
}

BOOL static SleepWidgetViewModel.AlarmState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SleepWidgetViewModel.sleepChart.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SleepWidgetViewModel();
  if (*(_QWORD *)(v1 + *(int *)(result + 40)))
    return sub_22CC2BCBC(a1);
  *a1 = 0;
  return result;
}

uint64_t SleepWidgetViewModel.init(state:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  _QWORD *v15;

  v6 = (int *)type metadata accessor for SleepWidgetViewModel();
  v7 = a3 + v6[5];
  v8 = sub_22CC64F20();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
  v9(v7, 1, 1, v8);
  v9(a3 + v6[6], 1, 1, v8);
  sub_22CC65040();
  v10 = v6[9];
  *(_QWORD *)(a3 + v10) = objc_msgSend(objc_allocWithZone((Class)sub_22CC651F0()), sel_init);
  v11 = a3 + v6[11];
  v12 = sub_22CC6504C();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v13(v11, 1, 1, v12);
  v13(a3 + v6[12], 1, 1, v12);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v13)(a3 + v6[13], 1, 1, v12);
  *(_QWORD *)a3 = a1;
  *(_BYTE *)(a3 + 8) = a2 & 1;
  *(_BYTE *)(a3 + v6[7]) = 0;
  v15 = (_QWORD *)(a3 + v6[10]);
  *v15 = 0;
  v15[1] = 0;
  v15[2] = 0;
  return result;
}

id SleepWidgetViewModel.summaryResults.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;

  v3 = v1 + *(int *)(type metadata accessor for SleepWidgetViewModel() + 40);
  v4 = *(void **)v3;
  v5 = *(void **)(v3 + 8);
  v6 = *(void **)(v3 + 16);
  *a1 = *(_QWORD *)v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_22CC0812C(v4, v5, v6);
}

uint64_t SleepWidgetViewModel.init(state:bedtimeComponents:wakeUpComponents:alarmState:summaryResults:now:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, __int128 *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  char v22;
  uint64_t v23;
  __int128 v24;

  v22 = *a5;
  v24 = *a6;
  v23 = *((_QWORD *)a6 + 2);
  v13 = (int *)type metadata accessor for SleepWidgetViewModel();
  v14 = v13[9];
  *(_QWORD *)(a8 + v14) = objc_msgSend(objc_allocWithZone((Class)sub_22CC651F0()), sel_init);
  v15 = a8 + v13[11];
  v16 = sub_22CC6504C();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v18(v15, 1, 1, v16);
  v18(a8 + v13[12], 1, 1, v16);
  v18(a8 + v13[13], 1, 1, v16);
  *(_QWORD *)a8 = a1;
  *(_BYTE *)(a8 + 8) = a2 & 1;
  v19 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0];
  sub_22CC55090(a3, a8 + v13[5], &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0]);
  sub_22CC55090(a4, a8 + v13[6], &qword_254065338, v19);
  *(_BYTE *)(a8 + v13[7]) = v22;
  v20 = a8 + v13[10];
  *(_OWORD *)v20 = v24;
  *(_QWORD *)(v20 + 16) = v23;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(a8 + v13[8], a7, v16);
}

uint64_t SleepWidgetViewModel.init(resolvedOccurrence:summaryResults:state:now:)@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  int *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t, uint64_t);
  id v35;
  id v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void (*v47)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v48)(uint64_t);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  void *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  id v67;
  uint64_t v69;
  id v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  char v82;

  v81 = a5;
  v78 = a3;
  v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v69 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v72 = (char *)&v69 - v18;
  sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], v10);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v69 - v23;
  v25 = (int *)type metadata accessor for SleepWidgetViewModel();
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&v69 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *a2;
  v29 = a2[1];
  v30 = a2[2];
  v80 = a6;
  v73 = v17;
  v74 = v14;
  v79 = a4;
  v76 = v29;
  v77 = v28;
  v75 = v30;
  if (a1)
  {
    v31 = objc_msgSend(a1, sel_occurrence);
    v32 = objc_msgSend(v31, sel_bedtimeComponents);

    sub_22CC64F14();
    v33 = sub_22CC64F20();
    v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56);
    v34(v24, 0, 1, v33);
    v35 = objc_msgSend(a1, sel_occurrence);
    v36 = objc_msgSend(v35, sel_wakeUpComponents);

    sub_22CC64F14();
    v37 = v22;
    v38 = 0;
    v39 = v33;
  }
  else
  {
    v40 = sub_22CC64F20();
    v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56);
    v34(v24, 1, 1, v40);
    v37 = v22;
    v38 = 1;
    v39 = v40;
  }
  v34(v37, v38, 1, v39);
  v70 = a1;
  sub_22CC53810(a1, &v82);
  v41 = v82;
  v42 = &v27[v25[8]];
  v43 = sub_22CC6504C();
  v44 = *(_QWORD *)(v43 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v42, v81, v43);
  v45 = v25[9];
  *(_QWORD *)&v27[v45] = objc_msgSend(objc_allocWithZone((Class)sub_22CC651F0()), sel_init);
  v46 = &v27[v25[11]];
  v71 = v44;
  v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 56);
  v47(v46, 1, 1, v43);
  v47(&v27[v25[12]], 1, 1, v43);
  v47(&v27[v25[13]], 1, 1, v43);
  *(_QWORD *)v27 = v78;
  v27[8] = v79 & 1;
  v48 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0];
  sub_22CC55090((uint64_t)v24, (uint64_t)&v27[v25[5]], &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0]);
  sub_22CC55090((uint64_t)v22, (uint64_t)&v27[v25[6]], &qword_254065338, v48);
  v27[v25[7]] = v41;
  v49 = &v27[v25[10]];
  v50 = v76;
  *(_QWORD *)v49 = v77;
  *((_QWORD *)v49 + 1) = v50;
  *((_QWORD *)v49 + 2) = v75;
  v51 = v80;
  sub_22CC459A0((uint64_t)v27, v80);
  if (a1)
  {
    v52 = v70;
    v53 = objc_msgSend(v70, sel_windDownEvent);
    if (v53)
    {
      v54 = v53;
      v55 = objc_msgSend(v53, sel_dueDate);

      v56 = (uint64_t)v72;
      sub_22CC65028();

      v57 = 0;
      v58 = (uint64_t)v74;
    }
    else
    {
      v57 = 1;
      v58 = (uint64_t)v74;
      v56 = (uint64_t)v72;
    }
    v47((char *)v56, v57, 1, v43);
    sub_22CC55034(v56, v51 + v25[11]);
    v60 = objc_msgSend(v52, sel_bedtimeEvent);
    if (v60)
    {
      v61 = v60;
      v62 = objc_msgSend(v60, sel_dueDate);

      v63 = (uint64_t)v73;
      sub_22CC65028();

      v47((char *)v63, 0, 1, v43);
      sub_22CC55034(v63, v51 + v25[12]);
LABEL_12:
      v66 = objc_msgSend(v52, sel_wakeUpEvent);
      v67 = objc_msgSend(v66, sel_dueDate);

      sub_22CC65028();
      v64 = 0;
      goto LABEL_13;
    }
  }
  else
  {
    v59 = (uint64_t)v72;
    v47(v72, 1, 1, v43);
    sub_22CC55034(v59, v51 + v25[11]);
    v58 = (uint64_t)v74;
    v52 = v70;
  }
  v64 = 1;
  v65 = (uint64_t)v73;
  v47(v73, 1, 1, v43);
  sub_22CC55034(v65, v51 + v25[12]);
  if (a1)
    goto LABEL_12;
LABEL_13:
  (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v81, v43);
  v47((char *)v58, v64, 1, v43);
  return sub_22CC55034(v58, v51 + v25[13]);
}

void sub_22CC53810(void *a1@<X0>, char *a2@<X8>)
{
  id v3;
  id v4;
  id v5;
  char v6;
  id v7;
  id v8;

  if (a1)
  {
    v3 = a1;
    v4 = objc_msgSend(v3, sel_wakeUpEvent);
    v5 = objc_msgSend(v4, sel_type);

    if (v5 == (id)1)
    {

      v6 = 1;
    }
    else
    {
      v7 = objc_msgSend(v3, sel_occurrence);
      v8 = objc_msgSend(v7, sel_alarmConfiguration);

      LODWORD(v7) = objc_msgSend(v8, sel_isEnabled);
      if ((_DWORD)v7)
        v6 = 0;
      else
        v6 = 2;
    }
  }
  else
  {
    v6 = 0;
  }
  *a2 = v6;
}

uint64_t SleepWidgetViewModel.init(resolvedOccurrence:summaryResults:state:)@<X0>(void *a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  int v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __int128 v15;
  uint64_t v16;

  v9 = a4 & 1;
  v10 = sub_22CC6504C();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *((_QWORD *)a2 + 2);
  v15 = *a2;
  v16 = v13;
  sub_22CC65040();
  return SleepWidgetViewModel.init(resolvedOccurrence:summaryResults:state:now:)(a1, (uint64_t *)&v15, a3, v9, (uint64_t)v12, a5);
}

uint64_t SleepWidgetViewModel.defaultText.getter()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  if ((*(_BYTE *)(v0 + 8) & 1) != 0)
    return 0x617453206C6C754ELL;
  v2 = (id)NSStringFromHKSPSleepWidgetState();
  v1 = sub_22CC65B2C();

  return v1;
}

uint64_t SleepWidgetViewModel.localizedCondensedBedtimeAttributedString.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22CC53A34((void (*)(uint64_t))sub_22CC53D88, a1);
}

uint64_t SleepWidgetViewModel.localizedBedtimeAttributedString.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22CC53BF4((void (*)(id))sub_22CC53D88, a1);
}

uint64_t SleepWidgetViewModel.localizedCondensedWakeUpAttributedString.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22CC53A34((void (*)(uint64_t))sub_22CC53F64, a1);
}

uint64_t sub_22CC53A34@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v19 - v6;
  v8 = sub_22CC65070();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC2EA20(0, (unint64_t *)&qword_255C3DA00);
  sub_22CC65058();
  HKSPIsRemoveSpacesForTimeFormatEnabled();
  v12 = (void *)sub_22CC65C70();
  v13 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  a1(v13);
  sub_22CC54470((uint64_t)v7, v12);
  v15 = v14;
  sub_22CC0DD48((uint64_t)v7, (unint64_t *)&qword_254065348, v4);
  if (v15)
  {
    sub_22CC65B80();
    swift_bridgeObjectRelease();

    v16 = sub_22CC64F5C();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 0, 1, v16);
  }
  else
  {

    v18 = sub_22CC64F5C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a2, 1, 1, v18);
  }
}

uint64_t SleepWidgetViewModel.localizedWakeUpAttributedString.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_22CC53BF4((void (*)(id))sub_22CC53F64, a1);
}

uint64_t sub_22CC53BF4@<X0>(void (*a1)(id)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_22CC64FB0();
  MEMORY[0x24BDAC7A8](v4);
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v15 - v7;
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  objc_msgSend(v9, sel_setDateStyle_, 0);
  a1(objc_msgSend(v9, sel_setTimeStyle_, 1));
  sub_22CC54470((uint64_t)v8, v9);
  v11 = v10;
  sub_22CC0DD48((uint64_t)v8, (unint64_t *)&qword_254065348, v5);

  if (v11)
  {
    sub_22CC64FA4();
    sub_22CC64F68();
    v12 = sub_22CC64F5C();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a2, 0, 1, v12);
  }
  else
  {
    v14 = sub_22CC64F5C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 1, 1, v14);
  }
}

uint64_t sub_22CC53D88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v18 = a1;
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0];
  sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v17 - v4;
  v6 = sub_22CC64F20();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22CC65118();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC650F4();
  v14 = type metadata accessor for SleepWidgetViewModel();
  sub_22CC0DCF0(v1 + *(int *)(v14 + 20), (uint64_t)v5, &qword_254065338, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    sub_22CC0DD48((uint64_t)v5, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0]);
    v15 = sub_22CC6504C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v18, 1, 1, v15);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    sub_22CC650D0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t sub_22CC53F64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v18 = a1;
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0];
  sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v17 - v4;
  v6 = sub_22CC64F20();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22CC65118();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC650F4();
  v14 = type metadata accessor for SleepWidgetViewModel();
  sub_22CC0DCF0(v1 + *(int *)(v14 + 24), (uint64_t)v5, &qword_254065338, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    sub_22CC0DD48((uint64_t)v5, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0]);
    v15 = sub_22CC6504C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v18, 1, 1, v15);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    sub_22CC650D0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t SleepWidgetViewModel.localizedBedtimeRelativeDateString.getter()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v15;

  v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v15 - v3;
  v5 = sub_22CC6504C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SleepWidgetViewModel();
  sub_22CC0DCF0(v0 + *(int *)(v9 + 48), (uint64_t)v4, (unint64_t *)&qword_254065348, v1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_22CC0DD48((uint64_t)v4, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    v11 = *(void **)(v0 + *(int *)(v9 + 36));
    v12 = (void *)sub_22CC6501C();
    v13 = objc_msgSend(v11, sel_stringFromDate_, v12);

    v10 = sub_22CC65B2C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v10;
}

uint64_t SleepWidgetViewModel.localizedWakeUpRelativeDateString.getter()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v15;

  v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v15 - v3;
  v5 = sub_22CC6504C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SleepWidgetViewModel();
  sub_22CC0DCF0(v0 + *(int *)(v9 + 52), (uint64_t)v4, (unint64_t *)&qword_254065348, v1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_22CC0DD48((uint64_t)v4, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    v11 = *(void **)(v0 + *(int *)(v9 + 36));
    v12 = (void *)sub_22CC6501C();
    v13 = objc_msgSend(v11, sel_stringFromDate_, v12);

    v10 = sub_22CC65B2C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v10;
}

uint64_t sub_22CC54470(uint64_t a1, void *a2)
{
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v16;

  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v16 - v6;
  v8 = sub_22CC6504C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC0DCF0(a1, (uint64_t)v7, (unint64_t *)&qword_254065348, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_22CC0DD48((uint64_t)v7, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    v13 = (void *)sub_22CC6501C();
    v14 = objc_msgSend(a2, sel_stringFromDate_, v13);

    v12 = sub_22CC65B2C();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return v12;
}

uint64_t SleepWidgetViewModel.localizedBedtimeString.getter()
{
  return sub_22CC5460C((void (*)(id))sub_22CC53D88);
}

uint64_t SleepWidgetViewModel.localizedWakeUpString.getter()
{
  return sub_22CC5460C((void (*)(id))sub_22CC53F64);
}

uint64_t sub_22CC5460C(void (*a1)(id))
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v9;

  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - v4;
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  objc_msgSend(v6, sel_setDateStyle_, 0);
  a1(objc_msgSend(v6, sel_setTimeStyle_, 1));
  v7 = sub_22CC54470((uint64_t)v5, v6);
  sub_22CC0DD48((uint64_t)v5, (unint64_t *)&qword_254065348, v2);

  return v7;
}

uint64_t SleepWidgetViewModel.sleepSampleEndDateString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  void *v16;
  BOOL v17;
  id v18;
  id v19;
  unint64_t v20;
  char *v21;
  char *v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  id v29;
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;

  v34 = sub_22CC64F08();
  v1 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v3 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v31 - v8;
  v10 = sub_22CC6504C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SleepWidgetViewModel() + 40));
  v15 = *v14;
  v16 = (void *)v14[1];
  if (*v14)
    v17 = v16 == 0;
  else
    v17 = 1;
  if (v17)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
LABEL_18:
    sub_22CC0DD48((uint64_t)v9, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
    return 0;
  }
  v32 = (void *)v14[2];
  v33 = v13;
  v18 = v32;
  swift_bridgeObjectRetain();
  v19 = objc_msgSend(v16, sel_periods);
  sub_22CC2EA20(0, &qword_255C3CF70);
  v20 = sub_22CC65BA4();

  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    v21 = (char *)sub_22CC65E5C();
    swift_bridgeObjectRelease();
    if (v21)
    {
LABEL_9:
      v22 = v21 - 1;
      if (__OFSUB__(v21, 1))
      {
        __break(1u);
      }
      else if ((v20 & 0xC000000000000001) == 0)
      {
        if (((unint64_t)v22 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if ((unint64_t)v22 < *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          v23 = *(id *)(v20 + 8 * (_QWORD)v22 + 32);
LABEL_14:
          v24 = v23;
          swift_bridgeObjectRelease();
          v25 = objc_msgSend(v24, sel_dateInterval);

          sub_22CC64ECC();
          sub_22CC64ED8();
          (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v34);
          v26 = 0;
          goto LABEL_17;
        }
        __break(1u);
LABEL_29:
        swift_once();
        goto LABEL_20;
      }
      v23 = (id)MEMORY[0x22E305EF4](v22, v20);
      goto LABEL_14;
    }
  }
  else
  {
    v21 = *(char **)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v21)
      goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  v26 = 1;
LABEL_17:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v7, v26, 1, v10);
  sub_22CC55090((uint64_t)v7, (uint64_t)v9, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900]);
  sub_22CC0816C(v15, v16, v32);
  v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  v7 = v33;
  if (v27 == 1)
    goto LABEL_18;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v33, v9, v10);
  v21 = (char *)sub_22CC6501C();
  if (qword_255C3C908 != -1)
    goto LABEL_29;
LABEL_20:
  v29 = (id)HKMostRecentSampleEndDateText();

  if (v29)
  {
    v28 = sub_22CC65B2C();

  }
  else
  {
    v28 = 0;
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v10);
  return v28;
}

uint64_t SleepWidgetViewModel.AlarmState.hash(into:)()
{
  return sub_22CC65EEC();
}

uint64_t SleepWidgetViewModel.AlarmState.hashValue.getter()
{
  sub_22CC65EE0();
  sub_22CC65EEC();
  return sub_22CC65EF8();
}

uint64_t SleepWidgetViewModel.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int *v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v20[16];

  sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v1);
  v3 = &v20[-v2];
  sub_22CC082A8(0, &qword_254066120, (uint64_t (*)(uint64_t))sub_22CC550E8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_22CC67250;
  if ((*(_BYTE *)(v0 + 8) & 1) != 0)
  {
    v5 = 0xEA00000000006574;
    v6 = 0x617453206C6C754ELL;
  }
  else
  {
    v7 = (id)NSStringFromHKSPSleepWidgetState();
    v6 = sub_22CC65B2C();
    v5 = v8;

  }
  v9 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v4 + 56) = MEMORY[0x24BEE0D00];
  v10 = sub_22CC5513C();
  *(_QWORD *)(v4 + 64) = v10;
  *(_QWORD *)(v4 + 32) = v6;
  *(_QWORD *)(v4 + 40) = v5;
  v11 = (int *)type metadata accessor for SleepWidgetViewModel();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0];
  sub_22CC0DCF0(v0 + v11[5], (uint64_t)v3, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0]);
  v13 = sub_22CC65B44();
  *(_QWORD *)(v4 + 96) = v9;
  *(_QWORD *)(v4 + 104) = v10;
  *(_QWORD *)(v4 + 72) = v13;
  *(_QWORD *)(v4 + 80) = v14;
  sub_22CC0DCF0(v0 + v11[6], (uint64_t)v3, &qword_254065338, v12);
  v15 = sub_22CC65B44();
  *(_QWORD *)(v4 + 136) = v9;
  *(_QWORD *)(v4 + 144) = v10;
  *(_QWORD *)(v4 + 112) = v15;
  *(_QWORD *)(v4 + 120) = v16;
  v20[15] = *(_BYTE *)(v0 + v11[7]);
  v17 = sub_22CC65B44();
  *(_QWORD *)(v4 + 176) = v9;
  *(_QWORD *)(v4 + 184) = v10;
  *(_QWORD *)(v4 + 152) = v17;
  *(_QWORD *)(v4 + 160) = v18;
  return sub_22CC65B38();
}

uint64_t SleepWidgetViewModel.noDataTexts.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (*(_QWORD *)(v0 + *(int *)(type metadata accessor for SleepWidgetViewModel() + 40))
    && SleepDaySummaryResults.hasAnyDataInLastWeek.getter())
  {
    sub_22CC3B5B0(0, (unint64_t *)&qword_254065EB0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE3598]);
    v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_22CC680B0;
    if (qword_254065700 != -1)
      swift_once();
    *(_QWORD *)(v1 + 32) = sub_22CC64F74();
    *(_QWORD *)(v1 + 40) = v2;
    *(_QWORD *)(v1 + 48) = sub_22CC64F74();
    *(_QWORD *)(v1 + 56) = v3;
    *(_QWORD *)(v1 + 64) = 11565;
    *(_QWORD *)(v1 + 72) = 0xE200000000000000;
    sub_22CC3B5B0(0, &qword_254065E98, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE1250]);
    sub_22CC3B5F8();
    v4 = sub_22CC65C28();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_22CC3B5B0(0, (unint64_t *)&qword_254065EB0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BEE3598]);
    v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_22CC66400;
    if (qword_254065700 != -1)
      swift_once();
    *(_QWORD *)(v4 + 32) = sub_22CC64F74();
    *(_QWORD *)(v4 + 40) = v5;
    *(_QWORD *)(v4 + 48) = 11565;
    *(_QWORD *)(v4 + 56) = 0xE200000000000000;
  }
  return v4;
}

id sub_22CC54F7C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;

  v3 = v2 + *(int *)(a1 + 40);
  v4 = *(void **)v3;
  v5 = *(void **)(v3 + 8);
  v6 = *(void **)(v3 + 16);
  *a2 = *(_QWORD *)v3;
  a2[1] = v5;
  a2[2] = v6;
  return sub_22CC0812C(v4, v5, v6);
}

uint64_t sub_22CC54F9C()
{
  uint64_t v0;

  if (qword_254066798 != -1)
    swift_once();
  v0 = qword_254067968;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t type metadata accessor for SleepWidgetViewModel()
{
  uint64_t result;

  result = qword_254065328;
  if (!qword_254065328)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22CC55034(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_22CC55090(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_22CC082A8(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

unint64_t sub_22CC550E8()
{
  unint64_t result;

  result = qword_254066128;
  if (!qword_254066128)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_254066128);
  }
  return result;
}

unint64_t sub_22CC5513C()
{
  unint64_t result;

  result = qword_2540660D8;
  if (!qword_2540660D8)
  {
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2540660D8);
  }
  return result;
}

unint64_t sub_22CC55184()
{
  unint64_t result;

  result = qword_255C3DA20;
  if (!qword_255C3DA20)
  {
    result = MEMORY[0x22E3063F8](&protocol conformance descriptor for SleepWidgetViewModel.AlarmState, &type metadata for SleepWidgetViewModel.AlarmState);
    atomic_store(result, (unint64_t *)&qword_255C3DA20);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for SleepWidgetViewModel(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  void *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  char *v37;
  char *v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v7 = a3[5];
    v8 = (void *)(a1 + v7);
    v9 = (char *)a2 + v7;
    v10 = sub_22CC64F20();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    if (v12(v9, 1, v10))
    {
      sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v15 = a3[6];
    v16 = (char *)v4 + v15;
    v17 = (char *)a2 + v15;
    if (v12((char *)a2 + v15, 1, v10))
    {
      sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v16, v17, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
    }
    v19 = a3[8];
    *((_BYTE *)v4 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    v20 = (char *)v4 + v19;
    v21 = (uint64_t)a2 + v19;
    v22 = sub_22CC6504C();
    v23 = *(_QWORD *)(v22 - 8);
    v24 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
    v24(v20, v21, v22);
    v25 = a3[9];
    v26 = a3[10];
    v27 = *(void **)((char *)a2 + v25);
    *(_QWORD *)((char *)v4 + v25) = v27;
    v28 = (_QWORD *)((char *)v4 + v26);
    v29 = (uint64_t)a2 + v26;
    v30 = *(uint64_t *)((char *)a2 + v26);
    v31 = v27;
    if (v30)
    {
      v33 = *(void **)(v29 + 8);
      v32 = *(void **)(v29 + 16);
      *v28 = v30;
      v28[1] = v33;
      v28[2] = v32;
      swift_bridgeObjectRetain();
      v34 = v33;
      v35 = v32;
    }
    else
    {
      *(_OWORD *)v28 = *(_OWORD *)v29;
      v28[2] = *(_QWORD *)(v29 + 16);
    }
    v36 = a3[11];
    v37 = (char *)v4 + v36;
    v38 = (char *)a2 + v36;
    v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    if (v39((char *)a2 + v36, 1, v22))
    {
      sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      v24(v37, (uint64_t)v38, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v37, 0, 1, v22);
    }
    v41 = a3[12];
    v42 = (char *)v4 + v41;
    v43 = (char *)a2 + v41;
    if (v39((char *)a2 + v41, 1, v22))
    {
      sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      v24(v42, (uint64_t)v43, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v42, 0, 1, v22);
    }
    v45 = a3[13];
    v46 = (char *)v4 + v45;
    v47 = (char *)a2 + v45;
    if (v39(v47, 1, v22))
    {
      sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      v24(v46, (uint64_t)v47, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v46, 0, 1, v22);
    }
  }
  return v4;
}

uint64_t destroy for SleepWidgetViewModel(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  void (*v18)(uint64_t, uint64_t);

  v4 = a1 + a2[5];
  v5 = sub_22CC64F20();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = a1 + a2[6];
  if (!v7(v8, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  v9 = a1 + a2[8];
  v10 = sub_22CC6504C();
  v11 = *(_QWORD *)(v10 - 8);
  v18 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v18(v9, v10);

  v12 = a1 + a2[10];
  if (*(_QWORD *)v12)
  {
    swift_bridgeObjectRelease();

  }
  v13 = a1 + a2[11];
  v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (!v14(v13, 1, v10))
    v18(v13, v10);
  v15 = a1 + a2[12];
  if (!v14(v15, 1, v10))
    v18(v15, v10);
  v16 = a1 + a2[13];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v14)(v16, 1, v10);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v18)(v16, v10);
  return result;
}

uint64_t initializeWithCopy for SleepWidgetViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(void *, const void *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  void *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  void *v35;
  const void *v36;
  unsigned int (*v37)(const void *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  void *v40;
  const void *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  const void *v45;
  uint64_t v46;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[5];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_22CC64F20();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = a3[6];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  if (v11((const void *)(a2 + v13), 1, v9))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v14, v15, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  v17 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  v20 = sub_22CC6504C();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(void (**)(void *, const void *, uint64_t))(v21 + 16);
  v22(v18, v19, v20);
  v23 = a3[9];
  v24 = a3[10];
  v25 = *(void **)(a2 + v23);
  *(_QWORD *)(a1 + v23) = v25;
  v26 = (_QWORD *)(a1 + v24);
  v27 = a2 + v24;
  v28 = *(_QWORD *)(a2 + v24);
  v29 = v25;
  if (v28)
  {
    v31 = *(void **)(v27 + 8);
    v30 = *(void **)(v27 + 16);
    *v26 = v28;
    v26[1] = v31;
    v26[2] = v30;
    swift_bridgeObjectRetain();
    v32 = v31;
    v33 = v30;
  }
  else
  {
    *(_OWORD *)v26 = *(_OWORD *)v27;
    v26[2] = *(_QWORD *)(v27 + 16);
  }
  v34 = a3[11];
  v35 = (void *)(a1 + v34);
  v36 = (const void *)(a2 + v34);
  v37 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48);
  if (v37((const void *)(a2 + v34), 1, v20))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    v22(v35, v36, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v35, 0, 1, v20);
  }
  v39 = a3[12];
  v40 = (void *)(a1 + v39);
  v41 = (const void *)(a2 + v39);
  if (v37((const void *)(a2 + v39), 1, v20))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    v22(v40, v41, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v40, 0, 1, v20);
  }
  v43 = a3[13];
  v44 = (void *)(a1 + v43);
  v45 = (const void *)(a2 + v43);
  if (v37(v45, 1, v20))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    v22(v44, v45, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v44, 0, 1, v20);
  }
  return a1;
}

uint64_t assignWithCopy for SleepWidgetViewModel(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char *v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  uint64_t v32;
  _QWORD *v33;
  __int128 *v34;
  uint64_t v35;
  void *v36;
  void *v37;
  id v38;
  void *v39;
  void *v40;
  id v41;
  void *v42;
  void *v43;
  id v44;
  id v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  void *v49;
  char *v50;
  uint64_t (*v51)(uint64_t, uint64_t, uint64_t);
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  char *v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  char *v63;
  int v64;
  int v65;
  uint64_t v66;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (char *)a2 + v7;
  v10 = sub_22CC64F20();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  v16 = a3[6];
  v17 = (void *)(a1 + v16);
  v18 = (char *)a2 + v16;
  v19 = v12((void *)(a1 + v16), 1, v10);
  v20 = v12(v18, 1, v10);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v17, v18, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v17, v10);
LABEL_12:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, char *, uint64_t))(v11 + 24))(v17, v18, v10);
LABEL_13:
  *(_BYTE *)(a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  v22 = a3[8];
  v23 = a1 + v22;
  v24 = (uint64_t)a2 + v22;
  v25 = sub_22CC6504C();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 24);
  v27(v23, v24, v25);
  v28 = a3[9];
  v29 = *(void **)((char *)a2 + v28);
  v30 = *(void **)(a1 + v28);
  *(_QWORD *)(a1 + v28) = v29;
  v31 = v29;

  v32 = a3[10];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (__int128 *)((char *)a2 + v32);
  v35 = *(uint64_t *)((char *)a2 + v32);
  if (*(_QWORD *)(a1 + v32))
  {
    if (v35)
    {
      *v33 = v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v36 = (void *)v33[1];
      v37 = (void *)*((_QWORD *)v34 + 1);
      v33[1] = v37;
      v38 = v37;

      v39 = (void *)v33[2];
      v40 = (void *)*((_QWORD *)v34 + 2);
      v33[2] = v40;
      v41 = v40;

    }
    else
    {
      sub_22CC06744(a1 + v32);
      v46 = *((_QWORD *)v34 + 2);
      *(_OWORD *)v33 = *v34;
      v33[2] = v46;
    }
  }
  else if (v35)
  {
    *v33 = v35;
    v42 = (void *)*((_QWORD *)v34 + 1);
    v33[1] = v42;
    v43 = (void *)*((_QWORD *)v34 + 2);
    v33[2] = v43;
    swift_bridgeObjectRetain();
    v44 = v42;
    v45 = v43;
  }
  else
  {
    v47 = *v34;
    v33[2] = *((_QWORD *)v34 + 2);
    *(_OWORD *)v33 = v47;
  }
  v48 = a3[11];
  v49 = (void *)(a1 + v48);
  v50 = (char *)a2 + v48;
  v51 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  v52 = v51(a1 + v48, 1, v25);
  v53 = v51((uint64_t)v50, 1, v25);
  if (v52)
  {
    if (!v53)
    {
      (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v49, v50, v25);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v49, 0, 1, v25);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  if (v53)
  {
    (*(void (**)(void *, uint64_t))(v26 + 8))(v49, v25);
LABEL_27:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    goto LABEL_28;
  }
  v27((uint64_t)v49, (uint64_t)v50, v25);
LABEL_28:
  v55 = a3[12];
  v56 = (void *)(a1 + v55);
  v57 = (char *)a2 + v55;
  v58 = v51(a1 + v55, 1, v25);
  v59 = v51((uint64_t)v57, 1, v25);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v56, v57, v25);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v56, 0, 1, v25);
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  if (v59)
  {
    (*(void (**)(void *, uint64_t))(v26 + 8))(v56, v25);
LABEL_33:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_34;
  }
  v27((uint64_t)v56, (uint64_t)v57, v25);
LABEL_34:
  v61 = a3[13];
  v62 = (void *)(a1 + v61);
  v63 = (char *)a2 + v61;
  v64 = v51(a1 + v61, 1, v25);
  v65 = v51((uint64_t)v63, 1, v25);
  if (!v64)
  {
    if (!v65)
    {
      v27((uint64_t)v62, (uint64_t)v63, v25);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v26 + 8))(v62, v25);
    goto LABEL_39;
  }
  if (v65)
  {
LABEL_39:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v26 + 16))(v62, v63, v25);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v62, 0, 1, v25);
  return a1;
}

uint64_t initializeWithTake for SleepWidgetViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(void *, const void *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  const void *v28;
  unsigned int (*v29)(const void *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  void *v32;
  const void *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  const void *v37;
  uint64_t v38;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[5];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_22CC64F20();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = a3[6];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  if (v11((const void *)(a2 + v13), 1, v9))
  {
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  v17 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v18 = (void *)(a1 + v17);
  v19 = (const void *)(a2 + v17);
  v20 = sub_22CC6504C();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(void (**)(void *, const void *, uint64_t))(v21 + 32);
  v22(v18, v19, v20);
  v23 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v24 = a1 + v23;
  v25 = a2 + v23;
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_QWORD *)(v24 + 16) = *(_QWORD *)(v25 + 16);
  v26 = a3[11];
  v27 = (void *)(a1 + v26);
  v28 = (const void *)(a2 + v26);
  v29 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48);
  if (v29((const void *)(a2 + v26), 1, v20))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    v22(v27, v28, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v27, 0, 1, v20);
  }
  v31 = a3[12];
  v32 = (void *)(a1 + v31);
  v33 = (const void *)(a2 + v31);
  if (v29((const void *)(a2 + v31), 1, v20))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    v22(v32, v33, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v32, 0, 1, v20);
  }
  v35 = a3[13];
  v36 = (void *)(a1 + v35);
  v37 = (const void *)(a2 + v35);
  if (v29(v37, 1, v20))
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    v22(v36, v37, v20);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v36, 0, 1, v20);
  }
  return a1;
}

uint64_t assignWithTake for SleepWidgetViewModel(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  void *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  void *v35;
  const void *v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t);
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  const void *v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  const void *v49;
  int v50;
  int v51;
  uint64_t v52;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[5];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_22CC64F20();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  v15 = a3[6];
  v16 = (void *)(a1 + v15);
  v17 = (void *)(a2 + v15);
  v18 = v11((void *)(a1 + v15), 1, v9);
  v19 = v11(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v16, v17, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v16, v9);
LABEL_12:
    sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v16, v17, v9);
LABEL_13:
  v21 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = sub_22CC6504C();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 40);
  v26(v22, v23, v24);
  v27 = a3[9];
  v28 = *(void **)(a1 + v27);
  *(_QWORD *)(a1 + v27) = *(_QWORD *)(a2 + v27);

  v29 = a3[10];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (_QWORD *)(a2 + v29);
  if (*(_QWORD *)(a1 + v29))
  {
    if (*v31)
    {
      *v30 = *v31;
      swift_bridgeObjectRelease();
      v32 = (void *)v30[1];
      v30[1] = v31[1];

      v33 = (void *)v30[2];
      v30[2] = v31[2];

      goto LABEL_18;
    }
    sub_22CC06744((uint64_t)v30);
  }
  *(_OWORD *)v30 = *(_OWORD *)v31;
  v30[2] = v31[2];
LABEL_18:
  v34 = a3[11];
  v35 = (void *)(a1 + v34);
  v36 = (const void *)(a2 + v34);
  v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  v38 = v37(a1 + v34, 1, v24);
  v39 = v37((uint64_t)v36, 1, v24);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(void *, const void *, uint64_t))(v25 + 32))(v35, v36, v24);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v35, 0, 1, v24);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v39)
  {
    (*(void (**)(void *, uint64_t))(v25 + 8))(v35, v24);
LABEL_23:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    goto LABEL_24;
  }
  v26((uint64_t)v35, (uint64_t)v36, v24);
LABEL_24:
  v41 = a3[12];
  v42 = (void *)(a1 + v41);
  v43 = (const void *)(a2 + v41);
  v44 = v37(a1 + v41, 1, v24);
  v45 = v37((uint64_t)v43, 1, v24);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(void *, const void *, uint64_t))(v25 + 32))(v42, v43, v24);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v42, 0, 1, v24);
      goto LABEL_30;
    }
    goto LABEL_29;
  }
  if (v45)
  {
    (*(void (**)(void *, uint64_t))(v25 + 8))(v42, v24);
LABEL_29:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    goto LABEL_30;
  }
  v26((uint64_t)v42, (uint64_t)v43, v24);
LABEL_30:
  v47 = a3[13];
  v48 = (void *)(a1 + v47);
  v49 = (const void *)(a2 + v47);
  v50 = v37(a1 + v47, 1, v24);
  v51 = v37((uint64_t)v49, 1, v24);
  if (!v50)
  {
    if (!v51)
    {
      v26((uint64_t)v48, (uint64_t)v49, v24);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v25 + 8))(v48, v24);
    goto LABEL_35;
  }
  if (v51)
  {
LABEL_35:
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(v25 + 32))(v48, v49, v24);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v48, 0, 1, v24);
  return a1;
}

uint64_t getEnumTagSinglePayload for SleepWidgetViewModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC56834(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = sub_22CC6504C();
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[8];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v8 = v13;
    v7 = *(_QWORD *)(v13 - 8);
    v9 = a3[11];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[9]);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for SleepWidgetViewModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC56938(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  sub_22CC082A8(0, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[5];
  }
  else
  {
    result = sub_22CC6504C();
    v9 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = result;
      v11 = a4[8];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(_QWORD *)(a1 + a4[9]) = (a2 - 1);
        return result;
      }
      sub_22CC082A8(0, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      v10 = v13;
      v9 = *(_QWORD *)(v13 - 8);
      v11 = a4[11];
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

void sub_22CC56A2C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_22CC082A8(319, &qword_254065338, (uint64_t (*)(uint64_t))MEMORY[0x24BDCBDE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
  {
    sub_22CC6504C();
    if (v1 <= 0x3F)
    {
      sub_22CC082A8(319, (unint64_t *)&qword_254065348, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t getEnumTagSinglePayload for SleepWidgetViewModel.ScheduleOccurrence(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
  {
    v6 = *a1;
    v7 = v6 >= 3;
    v8 = v6 - 3;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 3;
    if (a2 + 3 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_22CC56B80 + 4 * byte_22CC68D05[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for SleepWidgetViewModel.ScheduleOccurrence(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFD)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_22CC56C28 + 4 * byte_22CC68D0F[v5]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_22CC56C5C + 4 * byte_22CC68D0A[v5]))();
}

uint64_t sub_22CC56C5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22CC56C64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22CC56C6CLL);
  return result;
}

uint64_t sub_22CC56C78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22CC56C80);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_22CC56C84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22CC56C8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22CC56C98(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 3)
    return v1 - 2;
  else
    return 0;
}

_BYTE *sub_22CC56CAC(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 2;
  return result;
}

ValueMetadata *type metadata accessor for SleepWidgetViewModel.ScheduleOccurrence()
{
  return &type metadata for SleepWidgetViewModel.ScheduleOccurrence;
}

uint64_t storeEnumTagSinglePayload for SleepWidgetViewModel.AlarmState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_22CC56D18 + 4 * byte_22CC68D19[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_22CC56D4C + 4 * byte_22CC68D14[v4]))();
}

uint64_t sub_22CC56D4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_22CC56D54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x22CC56D5CLL);
  return result;
}

uint64_t sub_22CC56D68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x22CC56D70);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_22CC56D74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_22CC56D7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SleepWidgetViewModel.AlarmState()
{
  return &type metadata for SleepWidgetViewModel.AlarmState;
}

uint64_t sub_22CC56D98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v0 = sub_22CC652BC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC652A4();
  v4 = sub_22CC652B0();
  v5 = sub_22CC65C64();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v10 = v7;
    *(_DWORD *)v6 = 136446210;
    v9 = sub_22CC5C47C(0xD000000000000029, 0x800000022CC68EC0, &v10);
    sub_22CC65D00();
    _os_log_impl(&dword_22CC04000, v4, v5, "[%{public}s] Returning placeholder for sleep launcher widget...", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E306470](v7, -1, -1);
    MEMORY[0x22E306470](v6, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return sub_22CC65034();
}

uint64_t sub_22CC56F2C(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint8_t *v15;
  _QWORD v17[3];
  uint64_t v18;

  v6 = sub_22CC652BC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC652A4();
  v10 = sub_22CC652B0();
  v11 = sub_22CC65C64();
  if (os_log_type_enabled(v10, v11))
  {
    v17[1] = a3;
    v12 = swift_slowAlloc();
    v17[0] = a1;
    v13 = (uint8_t *)v12;
    v14 = swift_slowAlloc();
    v18 = v14;
    *(_DWORD *)v13 = 136446210;
    v17[2] = sub_22CC5C47C(0xD000000000000029, 0x800000022CC68EC0, &v18);
    sub_22CC65D00();
    _os_log_impl(&dword_22CC04000, v10, v11, "[%{public}s] Returning snapshot for sleep launcher widget", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E306470](v14, -1, -1);
    v15 = v13;
    a1 = v17[0];
    MEMORY[0x22E306470](v15, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return a2(a1);
}

uint64_t sub_22CC570E4(uint64_t a1, void (*a2)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void (*v28)(_QWORD);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v29 = a1;
  v3 = sub_22CC65AB4();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC57C5C();
  v7 = v6;
  v30 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_22CC652BC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC652A4();
  v14 = sub_22CC652B0();
  v15 = sub_22CC65C64();
  if (os_log_type_enabled(v14, v15))
  {
    v26 = v11;
    v16 = swift_slowAlloc();
    v28 = a2;
    v17 = (uint8_t *)v16;
    v18 = swift_slowAlloc();
    v25 = v10;
    v19 = v18;
    v32 = v18;
    v27 = v5;
    *(_DWORD *)v17 = 136446210;
    v31 = sub_22CC5C47C(0xD000000000000029, 0x800000022CC68EC0, &v32);
    sub_22CC65D00();
    _os_log_impl(&dword_22CC04000, v14, v15, "[%{public}s] Returning timeline for sleep launcher widget", v17, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E306470](v19, -1, -1);
    v20 = v17;
    a2 = v28;
    MEMORY[0x22E306470](v20, -1, -1);

    (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v25);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  sub_22CC57CD4();
  v21 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SleepLauncherComplicationEntry() - 8) + 80);
  v22 = (v21 + 32) & ~v21;
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_22CC663F0;
  sub_22CC57D28(v29, v23 + v22);
  sub_22CC65AA8();
  sub_22CC07B74(qword_255C3DA50, (uint64_t (*)(uint64_t))type metadata accessor for SleepLauncherComplicationEntry, (uint64_t)&unk_22CC68F64);
  sub_22CC65AE4();
  a2(v9);
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v9, v7);
}

uint64_t sub_22CC573E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22CC579FC(a1, a2, a3, "[%{public}s] Getting snapshot for sleep launcher widget...", (void (*)(_QWORD, _QWORD, _QWORD))sub_22CC56F2C);
}

uint64_t sub_22CC57404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22CC579FC(a1, a2, a3, "[%{public}s] Getting timeline for sleep launcher widget...", (void (*)(_QWORD, _QWORD, _QWORD))sub_22CC570E4);
}

uint64_t sub_22CC57428()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_22CC0BC9C;
  return sub_22CC65A6C();
}

SleepWidgetUI::SleepLauncherComplication __swiftcall SleepLauncherComplication.init()()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  SleepWidgetUI::SleepLauncherComplication result;

  v1 = v0;
  v2 = sub_22CC65B2C();
  *v1 = v2;
  v1[1] = (uint64_t)v3;
  result.kind._object = v3;
  result.kind._countAndFlagsBits = v2;
  return result;
}

uint64_t SleepLauncherComplication.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v15[2];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;

  v15[1] = a1;
  sub_22CC57708();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC577A4(0);
  v7 = v6;
  v15[0] = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC57760();
  sub_22CC5784C();
  swift_bridgeObjectRetain();
  sub_22CC65A84();
  if (qword_254065700 != -1)
    swift_once();
  v16 = sub_22CC64F74();
  v17 = v10;
  v11 = sub_22CC07B74(&qword_255C3DA40, (uint64_t (*)(uint64_t))sub_22CC57708, MEMORY[0x24BDFB170]);
  v12 = sub_22CC08C70();
  v13 = MEMORY[0x24BEE0D00];
  sub_22CC654FC();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_22CC3AEC0();
  v16 = v2;
  v17 = v13;
  v18 = v11;
  v19 = v12;
  swift_getOpaqueTypeConformance2();
  sub_22CC654E4();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v15[0] + 8))(v9, v7);
}

void sub_22CC57708()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3DA28)
  {
    sub_22CC57760();
    v0 = sub_22CC65A90();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3DA28);
  }
}

unint64_t sub_22CC57760()
{
  unint64_t result;

  result = qword_255C3DA30;
  if (!qword_255C3DA30)
  {
    result = MEMORY[0x22E3063F8](&unk_22CC68030, &type metadata for SleepLauncherComplicationView);
    atomic_store(result, (unint64_t *)&qword_255C3DA30);
  }
  return result;
}

void sub_22CC577A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!qword_255C3DA38)
  {
    sub_22CC57708();
    v3 = v2;
    v4 = sub_22CC07B74(&qword_255C3DA40, (uint64_t (*)(uint64_t))sub_22CC57708, MEMORY[0x24BDFB170]);
    v5 = sub_22CC08C70();
    v8[0] = v3;
    v8[1] = MEMORY[0x24BEE0D00];
    v8[2] = v4;
    v8[3] = v5;
    v6 = MEMORY[0x22E3063BC](a1, v8, MEMORY[0x24BDFABC8], 0);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_255C3DA38);
  }
}

unint64_t sub_22CC5784C()
{
  unint64_t result;

  result = qword_255C3DA48;
  if (!qword_255C3DA48)
  {
    result = MEMORY[0x22E3063F8](&unk_22CC68F0C, &type metadata for SleepLauncherComplicationTimelineProvider);
    atomic_store(result, (unint64_t *)&qword_255C3DA48);
  }
  return result;
}

uint64_t sub_22CC57890@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_22CC65B2C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_22CC578C4()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for SleepLauncherComplication()
{
  return &type metadata for SleepLauncherComplication;
}

uint64_t sub_22CC578E4()
{
  sub_22CC577A4(255);
  sub_22CC57708();
  sub_22CC07B74(&qword_255C3DA40, (uint64_t (*)(uint64_t))sub_22CC57708, MEMORY[0x24BDFB170]);
  sub_22CC08C70();
  swift_getOpaqueTypeConformance2();
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for SleepLauncherComplicationTimelineProvider()
{
  return &type metadata for SleepLauncherComplicationTimelineProvider;
}

uint64_t sub_22CC57994()
{
  return sub_22CC07B74(qword_255C3DA50, (uint64_t (*)(uint64_t))type metadata accessor for SleepLauncherComplicationEntry, (uint64_t)&unk_22CC68F64);
}

uint64_t type metadata accessor for SleepLauncherComplicationEntry()
{
  uint64_t result;

  result = qword_255C3DAD0;
  if (!qword_255C3DAD0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22CC579FC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4, void (*a5)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_QWORD, _QWORD, _QWORD);
  uint64_t v29;
  uint64_t v30;

  v9 = type metadata accessor for SleepLauncherComplicationEntry();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_22CC652BC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC652A4();
  v16 = sub_22CC652B0();
  v17 = sub_22CC65C64();
  if (os_log_type_enabled(v16, v17))
  {
    v26 = v12;
    v18 = swift_slowAlloc();
    v27 = a2;
    v19 = (uint8_t *)v18;
    v20 = swift_slowAlloc();
    v28 = a5;
    v21 = v20;
    v30 = v20;
    v25 = a4;
    *(_DWORD *)v19 = 136446210;
    v29 = sub_22CC5C47C(0xD000000000000029, 0x800000022CC68EC0, &v30);
    sub_22CC65D00();
    _os_log_impl(&dword_22CC04000, v16, v17, v25, v19, 0xCu);
    swift_arrayDestroy();
    v22 = v21;
    a5 = v28;
    MEMORY[0x22E306470](v22, -1, -1);
    v23 = v19;
    a2 = v27;
    MEMORY[0x22E306470](v23, -1, -1);

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v26);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  swift_retain();
  sub_22CC65034();
  a5(v11, a2, a3);
  sub_22CC57C20((uint64_t)v11);
  return swift_release();
}

uint64_t sub_22CC57C20(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SleepLauncherComplicationEntry();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_22CC57C5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3DA68)
  {
    type metadata accessor for SleepLauncherComplicationEntry();
    sub_22CC07B74(qword_255C3DA50, (uint64_t (*)(uint64_t))type metadata accessor for SleepLauncherComplicationEntry, (uint64_t)&unk_22CC68F64);
    v0 = sub_22CC65AF0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3DA68);
  }
}

void sub_22CC57CD4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3DA70)
  {
    type metadata accessor for SleepLauncherComplicationEntry();
    v0 = sub_22CC65E98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3DA70);
  }
}

uint64_t sub_22CC57D28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SleepLauncherComplicationEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22CC57D6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_22CC6504C();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_22CC57DA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_22CC6504C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_22CC57DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_22CC6504C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_22CC57E30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_22CC6504C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_22CC57E74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_22CC6504C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_22CC57EB8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC57EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_22CC6504C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_22CC57F00()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC57F0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_22CC6504C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_22CC57F4C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_22CC6504C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_22CC57FB4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC57FC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SleepWidgetViewModel();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_22CC57FFC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC58008(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SleepWidgetViewModel();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for UpcomingSleepWidgetCircularView()
{
  uint64_t result;

  result = qword_2540664D0;
  if (!qword_2540664D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_22CC58084(uint64_t a1)
{
  uint64_t result;

  result = sub_22CC07B74(qword_255C3D8B0, (uint64_t (*)(uint64_t))type metadata accessor for UpcomingSleepWidgetCircularView, (uint64_t)&unk_22CC68FFC);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22CC580C0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22CC580D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v25 = a2;
  v3 = sub_22CC65274();
  v23 = *(_QWORD *)(v3 - 8);
  v24 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for UpcomingSleepWidgetCircularView();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC1E530(0, (unint64_t *)&qword_254065348, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v22 - v10;
  v12 = sub_22CC6504C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_22CC65994();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC53D88((uint64_t)v11);
  sub_22CC583E8(a1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    v20 = type metadata accessor for SleepWidgetViewModel();
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, &v8[*(int *)(v20 + 32)], v12);
    sub_22CC5842C((uint64_t)v8);
    sub_22CC3ED60((uint64_t)v11);
  }
  else
  {
    sub_22CC5842C((uint64_t)v8);
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  }
  sub_22CC65268();
  sub_22CC65238();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v24);
  if (qword_254066798 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  sub_22CC65988();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v17 + 32))(v25, v19, v16);
}

uint64_t sub_22CC58348@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  *a1 = sub_22CC65910();
  a1[1] = v3;
  sub_22CC58384();
  return sub_22CC580D0(v1, (uint64_t)a1 + *(int *)(v4 + 44));
}

void sub_22CC58384()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3DB58)
  {
    sub_22CC65994();
    v0 = sub_22CC65310();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3DB58);
  }
}

uint64_t sub_22CC583E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UpcomingSleepWidgetCircularView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22CC5842C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UpcomingSleepWidgetCircularView();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22CC58468()
{
  return sub_22CC07B74(&qword_255C3DB60, (uint64_t (*)(uint64_t))sub_22CC58494, MEMORY[0x24BDF4750]);
}

void sub_22CC58494()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3DB68)
  {
    sub_22CC65994();
    sub_22CC07B74(&qword_255C3DB70, (uint64_t (*)(uint64_t))MEMORY[0x24BE49DB0], MEMORY[0x24BE49DA0]);
    v0 = sub_22CC658C8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3DB68);
  }
}

uint64_t EnvironmentValues.sleepWidgetFamily.getter()
{
  sub_22CC2B698();
  return sub_22CC65478();
}

uint64_t EnvironmentValues.sleepWidgetFamily.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_22CC65A3C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  sub_22CC2B698();
  sub_22CC65484();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t sub_22CC585E8()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_22CC65A3C();
  __swift_allocate_value_buffer(v0, qword_254066560);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_254066560);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 - 8) + 104))(v1, *MEMORY[0x24BDFAEF0], v0);
}

uint64_t sub_22CC58640@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_254066578 != -1)
    swift_once();
  v2 = sub_22CC65A3C();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_254066560);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_22CC586B0()
{
  sub_22CC2A508();
  return sub_22CC6531C();
}

void sub_22CC58700()
{
  id v0;
  void *v1;
  unsigned __int8 v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (v0)
  {
    v1 = v0;
    v2 = objc_msgSend(v0, sel_isAppleWatch);

    byte_255C3DB78 = v2;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_22CC58760@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  if (qword_255C3C910 != -1)
    result = swift_once();
  *a1 = byte_255C3DB78;
  return result;
}

uint64_t sub_22CC587B0()
{
  return sub_22CC6531C();
}

void (*EnvironmentValues.sleepWidgetFamily.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_22CC65A3C();
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  v3[5] = malloc(v6);
  v3[6] = sub_22CC2B698();
  sub_22CC65478();
  return sub_22CC58860;
}

void sub_22CC58860(uint64_t a1, char a2)
{
  _QWORD *v3;
  void (*v4)(_QWORD, _QWORD, _QWORD);
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void *, uint64_t);

  v3 = *(_QWORD **)a1;
  v4 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)a1 + 16) + 16);
  v4(*(_QWORD *)(*(_QWORD *)a1 + 32), v3[5], v3[1]);
  v5 = (void *)v3[5];
  v6 = (void *)v3[3];
  v7 = (void *)v3[4];
  v8 = v3[1];
  v9 = v3[2];
  if ((a2 & 1) != 0)
  {
    v4(v3[3], v3[4], v3[1]);
    sub_22CC65484();
    v10 = *(void (**)(void *, uint64_t))(v9 + 8);
    v10(v7, v8);
  }
  else
  {
    sub_22CC65484();
    v10 = *(void (**)(void *, uint64_t))(v9 + 8);
  }
  v10(v5, v8);
  free(v5);
  free(v7);
  free(v6);
  free(v3);
}

uint64_t EnvironmentValues.isAppleWatch.getter()
{
  unsigned __int8 v1;

  sub_22CC24490();
  sub_22CC65478();
  return v1;
}

uint64_t EnvironmentValues.isAppleWatch.setter()
{
  sub_22CC24490();
  return sub_22CC65484();
}

uint64_t (*EnvironmentValues.isAppleWatch.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = sub_22CC24490();
  sub_22CC65478();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a1 + 17);
  return sub_22CC58A14;
}

uint64_t sub_22CC58A14(uint64_t a1)
{
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a1 + 16);
  return sub_22CC65484();
}

ValueMetadata *type metadata accessor for IsAppleWatchKey()
{
  return &type metadata for IsAppleWatchKey;
}

ValueMetadata *type metadata accessor for SleepWidgetFamilyKey()
{
  return &type metadata for SleepWidgetFamilyKey;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

id SleepWidgetViewModelProvider.init(healthStore:sleepStore:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD3968]), sel_init);
  *a3 = a1;
  a3[1] = a2;
  a3[2] = result;
  return result;
}

uint64_t SleepWidgetViewModelProvider.currentSleepStageWidgetViewModel(showLiveContent:completion:)(int a1, void (*a2)(void **, uint64_t), void *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(void **, uint64_t);
  int v28;
  id v29;
  void *v30;
  uint64_t v31;
  void *v32[3];

  LODWORD(v6) = a1;
  v7 = sub_22CC652BC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void **)(v3 + 8);
  v12 = *(void **)(v3 + 16);
  v29 = *(id *)v3;
  v30 = v12;
  sub_22CC652A4();
  v13 = sub_22CC652B0();
  v14 = sub_22CC65C64();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v28 = v6;
    v6 = v15;
    v16 = (void *)swift_slowAlloc();
    v27 = a2;
    v17 = v16;
    v32[0] = v16;
    *(_DWORD *)v6 = 136446466;
    v31 = sub_22CC5C47C(0xD00000000000001CLL, 0x800000022CC690E0, (uint64_t *)v32);
    v26 = v7;
    sub_22CC65D00();
    *(_WORD *)(v6 + 12) = 1024;
    LODWORD(v31) = v28 & 1;
    sub_22CC65D00();
    _os_log_impl(&dword_22CC04000, v13, v14, "[%{public}s] getting sleep stage widget view model (live: %{BOOL}d)...", (uint8_t *)v6, 0x12u);
    swift_arrayDestroy();
    v18 = v17;
    a2 = v27;
    MEMORY[0x22E306470](v18, -1, -1);
    v19 = v6;
    LOBYTE(v6) = v28;
    MEMORY[0x22E306470](v19, -1, -1);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v26);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  v20 = v30;
  v32[0] = v29;
  v32[1] = v11;
  v32[2] = v30;
  v21 = v29;
  v22 = v11;
  v23 = v20;
  swift_retain();
  sub_22CC5CCE4(v6 & 1, 1, 0, 6, v32, v21, v22, v23, 3u, a2, a3);

  return swift_release();
}

void SleepWidgetViewModelProvider.currentSleepWidgetViewModel(showLiveContent:completion:)(int a1, void (*a2)(char *, void *), uint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void (*v13)(uint64_t, uint64_t, uint64_t, void *);
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, void *);
  void *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t aBlock;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t, void *);
  void *v41;
  uint64_t (*v42)(uint64_t, uint64_t, void *);
  uint64_t v43;

  v35 = a1;
  v6 = sub_22CC6504C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v32 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_22CC652BC();
  v33 = *(_QWORD *)(v9 - 8);
  v34 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (void *)v3[1];
  v36 = *v3;
  v13 = (void (*)(uint64_t, uint64_t, uint64_t, void *))v3[2];
  sub_22CC652A4();
  v14 = sub_22CC652B0();
  v15 = sub_22CC65C64();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v30 = v12;
    v17 = v16;
    v18 = swift_slowAlloc();
    v31 = a3;
    v19 = v18;
    aBlock = v18;
    *(_DWORD *)v17 = 136446466;
    v37 = sub_22CC5C47C(0xD00000000000001CLL, 0x800000022CC690E0, &aBlock);
    sub_22CC65D00();
    *(_WORD *)(v17 + 12) = 1024;
    v20 = v35;
    LODWORD(v37) = v35 & 1;
    sub_22CC65D00();
    _os_log_impl(&dword_22CC04000, v14, v15, "[%{public}s] getting sleep widget view model (live: %{BOOL}d)...", (uint8_t *)v17, 0x12u);
    swift_arrayDestroy();
    v21 = v19;
    a3 = v31;
    MEMORY[0x22E306470](v21, -1, -1);
    v22 = v17;
    v12 = v30;
    MEMORY[0x22E306470](v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v34);
    if ((v20 & 1) == 0)
    {
LABEL_3:
      aBlock = v36;
      v39 = (uint64_t)v12;
      v40 = v13;
      v23 = (uint64_t)v32;
      sub_22CC65040();
      SleepWidgetViewModelProvider.sleepWidgetViewModel(showLiveContent:state:date:completion:)(0, 6, v23, a2, a3);
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v23, v6);
      return;
    }
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v34);
    if ((v35 & 1) == 0)
      goto LABEL_3;
  }
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = a2;
  *(_QWORD *)(v24 + 24) = a3;
  v25 = (void *)v36;
  *(_QWORD *)(v24 + 32) = v36;
  *(_QWORD *)(v24 + 40) = v12;
  *(_QWORD *)(v24 + 48) = v13;
  *(_BYTE *)(v24 + 56) = 1;
  v42 = sub_22CC5D75C;
  v43 = v24;
  aBlock = MEMORY[0x24BDAC760];
  v39 = 1107296256;
  v40 = sub_22CC5988C;
  v41 = &block_descriptor;
  v26 = _Block_copy(&aBlock);
  swift_retain();
  v27 = v25;
  v28 = v12;
  v29 = v13;
  swift_release();
  objc_msgSend(v28, sel_sleepWidgetStateWithCompletion_, v26);
  _Block_release(v26);
}

uint64_t sub_22CC590B0(uint64_t a1, uint64_t a2, id a3, void (*a4)(char *, void *), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  NSObject *v27;
  os_log_type_t v28;
  _BOOL4 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  char *v39;
  id v40;
  id v41;
  id v42;
  NSObject *v43;
  os_log_type_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t, uint64_t, uint64_t);
  char *v62;
  char *v63;
  NSObject *v64;
  os_log_type_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  id v70;
  id v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  int *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  void (*v84)(char *, void *);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  uint64_t v90[4];

  v75 = a8;
  v74 = a7;
  v73 = a6;
  v87 = a5;
  v84 = a4;
  v11 = type metadata accessor for SleepWidgetViewModel();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v72 - v15;
  v17 = sub_22CC6504C();
  v85 = *(_QWORD *)(v17 - 8);
  v86 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v72 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_22CC652BC();
  v81 = *(_QWORD *)(v19 - 8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v20);
  v82 = (char *)&v72 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v72 - v25;
  sub_22CC652A4();
  v27 = sub_22CC652B0();
  v28 = sub_22CC65C64();
  v29 = os_log_type_enabled(v27, v28);
  v88 = a3;
  v79 = (int *)v11;
  v80 = v16;
  v83 = v22;
  v78 = v14;
  v76 = a1;
  if (v29)
  {
    v30 = swift_slowAlloc();
    v31 = swift_slowAlloc();
    v77 = v19;
    v32 = v31;
    v90[0] = v31;
    *(_DWORD *)v30 = 136446466;
    v89 = sub_22CC5C47C(0xD00000000000001CLL, 0x800000022CC690E0, v90);
    sub_22CC65D00();
    *(_WORD *)(v30 + 12) = 2080;
    v33 = (id)NSStringFromHKSPSleepWidgetState();
    v34 = sub_22CC65B2C();
    v36 = v35;

    v89 = sub_22CC5C47C(v34, v36, v90);
    sub_22CC65D00();
    a3 = v88;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_22CC04000, v27, v28, "[%{public}s] sleep widget state: %s", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    v37 = v32;
    v19 = v77;
    MEMORY[0x22E306470](v37, -1, -1);
    MEMORY[0x22E306470](v30, -1, -1);
  }

  v38 = *(void (**)(char *, uint64_t))(v81 + 8);
  v38(v26, v19);
  v39 = v82;
  if (a3)
  {
    v40 = a3;
    sub_22CC652A4();
    v41 = a3;
    v42 = a3;
    v43 = sub_22CC652B0();
    v44 = sub_22CC65C4C();
    v45 = os_log_type_enabled(v43, v44);
    v82 = (char *)v38;
    if (v45)
    {
      v46 = swift_slowAlloc();
      v47 = swift_slowAlloc();
      v90[0] = v47;
      *(_DWORD *)v46 = 136446466;
      v89 = sub_22CC5C47C(0xD00000000000001CLL, 0x800000022CC690E0, v90);
      sub_22CC65D00();
      *(_WORD *)(v46 + 12) = 2082;
      swift_getErrorValue();
      v48 = sub_22CC65ED4();
      v89 = sub_22CC5C47C(v48, v49, v90);
      sub_22CC65D00();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_22CC04000, v43, v44, "[%{public}s] Error getting sleepWidgetState: %{public}s", (uint8_t *)v46, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x22E306470](v47, -1, -1);
      v50 = v46;
      v38 = (void (*)(char *, uint64_t))v82;
      MEMORY[0x22E306470](v50, -1, -1);
    }
    else
    {

    }
    v38(v39, v19);
    v54 = (uint64_t)v78;
    v53 = v79;
    v55 = v80;
    v56 = &v80[v79[5]];
    v57 = sub_22CC64F20();
    v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56);
    v58(v56, 1, 1, v57);
    v58(&v55[v53[6]], 1, 1, v57);
    sub_22CC65040();
    v59 = v53[9];
    *(_QWORD *)&v55[v59] = objc_msgSend(objc_allocWithZone((Class)sub_22CC651F0()), sel_init);
    v60 = v86;
    v61 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v85 + 56);
    v61(&v55[v53[11]], 1, 1, v86);
    v61(&v55[v53[12]], 1, 1, v60);
    v61(&v55[v53[13]], 1, 1, v60);
    *(_QWORD *)v55 = 0;
    v55[8] = 1;
    v55[v53[7]] = 0;
    v62 = &v55[v53[10]];
    *(_QWORD *)v62 = 0;
    *((_QWORD *)v62 + 1) = 0;
    *((_QWORD *)v62 + 2) = 0;
    v63 = v83;
    sub_22CC652A4();
    sub_22CC5D8D0((uint64_t)v55, v54);
    v64 = sub_22CC652B0();
    v65 = sub_22CC65C64();
    if (os_log_type_enabled(v64, v65))
    {
      v66 = swift_slowAlloc();
      v67 = swift_slowAlloc();
      v90[0] = v67;
      *(_DWORD *)v66 = 136446466;
      v89 = sub_22CC5C47C(0xD00000000000001CLL, 0x800000022CC690E0, v90);
      sub_22CC65D00();
      *(_WORD *)(v66 + 12) = 2080;
      v77 = v19;
      v68 = SleepWidgetViewModel.description.getter();
      v89 = sub_22CC5C47C(v68, v69, v90);
      sub_22CC65D00();
      swift_bridgeObjectRelease();
      sub_22CC5D914(v54);
      _os_log_impl(&dword_22CC04000, v64, v65, "[%{public}s] viewmodel=%s", (uint8_t *)v66, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x22E306470](v67, -1, -1);
      MEMORY[0x22E306470](v66, -1, -1);

      ((void (*)(char *, uint64_t))v82)(v83, v77);
    }
    else
    {
      sub_22CC5D914(v54);

      v38(v63, v19);
    }
    v70 = v88;
    v71 = v88;
    v84(v55, v70);

    return sub_22CC5D914((uint64_t)v55);
  }
  else
  {
    v90[0] = v73;
    v90[1] = v74;
    v90[2] = v75;
    v51 = (uint64_t)v72;
    sub_22CC65040();
    SleepWidgetViewModelProvider.sleepWidgetViewModel(showLiveContent:state:date:completion:)(a9 & 1, v76, v51, v84, v87);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v85 + 8))(v51, v86);
  }
}

void sub_22CC5988C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void (*v7)(uint64_t, uint64_t, void *);
  id v8;

  v7 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  swift_retain();
  v8 = a4;
  v7(a2, a3, a4);
  swift_release();

}

void SleepWidgetViewModelProvider.sleepWidgetViewModel(showLiveContent:state:date:completion:)(int a1, uint64_t a2, uint64_t a3, void (*a4)(char *, void *), uint64_t a5)
{
  uint64_t v5;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  char *v27;
  void *v28;
  void *v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, _QWORD *);
  _QWORD *v44;
  uint64_t v45;
  id v46;
  void *v47;
  id v48;
  id v49;
  NSObject *v50;
  os_log_type_t v51;
  uint64_t v52;
  void *v53;
  id v54;
  uint64_t v55;
  unint64_t v56;
  void (*v57)(char *, uint64_t);
  char *v58;
  char *v59;
  void *v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  NSObject *v66;
  os_log_type_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  os_log_t v73;
  void *v74;
  char *v75;
  uint64_t v76;
  _QWORD *v77;
  void *v78;
  _QWORD *v79;
  void *v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  char *v84;
  void *v85;
  char *v86;
  uint64_t v87;
  id v88;
  id v89;
  id v90;
  id v91;
  void (*v92)(char *, uint64_t);
  _QWORD *v93;
  char *v94;
  uint64_t v95;
  void (*v96)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v97;
  void (*v98)(char *, uint64_t, uint64_t, _QWORD *);
  char *v99;
  char *v100;
  uint64_t v101;
  NSObject *v102;
  os_log_type_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  id v108;
  os_log_t v109;
  void *v110;
  void *v111;
  void *v112;
  void *v113;
  void (*v114)(char *, uint64_t);
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void (*v125)(char *, void *);
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  id v129[5];

  v125 = a4;
  v122 = a3;
  v123 = a2;
  v129[3] = *(id *)MEMORY[0x24BDAC8D0];
  v8 = (int *)type metadata accessor for SleepWidgetViewModel();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v118 = (char *)&v109 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v109 - v11;
  v127 = (_QWORD *)sub_22CC6504C();
  v13 = *(v127 - 1);
  v14 = MEMORY[0x24BDAC7A8](v127);
  v120 = v15;
  v121 = (char *)&v109 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v119 = (char *)&v109 - v16;
  v17 = sub_22CC652BC();
  v18 = MEMORY[0x24BDAC7A8](v17);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v109 - v20;
  v22 = MEMORY[0x24BDAC7A8](v19);
  v117 = (char *)&v109 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)&v109 - v26;
  v28 = *(void **)v5;
  v29 = *(void **)(v5 + 8);
  v30 = *(void **)(v5 + 16);
  LODWORD(v124) = a1;
  v126 = a5;
  if ((a1 & 1) == 0)
  {
    v118 = 0;
    v119 = 0;
    v43 = *(void (**)(char *, uint64_t, _QWORD *))(v13 + 16);
    v44 = v127;
    v45 = v122;
LABEL_13:
    v129[0] = v28;
    v129[1] = v29;
    v129[2] = v30;
    v75 = v121;
    v76 = v45;
    v77 = v44;
    v78 = v30;
    v79 = v44;
    v80 = v28;
    v43(v121, v76, v77);
    v81 = v13;
    v82 = (*(unsigned __int8 *)(v13 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v83 = (v120 + v82 + 7) & 0xFFFFFFFFFFFFFFF8;
    v84 = (char *)swift_allocObject();
    *((_QWORD *)v84 + 2) = v80;
    *((_QWORD *)v84 + 3) = v29;
    v85 = v119;
    *((_QWORD *)v84 + 4) = v78;
    *((_QWORD *)v84 + 5) = v85;
    *((_QWORD *)v84 + 6) = v123;
    (*(void (**)(char *, char *, _QWORD *))(v81 + 32))(&v84[v82], v75, v79);
    v86 = &v84[v83];
    v87 = v126;
    *(_QWORD *)v86 = v125;
    *((_QWORD *)v86 + 1) = v87;
    v88 = v85;
    swift_retain();
    v89 = v80;
    v90 = v29;
    v91 = v78;
    sub_22CC5B078(v124 & 1, 7, 0, 0, (void (*)(uint64_t *, _QWORD))sub_22CC5D850, (uint64_t)v84);

    swift_release();
    return;
  }
  v114 = v25;
  v110 = v24;
  v111 = v28;
  v113 = v30;
  v115 = v13;
  v129[0] = 0;
  v112 = v29;
  v31 = objc_msgSend(v29, sel_sleepScheduleModelWithError_, v129);
  v116 = v17;
  if (v31)
  {
    v32 = v31;
    v33 = v129[0];
    sub_22CC652A4();
    v34 = v32;
    v35 = sub_22CC652B0();
    v36 = sub_22CC65C64();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc();
      v38 = (void *)swift_slowAlloc();
      v129[0] = v38;
      *(_DWORD *)v37 = 136446466;
      v128 = sub_22CC5C47C(0xD00000000000001CLL, 0x800000022CC690E0, (uint64_t *)v129);
      sub_22CC65D00();
      *(_WORD *)(v37 + 12) = 2082;
      v128 = (uint64_t)v32;
      sub_22CC5D950(0, &qword_254066108, &qword_254066100);
      v39 = v34;
      v40 = sub_22CC65B44();
      v128 = sub_22CC5C47C(v40, v41, (uint64_t *)v129);
      sub_22CC65D00();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22CC04000, v35, v36, "[%{public}s] fetched schedule model: %{public}s", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x22E306470](v38, -1, -1);
      v42 = v37;
      v17 = v116;
      MEMORY[0x22E306470](v42, -1, -1);

    }
    else
    {

    }
    v57 = (void (*)(char *, uint64_t))*((_QWORD *)v114 + 1);
    v57(v27, v17);
    v45 = v122;
    v58 = v119;
    v59 = (char *)v34;
    v60 = (void *)sub_22CC6501C();
    v61 = (char *)objc_msgSend(v59, sel_upcomingResolvedOccurrenceAfterDate_, v60);
    v118 = v59;

    v119 = v61;
    v62 = v61;
    v63 = v117;
    sub_22CC652A4();
    v64 = v115;
    v43 = *(void (**)(char *, uint64_t, _QWORD *))(v115 + 16);
    v44 = v127;
    v43(v58, v45, v127);
    v65 = v62;
    v66 = sub_22CC652B0();
    v67 = sub_22CC65C64();
    LODWORD(v122) = v67;
    if (os_log_type_enabled(v66, v67))
    {
      v68 = swift_slowAlloc();
      v110 = (void *)swift_slowAlloc();
      v129[0] = v110;
      *(_DWORD *)v68 = 136446722;
      v109 = v66;
      v128 = sub_22CC5C47C(0xD00000000000001CLL, 0x800000022CC690E0, (uint64_t *)v129);
      v114 = v57;
      sub_22CC65D00();
      *(_WORD *)(v68 + 12) = 2080;
      v69 = sub_22CC64FEC();
      v128 = sub_22CC5C47C(v69, v70, (uint64_t *)v129);
      v44 = v127;
      sub_22CC65D00();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, _QWORD *))(v64 + 8))(v58, v44);
      *(_WORD *)(v68 + 22) = 2082;
      v128 = (uint64_t)v119;
      sub_22CC5D950(0, &qword_254066118, &qword_254066110);
      v71 = sub_22CC65CE8();
      v128 = sub_22CC5C47C(v71, v72, (uint64_t *)v129);
      sub_22CC65D00();

      swift_bridgeObjectRelease();
      v73 = v109;
      _os_log_impl(&dword_22CC04000, v109, (os_log_type_t)v122, "[%{public}s] upcomingResolvedOccurrence after %s is: %{public}s", (uint8_t *)v68, 0x20u);
      v74 = v110;
      swift_arrayDestroy();
      MEMORY[0x22E306470](v74, -1, -1);
      MEMORY[0x22E306470](v68, -1, -1);

      v114(v63, v116);
    }
    else
    {
      (*(void (**)(char *, _QWORD *))(v64 + 8))(v58, v44);

      v57(v63, v17);
    }
    v13 = v64;
    v30 = v113;
    v29 = v112;
    v28 = v111;
    goto LABEL_13;
  }
  v46 = v129[0];
  v47 = (void *)sub_22CC64FC8();

  swift_willThrow();
  sub_22CC652A4();
  v48 = v47;
  v49 = v47;
  v50 = sub_22CC652B0();
  v51 = sub_22CC65C4C();
  if (os_log_type_enabled(v50, v51))
  {
    v52 = swift_slowAlloc();
    v53 = (void *)swift_slowAlloc();
    v129[0] = v53;
    *(_DWORD *)v52 = 136446466;
    v128 = sub_22CC5C47C(0xD00000000000001CLL, 0x800000022CC690E0, (uint64_t *)v129);
    sub_22CC65D00();
    *(_WORD *)(v52 + 12) = 2082;
    v128 = (uint64_t)v47;
    v54 = v47;
    sub_22CC0DAF0();
    v55 = sub_22CC65B44();
    v128 = sub_22CC5C47C(v55, v56, (uint64_t *)v129);
    sub_22CC65D00();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22CC04000, v50, v51, "[%{public}s] error getting schedule model: %{public}s", (uint8_t *)v52, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x22E306470](v53, -1, -1);
    MEMORY[0x22E306470](v52, -1, -1);
  }
  else
  {

  }
  v92 = (void (*)(char *, uint64_t))*((_QWORD *)v114 + 1);
  v92(v21, v116);
  v93 = v127;
  v94 = &v12[v8[5]];
  v95 = sub_22CC64F20();
  v96 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 56);
  v96(v94, 1, 1, v95);
  v96(&v12[v8[6]], 1, 1, v95);
  sub_22CC65040();
  v97 = v8[9];
  *(_QWORD *)&v12[v97] = objc_msgSend(objc_allocWithZone((Class)sub_22CC651F0()), sel_init);
  v98 = *(void (**)(char *, uint64_t, uint64_t, _QWORD *))(v115 + 56);
  v98(&v12[v8[11]], 1, 1, v93);
  v98(&v12[v8[12]], 1, 1, v93);
  v98(&v12[v8[13]], 1, 1, v93);
  *(_QWORD *)v12 = 0;
  v12[8] = 1;
  v12[v8[7]] = 0;
  v99 = &v12[v8[10]];
  *(_QWORD *)v99 = 0;
  *((_QWORD *)v99 + 1) = 0;
  *((_QWORD *)v99 + 2) = 0;
  v100 = (char *)v110;
  sub_22CC652A4();
  v101 = (uint64_t)v118;
  sub_22CC5D8D0((uint64_t)v12, (uint64_t)v118);
  v102 = sub_22CC652B0();
  v103 = sub_22CC65C64();
  if (os_log_type_enabled(v102, v103))
  {
    v104 = swift_slowAlloc();
    v124 = swift_slowAlloc();
    v129[0] = (id)v124;
    *(_DWORD *)v104 = 136446466;
    v128 = sub_22CC5C47C(0xD00000000000001CLL, 0x800000022CC690E0, (uint64_t *)v129);
    sub_22CC65D00();
    *(_WORD *)(v104 + 12) = 2080;
    v127 = v92;
    v105 = SleepWidgetViewModel.description.getter();
    v128 = sub_22CC5C47C(v105, v106, (uint64_t *)v129);
    sub_22CC65D00();
    swift_bridgeObjectRelease();
    sub_22CC5D914(v101);
    _os_log_impl(&dword_22CC04000, v102, v103, "[%{public}s] viewmodel=%s", (uint8_t *)v104, 0x16u);
    v107 = v124;
    swift_arrayDestroy();
    MEMORY[0x22E306470](v107, -1, -1);
    MEMORY[0x22E306470](v104, -1, -1);

    ((void (*)(char *, uint64_t))v127)(v100, v116);
  }
  else
  {
    sub_22CC5D914(v101);

    v92(v100, v116);
  }
  v108 = v47;
  v125(v12, v47);

  sub_22CC5D914((uint64_t)v12);
}

uint64_t sub_22CC5A508(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, void (*a9)(char *, uint64_t), uint64_t a10)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  void *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  unint64_t v47[3];
  uint64_t v48[3];

  v40 = a8;
  v41 = a7;
  v45 = a10;
  v46 = a2;
  v44 = a9;
  v12 = sub_22CC652BC();
  v42 = *(_QWORD *)(v12 - 8);
  v43 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v39 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_22CC6504C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for SleepWidgetViewModel();
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v39 - v22;
  v25 = (void *)a1[1];
  v26 = (void *)a1[2];
  v47[0] = *a1;
  v24 = (void *)v47[0];
  v47[1] = (unint64_t)v25;
  v47[2] = (unint64_t)v26;
  v27 = a6;
  sub_22CC5A81C(v47);
  v48[0] = (uint64_t)v24;
  v48[1] = (uint64_t)v25;
  v48[2] = (uint64_t)v26;
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v29 = v39;
  v28(v17, v40, v14);
  sub_22CC0812C(v24, v25, v26);
  v30 = a6;
  v31 = (uint64_t)v21;
  SleepWidgetViewModel.init(resolvedOccurrence:summaryResults:state:now:)(v30, v48, v41, 0, (uint64_t)v17, (uint64_t)v23);
  sub_22CC652A4();
  sub_22CC5D8D0((uint64_t)v23, (uint64_t)v21);
  v32 = sub_22CC652B0();
  v33 = sub_22CC65C64();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = swift_slowAlloc();
    v35 = swift_slowAlloc();
    v48[0] = v35;
    *(_DWORD *)v34 = 136446466;
    v47[0] = sub_22CC5C47C(0xD00000000000001CLL, 0x800000022CC690E0, v48);
    sub_22CC65D00();
    *(_WORD *)(v34 + 12) = 2080;
    v36 = SleepWidgetViewModel.description.getter();
    v47[0] = sub_22CC5C47C(v36, v37, v48);
    sub_22CC65D00();
    swift_bridgeObjectRelease();
    sub_22CC5D914(v31);
    _os_log_impl(&dword_22CC04000, v32, v33, "[%{public}s] viewmodel=%s", (uint8_t *)v34, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x22E306470](v35, -1, -1);
    MEMORY[0x22E306470](v34, -1, -1);
  }
  else
  {
    sub_22CC5D914((uint64_t)v21);
  }

  (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v43);
  v44(v23, v46);
  return sub_22CC5D914((uint64_t)v23);
}

uint64_t sub_22CC5A81C(unint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  _BOOL4 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(char *, _QWORD);
  uint64_t (*v31)(_QWORD, _QWORD);
  NSObject *v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  double v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(char *, _QWORD);
  uint64_t v44;
  char *v45;
  double v46;
  uint64_t v47;
  char *v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  id v61;
  char *v62;
  void *v63;
  uint64_t (*v64)(_QWORD, _QWORD);
  void *v65;
  uint64_t v66;
  uint64_t v67;

  v2 = sub_22CC652BC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v60 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v60 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v60 - v15;
  v17 = *a1;
  if (*a1)
  {
    v62 = v14;
    v64 = (uint64_t (*)(_QWORD, _QWORD))v2;
    v19 = (void *)a1[1];
    v18 = (void *)a1[2];
    v20 = v18;
    swift_bridgeObjectRetain();
    v21 = v19;
    sub_22CC652A4();
    swift_bridgeObjectRetain();
    v22 = v21;
    v23 = v20;
    v24 = sub_22CC652B0();
    v25 = sub_22CC65C64();
    v26 = os_log_type_enabled(v24, v25);
    v65 = v18;
    if (v26)
    {
      v61 = v22;
      v63 = v19;
      v27 = swift_slowAlloc();
      v28 = swift_slowAlloc();
      v67 = v28;
      *(_DWORD *)v27 = 136446466;
      v66 = sub_22CC5C47C(0xD00000000000001CLL, 0x800000022CC690E0, &v67);
      sub_22CC65D00();
      *(_WORD *)(v27 + 12) = 2050;
      if (v17 >> 62)
      {
        swift_bridgeObjectRetain();
        v29 = sub_22CC65E5C();
        swift_bridgeObjectRelease();
      }
      else
      {
        v29 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      v66 = v29;
      sub_22CC65D00();
      v19 = v63;
      sub_22CC0816C(v17, v63, v65);
      _os_log_impl(&dword_22CC04000, v24, v25, "[%{public}s] found %{public}ld summaries", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x22E306470](v28, -1, -1);
      MEMORY[0x22E306470](v27, -1, -1);

      v30 = *(uint64_t (**)(char *, _QWORD))(v3 + 8);
      v31 = v64;
      v30(v16, v64);
      v22 = v61;
      if (!v19)
        goto LABEL_18;
    }
    else
    {
      sub_22CC0816C(v17, v19, v18);

      v30 = *(uint64_t (**)(char *, _QWORD))(v3 + 8);
      v31 = v64;
      v30(v16, v64);
      if (!v19)
        goto LABEL_18;
    }
    objc_msgSend(v22, sel_sleepDuration);
    v38 = *(_QWORD *)&v37;
    if (v37 > COERCE_DOUBLE(1))
    {
      sub_22CC652A4();
      v39 = sub_22CC652B0();
      v40 = sub_22CC65C64();
      if (os_log_type_enabled(v39, v40))
      {
        v41 = swift_slowAlloc();
        v63 = v19;
        v42 = v41;
        v43 = v30;
        v44 = swift_slowAlloc();
        v67 = v44;
        *(_DWORD *)v42 = 136446466;
        v66 = sub_22CC5C47C(0xD00000000000001CLL, 0x800000022CC690E0, &v67);
        sub_22CC65D00();
        *(_WORD *)(v42 + 12) = 2050;
        v66 = v38;
        sub_22CC65D00();
        _os_log_impl(&dword_22CC04000, v39, v40, "[%{public}s] last time asleep: %{public}f", (uint8_t *)v42, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x22E306470](v44, -1, -1);
        MEMORY[0x22E306470](v42, -1, -1);

        sub_22CC0816C(v17, v63, v65);
        v45 = v13;
        return v43(v45, v31);
      }
      sub_22CC0816C(v17, v19, v65);

      v59 = v13;
      return v30(v59, v31);
    }
    objc_msgSend(v22, sel_inBedDuration);
    v47 = *(_QWORD *)&v46;
    if (v46 > COERCE_DOUBLE(1))
    {
      v48 = v62;
      sub_22CC652A4();
      v49 = sub_22CC652B0();
      v50 = sub_22CC65C64();
      if (os_log_type_enabled(v49, v50))
      {
        v51 = swift_slowAlloc();
        v63 = v19;
        v52 = v51;
        v43 = v30;
        v53 = swift_slowAlloc();
        v67 = v53;
        *(_DWORD *)v52 = 136446466;
        v66 = sub_22CC5C47C(0xD00000000000001CLL, 0x800000022CC690E0, &v67);
        sub_22CC65D00();
        *(_WORD *)(v52 + 12) = 2050;
        v66 = v47;
        sub_22CC65D00();
        _os_log_impl(&dword_22CC04000, v49, v50, "[%{public}s] last time in bed: %{public}f", (uint8_t *)v52, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x22E306470](v53, -1, -1);
        MEMORY[0x22E306470](v52, -1, -1);

        sub_22CC0816C(v17, v63, v65);
        v45 = v48;
        return v43(v45, v31);
      }
      sub_22CC0816C(v17, v19, v65);

      v59 = v48;
      return v30(v59, v31);
    }
LABEL_18:
    sub_22CC652A4();
    v54 = sub_22CC652B0();
    v55 = sub_22CC65C64();
    if (os_log_type_enabled(v54, v55))
    {
      v56 = (uint8_t *)swift_slowAlloc();
      v57 = swift_slowAlloc();
      v64 = (uint64_t (*)(_QWORD, _QWORD))v30;
      v58 = v57;
      v67 = v57;
      *(_DWORD *)v56 = 136446210;
      v66 = sub_22CC5C47C(0xD00000000000001CLL, 0x800000022CC690E0, &v67);
      sub_22CC65D00();
      _os_log_impl(&dword_22CC04000, v54, v55, "[%{public}s] last day has no sleep data", v56, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x22E306470](v58, -1, -1);
      MEMORY[0x22E306470](v56, -1, -1);

      sub_22CC0816C(v17, v19, v65);
      return v64(v9, v31);
    }
    sub_22CC0816C(v17, v19, v65);

    v59 = v9;
    return v30(v59, v31);
  }
  sub_22CC652A4();
  v32 = sub_22CC652B0();
  v33 = sub_22CC65C64();
  if (os_log_type_enabled(v32, (os_log_type_t)v33))
  {
    v34 = (uint8_t *)swift_slowAlloc();
    v35 = swift_slowAlloc();
    v67 = v35;
    *(_DWORD *)v34 = 136446210;
    v66 = sub_22CC5C47C(0xD00000000000001CLL, 0x800000022CC690E0, &v67);
    sub_22CC65D00();
    _os_log_impl(&dword_22CC04000, v32, (os_log_type_t)v33, "[%{public}s] no recentSleepDaySummaries", v34, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E306470](v35, -1, -1);
    MEMORY[0x22E306470](v34, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

void sub_22CC5B078(char a1, uint64_t a2, int a3, uint64_t a4, void (*a5)(uint64_t *, _QWORD), uint64_t a6)
{
  void **v6;
  void **v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  NSObject *v27;
  void (*v28)(char *, unint64_t);
  uint64_t v29;
  char *v30;
  id v31;
  void *v32;
  unsigned int v33;
  char *v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  void (*v41)(char *, uint64_t);
  id v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  uint64_t v54;
  id v55;
  void *v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  void *v62;
  id v63;
  id v64;
  void *v65;
  char *v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  uint64_t v70;
  void *v71;
  uint64_t (*v72)(uint64_t, void *, uint64_t, void *);
  id v73;
  void *v74;
  void *v75;
  int v76;
  uint64_t v77;
  char *v78;
  void (*v79)(char *, unint64_t);
  char *v80;
  unint64_t v81;
  char *v82;
  uint64_t v83;
  void (*v84)(uint64_t *, _QWORD);
  uint64_t v85;
  void (*v86)(char *, uint64_t);
  uint64_t v87;
  uint64_t aBlock;
  uint64_t v89;
  uint64_t (*v90)(uint64_t, void *, uint64_t, void *);
  void *v91;
  uint64_t (*v92)();
  uint64_t v93;
  uint64_t v94[2];

  v7 = v6;
  v84 = a5;
  v85 = a6;
  v77 = a4;
  v76 = a3;
  v87 = sub_22CC652BC();
  v83 = *(_QWORD *)(v87 - 8);
  v10 = MEMORY[0x24BDAC7A8](v87);
  v78 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v82 = (char *)&v74 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v80 = (char *)&v74 - v14;
  v15 = sub_22CC65118();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_22CC6504C();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *v7;
  v24 = v7[1];
  v25 = v7[2];
  v74 = v23;
  v75 = v24;
  sub_22CC65040();
  v26 = objc_msgSend(v25, sel_currentCalendar);
  sub_22CC650C4();

  v27 = sub_22CC64FF8();
  v28 = *(void (**)(char *, unint64_t))(v16 + 8);
  v29 = a2;
  v81 = v15;
  v79 = v28;
  v28(v18, v15);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  v30 = (char *)v27 - a2;
  if (__OFSUB__(v27, a2))
  {
    __break(1u);
    goto LABEL_19;
  }
  v86 = (void (*)(char *, uint64_t))(v30 + 1);
  if (__OFADD__(v30, 1))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if ((a1 & 1) == 0
    || (v31 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior)) != 0
    && (v32 = v31, v33 = objc_msgSend(v31, sel_hksp_useDemoSleepData), v32, v33))
  {
    v34 = v80;
    sub_22CC652A4();
    v35 = sub_22CC652B0();
    v36 = sub_22CC65C64();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc();
      v38 = swift_slowAlloc();
      v94[0] = v38;
      *(_DWORD *)v37 = 136446466;
      aBlock = sub_22CC5C47C(0xD00000000000001CLL, 0x800000022CC690E0, v94);
      sub_22CC65D00();
      *(_WORD *)(v37 + 12) = 2082;
      aBlock = (uint64_t)v86;
      v89 = a2;
      type metadata accessor for HKDayIndexRange(0);
      v39 = sub_22CC65B44();
      aBlock = sub_22CC5C47C(v39, v40, v94);
      sub_22CC65D00();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22CC04000, v35, v36, "[%{public}s] generating demo summaries for range: %{public}s", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x22E306470](v38, -1, -1);
      MEMORY[0x22E306470](v37, -1, -1);
    }

    v41 = *(void (**)(char *, uint64_t))(v83 + 8);
    v41(v34, v87);
    v20 = sub_22CC2EA20(0, &qword_2540660F0);
    v42 = objc_msgSend(v25, sel_currentCalendar);
    sub_22CC650C4();

    v15 = sub_22CC65C88();
    v79(v18, v81);
    v18 = v82;
    sub_22CC652A4();
    swift_bridgeObjectRetain_n();
    v27 = sub_22CC652B0();
    LOBYTE(v29) = sub_22CC65C64();
    if (!os_log_type_enabled(v27, (os_log_type_t)v29))
    {

      swift_bridgeObjectRelease_n();
      v41(v18, v87);
      goto LABEL_16;
    }
    v86 = v41;
    v19 = swift_slowAlloc();
    v25 = (void *)swift_slowAlloc();
    aBlock = (uint64_t)v25;
    *(_DWORD *)v19 = 136446722;
    v94[0] = sub_22CC5C47C(0xD00000000000001CLL, 0x800000022CC690E0, &aBlock);
    sub_22CC65D00();
    *(_WORD *)(v19 + 12) = 2082;
    if (!(v15 >> 62))
    {
      v43 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_11:
      v94[0] = v43;
      v44 = sub_22CC65E8C();
      v94[0] = sub_22CC5C47C(v44, v45, &aBlock);
      sub_22CC65D00();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 22) = 2082;
      v46 = swift_bridgeObjectRetain();
      v47 = MEMORY[0x22E305CA8](v46, v20);
      v49 = v48;
      swift_bridgeObjectRelease();
      v94[0] = sub_22CC5C47C(v47, v49, &aBlock);
      sub_22CC65D00();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22CC04000, v27, (os_log_type_t)v29, "[%{public}s] using %{public}s demo summaries: %{public}s", (uint8_t *)v19, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x22E306470](v25, -1, -1);
      MEMORY[0x22E306470](v19, -1, -1);

      v86(v18, v87);
LABEL_16:
      SleepDaySummaryResults.init(summaries:)(v15, (unint64_t *)&aBlock);
      v71 = (void *)v89;
      v72 = v90;
      swift_bridgeObjectRetain();
      v73 = v71;
      v84(&aBlock, 0);

      swift_bridgeObjectRelease_n();
      return;
    }
LABEL_20:
    swift_bridgeObjectRetain();
    v43 = sub_22CC65E5C();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v50 = swift_allocObject();
  v51 = v85;
  *(_QWORD *)(v50 + 16) = v84;
  *(_QWORD *)(v50 + 24) = v51;
  *(_BYTE *)(v50 + 32) = v76 & 1;
  v53 = v74;
  v52 = v75;
  *(_QWORD *)(v50 + 40) = v74;
  *(_QWORD *)(v50 + 48) = v52;
  *(_QWORD *)(v50 + 56) = v25;
  *(_QWORD *)(v50 + 64) = v29;
  v54 = v77;
  *(_QWORD *)(v50 + 72) = v77;
  v55 = objc_allocWithZone(MEMORY[0x24BDD3F98]);
  v92 = sub_22CC5DAE0;
  v93 = v50;
  aBlock = MEMORY[0x24BDAC760];
  v89 = 1107296256;
  v90 = sub_22CC5C3DC;
  v91 = &block_descriptor_9;
  v56 = _Block_copy(&aBlock);
  swift_retain();
  v57 = v53;
  v58 = v52;
  v59 = v25;
  v60 = objc_msgSend(v55, sel_initWithMorningIndexRange_ascending_limit_options_resultsHandler_, v86, v29, 1, 0, v54, v56);
  _Block_release(v56);
  swift_release();
  v61 = objc_allocWithZone(MEMORY[0x24BDD3F90]);
  v62 = (void *)sub_22CC65B20();
  v63 = objc_msgSend(v61, sel_initWithIdentifier_mode_, v62, 0);

  objc_msgSend(v60, sel_setCacheSettings_, v63);
  v64 = v60;
  v65 = (void *)sub_22CC65B20();
  objc_msgSend(v64, sel_setDebugIdentifier_, v65);

  v66 = v78;
  sub_22CC652A4();
  v67 = sub_22CC652B0();
  v68 = sub_22CC65C64();
  if (os_log_type_enabled(v67, v68))
  {
    v69 = (uint8_t *)swift_slowAlloc();
    v70 = swift_slowAlloc();
    aBlock = v70;
    *(_DWORD *)v69 = 136446210;
    v94[0] = sub_22CC5C47C(0xD00000000000001CLL, 0x800000022CC690E0, &aBlock);
    sub_22CC65D00();
    _os_log_impl(&dword_22CC04000, v67, v68, "[%{public}s] running HealthKit query", v69, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E306470](v70, -1, -1);
    MEMORY[0x22E306470](v69, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v83 + 8))(v66, v87);
  objc_msgSend(v57, sel_executeQuery_, v64);

}

uint64_t SleepWidgetViewModelProvider.sleepStageWidgetViewModel(showLiveContent:overrideState:completion:)(int a1, unsigned __int8 *a2, void (*a3)(void **, uint64_t), void *a4)
{
  uint64_t v4;
  unsigned __int8 v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  void *v15[3];

  v8 = *a2;
  v9 = *(void **)(v4 + 8);
  v10 = *(void **)(v4 + 16);
  v15[0] = *(void **)v4;
  v15[1] = v9;
  v15[2] = v10;
  v11 = v15[0];
  v12 = v9;
  v13 = v10;
  swift_retain();
  sub_22CC5CCE4(a1, 1, 0, 6, v15, v11, v12, v13, v8, a3, a4);

  return swift_release();
}

uint64_t sub_22CC5BA94(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(_QWORD, _QWORD), void (*a5)(_QWORD, _QWORD), int a6, void *a7, void *a8, void *a9, char *a10, char *a11)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void *v35;
  _QWORD *v36;
  uint64_t (*v37)(_QWORD, _QWORD);
  void (*v38)(_QWORD, _QWORD);
  void *v39;
  id v41;
  uint64_t v42;
  id v43;
  char *v44;
  id v45;
  id v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  void (*v53)(char *, uint64_t);
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(_QWORD, _QWORD);
  uint64_t (*v66)(_QWORD, _QWORD);
  uint64_t v67;
  char *v68;
  char *v69;
  void *v70;
  void *v71;
  _QWORD *v72;
  void *v73;
  void *v74;
  char *v75;
  void *v76;
  id v77;
  id v78;
  id v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint8_t *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  void *v94;
  void *v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t (*v99)(_QWORD, _QWORD);
  void (*v100)(_QWORD, _QWORD);
  uint64_t v101;
  uint64_t aBlock;
  uint64_t v103;
  uint64_t (*v104)(uint64_t);
  void *v105;
  void *v106;
  _QWORD *v107;

  v92 = a8;
  v94 = a7;
  LODWORD(v95) = a6;
  v99 = a4;
  v100 = a5;
  v96 = a3;
  v97 = sub_22CC65970();
  v93 = *(_QWORD *)(v97 - 8);
  v12 = MEMORY[0x24BDAC7A8](v97);
  v14 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v81 - v15;
  v17 = sub_22CC652BC();
  v18 = *(uint8_t **)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v81 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v81 - v22;
  v24 = sub_22CC65940();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v81 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_22CC65958();
  v29 = MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v81 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v33 = v32;
    v34 = v29;
    v98 = v30;
    sub_22CC2EA20(0, &qword_2540660F8);
    swift_bridgeObjectRetain();
    v35 = (void *)sub_22CC65CB8();
    v36 = (_QWORD *)swift_allocObject();
    v37 = v99;
    v38 = v100;
    v36[2] = a2;
    v36[3] = v37;
    v36[4] = v38;
    v106 = sub_22CC5DBE8;
    v107 = v36;
    aBlock = MEMORY[0x24BDAC760];
    v103 = 1107296256;
    v104 = sub_22CC5C3B0;
    v105 = &block_descriptor_21;
    v39 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    sub_22CC6594C();
    aBlock = MEMORY[0x24BEE4AF8];
    sub_22CC07B74(&qword_2540660C8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    sub_22CC5DB68();
    sub_22CC07B74(&qword_2540660E8, (uint64_t (*)(uint64_t))sub_22CC5DB68, MEMORY[0x24BEE12C8]);
    sub_22CC65D48();
    MEMORY[0x22E305DBC](0, v33, v27, v39);
    _Block_release(v39);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
    return (*(uint64_t (**)(char *, uint64_t))(v98 + 8))(v33, v34);
  }
  v88 = v18;
  v89 = v21;
  v91 = v17;
  v90 = v14;
  v87 = v16;
  v86 = v27;
  v85 = v24;
  v41 = v96;
  v42 = v97;
  if (!v96)
    goto LABEL_10;
  v82 = v32;
  v98 = v30;
  v83 = v25;
  v84 = v29;
  v43 = v96;
  v44 = v23;
  sub_22CC652A4();
  v45 = v41;
  v46 = v41;
  v47 = sub_22CC652B0();
  v48 = sub_22CC65C4C();
  if (os_log_type_enabled(v47, v48))
  {
    v49 = swift_slowAlloc();
    v50 = swift_slowAlloc();
    aBlock = v50;
    *(_DWORD *)v49 = 136446466;
    v101 = sub_22CC5C47C(0xD00000000000001CLL, 0x800000022CC690E0, &aBlock);
    sub_22CC65D00();
    *(_WORD *)(v49 + 12) = 2082;
    swift_getErrorValue();
    v51 = sub_22CC65ED4();
    v101 = sub_22CC5C47C(v51, v52, &aBlock);
    sub_22CC65D00();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_22CC04000, v47, v48, "[%{public}s] failed to load summaries with error: %{public}s", (uint8_t *)v49, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x22E306470](v50, -1, -1);
    MEMORY[0x22E306470](v49, -1, -1);
  }
  else
  {

  }
  v53 = (void (*)(char *, uint64_t))*((_QWORD *)v88 + 1);
  v54 = v44;
  v55 = v91;
  v53(v54, v91);
  v56 = v90;
  v57 = v89;
  if ((v95 & 1) != 0)
  {

LABEL_10:
    aBlock = 0;
    v103 = 0;
    v104 = 0;
    return v99(&aBlock, v41);
  }
  v90 = a11;
  v89 = a10;
  v95 = a9;
  sub_22CC652A4();
  v58 = sub_22CC652B0();
  v59 = sub_22CC65C64();
  if (os_log_type_enabled(v58, v59))
  {
    v60 = (uint8_t *)swift_slowAlloc();
    v61 = swift_slowAlloc();
    aBlock = v61;
    *(_DWORD *)v60 = 136446210;
    v88 = v60 + 4;
    v101 = sub_22CC5C47C(0xD00000000000001CLL, 0x800000022CC690E0, &aBlock);
    sub_22CC65D00();
    _os_log_impl(&dword_22CC04000, v58, v59, "[%{public}s] retrying", v60, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E306470](v61, -1, -1);
    MEMORY[0x22E306470](v60, -1, -1);

    v62 = v57;
    v63 = v91;
  }
  else
  {

    v62 = v57;
    v63 = v55;
  }
  v53(v62, v63);
  v64 = v42;
  v66 = v99;
  v65 = v100;
  v67 = v85;
  v68 = v86;
  v69 = v87;
  v70 = v92;
  sub_22CC2EA20(0, &qword_2540660F8);
  v71 = (void *)sub_22CC65CB8();
  sub_22CC65964();
  MEMORY[0x22E305A74](v56, 1.0);
  v100 = *(void (**)(_QWORD, _QWORD))(v93 + 8);
  v100(v56, v64);
  v72 = (_QWORD *)swift_allocObject();
  v74 = v94;
  v73 = v95;
  v72[2] = v94;
  v72[3] = v70;
  v75 = v89;
  v72[4] = v73;
  v72[5] = v75;
  v72[6] = v90;
  v72[7] = v66;
  v72[8] = v65;
  v106 = sub_22CC5DB20;
  v107 = v72;
  aBlock = MEMORY[0x24BDAC760];
  v103 = 1107296256;
  v104 = sub_22CC5C3B0;
  v105 = &block_descriptor_15;
  v76 = _Block_copy(&aBlock);
  swift_retain();
  v77 = v74;
  v78 = v70;
  v79 = v73;
  swift_release();
  v80 = v82;
  sub_22CC6594C();
  aBlock = MEMORY[0x24BEE4AF8];
  sub_22CC07B74(&qword_2540660C8, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  sub_22CC5DB68();
  sub_22CC07B74(&qword_2540660E8, (uint64_t (*)(uint64_t))sub_22CC5DB68, MEMORY[0x24BEE12C8]);
  sub_22CC65D48();
  MEMORY[0x22E305DA4](v69, v80, v68, v76);
  _Block_release(v76);

  (*(void (**)(char *, uint64_t))(v83 + 8))(v68, v67);
  (*(void (**)(char *, uint64_t))(v98 + 8))(v80, v84);
  return ((uint64_t (*)(char *, uint64_t))v100)(v69, v97);
}

uint64_t sub_22CC5C31C(uint64_t a1, void (*a2)(unint64_t *, _QWORD))
{
  unint64_t v3;
  void *v4;
  id v5;
  id v6;
  unint64_t v8[3];

  v3 = swift_bridgeObjectRetain();
  SleepDaySummaryResults.init(summaries:)(v3, v8);
  v4 = (void *)v8[1];
  v5 = (id)v8[2];
  swift_bridgeObjectRetain();
  v6 = v4;
  a2(v8, 0);

  return swift_bridgeObjectRelease_n();
}

uint64_t sub_22CC5C3B0(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_22CC5C3DC(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  void (*v7)(id, uint64_t, void *);
  id v8;
  id v9;

  v5 = a3;
  v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_22CC2EA20(0, &qword_2540660F0);
    v5 = sub_22CC65BA4();
  }
  swift_retain();
  v8 = a2;
  v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_22CC5C47C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_22CC5C54C(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_22CC5DBF4((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_22CC5DBF4((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_22CC5C54C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_22CC65D0C();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_22CC5C704(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_22CC65E08();
  if (!v8)
  {
    sub_22CC65E50();
    __break(1u);
LABEL_17:
    result = sub_22CC65E74();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_22CC5C704(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_22CC5C798(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_22CC5C96C(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_22CC5C96C(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_22CC5C798(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_22CC5C90C(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_22CC65DE4();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_22CC65E50();
      __break(1u);
LABEL_10:
      v2 = sub_22CC65B8C();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_22CC65E74();
    __break(1u);
LABEL_14:
    result = sub_22CC65E50();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_22CC5C90C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_22CC5DC30();
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_22CC5C96C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_22CC5DC30();
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_22CC65E74();
  __break(1u);
  return result;
}

void sub_22CC5CAB4(unint64_t *a1, uint64_t a2, char a3, void (*a4)(void **, uint64_t))
{
  void *v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  unint64_t v14;
  void *v15;
  char v16;
  void *v17;
  void *v18;
  void *v19;
  char v20;
  unint64_t v21[3];

  v7 = (void *)a1[1];
  v9 = (void *)a1[2];
  v21[0] = *a1;
  v8 = v21[0];
  v21[1] = (unint64_t)v7;
  v21[2] = (unint64_t)v9;
  sub_22CC5A81C(v21);
  if (!v8)
  {
    v15 = 0;
LABEL_17:
    v17 = v15;
    v18 = v7;
    v19 = v9;
    v20 = a3;
    sub_22CC0812C(v15, v7, v9);
    a4(&v17, a2);
    sub_22CC0816C((uint64_t)v15, v7, v9);
    sub_22CC0816C((uint64_t)v15, v7, v9);
    return;
  }
  if (!(v8 >> 62))
  {
    v10 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    sub_22CC0812C((id)v8, v7, v9);
    swift_bridgeObjectRetain();
    if (v10)
      goto LABEL_4;
LABEL_15:
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x24BEE4AF8];
LABEL_16:
    SleepDaySummaryResults.init(summaries:)(v14, (unint64_t *)&v17);
    sub_22CC0816C(v8, v7, v9);
    v15 = v17;
    v7 = v18;
    v9 = v19;
    goto LABEL_17;
  }
  sub_22CC0812C((id)v8, v7, v9);
  swift_bridgeObjectRetain();
  v10 = sub_22CC65E5C();
  if (!v10)
    goto LABEL_15;
LABEL_4:
  v17 = (void *)MEMORY[0x24BEE4AF8];
  sub_22CC65E2C();
  if ((v10 & 0x8000000000000000) == 0)
  {
    v16 = a3;
    v11 = 0;
    do
    {
      if ((v8 & 0xC000000000000001) != 0)
        v12 = (id)MEMORY[0x22E305EF4](v11, v8);
      else
        v12 = *(id *)(v8 + 8 * v11 + 32);
      v13 = v12;
      if (objc_msgSend(v12, sel_summaryFilteredToLastPeriod))

      ++v11;
      sub_22CC65E14();
      sub_22CC65E38();
      sub_22CC65E44();
      sub_22CC65E20();
    }
    while (v10 != v11);
    v14 = (unint64_t)v17;
    swift_bridgeObjectRelease();
    a3 = v16;
    goto LABEL_16;
  }
  __break(1u);
}

void sub_22CC5CCE4(int a1, NSObject *a2, int a3, uint64_t a4, void **a5, void *a6, void *a7, void *a8, unsigned __int8 a9, void (*a10)(void **, uint64_t), void *a11)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  NSObject *v33;
  id v34;
  unint64_t v35;
  void (*v36)(char *, uint64_t);
  unint64_t v37;
  id v38;
  void *v39;
  unsigned int v40;
  char *v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  uint64_t v54;
  id v55;
  void *v56;
  NSObject *v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  void *v63;
  id v64;
  id v65;
  void *v66;
  char *v67;
  NSObject *v68;
  os_log_type_t v69;
  uint8_t *v70;
  uint64_t v71;
  char *v72;
  id v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  void *v82;
  uint64_t (*v83)(uint64_t, void *, uint64_t, void *);
  id v84;
  void *v85;
  void *v86;
  int v87;
  uint64_t v88;
  char *v89;
  char *v90;
  int v91;
  void (*v92)(void **, uint64_t);
  char *v93;
  char *v94;
  uint64_t v95;
  int v96;
  void *v97;
  void (*v98)(char *, uint64_t);
  uint64_t v99;
  NSObject *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t aBlock;
  uint64_t v104;
  uint64_t (*v105)(uint64_t, void *, uint64_t, void *);
  void *v106;
  uint64_t (*v107)();
  uint64_t v108;
  uint64_t v109[2];

  v97 = a8;
  v88 = a4;
  v87 = a3;
  v100 = a2;
  v96 = a1;
  v102 = sub_22CC652BC();
  v95 = *(_QWORD *)(v102 - 8);
  v14 = MEMORY[0x24BDAC7A8](v102);
  v89 = (char *)&v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v94 = (char *)&v85 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v93 = (char *)&v85 - v18;
  v19 = sub_22CC65118();
  v99 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = (void (*)(char *, uint64_t))sub_22CC6504C();
  v22 = *((_QWORD *)v98 - 1);
  MEMORY[0x24BDAC7A8](v98);
  v24 = (char *)&v85 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = swift_allocObject();
  v26 = a6;
  *(_QWORD *)(v25 + 16) = a6;
  *(_QWORD *)(v25 + 24) = a7;
  v27 = v97;
  *(_QWORD *)(v25 + 32) = v97;
  v91 = a9;
  *(_BYTE *)(v25 + 40) = a9;
  v92 = a10;
  *(_QWORD *)(v25 + 48) = a10;
  *(_QWORD *)(v25 + 56) = a11;
  v101 = v25;
  v85 = *a5;
  v28 = a5[1];
  v29 = a5[2];
  v86 = v28;
  v30 = v26;
  v31 = a7;
  v32 = v27;
  v97 = a11;
  v33 = v100;
  swift_retain();
  sub_22CC65040();
  v34 = objc_msgSend(v29, sel_currentCalendar);
  sub_22CC650C4();

  v35 = sub_22CC64FF8();
  v36 = *(void (**)(char *, uint64_t))(v99 + 8);
  v90 = v21;
  v99 = v19;
  v36(v21, v19);
  (*(void (**)(char *, _QWORD *))(v22 + 8))(v24, v98);
  v37 = v35 - (_QWORD)v33;
  if (__OFSUB__(v35, v33))
  {
    __break(1u);
    goto LABEL_20;
  }
  v27 = (void *)(v37 + 1);
  if (__OFADD__(v37, 1))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if ((v96 & 1) == 0
    || (v38 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior)) != 0
    && (v39 = v38, v40 = objc_msgSend(v38, sel_hksp_useDemoSleepData), v39, v40))
  {
    v41 = v93;
    sub_22CC652A4();
    v42 = sub_22CC652B0();
    v43 = sub_22CC65C64();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = swift_slowAlloc();
      v45 = (uint64_t)v27;
      v46 = swift_slowAlloc();
      v109[0] = v46;
      *(_DWORD *)v44 = 136446466;
      aBlock = sub_22CC5C47C(0xD00000000000001CLL, 0x800000022CC690E0, v109);
      sub_22CC65D00();
      *(_WORD *)(v44 + 12) = 2082;
      aBlock = v45;
      v104 = (uint64_t)v33;
      type metadata accessor for HKDayIndexRange(0);
      v47 = sub_22CC65B44();
      aBlock = sub_22CC5C47C(v47, v48, v109);
      sub_22CC65D00();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22CC04000, v42, v43, "[%{public}s] generating demo summaries for range: %{public}s", (uint8_t *)v44, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x22E306470](v46, -1, -1);
      MEMORY[0x22E306470](v44, -1, -1);

      v49 = *(void (**)(char *, uint64_t))(v95 + 8);
      v49(v93, v102);
    }
    else
    {

      v49 = *(void (**)(char *, uint64_t))(v95 + 8);
      v49(v41, v102);
    }
    v72 = v94;
    a7 = (void *)sub_22CC2EA20(0, &qword_2540660F0);
    v73 = objc_msgSend(v29, sel_currentCalendar);
    v74 = v90;
    sub_22CC650C4();

    v35 = sub_22CC65C88();
    v36(v74, v99);
    sub_22CC652A4();
    swift_bridgeObjectRetain_n();
    v33 = sub_22CC652B0();
    LOBYTE(v29) = sub_22CC65C64();
    if (!os_log_type_enabled(v33, (os_log_type_t)v29))
    {

      swift_bridgeObjectRelease_n();
      v49(v72, v102);
      goto LABEL_17;
    }
    v19 = swift_slowAlloc();
    v27 = (void *)swift_slowAlloc();
    aBlock = (uint64_t)v27;
    *(_DWORD *)v19 = 136446722;
    v109[0] = sub_22CC5C47C(0xD00000000000001CLL, 0x800000022CC690E0, &aBlock);
    sub_22CC65D00();
    *(_WORD *)(v19 + 12) = 2082;
    v98 = v49;
    if (!(v35 >> 62))
    {
      v75 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
      v109[0] = v75;
      v76 = sub_22CC65E8C();
      v109[0] = sub_22CC5C47C(v76, v77, &aBlock);
      sub_22CC65D00();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 22) = 2082;
      v78 = swift_bridgeObjectRetain();
      v79 = MEMORY[0x22E305CA8](v78, a7);
      v81 = v80;
      swift_bridgeObjectRelease();
      v109[0] = sub_22CC5C47C(v79, v81, &aBlock);
      sub_22CC65D00();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_22CC04000, v33, (os_log_type_t)v29, "[%{public}s] using %{public}s demo summaries: %{public}s", (uint8_t *)v19, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x22E306470](v27, -1, -1);
      MEMORY[0x22E306470](v19, -1, -1);

      v98(v94, v102);
LABEL_17:
      SleepDaySummaryResults.init(summaries:)(v35, (unint64_t *)&aBlock);
      v82 = (void *)v104;
      v83 = v105;
      swift_bridgeObjectRetain();
      v84 = v82;
      sub_22CC5CAB4((unint64_t *)&aBlock, 0, v91, v92);
      swift_release();

      swift_bridgeObjectRelease_n();
      return;
    }
LABEL_21:
    swift_bridgeObjectRetain();
    v75 = sub_22CC65E5C();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v50 = swift_allocObject();
  v51 = v101;
  *(_QWORD *)(v50 + 16) = sub_22CC5DCC0;
  *(_QWORD *)(v50 + 24) = v51;
  *(_BYTE *)(v50 + 32) = v87 & 1;
  v52 = v85;
  v53 = v86;
  *(_QWORD *)(v50 + 40) = v85;
  *(_QWORD *)(v50 + 48) = v53;
  *(_QWORD *)(v50 + 56) = v29;
  *(_QWORD *)(v50 + 64) = v33;
  v54 = v88;
  *(_QWORD *)(v50 + 72) = v88;
  v55 = objc_allocWithZone(MEMORY[0x24BDD3F98]);
  v107 = sub_22CC5DAE0;
  v108 = v50;
  aBlock = MEMORY[0x24BDAC760];
  v104 = 1107296256;
  v105 = sub_22CC5C3DC;
  v106 = &block_descriptor_31;
  v56 = _Block_copy(&aBlock);
  swift_retain();
  v57 = v33;
  v58 = v52;
  v59 = v53;
  v60 = v29;
  v61 = objc_msgSend(v55, sel_initWithMorningIndexRange_ascending_limit_options_resultsHandler_, v27, v57, 1, 0, v54, v56);
  _Block_release(v56);
  swift_release();
  v62 = objc_allocWithZone(MEMORY[0x24BDD3F90]);
  v63 = (void *)sub_22CC65B20();
  v64 = objc_msgSend(v62, sel_initWithIdentifier_mode_, v63, 0);

  objc_msgSend(v61, sel_setCacheSettings_, v64);
  v65 = v61;
  v66 = (void *)sub_22CC65B20();
  objc_msgSend(v65, sel_setDebugIdentifier_, v66);

  v67 = v89;
  sub_22CC652A4();
  v68 = sub_22CC652B0();
  v69 = sub_22CC65C64();
  if (os_log_type_enabled(v68, v69))
  {
    v70 = (uint8_t *)swift_slowAlloc();
    v71 = swift_slowAlloc();
    aBlock = v71;
    *(_DWORD *)v70 = 136446210;
    v109[0] = sub_22CC5C47C(0xD00000000000001CLL, 0x800000022CC690E0, &aBlock);
    sub_22CC65D00();
    _os_log_impl(&dword_22CC04000, v68, v69, "[%{public}s] running HealthKit query", v70, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x22E306470](v71, -1, -1);
    MEMORY[0x22E306470](v70, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v95 + 8))(v67, v102);
  objc_msgSend(v58, sel_executeQuery_, v65);
  swift_release();

}

uint64_t sub_22CC5D720()
{
  id *v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_22CC5D75C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;

  return sub_22CC590B0(a1, a2, a3, *(void (**)(char *, void *))(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(_BYTE *)(v3 + 56));
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_22CC5D7A4()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_22CC6504C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(char *, uint64_t))(v2 + 8))((char *)v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22CC5D850(unint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(sub_22CC6504C() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_22CC5A508(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(void **)(v2 + 40), *(_QWORD *)(v2 + 48), v2 + v6, *(void (**)(char *, uint64_t))v7, *(_QWORD *)(v7 + 8));
}

uint64_t sub_22CC5D8D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SleepWidgetViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22CC5D914(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SleepWidgetViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_22CC5D950(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_22CC2EA20(255, a3);
    v4 = sub_22CC65CF4();
    if (!v5)
      atomic_store(v4, a2);
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for SleepWidgetViewModelProvider(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  v6 = v3;
  v7 = v4;
  v8 = v5;
  return a1;
}

void destroy for SleepWidgetViewModelProvider(id *a1)
{

}

uint64_t assignWithCopy for SleepWidgetViewModelProvider(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  return a1;
}

uint64_t assignWithTake for SleepWidgetViewModelProvider(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for SleepWidgetViewModelProvider()
{
  return &type metadata for SleepWidgetViewModelProvider;
}

uint64_t sub_22CC5DAE4()
{
  id *v0;

  swift_release();
  return swift_deallocObject();
}

void sub_22CC5DB20()
{
  uint64_t v0;

  sub_22CC5B078(1, *(_QWORD *)(v0 + 40), 1, *(_QWORD *)(v0 + 48), *(void (**)(uint64_t *, _QWORD))(v0 + 56), *(_QWORD *)(v0 + 64));
}

void sub_22CC5DB68()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2540660E0)
  {
    sub_22CC65940();
    v0 = sub_22CC65BC8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2540660E0);
  }
}

uint64_t sub_22CC5DBBC()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_22CC5DBE8()
{
  uint64_t v0;

  return sub_22CC5C31C(*(_QWORD *)(v0 + 16), *(void (**)(unint64_t *, _QWORD))(v0 + 24));
}

uint64_t sub_22CC5DBF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_22CC5DC30()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254065968[0])
  {
    v0 = sub_22CC65E98();
    if (!v1)
      atomic_store(v0, qword_254065968);
  }
}

uint64_t sub_22CC5DC84()
{
  id *v0;

  swift_release();
  return swift_deallocObject();
}

void sub_22CC5DCC0(unint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  sub_22CC5CAB4(a1, a2, *(_BYTE *)(v2 + 40), *(void (**)(void **, uint64_t))(v2 + 48));
}

uint64_t objectdestroy_5Tm()
{
  id *v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_22CC5DD0C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;

  return sub_22CC5BA94(a1, a2, a3, *(uint64_t (**)(_QWORD, _QWORD))(v3 + 16), *(void (**)(_QWORD, _QWORD))(v3 + 24), *(unsigned __int8 *)(v3 + 32), *(void **)(v3 + 40), *(void **)(v3 + 48), *(void **)(v3 + 56), *(char **)(v3 + 64), *(char **)(v3 + 72));
}

void destroy for SleepStageWidgetSmallView(uint64_t a1)
{
  sub_22CC11750(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  if (*(_QWORD *)(a1 + 16))
  {
    swift_bridgeObjectRelease();

  }
}

uint64_t initializeWithCopy for SleepStageWidgetSmallView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_22CC11614(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 16);
  if (v6)
  {
    v7 = *(void **)(a2 + 24);
    v8 = *(void **)(a2 + 32);
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = v7;
    *(_QWORD *)(a1 + 32) = v8;
    swift_bridgeObjectRetain();
    v9 = v7;
    v10 = v8;
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  }
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t assignWithCopy for SleepStageWidgetSmallView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  _OWORD *v8;
  uint64_t v9;
  _OWORD *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  __int128 v22;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_22CC11614(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_22CC11750(v6, v7);
  v8 = (_OWORD *)(a1 + 16);
  v10 = (_OWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 16))
  {
    if (v9)
    {
      *(_QWORD *)(a1 + 16) = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v11 = *(void **)(a1 + 24);
      v12 = *(void **)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v12;
      v13 = v12;

      v14 = *(void **)(a1 + 32);
      v15 = *(void **)(a2 + 32);
      *(_QWORD *)(a1 + 32) = v15;
      v16 = v15;

    }
    else
    {
      sub_22CC06744(a1 + 16);
      v21 = *(_QWORD *)(a2 + 32);
      *v8 = *v10;
      *(_QWORD *)(a1 + 32) = v21;
    }
  }
  else if (v9)
  {
    *(_QWORD *)(a1 + 16) = v9;
    v17 = *(void **)(a2 + 24);
    *(_QWORD *)(a1 + 24) = v17;
    v18 = *(void **)(a2 + 32);
    *(_QWORD *)(a1 + 32) = v18;
    swift_bridgeObjectRetain();
    v19 = v17;
    v20 = v18;
  }
  else
  {
    v22 = *v10;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *v8 = v22;
  }
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SleepStageWidgetSmallView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  void *v9;
  void *v10;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_22CC11750(v6, v7);
  v8 = a2[2];
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_5;
  if (!v8)
  {
    sub_22CC06744(a1 + 16);
LABEL_5:
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_QWORD *)(a1 + 32) = a2[4];
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 16) = v8;
  swift_bridgeObjectRelease();
  v9 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = a2[3];

  v10 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = a2[4];

LABEL_6:
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for SleepStageWidgetSmallView(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SleepStageWidgetSmallView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SleepStageWidgetSmallView()
{
  return &type metadata for SleepStageWidgetSmallView;
}

unint64_t sub_22CC5E0D8(uint64_t a1)
{
  unint64_t result;

  result = sub_22CC2B608();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_22CC5E0FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_22CC5E10C@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD v47[2];
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  __int128 v53;
  _OWORD v54[3];

  v46 = a1;
  v45 = sub_22CC65574();
  v44 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC082A8(0, &qword_254065340, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v40 - v8;
  sub_22CC5E7CC(0);
  v42 = v10;
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC5EA14();
  v15 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC5EA70(0);
  v43 = v18;
  v41 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = v1[1];
  v53 = *v1;
  v54[0] = v21;
  *(_OWORD *)((char *)v54 + 9) = *(__int128 *)((char *)v1 + 25);
  v47[0] = sub_22CC654CC();
  v47[1] = 0;
  v48 = 0;
  v49 = sub_22CC65490();
  v50 = 0;
  v51 = 0;
  sub_22CC5E54C(&v53, (uint64_t)&v52);
  v22 = (id)HKSPSleepURL();
  if (v22)
  {
    v23 = v22;
    sub_22CC64FD4();

    v24 = sub_22CC64FE0();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v7, 0, 1, v24);
  }
  else
  {
    v25 = sub_22CC64FE0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v7, 1, 1, v25);
  }
  sub_22CC081F0((uint64_t)v7, (uint64_t)v9);
  sub_22CC5E858(0);
  sub_22CC07B74(&qword_254066748, (uint64_t (*)(uint64_t))sub_22CC5E858, MEMORY[0x24BDF4700]);
  sub_22CC65778();
  sub_22CC0824C((uint64_t)v9);
  sub_22CC0DE54((uint64_t)v47, (uint64_t (*)(_QWORD))sub_22CC5E858);
  v26 = sub_22CC655C8();
  v27 = v53;
  v28 = BYTE8(v53);
  sub_22CC5EB9C((uint64_t)&v53, (void (*)(_QWORD, _QWORD))sub_22CC11614, (void (*)(uint64_t, uint64_t, uint64_t))sub_22CC0812C);
  sub_22CC11614(v27, v28);
  sub_22CC20A38(v27, v28);
  sub_22CC11750(v27, v28);
  sub_22CC5EB9C((uint64_t)&v53, (void (*)(_QWORD, _QWORD))sub_22CC11750, (void (*)(uint64_t, uint64_t, uint64_t))sub_22CC0816C);
  sub_22CC652C8();
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v37 = v42;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v17, v13, v42);
  v38 = &v17[*(int *)(v15 + 36)];
  *v38 = v26;
  *((_QWORD *)v38 + 1) = v30;
  *((_QWORD *)v38 + 2) = v32;
  *((_QWORD *)v38 + 3) = v34;
  *((_QWORD *)v38 + 4) = v36;
  v38[40] = 0;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v37);
  sub_22CC65568();
  sub_22CC5EAF8();
  sub_22CC657C0();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v3, v45);
  sub_22CC0DE54((uint64_t)v17, (uint64_t (*)(_QWORD))sub_22CC5EA14);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v41 + 32))(v46, v20, v43);
}

uint64_t sub_22CC5E54C@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  _OWORD *v5;
  __int128 v6;
  _OWORD v8[2];
  __int128 v9;
  __int128 v10;
  char v11;
  __int128 v12;
  ValueMetadata *v13;
  _UNKNOWN **v14;
  _OWORD v15[4];
  char v16;
  id v17[4];

  *(_OWORD *)v17 = a1[1];
  *(_OWORD *)((char *)&v17[1] + 1) = *(_OWORD *)((char *)a1 + 25);
  v13 = &type metadata for SleepStageWidgetViewModel;
  v14 = &protocol witness table for SleepStageWidgetViewModel;
  v4 = swift_allocObject();
  *(_QWORD *)&v12 = v4;
  *(_OWORD *)(v4 + 16) = a1[1];
  *(_OWORD *)(v4 + 25) = *(_OWORD *)((char *)a1 + 25);
  v5 = (_OWORD *)swift_allocObject();
  v6 = a1[1];
  v5[1] = *a1;
  v5[2] = v6;
  *(_OWORD *)((char *)v5 + 41) = *(_OWORD *)((char *)a1 + 25);
  *((_QWORD *)&v10 + 1) = swift_getKeyPath();
  v11 = 0;
  sub_22CC4EAC0(&v12, (uint64_t)v8);
  *((_QWORD *)&v9 + 1) = sub_22CC5EC74;
  *(_QWORD *)&v10 = v5;
  v16 = v11;
  v15[0] = v8[0];
  v15[1] = v8[1];
  v15[2] = v9;
  v15[3] = v10;
  sub_22CC5EC80((uint64_t)v15, (uint64_t)v8);
  sub_22CC5EC80((uint64_t)v8, a2);
  *(_QWORD *)(a2 + 72) = 0;
  *(_BYTE *)(a2 + 80) = 0;
  sub_22CC5ECC4(v17);
  sub_22CC5EB9C((uint64_t)a1, (void (*)(_QWORD, _QWORD))sub_22CC11614, (void (*)(uint64_t, uint64_t, uint64_t))sub_22CC0812C);
  sub_22CC0DE54((uint64_t)v15, (uint64_t (*)(_QWORD))sub_22CC5E958);
  return sub_22CC0DE54((uint64_t)v8, (uint64_t (*)(_QWORD))sub_22CC5E958);
}

id *sub_22CC5E694@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t *v8;
  _OWORD *v9;
  id v11[4];

  v4 = type metadata accessor for SleepStageResultsView(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(_OWORD *)v11 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)((char *)&v11[1] + 1) = *(_OWORD *)(a1 + 25);
  *v6 = swift_getKeyPath();
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_22CC082A8(0, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v8 = (uint64_t *)((char *)v6 + *(int *)(v4 + 20));
  *v8 = swift_getKeyPath();
  sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], v7);
  swift_storeEnumTagMultiPayload();
  v9 = (_OWORD *)((char *)v6 + *(int *)(v4 + 24));
  *v9 = *(_OWORD *)v11;
  *(_OWORD *)((char *)v9 + 9) = *(_OWORD *)((char *)&v11[1] + 1);
  sub_22CC08308((uint64_t)v6, a2);
  return sub_22CC5ECC4(v11);
}

void sub_22CC5E7CC(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v5[2];

  if (!qword_254066710)
  {
    sub_22CC5E858(255);
    v5[0] = v2;
    v5[1] = sub_22CC07B74(&qword_254066748, (uint64_t (*)(uint64_t))sub_22CC5E858, MEMORY[0x24BDF4700]);
    v3 = MEMORY[0x22E3063BC](a1, v5, MEMORY[0x24BDFAC50], 0);
    if (!v4)
      atomic_store(v3, (unint64_t *)&qword_254066710);
  }
}

void sub_22CC5E858(uint64_t a1)
{
  sub_22CC1BA40(a1, &qword_254066750, (uint64_t (*)(uint64_t))sub_22CC5E87C, sub_22CC5E9F8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDF46E0]);
}

void sub_22CC5E87C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254066740)
  {
    sub_22CC082A8(255, &qword_254066770, (uint64_t (*)(uint64_t))sub_22CC5E8F4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_22CC5E998();
    v0 = sub_22CC65898();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254066740);
  }
}

void sub_22CC5E8F4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_254066520)
  {
    sub_22CC5E958(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_254066520);
  }
}

void sub_22CC5E958(uint64_t a1)
{
  sub_22CC1BA40(a1, &qword_254066518, type metadata accessor for SleepStageResultsView, sub_22CC5E97C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for SleepWidgetResultsView);
}

uint64_t sub_22CC5E97C()
{
  return sub_22CC07B74(&qword_2540664E0, type metadata accessor for SleepStageResultsView, (uint64_t)&unk_22CC68BD0);
}

unint64_t sub_22CC5E998()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254066768;
  if (!qword_254066768)
  {
    sub_22CC082A8(255, &qword_254066770, (uint64_t (*)(uint64_t))sub_22CC5E8F4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDF5428], v1);
    atomic_store(result, (unint64_t *)&qword_254066768);
  }
  return result;
}

uint64_t sub_22CC5E9F8()
{
  return sub_22CC07B74(&qword_254066738, (uint64_t (*)(uint64_t))sub_22CC5E87C, MEMORY[0x24BDF4498]);
}

void sub_22CC5EA14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2540665D8)
  {
    sub_22CC5E7CC(255);
    v0 = sub_22CC6534C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2540665D8);
  }
}

void sub_22CC5EA70(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  if (!qword_255C3DBA8)
  {
    sub_22CC5EA14();
    v3 = v2;
    v4 = sub_22CC5EAF8();
    v7[0] = v3;
    v7[1] = MEMORY[0x24BDECD60];
    v7[2] = v4;
    v7[3] = MEMORY[0x24BDECD48];
    v5 = MEMORY[0x22E3063BC](a1, v7, MEMORY[0x24BDF2DE8], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_255C3DBA8);
  }
}

unint64_t sub_22CC5EAF8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[4];

  result = qword_2540665D0;
  if (!qword_2540665D0)
  {
    sub_22CC5EA14();
    v2 = v1;
    sub_22CC5E858(255);
    v4[2] = v3;
    v4[3] = sub_22CC07B74(&qword_254066748, (uint64_t (*)(uint64_t))sub_22CC5E858, MEMORY[0x24BDF4700]);
    v4[0] = swift_getOpaqueTypeConformance2();
    v4[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDED308], v2, v4);
    atomic_store(result, (unint64_t *)&qword_2540665D0);
  }
  return result;
}

uint64_t sub_22CC5EB9C(uint64_t a1, void (*a2)(_QWORD, _QWORD), void (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  a2(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
  a3(v5, v6, v7);
  return a1;
}

uint64_t sub_22CC5EBF8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
  {
    swift_bridgeObjectRelease();

  }
  return swift_deallocObject();
}

uint64_t sub_22CC5EC30()
{
  uint64_t v0;

  sub_22CC11750(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
  if (*(_QWORD *)(v0 + 32))
  {
    swift_bridgeObjectRelease();

  }
  return swift_deallocObject();
}

id *sub_22CC5EC74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_22CC5E694(v1 + 16, a1);
}

uint64_t sub_22CC5EC80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_22CC5E958(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id *sub_22CC5ECC4(id *a1)
{
  sub_22CC0812C(*a1, a1[1], a1[2]);
  return a1;
}

uint64_t sub_22CC5ED00()
{
  sub_22CC5EA14();
  sub_22CC5EAF8();
  return swift_getOpaqueTypeConformance2();
}

uint64_t *sub_22CC5ED5C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char v26;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    v9 = a3[7];
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    sub_22CC082A8(0, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v12 = sub_22CC65A3C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v13 = a3[8];
    v14 = (char *)v7 + v13;
    v15 = (char *)a2 + v13;
    v16 = *(_QWORD *)v15;
    v17 = v15[8];
    sub_22CC11614(*(_QWORD *)v15, v17);
    *(_QWORD *)v14 = v16;
    v14[8] = v17;
    v18 = a3[9];
    v19 = (uint64_t *)((char *)v7 + v18);
    v20 = (uint64_t *)((char *)a2 + v18);
    sub_22CC082A8(0, &qword_255C3CF20, (uint64_t (*)(uint64_t))MEMORY[0x24BDF17A8], MEMORY[0x24BDEB560]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v21 = sub_22CC656A0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v22 = a3[10];
    v23 = (char *)v7 + v22;
    v24 = (char *)a2 + v22;
    v25 = *(_QWORD *)v24;
    v26 = v24[8];
    sub_22CC11614(*(_QWORD *)v24, v26);
    *(_QWORD *)v23 = v25;
    v23[8] = v26;
  }
  return v7;
}

uint64_t sub_22CC5EF44(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[7];
  sub_22CC082A8(0, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_22CC65A3C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  sub_22CC11750(*(_QWORD *)(a1 + a2[8]), *(_BYTE *)(a1 + a2[8] + 8));
  v6 = a1 + a2[9];
  sub_22CC082A8(0, &qword_255C3CF20, (uint64_t (*)(uint64_t))MEMORY[0x24BDF17A8], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_22CC656A0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  return sub_22CC11750(*(_QWORD *)(a1 + a2[10]), *(_BYTE *)(a1 + a2[10] + 8));
}

_QWORD *sub_22CC5F068(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char v24;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = a3[7];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  sub_22CC082A8(0, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_22CC65A3C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v11 = a3[8];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = *(_QWORD *)v13;
  v15 = v13[8];
  sub_22CC11614(*(_QWORD *)v13, v15);
  *(_QWORD *)v12 = v14;
  v12[8] = v15;
  v16 = a3[9];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  sub_22CC082A8(0, &qword_255C3CF20, (uint64_t (*)(uint64_t))MEMORY[0x24BDF17A8], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = sub_22CC656A0();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  else
  {
    *v17 = *v18;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v20 = a3[10];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = *(_QWORD *)v22;
  v24 = v22[8];
  sub_22CC11614(*(_QWORD *)v22, v24);
  *(_QWORD *)v21 = v23;
  v21[8] = v24;
  return a1;
}

_QWORD *sub_22CC5F228(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t (*v9)(uint64_t);
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t (*v22)(uint64_t);
  uint64_t (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = a3[7];
    v7 = (_QWORD *)((char *)a1 + v6);
    v8 = (_QWORD *)((char *)a2 + v6);
    v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10];
    v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_22CC17438((uint64_t)a1 + v6, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
    sub_22CC082A8(0, &qword_2540658A0, v9, v10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_22CC65A3C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v7, v8, v11);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v12 = a3[8];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = *(_QWORD *)v14;
  v16 = v14[8];
  sub_22CC11614(*(_QWORD *)v14, v16);
  v17 = *(_QWORD *)v13;
  v18 = v13[8];
  *(_QWORD *)v13 = v15;
  v13[8] = v16;
  sub_22CC11750(v17, v18);
  if (a1 != a2)
  {
    v19 = a3[9];
    v20 = (_QWORD *)((char *)a1 + v19);
    v21 = (_QWORD *)((char *)a2 + v19);
    v22 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF17A8];
    v23 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_22CC17438((uint64_t)a1 + v19, &qword_255C3CF20, (uint64_t (*)(uint64_t))MEMORY[0x24BDF17A8], MEMORY[0x24BDEB560]);
    sub_22CC082A8(0, &qword_255C3CF20, v22, v23);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v24 = sub_22CC656A0();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v20, v21, v24);
    }
    else
    {
      *v20 = *v21;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v25 = a3[10];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = *(_QWORD *)v27;
  v29 = v27[8];
  sub_22CC11614(*(_QWORD *)v27, v29);
  v30 = *(_QWORD *)v26;
  v31 = v26[8];
  *(_QWORD *)v26 = v28;
  v26[8] = v29;
  sub_22CC11750(v30, v31);
  return a1;
}

uint64_t sub_22CC5F468(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = a3[7];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  sub_22CC082A8(0, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
  v10 = v9;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_22CC65A3C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v7, v8, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  v12 = a3[8];
  v13 = a3[9];
  v14 = a1 + v12;
  v15 = a2 + v12;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  v16 = (void *)(a1 + v13);
  v17 = (const void *)(a2 + v13);
  sub_22CC082A8(0, &qword_255C3CF20, (uint64_t (*)(uint64_t))MEMORY[0x24BDF17A8], MEMORY[0x24BDEB560]);
  v19 = v18;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = sub_22CC656A0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v16, v17, v20);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  v21 = a3[10];
  v22 = a1 + v21;
  v23 = a2 + v21;
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *(_BYTE *)(v22 + 8) = *(_BYTE *)(v23 + 8);
  return a1;
}

_QWORD *sub_22CC5F5FC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t (*v10)(uint64_t);
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t (*v24)(uint64_t);
  uint64_t (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v7 = a3[7];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10];
    v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_22CC17438((uint64_t)a1 + v7, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
    sub_22CC082A8(0, &qword_2540658A0, v10, v11);
    v13 = v12;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v14 = sub_22CC65A3C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v8, v9, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
  }
  v15 = a3[8];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = *(_QWORD *)v17;
  LOBYTE(v17) = v17[8];
  v19 = *(_QWORD *)v16;
  v20 = v16[8];
  *(_QWORD *)v16 = v18;
  v16[8] = (char)v17;
  sub_22CC11750(v19, v20);
  if (a1 != a2)
  {
    v21 = a3[9];
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    v24 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF17A8];
    v25 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
    sub_22CC17438((uint64_t)a1 + v21, &qword_255C3CF20, (uint64_t (*)(uint64_t))MEMORY[0x24BDF17A8], MEMORY[0x24BDEB560]);
    sub_22CC082A8(0, &qword_255C3CF20, v24, v25);
    v27 = v26;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v28 = sub_22CC656A0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v22, v23, v28);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
  }
  v29 = a3[10];
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  v32 = *(_QWORD *)v31;
  LOBYTE(v31) = v31[8];
  v33 = *(_QWORD *)v30;
  v34 = v30[8];
  *(_QWORD *)v30 = v32;
  v30[8] = (char)v31;
  sub_22CC11750(v33, v34);
  return a1;
}

uint64_t sub_22CC5F814()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC5F820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_22CC082A8(0, &qword_255C3CAB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB580]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 28);
    }
    else
    {
      sub_22CC082A8(0, qword_255C3DBD8, (uint64_t (*)(uint64_t))MEMORY[0x24BDF17A8], MEMORY[0x24BDEB580]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a3 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_22CC5F8F0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_22CC5F8FC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    sub_22CC082A8(0, &qword_255C3CAB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB580]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 28);
    }
    else
    {
      sub_22CC082A8(0, qword_255C3DBD8, (uint64_t (*)(uint64_t))MEMORY[0x24BDF17A8], MEMORY[0x24BDEB580]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a4 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for SleepWidgetChartView()
{
  uint64_t result;

  result = qword_255C3DC38;
  if (!qword_255C3DC38)
    return swift_getSingletonMetadata();
  return result;
}

void sub_22CC5FA04()
{
  unint64_t v0;
  unint64_t v1;

  sub_22CC082A8(319, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
  if (v0 <= 0x3F)
  {
    sub_22CC082A8(319, &qword_255C3CF20, (uint64_t (*)(uint64_t))MEMORY[0x24BDF17A8], MEMORY[0x24BDEB560]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_22CC5FAE8()
{
  return swift_getOpaqueTypeConformance2();
}

__n128 sub_22CC5FAF8@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  void *v22;
  __n128 result;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __n128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_22CC65C58();
    v22 = (void *)sub_22CC65598();
    sub_22CC65298();

  }
  sub_22CC65364();
  a9[4] = v28;
  a9[5] = v29;
  a9[6] = v30;
  *a9 = v24;
  a9[1] = v25;
  result = v27;
  a9[2] = v26;
  a9[3] = v27;
  return result;
}

__n128 sub_22CC5FC80@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  char v18;
  void *v27;
  __n128 result;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __n128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;

  v18 = a17;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_22CC65C58();
    v27 = (void *)sub_22CC65598();
    sub_22CC65298();

    v18 = a17;
  }
  sub_22CC65364();
  *(_QWORD *)a9 = a16;
  *(_BYTE *)(a9 + 8) = v18 & 1;
  *(_OWORD *)(a9 + 80) = v33;
  *(_OWORD *)(a9 + 96) = v34;
  *(_OWORD *)(a9 + 112) = v35;
  *(_OWORD *)(a9 + 16) = v29;
  *(_OWORD *)(a9 + 32) = v30;
  result = v32;
  *(_OWORD *)(a9 + 48) = v31;
  *(__n128 *)(a9 + 64) = v32;
  return result;
}

uint64_t sub_22CC5FE28@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  uint64_t v13;
  void *v23;
  __int128 v24;
  __int128 v25;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_22CC65C58();
    v23 = (void *)sub_22CC65598();
    sub_22CC65298();

  }
  sub_22CC65364();
  v24 = *(_OWORD *)(v13 + 16);
  v25 = *(_OWORD *)(v13 + 32);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v24;
  *(_OWORD *)(a9 + 32) = v25;
  *(_OWORD *)(a9 + 104) = v30;
  *(_OWORD *)(a9 + 120) = v31;
  *(_OWORD *)(a9 + 136) = v32;
  *(_OWORD *)(a9 + 152) = v33;
  *(_OWORD *)(a9 + 56) = v27;
  *(_OWORD *)(a9 + 72) = v28;
  *(_QWORD *)(a9 + 48) = *(_QWORD *)(v13 + 48);
  *(_OWORD *)(a9 + 88) = v29;
  return swift_retain();
}

__n128 sub_22CC5FFE0@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, void (*a16)(uint64_t, uint64_t), uint64_t (*a17)(_QWORD))
{
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v20)(_QWORD);
  void *v29;
  _OWORD *v30;
  __n128 result;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __n128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;

  v18 = v17;
  v20 = a17;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_22CC65C58();
    v29 = (void *)sub_22CC65598();
    sub_22CC65298();

    v20 = a17;
  }
  sub_22CC65364();
  a16(v18, a9);
  v30 = (_OWORD *)(a9 + *(int *)(v20(0) + 36));
  v30[4] = v36;
  v30[5] = v37;
  v30[6] = v38;
  *v30 = v32;
  v30[1] = v33;
  result = v35;
  v30[2] = v34;
  v30[3] = v35;
  return result;
}

uint64_t sub_22CC601A8()
{
  return sub_22CC65424();
}

uint64_t sub_22CC601C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_22CC65A18();
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_22CC65430();
}

void sub_22CC60244()
{
  qword_254065310 = 0x401C000000000000;
}

void sub_22CC60254()
{
  qword_255C3DBB0 = 0x4026000000000000;
}

void sub_22CC60264()
{
  qword_255C3DBB8 = 0x401C000000000000;
}

double sub_22CC60274()
{
  id v0;
  double v1;
  double v2;
  double result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v0, sel_scale);
  v2 = v1;

  result = 1.0 / v2;
  *(double *)&qword_255C3DBC0 = 1.0 / v2;
  return result;
}

void sub_22CC602DC()
{
  qword_255C3DBC8 = 0x4022000000000000;
}

void sub_22CC602EC()
{
  qword_255C3DBD0 = 0x4028000000000000;
}

uint64_t sub_22CC602FC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  uint64_t *v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _OWORD *v68;
  __int128 v69;
  void (*v70)(uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _OWORD *v76;
  __int128 v77;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;

  v97 = a2;
  sub_22CC632F4();
  v82 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v83 = (uint64_t *)((char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22CC6386C(0);
  v87 = v5;
  v86 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v85 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC639F0(0);
  v96 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v84 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v88 = (uint64_t)&v79 - v10;
  sub_22CC210F4(0, &qword_255C3DD88, v11, (uint64_t (*)(uint64_t))sub_22CC63A0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF380]);
  v94 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v95 = (uint64_t)&v79 - v13;
  sub_22CC63A28();
  MEMORY[0x24BDAC7A8](v14);
  v80 = (uint64_t *)((char *)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_22CC63A0C(0);
  v93 = v16;
  v17 = MEMORY[0x24BDAC7A8](v16);
  v79 = (uint64_t)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v81 = (uint64_t)&v79 - v19;
  v20 = sub_22CC65A3C();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v91 = (uint64_t)&v79 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v79 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v79 - v27;
  v29 = sub_22CC656A0();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v32 = (char *)&v79 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC65304();
  v34 = v33;
  sub_22CC65304();
  v36 = v35;
  v37 = 0.0;
  if ((*(_BYTE *)(a1 + 8) & 2) != 0)
  {
    sub_22CC6561C();
    type metadata accessor for SleepWidgetChartView();
    sub_22CC20C48((uint64_t)v32);
    sub_22CC65124();
    v37 = v38;
    swift_release();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v29);
  }
  v39 = v34 - v37;
  v40 = type metadata accessor for SleepWidgetChartView();
  sub_22CC207A8((uint64_t)v28);
  v41 = (uint64_t *)a1;
  v42 = *(_QWORD *)(a1 + 8);
  v43 = *(int *)(v40 + 32);
  v92 = v41;
  v44 = (uint64_t)v41 + v43;
  v45 = *(uint64_t *)((char *)v41 + v43);
  v46 = *((_BYTE *)v41 + v43 + 8);
  sub_22CC11614(v45, v46);
  v47 = sub_22CC20A38(v45, v46);
  sub_22CC11750(v45, v46);
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v26, v28, v20);
  if ((*(unsigned int (**)(char *, uint64_t))(v21 + 88))(v26, v20) == *MEMORY[0x24BDFAF08])
  {
    if ((v47 & 1) != 0)
    {
      if (qword_255C3C938 != -1)
        swift_once();
      v48 = qword_255C3DBD0;
    }
    else
    {
      if (qword_255C3C930 != -1)
        swift_once();
      v48 = qword_255C3DBC8;
    }
    v90 = v48;
  }
  else
  {
    if ((v42 & 4) != 0)
    {
      if (qword_255C3C920 != -1)
        swift_once();
      v49 = &qword_255C3DBB8;
    }
    else
    {
      if (qword_255C3C918 != -1)
        swift_once();
      v49 = &qword_255C3DBB0;
    }
    v90 = *v49;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v26, v20);
  }
  v50 = *(void (**)(char *, uint64_t))(v21 + 8);
  v50(v28, v20);
  v89 = *(_QWORD *)&v39;
  v51 = v91;
  sub_22CC207A8(v91);
  v52 = v92;
  v53 = v92[1];
  v54 = (v53 >> 1) & 1;
  v55 = (v53 >> 2) & 1;
  v56 = *(_QWORD *)v44;
  v57 = *(_BYTE *)(v44 + 8);
  sub_22CC11614(*(_QWORD *)v44, v57);
  v58 = sub_22CC20A38(v56, v57);
  sub_22CC11750(v56, v57);
  v59 = sub_22CC60B4C(v54, v55, v58 & 1, v36);
  v50((char *)v51, v20);
  v60 = *v52;
  if (*v52)
  {
    swift_bridgeObjectRetain();
    v61 = sub_22CC65490();
    v62 = (uint64_t)v83;
    *v83 = v61;
    *(_QWORD *)(v62 + 8) = 0;
    *(_BYTE *)(v62 + 16) = 0;
    sub_22CC63F58();
    sub_22CC60F20(v60, (uint64_t)v52, v90, v89, 1, v62 + *(int *)(v63 + 44), v59);
    *(_QWORD *)&v98 = v60;
    sub_22CC08D64(0, &qword_255C3DD60, (uint64_t)&type metadata for SleepWidgetChartBar, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    sub_22CC07B74(&qword_255C3DD68, (uint64_t (*)(uint64_t))sub_22CC632F4, MEMORY[0x24BDF4498]);
    sub_22CC63934();
    v64 = v85;
    sub_22CC65748();
    swift_bridgeObjectRelease();
    sub_22CC0DE54(v62, (uint64_t (*)(_QWORD))sub_22CC632F4);
    sub_22CC65910();
    sub_22CC652EC();
    v65 = v86;
    v66 = (uint64_t)v84;
    v67 = v87;
    (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v84, v64, v87);
    v68 = (_OWORD *)(v66 + *(int *)(v96 + 36));
    v69 = v99;
    *v68 = v98;
    v68[1] = v69;
    v68[2] = v100;
    (*(void (**)(char *, uint64_t))(v65 + 8))(v64, v67);
    v70 = sub_22CC639F0;
    v71 = v88;
    sub_22CC0DDCC(v66, v88, (uint64_t (*)(_QWORD))sub_22CC639F0);
    sub_22CC0DE10(v71, v95, (uint64_t (*)(_QWORD))sub_22CC639F0);
  }
  else
  {
    v72 = sub_22CC65490();
    v73 = (uint64_t)v80;
    *v80 = v72;
    *(_QWORD *)(v73 + 8) = 0;
    *(_BYTE *)(v73 + 16) = 0;
    sub_22CC63D7C();
    sub_22CC622CC((uint64_t)v52, v90, v89, 1, v73 + *(int *)(v74 + 44), v59);
    sub_22CC65910();
    sub_22CC652EC();
    v75 = v79;
    sub_22CC0DE10(v73, v79, (uint64_t (*)(_QWORD))sub_22CC63A28);
    v76 = (_OWORD *)(v75 + *(int *)(v93 + 36));
    v77 = v99;
    *v76 = v98;
    v76[1] = v77;
    v76[2] = v100;
    sub_22CC0DE54(v73, (uint64_t (*)(_QWORD))sub_22CC63A28);
    v70 = sub_22CC63A0C;
    v71 = v81;
    sub_22CC0DDCC(v75, v81, (uint64_t (*)(_QWORD))sub_22CC63A0C);
    sub_22CC0DE10(v71, v95, (uint64_t (*)(_QWORD))sub_22CC63A0C);
  }
  swift_storeEnumTagMultiPayload();
  sub_22CC63DF8();
  sub_22CC63ED8();
  sub_22CC65520();
  return sub_22CC0DE54(v71, (uint64_t (*)(_QWORD))v70);
}

double sub_22CC60B4C(char a1, int a2, int a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  double v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t (*v19)(char *, uint64_t);
  int v20;
  int v21;
  double v22;
  double v23;
  double v24;
  uint64_t *v25;
  double v26;
  double v27;
  char *v28;
  double v29;
  uint64_t *v30;
  char *v32;
  int v33;
  int v34;

  v5 = v4;
  v33 = a2;
  v34 = a3;
  v8 = sub_22CC65A3C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v32 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v32 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v32 - v15;
  if (qword_254065350 != -1)
    swift_once();
  v17 = *(double *)&qword_254065310;
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v18(v16, v4, v8);
  v19 = *(uint64_t (**)(char *, uint64_t))(v9 + 88);
  v20 = v19(v16, v8);
  v21 = *MEMORY[0x24BDFAF08];
  if (v20 == *MEMORY[0x24BDFAF08])
  {
    if ((v34 & 1) != 0)
    {
      if (qword_255C3C938 != -1)
        swift_once();
      v22 = v17 * *(double *)&qword_255C3DBD0;
      if ((a1 & 1) == 0)
      {
LABEL_8:
        v23 = *(double *)&qword_254065310 + -1.0;
        v24 = 0.0;
        goto LABEL_24;
      }
    }
    else
    {
      if (qword_255C3C930 != -1)
        swift_once();
      v22 = v17 * *(double *)&qword_255C3DBC8;
      if ((a1 & 1) == 0)
        goto LABEL_8;
    }
  }
  else
  {
    if ((v33 & 1) != 0)
    {
      if (qword_255C3C920 != -1)
        swift_once();
      v25 = &qword_255C3DBB8;
    }
    else
    {
      if (qword_255C3C918 != -1)
        swift_once();
      v25 = &qword_255C3DBB0;
    }
    v26 = *(double *)v25;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v8);
    v22 = v17 * v26;
    if ((a1 & 1) == 0)
      goto LABEL_8;
  }
  if (qword_255C3C928 != -1)
    swift_once();
  v24 = *(double *)&qword_255C3DBC0 * (*(double *)&qword_254065310 + 1.0);
  v23 = *(double *)&qword_254065310 + *(double *)&qword_254065310;
LABEL_24:
  v27 = (a4 - v22 - v24) / v23;
  v18(v14, v4, v8);
  if (v19(v14, v8) == v21)
  {
    if ((v34 & 1) == 0)
    {
      v28 = v32;
      v18(v32, v5, v8);
      if (v19(v28, v8) == v21)
      {
        if (qword_255C3C930 != -1)
          swift_once();
        v29 = *(double *)&qword_255C3DBC8;
      }
      else
      {
        if ((v33 & 1) != 0)
        {
          if (qword_255C3C920 != -1)
            swift_once();
          v30 = &qword_255C3DBB8;
        }
        else
        {
          if (qword_255C3C918 != -1)
            swift_once();
          v30 = &qword_255C3DBB0;
        }
        v29 = *(double *)v30;
        (*(void (**)(char *, uint64_t))(v9 + 8))(v28, v8);
      }
      return v29 * 0.8;
    }
  }
  else
  {
    v27 = floor(v27);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  }
  return v27;
}

uint64_t sub_22CC60F20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>, double a7@<D0>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t KeyPath;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE v56[216];
  _BYTE v57[216];
  _QWORD v58[21];
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  _QWORD v65[28];
  char v66;
  uint64_t v67;
  char v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  char v74;
  __int128 v75;

  v52 = a5;
  v50 = a3;
  v51 = a4;
  v55 = a6;
  sub_22CC082A8(0, &qword_255C3DC90, (uint64_t (*)(uint64_t))sub_22CC6336C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v10);
  v54 = (uint64_t)&v46 - v11;
  v12 = type metadata accessor for SleepWidgetChartView();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC63B78(0, &qword_255C3DCD0, sub_22CC63474);
  v17 = v16;
  v53 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v46 - v21;
  v65[0] = a1;
  v49 = sub_22CC45CD0();
  if ((v23 & 1) != 0 || (v65[0] = a1, v24 = sub_22CC45FA0(), (v25 & 1) != 0))
  {
    sub_22CC6336C(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v55, 1, 1, v26);
  }
  else
  {
    v48 = v24;
    if ((*(_BYTE *)(a2 + 8) & 2) != 0)
    {
      v46 = a2;
      sub_22CC65820();
      KeyPath = sub_22CC6582C();
      swift_release();
      if (qword_255C3C928 != -1)
        swift_once();
      sub_22CC65910();
      sub_22CC652EC();
      v70 = KeyPath;
      v71 = v65[27];
      v72 = v66;
      v73 = v67;
      v74 = v68;
      v75 = v69;
      sub_22CC65910();
      sub_22CC5FE28(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v58, 0.0, 1, INFINITY, 0);
      swift_release();
      v28 = sub_22CC655C8();
      sub_22CC652C8();
      v57[0] = 0;
      v59 = v28;
      v60 = v29;
      v61 = v30;
      v62 = v31;
      v63 = v32;
      v64 = 0;
      nullsub_1(v58);
      sub_22CC4A680((uint64_t)v58, (uint64_t)v65, &qword_255C3DCA8, (uint64_t (*)(uint64_t))sub_22CC633A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
      a2 = v46;
    }
    else
    {
      sub_22CC63FD4((uint64_t)v58);
      sub_22CC4A680((uint64_t)v58, (uint64_t)v65, &qword_255C3DCA8, (uint64_t (*)(uint64_t))sub_22CC633A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    }
    v33 = *(_QWORD *)(a1 + 16);
    v58[0] = 0;
    v58[1] = v33;
    KeyPath = swift_getKeyPath();
    sub_22CC0DE10(a2, (uint64_t)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetChartView);
    v34 = (*(unsigned __int8 *)(v13 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    v35 = (v14 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
    v36 = swift_allocObject();
    v37 = v50;
    *(_QWORD *)(v36 + 16) = a1;
    *(_QWORD *)(v36 + 24) = v37;
    *(_QWORD *)(v36 + 32) = v51;
    *(_BYTE *)(v36 + 40) = v52 & 1;
    v38 = v48;
    *(_QWORD *)(v36 + 48) = v49;
    *(_QWORD *)(v36 + 56) = v38;
    sub_22CC0DDCC((uint64_t)v15, v36 + v34, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetChartView);
    *(double *)(v36 + v35) = a7;
    sub_22CC1600C(0, &qword_2540656E8, MEMORY[0x24BEE1768], MEMORY[0x24BEE1780], MEMORY[0x24BEE1B68]);
    sub_22CC63474(0);
    sub_22CC14FC8();
    sub_22CC07B74(&qword_255C3DE30, (uint64_t (*)(uint64_t))sub_22CC63474, MEMORY[0x24BDF5428]);
    swift_bridgeObjectRetain();
    sub_22CC658E0();
    v39 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
    sub_22CC4A680((uint64_t)v65, (uint64_t)v56, &qword_255C3DCA8, (uint64_t (*)(uint64_t))sub_22CC633A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v40 = v53;
    v41 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
    v41(v20, v22, v17);
    sub_22CC4A680((uint64_t)v56, (uint64_t)v57, &qword_255C3DCA8, (uint64_t (*)(uint64_t))sub_22CC633A4, v39);
    v42 = v54;
    sub_22CC4A680((uint64_t)v57, v54, &qword_255C3DCA8, (uint64_t (*)(uint64_t))sub_22CC633A4, v39);
    sub_22CC63388(0);
    v41((char *)(v42 + *(int *)(v43 + 48)), v20, v17);
    sub_22CC641E8((uint64_t)v57);
    v44 = *(void (**)(char *, uint64_t))(v40 + 8);
    v44(v22, v17);
    v44(v20, v17);
    sub_22CC4A680((uint64_t)v56, (uint64_t)v58, &qword_255C3DCA8, (uint64_t (*)(uint64_t))sub_22CC633A4, v39);
    sub_22CC64210((uint64_t)v58);
    sub_22CC6336C(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v42, 0, 1, v45);
    return sub_22CC4A680(v42, v55, &qword_255C3DC90, (uint64_t (*)(uint64_t))sub_22CC6336C, v39);
  }
}

uint64_t sub_22CC614D8@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>, double a9@<D1>)
{
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[216];
  _OWORD v42[10];
  uint64_t v43;
  _OWORD v44[10];
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  char v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  char v61;
  __int128 v62;
  _BYTE v63[232];

  v40 = a7;
  v16 = a5 & 1;
  sub_22CC634B4();
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v39 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v39 - v24;
  v26 = *a1;
  *(_QWORD *)v23 = sub_22CC654C0();
  *((_QWORD *)v23 + 1) = 0;
  v23[16] = 0;
  sub_22CC64238();
  sub_22CC618A0(a2, v26, a3, a4, v16, a6, (uint64_t)&v23[*(int *)(v27 + 44)], a8, a9);
  sub_22CC0DDCC((uint64_t)v23, (uint64_t)v25, (uint64_t (*)(_QWORD))sub_22CC634B4);
  if ((*(_BYTE *)(a6 + 8) & 2) != 0)
  {
    sub_22CC65820();
    v28 = sub_22CC6582C();
    swift_release();
    if (qword_255C3C928 != -1)
      swift_once();
    sub_22CC65910();
    sub_22CC652EC();
    v57 = v28;
    v58 = v52;
    v59 = v53;
    v60 = v54;
    v61 = v55;
    v62 = v56;
    sub_22CC65910();
    sub_22CC5FE28(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v42, 0.0, 1, INFINITY, 0);
    swift_release();
    v29 = sub_22CC655C8();
    sub_22CC652C8();
    v41[0] = 0;
    v44[8] = v42[8];
    v44[9] = v42[9];
    v45 = v43;
    v44[4] = v42[4];
    v44[5] = v42[5];
    v44[6] = v42[6];
    v44[7] = v42[7];
    v44[0] = v42[0];
    v44[1] = v42[1];
    v44[2] = v42[2];
    v44[3] = v42[3];
    v46 = v29;
    v47 = v30;
    v48 = v31;
    v49 = v32;
    v50 = v33;
    v51 = 0;
    nullsub_1(v44);
  }
  else
  {
    sub_22CC63FD4((uint64_t)v44);
  }
  sub_22CC4A680((uint64_t)v44, (uint64_t)v63, &qword_255C3DCA8, (uint64_t (*)(uint64_t))sub_22CC633A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  sub_22CC0DE10((uint64_t)v25, (uint64_t)v20, (uint64_t (*)(_QWORD))sub_22CC634B4);
  v34 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_22CC4A680((uint64_t)v63, (uint64_t)v41, &qword_255C3DCA8, (uint64_t (*)(uint64_t))sub_22CC633A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v35 = v40;
  sub_22CC0DE10((uint64_t)v20, v40, (uint64_t (*)(_QWORD))sub_22CC634B4);
  sub_22CC63490(0);
  v37 = v35 + *(int *)(v36 + 48);
  sub_22CC4A680((uint64_t)v41, (uint64_t)v42, &qword_255C3DCA8, (uint64_t (*)(uint64_t))sub_22CC633A4, v34);
  sub_22CC4A680((uint64_t)v42, v37, &qword_255C3DCA8, (uint64_t (*)(uint64_t))sub_22CC633A4, v34);
  sub_22CC641E8((uint64_t)v42);
  sub_22CC0DE54((uint64_t)v25, (uint64_t (*)(_QWORD))sub_22CC634B4);
  sub_22CC4A680((uint64_t)v41, (uint64_t)v44, &qword_255C3DCA8, (uint64_t (*)(uint64_t))sub_22CC633A4, v34);
  sub_22CC64210((uint64_t)v44);
  return sub_22CC0DE54((uint64_t)v20, (uint64_t (*)(_QWORD))sub_22CC634B4);
}

uint64_t sub_22CC618A0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>, double a9@<D1>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t *v48;
  char *v49;
  _QWORD *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  double *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  _BOOL4 v95;
  unint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  unint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;

  v108 = a5;
  v106 = a3;
  v107 = a4;
  sub_22CC082A8(0, &qword_255C3DD18, (uint64_t (*)(uint64_t))sub_22CC63650, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v93 - v19;
  v21 = (int *)type metadata accessor for BarView(0);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (uint64_t *)((char *)&v93 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v22);
  v111 = (uint64_t)&v93 - v25;
  sub_22CC63634(0);
  v109 = v26;
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v93 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC63618(0);
  v110 = v29;
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v93 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC635FC(0);
  v33 = MEMORY[0x24BDAC7A8](v32);
  v34 = MEMORY[0x24BDAC7A8](v33);
  result = MEMORY[0x24BDAC7A8](v34);
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  v39 = *(_QWORD *)(a1 + 16);
  if (v39 <= a2)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  v101 = v37;
  v103 = v20;
  v104 = a7;
  v105 = v18;
  v96 = v39;
  v40 = (_QWORD *)(a1 + 48 * a2);
  v41 = v40[4];
  v42 = v40[5];
  v97 = v28;
  v98 = v31;
  v44 = v40[6];
  v43 = v40[7];
  v100 = (char *)&v93 - v36;
  v102 = a2;
  v45 = v40[8];
  v94 = v40[9];
  v95 = (*(_QWORD *)(a6 + 8) & 1) == 0;
  v99 = v38;
  *v24 = swift_getKeyPath();
  v46 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_22CC082A8(0, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  v47 = a6;
  v48 = (uint64_t *)((char *)v24 + v21[5]);
  *v48 = swift_getKeyPath();
  sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], v46);
  swift_storeEnumTagMultiPayload();
  v49 = (char *)v24 + v21[6];
  *(_QWORD *)v49 = swift_getKeyPath();
  v49[8] = 0;
  v50 = (uint64_t *)((char *)v24 + v21[7]);
  *v50 = v41;
  v50[1] = v42;
  v50[2] = v44;
  v50[3] = v43;
  v51 = v94;
  v50[4] = v45;
  v50[5] = v51;
  v52 = (char *)v24 + v21[8];
  v53 = v107;
  *(_QWORD *)v52 = v106;
  *((_QWORD *)v52 + 1) = v53;
  v52[16] = v108 & 1;
  v54 = (double *)((char *)v24 + v21[9]);
  *v54 = a8;
  v54[1] = a9;
  *((_BYTE *)v24 + v21[10]) = v95;
  v55 = v111;
  sub_22CC0DDCC((uint64_t)v24, v111, type metadata accessor for BarView);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v56 = (uint64_t)v100;
  swift_bridgeObjectRetain();
  v57 = v47;
  v58 = v102;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v59 = sub_22CC655EC();
  v60 = *(_QWORD *)(v57 + 8);
  sub_22CC652C8();
  v62 = v61;
  v64 = v63;
  v66 = v65;
  v68 = v67;
  v69 = (uint64_t)v97;
  sub_22CC0DE10(v55, (uint64_t)v97, type metadata accessor for BarView);
  v70 = v69 + *(int *)(v109 + 36);
  *(_BYTE *)v70 = v59;
  *(_QWORD *)(v70 + 8) = v62;
  *(_QWORD *)(v70 + 16) = v64;
  *(_QWORD *)(v70 + 24) = v66;
  *(_QWORD *)(v70 + 32) = v68;
  *(_BYTE *)(v70 + 40) = 0;
  sub_22CC0DE54(v55, type metadata accessor for BarView);
  v71 = sub_22CC65604();
  sub_22CC652C8();
  v73 = v72;
  v75 = v74;
  v77 = v76;
  v79 = v78;
  v80 = (uint64_t)v98;
  sub_22CC0DE10(v69, (uint64_t)v98, (uint64_t (*)(_QWORD))sub_22CC63634);
  v81 = v80 + *(int *)(v110 + 36);
  *(_BYTE *)v81 = v71;
  *(_QWORD *)(v81 + 8) = v73;
  *(_QWORD *)(v81 + 16) = v75;
  *(_QWORD *)(v81 + 24) = v77;
  *(_QWORD *)(v81 + 32) = v79;
  *(_BYTE *)(v81 + 40) = 0;
  sub_22CC0DE54(v69, (uint64_t (*)(_QWORD))sub_22CC63634);
  v82 = sub_22CC65910();
  v83 = v99;
  sub_22CC5FFE0(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v99, 0.0, 1, INFINITY, 0, v82, v84, (void (*)(uint64_t, uint64_t))sub_22CC64554, (uint64_t (*)(_QWORD))sub_22CC635FC);
  sub_22CC0DE54(v80, (uint64_t (*)(_QWORD))sub_22CC63618);
  sub_22CC0DDCC(v83, v56, (uint64_t (*)(_QWORD))sub_22CC635FC);
  if ((v60 & 2) != 0)
  {
    v86 = (uint64_t)v103;
    sub_22CC61F04(v58, (uint64_t)v103);
    sub_22CC63650();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 56))(v86, 0, 1, v87);
  }
  else
  {
    sub_22CC63650();
    v86 = (uint64_t)v103;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 56))(v103, 1, 1, v85);
  }
  v88 = (uint64_t)v105;
  v89 = v101;
  sub_22CC0DE10(v56, v101, (uint64_t (*)(_QWORD))sub_22CC635FC);
  sub_22CC642E8(v86, v88);
  v90 = v104;
  sub_22CC0DE10(v89, v104, (uint64_t (*)(_QWORD))sub_22CC635FC);
  sub_22CC6354C(0);
  sub_22CC642E8(v88, v90 + *(int *)(v91 + 48));
  v92 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_22CC17438(v86, &qword_255C3DD18, (uint64_t (*)(uint64_t))sub_22CC63650, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  sub_22CC0DE54(v56, (uint64_t (*)(_QWORD))sub_22CC635FC);
  sub_22CC17438(v88, &qword_255C3DD18, (uint64_t (*)(uint64_t))sub_22CC63650, v92);
  return sub_22CC0DE54(v89, (uint64_t (*)(_QWORD))sub_22CC635FC);
}

uint64_t sub_22CC61F04@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char *v45;
  uint64_t KeyPath;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;

  v4 = sub_22CC656A0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v69 = (uint64_t)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC63770();
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC636F4();
  v13 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC210F4(0, &qword_255C3DD28, v16, (uint64_t (*)(uint64_t))sub_22CC2848C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  result = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v58 - v19;
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  v21 = *(_QWORD *)(v70 + 16);
  if (*(_QWORD *)(v21 + 16) <= a1)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  v68 = a2;
  v22 = v21 + 16 * a1;
  v65 = result;
  v66 = a1;
  v23 = *(_QWORD *)(v22 + 40);
  v71 = *(_QWORD *)(v22 + 32);
  v72 = v23;
  sub_22CC08C70();
  v64 = v13;
  swift_bridgeObjectRetain();
  v24 = sub_22CC65718();
  v26 = v25;
  v61 = v5;
  v63 = v9;
  v28 = v27 & 1;
  sub_22CC6561C();
  v67 = v20;
  v29 = sub_22CC65700();
  v59 = v11;
  v60 = v4;
  v30 = v29;
  v31 = (uint64_t)v15;
  v33 = v32;
  v62 = v8;
  v35 = v34;
  v37 = v36;
  swift_release();
  sub_22CC1BCCC(v24, v26, v28);
  swift_bridgeObjectRelease();
  v71 = v30;
  v72 = v33;
  v73 = v35 & 1;
  v74 = v37;
  sub_22CC6561C();
  v38 = type metadata accessor for SleepWidgetChartView();
  v40 = v69;
  v39 = v70;
  sub_22CC20C48(v69);
  v41 = v39 + *(int *)(v38 + 40);
  v42 = *(_QWORD *)v41;
  LOBYTE(v38) = *(_BYTE *)(v41 + 8);
  sub_22CC11614(*(_QWORD *)v41, v38);
  sub_22CC20A38(v42, v38);
  v43 = v38;
  v44 = (uint64_t)v67;
  sub_22CC11750(v42, v43);
  v45 = v59;
  sub_22CC6573C();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v40, v60);
  sub_22CC1BCCC(v71, v72, v73);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v47 = v63;
  v48 = v45;
  v49 = v45;
  v50 = v62;
  (*(void (**)(uint64_t, char *, uint64_t))(v63 + 16))(v31, v49, v62);
  v51 = (uint64_t *)(v31 + *(int *)(v64 + 36));
  *v51 = KeyPath;
  v51[1] = 0x3FE0000000000000;
  (*(void (**)(char *, uint64_t))(v47 + 8))(v48, v50);
  v52 = swift_getKeyPath();
  sub_22CC0DE10(v31, v44, (uint64_t (*)(_QWORD))sub_22CC636F4);
  v53 = v44 + *(int *)(v65 + 36);
  *(_QWORD *)v53 = v52;
  *(_QWORD *)(v53 + 8) = 1;
  *(_BYTE *)(v53 + 16) = 0;
  sub_22CC0DE54(v31, (uint64_t (*)(_QWORD))sub_22CC636F4);
  if (v66 == 6)
    v54 = sub_22CC65820();
  else
    v54 = sub_22CC65808();
  v55 = v54;
  v56 = v68;
  sub_22CC64494(v44, v68);
  sub_22CC63650();
  *(_QWORD *)(v56 + *(int *)(v57 + 36)) = v55;
  return sub_22CC644F8(v44);
}

uint64_t sub_22CC622CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[216];
  _BYTE v41[216];
  _OWORD v42[10];
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  char v58;
  __int128 v59;
  _BYTE v60[224];

  v37 = a4;
  v35 = a2;
  v36 = a3;
  v39 = a5;
  v8 = type metadata accessor for SleepWidgetChartView();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  sub_22CC63B78(0, &qword_255C3DDB0, sub_22CC63C2C);
  v12 = v11;
  v38 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v34 - v16;
  if ((*(_BYTE *)(a1 + 8) & 2) != 0)
  {
    sub_22CC65820();
    v18 = sub_22CC6582C();
    swift_release();
    if (qword_255C3C928 != -1)
      swift_once();
    sub_22CC65910();
    sub_22CC652EC();
    v54 = v18;
    v55 = v49;
    v56 = v50;
    v57 = v51;
    v58 = v52;
    v59 = v53;
    sub_22CC65910();
    sub_22CC5FE28(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v42, 0.0, 1, INFINITY, 0);
    swift_release();
    v19 = sub_22CC655C8();
    sub_22CC652C8();
    v41[0] = 0;
    v43 = v19;
    v44 = v20;
    v45 = v21;
    v46 = v22;
    v47 = v23;
    v48 = 0;
    nullsub_1(v42);
  }
  else
  {
    sub_22CC63FD4((uint64_t)v42);
  }
  sub_22CC4A680((uint64_t)v42, (uint64_t)v60, &qword_255C3DCA8, (uint64_t (*)(uint64_t))sub_22CC633A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v42[0] = xmmword_22CC69230;
  swift_getKeyPath();
  sub_22CC0DE10(a1, (uint64_t)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetChartView);
  v24 = (*(unsigned __int8 *)(v9 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v25 = swift_allocObject();
  v26 = v36;
  *(_QWORD *)(v25 + 16) = v35;
  *(_QWORD *)(v25 + 24) = v26;
  *(_BYTE *)(v25 + 32) = v37 & 1;
  sub_22CC0DDCC((uint64_t)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v25 + v24, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetChartView);
  *(double *)(v25 + ((v10 + v24 + 7) & 0xFFFFFFFFFFFFFFF8)) = a6;
  sub_22CC1600C(0, &qword_2540656E8, MEMORY[0x24BEE1768], MEMORY[0x24BEE1780], MEMORY[0x24BEE1B68]);
  sub_22CC63C2C(0);
  sub_22CC14FC8();
  sub_22CC07B74(&qword_255C3DE40, (uint64_t (*)(uint64_t))sub_22CC63C2C, MEMORY[0x24BDF5428]);
  sub_22CC658E0();
  v27 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_22CC4A680((uint64_t)v60, (uint64_t)v40, &qword_255C3DCA8, (uint64_t (*)(uint64_t))sub_22CC633A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v28 = v38;
  v29 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
  v29(v15, v17, v12);
  sub_22CC4A680((uint64_t)v40, (uint64_t)v41, &qword_255C3DCA8, (uint64_t (*)(uint64_t))sub_22CC633A4, v27);
  v30 = v39;
  sub_22CC4A680((uint64_t)v41, v39, &qword_255C3DCA8, (uint64_t (*)(uint64_t))sub_22CC633A4, v27);
  sub_22CC63AC0(0);
  v29((char *)(v30 + *(int *)(v31 + 48)), v15, v12);
  sub_22CC641E8((uint64_t)v41);
  v32 = *(void (**)(char *, uint64_t))(v28 + 8);
  v32(v17, v12);
  v32(v15, v12);
  sub_22CC4A680((uint64_t)v40, (uint64_t)v42, &qword_255C3DCA8, (uint64_t (*)(uint64_t))sub_22CC633A4, v27);
  return sub_22CC64210((uint64_t)v42);
}

uint64_t sub_22CC62740@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[216];
  _OWORD v36[10];
  uint64_t v37;
  _OWORD v38[10];
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  char v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  char v55;
  __int128 v56;
  _BYTE v57[232];

  v34 = a6;
  v10 = a4 & 1;
  sub_22CC63C6C();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v33 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v33 - v18;
  v20 = *a1;
  *(_QWORD *)v17 = sub_22CC654C0();
  *((_QWORD *)v17 + 1) = 0;
  v17[16] = 0;
  sub_22CC6473C();
  sub_22CC62AEC(a2, a3, v10, a5, v20, (uint64_t)&v17[*(int *)(v21 + 44)]);
  sub_22CC0DDCC((uint64_t)v17, (uint64_t)v19, (uint64_t (*)(_QWORD))sub_22CC63C6C);
  if ((*(_BYTE *)(a5 + 8) & 2) != 0)
  {
    sub_22CC65820();
    v22 = sub_22CC6582C();
    swift_release();
    if (qword_255C3C928 != -1)
      swift_once();
    sub_22CC65910();
    sub_22CC652EC();
    v51 = v22;
    v52 = v46;
    v53 = v47;
    v54 = v48;
    v55 = v49;
    v56 = v50;
    sub_22CC65910();
    sub_22CC5FE28(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v36, 0.0, 1, INFINITY, 0);
    swift_release();
    v23 = sub_22CC655C8();
    sub_22CC652C8();
    v35[0] = 0;
    v38[8] = v36[8];
    v38[9] = v36[9];
    v39 = v37;
    v38[4] = v36[4];
    v38[5] = v36[5];
    v38[6] = v36[6];
    v38[7] = v36[7];
    v38[0] = v36[0];
    v38[1] = v36[1];
    v38[2] = v36[2];
    v38[3] = v36[3];
    v40 = v23;
    v41 = v24;
    v42 = v25;
    v43 = v26;
    v44 = v27;
    v45 = 0;
    nullsub_1(v38);
  }
  else
  {
    sub_22CC63FD4((uint64_t)v38);
  }
  sub_22CC4A680((uint64_t)v38, (uint64_t)v57, &qword_255C3DCA8, (uint64_t (*)(uint64_t))sub_22CC633A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  sub_22CC0DE10((uint64_t)v19, (uint64_t)v14, (uint64_t (*)(_QWORD))sub_22CC63C6C);
  v28 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_22CC4A680((uint64_t)v57, (uint64_t)v35, &qword_255C3DCA8, (uint64_t (*)(uint64_t))sub_22CC633A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v29 = v34;
  sub_22CC0DE10((uint64_t)v14, v34, (uint64_t (*)(_QWORD))sub_22CC63C6C);
  sub_22CC63C48(0);
  v31 = v29 + *(int *)(v30 + 48);
  sub_22CC4A680((uint64_t)v35, (uint64_t)v36, &qword_255C3DCA8, (uint64_t (*)(uint64_t))sub_22CC633A4, v28);
  sub_22CC4A680((uint64_t)v36, v31, &qword_255C3DCA8, (uint64_t (*)(uint64_t))sub_22CC633A4, v28);
  sub_22CC641E8((uint64_t)v36);
  sub_22CC0DE54((uint64_t)v19, (uint64_t (*)(_QWORD))sub_22CC63C6C);
  sub_22CC4A680((uint64_t)v35, (uint64_t)v38, &qword_255C3DCA8, (uint64_t (*)(uint64_t))sub_22CC633A4, v28);
  sub_22CC64210((uint64_t)v38);
  return sub_22CC0DE54((uint64_t)v14, (uint64_t (*)(_QWORD))sub_22CC63C6C);
}

uint64_t sub_22CC62AEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  BOOL v31;
  uint64_t (*v32)(uint64_t, uint64_t);
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v70 = a5;
  v71 = a1;
  v73 = a3;
  v72 = a2;
  v76 = a6;
  sub_22CC082A8(0, &qword_255C3DD18, (uint64_t (*)(uint64_t))sub_22CC63650, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v77 = (uint64_t)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v75 = (uint64_t)&v66 - v10;
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10];
  sub_22CC082A8(0, &qword_255C3CAB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB580]);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (uint64_t *)((char *)&v66 - v13);
  v15 = type metadata accessor for PlaceholderBarView(0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC63D60(0);
  v67 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC63D44(0);
  v69 = v21;
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC63D28(0);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v74 = (uint64_t)&v66 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v68 = (uint64_t)&v66 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v66 - v29;
  v31 = (*(_QWORD *)(a4 + 8) & 1) == 0;
  *v14 = swift_getKeyPath();
  v32 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDEB560];
  sub_22CC082A8(0, &qword_2540658A0, v11, MEMORY[0x24BDEB560]);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)&v17[*(int *)(v15 + 32)] = swift_getKeyPath();
  sub_22CC082A8(0, &qword_2540665B0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFADE0], v32);
  v33 = v70;
  swift_storeEnumTagMultiPayload();
  v34 = v72;
  *(_QWORD *)v17 = v71;
  *((_QWORD *)v17 + 1) = v34;
  v17[16] = v73 & 1;
  *((_QWORD *)v17 + 3) = 0x4018000000000000;
  v17[32] = v31;
  sub_22CC4A680((uint64_t)v14, (uint64_t)&v17[*(int *)(v15 + 28)], &qword_255C3CAB0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB580]);
  LOBYTE(v14) = sub_22CC655EC();
  v35 = *(_QWORD *)(a4 + 8);
  sub_22CC652C8();
  v37 = v36;
  v39 = v38;
  v41 = v40;
  v43 = v42;
  sub_22CC0DE10((uint64_t)v17, (uint64_t)v20, type metadata accessor for PlaceholderBarView);
  v44 = &v20[*(int *)(v67 + 36)];
  *v44 = (char)v14;
  *((_QWORD *)v44 + 1) = v37;
  *((_QWORD *)v44 + 2) = v39;
  *((_QWORD *)v44 + 3) = v41;
  *((_QWORD *)v44 + 4) = v43;
  v44[40] = 0;
  sub_22CC0DE54((uint64_t)v17, type metadata accessor for PlaceholderBarView);
  LOBYTE(v14) = sub_22CC65604();
  sub_22CC652C8();
  v46 = v45;
  v48 = v47;
  v50 = v49;
  v52 = v51;
  sub_22CC0DE10((uint64_t)v20, (uint64_t)v23, (uint64_t (*)(_QWORD))sub_22CC63D60);
  v53 = &v23[*(int *)(v69 + 36)];
  *v53 = (char)v14;
  *((_QWORD *)v53 + 1) = v46;
  *((_QWORD *)v53 + 2) = v48;
  *((_QWORD *)v53 + 3) = v50;
  *((_QWORD *)v53 + 4) = v52;
  v53[40] = 0;
  sub_22CC0DE54((uint64_t)v20, (uint64_t (*)(_QWORD))sub_22CC63D60);
  v54 = sub_22CC65910();
  v55 = v68;
  sub_22CC5FFE0(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v68, 0.0, 1, INFINITY, 0, v54, v56, (void (*)(uint64_t, uint64_t))sub_22CC647B8, (uint64_t (*)(_QWORD))sub_22CC63D28);
  sub_22CC0DE54((uint64_t)v23, (uint64_t (*)(_QWORD))sub_22CC63D44);
  sub_22CC0DDCC(v55, (uint64_t)v30, (uint64_t (*)(_QWORD))sub_22CC63D28);
  if ((v35 & 2) != 0)
  {
    v58 = v75;
    sub_22CC61F04(v33, v75);
    sub_22CC63650();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v58, 0, 1, v59);
  }
  else
  {
    sub_22CC63650();
    v58 = v75;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v75, 1, 1, v57);
  }
  v60 = v74;
  sub_22CC0DE10((uint64_t)v30, v74, (uint64_t (*)(_QWORD))sub_22CC63D28);
  v61 = v77;
  sub_22CC642E8(v58, v77);
  v62 = v76;
  sub_22CC0DE10(v60, v76, (uint64_t (*)(_QWORD))sub_22CC63D28);
  sub_22CC63D04(0);
  sub_22CC642E8(v61, v62 + *(int *)(v63 + 48));
  v64 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68];
  sub_22CC17438(v58, &qword_255C3DD18, (uint64_t (*)(uint64_t))sub_22CC63650, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  sub_22CC0DE54((uint64_t)v30, (uint64_t (*)(_QWORD))sub_22CC63D28);
  sub_22CC17438(v61, &qword_255C3DD18, (uint64_t (*)(uint64_t))sub_22CC63650, v64);
  return sub_22CC0DE54(v60, (uint64_t (*)(_QWORD))sub_22CC63D28);
}

uint64_t sub_22CC6308C@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](a1);
  sub_22CC0DE10(v2, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetChartView);
  v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = swift_allocObject();
  result = sub_22CC0DDCC((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, (uint64_t (*)(_QWORD))type metadata accessor for SleepWidgetChartView);
  *a2 = sub_22CC632A8;
  a2[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v7;
  return result;
}

uint64_t sub_22CC63140()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = (int *)type metadata accessor for SleepWidgetChartView();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v3 + v1[7];
  sub_22CC082A8(0, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_22CC65A3C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  sub_22CC11750(*(_QWORD *)(v3 + v1[8]), *(_BYTE *)(v3 + v1[8] + 8));
  v6 = v3 + v1[9];
  sub_22CC082A8(0, &qword_255C3CF20, (uint64_t (*)(uint64_t))MEMORY[0x24BDF17A8], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_22CC656A0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  sub_22CC11750(*(_QWORD *)(v3 + v1[10]), *(_BYTE *)(v3 + v1[10] + 8));
  return swift_deallocObject();
}

uint64_t sub_22CC632A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SleepWidgetChartView() - 8) + 80);
  return sub_22CC602FC(v1 + ((v3 + 16) & ~v3), a1);
}

void sub_22CC632F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3DC88)
  {
    sub_22CC082A8(255, &qword_255C3DC90, (uint64_t (*)(uint64_t))sub_22CC6336C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    sub_22CC637DC();
    v0 = sub_22CC65898();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3DC88);
  }
}

void sub_22CC6336C(uint64_t a1)
{
  sub_22CC082A8(a1, &qword_255C3DC98, (uint64_t (*)(uint64_t))sub_22CC63388, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_22CC63388(uint64_t a1)
{
  sub_22CC63ADC(a1, &qword_255C3DCA0, &qword_255C3DCD0, sub_22CC63474);
}

void sub_22CC633A4(uint64_t a1)
{
  sub_22CC15F14(a1, &qword_255C3DCB0, sub_22CC633C0);
}

void sub_22CC633C0(uint64_t a1)
{
  sub_22CC15F14(a1, &qword_255C3DCB8, sub_22CC633DC);
}

void sub_22CC633DC(uint64_t a1)
{
  sub_22CC15F14(a1, &qword_255C3DCC0, (void (*)(uint64_t))sub_22CC633F8);
}

void sub_22CC633F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3DCC8)
  {
    sub_22CC1600C(255, &qword_255C3CC70, MEMORY[0x24BDF3E48], MEMORY[0x24BDF3E18], MEMORY[0x24BDF06F8]);
    v0 = sub_22CC6534C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3DCC8);
  }
}

void sub_22CC63474(uint64_t a1)
{
  sub_22CC082A8(a1, &qword_255C3DCD8, (uint64_t (*)(uint64_t))sub_22CC63490, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_22CC63490(uint64_t a1)
{
  sub_22CC63570(a1, &qword_255C3DCE0, (void (*)(uint64_t))sub_22CC634B4, &qword_255C3DCA8, (uint64_t (*)(uint64_t))sub_22CC633A4);
}

void sub_22CC634B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3DCE8)
  {
    sub_22CC082A8(255, &qword_255C3DCF0, (uint64_t (*)(uint64_t))sub_22CC6354C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_22CC16054(&qword_255C3DD40, &qword_255C3DCF0, (uint64_t (*)(uint64_t))sub_22CC6354C);
    v0 = sub_22CC658BC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3DCE8);
  }
}

void sub_22CC6354C(uint64_t a1)
{
  sub_22CC63570(a1, &qword_255C3DCF8, sub_22CC635FC, &qword_255C3DD18, (uint64_t (*)(uint64_t))sub_22CC63650);
}

void sub_22CC63570(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v9;

  if (!*a2)
  {
    a3(255);
    sub_22CC082A8(255, a4, a5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v9)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_22CC635FC(uint64_t a1)
{
  sub_22CC15F14(a1, &qword_255C3DD00, sub_22CC63618);
}

void sub_22CC63618(uint64_t a1)
{
  sub_22CC15F14(a1, &qword_255C3DD08, sub_22CC63634);
}

void sub_22CC63634(uint64_t a1)
{
  sub_22CC15F14(a1, &qword_255C3DD10, (void (*)(uint64_t))type metadata accessor for BarView);
}

void sub_22CC63650()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3DD20)
  {
    sub_22CC210F4(255, &qword_255C3DD28, (uint64_t (*)(uint64_t))sub_22CC636F4, (uint64_t (*)(uint64_t))sub_22CC2848C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
    sub_22CC1600C(255, &qword_255C3CC70, MEMORY[0x24BDF3E48], MEMORY[0x24BDF3E18], MEMORY[0x24BDF06F8]);
    v0 = sub_22CC6534C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3DD20);
  }
}

void sub_22CC636F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3DD30)
  {
    sub_22CC63770();
    sub_22CC08D64(255, (unint64_t *)&qword_254065688, MEMORY[0x24BEE50B0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BDF1008]);
    v0 = sub_22CC6534C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3DD30);
  }
}

void sub_22CC63770()
{
  unint64_t v0;
  uint64_t v1;
  _QWORD v2[2];

  if (!qword_255C3DD38)
  {
    v2[0] = MEMORY[0x24BDF1FA8];
    v2[1] = MEMORY[0x24BDF1F80];
    v0 = MEMORY[0x22E3063BC](0, v2, MEMORY[0x24BEAA158], 0);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3DD38);
  }
}

unint64_t sub_22CC637DC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_255C3DD48;
  if (!qword_255C3DD48)
  {
    sub_22CC082A8(255, &qword_255C3DC90, (uint64_t (*)(uint64_t))sub_22CC6336C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v2 = v1;
    v3 = sub_22CC07B74(&qword_255C3DD50, (uint64_t (*)(uint64_t))sub_22CC6336C, MEMORY[0x24BDF5428]);
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDF5578], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_255C3DD48);
  }
  return result;
}

void sub_22CC6386C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  if (!qword_255C3DD58)
  {
    sub_22CC632F4();
    v3 = v2;
    sub_22CC08D64(255, &qword_255C3DD60, (uint64_t)&type metadata for SleepWidgetChartBar, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    v7[0] = v3;
    v7[1] = v4;
    v7[2] = sub_22CC07B74(&qword_255C3DD68, (uint64_t (*)(uint64_t))sub_22CC632F4, MEMORY[0x24BDF4498]);
    v7[3] = sub_22CC63934();
    v5 = MEMORY[0x22E3063BC](a1, v7, MEMORY[0x24BEAA178], 0);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_255C3DD58);
  }
}

unint64_t sub_22CC63934()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_255C3DD70;
  if (!qword_255C3DD70)
  {
    sub_22CC08D64(255, &qword_255C3DD60, (uint64_t)&type metadata for SleepWidgetChartBar, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    v2 = v1;
    v3 = sub_22CC639AC();
    result = MEMORY[0x22E3063F8](MEMORY[0x24BEE12C0], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_255C3DD70);
  }
  return result;
}

unint64_t sub_22CC639AC()
{
  unint64_t result;

  result = qword_255C3DD78;
  if (!qword_255C3DD78)
  {
    result = MEMORY[0x22E3063F8](&protocol conformance descriptor for SleepWidgetChartBar, &type metadata for SleepWidgetChartBar);
    atomic_store(result, (unint64_t *)&qword_255C3DD78);
  }
  return result;
}

void sub_22CC639F0(uint64_t a1)
{
  sub_22CC15F14(a1, &qword_255C3DD80, sub_22CC6386C);
}

void sub_22CC63A0C(uint64_t a1)
{
  sub_22CC15F14(a1, &qword_255C3DD90, (void (*)(uint64_t))sub_22CC63A28);
}

void sub_22CC63A28()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3DD98)
  {
    sub_22CC082A8(255, &qword_255C3DDA0, (uint64_t (*)(uint64_t))sub_22CC63AC0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_22CC16054(&qword_255C3DE00, &qword_255C3DDA0, (uint64_t (*)(uint64_t))sub_22CC63AC0);
    v0 = sub_22CC65898();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3DD98);
  }
}

void sub_22CC63AC0(uint64_t a1)
{
  sub_22CC63ADC(a1, &qword_255C3DDA8, &qword_255C3DDB0, sub_22CC63C2C);
}

void sub_22CC63ADC(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v8;

  if (!*a2)
  {
    sub_22CC082A8(255, &qword_255C3DCA8, (uint64_t (*)(uint64_t))sub_22CC633A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    sub_22CC63B78(255, a3, a4);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v8)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

void sub_22CC63B78(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_22CC1600C(255, &qword_2540656E8, MEMORY[0x24BEE1768], MEMORY[0x24BEE1780], MEMORY[0x24BEE1B68]);
    a3(255);
    sub_22CC14FC8();
    v5 = sub_22CC658EC();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_22CC63C2C(uint64_t a1)
{
  sub_22CC082A8(a1, &qword_255C3DDB8, (uint64_t (*)(uint64_t))sub_22CC63C48, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
}

void sub_22CC63C48(uint64_t a1)
{
  sub_22CC63570(a1, &qword_255C3DDC0, (void (*)(uint64_t))sub_22CC63C6C, &qword_255C3DCA8, (uint64_t (*)(uint64_t))sub_22CC633A4);
}

void sub_22CC63C6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3DDC8)
  {
    sub_22CC082A8(255, &qword_255C3DDD0, (uint64_t (*)(uint64_t))sub_22CC63D04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    sub_22CC16054(&qword_255C3DDF8, &qword_255C3DDD0, (uint64_t (*)(uint64_t))sub_22CC63D04);
    v0 = sub_22CC658BC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3DDC8);
  }
}

void sub_22CC63D04(uint64_t a1)
{
  sub_22CC63570(a1, &qword_255C3DDD8, sub_22CC63D28, &qword_255C3DD18, (uint64_t (*)(uint64_t))sub_22CC63650);
}

void sub_22CC63D28(uint64_t a1)
{
  sub_22CC15F14(a1, &qword_255C3DDE0, sub_22CC63D44);
}

void sub_22CC63D44(uint64_t a1)
{
  sub_22CC15F14(a1, &qword_255C3DDE8, sub_22CC63D60);
}

void sub_22CC63D60(uint64_t a1)
{
  sub_22CC15F14(a1, &qword_255C3DDF0, (void (*)(uint64_t))type metadata accessor for PlaceholderBarView);
}

void sub_22CC63D7C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3DE08)
  {
    sub_22CC082A8(255, &qword_255C3DDA0, (uint64_t (*)(uint64_t))sub_22CC63AC0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    v0 = sub_22CC65310();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3DE08);
  }
}

unint64_t sub_22CC63DF8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[6];

  result = qword_255C3DE10;
  if (!qword_255C3DE10)
  {
    sub_22CC639F0(255);
    v2 = v1;
    sub_22CC632F4();
    v4 = v3;
    sub_22CC08D64(255, &qword_255C3DD60, (uint64_t)&type metadata for SleepWidgetChartBar, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    v6[2] = v4;
    v6[3] = v5;
    v6[4] = sub_22CC07B74(&qword_255C3DD68, (uint64_t (*)(uint64_t))sub_22CC632F4, MEMORY[0x24BDF4498]);
    v6[5] = sub_22CC63934();
    v6[0] = swift_getOpaqueTypeConformance2();
    v6[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDED308], v2, v6);
    atomic_store(result, (unint64_t *)&qword_255C3DE10);
  }
  return result;
}

unint64_t sub_22CC63ED8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255C3DE18;
  if (!qword_255C3DE18)
  {
    sub_22CC63A0C(255);
    v2 = v1;
    v3[0] = sub_22CC07B74(&qword_255C3DE20, (uint64_t (*)(uint64_t))sub_22CC63A28, MEMORY[0x24BDF4498]);
    v3[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDED308], v2, v3);
    atomic_store(result, (unint64_t *)&qword_255C3DE18);
  }
  return result;
}

void sub_22CC63F58()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3DE28)
  {
    sub_22CC082A8(255, &qword_255C3DC90, (uint64_t (*)(uint64_t))sub_22CC6336C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
    v0 = sub_22CC65310();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3DE28);
  }
}

double sub_22CC63FD4(uint64_t a1)
{
  double result;

  *(_BYTE *)(a1 + 208) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_22CC63FFC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = (int *)type metadata accessor for SleepWidgetChartView();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_bridgeObjectRelease();
  v3 = v0 + ((v2 + 64) & ~v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v3 + v1[7];
  sub_22CC082A8(0, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_22CC65A3C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  sub_22CC11750(*(_QWORD *)(v3 + v1[8]), *(_BYTE *)(v3 + v1[8] + 8));
  v6 = v3 + v1[9];
  sub_22CC082A8(0, &qword_255C3CF20, (uint64_t (*)(uint64_t))MEMORY[0x24BDF17A8], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_22CC656A0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  sub_22CC11750(*(_QWORD *)(v3 + v1[10]), *(_BYTE *)(v3 + v1[10] + 8));
  return swift_deallocObject();
}

uint64_t sub_22CC64178@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SleepWidgetChartView() - 8) + 80);
  return sub_22CC614D8(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_BYTE *)(v2 + 40), v2 + ((v5 + 64) & ~v5), a2, *(double *)(v2 + 48), *(double *)(v2 + 56));
}

uint64_t sub_22CC641E8(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_22CC64210(uint64_t a1)
{
  swift_release();
  return a1;
}

void sub_22CC64238()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3DE38)
  {
    sub_22CC082A8(255, &qword_255C3DCF0, (uint64_t (*)(uint64_t))sub_22CC6354C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    v0 = sub_22CC65310();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3DE38);
  }
}

uint64_t sub_22CC642BC()
{
  return sub_22CC65424();
}

uint64_t sub_22CC642E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_22CC082A8(0, &qword_255C3DD18, (uint64_t (*)(uint64_t))sub_22CC63650, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22CC64344@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_22CC653C4();
  *a1 = v3;
  return result;
}

uint64_t sub_22CC6436C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_22CC653C4();
  *a1 = v3;
  return result;
}

uint64_t sub_22CC64394()
{
  return sub_22CC653D0();
}

uint64_t sub_22CC643B8()
{
  return sub_22CC653D0();
}

uint64_t sub_22CC643DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_22CC65448();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_22CC6440C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_22CC65448();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_22CC6443C()
{
  return sub_22CC65454();
}

uint64_t sub_22CC64468()
{
  return sub_22CC65454();
}

uint64_t sub_22CC64494(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_22CC210F4(0, &qword_255C3DD28, (uint64_t (*)(uint64_t))sub_22CC636F4, (uint64_t (*)(uint64_t))sub_22CC2848C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_22CC644F8(uint64_t a1)
{
  uint64_t v2;

  sub_22CC210F4(0, &qword_255C3DD28, (uint64_t (*)(uint64_t))sub_22CC636F4, (uint64_t (*)(uint64_t))sub_22CC2848C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDED2D0]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_22CC64554(uint64_t a1, uint64_t a2)
{
  return sub_22CC0DE10(a1, a2, (uint64_t (*)(_QWORD))sub_22CC63618);
}

uint64_t sub_22CC64560()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = (int *)type metadata accessor for SleepWidgetChartView();
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 33) & ~v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v3 + v1[7];
  sub_22CC082A8(0, &qword_2540658A0, (uint64_t (*)(uint64_t))MEMORY[0x24BDFAF10], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v5 = sub_22CC65A3C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  sub_22CC11750(*(_QWORD *)(v3 + v1[8]), *(_BYTE *)(v3 + v1[8] + 8));
  v6 = v3 + v1[9];
  sub_22CC082A8(0, &qword_255C3CF20, (uint64_t (*)(uint64_t))MEMORY[0x24BDF17A8], MEMORY[0x24BDEB560]);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_22CC656A0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  sub_22CC11750(*(_QWORD *)(v3 + v1[10]), *(_BYTE *)(v3 + v1[10] + 8));
  return swift_deallocObject();
}

uint64_t sub_22CC646D4@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for SleepWidgetChartView() - 8) + 80);
  return sub_22CC62740(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_BYTE *)(v2 + 32), v2 + ((v5 + 33) & ~v5), a2);
}

void sub_22CC6473C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3DE48)
  {
    sub_22CC082A8(255, &qword_255C3DDD0, (uint64_t (*)(uint64_t))sub_22CC63D04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDF53F0]);
    v0 = sub_22CC65310();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3DE48);
  }
}

uint64_t sub_22CC647B8(uint64_t a1, uint64_t a2)
{
  return sub_22CC0DE10(a1, a2, (uint64_t (*)(_QWORD))sub_22CC63D44);
}

uint64_t sub_22CC647C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v0 = sub_22CC65100();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_22CC082A8(0, &qword_255C3DE50, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEEA8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v26 - v5;
  v7 = sub_22CC6507C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_22CC65118();
  v11 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BDCEF70], v7);
  sub_22CC65088();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_22CC65058();
  v14 = sub_22CC65070();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v6, 0, 1, v14);
  sub_22CC650E8();
  v15 = sub_22CC650B8();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BDCF278], v0);
  v16 = sub_22CC6510C();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v17 = *(_QWORD *)(v15 + 16);
  if (v17 < v16)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v16 < 0)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    swift_bridgeObjectRelease();
    v20 = sub_22CC2D448(v15, v0, v16, (2 * v17) | 1);
    goto LABEL_8;
  }
  v0 = v15 + 32;
  sub_22CC65EBC();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  v18 = swift_dynamicCastClass();
  if (!v18)
  {
    swift_bridgeObjectRelease();
    v18 = MEMORY[0x24BEE4AF8];
  }
  v19 = *(_QWORD *)(v18 + 16);
  swift_release();
  if (v19 != v17 - v16)
    goto LABEL_16;
  v20 = swift_dynamicCastClass();
  if (!v20)
  {
    swift_bridgeObjectRelease();
    v20 = MEMORY[0x24BEE4AF8];
  }
LABEL_8:
  swift_bridgeObjectRelease();
  swift_unknownObjectRetain_n();
  v21 = swift_dynamicCastClass();
  if (!v21)
  {
    swift_bridgeObjectRelease();
    v21 = MEMORY[0x24BEE4AF8];
  }
  v22 = *(_QWORD *)(v21 + 16);
  swift_release();
  if (v22 == v16)
  {
    v23 = swift_dynamicCastClass();
    if (!v23)
    {
      swift_bridgeObjectRelease();
      v23 = MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v23 = sub_22CC2D448(v15, v0, 0, (2 * v16) | 1);
  }
  swift_bridgeObjectRelease();
  v27 = v20;
  sub_22CC2B850(v23);
  v24 = v27;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v26);
  return v24;
}

ValueMetadata *type metadata accessor for SleepWidgetChartView.Options()
{
  return &type metadata for SleepWidgetChartView.Options;
}

uint64_t sub_22CC64B2C()
{
  return sub_22CC07B74(&qword_255C3DE58, (uint64_t (*)(uint64_t))sub_22CC64B58, MEMORY[0x24BDEC6F8]);
}

void sub_22CC64B58()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_255C3DE60)
  {
    sub_22CC210F4(255, &qword_255C3DE68, (uint64_t (*)(uint64_t))sub_22CC639F0, (uint64_t (*)(uint64_t))sub_22CC63A0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
    sub_22CC64BD8();
    v0 = sub_22CC65328();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_255C3DE60);
  }
}

unint64_t sub_22CC64BD8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_255C3DE70;
  if (!qword_255C3DE70)
  {
    sub_22CC210F4(255, &qword_255C3DE68, (uint64_t (*)(uint64_t))sub_22CC639F0, (uint64_t (*)(uint64_t))sub_22CC63A0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BDEF3B8]);
    v2 = v1;
    v3[0] = sub_22CC63DF8();
    v3[1] = sub_22CC63ED8();
    result = MEMORY[0x22E3063F8](MEMORY[0x24BDEF3E0], v2, v3);
    atomic_store(result, (unint64_t *)&qword_255C3DE70);
  }
  return result;
}

unint64_t sub_22CC64C64()
{
  unint64_t result;

  result = qword_255C3DE78;
  if (!qword_255C3DE78)
  {
    result = MEMORY[0x22E3063F8](&unk_22CC69410, &type metadata for SleepWidgetChartView.Options);
    atomic_store(result, (unint64_t *)&qword_255C3DE78);
  }
  return result;
}

unint64_t sub_22CC64CAC()
{
  unint64_t result;

  result = qword_255C3DE80;
  if (!qword_255C3DE80)
  {
    result = MEMORY[0x22E3063F8](&unk_22CC693E0, &type metadata for SleepWidgetChartView.Options);
    atomic_store(result, (unint64_t *)&qword_255C3DE80);
  }
  return result;
}

unint64_t sub_22CC64CF4()
{
  unint64_t result;

  result = qword_255C3DE88;
  if (!qword_255C3DE88)
  {
    result = MEMORY[0x22E3063F8](&unk_22CC69438, &type metadata for SleepWidgetChartView.Options);
    atomic_store(result, (unint64_t *)&qword_255C3DE88);
  }
  return result;
}

unint64_t sub_22CC64D3C()
{
  unint64_t result;

  result = qword_255C3DE90;
  if (!qword_255C3DE90)
  {
    result = MEMORY[0x22E3063F8](&unk_22CC69470, &type metadata for SleepWidgetChartView.Options);
    atomic_store(result, (unint64_t *)&qword_255C3DE90);
  }
  return result;
}

uint64_t sub_22CC64D80(uint64_t a1)
{
  return sub_22CC64DC8(a1, (uint64_t)&unk_24F76F480, &qword_255C3FD58, &qword_255C3FD60);
}

uint64_t sub_22CC64D98(uint64_t a1)
{
  return sub_22CC64DC8(a1, (uint64_t)&unk_24F76F450, &qword_254067968, &qword_254067970);
}

uint64_t sub_22CC64DB0(uint64_t a1)
{
  return sub_22CC64DC8(a1, (uint64_t)&unk_24F76F3F8, &qword_254067958, &qword_254067960);
}

uint64_t sub_22CC64DC8(uint64_t a1, uint64_t a2, uint64_t *a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v6 = sub_22CC651CC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8]();
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEA9CE8], v6);
  v10 = sub_22CC65B50();
  v12 = v11;
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *a3 = v10;
  *a4 = v12;
  return result;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self();
}

uint64_t sub_22CC64EA8()
{
  return MEMORY[0x24BDB5608]();
}

uint64_t sub_22CC64EB4()
{
  return MEMORY[0x24BDB5630]();
}

uint64_t sub_22CC64EC0()
{
  return MEMORY[0x24BEA9A30]();
}

uint64_t sub_22CC64ECC()
{
  return MEMORY[0x24BDCB828]();
}

uint64_t sub_22CC64ED8()
{
  return MEMORY[0x24BDCB830]();
}

uint64_t sub_22CC64EE4()
{
  return MEMORY[0x24BDCB838]();
}

uint64_t sub_22CC64EF0()
{
  return MEMORY[0x24BDCB848]();
}

uint64_t sub_22CC64EFC()
{
  return MEMORY[0x24BDCB870]();
}

uint64_t sub_22CC64F08()
{
  return MEMORY[0x24BDCB878]();
}

uint64_t sub_22CC64F14()
{
  return MEMORY[0x24BDCBCC0]();
}

uint64_t sub_22CC64F20()
{
  return MEMORY[0x24BDCBDE0]();
}

uint64_t sub_22CC64F2C()
{
  return MEMORY[0x24BDEAD50]();
}

uint64_t sub_22CC64F38()
{
  return MEMORY[0x24BDEAD60]();
}

uint64_t sub_22CC64F44()
{
  return MEMORY[0x24BEA9A38]();
}

uint64_t sub_22CC64F50()
{
  return MEMORY[0x24BDCC2F0]();
}

uint64_t sub_22CC64F5C()
{
  return MEMORY[0x24BDCC5A8]();
}

uint64_t sub_22CC64F68()
{
  return MEMORY[0x24BDCC5D8]();
}

uint64_t sub_22CC64F74()
{
  return MEMORY[0x24BDCC6D8]();
}

uint64_t sub_22CC64F80()
{
  return MEMORY[0x24BDCC860]();
}

uint64_t sub_22CC64F8C()
{
  return MEMORY[0x24BDCC878]();
}

uint64_t sub_22CC64F98()
{
  return MEMORY[0x24BDCC880]();
}

uint64_t sub_22CC64FA4()
{
  return MEMORY[0x24BDCC890]();
}

uint64_t sub_22CC64FB0()
{
  return MEMORY[0x24BDCC898]();
}

uint64_t sub_22CC64FBC()
{
  return MEMORY[0x24BDEAD90]();
}

uint64_t sub_22CC64FC8()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_22CC64FD4()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t sub_22CC64FE0()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_22CC64FEC()
{
  return MEMORY[0x24BEA9A50]();
}

uint64_t sub_22CC64FF8()
{
  return MEMORY[0x24BEA9A60]();
}

uint64_t sub_22CC65004()
{
  return MEMORY[0x24BDCE330]();
}

uint64_t sub_22CC65010()
{
  return MEMORY[0x24BDCE468]();
}

uint64_t sub_22CC6501C()
{
  return MEMORY[0x24BDCE5D8]();
}

uint64_t sub_22CC65028()
{
  return MEMORY[0x24BDCE878]();
}

uint64_t sub_22CC65034()
{
  return MEMORY[0x24BDCE880]();
}

uint64_t sub_22CC65040()
{
  return MEMORY[0x24BDCE8F8]();
}

uint64_t sub_22CC6504C()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_22CC65058()
{
  return MEMORY[0x24BDCED58]();
}

uint64_t sub_22CC65064()
{
  return MEMORY[0x24BE49C38]();
}

uint64_t sub_22CC65070()
{
  return MEMORY[0x24BDCEEA8]();
}

uint64_t sub_22CC6507C()
{
  return MEMORY[0x24BDCEF80]();
}

uint64_t sub_22CC65088()
{
  return MEMORY[0x24BDCEFA0]();
}

uint64_t sub_22CC65094()
{
  return MEMORY[0x24BDCEFC8]();
}

uint64_t sub_22CC650A0()
{
  return MEMORY[0x24BEA9A70]();
}

uint64_t sub_22CC650AC()
{
  return MEMORY[0x24BDCF0C0]();
}

uint64_t sub_22CC650B8()
{
  return MEMORY[0x24BDCF0F8]();
}

uint64_t sub_22CC650C4()
{
  return MEMORY[0x24BDCF128]();
}

uint64_t sub_22CC650D0()
{
  return MEMORY[0x24BDCF140]();
}

uint64_t sub_22CC650DC()
{
  return MEMORY[0x24BDCF160]();
}

uint64_t sub_22CC650E8()
{
  return MEMORY[0x24BDCF1A0]();
}

uint64_t sub_22CC650F4()
{
  return MEMORY[0x24BDCF1B0]();
}

uint64_t sub_22CC65100()
{
  return MEMORY[0x24BDCF290]();
}

uint64_t sub_22CC6510C()
{
  return MEMORY[0x24BDCF2D0]();
}

uint64_t sub_22CC65118()
{
  return MEMORY[0x24BDCF2D8]();
}

uint64_t sub_22CC65124()
{
  return MEMORY[0x24BEA9A78]();
}

uint64_t sub_22CC65130()
{
  return MEMORY[0x24BEA9A80]();
}

uint64_t sub_22CC6513C()
{
  return MEMORY[0x24BEA9A98]();
}

uint64_t sub_22CC65148()
{
  return MEMORY[0x24BEA9B48]();
}

uint64_t sub_22CC65154()
{
  return MEMORY[0x24BEA9B50]();
}

uint64_t sub_22CC65160()
{
  return MEMORY[0x24BEA9B58]();
}

uint64_t sub_22CC6516C()
{
  return MEMORY[0x24BEA9B60]();
}

uint64_t sub_22CC65178()
{
  return MEMORY[0x24BEA9B68]();
}

uint64_t sub_22CC65184()
{
  return MEMORY[0x24BEA9B70]();
}

uint64_t sub_22CC65190()
{
  return MEMORY[0x24BEA9B78]();
}

uint64_t sub_22CC6519C()
{
  return MEMORY[0x24BEA9B88]();
}

uint64_t sub_22CC651A8()
{
  return MEMORY[0x24BEA9B90]();
}

uint64_t sub_22CC651B4()
{
  return MEMORY[0x24BEA9B98]();
}

uint64_t sub_22CC651C0()
{
  return MEMORY[0x24BEA9BB0]();
}

uint64_t sub_22CC651CC()
{
  return MEMORY[0x24BEA9D00]();
}

uint64_t sub_22CC651D8()
{
  return MEMORY[0x24BEA9DD8]();
}

uint64_t sub_22CC651E4()
{
  return MEMORY[0x24BEA9DE0]();
}

uint64_t sub_22CC651F0()
{
  return MEMORY[0x24BEA9F30]();
}

uint64_t sub_22CC651FC()
{
  return MEMORY[0x24BEAA020]();
}

uint64_t sub_22CC65208()
{
  return MEMORY[0x24BEAA028]();
}

uint64_t sub_22CC65214()
{
  return MEMORY[0x24BEAA030]();
}

uint64_t sub_22CC65220()
{
  return MEMORY[0x24BEAA038]();
}

uint64_t sub_22CC6522C()
{
  return MEMORY[0x24BEAA040]();
}

uint64_t sub_22CC65238()
{
  return MEMORY[0x24BEAA048]();
}

uint64_t sub_22CC65244()
{
  return MEMORY[0x24BEAA068]();
}

uint64_t sub_22CC65250()
{
  return MEMORY[0x24BEAA078]();
}

uint64_t sub_22CC6525C()
{
  return MEMORY[0x24BEAA0A0]();
}

uint64_t sub_22CC65268()
{
  return MEMORY[0x24BEAA0A8]();
}

uint64_t sub_22CC65274()
{
  return MEMORY[0x24BEAA0B8]();
}

uint64_t sub_22CC65280()
{
  return MEMORY[0x24BEAA0D0]();
}

uint64_t sub_22CC6528C()
{
  return MEMORY[0x24BEAA0D8]();
}

uint64_t sub_22CC65298()
{
  return MEMORY[0x24BEE76F0]();
}

uint64_t sub_22CC652A4()
{
  return MEMORY[0x24BEAA100]();
}

uint64_t sub_22CC652B0()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_22CC652BC()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_22CC652C8()
{
  return MEMORY[0x24BDEB040]();
}

uint64_t sub_22CC652D4()
{
  return MEMORY[0x24BDEB938]();
}

uint64_t sub_22CC652E0()
{
  return MEMORY[0x24BDEBE30]();
}

uint64_t sub_22CC652EC()
{
  return MEMORY[0x24BDEBED0]();
}

uint64_t sub_22CC652F8()
{
  return MEMORY[0x24BDEBFA0]();
}

uint64_t sub_22CC65304()
{
  return MEMORY[0x24BDEC120]();
}

uint64_t sub_22CC65310()
{
  return MEMORY[0x24BDEC530]();
}

uint64_t sub_22CC6531C()
{
  return MEMORY[0x24BDEC648]();
}

uint64_t sub_22CC65328()
{
  return MEMORY[0x24BDEC6E0]();
}

uint64_t sub_22CC65334()
{
  return MEMORY[0x24BDECEF8]();
}

uint64_t sub_22CC65340()
{
  return MEMORY[0x24BDECF50]();
}

uint64_t sub_22CC6534C()
{
  return MEMORY[0x24BDED2D0]();
}

uint64_t sub_22CC65358()
{
  return MEMORY[0x24BDED998]();
}

uint64_t sub_22CC65364()
{
  return MEMORY[0x24BDEDBA8]();
}

uint64_t sub_22CC65370()
{
  return MEMORY[0x24BDEDE90]();
}

uint64_t sub_22CC6537C()
{
  return MEMORY[0x24BDEDE98]();
}

uint64_t sub_22CC65388()
{
  return MEMORY[0x24BDEDED8]();
}

uint64_t sub_22CC65394()
{
  return MEMORY[0x24BDEDEE0]();
}

uint64_t sub_22CC653A0()
{
  return MEMORY[0x24BDEE020]();
}

uint64_t sub_22CC653AC()
{
  return MEMORY[0x24BDEE038]();
}

uint64_t sub_22CC653B8()
{
  return MEMORY[0x24BDEE048]();
}

uint64_t sub_22CC653C4()
{
  return MEMORY[0x24BDEE190]();
}

uint64_t sub_22CC653D0()
{
  return MEMORY[0x24BDEE198]();
}

uint64_t sub_22CC653DC()
{
  return MEMORY[0x24BDEE258]();
}

uint64_t sub_22CC653E8()
{
  return MEMORY[0x24BDEE390]();
}

uint64_t sub_22CC653F4()
{
  return MEMORY[0x24BDEE3A0]();
}

uint64_t sub_22CC65400()
{
  return MEMORY[0x24BDEE3C8]();
}

uint64_t sub_22CC6540C()
{
  return MEMORY[0x24BDFAAC0]();
}

uint64_t sub_22CC65418()
{
  return MEMORY[0x24BDFAAE8]();
}

uint64_t sub_22CC65424()
{
  return MEMORY[0x24BDFAB60]();
}

uint64_t sub_22CC65430()
{
  return MEMORY[0x24BDFAB68]();
}

uint64_t sub_22CC6543C()
{
  return MEMORY[0x24BDFAB78]();
}

uint64_t sub_22CC65448()
{
  return MEMORY[0x24BDEE490]();
}

uint64_t sub_22CC65454()
{
  return MEMORY[0x24BDEE4A0]();
}

uint64_t sub_22CC65460()
{
  return MEMORY[0x24BDEE4E0]();
}

uint64_t sub_22CC6546C()
{
  return MEMORY[0x24BDEE4F8]();
}

uint64_t sub_22CC65478()
{
  return MEMORY[0x24BDEE530]();
}

uint64_t sub_22CC65484()
{
  return MEMORY[0x24BDEE538]();
}

uint64_t sub_22CC65490()
{
  return MEMORY[0x24BDEE718]();
}

uint64_t sub_22CC6549C()
{
  return MEMORY[0x24BDEE730]();
}

uint64_t sub_22CC654A8()
{
  return MEMORY[0x24BDEEB88]();
}

uint64_t sub_22CC654B4()
{
  return MEMORY[0x24BDEEBE0]();
}

uint64_t sub_22CC654C0()
{
  return MEMORY[0x24BDEEF60]();
}

uint64_t sub_22CC654CC()
{
  return MEMORY[0x24BDEEF78]();
}

uint64_t sub_22CC654D8()
{
  return MEMORY[0x24BDFAB90]();
}

uint64_t sub_22CC654E4()
{
  return MEMORY[0x24BDFABA0]();
}

uint64_t sub_22CC654F0()
{
  return MEMORY[0x24BDFABB0]();
}

uint64_t sub_22CC654FC()
{
  return MEMORY[0x24BDFABC0]();
}

uint64_t sub_22CC65508()
{
  return MEMORY[0x24BDFABE0]();
}

uint64_t sub_22CC65514()
{
  return MEMORY[0x24BDEF380]();
}

uint64_t sub_22CC65520()
{
  return MEMORY[0x24BDEF3A0]();
}

uint64_t sub_22CC6552C()
{
  return MEMORY[0x24BDEF3B8]();
}

uint64_t sub_22CC65538()
{
  return MEMORY[0x24BDEFB28]();
}

uint64_t sub_22CC65544()
{
  return MEMORY[0x24BDEFCA8]();
}

uint64_t sub_22CC65550()
{
  return MEMORY[0x24BDEFCB8]();
}

uint64_t sub_22CC6555C()
{
  return MEMORY[0x24BDEFCC8]();
}

uint64_t sub_22CC65568()
{
  return MEMORY[0x24BDFABF0]();
}

uint64_t sub_22CC65574()
{
  return MEMORY[0x24BDF0DC8]();
}

uint64_t sub_22CC65580()
{
  return MEMORY[0x24BDF1008]();
}

uint64_t sub_22CC6558C()
{
  return MEMORY[0x24BDF1088]();
}

uint64_t sub_22CC65598()
{
  return MEMORY[0x24BDF1430]();
}

uint64_t sub_22CC655A4()
{
  return MEMORY[0x24BDF1450]();
}

uint64_t sub_22CC655B0()
{
  return MEMORY[0x24BDF1458]();
}

uint64_t sub_22CC655BC()
{
  return MEMORY[0x24BDF1468]();
}

uint64_t sub_22CC655C8()
{
  return MEMORY[0x24BDF14A8]();
}

uint64_t sub_22CC655D4()
{
  return MEMORY[0x24BDF14C0]();
}

uint64_t sub_22CC655E0()
{
  return MEMORY[0x24BDF14C8]();
}

uint64_t sub_22CC655EC()
{
  return MEMORY[0x24BDF14E0]();
}

uint64_t sub_22CC655F8()
{
  return MEMORY[0x24BDF14E8]();
}

uint64_t sub_22CC65604()
{
  return MEMORY[0x24BDF14F8]();
}

uint64_t sub_22CC65610()
{
  return MEMORY[0x24BEAA110]();
}

uint64_t sub_22CC6561C()
{
  return MEMORY[0x24BEAA118]();
}

uint64_t sub_22CC65628()
{
  return MEMORY[0x24BDF1580]();
}

uint64_t sub_22CC65634()
{
  return MEMORY[0x24BDF15F8]();
}

uint64_t sub_22CC65640()
{
  return MEMORY[0x24BDF1600]();
}

uint64_t sub_22CC6564C()
{
  return MEMORY[0x24BDF1678]();
}

uint64_t sub_22CC65658()
{
  return MEMORY[0x24BDF16A8]();
}

uint64_t sub_22CC65664()
{
  return MEMORY[0x24BDF16D8]();
}

uint64_t sub_22CC65670()
{
  return MEMORY[0x24BDF1700]();
}

uint64_t sub_22CC6567C()
{
  return MEMORY[0x24BDF1750]();
}

uint64_t sub_22CC65688()
{
  return MEMORY[0x24BDF1768]();
}

uint64_t sub_22CC65694()
{
  return MEMORY[0x24BDF1798]();
}

uint64_t sub_22CC656A0()
{
  return MEMORY[0x24BDF17A8]();
}

uint64_t sub_22CC656AC()
{
  return MEMORY[0x24BDF17D8]();
}

uint64_t sub_22CC656B8()
{
  return MEMORY[0x24BDF17F8]();
}

uint64_t sub_22CC656C4()
{
  return MEMORY[0x24BDF1818]();
}

uint64_t sub_22CC656D0()
{
  return MEMORY[0x24BDF1840]();
}

uint64_t sub_22CC656DC()
{
  return MEMORY[0x24BDF1900]();
}

uint64_t sub_22CC656E8()
{
  return MEMORY[0x24BDF1BE8]();
}

uint64_t sub_22CC656F4()
{
  return MEMORY[0x24BDF1D08]();
}

uint64_t sub_22CC65700()
{
  return MEMORY[0x24BDF1DC8]();
}

uint64_t sub_22CC6570C()
{
  return MEMORY[0x24BDF1FD8]();
}

uint64_t sub_22CC65718()
{
  return MEMORY[0x24BDF1FF0]();
}

uint64_t sub_22CC65724()
{
  return MEMORY[0x24BEAA130]();
}

uint64_t sub_22CC65730()
{
  return MEMORY[0x24BEAA140]();
}

uint64_t sub_22CC6573C()
{
  return MEMORY[0x24BEAA150]();
}

uint64_t sub_22CC65748()
{
  return MEMORY[0x24BEAA170]();
}

uint64_t sub_22CC65754()
{
  return MEMORY[0x24BEAA180]();
}

uint64_t sub_22CC65760()
{
  return MEMORY[0x24BEAA190]();
}

uint64_t sub_22CC6576C()
{
  return MEMORY[0x24BDFAC08]();
}

uint64_t sub_22CC65778()
{
  return MEMORY[0x24BDFAC48]();
}

uint64_t sub_22CC65784()
{
  return MEMORY[0x24BDF2088]();
}

uint64_t sub_22CC65790()
{
  return MEMORY[0x24BDF20A0]();
}

uint64_t sub_22CC6579C()
{
  return MEMORY[0x24BDF25F8]();
}

uint64_t sub_22CC657A8()
{
  return MEMORY[0x24BDF2698]();
}

uint64_t sub_22CC657B4()
{
  return MEMORY[0x24BDF27F0]();
}

uint64_t sub_22CC657C0()
{
  return MEMORY[0x24BDF2DE0]();
}

uint64_t sub_22CC657CC()
{
  return MEMORY[0x24BDF3178]();
}

uint64_t sub_22CC657D8()
{
  return MEMORY[0x24BDF37E0]();
}

uint64_t sub_22CC657E4()
{
  return MEMORY[0x24BEAA1B8]();
}

uint64_t sub_22CC657F0()
{
  return MEMORY[0x24BDF3BE8]();
}

uint64_t sub_22CC657FC()
{
  return MEMORY[0x24BDF3BF8]();
}

uint64_t sub_22CC65808()
{
  return MEMORY[0x24BDF3CA8]();
}

uint64_t sub_22CC65814()
{
  return MEMORY[0x24BDF3D10]();
}

uint64_t sub_22CC65820()
{
  return MEMORY[0x24BDF3D30]();
}

uint64_t sub_22CC6582C()
{
  return MEMORY[0x24BDF3D78]();
}

uint64_t sub_22CC65838()
{
  return MEMORY[0x24BDF3D88]();
}

uint64_t sub_22CC65844()
{
  return MEMORY[0x24BDF3E08]();
}

uint64_t sub_22CC65850()
{
  return MEMORY[0x24BDF3E88]();
}

uint64_t sub_22CC6585C()
{
  return MEMORY[0x24BDF3F18]();
}

uint64_t sub_22CC65868()
{
  return MEMORY[0x24BDF3F28]();
}

uint64_t sub_22CC65874()
{
  return MEMORY[0x24BDF3FE8]();
}

uint64_t sub_22CC65880()
{
  return MEMORY[0x24BDF40C0]();
}

uint64_t sub_22CC6588C()
{
  return MEMORY[0x24BDF40D8]();
}

uint64_t sub_22CC65898()
{
  return MEMORY[0x24BDF4480]();
}

uint64_t sub_22CC658A4()
{
  return MEMORY[0x24BDF44B0]();
}

uint64_t sub_22CC658B0()
{
  return MEMORY[0x24BDF46D8]();
}

uint64_t sub_22CC658BC()
{
  return MEMORY[0x24BDF46E0]();
}

uint64_t sub_22CC658C8()
{
  return MEMORY[0x24BDF4730]();
}

uint64_t sub_22CC658D4()
{
  return MEMORY[0x24BDF4790]();
}

uint64_t sub_22CC658E0()
{
  return MEMORY[0x24BDF49A0]();
}

uint64_t sub_22CC658EC()
{
  return MEMORY[0x24BDF49C8]();
}

uint64_t sub_22CC658F8()
{
  return MEMORY[0x24BDF4EC0]();
}

uint64_t sub_22CC65904()
{
  return MEMORY[0x24BDF4EF0]();
}

uint64_t sub_22CC65910()
{
  return MEMORY[0x24BDF4F18]();
}

uint64_t sub_22CC6591C()
{
  return MEMORY[0x24BDF4F20]();
}

uint64_t sub_22CC65928()
{
  return MEMORY[0x24BDF53F0]();
}

uint64_t sub_22CC65934()
{
  return MEMORY[0x24BDF5418]();
}

uint64_t sub_22CC65940()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t sub_22CC6594C()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_22CC65958()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_22CC65964()
{
  return MEMORY[0x24BEE5570]();
}

uint64_t sub_22CC65970()
{
  return MEMORY[0x24BEE5590]();
}

uint64_t sub_22CC6597C()
{
  return MEMORY[0x24BEE5628]();
}

uint64_t sub_22CC65988()
{
  return MEMORY[0x24BE49DA8]();
}

uint64_t sub_22CC65994()
{
  return MEMORY[0x24BE49DB0]();
}

uint64_t sub_22CC659A0()
{
  return MEMORY[0x24BE49E58]();
}

uint64_t sub_22CC659AC()
{
  return MEMORY[0x24BE49E60]();
}

uint64_t sub_22CC659B8()
{
  return MEMORY[0x24BE49E90]();
}

uint64_t sub_22CC659C4()
{
  return MEMORY[0x24BE49E98]();
}

uint64_t sub_22CC659D0()
{
  return MEMORY[0x24BE49EA8]();
}

uint64_t sub_22CC659DC()
{
  return MEMORY[0x24BE49EB8]();
}

uint64_t sub_22CC659E8()
{
  return MEMORY[0x24BDFACC0]();
}

uint64_t sub_22CC659F4()
{
  return MEMORY[0x24BDFADC0]();
}

uint64_t sub_22CC65A00()
{
  return MEMORY[0x24BDFADC8]();
}

uint64_t sub_22CC65A0C()
{
  return MEMORY[0x24BDFADD8]();
}

uint64_t sub_22CC65A18()
{
  return MEMORY[0x24BDFADE0]();
}

uint64_t sub_22CC65A24()
{
  return MEMORY[0x24BDFADF8]();
}

uint64_t sub_22CC65A30()
{
  return MEMORY[0x24BDFAE00]();
}

uint64_t sub_22CC65A3C()
{
  return MEMORY[0x24BDFAF10]();
}

uint64_t sub_22CC65A48()
{
  return MEMORY[0x24BDFAFD8]();
}

uint64_t sub_22CC65A54()
{
  return MEMORY[0x24BDFAFE0]();
}

uint64_t sub_22CC65A60()
{
  return MEMORY[0x24BDFB040]();
}

uint64_t sub_22CC65A6C()
{
  return MEMORY[0x24BDFB0A8]();
}

uint64_t sub_22CC65A78()
{
  return MEMORY[0x24BDFB0B8]();
}

uint64_t sub_22CC65A84()
{
  return MEMORY[0x24BDFB158]();
}

uint64_t sub_22CC65A90()
{
  return MEMORY[0x24BDFB160]();
}

uint64_t sub_22CC65A9C()
{
  return MEMORY[0x24BDFB180]();
}

uint64_t sub_22CC65AA8()
{
  return MEMORY[0x24BDFB190]();
}

uint64_t sub_22CC65AB4()
{
  return MEMORY[0x24BDFB198]();
}

uint64_t sub_22CC65AC0()
{
  return MEMORY[0x24BDFB268]();
}

uint64_t sub_22CC65ACC()
{
  return MEMORY[0x24BDFB270]();
}

uint64_t sub_22CC65AD8()
{
  return MEMORY[0x24BDFB318]();
}

uint64_t sub_22CC65AE4()
{
  return MEMORY[0x24BDFB4D0]();
}

uint64_t sub_22CC65AF0()
{
  return MEMORY[0x24BDFB4D8]();
}

uint64_t sub_22CC65AFC()
{
  return MEMORY[0x24BEE0620]();
}

uint64_t sub_22CC65B08()
{
  return MEMORY[0x24BEE07E0]();
}

uint64_t sub_22CC65B14()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_22CC65B20()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_22CC65B2C()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_22CC65B38()
{
  return MEMORY[0x24BDCFA78]();
}

uint64_t sub_22CC65B44()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_22CC65B50()
{
  return MEMORY[0x24BEAA208]();
}

uint64_t sub_22CC65B5C()
{
  return MEMORY[0x24BEAA230]();
}

uint64_t sub_22CC65B68()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_22CC65B74()
{
  return MEMORY[0x24BE49F68]();
}

uint64_t sub_22CC65B80()
{
  return MEMORY[0x24BE49F70]();
}

uint64_t sub_22CC65B8C()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_22CC65B98()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_22CC65BA4()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_22CC65BB0()
{
  return MEMORY[0x24BEE1120]();
}

uint64_t sub_22CC65BBC()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_22CC65BC8()
{
  return MEMORY[0x24BEE1250]();
}

uint64_t sub_22CC65BD4()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t sub_22CC65BE0()
{
  return MEMORY[0x24BEE6830]();
}

uint64_t sub_22CC65BEC()
{
  return MEMORY[0x24BEAA240]();
}

uint64_t sub_22CC65BF8()
{
  return MEMORY[0x24BDCFCE8]();
}

uint64_t sub_22CC65C04()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_22CC65C10()
{
  return MEMORY[0x24BEE1608]();
}

uint64_t sub_22CC65C1C()
{
  return MEMORY[0x24BEE1610]();
}

uint64_t sub_22CC65C28()
{
  return MEMORY[0x24BE49F78]();
}

uint64_t sub_22CC65C34()
{
  return MEMORY[0x24BEAA258]();
}

uint64_t sub_22CC65C40()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_22CC65C4C()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_22CC65C58()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t sub_22CC65C64()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_22CC65C70()
{
  return MEMORY[0x24BEAA2C0]();
}

uint64_t sub_22CC65C7C()
{
  return MEMORY[0x24BEAA2C8]();
}

uint64_t sub_22CC65C88()
{
  return MEMORY[0x24BEAA2E0]();
}

uint64_t sub_22CC65C94()
{
  return MEMORY[0x24BEAA2E8]();
}

uint64_t sub_22CC65CA0()
{
  return MEMORY[0x24BEAA2F0]();
}

uint64_t sub_22CC65CAC()
{
  return MEMORY[0x24BEE56B8]();
}

uint64_t sub_22CC65CB8()
{
  return MEMORY[0x24BEE5770]();
}

uint64_t sub_22CC65CC4()
{
  return MEMORY[0x24BEE5790]();
}

uint64_t sub_22CC65CD0()
{
  return MEMORY[0x24BEE5BB8]();
}

uint64_t sub_22CC65CDC()
{
  return MEMORY[0x24BEE5BC0]();
}

uint64_t sub_22CC65CE8()
{
  return MEMORY[0x24BEE1C58]();
}

uint64_t sub_22CC65CF4()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_22CC65D00()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_22CC65D0C()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_22CC65D18()
{
  return MEMORY[0x24BDD0538]();
}

uint64_t sub_22CC65D24()
{
  return MEMORY[0x24BEE2210]();
}

uint64_t sub_22CC65D30()
{
  return MEMORY[0x24BEE2270]();
}

uint64_t sub_22CC65D3C()
{
  return MEMORY[0x24BEE22B0]();
}

uint64_t sub_22CC65D48()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_22CC65D54()
{
  return MEMORY[0x24BEE22F8]();
}

uint64_t sub_22CC65D60()
{
  return MEMORY[0x24BEE2308]();
}

uint64_t sub_22CC65D6C()
{
  return MEMORY[0x24BEE2320]();
}

uint64_t sub_22CC65D78()
{
  return MEMORY[0x24BEE2328]();
}

uint64_t sub_22CC65D84()
{
  return MEMORY[0x24BEE2330]();
}

uint64_t sub_22CC65D90()
{
  return MEMORY[0x24BEE2348]();
}

uint64_t sub_22CC65D9C()
{
  return MEMORY[0x24BEE2370]();
}

uint64_t sub_22CC65DA8()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_22CC65DB4()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_22CC65DC0()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_22CC65DCC()
{
  return MEMORY[0x24BEE24D8]();
}

uint64_t sub_22CC65DD8()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_22CC65DE4()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_22CC65DF0()
{
  return MEMORY[0x24BEE2648]();
}

uint64_t sub_22CC65DFC()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_22CC65E08()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_22CC65E14()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_22CC65E20()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_22CC65E2C()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t sub_22CC65E38()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_22CC65E44()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_22CC65E50()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_22CC65E5C()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_22CC65E68()
{
  return MEMORY[0x24BEE3070]();
}

uint64_t sub_22CC65E74()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_22CC65E80()
{
  return MEMORY[0x24BEE30B8]();
}

uint64_t sub_22CC65E8C()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_22CC65E98()
{
  return MEMORY[0x24BEE3598]();
}

uint64_t sub_22CC65EA4()
{
  return MEMORY[0x24BEE7040]();
}

uint64_t sub_22CC65EB0()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_22CC65EBC()
{
  return MEMORY[0x24BEE3B98]();
}

uint64_t sub_22CC65EC8()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_22CC65ED4()
{
  return MEMORY[0x24BDD0708]();
}

uint64_t sub_22CC65EE0()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_22CC65EEC()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_22CC65EF8()
{
  return MEMORY[0x24BEE4328]();
}

NSSet *HKCategoryValueSleepAnalysisAsleepValues(void)
{
  return (NSSet *)MEMORY[0x24BDD2A68]();
}

uint64_t HKMostRecentSampleEndDateText()
{
  return MEMORY[0x24BE4A0F8]();
}

uint64_t HKSPIsRemoveSpacesForTimeFormatEnabled()
{
  return MEMORY[0x24BEA93F8]();
}

uint64_t HKSPSleepURL()
{
  return MEMORY[0x24BEA9738]();
}

uint64_t NSStringFromHKSPSleepWidgetState()
{
  return MEMORY[0x24BEA9830]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

uint64_t _HKCategoryValueSleepAnalysisDefaultAsleepValue()
{
  return MEMORY[0x24BDD42C0]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x24BEE4C40]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x24BEE4CE8]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getExistentialTypeMetadata()
{
  return MEMORY[0x24BEE4D28]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x24BEE4D88]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x24BEE4DC0]();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return MEMORY[0x24BEE4DC8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x24BEE4DF0]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x24BEE4DF8]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x24BEE4E00]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x24BEE4F88]();
}

