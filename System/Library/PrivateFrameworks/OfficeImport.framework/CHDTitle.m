@implementation CHDTitle

- (CHDTitle)initWithChart:(id)a3
{
  id v5;
  CHDTitle *v6;
  CHDTitle *v7;
  objc_super v9;

  v5 = a3;
  v9.receiver = self;
  v9.super_class = (Class)CHDTitle;
  v6 = -[CHDTitle init](&v9, sel_init);
  v7 = v6;
  if (v6)
  {
    objc_storeStrong((id *)&v6->mChart, a3);
    v7->mRotation = 0.0;
    *(_DWORD *)&v7->mIsAutoGenerated = 0;
  }

  return v7;
}

- (void)setName:(id)a3
{
  CHDFormula *v5;
  void *v6;
  CHDFormula *v7;

  v5 = (CHDFormula *)a3;
  if (self->mName != v5)
  {
    v7 = v5;
    objc_storeStrong((id *)&self->mName, a3);
    v5 = v7;
    if (v7)
    {
      -[CHDChart processors](self->mChart, "processors");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "markObject:processor:", v7, objc_opt_class());

      v5 = v7;
    }
  }

}

- (void)setIsAutoGenerated:(BOOL)a3
{
  self->mIsAutoGenerated = a3;
}

- (void)setLastCachedName:(id)a3
{
  EDString *v5;
  EDString **p_mLastCachedName;
  EDString *mLastCachedName;
  EDString *v8;

  v5 = (EDString *)a3;
  mLastCachedName = self->mLastCachedName;
  p_mLastCachedName = &self->mLastCachedName;
  if (mLastCachedName != v5)
  {
    v8 = v5;
    objc_storeStrong((id *)p_mLastCachedName, a3);
    v5 = v8;
  }

}

- (void)setGraphicProperties:(id)a3
{
  OADGraphicProperties *v5;
  OADGraphicProperties **p_mGraphicProperties;
  OADGraphicProperties *mGraphicProperties;
  OADGraphicProperties *v8;

  v5 = (OADGraphicProperties *)a3;
  mGraphicProperties = self->mGraphicProperties;
  p_mGraphicProperties = &self->mGraphicProperties;
  if (mGraphicProperties != v5)
  {
    v8 = v5;
    objc_storeStrong((id *)p_mGraphicProperties, a3);
    v5 = v8;
  }

}

- (void)setIsPositionAutoGenerated:(BOOL)a3
{
  self->mPositionAutoGenerated = a3;
}

- (void)setTitleRotationAngle:(double)a3
{
  self->mRotation = a3;
}

- (BOOL)isCachedTitleEmpty
{
  EDString *mLastCachedName;

  mLastCachedName = self->mLastCachedName;
  return !mLastCachedName || -[EDString isEmpty](mLastCachedName, "isEmpty");
}

- (id)lastCachedName
{
  return self->mLastCachedName;
}

- (id)graphicProperties
{
  return self->mGraphicProperties;
}

- (void)setIsSizeAutoGenerated:(BOOL)a3
{
  self->mSizeAutoGenerated = a3;
}

- (BOOL)isAutoGenerated
{
  return self->mIsAutoGenerated;
}

- (id)name
{
  return self->mName;
}

- (BOOL)isPositionAutoGenerated
{
  return self->mPositionAutoGenerated;
}

- (BOOL)isSizeAutoGenerated
{
  return self->mSizeAutoGenerated;
}

- (BOOL)isAutoSizeAndPosition
{
  return !-[OADDrawableProperties hasOrientedBounds](self->mGraphicProperties, "hasOrientedBounds");
}

- (BOOL)isTitleVisible
{
  double v3;
  double v4;
  void *v5;
  int v6;
  void *v7;
  void *v8;
  double v9;
  double v10;
  BOOL v11;

  v4 = *(double *)(MEMORY[0x24BDBF090] + 16);
  v3 = *(double *)(MEMORY[0x24BDBF090] + 24);
  -[CHDTitle graphicProperties](self, "graphicProperties");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "hasOrientedBounds");

  if (v6)
  {
    -[CHDTitle graphicProperties](self, "graphicProperties");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "orientedBounds");
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    if (v8)
    {
      objc_msgSend(v8, "bounds");
      v4 = v9;
      v3 = v10;
    }
  }
  else
  {
    v8 = 0;
  }
  if ((v4 == 0.0 || v3 == 0.0)
    && !-[CHDTitle isSizeAutoGenerated](self, "isSizeAutoGenerated")
    && -[CHDChart isBinary](self->mChart, "isBinary"))
  {
    v11 = 0;
  }
  else if (-[CHDTitle isCachedTitleEmpty](self, "isCachedTitleEmpty"))
  {
    v11 = -[CHDTitle isAutoGenerated](self, "isAutoGenerated");
  }
  else
  {
    v11 = 1;
  }

  return v11;
}

- (BOOL)isOverlay
{
  return self->mIsOverlay;
}

- (void)setIsOverlay:(BOOL)a3
{
  self->mIsOverlay = a3;
}

- (double)titleRotationAngle
{
  return self->mRotation;
}

- (id)description
{
  objc_super v3;

  v3.receiver = self;
  v3.super_class = (Class)CHDTitle;
  -[CHDTitle description](&v3, sel_description);
  return (id)objc_claimAutoreleasedReturnValue();
}

- (void).cxx_destruct
{
  objc_storeStrong((id *)&self->mGraphicProperties, 0);
  objc_storeStrong((id *)&self->mLastCachedName, 0);
  objc_storeStrong((id *)&self->mName, 0);
  objc_storeStrong((id *)&self->mChart, 0);
}

@end
