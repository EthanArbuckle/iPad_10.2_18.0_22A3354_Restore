@implementation CHBTitle

+ (id)readFrom:(const void *)a3 state:(id)a4
{
  id v5;
  CHDTitle *v6;
  void *v7;
  CHDTitle *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  v5 = a4;
  if (a3)
  {
    v6 = [CHDTitle alloc];
    objc_msgSend(v5, "chart");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = -[CHDTitle initWithChart:](v6, "initWithChart:", v7);

    v9 = *((_QWORD *)a3 + 13);
    v10 = *((__int16 *)a3 + 89);
    v11 = objc_opt_class();
    objc_msgSend(v5, "ebReaderSheetState");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    +[EBFormula edFormulaFromXlFmlaDefinition:withFormulaLength:formulaClass:state:](EBFormula, "edFormulaFromXlFmlaDefinition:withFormulaLength:formulaClass:state:", v9, v10, v11, v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v5, "workbook");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "setWorkbook:", v14);

    -[CHDTitle setName:](v8, "setName:", v13);
    -[CHDTitle setIsAutoGenerated:](v8, "setIsAutoGenerated:", *((unsigned __int8 *)a3 + 192));
    +[CHBString edStringFromXlChartTextFrame:state:](CHBString, "edStringFromXlChartTextFrame:state:", a3, v5);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    -[CHDTitle setLastCachedName:](v8, "setLastCachedName:", v15);

    +[CHBGraphicProperties oadGraphicPropertiesFromXlChartTextFrame:state:](CHBGraphicProperties, "oadGraphicPropertiesFromXlChartTextFrame:state:", a3, v5);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    -[CHDTitle setGraphicProperties:](v8, "setGraphicProperties:", v16);

    if (!*((_DWORD *)a3 + 6) && !*((_DWORD *)a3 + 7))
      -[CHDTitle setIsPositionAutoGenerated:](v8, "setIsPositionAutoGenerated:", 1);
    -[CHDTitle setTitleRotationAngle:](v8, "setTitleRotationAngle:", (double)*((__int16 *)a3 + 88));

  }
  else
  {
    v8 = 0;
  }

  return v8;
}

@end
