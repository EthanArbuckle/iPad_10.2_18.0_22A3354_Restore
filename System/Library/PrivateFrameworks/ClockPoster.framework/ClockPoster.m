double RadiusForRectAtAngleWithInset(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, double a5, double a6, double a7)
{
  float v12;
  float v13;
  double v14;
  double v15;
  double v16;
  CGFloat Height;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  unsigned int v24;
  double v25;
  __double2 v26;
  long double v27;
  long double v28;
  double v29;
  double v30;
  double v33;
  CGRect v35;
  CGRect v36;

  v12 = a6;
  v13 = fmodf(v12, 6.2832);
  v14 = v13;
  if (v13 < 0.0)
  {
    do
      v14 = v14 + 6.28318531;
    while (v14 < 0.0);
  }
  v15 = 1.57079633;
  if (v14 >= 1.57079633)
  {
    v16 = 3.14159265;
    if (v14 >= 3.14159265)
    {
      if (v14 < 4.71238898)
      {
        v14 = v14 + -3.14159265;
        goto LABEL_9;
      }
      v16 = 6.28318531;
    }
    v14 = v16 - v14;
  }
LABEL_9:
  v35.origin.x = a1;
  v35.origin.y = a2;
  v35.size.width = a3;
  v35.size.height = a4;
  Height = CGRectGetHeight(v35);
  v36.size.height = a4;
  v18 = Height + a7 * -2.0;
  v36.origin.x = a1;
  v36.origin.y = a2;
  v36.size.width = a3;
  v19 = CGRectGetWidth(v36) + a7 * -2.0;
  v20 = fmax((a5 - a7) * 1.52866, 0.0);
  v21 = v19 * 0.5;
  if (atan2(-(v20 - v18 * 0.5), v19 * 0.5) >= v14)
  {
    v22 = v21 * tan(v14);
LABEL_13:
    v23 = v22 * v22 + v21 * v21;
    return sqrt(v23);
  }
  v22 = v18 * 0.5;
  if (atan2(v22, v19 * 0.5 - v20) < v14)
  {
    v21 = v22 / tan(v14);
    goto LABEL_13;
  }
  v24 = 0;
  v33 = v22 - v20;
  v25 = 0.0;
  do
  {
    v26 = __sincos_stret((v25 + v15) * 0.5);
    v27 = v21 - v20 + v20 * pow(v26.__cosval, 0.622409222);
    v28 = v33 + v20 * pow(v26.__sinval, 0.622409222);
    v29 = v14 - atan2(v28, v27);
    if (v29 > 0.0)
      v30 = (v25 + v15) * 0.5;
    else
      v30 = v25;
    if (v29 < 0.0)
      v15 = (v25 + v15) * 0.5;
    else
      v25 = v30;
    if (fabs(v29) <= 0.01)
      break;
  }
  while (v24++ < 0x63);
  v23 = v28 * v28 + v27 * v27;
  return sqrt(v23);
}

uint64_t sub_237E19ED0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t KeyPath;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v23;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897E10);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TextClockDescriptor(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_237EE1EC0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TimeString(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v22(v1 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeZone, 1, 1, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v1 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__previousTimeString, 1, 1, v12);
  if (qword_256897B48 != -1)
    swift_once();
  sub_237EE1EB4();
  v16 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 16))(&v7[*(int *)(v5 + 20)], v11, v8);
  *(_QWORD *)v7 = 0;
  MEMORY[0x24BDAC7A8](v16);
  *(&v21 - 2) = (uint64_t)v7;
  *(&v21 - 1) = v17;
  sub_237E9FC4C((uint64_t (*)(void))sub_237E2062C, (uint64_t)(&v21 - 4), (uint64_t)v15);
  sub_237E21F00((uint64_t)v7, type metadata accessor for TextClockDescriptor);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_237E20634((uint64_t)v15, v1 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeString);
  v18 = (_QWORD *)(v1 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel_contentChanged);
  *v18 = 0;
  v18[1] = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeStringObserver) = 0;
  sub_237EE1F44();
  sub_237EE1EB4();
  v22((uint64_t)v4, 0, 1, v8);
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  *(&v21 - 2) = v1;
  *(&v21 - 1) = (uint64_t)v4;
  v23 = v1;
  sub_237E20E98(&qword_256897E18, (uint64_t (*)(uint64_t))type metadata accessor for RollingClockViewModel, (uint64_t)&unk_237EE4558);
  sub_237EE1F14();
  swift_release();
  sub_237E2209C((uint64_t)v4, &qword_256897E10);
  return v1;
}

uint64_t sub_237E1A1F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t KeyPath;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[2];
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256897E20);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v31 = (char *)v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256897E10);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_237EE1EC0();
  v5 = *(_QWORD *)(v30 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v29 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v28 - v8;
  swift_getKeyPath();
  v10 = v0 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel___observationRegistrar;
  v35 = v1;
  v32 = sub_237E20E98(&qword_256897E18, (uint64_t (*)(uint64_t))type metadata accessor for RollingClockViewModel, (uint64_t)&unk_237EE4558);
  v33 = v10;
  sub_237EE1F20();
  swift_release();
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeStringObserver))
  {
    swift_retain();
    sub_237EE2CAC();
    swift_release();
  }
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  v28[-2] = v1;
  v28[-1] = 0;
  v35 = v1;
  sub_237EE1F14();
  v28[1] = 0;
  swift_release();
  swift_getKeyPath();
  v35 = v1;
  sub_237EE1F20();
  swift_release();
  v12 = v1 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeZone;
  swift_beginAccess();
  sub_237E22004(v12, (uint64_t)v4, &qword_256897E10);
  v13 = v5;
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v15 = v30;
  if (v14(v4, 1, v30) == 1)
  {
    sub_237EE1EB4();
    sub_237E2209C((uint64_t)v4, &qword_256897E10);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v9, v4, v15);
  }
  v28[0] = v9;
  v16 = sub_237EE2C64();
  v17 = (uint64_t)v31;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v31, 1, 1, v16);
  v18 = swift_allocObject();
  swift_weakInit();
  v19 = v29;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v29, v9, v15);
  sub_237EE2C4C();
  swift_retain();
  v20 = sub_237EE2C40();
  v21 = v13;
  v22 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v23 = swift_allocObject();
  v24 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v23 + 16) = v20;
  *(_QWORD *)(v23 + 24) = v24;
  (*(void (**)(unint64_t, char *, uint64_t))(v21 + 32))(v23 + v22, v19, v15);
  *(_QWORD *)(v23 + ((v6 + v22 + 7) & 0xFFFFFFFFFFFFFFF8)) = v18;
  swift_release();
  v25 = sub_237EDA9E4(v17, (uint64_t)&unk_256897E30, v23);
  v26 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v26);
  v28[-2] = v1;
  v28[-1] = v25;
  v34 = v1;
  sub_237EE1F14();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(_QWORD, uint64_t))(v21 + 8))(v28[0], v15);
}

uint64_t sub_237E1A648(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[6] = a4;
  v5[7] = a5;
  v6 = type metadata accessor for TimeString(0);
  v5[8] = v6;
  v5[9] = *(_QWORD *)(v6 - 8);
  v5[10] = swift_task_alloc();
  v5[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25689C1A0);
  v5[12] = swift_task_alloc();
  v5[13] = type metadata accessor for TextClockDescriptor(0);
  v5[14] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897E38);
  v5[15] = v7;
  v5[16] = *(_QWORD *)(v7 - 8);
  v5[17] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897E40);
  v5[18] = v8;
  v5[19] = *(_QWORD *)(v8 - 8);
  v5[20] = swift_task_alloc();
  v5[21] = sub_237EE2C4C();
  v5[22] = sub_237EE2C40();
  v5[23] = sub_237EE2C28();
  v5[24] = v9;
  return swift_task_switch();
}

uint64_t sub_237E1A790()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  if (qword_256897B48 != -1)
    swift_once();
  v2 = v0[16];
  v1 = v0[17];
  v4 = (double *)v0[14];
  v3 = v0[15];
  v5 = v0[6];
  v6 = qword_25689B990;
  v7 = (char *)v4 + *(int *)(v0[13] + 20);
  v8 = sub_237EE1EC0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v7, v5, v8);
  *v4 = 0.0;
  v9 = swift_task_alloc();
  *(_QWORD *)(v9 + 16) = v6;
  *(_QWORD *)(v9 + 24) = v4;
  sub_237E736C4(v4, (void (*)(uint64_t))sub_237E2088C, v1);
  swift_task_dealloc();
  sub_237E21F00((uint64_t)v4, type metadata accessor for TextClockDescriptor);
  sub_237EE2C88();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  v0[25] = 0;
  v0[26] = sub_237EE2C40();
  v10 = (_QWORD *)swift_task_alloc();
  v0[27] = v10;
  *v10 = v0;
  v10[1] = sub_237E1A924;
  return sub_237EE2C94();
}

uint64_t sub_237E1A924()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_237E1A978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 96);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 72) + 48))(v1, 1, *(_QWORD *)(v0 + 64)) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 152) + 8))(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 144));
    swift_release();
  }
  else
  {
    sub_237E20634(v1, *(_QWORD *)(v0 + 88));
    Strong = swift_weakLoadStrong();
    if (Strong)
    {
      v3 = Strong;
      v4 = *(_QWORD *)(v0 + 200);
      v6 = *(_QWORD *)(v0 + 80);
      v5 = *(_QWORD *)(v0 + 88);
      sub_237E21EBC(v5, v6, type metadata accessor for TimeString);
      swift_getKeyPath();
      v7 = swift_task_alloc();
      *(_QWORD *)(v7 + 16) = v3;
      *(_QWORD *)(v7 + 24) = v6;
      *(_QWORD *)(v0 + 40) = v3;
      sub_237E20E98(&qword_256897E18, (uint64_t (*)(uint64_t))type metadata accessor for RollingClockViewModel, (uint64_t)&unk_237EE4558);
      sub_237EE1F14();
      swift_release();
      swift_task_dealloc();
      sub_237E21F00(v6, type metadata accessor for TimeString);
      swift_release();
      sub_237E21F00(v5, type metadata accessor for TimeString);
      *(_QWORD *)(v0 + 200) = v4;
      *(_QWORD *)(v0 + 208) = sub_237EE2C40();
      v8 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 216) = v8;
      *v8 = v0;
      v8[1] = sub_237E1A924;
      return sub_237EE2C94();
    }
    v11 = *(_QWORD *)(v0 + 152);
    v10 = *(_QWORD *)(v0 + 160);
    v12 = *(_QWORD *)(v0 + 144);
    v13 = *(_QWORD *)(v0 + 88);
    swift_release();
    sub_237E21F00(v13, type metadata accessor for TimeString);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_237E1ABD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  swift_getKeyPath();
  sub_237E20E98(&qword_256897E18, (uint64_t (*)(uint64_t))type metadata accessor for RollingClockViewModel, (uint64_t)&unk_237EE4558);
  sub_237EE1F20();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeZone;
  swift_beginAccess();
  return sub_237E22004(v3, a1, &qword_256897E10);
}

uint64_t sub_237E1AC8C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_237E20E98(&qword_256897E18, (uint64_t (*)(uint64_t))type metadata accessor for RollingClockViewModel, (uint64_t)&unk_237EE4558);
  sub_237EE1F20();
  swift_release();
  v4 = v3 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeZone;
  swift_beginAccess();
  return sub_237E22004(v4, a2, &qword_256897E10);
}

uint64_t sub_237E1AD44(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[16];
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897E10);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_237E22004(a1, (uint64_t)v6, &qword_256897E10);
  v7 = *a2;
  swift_getKeyPath();
  v10 = v7;
  v11 = v6;
  v12 = v7;
  sub_237E20E98(&qword_256897E18, (uint64_t (*)(uint64_t))type metadata accessor for RollingClockViewModel, (uint64_t)&unk_237EE4558);
  sub_237EE1F14();
  swift_release();
  return sub_237E2209C((uint64_t)v6, &qword_256897E10);
}

uint64_t sub_237E1AE4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897E10);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237E22004(a2, (uint64_t)v6, &qword_256897E10);
  v7 = a1 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeZone;
  swift_beginAccess();
  sub_237E20690((uint64_t)v6, v7);
  swift_endAccess();
  sub_237E1A1F8();
  return sub_237E2209C((uint64_t)v6, &qword_256897E10);
}

uint64_t sub_237E1AF20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  swift_getKeyPath();
  sub_237E20E98(&qword_256897E18, (uint64_t (*)(uint64_t))type metadata accessor for RollingClockViewModel, (uint64_t)&unk_237EE4558);
  sub_237EE1F20();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeString;
  swift_beginAccess();
  return sub_237E21EBC(v3, a1, type metadata accessor for TimeString);
}

uint64_t sub_237E1AFD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = a1 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeString;
  swift_beginAccess();
  sub_237E20434(a2, v3);
  return swift_endAccess();
}

uint64_t sub_237E1B040()
{
  swift_getKeyPath();
  sub_237E20E98(&qword_256897E18, (uint64_t (*)(uint64_t))type metadata accessor for RollingClockViewModel, (uint64_t)&unk_237EE4558);
  sub_237EE1F20();
  swift_release();
  return swift_retain();
}

uint64_t sub_237E1B0D0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_237E20E98(&qword_256897E18, (uint64_t (*)(uint64_t))type metadata accessor for RollingClockViewModel, (uint64_t)&unk_237EE4558);
  sub_237EE1F20();
  swift_release();
  *a2 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeStringObserver);
  return swift_retain();
}

uint64_t sub_237E1B168()
{
  swift_getKeyPath();
  sub_237E20E98(&qword_256897E18, (uint64_t (*)(uint64_t))type metadata accessor for RollingClockViewModel, (uint64_t)&unk_237EE4558);
  swift_retain();
  sub_237EE1F14();
  swift_release();
  return swift_release();
}

uint64_t sub_237E1B220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_237E2209C(v0 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeZone, &qword_256897E10);
  sub_237E2209C(v0 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__previousTimeString, (uint64_t *)&unk_25689C1A0);
  sub_237E21F00(v0 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeString, type metadata accessor for TimeString);
  sub_237E208F4(*(_QWORD *)(v0 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel_contentChanged));
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel___observationRegistrar;
  v2 = sub_237EE1F50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_237E1B2DC()
{
  return type metadata accessor for RollingClockViewModel();
}

uint64_t type metadata accessor for RollingClockViewModel()
{
  uint64_t result;

  result = qword_256897BE0;
  if (!qword_256897BE0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_237E1B320()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_237E1B410(319, &qword_256897BF0, (void (*)(uint64_t))MEMORY[0x24BDCF510]);
  if (v0 <= 0x3F)
  {
    sub_237E1B410(319, qword_256897BF8, (void (*)(uint64_t))type metadata accessor for TimeString);
    if (v1 <= 0x3F)
    {
      type metadata accessor for TimeString(319);
      if (v2 <= 0x3F)
      {
        sub_237EE1F50();
        if (v3 <= 0x3F)
          swift_updateClassMetadata2();
      }
    }
  }
}

void sub_237E1B410(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_237EE2ED4();
    if (!v5)
      atomic_store(v4, a2);
  }
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for _NSRange(uint64_t a1)
{
  sub_237E225A4(a1, &qword_256897D88);
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_237E225A4(a1, &qword_256897D90);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_237E225A4(a1, &qword_256897D98);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_237E225A4(a1, &qword_256897DA0);
}

uint64_t sub_237E1B4C8(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_237E1B4E8(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CLLocationCoordinate2D(uint64_t a1)
{
  sub_237E225A4(a1, &qword_256897DA8);
}

BOOL sub_237E1B524(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_237E1B538()
{
  sub_237EE3264();
  sub_237EE3270();
  return sub_237EE3294();
}

uint64_t sub_237E1B57C()
{
  return sub_237EE3270();
}

uint64_t sub_237E1B5A4()
{
  sub_237EE3264();
  sub_237EE3270();
  return sub_237EE3294();
}

void sub_237E1B5E4(uint64_t a1)
{
  sub_237E226EC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t sub_237E1B608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  _OWORD *v29;
  __int128 v30;
  __int128 v31;
  char v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  char v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void (*v45)(void);
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t (**v58)@<X0>(uint64_t@<X8>);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(void);
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  uint64_t KeyPath;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  char *v78;
  uint64_t v80;
  char *v81;
  int v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  _OWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t (**v110)@<X0>(uint64_t@<X8>);
  uint64_t v111;
  char v112;
  char v113;

  v111 = a2;
  v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568981A0);
  MEMORY[0x24BDAC7A8](v109);
  v110 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)&v80 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_237EE2238();
  v102 = *(_QWORD *)(v4 - 8);
  v103 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v101 = (char *)&v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = sub_237EE24F0();
  MEMORY[0x24BDAC7A8](v98);
  v99 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898010);
  MEMORY[0x24BDAC7A8](v95);
  v100 = (char *)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568981A8);
  v8 = MEMORY[0x24BDAC7A8](v93);
  v92 = (uint64_t *)((char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8);
  v105 = (uint64_t *)((char *)&v80 - v10);
  v91 = sub_237EE2298();
  v104 = *(_QWORD *)(v91 - 8);
  MEMORY[0x24BDAC7A8](v91);
  v106 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898000);
  v12 = MEMORY[0x24BDAC7A8](v94);
  v97 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v96 = (uint64_t)&v80 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v80 - v16;
  v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897FF0);
  MEMORY[0x24BDAC7A8](v108);
  v19 = (char *)&v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897FB8);
  MEMORY[0x24BDAC7A8](v20);
  v107 = (char *)&v80 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_237EE1B0C();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(_QWORD *)(v23 + 64);
  v25 = MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v80 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v80 - v27;
  sub_237E21D78((_BYTE *)(a1 + 73), &v112);
  sub_237E1BEB0((uint64_t)v28);
  v29 = (_OWORD *)swift_allocObject();
  v30 = *(_OWORD *)(a1 + 48);
  v29[3] = *(_OWORD *)(a1 + 32);
  v29[4] = v30;
  *(_OWORD *)((char *)v29 + 74) = *(_OWORD *)(a1 + 58);
  v31 = *(_OWORD *)(a1 + 16);
  v29[1] = *(_OWORD *)a1;
  v29[2] = v31;
  sub_237E21D78(&v112, &v113);
  v32 = v113;
  if (v113 == 3)
  {
    v83 = v17;
    v85 = v19;
    v87 = v29;
    v84 = v28;
    v88 = v23;
    v89 = v22;
    sub_237E213B0(a1);
    sub_237E213B0(a1);
    sub_237E1BEB0((uint64_t)v26);
    v33 = (uint64_t *)sub_237EE25EC();
    v35 = v34;
    v37 = v36;
    v82 = v38;
    v39 = v38 & 1;
    v40 = *(void **)(a1 + 64);
    v86 = a1;
    v41 = (uint64_t)v106;
    v42 = sub_237E3A7C0((uint64_t)v106, v40, *(_BYTE *)(a1 + 72));
    v43 = v93;
    v44 = (char *)v105 + *(int *)(v93 + 48);
    *v105 = v42;
    v45 = *(void (**)(void))(v104 + 16);
    v46 = v41;
    v47 = v91;
    ((void (*)(char *, uint64_t, uint64_t))v45)(v44, v46, v91);
    v48 = (char *)v92 + *(int *)(v43 + 48);
    *v92 = v42;
    v81 = v48;
    v49 = v47;
    v45();
    swift_retain_n();
    v92 = v33;
    v90 = v35;
    sub_237E21EAC((uint64_t)v33, v35, v39);
    v93 = v37;
    swift_bridgeObjectRetain();
    v50 = sub_237EE2280();
    v51 = sub_237EE228C();
    if (v50)
    {
      v53 = v102;
      v52 = v103;
      v54 = v101;
      v55 = (uint64_t)v99;
      if ((v51 & ~v50) == 0)
        goto LABEL_9;
    }
    else
    {
      v53 = v102;
      v52 = v103;
      v54 = v101;
      v55 = (uint64_t)v99;
      if (!v51)
      {
        v50 = 0;
        goto LABEL_9;
      }
    }
    v50 |= v51;
LABEL_9:
    ((void (*)(uint64_t, char *, uint64_t))v45)(v55, v44, v49);
    v62 = v98;
    *(_QWORD *)(v55 + *(int *)(v98 + 20)) = v42;
    *(_DWORD *)(v55 + *(int *)(v62 + 24)) = v50;
    v63 = (uint64_t)v100;
    v64 = MEMORY[0x24BDF0B50];
    sub_237E21EBC(v55, (uint64_t)&v100[*(int *)(v95 + 36)], (uint64_t (*)(_QWORD))MEMORY[0x24BDF0B50]);
    v65 = v90;
    *(_QWORD *)v63 = v92;
    *(_QWORD *)(v63 + 8) = v65;
    LODWORD(v103) = v82 & 1;
    *(_BYTE *)(v63 + 16) = v82 & 1;
    *(_QWORD *)(v63 + 24) = v93;
    sub_237E21F00(v55, (uint64_t (*)(_QWORD))v64);
    v66 = *(void (**)(char *, uint64_t))(v104 + 8);
    v66(v81, v49);
    KeyPath = swift_getKeyPath();
    sub_237EE222C();
    v68 = (uint64_t)v97;
    v69 = (uint64_t *)&v97[*(int *)(v94 + 36)];
    v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898030);
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))((char *)v69 + *(int *)(v70 + 28), v54, v52);
    *v69 = KeyPath;
    sub_237E22004(v63, v68, &qword_256898010);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v52);
    sub_237E2209C(v63, &qword_256898010);
    sub_237E2209C((uint64_t)v105, &qword_2568981A8);
    v71 = v68;
    v72 = v96;
    sub_237E21FC0(v71, v96, &qword_256898000);
    v73 = (uint64_t)v83;
    sub_237E21FC0(v72, (uint64_t)v83, &qword_256898000);
    swift_release();
    v66(v106, v49);
    v74 = (uint64_t)v85;
    sub_237E21FC0(v73, (uint64_t)v85, &qword_256898000);
    sub_237E21F3C((uint64_t)v92, v90, v103);
    swift_bridgeObjectRelease();
    v75 = sub_237EE2940();
    v76 = (uint64_t *)(v74 + *(int *)(v108 + 36));
    v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898040);
    v60 = v88;
    v28 = v84;
    v22 = v89;
    (*(void (**)(char *, char *, uint64_t))(v88 + 16))((char *)v76 + *(int *)(v77 + 36), v84, v89);
    *v76 = v75;
    sub_237E22004(v74, (uint64_t)v110, &qword_256897FF0);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256898050);
    sub_237E216D4();
    sub_237E22690(&qword_256898048, &qword_256898050, MEMORY[0x24BDEC6F8]);
    v78 = v107;
    sub_237EE24B4();
    v59 = (uint64_t)v78;
    sub_237E2209C(v74, &qword_256897FF0);
    v61 = v111;
    a1 = v86;
    goto LABEL_10;
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v26, v28, v22);
  v56 = (*(unsigned __int8 *)(v23 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v57 = swift_allocObject();
  *(_BYTE *)(v57 + 16) = v32;
  *(_QWORD *)(v57 + 24) = sub_237E21DDC;
  *(_QWORD *)(v57 + 32) = v29;
  (*(void (**)(unint64_t, char *, uint64_t))(v23 + 32))(v57 + v56, v26, v22);
  v58 = v110;
  *v110 = sub_237E21E58;
  v58[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v57;
  swift_storeEnumTagMultiPayload();
  sub_237E213B0(a1);
  sub_237E213B0(a1);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898050);
  sub_237E216D4();
  sub_237E22690(&qword_256898048, &qword_256898050, MEMORY[0x24BDEC6F8]);
  v59 = (uint64_t)v107;
  sub_237EE24B4();
  v60 = v23;
  v61 = v111;
LABEL_10:
  sub_237E21FC0(v59, v61, &qword_256897FB8);
  swift_release();
  sub_237E21434(a1);
  return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v28, v22);
}

uint64_t sub_237E1BEB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t KeyPath;
  id v50;
  void (*v51)(_QWORD *, _QWORD);
  NSObject *v52;
  os_log_type_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(_QWORD *, _QWORD);
  uint64_t v70;
  void *v71;
  id v72;
  uint64_t v74;
  int v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  _QWORD v91[4];
  uint64_t v92[3];
  uint64_t v93;
  __int128 v94;
  __int128 v95;
  char v96;

  v87 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6548);
  MEMORY[0x24BDAC7A8](v2);
  v78 = (uint64_t)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_237EE1FB0();
  v82 = *(_QWORD *)(v83 - 8);
  MEMORY[0x24BDAC7A8](v83);
  v81 = (uint64_t)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568981F0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568981F8);
  v84 = *(_QWORD *)(v85 - 8);
  v8 = MEMORY[0x24BDAC7A8](v85);
  v80 = (uint64_t)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v79 = (uint64_t)&v74 - v10;
  v11 = sub_237EE1B54();
  MEMORY[0x24BDAC7A8](v11);
  v12 = type metadata accessor for TimeString(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_237EE1B0C();
  v88 = *(_QWORD *)(v89 - 8);
  v15 = MEMORY[0x24BDAC7A8](v89);
  v17 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v90 = (char *)&v74 - v18;
  v19 = sub_237E1D020();
  v20 = *(_QWORD *)v1;
  v86 = v1;
  v21 = *(unsigned __int8 *)(v1 + 8);
  v22 = swift_retain();
  v23 = sub_237EC3AFC(v22, v21);
  swift_release();
  swift_getKeyPath();
  if (v19)
  {
    v91[0] = v23;
    v24 = sub_237E20E98(&qword_256897E18, (uint64_t (*)(uint64_t))type metadata accessor for RollingClockViewModel, (uint64_t)&unk_237EE4558);
    v77 = v7;
    v25 = v24;
    sub_237EE1F20();
    swift_release();
    v26 = v23 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeString;
    swift_beginAccess();
    sub_237E21EBC(v26, (uint64_t)v14, type metadata accessor for TimeString);
    swift_release();
    swift_bridgeObjectRetain();
    sub_237E21F00((uint64_t)v14, type metadata accessor for TimeString);
    sub_237EE1B48();
    sub_237EE1B18();
    v27 = v88;
    v28 = v89;
    (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v90, v17, v89);
    v29 = swift_retain();
    v75 = v21;
    v30 = sub_237EC3AFC(v29, v21);
    v76 = v20;
    swift_release();
    swift_getKeyPath();
    v91[0] = v30;
    v74 = v25;
    v31 = (uint64_t)v77;
    sub_237EE1F20();
    swift_release();
    v32 = v30 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeString;
    swift_beginAccess();
    sub_237E21EBC(v32, (uint64_t)v14, type metadata accessor for TimeString);
    swift_release();
    sub_237E21F00((uint64_t)v14, type metadata accessor for TimeString);
    v33 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
    v33(v17, v90, v28);
    sub_237E20E98(&qword_256898208, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC588]);
    sub_237EE2D6C();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v31, 1, v85) == 1)
    {
      v34 = v33;
      sub_237E2209C(v31, &qword_2568981F0);
      if (qword_2542C6458 != -1)
        swift_once();
      v35 = qword_2542C64F8 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_data_private;
      swift_beginAccess();
      v36 = v78;
      sub_237E22004(v35, v78, &qword_2542C6548);
      v37 = v82;
      v38 = v83;
      v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v36, 1, v83);
      v40 = v81;
      v41 = v17;
      if (v39 == 1)
      {
        sub_237E6072C(v81);
        sub_237E2209C(v36, &qword_2542C6548);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 32))(v81, v36, v38);
      }
      v46 = v86;
      sub_237E213B0(v86);
      sub_237E213B0(v46);
      v52 = sub_237EE1F98();
      v53 = sub_237EE2D90();
      v54 = v53;
      if (os_log_type_enabled(v52, v53))
      {
        v55 = swift_slowAlloc();
        v85 = swift_slowAlloc();
        v92[0] = v85;
        *(_DWORD *)v55 = 136315394;
        v80 = v55 + 4;
        v56 = swift_retain();
        v57 = sub_237EC3AFC(v56, v75);
        swift_release();
        swift_getKeyPath();
        LODWORD(v84) = v54;
        *(_QWORD *)&v95 = v57;
        sub_237EE1F20();
        swift_release();
        v58 = v57 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeString;
        swift_beginAccess();
        sub_237E21EBC(v58, (uint64_t)v14, type metadata accessor for TimeString);
        swift_release();
        sub_237E21F00((uint64_t)v14, type metadata accessor for TimeString);
        v59 = sub_237EE2EC8();
        *(_QWORD *)&v94 = sub_237E2A660(v59, v60, v92);
        sub_237EE2EE0();
        swift_bridgeObjectRelease();
        sub_237E21434(v46);
        sub_237E21434(v46);
        *(_WORD *)(v55 + 12) = 2080;
        v44 = v90;
        swift_beginAccess();
        v61 = v41;
        v45 = v89;
        v34(v41, v44, v89);
        sub_237E20E98(&qword_256898210, (uint64_t (*)(uint64_t))MEMORY[0x24BDCC5A8], MEMORY[0x24BDCC600]);
        v62 = sub_237EE3180();
        v64 = v63;
        v43 = v88;
        (*(void (**)(char *, uint64_t))(v88 + 8))(v61, v45);
        v93 = sub_237E2A660(v62, v64, v92);
        sub_237EE2EE0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_237E17000, v52, (os_log_type_t)v84, "Cannot format time designator. Range of designator in NSAttributedString provided by CLKTimeFormatter is unknown when converted to AttributedString. \nRange: '%s' \nAttributedString '%s'.", (uint8_t *)v55, 0x16u);
        v65 = v85;
        swift_arrayDestroy();
        MEMORY[0x23B8272A8](v65, -1, -1);
        MEMORY[0x23B8272A8](v55, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v81, v83);
      }
      else
      {
        sub_237E21434(v46);
        sub_237E21434(v46);

        (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v40, v38);
        v45 = v89;
        v43 = v88;
        v44 = v90;
      }
    }
    else
    {
      v47 = v79;
      sub_237E21FC0(v31, v79, &qword_2568981F8);
      v48 = v80;
      sub_237E22004(v47, v80, &qword_2568981F8);
      KeyPath = swift_getKeyPath();
      *(&v74 - 2) = MEMORY[0x24BDAC7A8](KeyPath);
      swift_getKeyPath();
      v46 = v86;
      v50 = *(id *)(v86 + 16);
      *(_QWORD *)&v95 = sub_237EE2574();
      sub_237E22690(&qword_256898220, &qword_2568981F8, MEMORY[0x24BEE1BC0]);
      v44 = v90;
      v51 = (void (*)(_QWORD *, _QWORD))sub_237EE1B24();
      sub_237E2204C();
      sub_237EE1B60();
      v51(v91, 0);
      sub_237E2209C(v48, &qword_2568981F8);
      sub_237E220D8((__int128 *)(v46 + 24), &v94);
      sub_237E220D8(&v94, &v95);
      if (v96)
      {
        sub_237E2209C(v47, &qword_2568981F8);
        v45 = v89;
        v43 = v88;
      }
      else
      {
        v66 = *((_QWORD *)&v95 + 1);
        v45 = v89;
        v43 = v88;
        if (*((_QWORD *)&v95 + 1))
        {
          v67 = v80;
          sub_237E22004(v47, v80, &qword_2568981F8);
          v68 = swift_getKeyPath();
          *(&v74 - 2) = MEMORY[0x24BDAC7A8](v68);
          swift_getKeyPath();
          v92[0] = v66;
          swift_retain_n();
          v69 = (void (*)(_QWORD *, _QWORD))sub_237EE1B24();
          sub_237E220F8();
          sub_237EE1B60();
          v69(v91, 0);
          swift_release();
          sub_237E2209C(v67, &qword_2568981F8);
        }
        sub_237E2209C(v47, &qword_2568981F8);
      }
    }
  }
  else
  {
    v91[0] = v23;
    sub_237E20E98(&qword_256897E18, (uint64_t (*)(uint64_t))type metadata accessor for RollingClockViewModel, (uint64_t)&unk_237EE4558);
    sub_237EE1F20();
    swift_release();
    v42 = v23 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeString;
    swift_beginAccess();
    sub_237E21EBC(v42, (uint64_t)v14, type metadata accessor for TimeString);
    swift_release();
    swift_bridgeObjectRetain();
    sub_237E21F00((uint64_t)v14, type metadata accessor for TimeString);
    sub_237EE1B48();
    sub_237EE1B18();
    v43 = v88;
    v44 = v90;
    v45 = v89;
    (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v90, v17, v89);
    v46 = v86;
  }
  v70 = swift_getKeyPath();
  *(&v74 - 2) = MEMORY[0x24BDAC7A8](v70);
  swift_getKeyPath();
  v93 = *(_QWORD *)(v46 + 56);
  v71 = (void *)v93;
  swift_beginAccess();
  sub_237E21F50();
  v72 = v71;
  sub_237EE1AE8();
  swift_endAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v43 + 16))(v87, v44, v45);
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v44, v45);
}

uint64_t sub_237E1CB5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(void);
  void (*v44)(char *, uint64_t);
  uint64_t KeyPath;
  _BYTE *v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  _BYTE *v54;
  _BYTE v56[4];
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  _BYTE *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  _BYTE *v67;
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t *v71;
  char *v72;
  _BYTE *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;

  v76 = a2;
  v3 = sub_237EE2238();
  v74 = *(_QWORD *)(v3 - 8);
  v75 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v73 = &v56[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v70 = sub_237EE24F0();
  MEMORY[0x24BDAC7A8](v70);
  v65 = &v56[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898010);
  MEMORY[0x24BDAC7A8](v66);
  v62 = &v56[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568981A8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v77 = (uint64_t *)&v56[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8);
  v11 = (uint64_t *)&v56[-v10];
  v58 = sub_237EE2298();
  v12 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v14 = &v56[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898000);
  v15 = MEMORY[0x24BDAC7A8](v63);
  v68 = &v56[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = MEMORY[0x24BDAC7A8](v15);
  v67 = &v56[-v18];
  MEMORY[0x24BDAC7A8](v17);
  v69 = &v56[-v19];
  v20 = sub_237EE1B0C();
  MEMORY[0x24BDAC7A8](v20);
  sub_237E1BEB0((uint64_t)&v56[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  v22 = (uint64_t *)sub_237EE25EC();
  v24 = v23;
  v26 = v25;
  v61 = v27;
  v57 = v27 & 1;
  v28 = sub_237E3A7C0((uint64_t)v14, *(void **)(a1 + 64), *(_BYTE *)(a1 + 72));
  v29 = (char *)v11 + *(int *)(v7 + 48);
  v71 = v11;
  v72 = v14;
  *v11 = v28;
  v30 = v58;
  v64 = v12;
  v31 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v31(v29, v14, v58);
  v32 = *(int *)(v7 + 48);
  v33 = v77;
  v34 = (char *)v77 + v32;
  *v77 = v28;
  v31((char *)v33 + v32, v29, v30);
  swift_retain_n();
  v77 = v22;
  v35 = (uint64_t)v22;
  v36 = v24;
  sub_237E21EAC(v35, v24, v57);
  v37 = v26;
  swift_bridgeObjectRetain();
  v38 = sub_237EE2280();
  v39 = sub_237EE228C();
  if (v38)
  {
    if ((v39 & ~v38) == 0)
      goto LABEL_7;
  }
  else if (!v39)
  {
    v38 = 0;
    goto LABEL_7;
  }
  v38 |= v39;
LABEL_7:
  v40 = (uint64_t)v65;
  v31(v65, v29, v30);
  v41 = v70;
  *(_QWORD *)(v40 + *(int *)(v70 + 20)) = v28;
  *(_DWORD *)(v40 + *(int *)(v41 + 24)) = v38;
  v42 = (uint64_t)v62;
  v43 = MEMORY[0x24BDF0B50];
  sub_237E21EBC(v40, (uint64_t)&v62[*(int *)(v66 + 36)], (uint64_t (*)(_QWORD))MEMORY[0x24BDF0B50]);
  *(_QWORD *)v42 = v77;
  *(_QWORD *)(v42 + 8) = v36;
  v59 = v36;
  v60 = v37;
  LODWORD(v70) = v61 & 1;
  *(_BYTE *)(v42 + 16) = v61 & 1;
  *(_QWORD *)(v42 + 24) = v37;
  sub_237E21F00(v40, (uint64_t (*)(_QWORD))v43);
  v44 = *(void (**)(char *, uint64_t))(v64 + 8);
  v44(v34, v30);
  KeyPath = swift_getKeyPath();
  v46 = v73;
  sub_237EE222C();
  v47 = (uint64_t)v68;
  v48 = (uint64_t *)&v68[*(int *)(v63 + 36)];
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898030);
  v51 = v74;
  v50 = v75;
  (*(void (**)(char *, _BYTE *, uint64_t))(v74 + 16))((char *)v48 + *(int *)(v49 + 28), v46, v75);
  *v48 = KeyPath;
  sub_237E22004(v42, v47, &qword_256898010);
  (*(void (**)(_BYTE *, uint64_t))(v51 + 8))(v46, v50);
  sub_237E2209C(v42, &qword_256898010);
  sub_237E2209C((uint64_t)v71, &qword_2568981A8);
  v52 = v47;
  v53 = v67;
  sub_237E21FC0(v52, (uint64_t)v67, &qword_256898000);
  v54 = v69;
  sub_237E21FC0((uint64_t)v53, (uint64_t)v69, &qword_256898000);
  swift_release();
  v44(v72, v30);
  sub_237E21FC0((uint64_t)v54, v76, &qword_256898000);
  sub_237E21F3C((uint64_t)v77, v59, v70);
  return swift_bridgeObjectRelease();
}

BOOL sub_237E1D020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = sub_237EE1D70();
  v22 = *(_QWORD *)(v1 - 8);
  v23 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_237EE1EC0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for TimeString(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_BYTE *)(v0 + 8);
  v12 = swift_retain();
  v13 = sub_237EC3AFC(v12, v11);
  swift_release();
  swift_getKeyPath();
  v24 = v13;
  sub_237E20E98(&qword_256897E18, (uint64_t (*)(uint64_t))type metadata accessor for RollingClockViewModel, (uint64_t)&unk_237EE4558);
  sub_237EE1F20();
  swift_release();
  v14 = v13 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeString;
  swift_beginAccess();
  sub_237E21EBC(v14, (uint64_t)v10, type metadata accessor for TimeString);
  swift_release();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, &v10[*(int *)(v8 + 36)], v4);
  sub_237E21F00((uint64_t)v10, type metadata accessor for TimeString);
  sub_237EE1D64();
  v15 = sub_237EE1E84();
  v16 = v23;
  v17 = *(void (**)(char *, uint64_t))(v22 + 8);
  v17(v3, v23);
  v18 = *(void (**)(char *, uint64_t))(v5 + 8);
  v18(v7, v4);
  sub_237EE1EB4();
  sub_237EE1D64();
  v19 = sub_237EE1E84();
  v17(v3, v16);
  v18(v7, v4);
  return v15 != v19;
}

uint64_t sub_237E1D25C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_237E1D2BC(a1, a2, a3, &qword_256898230);
}

uint64_t sub_237E1D268(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_256898230);
}

void sub_237E1D274()
{
  sub_237E2204C();
  sub_237EE1BD8();
  __break(1u);
}

void sub_237E1D298()
{
  sub_237EE1AD0();
  __break(1u);
}

uint64_t sub_237E1D2B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_237E1D2BC(a1, a2, a3, &qword_256898238);
}

uint64_t sub_237E1D2BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  __swift_instantiateConcreteTypeFromMangledName(a4);
  return sub_237EE2A48() & 1;
}

uint64_t sub_237E1D310(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_256898238);
}

uint64_t keypath_hashTm(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  return sub_237EE2A24();
}

void sub_237E1D35C()
{
  sub_237E21F50();
  sub_237EE1BCC();
  __break(1u);
}

void sub_237E1D380()
{
  sub_237EE1AB8();
  __break(1u);
}

uint64_t sub_237E1D3A0()
{
  return sub_237EE2658();
}

uint64_t sub_237E1D3B8@<X0>(uint64_t a1@<X8>)
{
  _OWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _OWORD v17[2];
  __int128 v18;
  _OWORD v19[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897F30);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897F38);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v1[3];
  v18 = v1[2];
  v19[0] = v9;
  *(_OWORD *)((char *)v19 + 10) = *(_OWORD *)((char *)v1 + 58);
  v10 = v1[1];
  v17[0] = *v1;
  v17[1] = v10;
  v11 = *((_QWORD *)&v10 + 1);
  v12 = v18;
  v13 = v9;
  sub_237E213B0((uint64_t)v17);
  sub_237E213B0((uint64_t)v17);
  sub_237E1D914(v11, v12, *((uint64_t *)&v12 + 1), v13, v17, (uint64_t)v5);
  v14 = sub_237EE2940();
  sub_237E22004((uint64_t)v5, (uint64_t)v8, &qword_256897F30);
  v15 = &v8[*(int *)(v6 + 36)];
  *(_QWORD *)v15 = v14;
  *((_QWORD *)v15 + 1) = v11;
  *((_OWORD *)v15 + 1) = v12;
  v15[32] = v13;
  sub_237E209B8(v11, v12, *((uint64_t *)&v12 + 1), v13);
  sub_237E2209C((uint64_t)v5, &qword_256897F30);
  sub_237E21FC0((uint64_t)v8, a1, &qword_256897F38);
  return sub_237E21434((uint64_t)v17);
}

uint64_t sub_237E1D530@<X0>(int a1@<W1>, void (*a2)(uint64_t)@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  char *v18;
  uint64_t v19;
  _OWORD *v20;
  __int128 v21;
  _OWORD v23[3];

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568981B0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v12 = sub_237EE2904();
  v12[1] = v13;
  v14 = (char *)v12 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2568981B8) + 44);
  *(_QWORD *)v14 = sub_237EE2394();
  *((_QWORD *)v14 + 1) = 0;
  v14[16] = 1;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568981C0);
  sub_237E1D6DC(a1, a2, a3, (uint64_t)&v14[*(int *)(v15 + 44)]);
  v16 = sub_237EE2940();
  v17 = (uint64_t *)&v14[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2568981C8) + 36)];
  v18 = (char *)v17 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256898040) + 36);
  v19 = sub_237EE1B0C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v18, a4, v19);
  *v17 = v16;
  sub_237EE213C();
  sub_237EE213C();
  sub_237EE2904();
  sub_237EE20E8();
  sub_237E22004((uint64_t)v12, a5, &qword_2568981B0);
  v20 = (_OWORD *)(a5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2568981D0) + 36));
  v21 = v23[1];
  *v20 = v23[0];
  v20[1] = v21;
  v20[2] = v23[2];
  return sub_237E2209C((uint64_t)v12, &qword_2568981B0);
}

uint64_t sub_237E1D6DC@<X0>(int a1@<W0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v22[4];
  _BOOL4 v23;
  uint64_t v24;
  void (*v25)(uint64_t);
  int v26;

  v24 = a3;
  v25 = a2;
  v26 = a1;
  v5 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898000);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568981D8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568981E0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = &v22[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = &v22[-v17];
  v23 = (v5 - 1) > 1;
  v25(v16);
  sub_237E22004((uint64_t)v8, (uint64_t)v11, &qword_256898000);
  *(_WORD *)&v11[*(int *)(v9 + 36)] = 257;
  sub_237E2209C((uint64_t)v8, &qword_256898000);
  sub_237E22004((uint64_t)v11, (uint64_t)v15, &qword_2568981D8);
  *(_QWORD *)&v15[*(int *)(v12 + 36)] = 0x3FF0000000000000;
  sub_237E2209C((uint64_t)v11, &qword_2568981D8);
  sub_237E21FC0((uint64_t)v15, (uint64_t)v18, &qword_2568981E0);
  LOBYTE(v11) = (v26 & 0xFD) != 0;
  LOBYTE(v9) = (v26 & 0xFD) == 0;
  sub_237E22004((uint64_t)v18, (uint64_t)v15, &qword_2568981E0);
  *(_QWORD *)a4 = 0;
  *(_BYTE *)(a4 + 8) = (v5 - 1) < 2;
  *(_BYTE *)(a4 + 9) = v23;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568981E8);
  sub_237E22004((uint64_t)v15, a4 + *(int *)(v19 + 48), &qword_2568981E0);
  v20 = a4 + *(int *)(v19 + 64);
  *(_QWORD *)v20 = 0;
  *(_BYTE *)(v20 + 8) = v9;
  *(_BYTE *)(v20 + 9) = (_BYTE)v11;
  sub_237E2209C((uint64_t)v18, &qword_2568981E0);
  return sub_237E2209C((uint64_t)v15, &qword_2568981E0);
}

void sub_237E1D914(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _OWORD *a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  __int128 v33;
  __int128 v34;
  char *v35;
  _QWORD v36[5];
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  _OWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _OWORD *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v71 = a4;
  v62 = a3;
  v61 = a2;
  v72 = a1;
  v64 = a6;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897F40);
  MEMORY[0x24BDAC7A8](v57);
  v59 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897F48);
  MEMORY[0x24BDAC7A8](v48);
  v50 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897F50);
  MEMORY[0x24BDAC7A8](v58);
  v51 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897F58);
  MEMORY[0x24BDAC7A8](v70);
  v60 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897F60);
  v11 = MEMORY[0x24BDAC7A8](v49);
  v44 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v45 = (char *)v36 - v13;
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897F68);
  MEMORY[0x24BDAC7A8](v42);
  v36[3] = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897F70);
  MEMORY[0x24BDAC7A8](v40);
  v41 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897F78);
  MEMORY[0x24BDAC7A8](v56);
  v43 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897F80);
  v17 = MEMORY[0x24BDAC7A8](v39);
  v36[1] = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v36[2] = (char *)v36 - v19;
  v37 = sub_237EE28F8();
  v36[4] = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897F88);
  v20 = MEMORY[0x24BDAC7A8](v47);
  MEMORY[0x24BDAC7A8](v20);
  v38 = (char *)v36 - v21;
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897F90);
  MEMORY[0x24BDAC7A8](v65);
  v69 = (char *)v36 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897F98);
  MEMORY[0x24BDAC7A8](v52);
  v54 = (char *)v36 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897FA0);
  MEMORY[0x24BDAC7A8](v24);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897FA8);
  MEMORY[0x24BDAC7A8](v53);
  v46 = (char *)v36 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897FB0);
  MEMORY[0x24BDAC7A8](v66);
  v55 = (char *)v36 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897FB8);
  MEMORY[0x24BDAC7A8](v27);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897FC0);
  v29 = MEMORY[0x24BDAC7A8](v28);
  MEMORY[0x24BDAC7A8](v29);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897F30);
  MEMORY[0x24BDAC7A8](v30);
  v68 = (char *)v36 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = (_OWORD *)swift_allocObject();
  v33 = a5[3];
  v32[3] = a5[2];
  v32[4] = v33;
  *(_OWORD *)((char *)v32 + 74) = *(_OWORD *)((char *)a5 + 58);
  v34 = a5[1];
  v32[1] = *a5;
  v32[2] = v34;
  v67 = v32;
  v35 = (char *)&loc_237E1DF54 + *((int *)qword_237E1EDC8 + v71);
  v63 = a5;
  __asm { BR              X10 }
}

uint64_t sub_237E1DF6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t KeyPath;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_237E213B0(v4);
  v7 = *(_QWORD *)(v6 - 256);
  swift_retain();
  sub_237E1B608(v4, v1);
  KeyPath = swift_getKeyPath();
  sub_237E22004(v1, v2, &qword_256897FB8);
  v9 = (uint64_t *)(v2 + *(int *)(v5 + 36));
  *v9 = KeyPath;
  v9[1] = v7;
  swift_retain();
  sub_237E2209C(v1, &qword_256897FB8);
  sub_237E21FC0(v2, v3, &qword_256897FC0);
  sub_237E22004(v3, v0, &qword_256897FC0);
  swift_storeEnumTagMultiPayload();
  sub_237E21920();
  sub_237E219A4();
  v10 = *(_QWORD *)(v6 - 464);
  sub_237EE24B4();
  sub_237E22004(v10, *(_QWORD *)(v6 - 400), &qword_256897FA8);
  swift_storeEnumTagMultiPayload();
  sub_237E218FC();
  sub_237E21A28();
  v11 = *(_QWORD *)(v6 - 392);
  sub_237EE24B4();
  sub_237E2209C(v10, &qword_256897FA8);
  sub_237E22004(v11, *(_QWORD *)(v6 - 280), &qword_256897FB0);
  swift_storeEnumTagMultiPayload();
  sub_237E21868();
  sub_237E21B54();
  v12 = *(_QWORD *)(v6 - 288);
  sub_237EE24B4();
  swift_release();
  sub_237E2209C(v11, &qword_256897FB0);
  sub_237E2209C(v3, &qword_256897FC0);
  sub_237E21FC0(v12, *(_QWORD *)(v6 - 320), &qword_256897F30);
  swift_release();
  return sub_237E21434(*(_QWORD *)(v6 - 328));
}

unint64_t sub_237E1EDDC()
{
  return 0xD000000000000018;
}

uint64_t sub_237E1EDF8@<X0>(void (*a1)(uint64_t)@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  __int128 v13;
  _OWORD v15[3];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898128);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898130);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237EE213C();
  sub_237EE213C();
  if (qword_256897AA0 != -1)
    swift_once();
  *v6 = sub_237EE2904();
  v6[1] = v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898138);
  sub_237E1EFF0(a1, (uint64_t)v6 + *(int *)(v11 + 44));
  sub_237E22004((uint64_t)v6, (uint64_t)v9, &qword_256898128);
  sub_237E2209C((uint64_t)v6, &qword_256898128);
  sub_237EE213C();
  sub_237EE213C();
  sub_237EE2904();
  sub_237EE20E8();
  sub_237E22004((uint64_t)v9, a2, &qword_256898130);
  v12 = (_OWORD *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256898140) + 36));
  v13 = v15[1];
  *v12 = v15[0];
  v12[1] = v13;
  v12[2] = v15[2];
  return sub_237E2209C((uint64_t)v9, &qword_256898130);
}

uint64_t sub_237E1EFF0@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  void (*v47)(uint64_t);
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[6];
  char v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;

  v47 = a1;
  v53 = a2;
  v2 = sub_237EE21D8();
  MEMORY[0x24BDAC7A8](v2);
  v50 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_237EE294C();
  v48 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898148);
  MEMORY[0x24BDAC7A8](v44);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898150);
  v8 = MEMORY[0x24BDAC7A8](v46);
  v52 = (uint64_t)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v51 = (uint64_t)&v42 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897FB8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898158);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (void (*)(uint64_t))((char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v42 - v19;
  v47(v18);
  sub_237E22004((uint64_t)v13, (uint64_t)v17, &qword_256897FB8);
  *(_QWORD *)((char *)v17 + *(int *)(v14 + 36)) = 0x3FF0000000000000;
  sub_237E2209C((uint64_t)v13, &qword_256897FB8);
  v47 = v17;
  v45 = v20;
  sub_237E21FC0((uint64_t)v17, (uint64_t)v20, &qword_256898158);
  v21 = swift_bridgeObjectRetain();
  MEMORY[0x23B825F4C](v21);
  sub_237EE2190();
  v43 = v54[0];
  v22 = v54[1];
  v23 = v54[2];
  v24 = v54[3];
  v25 = v54[4];
  if (qword_256897AA0 != -1)
    swift_once();
  v26 = qword_25689DEC0;
  sub_237EE2904();
  sub_237EE20E8();
  v27 = v54[5];
  v28 = v55;
  v29 = v56;
  v30 = v57;
  v31 = v59;
  v42 = v58;
  v32 = v48;
  v33 = v49;
  (*(void (**)(char *, _QWORD, uint64_t))(v48 + 104))(v5, *MEMORY[0x24BDF5090], v49);
  v34 = (uint64_t)v50;
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v50, v5, v33);
  sub_237E21EBC(v34, (uint64_t)&v7[*(int *)(v44 + 36)], (uint64_t (*)(_QWORD))MEMORY[0x24BDEDB60]);
  *(_QWORD *)v7 = v43;
  *((_QWORD *)v7 + 1) = v22;
  *((_QWORD *)v7 + 2) = v23;
  *((_QWORD *)v7 + 3) = v24;
  *((_QWORD *)v7 + 4) = v25;
  *((_QWORD *)v7 + 5) = v26;
  v7[48] = 0;
  *((_QWORD *)v7 + 7) = v27;
  v7[64] = v28;
  *((_QWORD *)v7 + 9) = v29;
  v7[80] = v30;
  *((_QWORD *)v7 + 11) = v42;
  *((_QWORD *)v7 + 12) = v31;
  swift_bridgeObjectRetain();
  sub_237E21F00(v34, (uint64_t (*)(_QWORD))MEMORY[0x24BDEDB60]);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v33);
  sub_237E21D50((uint64_t)v54);
  v35 = v52;
  sub_237E22004((uint64_t)v7, v52, &qword_256898148);
  *(_QWORD *)(v35 + *(int *)(v46 + 36)) = 0xBFF0000000000000;
  sub_237E2209C((uint64_t)v7, &qword_256898148);
  v36 = v51;
  sub_237E21FC0(v35, v51, &qword_256898150);
  v37 = (uint64_t)v45;
  v38 = v47;
  sub_237E22004((uint64_t)v45, (uint64_t)v47, &qword_256898158);
  sub_237E22004(v36, v35, &qword_256898150);
  v39 = v53;
  sub_237E22004((uint64_t)v38, v53, &qword_256898158);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898160);
  sub_237E22004(v35, v39 + *(int *)(v40 + 48), &qword_256898150);
  sub_237E2209C(v36, &qword_256898150);
  sub_237E2209C(v37, &qword_256898158);
  sub_237E2209C(v35, &qword_256898150);
  return sub_237E2209C((uint64_t)v38, &qword_256898158);
}

uint64_t sub_237E1F4DC@<X0>(void (*a1)(uint64_t)@<X1>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  __int128 v19;
  _OWORD v21[3];

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898168);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898170);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237EE213C();
  sub_237EE213C();
  if (qword_256897AA0 != -1)
    swift_once();
  *v12 = sub_237EE2904();
  v12[1] = v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898178);
  sub_237E1F6DC(a1, a2, a3, (uint64_t)v12 + *(int *)(v17 + 44), a5);
  sub_237E22004((uint64_t)v12, (uint64_t)v15, &qword_256898168);
  sub_237E2209C((uint64_t)v12, &qword_256898168);
  sub_237EE213C();
  sub_237EE213C();
  sub_237EE2904();
  sub_237EE20E8();
  sub_237E22004((uint64_t)v15, a4, &qword_256898170);
  v18 = (_OWORD *)(a4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256898180) + 36));
  v19 = v21[1];
  *v18 = v21[0];
  v18[1] = v19;
  v18[2] = v21[2];
  return sub_237E2209C((uint64_t)v15, &qword_256898170);
}

uint64_t sub_237E1F6DC@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>, double a5@<D1>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t);
  uint64_t v49;
  uint64_t v50;
  _QWORD v52[2];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  void (*v59)(uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;

  v52[1] = a3;
  v54 = a2;
  v59 = a1;
  v65 = a4;
  v6 = sub_237EE21D8();
  MEMORY[0x24BDAC7A8](v6);
  v63 = (char *)v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_237EE294C();
  v60 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v57 = (char *)v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_237EE2784();
  v9 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v11 = (char *)v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898188);
  MEMORY[0x24BDAC7A8](v55);
  v13 = (char *)v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898190);
  v14 = MEMORY[0x24BDAC7A8](v58);
  v64 = (uint64_t)v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v61 = (uint64_t)v52 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897FB8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898158);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (void (*)(uint64_t))((char *)v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = MEMORY[0x24BDAC7A8](v21);
  v26 = (char *)v52 - v25;
  v59(v24);
  sub_237E22004((uint64_t)v19, (uint64_t)v23, &qword_256897FB8);
  *(_QWORD *)((char *)v23 + *(int *)(v20 + 36)) = 0x3FF0000000000000;
  sub_237E2209C((uint64_t)v19, &qword_256897FB8);
  v59 = v23;
  v56 = v26;
  sub_237E21FC0((uint64_t)v23, (uint64_t)v26, &qword_256898158);
  v27 = qword_256897B50;
  swift_bridgeObjectRetain();
  if (v27 != -1)
    swift_once();
  v28 = (id)qword_25689DFE0;
  sub_237EE27C0();
  v29 = v53;
  (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BDF3FD0], v53);
  v30 = sub_237EE27B4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v29);
  sub_237EE2904();
  sub_237EE20E8();
  v54 = v66;
  v31 = v67;
  v32 = v68;
  v33 = v69;
  v34 = v70;
  v53 = v71;
  v35 = v60;
  v36 = v57;
  v37 = v62;
  (*(void (**)(char *, _QWORD, uint64_t))(v60 + 104))(v57, *MEMORY[0x24BDF5090], v62);
  v38 = (uint64_t)v63;
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v63, v36, v37);
  sub_237E21EBC(v38, (uint64_t)&v13[*(int *)(v55 + 36)], (uint64_t (*)(_QWORD))MEMORY[0x24BDEDB60]);
  *(_QWORD *)v13 = v30;
  *((_QWORD *)v13 + 1) = 0;
  *((_WORD *)v13 + 8) = 257;
  *((_QWORD *)v13 + 3) = v54;
  v13[32] = v31;
  *((_QWORD *)v13 + 5) = v32;
  v13[48] = v33;
  v39 = v53;
  *((_QWORD *)v13 + 7) = v34;
  *((_QWORD *)v13 + 8) = v39;
  swift_retain();
  sub_237E21F00(v38, (uint64_t (*)(_QWORD))MEMORY[0x24BDEDB60]);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v37);
  swift_release();
  sub_237EE2994();
  v41 = v40;
  v43 = v42;
  v44 = v64;
  sub_237E22004((uint64_t)v13, v64, &qword_256898188);
  v45 = v44 + *(int *)(v58 + 36);
  *(double *)v45 = a5;
  *(_QWORD *)(v45 + 8) = v41;
  *(_QWORD *)(v45 + 16) = v43;
  sub_237E2209C((uint64_t)v13, &qword_256898188);
  v46 = v61;
  sub_237E21FC0(v44, v61, &qword_256898190);
  v47 = (uint64_t)v56;
  v48 = v59;
  sub_237E22004((uint64_t)v56, (uint64_t)v59, &qword_256898158);
  sub_237E22004(v46, v44, &qword_256898190);
  v49 = v65;
  sub_237E22004((uint64_t)v48, v65, &qword_256898158);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898198);
  sub_237E22004(v44, v49 + *(int *)(v50 + 48), &qword_256898190);
  sub_237E2209C(v46, &qword_256898190);
  sub_237E2209C(v47, &qword_256898158);
  sub_237E2209C(v44, &qword_256898190);
  return sub_237E2209C((uint64_t)v48, &qword_256898158);
}

__n128 sub_237E1FC3C@<Q0>(__n128 *a1@<X8>)
{
  unsigned __int8 v2;
  unint64_t v3;
  unsigned __int8 v4;
  unint64_t v5;
  unsigned __int8 v6;
  unint64_t v7;
  unsigned __int8 v8;
  unint64_t v9;
  unsigned __int8 v10;
  unint64_t v11;
  unsigned __int8 v12;
  __n128 result;
  __int128 v14;
  unint64_t v15;
  unsigned __int8 v16;
  unint64_t v17;
  unsigned __int8 v18;
  unint64_t v19;
  unsigned __int8 v20;
  unint64_t v21;
  unsigned __int8 v22;
  unint64_t v23;
  unsigned __int8 v24;
  __n128 v25;

  sub_237EE2904();
  sub_237E2E4C4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, &v14, 0.0, 1, INFINITY, 0);
  v2 = BYTE8(v14);
  v3 = v15;
  v4 = v16;
  v5 = v17;
  v6 = v18;
  v7 = v19;
  v8 = v20;
  v9 = v21;
  v10 = v22;
  v11 = v23;
  v12 = v24;
  result = v25;
  a1->n128_u64[0] = v14;
  a1->n128_u8[8] = v2;
  a1[1].n128_u64[0] = v3;
  a1[1].n128_u8[8] = v4;
  a1[2].n128_u64[0] = v5;
  a1[2].n128_u8[8] = v6;
  a1[3].n128_u64[0] = v7;
  a1[3].n128_u8[8] = v8;
  a1[4].n128_u64[0] = v9;
  a1[4].n128_u8[8] = v10;
  a1[5].n128_u64[0] = v11;
  a1[5].n128_u8[8] = v12;
  a1[6] = result;
  return result;
}

uint64_t sub_237E1FD10()
{
  return sub_237EE2088();
}

void sub_237E1FD30()
{
  sub_237EE20A0();
  __break(1u);
}

id sub_237E1FD40()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BE0BF50]), sel_init);
}

uint64_t sub_237E1FD78()
{
  return sub_237EE243C();
}

uint64_t sub_237E1FDB8()
{
  sub_237E22BD0();
  return sub_237EE249C();
}

uint64_t sub_237E1FE08()
{
  sub_237E22BD0();
  return sub_237EE2448();
}

void sub_237E1FE58()
{
  sub_237E22BD0();
  sub_237EE2490();
  __break(1u);
}

uint64_t sub_237E1FE7C()
{
  return sub_237EE22F8();
}

uint64_t sub_237E1FE9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_237EE2238();
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_237EE2304();
}

uint64_t sub_237E1FF18()
{
  return sub_237EE1F5C();
}

uint64_t sub_237E1FF20(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v6 = 0;
  v7 = 1;
  result = MEMORY[0x23B8255D4](a1, &v6);
  v4 = v7;
  v5 = v6;
  if (v7)
    v5 = 0;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v4;
  return result;
}

uint64_t sub_237E1FF70(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v7;
  char v8;

  v7 = 0;
  v8 = 1;
  v3 = MEMORY[0x23B8255E0](a1, &v7);
  v4 = v8;
  v5 = v7;
  if (v8)
    v5 = 0;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v4;
  return v3 & 1;
}

void sub_237E1FFC4(double *a1@<X8>)
{
  *a1 = MEMORY[0x23B8255EC]();
}

uint64_t sub_237E1FFE8(uint64_t a1, uint64_t a2)
{
  return sub_237E210B8(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

void sub_237E20008(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_237E20010(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_237EE2A6C();
  *a2 = 0;
  return result;
}

uint64_t sub_237E20084(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_237EE2A78();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_237E20100@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_237EE2A84();
  v2 = sub_237EE2A54();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

BOOL sub_237E20140(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

void sub_237E20154(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

_QWORD *sub_237E20160@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

BOOL sub_237E20174(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_237E201A4(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_237E201B8(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

uint64_t sub_237E201D4()
{
  sub_237E20E98((unint64_t *)&qword_256898288, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_237EE4F50);
  sub_237E20E98(&qword_256898290, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_237EE4938);
  return sub_237EE30E4();
}

void sub_237E20258(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

_QWORD *sub_237E20264@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

_QWORD *sub_237E20270@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

double sub_237E20280@<D0>(_QWORD *a1@<X8>)
{
  double *v1;
  double result;

  result = *v1;
  *a1 = *(_QWORD *)v1;
  return result;
}

uint64_t sub_237E2028C()
{
  sub_237E20E98(&qword_256898260, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_237EE4C04);
  sub_237E20E98(&qword_256898268, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_237EE4BA4);
  sub_237E22154();
  return sub_237EE30E4();
}

uint64_t sub_237E2032C()
{
  sub_237E20E98(&qword_256898298, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_237EE4840);
  sub_237E20E98(&qword_2568982A0, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_237EE47E0);
  return sub_237EE30E4();
}

uint64_t sub_237E203B0()
{
  sub_237E20E98((unint64_t *)&qword_256898250, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_237EE4F0C);
  sub_237E20E98(&qword_256898258, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_237EE4D08);
  return sub_237EE30E4();
}

uint64_t sub_237E20434(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TimeString(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_237E20478()
{
  sub_237E20E98(&qword_256898278, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_237EE4AAC);
  sub_237E20E98(&qword_256898280, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_237EE4A4C);
  return sub_237EE30E4();
}

uint64_t sub_237E204FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_237EE2A54();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_237E20540@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_237EE2A84();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_237E20568()
{
  sub_237E20E98(&qword_256898240, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_237EE4E7C);
  sub_237E20E98(&qword_256898248, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_237EE4E1C);
  return sub_237EE30E4();
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x23B8271B8]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

id sub_237E2062C@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_237EA50B0(*(double **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_237E20634(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TimeString(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_237E20678()
{
  uint64_t v0;

  return sub_237E1AE4C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_237E20690(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897E10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_237E206D8()
{
  return sub_237E208B4();
}

uint64_t sub_237E206EC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_237E20710()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_237EE1EC0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_237E207A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(sub_237EE1EC0() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_237E20844;
  return sub_237E1A648(a1, v6, v7, v8, v9);
}

uint64_t sub_237E20844()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_237E2088C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_237EA30D0(*(double **)(v1 + 24), a1);
}

uint64_t sub_237E2089C()
{
  uint64_t v0;

  return sub_237E1AFD8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_237E208B4()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeStringObserver) = *(_QWORD *)(v0 + 24);
  swift_retain();
  return swift_release();
}

uint64_t sub_237E208F4(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

void type metadata accessor for CTFont(uint64_t a1)
{
  sub_237E225A4(a1, &qword_256897E48);
}

void type metadata accessor for CTRun(uint64_t a1)
{
  sub_237E225A4(a1, &qword_256897E50);
}

void type metadata accessor for CGColor(uint64_t a1)
{
  sub_237E225A4(a1, &qword_256897E58);
}

void type metadata accessor for Name(uint64_t a1)
{
  sub_237E225A4(a1, &qword_256897E60);
}

void type metadata accessor for Key(uint64_t a1)
{
  sub_237E225A4(a1, &qword_256897E68);
}

void type metadata accessor for Weight(uint64_t a1)
{
  sub_237E225A4(a1, &qword_256897E70);
}

void type metadata accessor for TraitKey(uint64_t a1)
{
  sub_237E225A4(a1, &qword_256897E78);
}

void type metadata accessor for AttributeName(uint64_t a1)
{
  sub_237E225A4(a1, &qword_256897E80);
}

void type metadata accessor for FeatureKey(uint64_t a1)
{
  sub_237E225A4(a1, &qword_256897E88);
}

uint64_t sub_237E209B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  switch(a4)
  {
    case 0:
      swift_retain();
      result = swift_retain();
      break;
    case 1:
    case 2:
    case 3:
      result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

void destroy for RollingClock(uint64_t a1)
{
  swift_release();

  sub_237E20A7C(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t sub_237E20A7C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t result;

  switch(a4)
  {
    case 0:
      swift_release();
      result = swift_release();
      break;
    case 1:
    case 2:
    case 3:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for RollingClock(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  id v14;

  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v6 = *(void **)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  swift_retain();
  v10 = v6;
  sub_237E209B8(v5, v7, v8, v9);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  v11 = *(void **)(a2 + 56);
  v12 = *(void **)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v11;
  LOBYTE(v7) = *(_BYTE *)(a2 + 72);
  v13 = v11;
  v14 = v12;
  *(_QWORD *)(a1 + 64) = v12;
  *(_BYTE *)(a1 + 72) = v7;
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  return a1;
}

uint64_t assignWithCopy for RollingClock(uint64_t a1, uint64_t a2)
{
  char v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;

  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v5;
  v7 = v5;

  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(_QWORD *)(a2 + 40);
  v11 = *(_BYTE *)(a2 + 48);
  sub_237E209B8(v8, v9, v10, v11);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  v15 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v11;
  sub_237E20A7C(v12, v13, v14, v15);
  v16 = *(void **)(a2 + 56);
  v17 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v16;
  v18 = v16;

  v19 = *(void **)(a2 + 64);
  LOBYTE(v9) = *(_BYTE *)(a2 + 72);
  v20 = v19;
  v21 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v19;
  *(_BYTE *)(a1 + 72) = v9;

  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  return a1;
}

__n128 __swift_memcpy74_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 58) = *(_OWORD *)(a2 + 58);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for RollingClock(uint64_t a1, uint64_t a2)
{
  char v4;
  void *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  void *v12;
  char v13;
  void *v14;

  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  swift_release();
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_BYTE *)(a2 + 48);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v6;
  v11 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v7;
  sub_237E20A7C(v8, v9, v10, v11);
  v12 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

  v13 = *(_BYTE *)(a2 + 72);
  v14 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = v13;

  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  return a1;
}

uint64_t getEnumTagSinglePayload for RollingClock(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 74))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RollingClock(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 72) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 74) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 74) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RollingClock()
{
  return &type metadata for RollingClock;
}

uint64_t getEnumTagSinglePayload for WorldMap.DotFillSpec(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for WorldMap.DotFillSpec(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
  sub_237E225A4(a1, &qword_256897E90);
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_237E225A4(a1, &qword_256897E98);
}

uint64_t sub_237E20E6C()
{
  return sub_237E20E98(&qword_256897EA0, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_237EE47A4);
}

uint64_t sub_237E20E98(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x23B8271D0](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_237E20ED8()
{
  return sub_237E20E98(&qword_256897EA8, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_237EE4778);
}

uint64_t sub_237E20F04()
{
  return sub_237E20E98(&qword_256897EB0, (uint64_t (*)(uint64_t))type metadata accessor for FeatureKey, (uint64_t)&unk_237EE4814);
}

uint64_t sub_237E20F30()
{
  return sub_237E20E98(&qword_256897EB8, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_237EE48FC);
}

uint64_t sub_237E20F5C()
{
  return sub_237E20E98(&qword_256897EC0, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_237EE48D0);
}

uint64_t sub_237E20F88()
{
  return sub_237E20E98(&qword_256897EC8, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_237EE4A10);
}

uint64_t sub_237E20FB4()
{
  return sub_237E20E98(&qword_256897ED0, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_237EE49E4);
}

uint64_t sub_237E20FE0()
{
  return sub_237E20E98(&qword_256897ED8, (uint64_t (*)(uint64_t))type metadata accessor for TraitKey, (uint64_t)&unk_237EE4A80);
}

uint64_t sub_237E2100C()
{
  return sub_237E20E98(&qword_256897EE0, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_237EE4B68);
}

uint64_t sub_237E21038()
{
  return sub_237E20E98(&qword_256897EE8, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_237EE4B3C);
}

uint64_t sub_237E21064()
{
  return sub_237EE2CF4();
}

uint64_t sub_237E2106C()
{
  return sub_237EE3288();
}

uint64_t sub_237E2109C()
{
  return sub_237EE3258();
}

uint64_t sub_237E210AC(uint64_t a1, uint64_t a2)
{
  return sub_237E210B8(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_237E210B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_237EE2A84();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_237E210F4()
{
  sub_237EE2A84();
  sub_237EE2ACC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_237E21134()
{
  uint64_t v0;

  sub_237EE2A84();
  sub_237EE3264();
  sub_237EE2ACC();
  v0 = sub_237EE3294();
  swift_bridgeObjectRelease();
  return v0;
}

BOOL sub_237E211A4(double *a1, double *a2)
{
  return *a1 == *a2;
}

uint64_t sub_237E211B8()
{
  return sub_237E20E98(&qword_256897EF0, (uint64_t (*)(uint64_t))type metadata accessor for Weight, (uint64_t)&unk_237EE4BD8);
}

uint64_t sub_237E211E4()
{
  return sub_237E20E98(&qword_256897EF8, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_237EE4CCC);
}

uint64_t sub_237E21210()
{
  return sub_237E20E98(&qword_256897F00, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_237EE4CA0);
}

uint64_t sub_237E2123C()
{
  return sub_237E20E98(&qword_256897F08, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_237EE4DE0);
}

uint64_t sub_237E21268()
{
  return sub_237E20E98(&qword_256897F10, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_237EE4DB4);
}

uint64_t sub_237E21294()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_237EE2A84();
  v2 = v1;
  if (v0 == sub_237EE2A84() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_237EE31BC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_237E2131C()
{
  return sub_237E20E98(&qword_256897F18, (uint64_t (*)(uint64_t))type metadata accessor for Name, (uint64_t)&unk_237EE4E50);
}

uint64_t sub_237E21348()
{
  return sub_237E20E98(&qword_256897F20, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_237EE4D3C);
}

uint64_t sub_237E21374()
{
  return sub_237E20E98(&qword_256897F28, (uint64_t (*)(uint64_t))type metadata accessor for AttributeName, (uint64_t)&unk_237EE496C);
}

uint64_t sub_237E213A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_237E213B0(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  char v8;
  id v9;
  id v10;
  id v11;

  v3 = *(void **)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v7 = *(void **)(a1 + 56);
  v6 = *(void **)(a1 + 64);
  v8 = *(_BYTE *)(a1 + 48);
  swift_retain();
  v9 = v3;
  sub_237E209B8(v2, v4, v5, v8);
  v10 = v7;
  v11 = v6;
  return a1;
}

uint64_t sub_237E21434(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  char v7;

  v2 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v6 = *(void **)(a1 + 56);
  v5 = *(void **)(a1 + 64);
  v7 = *(_BYTE *)(a1 + 48);

  swift_release();
  sub_237E20A7C(v2, v3, v4, v7);

  return a1;
}

uint64_t sub_237E214C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_237E1B608(v1 + 16, a1);
}

uint64_t sub_237E214C8()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_237E214F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_237E1F4DC(*(void (**)(uint64_t))(v1 + 16), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), a1, *(double *)(v1 + 48));
}

unint64_t sub_237E21504()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256897FD0;
  if (!qword_256897FD0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256897F50);
    v2[0] = sub_237E215CC();
    v2[1] = sub_237E22690(&qword_256898068, &qword_256898070, MEMORY[0x24BDEC6F8]);
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256897FD0);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x23B8271C4](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_237E215CC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256897FD8;
  if (!qword_256897FD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256897F60);
    v2[0] = sub_237E21650();
    v2[1] = sub_237E22690(&qword_256898058, &qword_256898060, MEMORY[0x24BDED588]);
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256897FD8);
  }
  return result;
}

unint64_t sub_237E21650()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256897FE0;
  if (!qword_256897FE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256897FB8);
    v2[0] = sub_237E216D4();
    v2[1] = sub_237E22690(&qword_256898048, &qword_256898050, MEMORY[0x24BDEC6F8]);
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256897FE0);
  }
  return result;
}

unint64_t sub_237E216D4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256897FE8;
  if (!qword_256897FE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256897FF0);
    v2[0] = sub_237E21758();
    v2[1] = sub_237E22690(&qword_256898038, &qword_256898040, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256897FE8);
  }
  return result;
}

unint64_t sub_237E21758()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256897FF8;
  if (!qword_256897FF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256898000);
    v2[0] = sub_237E217DC();
    v2[1] = sub_237E22690(&qword_256898028, &qword_256898030, MEMORY[0x24BDF1028]);
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256897FF8);
  }
  return result;
}

unint64_t sub_237E217DC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256898008;
  if (!qword_256898008)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256898010);
    v2[0] = sub_237E21CA0(&qword_256898018, &qword_256898020, MEMORY[0x24BDF1F80], MEMORY[0x24BDF03E0]);
    v2[1] = MEMORY[0x24BDF0B48];
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256898008);
  }
  return result;
}

uint64_t sub_237E21868()
{
  return sub_237E2188C(&qword_256898080, &qword_256897FB0, sub_237E218FC, sub_237E21A28);
}

uint64_t sub_237E2188C(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4();
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDEF3E0], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_237E218FC()
{
  return sub_237E2188C(&qword_256898088, &qword_256897FA8, (uint64_t (*)(void))sub_237E21920, (uint64_t (*)(void))sub_237E219A4);
}

unint64_t sub_237E21920()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256898090;
  if (!qword_256898090)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256897FC0);
    v2[0] = sub_237E21650();
    v2[1] = sub_237E22690(&qword_256898098, &qword_2568980A0, MEMORY[0x24BDF1028]);
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256898090);
  }
  return result;
}

unint64_t sub_237E219A4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2568980A8;
  if (!qword_2568980A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256897F88);
    v2[0] = sub_237E21650();
    v2[1] = sub_237E22690(&qword_2568980B0, &qword_2568980B8, MEMORY[0x24BDED588]);
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2568980A8);
  }
  return result;
}

uint64_t sub_237E21A28()
{
  return sub_237E2188C(&qword_2568980C0, &qword_256897F78, (uint64_t (*)(void))sub_237E21A4C, (uint64_t (*)(void))sub_237E21AD0);
}

unint64_t sub_237E21A4C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2568980C8;
  if (!qword_2568980C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256897F80);
    v2[0] = sub_237E21650();
    v2[1] = sub_237E22690(&qword_2568980D0, &qword_2568980D8, MEMORY[0x24BDED588]);
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2568980C8);
  }
  return result;
}

unint64_t sub_237E21AD0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2568980E0;
  if (!qword_2568980E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256897F68);
    v2[0] = sub_237E21650();
    v2[1] = sub_237E22690(&qword_2568980E8, &qword_2568980F0, MEMORY[0x24BDED550]);
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2568980E0);
  }
  return result;
}

unint64_t sub_237E21B54()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2568980F8;
  if (!qword_2568980F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256897F58);
    v2[0] = sub_237E21504();
    v2[1] = sub_237E22690(&qword_256898078, &qword_256897FC8, MEMORY[0x24BDEC6F8]);
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2568980F8);
  }
  return result;
}

uint64_t sub_237E21BD8()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_237E21C04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_237E1EDF8(*(void (**)(uint64_t))(v1 + 16), a1);
}

unint64_t sub_237E21C14()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256898110;
  if (!qword_256898110)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256898108);
    v2[0] = sub_237E21CA0(&qword_256898118, &qword_256898120, MEMORY[0x24BDF0B30], MEMORY[0x24BDEE838]);
    v2[1] = MEMORY[0x24BDEB920];
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256898110);
  }
  return result;
}

uint64_t sub_237E21CA0(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3;
    v9[1] = a4;
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_237E21D00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_237EE22C8();
  *a1 = result;
  return result;
}

uint64_t sub_237E21D28()
{
  swift_retain();
  return sub_237EE22D4();
}

uint64_t sub_237E21D50(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

_BYTE *sub_237E21D78(_BYTE *a1, _BYTE *a2)
{
  *a2 = *a1;
  return a2;
}

uint64_t objectdestroy_14Tm()
{
  uint64_t v0;

  swift_release();

  sub_237E20A7C(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  return swift_deallocObject();
}

uint64_t sub_237E21DDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_237E1CB5C(v1 + 16, a1);
}

uint64_t sub_237E21DE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_237EE1B0C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_237E21E58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(sub_237EE1B0C() - 8) + 80);
  return sub_237E1D530(*(unsigned __int8 *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24), *(_QWORD *)(v1 + 32), v1 + ((v3 + 40) & ~v3), a1);
}

uint64_t sub_237E21EAC(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain();
  else
    return swift_bridgeObjectRetain();
}

uint64_t sub_237E21EBC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_237E21F00(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_237E21F3C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

unint64_t sub_237E21F50()
{
  unint64_t result;

  result = qword_256898200;
  if (!qword_256898200)
  {
    result = MEMORY[0x23B8271D0](MEMORY[0x24BEBBE20], MEMORY[0x24BEBBE30]);
    atomic_store(result, (unint64_t *)&qword_256898200);
  }
  return result;
}

uint64_t sub_237E21F94()
{
  return 8;
}

uint64_t sub_237E21FA0()
{
  return swift_release();
}

uint64_t sub_237E21FA8(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

_QWORD *sub_237E21FB4(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_237E21FC0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_237E22004(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_237E2204C()
{
  unint64_t result;

  result = qword_256898218;
  if (!qword_256898218)
  {
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDEACD0], MEMORY[0x24BDEACE0]);
    atomic_store(result, (unint64_t *)&qword_256898218);
  }
  return result;
}

uint64_t sub_237E22090()
{
  return 8;
}

uint64_t sub_237E2209C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *sub_237E220D8(__int128 *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = *a1;
  *(_OWORD *)((char *)a2 + 9) = *(__int128 *)((char *)a1 + 9);
  *a2 = v2;
  return a2;
}

unint64_t sub_237E220F8()
{
  unint64_t result;

  result = qword_256898228;
  if (!qword_256898228)
  {
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDEACB8], MEMORY[0x24BDEACC8]);
    atomic_store(result, (unint64_t *)&qword_256898228);
  }
  return result;
}

uint64_t sub_237E22140()
{
  return 8;
}

unint64_t sub_237E22154()
{
  unint64_t result;

  result = qword_256898270;
  if (!qword_256898270)
  {
    result = MEMORY[0x23B8271D0](MEMORY[0x24BEE50D0], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_256898270);
  }
  return result;
}

ValueMetadata *type metadata accessor for VibrancyViewMask()
{
  return &type metadata for VibrancyViewMask;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for RollingClock.Layout(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
  {
    v6 = *a1;
    v7 = v6 >= 3;
    v8 = v6 - 3;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 3;
    if (a2 + 3 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_237E22204 + 4 * byte_237EE4488[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for RollingClock.Layout(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFD)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_237E222AC + 4 * byte_237EE4492[v5]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_237E222E0 + 4 * byte_237EE448D[v5]))();
}

uint64_t sub_237E222E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237E222E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237E222F0);
  return result;
}

uint64_t sub_237E222FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237E22304);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_237E22308(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237E22310(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237E2231C(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 3)
    return v1 - 2;
  else
    return 0;
}

_BYTE *sub_237E22330(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 2;
  return result;
}

ValueMetadata *type metadata accessor for RollingClock.Layout()
{
  return &type metadata for RollingClock.Layout;
}

uint64_t initializeBufferWithCopyOfBuffer for RollingClock.Style(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for RollingClock.Style(uint64_t a1)
{
  return sub_237E20A7C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for RollingClock.Style(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_237E209B8(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for RollingClock.Style(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_237E209B8(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_237E20A7C(v7, v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for RollingClock.Style(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_237E20A7C(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for RollingClock.Style(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for RollingClock.Style(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_237E2254C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 3u)
    return *(unsigned __int8 *)(a1 + 24);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_237E22564(uint64_t result, unsigned int a2)
{
  uint64_t v2;

  v2 = a2 - 4;
  if (a2 >= 4)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    LOBYTE(a2) = 4;
    *(_QWORD *)result = v2;
  }
  *(_BYTE *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for RollingClock.Style()
{
  return &type metadata for RollingClock.Style;
}

void type metadata accessor for CGPath(uint64_t a1)
{
  sub_237E225A4(a1, &qword_2568982A8);
}

void sub_237E225A4(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

unint64_t sub_237E225EC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2568982B0;
  if (!qword_2568982B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256897F38);
    v2[0] = sub_237E2188C(&qword_2568982B8, &qword_256897F30, sub_237E21868, (uint64_t (*)(void))sub_237E21B54);
    v2[1] = sub_237E22690(&qword_2568982C0, &qword_2568982C8, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2568982B0);
  }
  return result;
}

uint64_t sub_237E22690(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x23B8271D0](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_237E226D0()
{
  return MEMORY[0x24BDF5550];
}

uint64_t sub_237E226DC()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_237E226EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X10 }
}

BOOL sub_237E22734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v8;
  uint64_t v9;
  char v10;

  if (a8)
    return 0;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  if ((sub_237EE26D0() & 1) == 0)
  {
    swift_release();
    swift_release();
    swift_release();
LABEL_8:
    swift_release();
    return 0;
  }
  if (!v9)
  {
    swift_release();
    swift_release();
    if (!v8)
      return 1;
    goto LABEL_8;
  }
  if (!v8)
  {
    swift_release();
    swift_release();
    goto LABEL_8;
  }
  swift_retain();
  swift_retain();
  v10 = sub_237EE26D0();
  swift_release_n();
  swift_release();
  swift_release();
  swift_release_n();
  return (v10 & 1) != 0;
}

ValueMetadata *type metadata accessor for VibrancyView()
{
  return &type metadata for VibrancyView;
}

uint64_t getEnumTagSinglePayload for RollingClock.Layout.Alignment(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for RollingClock.Layout.Alignment(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_237E22A34 + 4 * byte_237EE44A1[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_237E22A68 + 4 * byte_237EE449C[v4]))();
}

uint64_t sub_237E22A68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237E22A70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237E22A78);
  return result;
}

uint64_t sub_237E22A84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237E22A8CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_237E22A90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237E22A98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237E22AA4(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_237E22AAC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for RollingClock.Layout.Alignment()
{
  return &type metadata for RollingClock.Layout.Alignment;
}

unint64_t sub_237E22AC8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_2568982D0;
  if (!qword_2568982D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568982D8);
    v2[0] = sub_237E22B34();
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_2568982D0);
  }
  return result;
}

unint64_t sub_237E22B34()
{
  unint64_t result;

  result = qword_2568982E0;
  if (!qword_2568982E0)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE5320, &type metadata for VibrancyView);
    atomic_store(result, (unint64_t *)&qword_2568982E0);
  }
  return result;
}

unint64_t sub_237E22B7C()
{
  unint64_t result;

  result = qword_2568982E8;
  if (!qword_2568982E8)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE52F8, &type metadata for RollingClock.Layout.Alignment);
    atomic_store(result, (unint64_t *)&qword_2568982E8);
  }
  return result;
}

uint64_t sub_237E22BC0()
{
  return MEMORY[0x24BDF5560];
}

unint64_t sub_237E22BD0()
{
  unint64_t result;

  result = qword_2568982F0;
  if (!qword_2568982F0)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE5370, &type metadata for VibrancyView);
    atomic_store(result, (unint64_t *)&qword_2568982F0);
  }
  return result;
}

uint64_t sub_237E22C58()
{
  return sub_237E20678();
}

void sub_237E22C7C()
{
  qword_25689DEB0 = 0x4049000000000000;
}

void sub_237E22C8C()
{
  qword_25689DEB8 = 0x4041000000000000;
}

void sub_237E22C9C()
{
  qword_25689DEC0 = 0x403E000000000000;
}

void sub_237E22CAC()
{
  qword_25689DEC8 = 0x403E000000000000;
}

void sub_237E22CBC()
{
  qword_25689DED0 = 0x404B000000000000;
}

uint64_t sub_237E22CCC()
{
  uint64_t v0;
  void *v1;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2568982F8);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_237EE5410;
  *(_QWORD *)(v0 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.662745098, 0.462745098, 0.847058824, 1.0);
  *(_QWORD *)(v0 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.952941176, 0.337254902, 0.576470588, 1.0);
  v1 = (void *)objc_opt_self();
  *(_QWORD *)(v0 + 48) = objc_msgSend(v1, sel_systemOrangeColor);
  *(_QWORD *)(v0 + 56) = objc_msgSend(v1, sel_systemYellowColor);
  *(_QWORD *)(v0 + 64) = objc_msgSend(v1, sel_systemGreenColor);
  *(_QWORD *)(v0 + 72) = objc_msgSend(v1, sel_systemBlueColor);
  *(_QWORD *)(v0 + 80) = objc_msgSend(v1, sel_systemIndigoColor);
  *(_QWORD *)(v0 + 88) = objc_msgSend(v1, sel_systemPurpleColor);
  *(_QWORD *)(v0 + 96) = objc_msgSend(v1, sel_systemPinkColor);
  result = sub_237EE2BEC();
  qword_25689DED8 = v0;
  return result;
}

void sub_237E22FB8(char a1)
{
  _QWORD *v1;
  void *v3;
  char v4;
  id v5;
  uint64_t v6;

  v3 = *(void **)((char *)v1 + OBJC_IVAR____TtC11ClockPoster23ClockFaceViewController_hostView);
  (*(void (**)(uint64_t *__return_ptr))((*MEMORY[0x24BEE4EA0] & *v1) + 0xA8))(&v6);
  v4 = *((_BYTE *)v1 + OBJC_IVAR____TtC11ClockPoster23ClockFaceViewController_canAnimateRedMode);
  v5 = v3;
  sub_237E38828(a1, (unsigned __int8 *)&v6, v4);

}

uint64_t (*sub_237E23040(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = OBJC_IVAR____TtC11ClockPoster23ClockFaceViewController_isDisplayStyleRedMode;
  *(_QWORD *)a1 = v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(v1 + v2);
  return sub_237E23064;
}

uint64_t sub_237E23064(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t result;
  int v4;

  v2 = *(_QWORD **)a1;
  v1 = *(_QWORD *)(a1 + 8);
  result = *(unsigned __int8 *)(a1 + 16);
  v4 = *((unsigned __int8 *)v2 + v1);
  *((_BYTE *)v2 + v1) = result;
  if ((_DWORD)result != v4)
    return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v2) + 0x88))();
  return result;
}

void sub_237E230B0(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

id sub_237E23170()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClockFaceViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ClockFaceViewController()
{
  return objc_opt_self();
}

uint64_t sub_237E231D0(char a1, uint64_t a2, uint64_t a3)
{
  return sub_237E23248(a1, a2, a3, (uint64_t (*)(void))sub_237E37910);
}

uint64_t (*sub_237E231DC(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_237E23040((uint64_t)v2);
  return sub_237E23224;
}

uint64_t sub_237E23228()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC11ClockPoster23ClockFaceViewController_isDisplayStyleRedMode);
}

uint64_t sub_237E2323C(char a1, uint64_t a2, uint64_t a3)
{
  return sub_237E23248(a1, a2, a3, (uint64_t (*)(void))sub_237EC3034);
}

uint64_t sub_237E23248(char a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t *v4;
  uint64_t result;
  uint64_t v7;
  int v8;

  result = a1 & 1;
  v7 = *v4;
  v8 = *(unsigned __int8 *)(v7 + OBJC_IVAR____TtC11ClockPoster23ClockFaceViewController_isDisplayStyleRedMode);
  *(_BYTE *)(v7 + OBJC_IVAR____TtC11ClockPoster23ClockFaceViewController_isDisplayStyleRedMode) = a1;
  if (v8 != (_DWORD)result)
    return a4();
  return result;
}

void sub_237E23288(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for PixelAlignedScaler(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PixelAlignedScaler(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for PixelAlignedScaler()
{
  return &type metadata for PixelAlignedScaler;
}

BOOL static CLLocationCoordinate2D.== infix(_:_:)(double a1, double a2, double a3, double a4)
{
  return a2 == a4 && a1 == a3;
}

BOOL sub_237E23344(double *a1, double *a2)
{
  return a1[1] == a2[1] && *a1 == *a2;
}

uint64_t CLLocationCoordinate2D.hash(into:)()
{
  sub_237EE3288();
  return sub_237EE3288();
}

uint64_t CLLocationCoordinate2D.hashValue.getter()
{
  sub_237EE3264();
  sub_237EE3288();
  sub_237EE3288();
  return sub_237EE3294();
}

uint64_t sub_237E23414()
{
  sub_237EE3264();
  CLLocationCoordinate2D.hash(into:)();
  return sub_237EE3294();
}

uint64_t sub_237E23464()
{
  return CLLocationCoordinate2D.hash(into:)();
}

uint64_t sub_237E2346C()
{
  sub_237EE3264();
  CLLocationCoordinate2D.hash(into:)();
  return sub_237EE3294();
}

unint64_t sub_237E234BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256898340[0];
  if (!qword_256898340[0])
  {
    type metadata accessor for CLLocationCoordinate2D(255);
    result = MEMORY[0x23B8271D0](&protocol conformance descriptor for CLLocationCoordinate2D, v1);
    atomic_store(result, qword_256898340);
  }
  return result;
}

uint64_t sub_237E23504@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 96);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t sub_237E23568(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 96);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 40))(v4, a1);
  return swift_endAccess();
}

uint64_t Atomic.__allocating_init(wrappedValue:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  Atomic.init(wrappedValue:)(a1);
  return v2;
}

char *Atomic.init(wrappedValue:)(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)v1;
  type metadata accessor for CPUnfairLock();
  v4 = swift_allocObject();
  *(_DWORD *)(v4 + 16) = 0;
  *((_QWORD *)v1 + 2) = v4;
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 32))(&v1[*(_QWORD *)(v3 + 96)], a1);
  return v1;
}

uint64_t type metadata accessor for CPUnfairLock()
{
  return objc_opt_self();
}

uint64_t sub_237E23690@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  char *v5;

  v3 = (os_unfair_lock_s *)(v1[2] + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v3);
  v4 = *v1;
  v5 = (char *)v1 + *(_QWORD *)(*v1 + 96);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *))(*(_QWORD *)(*(_QWORD *)(v4 + 80) - 8) + 16))(a1, v5);
  os_unfair_lock_unlock(v3);
  return swift_endAccess();
}

uint64_t sub_237E23728(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  sub_237E23A4C(a1);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 8))(a1);
}

void (*sub_237E23764(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v7 = malloc(v6);
  v3[4] = v7;
  sub_237E23690((uint64_t)v7);
  return sub_237E237E4;
}

void sub_237E237E4(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, uint64_t);

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 24);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if ((a2 & 1) != 0)
  {
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 24), v4, v5);
    sub_237E23A4C((uint64_t)v3);
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
    v7(v3, v5);
  }
  else
  {
    sub_237E23A4C(*(_QWORD *)(*(_QWORD *)a1 + 32));
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
  }
  v7(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

uint64_t *Atomic.deinit()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 96));
  return v0;
}

uint64_t Atomic.__deallocating_deinit()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 96));
  return swift_deallocClassInstance();
}

uint64_t sub_237E23910()
{
  return swift_deallocClassInstance();
}

uint64_t sub_237E23920(uint64_t (*a1)(void), uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _QWORD v8[6];

  if (objc_msgSend((id)objc_opt_self(), sel_isMainThread))
    return a1();
  sub_237E23C34();
  v5 = sub_237EE2DFC();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v8[4] = sub_237E23C80;
  v8[5] = v6;
  v8[0] = MEMORY[0x24BDAC760];
  v8[1] = 1107296256;
  v8[2] = sub_237ED10FC;
  v8[3] = &block_descriptor;
  v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  dispatch_sync((dispatch_queue_t)v5, v7);

  _Block_release(v7);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v5 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_237E23A4C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  os_unfair_lock_s *v7;
  uint64_t v9;

  v3 = *(_QWORD *)(*v1 + 80);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (os_unfair_lock_s *)(v1[2] + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  sub_237E23568((uint64_t)v6);
  os_unfair_lock_unlock(v7);
  return swift_endAccess();
}

uint64_t sub_237E23B04@<X0>(uint64_t a1@<X8>)
{
  return sub_237E23690(a1);
}

uint64_t sub_237E23B24(uint64_t a1)
{
  return sub_237E23A4C(a1);
}

uint64_t sub_237E23B44()
{
  return 8;
}

_QWORD *sub_237E23B50(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_237E23B60()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for Atomic(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Atomic);
}

uint64_t method lookup function for Atomic()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Atomic.__allocating_init(wrappedValue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of Atomic.wrappedValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of Atomic.wrappedValue.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of Atomic.wrappedValue.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t sub_237E23C24(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_237E23C2C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

unint64_t sub_237E23C34()
{
  unint64_t result;

  result = qword_25689C150;
  if (!qword_25689C150)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25689C150);
  }
  return result;
}

uint64_t sub_237E23C70()
{
  return swift_deallocObject();
}

uint64_t sub_237E23C80()
{
  uint64_t v0;

  return sub_237E2A5D0(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x23B827140](a1, v6, a5);
}

id sub_237E23CCC()
{
  void *v0;
  uint64_t inited;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  id v27;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256898468);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_237EE5590;
  *(_OWORD *)(inited + 32) = xmmword_237EE55A0;
  *(_OWORD *)(inited + 48) = xmmword_237EE55B0;
  *(_OWORD *)(inited + 64) = xmmword_237EE55C0;
  *(_OWORD *)(inited + 80) = xmmword_237EE55D0;
  objc_msgSend(v0, sel_pointSize);
  objc_msgSend(v0, sel_pointSize);
  if (v2 >= 0.0)
  {
    v6 = *(double *)(inited + 48);
    v5 = *(double *)(inited + 56);
    objc_msgSend(v0, sel_pointSize);
    if (v6 >= v7)
      v4 = 1.0;
    else
      v4 = v5;
    if (v6 >= v7)
      v3 = 0.0;
    else
      v3 = v6;
    objc_msgSend(v0, sel_pointSize);
    if (v8 >= v6)
    {
      v6 = *(double *)(inited + 64);
      v5 = *(double *)(inited + 72);
      objc_msgSend(v0, sel_pointSize);
      if (v6 < v9)
      {
        v4 = v5;
        v3 = v6;
      }
      objc_msgSend(v0, sel_pointSize);
      if (v10 >= v6)
      {
        objc_msgSend(v0, sel_pointSize);
        v6 = 200.0;
        v5 = 0.25;
        if (v11 > 200.0)
        {
          v4 = 0.25;
          v3 = 200.0;
        }
        objc_msgSend(v0, sel_pointSize);
      }
    }
  }
  else
  {
    v3 = 0.0;
    v4 = 1.0;
    v5 = 1.0;
    v6 = 0.0;
  }
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_pointSize);
  v13 = v4 + (v5 - v4) * ((v12 - v3) / (v6 - v3));
  objc_msgSend(v0, sel_pointSize);
  v15 = floor(v14 * v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898470);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_237EE55E0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898478);
  v17 = swift_initStackObject();
  *(_OWORD *)(v17 + 16) = xmmword_237EE4470;
  v18 = (void *)*MEMORY[0x24BEBE1B8];
  *(_QWORD *)(v17 + 32) = *MEMORY[0x24BEBE1B8];
  *(_QWORD *)(v17 + 40) = 38;
  v19 = (void *)*MEMORY[0x24BEBE1A8];
  *(_QWORD *)(v17 + 48) = *MEMORY[0x24BEBE1A8];
  *(_QWORD *)(v17 + 56) = 1;
  v20 = v18;
  v21 = v19;
  *(_QWORD *)(v16 + 32) = sub_237EAB06C(v17);
  v22 = objc_msgSend(v0, sel_fontDescriptor);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898480);
  v23 = swift_initStackObject();
  *(_OWORD *)(v23 + 16) = xmmword_237EE55E0;
  v24 = (void *)*MEMORY[0x24BEBB548];
  *(_QWORD *)(v23 + 32) = *MEMORY[0x24BEBB548];
  *(_QWORD *)(v23 + 64) = __swift_instantiateConcreteTypeFromMangledName(&qword_256898488);
  *(_QWORD *)(v23 + 40) = v16;
  v25 = v24;
  sub_237EAB168(v23);
  type metadata accessor for AttributeName(0);
  sub_237E24090();
  v26 = (void *)sub_237EE29F4();
  swift_bridgeObjectRelease();

  v27 = objc_msgSend((id)objc_opt_self(), sel_fontWithDescriptor_size_, v22, v15);
  return v27;
}

uint64_t sub_237E23FF4(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_237E24030 + 4 * byte_237EE55F0[a1]))(0xD000000000000021, 0x8000000237EEE490);
}

uint64_t sub_237E24030()
{
  uint64_t v0;

  return v0 + 15;
}

unint64_t sub_237E24090()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256898288;
  if (!qword_256898288)
  {
    type metadata accessor for AttributeName(255);
    result = MEMORY[0x23B8271D0](&unk_237EE4F50, v1);
    atomic_store(result, (unint64_t *)&qword_256898288);
  }
  return result;
}

uint64_t sub_237E240D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  int64_t v28;
  _OWORD v29[4];
  _OWORD v30[2];
  _OWORD v31[3];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568984A0);
    v2 = sub_237EE30CC();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v27 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v26 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v28 = 0;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v28 << 6);
      goto LABEL_28;
    }
    v11 = v28 + 1;
    if (__OFADD__(v28, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v26)
      goto LABEL_37;
    v12 = *(_QWORD *)(v27 + 8 * v11);
    v13 = v28 + 1;
    if (!v12)
    {
      v13 = v28 + 2;
      if (v28 + 2 >= v26)
        goto LABEL_37;
      v12 = *(_QWORD *)(v27 + 8 * v13);
      if (!v12)
      {
        v13 = v28 + 3;
        if (v28 + 3 >= v26)
          goto LABEL_37;
        v12 = *(_QWORD *)(v27 + 8 * v13);
        if (!v12)
        {
          v13 = v28 + 4;
          if (v28 + 4 >= v26)
            goto LABEL_37;
          v12 = *(_QWORD *)(v27 + 8 * v13);
          if (!v12)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    v28 = v13;
LABEL_28:
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v10);
    *(_QWORD *)&v31[0] = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v10);
    *(_QWORD *)&v30[0] = v15;
    v16 = *(id *)&v31[0];
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568984A8);
    swift_dynamicCast();
    v17 = *(_QWORD *)&v31[0];
    sub_237E24AC8((_OWORD *)((char *)v31 + 8), v29);
    sub_237E24AC8(v29, v31);
    sub_237E24AC8(v31, v30);
    sub_237EE2A84();
    sub_237EE3264();
    sub_237EE2ACC();
    v18 = sub_237EE3294();
    result = swift_bridgeObjectRelease();
    v19 = -1 << *(_BYTE *)(v2 + 32);
    v20 = v18 & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6))) != 0)
    {
      v8 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v6 + 8 * v21);
      }
      while (v25 == -1);
      v8 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v6 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v17;
    result = (uint64_t)sub_237E24AC8(v30, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v8));
    ++*(_QWORD *)(v2 + 16);
  }
  v14 = v28 + 5;
  if (v28 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_237E24AD8();
    return v2;
  }
  v12 = *(_QWORD *)(v27 + 8 * v14);
  if (v12)
  {
    v13 = v28 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v26)
      goto LABEL_37;
    v12 = *(_QWORD *)(v27 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_237E2447C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  int64_t v30;
  _OWORD v31[4];
  _OWORD v32[2];
  _OWORD v33[3];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568984B0);
    v2 = sub_237EE30CC();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v29 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v28 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v30 = 0;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v30 << 6);
      goto LABEL_28;
    }
    v11 = v30 + 1;
    if (__OFADD__(v30, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v28)
      goto LABEL_37;
    v12 = *(_QWORD *)(v29 + 8 * v11);
    v13 = v30 + 1;
    if (!v12)
    {
      v13 = v30 + 2;
      if (v30 + 2 >= v28)
        goto LABEL_37;
      v12 = *(_QWORD *)(v29 + 8 * v13);
      if (!v12)
      {
        v13 = v30 + 3;
        if (v30 + 3 >= v28)
          goto LABEL_37;
        v12 = *(_QWORD *)(v29 + 8 * v13);
        if (!v12)
        {
          v13 = v30 + 4;
          if (v30 + 4 >= v28)
            goto LABEL_37;
          v12 = *(_QWORD *)(v29 + 8 * v13);
          if (!v12)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
    v30 = v13;
LABEL_28:
    v16 = *(void **)(*(_QWORD *)(a1 + 56) + 8 * v10);
    *(_QWORD *)&v33[0] = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v10);
    v15 = *(void **)&v33[0];
    *(_QWORD *)&v32[0] = v16;
    type metadata accessor for CTFont(0);
    v17 = v15;
    v18 = v16;
    swift_dynamicCast();
    v19 = *(_QWORD *)&v33[0];
    sub_237E24AC8((_OWORD *)((char *)v33 + 8), v31);
    sub_237E24AC8(v31, v33);
    sub_237E24AC8(v33, v32);
    sub_237EE2A84();
    sub_237EE3264();
    sub_237EE2ACC();
    v20 = sub_237EE3294();
    result = swift_bridgeObjectRelease();
    v21 = -1 << *(_BYTE *)(v2 + 32);
    v22 = v20 & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v6 + 8 * (v22 >> 6))) != 0)
    {
      v8 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v6 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v23 == v25;
        if (v23 == v25)
          v23 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v6 + 8 * v23);
      }
      while (v27 == -1);
      v8 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(_QWORD *)(v6 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v8) = v19;
    result = (uint64_t)sub_237E24AC8(v32, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v8));
    ++*(_QWORD *)(v2 + 16);
  }
  v14 = v30 + 5;
  if (v30 + 5 >= v28)
  {
LABEL_37:
    swift_release();
    sub_237E24AD8();
    return v2;
  }
  v12 = *(_QWORD *)(v29 + 8 * v14);
  if (v12)
  {
    v13 = v30 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v28)
      goto LABEL_37;
    v12 = *(_QWORD *)(v29 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_237E2481C(char a1)
{
  __asm { BR              X11 }
}

CTFontRef sub_237E24880()
{
  char v0;
  uint64_t v1;
  CGFloat v2;
  __CFString *v3;
  CTFontRef v4;
  uint64_t inited;
  const __CTFont *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;

  v3 = (__CFString *)sub_237EE2A54();
  swift_bridgeObjectRelease();
  v4 = CTFontCreateWithNameAndOptions(v3, v2, 0, 0x20000uLL);

  if ((v0 & 1) != 0)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898490);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_237EE55E0;
  v6 = v4;
  *(_DWORD *)(inited + 32) = TextToFourCharCode();
  *(_QWORD *)(inited + 40) = v1;
  v7 = sub_237EAEA78(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898498);
  v8 = swift_initStackObject();
  *(_OWORD *)(v8 + 16) = xmmword_237EE55E0;
  sub_237EE2A84();
  v9 = sub_237EE2A54();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 32) = v9;
  *(_QWORD *)(v8 + 40) = v7;
  v10 = sub_237EAB29C(v8);
  v11 = -[__CTFont fontDescriptor](v6, sel_fontDescriptor);

  sub_237E240D8(v10);
  swift_bridgeObjectRelease();
  type metadata accessor for AttributeName(0);
  sub_237E24090();
  v12 = (void *)sub_237EE29F4();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v11, sel_fontDescriptorByAddingAttributes_, v12);

  v14 = objc_msgSend((id)objc_opt_self(), sel_fontWithDescriptor_size_, v13, v2);
  return (CTFontRef)v14;
}

_OWORD *sub_237E24AC8(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_237E24AD8()
{
  return swift_release();
}

void sub_237E24AE0()
{
  qword_25689DEE0 = 0xC024000000000000;
}

void sub_237E24AF0()
{
  qword_25689DEE8 = 0xC035000000000000;
}

void sub_237E24B00()
{
  qword_25689DEF0 = 0x4008000000000000;
}

uint64_t sub_237E24B10(_BYTE *a1, unsigned __int8 *a2)
{
  int v2;

  v2 = *a2;
  if ((char)*a1 < 0)
  {
    if ((v2 & 0x80) == 0)
      return 0;
  }
  else if ((v2 & 0x80) != 0)
  {
    return 0;
  }
  return (((*a1 & 1) == 0) ^ v2) & 1;
}

uint64_t sub_237E24B4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2568984B8);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_237EE5590;
  *(_QWORD *)(v0 + 32) = 0;
  sub_237EE2724();
  v1 = sub_237EE273C();
  swift_release();
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 48) = 0x3FA999999999999ALL;
  *(_QWORD *)(v0 + 56) = sub_237EE2724();
  *(_QWORD *)(v0 + 64) = 0x3FC999999999999ALL;
  *(_QWORD *)(v0 + 72) = sub_237EE2724();
  *(_QWORD *)(v0 + 80) = 0x3FE3333333333333;
  sub_237EE2724();
  v2 = sub_237EE273C();
  swift_release();
  *(_QWORD *)(v0 + 88) = v2;
  return v0;
}

ValueMetadata *type metadata accessor for WorldConstants()
{
  return &type metadata for WorldConstants;
}

ValueMetadata *type metadata accessor for WorldConstants.Pins()
{
  return &type metadata for WorldConstants.Pins;
}

uint64_t getEnumTagSinglePayload for WorldConstants.Pins.SelectionState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x7F)
    goto LABEL_17;
  if (a2 + 129 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 129) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 129;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 129;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 129;
  }
LABEL_17:
  v6 = (*a1 & 0x7E | (*a1 >> 7)) ^ 0x7F;
  if (v6 >= 0x7E)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for WorldConstants.Pins.SelectionState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 129 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 129) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x7F)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x7E)
    return ((uint64_t (*)(void))((char *)&loc_237E24D28 + 4 * byte_237EE55FD[v4]))();
  *a1 = a2 - 127;
  return ((uint64_t (*)(void))((char *)sub_237E24D5C + 4 * byte_237EE55F8[v4]))();
}

uint64_t sub_237E24D5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237E24D64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237E24D6CLL);
  return result;
}

uint64_t sub_237E24D84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237E24D8CLL);
  *(_BYTE *)result = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
  return result;
}

uint64_t sub_237E24D90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237E24D98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237E24DA4(unsigned __int8 *a1)
{
  return *a1 >> 7;
}

_BYTE *sub_237E24DB0(_BYTE *result)
{
  *result &= ~0x80u;
  return result;
}

_BYTE *sub_237E24DC0(_BYTE *result, char a2)
{
  *result = *result & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for WorldConstants.Pins.SelectionState()
{
  return &type metadata for WorldConstants.Pins.SelectionState;
}

void ClockFaceController.kind.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t sub_237E24DF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t result;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 32);
  ObjectType = swift_getObjectType();
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  swift_unknownObjectRetain();
  v6(ObjectType, v5);
  result = swift_unknownObjectRelease();
  *(_BYTE *)(a1 + 97) = *(_BYTE *)(v1 + 16);
  return result;
}

uint64_t sub_237E24E80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 24);
  swift_getObjectType();
  if (swift_conformsToProtocol2())
    v2 = v1;
  else
    v2 = 0;
  if (v2)
    swift_unknownObjectRetain();
  return v2;
}

void sub_237E24EFC()
{
  __asm { BR              X10 }
}

uint64_t sub_237E24F24()
{
  return sub_237E34F14();
}

uint64_t sub_237E24F30()
{
  return sub_237E34BD8();
}

uint64_t sub_237E24F3C()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6460);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_237EE55E0;
  sub_237E8A51C();
  return v0;
}

uint64_t sub_237E25058()
{
  return sub_237E353DC();
}

uint64_t sub_237E25064(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v1 = *a1;
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 32);
  ObjectType = swift_getObjectType();
  v4 = *(_QWORD *)(v2 + 8);
  v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  swift_unknownObjectRetain();
  v5(ObjectType, v4);
  return swift_unknownObjectRelease();
}

uint64_t sub_237E250E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 32);
  ObjectType = swift_getObjectType();
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  swift_unknownObjectRetain();
  v4(ObjectType, v3);
  return swift_unknownObjectRelease();
}

uint64_t sub_237E2516C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;
  void (*v23)(_BYTE *, uint64_t, uint64_t);
  _BYTE v24[120];
  _BYTE v25[120];
  _BYTE v26[128];
  uint64_t v27;

  sub_237E25A3C();
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568984C0);
  if (swift_dynamicCastClass())
  {
    v4 = qword_256897AD8;
    swift_unknownObjectRetain();
    if (v4 != -1)
      swift_once();
    sub_237E28608(a1, (uint64_t)v26);
    sub_237E2A1CC((uint64_t)v26, (uint64_t)v25);
    sub_237E2A1CC((uint64_t)v25, (uint64_t)v24);
    swift_retain();
    sub_237E760E4((uint64_t)v24);
    swift_release();
    sub_237E2A208((uint64_t)v25);
    swift_unknownObjectRelease();
    sub_237E2846C(a1);
    return sub_237E2A208((uint64_t)v26);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2568984C8);
    v6 = swift_dynamicCastClass();
    if (v6)
    {
      v7 = v6;
      v8 = qword_256897AD8;
      swift_unknownObjectRetain();
      if (v8 != -1)
        swift_once();
      sub_237E28BC4(a1, (uint64_t)v26);
      sub_237E2A13C((uint64_t)v26, (uint64_t)v25);
      v9 = *(_QWORD *)(v7 + 16);
      sub_237E2A13C((uint64_t)v25, (uint64_t)v24);
      KeyPath = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](KeyPath);
      v27 = v9;
      sub_237E2CF28(&qword_2568984F0, 255, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
      swift_retain();
      sub_237EE1F14();
      swift_release();
      sub_237E2A198((uint64_t)v24);
      swift_release();
      sub_237E2A198((uint64_t)v25);
      swift_unknownObjectRelease();
      sub_237E2846C(a1);
      return sub_237E2A198((uint64_t)v26);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2568984D0);
      v11 = swift_dynamicCastClass();
      if (v11)
      {
        v12 = v11;
        v13 = qword_256897AD8;
        swift_unknownObjectRetain();
        if (v13 != -1)
          swift_once();
        sub_237E2911C(a1, (uint64_t)v26);
        sub_237E2A0AC((uint64_t)v26, (uint64_t)v25);
        v14 = *(_QWORD *)(v12 + 16);
        sub_237E2A0AC((uint64_t)v25, (uint64_t)v24);
        v15 = swift_getKeyPath();
        MEMORY[0x24BDAC7A8](v15);
        v27 = v14;
        sub_237E2CF28(&qword_2568984E8, 255, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
        swift_retain();
        sub_237EE1F14();
        swift_release();
        sub_237E2A108((uint64_t)v24);
        swift_release();
        sub_237E2A108((uint64_t)v25);
        swift_unknownObjectRelease();
        sub_237E2846C(a1);
        return sub_237E2A108((uint64_t)v26);
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_2568984D8);
        v16 = swift_dynamicCastClass();
        if (v16)
        {
          v17 = v16;
          v18 = qword_256897AD8;
          swift_unknownObjectRetain();
          if (v18 != -1)
            swift_once();
          sub_237E296F8(a1, (uint64_t)v26);
          sub_237E29CD0((uint64_t)v26, (uint64_t)v25);
          v19 = *(_QWORD *)(v17 + 16);
          sub_237E29CD0((uint64_t)v25, (uint64_t)v24);
          v20 = swift_getKeyPath();
          MEMORY[0x24BDAC7A8](v20);
          v27 = v19;
          sub_237E2CF28(&qword_2568984E0, 255, (uint64_t (*)(uint64_t))type metadata accessor for PlayViewModel, (uint64_t)&unk_237EECA68);
          swift_retain();
          sub_237EE1F14();
          swift_release();
          sub_237E2A078((uint64_t)v24);
          swift_release();
          sub_237E2A078((uint64_t)v25);
          swift_unknownObjectRelease();
          sub_237E2846C(a1);
          return sub_237E2A078((uint64_t)v26);
        }
        else
        {
          ObjectType = swift_getObjectType();
          sub_237E28430(a1, (uint64_t)v26);
          v22 = *(_QWORD *)(v3 + 8);
          v23 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v22 + 16);
          swift_unknownObjectRetain();
          v23(v26, ObjectType, v22);
          swift_unknownObjectRelease();
          return sub_237E2846C(a1);
        }
      }
    }
  }
}

void (*sub_237E256F8(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);

  v3 = malloc(0xF0uLL);
  *a1 = v3;
  v3[29] = v1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v1 + 32);
  ObjectType = swift_getObjectType();
  v6 = *(_QWORD *)(v4 + 8);
  v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  swift_unknownObjectRetain();
  v7(ObjectType, v6);
  swift_unknownObjectRelease();
  return sub_237E25794;
}

void sub_237E25794(uint64_t *a1, char a2)
{
  void *v2;

  v2 = (void *)*a1;
  if ((a2 & 1) != 0)
  {
    sub_237E28430(*a1, (uint64_t)v2 + 104);
    sub_237E2516C((uint64_t)v2 + 104);
    sub_237E2846C((uint64_t)v2);
  }
  else
  {
    sub_237E2516C(*a1);
  }
  free(v2);
}

uint64_t sub_237E257F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 32);
  ObjectType = swift_getObjectType();
  v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 32);
  swift_unknownObjectRetain();
  v4 = v3(ObjectType, v1);
  swift_unknownObjectRelease();
  return v4;
}

void sub_237E25874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t (*v4)(uint64_t, uint64_t);
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  void *v10;
  uint64_t v11;
  uint64_t v12;
  os_unfair_lock_s *v13;

  v1 = v0;
  swift_beginAccess();
  v2 = *(_QWORD *)(v0 + 32);
  ObjectType = swift_getObjectType();
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 32);
  swift_unknownObjectRetain();
  v5 = (void *)v4(ObjectType, v2);
  swift_unknownObjectRelease();
  v6 = objc_msgSend(v5, sel_view);

  if (v6)
  {
    objc_msgSend(v6, sel_removeFromSuperview);

    v7 = *(_QWORD *)(v1 + 32);
    v8 = swift_getObjectType();
    v9 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 32);
    swift_unknownObjectRetain();
    v10 = (void *)v9(v8, v7);
    swift_unknownObjectRelease();
    objc_msgSend(v10, sel_removeFromParentViewController);

    if (qword_256897B48 != -1)
      swift_once();
    v11 = qword_25689B990;
    sub_237EA49FC();
    v12 = *(_QWORD *)(v11 + OBJC_IVAR____TtC11ClockPoster5Clock_textClockStreamObservers);
    v13 = (os_unfair_lock_s *)(*(_QWORD *)(v12 + 16) + 16);
    swift_beginAccess();
    os_unfair_lock_lock(v13);
    swift_endAccess();
    swift_beginAccess();
    *(_QWORD *)(v12 + 24) = MEMORY[0x24BEE4B00];
    swift_bridgeObjectRelease();
    swift_beginAccess();
    os_unfair_lock_unlock(v13);
    swift_endAccess();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_237E25A3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t ObjectType;
  uint64_t v7;
  void (*v8)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_QWORD *__return_ptr, uint64_t, uint64_t);
  _QWORD v28[15];
  _QWORD v29[13];

  v1 = v0;
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568984C0);
  if (swift_dynamicCastClass())
  {
    v2 = qword_256897AD8;
    swift_unknownObjectRetain();
    if (v2 != -1)
      swift_once();
    v3 = qword_25689DF00;
    swift_retain();
    sub_237E76704((uint64_t)v28);
    swift_release();
    v4 = *(_QWORD *)(v0 + 32);
    v5 = *(_BYTE *)(v0 + 16);
    ObjectType = swift_getObjectType();
    v7 = *(_QWORD *)(v4 + 8);
    v8 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v7 + 8);
    swift_unknownObjectRetain();
    v8(v29, ObjectType, v7);
    swift_unknownObjectRelease();
    sub_237E2AE88((uint64_t)v28, v5, (uint64_t)v29, v3);
    swift_unknownObjectRelease();
    sub_237E2846C((uint64_t)v29);
    sub_237E2A208((uint64_t)v28);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568984C8);
  v9 = swift_dynamicCastClass();
  if (v9)
  {
    v10 = v9;
    v11 = qword_256897AD8;
    swift_unknownObjectRetain();
    if (v11 != -1)
      swift_once();
    v12 = qword_25689DF00;
    v13 = *(_QWORD *)(v10 + 16);
    swift_getKeyPath();
    v28[0] = v13;
    sub_237E2CF28(&qword_2568984F0, 255, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
    swift_retain();
    sub_237EE1F20();
    swift_release();
    swift_beginAccess();
    sub_237E2A13C(v13 + 32, (uint64_t)v28);
    swift_release();
    v14 = *(_QWORD *)(v1 + 32);
    LOBYTE(v13) = *(_BYTE *)(v1 + 16);
    v15 = swift_getObjectType();
    v16 = *(_QWORD *)(v14 + 8);
    v17 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v16 + 8);
    swift_unknownObjectRetain();
    v17(v29, v15, v16);
    swift_unknownObjectRelease();
    sub_237E2B4E8((uint64_t)v28, v13, (uint64_t)v29, v12);
    swift_unknownObjectRelease();
    sub_237E2846C((uint64_t)v29);
    sub_237E2A198((uint64_t)v28);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568984D0);
  result = swift_dynamicCastClass();
  if (result)
  {
    v19 = result;
    v20 = qword_256897AD8;
    swift_unknownObjectRetain();
    if (v20 != -1)
      swift_once();
    v21 = qword_25689DF00;
    v22 = *(_QWORD *)(v19 + 16);
    swift_getKeyPath();
    v28[0] = v22;
    sub_237E2CF28(&qword_2568984E8, 255, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
    swift_retain();
    sub_237EE1F20();
    swift_release();
    swift_beginAccess();
    sub_237E2A0AC(v22 + 16, (uint64_t)v28);
    swift_release();
    v23 = *(_QWORD *)(v1 + 32);
    v24 = *(_BYTE *)(v1 + 16);
    v25 = swift_getObjectType();
    v26 = *(_QWORD *)(v23 + 8);
    v27 = *(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v26 + 8);
    swift_unknownObjectRetain();
    v27(v29, v25, v26);
    swift_unknownObjectRelease();
    sub_237E2BB48((uint64_t)v28, v24, (uint64_t)v29, v21, (uint64_t)&type metadata for WorldViewModelContext, (uint64_t (*)(uint64_t))sub_237E2D13C, (uint64_t)&unk_2509BFBA8, (void (*)(uint64_t, uint64_t))sub_237E2A0AC);
    swift_unknownObjectRelease();
    sub_237E2846C((uint64_t)v29);
    return sub_237E2A108((uint64_t)v28);
  }
  return result;
}

uint64_t ClockFaceController.__allocating_init(with:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  ClockFaceController.init(with:)(a1);
  return v2;
}

void ClockFaceController.init(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t (*v7)(uint64_t, uint64_t);
  void *v8;
  id v9;

  v2 = *(unsigned __int8 *)(a1 + 97);
  *(_BYTE *)(v1 + 16) = v2;
  sub_237E2C72C(a1);
  v4 = v3;
  *(_QWORD *)(v1 + 24) = v5;
  *(_QWORD *)(v1 + 32) = v3;
  ObjectType = swift_getObjectType();
  v7 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 32);
  swift_unknownObjectRetain();
  v8 = (void *)v7(ObjectType, v4);
  swift_unknownObjectRelease();
  v9 = objc_msgSend(v8, sel_view);

  if (v9)
    __asm { BR              X9 }
  __break(1u);
  JUMPOUT(0x237E2600CLL);
}

void sub_237E26020(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t (*v15)(uint64_t, uint64_t);
  id v16;
  id v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t);
  void *v30;
  uint8_t *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35[3];

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6548);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_237EE1FB0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_beginAccess();
    v13 = *(_QWORD *)(v3 + 32);
    ObjectType = swift_getObjectType();
    v15 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 32);
    v16 = a1;
    swift_unknownObjectRetain();
    v17 = (id)v15(ObjectType, v13);
    swift_unknownObjectRelease();
    objc_msgSend(v16, sel_bs_addChildViewController_withSuperview_, v17, a2);

LABEL_13:
    return;
  }
  if (qword_2542C6458 != -1)
    swift_once();
  v18 = qword_2542C64F8 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_rendering_private;
  swift_beginAccess();
  sub_237E2CAA0(v18, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_237E6072C((uint64_t)v12);
    sub_237E2209C((uint64_t)v8, &qword_2542C6548);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  }
  swift_retain_n();
  v19 = sub_237EE1F98();
  v20 = sub_237EE2D90();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    v32 = swift_slowAlloc();
    v35[0] = v32;
    v33 = a2;
    *(_DWORD *)v21 = 136446210;
    v31 = v21 + 4;
    v22 = swift_retain();
    v23 = sub_237E269EC(v22, (uint64_t (*)(uint64_t))type metadata accessor for ClockFaceController);
    v25 = v24;
    swift_release();
    v34 = sub_237E2A660(v23, v25, v35);
    a2 = v33;
    sub_237EE2EE0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_237E17000, v19, v20, "[%{public}s]: No parent view controller provided", v21, 0xCu);
    v26 = v32;
    swift_arrayDestroy();
    MEMORY[0x23B8272A8](v26, -1, -1);
    MEMORY[0x23B8272A8](v21, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  swift_beginAccess();
  v27 = *(_QWORD *)(v3 + 32);
  v28 = swift_getObjectType();
  v29 = *(uint64_t (**)(uint64_t, uint64_t))(v27 + 32);
  swift_unknownObjectRetain();
  v30 = (void *)v29(v28, v27);
  swift_unknownObjectRelease();
  v17 = objc_msgSend(v30, sel_view);

  if (v17)
  {
    objc_msgSend(a2, sel_addSubview_, v17);
    goto LABEL_13;
  }
  __break(1u);
}

uint64_t sub_237E263EC@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t result;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 32);
  ObjectType = swift_getObjectType();
  result = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v4 + 24) + 8))(ObjectType);
  *a2 = result & 1;
  return result;
}

uint64_t sub_237E26458(unsigned __int8 *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  v5 = *(_QWORD *)(v3 + 32);
  ObjectType = swift_getObjectType();
  v7 = *(_QWORD *)(v5 + 24);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  swift_unknownObjectRetain();
  v8(v2, ObjectType, v7);
  *(_QWORD *)(v3 + 24) = v4;
  *(_QWORD *)(v3 + 32) = v5;
  swift_endAccess();
  return swift_unknownObjectRelease();
}

uint64_t sub_237E26500()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 32);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v1 + 24) + 8))(ObjectType) & 1;
}

uint64_t sub_237E26558(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  v2 = v1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v2 + 32);
  ObjectType = swift_getObjectType();
  v7 = *(_QWORD *)(v5 + 24);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  swift_unknownObjectRetain();
  v8(a1, ObjectType, v7);
  *(_QWORD *)(v2 + 24) = v4;
  *(_QWORD *)(v2 + 32) = v5;
  swift_endAccess();
  return swift_unknownObjectRelease();
}

void (*sub_237E26604(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[7] = v1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  ObjectType = swift_getObjectType();
  *v3 = v4;
  *((_BYTE *)v3 + 64) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v5 + 24) + 8))(ObjectType) & 1;
  return sub_237E26684;
}

void sub_237E26684(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD **)a1;
  v2 = *(unsigned __int8 *)(*(_QWORD *)a1 + 64);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 56);
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  v5 = *(_QWORD *)(v3 + 32);
  ObjectType = swift_getObjectType();
  v1[6] = v4;
  v7 = *(_QWORD *)(v5 + 24);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  swift_unknownObjectRetain();
  v8(v2, ObjectType, v7);
  *(_QWORD *)(v3 + 24) = v1[6];
  *(_QWORD *)(v3 + 32) = v5;
  swift_endAccess();
  swift_unknownObjectRelease();
  free(v1);
}

uint64_t sub_237E26734()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 32);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v1 + 24) + 32))(ObjectType);
}

uint64_t ClockFaceController.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return v0;
}

uint64_t ClockFaceController.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_237E267D8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;

  v1 = *v0;
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 32);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v2 + 24) + 8))(ObjectType) & 1;
}

uint64_t sub_237E26834(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  v3 = *v1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  v5 = *(_QWORD *)(v3 + 32);
  ObjectType = swift_getObjectType();
  v7 = *(_QWORD *)(v5 + 24);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  swift_unknownObjectRetain();
  v8(a1, ObjectType, v7);
  *(_QWORD *)(v3 + 24) = v4;
  *(_QWORD *)(v3 + 32) = v5;
  swift_endAccess();
  return swift_unknownObjectRelease();
}

void (*sub_237E268DC(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_237E26604(v2);
  return sub_237E23288;
}

uint64_t sub_237E26924()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;

  v1 = *v0;
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 32);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v2 + 24) + 32))(ObjectType);
}

uint64_t sub_237E2698C(uint64_t a1)
{
  MEMORY[0x23B8271D0](&protocol conformance descriptor for ClockFaceController, a1);
  return CustomStringConvertibleViaMirror.description.getter(a1);
}

uint64_t sub_237E269C0()
{
  return sub_237E26DC4((uint64_t)&type metadata for ClockFaceLook, (uint64_t)&unk_2509BFC20, (void (*)(uint64_t, uint64_t))sub_237E28430);
}

uint64_t sub_237E269DC()
{
  return sub_237E269EC(0, (uint64_t (*)(uint64_t))type metadata accessor for WorldDataProvider);
}

uint64_t sub_237E269EC(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v5 = sub_237EE32B8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a2(a1);
  v12 = v2;
  swift_retain();
  sub_237EE32A0();
  sub_237EE32AC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v9 = sub_237EE3054();
  swift_release();
  v12 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898630);
  sub_237E22690((unint64_t *)&qword_256898638, &qword_256898630, MEMORY[0x24BEE12B0]);
  sub_237EE2A3C();
  swift_bridgeObjectRelease();
  v12 = 60;
  v13 = 0xE100000000000000;
  sub_237EE333C();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  return v12;
}

uint64_t sub_237E26BD4(float a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  ValueMetadata *v11;

  v2 = sub_237EE32B8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = &type metadata for FixedColorChannel;
  *(float *)&v9 = a1;
  sub_237EE32A0();
  sub_237EE32AC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v6 = sub_237EE3054();
  swift_release();
  v9 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898630);
  sub_237E22690((unint64_t *)&qword_256898638, &qword_256898630, MEMORY[0x24BEE12B0]);
  sub_237EE2A3C();
  swift_bridgeObjectRelease();
  v9 = 60;
  v10 = 0xE100000000000000;
  sub_237EE333C();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  return v9;
}

uint64_t sub_237E26DA8()
{
  return sub_237E26DC4((uint64_t)&type metadata for WorldViewModelContext, (uint64_t)&unk_2509BFBA8, (void (*)(uint64_t, uint64_t))sub_237E2A0AC);
}

uint64_t sub_237E26DC4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v6 = sub_237EE32B8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1;
  v13 = swift_allocObject();
  a3(v3, v13 + 16);
  sub_237EE32A0();
  sub_237EE32AC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v10 = sub_237EE3054();
  swift_release();
  v13 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898630);
  sub_237E22690((unint64_t *)&qword_256898638, &qword_256898630, MEMORY[0x24BEE12B0]);
  sub_237EE2A3C();
  swift_bridgeObjectRelease();
  v13 = 60;
  v14 = 0xE100000000000000;
  sub_237EE333C();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  return v13;
}

uint64_t sub_237E26FB8()
{
  return sub_237E27574(type metadata accessor for TextClockDescriptor);
}

uint64_t sub_237E26FC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  ValueMetadata *v10;

  v1 = sub_237EE32B8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = &type metadata for DigitalClockContext;
  v8 = swift_allocObject();
  sub_237E2A13C(v0, v8 + 16);
  sub_237EE32A0();
  sub_237EE32AC();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v5 = sub_237EE3054();
  swift_release();
  v8 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898630);
  sub_237E22690((unint64_t *)&qword_256898638, &qword_256898630, MEMORY[0x24BEE12B0]);
  sub_237EE2A3C();
  swift_bridgeObjectRelease();
  v8 = 60;
  v9 = 0xE100000000000000;
  sub_237EE333C();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  return v8;
}

uint64_t sub_237E271AC(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  ValueMetadata *v11;

  v2 = sub_237EE32B8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = &type metadata for ClockTimeInterval;
  LOBYTE(v9) = a1;
  sub_237EE32A0();
  sub_237EE32AC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v6 = sub_237EE3054();
  swift_release();
  v9 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898630);
  sub_237E22690((unint64_t *)&qword_256898638, &qword_256898630, MEMORY[0x24BEE12B0]);
  sub_237EE2A3C();
  swift_bridgeObjectRelease();
  v9 = 60;
  v10 = 0xE100000000000000;
  sub_237EE333C();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  return v9;
}

uint64_t sub_237E27380()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  ValueMetadata *v10;

  v1 = sub_237EE32B8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = &type metadata for ClockPosterConfiguration;
  v8 = swift_allocObject();
  sub_237E2CDB0(v0, v8 + 16);
  sub_237EE32A0();
  sub_237EE32AC();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v5 = sub_237EE3054();
  swift_release();
  v8 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898630);
  sub_237E22690((unint64_t *)&qword_256898638, &qword_256898630, MEMORY[0x24BEE12B0]);
  sub_237EE2A3C();
  swift_bridgeObjectRelease();
  v8 = 60;
  v9 = 0xE100000000000000;
  sub_237EE333C();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  return v8;
}

uint64_t sub_237E27568()
{
  return sub_237E27574(type metadata accessor for SolarCycle);
}

uint64_t sub_237E27574(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v8;
  uint64_t v11[4];

  v3 = sub_237EE32B8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[3] = a1(0);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v11);
  sub_237E21EBC(v1, (uint64_t)boxed_opaque_existential_0, a1);
  sub_237EE32A0();
  sub_237EE32AC();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v8 = sub_237EE3054();
  swift_release();
  v11[0] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898630);
  sub_237E22690((unint64_t *)&qword_256898638, &qword_256898630, MEMORY[0x24BEE12B0]);
  sub_237EE2A3C();
  swift_bridgeObjectRelease();
  v11[0] = 60;
  v11[1] = 0xE100000000000000;
  sub_237EE333C();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  return v11[0];
}

uint64_t sub_237E2775C()
{
  return sub_237E27574(type metadata accessor for SolarEvent);
}

uint64_t sub_237E27768()
{
  return sub_237E277A0((uint64_t)&type metadata for SolarContext, (uint64_t)&unk_2509BFB58, (void (*)(uint64_t, uint64_t))sub_237E2A1CC);
}

uint64_t sub_237E27784()
{
  return sub_237E277A0((uint64_t)&type metadata for ColorProvider, (uint64_t)&unk_2509BFC48, (void (*)(uint64_t, uint64_t))sub_237E2D270);
}

uint64_t sub_237E277A0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v6 = sub_237EE32B8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1;
  v13 = swift_allocObject();
  a3(v3, v13 + 16);
  sub_237EE32A0();
  sub_237EE32AC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v10 = sub_237EE3054();
  swift_release();
  v13 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898630);
  sub_237E22690((unint64_t *)&qword_256898638, &qword_256898630, MEMORY[0x24BEE12B0]);
  sub_237EE2A3C();
  swift_bridgeObjectRelease();
  v13 = 60;
  v14 = 0xE100000000000000;
  sub_237EE333C();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  return v13;
}

uint64_t sub_237E27994(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  ValueMetadata *v16;

  v6 = sub_237EE32B8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = &type metadata for LocationSource.Source;
  v13 = a1;
  v14 = a2;
  v15 = a3 & 1;
  sub_237E2CC6C();
  sub_237EE32A0();
  sub_237EE32AC();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v10 = sub_237EE3054();
  swift_release();
  v13 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898630);
  sub_237E22690((unint64_t *)&qword_256898638, &qword_256898630, MEMORY[0x24BEE12B0]);
  sub_237EE2A3C();
  swift_bridgeObjectRelease();
  v13 = 60;
  v14 = 0xE100000000000000;
  sub_237EE333C();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  return v13;
}

uint64_t sub_237E27B88()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v1 = v0;
  v2 = *v0;
  v3 = sub_237EE32B8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v2;
  v10 = (uint64_t)v1;
  swift_retain();
  sub_237EE32A0();
  sub_237EE32AC();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v7 = sub_237EE3054();
  swift_release();
  v10 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898630);
  sub_237E22690((unint64_t *)&qword_256898638, &qword_256898630, MEMORY[0x24BEE12B0]);
  sub_237EE2A3C();
  swift_bridgeObjectRelease();
  v10 = 60;
  v11 = 0xE100000000000000;
  sub_237EE333C();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  return v10;
}

uint64_t sub_237E27D5C()
{
  return sub_237E26DC4((uint64_t)&type metadata for PlayViewModelContext, (uint64_t)&unk_2509BFBD0, (void (*)(uint64_t, uint64_t))sub_237E29CD0);
}

uint64_t sub_237E27D78(double a1, double a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  ValueMetadata *v18;

  v8 = sub_237EE32B8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = &type metadata for WorldMap.DotFillSpec;
  v12 = (double *)swift_allocObject();
  v16 = (uint64_t)v12;
  v12[2] = a1;
  v12[3] = a2;
  v12[4] = a3;
  v12[5] = a4;
  sub_237EE32A0();
  sub_237EE32AC();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v13 = sub_237EE3054();
  swift_release();
  v16 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898630);
  sub_237E22690((unint64_t *)&qword_256898638, &qword_256898630, MEMORY[0x24BEE12B0]);
  sub_237EE2A3C();
  swift_bridgeObjectRelease();
  v16 = 60;
  v17 = 0xE100000000000000;
  sub_237EE333C();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  return v16;
}

uint64_t sub_237E27F7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  ValueMetadata *v15;

  v1 = sub_237EE32B8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = &type metadata for WorldMap;
  v5 = swift_allocObject();
  v13 = v5;
  v6 = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v5 + 112) = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v5 + 128) = v6;
  *(_OWORD *)(v5 + 144) = *(_OWORD *)(v0 + 128);
  *(_QWORD *)(v5 + 160) = *(_QWORD *)(v0 + 144);
  v7 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v5 + 48) = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v5 + 64) = v7;
  v8 = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v5 + 80) = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v5 + 96) = v8;
  v9 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v5 + 16) = *(_OWORD *)v0;
  *(_OWORD *)(v5 + 32) = v9;
  sub_237E2CCDC(v0);
  sub_237EE32A0();
  sub_237EE32AC();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v10 = sub_237EE3054();
  swift_release();
  v13 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898630);
  sub_237E22690((unint64_t *)&qword_256898638, &qword_256898630, MEMORY[0x24BEE12B0]);
  sub_237EE2A3C();
  swift_bridgeObjectRelease();
  v13 = 60;
  v14 = 0xE100000000000000;
  sub_237EE333C();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  return v13;
}

uint64_t ClockFaceController.shouldRecieveTapEvents.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(uint64_t, uint64_t);

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 24);
  swift_getObjectType();
  v2 = swift_conformsToProtocol2();
  if (v2)
    v3 = v2;
  else
    v3 = 0;
  if (v2)
    v4 = v1;
  else
    v4 = 0;
  if (v4)
  {
    ObjectType = swift_getObjectType();
    v6 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
    swift_unknownObjectRetain();
    LOBYTE(v4) = v6(ObjectType, v3);
    swift_unknownObjectRelease();
  }
  return v4 & 1;
}

Swift::Void __swiftcall ClockFaceController.didReceive(tapAt:)(CGPoint tapAt)
{
  uint64_t v1;
  double y;
  double x;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(uint64_t, uint64_t, double, double);

  y = tapAt.y;
  x = tapAt.x;
  swift_beginAccess();
  v4 = *(_QWORD *)(v1 + 24);
  swift_getObjectType();
  v5 = swift_conformsToProtocol2();
  if (v5)
    v6 = v5;
  else
    v6 = 0;
  if (v5)
    v7 = v4;
  else
    v7 = 0;
  if (v7)
  {
    ObjectType = swift_getObjectType();
    v9 = *(void (**)(uint64_t, uint64_t, double, double))(v6 + 16);
    swift_unknownObjectRetain();
    v9(ObjectType, v6, x, y);
    swift_unknownObjectRelease();
  }
}

uint64_t sub_237E282E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(uint64_t, uint64_t);

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 24);
  swift_getObjectType();
  v2 = swift_conformsToProtocol2();
  if (v2)
    v3 = v2;
  else
    v3 = 0;
  if (v2)
    v4 = v1;
  else
    v4 = 0;
  if (v4)
  {
    ObjectType = swift_getObjectType();
    v6 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8);
    swift_unknownObjectRetain();
    LOBYTE(v4) = v6(ObjectType, v3);
    swift_unknownObjectRelease();
  }
  return v4 & 1;
}

uint64_t sub_237E28380(double a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  void (*v10)(uint64_t, uint64_t, double, double);

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 24);
  swift_getObjectType();
  result = swift_conformsToProtocol2();
  if (result)
    v7 = result;
  else
    v7 = 0;
  if (result)
    v8 = v5;
  else
    v8 = 0;
  if (v8)
  {
    ObjectType = swift_getObjectType();
    v10 = *(void (**)(uint64_t, uint64_t, double, double))(v7 + 16);
    swift_unknownObjectRetain();
    v10(ObjectType, v7, a1, a2);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_237E28430(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ClockFaceLook(a2, a1);
  return a2;
}

uint64_t sub_237E2846C(uint64_t a1)
{
  destroy for ClockFaceLook(a1);
  return a1;
}

uint64_t sub_237E284A0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_237E2CF28(&qword_2568984E8, 255, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  swift_beginAccess();
  return sub_237E2A0AC(v3 + 16, a2);
}

uint64_t sub_237E2854C(uint64_t a1)
{
  _BYTE v2[104];

  sub_237E2A0AC(a1, (uint64_t)v2);
  swift_getKeyPath();
  sub_237E2CF28(&qword_2568984E8, 255, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F14();
  swift_release();
  return sub_237E2A108((uint64_t)v2);
}

uint64_t sub_237E28608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  int v20;
  int v21;
  int v22;
  int v23;
  uint64_t result;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  os_log_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  os_log_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46[4];
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  _QWORD v55[5];
  __int128 v56[6];

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6548);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = sub_237EE1FB0();
  v9 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v2 + 16);
  v13 = (os_unfair_lock_s *)(*(_QWORD *)(v12 + 16) + 16);
  swift_beginAccess();
  swift_retain();
  os_unfair_lock_lock(v13);
  swift_beginAccess();
  v14 = *(_QWORD *)(v12 + 24);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v13);
  swift_endAccess();
  swift_release();
  if (!*(_QWORD *)(v14 + 16) || (sub_237EAD644(3), (v16 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)&v49 = 0;
    v47 = 0u;
    v48 = 0u;
LABEL_7:
    sub_237E2209C((uint64_t)&v47, &qword_2568986D0);
LABEL_8:
    sub_237E28430(a1, (uint64_t)&v47);
    sub_237E28430((uint64_t)&v47, (uint64_t)v56);
    sub_237E74BF0(0.0, 10000.0);
    v21 = v20;
    sub_237E74BF0(10001.0, 20000.0);
    v23 = v22;
    sub_237E2846C((uint64_t)&v47);
    sub_237E2D180(v56, a2);
    *(_QWORD *)(a2 + 112) = 0;
    *(_DWORD *)(a2 + 100) = v21;
    *(_DWORD *)(a2 + 104) = v23;
    return sub_237E2AE88(a2, 3, a1, v3);
  }
  v17 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v17 + 16) && (v18 = sub_237EAD5EC(a1), (v19 & 1) != 0))
  {
    sub_237E2CFE8(*(_QWORD *)(v17 + 56) + 40 * v18, (uint64_t)&v47);
  }
  else
  {
    *(_QWORD *)&v49 = 0;
    v47 = 0u;
    v48 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v48 + 1))
    goto LABEL_7;
  sub_237E2D1BC(&v47, (uint64_t)v56);
  sub_237E2CFE8((uint64_t)v56, (uint64_t)v55);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568986D8);
  if (!swift_dynamicCast())
  {
    v51 = 0u;
    v52 = 0u;
    v49 = 0u;
    v50 = 0u;
    v47 = 0u;
    v48 = 0u;
    v54 = 0;
    v53 = 0xFFuLL;
    sub_237E2209C((uint64_t)&v47, &qword_2568986E0);
    if (qword_2542C6458 != -1)
      swift_once();
    v28 = qword_2542C64F8 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_data_private;
    swift_beginAccess();
    sub_237E2CAA0(v28, (uint64_t)v8);
    v29 = v44;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v44) == 1)
    {
      sub_237E6072C((uint64_t)v11);
      sub_237E2209C((uint64_t)v8, &qword_2542C6548);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v8, v29);
    }
    sub_237E28430(a1, (uint64_t)&v47);
    sub_237E2CFE8((uint64_t)v56, (uint64_t)v55);
    v30 = sub_237EE1F98();
    v31 = sub_237EE2D90();
    v32 = v31;
    if (os_log_type_enabled(v30, v31))
    {
      v33 = swift_slowAlloc();
      v43 = swift_slowAlloc();
      v46[0] = v43;
      *(_DWORD *)v33 = 136446722;
      v42 = v30;
      v45 = sub_237E2A660(0x72616C6F73, 0xE500000000000000, v46);
      sub_237EE2EE0();
      *(_WORD *)(v33 + 12) = 2082;
      v41 = v32;
      v34 = sub_237E26DC4((uint64_t)&type metadata for ClockFaceLook, (uint64_t)&unk_2509BFC20, (void (*)(uint64_t, uint64_t))sub_237E28430);
      v45 = sub_237E2A660(v34, v35, v46);
      sub_237EE2EE0();
      swift_bridgeObjectRelease();
      sub_237E2846C((uint64_t)&v47);
      *(_WORD *)(v33 + 22) = 2080;
      v40 = v33 + 24;
      __swift_project_boxed_opaque_existential_1(v55, v55[3]);
      v36 = sub_237EE3180();
      v45 = sub_237E2A660(v36, v37, v46);
      sub_237EE2EE0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v55);
      v38 = v42;
      _os_log_impl(&dword_237E17000, v42, (os_log_type_t)v41, "Known context type for look. Kind=%{public}s, Look=%{public}s unknown context: %s", (uint8_t *)v33, 0x20u);
      v39 = v43;
      swift_arrayDestroy();
      MEMORY[0x23B8272A8](v39, -1, -1);
      MEMORY[0x23B8272A8](v33, -1, -1);

      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v44);
    }
    else
    {

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v55);
      sub_237E2846C((uint64_t)&v47);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v29);
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v56);
    goto LABEL_8;
  }
  result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v56);
  v25 = v52;
  *(_OWORD *)(a2 + 64) = v51;
  *(_OWORD *)(a2 + 80) = v25;
  *(_OWORD *)(a2 + 96) = v53;
  *(_QWORD *)(a2 + 112) = v54;
  v26 = v48;
  *(_OWORD *)a2 = v47;
  *(_OWORD *)(a2 + 16) = v26;
  v27 = v50;
  *(_OWORD *)(a2 + 32) = v49;
  *(_OWORD *)(a2 + 48) = v27;
  return result;
}

__n128 sub_237E28BC4@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  __n128 result;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  os_log_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  os_log_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[4];
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __n128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  _QWORD v49[5];
  _BYTE v50[56];

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6548);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_237EE1FB0();
  v9 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v2 + 16);
  v13 = (os_unfair_lock_s *)(*(_QWORD *)(v12 + 16) + 16);
  swift_beginAccess();
  swift_retain();
  os_unfair_lock_lock(v13);
  swift_beginAccess();
  v14 = *(_QWORD *)(v12 + 24);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v13);
  swift_endAccess();
  swift_release();
  if (!*(_QWORD *)(v14 + 16) || (sub_237EAD644(0), (v16 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)&v44 = 0;
    v42 = 0u;
    v43 = 0u;
LABEL_7:
    sub_237E2209C((uint64_t)&v42, &qword_2568986D0);
LABEL_8:
    sub_237E28430(a1, a2);
    *(_QWORD *)(a2 + 104) = 0;
    sub_237E2B4E8(a2, 0, a1, v3);
    return result;
  }
  v17 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v17 + 16) && (v18 = sub_237EAD5EC(a1), (v19 & 1) != 0))
  {
    sub_237E2CFE8(*(_QWORD *)(v17 + 56) + 40 * v18, (uint64_t)&v42);
  }
  else
  {
    *(_QWORD *)&v44 = 0;
    v42 = 0u;
    v43 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v43 + 1))
    goto LABEL_7;
  sub_237E2D1BC(&v42, (uint64_t)v50);
  sub_237E2CFE8((uint64_t)v50, (uint64_t)v49);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568986D8);
  if (!swift_dynamicCast())
  {
    v46 = 0u;
    v47 = 0u;
    v44 = 0u;
    v45 = 0u;
    v42 = 0u;
    v43 = 0u;
    v48 = xmmword_237EE5670;
    sub_237E2209C((uint64_t)&v42, &qword_2568986E8);
    if (qword_2542C6458 != -1)
      swift_once();
    v23 = qword_2542C64F8 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_data_private;
    swift_beginAccess();
    sub_237E2CAA0(v23, (uint64_t)v8);
    v24 = v39;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v39) == 1)
    {
      sub_237E6072C((uint64_t)v11);
      sub_237E2209C((uint64_t)v8, &qword_2542C6548);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v8, v24);
    }
    sub_237E28430(a1, (uint64_t)&v42);
    sub_237E2CFE8((uint64_t)v50, (uint64_t)v49);
    v25 = sub_237EE1F98();
    v26 = sub_237EE2D90();
    v27 = v26;
    if (os_log_type_enabled(v25, v26))
    {
      v28 = swift_slowAlloc();
      v38 = swift_slowAlloc();
      v41[0] = v38;
      *(_DWORD *)v28 = 136446722;
      v37 = v25;
      v40 = sub_237E2A660(0x6C617469676964, 0xE700000000000000, v41);
      sub_237EE2EE0();
      *(_WORD *)(v28 + 12) = 2082;
      v36 = v27;
      v29 = sub_237E26DC4((uint64_t)&type metadata for ClockFaceLook, (uint64_t)&unk_2509BFC20, (void (*)(uint64_t, uint64_t))sub_237E28430);
      v40 = sub_237E2A660(v29, v30, v41);
      sub_237EE2EE0();
      swift_bridgeObjectRelease();
      sub_237E2846C((uint64_t)&v42);
      *(_WORD *)(v28 + 22) = 2080;
      v35 = v28 + 24;
      __swift_project_boxed_opaque_existential_1(v49, v49[3]);
      v31 = sub_237EE3180();
      v40 = sub_237E2A660(v31, v32, v41);
      sub_237EE2EE0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v49);
      v33 = v37;
      _os_log_impl(&dword_237E17000, v37, (os_log_type_t)v36, "Known context type for look. Kind=%{public}s, Look=%{public}s unknown context: %s", (uint8_t *)v28, 0x20u);
      v34 = v38;
      swift_arrayDestroy();
      MEMORY[0x23B8272A8](v34, -1, -1);
      MEMORY[0x23B8272A8](v28, -1, -1);

      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v39);
    }
    else
    {

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v49);
      sub_237E2846C((uint64_t)&v42);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v24);
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v50);
    goto LABEL_8;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v50);
  v21 = v47;
  *(_OWORD *)(a2 + 64) = v46;
  *(_OWORD *)(a2 + 80) = v21;
  *(_OWORD *)(a2 + 96) = v48;
  v22 = v43;
  *(_OWORD *)a2 = v42;
  *(_OWORD *)(a2 + 16) = v22;
  result = v45;
  *(_OWORD *)(a2 + 32) = v44;
  *(__n128 *)(a2 + 48) = result;
  return result;
}

__n128 sub_237E2911C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  __n128 result;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  os_log_t v33;
  uint64_t v34;
  _QWORD v35[2];
  uint64_t v36;
  os_log_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __n128 v44;
  __int128 v45;
  __int128 v46;
  char v47;
  _QWORD v48[4];
  _BYTE v49[8];

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6548);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_237EE1FB0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v2 + 16);
  v14 = (os_unfair_lock_s *)(*(_QWORD *)(v13 + 16) + 16);
  swift_beginAccess();
  swift_retain();
  os_unfair_lock_lock(v14);
  swift_beginAccess();
  v15 = *(_QWORD *)(v13 + 24);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v14);
  swift_endAccess();
  swift_release();
  if (!*(_QWORD *)(v15 + 16) || (sub_237EAD644(2), (v17 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)&v43 = 0;
    v42 = 0u;
    v41 = 0u;
LABEL_7:
    sub_237E2209C((uint64_t)&v41, &qword_2568986D0);
LABEL_8:
    sub_237E28430(a1, a2);
    sub_237E2BB48(a2, 2, a1, v3, (uint64_t)&type metadata for WorldViewModelContext, (uint64_t (*)(uint64_t))sub_237E2D13C, (uint64_t)&unk_2509BFBA8, (void (*)(uint64_t, uint64_t))sub_237E2A0AC);
    return result;
  }
  v18 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v18 + 16) && (v19 = sub_237EAD5EC(a1), (v20 & 1) != 0))
  {
    sub_237E2CFE8(*(_QWORD *)(v18 + 56) + 40 * v19, (uint64_t)&v41);
  }
  else
  {
    *(_QWORD *)&v43 = 0;
    v42 = 0u;
    v41 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v42 + 1))
    goto LABEL_7;
  sub_237E2D1BC(&v41, (uint64_t)v49);
  sub_237E2CFE8((uint64_t)v49, (uint64_t)v48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568986D8);
  if (!swift_dynamicCast())
  {
    v45 = 0u;
    v46 = 0u;
    v44 = 0u;
    v43 = 0u;
    v42 = 0u;
    v41 = 0u;
    v47 = -1;
    sub_237E2209C((uint64_t)&v41, &qword_2568986F0);
    if (qword_2542C6458 != -1)
      swift_once();
    v24 = qword_2542C64F8 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_data_private;
    swift_beginAccess();
    sub_237E2CAA0(v24, (uint64_t)v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_237E6072C((uint64_t)v12);
      sub_237E2209C((uint64_t)v8, &qword_2542C6548);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    }
    sub_237E28430(a1, (uint64_t)&v41);
    sub_237E2CFE8((uint64_t)v49, (uint64_t)v48);
    v25 = sub_237EE1F98();
    v26 = sub_237EE2D90();
    v27 = v26;
    if (os_log_type_enabled(v25, v26))
    {
      v28 = swift_slowAlloc();
      v38 = swift_slowAlloc();
      v40 = v38;
      *(_DWORD *)v28 = 136446722;
      v37 = v25;
      v39 = sub_237E2A660(0x646C726F77, 0xE500000000000000, &v40);
      v35[1] = &v40;
      sub_237EE2EE0();
      *(_WORD *)(v28 + 12) = 2082;
      v36 = v28 + 14;
      v29 = sub_237E26DC4((uint64_t)&type metadata for ClockFaceLook, (uint64_t)&unk_2509BFC20, (void (*)(uint64_t, uint64_t))sub_237E28430);
      v39 = sub_237E2A660(v29, v30, &v40);
      sub_237EE2EE0();
      swift_bridgeObjectRelease();
      sub_237E2846C((uint64_t)&v41);
      *(_WORD *)(v28 + 22) = 2080;
      LODWORD(v36) = v27;
      __swift_project_boxed_opaque_existential_1(v48, v48[3]);
      v31 = sub_237EE3180();
      v39 = sub_237E2A660(v31, v32, &v40);
      sub_237EE2EE0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v48);
      v33 = v37;
      _os_log_impl(&dword_237E17000, v37, (os_log_type_t)v36, "Known context type for look. Kind=%{public}s, Look=%{public}s unknown context: %s", (uint8_t *)v28, 0x20u);
      v34 = v38;
      swift_arrayDestroy();
      MEMORY[0x23B8272A8](v34, -1, -1);
      MEMORY[0x23B8272A8](v28, -1, -1);

    }
    else
    {

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v48);
      sub_237E2846C((uint64_t)&v41);
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v49);
    goto LABEL_8;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v49);
  v22 = v46;
  *(_OWORD *)(a2 + 64) = v45;
  *(_OWORD *)(a2 + 80) = v22;
  *(_BYTE *)(a2 + 96) = v47;
  v23 = v42;
  *(_OWORD *)a2 = v41;
  *(_OWORD *)(a2 + 16) = v23;
  result = v44;
  *(_OWORD *)(a2 + 32) = v43;
  *(__n128 *)(a2 + 48) = result;
  return result;
}

__n128 sub_237E296F8@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  __n128 result;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  os_log_t v33;
  uint64_t v34;
  _QWORD v35[2];
  uint64_t v36;
  os_log_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __n128 v44;
  __int128 v45;
  __int128 v46;
  char v47;
  _QWORD v48[4];
  _BYTE v49[8];

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6548);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_237EE1FB0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v2 + 16);
  v14 = (os_unfair_lock_s *)(*(_QWORD *)(v13 + 16) + 16);
  swift_beginAccess();
  swift_retain();
  os_unfair_lock_lock(v14);
  swift_beginAccess();
  v15 = *(_QWORD *)(v13 + 24);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v14);
  swift_endAccess();
  swift_release();
  if (!*(_QWORD *)(v15 + 16) || (sub_237EAD644(4), (v17 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)&v43 = 0;
    v42 = 0u;
    v41 = 0u;
LABEL_7:
    sub_237E2209C((uint64_t)&v41, &qword_2568986D0);
LABEL_8:
    sub_237E28430(a1, a2);
    sub_237E2BB48(a2, 4, a1, v3, (uint64_t)&type metadata for PlayViewModelContext, (uint64_t (*)(uint64_t))sub_237E2D1F8, (uint64_t)&unk_2509BFBD0, (void (*)(uint64_t, uint64_t))sub_237E29CD0);
    return result;
  }
  v18 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v18 + 16) && (v19 = sub_237EAD5EC(a1), (v20 & 1) != 0))
  {
    sub_237E2CFE8(*(_QWORD *)(v18 + 56) + 40 * v19, (uint64_t)&v41);
  }
  else
  {
    *(_QWORD *)&v43 = 0;
    v42 = 0u;
    v41 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v42 + 1))
    goto LABEL_7;
  sub_237E2D1BC(&v41, (uint64_t)v49);
  sub_237E2CFE8((uint64_t)v49, (uint64_t)v48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568986D8);
  if (!swift_dynamicCast())
  {
    v45 = 0u;
    v46 = 0u;
    v44 = 0u;
    v43 = 0u;
    v42 = 0u;
    v41 = 0u;
    v47 = -1;
    sub_237E2209C((uint64_t)&v41, &qword_2568986F8);
    if (qword_2542C6458 != -1)
      swift_once();
    v24 = qword_2542C64F8 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_data_private;
    swift_beginAccess();
    sub_237E2CAA0(v24, (uint64_t)v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_237E6072C((uint64_t)v12);
      sub_237E2209C((uint64_t)v8, &qword_2542C6548);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    }
    sub_237E28430(a1, (uint64_t)&v41);
    sub_237E2CFE8((uint64_t)v49, (uint64_t)v48);
    v25 = sub_237EE1F98();
    v26 = sub_237EE2D90();
    v27 = v26;
    if (os_log_type_enabled(v25, v26))
    {
      v28 = swift_slowAlloc();
      v38 = swift_slowAlloc();
      v40 = v38;
      *(_DWORD *)v28 = 136446722;
      v37 = v25;
      v39 = sub_237E2A660(2036427888, 0xE400000000000000, &v40);
      v35[1] = &v40;
      sub_237EE2EE0();
      *(_WORD *)(v28 + 12) = 2082;
      v36 = v28 + 14;
      v29 = sub_237E26DC4((uint64_t)&type metadata for ClockFaceLook, (uint64_t)&unk_2509BFC20, (void (*)(uint64_t, uint64_t))sub_237E28430);
      v39 = sub_237E2A660(v29, v30, &v40);
      sub_237EE2EE0();
      swift_bridgeObjectRelease();
      sub_237E2846C((uint64_t)&v41);
      *(_WORD *)(v28 + 22) = 2080;
      LODWORD(v36) = v27;
      __swift_project_boxed_opaque_existential_1(v48, v48[3]);
      v31 = sub_237EE3180();
      v39 = sub_237E2A660(v31, v32, &v40);
      sub_237EE2EE0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v48);
      v33 = v37;
      _os_log_impl(&dword_237E17000, v37, (os_log_type_t)v36, "Known context type for look. Kind=%{public}s, Look=%{public}s unknown context: %s", (uint8_t *)v28, 0x20u);
      v34 = v38;
      swift_arrayDestroy();
      MEMORY[0x23B8272A8](v34, -1, -1);
      MEMORY[0x23B8272A8](v28, -1, -1);

    }
    else
    {

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v48);
      sub_237E2846C((uint64_t)&v41);
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v49);
    goto LABEL_8;
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v49);
  v22 = v46;
  *(_OWORD *)(a2 + 64) = v45;
  *(_OWORD *)(a2 + 80) = v22;
  *(_BYTE *)(a2 + 96) = v47;
  v23 = v42;
  *(_OWORD *)a2 = v41;
  *(_OWORD *)(a2 + 16) = v23;
  result = v44;
  *(_OWORD *)(a2 + 32) = v43;
  *(__n128 *)(a2 + 48) = result;
  return result;
}

uint64_t sub_237E29CD0(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for WorldViewModelContext(a2, a1);
  return a2;
}

void (*sub_237E29D0C(_QWORD *a1, char a2))(_QWORD *a1)
{
  _QWORD *v4;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_237E2AC4C(v4, a2);
  return sub_237E29D58;
}

void sub_237E29D58(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 32))(*a1, 0);
  free(v1);
}

uint64_t sub_237E29D88@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_237E2CF28(&qword_2568984F0, 255, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F20();
  swift_release();
  swift_beginAccess();
  return sub_237E2A13C(v3 + 32, a2);
}

uint64_t sub_237E29E34(uint64_t a1)
{
  _BYTE v2[112];

  sub_237E2A13C(a1, (uint64_t)v2);
  swift_getKeyPath();
  sub_237E2CF28(&qword_2568984F0, 255, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F14();
  swift_release();
  return sub_237E2A198((uint64_t)v2);
}

uint64_t sub_237E29EF0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_237E2CF28(&qword_2568984E0, 255, (uint64_t (*)(uint64_t))type metadata accessor for PlayViewModel, (uint64_t)&unk_237EECA68);
  sub_237EE1F20();
  swift_release();
  swift_beginAccess();
  return sub_237E29CD0(v3 + 64, a2);
}

uint64_t sub_237E29FA0(uint64_t a1)
{
  _BYTE v2[104];

  sub_237E29CD0(a1, (uint64_t)v2);
  swift_getKeyPath();
  sub_237E2CF28(&qword_2568984E0, 255, (uint64_t (*)(uint64_t))type metadata accessor for PlayViewModel, (uint64_t)&unk_237EECA68);
  sub_237EE1F14();
  swift_release();
  return sub_237E2A078((uint64_t)v2);
}

uint64_t sub_237E2A060()
{
  uint64_t v0;

  return sub_237EB528C(*(_QWORD *)(v0 + 16), *(__int128 **)(v0 + 24));
}

uint64_t sub_237E2A078(uint64_t a1)
{
  destroy for WorldViewModelContext(a1);
  return a1;
}

uint64_t sub_237E2A0AC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for WorldViewModelContext(a2, a1);
  return a2;
}

uint64_t sub_237E2A0F0()
{
  uint64_t v0;

  return sub_237E3E3A8(*(_QWORD *)(v0 + 16), *(__int128 **)(v0 + 24));
}

uint64_t sub_237E2A108(uint64_t a1)
{
  destroy for WorldViewModelContext(a1);
  return a1;
}

uint64_t sub_237E2A13C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for DigitalClockContext(a2, a1);
  return a2;
}

uint64_t sub_237E2A180()
{
  uint64_t v0;

  return sub_237E818BC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_237E2A198(uint64_t a1)
{
  destroy for WorldViewModelContext(a1);
  return a1;
}

uint64_t sub_237E2A1CC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for SolarContext(a2, a1);
  return a2;
}

uint64_t sub_237E2A208(uint64_t a1)
{
  destroy for WorldViewModelContext(a1);
  return a1;
}

id sub_237E2A23C()
{
  return (id)sub_237E2C1A4();
}

id sub_237E2A254(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  char v10;
  uint64_t *v11;
  id v12;
  id v13;
  id result;
  void *v15;
  _BYTE v17[104];

  v2 = v1;
  v4 = type metadata accessor for WorldClockFace(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x24BDAC7A8](v5);
  v9 = &v17[-v8 - 8];
  sub_237E2A0AC(a1, (uint64_t)v17);
  type metadata accessor for WorldViewModel(0);
  swift_allocObject();
  *(_QWORD *)(v1 + 16) = sub_237E3BD0C((uint64_t)v17);
  sub_237E2CF28(&qword_2568984E8, 255, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  *(_QWORD *)v7 = sub_237EE20B8();
  v7[8] = v10 & 1;
  v11 = (uint64_t *)&v7[*(int *)(v4 + 20)];
  *v11 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898698);
  swift_storeEnumTagMultiPayload();
  sub_237E2CEE4((uint64_t)v7, (uint64_t)v9);
  v12 = objc_allocWithZone((Class)type metadata accessor for ClockHostingController());
  swift_retain();
  v13 = sub_237E2C54C((uint64_t)v9);
  swift_release();
  *(_QWORD *)(v2 + 24) = v13;
  result = objc_msgSend(v13, sel_view);
  if (result)
  {
    v15 = result;
    objc_msgSend(result, sel_setClipsToBounds_, 1);

    sub_237E2A108(a1);
    return (id)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_237E2A418(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char v5;
  char v6;
  double v7;
  uint64_t v8;
  id v9;
  id result;
  void *v11;
  _QWORD v12[15];

  v2 = v1;
  sub_237E2A1CC(a1, (uint64_t)v12);
  type metadata accessor for SolarViewModel();
  swift_allocObject();
  *(_QWORD *)(v1 + 16) = sub_237E75D34((uint64_t)v12);
  sub_237E2CF28(&qword_256898680, 255, (uint64_t (*)(uint64_t))type metadata accessor for SolarViewModel, (uint64_t)&unk_237EE9F0C);
  v4 = sub_237EE20B8();
  v6 = v5;
  sub_237EE27CC();
  v7 = *(double *)v12;
  v8 = v12[1];
  objc_allocWithZone((Class)type metadata accessor for ClockHostingController());
  swift_retain();
  v9 = sub_237E2C370(v4, v6 & 1, v8, v7);
  swift_release();
  swift_release();
  swift_release();
  *(_QWORD *)(v2 + 24) = v9;
  result = objc_msgSend(v9, sel_view);
  if (result)
  {
    v11 = result;
    objc_msgSend(result, sel_setClipsToBounds_, 1);

    sub_237E2A208(a1);
    return (id)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_237E2A58C(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_237E2A59C(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_237E2A5D0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_237E2A5F0(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_237E2A660(v6, v7, a3);
  v8 = *a1 + 8;
  sub_237EE2EE0();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_237E2A660(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_237E2A730(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_237E2CE14((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_237E2CE14((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v7;
}

uint64_t sub_237E2A730(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_237EE2EEC();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_237E2A8E8(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_237EE2FC4();
  if (!v8)
  {
    sub_237EE3090();
    __break(1u);
LABEL_17:
    result = sub_237EE30D8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_237E2A8E8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_237E2A97C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_237E2AAF0(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_237E2AAF0(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_237E2A97C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_237EC0E5C(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_237EE2FAC();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_237EE3090();
      __break(1u);
LABEL_10:
      v2 = sub_237EE2B08();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_237EE30D8();
    __break(1u);
LABEL_14:
    result = sub_237EE3090();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

uint64_t sub_237E2AAF0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256898640);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_237EE30D8();
  __break(1u);
  return result;
}

_BYTE **sub_237E2AC3C(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

void (*sub_237E2AC4C(_QWORD *a1, char a2))(uint64_t a1)
{
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;

  v4 = malloc(0x50uLL);
  *a1 = v4;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_237E2AE5C(v4);
  v4[9] = sub_237E2AD04((uint64_t)(v4 + 4), a2, isUniquelyReferenced_nonNull_native);
  return sub_237E2ACC8;
}

void sub_237E2ACC8(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 72))(*(_QWORD *)a1 + 32, 0);
  v2(v1, 0);
  free(v1);
}

unint64_t (*sub_237E2AD04(uint64_t a1, char a2, char a3))(unint64_t result)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unint64_t (*result)(unint64_t);

  v4 = v3;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 24) = a2;
  v8 = *v3;
  sub_237EAD644(a2);
  v11 = v10;
  *(_BYTE *)(a1 + 25) = v9 & 1;
  v12 = *(_QWORD *)(v8 + 16);
  v13 = (v9 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    v15 = v9;
    v16 = *(_QWORD *)(v8 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      *(_QWORD *)(a1 + 16) = v11;
      if ((v15 & 1) != 0)
      {
LABEL_8:
        v17 = *(_QWORD *)(*(_QWORD *)(*v4 + 56) + 8 * v11);
LABEL_12:
        *(_QWORD *)a1 = v17;
        return sub_237E2AE14;
      }
LABEL_11:
      v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_237E9D244();
      goto LABEL_7;
    }
    sub_237E9839C(v14, a3 & 1);
    sub_237EAD644(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      v11 = v18;
      *(_QWORD *)(a1 + 16) = v18;
      if ((v15 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (unint64_t (*)(unint64_t))sub_237EE31E0();
  __break(1u);
  return result;
}

unint64_t sub_237E2AE14(unint64_t result)
{
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)result;
  if (*(_QWORD *)result)
  {
    v2 = **(_QWORD ***)(result + 8);
    if ((*(_BYTE *)(result + 25) & 1) != 0)
      *(_QWORD *)(v2[7] + 8 * *(_QWORD *)(result + 16)) = v1;
    else
      return sub_237E9C9BC(*(_QWORD *)(result + 16), *(_BYTE *)(result + 24), v1, v2);
  }
  else if ((*(_BYTE *)(result + 25) & 1) != 0)
  {
    return sub_237E9A860(*(_QWORD *)(result + 16), **(_QWORD **)(result + 8));
  }
  return result;
}

uint64_t (*sub_237E2AE5C(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_237E2AE7C;
}

uint64_t sub_237E2AE7C(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

uint64_t sub_237E2AE88(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  void (*v21)(_QWORD *);
  void (*v22)(_QWORD *);
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  _QWORD v32[8];
  _BYTE v33[40];
  _QWORD v34[13];
  _QWORD v35[4];
  _QWORD v36[4];
  _QWORD v37[6];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6548);
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_237EE1FB0();
  v32[2] = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v32[1] = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37[3] = &type metadata for SolarContext;
  v37[4] = sub_237E2CFA4();
  v37[0] = swift_allocObject();
  sub_237E2A1CC(a1, v37[0] + 16);
  v11 = *(_QWORD *)(a4 + 16);
  v12 = (os_unfair_lock_s *)(*(_QWORD *)(v11 + 16) + 16);
  swift_beginAccess();
  swift_retain();
  os_unfair_lock_lock(v12);
  swift_beginAccess();
  v13 = *(_QWORD *)(v11 + 24);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v12);
  swift_endAccess();
  swift_release();
  if (!*(_QWORD *)(v13 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  sub_237EAD644(a2);
  v15 = v14;
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
  {
LABEL_5:
    v16 = *(_QWORD *)(a4 + 16);
    v17 = (os_unfair_lock_s *)(*(_QWORD *)(v16 + 16) + 16);
    swift_beginAccess();
    swift_retain();
    os_unfair_lock_lock(v17);
    swift_beginAccess();
    v18 = *(_QWORD *)(v16 + 24);
    swift_bridgeObjectRetain();
    os_unfair_lock_unlock(v17);
    swift_endAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v34[0] = v18;
    sub_237E9BB14(MEMORY[0x24BEE4B00], a2, isUniquelyReferenced_nonNull_native);
    v20 = v34[0];
    swift_bridgeObjectRelease();
    swift_beginAccess();
    os_unfair_lock_lock(v17);
    *(_QWORD *)(v16 + 24) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(v17);
    swift_endAccess();
    swift_release();
    swift_bridgeObjectRelease();
  }
  v21 = sub_237E4A7A8(v36);
  v22 = sub_237E29D0C(v35, a2);
  if (*v23)
  {
    sub_237E28430(a3, (uint64_t)v34);
    sub_237E2CFE8((uint64_t)v37, (uint64_t)v33);
    sub_237E8EB68((uint64_t)v33, (uint64_t)v34);
  }
  ((void (*)(_QWORD *, _QWORD))v22)(v35, 0);
  ((void (*)(_QWORD *, _QWORD))v21)(v36, 0);
  sub_237EE1BB4();
  swift_allocObject();
  sub_237EE1BA8();
  sub_237EE1B90();
  v34[0] = sub_237E4A31C();
  sub_237E2D02C();
  v24 = sub_237EE1B9C();
  v26 = v25;
  swift_bridgeObjectRelease();
  v27 = (void *)objc_opt_self();
  sub_237E2D070(v24, v26);
  v28 = objc_msgSend(v27, sel_standardUserDefaults);
  v29 = (void *)sub_237EE1BE4();
  sub_237E2D0B4(v24, v26);
  swift_bridgeObjectRetain();
  v30 = (void *)sub_237EE2A54();
  swift_bridgeObjectRelease();
  objc_msgSend(v28, sel_setObject_forKey_, v29, v30);

  swift_release();
  sub_237E2D0B4(v24, v26);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v37);
}

uint64_t sub_237E2B4E8(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  void (*v21)(_QWORD *);
  void (*v22)(_QWORD *);
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  void *v27;
  id v28;
  void *v29;
  void *v30;
  _QWORD v32[8];
  _BYTE v33[40];
  _QWORD v34[13];
  _QWORD v35[4];
  _QWORD v36[4];
  _QWORD v37[6];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6548);
  MEMORY[0x24BDAC7A8](v8);
  v9 = sub_237EE1FB0();
  v32[2] = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v32[1] = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37[3] = &type metadata for DigitalClockContext;
  v37[4] = sub_237E2D0F8();
  v37[0] = swift_allocObject();
  sub_237E2A13C(a1, v37[0] + 16);
  v11 = *(_QWORD *)(a4 + 16);
  v12 = (os_unfair_lock_s *)(*(_QWORD *)(v11 + 16) + 16);
  swift_beginAccess();
  swift_retain();
  os_unfair_lock_lock(v12);
  swift_beginAccess();
  v13 = *(_QWORD *)(v11 + 24);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v12);
  swift_endAccess();
  swift_release();
  if (!*(_QWORD *)(v13 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  sub_237EAD644(a2);
  v15 = v14;
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
  {
LABEL_5:
    v16 = *(_QWORD *)(a4 + 16);
    v17 = (os_unfair_lock_s *)(*(_QWORD *)(v16 + 16) + 16);
    swift_beginAccess();
    swift_retain();
    os_unfair_lock_lock(v17);
    swift_beginAccess();
    v18 = *(_QWORD *)(v16 + 24);
    swift_bridgeObjectRetain();
    os_unfair_lock_unlock(v17);
    swift_endAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v34[0] = v18;
    sub_237E9BB14(MEMORY[0x24BEE4B00], a2, isUniquelyReferenced_nonNull_native);
    v20 = v34[0];
    swift_bridgeObjectRelease();
    swift_beginAccess();
    os_unfair_lock_lock(v17);
    *(_QWORD *)(v16 + 24) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(v17);
    swift_endAccess();
    swift_release();
    swift_bridgeObjectRelease();
  }
  v21 = sub_237E4A7A8(v36);
  v22 = sub_237E29D0C(v35, a2);
  if (*v23)
  {
    sub_237E28430(a3, (uint64_t)v34);
    sub_237E2CFE8((uint64_t)v37, (uint64_t)v33);
    sub_237E8EB68((uint64_t)v33, (uint64_t)v34);
  }
  ((void (*)(_QWORD *, _QWORD))v22)(v35, 0);
  ((void (*)(_QWORD *, _QWORD))v21)(v36, 0);
  sub_237EE1BB4();
  swift_allocObject();
  sub_237EE1BA8();
  sub_237EE1B90();
  v34[0] = sub_237E4A31C();
  sub_237E2D02C();
  v24 = sub_237EE1B9C();
  v26 = v25;
  swift_bridgeObjectRelease();
  v27 = (void *)objc_opt_self();
  sub_237E2D070(v24, v26);
  v28 = objc_msgSend(v27, sel_standardUserDefaults);
  v29 = (void *)sub_237EE1BE4();
  sub_237E2D0B4(v24, v26);
  swift_bridgeObjectRetain();
  v30 = (void *)sub_237EE2A54();
  swift_bridgeObjectRelease();
  objc_msgSend(v28, sel_setObject_forKey_, v29, v30);

  swift_release();
  sub_237E2D0B4(v24, v26);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v37);
}

uint64_t sub_237E2BB48(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t), uint64_t a7, void (*a8)(uint64_t, uint64_t))
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  os_unfair_lock_s *v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  os_unfair_lock_s *v24;
  uint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  void (*v28)(_QWORD *);
  void (*v29)(_QWORD *);
  _QWORD *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  void *v34;
  id v35;
  void *v36;
  void *v37;
  uint64_t v39[8];
  _BYTE v40[40];
  _QWORD v41[13];
  _QWORD v42[4];
  _QWORD v43[4];
  _QWORD v44[6];

  v39[0] = a3;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6548);
  MEMORY[0x24BDAC7A8](v14);
  v15 = sub_237EE1FB0();
  v39[2] = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v39[1] = (uint64_t)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44[3] = a5;
  v44[4] = a6(v16);
  v44[0] = swift_allocObject();
  a8(a1, v44[0] + 16);
  v18 = *(_QWORD *)(a4 + 16);
  v19 = (os_unfair_lock_s *)(*(_QWORD *)(v18 + 16) + 16);
  swift_beginAccess();
  swift_retain();
  os_unfair_lock_lock(v19);
  swift_beginAccess();
  v20 = *(_QWORD *)(v18 + 24);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v19);
  swift_endAccess();
  swift_release();
  if (!*(_QWORD *)(v20 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  sub_237EAD644(a2);
  v22 = v21;
  swift_bridgeObjectRelease();
  if ((v22 & 1) == 0)
  {
LABEL_5:
    v23 = *(_QWORD *)(a4 + 16);
    v24 = (os_unfair_lock_s *)(*(_QWORD *)(v23 + 16) + 16);
    swift_beginAccess();
    swift_retain();
    os_unfair_lock_lock(v24);
    swift_beginAccess();
    v25 = *(_QWORD *)(v23 + 24);
    swift_bridgeObjectRetain();
    os_unfair_lock_unlock(v24);
    swift_endAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v41[0] = v25;
    sub_237E9BB14(MEMORY[0x24BEE4B00], a2, isUniquelyReferenced_nonNull_native);
    v27 = v41[0];
    swift_bridgeObjectRelease();
    swift_beginAccess();
    os_unfair_lock_lock(v24);
    *(_QWORD *)(v23 + 24) = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(v24);
    swift_endAccess();
    swift_release();
    swift_bridgeObjectRelease();
  }
  v28 = sub_237E4A7A8(v43);
  v29 = sub_237E29D0C(v42, a2);
  if (*v30)
  {
    sub_237E28430(v39[0], (uint64_t)v41);
    sub_237E2CFE8((uint64_t)v44, (uint64_t)v40);
    sub_237E8EB68((uint64_t)v40, (uint64_t)v41);
  }
  ((void (*)(_QWORD *, _QWORD))v29)(v42, 0);
  ((void (*)(_QWORD *, _QWORD))v28)(v43, 0);
  sub_237EE1BB4();
  swift_allocObject();
  sub_237EE1BA8();
  sub_237EE1B90();
  v41[0] = sub_237E4A31C();
  sub_237E2D02C();
  v31 = sub_237EE1B9C();
  v33 = v32;
  swift_bridgeObjectRelease();
  v34 = (void *)objc_opt_self();
  sub_237E2D070(v31, v33);
  v35 = objc_msgSend(v34, sel_standardUserDefaults);
  v36 = (void *)sub_237EE1BE4();
  sub_237E2D0B4(v31, v33);
  swift_bridgeObjectRetain();
  v37 = (void *)sub_237EE2A54();
  swift_bridgeObjectRelease();
  objc_msgSend(v35, sel_setObject_forKey_, v36, v37);

  swift_release();
  sub_237E2D0B4(v31, v33);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v44);
}

uint64_t sub_237E2C1A4()
{
  uint64_t v0;

  return v0;
}

id sub_237E2C1AC(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  id result;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898670);
  MEMORY[0x24BDAC7A8](v6);
  v15 = a1;
  LOBYTE(v16) = a2 & 1;
  *(_BYTE *)(v3 + qword_25689DBA8) = 0;
  *(_BYTE *)(v3 + qword_25689DBB0) = 0;
  v7 = type metadata accessor for DigitalClockViewModel();
  v8 = sub_237E2CE54();
  v9 = sub_237E2CF28(&qword_2568984F0, 255, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE2640();
  swift_getOpaqueTypeConformance2();
  v14 = sub_237EE2880();
  v10 = (id)sub_237EE2418();
  result = objc_msgSend(v10, sel_view, v14, v7, v8, v9, v15, v16);
  if (result)
  {
    v12 = result;
    v13 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    objc_msgSend(v12, sel_setBackgroundColor_, v13);

    return v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_237E2C370(uint64_t a1, char a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  id result;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = v4;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898688);
  MEMORY[0x24BDAC7A8](v10);
  v19 = a1;
  LOBYTE(v20) = a2 & 1;
  *(_BYTE *)(v5 + qword_25689DBA8) = 0;
  *(_BYTE *)(v5 + qword_25689DBB0) = 0;
  v11 = type metadata accessor for SolarViewModel();
  v12 = sub_237E2CE98();
  v13 = sub_237E2CF28(&qword_256898680, 255, (uint64_t (*)(uint64_t))type metadata accessor for SolarViewModel, (uint64_t)&unk_237EE9F0C);
  sub_237EE2640();
  swift_getOpaqueTypeConformance2();
  v18 = sub_237EE2880();
  v14 = (id)sub_237EE2418();
  result = objc_msgSend(v14, sel_view, v18, v11, v12, v13, v19, v20, *(_QWORD *)&a4, a3);
  if (result)
  {
    v16 = result;
    v17 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    objc_msgSend(v16, sel_setBackgroundColor_, v17);

    return v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_237E2C54C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id result;
  void *v9;
  id v10;
  uint64_t v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568986A0);
  MEMORY[0x24BDAC7A8](v3);
  *(_BYTE *)(v1 + qword_25689DBA8) = 0;
  *(_BYTE *)(v1 + qword_25689DBB0) = 0;
  type metadata accessor for WorldClockFace(0);
  v4 = type metadata accessor for WorldViewModel(0);
  v5 = sub_237E2CF28(&qword_2568986A8, 255, type metadata accessor for WorldClockFace, (uint64_t)&unk_237EE9738);
  v6 = sub_237E2CF28(&qword_2568984E8, 255, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE2640();
  swift_getOpaqueTypeConformance2();
  v11 = sub_237EE2880();
  v7 = (id)sub_237EE2418();
  result = objc_msgSend(v7, sel_view, v11, v4, v5, v6);
  if (result)
  {
    v9 = result;
    v10 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    objc_msgSend(v9, sel_setBackgroundColor_, v10);

    sub_237E2CF68(a1);
    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_237E2C72C(uint64_t a1)
{
  if (qword_256897AD8 != -1)
    swift_once();
  __asm { BR              X10 }
}

uint64_t sub_237E2CA6C(uint64_t a1)
{
  destroy for WorldViewModelContext(a1);
  return a1;
}

uint64_t sub_237E2CAA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6548);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_237E2CAE8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_237E2CF28(&qword_2568984F8, a2, (uint64_t (*)(uint64_t))type metadata accessor for ClockFaceController, (uint64_t)&protocol conformance descriptor for ClockFaceController);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for ClockFaceController()
{
  return objc_opt_self();
}

uint64_t sub_237E2CB48(uint64_t a1)
{
  _BYTE v2[104];

  sub_237E28430(a1, (uint64_t)v2);
  return sub_237E2516C((uint64_t)v2);
}

uint64_t dispatch thunk of ClockFaceRemoteTapHandling.didReceive(tapAt:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ClockFaceDebugUISupporting.isDebuggingHUDVisible.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ClockFaceDebugUISupporting.isDebuggingHUDVisible.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ClockFaceDebugUISupporting.isDebuggingHUDVisible.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t method lookup function for ClockFaceController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ClockFaceController.updatedConfiguration.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of ClockFaceController.debugSupportingClockFace.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of ClockFaceController.suggestedLooks.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of ClockFaceController.look.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of ClockFaceController.look.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of ClockFaceController.look.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of ClockFaceController.presentationViewController.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of ClockFaceController.cleanupViews()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of ClockFaceController.saveViewState()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of ClockFaceController.__allocating_init(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of ClockFaceController.configure(withParent:superview:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of ClockFaceController.isDisplayStyleRedMode.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of ClockFaceController.isDisplayStyleRedMode.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of ClockFaceController.isDisplayStyleRedMode.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of ClockFaceController.redModeRenderingMethod.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t sub_237E2CC64(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_237E2CC6C()
{
  return swift_bridgeObjectRetain();
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_237E2CCB0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_237E2CCDC(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_237E2CD10()
{
  return objectdestroy_14Tm_0();
}

uint64_t sub_237E2CD18()
{
  return objectdestroy_14Tm_0();
}

uint64_t objectdestroy_14Tm_0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  v1 = v0 + 16;
  v2 = *(unsigned __int8 *)(v0 + 112);
  if (v2 == 2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(v1);
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
    goto LABEL_7;
  }
  if (v2 == 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  if (!*(_BYTE *)(v0 + 112))
  {
    __swift_destroy_boxed_opaque_existential_1Tm(v1);
LABEL_7:
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

uint64_t sub_237E2CD98()
{
  return objectdestroy_14Tm_0();
}

uint64_t sub_237E2CDA0()
{
  return objectdestroy_14Tm_0();
}

uint64_t sub_237E2CDA8()
{
  return objectdestroy_14Tm_0();
}

uint64_t sub_237E2CDB0(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ClockPosterConfiguration(a2, a1);
  return a2;
}

uint64_t sub_237E2CDEC()
{
  return objectdestroy_14Tm_0();
}

uint64_t __swift_destroy_boxed_opaque_existential_1Tm(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_237E2CE14(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_237E2CE54()
{
  unint64_t result;

  result = qword_256898678;
  if (!qword_256898678)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE5904, &type metadata for DigitalClockFace);
    atomic_store(result, (unint64_t *)&qword_256898678);
  }
  return result;
}

unint64_t sub_237E2CE98()
{
  unint64_t result;

  result = qword_256898690;
  if (!qword_256898690)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEAF24, &type metadata for SolarClockFace);
    atomic_store(result, (unint64_t *)&qword_256898690);
  }
  return result;
}

uint64_t sub_237E2CEE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorldClockFace(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_237E2CF28(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x23B8271D0](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_237E2CF68(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WorldClockFace(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_237E2CFA4()
{
  unint64_t result;

  result = qword_2568986B0;
  if (!qword_2568986B0)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE9EF0, &type metadata for SolarContext);
    atomic_store(result, (unint64_t *)&qword_2568986B0);
  }
  return result;
}

uint64_t sub_237E2CFE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_237E2D02C()
{
  unint64_t result;

  result = qword_2568986B8;
  if (!qword_2568986B8)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE72B0, &type metadata for ClockFaceContextStore.Collection);
    atomic_store(result, (unint64_t *)&qword_2568986B8);
  }
  return result;
}

uint64_t sub_237E2D070(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_237E2D0B4(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

unint64_t sub_237E2D0F8()
{
  unint64_t result;

  result = qword_2568986C0;
  if (!qword_2568986C0)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEAA00, &type metadata for DigitalClockContext);
    atomic_store(result, (unint64_t *)&qword_2568986C0);
  }
  return result;
}

unint64_t sub_237E2D13C()
{
  unint64_t result;

  result = qword_2568986C8;
  if (!qword_2568986C8)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE6BC4, &type metadata for WorldViewModelContext);
    atomic_store(result, (unint64_t *)&qword_2568986C8);
  }
  return result;
}

uint64_t sub_237E2D180(__int128 *a1, uint64_t a2)
{
  __swift_memcpy97_8(a2, a1);
  return a2;
}

uint64_t sub_237E2D1BC(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_237E2D1F8()
{
  unint64_t result;

  result = qword_256898700;
  if (!qword_256898700)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEC9F4, &type metadata for PlayViewModelContext);
    atomic_store(result, (unint64_t *)&qword_256898700);
  }
  return result;
}

uint64_t sub_237E2D23C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 96);
  return swift_deallocObject();
}

_OWORD *sub_237E2D270(_OWORD *a1, _OWORD *a2)
{
  initializeWithCopy for ColorProvider(a2, a1);
  return a2;
}

uint64_t sub_237E2D2AC()
{
  return swift_deallocObject();
}

uint64_t sub_237E2D2C4()
{
  return sub_237E2A180();
}

uint64_t sub_237E2D2D8()
{
  return sub_237E2A0F0();
}

uint64_t sub_237E2D2EC()
{
  return sub_237E2A060();
}

id sub_237E2D300(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v9;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  BOOL v16;
  objc_super v18;

  v9 = &v4[OBJC_IVAR____TtC11ClockPoster31AlarmComplicationCurvedTextView_pathProvider];
  *(_QWORD *)v9 = 0x4036000000000000;
  v9[8] = 0;
  v10 = OBJC_IVAR____TtC11ClockPoster31AlarmComplicationCurvedTextView_timeFormatter;
  v11 = objc_allocWithZone(MEMORY[0x24BDB87B0]);
  v12 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v11, sel_init);
  v13 = OBJC_IVAR____TtC11ClockPoster31AlarmComplicationCurvedTextView_alarmIconLayer;
  *(_QWORD *)&v12[v13] = sub_237E2D9FC();
  v14 = OBJC_IVAR____TtC11ClockPoster31AlarmComplicationCurvedTextView_alarmTextLayer;
  *(_QWORD *)&v12[v14] = sub_237E2DD10();

  v18.receiver = v12;
  v18.super_class = (Class)type metadata accessor for AlarmComplicationCurvedTextView();
  v15 = objc_msgSendSuper2(&v18, sel_initWithFrame_, a1, a2, a3, a4);
  v16 = objc_msgSend(v15, sel_effectiveUserInterfaceLayoutDirection) == (id)1;
  *((_BYTE *)v15 + OBJC_IVAR____TtC11ClockPoster31AlarmComplicationCurvedTextView_pathProvider + 8) = v16;
  return v15;
}

void sub_237E2D504()
{
  char *v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  id (*v24)(uint64_t, void *);
  void *v25;
  id (*v26)(uint64_t);
  uint64_t v27;
  objc_super v28;

  v28.receiver = v0;
  v28.super_class = (Class)type metadata accessor for AlarmComplicationCurvedTextView();
  objc_msgSendSuper2(&v28, sel_layoutSubviews);
  v1 = *(void **)&v0[OBJC_IVAR____TtC11ClockPoster31AlarmComplicationCurvedTextView_alarmIconLayer];
  v2 = objc_msgSend(v1, sel_superlayer);

  if (!v2)
  {
    v3 = objc_msgSend(v0, sel_layer);
    objc_msgSend(v3, sel_addSublayer_, v1);

  }
  v4 = *(void **)&v0[OBJC_IVAR____TtC11ClockPoster31AlarmComplicationCurvedTextView_alarmTextLayer];
  v5 = objc_msgSend(v4, sel_superlayer);

  if (!v5)
  {
    v6 = objc_msgSend(v0, sel_layer);
    objc_msgSend(v6, sel_addSublayer_, v4);

  }
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 1.0, 0.152941176, 0.0, 1.0);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = 0x4069800000000000;
  v9 = objc_allocWithZone(MEMORY[0x24BEBD4B8]);
  v26 = sub_237E2DF20;
  v27 = v8;
  v10 = MEMORY[0x24BDAC760];
  v22 = MEMORY[0x24BDAC760];
  v23 = 1107296256;
  v24 = sub_237E7D770;
  v25 = &block_descriptor_0;
  v11 = _Block_copy(&v22);
  v12 = v7;
  v13 = objc_msgSend(v9, sel_initWithDynamicProvider_, v11);
  _Block_release(v11);

  swift_release();
  v14 = objc_msgSend(v13, sel_CGColor);

  objc_msgSend(v1, sel_setBackgroundColor_, v14);
  v15 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v15;
  *(_QWORD *)(v16 + 24) = 0x4063200000000000;
  v17 = objc_allocWithZone(MEMORY[0x24BEBD4B8]);
  v26 = sub_237E2DF74;
  v27 = v16;
  v22 = v10;
  v23 = 1107296256;
  v24 = sub_237E7D770;
  v25 = &block_descriptor_7;
  v18 = _Block_copy(&v22);
  v19 = v15;
  v20 = objc_msgSend(v17, sel_initWithDynamicProvider_, v18);
  _Block_release(v18);

  swift_release();
  v21 = objc_msgSend(v20, sel_CGColor);

  objc_msgSend(v4, sel_setFillColor_, v21);
}

void sub_237E2D84C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;

  v2 = v1;
  v4 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC11ClockPoster31AlarmComplicationCurvedTextView_timeFormatter), sel_timeAndDesignatorText);
  if (v4)
  {
    v5 = v4;
    sub_237EE2A84();

    sub_237EE2AF0();
    swift_bridgeObjectRelease();
    if (qword_256897B08 != -1)
      swift_once();
    sub_237E2447C(qword_25689DF30);
    v6 = objc_allocWithZone(MEMORY[0x24BDD1458]);
    v7 = (void *)sub_237EE2A54();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_237E2DEB4();
    v8 = (void *)sub_237EE29F4();
    swift_bridgeObjectRelease();
    v9 = objc_msgSend(v6, sel_initWithString_attributes_, v7, v8);

    v10 = *(void **)(v2 + OBJC_IVAR____TtC11ClockPoster31AlarmComplicationCurvedTextView_alarmTextLayer);
    v11 = sub_237E55EA0(v9, a1, *(_QWORD *)(v2 + OBJC_IVAR____TtC11ClockPoster31AlarmComplicationCurvedTextView_alarmIconLayer), *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC11ClockPoster31AlarmComplicationCurvedTextView_pathProvider + 8), *(double *)(v2 + OBJC_IVAR____TtC11ClockPoster31AlarmComplicationCurvedTextView_pathProvider));
    objc_msgSend(v10, sel_setPath_, v11);

  }
  else
  {
    __break(1u);
  }
}

id sub_237E2D9FC()
{
  id v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  char v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  id v12;
  uint64_t inited;
  void *v14;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE56D0]), sel_init);
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE56D0]), sel_init);
  if (qword_256897B00 != -1)
    swift_once();
  v2 = objc_msgSend((id)objc_opt_self(), sel_configurationWithFont_scale_, qword_25689DF28, 1);
  v3 = (void *)sub_237EE2A54();
  v4 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_withConfiguration_, v3, v2);

  if (!v4)
    goto LABEL_7;
  *(double *)&v5 = COERCE_DOUBLE(sub_237EE2E8C());
  if ((v6 & 1) != 0)
  {

LABEL_7:
    return v0;
  }
  v7 = *(double *)&v5;
  objc_msgSend(v4, sel_size);
  v9 = v8;
  v11 = v10;
  objc_msgSend(v1, sel_setBounds_, UIEdgeInsetsInsetRect(0.0));
  v12 = objc_msgSend(v4, sel_CGImage);
  objc_msgSend(v1, sel_setContents_, v12);

  objc_msgSend(v1, sel_setAnchorPoint_, 0.0, 0.0);
  objc_msgSend(v1, sel_setPosition_, 1.66666667, 1.66666667);
  objc_msgSend(v1, sel_setContentsGravity_, *MEMORY[0x24BDE5C90]);
  objc_msgSend(v0, sel_setBounds_, 0.0, 0.0, v9, v11);
  objc_msgSend(v0, sel_setMask_, v1);
  objc_msgSend(v0, sel_setAnchorPoint_, 0.5, v7 / v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898750);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_237EE55E0;
  *(_QWORD *)(inited + 32) = 0x726F66736E617274;
  *(_QWORD *)(inited + 40) = 0xE90000000000006DLL;
  *(_QWORD *)(inited + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCEF8]), sel_init);
  sub_237EAB184(inited);
  __swift_instantiateConcreteTypeFromMangledName(qword_256898758);
  v14 = (void *)sub_237EE29F4();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setActions_, v14);

  return v0;
}

id sub_237E2DD10()
{
  id v0;
  uint64_t inited;
  id v2;
  id v3;
  void *v4;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE5758]), sel_init);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898750);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_237EE55E0;
  *(_QWORD *)(inited + 32) = 0x726F66736E617274;
  *(_QWORD *)(inited + 40) = 0xE90000000000006DLL;
  v2 = objc_allocWithZone(MEMORY[0x24BDBCEF8]);
  v3 = v0;
  *(_QWORD *)(inited + 48) = objc_msgSend(v2, sel_init);
  sub_237EAB184(inited);
  __swift_instantiateConcreteTypeFromMangledName(qword_256898758);
  v4 = (void *)sub_237EE29F4();
  swift_bridgeObjectRelease();
  objc_msgSend(v3, sel_setActions_, v4);

  return v3;
}

id sub_237E2DE1C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AlarmComplicationCurvedTextView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AlarmComplicationCurvedTextView()
{
  return objc_opt_self();
}

unint64_t sub_237E2DEB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256898250;
  if (!qword_256898250)
  {
    type metadata accessor for Key(255);
    result = MEMORY[0x23B8271D0](&unk_237EE4F0C, v1);
    atomic_store(result, (unint64_t *)&qword_256898250);
  }
  return result;
}

uint64_t sub_237E2DEFC()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_237E2DF20(uint64_t a1)
{
  uint64_t v1;

  return sub_237E38FD4(*(double *)(v1 + 24), a1, *(void **)(v1 + 16));
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

double UIEdgeInsetsInsetRect(double a1)
{
  return a1 + 1.66666667;
}

void destroy for SolarOrbit(uint64_t a1)
{

}

uint64_t initializeWithCopy for SolarOrbit(uint64_t a1, uint64_t a2)
{
  void *v3;
  __int128 v4;
  __int128 v5;
  id v6;

  v3 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  v6 = v3;
  return a1;
}

_QWORD *assignWithCopy for SolarOrbit(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  v4 = (void *)a1[1];
  v5 = (void *)a2[1];
  a1[1] = v5;
  v6 = v5;

  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for SolarOrbit(uint64_t a1, uint64_t a2)
{
  void *v4;
  __int128 v5;
  __int128 v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for SolarOrbit(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 96))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SolarOrbit(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 96) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SolarOrbit()
{
  return &type metadata for SolarOrbit;
}

uint64_t initializeBufferWithCopyOfBuffer for DigitalClockFace(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for DigitalClockFace(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for DigitalClockFace(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DigitalClockFace(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DigitalClockFace(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DigitalClockFace()
{
  return &type metadata for DigitalClockFace;
}

uint64_t sub_237E2E300()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_237E2E310(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t TupleTypeMetadata;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  __int128 *v12;
  _OWORD *v13;
  unint64_t v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v4 = a1;
  v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    TupleTypeMetadata = *v5;
    MEMORY[0x24BDAC7A8](a1);
    v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
LABEL_12:
    v22 = 32;
    v23 = a2;
    do
    {
      if (a2 == 1)
        v24 = 0;
      else
        v24 = *(_DWORD *)(TupleTypeMetadata + v22);
      v26 = *v5++;
      v25 = v26;
      v27 = *v4++;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(&v8[v24], v27);
      v22 += 16;
      --v23;
    }
    while (v23);
    return sub_237EE2964();
  }
  MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v11 = 0;
    if (a2 < 4)
      goto LABEL_9;
    if ((unint64_t)(v10 - (char *)v5) < 0x20)
      goto LABEL_9;
    v11 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    v12 = (__int128 *)(v5 + 2);
    v13 = v10 + 16;
    v14 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v15 = *v12;
      *(v13 - 1) = *(v12 - 1);
      *v13 = v15;
      v12 += 2;
      v13 += 2;
      v14 -= 4;
    }
    while (v14);
    if (v11 != a2)
    {
LABEL_9:
      v16 = a2 - v11;
      v17 = v11;
      v18 = &v10[8 * v11];
      v19 = &v5[v17];
      do
      {
        v20 = *v19++;
        *(_QWORD *)v18 = v20;
        v18 += 8;
        --v16;
      }
      while (v16);
    }
  }
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  MEMORY[0x24BDAC7A8](TupleTypeMetadata);
  v8 = (char *)&v29 - v21;
  if (a2)
    goto LABEL_12;
  return sub_237EE2964();
}

__n128 sub_237E2E4C4@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  void *v22;
  __n128 result;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __n128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_237EE2D9C();
    v22 = (void *)sub_237EE2514();
    sub_237EE1F8C();

  }
  sub_237EE21E4();
  a9[4] = v28;
  a9[5] = v29;
  a9[6] = v30;
  *a9 = v24;
  a9[1] = v25;
  result = v27;
  a9[2] = v26;
  a9[3] = v27;
  return result;
}

double sub_237E2E64C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  double result;

  *(_QWORD *)&result = sub_237E2E6A4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_256898A78, &qword_256898A80).n128_u64[0];
  return result;
}

__n128 sub_237E2E6A4@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v17;
  uint64_t *v19;
  void *v28;
  _OWORD *v29;
  __n128 result;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __n128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;

  v19 = a17;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_237EE2D9C();
    v28 = (void *)sub_237EE2514();
    sub_237EE1F8C();

    v19 = a17;
  }
  sub_237EE21E4();
  sub_237E22004(v17, a9, a16);
  v29 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v19) + 36));
  v29[4] = v35;
  v29[5] = v36;
  v29[6] = v37;
  *v29 = v31;
  v29[1] = v32;
  result = v34;
  v29[2] = v33;
  v29[3] = v34;
  return result;
}

uint64_t sub_237E2E870@<X0>(char a1@<W2>, uint64_t a2@<X8>)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  double *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  uint64_t v22;
  id v23;
  double v24;
  double v25;
  CTFontRef v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  char *v33;
  const __CTFont *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char *v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v48 = a2;
  v2 = a1 & 1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898788);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (double *)((char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898790);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898798);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568987A0);
  MEMORY[0x24BDAC7A8](v47);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237EE2130();
  v15 = v14;
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v22 = swift_retain();
  sub_237EC3B18(v22, v2);
  swift_release();
  v23 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v23, sel_bounds);
  v25 = v24;

  v26 = sub_237E8463C(v25);
  swift_release();
  if (v15 > v19)
    v27 = v15;
  else
    v27 = v19;
  if (v21 > v17)
    v28 = v21;
  else
    v28 = v17;
  v29 = v27 + 1.0;
  v30 = v28 + 1.0;
  if (qword_256897A98 != -1)
    swift_once();
  v31 = *(double *)&qword_25689DEB8;
  if (*(double *)&qword_25689DEB8 > v29)
    v32 = *(double *)&qword_25689DEB8;
  else
    v32 = v29;
  *(_QWORD *)v5 = v26;
  if (v31 <= v30)
    v31 = v30;
  v5[1] = v32;
  v5[2] = v31;
  v5[3] = v32;
  v5[4] = v31;
  v33 = (char *)v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2568987A8) + 44);
  v34 = v26;
  sub_237E2EC98(v2, v33);

  v35 = sub_237EE21C0();
  LOBYTE(v33) = sub_237EE252C();
  sub_237E22004((uint64_t)v5, (uint64_t)v8, &qword_256898788);
  v36 = &v8[*(int *)(v6 + 36)];
  *(_QWORD *)v36 = v35;
  v36[8] = (char)v33;
  sub_237E2209C((uint64_t)v5, &qword_256898788);
  v37 = sub_237EE2904();
  sub_237E2E6A4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v11, 0.0, 1, INFINITY, 0, v37, v38, &qword_256898790, &qword_256898798);
  sub_237E2209C((uint64_t)v8, &qword_256898790);
  v39 = swift_retain();
  v40 = sub_237EC3B18(v39, v2);
  swift_release();
  swift_getKeyPath();
  v49 = v40;
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F20();
  swift_release();
  swift_beginAccess();
  LODWORD(v33) = *(unsigned __int8 *)(v40 + 16);
  swift_release();
  if ((_DWORD)v33 == 1)
    v41 = sub_237EE26E8();
  else
    v41 = sub_237EE2700();
  v42 = v41;
  v43 = sub_237EE252C();
  sub_237E22004((uint64_t)v11, (uint64_t)v13, &qword_256898798);
  v44 = &v13[*(int *)(v47 + 36)];
  *(_QWORD *)v44 = v42;
  v44[8] = v43;
  sub_237E2209C((uint64_t)v11, &qword_256898798);
  return sub_237E21FC0((uint64_t)v13, v48, &qword_2568987A0);
}

uint64_t sub_237E2EC98@<X0>(char a1@<W2>, char *a2@<X8>)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  uint64_t v23;
  void *v24;
  id v25;
  double v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  void (*v44)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  double v61;

  v52 = a2;
  v2 = a1 & 1;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568987B0);
  v51 = *(_QWORD *)(v48 - 8);
  v3 = MEMORY[0x24BDAC7A8](v48);
  v53 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v50 = (char *)&v46 - v5;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568987B8);
  v54 = *(_QWORD *)(v47 - 8);
  v6 = MEMORY[0x24BDAC7A8](v47);
  v49 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v46 - v8;
  type metadata accessor for DigitalClockViewModel();
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE20B8();
  sub_237EE213C();
  v11 = v10;
  v13 = v12;
  v14 = sub_237EE20B8();
  v16 = v15;
  swift_release();
  v55 = v14;
  LOBYTE(v56) = v16 & 1;
  v57 = v11;
  v58 = v13;
  v17 = swift_retain();
  sub_237EC3B18(v17, v2);
  swift_release();
  sub_237E326BC();
  v18 = v9;
  sub_237EE2640();
  swift_release();
  swift_release();
  v19 = sub_237EE20B8();
  v21 = v20;
  LOBYTE(v61) = 1;
  sub_237EE27CC();
  v22 = v55;
  v23 = v56;
  v24 = (void *)objc_opt_self();
  if (qword_256897AA8 != -1)
    swift_once();
  v25 = objc_msgSend(v24, sel_systemFontOfSize_weight_, *(double *)&qword_25689DEC8, *MEMORY[0x24BEBB600]);
  objc_msgSend(v25, sel_ascender);
  v27 = v26;
  objc_msgSend(v25, sel_capHeight);
  v29 = v28;

  v61 = v27 - v29;
  sub_237EE27CC();
  v30 = v55;
  v31 = v56;
  v55 = v19;
  LOBYTE(v56) = v21 & 1;
  LOBYTE(v57) = v22;
  v58 = v23;
  v59 = v30;
  v60 = v31;
  v32 = swift_retain();
  sub_237EC3B18(v32, v2);
  swift_release();
  sub_237E32700();
  v33 = v50;
  sub_237EE2640();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v34 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
  v35 = v49;
  v36 = v47;
  v34(v49, v18, v47);
  v37 = v51;
  v38 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
  v39 = v53;
  v40 = v48;
  v38(v53, v33, v48);
  v41 = v52;
  v34(v52, v35, v36);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568987D0);
  v38(&v41[*(int *)(v42 + 48)], v39, v40);
  v43 = *(void (**)(char *, uint64_t))(v37 + 8);
  v43(v33, v40);
  v44 = *(void (**)(char *, uint64_t))(v54 + 8);
  v44(v18, v36);
  v43(v39, v40);
  return ((uint64_t (*)(char *, uint64_t))v44)(v35, v36);
}

uint64_t sub_237E2F0AC@<X0>(uint64_t (**a1)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  char v4;
  uint64_t v5;

  v3 = *v1;
  v4 = *((_BYTE *)v1 + 8);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v3;
  *(_BYTE *)(v5 + 24) = v4;
  *a1 = sub_237E2F14C;
  a1[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v5;
  return swift_retain();
}

unint64_t sub_237E2F104(uint64_t a1)
{
  unint64_t result;

  result = sub_237E2CE54();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_237E2F128()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_237E2F14C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_237E2E870(*(_BYTE *)(v1 + 24), a1);
}

uint64_t sub_237E2F158@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  id v20;
  double v21;
  double v22;
  uint64_t v23;
  char v24;
  const __CTFont *v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  CTFontRef v32;
  const __CTFont *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  CTFontRef v44;
  CTFontRef v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  const __CTFont *v62;
  CTFontRef v63;
  __int16 v64;

  v51 = a2;
  v2 = a1 & 1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898840);
  v49 = *(_QWORD *)(v3 - 8);
  v50 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v53 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898800);
  MEMORY[0x24BDAC7A8](v47);
  v48 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = swift_retain();
  sub_237EC3B18(v6, v2);
  swift_release();
  v7 = (void *)objc_opt_self();
  v8 = objc_msgSend(v7, sel_mainScreen);
  objc_msgSend(v8, sel_bounds);
  v10 = v9;

  v45 = sub_237E8463C(v10);
  swift_release();
  v11 = swift_retain();
  v52 = v2;
  sub_237EC3B18(v11, v2);
  swift_release();
  v12 = sub_237E81B18();
  v14 = v13;
  v16 = v15;
  v18 = v17;
  swift_release();
  v19 = swift_retain();
  sub_237EC3B18(v19, v2);
  swift_release();
  v20 = objc_msgSend(v7, sel_mainScreen);
  objc_msgSend(v20, sel_bounds);
  v22 = v21;

  v44 = sub_237E8463C(v22);
  swift_release();
  type metadata accessor for RollingClockViewModel();
  v46 = sub_237E20E98(&qword_256897E18, (uint64_t (*)(uint64_t))type metadata accessor for RollingClockViewModel, (uint64_t)&unk_237EE4558);
  v23 = sub_237EE20B8();
  LOBYTE(v2) = v24;
  v25 = v45;
  sub_237E209B8(v12, v14, v16, v18);
  v26 = sub_237E23CCC();
  sub_237E20A7C(v12, v14, v16, v18);

  v55 = v23;
  v56 = v2 & 1;
  v57 = v26;
  v58 = v12;
  v59 = v14;
  v60 = v16;
  v61 = v18;
  v62 = v25;
  v63 = v44;
  v64 = 384;
  v27 = swift_retain();
  v28 = sub_237EC3B18(v27, v52);
  swift_release();
  swift_getKeyPath();
  v54 = v28;
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F20();
  swift_release();
  swift_retain();
  swift_release();
  sub_237E32F44();
  sub_237EE2640();
  swift_release();
  v29 = v58;
  v30 = v59;
  v31 = v60;
  v33 = v62;
  v32 = v63;
  LOBYTE(v23) = v61;

  swift_release();
  sub_237E20A7C(v29, v30, v31, v23);

  v34 = swift_retain();
  v35 = sub_237EC3B18(v34, v52);
  swift_release();
  swift_getKeyPath();
  v55 = v35;
  sub_237EE1F20();
  swift_release();
  swift_beginAccess();
  LODWORD(v12) = *(unsigned __int8 *)(v35 + 16);
  swift_release();
  if ((_DWORD)v12 == 1)
  {
    sub_237EE2730();
    v36 = sub_237EE273C();
    swift_release();
  }
  else
  {
    v36 = sub_237EE270C();
  }
  v37 = sub_237EE252C();
  v39 = (uint64_t)v48;
  v38 = v49;
  v40 = v53;
  v41 = v50;
  (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v48, v53, v50);
  v42 = v39 + *(int *)(v47 + 36);
  *(_QWORD *)v42 = v36;
  *(_BYTE *)(v42 + 8) = v37;
  (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v41);
  return sub_237E21FC0(v39, v51, &qword_256898800);
}

uint64_t sub_237E2F5FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568987F8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898800);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_237E2F158(*(_BYTE *)(v0 + 8), (uint64_t)v6);
  sub_237E22004((uint64_t)v6, (uint64_t)v3, &qword_256898800);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898808);
  sub_237E32D94();
  sub_237E32E64();
  sub_237EE24B4();
  return sub_237E2209C((uint64_t)v6, &qword_256898800);
}

uint64_t sub_237E2F72C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v49 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  MEMORY[0x24BDAC7A8](v2);
  v44 = (uint64_t)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898848);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898850);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898858);
  MEMORY[0x24BDAC7A8](v43);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898860);
  MEMORY[0x24BDAC7A8](v46);
  v45 = (uint64_t)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898868);
  MEMORY[0x24BDAC7A8](v47);
  v48 = (uint64_t)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = sub_237EE23F4();
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 1;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898870);
  sub_237E2FC6C((uint64_t *)v1, &v6[*(int *)(v14 + 44)]);
  v15 = *(_BYTE *)(v1 + 8);
  v16 = swift_retain();
  v17 = sub_237EC3B18(v16, v15);
  swift_release();
  swift_getKeyPath();
  v52 = v17;
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F20();
  swift_release();
  swift_beginAccess();
  v18 = *(unsigned __int8 *)(v17 + 16);
  swift_release();
  if (v18 == 1)
    v19 = sub_237EE2718();
  else
    v19 = sub_237EE270C();
  v20 = v19;
  v21 = sub_237EE252C();
  sub_237E22004((uint64_t)v6, (uint64_t)v9, &qword_256898848);
  v22 = &v9[*(int *)(v7 + 36)];
  *(_QWORD *)v22 = v20;
  v22[8] = v21;
  sub_237E2209C((uint64_t)v6, &qword_256898848);
  v23 = sub_237EE2940();
  v24 = swift_retain();
  v25 = sub_237EC3B18(v24, v15);
  swift_release();
  swift_getKeyPath();
  v51 = v25;
  sub_237EE1F20();
  swift_release();
  v26 = v25 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__alarmTime;
  swift_beginAccess();
  v27 = v44;
  sub_237E22004(v26, v44, &qword_25689C140);
  swift_release();
  v28 = (uint64_t *)&v11[*(int *)(v43 + 36)];
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898878);
  sub_237E22004(v27, (uint64_t)v28 + *(int *)(v29 + 36), &qword_25689C140);
  *v28 = v23;
  sub_237E22004((uint64_t)v9, (uint64_t)v11, &qword_256898850);
  sub_237E2209C(v27, &qword_25689C140);
  sub_237E2209C((uint64_t)v9, &qword_256898850);
  v30 = sub_237EE2940();
  v31 = swift_retain();
  v32 = sub_237EC3B18(v31, v15);
  swift_release();
  swift_getKeyPath();
  v50 = v32;
  sub_237EE1F20();
  swift_release();
  v33 = *(_QWORD *)(v32 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__complicationForegroundColor);
  swift_retain();
  swift_release();
  v34 = v45;
  sub_237E22004((uint64_t)v11, v45, &qword_256898858);
  v35 = (uint64_t *)(v34 + *(int *)(v46 + 36));
  *v35 = v30;
  v35[1] = v33;
  sub_237E2209C((uint64_t)v11, &qword_256898858);
  v36 = sub_237EE2940();
  v37 = swift_retain();
  v38 = sub_237EC3B18(v37, v15);
  swift_release();
  swift_getKeyPath();
  v50 = v38;
  sub_237EE1F20();
  swift_release();
  v39 = *(_QWORD *)(v38 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__complicationTintColor);
  swift_retain();
  swift_release();
  v40 = v48;
  sub_237E22004(v34, v48, &qword_256898860);
  v41 = (uint64_t *)(v40 + *(int *)(v47 + 36));
  *v41 = v36;
  v41[1] = v39;
  sub_237E2209C(v34, &qword_256898860);
  return sub_237E21FC0(v40, v49, &qword_256898868);
}

uint64_t sub_237E2FC6C@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(char *, uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t KeyPath;
  uint64_t *v106;
  char *v107;
  uint64_t v108;
  char v109;
  int *v110;
  double v111;
  int *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  void (*v118)(char *, uint64_t, uint64_t);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  int v124;
  int v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  void (*v130)(char *, uint64_t);
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  double v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  int v157;
  uint64_t v158;
  int v159;
  char *v160;
  void (*v161)(_QWORD, _QWORD, _QWORD);
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t *v165;
  char *v166;
  uint64_t v167;
  void (*v168)(char *, char *, uint64_t);
  uint64_t v169;
  uint64_t *v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  int v176;
  int v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  void (*v182)(char *, uint64_t);
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  double v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char v196;
  uint64_t *v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char v208;
  double v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  int v222;
  uint64_t v223;
  int v224;
  int *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t *v230;
  char *v231;
  uint64_t v232;
  void (*v233)(char *, char *, uint64_t);
  uint64_t v234;
  uint64_t v235;
  uint64_t *v236;
  char *v237;
  int v238;
  int v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  void (*v243)(uint64_t, uint64_t);
  uint64_t v244;
  char *v245;
  uint64_t v246;
  uint64_t *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  _QWORD *v257;
  uint64_t v258;
  char *v259;
  char *v260;
  uint64_t v261;
  void (*v262)(char *, char *, uint64_t);
  char *v263;
  uint64_t v264;
  void (*v265)(char *, char *, uint64_t);
  uint64_t v266;
  uint64_t v267;
  char *v268;
  char *v269;
  int *v270;
  char *v271;
  char *v272;
  void (*v273)(char *, uint64_t);
  void (*v274)(char *, uint64_t);
  uint64_t v276;
  uint64_t v277;
  char *v278;
  char *v279;
  uint64_t v280;
  uint64_t v281;
  int *v282;
  uint64_t v283;
  uint64_t v284;
  char *v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  char *v289;
  uint64_t v290;
  uint64_t v291;
  char *v292;
  uint64_t *v293;
  void (*v294)(char *, uint64_t, uint64_t);
  uint64_t v295;
  char *v296;
  uint64_t v297;
  char *v298;
  char *v299;
  uint64_t v300;
  uint64_t v301;
  char *v302;
  uint64_t v303;
  uint64_t *v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  char *v309;
  char *v310;
  uint64_t v311;
  char *v312;
  uint64_t v313;
  uint64_t v314;
  char *v315;
  char *v316;
  uint64_t v317;
  char *v318;
  uint64_t *v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  _QWORD *v324;
  int *v325;
  uint64_t *v326;
  void (*v327)(char *, uint64_t);
  uint64_t v328;
  uint64_t *v329;
  char *v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  char *v334;
  uint64_t v335;
  char *v336;
  uint64_t v337;
  char *v338;
  uint64_t v339;
  uint64_t *v340;
  int v341;
  uint64_t v342;
  uint64_t v343;
  char *v344;
  uint64_t v345;
  char *v346;
  uint64_t v347;
  uint64_t v348;
  char *v349;
  _QWORD *v350;
  uint64_t v351;
  char *v352;
  uint64_t v353;
  __int128 v354;
  uint64_t v355;
  __int128 v356;
  __int128 v357;
  uint64_t v358;
  __int128 v359;

  v318 = a2;
  v277 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898880);
  MEMORY[0x24BDAC7A8](v277);
  v278 = (char *)&v276 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v280 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898888);
  MEMORY[0x24BDAC7A8](v280);
  v281 = (uint64_t)&v276 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v307 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898890);
  v306 = *(_QWORD *)(v307 - 8);
  MEMORY[0x24BDAC7A8](v307);
  v279 = (char *)&v276 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  MEMORY[0x24BDAC7A8](v6);
  v305 = (uint64_t)&v276 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898898);
  MEMORY[0x24BDAC7A8](v8);
  v317 = (uint64_t)&v276 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v339 = (uint64_t)&v276 - v11;
  v348 = sub_237EE24F0();
  MEMORY[0x24BDAC7A8](v348);
  v334 = (char *)&v276 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v332 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568988A0);
  MEMORY[0x24BDAC7A8](v332);
  v312 = (char *)&v276 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v299 = (char *)&v276 - v15;
  v333 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568988A8);
  MEMORY[0x24BDAC7A8](v333);
  v309 = (char *)&v276 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v308 = (uint64_t)&v276 - v18;
  MEMORY[0x24BDAC7A8](v19);
  v311 = (uint64_t)&v276 - v20;
  MEMORY[0x24BDAC7A8](v21);
  v314 = (uint64_t)&v276 - v22;
  MEMORY[0x24BDAC7A8](v23);
  v296 = (char *)&v276 - v24;
  MEMORY[0x24BDAC7A8](v25);
  v295 = (uint64_t)&v276 - v26;
  MEMORY[0x24BDAC7A8](v27);
  v297 = (uint64_t)&v276 - v28;
  MEMORY[0x24BDAC7A8](v29);
  v300 = (uint64_t)&v276 - v30;
  v335 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568988B0);
  MEMORY[0x24BDAC7A8](v335);
  v313 = (uint64_t)&v276 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v32);
  v301 = (uint64_t)&v276 - v33;
  v337 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568988B8);
  v350 = *(_QWORD **)(v337 - 8);
  MEMORY[0x24BDAC7A8](v337);
  v316 = (char *)&v276 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v35);
  v336 = (char *)&v276 - v36;
  MEMORY[0x24BDAC7A8](v37);
  v310 = (char *)&v276 - v38;
  MEMORY[0x24BDAC7A8](v39);
  v315 = (char *)&v276 - v40;
  MEMORY[0x24BDAC7A8](v41);
  v298 = (char *)&v276 - v42;
  MEMORY[0x24BDAC7A8](v43);
  v349 = (char *)&v276 - v44;
  v347 = sub_237EE2238();
  v321 = *(_QWORD *)(v347 - 8);
  MEMORY[0x24BDAC7A8](v347);
  v346 = (char *)&v276 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568988C0);
  MEMORY[0x24BDAC7A8](v46);
  v322 = (uint64_t)&v276 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  v323 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568988C8);
  MEMORY[0x24BDAC7A8](v323);
  v292 = (char *)&v276 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v343 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568981A8);
  MEMORY[0x24BDAC7A8](v343);
  v304 = (uint64_t *)((char *)&v276 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v50);
  v329 = (uint64_t *)((char *)&v276 - v51);
  MEMORY[0x24BDAC7A8](v52);
  v293 = (uint64_t *)((char *)&v276 - v53);
  MEMORY[0x24BDAC7A8](v54);
  v326 = (uint64_t *)((char *)&v276 - v55);
  MEMORY[0x24BDAC7A8](v56);
  v352 = (char *)&v276 - v57;
  MEMORY[0x24BDAC7A8](v58);
  v327 = (void (*)(char *, uint64_t))((char *)&v276 - v59);
  v353 = sub_237EE2298();
  v286 = *(_QWORD *)(v353 - 8);
  MEMORY[0x24BDAC7A8](v353);
  v328 = (uint64_t)&v276 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v61);
  v324 = (uint64_t *)((char *)&v276 - v62);
  MEMORY[0x24BDAC7A8](v63);
  v338 = (char *)&v276 - v64;
  v351 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568988D0);
  MEMORY[0x24BDAC7A8](v351);
  v340 = (uint64_t *)((char *)&v276 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0));
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568988D8);
  MEMORY[0x24BDAC7A8](v66);
  v68 = (char *)&v276 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = sub_237EE1B0C();
  v70 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v72 = (char *)&v276 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  v282 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2568988E0);
  MEMORY[0x24BDAC7A8](v282);
  v74 = (char *)&v276 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  v325 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2568988E8);
  MEMORY[0x24BDAC7A8](v325);
  v320 = (uint64_t)&v276 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  v283 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568988F0);
  MEMORY[0x24BDAC7A8](v283);
  v285 = (char *)&v276 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v77);
  v284 = (uint64_t)&v276 - v78;
  MEMORY[0x24BDAC7A8](v79);
  v287 = (uint64_t)&v276 - v80;
  MEMORY[0x24BDAC7A8](v81);
  v288 = (uint64_t)&v276 - v82;
  v290 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568988F8);
  MEMORY[0x24BDAC7A8](v290);
  v291 = (uint64_t)&v276 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  v331 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898900);
  v345 = *(_QWORD *)(v331 - 8);
  MEMORY[0x24BDAC7A8](v331);
  v330 = (char *)&v276 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v85);
  v289 = (char *)&v276 - v86;
  MEMORY[0x24BDAC7A8](v87);
  v344 = (char *)&v276 - v88;
  v89 = *a1;
  v319 = a1;
  LODWORD(a1) = *((unsigned __int8 *)a1 + 8);
  v90 = swift_retain();
  v341 = (int)a1;
  v91 = sub_237EC3B18(v90, (char)a1);
  v342 = v89;
  swift_release();
  swift_getKeyPath();
  v358 = v91;
  v92 = sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F20();
  swift_release();
  v93 = v91 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__dateText;
  swift_beginAccess();
  v94 = *(void (**)(char *, uint64_t, uint64_t))(v70 + 16);
  v303 = v69;
  v294 = v94;
  v94(v72, v93, v69);
  swift_release();
  v302 = v72;
  v95 = sub_237EE25EC();
  v97 = v96;
  v99 = v98;
  v101 = v100 & 1;
  v102 = *MEMORY[0x24BDF1D90];
  v103 = sub_237EE25B0();
  v104 = *(_QWORD *)(v103 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v104 + 104))(v68, v102, v103);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v104 + 56))(v68, 0, 1, v103);
  KeyPath = swift_getKeyPath();
  v106 = v340;
  sub_237E22004((uint64_t)v68, (uint64_t)v340 + *(int *)(v351 + 28), &qword_2568988D8);
  *v106 = KeyPath;
  sub_237E22004((uint64_t)v106, (uint64_t)&v74[v282[9]], &qword_2568988D0);
  *(_QWORD *)v74 = v95;
  *((_QWORD *)v74 + 1) = v97;
  v74[16] = v101;
  *((_QWORD *)v74 + 3) = v99;
  sub_237E21EAC(v95, v97, v101);
  swift_bridgeObjectRetain();
  sub_237E2209C((uint64_t)v106, &qword_2568988D0);
  sub_237E2209C((uint64_t)v68, &qword_2568988D8);
  v107 = (char *)v92;
  v108 = v320;
  sub_237E21F3C(v95, v97, v101);
  swift_bridgeObjectRelease();
  v351 = type metadata accessor for DigitalClockViewModel();
  v340 = (uint64_t *)v107;
  *(_QWORD *)v108 = sub_237EE20B8();
  *(_BYTE *)(v108 + 8) = v109 & 1;
  sub_237E21FC0((uint64_t)v74, v108 + v325[9], &qword_2568988E0);
  v110 = (int *)objc_opt_self();
  if (qword_256897AA8 != -1)
    swift_once();
  v111 = *MEMORY[0x24BEBB600];
  v325 = v110;
  v112 = (int *)objc_msgSend(v110, sel_systemFontOfSize_weight_, *(double *)&qword_25689DEC8, v111);
  v113 = (uint64_t)v338;
  v282 = v112;
  v114 = sub_237E3A7C0((uint64_t)v338, v112, 1);
  v115 = v343;
  v116 = (char *)v327 + *(int *)(v343 + 48);
  *(_QWORD *)v327 = v114;
  v117 = v286;
  v118 = *(void (**)(char *, uint64_t, uint64_t))(v286 + 16);
  v119 = v353;
  v118(v116, v113, v353);
  v120 = v322;
  sub_237E22004(v108, v322, &qword_2568988E8);
  v121 = *(int *)(v115 + 48);
  v122 = v352;
  v123 = &v352[v121];
  *(_QWORD *)v352 = v114;
  v352 = (char *)v118;
  v118(&v122[v121], (uint64_t)v116, v119);
  swift_retain_n();
  v124 = sub_237EE2280();
  v125 = sub_237EE228C();
  if (!v124)
  {
    if (!v125)
    {
      v124 = 0;
      goto LABEL_9;
    }
LABEL_7:
    v124 |= v125;
    goto LABEL_9;
  }
  if ((v125 & ~v124) != 0)
    goto LABEL_7;
LABEL_9:
  v126 = (uint64_t)v292;
  v127 = &v292[*(int *)(v323 + 36)];
  v128 = v353;
  ((void (*)(char *, char *, uint64_t))v352)(v127, v116, v353);
  v129 = v348;
  *(_QWORD *)&v127[*(int *)(v348 + 20)] = v114;
  *(_DWORD *)&v127[*(int *)(v129 + 24)] = v124;
  sub_237E21FC0(v120, v126, &qword_2568988C0);
  v130 = *(void (**)(char *, uint64_t))(v117 + 8);
  v130(v123, v128);
  v131 = swift_getKeyPath();
  v132 = v346;
  sub_237EE222C();
  v133 = (uint64_t)v285;
  v134 = (uint64_t *)&v285[*(int *)(v283 + 36)];
  v322 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898030);
  v135 = (char *)v134 + *(int *)(v322 + 28);
  v136 = v321;
  v137 = v347;
  v323 = *(_QWORD *)(v321 + 16);
  ((void (*)(char *, char *, uint64_t))v323)(v135, v132, v347);
  *v134 = v131;
  sub_237E22004(v126, v133, &qword_2568988C8);
  v321 = *(_QWORD *)(v136 + 8);
  ((void (*)(char *, uint64_t))v321)(v132, v137);
  sub_237E2209C(v126, &qword_2568988C8);
  sub_237E2209C((uint64_t)v327, &qword_2568981A8);
  v138 = v284;
  sub_237E21FC0(v133, v284, &qword_2568988F0);
  v139 = v138;
  v140 = v287;
  sub_237E21FC0(v139, v287, &qword_2568988F0);
  swift_release();
  v327 = v130;
  v130(v338, v128);
  v141 = v140;
  v142 = v288;
  sub_237E21FC0(v141, v288, &qword_2568988F0);

  sub_237E2209C(v320, &qword_2568988E8);
  v359 = *((_OWORD *)v319 + 2);
  v357 = *((_OWORD *)v319 + 2);
  v338 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_256898908);
  sub_237EE27D8();
  v143 = -*(double *)&v356;
  v144 = v291;
  sub_237E22004(v142, v291, &qword_2568988F0);
  v145 = v144 + *(int *)(v290 + 36);
  *(_QWORD *)v145 = 0;
  *(double *)(v145 + 8) = v143;
  sub_237E2209C(v142, &qword_2568988F0);
  v146 = swift_retain();
  LOBYTE(v136) = v341;
  sub_237EC3B18(v146, v341);
  swift_release();
  sub_237E3305C();
  v147 = v289;
  sub_237EE2640();
  swift_release();
  sub_237E2209C(v144, &qword_2568988F8);
  (*(void (**)(char *, char *, uint64_t))(v345 + 32))(v344, v147, v331);
  v148 = swift_retain();
  v149 = sub_237EC3B18(v148, v136);
  swift_release();
  swift_getKeyPath();
  *(_QWORD *)&v357 = v149;
  sub_237EE1F20();
  swift_release();
  v150 = *(_QWORD *)(v149 + 144);
  v151 = *(_QWORD *)(v149 + 152);
  swift_bridgeObjectRetain();
  swift_release();
  *(_QWORD *)&v357 = v150;
  *((_QWORD *)&v357 + 1) = v151;
  sub_237E33174();
  v152 = sub_237EE25F8();
  v154 = v153;
  v156 = v155;
  LODWORD(v291) = v157;
  LODWORD(v286) = v157 & 1;
  v158 = sub_237EE20B8();
  LODWORD(v290) = v159;
  v160 = (char *)objc_msgSend(v325, sel_systemFontOfSize_weight_, *(double *)&qword_25689DEC8, v111);
  v161 = (void (*)(_QWORD, _QWORD, _QWORD))v324;
  v292 = v160;
  v162 = sub_237E3A7C0((uint64_t)v324, v160, 1);
  v163 = v343;
  v164 = *(int *)(v343 + 48);
  v165 = v326;
  v166 = (char *)v326 + v164;
  *v326 = v162;
  v168 = (void (*)(char *, char *, uint64_t))v352;
  v167 = v353;
  ((void (*)(char *, _QWORD, uint64_t))v352)((char *)v165 + v164, v161, v353);
  v169 = *(int *)(v163 + 48);
  v170 = v293;
  v171 = (char *)v293 + v169;
  *v293 = v162;
  v168((char *)v170 + v169, v166, v167);
  v320 = v158;
  swift_retain();
  swift_retain_n();
  v172 = v152;
  v173 = v152;
  v174 = v154;
  sub_237E21EAC(v173, v154, v286);
  v175 = v156;
  swift_bridgeObjectRetain();
  v176 = sub_237EE2280();
  v177 = sub_237EE228C();
  if (!v176)
  {
    if (!v177)
    {
      v176 = 0;
      goto LABEL_15;
    }
LABEL_13:
    v176 |= v177;
    goto LABEL_15;
  }
  if ((v177 & ~v176) != 0)
    goto LABEL_13;
LABEL_15:
  v178 = (uint64_t)v334;
  v179 = v353;
  ((void (*)(char *, char *, uint64_t))v352)(v334, v166, v353);
  v180 = v348;
  *(_QWORD *)(v178 + *(int *)(v348 + 20)) = v162;
  *(_DWORD *)(v178 + *(int *)(v180 + 24)) = v176;
  v181 = (uint64_t)v299;
  sub_237E331B8(v178, (uint64_t)&v299[*(int *)(v332 + 36)]);
  *(_QWORD *)v181 = v320;
  *(_BYTE *)(v181 + 8) = v290 & 1;
  v288 = v172;
  *(_QWORD *)(v181 + 16) = v172;
  *(_QWORD *)(v181 + 24) = v174;
  v287 = v174;
  LODWORD(v293) = v291 & 1;
  *(_BYTE *)(v181 + 32) = v291 & 1;
  v289 = v175;
  *(_QWORD *)(v181 + 40) = v175;
  sub_237E331FC(v178);
  v182 = (void (*)(_QWORD *, uint64_t))v327;
  v327(v171, v179);
  v183 = swift_getKeyPath();
  v184 = v346;
  sub_237EE222C();
  v185 = (uint64_t)v296;
  v186 = (uint64_t *)&v296[*(int *)(v333 + 36)];
  v187 = v347;
  ((void (*)(char *, char *, uint64_t))v323)((char *)v186 + *(int *)(v322 + 28), v184, v347);
  *v186 = v183;
  sub_237E22004(v181, v185, &qword_2568988A0);
  ((void (*)(char *, uint64_t))v321)(v184, v187);
  sub_237E2209C(v181, &qword_2568988A0);
  sub_237E2209C((uint64_t)v326, &qword_2568981A8);
  v188 = v295;
  sub_237E21FC0(v185, v295, &qword_2568988A8);
  v189 = v188;
  v190 = v297;
  sub_237E21FC0(v189, v297, &qword_2568988A8);
  swift_release();
  v182(v324, v179);
  v191 = v300;
  sub_237E21FC0(v190, v300, &qword_2568988A8);
  swift_release();

  sub_237E21F3C(v288, v287, (char)v293);
  swift_bridgeObjectRelease();
  v357 = v359;
  sub_237EE27D8();
  v192 = -*(double *)&v356;
  v193 = v301;
  sub_237E22004(v191, v301, &qword_2568988A8);
  v194 = v193 + *(int *)(v335 + 36);
  *(_QWORD *)v194 = 0;
  *(double *)(v194 + 8) = v192;
  sub_237E2209C(v191, &qword_2568988A8);
  v195 = swift_retain();
  v196 = v341;
  sub_237EC3B18(v195, v341);
  swift_release();
  v197 = (uint64_t *)sub_237E33238();
  v198 = v298;
  v326 = v197;
  sub_237EE2640();
  swift_release();
  sub_237E2209C(v193, &qword_2568988B0);
  v324 = (_QWORD *)v350[4];
  ((void (*)(char *, char *, uint64_t))v324)(v349, v198, v337);
  v199 = swift_retain();
  v200 = sub_237EC3B18(v199, v196);
  swift_release();
  swift_getKeyPath();
  *(_QWORD *)&v357 = v200;
  sub_237EE1F20();
  swift_release();
  v201 = v200 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__alarmTime;
  swift_beginAccess();
  v202 = v305;
  sub_237E22004(v201, v305, &qword_25689C140);
  swift_release();
  v203 = sub_237EE1D70();
  v204 = 1;
  LODWORD(v200) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v203 - 8) + 48))(v202, 1, v203);
  sub_237E2209C(v202, &qword_25689C140);
  v205 = v307;
  v206 = v306;
  if ((_DWORD)v200 != 1)
  {
    v207 = (uint64_t)v278;
    sub_237E31B3C((uint64_t)&v278[*(int *)(v277 + 36)]);
    *(_QWORD *)v207 = sub_237EE20B8();
    *(_BYTE *)(v207 + 8) = v208 & 1;
    v356 = v359;
    sub_237EE27D8();
    v209 = *(double *)&v354 + -4.0;
    v210 = v281;
    sub_237E22004(v207, v281, &qword_256898880);
    v211 = v210 + *(int *)(v280 + 36);
    *(_QWORD *)v211 = 0;
    *(double *)(v211 + 8) = v209;
    sub_237E2209C(v207, &qword_256898880);
    v212 = swift_retain();
    sub_237EC3B18(v212, v196);
    swift_release();
    sub_237E33454();
    v213 = v279;
    sub_237EE2640();
    swift_release();
    sub_237E2209C(v210, &qword_256898888);
    (*(void (**)(uint64_t, char *, uint64_t))(v206 + 32))(v339, v213, v205);
    v204 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v206 + 56))(v339, v204, 1, v205);
  v214 = swift_retain();
  v215 = sub_237EC3B18(v214, v196);
  swift_release();
  swift_getKeyPath();
  *(_QWORD *)&v356 = v215;
  sub_237EE1F20();
  swift_release();
  v216 = v215 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__alarmText;
  swift_beginAccess();
  v294(v302, v216, v303);
  swift_release();
  v217 = sub_237EE25EC();
  v219 = v218;
  v221 = v220;
  LODWORD(v320) = v222;
  LODWORD(v305) = v222 & 1;
  v223 = sub_237EE20B8();
  LODWORD(v319) = v224;
  v225 = (int *)objc_msgSend(v325, sel_systemFontOfSize_weight_, *(double *)&qword_25689DEC8, v111);
  v226 = v328;
  v325 = v225;
  v227 = sub_237E3A7C0(v328, v225, 1);
  v228 = v343;
  v229 = *(int *)(v343 + 48);
  v230 = v329;
  v231 = (char *)v329 + v229;
  *v329 = v227;
  v232 = v226;
  v233 = (void (*)(char *, char *, uint64_t))v352;
  v234 = v353;
  ((void (*)(char *, uint64_t, uint64_t))v352)((char *)v230 + v229, v232, v353);
  v235 = *(int *)(v228 + 48);
  v236 = v304;
  v237 = (char *)v304 + v235;
  *v304 = v227;
  v233((char *)v236 + v235, v231, v234);
  v343 = v223;
  swift_retain();
  swift_retain_n();
  sub_237E21EAC(v217, v219, v305);
  swift_bridgeObjectRetain();
  v238 = sub_237EE2280();
  v239 = sub_237EE228C();
  if (v238)
  {
    if ((v239 & ~v238) == 0)
      goto LABEL_23;
  }
  else if (!v239)
  {
    v238 = 0;
    goto LABEL_23;
  }
  v238 |= v239;
LABEL_23:
  v240 = (uint64_t)v334;
  ((void (*)(char *, char *, uint64_t))v352)(v334, v231, v234);
  v241 = v348;
  *(_QWORD *)(v240 + *(int *)(v348 + 20)) = v227;
  *(_DWORD *)(v240 + *(int *)(v241 + 24)) = v238;
  v242 = (uint64_t)v312;
  sub_237E331B8(v240, (uint64_t)&v312[*(int *)(v332 + 36)]);
  *(_QWORD *)v242 = v343;
  *(_BYTE *)(v242 + 8) = v319 & 1;
  *(_QWORD *)(v242 + 16) = v217;
  *(_QWORD *)(v242 + 24) = v219;
  v307 = v219;
  LODWORD(v352) = v320 & 1;
  *(_BYTE *)(v242 + 32) = v320 & 1;
  v306 = v221;
  *(_QWORD *)(v242 + 40) = v221;
  sub_237E331FC(v240);
  v348 = v217;
  v243 = (void (*)(uint64_t, uint64_t))v327;
  v327(v237, v234);
  v244 = swift_getKeyPath();
  v245 = v346;
  sub_237EE222C();
  v246 = (uint64_t)v309;
  v247 = (uint64_t *)&v309[*(int *)(v333 + 36)];
  v248 = v234;
  v249 = v347;
  ((void (*)(char *, char *, uint64_t))v323)((char *)v247 + *(int *)(v322 + 28), v245, v347);
  *v247 = v244;
  sub_237E22004(v242, v246, &qword_2568988A0);
  ((void (*)(char *, uint64_t))v321)(v245, v249);
  sub_237E2209C(v242, &qword_2568988A0);
  sub_237E2209C((uint64_t)v329, &qword_2568981A8);
  v250 = v308;
  sub_237E21FC0(v246, v308, &qword_2568988A8);
  v251 = v250;
  v252 = v311;
  sub_237E21FC0(v251, v311, &qword_2568988A8);
  swift_release();
  v243(v328, v248);
  v253 = v252;
  v254 = v314;
  sub_237E21FC0(v253, v314, &qword_2568988A8);
  swift_release();

  sub_237E21F3C(v348, v307, (char)v352);
  swift_bridgeObjectRelease();
  v354 = v359;
  sub_237EE27D8();
  v255 = v355;
  v256 = v313;
  sub_237E22004(v254, v313, &qword_2568988A8);
  v257 = (_QWORD *)(v256 + *(int *)(v335 + 36));
  *v257 = 0;
  v257[1] = v255;
  sub_237E2209C(v254, &qword_2568988A8);
  v258 = swift_retain();
  sub_237EC3B18(v258, v341);
  swift_release();
  v259 = v310;
  sub_237EE2640();
  swift_release();
  sub_237E2209C(v256, &qword_2568988B0);
  v260 = v315;
  v261 = v337;
  ((void (*)(char *, char *, uint64_t))v324)(v315, v259, v337);
  v262 = *(void (**)(char *, char *, uint64_t))(v345 + 16);
  v263 = v330;
  v264 = v331;
  v262(v330, v344, v331);
  v265 = (void (*)(char *, char *, uint64_t))v350[2];
  v265(v336, v349, v261);
  v266 = v339;
  v267 = v317;
  sub_237E22004(v339, v317, &qword_256898898);
  v268 = v316;
  v265(v316, v260, v261);
  v269 = v318;
  v262(v318, v263, v264);
  v270 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256898970);
  v271 = v336;
  v265(&v269[v270[12]], v336, v261);
  v272 = (uint64_t)&v269[v270[16]];
  *(_QWORD *)v272 = 0;
  *(_BYTE *)(v272 + 8) = 1;
  sub_237E22004(v267, (uint64_t)&v269[v270[20]], &qword_256898898);
  v265(&v269[v270[24]], v268, v261);
  v273 = (void (*)(char *, uint64_t))v350[1];
  v273(v260, v261);
  sub_237E2209C(v266, &qword_256898898);
  v273(v349, v261);
  v274 = *(void (**)(char *, uint64_t))(v345 + 8);
  v274(v344, v264);
  v273(v268, v261);
  sub_237E2209C(v267, &qword_256898898);
  v273(v271, v261);
  return ((uint64_t (*)(char *, uint64_t))v274)(v330, v264);
}

uint64_t sub_237E31B3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t KeyPath;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v22 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898988);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (uint64_t *)((char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_237EE27A8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898990);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_bridgeObjectRetain();
  v12 = sub_237EE2778();
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BDF40B0], v5);
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v4 + *(int *)(v2 + 28), v8, v5);
  *v4 = KeyPath;
  sub_237E22004((uint64_t)v4, (uint64_t)v11 + *(int *)(v9 + 36), &qword_256898988);
  *v11 = v12;
  swift_retain();
  sub_237E2209C((uint64_t)v4, &qword_256898988);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  v14 = *(_BYTE *)(v1 + 8);
  v15 = swift_retain();
  v16 = sub_237EC3B18(v15, v14);
  swift_release();
  swift_getKeyPath();
  v23 = v16;
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F20();
  swift_release();
  v17 = *(_QWORD *)(v16 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__complicationSecondaryTintColor);
  swift_retain();
  swift_release();
  if (!v17)
  {
    v18 = swift_retain();
    v19 = sub_237EC3B18(v18, v14);
    swift_release();
    swift_getKeyPath();
    v23 = v19;
    sub_237EE1F20();
    swift_release();
    v17 = *(_QWORD *)(v19 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__complicationTintColor);
    swift_retain();
    swift_release();
  }
  v20 = v22;
  sub_237E22004((uint64_t)v11, v22, &qword_256898990);
  *(_QWORD *)(v20 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256898998) + 36)) = v17;
  return sub_237E2209C((uint64_t)v11, &qword_256898990);
}

uint64_t sub_237E31E2C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_BYTE *)(v0 + 8);
  v2 = swift_retain();
  v3 = sub_237EC3B18(v2, v1);
  swift_release();
  return v3;
}

uint64_t sub_237E31E6C@<X0>(uint64_t a1@<X8>)
{
  return sub_237E2F72C(a1);
}

uint64_t sub_237E31EA4@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  void (*v15)(_BYTE *, _BYTE *, uint64_t);
  void (*v16)(_BYTE *, uint64_t);
  _BYTE v18[16];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *(_QWORD *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256898A88);
  sub_237EE21B4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256898A90);
  sub_237EE21B4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256898A70);
  sub_237EE21B4();
  swift_getTupleTypeMetadata2();
  v6 = sub_237EE2958();
  MEMORY[0x23B8271D0](MEMORY[0x24BDF5428], v6);
  v7 = sub_237EE2820();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v11);
  v13 = &v18[-v12];
  v14 = *(_QWORD *)(a1 + 24);
  v19 = v5;
  v20 = v14;
  v21 = v2;
  sub_237EE2394();
  sub_237EE2814();
  MEMORY[0x23B8271D0](MEMORY[0x24BDF4498], v7);
  v15 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16);
  v15(v13, v10, v7);
  v16 = *(void (**)(_BYTE *, uint64_t))(v8 + 8);
  v16(v10, v7);
  v15(a2, v13, v7);
  return ((uint64_t (*)(_BYTE *, uint64_t))v16)(v13, v7);
}

uint64_t sub_237E3206C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, uint64_t, uint64_t);
  void (*v35)(uint64_t, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[2];
  uint64_t v49;
  char v50;
  uint64_t v51[2];
  _QWORD v52[2];
  _QWORD v53[2];
  _QWORD v54[3];

  v45 = a3;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256898A88);
  v5 = sub_237EE21B4();
  v40 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v37 - v6;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256898A90);
  v8 = sub_237EE21B4();
  v41 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v39 = (char *)&v37 - v9;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256898A70);
  v42 = v8;
  v10 = sub_237EE21B4();
  v43 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v38 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v44 = (char *)&v37 - v13;
  type metadata accessor for Complication(0, a1, a2, v14);
  v15 = (void *)objc_opt_self();
  if (qword_256897AA8 != -1)
    swift_once();
  v16 = objc_msgSend(v15, sel_systemFontOfSize_weight_, *(double *)&qword_25689DEC8, *MEMORY[0x24BEBB600]);
  sub_237EE2574();
  sub_237EE267C();
  swift_release();
  v17 = sub_237E31E2C();
  swift_getKeyPath();
  v51[0] = v17;
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F20();
  swift_release();
  v18 = v7;
  v19 = *(_QWORD *)(v17 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__complicationForegroundColor);
  swift_retain();
  swift_release();
  v51[0] = v19;
  v20 = sub_237E22690(&qword_256898A98, &qword_256898A88, MEMORY[0x24BDF1028]);
  v54[0] = a2;
  v54[1] = v20;
  v21 = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v5, v54);
  v22 = v39;
  sub_237EE2670();
  swift_release();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v18, v5);
  sub_237EE2940();
  v23 = sub_237E31E2C();
  swift_getKeyPath();
  v51[0] = v23;
  sub_237EE1F20();
  swift_release();
  v24 = *(_QWORD *)(v23 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__complicationForegroundColor);
  swift_retain();
  swift_release();
  v51[0] = v24;
  v25 = sub_237E22690(&qword_256898AA0, &qword_256898A90, MEMORY[0x24BDF0710]);
  v53[0] = v21;
  v53[1] = v25;
  v26 = MEMORY[0x24BDED308];
  v27 = v42;
  v28 = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v42, v53);
  sub_237E3410C();
  v29 = (uint64_t)v38;
  sub_237EE26A0();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v22, v27);
  v30 = sub_237E22690(&qword_256898A68, &qword_256898A70, MEMORY[0x24BDEEC10]);
  v52[0] = v28;
  v52[1] = v30;
  v31 = MEMORY[0x23B8271D0](v26, v10, v52);
  v32 = v43;
  v33 = v44;
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v34(v44, v29, v10);
  v35 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
  v35(v29, v10);
  v34((char *)v29, (uint64_t)v33, v10);
  v49 = 0;
  v50 = 1;
  v51[0] = v29;
  v51[1] = (uint64_t)&v49;
  v48[0] = v10;
  v48[1] = MEMORY[0x24BDF4638];
  v46 = v31;
  v47 = MEMORY[0x24BDF4610];
  sub_237E2E310(v51, 2uLL, (uint64_t)v48);
  v35((uint64_t)v33, v10);
  return ((uint64_t (*)(uint64_t, uint64_t))v35)(v29, v10);
}

double sub_237E32560(uint64_t a1, char a2)
{
  double result;

  result = *(double *)&a1;
  if ((a2 & 1) != 0)
    return 0.0;
  return result;
}

uint64_t sub_237E32580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_237E334E8(a5);
}

uint64_t sub_237E325C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_237E32618(a1, a2, a3, a4, a5, a6, a7, a8, a9, MEMORY[0x24BDF44F8]);
}

uint64_t sub_237E325EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_237E32618(a1, a2, a3, a4, a5, a6, a7, a8, a9, MEMORY[0x24BDF4500]);
}

uint64_t sub_237E32618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t))
{
  return a10(a1);
}

void (*sub_237E32654(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_237EE2058();
  return sub_237E23288;
}

unint64_t sub_237E326BC()
{
  unint64_t result;

  result = qword_2568987C0;
  if (!qword_2568987C0)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE5AF4, &type metadata for GiantClock);
    atomic_store(result, (unint64_t *)&qword_2568987C0);
  }
  return result;
}

unint64_t sub_237E32700()
{
  unint64_t result;

  result = qword_2568987C8;
  if (!qword_2568987C8)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE5AA4, &type metadata for Complications);
    atomic_store(result, (unint64_t *)&qword_2568987C8);
  }
  return result;
}

uint64_t destroy for Complications()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for Complications(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Complications(uint64_t a1, uint64_t a2)
{
  char v4;

  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for Complications(uint64_t a1, uint64_t a2)
{
  char v4;

  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Complications(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Complications(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for Complications()
{
  return &type metadata for Complications;
}

uint64_t destroy for GiantClock()
{
  return swift_release();
}

uint64_t initializeWithCopy for GiantClock(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for GiantClock(uint64_t a1, uint64_t a2)
{
  char v4;

  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for GiantClock(uint64_t a1, uint64_t a2)
{
  char v4;

  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for GiantClock(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for GiantClock(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for GiantClock()
{
  return &type metadata for GiantClock;
}

void destroy for ClockAndComplicationsLayout(id *a1)
{

}

uint64_t initializeWithCopy for ClockAndComplicationsLayout(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for ClockAndComplicationsLayout(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for ClockAndComplicationsLayout(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClockAndComplicationsLayout(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClockAndComplicationsLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClockAndComplicationsLayout()
{
  return &type metadata for ClockAndComplicationsLayout;
}

uint64_t sub_237E32CB8()
{
  return sub_237E22690(&qword_2568987D8, &qword_2568987E0, MEMORY[0x24BDEC6F8]);
}

unint64_t sub_237E32CE8()
{
  unint64_t result;

  result = qword_2568987E8;
  if (!qword_2568987E8)
  {
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDEEF18], MEMORY[0x24BDEEF38]);
    atomic_store(result, (unint64_t *)&qword_2568987E8);
  }
  return result;
}

unint64_t sub_237E32D30()
{
  unint64_t result;

  result = qword_2568987F0;
  if (!qword_2568987F0)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE59DC, &type metadata for ClockAndComplicationsLayout);
    atomic_store(result, (unint64_t *)&qword_2568987F0);
  }
  return result;
}

uint64_t sub_237E32D74()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_237E32D84()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_237E32D94()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  _QWORD v5[5];

  result = qword_256898810;
  if (!qword_256898810)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256898808);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256898800);
    v3 = sub_237EE1D70();
    v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
    v5[1] = v2;
    v5[2] = v3;
    v5[3] = sub_237E32E64();
    v5[4] = sub_237E20E98(&qword_256898838, v4, MEMORY[0x24BDCE958]);
    v5[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDEBD40], v1, v5);
    atomic_store(result, (unint64_t *)&qword_256898810);
  }
  return result;
}

unint64_t sub_237E32E64()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_256898818;
  if (!qword_256898818)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256898800);
    v2[2] = &type metadata for RollingClock;
    v2[3] = type metadata accessor for RollingClockViewModel();
    v2[4] = sub_237E32F44();
    v2[5] = sub_237E20E98(&qword_256897E18, (uint64_t (*)(uint64_t))type metadata accessor for RollingClockViewModel, (uint64_t)&unk_237EE4558);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_237E22690(&qword_256898828, &qword_256898830, MEMORY[0x24BDF06D0]);
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256898818);
  }
  return result;
}

unint64_t sub_237E32F44()
{
  unint64_t result;

  result = qword_256898820;
  if (!qword_256898820)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE4F94, &type metadata for RollingClock);
    atomic_store(result, (unint64_t *)&qword_256898820);
  }
  return result;
}

uint64_t sub_237E32FB0()
{
  return sub_237EE2358();
}

uint64_t sub_237E32FD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568988D8);
  MEMORY[0x24BDAC7A8](v2);
  sub_237E22004(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_2568988D8);
  return sub_237EE2364();
}

unint64_t sub_237E3305C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256898910;
  if (!qword_256898910)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568988F8);
    v2[0] = sub_237E332BC(&qword_256898918, &qword_2568988F0, (uint64_t (*)(void))sub_237E330E0);
    v2[1] = MEMORY[0x24BDEC438];
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256898910);
  }
  return result;
}

unint64_t sub_237E330E0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256898920;
  if (!qword_256898920)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568988C8);
    v2[0] = sub_237E333CC(&qword_256898928, &qword_2568988C0, &qword_256898930, &qword_2568988E8);
    v2[1] = MEMORY[0x24BDF0B48];
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256898920);
  }
  return result;
}

unint64_t sub_237E33174()
{
  unint64_t result;

  result = qword_2542C6558;
  if (!qword_2542C6558)
  {
    result = MEMORY[0x23B8271D0](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_2542C6558);
  }
  return result;
}

uint64_t sub_237E331B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_237EE24F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_237E331FC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_237EE24F0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_237E33238()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256898938;
  if (!qword_256898938)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568988B0);
    v2[0] = sub_237E332BC(&qword_256898940, &qword_2568988A8, (uint64_t (*)(void))sub_237E33340);
    v2[1] = MEMORY[0x24BDEC438];
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256898938);
  }
  return result;
}

uint64_t sub_237E332BC(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = sub_237E22690(&qword_256898028, &qword_256898030, MEMORY[0x24BDF1028]);
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_237E33340()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256898948;
  if (!qword_256898948)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2568988A0);
    v2[0] = sub_237E333CC(&qword_256898950, &qword_256898958, &qword_256898960, &qword_256898968);
    v2[1] = MEMORY[0x24BDF0B48];
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256898948);
  }
  return result;
}

uint64_t sub_237E333CC(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = sub_237E22690(a3, a4, (uint64_t)&unk_237EE5D50);
    v9[1] = MEMORY[0x24BDF03E0];
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_237E33454()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256898978;
  if (!qword_256898978)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256898888);
    v2[0] = sub_237E22690(&qword_256898980, &qword_256898880, (uint64_t)&unk_237EE5D50);
    v2[1] = MEMORY[0x24BDEC438];
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256898978);
  }
  return result;
}

uint64_t sub_237E334E8(uint64_t a1)
{
  id *v1;
  id *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  void (*v15)(_BYTE *, uint64_t);
  _BYTE v17[8];
  char v18;

  v2 = v1;
  v4 = sub_237EE2160();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_237EE216C();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BDEC778];
  v10 = *(_QWORD *)(v8 - 8);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = &v17[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v10 + 16))(v13, a1, v8, v11);
  sub_237E20E98(qword_2568989A0, v9, MEMORY[0x24BDEC7A0]);
  sub_237EE2D24();
  sub_237EE2D48();
  v14 = sub_237EE2D3C();
  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v13, v8);
  if (v14 != 2)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (qword_256897A90 != -1)
LABEL_5:
    swift_once();
  sub_237EE2178();
  sub_237EE2970();
  v18 = 0;
  v17[0] = 0;
  sub_237EE2154();
  v15 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v15(v7, v4);
  objc_msgSend(*v2, sel_capHeight);
  sub_237EE2178();
  sub_237EE2970();
  v18 = 0;
  v17[0] = 0;
  sub_237EE2154();
  return ((uint64_t (*)(_BYTE *, uint64_t))v15)(v7, v4);
}

uint64_t sub_237E33794()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_237E3379C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_237E33814(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  v3 = (_QWORD *)a1;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 9) & (unint64_t)~v6) + *(_QWORD *)(v5 + 64) > 0x18)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    v10 = *((_BYTE *)a2 + 8);
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = v10;
    v11 = (a1 + v6 + 9) & ~v6;
    v12 = ((unint64_t)a2 + v6 + 9) & ~v6;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v13(v11, v12, v4);
  }
  return v3;
}

uint64_t sub_237E338E0(uint64_t a1, uint64_t a2)
{
  swift_release();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t sub_237E33924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v7 + 9 + a1) & ~v7;
  v9 = (v7 + 9 + a2) & ~v7;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_retain();
  v10(v8, v9, v5);
  return a1;
}

uint64_t sub_237E3399C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;

  v6 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(unsigned __int8 *)(v7 + 80) + 9 + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(unsigned __int8 *)(v7 + 80) + 9 + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_237E33A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))((*(unsigned __int8 *)(v4 + 80) + 9 + a1) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (*(unsigned __int8 *)(v4 + 80) + 9 + a2) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_237E33A6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;

  v6 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v6;
  swift_release();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(unsigned __int8 *)(v7 + 80) + 9 + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(unsigned __int8 *)(v7 + 80) + 9 + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_237E33ADC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  unsigned int v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0xFE)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 9) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if (v5 > 0xFE)
        return (*(uint64_t (**)(uint64_t))(v4 + 48))((a1 + v7 + 9) & ~v7);
      v15 = *(unsigned __int8 *)(a1 + 8);
      if (v15 > 1)
        return (v15 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_237E33BB0 + 4 * byte_237EE58C8[(v9 - 1)]))();
}

void sub_237E33C20(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0xFEu)
    v6 = 254;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t type metadata accessor for Complication(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Complication);
}

unint64_t sub_237E33E34()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256898A28;
  if (!qword_256898A28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256898A30);
    v2[0] = sub_237E32D94();
    v2[1] = sub_237E32E64();
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256898A28);
  }
  return result;
}

unint64_t sub_237E33EA4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256898A38;
  if (!qword_256898A38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256898868);
    v2[0] = sub_237E33F28();
    v2[1] = sub_237E22690(&qword_256898A68, &qword_256898A70, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256898A38);
  }
  return result;
}

unint64_t sub_237E33F28()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256898A40;
  if (!qword_256898A40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256898860);
    v2[0] = sub_237E33FAC();
    v2[1] = sub_237E22690(&qword_256898A68, &qword_256898A70, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256898A40);
  }
  return result;
}

unint64_t sub_237E33FAC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256898A48;
  if (!qword_256898A48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256898858);
    v2[0] = sub_237E34030();
    v2[1] = sub_237E22690(&qword_256898A60, &qword_256898878, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256898A48);
  }
  return result;
}

unint64_t sub_237E34030()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256898A50;
  if (!qword_256898A50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256898850);
    v2[0] = sub_237E22690(&qword_256898A58, &qword_256898848, MEMORY[0x24BDF4700]);
    v2[1] = sub_237E22690(&qword_256898828, &qword_256898830, MEMORY[0x24BDF06D0]);
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256898A50);
  }
  return result;
}

uint64_t sub_237E340CC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_237E34100@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_237E3206C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_237E3410C()
{
  unint64_t result;

  result = qword_256898AA8;
  if (!qword_256898AA8)
  {
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDF3E60], MEMORY[0x24BDF3E48]);
    atomic_store(result, (unint64_t *)&qword_256898AA8);
  }
  return result;
}

void sub_237E34150()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256898A88);
  sub_237EE21B4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256898A90);
  sub_237EE21B4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256898A70);
  sub_237EE21B4();
  swift_getTupleTypeMetadata2();
  v0 = sub_237EE2958();
  MEMORY[0x23B8271D0](MEMORY[0x24BDF5428], v0);
  sub_237EE2820();
  JUMPOUT(0x23B8271D0);
}

id sub_237E34228()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  objc_class *v4;
  id result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  objc_super v11;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897E20);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (objc_class *)type metadata accessor for ClockLabel();
  v11.receiver = v0;
  v11.super_class = v4;
  result = objc_msgSendSuper2(&v11, sel_layoutSubviews);
  if ((*((_BYTE *)v0 + OBJC_IVAR____TtC11ClockPoster10ClockLabel_observingOverrideDate) & 1) == 0)
  {
    *((_BYTE *)v0 + OBJC_IVAR____TtC11ClockPoster10ClockLabel_observingOverrideDate) = 1;
    v6 = sub_237EE2C64();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v3, 1, 1, v6);
    v7 = swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_237EE2C4C();
    swift_retain();
    v8 = sub_237EE2C40();
    v9 = (_QWORD *)swift_allocObject();
    v10 = MEMORY[0x24BEE6930];
    v9[2] = v8;
    v9[3] = v10;
    v9[4] = v7;
    swift_release();
    sub_237EDA9E4((uint64_t)v3, (uint64_t)&unk_256898AE8, (uint64_t)v9);
    return (id)swift_release();
  }
  return result;
}

uint64_t sub_237E34364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[5] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  v4[6] = v5;
  v4[7] = *(_QWORD *)(v5 - 8);
  v4[8] = swift_task_alloc();
  v4[9] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898AF0);
  v4[10] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25689C240);
  v4[11] = v6;
  v4[12] = *(_QWORD *)(v6 - 8);
  v4[13] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898AF8);
  v4[14] = v7;
  v4[15] = *(_QWORD *)(v7 - 8);
  v4[16] = swift_task_alloc();
  v4[17] = sub_237EE2C4C();
  v4[18] = sub_237EE2C40();
  v4[19] = sub_237EE2C28();
  v4[20] = v8;
  return swift_task_switch();
}

uint64_t sub_237E3448C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  if (qword_256897B48 != -1)
    swift_once();
  v2 = v0[12];
  v1 = v0[13];
  v3 = v0[11];
  v4 = qword_25689B990;
  v5 = *(_QWORD *)(qword_25689B990 + OBJC_IVAR____TtC11ClockPoster5Clock_overrideDateStream);
  swift_retain();
  sub_237E8F7E4(v5, v4, v1);
  sub_237EE2C88();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  v0[21] = sub_237EE2C40();
  v6 = (_QWORD *)swift_task_alloc();
  v0[22] = v6;
  *v6 = v0;
  v6[1] = sub_237E345B8;
  return sub_237EE2C94();
}

uint64_t sub_237E345B8()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

id sub_237E3460C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id result;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(v0 + 80);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 56) + 48))(v1, 1, *(_QWORD *)(v0 + 48)) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
    swift_release();
LABEL_9:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (id)(*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = *(_QWORD *)(v0 + 40) + 16;
  sub_237E34B08(v1, *(_QWORD *)(v0 + 72));
  v3 = (void *)MEMORY[0x23B827344](v2);
  if (!v3)
  {
    v16 = *(_QWORD *)(v0 + 120);
    v15 = *(_QWORD *)(v0 + 128);
    v17 = *(_QWORD *)(v0 + 112);
    v18 = *(_QWORD *)(v0 + 72);
    swift_release();
    sub_237E34B50(v18);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    goto LABEL_9;
  }
  v4 = v3;
  result = objc_msgSend(v3, sel_timeFormatter);
  if (result)
  {
    v6 = result;
    v7 = *(_QWORD *)(v0 + 64);
    sub_237E34B90(*(_QWORD *)(v0 + 72), v7);
    v8 = sub_237EE1D70();
    v9 = *(_QWORD *)(v8 - 8);
    v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
    v11 = 0;
    if (v10 != 1)
    {
      v12 = *(_QWORD *)(v0 + 64);
      v11 = (void *)sub_237EE1CF8();
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v12, v8);
    }
    v13 = *(_QWORD *)(v0 + 72);
    objc_msgSend(v6, sel_setOverrideDate_, v11);

    sub_237E34B50(v13);
    *(_QWORD *)(v0 + 168) = sub_237EE2C40();
    v14 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 176) = v14;
    *v14 = v0;
    v14[1] = sub_237E345B8;
    return (id)sub_237EE2C94();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_237E349A4(_BYTE *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  objc_super v7;

  a1[OBJC_IVAR____TtC11ClockPoster10ClockLabel_observingOverrideDate] = 0;
  v7.receiver = a1;
  v7.super_class = (Class)type metadata accessor for ClockLabel();
  return objc_msgSendSuper2(&v7, *a4, a3);
}

id sub_237E349FC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClockLabel();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ClockLabel()
{
  return objc_opt_self();
}

uint64_t sub_237E34A4C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_237E34A70()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_237E34A9C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_237E20844;
  return sub_237E34364(a1, v4, v5, v6);
}

uint64_t sub_237E34B08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_237E34B50(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_237E34B90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_237E34BD8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[5];
  __int128 v19;
  char v20;
  _QWORD v21[5];
  __int128 v22;
  char v23;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6460);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_237EE5DC0;
  v21[3] = &type metadata for SolidClockFaceColor;
  v1 = sub_237E34EC0();
  v21[4] = v1;
  v2 = swift_allocObject();
  v21[0] = v2;
  *(_OWORD *)(v2 + 16) = xmmword_237EE5DD0;
  *(_OWORD *)(v2 + 32) = xmmword_237EE5DE0;
  v23 = 0;
  v22 = 0u;
  v18[3] = &type metadata for SolidClockFaceColor;
  v18[4] = v1;
  v3 = swift_allocObject();
  v18[0] = v3;
  *(_OWORD *)(v3 + 16) = xmmword_237EE5DF0;
  *(_OWORD *)(v3 + 32) = xmmword_237EE5E00;
  v20 = 0;
  v19 = 0u;
  sub_237E89E60((uint64_t)v21, (uint64_t)v18, v0 + 32);
  sub_237E2846C((uint64_t)v18);
  sub_237E2846C((uint64_t)v21);
  *(_QWORD *)(v0 + 160) = &type metadata for SolidClockFaceColor;
  *(_QWORD *)(v0 + 168) = v1;
  v4 = swift_allocObject();
  *(_QWORD *)(v0 + 136) = v4;
  *(_OWORD *)(v4 + 16) = xmmword_237EE5E10;
  *(_OWORD *)(v4 + 32) = xmmword_237EE5E20;
  *(_BYTE *)(v0 + 232) = 0;
  *(_OWORD *)(v0 + 176) = 0u;
  *(_QWORD *)(v0 + 264) = &type metadata for SolidClockFaceColor;
  *(_QWORD *)(v0 + 272) = v1;
  v5 = swift_allocObject();
  *(_QWORD *)(v0 + 240) = v5;
  __asm { FMOV            V1.2D, #1.0 }
  *(_OWORD *)(v5 + 16) = xmmword_237EE5E30;
  *(_OWORD *)(v5 + 32) = _Q1;
  *(_BYTE *)(v0 + 336) = 0;
  *(_OWORD *)(v0 + 280) = 0u;
  *(_QWORD *)(v0 + 368) = &type metadata for SolidClockFaceColor;
  *(_QWORD *)(v0 + 376) = v1;
  v11 = swift_allocObject();
  *(_QWORD *)(v0 + 344) = v11;
  *(_OWORD *)(v11 + 16) = xmmword_237EE5E40;
  *(_OWORD *)(v11 + 32) = xmmword_237EE5E50;
  *(_BYTE *)(v0 + 440) = 0;
  *(_OWORD *)(v0 + 384) = 0u;
  *(_QWORD *)(v0 + 472) = &type metadata for SolidClockFaceColor;
  *(_QWORD *)(v0 + 480) = v1;
  v12 = swift_allocObject();
  *(_QWORD *)(v0 + 448) = v12;
  *(_OWORD *)(v12 + 16) = xmmword_237EE5E60;
  *(_OWORD *)(v12 + 32) = xmmword_237EE5E70;
  *(_BYTE *)(v0 + 544) = 0;
  *(_OWORD *)(v0 + 488) = 0u;
  *(_QWORD *)(v0 + 576) = &type metadata for SolidClockFaceColor;
  *(_QWORD *)(v0 + 584) = v1;
  v13 = swift_allocObject();
  *(_QWORD *)(v0 + 552) = v13;
  *(_OWORD *)(v13 + 16) = xmmword_237EE5E80;
  *(_OWORD *)(v13 + 32) = xmmword_237EE5E90;
  *(_BYTE *)(v0 + 648) = 0;
  *(_OWORD *)(v0 + 592) = 0u;
  *(_QWORD *)(v0 + 680) = &type metadata for SolidClockFaceColor;
  *(_QWORD *)(v0 + 688) = v1;
  v14 = swift_allocObject();
  *(_QWORD *)(v0 + 656) = v14;
  *(_OWORD *)(v14 + 16) = xmmword_237EE5EA0;
  *(_OWORD *)(v14 + 32) = xmmword_237EE5EB0;
  *(_BYTE *)(v0 + 752) = 0;
  *(_OWORD *)(v0 + 696) = 0u;
  *(_QWORD *)(v0 + 784) = &type metadata for SolidClockFaceColor;
  *(_QWORD *)(v0 + 792) = v1;
  v15 = swift_allocObject();
  *(_QWORD *)(v0 + 760) = v15;
  *(_OWORD *)(v15 + 16) = xmmword_237EE5EC0;
  *(_OWORD *)(v15 + 32) = xmmword_237EE5ED0;
  *(_BYTE *)(v0 + 856) = 0;
  *(_OWORD *)(v0 + 800) = 0u;
  *(_QWORD *)(v0 + 888) = &type metadata for SolidClockFaceColor;
  *(_QWORD *)(v0 + 896) = v1;
  v16 = swift_allocObject();
  *(_QWORD *)(v0 + 864) = v16;
  *(_OWORD *)(v16 + 16) = xmmword_237EE5EE0;
  *(_OWORD *)(v16 + 32) = xmmword_237EE5EF0;
  *(_BYTE *)(v0 + 960) = 0;
  *(_OWORD *)(v0 + 904) = 0u;
  return v0;
}

unint64_t sub_237E34EC0()
{
  unint64_t result;

  result = qword_2542C64B8;
  if (!qword_2542C64B8)
  {
    result = MEMORY[0x23B8271D0](&protocol conformance descriptor for SolidClockFaceColor, &type metadata for SolidClockFaceColor);
    atomic_store(result, (unint64_t *)&qword_2542C64B8);
  }
  return result;
}

uint64_t sub_237E34F04()
{
  return swift_deallocObject();
}

uint64_t sub_237E34F14()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6460);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_237EE5F00;
  *(_QWORD *)(v0 + 56) = &type metadata for SolidClockFaceColor;
  v1 = sub_237E34EC0();
  *(_QWORD *)(v0 + 64) = v1;
  v2 = swift_allocObject();
  *(_QWORD *)(v0 + 32) = v2;
  *(_OWORD *)(v2 + 16) = xmmword_237EE5F10;
  *(_OWORD *)(v2 + 32) = xmmword_237EE5F20;
  *(_BYTE *)(v0 + 128) = 0;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_QWORD *)(v0 + 160) = &type metadata for SolidClockFaceColor;
  *(_QWORD *)(v0 + 168) = v1;
  v3 = swift_allocObject();
  *(_QWORD *)(v0 + 136) = v3;
  __asm { FMOV            V1.2D, #1.0 }
  *(_OWORD *)(v3 + 16) = xmmword_237EE5F30;
  *(_OWORD *)(v3 + 32) = _Q1;
  *(_BYTE *)(v0 + 232) = 0;
  *(_OWORD *)(v0 + 176) = 0u;
  *(_QWORD *)(v0 + 264) = &type metadata for SolidClockFaceColor;
  *(_QWORD *)(v0 + 272) = v1;
  v9 = swift_allocObject();
  *(_QWORD *)(v0 + 240) = v9;
  *(_OWORD *)(v9 + 16) = xmmword_237EE5F40;
  *(_OWORD *)(v9 + 32) = xmmword_237EE5F50;
  *(_BYTE *)(v0 + 336) = 0;
  *(_OWORD *)(v0 + 280) = 0u;
  *(_QWORD *)(v0 + 368) = &type metadata for SolidClockFaceColor;
  *(_QWORD *)(v0 + 376) = v1;
  v10 = swift_allocObject();
  *(_QWORD *)(v0 + 344) = v10;
  *(_OWORD *)(v10 + 16) = xmmword_237EE5F60;
  *(_OWORD *)(v10 + 32) = xmmword_237EE5F70;
  *(_BYTE *)(v0 + 440) = 0;
  *(_OWORD *)(v0 + 384) = 0u;
  *(_QWORD *)(v0 + 472) = &type metadata for SolidClockFaceColor;
  *(_QWORD *)(v0 + 480) = v1;
  v11 = swift_allocObject();
  *(_QWORD *)(v0 + 448) = v11;
  *(_OWORD *)(v11 + 16) = xmmword_237EE5F80;
  *(_OWORD *)(v11 + 32) = xmmword_237EE5F90;
  *(_BYTE *)(v0 + 544) = 0;
  *(_OWORD *)(v0 + 488) = 0u;
  *(_QWORD *)(v0 + 576) = &type metadata for SolidClockFaceColor;
  *(_QWORD *)(v0 + 584) = v1;
  v12 = swift_allocObject();
  *(_QWORD *)(v0 + 552) = v12;
  *(_OWORD *)(v12 + 16) = xmmword_237EE5FA0;
  *(_OWORD *)(v12 + 32) = xmmword_237EE5FB0;
  *(_BYTE *)(v0 + 648) = 0;
  *(_OWORD *)(v0 + 592) = 0u;
  *(_QWORD *)(v0 + 680) = &type metadata for SolidClockFaceColor;
  *(_QWORD *)(v0 + 688) = v1;
  v13 = swift_allocObject();
  *(_QWORD *)(v0 + 656) = v13;
  *(_OWORD *)(v13 + 16) = xmmword_237EE5FC0;
  *(_OWORD *)(v13 + 32) = xmmword_237EE5FD0;
  *(_BYTE *)(v0 + 752) = 0;
  *(_OWORD *)(v0 + 696) = 0u;
  *(_QWORD *)(v0 + 784) = &type metadata for SolidClockFaceColor;
  *(_QWORD *)(v0 + 792) = v1;
  v14 = swift_allocObject();
  *(_QWORD *)(v0 + 760) = v14;
  *(_OWORD *)(v14 + 16) = xmmword_237EE5FE0;
  *(_OWORD *)(v14 + 32) = xmmword_237EE5FF0;
  *(_BYTE *)(v0 + 856) = 0;
  *(_OWORD *)(v0 + 800) = 0u;
  *(_QWORD *)(v0 + 888) = &type metadata for SolidClockFaceColor;
  *(_QWORD *)(v0 + 896) = v1;
  v15 = swift_allocObject();
  *(_QWORD *)(v0 + 864) = v15;
  *(_OWORD *)(v15 + 16) = xmmword_237EE6000;
  *(_OWORD *)(v15 + 32) = xmmword_237EE6010;
  *(_BYTE *)(v0 + 960) = 0;
  *(_OWORD *)(v0 + 904) = 0u;
  *(_QWORD *)(v0 + 992) = &type metadata for SolidClockFaceColor;
  *(_QWORD *)(v0 + 1000) = v1;
  v16 = swift_allocObject();
  *(_QWORD *)(v0 + 968) = v16;
  *(_OWORD *)(v16 + 16) = xmmword_237EE6020;
  *(_OWORD *)(v16 + 32) = xmmword_237EE6030;
  *(_BYTE *)(v0 + 1064) = 0;
  *(_OWORD *)(v0 + 1008) = 0u;
  *(_QWORD *)(v0 + 1096) = &type metadata for SolidClockFaceColor;
  *(_QWORD *)(v0 + 1104) = v1;
  v17 = swift_allocObject();
  *(_QWORD *)(v0 + 1072) = v17;
  *(_OWORD *)(v17 + 16) = xmmword_237EE6040;
  *(_OWORD *)(v17 + 32) = xmmword_237EE6050;
  *(_BYTE *)(v0 + 1168) = 0;
  *(_OWORD *)(v0 + 1112) = 0u;
  *(_QWORD *)(v0 + 1200) = &type metadata for SolidClockFaceColor;
  *(_QWORD *)(v0 + 1208) = v1;
  v18 = swift_allocObject();
  *(_QWORD *)(v0 + 1176) = v18;
  *(_OWORD *)(v18 + 16) = xmmword_237EE6060;
  *(_OWORD *)(v18 + 32) = xmmword_237EE6070;
  *(_BYTE *)(v0 + 1272) = 0;
  *(_OWORD *)(v0 + 1216) = 0u;
  *(_QWORD *)(v0 + 1304) = &type metadata for SolidClockFaceColor;
  *(_QWORD *)(v0 + 1312) = v1;
  v19 = swift_allocObject();
  *(_QWORD *)(v0 + 1280) = v19;
  *(_OWORD *)(v19 + 16) = xmmword_237EE6080;
  *(_OWORD *)(v19 + 32) = xmmword_237EE6090;
  *(_BYTE *)(v0 + 1376) = 0;
  *(_OWORD *)(v0 + 1320) = 0u;
  *(_QWORD *)(v0 + 1408) = &type metadata for SolidClockFaceColor;
  *(_QWORD *)(v0 + 1416) = v1;
  v20 = swift_allocObject();
  *(_QWORD *)(v0 + 1384) = v20;
  *(_OWORD *)(v20 + 16) = xmmword_237EE60A0;
  *(_OWORD *)(v20 + 32) = xmmword_237EE60B0;
  *(_BYTE *)(v0 + 1480) = 0;
  *(_OWORD *)(v0 + 1424) = 0u;
  *(_QWORD *)(v0 + 1512) = &type metadata for SolidClockFaceColor;
  *(_QWORD *)(v0 + 1520) = v1;
  v21 = swift_allocObject();
  *(_QWORD *)(v0 + 1488) = v21;
  *(_OWORD *)(v21 + 16) = xmmword_237EE60C0;
  *(_OWORD *)(v21 + 32) = xmmword_237EE60D0;
  *(_BYTE *)(v0 + 1584) = 0;
  *(_OWORD *)(v0 + 1528) = 0u;
  sub_237E89F54(180, 140, 236, 128, 131, 255, v0 + 1592);
  sub_237E89F54(255, 127, 112, 230, 131, 189, v0 + 1696);
  sub_237E89F54(255, 139, 121, 255, 175, 109, v0 + 1800);
  sub_237E89F54(244, 224, 132, 255, 196, 113, v0 + 1904);
  sub_237E89F54(125, 196, 201, 148, 215, 139, v0 + 2008);
  sub_237E89F54(140, 211, 217, 118, 157, 255, v0 + 2112);
  sub_237E8A0A4((uint64_t)&unk_2509BE450, v0 + 2216);
  return v0;
}

uint64_t sub_237E353DC()
{
  uint64_t v0;
  unint64_t v1;
  _OWORD *v2;
  _OWORD *v3;
  _OWORD *v9;
  _OWORD *v10;
  _OWORD *v11;
  _OWORD *v12;
  _OWORD *v13;
  _OWORD *v14;
  _OWORD *v15;
  _OWORD *v16;
  _OWORD *v17;
  _OWORD *v18;
  _OWORD *v19;
  _OWORD *v20;
  _OWORD *v21;
  _OWORD *v22;
  _OWORD *v23;
  _OWORD *v24;
  _OWORD *v25;
  __int128 v27;
  _QWORD v28[3];
  ValueMetadata *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  _QWORD v34[3];
  ValueMetadata *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6460);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_237EE60E0;
  *(_QWORD *)(v0 + 56) = &type metadata for DynamicClockFaceColor;
  v1 = sub_237E35ABC();
  *(_QWORD *)(v0 + 64) = v1;
  v2 = (_OWORD *)swift_allocObject();
  *(_QWORD *)(v0 + 32) = v2;
  v2[1] = xmmword_237EE5E10;
  v2[2] = xmmword_237EE5E20;
  v2[3] = xmmword_237EE60F0;
  v2[4] = xmmword_237EE6100;
  *(_BYTE *)(v0 + 128) = 0;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_QWORD *)(v0 + 160) = &type metadata for DynamicClockFaceColor;
  *(_QWORD *)(v0 + 168) = v1;
  v3 = (_OWORD *)swift_allocObject();
  *(_QWORD *)(v0 + 136) = v3;
  __asm { FMOV            V1.2D, #1.0 }
  v27 = _Q1;
  v3[1] = xmmword_237EE5E30;
  v3[2] = _Q1;
  v3[3] = xmmword_237EE6110;
  v3[4] = xmmword_237EE6120;
  *(_BYTE *)(v0 + 232) = 0;
  *(_OWORD *)(v0 + 176) = 0u;
  *(_QWORD *)(v0 + 264) = &type metadata for DynamicClockFaceColor;
  *(_QWORD *)(v0 + 272) = v1;
  v9 = (_OWORD *)swift_allocObject();
  *(_QWORD *)(v0 + 240) = v9;
  v9[1] = xmmword_237EE5E40;
  v9[2] = xmmword_237EE5E50;
  v9[3] = xmmword_237EE6130;
  v9[4] = xmmword_237EE6140;
  *(_BYTE *)(v0 + 336) = 0;
  *(_OWORD *)(v0 + 280) = 0u;
  *(_QWORD *)(v0 + 368) = &type metadata for DynamicClockFaceColor;
  *(_QWORD *)(v0 + 376) = v1;
  v10 = (_OWORD *)swift_allocObject();
  *(_QWORD *)(v0 + 344) = v10;
  v10[1] = xmmword_237EE5E60;
  v10[2] = xmmword_237EE5E70;
  v10[3] = xmmword_237EE6150;
  v10[4] = xmmword_237EE6160;
  *(_BYTE *)(v0 + 440) = 0;
  *(_OWORD *)(v0 + 384) = 0u;
  *(_QWORD *)(v0 + 472) = &type metadata for DynamicClockFaceColor;
  *(_QWORD *)(v0 + 480) = v1;
  v11 = (_OWORD *)swift_allocObject();
  *(_QWORD *)(v0 + 448) = v11;
  v11[1] = xmmword_237EE5E80;
  v11[2] = xmmword_237EE5E90;
  v11[3] = xmmword_237EE6170;
  v11[4] = xmmword_237EE6180;
  *(_BYTE *)(v0 + 544) = 0;
  *(_OWORD *)(v0 + 488) = 0u;
  *(_QWORD *)(v0 + 576) = &type metadata for DynamicClockFaceColor;
  *(_QWORD *)(v0 + 584) = v1;
  v12 = (_OWORD *)swift_allocObject();
  *(_QWORD *)(v0 + 552) = v12;
  v12[1] = xmmword_237EE5EA0;
  v12[2] = xmmword_237EE5EB0;
  v12[3] = xmmword_237EE6190;
  v12[4] = xmmword_237EE61A0;
  *(_BYTE *)(v0 + 648) = 0;
  *(_OWORD *)(v0 + 592) = 0u;
  *(_QWORD *)(v0 + 680) = &type metadata for DynamicClockFaceColor;
  *(_QWORD *)(v0 + 688) = v1;
  v13 = (_OWORD *)swift_allocObject();
  *(_QWORD *)(v0 + 656) = v13;
  v13[1] = xmmword_237EE5EC0;
  v13[2] = xmmword_237EE5ED0;
  v13[3] = xmmword_237EE61B0;
  v13[4] = xmmword_237EE61C0;
  *(_BYTE *)(v0 + 752) = 0;
  *(_OWORD *)(v0 + 696) = 0u;
  *(_QWORD *)(v0 + 784) = &type metadata for DynamicClockFaceColor;
  *(_QWORD *)(v0 + 792) = v1;
  v14 = (_OWORD *)swift_allocObject();
  *(_QWORD *)(v0 + 760) = v14;
  v14[1] = xmmword_237EE5EE0;
  v14[2] = xmmword_237EE5EF0;
  v14[3] = xmmword_237EE61D0;
  v14[4] = xmmword_237EE61E0;
  *(_BYTE *)(v0 + 856) = 0;
  *(_OWORD *)(v0 + 800) = 0u;
  *(_QWORD *)(v0 + 888) = &type metadata for DynamicClockFaceColor;
  *(_QWORD *)(v0 + 896) = v1;
  v15 = (_OWORD *)swift_allocObject();
  *(_QWORD *)(v0 + 864) = v15;
  v15[1] = xmmword_237EE61F0;
  v15[2] = xmmword_237EE6200;
  v15[3] = xmmword_237EE6210;
  v15[4] = xmmword_237EE5F70;
  *(_BYTE *)(v0 + 960) = 0;
  *(_OWORD *)(v0 + 904) = 0u;
  v35 = &type metadata for DynamicClockFaceColor;
  v36 = v1;
  v16 = (_OWORD *)swift_allocObject();
  v16[1] = xmmword_237EE5E10;
  v16[2] = xmmword_237EE5E20;
  v16[3] = xmmword_237EE60F0;
  v16[4] = xmmword_237EE6100;
  v39 = 0;
  v37 = 0;
  v38 = 0;
  v34[0] = v16;
  v29 = &type metadata for DynamicClockFaceColor;
  v30 = v1;
  v17 = (_OWORD *)swift_allocObject();
  v17[1] = xmmword_237EE5EE0;
  v17[2] = xmmword_237EE5EF0;
  v17[3] = xmmword_237EE61D0;
  v17[4] = xmmword_237EE61E0;
  v33 = 0;
  v32 = 0;
  v28[0] = v17;
  v31 = 0;
  sub_237E89E60((uint64_t)v34, (uint64_t)v28, v0 + 968);
  sub_237E2846C((uint64_t)v28);
  sub_237E2846C((uint64_t)v34);
  v35 = &type metadata for DynamicClockFaceColor;
  v36 = v1;
  v18 = (_OWORD *)swift_allocObject();
  v18[1] = xmmword_237EE60F0;
  v18[2] = xmmword_237EE6100;
  v18[3] = xmmword_237EE5E10;
  v18[4] = xmmword_237EE5E20;
  v39 = 0;
  v37 = 0;
  v38 = 0;
  v34[0] = v18;
  v29 = &type metadata for DynamicClockFaceColor;
  v30 = v1;
  v19 = (_OWORD *)swift_allocObject();
  v19[1] = xmmword_237EE5EC0;
  v19[2] = xmmword_237EE5ED0;
  v19[3] = xmmword_237EE61B0;
  v19[4] = xmmword_237EE61C0;
  v33 = 0;
  v32 = 0;
  v28[0] = v19;
  v31 = 0;
  sub_237E89E60((uint64_t)v34, (uint64_t)v28, v0 + 1072);
  sub_237E2846C((uint64_t)v28);
  sub_237E2846C((uint64_t)v34);
  v35 = &type metadata for DynamicClockFaceColor;
  v36 = v1;
  v20 = (_OWORD *)swift_allocObject();
  v20[1] = xmmword_237EE6110;
  v20[2] = xmmword_237EE6120;
  v20[3] = xmmword_237EE5E30;
  v20[4] = v27;
  v39 = 0;
  v37 = 0;
  v38 = 0;
  v34[0] = v20;
  v29 = &type metadata for DynamicClockFaceColor;
  v30 = v1;
  v21 = (_OWORD *)swift_allocObject();
  v21[1] = xmmword_237EE5E60;
  v21[2] = xmmword_237EE5E70;
  v21[3] = xmmword_237EE6150;
  v21[4] = xmmword_237EE6160;
  v33 = 0;
  v32 = 0;
  v28[0] = v21;
  v31 = 0;
  sub_237E89E60((uint64_t)v34, (uint64_t)v28, v0 + 1176);
  sub_237E2846C((uint64_t)v28);
  sub_237E2846C((uint64_t)v34);
  v35 = &type metadata for DynamicClockFaceColor;
  v36 = v1;
  v22 = (_OWORD *)swift_allocObject();
  v22[1] = xmmword_237EE5EA0;
  v22[2] = xmmword_237EE5EB0;
  v22[3] = xmmword_237EE6190;
  v22[4] = xmmword_237EE61A0;
  v39 = 0;
  v37 = 0;
  v38 = 0;
  v34[0] = v22;
  v29 = &type metadata for DynamicClockFaceColor;
  v30 = v1;
  v23 = (_OWORD *)swift_allocObject();
  v23[1] = xmmword_237EE5E80;
  v23[2] = xmmword_237EE5E90;
  v23[3] = xmmword_237EE6170;
  v23[4] = xmmword_237EE6180;
  v33 = 0;
  v32 = 0;
  v28[0] = v23;
  v31 = 0;
  sub_237E89E60((uint64_t)v34, (uint64_t)v28, v0 + 1280);
  sub_237E2846C((uint64_t)v28);
  sub_237E2846C((uint64_t)v34);
  v35 = &type metadata for DynamicClockFaceColor;
  v36 = v1;
  v24 = (_OWORD *)swift_allocObject();
  v24[1] = xmmword_237EE5E40;
  v24[2] = xmmword_237EE5E50;
  v24[3] = xmmword_237EE6130;
  v24[4] = xmmword_237EE6140;
  v39 = 0;
  v37 = 0;
  v38 = 0;
  v34[0] = v24;
  v29 = &type metadata for DynamicClockFaceColor;
  v30 = v1;
  v25 = (_OWORD *)swift_allocObject();
  v25[1] = xmmword_237EE61F0;
  v25[2] = xmmword_237EE6200;
  v25[3] = xmmword_237EE6210;
  v25[4] = xmmword_237EE5F70;
  v33 = 0;
  v32 = 0;
  v28[0] = v25;
  v31 = 0;
  sub_237E89E60((uint64_t)v34, (uint64_t)v28, v0 + 1384);
  sub_237E2846C((uint64_t)v28);
  sub_237E2846C((uint64_t)v34);
  return v0;
}

unint64_t sub_237E35ABC()
{
  unint64_t result;

  result = qword_2542C64E0;
  if (!qword_2542C64E0)
  {
    result = MEMORY[0x23B8271D0](&protocol conformance descriptor for DynamicClockFaceColor, &type metadata for DynamicClockFaceColor);
    atomic_store(result, (unint64_t *)&qword_2542C64E0);
  }
  return result;
}

uint64_t sub_237E35B00()
{
  return swift_deallocObject();
}

uint64_t sub_237E35B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_237E35B18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  void (*v17)(char *, uint64_t, uint64_t, __n128);
  uint64_t v18;
  uint64_t v19;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  _OWORD v25[2];
  uint64_t v26;
  _OWORD v27[2];
  uint64_t v28;

  v6 = v5;
  v12 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v17 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16);
  v17((char *)&v22 - v18, v6, a2, v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898B50);
  if ((swift_dynamicCast() & 1) == 0)
  {
    v28 = 0;
    memset(v27, 0, sizeof(v27));
  }
  sub_237E22004((uint64_t)v27, (uint64_t)&v23, &qword_256898B58);
  v19 = v24;
  if (v24)
  {
    v22 = a4;
    __swift_project_boxed_opaque_existential_1(&v23, v24);
    a4 = v22;
    sub_237E35D24(a1, v19, a3, (uint64_t *)v25);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v23);
  }
  else
  {
    sub_237E2209C((uint64_t)&v23, &qword_256898B58);
    memset(v25, 0, sizeof(v25));
    v26 = 0;
  }
  sub_237E22004((uint64_t)v25, (uint64_t)&v23, &qword_256898B60);
  ((void (*)(char *, uint64_t, uint64_t))v17)(v14, v6, a2);
  if (v24)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, a2);
    sub_237E2209C((uint64_t)v25, &qword_256898B60);
    sub_237E2D1BC(&v23, (uint64_t)a5);
  }
  else
  {
    a5[3] = a2;
    a5[4] = a4;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a5);
    (*(void (**)(uint64_t *, char *, uint64_t))(v12 + 32))(boxed_opaque_existential_0, v14, a2);
    sub_237E2209C((uint64_t)v25, &qword_256898B60);
    sub_237E2209C((uint64_t)&v23, &qword_256898B60);
  }
  return sub_237E2209C((uint64_t)v27, &qword_256898B58);
}

uint64_t sub_237E35D24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  int v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v27;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v30 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = sub_237EE2ED4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v29 - v10;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v29 - v18;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v20 + 16))(v14, v30, a3, v17);
  v21 = swift_dynamicCast();
  v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  if (v21)
  {
    v22(v11, 0, 1, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v19, v11, AssociatedTypeWitness);
    v23 = v31;
    v24 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 24);
    v25 = *(_QWORD *)(v31 + 8);
    a4[3] = a2;
    a4[4] = v25;
    __swift_allocate_boxed_opaque_existential_0(a4);
    v24(v19, a2, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v19, AssociatedTypeWitness);
  }
  else
  {
    v22(v11, 1, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v27 = *(_QWORD *)(v31 + 8);
    a4[3] = a2;
    a4[4] = v27;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a4);
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(boxed_opaque_existential_0, v32, a2);
  }
}

float sub_237E35F18()
{
  uint64_t v0;

  return *(float *)v0;
}

uint64_t sub_237E35F20()
{
  float *v0;

  return sub_237E26BD4(*v0);
}

float sub_237E35F28()
{
  _QWORD *v0;
  float *v1;
  float v2;
  float v3;
  float v4;
  float v5;
  float v6;

  v1 = (float *)__swift_project_boxed_opaque_existential_1(v0, v0[3]);
  v2 = v1[3];
  v3 = v1[4];
  v4 = v1[5];
  v5 = v1[6];
  noise2();
  if (v4 < fabsf(v6))
  {
    if (v6 < (float)-v4)
      v6 = -v4;
    if (v6 >= v4)
      v6 = v4;
  }
  return fmodf(v2 + (float)((float)(v3 - v2) * (float)(1.0 - (float)((float)(v4 - v6) / (float)(v4 + v4)))), v5);
}

float sub_237E35FB0@<S0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t *boxed_opaque_existential_0;
  float result;
  __int128 v8;
  __int128 v9;

  v4 = *a1;
  v9 = *(_OWORD *)(v2 + 3);
  v5 = __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  *(_OWORD *)(a2 + 24) = v9;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a2);
  result = *((float *)v5 + 6);
  v8 = *(_OWORD *)(v5 + 1);
  *boxed_opaque_existential_0 = v4;
  *(_OWORD *)(boxed_opaque_existential_0 + 1) = v8;
  *((float *)boxed_opaque_existential_0 + 6) = result;
  return result;
}

void sub_237E36020(uint64_t a1, float a2)
{
  double v3;
  void *v4;
  id v5;
  float v6;
  float v7;
  float v8;
  void *v9;
  float v10;
  id v11;

  if (*(_QWORD *)(a1 + 16) > 1uLL)
  {
    sub_237E360F8(a1, (uint64_t)&v8, a2);
    v4 = v9;
    v5 = v11;
    v6 = (float)(a2 - v8) + 1.0;
    if (v8 <= a2)
      v6 = a2 - v8;
    if (v10 <= v8)
      *(float *)&v3 = v6;
    else
      *(float *)&v3 = a2 - v8;
    if (v10 <= v8)
      v7 = (float)(v10 - v8) + 1.0;
    else
      v7 = v10 - v8;
    *(float *)&v3 = *(float *)&v3 / v7;
    objc_msgSend(v11, sel__solveForInput_, v3);

  }
}

void sub_237E360F8(uint64_t a1@<X0>, uint64_t a2@<X8>, float a3@<S0>)
{
  uint64_t v4;
  uint64_t v5;
  float v7;
  int v8;
  void **v9;
  void *v10;
  float v11;
  int v12;
  id v13;
  id v14;
  float v15;
  int v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  float v21;
  void *v22;
  float v23;
  int v24;
  void *v25;
  int v27;
  id v28;
  id v29;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
    __break(1u);
    goto LABEL_15;
  }
  v5 = v4 - 1;
  if (v4 == 1)
  {
LABEL_15:
    __break(1u);
    return;
  }
  v7 = *(float *)(a1 + 32);
  v8 = *(_DWORD *)(a1 + 36);
  v9 = (void **)(a1 + 56);
  v10 = *(void **)(a1 + 56);
  v11 = *(float *)(a1 + 48);
  v12 = *(_DWORD *)(a1 + 52);
  v13 = *(id *)(a1 + 40);
  v14 = v10;
  v15 = v7;
  v16 = v8;
  v17 = v13;
  while (1)
  {
    v21 = *((float *)v9 - 6);
    v22 = *(v9 - 2);
    v23 = *((float *)v9 - 2);
    v24 = *((_DWORD *)v9 - 1);
    v25 = *v9;
    if (v21 <= a3 && v23 >= a3)
      break;
    if (v5 == 1)
    {
      v18 = v22;
      v19 = v25;

      v20 = v13;
      v11 = v7;
      v12 = v8;
      v14 = v20;
      v17 = v19;
      v15 = v23;
      v16 = v24;
    }
    else
    {
      v23 = v15;
      v24 = v16;
    }
    v9 += 2;
    if (!--v5)
      goto LABEL_13;
  }
  v27 = *((_DWORD *)v9 - 5);
  v28 = v22;
  v29 = v25;

  v11 = v23;
  v12 = v24;
  v14 = v29;
  v23 = v21;
  v24 = v27;
  v17 = v28;
LABEL_13:
  *(float *)a2 = v23;
  *(_DWORD *)(a2 + 4) = v24;
  *(_QWORD *)(a2 + 8) = v17;
  *(float *)(a2 + 16) = v11;
  *(_DWORD *)(a2 + 20) = v12;
  *(_QWORD *)(a2 + 24) = v14;
}

uint64_t sub_237E36258@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  v3 = *a1;
  v4 = *(_QWORD *)(v2 + 8);
  *(_DWORD *)a2 = v3;
  *(_QWORD *)(a2 + 8) = v4;
  return swift_bridgeObjectRetain();
}

void sub_237E3626C()
{
  uint64_t v0;

  sub_237E36020(*(_QWORD *)(v0 + 8), *(float *)v0);
}

uint64_t sub_237E36278(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_237EB77F8(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_237E362E0(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_237E362E0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  float v15;
  float v16;
  float *v17;
  float v18;
  float v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  float v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  char v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  float v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  char *v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  unint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  float *__dst;

  v3 = a1[1];
  result = sub_237EE3174();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v82 = *a1;
      v83 = -1;
      v84 = 1;
      v85 = *a1;
      do
      {
        v86 = *(float *)(v82 + 8 * v84);
        v87 = v83;
        v88 = v85;
        do
        {
          if (v86 >= *(float *)v88)
            break;
          if (!v82)
            goto LABEL_141;
          v89 = *(_DWORD *)(v88 + 12);
          *(_QWORD *)(v88 + 8) = *(_QWORD *)v88;
          *(float *)v88 = v86;
          *(_DWORD *)(v88 + 4) = v89;
          v88 -= 8;
        }
        while (!__CFADD__(v87++, 1));
        ++v84;
        v85 += 8;
        --v83;
      }
      while (v84 != v3);
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v6 = result;
  v99 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x24BEE4AF8];
    __dst = (float *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v12 = (char *)MEMORY[0x24BEE4AF8];
LABEL_103:
      v91 = v12;
      v102 = v9;
      if (v13 >= 2)
      {
        v92 = *v99;
        do
        {
          v93 = v13 - 2;
          if (v13 < 2)
            goto LABEL_132;
          if (!v92)
            goto LABEL_145;
          v94 = v91;
          v95 = *(_QWORD *)&v91[16 * v93 + 32];
          v96 = *(_QWORD *)&v91[16 * v13 + 24];
          sub_237E369A8((float *)(v92 + 8 * v95), (float *)(v92 + 8 * *(_QWORD *)&v91[16 * v13 + 16]), v92 + 8 * v96, __dst);
          if (v1)
            break;
          if (v96 < v95)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v94 = sub_237E46894((uint64_t)v94);
          if (v93 >= *((_QWORD *)v94 + 2))
            goto LABEL_134;
          v97 = &v94[16 * v93 + 32];
          *(_QWORD *)v97 = v95;
          *((_QWORD *)v97 + 1) = v96;
          v98 = *((_QWORD *)v94 + 2);
          if (v13 > v98)
            goto LABEL_135;
          memmove(&v94[16 * v13 + 16], &v94[16 * v13 + 32], 16 * (v98 - v13));
          v91 = v94;
          *((_QWORD *)v94 + 2) = v98 - 1;
          v13 = v98 - 1;
        }
        while (v98 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v102 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v102 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(qword_256898B00);
    v8 = sub_237EE2C04();
    *(_QWORD *)(v8 + 16) = v7;
    v102 = v8;
    __dst = (float *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v100 = *a1 - 8;
  v101 = *a1 + 16;
  v12 = (char *)MEMORY[0x24BEE4AF8];
  v103 = v6;
  v104 = v3;
  v105 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(float *)(v11 + 8 * v10);
      v16 = *(float *)(v11 + 8 * v14);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v17 = (float *)(v101 + 8 * v14);
        v18 = v15;
        while (1)
        {
          v19 = v18;
          v18 = *v17;
          if (v15 < v16 == *v17 >= v19)
            break;
          ++v10;
          v17 += 2;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14)
          goto LABEL_138;
        if (v14 < v10)
        {
          v20 = (uint64_t *)(v100 + 8 * v10);
          v21 = v10;
          v22 = v14;
          v23 = (uint64_t *)(v11 + 8 * v14);
          do
          {
            if (v22 != --v21)
            {
              if (!v11)
                goto LABEL_144;
              v24 = *v23;
              *v23 = *v20;
              *v20 = v24;
            }
            ++v22;
            --v20;
            ++v23;
          }
          while (v22 < v21);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_136;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v25 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_139;
    if (v25 >= v3)
      v25 = v3;
    if (v25 < v14)
      break;
    if (v10 != v25)
    {
      v26 = v100 + 8 * v10;
      do
      {
        v27 = *(float *)(v11 + 8 * v10);
        v28 = v14;
        v29 = v26;
        do
        {
          if (v27 >= *(float *)v29)
            break;
          if (!v11)
            goto LABEL_142;
          v30 = *(_DWORD *)(v29 + 12);
          *(_QWORD *)(v29 + 8) = *(_QWORD *)v29;
          *(float *)v29 = v27;
          *(_DWORD *)(v29 + 4) = v30;
          v29 -= 8;
          ++v28;
        }
        while (v10 != v28);
        ++v10;
        v26 += 8;
      }
      while (v10 != v25);
      v10 = v25;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_237E4652C(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v32 = *((_QWORD *)v12 + 2);
    v31 = *((_QWORD *)v12 + 3);
    v13 = v32 + 1;
    v11 = v105;
    if (v32 >= v31 >> 1)
    {
      v81 = sub_237E4652C((char *)(v31 > 1), v32 + 1, 1, v12);
      v11 = v105;
      v12 = v81;
    }
    *((_QWORD *)v12 + 2) = v13;
    v33 = v12 + 32;
    v34 = &v12[16 * v32 + 32];
    *(_QWORD *)v34 = v14;
    *((_QWORD *)v34 + 1) = v10;
    if (v32)
    {
      while (1)
      {
        v35 = v13 - 1;
        if (v13 >= 4)
        {
          v40 = &v33[16 * v13];
          v41 = *((_QWORD *)v40 - 8);
          v42 = *((_QWORD *)v40 - 7);
          v46 = __OFSUB__(v42, v41);
          v43 = v42 - v41;
          if (v46)
            goto LABEL_120;
          v45 = *((_QWORD *)v40 - 6);
          v44 = *((_QWORD *)v40 - 5);
          v46 = __OFSUB__(v44, v45);
          v38 = v44 - v45;
          v39 = v46;
          if (v46)
            goto LABEL_121;
          v47 = v13 - 2;
          v48 = &v33[16 * v13 - 32];
          v50 = *(_QWORD *)v48;
          v49 = *((_QWORD *)v48 + 1);
          v46 = __OFSUB__(v49, v50);
          v51 = v49 - v50;
          if (v46)
            goto LABEL_123;
          v46 = __OFADD__(v38, v51);
          v52 = v38 + v51;
          if (v46)
            goto LABEL_126;
          if (v52 >= v43)
          {
            v70 = &v33[16 * v35];
            v72 = *(_QWORD *)v70;
            v71 = *((_QWORD *)v70 + 1);
            v46 = __OFSUB__(v71, v72);
            v73 = v71 - v72;
            if (v46)
              goto LABEL_130;
            v63 = v38 < v73;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v64 = *((_QWORD *)v12 + 4);
            v65 = *((_QWORD *)v12 + 5);
            v46 = __OFSUB__(v65, v64);
            v57 = v65 - v64;
            v58 = v46;
            goto LABEL_77;
          }
          v37 = *((_QWORD *)v12 + 4);
          v36 = *((_QWORD *)v12 + 5);
          v46 = __OFSUB__(v36, v37);
          v38 = v36 - v37;
          v39 = v46;
        }
        if ((v39 & 1) != 0)
          goto LABEL_122;
        v47 = v13 - 2;
        v53 = &v33[16 * v13 - 32];
        v55 = *(_QWORD *)v53;
        v54 = *((_QWORD *)v53 + 1);
        v56 = __OFSUB__(v54, v55);
        v57 = v54 - v55;
        v58 = v56;
        if (v56)
          goto LABEL_125;
        v59 = &v33[16 * v35];
        v61 = *(_QWORD *)v59;
        v60 = *((_QWORD *)v59 + 1);
        v46 = __OFSUB__(v60, v61);
        v62 = v60 - v61;
        if (v46)
          goto LABEL_128;
        if (__OFADD__(v57, v62))
          goto LABEL_129;
        if (v57 + v62 >= v38)
        {
          v63 = v38 < v62;
LABEL_83:
          if (v63)
            v35 = v47;
          goto LABEL_85;
        }
LABEL_77:
        if ((v58 & 1) != 0)
          goto LABEL_124;
        v66 = &v33[16 * v35];
        v68 = *(_QWORD *)v66;
        v67 = *((_QWORD *)v66 + 1);
        v46 = __OFSUB__(v67, v68);
        v69 = v67 - v68;
        if (v46)
          goto LABEL_127;
        if (v69 < v57)
          goto LABEL_15;
LABEL_85:
        v74 = v35 - 1;
        if (v35 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11)
          goto LABEL_143;
        v75 = v12;
        v76 = &v33[16 * v74];
        v77 = *(_QWORD *)v76;
        v78 = &v33[16 * v35];
        v79 = *((_QWORD *)v78 + 1);
        sub_237E369A8((float *)(v11 + 8 * *(_QWORD *)v76), (float *)(v11 + 8 * *(_QWORD *)v78), v11 + 8 * v79, __dst);
        if (v1)
          goto LABEL_93;
        if (v79 < v77)
          goto LABEL_117;
        if (v35 > *((_QWORD *)v75 + 2))
          goto LABEL_118;
        *(_QWORD *)v76 = v77;
        *(_QWORD *)&v33[16 * v74 + 8] = v79;
        v80 = *((_QWORD *)v75 + 2);
        if (v35 >= v80)
          goto LABEL_119;
        v12 = v75;
        v13 = v80 - 1;
        memmove(&v33[16 * v35], v78 + 16, 16 * (v80 - 1 - v35));
        *((_QWORD *)v75 + 2) = v80 - 1;
        v11 = v105;
        if (v80 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v103;
    v3 = v104;
    if (v10 >= v104)
    {
      v9 = v102;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_237EE3090();
  __break(1u);
  return result;
}

uint64_t sub_237E369A8(float *__src, float *a2, unint64_t a3, float *__dst)
{
  float *v4;
  float *v6;
  float *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  float *v14;
  float *v15;
  float *v16;
  float *v17;
  float *v18;
  float *v19;
  float v20;
  uint64_t result;
  float *v22;
  float *v23;
  float *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[2 * v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v16 = &v4[2 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v17 = (float *)(a3 - 8);
        v18 = v6;
        while (1)
        {
          v19 = v17 + 2;
          v20 = *(v18 - 2);
          v18 -= 2;
          if (*(v16 - 2) >= v20)
          {
            v22 = v16 - 2;
            if (v19 < v16 || v17 >= v16 || v19 != v16)
              *(_QWORD *)v17 = *((_QWORD *)v16 - 1);
            v18 = v6;
            v16 -= 2;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v19 != v6 || v17 >= v6)
              *(_QWORD *)v17 = *(_QWORD *)v18;
            v24 = v18;
            if (v18 <= v7)
              goto LABEL_42;
          }
          v17 -= 2;
          v6 = v18;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[2 * v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[2 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4)
            *(_QWORD *)v7 = *(_QWORD *)v4;
          v4 += 2;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 2;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_QWORD *)v7 = *(_QWORD *)v6;
        }
        v7 += 2;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_237E466E0((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_237EE30D8();
  __break(1u);
  return result;
}

uint64_t sub_237E36C20(uint64_t a1)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v13 = a1;
  swift_bridgeObjectRetain();
  sub_237E36278(&v13);
  swift_bridgeObjectRelease();
  v1 = v13;
  v2 = *(_QWORD *)(v13 + 16);
  if (v2)
  {
    v13 = MEMORY[0x24BEE4AF8];
    sub_237E62714(0, v2, 0);
    v3 = v13;
    v4 = *MEMORY[0x24BDE5D20];
    v5 = (void *)objc_opt_self();
    v6 = 0;
    do
    {
      v7 = *(_QWORD *)(v1 + 8 * v6 + 32);
      v8 = objc_msgSend(v5, sel_functionWithName_, v4);
      v13 = v3;
      v10 = *(_QWORD *)(v3 + 16);
      v9 = *(_QWORD *)(v3 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_237E62714(v9 > 1, v10 + 1, 1);
        v3 = v13;
      }
      ++v6;
      *(_QWORD *)(v3 + 16) = v10 + 1;
      v11 = v3 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v7;
      *(_QWORD *)(v11 + 40) = v8;
    }
    while (v2 != v6);
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *initializeBufferWithCopyOfBuffer for ColorCurveChannelProvider.Element(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  *a1 = *a2;
  v3 = (void *)a2[1];
  a1[1] = v3;
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for ColorCurveChannelProvider.Element(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  v3 = *(void **)(a2 + 8);
  v4 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v3;
  v5 = v3;

  return a1;
}

_QWORD *assignWithTake for ColorCurveChannelProvider.Element(_QWORD *a1, _QWORD *a2)
{
  void *v3;

  *a1 = *a2;
  v3 = (void *)a1[1];
  a1[1] = a2[1];

  return a1;
}

ValueMetadata *type metadata accessor for ColorCurveChannelProvider.Element()
{
  return &type metadata for ColorCurveChannelProvider.Element;
}

uint64_t initializeBufferWithCopyOfBuffer for ColorCurveChannelProvider(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ColorCurveChannelProvider()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for ColorCurveChannelProvider(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ColorCurveChannelProvider(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ColorCurve(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ColorCurve(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ColorCurveChannelProvider()
{
  return &type metadata for ColorCurveChannelProvider;
}

ValueMetadata *type metadata accessor for FixedColorChannel()
{
  return &type metadata for FixedColorChannel;
}

uint64_t initializeWithCopy for NoiseColorChannelGenerator(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for NoiseColorChannelGenerator(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for NoiseColorChannelGenerator(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for NoiseColorChannelGenerator(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NoiseColorChannelGenerator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for NoiseColorChannelGenerator()
{
  return &type metadata for NoiseColorChannelGenerator;
}

unint64_t sub_237E37248(uint64_t a1)
{
  unint64_t result;

  result = sub_237E3726C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_237E3726C()
{
  unint64_t result;

  result = qword_256898B28;
  if (!qword_256898B28)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE62FC, &type metadata for FixedColorChannel);
    atomic_store(result, (unint64_t *)&qword_256898B28);
  }
  return result;
}

id sub_237E372B8(uint64_t a1)
{
  _BYTE *v1;
  uint64_t v3;
  id v4;
  id v5;
  char *v6;
  id v7;
  uint64_t v8;
  id v9;
  __int128 v11[6];
  objc_super v12;

  v3 = OBJC_IVAR____TtC11ClockPoster29AnalogClockFaceViewController_clockFace;
  type metadata accessor for AnalogClockFaceView();
  v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  *(_QWORD *)&v1[v3] = v4;
  sub_237E28430(a1, (uint64_t)&v1[OBJC_IVAR____TtC11ClockPoster29AnalogClockFaceViewController_look]);
  v1[OBJC_IVAR____TtC11ClockPoster23ClockFaceViewController_isDisplayStyleRedMode] = 0;
  v1[OBJC_IVAR____TtC11ClockPoster23ClockFaceViewController_canAnimateRedMode] = 0;
  objc_allocWithZone((Class)type metadata accessor for ClockFaceHostView());
  v5 = v4;
  v6 = v1;
  *(_QWORD *)&v6[OBJC_IVAR____TtC11ClockPoster23ClockFaceViewController_hostView] = sub_237E6E680(v5);

  v12.receiver = v6;
  v12.super_class = (Class)type metadata accessor for ClockFaceViewController();
  v7 = objc_msgSendSuper2(&v12, sel_initWithNibName_bundle_, 0, 0);

  sub_237E28430(a1, (uint64_t)v11);
  v8 = (uint64_t)v7 + OBJC_IVAR____TtC11ClockPoster29AnalogClockFaceViewController_look;
  swift_beginAccess();
  v9 = v7;
  sub_237E38500(v11, v8);
  swift_endAccess();
  sub_237E37418();
  sub_237E2846C((uint64_t)v11);

  sub_237E2846C(a1);
  return v9;
}

uint64_t sub_237E37418()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v25;
  char *v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char *v34;
  _QWORD *v35;
  os_log_t v36;
  uint64_t v37;
  os_log_t v38;
  int v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD v42[3];
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[3];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49[2];
  __int128 v50[3];
  char v51;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6548);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_237EE1FB0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t)&v0[OBJC_IVAR____TtC11ClockPoster29AnalogClockFaceViewController_look];
  swift_beginAccess();
  sub_237E28430(v9, (uint64_t)v49);
  if (v51 == 2)
  {
    swift_bridgeObjectRelease();
    sub_237E2D1BC(v49, (uint64_t)v45);
    sub_237E2D1BC(v50, (uint64_t)v42);
    v15 = *(char **)&v0[OBJC_IVAR____TtC11ClockPoster29AnalogClockFaceViewController_clockFace];
    v16 = v46;
    v17 = v47;
    __swift_project_boxed_opaque_existential_1(v45, v46);
    v18 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 40))(v16, v17);
    objc_msgSend(v15, sel_setTintColor_, v18);

    v19 = v43;
    v20 = v44;
    __swift_project_boxed_opaque_existential_1(v42, v43);
    v21 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 40))(v19, v20);
    v22 = *(void **)&v15[OBJC_IVAR____TtC11ClockPoster19AnalogClockFaceView_secondaryTintColor];
    *(_QWORD *)&v15[OBJC_IVAR____TtC11ClockPoster19AnalogClockFaceView_secondaryTintColor] = v21;
    v23 = v21;

    sub_237EAF9EC();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v42);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v45);
  }
  if (!v51)
  {
    swift_bridgeObjectRelease();
    sub_237E2D1BC(v49, (uint64_t)v45);
    v10 = v46;
    v11 = v47;
    __swift_project_boxed_opaque_existential_1(v45, v46);
    v12 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 40))(v10, v11);
    v13 = *(_QWORD *)&v0[OBJC_IVAR____TtC11ClockPoster29AnalogClockFaceViewController_clockFace];
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC11ClockPoster29AnalogClockFaceViewController_clockFace], sel_setTintColor_, v12);
    v14 = *(void **)(v13 + OBJC_IVAR____TtC11ClockPoster19AnalogClockFaceView_secondaryTintColor);
    *(_QWORD *)(v13 + OBJC_IVAR____TtC11ClockPoster19AnalogClockFaceView_secondaryTintColor) = 0;

    sub_237EAF9EC();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v45);
  }
  if (qword_2542C6458 != -1)
    swift_once();
  v25 = qword_2542C64F8 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_data_private;
  swift_beginAccess();
  sub_237E22004(v25, (uint64_t)v4, &qword_2542C6548);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_237E6072C((uint64_t)v8);
    sub_237E2209C((uint64_t)v4, &qword_2542C6548);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  }
  v26 = v0;
  v27 = sub_237EE1F98();
  v28 = sub_237EE2D90();
  v29 = v28;
  if (os_log_type_enabled(v27, v28))
  {
    v30 = swift_slowAlloc();
    v40 = (_QWORD *)swift_slowAlloc();
    v41 = swift_slowAlloc();
    v48 = v41;
    *(_DWORD *)v30 = 136446466;
    v39 = v29;
    sub_237E28430(v9, (uint64_t)v45);
    v38 = v27;
    v31 = sub_237E269C0();
    v33 = v32;
    sub_237E2846C((uint64_t)v45);
    v45[0] = sub_237E2A660(v31, v33, &v48);
    sub_237EE2EE0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 12) = 2114;
    v45[0] = v26;
    v34 = v26;
    sub_237EE2EE0();
    v35 = v40;
    *v40 = v26;

    v36 = v38;
    _os_log_impl(&dword_237E17000, v38, (os_log_type_t)v39, "Unsupported look. Look: '%{public}s' for '%{public}@'", (uint8_t *)v30, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25689D9F0);
    swift_arrayDestroy();
    MEMORY[0x23B8272A8](v35, -1, -1);
    v37 = v41;
    swift_arrayDestroy();
    MEMORY[0x23B8272A8](v37, -1, -1);
    MEMORY[0x23B8272A8](v30, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return sub_237E2846C((uint64_t)v49);
}

void sub_237E37904(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

id sub_237E37910(char a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  char v5;
  id v6;
  unsigned __int8 v8;

  v2 = v1;
  v4 = *(void **)(v2 + OBJC_IVAR____TtC11ClockPoster23ClockFaceViewController_hostView);
  v8 = 2;
  v5 = *(_BYTE *)(v2 + OBJC_IVAR____TtC11ClockPoster23ClockFaceViewController_canAnimateRedMode);
  v6 = v4;
  sub_237E38828(a1, &v8, v5);

  return objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC11ClockPoster29AnalogClockFaceViewController_clockFace), sel_setNeedsLayout);
}

uint64_t sub_237E37A38()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  objc_class *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  objc_super v12;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897E20);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (objc_class *)type metadata accessor for AnalogClockFaceViewController();
  v12.receiver = v0;
  v12.super_class = v4;
  objc_msgSendSuper2(&v12, sel_viewDidLoad);
  objc_msgSend(v0, sel_setOverrideUserInterfaceStyle_, 2);
  v5 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for AnalogClockFaceDateComplicationView()), sel_initWithFrame_options_, 0, 0.0, 0.0, 0.0, 0.0);
  sub_237E3853C(v5);

  v6 = sub_237EE2C64();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v3, 1, 1, v6);
  v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_237EE2C4C();
  swift_retain();
  v8 = sub_237EE2C40();
  v9 = (_QWORD *)swift_allocObject();
  v10 = MEMORY[0x24BEE6930];
  v9[2] = v8;
  v9[3] = v10;
  v9[4] = v7;
  swift_release();
  sub_237EDA9E4((uint64_t)v3, (uint64_t)&unk_256898BB8, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_237E37BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4[5] = a4;
  v5 = sub_237EE1D70();
  v4[6] = v5;
  v4[7] = *(_QWORD *)(v5 - 8);
  v4[8] = swift_task_alloc();
  v6 = type metadata accessor for Alarm();
  v4[9] = v6;
  v4[10] = *(_QWORD *)(v6 - 8);
  v4[11] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898BC0);
  v4[12] = v7;
  v4[13] = *(_QWORD *)(v7 - 8);
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898BC8);
  v4[16] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898BD0);
  v4[17] = v8;
  v4[18] = *(_QWORD *)(v8 - 8);
  v4[19] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898BD8);
  v4[20] = v9;
  v4[21] = *(_QWORD *)(v9 - 8);
  v4[22] = swift_task_alloc();
  v4[23] = sub_237EE2C4C();
  v4[24] = sub_237EE2C40();
  v4[25] = sub_237EE2C28();
  v4[26] = v10;
  return swift_task_switch();
}

uint64_t sub_237E37D20()
{
  uint64_t v0;

  if (qword_256897AE0 != -1)
    swift_once();
  *(_QWORD *)(v0 + 216) = qword_25689DF08;
  return swift_task_switch();
}

uint64_t sub_237E37D84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v1 + 112);
  swift_retain();
  sub_237E8FF84(v3, v1, v2);
  return swift_task_switch();
}

uint64_t sub_237E37DE0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[18];
  v1 = v0[19];
  v3 = v0[17];
  sub_237EE2C88();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  v0[28] = sub_237EE2C40();
  v4 = (_QWORD *)swift_task_alloc();
  v0[29] = v4;
  *v4 = v0;
  v4[1] = sub_237E37EA8;
  return sub_237EE2C94();
}

uint64_t sub_237E37EA8()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_237E37EFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  char *v29;
  uint64_t v30;
  void *v31;
  id v32;
  char v33;
  uint64_t v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  id v40;
  _QWORD *v41;

  v1 = *(_QWORD *)(v0 + 128);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 104) + 48))(v1, 1, *(_QWORD *)(v0 + 96)) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
    swift_release();
LABEL_10:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = *(_QWORD *)(v0 + 40) + 16;
  sub_237E38724(v1, *(_QWORD *)(v0 + 120));
  v3 = MEMORY[0x23B827344](v2);
  if (!v3)
  {
    v17 = *(_QWORD *)(v0 + 168);
    v16 = *(_QWORD *)(v0 + 176);
    v18 = *(_QWORD *)(v0 + 160);
    v19 = *(_QWORD *)(v0 + 120);
    swift_release();
    sub_237E2209C(v19, &qword_256898BC0);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    goto LABEL_10;
  }
  v4 = (char *)v3;
  v5 = *(_QWORD *)(v0 + 112);
  v6 = *(_QWORD *)(v0 + 72);
  v7 = *(_QWORD *)(v0 + 80);
  sub_237E22004(*(_QWORD *)(v0 + 120), v5, &qword_256898BC0);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  v9 = *(_QWORD *)(v0 + 112);
  if (v8 == 1)
  {
    sub_237E2209C(v9, &qword_256898BC0);
    v10 = *(char **)&v4[OBJC_IVAR____TtC11ClockPoster29AnalogClockFaceViewController_clockFace];
    v11 = OBJC_IVAR____TtC11ClockPoster19AnalogClockFaceView_leadingComplicationView;
    v12 = *(void **)&v10[OBJC_IVAR____TtC11ClockPoster19AnalogClockFaceView_leadingComplicationView];
    if (v12)
    {
      objc_msgSend(v12, sel_removeFromSuperview);
      v13 = *(void **)&v10[v11];
      *(_QWORD *)&v10[v11] = 0;

      v14 = *(void **)&v10[v11];
      if (v14)
      {
        v15 = v14;
        objc_msgSend(v10, sel_addSubview_, v15);
        sub_237EAF9EC();

      }
      objc_msgSend(v10, sel_setNeedsLayout);

    }
    else
    {

    }
    goto LABEL_22;
  }
  v21 = *(_QWORD *)(v0 + 88);
  v22 = *(_QWORD *)(v0 + 64);
  v23 = *(_QWORD *)(v0 + 72);
  v24 = *(_QWORD *)(v0 + 48);
  v25 = *(_QWORD *)(v0 + 56);
  sub_237E3876C(v9, v21);
  LOBYTE(v23) = *(_BYTE *)(v21 + *(int *)(v23 + 20));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v22, v21, v24);
  v26 = objc_allocWithZone((Class)type metadata accessor for AnalogClockFaceAlarmComplicationView());
  sub_237ED8868(v22, (id)((v23 & 1) == 0), 0.0, 0.0, 0.0, 0.0);
  v28 = v27;
  v29 = *(char **)&v4[OBJC_IVAR____TtC11ClockPoster29AnalogClockFaceViewController_clockFace];
  v30 = OBJC_IVAR____TtC11ClockPoster19AnalogClockFaceView_leadingComplicationView;
  v31 = *(void **)&v29[OBJC_IVAR____TtC11ClockPoster19AnalogClockFaceView_leadingComplicationView];
  if (!v31)
    goto LABEL_17;
  sub_237E387EC();
  v32 = v31;
  v33 = sub_237EE2EB0();

  if ((v33 & 1) == 0)
  {
    v35 = *(void **)&v29[v30];
    if (v35)
    {
      v36 = v28;
      objc_msgSend(v35, sel_removeFromSuperview);
      v37 = *(void **)&v29[v30];
LABEL_18:
      *(_QWORD *)&v29[v30] = v28;
      v28 = v28;

      v39 = *(void **)&v29[v30];
      if (v39)
      {
        v40 = v39;
        objc_msgSend(v29, sel_addSubview_, v40);
        sub_237EAF9EC();

      }
      v34 = *(_QWORD *)(v0 + 88);
      objc_msgSend(v29, sel_setNeedsLayout);

      goto LABEL_21;
    }
LABEL_17:
    v38 = v28;
    v37 = 0;
    goto LABEL_18;
  }
  v34 = *(_QWORD *)(v0 + 88);
LABEL_21:

  sub_237E387B0(v34);
LABEL_22:
  sub_237E2209C(*(_QWORD *)(v0 + 120), &qword_256898BC0);
  *(_QWORD *)(v0 + 224) = sub_237EE2C40();
  v41 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 232) = v41;
  *v41 = v0;
  v41[1] = sub_237E37EA8;
  return sub_237EE2C94();
}

void sub_237E382EC()
{
  uint64_t v0;

  sub_237E2846C(v0 + OBJC_IVAR____TtC11ClockPoster29AnalogClockFaceViewController_look);

}

id sub_237E38318()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AnalogClockFaceViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AnalogClockFaceViewController()
{
  return objc_opt_self();
}

uint64_t sub_237E383A0(uint64_t a1)
{
  uint64_t result;

  result = sub_237E384C4(&qword_256898BA0, MEMORY[0x24BDD0240]);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_237E383D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC11ClockPoster29AnalogClockFaceViewController_look;
  swift_beginAccess();
  return sub_237E28430(v3, a1);
}

uint64_t sub_237E38424(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC11ClockPoster29AnalogClockFaceViewController_look;
  swift_beginAccess();
  sub_237E38500(a1, v3);
  swift_endAccess();
  sub_237E37418();
  return sub_237E2846C((uint64_t)a1);
}

uint64_t sub_237E38490(uint64_t a1)
{
  uint64_t result;

  result = sub_237E384C4(&qword_256898BA8, (uint64_t)&unk_237EE63C0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_237E384C4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for AnalogClockFaceViewController();
    result = MEMORY[0x23B8271D0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_237E38500(__int128 *a1, uint64_t a2)
{
  assignWithCopy for ClockFaceLook(a2, a1);
  return a2;
}

void sub_237E3853C(void *a1)
{
  uint64_t v1;
  char *v3;
  uint64_t v4;
  void *v5;
  id v6;
  char v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;

  v3 = *(char **)(v1 + OBJC_IVAR____TtC11ClockPoster29AnalogClockFaceViewController_clockFace);
  v4 = OBJC_IVAR____TtC11ClockPoster19AnalogClockFaceView_trailingComplicationView;
  v5 = *(void **)&v3[OBJC_IVAR____TtC11ClockPoster19AnalogClockFaceView_trailingComplicationView];
  if (!a1)
  {
    if (!v5)
      return;

    v8 = *(void **)&v3[v4];
    if (v8)
      goto LABEL_5;
LABEL_8:
    v11 = a1;
    v10 = 0;
    goto LABEL_9;
  }
  if (!v5)
    goto LABEL_8;
  sub_237E387EC();
  v6 = v5;
  v7 = sub_237EE2EB0();

  if ((v7 & 1) != 0)
    return;
  v8 = *(void **)&v3[v4];
  if (!v8)
    goto LABEL_8;
LABEL_5:
  v9 = a1;
  objc_msgSend(v8, sel_removeFromSuperview);
  v10 = *(void **)&v3[v4];
LABEL_9:
  *(_QWORD *)&v3[v4] = a1;
  v14 = a1;

  v12 = *(void **)&v3[v4];
  if (v12)
  {
    v13 = v12;
    objc_msgSend(v3, sel_addSubview_, v13);
    sub_237EAF9EC();

  }
  objc_msgSend(v3, sel_setNeedsLayout);

}

uint64_t sub_237E38668()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_237E3868C()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_237E386B8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_237E20844;
  return sub_237E37BA8(a1, v4, v5, v6);
}

uint64_t sub_237E38724(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898BC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_237E3876C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Alarm();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_237E387B0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Alarm();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_237E387EC()
{
  unint64_t result;

  result = qword_256898BE0;
  if (!qword_256898BE0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256898BE0);
  }
  return result;
}

void sub_237E38828(char a1, unsigned __int8 *a2, char a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t (*v22)();
  unint64_t *v23;
  void *v24;
  uint64_t aBlock;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  void *v28;
  id (*v29)();
  uint64_t v30;

  v4 = v3;
  v8 = sub_237EE1FBC();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a2;
  if (v11 == 2)
  {
    if ((a3 & 1) != 0)
    {
      v17 = objc_msgSend(v4, sel_window);

      if (v17)
      {
        v18 = objc_msgSend(v4, sel_superview);

        if (v18)
        {
          v14 = (void *)objc_opt_self();
          v19 = swift_allocObject();
          *(_QWORD *)(v19 + 16) = v4;
          *(_BYTE *)(v19 + 24) = a1 & 1;
          v29 = sub_237E390B0;
          v30 = v19;
          aBlock = MEMORY[0x24BDAC760];
          v26 = 1107296256;
          v16 = &block_descriptor_1;
          goto LABEL_11;
        }
      }
    }
    type metadata accessor for RedModeCustomColorTrait();
    v22 = type metadata accessor for RedModeCustomColorTrait;
    MEMORY[0x23B8264E0]();
    v23 = &qword_256898D20;
    v24 = &unk_237EE6528;
    goto LABEL_16;
  }
  if (v11 == 1)
  {
    if ((a3 & 1) != 0)
    {
      v12 = objc_msgSend(v4, sel_window);

      if (v12)
      {
        v13 = objc_msgSend(v4, sel_superview);

        if (v13)
        {
          v14 = (void *)objc_opt_self();
          v15 = swift_allocObject();
          *(_QWORD *)(v15 + 16) = v4;
          *(_BYTE *)(v15 + 24) = a1 & 1;
          v29 = sub_237E39138;
          v30 = v15;
          aBlock = MEMORY[0x24BDAC760];
          v26 = 1107296256;
          v16 = &block_descriptor_6;
LABEL_11:
          v27 = sub_237E38D84;
          v28 = v16;
          v20 = _Block_copy(&aBlock);
          v21 = v4;
          swift_release();
          objc_msgSend(v14, sel_transitionWithView_duration_options_animations_completion_, v21, 5242882, v20, 0, 1.2, aBlock, v26);
          _Block_release(v20);
          return;
        }
      }
    }
    type metadata accessor for RedModeTrait();
    v22 = type metadata accessor for RedModeTrait;
    MEMORY[0x23B8264E0]();
    v23 = &qword_256898D28;
    v24 = &unk_237EE6580;
LABEL_16:
    sub_237E390FC(v23, v22, (uint64_t)v24);
    sub_237EE1FC8();
    MEMORY[0x23B8264EC](v10);
    return;
  }
  if ((a1 & 1) != 0)
    objc_msgSend(v4, sel_amui_applyRedModeFilterAnimated_withCompletion_, a3 & 1, 0);
  else
    objc_msgSend(v4, sel_amui_clearRedModeFilterAnimated_withCompletion_, a3 & 1, 0);
}

uint64_t RedModeRenderingMethod.hash(into:)()
{
  return sub_237EE3270();
}

BOOL static RedModeRenderingMethod.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t RedModeRenderingMethod.hashValue.getter()
{
  sub_237EE3264();
  sub_237EE3270();
  return sub_237EE3294();
}

unint64_t sub_237E38BBC()
{
  unint64_t result;

  result = qword_256898BE8;
  if (!qword_256898BE8)
  {
    result = MEMORY[0x23B8271D0](&protocol conformance descriptor for RedModeRenderingMethod, &type metadata for RedModeRenderingMethod);
    atomic_store(result, (unint64_t *)&qword_256898BE8);
  }
  return result;
}

uint64_t dispatch thunk of RedModeSupporting.isDisplayStyleRedMode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RedModeSupporting.isDisplayStyleRedMode.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of RedModeSupporting.isDisplayStyleRedMode.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of RedModeSupporting.redModeRenderingMethod.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t storeEnumTagSinglePayload for RedModeRenderingMethod(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_237E38C6C + 4 * byte_237EE6425[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_237E38CA0 + 4 * byte_237EE6420[v4]))();
}

uint64_t sub_237E38CA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237E38CA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237E38CB0);
  return result;
}

uint64_t sub_237E38CBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237E38CC4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_237E38CC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237E38CD0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RedModeRenderingMethod()
{
  return &type metadata for RedModeRenderingMethod;
}

uint64_t sub_237E38CEC()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RedModeTrait()
{
  return objc_opt_self();
}

unint64_t sub_237E38D1C()
{
  return 0xD000000000000022;
}

uint64_t type metadata accessor for RedModeCustomColorTrait()
{
  return objc_opt_self();
}

unint64_t sub_237E38D68()
{
  return 0xD00000000000002DLL;
}

uint64_t sub_237E38D84(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

id sub_237E38DB0(void *a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v9 = sub_237EE1FBC();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  ((void (*)(uint64_t))a3)(v10);
  MEMORY[0x23B8264E0]();
  sub_237E390FC(a4, a3, a5);
  sub_237EE1FC8();
  MEMORY[0x23B8264EC](v12);
  objc_msgSend(a1, sel_updateTraitsIfNeeded);
  return objc_msgSend(a1, sel_layoutIfNeeded);
}

id sub_237E38E94(uint64_t a1, void *a2)
{
  type metadata accessor for RedModeTrait();
  sub_237E390FC(&qword_256898D28, type metadata accessor for RedModeTrait, (uint64_t)&unk_237EE6580);
  if ((sub_237EE2E2C() & 1) != 0)
    return sub_237E38F10();
  else
    return a2;
}

id sub_237E38F10()
{
  void *v0;
  double v1;
  double v2;
  double v4;
  double v5[2];

  v5[1] = *(double *)MEMORY[0x24BDAC8D0];
  v4 = 0.0;
  v5[0] = 0.0;
  objc_msgSend(v0, sel_getHue_saturation_brightness_alpha_, 0, 0, v5, &v4);
  v1 = v4 * v5[0] * 0.5 + 0.5;
  if (v1 > 1.0)
    v1 = 1.0;
  if (v1 < 0.0)
    v2 = 0.0;
  else
    v2 = v1;
  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, v2, 0.0, 0.0, 1.0);
}

id sub_237E38FD4(double a1, uint64_t a2, void *a3)
{
  type metadata accessor for RedModeCustomColorTrait();
  sub_237E390FC(&qword_256898D20, type metadata accessor for RedModeCustomColorTrait, (uint64_t)&unk_237EE6528);
  if ((sub_237EE2E2C() & 1) != 0)
    return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, a1 / 255.0, 0.0, 0.0, 1.0);
  else
    return a3;
}

uint64_t sub_237E3908C()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_237E390B0()
{
  uint64_t v0;

  return sub_237E38DB0(*(void **)(v0 + 16), *(unsigned __int8 *)(v0 + 24), type metadata accessor for RedModeCustomColorTrait, &qword_256898D20, (uint64_t)&unk_237EE6528);
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_237E390FC(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2();
    result = MEMORY[0x23B8271D0](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

id sub_237E39138()
{
  uint64_t v0;

  return sub_237E38DB0(*(void **)(v0 + 16), *(unsigned __int8 *)(v0 + 24), type metadata accessor for RedModeTrait, &qword_256898D28, (uint64_t)&unk_237EE6580);
}

uint64_t sub_237E3916C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  __n128 v9;
  uint64_t v11;

  v4 = sub_237EE26C4();
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a2)
  {
    case 0:
      (*(void (**)(char *, _QWORD, __n128))(v5 + 104))(v8, *MEMORY[0x24BDF3C28], v6);
      v9.n128_u64[0] = 0x3FD999999999999ALL;
      goto LABEL_6;
    case 1:
      (*(void (**)(char *, _QWORD, __n128))(v5 + 104))(v8, *MEMORY[0x24BDF3C28], v6);
      v9.n128_u64[0] = 0x3FE3333333333333;
      goto LABEL_6;
    case 2:
      (*(void (**)(char *, _QWORD, __n128))(v5 + 104))(v8, *MEMORY[0x24BDF3C28], v6);
      v9.n128_u64[0] = 0x3FE999999999999ALL;
      goto LABEL_6;
    case 3:
      (*(void (**)(char *, _QWORD, __n128))(v5 + 104))(v8, *MEMORY[0x24BDF3C28], v6);
      v9.n128_u64[0] = 1.0;
LABEL_6:
      MEMORY[0x23B825DC0](v8, v9, 0.0, 0.0, 1.0);
      break;
    default:
      return a1;
  }
  return a1;
}

uint64_t *sub_237E392AC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  id v12;
  uint64_t v13;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = (void *)a2[2];
    a1[2] = (uint64_t)v6;
    v7 = *(int *)(a3 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_237EE1EC0();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v12 = v6;
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t sub_237E3935C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();

  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_237EE1EC0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_237E393AC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  id v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = (void *)a2[2];
  a1[2] = v5;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_237EE1EC0();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v11 = v5;
  v10(v7, v8, v9);
  return a1;
}

_QWORD *sub_237E39430(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (void *)a2[2];
  v7 = (void *)a1[2];
  a1[2] = v6;
  v8 = v6;

  v9 = *(int *)(a3 + 24);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_237EE1EC0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t sub_237E394C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_237EE1EC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_237E39524(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = (void *)a1[2];
  a1[2] = a2[2];

  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_237EE1EC0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_237E395A0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_237E395AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_237EE1EC0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_237E39628()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_237E39634(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_237EE1EC0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for City()
{
  uint64_t result;

  result = qword_256898D88;
  if (!qword_256898D88)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_237E396E4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_237EE1EC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_237E39764()
{
  return sub_237E20E98(&qword_256898DC8, (uint64_t (*)(uint64_t))type metadata accessor for City, (uint64_t)&unk_237EE6648);
}

uint64_t sub_237E39794()
{
  uint64_t v0;
  id v1;

  sub_237EE3264();
  swift_bridgeObjectRetain();
  sub_237EE2ACC();
  swift_bridgeObjectRelease();
  v1 = *(id *)(v0 + 16);
  sub_237EE2EBC();

  sub_237EE1EC0();
  sub_237E20E98((unint64_t *)&unk_25689C110, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_237EE2A18();
  return sub_237EE3294();
}

uint64_t sub_237E39858()
{
  uint64_t v0;
  id v1;

  swift_bridgeObjectRetain();
  sub_237EE2ACC();
  swift_bridgeObjectRelease();
  v1 = *(id *)(v0 + 16);
  sub_237EE2EBC();

  sub_237EE1EC0();
  sub_237E20E98((unint64_t *)&unk_25689C110, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  return sub_237EE2A18();
}

uint64_t sub_237E3990C()
{
  uint64_t v0;
  id v1;

  sub_237EE3264();
  swift_bridgeObjectRetain();
  sub_237EE2ACC();
  swift_bridgeObjectRelease();
  v1 = *(id *)(v0 + 16);
  sub_237EE2EBC();

  sub_237EE1EC0();
  sub_237E20E98((unint64_t *)&unk_25689C110, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_237EE2A18();
  return sub_237EE3294();
}

uint64_t sub_237E399CC(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;

  v2 = *a1 == *a2 && a1[1] == a2[1];
  if (v2 || (sub_237EE31BC() & 1) != 0)
  {
    sub_237E39A5C();
    if ((sub_237EE2EB0() & 1) != 0)
    {
      type metadata accessor for City();
      JUMPOUT(0x23B825514);
    }
  }
  return 0;
}

unint64_t sub_237E39A5C()
{
  unint64_t result;

  result = qword_25689D9D0;
  if (!qword_25689D9D0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_25689D9D0);
  }
  return result;
}

void ClockFaceKind.suggestedLooks.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_237E39AC0()
{
  return sub_237E34F14();
}

uint64_t sub_237E39ACC()
{
  return sub_237E34BD8();
}

uint64_t sub_237E39AD8()
{
  uint64_t v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6460);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_237EE55E0;
  sub_237E8A51C();
  return v0;
}

uint64_t sub_237E39BF4()
{
  return sub_237E353DC();
}

uint64_t ClockFaceKind.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_237E39C30 + 4 * byte_237EE6675[*v0]))(0x6C617469676964, 0xE700000000000000);
}

uint64_t sub_237E39C30()
{
  return 0x676F6C616E61;
}

uint64_t sub_237E39C44()
{
  return 0x646C726F77;
}

uint64_t sub_237E39C58()
{
  return 0x72616C6F73;
}

uint64_t sub_237E39C6C()
{
  return 2036427888;
}

void *static ClockFaceKind.orderedStockKinds.getter()
{
  return &unk_2509BE5A8;
}

void ClockFaceKind.newConfiguration()(uint64_t a1@<X8>)
{
  _BYTE *v1;
  uint64_t v3;

  *(_BYTE *)(a1 + 97) = *v1;
  ClockFaceKind.suggestedLooks.getter();
  if (*(_QWORD *)(v3 + 16))
  {
    sub_237E28430(v3 + 32, a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

ClockPoster::ClockFaceKind_optional __swiftcall ClockFaceKind.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (ClockPoster::ClockFaceKind_optional)sub_237E3A078(v1);
}

void *static ClockFaceKind.allCases.getter()
{
  return &unk_2509BE668;
}

ClockPoster::ClockFaceKind_optional sub_237E39CF8(Swift::String *a1)
{
  return ClockFaceKind.init(rawValue:)(*a1);
}

uint64_t sub_237E39D04()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_237E39D34 + 4 * byte_237EE667A[*v0]))();
}

void sub_237E39D34(_QWORD *a1@<X8>)
{
  *a1 = 0x676F6C616E61;
  a1[1] = 0xE600000000000000;
}

void sub_237E39D4C(_QWORD *a1@<X8>)
{
  *a1 = 0x646C726F77;
  a1[1] = 0xE500000000000000;
}

void sub_237E39D64(_QWORD *a1@<X8>)
{
  *a1 = 0x72616C6F73;
  a1[1] = 0xE500000000000000;
}

void sub_237E39D7C(_QWORD *a1@<X8>)
{
  *a1 = 2036427888;
  a1[1] = 0xE400000000000000;
}

void sub_237E39D90()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_237EE3264();
  __asm { BR              X9 }
}

uint64_t sub_237E39DDC()
{
  sub_237EE2ACC();
  swift_bridgeObjectRelease();
  return sub_237EE3294();
}

void sub_237E39E50()
{
  __asm { BR              X10 }
}

uint64_t sub_237E39E8C()
{
  sub_237EE2ACC();
  return swift_bridgeObjectRelease();
}

void sub_237E39EEC()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_237EE3264();
  __asm { BR              X9 }
}

uint64_t sub_237E39F34()
{
  sub_237EE2ACC();
  swift_bridgeObjectRelease();
  return sub_237EE3294();
}

void sub_237E39FA8(char *a1)
{
  sub_237EAA7F4(*a1);
}

uint64_t sub_237E39FB4()
{
  sub_237E3A418();
  return sub_237EE2BA4();
}

uint64_t sub_237E3A010()
{
  sub_237E3A418();
  return sub_237EE2B98();
}

void sub_237E3A05C(_QWORD *a1@<X8>)
{
  *a1 = &unk_2509BE690;
}

ClockPoster::ClockFaceKind::DescriptorLocalizedStringKey_optional __swiftcall ClockFaceKind.DescriptorLocalizedStringKey.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (ClockPoster::ClockFaceKind::DescriptorLocalizedStringKey_optional)sub_237E3A078(v1);
}

uint64_t sub_237E3A078@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_237EE30F0();
  result = swift_bridgeObjectRelease();
  v4 = 5;
  if (v2 < 5)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t ClockFaceKind.DescriptorLocalizedStringKey.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_237E3A104 + 4 * byte_237EE668E[*v0]))(0xD000000000000012, 0x8000000237EEDFF0);
}

uint64_t sub_237E3A104@<X0>(uint64_t a1@<X8>)
{
  return a1 + 2;
}

unint64_t sub_237E3A11C()
{
  return 0xD000000000000011;
}

void sub_237E3A150(char *a1)
{
  sub_237EAAAF0(*a1);
}

void sub_237E3A15C()
{
  char *v0;

  sub_237EA0148(*v0);
}

void sub_237E3A164(uint64_t a1)
{
  char *v1;

  sub_237E8E9A4(a1, *v1);
}

void sub_237E3A16C(uint64_t a1)
{
  char *v1;

  sub_237E8EA98(a1, *v1);
}

ClockPoster::ClockFaceKind::DescriptorLocalizedStringKey_optional sub_237E3A174(Swift::String *a1)
{
  return ClockFaceKind.DescriptorLocalizedStringKey.init(rawValue:)(*a1);
}

uint64_t sub_237E3A180@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ClockFaceKind.DescriptorLocalizedStringKey.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void ClockFaceKind.displayNameLocalizedStringKey.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = 0x402030001uLL >> (8 * *v1);
}

unint64_t sub_237E3A1C8()
{
  unint64_t result;

  result = qword_256898DD0;
  if (!qword_256898DD0)
  {
    result = MEMORY[0x23B8271D0](&protocol conformance descriptor for ClockFaceKind, &type metadata for ClockFaceKind);
    atomic_store(result, (unint64_t *)&qword_256898DD0);
  }
  return result;
}

unint64_t sub_237E3A210()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256898DD8;
  if (!qword_256898DD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256898DE0);
    result = MEMORY[0x23B8271D0](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256898DD8);
  }
  return result;
}

unint64_t sub_237E3A260()
{
  unint64_t result;

  result = qword_256898DE8;
  if (!qword_256898DE8)
  {
    result = MEMORY[0x23B8271D0](&protocol conformance descriptor for ClockFaceKind.DescriptorLocalizedStringKey, &type metadata for ClockFaceKind.DescriptorLocalizedStringKey);
    atomic_store(result, (unint64_t *)&qword_256898DE8);
  }
  return result;
}

ValueMetadata *type metadata accessor for ClockFaceKind()
{
  return &type metadata for ClockFaceKind;
}

uint64_t getEnumTagSinglePayload for LocationStatus(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s11ClockPoster13ClockFaceKindOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_237E3A398 + 4 * byte_237EE6698[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_237E3A3CC + 4 * byte_237EE6693[v4]))();
}

uint64_t sub_237E3A3CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237E3A3D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237E3A3DCLL);
  return result;
}

uint64_t sub_237E3A3E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237E3A3F0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_237E3A3F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237E3A3FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClockFaceKind.DescriptorLocalizedStringKey()
{
  return &type metadata for ClockFaceKind.DescriptorLocalizedStringKey;
}

unint64_t sub_237E3A418()
{
  unint64_t result;

  result = qword_256898DF0;
  if (!qword_256898DF0)
  {
    result = MEMORY[0x23B8271D0](&protocol conformance descriptor for ClockFaceKind, &type metadata for ClockFaceKind);
    atomic_store(result, (unint64_t *)&qword_256898DF0);
  }
  return result;
}

id sub_237E3A464(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, double a7, double a8)
{
  id result;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double *v20;
  double *v21;
  uint64_t v22;
  double v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  unint64_t v28;
  unint64_t v29;
  double *v30;
  uint64_t v31;
  double *v32;
  uint64_t v33;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD420]), sel_init);
  v16 = result;
  if ((a1 & 1) == 0)
    a8 = 0.0;
  v17 = *(_QWORD *)(a2 + 16);
  if (v17)
  {
    v33 = a3;
    sub_237E2CCDC(a5);
    v18 = qword_256897B88;
    swift_bridgeObjectRetain();
    if (v18 != -1)
LABEL_35:
      swift_once();
    v19 = 0;
    v20 = (double *)MEMORY[0x24BEE4AF8];
    do
    {
      v22 = v19 + 1;
      if (__OFADD__(v19, 1))
      {
        __break(1u);
        goto LABEL_35;
      }
      UIPointRoundToScale();
      v24 = v23;
      v26 = v25;
      if ((a6 & 1) != 0 || (v23 > 4.0 ? (v27 = v23 < a7 + -4.0) : (v27 = 0), v27))
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v20 = (double *)sub_237E61DE8(0, *((_QWORD *)v20 + 2) + 1, 1, v20);
        v29 = *((_QWORD *)v20 + 2);
        v28 = *((_QWORD *)v20 + 3);
        if (v29 >= v28 >> 1)
          v20 = (double *)sub_237E61DE8((_QWORD *)(v28 > 1), v29 + 1, 1, v20);
        *((_QWORD *)v20 + 2) = v29 + 1;
        v21 = &v20[2 * v29];
        v21[4] = v24;
        *((_QWORD *)v21 + 5) = v26;
      }
      ++v19;
    }
    while (v22 != v17);
    sub_237E3A78C(a5);
    result = (id)swift_bridgeObjectRelease();
    a3 = v33;
    if ((a4 & 1) == 0)
      goto LABEL_20;
  }
  else
  {
    v20 = (double *)MEMORY[0x24BEE4AF8];
    if ((a4 & 1) == 0)
    {
LABEL_20:
      v30 = (double *)sub_237E6F2B4((uint64_t)v20, a3);
      result = (id)swift_bridgeObjectRelease();
      v20 = v30;
    }
  }
  if ((a6 & 1) != 0)
  {
    objc_msgSend(v16, sel_moveToPoint_, 0.0, a8);
  }
  else
  {
    if (!*((_QWORD *)v20 + 2))
    {
      __break(1u);
      return result;
    }
    objc_msgSend(v16, sel_moveToPoint_, v20[4], v20[5]);
  }
  v31 = *((_QWORD *)v20 + 2);
  if (v31)
  {
    swift_bridgeObjectRetain();
    v32 = v20 + 5;
    do
    {
      objc_msgSend(v16, sel_addLineToPoint_, *(v32 - 1), *v32);
      v32 += 2;
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if ((a6 & 1) != 0)
  {
    objc_msgSend(v16, sel_addLineToPoint_, a7, a8);
    objc_msgSend(v16, sel_addLineToPoint_, 0.0, a8);
  }
  return v16;
}

uint64_t sub_237E3A78C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_237E3A7C0(uint64_t a1, void *a2, char a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = sub_237EE2268();
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_237EE2220();
  MEMORY[0x24BDAC7A8](v6);
  objc_msgSend(a2, sel_capHeight);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898DF8);
  if (a3 < 0)
  {
    sub_237EE2244();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_237EE5590;
    sub_237EE2214();
    sub_237EE2250();
    sub_237EE21F0();
    sub_237EE2250();
    sub_237EE2214();
    sub_237EE2250();
    sub_237EE21F0();
  }
  else
  {
    sub_237EE2244();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_237EE68F0;
    sub_237EE21F0();
    sub_237EE2250();
    sub_237EE2208();
    sub_237EE2250();
    sub_237EE21FC();
    sub_237EE2250();
    sub_237EE2214();
    sub_237EE2250();
    sub_237EE21F0();
    sub_237EE2250();
    sub_237EE2208();
    sub_237EE2250();
    sub_237EE21FC();
    sub_237EE2250();
    sub_237EE2214();
  }
  sub_237EE2250();
  v7 = sub_237EE2910();
  sub_237EE225C();
  sub_237EE2274();

  return v7;
}

uint64_t initializeBufferWithCopyOfBuffer for TimeTransition(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  id v5;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(id *)a2;
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void destroy for TimeTransition(id *a1)
{

}

uint64_t assignWithCopy for TimeTransition(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  id v5;
  void *v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(id *)a2;
  v6 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;

  return a1;
}

uint64_t assignWithTake for TimeTransition(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;

  return a1;
}

uint64_t getEnumTagSinglePayload for TimeTransition(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 127);
  v3 = (*(_BYTE *)(a1 + 8) & 0x7E | (*(unsigned __int8 *)(a1 + 8) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for TimeTransition(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 127;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_BYTE *)(result + 8) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_237E3ADC4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8) >> 7;
}

uint64_t sub_237E3ADD0(uint64_t result)
{
  *(_BYTE *)(result + 8) &= ~0x80u;
  return result;
}

uint64_t sub_237E3ADE0(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = *(_BYTE *)(result + 8) & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for TimeTransition()
{
  return &type metadata for TimeTransition;
}

uint64_t sub_237E3AE08()
{
  uint64_t v0;
  uint64_t v2;

  v2 = MEMORY[0x24BEE4AF8];
  v0 = 5;
  do
  {
    objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
    MEMORY[0x23B82621C]();
    if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_237EE2BF8();
    sub_237EE2C10();
    sub_237EE2BEC();
    --v0;
  }
  while (v0);
  return v2;
}

void sub_237E3AEC4()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)(v0 + 32);
  if (v3)
  {
    v4 = v3 & 0xFFFFFFFFFFFFFF8;
    if ((unint64_t)v3 >> 62)
      goto LABEL_30;
    v5 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    while (v5)
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        v6 = (id)MEMORY[0x23B826624](0, v3);
      }
      else
      {
        if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_37;
        }
        v6 = *(id *)(v3 + 32);
      }
      v1 = v6;
      v0 = *(_QWORD *)(v0 + 16);
      v2 = (unint64_t)v0 >> 62;
      if (!((unint64_t)v0 >> 62))
      {
        if (*(uint64_t *)((v0 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
          goto LABEL_38;
        goto LABEL_9;
      }
LABEL_37:
      swift_bridgeObjectRetain();
      v15 = sub_237EE30A8();
      swift_bridgeObjectRelease();
      if (v15 < 1)
      {
LABEL_38:

        break;
      }
LABEL_9:
      v7 = 0;
      if (v0 < 0)
        v8 = v0;
      else
        v8 = v0 & 0xFFFFFFFFFFFFFF8;
      v16 = v8;
      v9 = v5 - 1;
      while (1)
      {
        if ((v0 & 0xC000000000000001) != 0)
        {
          v11 = (id)MEMORY[0x23B826624](v7, v0);
        }
        else
        {
          if (v7 >= *(_QWORD *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_28;
          v11 = *(id *)(v0 + 8 * v7 + 32);
        }
        v12 = v11;
        objc_msgSend(v11, sel_setTextColor_, v1, v16);

        if (v9 == v7)
          goto LABEL_39;
        v13 = v7 + 1;
        if ((v3 & 0xC000000000000001) != 0)
        {
          v14 = (id)MEMORY[0x23B826624](v7 + 1, v3);
        }
        else
        {
          if (v13 >= *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_29;
          v14 = *(id *)(v3 + 8 * v7 + 40);
        }
        v1 = v14;
        if (__OFADD__(v13, 1))
          break;
        if (v2)
        {
          swift_bridgeObjectRetain();
          v10 = sub_237EE30A8();
          swift_bridgeObjectRelease();
        }
        else
        {
          v10 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        if ((uint64_t)++v7 >= v10)
          goto LABEL_38;
      }
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      if (v3 >= 0)
        v1 = (void *)v4;
      else
        v1 = (void *)v3;
      swift_bridgeObjectRetain();
      v5 = sub_237EE30A8();
    }
LABEL_39:
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_237E3B0CC()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t i;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[3];
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25689C1A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TimeString(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (_QWORD *)((char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = v1 + OBJC_IVAR____TtC11ClockPoster16RollingTimeLabel_timeString;
  swift_beginAccess();
  sub_237E3B5B4(v9, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_237E3B5FC((uint64_t)v4);
    v1 = *(_QWORD *)(v1 + 16);
    if (!(v1 >> 62))
    {
      v10 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain_n();
      if (v10)
        goto LABEL_4;
      return swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    sub_237E20634((uint64_t)v4, (uint64_t)v8);
    v15 = sub_237EE2AD8();
    v16 = *v8;
    v17 = v8[1];
    if (v15 == 2)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      v28 = 9142498;
      v29 = 0xA300000000000000;
      sub_237EE2AF0();
      v16 = v28;
      v17 = v29;
    }
    v18 = HIBYTE(v17) & 0xF;
    v28 = v16;
    v29 = v17;
    if ((v17 & 0x2000000000000000) == 0)
      v18 = v16 & 0xFFFFFFFFFFFFLL;
    v30 = 0;
    v31 = v18;
    sub_237EE2AFC();
    if (!v19)
    {
LABEL_29:
      swift_bridgeObjectRelease();
      return sub_237E3B63C((uint64_t)v8);
    }
    v20 = 0;
    while (!__OFADD__(v20, 1))
    {
      v21 = *(_QWORD *)(v1 + 16);
      if (v21 >> 62)
      {
        swift_bridgeObjectRetain();
        v26 = sub_237EE30A8();
        swift_bridgeObjectRelease();
        if (v20 >= v26)
        {
LABEL_28:
          swift_bridgeObjectRelease();
          goto LABEL_29;
        }
      }
      else if (v20 >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_28;
      }
      if ((v21 & 0xC000000000000001) != 0)
      {
        v22 = (id)MEMORY[0x23B826624](v20, v21);
      }
      else
      {
        if ((unint64_t)v20 >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_31;
        v22 = *(id *)(v21 + 8 * v20 + 32);
      }
      v23 = v22;
      v27[1] = 0;
      v27[2] = 0xE000000000000000;
      sub_237EE2A30();
      swift_bridgeObjectRelease();
      v24 = (void *)sub_237EE2A54();
      swift_bridgeObjectRelease();
      objc_msgSend(v23, sel_setText_, v24);

      objc_msgSend(v23, sel_sizeToFit);
      sub_237EE2AFC();
      ++v20;
      if (!v25)
        goto LABEL_29;
    }
    __break(1u);
LABEL_31:
    __break(1u);
  }
  swift_bridgeObjectRetain_n();
  result = sub_237EE30A8();
  v10 = result;
  if (!result)
    return swift_bridgeObjectRelease_n();
LABEL_4:
  if (v10 >= 1)
  {
    for (i = 0; i != v10; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0)
        v13 = (id)MEMORY[0x23B826624](i, v1);
      else
        v13 = *(id *)(v1 + 8 * i + 32);
      v14 = v13;
      objc_msgSend(v13, sel_setText_, 0);

    }
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

uint64_t sub_237E3B44C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_237E3B5FC(v0 + OBJC_IVAR____TtC11ClockPoster16RollingTimeLabel_timeString);
  return swift_deallocClassInstance();
}

uint64_t sub_237E3B494()
{
  return type metadata accessor for RollingTimeLabel();
}

uint64_t type metadata accessor for RollingTimeLabel()
{
  uint64_t result;

  result = qword_256898E28;
  if (!qword_256898E28)
    return swift_getSingletonMetadata();
  return result;
}

void sub_237E3B4D8()
{
  unint64_t v0;

  sub_237E3B560();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_237E3B560()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256897BF8[0])
  {
    type metadata accessor for TimeString(255);
    v0 = sub_237EE2ED4();
    if (!v1)
      atomic_store(v0, qword_256897BF8);
  }
}

uint64_t sub_237E3B5B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25689C1A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_237E3B5FC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25689C1A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_237E3B63C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TimeString(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_237E3B678(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  void (*v30)(char *);

  v30 = a1;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899568);
  MEMORY[0x24BDAC7A8](v29);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)((char *)&v26 - v8);
  v10 = *(_QWORD *)(a3 + 64);
  v27 = a3 + 64;
  v11 = 1 << *(_BYTE *)(a3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v28 = (unint64_t)(v11 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v15 = 0;
  while (v13)
  {
    v16 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    v17 = v16 | (v15 << 6);
LABEL_5:
    v18 = *(_QWORD *)(a3 + 56);
    v19 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v17);
    v20 = *v19;
    v21 = v19[1];
    v22 = type metadata accessor for WorldViewModel.Pin(0);
    sub_237E21EBC(v18 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v17, (uint64_t)v9 + *(int *)(v29 + 48), type metadata accessor for WorldViewModel.Pin);
    *v9 = v20;
    v9[1] = v21;
    sub_237E21FC0((uint64_t)v9, (uint64_t)v6, &qword_256899568);
    v30(v6);
    result = sub_237E2209C((uint64_t)v6, &qword_256899568);
    if (v3)
      return swift_release();
  }
  if (__OFADD__(v15++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v15 >= v28)
    return swift_release();
  v24 = *(_QWORD *)(v27 + 8 * v15);
  if (v24)
  {
LABEL_19:
    v13 = (v24 - 1) & v24;
    v17 = __clz(__rbit64(v24)) + (v15 << 6);
    goto LABEL_5;
  }
  v25 = v15 + 1;
  if (v15 + 1 >= v28)
    return swift_release();
  v24 = *(_QWORD *)(v27 + 8 * v25);
  if (v24)
    goto LABEL_18;
  v25 = v15 + 2;
  if (v15 + 2 >= v28)
    return swift_release();
  v24 = *(_QWORD *)(v27 + 8 * v25);
  if (v24)
    goto LABEL_18;
  v25 = v15 + 3;
  if (v15 + 3 >= v28)
    return swift_release();
  v24 = *(_QWORD *)(v27 + 8 * v25);
  if (v24)
    goto LABEL_18;
  v25 = v15 + 4;
  if (v15 + 4 >= v28)
    return swift_release();
  v24 = *(_QWORD *)(v27 + 8 * v25);
  if (v24)
  {
LABEL_18:
    v15 = v25;
    goto LABEL_19;
  }
  while (1)
  {
    v15 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v15 >= v28)
      return swift_release();
    v24 = *(_QWORD *)(v27 + 8 * v15);
    ++v25;
    if (v24)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_237E3B8E8()
{
  return 1;
}

uint64_t sub_237E3B8F0()
{
  sub_237EE3264();
  sub_237EE3270();
  return sub_237EE3294();
}

uint64_t sub_237E3B930()
{
  return sub_237EE3270();
}

uint64_t sub_237E3B954()
{
  sub_237EE3264();
  sub_237EE3270();
  return sub_237EE3294();
}

uint64_t sub_237E3B990()
{
  return 1802465132;
}

uint64_t sub_237E3B9A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 1802465132 && a2 == 0xE400000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_237EE31BC();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_237E3BA24()
{
  return 0;
}

void sub_237E3BA30(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_237E3BA3C()
{
  sub_237E471B8();
  return sub_237EE3324();
}

uint64_t sub_237E3BA64()
{
  sub_237E471B8();
  return sub_237EE3330();
}

uint64_t sub_237E3BA8C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v13;
  __int128 v14[6];
  _OWORD v15[6];
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899528);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_237E471B8();
  sub_237EE32D0();
  if (!v2)
  {
    sub_237E471FC();
    sub_237EE312C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_237E2D180(v14, (uint64_t)v15);
    v9 = v15[5];
    *(_OWORD *)(a2 + 64) = v15[4];
    *(_OWORD *)(a2 + 80) = v9;
    *(_BYTE *)(a2 + 96) = v16;
    v10 = v15[1];
    *(_OWORD *)a2 = v15[0];
    *(_OWORD *)(a2 + 16) = v10;
    v11 = v15[3];
    *(_OWORD *)(a2 + 32) = v15[2];
    *(_OWORD *)(a2 + 48) = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_237E3BBD4@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_237E2D180(a1, a2);
}

uint64_t sub_237E3BBDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_237E28430(v1, a1);
}

uint64_t sub_237E3BBE8(uint64_t a1)
{
  uint64_t v1;

  return sub_237E4717C(a1, v1);
}

uint64_t (*sub_237E3BBF0())()
{
  return CGSizeMake;
}

uint64_t sub_237E3BC00@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_237E3BA8C(a1, a2);
}

uint64_t sub_237E3BC14(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899540);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_237E471B8();
  sub_237EE32DC();
  sub_237E47240();
  sub_237EE3168();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_237E3BD0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  id v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  id v25;
  id v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v54;
  uint64_t v55;
  _OWORD v56[2];
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897E20);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RollingClockViewModel();
  swift_allocObject();
  *(_QWORD *)(v1 + 120) = sub_237E19ED0();
  swift_allocObject();
  *(_QWORD *)(v1 + 128) = sub_237E19ED0();
  *(_WORD *)(v1 + 176) = 256;
  *(_QWORD *)(v1 + 336) = MEMORY[0x24BEE4AF8];
  v7 = v1 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__highlighted;
  v8 = type metadata accessor for WorldViewModel.Pin(0);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
  v9(v7, 1, 1, v8);
  v9(v2 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__currentLocationPin, 1, 1, v8);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__cityPinsByCoordinate) = MEMORY[0x24BEE4B00];
  v10 = v2 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__solarTerminatorPath;
  *(_QWORD *)(v10 + 8) = 0;
  *(_QWORD *)(v10 + 16) = 0;
  *(_QWORD *)v10 = 0;
  *(_BYTE *)(v10 + 24) = 0;
  v11 = v2 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__alarmTime;
  v12 = sub_237EE1D70();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__fetchCurrentLocationNameTask) = 0;
  sub_237EE1F44();
  sub_237E2A0AC(a1, v2 + 16);
  v55 = a1;
  v13 = ClockFaceLook.identifier.getter();
  sub_237E475D4(v13, v14, (uint64_t)&v58);
  swift_bridgeObjectRelease();
  v15 = (void *)objc_opt_self();
  v16 = objc_msgSend(v15, sel_mainScreen);
  objc_msgSend(v16, sel_bounds);
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v24 = v23;

  v25 = objc_msgSend(v15, sel_mainScreen);
  v26 = objc_msgSend(v25, sel_traitCollection);

  objc_msgSend(v26, sel_displayScale);
  sub_237EDF798(v56, v18, v20, v22, v24, 40.666, 95.0, 44.667, 41.0);
  v27 = v56[1];
  *(_OWORD *)(v2 + 144) = v56[0];
  *(_OWORD *)(v2 + 160) = v27;
  v28 = v64;
  v29 = v66;
  *(_OWORD *)(v2 + 296) = v65;
  *(_OWORD *)(v2 + 312) = v29;
  v30 = v61;
  *(_OWORD *)(v2 + 216) = v60;
  *(_OWORD *)(v2 + 232) = v30;
  v31 = v63;
  *(_OWORD *)(v2 + 248) = v62;
  v32 = v57;
  *(_QWORD *)(v2 + 328) = v67;
  *(_OWORD *)(v2 + 264) = v31;
  *(_OWORD *)(v2 + 280) = v28;
  v33 = v59;
  *(_OWORD *)(v2 + 184) = v58;
  *(_OWORD *)(v2 + 200) = v33;
  *(_BYTE *)(v2 + 136) = v32 == 1;
  v34 = sub_237EE2C64();
  v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56);
  v35(v6, 1, 1, v34);
  v36 = swift_allocObject();
  swift_weakInit();
  sub_237EE2C4C();
  sub_237E2CCDC((uint64_t)&v58);
  swift_retain();
  v37 = sub_237EE2C40();
  v38 = (_QWORD *)swift_allocObject();
  v39 = MEMORY[0x24BEE6930];
  v38[2] = v37;
  v38[3] = v39;
  v38[4] = v36;
  swift_release();
  sub_237EDA9E4((uint64_t)v6, (uint64_t)&unk_256899580, (uint64_t)v38);
  swift_release();
  v35(v6, 1, 1, v34);
  v40 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  v41 = sub_237EE2C40();
  v42 = (_QWORD *)swift_allocObject();
  v42[2] = v41;
  v42[3] = v39;
  v42[4] = v40;
  swift_release();
  sub_237EDA9E4((uint64_t)v6, (uint64_t)&unk_256899590, (uint64_t)v42);
  swift_release();
  v35(v6, 1, 1, v34);
  v43 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  v44 = sub_237EE2C40();
  v45 = (_QWORD *)swift_allocObject();
  v45[2] = v44;
  v45[3] = v39;
  v45[4] = v43;
  swift_release();
  sub_237EDA9E4((uint64_t)v6, (uint64_t)&unk_2568995A0, (uint64_t)v45);
  swift_release();
  v35(v6, 1, 1, v34);
  v46 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  v47 = sub_237EE2C40();
  v48 = swift_allocObject();
  v49 = v65;
  *(_OWORD *)(v48 + 136) = v64;
  *(_OWORD *)(v48 + 152) = v49;
  *(_OWORD *)(v48 + 168) = v66;
  v50 = v61;
  *(_OWORD *)(v48 + 72) = v60;
  *(_OWORD *)(v48 + 88) = v50;
  v51 = v63;
  *(_OWORD *)(v48 + 104) = v62;
  *(_OWORD *)(v48 + 120) = v51;
  v52 = v59;
  *(_OWORD *)(v48 + 40) = v58;
  *(_QWORD *)(v48 + 16) = v47;
  *(_QWORD *)(v48 + 24) = v39;
  *(_QWORD *)(v48 + 32) = v46;
  *(_QWORD *)(v48 + 184) = v67;
  *(_OWORD *)(v48 + 56) = v52;
  swift_release();
  sub_237EDA9E4((uint64_t)v6, (uint64_t)&unk_2568995B0, v48);
  swift_release();
  if (qword_256897B58 != -1)
    swift_once();
  sub_237EB8E94();
  sub_237E2A108(v55);
  return v2;
}

uint64_t sub_237E3C33C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[10] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568995E8);
  v4[11] = v5;
  v4[12] = *(_QWORD *)(v5 - 8);
  v4[13] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568995F0);
  v4[14] = v6;
  v4[15] = *(_QWORD *)(v6 - 8);
  v4[16] = swift_task_alloc();
  v4[17] = sub_237EE2C4C();
  v4[18] = sub_237EE2C40();
  v4[19] = sub_237EE2C28();
  v4[20] = v7;
  return swift_task_switch();
}

uint64_t sub_237E3C404()
{
  uint64_t v0;

  if (qword_256897AE8 != -1)
    swift_once();
  *(_QWORD *)(v0 + 168) = qword_25689DF10;
  return swift_task_switch();
}

uint64_t sub_237E3C468()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_solarTerminatorStream);
  swift_retain();
  sub_237E90340(v3, v1, v2);
  return swift_task_switch();
}

uint64_t sub_237E3C4CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[12];
  v1 = v0[13];
  v3 = v0[11];
  sub_237EE2C88();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  v0[22] = 0;
  v0[23] = sub_237EE2C40();
  v4 = (_QWORD *)swift_task_alloc();
  v0[24] = v4;
  *v4 = v0;
  v4[1] = sub_237E3C598;
  return sub_237EE2C94();
}

uint64_t sub_237E3C598()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_237E3C5EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t Strong;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  if (v1 == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
    swift_release();
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 32);
    v4 = *(_BYTE *)(v0 + 40);
    Strong = swift_weakLoadStrong();
    if (Strong)
    {
      v6 = Strong;
      v7 = v3;
      v8 = *(_QWORD *)(v0 + 176);
      swift_getKeyPath();
      v9 = swift_task_alloc();
      *(_QWORD *)(v9 + 16) = v6;
      *(_QWORD *)(v9 + 24) = v2;
      *(_QWORD *)(v9 + 32) = v1;
      *(_QWORD *)(v9 + 40) = v7;
      *(_BYTE *)(v9 + 48) = v4;
      *(_QWORD *)(v0 + 72) = v6;
      sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
      sub_237EE1F14();
      sub_237E48530(v2, v1);
      swift_release();
      swift_release();
      swift_task_dealloc();
      *(_QWORD *)(v0 + 176) = v8;
      *(_QWORD *)(v0 + 184) = sub_237EE2C40();
      v10 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 192) = v10;
      *v10 = v0;
      v10[1] = sub_237E3C598;
      return sub_237EE2C94();
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 112));
    swift_release();
    sub_237E48530(v2, v1);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_237E3C7F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[11] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568995D8);
  v4[12] = v5;
  v4[13] = *(_QWORD *)(v5 - 8);
  v4[14] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568995E0);
  v4[15] = v6;
  v4[16] = *(_QWORD *)(v6 - 8);
  v4[17] = swift_task_alloc();
  v4[18] = sub_237EE2C4C();
  v4[19] = sub_237EE2C40();
  v4[20] = sub_237EE2C28();
  v4[21] = v7;
  return swift_task_switch();
}

uint64_t sub_237E3C8BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  if (qword_256897B58 != -1)
    swift_once();
  v2 = v0[13];
  v1 = v0[14];
  v3 = v0[12];
  v4 = qword_25689DFE8;
  swift_retain();
  v5 = swift_retain();
  sub_237E907C0(v5, v4, v1);
  swift_release();
  sub_237EE2C88();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  v0[22] = 0;
  v0[23] = sub_237EE2C40();
  v6 = (_QWORD *)swift_task_alloc();
  v0[24] = v6;
  *v6 = v0;
  v6[1] = sub_237E3C9F8;
  return sub_237EE2C94();
}

uint64_t sub_237E3C9F8()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_237E3CA4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 64);
  if (v1 == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
    swift_release();
LABEL_7:
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
    swift_release();
    sub_237E47D4C(v1);
    goto LABEL_7;
  }
  v3 = Strong;
  swift_getKeyPath();
  *(_QWORD *)(v0 + 80) = v3;
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  swift_beginAccess();
  v4 = swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 72) = sub_237E3CC88(v4);
  v5 = *(_QWORD *)(v0 + 176);
  if (v1)
  {
    swift_retain();
    sub_237E47D5C(v1, v0 + 72, v3);
    swift_release();
    sub_237E47D4C(v1);
  }
  swift_retain();
  v7 = swift_bridgeObjectRetain();
  sub_237E47F9C(v7, v3);
  swift_release();
  swift_bridgeObjectRelease();
  sub_237E40FBC();
  sub_237E41320();
  swift_release();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 176) = v5;
  *(_QWORD *)(v0 + 184) = sub_237EE2C40();
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 192) = v8;
  *v8 = v0;
  v8[1] = sub_237E3C9F8;
  return sub_237EE2C94();
}

uint64_t sub_237E3CC88(uint64_t a1)
{
  uint64_t result;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  __int128 v14;
  uint64_t v15;

  type metadata accessor for CLLocationCoordinate2D(0);
  sub_237E20E98(qword_2568994C8, (uint64_t (*)(uint64_t))type metadata accessor for CLLocationCoordinate2D, (uint64_t)&protocol conformance descriptor for CLLocationCoordinate2D);
  result = sub_237EE2D0C();
  v3 = 0;
  v15 = result;
  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        goto LABEL_23;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          goto LABEL_23;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
        {
          v3 = v11 + 3;
          if (v11 + 3 >= v8)
            goto LABEL_23;
          v12 = *(_QWORD *)(v4 + 8 * v3);
          if (!v12)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    result = sub_237E468A8(&v14, *(double *)(*(_QWORD *)(a1 + 48) + 16 * v10), *(double *)(*(_QWORD *)(a1 + 48) + 16 * v10 + 8));
  }
  v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v15;
  }
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_237E3CE20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  _BYTE *v15;
  void *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  double v32;
  double v33;
  double v34;
  double v35;
  _BYTE v37[4];
  int v38;
  _BYTE *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899518);
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v37[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v43 = type metadata accessor for WorldViewModel.Pin(0);
  v40 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v39 = &v37[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v37[-v10];
  *(_QWORD *)&v13 = MEMORY[0x24BDAC7A8](v12).n128_u64[0];
  v15 = &v37[-v14];
  v16 = *(void **)(a1 + 16);
  objc_msgSend(v16, sel_coordinate, v13);
  sub_237E46B20(v17, v18);
  sub_237E421D0((uint64_t *)a1, (uint64_t)v15);
  objc_msgSend(v16, sel_coordinate);
  v20 = v19;
  v22 = v21;
  swift_getKeyPath();
  v42 = a3;
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  v23 = (uint64_t *)(a3 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__cityPinsByCoordinate);
  swift_beginAccess();
  v24 = *v23;
  if (*(_QWORD *)(*v23 + 16))
  {
    v25 = sub_237EAD79C(v20, v22);
    if ((v26 & 1) != 0)
    {
      v27 = *(_QWORD *)(v24 + 56) + *(_QWORD *)(v40 + 72) * v25;
      v28 = v39;
      sub_237E21EBC(v27, (uint64_t)v39, type metadata accessor for WorldViewModel.Pin);
      sub_237E47CE0((uint64_t)v28, (uint64_t)v11, type metadata accessor for WorldViewModel.Pin);
      v15[17] = v11[17];
      v29 = v43;
      v30 = &v11[*(int *)(v43 + 36)];
      v39 = *(_BYTE **)v30;
      v38 = v30[8];
      sub_237E21F00((uint64_t)v11, type metadata accessor for WorldViewModel.Pin);
      v31 = &v15[*(int *)(v29 + 36)];
      *(_QWORD *)v31 = v39;
      v31[8] = v38;
    }
  }
  objc_msgSend(*(id *)(a1 + 16), sel_coordinate);
  v33 = v32;
  v35 = v34;
  sub_237E21EBC((uint64_t)v15, (uint64_t)v7, type metadata accessor for WorldViewModel.Pin);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v7, 0, 1, v43);
  swift_getKeyPath();
  v41 = a3;
  sub_237EE1F20();
  swift_release();
  v41 = a3;
  swift_getKeyPath();
  sub_237EE1F38();
  swift_release();
  swift_beginAccess();
  sub_237E8EDC8((uint64_t)v7, v33, v35);
  swift_endAccess();
  v41 = a3;
  swift_getKeyPath();
  sub_237EE1F2C();
  swift_release();
  return sub_237E21F00((uint64_t)v15, type metadata accessor for WorldViewModel.Pin);
}

uint64_t sub_237E3D194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[6] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  v4[7] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898BC0);
  v4[8] = v5;
  v4[9] = *(_QWORD *)(v5 - 8);
  v4[10] = swift_task_alloc();
  v4[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898BC8);
  v4[12] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898BD0);
  v4[13] = v6;
  v4[14] = *(_QWORD *)(v6 - 8);
  v4[15] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898BD8);
  v4[16] = v7;
  v4[17] = *(_QWORD *)(v7 - 8);
  v4[18] = swift_task_alloc();
  v4[19] = sub_237EE2C4C();
  v4[20] = sub_237EE2C40();
  v4[21] = sub_237EE2C28();
  v4[22] = v8;
  return swift_task_switch();
}

uint64_t sub_237E3D2E0()
{
  uint64_t v0;

  if (qword_256897AE0 != -1)
    swift_once();
  *(_QWORD *)(v0 + 184) = qword_25689DF08;
  return swift_task_switch();
}

uint64_t sub_237E3D344()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v1 + 112);
  swift_retain();
  sub_237E8FF84(v3, v1, v2);
  return swift_task_switch();
}

uint64_t sub_237E3D3A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[14];
  v1 = v0[15];
  v3 = v0[13];
  sub_237EE2C88();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  v0[24] = 0;
  v0[25] = sub_237EE2C40();
  v4 = (_QWORD *)swift_task_alloc();
  v0[26] = v4;
  *v4 = v0;
  v4[1] = sub_237E3D46C;
  return sub_237EE2C94();
}

uint64_t sub_237E3D46C()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_237E3D4C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;

  v1 = *(_QWORD *)(v0 + 96);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 72) + 48))(v1, 1, *(_QWORD *)(v0 + 64)) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128));
    swift_release();
LABEL_7:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  sub_237E21FC0(v1, *(_QWORD *)(v0 + 88), &qword_256898BC0);
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    v11 = *(_QWORD *)(v0 + 136);
    v10 = *(_QWORD *)(v0 + 144);
    v12 = *(_QWORD *)(v0 + 128);
    v13 = *(_QWORD *)(v0 + 88);
    swift_release();
    sub_237E2209C(v13, &qword_256898BC0);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    goto LABEL_7;
  }
  v3 = Strong;
  v4 = *(_QWORD *)(v0 + 80);
  sub_237E22004(*(_QWORD *)(v0 + 88), v4, &qword_256898BC0);
  v5 = type metadata accessor for Alarm();
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  v7 = *(_QWORD *)(v0 + 80);
  v8 = *(_QWORD *)(v0 + 56);
  if (v6 == 1)
  {
    sub_237E2209C(*(_QWORD *)(v0 + 80), &qword_256898BC0);
    v9 = sub_237EE1D70();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  }
  else
  {
    v15 = sub_237EE1D70();
    v16 = *(_QWORD *)(v15 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v8, v7, v15);
    sub_237E21F00(v7, (uint64_t (*)(_QWORD))type metadata accessor for Alarm);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(v8, 0, 1, v15);
  }
  v17 = *(_QWORD *)(v0 + 192);
  v18 = *(_QWORD *)(v0 + 88);
  v19 = *(_QWORD *)(v0 + 56);
  swift_getKeyPath();
  v20 = swift_task_alloc();
  *(_QWORD *)(v20 + 16) = v3;
  *(_QWORD *)(v20 + 24) = v19;
  *(_QWORD *)(v0 + 40) = v3;
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F14();
  swift_release();
  swift_task_dealloc();
  sub_237E2209C(v19, &qword_25689C140);
  swift_release();
  sub_237E2209C(v18, &qword_256898BC0);
  *(_QWORD *)(v0 + 192) = v17;
  *(_QWORD *)(v0 + 200) = sub_237EE2C40();
  v21 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 208) = v21;
  *v21 = v0;
  v21[1] = sub_237E3D46C;
  return sub_237EE2C94();
}

uint64_t sub_237E3D7DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5[22] = a4;
  v5[23] = a5;
  v6 = sub_237EE1EC0();
  v5[24] = v6;
  v5[25] = *(_QWORD *)(v6 - 8);
  v5[26] = swift_task_alloc();
  v7 = type metadata accessor for WorldViewModel.Pin(0);
  v5[27] = v7;
  v5[28] = *(_QWORD *)(v7 - 8);
  v5[29] = swift_task_alloc();
  v5[30] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256899518);
  v5[31] = swift_task_alloc();
  v5[32] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568995B8);
  v5[33] = swift_task_alloc();
  v8 = type metadata accessor for CurrentLocationResult(0);
  v5[34] = v8;
  v5[35] = *(_QWORD *)(v8 - 8);
  v5[36] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689DA20);
  v5[37] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568995C0);
  v5[38] = v9;
  v5[39] = *(_QWORD *)(v9 - 8);
  v5[40] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568995C8);
  v5[41] = v10;
  v5[42] = *(_QWORD *)(v10 - 8);
  v5[43] = swift_task_alloc();
  v5[44] = sub_237EE2C4C();
  v5[45] = sub_237EE2C40();
  v5[46] = sub_237EE2C28();
  v5[47] = v11;
  return swift_task_switch();
}

uint64_t sub_237E3D9A8()
{
  uint64_t v0;

  if (qword_256897B68 != -1)
    swift_once();
  *(_QWORD *)(v0 + 384) = qword_25689DFF8;
  return swift_task_switch();
}

uint64_t sub_237E3DA0C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(v0 + 320);
  v2 = sub_237ED185C(0);
  sub_237ED2508(v1);

  return swift_task_switch();
}

uint64_t sub_237E3DA5C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[39];
  v1 = v0[40];
  v3 = v0[38];
  sub_237EE2C88();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  v0[49] = 0;
  v0[50] = sub_237EE2C40();
  v4 = (_QWORD *)swift_task_alloc();
  v0[51] = v4;
  *v4 = v0;
  v4[1] = sub_237E3DB28;
  return sub_237EE2C94();
}

uint64_t sub_237E3DB28()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_237E3DB7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  double *v42;
  double v43;
  double v44;
  double v45;
  double v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  id v64;

  v1 = *(_QWORD *)(v0 + 296);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 280) + 48))(v1, 1, *(_QWORD *)(v0 + 272)) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 336) + 8))(*(_QWORD *)(v0 + 344), *(_QWORD *)(v0 + 328));
    swift_release();
LABEL_7:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  sub_237E47CE0(v1, *(_QWORD *)(v0 + 288), type metadata accessor for CurrentLocationResult);
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    v15 = *(_QWORD *)(v0 + 336);
    v14 = *(_QWORD *)(v0 + 344);
    v16 = *(_QWORD *)(v0 + 328);
    v17 = *(_QWORD *)(v0 + 288);
    swift_release();
    sub_237E21F00(v17, type metadata accessor for CurrentLocationResult);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    goto LABEL_7;
  }
  v3 = Strong;
  v4 = *(_QWORD *)(v0 + 264);
  sub_237E22004(*(_QWORD *)(v0 + 288), v4, &qword_2568995B8);
  v5 = type metadata accessor for CurrentLocation(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5) == 1)
  {
    v6 = *(_QWORD *)(v0 + 392);
    v7 = *(_QWORD *)(v0 + 288);
    v8 = *(_QWORD *)(v0 + 256);
    v10 = *(_QWORD *)(v0 + 216);
    v9 = *(_QWORD *)(v0 + 224);
    sub_237E2209C(*(_QWORD *)(v0 + 264), &qword_2568995B8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v8, 1, 1, v10);
    swift_getKeyPath();
    v11 = swift_task_alloc();
    *(_QWORD *)(v11 + 16) = v3;
    *(_QWORD *)(v11 + 24) = v8;
    *(_QWORD *)(v0 + 160) = v3;
    sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
    sub_237EE1F14();
    swift_release();
    swift_task_dealloc();
    sub_237E2209C(v8, &qword_256899518);
    swift_release();
    v12 = type metadata accessor for CurrentLocationResult;
    v13 = v7;
  }
  else
  {
    v19 = *(id **)(v0 + 264);
    v20 = *(_QWORD *)(v0 + 184);
    v21 = *v19;
    sub_237E21F00((uint64_t)v19, type metadata accessor for CurrentLocation);
    objc_msgSend(v21, sel_coordinate);
    v23 = v22;
    v25 = v24;
    sub_237EE1EB4();
    v64 = v21;
    objc_msgSend(v21, sel_coordinate);
    swift_getKeyPath();
    *(_QWORD *)(v0 + 144) = v3;
    sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
    sub_237EE1F20();
    swift_release();
    sub_237E21FC0(v20 + 80, v0 + 56, &qword_2568995D0);
    sub_237E21FC0(v0 + 56, v0 + 16, &qword_2568995D0);
    if (qword_256897B88 != -1)
      swift_once();
    v26 = *(_QWORD *)(v0 + 240);
    v27 = *(_QWORD *)(v0 + 248);
    v28 = *(int **)(v0 + 216);
    v63 = *(_QWORD *)(v0 + 224);
    v29 = *(_QWORD *)(v0 + 200);
    v30 = *(_QWORD *)(v0 + 208);
    v31 = *(_QWORD *)(v0 + 192);
    UIPointRoundToScale();
    v33 = v32;
    v35 = v34;
    *(_BYTE *)(v26 + 17) = 0;
    v36 = v26 + v28[9];
    *(_QWORD *)v36 = 0;
    v62 = v36;
    *(_BYTE *)(v36 + 8) = 1;
    v37 = (_QWORD *)(v26 + v28[10]);
    *(_QWORD *)v26 = v23;
    *(_QWORD *)(v26 + 8) = v25;
    *(_BYTE *)(v26 + 16) = 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32))(v26 + v28[7], v30, v31);
    v38 = (_QWORD *)(v26 + v28[8]);
    *v38 = v33;
    v38[1] = v35;
    *v37 = 0;
    v37[1] = 0;
    swift_getKeyPath();
    *(_QWORD *)(v0 + 152) = v3;
    sub_237EE1F20();
    swift_release();
    v39 = v3 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__currentLocationPin;
    swift_beginAccess();
    sub_237E22004(v39, v27, &qword_256899518);
    v40 = (*(uint64_t (**)(uint64_t, uint64_t, int *))(v63 + 48))(v27, 1, v28);
    v41 = *(_QWORD *)(v0 + 248);
    if (v40 == 1)
    {
      sub_237E2209C(v41, &qword_256899518);
    }
    else
    {
      v42 = *(double **)(v0 + 232);
      sub_237E47CE0(v41, (uint64_t)v42, type metadata accessor for WorldViewModel.Pin);
      v44 = *v42;
      v43 = v42[1];
      objc_msgSend(v64, sel_coordinate);
      if (v44 == v46 && v43 == v45)
      {
        v48 = *(_QWORD *)(v0 + 232);
        v47 = *(_QWORD *)(v0 + 240);
        v49 = *(_QWORD *)(v0 + 216);
        v50 = (uint64_t *)(v48 + *(int *)(v49 + 40));
        v52 = *v50;
        v51 = v50[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *v37 = v52;
        v37[1] = v51;
        v53 = v48 + *(int *)(v49 + 36);
        v54 = *(_QWORD *)v53;
        LOBYTE(v53) = *(_BYTE *)(v53 + 8);
        *(_QWORD *)v62 = v54;
        *(_BYTE *)(v62 + 8) = v53;
        LOBYTE(v49) = *(_BYTE *)(v48 + 17);
        sub_237E21F00(v48, type metadata accessor for WorldViewModel.Pin);
        *(_BYTE *)(v47 + 17) = v49;
      }
      else
      {
        sub_237E21F00(*(_QWORD *)(v0 + 232), type metadata accessor for WorldViewModel.Pin);
      }
    }
    v6 = *(_QWORD *)(v0 + 392);
    v55 = *(_QWORD *)(v0 + 288);
    v56 = *(_QWORD *)(v0 + 256);
    v57 = *(_QWORD *)(v0 + 240);
    v59 = *(_QWORD *)(v0 + 216);
    v58 = *(_QWORD *)(v0 + 224);
    sub_237E21EBC(v57, v56, type metadata accessor for WorldViewModel.Pin);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v58 + 56))(v56, 0, 1, v59);
    swift_getKeyPath();
    v60 = swift_task_alloc();
    *(_QWORD *)(v60 + 16) = v3;
    *(_QWORD *)(v60 + 24) = v56;
    *(_QWORD *)(v0 + 168) = v3;
    sub_237EE1F14();
    swift_release();
    swift_task_dealloc();
    sub_237E2209C(v56, &qword_256899518);
    sub_237E4241C(v64);
    swift_release();

    sub_237E21F00(v55, type metadata accessor for CurrentLocationResult);
    v13 = v57;
    v12 = type metadata accessor for WorldViewModel.Pin;
  }
  sub_237E21F00(v13, v12);
  *(_QWORD *)(v0 + 392) = v6;
  *(_QWORD *)(v0 + 400) = sub_237EE2C40();
  v61 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 408) = v61;
  *v61 = v0;
  v61[1] = sub_237E3DB28;
  return sub_237EE2C94();
}

uint64_t sub_237E3E300@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  swift_beginAccess();
  return sub_237E2A0AC(v1 + 16, a1);
}

uint64_t sub_237E3E3A8(uint64_t a1, __int128 *a2)
{
  uint64_t v3;

  v3 = a1 + 16;
  swift_beginAccess();
  sub_237E485A4(a2, v3);
  return swift_endAccess();
}

uint64_t sub_237E3E408()
{
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  return swift_retain();
}

uint64_t sub_237E3E490(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 120) = a2;
  swift_retain();
  return swift_release();
}

uint64_t sub_237E3E4C8()
{
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  return swift_retain();
}

uint64_t sub_237E3E550@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  *a2 = *(_QWORD *)(v3 + 128);
  return swift_retain();
}

uint64_t sub_237E3E5E0()
{
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  swift_retain();
  sub_237EE1F14();
  swift_release();
  return swift_release();
}

uint64_t sub_237E3E698()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  return *(unsigned __int8 *)(v0 + 136);
}

uint64_t sub_237E3E71C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  result = swift_release();
  *a2 = *(_BYTE *)(v3 + 136);
  return result;
}

uint64_t sub_237E3E7A8()
{
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F14();
  return swift_release();
}

double sub_237E3E850()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  return *(double *)(v0 + 144);
}

__n128 sub_237E3E8D8@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 result;
  __int128 v5;

  v3 = *a1;
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  result = *(__n128 *)(v3 + 144);
  v5 = *(_OWORD *)(v3 + 160);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v5;
  return result;
}

uint64_t sub_237E3E964()
{
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F14();
  return swift_release();
}

uint64_t sub_237E3EA24()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  return *(unsigned __int8 *)(v0 + 176);
}

uint64_t sub_237E3EAA8@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  result = swift_release();
  *a2 = *(_BYTE *)(v3 + 176);
  return result;
}

uint64_t sub_237E3EB34()
{
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F14();
  return swift_release();
}

uint64_t (*sub_237E3EBDC())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_237E3EC1C()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 177);
}

uint64_t sub_237E3ECB4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 177);
  return result;
}

uint64_t sub_237E3ED54()
{
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F14();
  return swift_release();
}

void (*sub_237E3EDFC(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC11ClockPoster14WorldViewModel___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_237EE1F38();
  swift_release();
  v4[7] = sub_237E3EBDC();
  return sub_237E3EEE4;
}

void sub_237E3EEE4(_QWORD *a1)
{
  sub_237E3FAC8(a1);
}

double sub_237E3EEF0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  double result;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;

  swift_getKeyPath();
  *(_QWORD *)&v13 = v1;
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  v3 = *(_OWORD *)(v1 + 296);
  v4 = *(_OWORD *)(v1 + 312);
  v5 = *(_OWORD *)(v1 + 264);
  v19 = *(_OWORD *)(v1 + 280);
  v20 = v3;
  v21 = v4;
  v22 = *(_QWORD *)(v1 + 328);
  v6 = *(_OWORD *)(v1 + 232);
  v15 = *(_OWORD *)(v1 + 216);
  v16 = v6;
  v17 = *(_OWORD *)(v1 + 248);
  v18 = v5;
  v7 = *(_OWORD *)(v1 + 200);
  v13 = *(_OWORD *)(v1 + 184);
  v14 = v7;
  sub_237E2CCDC((uint64_t)&v13);
  v8 = v20;
  *(_OWORD *)(a1 + 96) = v19;
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 128) = v21;
  *(_QWORD *)(a1 + 144) = v22;
  v9 = v16;
  *(_OWORD *)(a1 + 32) = v15;
  *(_OWORD *)(a1 + 48) = v9;
  v10 = v18;
  *(_OWORD *)(a1 + 64) = v17;
  *(_OWORD *)(a1 + 80) = v10;
  result = *(double *)&v13;
  v12 = v14;
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v12;
  return result;
}

uint64_t sub_237E3EFE8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _OWORD v13[6];
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;

  v3 = *a1;
  swift_getKeyPath();
  *(_QWORD *)&v13[0] = v3;
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  v4 = *(_OWORD *)(v3 + 296);
  v5 = *(_OWORD *)(v3 + 264);
  v14 = *(_OWORD *)(v3 + 280);
  v15 = v4;
  v6 = *(_OWORD *)(v3 + 296);
  v16 = *(_OWORD *)(v3 + 312);
  v7 = *(_OWORD *)(v3 + 232);
  v13[2] = *(_OWORD *)(v3 + 216);
  v13[3] = v7;
  v8 = *(_OWORD *)(v3 + 264);
  v13[4] = *(_OWORD *)(v3 + 248);
  v13[5] = v8;
  v9 = *(_OWORD *)(v3 + 200);
  v13[0] = *(_OWORD *)(v3 + 184);
  v13[1] = v9;
  v17 = *(_QWORD *)(v3 + 328);
  *(_OWORD *)(a2 + 96) = v14;
  *(_OWORD *)(a2 + 112) = v6;
  *(_OWORD *)(a2 + 128) = *(_OWORD *)(v3 + 312);
  *(_QWORD *)(a2 + 144) = *(_QWORD *)(v3 + 328);
  v10 = *(_OWORD *)(v3 + 232);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(v3 + 216);
  *(_OWORD *)(a2 + 48) = v10;
  *(_OWORD *)(a2 + 64) = *(_OWORD *)(v3 + 248);
  *(_OWORD *)(a2 + 80) = v5;
  v11 = *(_OWORD *)(v3 + 200);
  *(_OWORD *)a2 = *(_OWORD *)(v3 + 184);
  *(_OWORD *)(a2 + 16) = v11;
  return sub_237E2CCDC((uint64_t)v13);
}

uint64_t sub_237E3F0EC(uint64_t a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  _OWORD v6[9];
  uint64_t v7;

  v1 = *(_OWORD *)(a1 + 112);
  v6[6] = *(_OWORD *)(a1 + 96);
  v6[7] = v1;
  v6[8] = *(_OWORD *)(a1 + 128);
  v7 = *(_QWORD *)(a1 + 144);
  v2 = *(_OWORD *)(a1 + 48);
  v6[2] = *(_OWORD *)(a1 + 32);
  v6[3] = v2;
  v3 = *(_OWORD *)(a1 + 80);
  v6[4] = *(_OWORD *)(a1 + 64);
  v6[5] = v3;
  v4 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v4;
  swift_getKeyPath();
  sub_237E2CCDC((uint64_t)v6);
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F14();
  sub_237E3A78C((uint64_t)v6);
  return swift_release();
}

uint64_t sub_237E3F1D0()
{
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_237E3F26C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 336);
  return swift_bridgeObjectRetain();
}

uint64_t sub_237E3F310()
{
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  swift_bridgeObjectRetain();
  sub_237EE1F14();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_237E3F3C8(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(_QWORD *)(a1 + 336) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_237E3F42C@<X0>(uint64_t a1@<X8>)
{
  return sub_237E40620(&OBJC_IVAR____TtC11ClockPoster14WorldViewModel__highlighted, &qword_256899518, a1);
}

uint64_t sub_237E3F448@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  v4 = v3 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__highlighted;
  swift_beginAccess();
  return sub_237E22004(v4, a2, &qword_256899518);
}

uint64_t sub_237E3F500(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[16];
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899518);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_237E22004(a1, (uint64_t)v6, &qword_256899518);
  v7 = *a2;
  swift_getKeyPath();
  v10 = v7;
  v11 = v6;
  v12 = v7;
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F14();
  swift_release();
  return sub_237E2209C((uint64_t)v6, &qword_256899518);
}

uint64_t (*sub_237E3F608(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_237E3F650;
}

uint64_t sub_237E3F650(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    sub_237E40FBC();
    return sub_237E41320();
  }
  return result;
}

uint64_t sub_237E3F684@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__currentLocationPin;
  swift_beginAccess();
  return sub_237E22004(v3, a1, &qword_256899518);
}

uint64_t sub_237E3F73C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  v4 = v3 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__currentLocationPin;
  swift_beginAccess();
  return sub_237E22004(v4, a2, &qword_256899518);
}

uint64_t sub_237E3F7F4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[16];
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899518);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_237E22004(a1, (uint64_t)v6, &qword_256899518);
  v7 = *a2;
  swift_getKeyPath();
  v10 = v7;
  v11 = v6;
  v12 = v7;
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F14();
  swift_release();
  return sub_237E2209C((uint64_t)v6, &qword_256899518);
}

uint64_t sub_237E3F8FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899518);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237E22004(a2, (uint64_t)v6, &qword_256899518);
  v7 = a1 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__currentLocationPin;
  swift_beginAccess();
  sub_237E47284((uint64_t)v6, v7, &qword_256899518);
  swift_endAccess();
  sub_237E40FBC();
  sub_237E41320();
  return sub_237E2209C((uint64_t)v6, &qword_256899518);
}

void (*sub_237E3F9D4(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC11ClockPoster14WorldViewModel___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_237EE1F38();
  swift_release();
  v4[7] = sub_237E3F608((uint64_t)v4);
  return sub_237E3FABC;
}

void sub_237E3FABC(_QWORD *a1)
{
  sub_237E3FAC8(a1);
}

void sub_237E3FAC8(_QWORD *a1)
{
  _QWORD *v1;

  v1 = (_QWORD *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 56))(*a1, 0);
  *v1 = v1[4];
  swift_getKeyPath();
  sub_237EE1F2C();
  swift_release();
  free(v1);
}

uint64_t sub_237E3FB38()
{
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_237E3FBE0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  v4 = (_QWORD *)(v3 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__cityPinsByCoordinate);
  swift_beginAccess();
  *a2 = *v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_237E3FC90()
{
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  swift_bridgeObjectRetain();
  sub_237EE1F14();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_237E3FD48(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;

  v3 = (_QWORD *)(a1 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__cityPinsByCoordinate);
  swift_beginAccess();
  *v3 = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_237E3FDB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  void (*v38)(char *, uint64_t);
  void (*v39)(char *, uint64_t);
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t);
  char *v47;
  uint64_t v48;
  uint64_t v49;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6548);
  MEMORY[0x24BDAC7A8](v0);
  v47 = (char *)&v41 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_237EE1FB0();
  v44 = *(_QWORD *)(v2 - 8);
  v45 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v43 = (uint64_t)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_237EE1EC0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_237EE1D70();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v42 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v41 - v12;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v41 - v15;
  if (qword_256897B48 != -1)
    swift_once();
  sub_237EA1DE0((uint64_t)v16);
  type metadata accessor for WorldViewModel.Pin(0);
  sub_237EE1D64();
  v17 = sub_237EE1E84();
  v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v13, v8);
  sub_237EE1EB4();
  sub_237EE1D64();
  v19 = sub_237EE1E84();
  v46 = v18;
  v18(v13, v8);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v20 = v17 - v19;
  if (__OFSUB__(v17, v19))
  {
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v21 = v17 - v19;
  v17 = (uint64_t)v47;
  if (v20 < 0)
  {
    v21 = -v20;
    if (__OFSUB__(0, v20))
      goto LABEL_20;
  }
  if (v21 < 1)
  {
    v46(v16, v8);
    return 0;
  }
  v22 = (void *)objc_opt_self();
  v23 = (void *)sub_237EE1CF8();
  v24 = objc_msgSend(v22, sel_dayAndTimeZoneOffsetStringFromDate_withTimeZoneOffset_timeZoneAbbreviation_spaceBeforeTimeDesignator_hoursOnly_numericOnly_, v23, v20, 0, 1, 0, 0);

  if (!v24)
  {
    if (qword_2542C6458 == -1)
    {
LABEL_11:
      v26 = qword_2542C64F8 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_rendering_private;
      swift_beginAccess();
      sub_237E22004(v26, v17, &qword_2542C6548);
      v28 = v44;
      v27 = v45;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48))(v17, 1, v45) == 1)
      {
        v29 = v43;
        sub_237E6072C(v43);
        sub_237E2209C(v17, &qword_2542C6548);
      }
      else
      {
        v29 = v43;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v43, v17, v27);
      }
      v30 = v42;
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v42, v16, v8);
      v31 = v30;
      v32 = sub_237EE1F98();
      v33 = sub_237EE2D90();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc();
        v35 = swift_slowAlloc();
        v49 = v35;
        *(_DWORD *)v34 = 136446210;
        v47 = (char *)(v34 + 4);
        sub_237E20E98((unint64_t *)&qword_256899610, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
        v36 = sub_237EE3180();
        v48 = sub_237E2A660(v36, v37, &v49);
        sub_237EE2EE0();
        swift_bridgeObjectRelease();
        v38 = v46;
        v46(v31, v8);
        _os_log_impl(&dword_237E17000, v32, v33, "Cannot convert %{public}s to an offset string", v34, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B8272A8](v35, -1, -1);
        MEMORY[0x23B8272A8](v34, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v29, v45);
        v38(v16, v8);
      }
      else
      {

        v39 = v46;
        v46(v31, v8);
        (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v29, v27);
        v39(v16, v8);
      }
      return 0;
    }
LABEL_21:
    swift_once();
    goto LABEL_11;
  }
  v25 = sub_237EE2A84();

  v46(v16, v8);
  return v25;
}

uint64_t sub_237E402F4()
{
  sub_237EE3264();
  CLLocationCoordinate2D.hash(into:)();
  return sub_237EE3294();
}

uint64_t sub_237E40334()
{
  sub_237EE3264();
  CLLocationCoordinate2D.hash(into:)();
  return sub_237EE3294();
}

__n128 sub_237E40370@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  __n128 result;

  result = *v1;
  *a1 = *v1;
  return result;
}

BOOL sub_237E40380(double *a1, double *a2)
{
  return (sub_237E46FEC(a2, a1) & 1) == 0;
}

BOOL sub_237E403A8(double *a1, double *a2)
{
  return (sub_237E46FEC(a1, a2) & 1) == 0;
}

uint64_t sub_237E403C4(double *a1, double *a2)
{
  return sub_237E46FEC(a2, a1);
}

uint64_t sub_237E403D4()
{
  uint64_t v0;
  uint64_t v1;

  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__solarTerminatorPath);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_237E40484@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a1;
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  v4 = v3 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__solarTerminatorPath;
  v5 = *(_BYTE *)(v3 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__solarTerminatorPath + 24);
  *(_QWORD *)a2 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__solarTerminatorPath);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(v4 + 8);
  *(_BYTE *)(a2 + 24) = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_237E40534()
{
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  swift_bridgeObjectRetain();
  sub_237EE1F14();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_237E40604@<X0>(uint64_t a1@<X8>)
{
  return sub_237E40620(&OBJC_IVAR____TtC11ClockPoster14WorldViewModel__alarmTime, &qword_25689C140, a1);
}

uint64_t sub_237E40620@<X0>(_QWORD *a1@<X1>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;

  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  v7 = v3 + *a1;
  swift_beginAccess();
  return sub_237E22004(v7, a3, a2);
}

uint64_t sub_237E406D8(uint64_t a1, uint64_t a2)
{
  return sub_237E406FC(a1, a2, &OBJC_IVAR____TtC11ClockPoster14WorldViewModel__alarmTime, &qword_25689C140);
}

uint64_t sub_237E406FC(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t *a4)
{
  uint64_t v6;

  v6 = a1 + *a3;
  swift_beginAccess();
  sub_237E47284(a2, v6, a4);
  return swift_endAccess();
}

uint64_t sub_237E40768(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  double *v21;
  double v22;
  double v23;
  uint64_t v25;
  double *v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[16];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899518);
  MEMORY[0x24BDAC7A8](v3);
  v27 = (uint64_t)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v25 - v6;
  v8 = type metadata accessor for WorldViewModel.Pin(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v26 = (double *)((char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v11);
  v13 = (double *)((char *)&v25 - v12);
  swift_getKeyPath();
  v33 = v1;
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  v14 = (uint64_t *)(v1 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__cityPinsByCoordinate);
  swift_beginAccess();
  v15 = *v14;
  v28 = a1;
  v30 = a1;
  v31 = v1;
  swift_bridgeObjectRetain();
  sub_237E3B678((void (*)(char *))sub_237E47578, (uint64_t)v29, v15);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  v32 = v1;
  sub_237EE1F20();
  swift_release();
  v16 = v1 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__currentLocationPin;
  swift_beginAccess();
  sub_237E22004(v16, (uint64_t)v7, &qword_256899518);
  v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (v17((uint64_t)v7, 1, v8) == 1)
  {
    sub_237E2209C((uint64_t)v7, &qword_256899518);
  }
  else
  {
    sub_237E47CE0((uint64_t)v7, (uint64_t)v13, type metadata accessor for WorldViewModel.Pin);
    v18 = v27;
    sub_237E22004(v28, v27, &qword_256899518);
    if (v17(v18, 1, v8) == 1)
    {
      sub_237E2209C(v18, &qword_256899518);
      v19 = 0;
    }
    else
    {
      v20 = v18;
      v21 = v26;
      sub_237E47CE0(v20, (uint64_t)v26, type metadata accessor for WorldViewModel.Pin);
      v22 = *v21;
      v23 = v21[1];
      sub_237E21F00((uint64_t)v21, type metadata accessor for WorldViewModel.Pin);
      v19 = v22 == *v13;
      if (v23 != v13[1])
        v19 = 0;
    }
    *((_BYTE *)v13 + 17) = v19;
    sub_237E21F00((uint64_t)v13, type metadata accessor for WorldViewModel.Pin);
  }
  sub_237E40FBC();
  return sub_237E41320();
}

uint64_t sub_237E40A5C(double *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double *v18;
  uint64_t v19;
  uint64_t v20;
  double *v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t result;
  double v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  double *v35;

  v33 = a3;
  v35 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899518);
  MEMORY[0x24BDAC7A8](v4);
  v32 = (uint64_t)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (double *)((char *)&v32 - v7);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v32 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899568);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for WorldViewModel.Pin(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (double *)((char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = *(int *)(v12 + 48);
  v20 = (uint64_t)&v14[v19];
  v21 = v35;
  sub_237E21EBC((uint64_t)v35 + v19, v20, type metadata accessor for WorldViewModel.Pin);
  sub_237E47CE0(v20, (uint64_t)v18, type metadata accessor for WorldViewModel.Pin);
  v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  v23 = v22(a2, 1, v15);
  sub_237E22004(a2, (uint64_t)v11, &qword_256899518);
  if (v23 == 1)
  {
    sub_237E2209C((uint64_t)v11, &qword_256899518);
    if (*((_BYTE *)v18 + 17) != 1)
      return sub_237E21F00((uint64_t)v18, type metadata accessor for WorldViewModel.Pin);
    LOBYTE(v24) = 0;
LABEL_8:
    *((_BYTE *)v18 + 17) = v24;
    v28 = *v21;
    v29 = v21[1];
    v30 = v32;
    sub_237E21EBC((uint64_t)v18, v32, type metadata accessor for WorldViewModel.Pin);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(v30, 0, 1, v15);
    swift_getKeyPath();
    v31 = v33;
    v34 = v33;
    sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
    sub_237EE1F20();
    swift_release();
    v34 = v31;
    swift_getKeyPath();
    sub_237EE1F38();
    swift_release();
    swift_beginAccess();
    sub_237E8EDC8(v30, v28, v29);
    swift_endAccess();
    v34 = v31;
    swift_getKeyPath();
    sub_237EE1F2C();
    swift_release();
    return sub_237E21F00((uint64_t)v18, type metadata accessor for WorldViewModel.Pin);
  }
  sub_237E22004((uint64_t)v11, (uint64_t)v8, &qword_256899518);
  result = v22((uint64_t)v8, 1, v15);
  if ((_DWORD)result != 1)
  {
    sub_237E2209C((uint64_t)v11, &qword_256899518);
    v26 = *v8;
    v27 = v8[1];
    sub_237E21F00((uint64_t)v8, type metadata accessor for WorldViewModel.Pin);
    v24 = v26 == *v18;
    if (v27 != v18[1])
      v24 = 0;
    if (*((unsigned __int8 *)v18 + 17) == v24)
      return sub_237E21F00((uint64_t)v18, type metadata accessor for WorldViewModel.Pin);
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_237E40DDC()
{
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  return swift_retain();
}

uint64_t sub_237E40E6C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  *a2 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__fetchCurrentLocationNameTask);
  return swift_retain();
}

uint64_t sub_237E40F04()
{
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  swift_retain();
  sub_237EE1F14();
  swift_release();
  return swift_release();
}

uint64_t sub_237E40FBC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t KeyPath;
  _QWORD v20[3];
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899518);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for WorldViewModel.Pin(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v20 - v9;
  swift_getKeyPath();
  v23 = v0;
  v11 = sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  swift_beginAccess();
  v12 = swift_bridgeObjectRetain();
  v13 = (_QWORD *)sub_237EB5DEC(v12);
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  v22 = v0;
  v20[1] = v11;
  sub_237EE1F20();
  swift_release();
  v14 = (uint64_t)v0 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__currentLocationPin;
  swift_beginAccess();
  sub_237E22004(v14, (uint64_t)v3, &qword_256899518);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_237E2209C((uint64_t)v3, &qword_256899518);
  }
  else
  {
    sub_237E47CE0((uint64_t)v3, (uint64_t)v10, type metadata accessor for WorldViewModel.Pin);
    sub_237E21EBC((uint64_t)v10, (uint64_t)v7, type metadata accessor for WorldViewModel.Pin);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = (_QWORD *)sub_237E61C94(0, v13[2] + 1, 1, (unint64_t)v13);
    v16 = v13[2];
    v15 = v13[3];
    if (v16 >= v15 >> 1)
      v13 = (_QWORD *)sub_237E61C94(v15 > 1, v16 + 1, 1, (unint64_t)v13);
    v13[2] = v16 + 1;
    sub_237E47CE0((uint64_t)v7, (uint64_t)v13+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v16, type metadata accessor for WorldViewModel.Pin);
    sub_237E21F00((uint64_t)v10, type metadata accessor for WorldViewModel.Pin);
  }
  v21 = v13;
  swift_bridgeObjectRetain_n();
  sub_237E449B4(&v21);
  swift_bridgeObjectRelease_n();
  v17 = v21;
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  v20[-2] = v0;
  v20[-1] = v17;
  v21 = v0;
  sub_237EE1F14();
  swift_release();
  return swift_release();
}

uint64_t sub_237E41320()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  unsigned int v41;
  unsigned int (*v42)(_QWORD, _QWORD, _QWORD);
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(uint64_t, uint64_t, uint64_t);
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t result;
  int64_t v53;
  uint64_t (*v54)(uint64_t);
  unint64_t i;
  int64_t v56;
  unint64_t v57;
  int64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(uint64_t);
  char *v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t KeyPath;
  unsigned int (*v78)(_QWORD, _QWORD, _QWORD);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int (*v82)(_QWORD, _QWORD, _QWORD);
  unsigned int (*v83)(_QWORD, _QWORD, _QWORD);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unsigned int (*v89)(_QWORD, _QWORD, _QWORD);
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  void (*v97)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v98;
  char *v99;
  unsigned int (*v100)(_QWORD, _QWORD, _QWORD);
  uint64_t v101;
  uint64_t v102;
  int64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int64_t v112;
  uint64_t v113;
  unsigned int (*v114)(_QWORD, _QWORD, _QWORD);
  unsigned int (*v115)(_QWORD, _QWORD, _QWORD);
  unsigned int (*v116)(_QWORD, _QWORD, _QWORD);

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897E10);
  MEMORY[0x24BDAC7A8](v2);
  v92 = (char *)&v89 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_237EE1EC0();
  v109 = *(_QWORD *)(v4 - 8);
  v110 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v107 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_237EE1D70();
  v106 = *(_QWORD *)(v108 - 8);
  MEMORY[0x24BDAC7A8](v108);
  v105 = (char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for WorldViewModel.Pin(0);
  v8 = *(_QWORD **)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v91 = (uint64_t)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v89 - v11;
  MEMORY[0x24BDAC7A8](v13);
  v104 = (uint64_t)&v89 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899560);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899518);
  MEMORY[0x24BDAC7A8](v18);
  v95 = (uint64_t)&v89 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v94 = (uint64_t)&v89 - v21;
  MEMORY[0x24BDAC7A8](v22);
  v90 = (uint64_t)&v89 - v23;
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v89 - v25;
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v89 - v28;
  MEMORY[0x24BDAC7A8](v30);
  v101 = (uint64_t)&v89 - v31;
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)&v89 - v33;
  swift_getKeyPath();
  v35 = &v0[OBJC_IVAR____TtC11ClockPoster14WorldViewModel___observationRegistrar];
  v116 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v1;
  v98 = sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  v99 = v35;
  sub_237EE1F20();
  swift_release();
  v100 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v1;
  v36 = &v1[OBJC_IVAR____TtC11ClockPoster14WorldViewModel__cityPinsByCoordinate];
  swift_beginAccess();
  v37 = swift_bridgeObjectRetain();
  sub_237E41ECC(v37, (uint64_t)v17);
  v93 = 0;
  swift_bridgeObjectRelease();
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899568);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v17, 1, v38) == 1)
  {
    sub_237E2209C((uint64_t)v17, &qword_256899560);
    v39 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v8[7];
    v39(v34, 1, 1, v7);
  }
  else
  {
    sub_237E47CE0((uint64_t)&v17[*(int *)(v38 + 48)], (uint64_t)v34, type metadata accessor for WorldViewModel.Pin);
    v39 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v8[7];
    v39(v34, 0, 1, v7);
  }
  sub_237E22004((uint64_t)v34, (uint64_t)v29, &qword_256899518);
  v40 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v8[6];
  v41 = v40(v29, 1, v7);
  v96 = v34;
  v97 = v39;
  if (v41 == 1)
  {
    swift_getKeyPath();
    v42 = v100;
    v115 = v100;
    sub_237EE1F20();
    swift_release();
    v43 = (uint64_t)v42 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__currentLocationPin;
    swift_beginAccess();
    v44 = v101;
    sub_237E22004(v43, v101, &qword_256899518);
    sub_237E2209C((uint64_t)v29, &qword_256899518);
  }
  else
  {
    v44 = v101;
    sub_237E47CE0((uint64_t)v29, v101, type metadata accessor for WorldViewModel.Pin);
    v39(v44, 0, 1, v7);
  }
  sub_237E22004(v44, (uint64_t)v26, &qword_256899518);
  v45 = v40;
  v46 = v40(v26, 1, v7);
  sub_237E2209C((uint64_t)v26, &qword_256899518);
  if (v46 != 1)
  {
LABEL_36:
    v75 = v94;
    sub_237E22004(v44, v94, &qword_256899518);
    if (v45(v75, 1, v7) == 1)
    {
      sub_237E2209C(v75, &qword_256899518);
      v76 = v95;
      v97(v95, 1, 1, v7);
      KeyPath = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](KeyPath);
      v78 = v100;
      *(&v89 - 2) = v100;
      *(&v89 - 1) = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v76;
      v114 = v78;
      sub_237EE1F14();
      swift_release();
      sub_237E2209C(v76, &qword_256899518);
    }
    else
    {
      v79 = v91;
      sub_237E47CE0(v75, v91, type metadata accessor for WorldViewModel.Pin);
      v80 = v95;
      sub_237E21EBC(v79, v95, type metadata accessor for WorldViewModel.Pin);
      v97(v80, 0, 1, v7);
      v81 = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](v81);
      v82 = v100;
      *(&v89 - 2) = v100;
      *(&v89 - 1) = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v80;
      v114 = v82;
      sub_237EE1F14();
      swift_release();
      sub_237E2209C(v80, &qword_256899518);
      swift_getKeyPath();
      v114 = v82;
      sub_237EE1F20();
      swift_release();
      v83 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))*((_QWORD *)v82 + 16);
      v84 = v79 + *(int *)(v7 + 28);
      v86 = v109;
      v85 = v110;
      v87 = (uint64_t)v92;
      (*(void (**)(char *, uint64_t, uint64_t))(v109 + 16))(v92, v84, v110);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v86 + 56))(v87, 0, 1, v85);
      v88 = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](v88);
      *(&v89 - 2) = v83;
      *(&v89 - 1) = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v87;
      v114 = v83;
      sub_237E20E98(&qword_256897E18, (uint64_t (*)(uint64_t))type metadata accessor for RollingClockViewModel, (uint64_t)&unk_237EE4558);
      swift_retain();
      sub_237EE1F14();
      swift_release();
      sub_237E2209C(v87, &qword_256897E10);
      swift_release();
      sub_237E21F00(v79, type metadata accessor for WorldViewModel.Pin);
    }
    sub_237E2209C(v101, &qword_256899518);
    return sub_237E2209C((uint64_t)v96, &qword_256899518);
  }
  v89 = v45;
  swift_getKeyPath();
  v114 = v100;
  sub_237EE1F20();
  swift_release();
  v47 = *(_QWORD *)v36;
  v48 = *(_QWORD *)(*(_QWORD *)v36 + 64);
  v102 = *(_QWORD *)v36 + 64;
  v49 = 1 << *(_BYTE *)(v47 + 32);
  v50 = -1;
  if (v49 < 64)
    v50 = ~(-1 << v49);
  v51 = v50 & v48;
  v103 = (unint64_t)(v49 + 63) >> 6;
  result = swift_bridgeObjectRetain_n();
  v53 = 0;
  v54 = type metadata accessor for WorldViewModel.Pin;
  if (!v51)
    goto LABEL_12;
LABEL_11:
  v111 = (v51 - 1) & v51;
  v112 = v53;
  for (i = __clz(__rbit64(v51)) | (v53 << 6); ; i = __clz(__rbit64(v57)) + (v58 << 6))
  {
    v60 = v47;
    v61 = v8;
    v62 = *(_QWORD *)(v47 + 56) + v8[9] * i;
    v63 = v104;
    sub_237E21EBC(v62, v104, v54);
    sub_237E47CE0(v63, (uint64_t)v12, v54);
    v64 = v7;
    v65 = v54;
    v66 = v105;
    sub_237EE1D64();
    v113 = sub_237EE1E84();
    v67 = *(void (**)(_QWORD, _QWORD))(v106 + 8);
    v68 = v108;
    v67(v66, v108);
    v69 = v107;
    sub_237EE1EB4();
    sub_237EE1D64();
    v70 = sub_237EE1E84();
    v67(v66, v68);
    (*(void (**)(char *, uint64_t))(v109 + 8))(v69, v110);
    if (v113 == v70)
    {
      swift_release();
      v71 = v90;
      sub_237E47CE0((uint64_t)v12, v90, type metadata accessor for WorldViewModel.Pin);
      v72 = v71;
      v73 = 0;
      v7 = v64;
      v74 = v64;
LABEL_35:
      v97(v72, v73, 1, v74);
      swift_bridgeObjectRelease();
      v44 = v101;
      sub_237E2209C(v101, &qword_256899518);
      sub_237E21FC0(v71, v44, &qword_256899518);
      v45 = v89;
      goto LABEL_36;
    }
    result = sub_237E21F00((uint64_t)v12, v65);
    v7 = v64;
    v8 = v61;
    v47 = v60;
    v54 = v65;
    v51 = v111;
    v53 = v112;
    if (v111)
      goto LABEL_11;
LABEL_12:
    v56 = v53 + 1;
    if (__OFADD__(v53, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v56 >= v103)
      goto LABEL_34;
    v57 = *(_QWORD *)(v102 + 8 * v56);
    v58 = v53 + 1;
    if (!v57)
    {
      v58 = v53 + 2;
      if (v53 + 2 >= v103)
        goto LABEL_34;
      v57 = *(_QWORD *)(v102 + 8 * v58);
      if (!v57)
      {
        v58 = v53 + 3;
        if (v53 + 3 >= v103)
          goto LABEL_34;
        v57 = *(_QWORD *)(v102 + 8 * v58);
        if (!v57)
        {
          v58 = v53 + 4;
          if (v53 + 4 >= v103)
            goto LABEL_34;
          v57 = *(_QWORD *)(v102 + 8 * v58);
          if (!v57)
          {
            v58 = v53 + 5;
            if (v53 + 5 >= v103)
              goto LABEL_34;
            v57 = *(_QWORD *)(v102 + 8 * v58);
            if (!v57)
              break;
          }
        }
      }
    }
LABEL_29:
    v111 = (v57 - 1) & v57;
    v112 = v58;
  }
  v59 = v53 + 6;
  if (v53 + 6 >= v103)
  {
LABEL_34:
    swift_release();
    v71 = v90;
    v72 = v90;
    v73 = 1;
    v74 = v7;
    goto LABEL_35;
  }
  v57 = *(_QWORD *)(v102 + 8 * v59);
  if (v57)
  {
    v58 = v53 + 6;
    goto LABEL_29;
  }
  while (1)
  {
    v58 = v59 + 1;
    if (__OFADD__(v59, 1))
      break;
    if (v58 >= v103)
      goto LABEL_34;
    v57 = *(_QWORD *)(v102 + 8 * v58);
    ++v59;
    if (v57)
      goto LABEL_29;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_237E41ECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  unint64_t i;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;

  v32 = a2;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899568);
  v31 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v4 = (_OWORD *)((char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v7 = (_OWORD *)((char *)&v31 - v6);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v31 - v9);
  v11 = *(_QWORD *)(a1 + 64);
  v33 = a1 + 64;
  v12 = 1 << *(_BYTE *)(a1 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v34 = (unint64_t)(v12 + 63) >> 6;
  v35 = a1;
  result = swift_bridgeObjectRetain();
  v16 = 0;
  if (!v14)
    goto LABEL_5;
LABEL_4:
  v17 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (i = v17 | (v16 << 6); ; i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    v22 = *(_QWORD *)(v35 + 56);
    v23 = (uint64_t *)(*(_QWORD *)(v35 + 48) + 16 * i);
    v24 = *v23;
    v25 = v23[1];
    v26 = v22 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for WorldViewModel.Pin(0) - 8) + 72) * i;
    v27 = v36;
    sub_237E21EBC(v26, (uint64_t)v10 + *(int *)(v36 + 48), type metadata accessor for WorldViewModel.Pin);
    *v10 = v24;
    v10[1] = v25;
    sub_237E21FC0((uint64_t)v10, (uint64_t)v7, &qword_256899568);
    v28 = *(int *)(v27 + 48);
    v29 = (uint64_t)v4 + v28;
    *v4 = *v7;
    sub_237E21EBC((uint64_t)v7 + v28, (uint64_t)v4 + v28, type metadata accessor for WorldViewModel.Pin);
    LODWORD(v27) = *(unsigned __int8 *)(v29 + 17);
    sub_237E21F00(v29, type metadata accessor for WorldViewModel.Pin);
    if ((_DWORD)v27 == 1)
    {
      swift_release();
      v30 = v32;
      sub_237E21FC0((uint64_t)v7, v32, &qword_256899568);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v31 + 56))(v30, 0, 1, v36);
    }
    result = sub_237E2209C((uint64_t)v7, &qword_256899568);
    if (v14)
      goto LABEL_4;
LABEL_5:
    v19 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v19 >= v34)
      goto LABEL_25;
    v20 = *(_QWORD *)(v33 + 8 * v19);
    ++v16;
    if (!v20)
    {
      v16 = v19 + 1;
      if (v19 + 1 >= v34)
        goto LABEL_25;
      v20 = *(_QWORD *)(v33 + 8 * v16);
      if (!v20)
      {
        v16 = v19 + 2;
        if (v19 + 2 >= v34)
          goto LABEL_25;
        v20 = *(_QWORD *)(v33 + 8 * v16);
        if (!v20)
        {
          v16 = v19 + 3;
          if (v19 + 3 >= v34)
            goto LABEL_25;
          v20 = *(_QWORD *)(v33 + 8 * v16);
          if (!v20)
            break;
        }
      }
    }
LABEL_20:
    v14 = (v20 - 1) & v20;
  }
  v21 = v19 + 4;
  if (v21 >= v34)
  {
LABEL_25:
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56))(v32, 1, 1, v36);
  }
  v20 = *(_QWORD *)(v33 + 8 * v21);
  if (v20)
  {
    v16 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    v16 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v16 >= v34)
      goto LABEL_25;
    v20 = *(_QWORD *)(v33 + 8 * v16);
    ++v21;
    if (v20)
      goto LABEL_20;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_237E421D0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v32;
  uint64_t v33;
  _OWORD v34[9];
  uint64_t v35;

  v5 = sub_237EE1EC0();
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)&v7 = MEMORY[0x24BDAC7A8](v5).n128_u64[0];
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend((id)a1[2], sel_coordinate, v7);
  v11 = v10;
  v13 = v12;
  v14 = type metadata accessor for City();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, (uint64_t)a1 + *(int *)(v14 + 24), v5);
  swift_getKeyPath();
  *(_QWORD *)&v34[0] = v2;
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  v15 = *(_OWORD *)(v2 + 296);
  v16 = *(_OWORD *)(v2 + 312);
  v17 = *(_OWORD *)(v2 + 264);
  v34[6] = *(_OWORD *)(v2 + 280);
  v34[7] = v15;
  v34[8] = v16;
  v35 = *(_QWORD *)(v2 + 328);
  v18 = *(_OWORD *)(v2 + 232);
  v34[2] = *(_OWORD *)(v2 + 216);
  v34[3] = v18;
  v34[4] = *(_OWORD *)(v2 + 248);
  v34[5] = v17;
  v19 = *(_OWORD *)(v2 + 200);
  v34[0] = *(_OWORD *)(v2 + 184);
  v34[1] = v19;
  v20 = (void *)a1[2];
  sub_237E2CCDC((uint64_t)v34);
  objc_msgSend(v20, sel_coordinate);
  swift_getKeyPath();
  v33 = v2;
  sub_237EE1F20();
  swift_release();
  sub_237EDF698(1);
  v22 = v21;
  v24 = v23;
  sub_237E3A78C((uint64_t)v34);
  v26 = *a1;
  v25 = a1[1];
  *(_BYTE *)(a2 + 17) = 0;
  v27 = (int *)type metadata accessor for WorldViewModel.Pin(0);
  v28 = a2 + v27[9];
  *(_QWORD *)v28 = 0;
  *(_BYTE *)(v28 + 8) = 1;
  v29 = (_QWORD *)(a2 + v27[10]);
  *(_QWORD *)a2 = v11;
  *(_QWORD *)(a2 + 8) = v13;
  *(_BYTE *)(a2 + 16) = 0;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2 + v27[7], v9, v5);
  v30 = (_QWORD *)(a2 + v27[8]);
  *v30 = v22;
  v30[1] = v24;
  *v29 = v26;
  v29[1] = v25;
  return swift_bridgeObjectRetain();
}

uint64_t sub_237E4241C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t KeyPath;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897E20);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v18 = v1;
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__fetchCurrentLocationNameTask))
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25689DA00);
    sub_237EE2CAC();
    swift_release();
  }
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  *(&v17 - 2) = v1;
  *(&v17 - 1) = 0;
  v18 = v1;
  sub_237EE1F14();
  swift_release();
  v8 = sub_237EE2C64();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 1, 1, v8);
  v9 = swift_allocObject();
  swift_weakInit();
  sub_237EE2C4C();
  v10 = a1;
  swift_retain();
  v11 = sub_237EE2C40();
  v12 = (_QWORD *)swift_allocObject();
  v13 = MEMORY[0x24BEE6930];
  v12[2] = v11;
  v12[3] = v13;
  v12[4] = v10;
  v12[5] = v9;
  swift_release();
  v14 = sub_237ECBB58((uint64_t)v6, (uint64_t)&unk_256899558, (uint64_t)v12);
  v15 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v15);
  *(&v17 - 2) = v2;
  *(&v17 - 1) = v14;
  v18 = v2;
  sub_237EE1F14();
  swift_release();
  return swift_release();
}

uint64_t sub_237E426D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[9] = a4;
  v5[10] = a5;
  sub_237EE2C4C();
  v5[11] = sub_237EE2C40();
  v5[12] = sub_237EE2C28();
  v5[13] = v6;
  return swift_task_switch();
}

uint64_t sub_237E4273C()
{
  uint64_t v0;
  _QWORD *v1;

  if (qword_256897B70 != -1)
    swift_once();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v1;
  *v1 = v0;
  v1[1] = sub_237E427B8;
  return sub_237ED5880(*(_QWORD *)(v0 + 72));
}

uint64_t sub_237E427B8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 120) = a1;
  *(_QWORD *)(v3 + 128) = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_237E42810()
{
  uint64_t v0;
  void (*v1)(_QWORD *);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  _QWORD *v7;

  swift_release();
  sub_237EE2CC4();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v1 = sub_237E3F9D4((_QWORD *)(v0 + 16));
    v3 = v2;
    v4 = type metadata accessor for WorldViewModel.Pin(0);
    v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4);
    v6 = *(_QWORD *)(v0 + 128);
    if (!v5)
    {
      v7 = (_QWORD *)(v3 + *(int *)(v4 + 40));
      *v7 = *(_QWORD *)(v0 + 120);
      v7[1] = v6;
    }
    swift_bridgeObjectRelease();
    ((void (*)(uint64_t, _QWORD))v1)(v0 + 16, 0);
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_237E42920()
{
  uint64_t v0;
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD v9[9];
  uint64_t v10;

  sub_237E2A108(v0 + 16);
  swift_release();
  swift_release();
  v1 = *(_OWORD *)(v0 + 296);
  v2 = *(_OWORD *)(v0 + 312);
  v3 = *(_OWORD *)(v0 + 264);
  v9[6] = *(_OWORD *)(v0 + 280);
  v9[7] = v1;
  v9[8] = v2;
  v10 = *(_QWORD *)(v0 + 328);
  v4 = *(_OWORD *)(v0 + 232);
  v9[2] = *(_OWORD *)(v0 + 216);
  v9[3] = v4;
  v9[4] = *(_OWORD *)(v0 + 248);
  v9[5] = v3;
  v5 = *(_OWORD *)(v0 + 200);
  v9[0] = *(_OWORD *)(v0 + 184);
  v9[1] = v5;
  sub_237E3A78C((uint64_t)v9);
  swift_bridgeObjectRelease();
  sub_237E2209C(v0 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__highlighted, &qword_256899518);
  sub_237E2209C(v0 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__currentLocationPin, &qword_256899518);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_237E2209C(v0 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__alarmTime, &qword_25689C140);
  swift_release();
  v6 = v0 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel___observationRegistrar;
  v7 = sub_237EE1F50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return v0;
}

uint64_t sub_237E42A4C()
{
  sub_237E42920();
  return swift_deallocClassInstance();
}

uint64_t sub_237E42A70()
{
  return type metadata accessor for WorldViewModel(0);
}

uint64_t type metadata accessor for WorldViewModel(uint64_t a1)
{
  return sub_237E42BC0(a1, (uint64_t *)&unk_256898F70);
}

void sub_237E42A8C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_237E1B410(319, qword_256898F80, (void (*)(uint64_t))type metadata accessor for WorldViewModel.Pin);
  if (v0 <= 0x3F)
  {
    sub_237E1B410(319, (unint64_t *)&qword_25689BEC0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    if (v1 <= 0x3F)
    {
      sub_237EE1F50();
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t type metadata accessor for WorldViewModel.Pin(uint64_t a1)
{
  return sub_237E42BC0(a1, qword_2568993E8);
}

uint64_t sub_237E42BC0(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

_QWORD *sub_237E42BF4(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
    v7 = a3[7];
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = sub_237EE1EC0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[9];
    *(_OWORD *)((char *)v4 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
    v12 = (char *)v4 + v11;
    v13 = (uint64_t)a2 + v11;
    v12[8] = *(_BYTE *)(v13 + 8);
    *(_QWORD *)v12 = *(_QWORD *)v13;
    v14 = a3[10];
    v15 = (_QWORD *)((char *)v4 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_237E42CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 28);
  v3 = sub_237EE1EC0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_237E42D28(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v6 = a3[7];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_237EE1EC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  v13 = a3[10];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_237E42DD8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  v6 = a3[7];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_237EE1EC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[8];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  v13 = a3[9];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(_BYTE *)(v15 + 8);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = v16;
  v17 = a3[10];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_237E42EC0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  v6 = a3[7];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_237EE1EC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_237E42F64(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  v6 = a3[7];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_237EE1EC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  v13 = a3[10];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v17 = *v15;
  v16 = v15[1];
  *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_237E43020()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_237E4302C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_237EE1EC0();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 28), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 40) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_237E430BC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_237E430C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_237EE1EC0();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 28), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 40) + 8) = a2;
  return result;
}

uint64_t sub_237E43148()
{
  uint64_t result;
  unint64_t v1;

  result = sub_237EE1EC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for WorldViewModelContext(uint64_t result)
{
  uint64_t v1;
  int v2;

  v1 = result;
  v2 = *(unsigned __int8 *)(result + 96);
  if (v2 == 2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(result);
    __swift_destroy_boxed_opaque_existential_1Tm(v1 + 40);
  }
  else if (v2 == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    if (*(_BYTE *)(result + 96))
      return result;
    __swift_destroy_boxed_opaque_existential_1Tm(result);
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for WorldViewModelContext(uint64_t a1, uint64_t a2)
{
  int v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v4 = *(unsigned __int8 *)(a2 + 96);
  if (v4 == 2)
  {
    v7 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
    v8 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 40, a2 + 40);
    v9 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v9;
    *(_BYTE *)(a1 + 96) = 2;
    swift_bridgeObjectRetain();
  }
  else if (v4 == 1)
  {
    v10 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v10;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_BYTE *)(a1 + 96) = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else if (*(_BYTE *)(a2 + 96))
  {
    v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
    v12 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v12;
    v13 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v13;
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v5;
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    v6 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v6;
    *(_BYTE *)(a1 + 96) = 0;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for WorldViewModelContext(uint64_t a1, __int128 *a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  if ((__int128 *)a1 != a2)
  {
    sub_237E2846C(a1);
    v4 = *((unsigned __int8 *)a2 + 96);
    if (v4 == 2)
    {
      v6 = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
      v7 = *((_QWORD *)a2 + 8);
      *(_QWORD *)(a1 + 64) = v7;
      *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, (uint64_t)a2 + 40);
      *(_QWORD *)(a1 + 80) = *((_QWORD *)a2 + 10);
      *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
      *(_BYTE *)(a1 + 96) = 2;
      swift_bridgeObjectRetain();
    }
    else if (v4 == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
      *(_BYTE *)(a1 + 96) = 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else if (*((_BYTE *)a2 + 96))
    {
      v8 = *a2;
      v9 = a2[2];
      *(_OWORD *)(a1 + 16) = a2[1];
      *(_OWORD *)(a1 + 32) = v9;
      *(_OWORD *)a1 = v8;
      v10 = a2[3];
      v11 = a2[4];
      v12 = a2[5];
      *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
      *(_OWORD *)(a1 + 64) = v11;
      *(_OWORD *)(a1 + 80) = v12;
      *(_OWORD *)(a1 + 48) = v10;
    }
    else
    {
      v5 = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 24) = v5;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v5 - 8))(a1, a2);
      *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
      *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
      *(_BYTE *)(a1 + 96) = 0;
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

__n128 __swift_memcpy97_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for WorldViewModelContext(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;

  if (a1 != a2)
  {
    sub_237E2846C(a1);
    v4 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v4;
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for WorldViewModelContext(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 97))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 96);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WorldViewModelContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 96) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 97) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 97) = 0;
    if (a2)
      *(_BYTE *)(result + 96) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for WorldViewModelContext()
{
  return &type metadata for WorldViewModelContext;
}

unint64_t sub_237E435E4(uint64_t a1)
{
  unint64_t result;

  result = sub_237E43608();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_237E43608()
{
  unint64_t result;

  result = qword_256899438;
  if (!qword_256899438)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE6B08, &type metadata for WorldViewModelContext);
    atomic_store(result, (unint64_t *)&qword_256899438);
  }
  return result;
}

unint64_t sub_237E43650(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_237E4368C();
  a1[2] = sub_237E436D0();
  a1[3] = sub_237E43714();
  result = sub_237E43758();
  a1[4] = result;
  return result;
}

unint64_t sub_237E4368C()
{
  unint64_t result;

  result = qword_2568994A0;
  if (!qword_2568994A0)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE6B30, &type metadata for WorldViewModelContext);
    atomic_store(result, (unint64_t *)&qword_2568994A0);
  }
  return result;
}

unint64_t sub_237E436D0()
{
  unint64_t result;

  result = qword_2568994A8;
  if (!qword_2568994A8)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE6B9C, &type metadata for WorldViewModelContext);
    atomic_store(result, (unint64_t *)&qword_2568994A8);
  }
  return result;
}

unint64_t sub_237E43714()
{
  unint64_t result;

  result = qword_2568994B0;
  if (!qword_2568994B0)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE6B74, &type metadata for WorldViewModelContext);
    atomic_store(result, (unint64_t *)&qword_2568994B0);
  }
  return result;
}

unint64_t sub_237E43758()
{
  unint64_t result;

  result = qword_2568994B8;
  if (!qword_2568994B8)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE6B4C, &type metadata for WorldViewModelContext);
    atomic_store(result, (unint64_t *)&qword_2568994B8);
  }
  return result;
}

uint64_t sub_237E4379C()
{
  return sub_237E20E98(&qword_2568994C0, type metadata accessor for WorldViewModel.Pin, (uint64_t)&unk_237EE6CA0);
}

uint64_t sub_237E437C8()
{
  return sub_237E20E98(qword_2568994C8, (uint64_t (*)(uint64_t))type metadata accessor for CLLocationCoordinate2D, (uint64_t)&protocol conformance descriptor for CLLocationCoordinate2D);
}

uint64_t sub_237E437F4()
{
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F14();
  return swift_release();
}

uint64_t sub_237E4389C()
{
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F14();
  return swift_release();
}

void (*sub_237E43944(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_237E3EDFC(v2);
  return sub_237E23288;
}

uint64_t sub_237E43988(CGFloat a1, CFTimeInterval a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  double v12;
  uint64_t (*v13)(uint64_t);
  double v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  double *v18;
  double v19;
  CGFloat v20;
  double v21;
  char *v22;
  uint64_t v23;
  uint64_t result;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  CGPoint v43;
  CGRect v44;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899518);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for WorldViewModel.Pin(0);
  v40 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v42 = v2;
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  swift_beginAccess();
  v39 = *(uint64_t **)(*(_QWORD *)(v2 + 336) + 16);
  if (!v39)
  {
    v23 = 1;
    goto LABEL_25;
  }
  v33 = (uint64_t *)(v2 + 336);
  v34 = v7;
  v35 = 0;
  v11 = 0;
  v12 = 0.0;
  v13 = type metadata accessor for WorldViewModel.Pin;
  v36 = 0x100000001;
  do
  {
    swift_getKeyPath();
    v41 = v2;
    sub_237EE1F20();
    swift_release();
    v15 = *(_QWORD *)(v2 + 336);
    if (v11 >= *(_QWORD *)(v15 + 16))
    {
      __break(1u);
LABEL_27:
      result = sub_237E46E1C((unint64_t)v10);
      v10 = (char *)result;
      *(_QWORD *)v11 = result;
      goto LABEL_21;
    }
    v38 = (*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
    v37 = *(_QWORD *)(v40 + 72);
    v16 = v13;
    sub_237E21EBC(v15 + v38 + v37 * v11, (uint64_t)v10, v13);
    v17 = v8;
    v18 = (double *)&v10[*(int *)(v8 + 32)];
    v19 = *v18 + -22.0;
    swift_getKeyPath();
    v41 = v2;
    sub_237EE1F20();
    swift_release();
    v20 = v19 + *(double *)(v2 + 144);
    v21 = v18[1] + -22.0;
    swift_getKeyPath();
    v41 = v2;
    sub_237EE1F20();
    swift_release();
    v44.origin.y = v21 + *(double *)(v2 + 152);
    v44.size.width = 44.0;
    v44.origin.x = v20;
    v44.size.height = 44.0;
    v43.x = a1;
    v43.y = a2;
    if (!CGRectContainsPoint(v44, v43))
    {
      v14 = v12;
      v8 = v17;
LABEL_4:
      v13 = v16;
      goto LABEL_5;
    }
    v22 = &v10[*(int *)(v17 + 36)];
    v14 = *(double *)v22;
    v8 = v17;
    if ((v22[8] & 1) != 0)
    {
      v36 = 0x100000000;
      v35 = v11;
      goto LABEL_4;
    }
    v13 = v16;
    if ((v36 & 0x100000000) != 0)
    {
      if ((v36 & 1) == 0)
      {
        v36 = 0x100000000;
LABEL_15:
        v14 = v12;
        goto LABEL_5;
      }
    }
    else if (v12 < v14)
    {
      HIDWORD(v36) = 0;
      goto LABEL_15;
    }
    v35 = v11;
    v36 = 0;
LABEL_5:
    ++v11;
    sub_237E21F00((uint64_t)v10, v13);
    v12 = v14;
  }
  while (v39 != (uint64_t *)v11);
  if ((v36 & 1) != 0)
  {
    v23 = 1;
    v7 = v34;
    goto LABEL_25;
  }
  a2 = CACurrentMediaTime();
  swift_getKeyPath();
  v41 = v2;
  sub_237EE1F20();
  swift_release();
  v41 = v2;
  swift_getKeyPath();
  sub_237EE1F38();
  swift_release();
  v11 = (unint64_t)v33;
  swift_beginAccess();
  v10 = *(char **)(v2 + 336);
  result = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v2 + 336) = v10;
  if ((result & 1) == 0)
    goto LABEL_27;
LABEL_21:
  v25 = v38;
  if ((v35 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v35 >= *((_QWORD *)v10 + 2))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v26 = v35;
  v27 = v35 * v37;
  v28 = &v10[v38 + *(int *)(v8 + 36) + v35 * v37];
  *(CFTimeInterval *)v28 = a2;
  v28[8] = 0;
  v29 = v25;
  swift_endAccess();
  v41 = v2;
  swift_getKeyPath();
  sub_237EE1F2C();
  swift_release();
  swift_getKeyPath();
  v41 = v2;
  sub_237EE1F20();
  result = swift_release();
  v30 = *(_QWORD *)(v2 + 336);
  if (v26 >= *(_QWORD *)(v30 + 16))
  {
LABEL_30:
    __break(1u);
    return result;
  }
  v31 = v30 + v29 + v27;
  v7 = v34;
  sub_237E21EBC(v31, (uint64_t)v34, type metadata accessor for WorldViewModel.Pin);
  v23 = 0;
LABEL_25:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56))(v7, v23, 1, v8);
  sub_237E40768((uint64_t)v7);
  return sub_237E2209C((uint64_t)v7, &qword_256899518);
}

uint64_t sub_237E43E80()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v1 = v0;
  v8[0] = 0;
  v8[1] = 0xE000000000000000;
  sub_237EE2AF0();
  sub_237EE2AF0();
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  swift_beginAccess();
  v2 = *(_QWORD *)(v0 + 336);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    v4 = *(_QWORD *)(type metadata accessor for WorldViewModel.Pin(0) - 8);
    v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_237E43FC0(v5, (uint64_t)v8, v1);
      v5 += v6;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  sub_237EE2AF0();
  return v8[0];
}

uint64_t sub_237E43FC0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;

  v64 = a3;
  v6 = type metadata accessor for WorldViewModel.Pin(0);
  v62 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v52 = (uint64_t)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899520);
  MEMORY[0x24BDAC7A8](v68);
  v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v60 = (uint64_t)&v51 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899518);
  MEMORY[0x24BDAC7A8](v12);
  v54 = (uint64_t)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v61 = (uint64_t)&v51 - v15;
  MEMORY[0x24BDAC7A8](v16);
  v63 = (char *)&v51 - v17;
  MEMORY[0x24BDAC7A8](v18);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v51 - v20;
  v22 = *(_QWORD *)(a1 + *(int *)(v6 + 40) + 8);
  v58 = v3;
  v56 = v9;
  v53 = v23;
  if (v22)
  {
    if ((*(_BYTE *)(a1 + 16) & 1) != 0)
    {
      v66 = 0;
      v67 = 0xE000000000000000;
      sub_237EE2FA0();
      swift_bridgeObjectRelease();
      v66 = 0xD000000000000010;
      v67 = 0x8000000237EEECE0;
      sub_237EE2AF0();
      goto LABEL_6;
    }
    v66 = 0x746943646C726F57;
    v67 = 0xEA00000000002879;
    sub_237EE2AF0();
LABEL_11:
    sub_237EE2AF0();
    sub_237EE2AF0();
    swift_bridgeObjectRelease();
    if ((*(_BYTE *)(a1 + 17) & 1) == 0)
      goto LABEL_13;
    goto LABEL_12;
  }
  if ((*(_BYTE *)(a1 + 16) & 1) == 0)
  {
    v66 = 0;
    v67 = 0xE000000000000000;
    sub_237EE2FA0();
    sub_237EE2AF0();
    sub_237EE2CE8();
    sub_237EE2AF0();
    sub_237EE2CE8();
    goto LABEL_11;
  }
  v66 = 0;
  v67 = 0xE000000000000000;
  sub_237EE2FA0();
  sub_237EE2AF0();
  sub_237EE2CE8();
  sub_237EE2AF0();
  sub_237EE2CE8();
LABEL_6:
  sub_237EE2AF0();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  if ((*(_BYTE *)(a1 + 17) & 1) != 0)
    sub_237EE2AF0();
LABEL_12:
  sub_237EE2AF0();
LABEL_13:
  v57 = a2;
  v55 = a1;
  sub_237E21EBC(a1, (uint64_t)v21, type metadata accessor for WorldViewModel.Pin);
  v24 = v62;
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v62 + 56);
  v25(v21, 0, 1, v6);
  swift_getKeyPath();
  v26 = v64;
  v27 = v64 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel___observationRegistrar;
  v66 = v64;
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  v59 = v27;
  sub_237EE1F20();
  swift_release();
  v28 = v26 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__highlighted;
  swift_beginAccess();
  v29 = v60;
  v30 = v60 + *(int *)(v68 + 48);
  sub_237E22004((uint64_t)v21, v60, &qword_256899518);
  sub_237E22004(v28, v30, &qword_256899518);
  v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  if (v31(v29, 1, v6) != 1)
  {
    v35 = v53;
    sub_237E22004(v29, v53, &qword_256899518);
    if (v31(v30, 1, v6) != 1)
    {
      v36 = v52;
      sub_237E47CE0(v30, v52, type metadata accessor for WorldViewModel.Pin);
      v37 = sub_237E46EA0(v35, v36);
      sub_237E21F00(v36, type metadata accessor for WorldViewModel.Pin);
      sub_237E2209C((uint64_t)v21, &qword_256899518);
      sub_237E21F00(v35, type metadata accessor for WorldViewModel.Pin);
      sub_237E2209C(v29, &qword_256899518);
      v34 = (uint64_t)v63;
      v33 = v55;
      if (!v37)
        goto LABEL_21;
      goto LABEL_20;
    }
    sub_237E2209C((uint64_t)v21, &qword_256899518);
    sub_237E21F00(v35, type metadata accessor for WorldViewModel.Pin);
    v33 = v55;
LABEL_18:
    sub_237E2209C(v29, &qword_256899520);
    v34 = (uint64_t)v63;
    goto LABEL_21;
  }
  sub_237E2209C((uint64_t)v21, &qword_256899518);
  v32 = v31(v30, 1, v6);
  v33 = v55;
  if (v32 != 1)
    goto LABEL_18;
  sub_237E2209C(v29, &qword_256899518);
  v34 = (uint64_t)v63;
LABEL_20:
  sub_237EE2AF0();
LABEL_21:
  sub_237E21EBC(v33, v34, type metadata accessor for WorldViewModel.Pin);
  v38 = 1;
  v25((char *)v34, 0, 1, v6);
  swift_getKeyPath();
  v39 = v64;
  v65 = v64;
  sub_237EE1F20();
  swift_release();
  swift_beginAccess();
  v40 = *(_QWORD *)(v39 + 336);
  v41 = *(_QWORD *)(v40 + 16);
  if (v41)
  {
    v42 = v61;
    sub_237E21EBC(v40+ ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))+ *(_QWORD *)(v62 + 72) * (v41 - 1), v61, type metadata accessor for WorldViewModel.Pin);
    v38 = 0;
    v43 = (uint64_t)v56;
    v44 = (uint64_t)v63;
  }
  else
  {
    v43 = (uint64_t)v56;
    v44 = (uint64_t)v63;
    v42 = v61;
  }
  v25((char *)v42, v38, 1, v6);
  v45 = v43 + *(int *)(v68 + 48);
  sub_237E22004(v44, v43, &qword_256899518);
  sub_237E22004(v42, v45, &qword_256899518);
  if (v31(v43, 1, v6) != 1)
  {
    v46 = v54;
    sub_237E22004(v43, v54, &qword_256899518);
    if (v31(v45, 1, v6) != 1)
    {
      v48 = v44;
      v49 = v52;
      sub_237E47CE0(v45, v52, type metadata accessor for WorldViewModel.Pin);
      v50 = sub_237E46EA0(v46, v49);
      sub_237E21F00(v49, type metadata accessor for WorldViewModel.Pin);
      sub_237E2209C(v61, &qword_256899518);
      sub_237E2209C(v48, &qword_256899518);
      sub_237E21F00(v46, type metadata accessor for WorldViewModel.Pin);
      sub_237E2209C(v43, &qword_256899518);
      if (v50)
        return sub_237EE2AF0();
      goto LABEL_30;
    }
    sub_237E2209C(v61, &qword_256899518);
    sub_237E2209C(v44, &qword_256899518);
    sub_237E21F00(v46, type metadata accessor for WorldViewModel.Pin);
LABEL_29:
    sub_237E2209C(v43, &qword_256899520);
LABEL_30:
    sub_237EE2AF0();
    return sub_237EE2AF0();
  }
  sub_237E2209C(v42, &qword_256899518);
  sub_237E2209C(v44, &qword_256899518);
  if (v31(v45, 1, v6) != 1)
    goto LABEL_29;
  sub_237E2209C(v43, &qword_256899518);
  return sub_237EE2AF0();
}

uint64_t sub_237E448C0()
{
  return sub_237E43E80();
}

uint64_t sub_237E448E4(uint64_t a1)
{
  uint64_t result;

  result = sub_237E20E98(&qword_256899510, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D20);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_237E44928()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 176) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_237E44940()
{
  return sub_237E44954();
}

uint64_t sub_237E44954()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v0 + 24);
  result = swift_beginAccess();
  *(_BYTE *)(v1 + 177) = v2;
  return result;
}

void sub_237E449B4(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *(_QWORD *)(type metadata accessor for WorldViewModel.Pin(0) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_237EB780C(v3);
  v4 = v3[2];
  v5[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_237E44A34(v5);
  *a1 = v3;
}

void sub_237E44A34(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  double *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  double *v53;
  uint64_t v54;
  double *v55;
  uint64_t v56;
  uint64_t v57;
  double *v58;
  char v59;
  uint64_t (*v60)(uint64_t);
  char v61;
  uint64_t v62;
  char v63;
  double *v64;
  double *v65;
  BOOL v66;
  _BOOL4 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  double *v71;
  uint64_t v72;
  char *v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  int v78;
  char v79;
  uint64_t (*v80)(uint64_t);
  uint64_t v81;
  char v82;
  double *v83;
  double *v84;
  BOOL v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  double *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  double *v101;
  uint64_t v102;
  double *v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  char v108;
  uint64_t v109;
  char v110;
  double *v111;
  BOOL v112;
  BOOL v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  char *v118;
  char *v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  BOOL v131;
  unint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  BOOL v141;
  uint64_t v142;
  char v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  BOOL v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  unint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  char *v184;
  char *v185;
  double *v186;
  double *v187;
  char *v188;
  char *v189;
  uint64_t v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  unint64_t v194;
  uint64_t v195;
  double *v196;
  double *v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  char *v202;
  double *v203;
  double *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t *v210;
  uint64_t v211;

  v3 = type metadata accessor for WorldViewModel.Pin(0);
  v195 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v192 = (uint64_t)&v178 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v208 = (uint64_t)&v178 - v6;
  MEMORY[0x24BDAC7A8](v7);
  v201 = (uint64_t)&v178 - v8;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v178 - v10;
  MEMORY[0x24BDAC7A8](v12);
  v203 = (double *)((char *)&v178 - v13);
  MEMORY[0x24BDAC7A8](v14);
  v204 = (double *)((char *)&v178 - v15);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v178 - v17;
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v178 - v20;
  MEMORY[0x24BDAC7A8](v22);
  v196 = (double *)((char *)&v178 - v23);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (double *)((char *)&v178 - v25);
  MEMORY[0x24BDAC7A8](v27);
  v183 = (uint64_t)&v178 - v28;
  MEMORY[0x24BDAC7A8](v29);
  v184 = (char *)&v178 - v30;
  MEMORY[0x24BDAC7A8](v31);
  v187 = (double *)((char *)&v178 - v32);
  MEMORY[0x24BDAC7A8](v33);
  v186 = (double *)((char *)&v178 - v34);
  v210 = a1;
  v35 = a1[1];
  v36 = sub_237EE3174();
  if (v36 >= v35)
  {
    if (v35 < 0)
      goto LABEL_191;
    if (v35)
      sub_237E459A4(0, v35, 1, v210);
    return;
  }
  if (v35 >= 0)
    v37 = v35;
  else
    v37 = v35 + 1;
  if (v35 < -1)
    goto LABEL_199;
  v211 = v3;
  v181 = v36;
  v198 = v1;
  if (v35 < 2)
  {
    v42 = MEMORY[0x24BEE4AF8];
    v194 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v195 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v195 + 80));
    if (v35 != 1)
    {
      v48 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v45 = (char *)MEMORY[0x24BEE4AF8];
LABEL_158:
      v180 = v42;
      if (v48 >= 2)
      {
        v168 = *v210;
        if (!*v210)
          goto LABEL_198;
        v169 = *(_QWORD *)(v195 + 72);
        do
        {
          v170 = v48 - 2;
          v171 = v45;
          v172 = *(_QWORD *)&v45[16 * v48];
          v173 = *(_QWORD *)&v45[16 * v48 + 16];
          v174 = *(_QWORD *)&v45[16 * v48 + 24];
          v175 = v198;
          sub_237E45D4C(v168 + v169 * v172, v168 + v169 * v173, v168 + v169 * v174, v194);
          v198 = v175;
          if (v175)
            break;
          if (v174 < v172)
            goto LABEL_187;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v171 = sub_237E46894((uint64_t)v171);
          if (v170 >= *((_QWORD *)v171 + 2))
            goto LABEL_188;
          v176 = &v171[16 * v170 + 32];
          *(_QWORD *)v176 = v172;
          *((_QWORD *)v176 + 1) = v174;
          v177 = *((_QWORD *)v171 + 2);
          if (v48 > v177)
            goto LABEL_189;
          v45 = v171;
          memmove(&v171[16 * v48 + 16], &v171[16 * v48 + 32], 16 * (v177 - v48));
          *((_QWORD *)v171 + 2) = v177 - 1;
          v48 = v177 - 1;
        }
        while (v177 > 2);
      }
LABEL_168:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v180 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
    v38 = 1;
    v180 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v38 = v35;
    v39 = v37 >> 1;
    v40 = sub_237EE2C04();
    *(_QWORD *)(v40 + 16) = v39;
    v41 = *(unsigned __int8 *)(v195 + 80);
    v180 = v40;
    v194 = v40 + ((v41 + 32) & ~v41);
  }
  v43 = 0;
  v44 = v184;
  v179 = v184 + 8;
  v178 = v183 + 8;
  v191 = v21;
  v188 = v21 + 8;
  v189 = v18;
  v185 = v18 + 8;
  v202 = v11;
  v199 = v201 + 8;
  v200 = v11 + 8;
  v45 = (char *)MEMORY[0x24BEE4AF8];
  v46 = v204;
  v197 = v26;
  v47 = v38;
  while (1)
  {
    v49 = v43;
    v50 = v43 + 1;
    v193 = v43;
    if (v43 + 1 >= v47)
    {
      v60 = type metadata accessor for WorldViewModel.Pin;
      goto LABEL_76;
    }
    v207 = v47;
    v51 = *v210;
    v52 = *(_QWORD *)(v195 + 72);
    v205 = v43 + 1;
    v53 = v186;
    sub_237E21EBC(v51 + v52 * v50, (uint64_t)v186, type metadata accessor for WorldViewModel.Pin);
    v190 = v51;
    v209 = v52;
    v54 = v51 + v52 * v49;
    v55 = v187;
    sub_237E21EBC(v54, (uint64_t)v187, type metadata accessor for WorldViewModel.Pin);
    v56 = v211;
    v57 = (uint64_t)v44;
    v58 = (double *)((char *)v53 + *(int *)(v211 + 36));
    LODWORD(v53) = *((unsigned __int8 *)v58 + 8);
    sub_237E21EBC((uint64_t)v55, v57, type metadata accessor for WorldViewModel.Pin);
    if ((_DWORD)v53 == 1)
    {
      v59 = v179[*(int *)(v56 + 36)];
      sub_237E21F00(v57, type metadata accessor for WorldViewModel.Pin);
      v60 = type metadata accessor for WorldViewModel.Pin;
      if ((v59 & 1) == 0)
      {
        LODWORD(v206) = 1;
LABEL_26:
        v64 = v187;
        v49 = v193;
LABEL_36:
        v47 = v207;
        goto LABEL_37;
      }
    }
    else
    {
      sub_237E21F00(v57, type metadata accessor for WorldViewModel.Pin);
      v60 = type metadata accessor for WorldViewModel.Pin;
    }
    v61 = *((_BYTE *)v58 + 8);
    v62 = v183;
    sub_237E21EBC((uint64_t)v187, v183, type metadata accessor for WorldViewModel.Pin);
    if ((v61 & 1) != 0)
    {
      sub_237E21F00(v62, type metadata accessor for WorldViewModel.Pin);
    }
    else
    {
      v63 = *(_BYTE *)(v178 + *(int *)(v211 + 36));
      sub_237E21F00(v62, type metadata accessor for WorldViewModel.Pin);
      if ((v63 & 1) != 0)
      {
        LODWORD(v206) = 0;
        goto LABEL_26;
      }
    }
    v64 = v187;
    v49 = v193;
    if (((_BYTE)v58[1] & 1) == 0)
    {
      v65 = (double *)((char *)v187 + *(int *)(v211 + 36));
      if (((_BYTE)v65[1] & 1) == 0)
      {
        LODWORD(v206) = *v58 < *v65;
        goto LABEL_36;
      }
    }
    v66 = *v186 < *v187;
    v47 = v207;
    if (*v186 == *v187)
      v66 = v186[1] < v187[1];
    v67 = v66;
    LODWORD(v206) = v67;
LABEL_37:
    sub_237E21F00((uint64_t)v64, type metadata accessor for WorldViewModel.Pin);
    sub_237E21F00((uint64_t)v186, type metadata accessor for WorldViewModel.Pin);
    v50 = v49 + 2;
    if (v49 + 2 < v47)
    {
      v182 = v45;
      v205 *= v209;
      v68 = v190;
      v69 = v209 * v50;
      while (1)
      {
        v70 = v50;
        sub_237E21EBC(v68 + v69, (uint64_t)v26, v60);
        v71 = v196;
        sub_237E21EBC(v68 + v205, (uint64_t)v196, v60);
        v72 = v211;
        v73 = (char *)v26 + *(int *)(v211 + 36);
        v74 = v73[8];
        v75 = (uint64_t)v71;
        v76 = (uint64_t)v191;
        sub_237E21EBC(v75, (uint64_t)v191, v60);
        if (v74 == 1)
        {
          v77 = v188[*(int *)(v72 + 36)];
          sub_237E21F00(v76, v60);
          if ((v77 & 1) == 0)
          {
            v78 = 1;
LABEL_47:
            v83 = v196;
LABEL_56:
            v26 = v197;
            goto LABEL_57;
          }
        }
        else
        {
          sub_237E21F00(v76, v60);
        }
        v79 = v73[8];
        v80 = v60;
        v81 = (uint64_t)v189;
        sub_237E21EBC((uint64_t)v196, (uint64_t)v189, v80);
        if ((v79 & 1) != 0)
        {
          sub_237E21F00(v81, v80);
          v60 = v80;
        }
        else
        {
          v82 = v185[*(int *)(v211 + 36)];
          sub_237E21F00(v81, v80);
          v60 = v80;
          if ((v82 & 1) != 0)
          {
            v78 = 0;
            goto LABEL_47;
          }
        }
        v83 = v196;
        if ((v73[8] & 1) == 0)
        {
          v84 = (double *)((char *)v196 + *(int *)(v211 + 36));
          if (((_BYTE)v84[1] & 1) == 0)
          {
            v78 = *(double *)v73 < *v84;
            goto LABEL_56;
          }
        }
        v26 = v197;
        v85 = *v197 < *v196;
        if (*v197 == *v196)
          v85 = v197[1] < v196[1];
        v78 = v85;
LABEL_57:
        sub_237E21F00((uint64_t)v83, v60);
        sub_237E21F00((uint64_t)v26, v60);
        if ((_DWORD)v206 != v78)
        {
          v45 = v182;
          v50 = v70;
          v49 = v193;
          v47 = v207;
          if ((_DWORD)v206)
            goto LABEL_63;
          goto LABEL_76;
        }
        v50 = v70 + 1;
        v68 += v209;
        v47 = v207;
        if (v207 == v70 + 1)
        {
          v50 = v207;
          v45 = v182;
          v49 = v193;
          break;
        }
      }
    }
    if ((_DWORD)v206)
    {
LABEL_63:
      if (v50 < v49)
        goto LABEL_192;
      if (v49 < v50)
      {
        v182 = v45;
        v86 = 0;
        v87 = v209 * (v50 - 1);
        v88 = v50 * v209;
        v89 = v49 * v209;
        do
        {
          if (v49 != v50 + v86 - 1)
          {
            v91 = v190;
            if (!v190)
              goto LABEL_197;
            v92 = v50;
            v93 = v190 + v89;
            v206 = v190 + v87;
            sub_237E47CE0(v190 + v89, v192, type metadata accessor for WorldViewModel.Pin);
            if (v89 < v87 || v93 >= v91 + v88)
            {
              v90 = v206;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              v90 = v206;
              if (v89 != v87)
                swift_arrayInitWithTakeBackToFront();
            }
            v60 = type metadata accessor for WorldViewModel.Pin;
            sub_237E47CE0(v192, v90, type metadata accessor for WorldViewModel.Pin);
            v26 = v197;
            v50 = v92;
          }
          ++v49;
          --v86;
          v87 -= v209;
          v88 -= v209;
          v89 += v209;
        }
        while (v49 < v50 + v86);
        v45 = v182;
        v49 = v193;
        v47 = v207;
      }
    }
LABEL_76:
    if (v50 >= v47)
      goto LABEL_110;
    if (__OFSUB__(v50, v49))
      goto LABEL_190;
    if (v50 - v49 >= v181)
      goto LABEL_110;
    if (__OFADD__(v49, v181))
      goto LABEL_193;
    v94 = v49 + v181 >= v47 ? v47 : v49 + v181;
    if (v94 < v49)
      break;
    if (v50 == v94)
      goto LABEL_110;
    v182 = v45;
    v95 = *(_QWORD *)(v195 + 72);
    v96 = v95 * (v50 - 1);
    v205 = v95;
    v209 = v50 * v95;
    v97 = v203;
    v190 = v94;
    while (2)
    {
      v99 = 0;
      v206 = v96;
      v207 = v50;
      while (1)
      {
        v100 = *v210;
        sub_237E21EBC(v209 + v99 + *v210, (uint64_t)v46, v60);
        sub_237E21EBC(v96 + v99 + v100, (uint64_t)v97, v60);
        v101 = v46;
        v102 = v211;
        v103 = (double *)((char *)v101 + *(int *)(v211 + 36));
        v104 = *((unsigned __int8 *)v103 + 8);
        v105 = (uint64_t)v97;
        v106 = (uint64_t)v202;
        sub_237E21EBC(v105, (uint64_t)v202, v60);
        if (v104 == 1)
        {
          v107 = v200[*(int *)(v102 + 36)];
          sub_237E21F00(v106, v60);
          if ((v107 & 1) == 0)
          {
            v97 = v203;
            sub_237E21F00((uint64_t)v203, v60);
            v46 = v204;
            sub_237E21F00((uint64_t)v204, v60);
            v96 = v206;
            goto LABEL_106;
          }
        }
        else
        {
          sub_237E21F00(v106, v60);
        }
        v108 = *((_BYTE *)v103 + 8);
        v97 = v203;
        v109 = v201;
        sub_237E21EBC((uint64_t)v203, v201, v60);
        if ((v108 & 1) == 0)
          break;
        sub_237E21F00(v109, v60);
LABEL_97:
        v46 = v204;
        if (((_BYTE)v103[1] & 1) != 0
          || (v111 = (double *)((char *)v97 + *(int *)(v211 + 36)), ((_BYTE)v111[1] & 1) != 0))
        {
          v112 = *v204 < *v97;
          v60 = type metadata accessor for WorldViewModel.Pin;
          if (*v204 == *v97)
            v112 = v204[1] < v97[1];
          v113 = v112;
        }
        else
        {
          v113 = *v103 < *v111;
          v60 = type metadata accessor for WorldViewModel.Pin;
        }
        v96 = v206;
        sub_237E21F00((uint64_t)v97, type metadata accessor for WorldViewModel.Pin);
        sub_237E21F00((uint64_t)v46, type metadata accessor for WorldViewModel.Pin);
        if (!v113)
        {
          v98 = v207;
          goto LABEL_87;
        }
LABEL_106:
        v114 = *v210;
        if (!*v210)
          goto LABEL_195;
        v115 = v114 + v96 + v99;
        sub_237E47CE0(v114 + v209 + v99, v208, type metadata accessor for WorldViewModel.Pin);
        swift_arrayInitWithTakeFrontToBack();
        v60 = type metadata accessor for WorldViewModel.Pin;
        sub_237E47CE0(v208, v115, type metadata accessor for WorldViewModel.Pin);
        v99 -= v205;
        ++v49;
        v98 = v207;
        if (v207 == v49)
          goto LABEL_87;
      }
      v110 = *(_BYTE *)(v199 + *(int *)(v211 + 36));
      sub_237E21F00(v109, v60);
      if ((v110 & 1) == 0)
        goto LABEL_97;
      v60 = type metadata accessor for WorldViewModel.Pin;
      sub_237E21F00((uint64_t)v97, type metadata accessor for WorldViewModel.Pin);
      v46 = v204;
      sub_237E21F00((uint64_t)v204, type metadata accessor for WorldViewModel.Pin);
      v96 = v206;
      v98 = v207;
LABEL_87:
      v50 = v98 + 1;
      v96 += v205;
      v209 += v205;
      v49 = v193;
      if (v50 != v190)
        continue;
      break;
    }
    v50 = v190;
    v45 = v182;
    v26 = v197;
LABEL_110:
    if (v50 < v49)
      goto LABEL_186;
    v207 = v50;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v45 = sub_237E4652C(0, *((_QWORD *)v45 + 2) + 1, 1, v45);
    v117 = *((_QWORD *)v45 + 2);
    v116 = *((_QWORD *)v45 + 3);
    v48 = v117 + 1;
    v43 = v207;
    if (v117 >= v116 >> 1)
    {
      v167 = sub_237E4652C((char *)(v116 > 1), v117 + 1, 1, v45);
      v43 = v207;
      v45 = v167;
    }
    *((_QWORD *)v45 + 2) = v48;
    v118 = v45 + 32;
    v119 = &v45[16 * v117 + 32];
    *(_QWORD *)v119 = v49;
    *((_QWORD *)v119 + 1) = v43;
    if (v117)
    {
LABEL_116:
      v120 = v48 - 1;
      if (v48 >= 4)
      {
        v125 = &v118[16 * v48];
        v126 = *((_QWORD *)v125 - 8);
        v127 = *((_QWORD *)v125 - 7);
        v131 = __OFSUB__(v127, v126);
        v128 = v127 - v126;
        if (v131)
          goto LABEL_175;
        v130 = *((_QWORD *)v125 - 6);
        v129 = *((_QWORD *)v125 - 5);
        v131 = __OFSUB__(v129, v130);
        v123 = v129 - v130;
        v124 = v131;
        if (v131)
          goto LABEL_176;
        v132 = v48 - 2;
        v133 = &v118[16 * v48 - 32];
        v135 = *(_QWORD *)v133;
        v134 = *((_QWORD *)v133 + 1);
        v131 = __OFSUB__(v134, v135);
        v136 = v134 - v135;
        if (v131)
          goto LABEL_178;
        v131 = __OFADD__(v123, v136);
        v137 = v123 + v136;
        if (v131)
          goto LABEL_181;
        if (v137 >= v128)
        {
          v155 = &v118[16 * v120];
          v157 = *(_QWORD *)v155;
          v156 = *((_QWORD *)v155 + 1);
          v131 = __OFSUB__(v156, v157);
          v158 = v156 - v157;
          if (v131)
            goto LABEL_185;
          v148 = v123 < v158;
        }
        else
        {
LABEL_129:
          if ((v124 & 1) != 0)
            goto LABEL_177;
          v132 = v48 - 2;
          v138 = &v118[16 * v48 - 32];
          v140 = *(_QWORD *)v138;
          v139 = *((_QWORD *)v138 + 1);
          v141 = __OFSUB__(v139, v140);
          v142 = v139 - v140;
          v143 = v141;
          if (v141)
            goto LABEL_180;
          v144 = &v118[16 * v120];
          v146 = *(_QWORD *)v144;
          v145 = *((_QWORD *)v144 + 1);
          v131 = __OFSUB__(v145, v146);
          v147 = v145 - v146;
          if (v131)
            goto LABEL_183;
          if (__OFADD__(v142, v147))
            goto LABEL_184;
          if (v142 + v147 < v123)
            goto LABEL_141;
          v148 = v123 < v147;
        }
        if (v148)
          v120 = v132;
      }
      else
      {
        if (v48 == 3)
        {
          v122 = *((_QWORD *)v45 + 4);
          v121 = *((_QWORD *)v45 + 5);
          v131 = __OFSUB__(v121, v122);
          v123 = v121 - v122;
          v124 = v131;
          goto LABEL_129;
        }
        v149 = *((_QWORD *)v45 + 4);
        v150 = *((_QWORD *)v45 + 5);
        v131 = __OFSUB__(v150, v149);
        v142 = v150 - v149;
        v143 = v131;
LABEL_141:
        if ((v143 & 1) != 0)
          goto LABEL_179;
        v151 = &v118[16 * v120];
        v153 = *(_QWORD *)v151;
        v152 = *((_QWORD *)v151 + 1);
        v131 = __OFSUB__(v152, v153);
        v154 = v152 - v153;
        if (v131)
          goto LABEL_182;
        if (v154 < v142)
          goto LABEL_15;
      }
      v159 = v120 - 1;
      if (v120 - 1 >= v48)
      {
        __break(1u);
LABEL_172:
        __break(1u);
LABEL_173:
        __break(1u);
LABEL_174:
        __break(1u);
LABEL_175:
        __break(1u);
LABEL_176:
        __break(1u);
LABEL_177:
        __break(1u);
LABEL_178:
        __break(1u);
LABEL_179:
        __break(1u);
LABEL_180:
        __break(1u);
LABEL_181:
        __break(1u);
LABEL_182:
        __break(1u);
LABEL_183:
        __break(1u);
LABEL_184:
        __break(1u);
LABEL_185:
        __break(1u);
LABEL_186:
        __break(1u);
LABEL_187:
        __break(1u);
LABEL_188:
        __break(1u);
LABEL_189:
        __break(1u);
LABEL_190:
        __break(1u);
LABEL_191:
        __break(1u);
LABEL_192:
        __break(1u);
LABEL_193:
        __break(1u);
        break;
      }
      if (!*v210)
        goto LABEL_196;
      v160 = v45;
      v161 = &v118[16 * v159];
      v162 = *(_QWORD *)v161;
      v163 = &v118[16 * v120];
      v164 = *((_QWORD *)v163 + 1);
      v165 = v198;
      sub_237E45D4C(*v210 + *(_QWORD *)(v195 + 72) * *(_QWORD *)v161, *v210 + *(_QWORD *)(v195 + 72) * *(_QWORD *)v163, *v210 + *(_QWORD *)(v195 + 72) * v164, v194);
      v198 = v165;
      if (v165)
        goto LABEL_168;
      if (v164 < v162)
        goto LABEL_172;
      if (v120 > *((_QWORD *)v160 + 2))
        goto LABEL_173;
      *(_QWORD *)v161 = v162;
      *(_QWORD *)&v118[16 * v159 + 8] = v164;
      v166 = *((_QWORD *)v160 + 2);
      if (v120 >= v166)
        goto LABEL_174;
      v45 = v160;
      v48 = v166 - 1;
      memmove(&v118[16 * v120], v163 + 16, 16 * (v166 - 1 - v120));
      *((_QWORD *)v160 + 2) = v166 - 1;
      v26 = v197;
      v43 = v207;
      if (v166 <= 2)
        goto LABEL_15;
      goto LABEL_116;
    }
    v48 = 1;
LABEL_15:
    v47 = v210[1];
    v44 = v184;
    if (v43 >= v47)
    {
      v42 = v180;
      goto LABEL_158;
    }
  }
  __break(1u);
LABEL_195:
  __break(1u);
LABEL_196:
  __break(1u);
LABEL_197:
  __break(1u);
LABEL_198:
  __break(1u);
LABEL_199:
  sub_237EE3090();
  __break(1u);
}

void sub_237E459A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double *v26;
  int v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  char v32;
  double *v33;
  BOOL v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;

  v51 = a4;
  v40 = a1;
  v53 = type metadata accessor for WorldViewModel.Pin(0);
  MEMORY[0x24BDAC7A8](v53);
  v48 = (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v38 - v8;
  MEMORY[0x24BDAC7A8](v10);
  v44 = (uint64_t)&v38 - v11;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (double *)((char *)&v38 - v13);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (double *)((char *)&v38 - v17);
  v47 = a3;
  v39 = a2;
  if (a3 != a2)
  {
    v19 = *(_QWORD *)(v16 + 72);
    v41 = v9 + 8;
    v42 = v44 + 8;
    v20 = v19 * (v47 - 1);
    v45 = v19;
    v52 = v19 * v47;
    v43 = v9;
LABEL_6:
    v21 = 0;
    v22 = v40;
    v46 = v20;
    while (1)
    {
      v23 = *v51;
      v50 = v52 + v21;
      sub_237E21EBC(v52 + v21 + v23, (uint64_t)v18, type metadata accessor for WorldViewModel.Pin);
      v49 = v20 + v21;
      sub_237E21EBC(v20 + v21 + v23, (uint64_t)v14, type metadata accessor for WorldViewModel.Pin);
      v24 = v53;
      v25 = (uint64_t)v18;
      v26 = (double *)((char *)v18 + *(int *)(v53 + 36));
      v27 = *((unsigned __int8 *)v26 + 8);
      v28 = v44;
      sub_237E21EBC((uint64_t)v14, v44, type metadata accessor for WorldViewModel.Pin);
      if (v27 == 1)
      {
        v29 = *(_BYTE *)(v42 + *(int *)(v24 + 36));
        sub_237E21F00(v28, type metadata accessor for WorldViewModel.Pin);
        if ((v29 & 1) == 0)
        {
          sub_237E21F00((uint64_t)v14, type metadata accessor for WorldViewModel.Pin);
          v18 = (double *)v25;
          sub_237E21F00(v25, type metadata accessor for WorldViewModel.Pin);
          v20 = v46;
          goto LABEL_24;
        }
      }
      else
      {
        sub_237E21F00(v28, type metadata accessor for WorldViewModel.Pin);
      }
      v30 = *((_BYTE *)v26 + 8);
      v31 = (uint64_t)v43;
      sub_237E21EBC((uint64_t)v14, (uint64_t)v43, type metadata accessor for WorldViewModel.Pin);
      v18 = (double *)v25;
      if ((v30 & 1) != 0)
      {
        sub_237E21F00(v31, type metadata accessor for WorldViewModel.Pin);
        v20 = v46;
      }
      else
      {
        v32 = v41[*(int *)(v53 + 36)];
        sub_237E21F00(v31, type metadata accessor for WorldViewModel.Pin);
        v20 = v46;
        if ((v32 & 1) != 0)
        {
          sub_237E21F00((uint64_t)v14, type metadata accessor for WorldViewModel.Pin);
          sub_237E21F00((uint64_t)v18, type metadata accessor for WorldViewModel.Pin);
LABEL_5:
          v20 += v45;
          v52 += v45;
          if (++v47 == v39)
            return;
          goto LABEL_6;
        }
      }
      if (((_BYTE)v26[1] & 1) != 0 || (v33 = (double *)((char *)v14 + *(int *)(v53 + 36)), ((_BYTE)v33[1] & 1) != 0))
      {
        v34 = *v18 < *v14;
        if (*v18 == *v14)
          v34 = v18[1] < v14[1];
      }
      else
      {
        v34 = *v26 < *v33;
      }
      v35 = v34;
      sub_237E21F00((uint64_t)v14, type metadata accessor for WorldViewModel.Pin);
      sub_237E21F00((uint64_t)v18, type metadata accessor for WorldViewModel.Pin);
      if ((v35 & 1) == 0)
        goto LABEL_5;
LABEL_24:
      v36 = *v51;
      if (!*v51)
      {
        __break(1u);
        return;
      }
      v37 = v36 + v20 + v21;
      sub_237E47CE0(v36 + v52 + v21, v48, type metadata accessor for WorldViewModel.Pin);
      swift_arrayInitWithTakeFrontToBack();
      sub_237E47CE0(v48, v37, type metadata accessor for WorldViewModel.Pin);
      v21 -= v45;
      if (v47 == ++v22)
        goto LABEL_5;
    }
  }
}

uint64_t sub_237E45D4C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v36;
  double *v37;
  uint64_t v38;
  int v39;
  char v40;
  char v41;
  uint64_t v42;
  char v43;
  double *v44;
  BOOL v45;
  char v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  BOOL v51;
  double *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  char v62;
  char v63;
  double *v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char v68;
  double *v69;
  BOOL v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t result;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  double *v81;
  double *v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  double *v86;
  double *v87;

  v8 = type metadata accessor for WorldViewModel.Pin(0);
  MEMORY[0x24BDAC7A8](v8);
  v77 = (uint64_t)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v11);
  v81 = (double *)((char *)&v74 - v12);
  MEMORY[0x24BDAC7A8](v13);
  v82 = (double *)((char *)&v74 - v14);
  MEMORY[0x24BDAC7A8](v15);
  v80 = (uint64_t)&v74 - v16;
  MEMORY[0x24BDAC7A8](v17);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (double *)((char *)&v74 - v19);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (double *)((char *)&v74 - v24);
  v27 = *(_QWORD *)(v26 + 72);
  if (!v27)
  {
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  v28 = a1;
  if (a2 - a1 == 0x8000000000000000 && v27 == -1)
    goto LABEL_93;
  v29 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v27 == -1)
    goto LABEL_94;
  v30 = (uint64_t)(a2 - a1) / v27;
  v87 = (double *)a1;
  v86 = (double *)a4;
  v31 = v29 / v27;
  v84 = v8;
  if (v30 >= v29 / v27)
  {
    if (v31 < 0)
      goto LABEL_95;
    v78 = v22;
    v79 = a1;
    v33 = v31 * v27;
    if (a4 < a2 || a2 + v33 <= a4)
    {
      v34 = a3;
      swift_arrayInitWithTakeFrontToBack();
    }
    else
    {
      v34 = a3;
      if (a4 != a2)
        swift_arrayInitWithTakeBackToFront();
    }
    v50 = a4 + v33;
    v85 = a4 + v33;
    v87 = (double *)a2;
    v51 = v33 < 1 || v79 >= a2;
    v52 = v81;
    if (v51)
    {
LABEL_91:
      sub_237E46788((unint64_t *)&v87, (unint64_t *)&v86, (uint64_t *)&v85);
      return 1;
    }
    v53 = -v27;
    v75 = v77 + 8;
    v76 = v78 + 8;
    v80 = -v27;
    while (1)
    {
      v83 = a2;
      v54 = a4;
      v55 = (uint64_t)v82;
      sub_237E21EBC(v50 + v53, (uint64_t)v82, type metadata accessor for WorldViewModel.Pin);
      v56 = v83 + v53;
      sub_237E21EBC(v83 + v53, (uint64_t)v52, type metadata accessor for WorldViewModel.Pin);
      v57 = v55 + *(int *)(v8 + 36);
      v58 = (uint64_t)v52;
      v59 = v8;
      v60 = *(unsigned __int8 *)(v57 + 8);
      v61 = v78;
      sub_237E21EBC(v58, v78, type metadata accessor for WorldViewModel.Pin);
      if (v60 == 1)
      {
        v62 = *(_BYTE *)(v76 + *(int *)(v59 + 36));
        sub_237E21F00(v61, type metadata accessor for WorldViewModel.Pin);
        if ((v62 & 1) == 0)
        {
          v63 = 1;
          a4 = v54;
          v52 = v81;
          v64 = v82;
          v65 = v80;
          goto LABEL_77;
        }
      }
      else
      {
        sub_237E21F00(v61, type metadata accessor for WorldViewModel.Pin);
      }
      v66 = *(_BYTE *)(v57 + 8);
      v67 = v77;
      sub_237E21EBC((uint64_t)v81, v77, type metadata accessor for WorldViewModel.Pin);
      a4 = v54;
      if ((v66 & 1) != 0)
      {
        sub_237E21F00(v67, type metadata accessor for WorldViewModel.Pin);
        v64 = v82;
        v65 = v80;
LABEL_69:
        v52 = v81;
        if ((*(_BYTE *)(v57 + 8) & 1) != 0
          || (v69 = (double *)((char *)v81 + *(int *)(v84 + 36)), ((_BYTE)v69[1] & 1) != 0))
        {
          v70 = *v64 < *v81;
          if (*v64 == *v81)
            v70 = v64[1] < v81[1];
        }
        else
        {
          v70 = *(double *)v57 < *v69;
        }
        v63 = v70;
        goto LABEL_77;
      }
      v68 = *(_BYTE *)(v75 + *(int *)(v84 + 36));
      sub_237E21F00(v67, type metadata accessor for WorldViewModel.Pin);
      v64 = v82;
      v65 = v80;
      if ((v68 & 1) == 0)
        goto LABEL_69;
      v63 = 0;
      v52 = v81;
LABEL_77:
      v71 = v34 + v65;
      sub_237E21F00((uint64_t)v52, type metadata accessor for WorldViewModel.Pin);
      sub_237E21F00((uint64_t)v64, type metadata accessor for WorldViewModel.Pin);
      if ((v63 & 1) != 0)
      {
        if (v34 < v83 || v71 >= v83)
        {
          v8 = v84;
          swift_arrayInitWithTakeFrontToBack();
          v53 = v80;
        }
        else
        {
          v8 = v84;
          v53 = v80;
          if (v34 != v83)
            swift_arrayInitWithTakeBackToFront();
        }
        v87 = (double *)((char *)v87 + v53);
      }
      else
      {
        v72 = v85;
        v85 += v65;
        v53 = v65;
        if (v34 < v72 || v71 >= v72)
        {
          v8 = v84;
          swift_arrayInitWithTakeFrontToBack();
          v56 = v83;
        }
        else
        {
          v56 = v83;
          v8 = v84;
          if (v34 != v72)
            swift_arrayInitWithTakeBackToFront();
        }
      }
      v50 = v85;
      if (v85 > a4)
      {
        a2 = v56;
        v34 = v71;
        if (v56 > v79)
          continue;
      }
      goto LABEL_91;
    }
  }
  if ((v30 & 0x8000000000000000) == 0)
  {
    v32 = v30 * v27;
    v82 = (double *)v23;
    v83 = a3;
    if (a4 < v28 || v28 + v32 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != v28)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v81 = (double *)(a4 + v32);
    v85 = a4 + v32;
    if (v32 >= 1 && a2 < v83)
    {
      v78 = v80 + 8;
      v79 = (unint64_t)(v82 + 1);
      v36 = (uint64_t)v82;
      while (1)
      {
        sub_237E21EBC(a2, (uint64_t)v25, type metadata accessor for WorldViewModel.Pin);
        sub_237E21EBC(a4, (uint64_t)v20, type metadata accessor for WorldViewModel.Pin);
        v37 = (double *)((char *)v25 + *(int *)(v8 + 36));
        v38 = v8;
        v39 = *((unsigned __int8 *)v37 + 8);
        sub_237E21EBC((uint64_t)v20, v36, type metadata accessor for WorldViewModel.Pin);
        if (v39 == 1)
        {
          v40 = *(_BYTE *)(v79 + *(int *)(v38 + 36));
          sub_237E21F00(v36, type metadata accessor for WorldViewModel.Pin);
          if ((v40 & 1) == 0)
          {
            sub_237E21F00((uint64_t)v20, type metadata accessor for WorldViewModel.Pin);
            sub_237E21F00((uint64_t)v25, type metadata accessor for WorldViewModel.Pin);
            v8 = v84;
            goto LABEL_40;
          }
        }
        else
        {
          sub_237E21F00(v36, type metadata accessor for WorldViewModel.Pin);
        }
        v41 = *((_BYTE *)v37 + 8);
        v42 = v80;
        sub_237E21EBC((uint64_t)v20, v80, type metadata accessor for WorldViewModel.Pin);
        if ((v41 & 1) != 0)
        {
          sub_237E21F00(v42, type metadata accessor for WorldViewModel.Pin);
        }
        else
        {
          v43 = *(_BYTE *)(v78 + *(int *)(v84 + 36));
          sub_237E21F00(v42, type metadata accessor for WorldViewModel.Pin);
          if ((v43 & 1) != 0)
          {
            sub_237E21F00((uint64_t)v20, type metadata accessor for WorldViewModel.Pin);
            sub_237E21F00((uint64_t)v25, type metadata accessor for WorldViewModel.Pin);
            v8 = v84;
LABEL_44:
            v47 = (unint64_t)v87;
            v49 = (unint64_t)v86 + v27;
            if (v87 < v86 || (unint64_t)v87 >= v49)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v87 != v86)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v86 = (double *)v49;
            v48 = a2;
            goto LABEL_51;
          }
        }
        v8 = v84;
        if (((_BYTE)v37[1] & 1) != 0 || (v44 = (double *)((char *)v20 + *(int *)(v84 + 36)), ((_BYTE)v44[1] & 1) != 0))
        {
          v45 = *v25 < *v20;
          if (*v25 == *v20)
            v45 = v25[1] < v20[1];
        }
        else
        {
          v45 = *v37 < *v44;
        }
        v46 = v45;
        sub_237E21F00((uint64_t)v20, type metadata accessor for WorldViewModel.Pin);
        sub_237E21F00((uint64_t)v25, type metadata accessor for WorldViewModel.Pin);
        if ((v46 & 1) == 0)
          goto LABEL_44;
LABEL_40:
        v47 = (unint64_t)v87;
        v48 = a2 + v27;
        if ((unint64_t)v87 < a2 || (unint64_t)v87 >= v48)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v87 == (double *)a2)
        {
          v47 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_51:
        v87 = (double *)(v47 + v27);
        a4 = (unint64_t)v86;
        if (v86 < v81)
        {
          a2 = v48;
          if (v48 < v83)
            continue;
        }
        goto LABEL_91;
      }
    }
    goto LABEL_91;
  }
LABEL_95:
  result = sub_237EE30D8();
  __break(1u);
  return result;
}

char *sub_237E4652C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256899570);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_237E46624(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -24)
  {
    result = (char *)sub_237EE30D8();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 24;
    if (result != v3 || result >= &v3[24 * v6])
      return (char *)memmove(result, v3, 24 * v6);
  }
  return result;
}

char *sub_237E466E0(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    result = (char *)sub_237EE30D8();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

uint64_t sub_237E46788(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = *a2;
  v5 = *a3;
  result = type metadata accessor for WorldViewModel.Pin(0);
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1)
    goto LABEL_14;
  if (v8 / v7 < 0)
  {
LABEL_15:
    result = sub_237EE30D8();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
    return swift_arrayInitWithTakeFrontToBack();
  if (v3 != v4)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_237E46894(uint64_t a1)
{
  return sub_237E4652C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_237E468A8(_OWORD *a1, double a2, double a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  double *v10;
  char isUniquelyReferenced_nonNull_native;
  __int128 v13;
  uint64_t result;
  uint64_t v17;

  v5 = *v3;
  sub_237EE3264();
  CLLocationCoordinate2D.hash(into:)();
  v6 = sub_237EE3294();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v9 = ~v7;
    while (1)
    {
      v10 = (double *)(*(_QWORD *)(v5 + 48) + 16 * v8);
      if (*v10 == a2 && v10[1] == a3)
        break;
      v8 = (v8 + 1) & v9;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_8;
    }
    result = 0;
    v13 = *(_OWORD *)(*(_QWORD *)(*v3 + 48) + 16 * v8);
  }
  else
  {
LABEL_8:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = *v3;
    *v3 = 0x8000000000000000;
    sub_237E469CC(v8, isUniquelyReferenced_nonNull_native, a2, a3);
    *v3 = v17;
    swift_bridgeObjectRelease();
    *(double *)&v13 = a2;
    *((double *)&v13 + 1) = a3;
    result = 1;
  }
  *a1 = v13;
  return result;
}

uint64_t sub_237E469CC(uint64_t result, char a2, double a3, double a4)
{
  uint64_t *v4;
  unint64_t v5;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double *v13;
  uint64_t v15;
  double *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v5 = result;
  v8 = *(_QWORD *)(*v4 + 16);
  v9 = *(_QWORD *)(*v4 + 24);
  if (v9 > v8 && (a2 & 1) != 0)
    goto LABEL_15;
  if ((a2 & 1) != 0)
  {
    sub_237EBB260();
  }
  else
  {
    if (v9 > v8)
    {
      result = (uint64_t)sub_237EBB728();
      goto LABEL_15;
    }
    sub_237EBBC34();
  }
  v10 = *v4;
  sub_237EE3264();
  CLLocationCoordinate2D.hash(into:)();
  result = sub_237EE3294();
  v11 = -1 << *(_BYTE *)(v10 + 32);
  v5 = result & ~v11;
  if (((*(_QWORD *)(v10 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v12 = ~v11;
    do
    {
      v13 = (double *)(*(_QWORD *)(v10 + 48) + 16 * v5);
      if (*v13 == a3 && v13[1] == a4)
        goto LABEL_18;
      v5 = (v5 + 1) & v12;
    }
    while (((*(_QWORD *)(v10 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
LABEL_15:
  v15 = *v4;
  *(_QWORD *)(*v4 + 8 * (v5 >> 6) + 56) |= 1 << v5;
  v16 = (double *)(*(_QWORD *)(v15 + 48) + 16 * v5);
  *v16 = a3;
  v16[1] = a4;
  v17 = *(_QWORD *)(v15 + 16);
  v18 = __OFADD__(v17, 1);
  v19 = v17 + 1;
  if (!v18)
  {
    *(_QWORD *)(v15 + 16) = v19;
    return result;
  }
  __break(1u);
LABEL_18:
  type metadata accessor for CLLocationCoordinate2D(0);
  result = sub_237EE31D4();
  __break(1u);
  return result;
}

uint64_t sub_237E46B20(double a1, double a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  double *v10;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v16;

  v5 = *v2;
  sub_237EE3264();
  CLLocationCoordinate2D.hash(into:)();
  v6 = sub_237EE3294();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
    return 0;
  v9 = ~v7;
  while (1)
  {
    v10 = (double *)(*(_QWORD *)(v5 + 48) + 16 * v8);
    if (*v10 == a1 && v10[1] == a2)
      break;
    v8 = (v8 + 1) & v9;
    if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
      return 0;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v14 = *v2;
  v16 = *v2;
  *v2 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_237EBB728();
    v14 = v16;
  }
  v12 = *(_QWORD *)(*(_QWORD *)(v14 + 48) + 16 * v8);
  sub_237E46C5C(v8);
  *v2 = v16;
  swift_bridgeObjectRelease();
  return v12;
}

unint64_t sub_237E46C5C(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_237EE2F28();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_237EE3264();
        sub_237EE3288();
        sub_237EE3288();
        v10 = sub_237EE3294() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 < v9)
            goto LABEL_5;
        }
        else if (v10 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(v3 + 48);
          v12 = (_OWORD *)(v11 + 16 * v2);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v12 >= v13 + 1))
          {
            *v12 = *v13;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v14 = *(_QWORD *)(v3 + 16);
  v15 = __OFSUB__(v14, 1);
  v16 = v14 - 1;
  if (v15)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v16;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_237E46E1C(unint64_t a1)
{
  return sub_237E61C94(0, *(_QWORD *)(a1 + 16), 0, a1);
}

__n128 sub_237E46E30()
{
  uint64_t v0;
  uint64_t v1;
  __n128 result;
  __int128 v3;

  v1 = *(_QWORD *)(v0 + 16);
  result = *(__n128 *)(v0 + 24);
  v3 = *(_OWORD *)(v0 + 40);
  *(__n128 *)(v1 + 144) = result;
  *(_OWORD *)(v1 + 160) = v3;
  return result;
}

uint64_t sub_237E46E44()
{
  uint64_t v0;

  return sub_237E3F3C8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

_QWORD *sub_237E46E64(_QWORD *a1)
{
  return sub_237E62134(0, a1[2], 0, a1);
}

_QWORD *sub_237E46E78(_QWORD *a1)
{
  return sub_237E61958(0, a1[2], 0, a1);
}

uint64_t sub_237E46E8C(unint64_t a1)
{
  return sub_237E625A0(0, *(_QWORD *)(a1 + 16), 0, a1);
}

BOOL sub_237E46EA0(uint64_t a1, uint64_t a2)
{
  int *v5;
  uint64_t v6;
  double v7;
  double v8;
  double *v9;
  uint64_t v12;
  double *v13;
  char v14;
  double *v15;
  int v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  if (*(double *)a1 != *(double *)a2 || *(double *)(a1 + 8) != *(double *)(a2 + 8))
    return 0;
  if (*(unsigned __int8 *)(a1 + 16) != *(unsigned __int8 *)(a2 + 16))
    return 0;
  if (*(unsigned __int8 *)(a1 + 17) != *(unsigned __int8 *)(a2 + 17))
    return 0;
  v5 = (int *)type metadata accessor for WorldViewModel.Pin(0);
  if ((MEMORY[0x23B825514](a1 + v5[7], a2 + v5[7]) & 1) == 0)
    return 0;
  v6 = v5[8];
  v7 = *(double *)(a1 + v6);
  v8 = *(double *)(a1 + v6 + 8);
  v9 = (double *)(a2 + v6);
  if (v7 != *v9 || v8 != v9[1])
    return 0;
  v12 = v5[9];
  v13 = (double *)(a1 + v12);
  v14 = *(_BYTE *)(a1 + v12 + 8);
  v15 = (double *)(a2 + v12);
  v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if ((v14 & 1) != 0)
  {
    if (!v16)
      return 0;
  }
  else
  {
    if (*v13 != *v15)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      return 0;
  }
  v17 = v5[10];
  v18 = (_QWORD *)(a1 + v17);
  v19 = *(_QWORD *)(a1 + v17 + 8);
  v20 = (_QWORD *)(a2 + v17);
  v21 = v20[1];
  if (v19)
    return v21 && (*v18 == *v20 && v19 == v21 || (sub_237EE31BC() & 1) != 0);
  return !v21;
}

uint64_t sub_237E46FC4()
{
  uint64_t v0;

  return sub_237E406FC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &OBJC_IVAR____TtC11ClockPoster14WorldViewModel__highlighted, &qword_256899518);
}

uint64_t sub_237E46FEC(double *a1, double *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double *v11;
  int v12;
  uint64_t (*v13)(_QWORD);
  char v14;
  char v15;
  double *v17;
  BOOL v18;
  uint64_t v19;

  v4 = type metadata accessor for WorldViewModel.Pin(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v19 - v8;
  v11 = (double *)((char *)a1 + *(int *)(v10 + 36));
  v12 = *((unsigned __int8 *)v11 + 8);
  sub_237E21EBC((uint64_t)a2, (uint64_t)&v19 - v8, v13);
  if (v12 == 1)
  {
    v14 = v9[*(int *)(v4 + 36) + 8];
    sub_237E21F00((uint64_t)v9, type metadata accessor for WorldViewModel.Pin);
    if ((v14 & 1) == 0)
      return 1;
    sub_237E21EBC((uint64_t)a2, (uint64_t)v6, type metadata accessor for WorldViewModel.Pin);
    sub_237E21F00((uint64_t)v6, type metadata accessor for WorldViewModel.Pin);
    goto LABEL_8;
  }
  sub_237E21F00((uint64_t)v9, type metadata accessor for WorldViewModel.Pin);
  sub_237E21EBC((uint64_t)a2, (uint64_t)v6, type metadata accessor for WorldViewModel.Pin);
  v15 = v6[*(int *)(v4 + 36) + 8];
  sub_237E21F00((uint64_t)v6, type metadata accessor for WorldViewModel.Pin);
  if ((v15 & 1) != 0)
    return 0;
  v17 = (double *)((char *)a2 + *(int *)(v4 + 36));
  if (((_BYTE)v17[1] & 1) != 0)
  {
LABEL_8:
    v18 = *a1 < *a2;
    if (*a1 == *a2)
      return a1[1] < a2[1];
    return v18;
  }
  return *v11 < *v17;
}

uint64_t sub_237E4717C(uint64_t a1, uint64_t a2)
{
  assignWithTake for ClockFaceLook(a2, a1);
  return a2;
}

unint64_t sub_237E471B8()
{
  unint64_t result;

  result = qword_256899530;
  if (!qword_256899530)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE70BC, &type metadata for WorldViewModelContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256899530);
  }
  return result;
}

unint64_t sub_237E471FC()
{
  unint64_t result;

  result = qword_256899538;
  if (!qword_256899538)
  {
    result = MEMORY[0x23B8271D0](&protocol conformance descriptor for ClockFaceLook, &type metadata for ClockFaceLook);
    atomic_store(result, (unint64_t *)&qword_256899538);
  }
  return result;
}

unint64_t sub_237E47240()
{
  unint64_t result;

  result = qword_256899548;
  if (!qword_256899548)
  {
    result = MEMORY[0x23B8271D0](&protocol conformance descriptor for ClockFaceLook, &type metadata for ClockFaceLook);
    atomic_store(result, &qword_256899548);
  }
  return result;
}

uint64_t sub_237E47284(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t sub_237E472D0()
{
  return sub_237E473B4();
}

uint64_t sub_237E472E4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_237E47308()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_237E4733C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_237E20844;
  return sub_237E426D0(a1, v4, v5, v7, v6);
}

uint64_t sub_237E473B4()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__fetchCurrentLocationNameTask) = *(_QWORD *)(v0 + 24);
  swift_retain();
  return swift_release();
}

uint64_t sub_237E473FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD v16[9];
  uint64_t v17;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = *(_OWORD *)(v2 + 264);
  v4 = *(_OWORD *)(v2 + 280);
  v16[4] = *(_OWORD *)(v2 + 248);
  v16[5] = v3;
  v5 = *(_OWORD *)(v2 + 232);
  v16[2] = *(_OWORD *)(v2 + 216);
  v16[3] = v5;
  v17 = *(_QWORD *)(v2 + 328);
  v6 = *(_OWORD *)(v2 + 312);
  v16[7] = *(_OWORD *)(v2 + 296);
  v16[8] = v6;
  v16[6] = v4;
  v7 = *(_OWORD *)(v2 + 200);
  v16[0] = *(_OWORD *)(v2 + 184);
  v16[1] = v7;
  v8 = *(_OWORD *)v1;
  *(_OWORD *)(v2 + 200) = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v2 + 184) = v8;
  v9 = *(_OWORD *)(v1 + 32);
  v10 = *(_OWORD *)(v1 + 48);
  v11 = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v2 + 264) = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v2 + 248) = v11;
  *(_OWORD *)(v2 + 232) = v10;
  *(_OWORD *)(v2 + 216) = v9;
  v12 = *(_OWORD *)(v1 + 96);
  v13 = *(_OWORD *)(v1 + 112);
  v14 = *(_OWORD *)(v1 + 128);
  *(_QWORD *)(v2 + 328) = *(_QWORD *)(v1 + 144);
  *(_OWORD *)(v2 + 296) = v13;
  *(_OWORD *)(v2 + 312) = v14;
  *(_OWORD *)(v2 + 280) = v12;
  sub_237E2CCDC(v1);
  return sub_237E3A78C((uint64_t)v16);
}

uint64_t sub_237E474CC()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + 128) = *(_QWORD *)(v0 + 24);
  swift_retain();
  return swift_release();
}

uint64_t sub_237E47504()
{
  uint64_t v0;

  return sub_237E3F8FC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_237E4751C()
{
  uint64_t v0;

  return sub_237E3FD48(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_237E47534(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WorldViewModel.Pin(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_237E47578(double *a1)
{
  uint64_t v1;

  return sub_237E40A5C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_237E475A0()
{
  return sub_237E48544();
}

void sub_237E475BC()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 136) = *(_BYTE *)(v0 + 24);
}

double sub_237E475D4@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  unint64_t v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  double result;
  uint64_t v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD v38[9];
  uint64_t v39;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6548);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_237EE1FB0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2 || (swift_bridgeObjectRetain(), v13 = sub_237EE30F0(), swift_bridgeObjectRelease(), v13))
  {
    if (qword_2542C6458 != -1)
      swift_once();
    v14 = qword_2542C64F8 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_data_private;
    swift_beginAccess();
    sub_237E22004(v14, (uint64_t)v8, &qword_2542C6548);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_237E6072C((uint64_t)v12);
      sub_237E2209C((uint64_t)v8, &qword_2542C6548);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    }
    swift_bridgeObjectRetain_n();
    v15 = sub_237EE1F98();
    v16 = sub_237EE2D90();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc();
      v35 = COERCE_DOUBLE(swift_slowAlloc());
      *(double *)v38 = v35;
      *(_DWORD *)v17 = 136446466;
      v37 = sub_237E2A660(0x70614D646C726F57, 0xE800000000000000, (uint64_t *)v38);
      v36 = v9;
      sub_237EE2EE0();
      *(_WORD *)(v17 + 12) = 2082;
      if (a2)
      {
        v18 = a2;
      }
      else
      {
        a1 = 0x3E4C4C554E3CLL;
        v18 = 0xE600000000000000;
      }
      v34 = v10;
      swift_bridgeObjectRetain();
      v37 = sub_237E2A660(a1, v18, (uint64_t *)v38);
      sub_237EE2EE0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_237E17000, v15, v16, "[%{public}s] Cannot map world type from %{public}s.", (uint8_t *)v17, 0x16u);
      v19 = v35;
      swift_arrayDestroy();
      MEMORY[0x23B8272A8](*(_QWORD *)&v19, -1, -1);
      MEMORY[0x23B8272A8](v17, -1, -1);

      (*(void (**)(char *, uint64_t))(v34 + 8))(v12, v36);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
  if (qword_256897B80 != -1)
    swift_once();
  v38[6] = xmmword_25689E080;
  v38[7] = *(_OWORD *)&byte_25689E090;
  v38[8] = xmmword_25689E0A0;
  v39 = qword_25689E0B0;
  v38[2] = xmmword_25689E040;
  v38[3] = *(_OWORD *)&qword_25689E050;
  v38[4] = xmmword_25689E060;
  v38[5] = xmmword_25689E070;
  v38[0] = xmmword_25689E020;
  v38[1] = *(_OWORD *)&qword_25689E030;
  v36 = *(_QWORD *)&algn_25689E091[7];
  v20 = *((_QWORD *)&xmmword_25689E0A0 + 1);
  v35 = *(double *)&xmmword_25689E0A0;
  v21 = qword_25689E0B0;
  v22 = xmmword_25689E070;
  v23 = xmmword_25689E080;
  v24 = byte_25689E090;
  v25 = *((_QWORD *)&xmmword_25689E060 + 1);
  v26 = xmmword_25689E060;
  v27 = unk_25689E058;
  v28 = qword_25689E050;
  v29 = *((_QWORD *)&xmmword_25689E040 + 1);
  v30 = xmmword_25689E040;
  v31 = *(_OWORD *)&qword_25689E030;
  v32 = xmmword_25689E020;
  sub_237E2CCDC((uint64_t)v38);
  *(_OWORD *)a3 = v32;
  *(_OWORD *)(a3 + 16) = v31;
  *(_QWORD *)(a3 + 32) = v30;
  *(_QWORD *)(a3 + 40) = v29;
  *(_QWORD *)(a3 + 48) = v28;
  *(_QWORD *)(a3 + 56) = v27;
  *(_QWORD *)(a3 + 64) = v26;
  *(_QWORD *)(a3 + 72) = v25;
  *(_OWORD *)(a3 + 80) = v22;
  *(_OWORD *)(a3 + 96) = v23;
  *(_BYTE *)(a3 + 112) = v24;
  result = v35;
  *(_QWORD *)(a3 + 120) = v36;
  *(double *)(a3 + 128) = result;
  *(_QWORD *)(a3 + 136) = v20;
  *(_QWORD *)(a3 + 144) = v21;
  return result;
}

uint64_t sub_237E47AB0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_237E487A8;
  return sub_237E3C33C(a1, v4, v5, v6);
}

uint64_t sub_237E47B20(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_237E20844;
  return sub_237E3C7F4(a1, v4, v5, v6);
}

uint64_t objectdestroy_72Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_237E47BBC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_237E487A8;
  return sub_237E3D194(a1, v4, v5, v6);
}

uint64_t sub_237E47C28()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_237E47C64(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_237E487A8;
  return sub_237E3D7DC(a1, v4, v5, v6, (uint64_t)(v1 + 5));
}

uint64_t sub_237E47CE0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_237E47D24()
{
  uint64_t v0;

  return sub_237E406FC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &OBJC_IVAR____TtC11ClockPoster14WorldViewModel__alarmTime, &qword_25689C140);
}

uint64_t sub_237E47D4C(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_237E47D5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;

  v26 = a3;
  v6 = type metadata accessor for City();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v24 - v11;
  v13 = *(_QWORD *)(a1 + 56);
  v24 = a1 + 56;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & v13;
  v25 = (unint64_t)(v14 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v18 = 0;
  while (v16)
  {
    v19 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    v20 = v19 | (v18 << 6);
LABEL_5:
    sub_237E21EBC(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v7 + 72) * v20, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for City);
    sub_237E47CE0((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for City);
    sub_237E3CE20((uint64_t)v9, a2, v26);
    result = sub_237E21F00((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for City);
    if (v3)
      return swift_release();
  }
  if (__OFADD__(v18++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v18 >= v25)
    return swift_release();
  v22 = *(_QWORD *)(v24 + 8 * v18);
  if (v22)
  {
LABEL_19:
    v16 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v18 << 6);
    goto LABEL_5;
  }
  v23 = v18 + 1;
  if (v18 + 1 >= v25)
    return swift_release();
  v22 = *(_QWORD *)(v24 + 8 * v23);
  if (v22)
    goto LABEL_18;
  v23 = v18 + 2;
  if (v18 + 2 >= v25)
    return swift_release();
  v22 = *(_QWORD *)(v24 + 8 * v23);
  if (v22)
    goto LABEL_18;
  v23 = v18 + 3;
  if (v18 + 3 >= v25)
    return swift_release();
  v22 = *(_QWORD *)(v24 + 8 * v23);
  if (v22)
    goto LABEL_18;
  v23 = v18 + 4;
  if (v18 + 4 >= v25)
    return swift_release();
  v22 = *(_QWORD *)(v24 + 8 * v23);
  if (v22)
  {
LABEL_18:
    v18 = v23;
    goto LABEL_19;
  }
  while (1)
  {
    v18 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v18 >= v25)
      return swift_release();
    v22 = *(_QWORD *)(v24 + 8 * v18);
    ++v23;
    if (v22)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_237E47F9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  double *v24;
  double v25;
  double v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t *v29;
  unint64_t v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  int isUniquelyReferenced_nonNull_native;
  _QWORD *v37;
  char v38;
  unint64_t v39;
  uint64_t v40;
  _BOOL8 v41;
  uint64_t v42;
  char v43;
  unint64_t v44;
  char v45;
  _QWORD *v46;
  double *v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t result;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  int64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;

  v4 = type metadata accessor for WorldViewModel.Pin(0);
  v5 = *(_QWORD *)(v4 - 8);
  v60 = v4;
  v61 = v5;
  MEMORY[0x24BDAC7A8](v4);
  v57 = (uint64_t)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899518);
  MEMORY[0x24BDAC7A8](v7);
  v53 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v52 - v10;
  v12 = *(_QWORD *)(a1 + 56);
  v54 = a1 + 56;
  v13 = 1 << *(_BYTE *)(a1 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v64 = a2 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel___observationRegistrar;
  v58 = (uint64_t *)(a2 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__cityPinsByCoordinate);
  v59 = a1;
  v55 = (unint64_t)(v13 + 63) >> 6;
  swift_bridgeObjectRetain();
  v16 = 0;
  v56 = a2;
  v17 = v60;
  while (1)
  {
    if (v15)
    {
      v62 = (v15 - 1) & v15;
      v63 = v16;
      v19 = __clz(__rbit64(v15)) | (v16 << 6);
      goto LABEL_25;
    }
    v20 = v16 + 1;
    if (__OFADD__(v16, 1))
      goto LABEL_44;
    if (v20 >= v55)
      return swift_release();
    v21 = *(_QWORD *)(v54 + 8 * v20);
    v22 = v16 + 1;
    if (!v21)
    {
      v22 = v16 + 2;
      if (v16 + 2 >= v55)
        return swift_release();
      v21 = *(_QWORD *)(v54 + 8 * v22);
      if (!v21)
      {
        v22 = v16 + 3;
        if (v16 + 3 >= v55)
          return swift_release();
        v21 = *(_QWORD *)(v54 + 8 * v22);
        if (!v21)
        {
          v22 = v16 + 4;
          if (v16 + 4 >= v55)
            return swift_release();
          v21 = *(_QWORD *)(v54 + 8 * v22);
          if (!v21)
            break;
        }
      }
    }
LABEL_24:
    v62 = (v21 - 1) & v21;
    v63 = v22;
    v19 = __clz(__rbit64(v21)) + (v22 << 6);
LABEL_25:
    v24 = (double *)(*(_QWORD *)(v59 + 48) + 16 * v19);
    v26 = *v24;
    v25 = v24[1];
    v27 = v61;
    v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v61 + 56);
    v28(v11, 1, 1, v17);
    swift_getKeyPath();
    v65 = a2;
    sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
    sub_237EE1F20();
    swift_release();
    v65 = a2;
    swift_getKeyPath();
    sub_237EE1F38();
    swift_release();
    v29 = v58;
    swift_beginAccess();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v11, 1, v17) != 1)
    {
      sub_237E47CE0((uint64_t)v11, v57, type metadata accessor for WorldViewModel.Pin);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v66 = (_QWORD *)*v29;
      v37 = v66;
      *v29 = 0x8000000000000000;
      v39 = sub_237EAD79C(v26, v25);
      v40 = v37[2];
      v41 = (v38 & 1) == 0;
      v42 = v40 + v41;
      if (__OFADD__(v40, v41))
      {
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
      v43 = v38;
      if (v37[3] < v42)
      {
        sub_237E98B10(v42, isUniquelyReferenced_nonNull_native);
        v44 = sub_237EAD79C(v26, v25);
        if ((v43 & 1) != (v45 & 1))
          goto LABEL_47;
        v39 = v44;
        v46 = v66;
        if ((v43 & 1) == 0)
          goto LABEL_39;
LABEL_37:
        sub_237E47534(v57, v46[7] + *(_QWORD *)(v61 + 72) * v39);
LABEL_41:
        *v29 = (uint64_t)v46;
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v46 = v66;
        if ((v38 & 1) != 0)
          goto LABEL_37;
      }
      else
      {
        sub_237E9D3E4();
        v46 = v66;
        if ((v43 & 1) != 0)
          goto LABEL_37;
      }
LABEL_39:
      v46[(v39 >> 6) + 8] |= 1 << v39;
      v47 = (double *)(v46[6] + 16 * v39);
      *v47 = v26;
      v47[1] = v25;
      sub_237E47CE0(v57, v46[7] + *(_QWORD *)(v61 + 72) * v39, type metadata accessor for WorldViewModel.Pin);
      v48 = v46[2];
      v49 = __OFADD__(v48, 1);
      v50 = v48 + 1;
      if (v49)
        goto LABEL_45;
      v46[2] = v50;
      goto LABEL_41;
    }
    sub_237E2209C((uint64_t)v11, &qword_256899518);
    v30 = sub_237EAD79C(v26, v25);
    v31 = (uint64_t)v53;
    if ((v32 & 1) != 0)
    {
      v33 = v30;
      v34 = swift_isUniquelyReferenced_nonNull_native();
      v35 = *v29;
      v66 = (_QWORD *)*v29;
      *v29 = 0x8000000000000000;
      if ((v34 & 1) == 0)
      {
        sub_237E9D3E4();
        v35 = (uint64_t)v66;
      }
      sub_237E47CE0(*(_QWORD *)(v35 + 56) + *(_QWORD *)(v61 + 72) * v33, v31, type metadata accessor for WorldViewModel.Pin);
      sub_237E9AD54(v33, v35);
      *v29 = v35;
      swift_bridgeObjectRelease();
      v18 = 0;
    }
    else
    {
      v18 = 1;
    }
    v28((char *)v31, v18, 1, v60);
    sub_237E2209C(v31, &qword_256899518);
LABEL_6:
    a2 = v56;
    v15 = v62;
    v16 = v63;
    swift_endAccess();
    v65 = a2;
    swift_getKeyPath();
    sub_237EE1F2C();
    swift_release();
  }
  v23 = v16 + 5;
  if (v16 + 5 >= v55)
    return swift_release();
  v21 = *(_QWORD *)(v54 + 8 * v23);
  if (v21)
  {
    v22 = v16 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    v22 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v22 >= v55)
      return swift_release();
    v21 = *(_QWORD *)(v54 + 8 * v22);
    ++v23;
    if (v21)
      goto LABEL_24;
  }
LABEL_46:
  __break(1u);
LABEL_47:
  type metadata accessor for CLLocationCoordinate2D(0);
  result = sub_237EE31E0();
  __break(1u);
  return result;
}

uint64_t sub_237E48530(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_237E48544()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  __int128 v3;

  v1 = *(_BYTE *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__solarTerminatorPath;
  v3 = *(_OWORD *)(v0 + 32);
  *(_QWORD *)v2 = *(_QWORD *)(v0 + 24);
  *(_OWORD *)(v2 + 8) = v3;
  *(_BYTE *)(v2 + 24) = v1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_237E485A4(__int128 *a1, uint64_t a2)
{
  assignWithCopy for WorldViewModelContext(a2, a1);
  return a2;
}

uint64_t getEnumTagSinglePayload for WorldViewModelContext.CodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for WorldViewModelContext.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_237E4866C + 4 * byte_237EE6990[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_237E4868C + 4 * byte_237EE6995[v4]))();
}

_BYTE *sub_237E4866C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_237E4868C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_237E48694(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_237E4869C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_237E486A4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_237E486AC(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_237E486B8()
{
  return 0;
}

ValueMetadata *type metadata accessor for WorldViewModelContext.CodingKeys()
{
  return &type metadata for WorldViewModelContext.CodingKeys;
}

unint64_t sub_237E486D4()
{
  unint64_t result;

  result = qword_2568995F8;
  if (!qword_2568995F8)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE7094, &type metadata for WorldViewModelContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568995F8);
  }
  return result;
}

unint64_t sub_237E4871C()
{
  unint64_t result;

  result = qword_256899600;
  if (!qword_256899600)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE7004, &type metadata for WorldViewModelContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256899600);
  }
  return result;
}

unint64_t sub_237E48764()
{
  unint64_t result;

  result = qword_256899608;
  if (!qword_256899608)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE702C, &type metadata for WorldViewModelContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256899608);
  }
  return result;
}

void sub_237E487AC()
{
  sub_237E44928();
}

uint64_t sub_237E487C0()
{
  return sub_237E46FC4();
}

uint64_t sub_237E487D4()
{
  return sub_237E46E44();
}

uint64_t sub_237E487E8()
{
  return sub_237E47504();
}

void sub_237E48898()
{
  char *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  id v8;
  double v9;
  double v10;
  objc_super v11;

  v11.receiver = v0;
  v11.super_class = (Class)type metadata accessor for ComplicationsLabel();
  objc_msgSendSuper2(&v11, sel_layoutSubviews);
  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC11ClockPoster18ComplicationsLabel_complicationViews];
  if (v1 >> 62)
    goto LABEL_13;
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v2; v2 = sub_237EE30A8())
  {
    v3 = 4;
    v4 = 0;
    if ((v1 & 0xC000000000000001) != 0)
    {
LABEL_4:
      v5 = (id)MEMORY[0x23B826624](v4, v1);
      goto LABEL_6;
    }
    while (1)
    {
      v5 = *(id *)(v1 + 8 * v3);
LABEL_6:
      v6 = v5;
      v7 = v4 + 1;
      if (__OFADD__(v4, 1))
        break;
      v8 = objc_msgSend(v5, sel_superview);

      if (!v8)
        objc_msgSend(v0, sel_addSubview_, v6);

      if (v7 == v2)
        goto LABEL_14;
      v4 = ++v3 - 4;
      if ((v1 & 0xC000000000000001) != 0)
        goto LABEL_4;
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain_n();
  }
LABEL_14:
  swift_bridgeObjectRelease_n();
  objc_msgSend(v0, sel_bounds);
  sub_237E48A84(1, v9, v10);
}

void sub_237E48A84(char a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double *v23;
  double v24;
  double v25;
  double v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double *v30;
  double v31;
  double MaxX;
  id v33;
  void *v34;
  CGFloat v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  CGRect v44;
  CGRect v45;
  CGRect v46;

  v4 = v3;
  v42 = OBJC_IVAR____TtC11ClockPoster18ComplicationsLabel_complicationViews;
  v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11ClockPoster18ComplicationsLabel_complicationViews);
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_237EE30A8();
    if (v8)
    {
LABEL_3:
      v43 = MEMORY[0x24BEE4AF8];
      sub_237E62784(0, v8 & ~(v8 >> 63), 0);
      if (v8 < 0)
      {
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
        return;
      }
      v9 = 0;
      v10 = v43;
      do
      {
        if ((v7 & 0xC000000000000001) != 0)
          v11 = (id)MEMORY[0x23B826624](v9, v7);
        else
          v11 = *(id *)(v7 + 8 * v9 + 32);
        v12 = v11;
        objc_msgSend(v11, sel_sizeThatFits_, a2, a3);
        v14 = v13;
        v16 = v15;

        v18 = *(_QWORD *)(v43 + 16);
        v17 = *(_QWORD *)(v43 + 24);
        if (v18 >= v17 >> 1)
          sub_237E62784(v17 > 1, v18 + 1, 1);
        ++v9;
        *(_QWORD *)(v43 + 16) = v18 + 1;
        v19 = v43 + 16 * v18;
        *(_QWORD *)(v19 + 32) = v14;
        *(_QWORD *)(v19 + 40) = v16;
      }
      while (v8 != v9);
      swift_bridgeObjectRelease();
      v20 = *(_QWORD *)(v43 + 16);
      if (v20)
        goto LABEL_12;
      goto LABEL_20;
    }
  }
  else
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  v10 = MEMORY[0x24BEE4AF8];
  v20 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
  if (v20)
  {
LABEL_12:
    v21 = *(double *)(v10 + 40);
    v22 = v20 - 1;
    if (v22)
    {
      v23 = (double *)(v10 + 56);
      v24 = *(double *)(v10 + 40);
      do
      {
        v25 = *v23;
        v23 += 2;
        v26 = v25;
        if (v24 < v25)
        {
          v21 = v26;
          v24 = v26;
        }
        --v22;
      }
      while (v22);
    }
    goto LABEL_21;
  }
LABEL_20:
  v21 = 0.0;
LABEL_21:
  v27 = *(_QWORD *)(v4 + v42);
  if (v27 >> 62)
    goto LABEL_40;
  v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v28)
  {
    if (v28 < 1)
      goto LABEL_44;
    if ((unint64_t)(v28 - 1) >= *(_QWORD *)(v10 + 16))
      goto LABEL_45;
    v29 = 0;
    v40 = OBJC_IVAR____TtC11ClockPoster18ComplicationsLabel_contentsSpacing;
    v30 = (double *)(v10 + 32);
    v31 = 0.0;
    while (1)
    {
      if ((v27 & 0xC000000000000001) != 0)
        v33 = (id)MEMORY[0x23B826624](v29, v27);
      else
        v33 = *(id *)(v27 + 8 * v29 + 32);
      v34 = v33;
      v35 = *v30;
      if ((a1 & 1) != 0)
        objc_msgSend(v33, sel_setFrame_, v31, 0.0, *v30, v21);
      v36 = *(_QWORD *)(v4 + v42);
      if (v36 >> 62)
        break;
      v37 = *(_QWORD *)((v36 & 0xFFFFFFFFFFFFF8) + 0x10);
      v38 = v37 - 1;
      if (__OFSUB__(v37, 1))
        goto LABEL_39;
LABEL_35:
      if (v29 == v38)
      {

      }
      else
      {
        v44.origin.y = 0.0;
        v44.origin.x = v31;
        v44.size.width = v35;
        v44.size.height = v21;
        MaxX = CGRectGetMaxX(v44);

        v31 = MaxX + *(double *)(v4 + v40);
      }
      ++v29;
      v30 += 2;
      if (v28 == v29)
        goto LABEL_42;
    }
    swift_bridgeObjectRetain();
    v39 = sub_237EE30A8();
    swift_bridgeObjectRelease();
    v38 = v39 - 1;
    if (!__OFSUB__(v39, 1))
      goto LABEL_35;
LABEL_39:
    __break(1u);
LABEL_40:
    swift_bridgeObjectRetain();
    v28 = sub_237EE30A8();
  }
  v35 = 0.0;
  v31 = 0.0;
LABEL_42:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v45.origin.y = 0.0;
  v45.origin.x = v31;
  v45.size.width = v35;
  v45.size.height = v21;
  CGRectGetMaxX(v45);
  v46.origin.y = 0.0;
  v46.origin.x = v31;
  v46.size.width = v35;
  v46.size.height = v21;
  CGRectGetMaxY(v46);
}

id sub_237E48E40()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ComplicationsLabel();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ComplicationsLabel()
{
  return objc_opt_self();
}

uint64_t sub_237E48ED8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_237E48F2C + 4 * byte_237EE7110[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

void sub_237E49054(id *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      swift_bridgeObjectRelease();
      a1 += 2;
      goto LABEL_4;
    case 2u:
      v2 = sub_237EE1D70();
      (*(void (**)(id *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
      v3 = __swift_instantiateConcreteTypeFromMangledName(qword_256899660);
      v4 = (char *)a1 + *(int *)(v3 + 48);
      v5 = sub_237EE1EC0();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
      a1 = (id *)((char *)a1 + *(int *)(v3 + 64));
      goto LABEL_4;
    case 3u:
LABEL_4:

      break;
    default:
      return;
  }
}

void sub_237E4911C()
{
  char *v0;

  v0 = (char *)sub_237E49164 + 4 * byte_237EE7118[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_237E49164()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  id v4;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  v3 = (void *)v1[2];
  v0[2] = v3;
  swift_bridgeObjectRetain();
  v4 = v3;
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_237E4926C(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_237E493DC(result);
    v2 = (char *)&loc_237E492C4 + 4 * byte_237EE711C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_237E493DC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ComplicationsLabelContent();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for ComplicationsLabelContent()
{
  uint64_t result;

  result = qword_2568996D8;
  if (!qword_2568996D8)
    return swift_getSingletonMetadata();
  return result;
}

char *sub_237E49454(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v6 = sub_237EE1D70();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = __swift_instantiateConcreteTypeFromMangledName(qword_256899660);
    v8 = *(int *)(v7 + 48);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_237EE1EC0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    *(_QWORD *)&a1[*(int *)(v7 + 64)] = *(_QWORD *)&a2[*(int *)(v7 + 64)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_237E49530(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_237E493DC((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v6 = sub_237EE1D70();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = __swift_instantiateConcreteTypeFromMangledName(qword_256899660);
      v8 = *(int *)(v7 + 48);
      v9 = &a1[v8];
      v10 = &a2[v8];
      v11 = sub_237EE1EC0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      *(_QWORD *)&a1[*(int *)(v7 + 64)] = *(_QWORD *)&a2[*(int *)(v7 + 64)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_237E4961C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t sub_237E49628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_237E49638()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_237E49648()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD v5[8];

  v5[4] = &unk_237EE7170;
  v5[5] = &unk_237EE7170;
  v0 = sub_237EE1D70();
  if (v1 <= 0x3F)
  {
    v2 = sub_237EE1EC0();
    if (v3 > 0x3F)
    {
      return v2;
    }
    else
    {
      swift_getTupleTypeLayout3();
      v5[6] = v5;
      v5[7] = &unk_237EE7188;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return v0;
}

void sub_237E49704(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  _QWORD v19[5];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = sub_237EE1EC0();
  v5 = *(_QWORD *)(v4 - 8);
  v21 = v4;
  v22 = v5;
  MEMORY[0x24BDAC7A8](v4);
  v19[2] = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v19[4] = (char *)v19 - v8;
  v20 = sub_237EE1D70();
  MEMORY[0x24BDAC7A8](v20);
  v19[3] = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ComplicationsLabelContent();
  MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v11);
  MEMORY[0x24BDAC7A8](v12);
  MEMORY[0x24BDAC7A8](v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899710);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v19 + *(int *)(v16 + 48) - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237E49BF8(a1, (uint64_t)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_237E49BF8(a2, (uint64_t)v17);
  v18 = (char *)sub_237E498D0 + 4 * byte_237EE7120[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_237E498D0()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  char v8;
  char v9;

  sub_237E49BF8(v0, (uint64_t)v1);
  v4 = *v1;
  v3 = v1[1];
  v5 = (void *)v1[2];
  if (swift_getEnumCaseMultiPayload())
  {
    swift_bridgeObjectRelease();

    sub_237E49C3C(v0);
LABEL_11:
    v9 = 0;
    return v9 & 1;
  }
  v6 = (void *)v2[2];
  if (v4 == *v2 && v3 == v2[1])
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v8 = sub_237EE31BC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
    {

      sub_237E493DC(v0);
      goto LABEL_11;
    }
  }
  sub_237E39A5C();
  v9 = sub_237EE2EB0();

  sub_237E493DC(v0);
  return v9 & 1;
}

uint64_t sub_237E49BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ComplicationsLabelContent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_237E49C3C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899710);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t dispatch thunk of ClockFaceContext.init(newContextFor:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of static ClockFaceContext.kind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of ClockFaceContext.look.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of ClockFaceContext.look.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of ClockFaceContext.look.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

void (*sub_237E49CA4(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  os_unfair_lock_s *v4;
  os_unfair_lock_s *v5;
  uint64_t v6;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v4 = *(os_unfair_lock_s **)(v1 + 16);
  v3[7] = v1;
  v3[8] = v4;
  v5 = v4 + 4;
  swift_beginAccess();
  os_unfair_lock_lock(v5);
  swift_beginAccess();
  v6 = *(_QWORD *)(v1 + 24);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v5);
  swift_endAccess();
  v3[6] = v6;
  return sub_237E49D44;
}

void sub_237E49D44(uint64_t a1, char a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;

  v3 = *(void **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 48);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 56);
  v6 = (os_unfair_lock_s *)(*(_QWORD *)(*(_QWORD *)a1 + 64) + 16);
  swift_beginAccess();
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    os_unfair_lock_lock(v6);
    *(_QWORD *)(v5 + 24) = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(v6);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  else
  {
    os_unfair_lock_lock(v6);
    *(_QWORD *)(v5 + 24) = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(v6);
    swift_endAccess();
  }
  swift_bridgeObjectRelease();
  free(v3);
}

uint64_t sub_237E49E20()
{
  uint64_t result;

  type metadata accessor for ClockFaceContextStore();
  swift_allocObject();
  result = sub_237E49E58();
  qword_25689DF00 = result;
  return result;
}

uint64_t sub_237E49E58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20[4];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6548);
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_237EE1FB0();
  MEMORY[0x24BDAC7A8](v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256899800);
  v4 = swift_allocObject();
  type metadata accessor for CPUnfairLock();
  v5 = swift_allocObject();
  v6 = MEMORY[0x24BEE4B00];
  *(_DWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v4 + 16) = v5;
  *(_QWORD *)(v4 + 24) = v6;
  *(_QWORD *)(v1 + 16) = v4;
  v7 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  swift_bridgeObjectRetain();
  v8 = (void *)sub_237EE2A54();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v7, sel_dataForKey_, v8);

  if (v9)
  {
    v10 = sub_237EE1BF0();
    v12 = v11;

    sub_237EE1B84();
    swift_allocObject();
    sub_237EE1B78();
    sub_237E4B22C();
    sub_237EE1B6C();
    v13 = v12;
    v14 = *(_QWORD *)(v20[0] + 16);
    if (v14)
    {
      swift_bridgeObjectRetain();
      v15 = (_QWORD *)(v20[0] + 144);
      do
      {
        LOBYTE(v20[0]) = *((_BYTE *)v15 - 112);
        v16 = v15[3];
        v17 = v15[4];
        v18 = __swift_project_boxed_opaque_existential_1(v15, v16);
        sub_237E4B2B0((uint64_t)v18, (char *)v20, (uint64_t)(v15 - 13), v1, v16, v17);
        v15 += 19;
        --v14;
      }
      while (v14);
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
    }
    sub_237E2D0B4(v10, v13);
    swift_bridgeObjectRelease();
  }
  return v1;
}

uint64_t sub_237E4A31C()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;
  uint64_t result;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  int64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  _BYTE v52[40];
  __int128 v53[6];
  __int128 v54;
  uint64_t v55;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  swift_beginAccess();
  swift_retain();
  os_unfair_lock_lock(v2);
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 24);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v2);
  swift_endAccess();
  result = swift_release();
  v5 = 0;
  v36 = v3 + 64;
  v6 = 1 << *(_BYTE *)(v3 + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v3 + 64);
  v37 = (unint64_t)(v6 + 63) >> 6;
  v9 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_6:
  if (v8)
  {
    v38 = (v8 - 1) & v8;
    v39 = v5;
    v10 = __clz(__rbit64(v8)) | (v5 << 6);
    goto LABEL_22;
  }
  v11 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  if (v11 >= v37)
    goto LABEL_53;
  v12 = *(_QWORD *)(v36 + 8 * v11);
  v13 = v5 + 1;
  if (!v12)
  {
    v13 = v5 + 2;
    if (v5 + 2 >= v37)
      goto LABEL_53;
    v12 = *(_QWORD *)(v36 + 8 * v13);
    if (!v12)
    {
      v13 = v5 + 3;
      if (v5 + 3 >= v37)
        goto LABEL_53;
      v12 = *(_QWORD *)(v36 + 8 * v13);
      if (!v12)
      {
        v14 = v5 + 4;
        if (v5 + 4 < v37)
        {
          v12 = *(_QWORD *)(v36 + 8 * v14);
          if (v12)
          {
            v13 = v5 + 4;
            goto LABEL_21;
          }
          while (1)
          {
            v13 = v14 + 1;
            if (__OFADD__(v14, 1))
              goto LABEL_57;
            if (v13 >= v37)
              break;
            v12 = *(_QWORD *)(v36 + 8 * v13);
            ++v14;
            if (v12)
              goto LABEL_21;
          }
        }
LABEL_53:
        swift_release();
        return (uint64_t)v9;
      }
    }
  }
LABEL_21:
  v38 = (v12 - 1) & v12;
  v39 = v13;
  v10 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_22:
  v15 = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v10);
  v16 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v10);
  v40 = v16 + 64;
  v17 = 1 << *(_BYTE *)(v16 + 32);
  if (v17 < 64)
    v18 = ~(-1 << v17);
  else
    v18 = -1;
  v19 = v18 & *(_QWORD *)(v16 + 64);
  v41 = (unint64_t)(v17 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v20 = 0;
  if (v19)
  {
LABEL_26:
    v21 = __clz(__rbit64(v19));
    v19 &= v19 - 1;
    v22 = v21 | (v20 << 6);
LABEL_27:
    sub_237E28430(*(_QWORD *)(v16 + 48) + 104 * v22, (uint64_t)&v42);
    sub_237E2CFE8(*(_QWORD *)(v16 + 56) + 40 * v22, (uint64_t)&v48 + 8);
    goto LABEL_46;
  }
  while (1)
  {
    v23 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_55;
    }
    if (v23 < v41)
    {
      v24 = *(_QWORD *)(v40 + 8 * v23);
      if (v24)
        goto LABEL_31;
      v25 = v20 + 2;
      ++v20;
      if (v23 + 1 < v41)
      {
        v24 = *(_QWORD *)(v40 + 8 * v25);
        if (v24)
          goto LABEL_34;
        v20 = v23 + 1;
        if (v23 + 2 < v41)
        {
          v24 = *(_QWORD *)(v40 + 8 * (v23 + 2));
          if (v24)
          {
            v23 += 2;
            goto LABEL_31;
          }
          v25 = v23 + 3;
          v20 = v23 + 2;
          if (v23 + 3 < v41)
            break;
        }
      }
    }
LABEL_45:
    v19 = 0;
    v49 = 0u;
    v50 = 0u;
    v47 = 0u;
    v48 = 0u;
    v45 = 0u;
    v46 = 0u;
    v43 = 0u;
    v44 = 0u;
    v42 = 0u;
LABEL_46:
    sub_237E4A87C((uint64_t)&v42, (uint64_t)v53);
    if (!v55)
    {
      result = swift_release();
      v8 = v38;
      v5 = v39;
      goto LABEL_6;
    }
    sub_237E2D1BC(&v54, (uint64_t)v52);
    sub_237E2D180(v53, (uint64_t)&v42 + 8);
    sub_237E2CFE8((uint64_t)v52, (uint64_t)&v49);
    LOBYTE(v42) = v15;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v9 = sub_237E61B6C(0, v9[2] + 1, 1, v9);
    v27 = v9[2];
    v26 = v9[3];
    if (v27 >= v26 >> 1)
      v9 = sub_237E61B6C((_QWORD *)(v26 > 1), v27 + 1, 1, v9);
    v9[2] = v27 + 1;
    v28 = &v9[19 * v27];
    v29 = v43;
    *((_OWORD *)v28 + 2) = v42;
    *((_OWORD *)v28 + 3) = v29;
    v30 = v44;
    v31 = v45;
    v32 = v47;
    *((_OWORD *)v28 + 6) = v46;
    *((_OWORD *)v28 + 7) = v32;
    *((_OWORD *)v28 + 4) = v30;
    *((_OWORD *)v28 + 5) = v31;
    v33 = v48;
    v34 = v49;
    v35 = v50;
    v28[22] = v51;
    *((_OWORD *)v28 + 9) = v34;
    *((_OWORD *)v28 + 10) = v35;
    *((_OWORD *)v28 + 8) = v33;
    result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v52);
    if (v19)
      goto LABEL_26;
  }
  v24 = *(_QWORD *)(v40 + 8 * v25);
  if (v24)
  {
LABEL_34:
    v23 = v25;
LABEL_31:
    v19 = (v24 - 1) & v24;
    v22 = __clz(__rbit64(v24)) + (v23 << 6);
    v20 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v23 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v23 >= v41)
    {
      v20 = v41 - 1;
      goto LABEL_45;
    }
    v24 = *(_QWORD *)(v40 + 8 * v23);
    ++v25;
    if (v24)
      goto LABEL_31;
  }
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
  return result;
}

void (*sub_237E4A7A8(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = *(_QWORD *)(v1 + 16);
  swift_retain();
  v3[5] = sub_237E49CA4(v3);
  return sub_237E4A800;
}

void sub_237E4A800(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  swift_release();
  free(v1);
}

uint64_t sub_237E4A838()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ClockFaceContextStore()
{
  return objc_opt_self();
}

uint64_t sub_237E4A87C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568997F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_237E4A8C4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int v10;
  unint64_t v12;
  _QWORD *v13;
  __int128 v14;
  ValueMetadata *v15;
  unint64_t v16;
  char v17[8];
  _BYTE v18[104];
  uint64_t v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899850);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v13 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_237E4C058();
  sub_237EE32D0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
  v20 = 2;
  sub_237E4C09C();
  sub_237EE312C();
  v10 = v14;
  v17[0] = v14;
  v20 = 1;
  sub_237E471FC();
  sub_237EE312C();
  sub_237E2D180(&v14, (uint64_t)v18);
  if (v10 == 3)
  {
    v12 = sub_237E2CFA4();
    v20 = 0;
    v15 = &type metadata for SolarContext;
    v16 = v12;
    __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v14);
    sub_237EE312C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_237E2D1BC(&v14, (uint64_t)&v19);
    sub_237E4C158(v17, a2);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
    return sub_237E4C18C((uint64_t)v17);
  }
  else
  {
    sub_237E4C0E0();
    swift_allocError();
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
    return sub_237E2846C((uint64_t)v18);
  }
}

uint64_t sub_237E4AB3C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899870);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_237E4C058();
  sub_237EE32DC();
  v10[15] = *(_BYTE *)v3;
  v10[14] = 2;
  sub_237E4C1B8();
  sub_237EE3168();
  if (!v2)
  {
    v10[13] = 1;
    sub_237E47240();
    sub_237EE3168();
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + 112), *(_QWORD *)(v3 + 136));
    v10[12] = 0;
    sub_237EE3168();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_237E4ACD0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899810);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_237E4BD98();
  sub_237EE32DC();
  v9[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256899820);
  sub_237E4BFAC(&qword_256899828, (uint64_t (*)(void))sub_237E4BDDC, MEMORY[0x24BEE12A0]);
  sub_237EE3168();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_237E4ADEC(char *a1, unsigned __int8 *a2)
{
  return sub_237EAADD8(*a1, *a2);
}

uint64_t sub_237E4ADF8()
{
  sub_237EE3264();
  sub_237EE2ACC();
  swift_bridgeObjectRelease();
  return sub_237EE3294();
}

uint64_t sub_237E4AE88()
{
  sub_237EE2ACC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_237E4AEF4()
{
  sub_237EE3264();
  sub_237EE2ACC();
  swift_bridgeObjectRelease();
  return sub_237EE3294();
}

uint64_t sub_237E4AF80@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_237E4BE20();
  *a1 = result;
  return result;
}

void sub_237E4AFAC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 1802465132;
  if (v2 != 1)
    v4 = 1684957547;
  v5 = v2 == 0;
  if (*v1)
    v6 = v4;
  else
    v6 = 0x747865746E6F63;
  if (!v5)
    v3 = 0xE400000000000000;
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_237E4AFFC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1802465132;
  if (*v0 != 1)
    v1 = 1684957547;
  if (*v0)
    return v1;
  else
    return 0x747865746E6F63;
}

uint64_t sub_237E4B048@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_237E4BE20();
  *a1 = result;
  return result;
}

void sub_237E4B06C(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_237E4B078()
{
  sub_237E4C058();
  return sub_237EE3324();
}

uint64_t sub_237E4B0A0()
{
  sub_237E4C058();
  return sub_237EE3330();
}

uint64_t sub_237E4B0C8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_237E4A8C4(a1, a2);
}

uint64_t sub_237E4B0DC(_QWORD *a1)
{
  return sub_237E4AB3C(a1);
}

uint64_t sub_237E4B0F0()
{
  return 0x7364726F636572;
}

uint64_t sub_237E4B108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7364726F636572 && a2 == 0xE700000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_237EE31BC();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_237E4B19C()
{
  sub_237E4BD98();
  return sub_237EE3324();
}

uint64_t sub_237E4B1C4()
{
  sub_237E4BD98();
  return sub_237EE3330();
}

_QWORD *sub_237E4B1EC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_237E4BE68(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_237E4B214(_QWORD *a1)
{
  uint64_t *v1;

  return sub_237E4ACD0(a1, *v1);
}

unint64_t sub_237E4B22C()
{
  unint64_t result;

  result = qword_256899808;
  if (!qword_256899808)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE7288, &type metadata for ClockFaceContextStore.Collection);
    atomic_store(result, (unint64_t *)&qword_256899808);
  }
  return result;
}

uint64_t sub_237E4B270(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6548);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_237E4B2B0(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *boxed_opaque_existential_0;
  char v16;
  uint64_t v17;
  os_unfair_lock_s *v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  os_unfair_lock_s *v23;
  uint64_t v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  void (*v27)(_QWORD *);
  void (*v28)(_QWORD *);
  _QWORD *v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  void *v33;
  id v34;
  void *v35;
  void *v36;
  _QWORD v38[8];
  _BYTE v39[40];
  _QWORD v40[13];
  _QWORD v41[4];
  _QWORD v42[4];
  uint64_t v43[6];

  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6548);
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_237EE1FB0();
  v38[2] = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v38[1] = (char *)v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43[3] = a5;
  v43[4] = a6;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v43);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 16))(boxed_opaque_existential_0, a1, a5);
  v16 = *a2;
  v17 = *(_QWORD *)(a4 + 16);
  v18 = (os_unfair_lock_s *)(*(_QWORD *)(v17 + 16) + 16);
  swift_beginAccess();
  swift_retain();
  os_unfair_lock_lock(v18);
  swift_beginAccess();
  v19 = *(_QWORD *)(v17 + 24);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v18);
  swift_endAccess();
  swift_release();
  if (!*(_QWORD *)(v19 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  sub_237EAD644(v16);
  v21 = v20;
  swift_bridgeObjectRelease();
  if ((v21 & 1) == 0)
  {
LABEL_5:
    v22 = *(_QWORD *)(a4 + 16);
    v23 = (os_unfair_lock_s *)(*(_QWORD *)(v22 + 16) + 16);
    swift_beginAccess();
    swift_retain();
    os_unfair_lock_lock(v23);
    swift_beginAccess();
    v24 = *(_QWORD *)(v22 + 24);
    swift_bridgeObjectRetain();
    os_unfair_lock_unlock(v23);
    swift_endAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v40[0] = v24;
    sub_237E9BB14(MEMORY[0x24BEE4B00], v16, isUniquelyReferenced_nonNull_native);
    v26 = v40[0];
    swift_bridgeObjectRelease();
    swift_beginAccess();
    os_unfair_lock_lock(v23);
    *(_QWORD *)(v22 + 24) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(v23);
    swift_endAccess();
    swift_release();
    swift_bridgeObjectRelease();
  }
  v27 = sub_237E4A7A8(v42);
  v28 = sub_237E29D0C(v41, v16);
  if (*v29)
  {
    sub_237E28430(a3, (uint64_t)v40);
    sub_237E2CFE8((uint64_t)v43, (uint64_t)v39);
    sub_237E8EB68((uint64_t)v39, (uint64_t)v40);
  }
  ((void (*)(_QWORD *, _QWORD))v28)(v41, 0);
  ((void (*)(_QWORD *, _QWORD))v27)(v42, 0);
  sub_237EE1BB4();
  swift_allocObject();
  sub_237EE1BA8();
  sub_237EE1B90();
  v40[0] = sub_237E4A31C();
  sub_237E2D02C();
  v30 = sub_237EE1B9C();
  v32 = v31;
  swift_bridgeObjectRelease();
  v33 = (void *)objc_opt_self();
  sub_237E2D070(v30, v32);
  v34 = objc_msgSend(v33, sel_standardUserDefaults);
  v35 = (void *)sub_237EE1BE4();
  sub_237E2D0B4(v30, v32);
  swift_bridgeObjectRetain();
  v36 = (void *)sub_237EE2A54();
  swift_bridgeObjectRelease();
  objc_msgSend(v34, sel_setObject_forKey_, v35, v36);

  swift_release();
  sub_237E2D0B4(v30, v32);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v43);
}

ValueMetadata *type metadata accessor for ClockFaceContextStore.Collection()
{
  return &type metadata for ClockFaceContextStore.Collection;
}

uint64_t destroy for ClockFaceContextStore.Collection.Record(uint64_t a1)
{
  uint64_t v2;
  int v3;

  v2 = a1 + 8;
  v3 = *(unsigned __int8 *)(a1 + 104);
  if (v3 == 2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(v2);
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 48);
    goto LABEL_7;
  }
  if (v3 == 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  if (!*(_BYTE *)(a1 + 104))
  {
    __swift_destroy_boxed_opaque_existential_1Tm(v2);
LABEL_7:
    swift_bridgeObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1Tm(a1 + 112);
}

uint64_t initializeWithCopy for ClockFaceContextStore.Collection.Record(uint64_t a1, char *a2)
{
  char *v4;
  char v5;
  uint64_t v6;
  int v7;
  __int128 v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v5 = *a2;
  v4 = a2 + 8;
  *(_BYTE *)a1 = v5;
  v6 = a1 + 8;
  v7 = a2[104];
  if (v7 == 2)
  {
    v10 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v10;
    (**(void (***)(uint64_t, uint64_t))(v10 - 8))(v6, (uint64_t)v4);
    v11 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 72) = v11;
    (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 48, (uint64_t)(a2 + 48));
    v12 = *((_QWORD *)a2 + 12);
    *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
    *(_QWORD *)(a1 + 96) = v12;
    *(_BYTE *)(a1 + 104) = 2;
    swift_bridgeObjectRetain();
  }
  else if (v7 == 1)
  {
    v13 = *((_QWORD *)a2 + 2);
    *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(a1 + 16) = v13;
    *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
    *(_BYTE *)(a1 + 104) = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else if (a2[104])
  {
    v14 = *((_OWORD *)v4 + 5);
    *(_OWORD *)(v6 + 64) = *((_OWORD *)v4 + 4);
    *(_OWORD *)(v6 + 80) = v14;
    *(_BYTE *)(v6 + 96) = v4[96];
    v15 = *((_OWORD *)v4 + 1);
    *(_OWORD *)v6 = *(_OWORD *)v4;
    *(_OWORD *)(v6 + 16) = v15;
    v16 = *((_OWORD *)v4 + 3);
    *(_OWORD *)(v6 + 32) = *((_OWORD *)v4 + 2);
    *(_OWORD *)(v6 + 48) = v16;
  }
  else
  {
    v8 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 32) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(v6, (uint64_t)v4);
    v9 = *((_QWORD *)a2 + 7);
    *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
    *(_QWORD *)(a1 + 56) = v9;
    *(_BYTE *)(a1 + 104) = 0;
    swift_bridgeObjectRetain();
  }
  v17 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 136) = v17;
  (**(void (***)(uint64_t, uint64_t))(v17 - 8))(a1 + 112, (uint64_t)(a2 + 112));
  return a1;
}

uint64_t assignWithCopy for ClockFaceContextStore.Collection.Record(uint64_t a1, uint64_t a2)
{
  __int128 *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v4 = (__int128 *)(a2 + 8);
  *(_BYTE *)a1 = *(_BYTE *)a2;
  v5 = a1 + 8;
  if (a1 != a2)
  {
    sub_237E2846C(a1 + 8);
    v6 = *(unsigned __int8 *)(a2 + 104);
    if (v6 == 2)
    {
      v8 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 32) = v8;
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      (**(void (***)(uint64_t, __int128 *))(v8 - 8))(v5, v4);
      v9 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 72) = v9;
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 48, a2 + 48);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_BYTE *)(a1 + 104) = 2;
      swift_bridgeObjectRetain();
    }
    else if (v6 == 1)
    {
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_BYTE *)(a1 + 104) = 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else if (*(_BYTE *)(a2 + 104))
    {
      v10 = *v4;
      v11 = v4[2];
      *(_OWORD *)(v5 + 16) = v4[1];
      *(_OWORD *)(v5 + 32) = v11;
      *(_OWORD *)v5 = v10;
      v12 = v4[3];
      v13 = v4[4];
      v14 = v4[5];
      *(_BYTE *)(v5 + 96) = *((_BYTE *)v4 + 96);
      *(_OWORD *)(v5 + 64) = v13;
      *(_OWORD *)(v5 + 80) = v14;
      *(_OWORD *)(v5 + 48) = v12;
    }
    else
    {
      v7 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 32) = v7;
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      (**(void (***)(uint64_t, __int128 *))(v7 - 8))(v5, v4);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_BYTE *)(a1 + 104) = 0;
      swift_bridgeObjectRetain();
    }
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 112), (uint64_t *)(a2 + 112));
  return a1;
}

__n128 __swift_memcpy152_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for ClockFaceContextStore.Collection.Record(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  if (a1 != a2)
  {
    sub_237E2846C(a1 + 8);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  }
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 112);
  v4 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v4;
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClockFaceContextStore.Collection.Record(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 152))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 136);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClockFaceContextStore.Collection.Record(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 152) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 136) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 152) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClockFaceContextStore.Collection.Record()
{
  return &type metadata for ClockFaceContextStore.Collection.Record;
}

unint64_t sub_237E4BD98()
{
  unint64_t result;

  result = qword_256899818;
  if (!qword_256899818)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE7590, &type metadata for ClockFaceContextStore.Collection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256899818);
  }
  return result;
}

unint64_t sub_237E4BDDC()
{
  unint64_t result;

  result = qword_256899830;
  if (!qword_256899830)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE7238, &type metadata for ClockFaceContextStore.Collection.Record);
    atomic_store(result, (unint64_t *)&qword_256899830);
  }
  return result;
}

uint64_t sub_237E4BE20()
{
  unint64_t v0;

  v0 = sub_237EE30F0();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

_QWORD *sub_237E4BE68(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899838);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_237E4BD98();
  sub_237EE32D0();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256899820);
    sub_237E4BFAC(&qword_256899840, (uint64_t (*)(void))sub_237E4C014, MEMORY[0x24BEE12D0]);
    sub_237EE312C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v7 = (_QWORD *)v9[1];
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  return v7;
}

uint64_t sub_237E4BFAC(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256899820);
    v8 = a2();
    result = MEMORY[0x23B8271D0](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_237E4C014()
{
  unint64_t result;

  result = qword_256899848;
  if (!qword_256899848)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE7260, &type metadata for ClockFaceContextStore.Collection.Record);
    atomic_store(result, (unint64_t *)&qword_256899848);
  }
  return result;
}

unint64_t sub_237E4C058()
{
  unint64_t result;

  result = qword_256899858;
  if (!qword_256899858)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE7540, &type metadata for ClockFaceContextStore.Collection.Record.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256899858);
  }
  return result;
}

unint64_t sub_237E4C09C()
{
  unint64_t result;

  result = qword_256899860;
  if (!qword_256899860)
  {
    result = MEMORY[0x23B8271D0](&protocol conformance descriptor for ClockFaceKind, &type metadata for ClockFaceKind);
    atomic_store(result, (unint64_t *)&qword_256899860);
  }
  return result;
}

unint64_t sub_237E4C0E0()
{
  unint64_t result;

  result = qword_256899868;
  if (!qword_256899868)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE7500, &type metadata for ClockFaceContextStore.Collection.Record.CodingError);
    atomic_store(result, (unint64_t *)&qword_256899868);
  }
  return result;
}

uint64_t __swift_deallocate_boxed_opaque_existential_1(uint64_t result)
{
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(result + 24) - 8) + 80) & 0x20000) != 0)
    JUMPOUT(0x23B8272A8);
  return result;
}

uint64_t sub_237E4C158(char *a1, uint64_t a2)
{
  initializeWithCopy for ClockFaceContextStore.Collection.Record(a2, a1);
  return a2;
}

uint64_t sub_237E4C18C(uint64_t a1)
{
  destroy for ClockFaceContextStore.Collection.Record(a1);
  return a1;
}

unint64_t sub_237E4C1B8()
{
  unint64_t result;

  result = qword_256899878;
  if (!qword_256899878)
  {
    result = MEMORY[0x23B8271D0](&protocol conformance descriptor for ClockFaceKind, &type metadata for ClockFaceKind);
    atomic_store(result, (unint64_t *)&qword_256899878);
  }
  return result;
}

ValueMetadata *type metadata accessor for ClockFaceContextStore.Collection.Record.CodingError()
{
  return &type metadata for ClockFaceContextStore.Collection.Record.CodingError;
}

uint64_t storeEnumTagSinglePayload for ClockFaceContextStore.Collection.Record.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_237E4C260 + 4 * byte_237EE71D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_237E4C294 + 4 * byte_237EE71D0[v4]))();
}

uint64_t sub_237E4C294(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237E4C29C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237E4C2A4);
  return result;
}

uint64_t sub_237E4C2B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237E4C2B8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_237E4C2BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237E4C2C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClockFaceContextStore.Collection.Record.CodingKeys()
{
  return &type metadata for ClockFaceContextStore.Collection.Record.CodingKeys;
}

uint64_t _s11ClockPoster21ClockFaceContextStoreC10CollectionV6RecordV11CodingErrorOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_237E4C320 + 4 * byte_237EE71DA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_237E4C340 + 4 * byte_237EE71DF[v4]))();
}

_BYTE *sub_237E4C320(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_237E4C340(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_237E4C348(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_237E4C350(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_237E4C358(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_237E4C360(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ClockFaceContextStore.Collection.CodingKeys()
{
  return &type metadata for ClockFaceContextStore.Collection.CodingKeys;
}

unint64_t sub_237E4C380()
{
  unint64_t result;

  result = qword_256899880;
  if (!qword_256899880)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE7380, &type metadata for ClockFaceContextStore.Collection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256899880);
  }
  return result;
}

unint64_t sub_237E4C3C8()
{
  unint64_t result;

  result = qword_256899888;
  if (!qword_256899888)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE7470, &type metadata for ClockFaceContextStore.Collection.Record.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256899888);
  }
  return result;
}

unint64_t sub_237E4C410()
{
  unint64_t result;

  result = qword_256899890;
  if (!qword_256899890)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE74D8, &type metadata for ClockFaceContextStore.Collection.Record.CodingError);
    atomic_store(result, (unint64_t *)&qword_256899890);
  }
  return result;
}

unint64_t sub_237E4C458()
{
  unint64_t result;

  result = qword_256899898;
  if (!qword_256899898)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE73A8, &type metadata for ClockFaceContextStore.Collection.Record.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256899898);
  }
  return result;
}

unint64_t sub_237E4C4A0()
{
  unint64_t result;

  result = qword_2568998A0;
  if (!qword_2568998A0)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE73D0, &type metadata for ClockFaceContextStore.Collection.Record.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568998A0);
  }
  return result;
}

unint64_t sub_237E4C4E8()
{
  unint64_t result;

  result = qword_2568998A8;
  if (!qword_2568998A8)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE72F0, &type metadata for ClockFaceContextStore.Collection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568998A8);
  }
  return result;
}

unint64_t sub_237E4C530()
{
  unint64_t result;

  result = qword_2568998B0;
  if (!qword_2568998B0)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE7318, &type metadata for ClockFaceContextStore.Collection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2568998B0);
  }
  return result;
}

uint64_t sub_237E4C578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;

  if ((sub_237EE1D28() & 1) != 0)
    v6 = *(_BYTE *)(a1 + *(int *)(a3 + 20)) ^ *(_BYTE *)(a2 + *(int *)(a3 + 20)) ^ 1;
  else
    v6 = 0;
  return v6 & 1;
}

uint64_t sub_237E4C5D4()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for AlarmDataProvider();
  v0 = swift_allocObject();
  result = sub_237E4E164();
  qword_25689DF08 = v0;
  return result;
}

uint64_t sub_237E4C60C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD v17[2];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897E20);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237EE2A84();
  sub_237EE2A84();
  v3 = sub_237EE2A84();
  v17[0] = v4;
  v17[1] = v3;
  v5 = sub_237EE2A54();
  v6 = sub_237EE2C64();
  v7 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
  v7(v2, 1, 1, v6);
  v8 = swift_allocObject();
  swift_weakInit();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v5;
  v9[5] = v8;
  sub_237EDA9E4((uint64_t)v2, (uint64_t)&unk_256899A68, (uint64_t)v9);
  swift_bridgeObjectRelease();
  swift_release();
  v10 = sub_237EE2A54();
  v7(v2, 1, 1, v6);
  v11 = swift_allocObject();
  swift_weakInit();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = v10;
  v12[5] = v11;
  sub_237EDA9E4((uint64_t)v2, (uint64_t)&unk_256899A70, (uint64_t)v12);
  swift_bridgeObjectRelease();
  swift_release();
  v13 = sub_237EE2A54();
  v7(v2, 1, 1, v6);
  v14 = swift_allocObject();
  swift_weakInit();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = 0;
  v15[3] = 0;
  v15[4] = v13;
  v15[5] = v14;
  sub_237EDA9E4((uint64_t)v2, (uint64_t)&unk_256899A78, (uint64_t)v15);
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_237E4C87C()
{
  uint64_t v0;
  id v1;
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  _QWORD v6[6];

  if ((*(_BYTE *)(v0 + 128) & 1) == 0)
  {
    v1 = objc_msgSend(*(id *)(v0 + 120), sel_nextAlarm);
    if (v1)
    {
      v2 = v1;
      *(_BYTE *)(v0 + 128) = 1;
      v3 = swift_allocObject();
      swift_weakInit();
      v6[4] = sub_237E4EAB0;
      v6[5] = v3;
      v6[0] = MEMORY[0x24BDAC760];
      v6[1] = 1107296256;
      v6[2] = sub_237E4D0B4;
      v6[3] = &block_descriptor_2;
      v4 = _Block_copy(v6);
      swift_release();
      v5 = objc_msgSend(v2, sel_addCompletionBlock_, v4);
      _Block_release(v4);

    }
  }
}

uint64_t sub_237E4C974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[12] = a4;
  v5[13] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256899A80);
  v5[14] = swift_task_alloc();
  v6 = sub_237EE2E50();
  v5[15] = v6;
  v5[16] = *(_QWORD *)(v6 - 8);
  v5[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_237E4C9F8()
{
  uint64_t v0;
  id v1;
  _QWORD *v2;

  v1 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  sub_237EE2E5C();

  sub_237EE2E44();
  swift_beginAccess();
  *(_QWORD *)(v0 + 144) = sub_237E2CF28(&qword_256899A88, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0028], MEMORY[0x24BDD0038]);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 152) = v2;
  *v2 = v0;
  v2[1] = sub_237E4CAF0;
  return sub_237EE2C34();
}

uint64_t sub_237E4CAF0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 160) = v0;
  return swift_task_switch();
}

uint64_t sub_237E4CB54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = sub_237EE19E0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
  }
  else
  {
    Strong = swift_weakLoadStrong();
    *(_QWORD *)(v0 + 168) = Strong;
    if (Strong)
      return swift_task_switch();
    v5 = *(_QWORD *)(v0 + 112);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
    sub_237E2209C(v5, &qword_256899A80);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_237E4CC24()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 88) = *(_QWORD *)(v0 + 160);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689DA00);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t sub_237E4CC84()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;

  v1 = v0[21];
  if ((*(_BYTE *)(v1 + 128) & 1) == 0)
  {
    v2 = objc_msgSend(*(id *)(v1 + 120), sel_nextAlarm);
    if (v2)
    {
      v3 = v2;
      *(_BYTE *)(v1 + 128) = 1;
      v4 = swift_allocObject();
      swift_weakInit();
      v0[6] = sub_237E4EAB0;
      v0[7] = v4;
      v0[2] = MEMORY[0x24BDAC760];
      v0[3] = 1107296256;
      v0[4] = sub_237E4D0B4;
      v0[5] = &block_descriptor_53;
      v5 = _Block_copy(v0 + 2);
      swift_release();
      v6 = objc_msgSend(v3, sel_addCompletionBlock_, v5);
      _Block_release(v5);

    }
  }
  return swift_task_switch();
}

uint64_t sub_237E4CDA4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 112);
  swift_release();
  sub_237E2209C(v1, &qword_256899A80);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v2;
  *v2 = v0;
  v2[1] = sub_237E4CE14;
  return sub_237EE2C34();
}

uint64_t sub_237E4CE14()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    *(_QWORD *)(v2 + 160) = v0;
  return swift_task_switch();
}

uint64_t sub_237E4CE78(void *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  id v12;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897E20);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v8 = result;
    v9 = sub_237EE2C64();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 1, 1, v9);
    v10 = (_QWORD *)swift_allocObject();
    v10[2] = 0;
    v10[3] = 0;
    v10[4] = v8;
    v10[5] = a1;
    v10[6] = a2;
    v11 = a1;
    v12 = a2;
    sub_237EDA9E4((uint64_t)v6, (uint64_t)&unk_256899A48, (uint64_t)v10);
    return swift_release();
  }
  return result;
}

uint64_t sub_237E4CF80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898BC0);
  v6[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_237E4CFE4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  os_unfair_lock_s *v5;

  v1 = *(void **)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 64);
  v3 = *(void **)(v0 + 72);
  *(_BYTE *)(v4 + 128) = 0;
  sub_237E4D128(v3, v1, v2);
  v5 = (os_unfair_lock_s *)(*(_QWORD *)(*(_QWORD *)(v4 + 112) + *(_QWORD *)(**(_QWORD **)(v4 + 112) + 104)) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v5);
  swift_endAccess();
  sub_237E93AE0(v2);
  swift_beginAccess();
  os_unfair_lock_unlock(v5);
  swift_endAccess();
  sub_237E2209C(v2, &qword_256898BC0);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_237E4D0B4(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_237E4D128@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(_QWORD, _QWORD, _QWORD);
  uint64_t v40;
  int v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  id v49;
  id v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  id v61;
  void *v62;
  id v63;
  uint64_t v64;
  void (*v65)(_QWORD, uint64_t, uint64_t);
  void (*v66)(_QWORD, _QWORD, _QWORD);
  uint64_t v67;
  char *v68;
  void (*v69)(_QWORD);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t, uint64_t);
  void (*v74)(char *, uint64_t);
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t, uint64_t, uint64_t);
  char *v81;
  uint64_t v82;
  unsigned __int8 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(uint64_t, uint64_t);
  unsigned int v100;
  void (*v101)(char *, _QWORD, uint64_t);
  uint64_t *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  uint64_t v112;
  char *v113;
  char *v114;
  void (*v115)(_QWORD, _QWORD, _QWORD);
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;

  v111 = a1;
  v116 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6548);
  MEMORY[0x24BDAC7A8](v4);
  v112 = (uint64_t)&v98 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_237EE1FB0();
  v114 = *(char **)(v6 - 8);
  v115 = (void (*)(_QWORD, _QWORD, _QWORD))v6;
  MEMORY[0x24BDAC7A8](v6);
  v113 = (char *)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_237EE1E60();
  v8 = *(_QWORD *)(v110 - 8);
  MEMORY[0x24BDAC7A8](v110);
  v10 = (char *)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_237EE1E6C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v98 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v98 - v19;
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v98 - v22;
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v98 - v25;
  v27 = sub_237EE1D70();
  MEMORY[0x24BDAC7A8](v27);
  MEMORY[0x24BDAC7A8](v28);
  MEMORY[0x24BDAC7A8](v29);
  MEMORY[0x24BDAC7A8](v30);
  if (a2)
  {
    if (qword_2542C6458 != -1)
      swift_once();
    v37 = qword_2542C64F8 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_data_private;
    swift_beginAccess();
    v38 = v112;
    sub_237E22004(v37, v112, &qword_2542C6548);
    v40 = (uint64_t)v114;
    v39 = v115;
    v41 = (*((uint64_t (**)(uint64_t, uint64_t, _QWORD))v114 + 6))(v38, 1, v115);
    v42 = (uint64_t)v113;
    v43 = a2;
    if (v41 == 1)
    {
      sub_237E6072C((uint64_t)v113);
      sub_237E2209C(v38, &qword_2542C6548);
    }
    else
    {
      (*(void (**)(char *, uint64_t, _QWORD))(v40 + 32))(v113, v38, v39);
    }
    v49 = a2;
    v50 = a2;
    v51 = sub_237EE1F98();
    v52 = sub_237EE2D90();
    if (os_log_type_enabled(v51, v52))
    {
      v53 = (uint8_t *)swift_slowAlloc();
      v54 = swift_slowAlloc();
      v118 = v54;
      *(_DWORD *)v53 = 136446210;
      swift_getErrorValue();
      v55 = sub_237EE3210();
      v117 = sub_237E2A660(v55, v56, &v118);
      sub_237EE2EE0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_237E17000, v51, v52, "Error getting alarm data., %{public}s", v53, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B8272A8](v54, -1, -1);
      MEMORY[0x23B8272A8](v53, -1, -1);

      (*(void (**)(uint64_t, void (*)(_QWORD, _QWORD, _QWORD)))(v40 + 8))(v42, v115);
    }
    else
    {

      (*(void (**)(uint64_t, void (*)(_QWORD, _QWORD, _QWORD)))(v40 + 8))(v42, v39);
    }
    v57 = v116;
    v58 = type metadata accessor for Alarm();
    v59 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56);
    v60 = v57;
    return v59(v60, 1, 1, v58);
  }
  v114 = v23;
  v115 = (void (*)(_QWORD, _QWORD, _QWORD))v26;
  v108 = v20;
  v109 = v12;
  v112 = v11;
  v113 = v10;
  v44 = v110;
  v107 = v17;
  if (!v111)
  {
LABEL_9:
    v47 = type metadata accessor for Alarm();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v116, 1, 1, v47);
  }
  v45 = v32;
  v103 = v36;
  v105 = v35;
  v102 = v34;
  v104 = (char *)&v98 - v33;
  v106 = v31;
  v46 = v111;
  objc_opt_self();
  if (swift_dynamicCastObjCClass())
  {

    goto LABEL_9;
  }
  v61 = objc_msgSend(v46, sel_nextTrigger);
  if (!v61)
  {
    v66 = v115;
    (*(void (**)(void (*)(_QWORD, _QWORD, _QWORD), uint64_t, uint64_t, uint64_t))(v45 + 56))(v115, 1, 1, v106);
    goto LABEL_23;
  }
  v62 = v61;
  v63 = objc_msgSend(v61, sel_triggerDate);

  v64 = v105;
  sub_237EE1D34();

  v65 = *(void (**)(_QWORD, uint64_t, uint64_t))(v45 + 32);
  v66 = v115;
  v67 = v106;
  v65(v115, v64, v106);
  (*(void (**)(void (*)(_QWORD, _QWORD, _QWORD), _QWORD, uint64_t, uint64_t))(v45 + 56))(v66, 0, 1, v67);
  v111 = *(id *)(v45 + 48);
  if (((unsigned int (*)(_QWORD, uint64_t, uint64_t))v111)(v66, 1, v67) == 1)
  {
LABEL_23:

    v78 = (uint64_t)v66;
    goto LABEL_24;
  }
  v115 = v65;
  v65(v104, (uint64_t)v66, v67);
  v68 = v14;
  sub_237EE1E48();
  v69 = *(void (**)(_QWORD))(v8 + 104);
  v70 = (uint64_t)v113;
  v100 = *MEMORY[0x24BDCF220];
  v101 = (void (*)(char *, _QWORD, uint64_t))v69;
  v69(v113);
  if (qword_256897B48 != -1)
    swift_once();
  v71 = v105;
  sub_237EA1DE0(v105);
  v72 = (uint64_t)v114;
  sub_237EE1E3C();
  v73 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
  v73(v71, v67);
  v99 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v99(v70, v44);
  v74 = *(void (**)(char *, uint64_t))(v109 + 8);
  v74(v68, v112);
  v75 = v72;
  v76 = (uint64_t)v108;
  sub_237E22004(v75, (uint64_t)v108, &qword_25689C140);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v111)(v76, 1, v67) == 1)
  {
    v77 = (void (*)(uint64_t *, uint64_t))v73;
    sub_237E2209C(v76, &qword_25689C140);
LABEL_29:
    sub_237EE1E48();
    v87 = (uint64_t)v113;
    v101(v113, v100, v44);
    v88 = v44;
    v89 = (uint64_t)v107;
    v90 = v104;
    sub_237EE1E3C();
    v99(v87, v88);
    v74(v68, v112);
    v91 = v106;
    v92 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v111)(v89, 1, v106);
    v93 = (uint64_t)v114;
    if (v92 != 1)
    {
      v94 = v89;
      v95 = v102;
      v115(v102, v94, v91);
      if (qword_256897B60 != -1)
        swift_once();
      v96 = swift_allocObject();
      swift_weakInit();
      v97 = swift_allocObject();
      *(_QWORD *)(v97 + 16) = &unk_256899A58;
      *(_QWORD *)(v97 + 24) = v96;
      swift_retain();
      swift_retain_n();
      sub_237ECC294(v95, (uint64_t)sub_237E4EC0C, v97);
      swift_release();
      swift_release();
      swift_release();

      swift_release();
      v77(v95, v91);
      sub_237E2209C(v93, &qword_25689C140);
      v77((uint64_t *)v104, v91);
      swift_release();
      goto LABEL_25;
    }

    sub_237E2209C(v93, &qword_25689C140);
    v77((uint64_t *)v90, v91);
    v78 = v89;
LABEL_24:
    sub_237E2209C(v78, &qword_25689C140);
LABEL_25:
    v58 = type metadata accessor for Alarm();
    v59 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56);
    v60 = v116;
    return v59(v60, 1, 1, v58);
  }
  v79 = v103;
  v80 = v115;
  v115(v103, v76, v67);
  v81 = v104;
  if ((sub_237EE1D10() & 1) == 0)
  {
    v86 = v67;
    v77 = (void (*)(uint64_t *, uint64_t))v73;
    v73(v79, v86);
    goto LABEL_29;
  }
  v82 = v105;
  (*(void (**)(uint64_t, char *, uint64_t))(v45 + 16))(v105, v81, v67);
  v83 = objc_msgSend(v46, sel_isSleepAlarm);

  v73(v79, v67);
  sub_237E2209C((uint64_t)v114, &qword_25689C140);
  v73((uint64_t)v81, v67);
  v84 = v116;
  v80(v116, v82, v67);
  v85 = type metadata accessor for Alarm();
  *(_BYTE *)(v84 + *(int *)(v85 + 20)) = v83;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 56))(v84, 0, 1, v85);
}

uint64_t sub_237E4DB7C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 88) = a1;
  return swift_task_switch();
}

uint64_t sub_237E4DB94()
{
  uint64_t v0;
  uint64_t Strong;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 96) = Strong;
  if (Strong)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_237E4DC08()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;

  v1 = v0[12];
  if ((*(_BYTE *)(v1 + 128) & 1) == 0)
  {
    v2 = objc_msgSend(*(id *)(v1 + 120), sel_nextAlarm);
    if (v2)
    {
      v3 = v2;
      *(_BYTE *)(v1 + 128) = 1;
      v4 = swift_allocObject();
      swift_weakInit();
      v0[6] = sub_237E4EAB0;
      v0[7] = v4;
      v0[2] = MEMORY[0x24BDAC760];
      v0[3] = 1107296256;
      v0[4] = sub_237E4D0B4;
      v0[5] = &block_descriptor_30;
      v5 = _Block_copy(v0 + 2);
      swift_release();
      v6 = objc_msgSend(v3, sel_addCompletionBlock_, v5);
      _Block_release(v5);

    }
  }
  swift_release();
  return ((uint64_t (*)(void))v0[1])();
}

uint64_t sub_237E4DD24()
{
  uint64_t v0;

  swift_release();

  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for AlarmDataProvider()
{
  return objc_opt_self();
}

_QWORD *sub_237E4DD70(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_237EE1D70();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for OverrideTime(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_237EE1D70();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_237E4DE2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_237EE1D70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_237E4DE88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_237EE1D70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_237E4DEE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_237EE1D70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_237E4DF40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_237EE1D70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_237E4DF9C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_237E4DFA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_237EE1D70();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_237E4E034()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_237E4E040(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_237EE1D70();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t type metadata accessor for Alarm()
{
  uint64_t result;

  result = qword_2568999C8;
  if (!qword_2568999C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_237E4E0F4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_237EE1D70();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_237E4E164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_defaultActor_initialize();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256899A90);
  v1 = swift_allocObject();
  v2 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 96);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898BC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  type metadata accessor for CPUnfairLock();
  v5 = swift_allocObject();
  *(_DWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v1 + v4) = v5;
  *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 112)) = MEMORY[0x24BEE4B00];
  *(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 120)) = 0;
  *(_QWORD *)(v0 + 112) = v1;
  *(_QWORD *)(v0 + 120) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE67828]), sel_init);
  *(_BYTE *)(v0 + 128) = 0;
  return v0;
}

uint64_t sub_237E4E248()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_237E4E254()
{
  return sub_237E27B84();
}

uint64_t sub_237E4E274(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_237E2CF28(&qword_256899A00, a2, (uint64_t (*)(uint64_t))type metadata accessor for AlarmDataProvider, (uint64_t)&unk_237EE7668);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_237E4E2B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t KeyPath;

  v57 = a1;
  v1 = sub_237EE25D4();
  v68 = *(_QWORD *)(v1 - 8);
  v69 = v1;
  MEMORY[0x24BDAC7A8](v1);
  v66 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899A08);
  v67 = *(_QWORD *)(v65 - 8);
  MEMORY[0x24BDAC7A8](v65);
  v63 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_237EE1A94();
  v58 = *(_QWORD *)(v60 - 8);
  MEMORY[0x24BDAC7A8](v60);
  v55 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899A10);
  v59 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v54 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_237EE1B54();
  v62 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v61 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v53 = (char *)&v45 - v8;
  v51 = sub_237EE1CD4();
  v52 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  v50 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_237EE1C8C();
  v48 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_237EE1C68();
  v46 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_237EE1C74();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_237EE1CC8();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v45 - v23;
  v26 = MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v45 - v27;
  MEMORY[0x23B825010](v26);
  sub_237EE1C5C();
  sub_237EE1C50();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v13, v47);
  sub_237EE1C2C();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  v29 = *(void (**)(char *, uint64_t))(v19 + 8);
  v29(v21, v18);
  sub_237EE1C80();
  sub_237EE1CB0();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v11, v49);
  v29(v24, v18);
  v30 = v50;
  sub_237EE1C14();
  v29(v28, v18);
  sub_237E2CF28(&qword_256899A18, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE318], MEMORY[0x24BDCE310]);
  v31 = v51;
  sub_237EE1D58();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v30, v31);
  KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  sub_237E4E910();
  v32 = v54;
  sub_237EE1B30();
  swift_release();
  v33 = v58;
  v34 = v55;
  v35 = v60;
  (*(void (**)(char *, _QWORD, uint64_t))(v58 + 104))(v55, *MEMORY[0x24BDCC0E8], v60);
  v36 = v53;
  v37 = v56;
  sub_237EE1B3C();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v35);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v32, v37);
  v70 = swift_getKeyPath();
  swift_getKeyPath();
  sub_237E4E9EC();
  v38 = v63;
  sub_237EE1B30();
  swift_release();
  v39 = v66;
  sub_237EE25C8();
  v40 = v61;
  v41 = v65;
  sub_237EE1B3C();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v39, v69);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v38, v41);
  sub_237EE1AF4();
  v42 = *(void (**)(char *, uint64_t))(v62 + 8);
  v43 = v64;
  v42(v40, v64);
  return ((uint64_t (*)(char *, uint64_t))v42)(v36, v43);
}

uint64_t sub_237E4E868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_237E1D2BC(a1, a2, a3, &qword_256899A38);
}

uint64_t sub_237E4E874()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256899A38);
  return sub_237EE2A24();
}

void sub_237E4E8B8()
{
  sub_237E4E910();
  sub_237EE1BC0();
  __break(1u);
}

void sub_237E4E8DC()
{
  sub_237EE1AA0();
  __break(1u);
}

void sub_237E4E8F4()
{
  sub_237EE1AA0();
  __break(1u);
}

unint64_t sub_237E4E910()
{
  unint64_t result;

  result = qword_256899A20;
  if (!qword_256899A20)
  {
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDCC150], MEMORY[0x24BDCC170]);
    atomic_store(result, (unint64_t *)&qword_256899A20);
  }
  return result;
}

void sub_237E4E954()
{
  sub_237E4E910();
  sub_237EE1BC0();
  __break(1u);
}

uint64_t sub_237E4E978()
{
  return 8;
}

uint64_t sub_237E4E984()
{
  return swift_release();
}

uint64_t sub_237E4E98C(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_237E4E998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_237E1D2BC(a1, a2, a3, &qword_256899A38) & 1;
}

uint64_t sub_237E4E9B8(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_256899A38);
}

_QWORD *sub_237E4E9C4(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void sub_237E4E9D0()
{
  sub_237EE1ADC();
  __break(1u);
}

unint64_t sub_237E4E9EC()
{
  unint64_t result;

  result = qword_256899A28;
  if (!qword_256899A28)
  {
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDEAD18], MEMORY[0x24BDEAD28]);
    atomic_store(result, (unint64_t *)&qword_256899A28);
  }
  return result;
}

void sub_237E4EA30()
{
  sub_237E4E9EC();
  sub_237EE1BD8();
  __break(1u);
}

uint64_t sub_237E4EA54()
{
  return 8;
}

uint64_t sub_237E4EA60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_237E1D2BC(a1, a2, a3, &qword_256899A30) & 1;
}

uint64_t sub_237E4EA80(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_256899A30);
}

uint64_t sub_237E4EA8C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_237E4EAB0(void *a1, void *a2)
{
  return sub_237E4CE78(a1, a2);
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_237E4EAD0()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_237E4EB0C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_237E487A8;
  return sub_237E4CF80(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_237E4EB8C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_237E20844;
  v2[11] = v0;
  return swift_task_switch();
}

uint64_t sub_237E4EBE8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_237E4EC0C()
{
  uint64_t v0;

  return sub_237ECC064(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_237E4EC18(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_237E487A8;
  return sub_237E4C974(a1, v4, v5, v7, v6);
}

uint64_t objectdestroy_33Tm()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t destroy for FittedText(uint64_t a1)
{
  sub_237E21F3C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRelease();
  return j__swift_release();
}

uint64_t initializeWithCopy for FittedText(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v2 = a2;
  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_237E21EAC(*(_QWORD *)a2, v5, v6);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(v2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(v2 + 24);
  LOBYTE(v2) = *(_BYTE *)(v2 + 40);
  swift_bridgeObjectRetain();
  j__swift_retain();
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v2;
  return a1;
}

uint64_t assignWithCopy for FittedText(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v2 = a2;
  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_BYTE *)(a2 + 16);
  sub_237E21EAC(*(_QWORD *)a2, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_237E21F3C(v7, v8, v9);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(v2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(v2 + 32);
  LOBYTE(v2) = *(_BYTE *)(v2 + 40);
  j__swift_retain();
  *(_QWORD *)(a1 + 32) = v10;
  *(_BYTE *)(a1 + 40) = v2;
  j__swift_release();
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for FittedText(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;

  v4 = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_237E21F3C(v5, v6, v7);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v8 = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = v8;
  j__swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FittedText(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FittedText(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FittedText()
{
  return &type metadata for FittedText;
}

uint64_t sub_237E4EF70()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_237E4EF80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t inited;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  uint64_t v32;
  uint64_t v33;
  CGFloat v34;
  CGFloat MinY;
  uint64_t result;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  _BYTE v41[4];
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char v50;
  __int128 v51;
  CGRect v52;
  CGRect v53;
  CGRect v54;
  CGRect v55;

  v2 = v1;
  v4 = sub_237EE255C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v41[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v46 = sub_237EE237C();
  v45 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v9 = &v41[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_237EE2370();
  v10 = *(_QWORD *)(v2 + 32);
  v11 = *(_BYTE *)(v2 + 40);
  j__swift_retain();
  sub_237EC3B34(v10, v11);
  j__swift_release();
  sub_237EE2334();
  if (sub_237EE2328())
  {
    v12 = *(_QWORD *)(v2 + 8);
    v44 = *(_QWORD *)v2;
    v43 = v12;
    v42 = *(unsigned __int8 *)(v2 + 16);
    v13 = *(_QWORD *)(v2 + 24);
    sub_237EE258C();
    sub_237EE22EC();
    v14 = (void *)sub_237EE2538();
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256899A98);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_237EE55E0;
    v16 = (void *)*MEMORY[0x24BEBB360];
    *(_QWORD *)(inited + 32) = *MEMORY[0x24BEBB360];
    type metadata accessor for CTFont(0);
    *(_QWORD *)(inited + 64) = v17;
    *(_QWORD *)(inited + 40) = v14;
    v18 = v16;
    v19 = v14;
    sub_237EAB6E8(inited);
    v20 = objc_allocWithZone(MEMORY[0x24BDD1458]);
    v21 = (void *)sub_237EE2A54();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_237E2DEB4();
    v22 = (void *)sub_237EE29F4();
    swift_bridgeObjectRelease();
    v23 = objc_msgSend(v20, sel_initWithString_attributes_, v21, v22);

    objc_msgSend(v23, sel_boundingRectWithSize_options_context_, 8, 0, 1.79769313e308, 1.79769313e308);
    v25 = v24;
    v27 = v26;
    v29 = v28;
    v31 = v30;

    swift_release();
    (*(void (**)(_BYTE *, uint64_t))(v45 + 8))(v9, v46);
    v32 = v44;
    v33 = v43;
    LOBYTE(v16) = v42;
    sub_237E21EAC(v44, v43, v42);
    swift_bridgeObjectRetain();
    v52.origin.x = v25;
    v52.origin.y = v27;
    v52.size.width = v29;
    v52.size.height = v31;
    v34 = -CGRectGetMinX(v52);
    v53.origin.x = v25;
    v53.origin.y = v27;
    v53.size.width = v29;
    v53.size.height = v31;
    MinY = CGRectGetMinY(v53);
    v54.origin.x = v25;
    v54.origin.y = v27;
    v54.size.width = v29;
    v54.size.height = v31;
    CGRectGetWidth(v54);
    v55.origin.x = v25;
    v55.origin.y = v27;
    v55.size.width = v29;
    v55.size.height = v31;
    CGRectGetHeight(v55);
    sub_237EE2400();
    sub_237EE2388();
    result = sub_237EE20E8();
    v37 = v47;
    v38 = v48;
    v39 = v49;
    v40 = v50;
    *(_QWORD *)a1 = v32;
    *(_QWORD *)(a1 + 8) = v33;
    *(_BYTE *)(a1 + 16) = (_BYTE)v16;
    *(_QWORD *)(a1 + 24) = v13;
    *(_WORD *)(a1 + 32) = 257;
    *(CGFloat *)(a1 + 40) = v34;
    *(CGFloat *)(a1 + 48) = MinY;
    *(_QWORD *)(a1 + 56) = v37;
    *(_BYTE *)(a1 + 64) = v38;
    *(_QWORD *)(a1 + 72) = v39;
    *(_BYTE *)(a1 + 80) = v40;
    *(_OWORD *)(a1 + 88) = v51;
  }
  else
  {
    result = sub_237EE309C();
    __break(1u);
  }
  return result;
}

uint64_t sub_237E4F39C()
{
  return sub_237E4F3F4(&qword_256899AA0, &qword_256899AA8, sub_237E4F3D0, MEMORY[0x24BDEBEE0]);
}

uint64_t sub_237E4F3D0()
{
  return sub_237E4F3F4(&qword_256899AB0, &qword_256899AB8, (uint64_t (*)(void))sub_237E4F45C, MEMORY[0x24BDEC438]);
}

uint64_t sub_237E4F3F4(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4;
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_237E4F45C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256899AC0;
  if (!qword_256899AC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256899AC8);
    v2[0] = MEMORY[0x24BDF1F80];
    v2[1] = MEMORY[0x24BDEDB80];
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256899AC0);
  }
  return result;
}

void sub_237E4F4C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  float v8;
  char *v9;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25689D9E0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_237EE55E0;
  v3 = type metadata accessor for SolarPosition(0);
  v4 = *(_DWORD *)(v1 + *(int *)(v3 + 20));
  v5 = MEMORY[0x24BEE14E8];
  v6 = MEMORY[0x24BEE1568];
  *(_QWORD *)(v2 + 56) = MEMORY[0x24BEE14E8];
  *(_QWORD *)(v2 + 64) = v6;
  *(_DWORD *)(v2 + 32) = v4;
  sub_237EE2A90();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_237EE55E0;
  v8 = *(float *)(v1 + *(int *)(v3 + 24));
  *(_QWORD *)(v7 + 56) = v5;
  *(_QWORD *)(v7 + 64) = v6;
  *(float *)(v7 + 32) = v8 * 100.0;
  sub_237EE2A90();
  v9 = (char *)&loc_237E4F5D8 + *((int *)qword_237E4F870 + sub_237E5D6D4());
  __asm { BR              X10 }
}

void sub_237E4F5E8()
{
  char *v0;

  if ((float)(360.0 / 360.0) >= 0.75)
  {
    v0 = (char *)&loc_237E4F638 + *((int *)qword_237E4F880 + sub_237E5D6D4());
    __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x237E4F868);
}

BOOL sub_237E4F8A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_237E5E978(a1, a2)
      && *(float *)(a1 + *(int *)(a3 + 20)) == *(float *)(a2 + *(int *)(a3 + 20))
      && *(float *)(a1 + *(int *)(a3 + 24)) == *(float *)(a2 + *(int *)(a3 + 24));
}

uint64_t sub_237E4F908()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(char *, uint64_t, uint64_t);
  int v10;
  uint64_t result;
  _QWORD v12[2];
  unint64_t v13;
  unint64_t v14;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568995B8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v12 - v5;
  v13 = 0;
  v14 = 0xE000000000000000;
  sub_237EE2FA0();
  swift_bridgeObjectRelease();
  v13 = 0xD000000000000010;
  v14 = 0x8000000237EEF050;
  sub_237E4F4C0();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  v7 = v0 + *(int *)(type metadata accessor for CurrentLocationSolarPosition(0) + 20);
  sub_237E52F00(v7, (uint64_t)v6);
  v8 = type metadata accessor for CurrentLocation(0);
  v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  v10 = v9(v6, 1, v8);
  sub_237E2209C((uint64_t)v6, &qword_2568995B8);
  if (v10 == 1)
    goto LABEL_4;
  v12[0] = 0;
  v12[1] = 0xE000000000000000;
  sub_237E52F00(v7, (uint64_t)v3);
  result = v9(v3, 1, v8);
  if ((_DWORD)result != 1)
  {
    sub_237ED1250();
    sub_237EE2AF0();
    swift_bridgeObjectRelease();
    sub_237E21F00((uint64_t)v3, type metadata accessor for CurrentLocation);
LABEL_4:
    sub_237EE2AF0();
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_237E4FAF4()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for SolarDataProvider(0);
  v0 = swift_allocObject();
  result = sub_237E52D3C();
  qword_25689DF10 = v0;
  return result;
}

uint64_t sub_237E4FB30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897E20);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_237EE2C64();
  v8 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
  v8(v6, 1, 1, v7);
  v9 = swift_allocObject();
  swift_weakInit();
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = v9;
  sub_237EDA9E4((uint64_t)v6, (uint64_t)&unk_256899D30, (uint64_t)v10);
  swift_release();
  v11 = OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_solarMovementsUpdateTask;
  if (!*(_QWORD *)(a1 + OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_solarMovementsUpdateTask))
  {
    v8(v6, 1, 1, v7);
    v12 = swift_allocObject();
    swift_weakInit();
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = 0;
    v13[3] = 0;
    v13[4] = v12;
    *(_QWORD *)(a1 + v11) = sub_237ECBB58((uint64_t)v6, (uint64_t)&unk_256899D40, (uint64_t)v13);
    swift_release();
  }
  return sub_237E4FCAC(a2);
}

uint64_t sub_237E4FCAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id *v18;
  uint64_t v19;
  uint64_t v20;
  id v22;
  double v23;
  double v24;
  double v25;
  double v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  double v29;
  double v30;
  double v31;
  double v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897E10);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_237EE1D70();
  v38 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SolarCycle(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568995B8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for CurrentLocation(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (id *)((char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = v1 + OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_currentLocation;
  swift_beginAccess();
  sub_237E52F00(v19, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_237E2209C((uint64_t)v14, &qword_2568995B8);
    v20 = type metadata accessor for CurrentLocationSolarPosition(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 1, 1, v20);
  }
  else
  {
    sub_237E47CE0((uint64_t)v14, (uint64_t)v18, type metadata accessor for CurrentLocation);
    v22 = *v18;
    objc_msgSend(v22, sel_coordinate);
    v24 = v23;
    v26 = v25;
    if (qword_256897B48 != -1)
      swift_once();
    sub_237EA1DE0((uint64_t)v8);
    sub_237EE1EB4();
    v27 = sub_237EE1EC0();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v5, 0, 1, v27);
    sub_237E5DF5C((uint64_t)v11, v24, v26);
    sub_237E2209C((uint64_t)v5, &qword_256897E10);
    v28 = *(void (**)(char *, uint64_t))(v38 + 8);
    v28(v8, v6);
    objc_msgSend(v22, sel_coordinate);
    v30 = v29;
    v32 = v31;
    sub_237EA1DE0((uint64_t)v8);
    sub_237E5DAAC((uint64_t)v8, v30, v32);
    LODWORD(v30) = v33;
    v28(v8, v6);
    sub_237E5D8A4();
    LODWORD(v32) = v34;
    sub_237E47CE0((uint64_t)v11, a1, type metadata accessor for SolarCycle);

    v35 = type metadata accessor for SolarPosition(0);
    *(_DWORD *)(a1 + *(int *)(v35 + 20)) = LODWORD(v30);
    *(_DWORD *)(a1 + *(int *)(v35 + 24)) = LODWORD(v32);
    v36 = type metadata accessor for CurrentLocationSolarPosition(0);
    v37 = a1 + *(int *)(v36 + 20);
    sub_237E47CE0((uint64_t)v18, v37, type metadata accessor for CurrentLocation);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(v37, 0, 1, v15);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(a1, 0, 1, v36);
  }
}

uint64_t sub_237E50044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[26] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256899D48);
  v4[27] = swift_task_alloc();
  v5 = sub_237EE1D70();
  v4[28] = v5;
  v4[29] = *(_QWORD *)(v5 - 8);
  v4[30] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568995B8);
  v4[31] = swift_task_alloc();
  v6 = type metadata accessor for CurrentLocationResult(0);
  v4[32] = v6;
  v4[33] = *(_QWORD *)(v6 - 8);
  v4[34] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689DA20);
  v4[35] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568995C0);
  v4[36] = v7;
  v4[37] = *(_QWORD *)(v7 - 8);
  v4[38] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568995C8);
  v4[39] = v8;
  v4[40] = *(_QWORD *)(v8 - 8);
  v4[41] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_237E50190()
{
  uint64_t v0;

  if (qword_256897B68 != -1)
    swift_once();
  *(_QWORD *)(v0 + 336) = qword_25689DFF8;
  return swift_task_switch();
}

uint64_t sub_237E501F4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = *(_QWORD *)(v0 + 304);
  v2 = sub_237ED185C(0);
  sub_237ED2508(v1);

  return swift_task_switch();
}

uint64_t sub_237E50248()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[37];
  v1 = v0[38];
  v3 = v0[36];
  sub_237EE2C88();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  v0[43] = 0;
  v4 = (_QWORD *)swift_task_alloc();
  v0[44] = v4;
  *v4 = v0;
  v4[1] = sub_237E50300;
  return sub_237EE2C94();
}

uint64_t sub_237E50300()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_237E50354()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 280);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 264) + 48))(v1, 1, *(_QWORD *)(v0 + 256)) != 1)
  {
    sub_237E47CE0(v1, *(_QWORD *)(v0 + 272), type metadata accessor for CurrentLocationResult);
    Strong = swift_weakLoadStrong();
    *(_QWORD *)(v0 + 360) = Strong;
    v3 = *(_QWORD *)(v0 + 272);
    if (Strong)
    {
      sub_237E52F00(v3, *(_QWORD *)(v0 + 248));
      return swift_task_switch();
    }
    sub_237E21F00(v3, type metadata accessor for CurrentLocationResult);
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 320) + 8))(*(_QWORD *)(v0 + 328), *(_QWORD *)(v0 + 312));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_237E50484()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  os_unfair_lock_s *v14;
  int32x2_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_unfair_lock_s *v29;
  uint64_t v31;

  v1 = v0[45];
  v2 = v0[31];
  v3 = v1 + OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_currentLocation;
  swift_beginAccess();
  sub_237E53688(v2, v3);
  swift_endAccess();
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_solarTerminatorStream);
  if (qword_256897B48 != -1)
    swift_once();
  v6 = v0[29];
  v5 = v0[30];
  v7 = v0[28];
  sub_237EA1DE0(v5);
  v8 = sub_237ED9504();
  v10 = v9;
  v31 = v11;
  v13 = v12;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  v14 = (os_unfair_lock_s *)(*(_QWORD *)(v4 + 48) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v14);
  swift_endAccess();
  swift_beginAccess();
  v16 = *(_QWORD *)(v4 + 24);
  v17 = *(_QWORD *)(v4 + 32);
  v18 = *(_BYTE *)(v4 + 40);
  if (v16)
  {
    if (v16 == 1 || v10 == 0)
      goto LABEL_15;
    if (v8 == ((*(_QWORD *)(v4 + 16) & 1) == 0))
      goto LABEL_15;
    sub_237EDA788(v16, v10, v15);
    if ((v20 & 1) == 0)
      goto LABEL_15;
    if ((v18 & 1) == 0)
    {
      if ((v13 & 1) != 0 || v17 != v31)
        goto LABEL_15;
LABEL_19:
      v21 = v0[43];
      goto LABEL_16;
    }
    if ((v13 & 1) != 0)
      goto LABEL_19;
  }
  else
  {
    sub_237E48530(*(_QWORD *)(v4 + 16), 0);
    if (!v10)
    {
      v21 = v0[43];
      goto LABEL_16;
    }
  }
LABEL_15:
  v21 = v0[43];
  v22 = *(_QWORD *)(v4 + 16);
  v23 = *(_QWORD *)(v4 + 24);
  *(_QWORD *)(v4 + 16) = v8;
  *(_QWORD *)(v4 + 24) = v10;
  *(_QWORD *)(v4 + 32) = v31;
  *(_BYTE *)(v4 + 40) = v13;
  swift_bridgeObjectRetain();
  sub_237E48530(v22, v23);
  swift_beginAccess();
  swift_retain();
  v24 = swift_bridgeObjectRetain();
  sub_237E533B0(v24, v4);
  swift_release();
  swift_bridgeObjectRelease();
LABEL_16:
  v0[46] = v21;
  v25 = v0[45];
  v26 = v0[31];
  v27 = v0[27];
  swift_beginAccess();
  os_unfair_lock_unlock(v14);
  swift_endAccess();
  swift_bridgeObjectRelease();
  v28 = *(_QWORD *)(v25 + OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_currentLocationSolarPositionStream);
  sub_237E4FCAC(v27);
  v29 = (os_unfair_lock_s *)(*(_QWORD *)(v28 + *(_QWORD *)(*(_QWORD *)v28 + 104)) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v29);
  swift_endAccess();
  sub_237E94640(v27);
  swift_beginAccess();
  os_unfair_lock_unlock(v29);
  swift_endAccess();
  sub_237E2209C(v27, &qword_256899D48);
  sub_237E2209C(v26, &qword_2568995B8);
  return swift_task_switch();
}

uint64_t sub_237E507C8()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = v0[34];
  swift_release();
  sub_237E21F00(v1, type metadata accessor for CurrentLocationResult);
  v0[43] = v0[46];
  v2 = (_QWORD *)swift_task_alloc();
  v0[44] = v2;
  *v2 = v0;
  v2[1] = sub_237E50300;
  return sub_237EE2C94();
}

uint64_t sub_237E5084C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[23] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256899D48);
  v4[24] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  v4[25] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899D50);
  v4[26] = v5;
  v4[27] = *(_QWORD *)(v5 - 8);
  v4[28] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899D58);
  v4[29] = v6;
  v4[30] = *(_QWORD *)(v6 - 8);
  v4[31] = swift_task_alloc();
  v7 = sub_237EE1D70();
  v4[32] = v7;
  v4[33] = *(_QWORD *)(v7 - 8);
  v4[34] = swift_task_alloc();
  v4[35] = swift_task_alloc();
  v4[36] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_237E50968()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  if (qword_256897B48 != -1)
    swift_once();
  v1 = v0[36];
  v2 = v0[32];
  v3 = v0[33];
  v4 = v0[27];
  v5 = v0[28];
  v6 = v0[26];
  sub_237EA1DE0(v1);
  sub_237EE1D1C();
  v8 = v7;
  v9 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[37] = v9;
  v9(v1, v2);
  v10 = qword_25689B990;
  v11 = *(_QWORD *)(qword_25689B990 + OBJC_IVAR____TtC11ClockPoster5Clock_dateStreamObservers);
  swift_retain();
  sub_237E97200(1, v11, v10, 1, v5);
  sub_237EE2C88();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
  swift_beginAccess();
  v0[39] = v8;
  v0[38] = 0;
  v12 = (_QWORD *)swift_task_alloc();
  v0[40] = v12;
  *v12 = v0;
  v12[1] = sub_237E50AD4;
  return sub_237EE2C94();
}

uint64_t sub_237E50AD4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_237E50B28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  double v5;
  double v6;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 256);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 200);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
    goto LABEL_6;
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v2 + 32))(*(_QWORD *)(v0 + 280), v3, v1);
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 328) = Strong;
  if (!Strong)
  {
    (*(void (**)(_QWORD, _QWORD))(v0 + 296))(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 256));
LABEL_6:
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 240) + 8))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 232));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = *(double *)(v0 + 312);
  sub_237EE1D1C();
  *(double *)(v0 + 336) = v6;
  if (vabdd_f64(v6, v5) > 5.0)
    return swift_task_switch();
  (*(void (**)(_QWORD, _QWORD))(v0 + 296))(*(_QWORD *)(v0 + 280), *(_QWORD *)(v0 + 256));
  swift_release();
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 320) = v8;
  *v8 = v0;
  v8[1] = sub_237E50AD4;
  return sub_237EE2C94();
}

uint64_t sub_237E50CE8()
{
  _QWORD *v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BOOL8 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  os_unfair_lock_s *v11;
  int32x2_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  os_unfair_lock_s *v25;
  uint64_t v27;

  v1 = (void (*)(uint64_t, uint64_t))v0[37];
  v2 = v0[34];
  v3 = v0[32];
  v4 = *(_QWORD *)(v0[41] + OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_solarTerminatorStream);
  sub_237EA1DE0(v2);
  v5 = sub_237ED9504();
  v7 = v6;
  v27 = v8;
  v10 = v9;
  v1(v2, v3);
  v11 = (os_unfair_lock_s *)(*(_QWORD *)(v4 + 48) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v11);
  swift_endAccess();
  swift_beginAccess();
  v13 = *(_QWORD *)(v4 + 24);
  v14 = *(_QWORD *)(v4 + 32);
  v15 = *(_BYTE *)(v4 + 40);
  if (v13)
  {
    if (v13 == 1 || v7 == 0)
      goto LABEL_13;
    if (v5 == ((*(_QWORD *)(v4 + 16) & 1) == 0))
      goto LABEL_13;
    sub_237EDA788(v13, v7, v12);
    if ((v17 & 1) == 0)
      goto LABEL_13;
    if ((v15 & 1) == 0)
    {
      if ((v10 & 1) != 0 || v14 != v27)
        goto LABEL_13;
LABEL_17:
      v18 = v0[38];
      goto LABEL_14;
    }
    if ((v10 & 1) != 0)
      goto LABEL_17;
  }
  else
  {
    sub_237E48530(*(_QWORD *)(v4 + 16), 0);
    if (!v7)
    {
      v18 = v0[38];
      goto LABEL_14;
    }
  }
LABEL_13:
  v18 = v0[38];
  v19 = *(_QWORD *)(v4 + 16);
  v20 = *(_QWORD *)(v4 + 24);
  *(_QWORD *)(v4 + 16) = v5;
  *(_QWORD *)(v4 + 24) = v7;
  *(_QWORD *)(v4 + 32) = v27;
  *(_BYTE *)(v4 + 40) = v10;
  swift_bridgeObjectRetain();
  sub_237E48530(v19, v20);
  swift_beginAccess();
  swift_retain();
  v21 = swift_bridgeObjectRetain();
  sub_237E533B0(v21, v4);
  swift_release();
  swift_bridgeObjectRelease();
LABEL_14:
  v0[43] = v18;
  v22 = v0[41];
  v23 = v0[24];
  swift_beginAccess();
  os_unfair_lock_unlock(v11);
  swift_endAccess();
  swift_bridgeObjectRelease();
  v24 = *(_QWORD *)(v22 + OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_currentLocationSolarPositionStream);
  sub_237E4FCAC(v23);
  v25 = (os_unfair_lock_s *)(*(_QWORD *)(v24 + *(_QWORD *)(*(_QWORD *)v24 + 104)) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v25);
  swift_endAccess();
  sub_237E94640(v23);
  swift_beginAccess();
  os_unfair_lock_unlock(v25);
  swift_endAccess();
  sub_237E2209C(v23, &qword_256899D48);
  return swift_task_switch();
}

uint64_t sub_237E50FB4()
{
  _QWORD *v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = (void (*)(uint64_t, uint64_t))v0[37];
  v2 = v0[35];
  v3 = v0[32];
  swift_release();
  v1(v2, v3);
  v4 = v0[43];
  v0[39] = v0[42];
  v0[38] = v4;
  v5 = (_QWORD *)swift_task_alloc();
  v0[40] = v5;
  *v5 = v0;
  v5[1] = sub_237E50AD4;
  return sub_237EE2C94();
}

uint64_t sub_237E5104C()
{
  uint64_t v0;

  sub_237E2209C(v0 + OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_currentLocation, &qword_2568995B8);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_237E510E0()
{
  sub_237E5104C();
  return swift_defaultActor_deallocate();
}

uint64_t sub_237E510F8()
{
  return type metadata accessor for SolarDataProvider(0);
}

uint64_t type metadata accessor for SolarDataProvider(uint64_t a1)
{
  return sub_237E42BC0(a1, (uint64_t *)&unk_256899B30);
}

void sub_237E51114()
{
  unint64_t v0;

  sub_237E511B8();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_237E511B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256899B40)
  {
    type metadata accessor for CurrentLocation(255);
    v0 = sub_237EE2ED4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256899B40);
  }
}

_QWORD *sub_237E5120C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void **v25;
  void **v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v30 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_237EE1D70();
    v8 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = type metadata accessor for SolarEvent(0);
    *((_BYTE *)a1 + *(int *)(v9 + 20)) = *((_BYTE *)a2 + *(int *)(v9 + 20));
    *(_DWORD *)((char *)a1 + *(int *)(v9 + 24)) = *(_DWORD *)((char *)a2 + *(int *)(v9 + 24));
    v10 = (int *)type metadata accessor for SolarCycle(0);
    v11 = v10[5];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v8((_QWORD *)((char *)a1 + v11), (_QWORD *)((char *)a2 + v11), v7);
    v12[*(int *)(v9 + 20)] = v13[*(int *)(v9 + 20)];
    *(_DWORD *)&v12[*(int *)(v9 + 24)] = *(_DWORD *)&v13[*(int *)(v9 + 24)];
    v14 = v10[6];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v8((_QWORD *)((char *)a1 + v14), (_QWORD *)((char *)a2 + v14), v7);
    v15[*(int *)(v9 + 20)] = v16[*(int *)(v9 + 20)];
    *(_DWORD *)&v15[*(int *)(v9 + 24)] = *(_DWORD *)&v16[*(int *)(v9 + 24)];
    v17 = v10[7];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v8((_QWORD *)((char *)a1 + v17), (_QWORD *)((char *)a2 + v17), v7);
    v18[*(int *)(v9 + 20)] = v19[*(int *)(v9 + 20)];
    *(_DWORD *)&v18[*(int *)(v9 + 24)] = *(_DWORD *)&v19[*(int *)(v9 + 24)];
    v20 = v10[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v8((_QWORD *)((char *)a1 + v20), (_QWORD *)((char *)a2 + v20), v7);
    v21[*(int *)(v9 + 20)] = v22[*(int *)(v9 + 20)];
    *(_DWORD *)&v21[*(int *)(v9 + 24)] = *(_DWORD *)&v22[*(int *)(v9 + 24)];
    v23 = type metadata accessor for SolarPosition(0);
    *(_DWORD *)((char *)a1 + *(int *)(v23 + 20)) = *(_DWORD *)((char *)a2 + *(int *)(v23 + 20));
    *(_DWORD *)((char *)a1 + *(int *)(v23 + 24)) = *(_DWORD *)((char *)a2 + *(int *)(v23 + 24));
    v24 = *(int *)(a3 + 20);
    v25 = (void **)((char *)a1 + v24);
    v26 = (void **)((char *)a2 + v24);
    v27 = type metadata accessor for CurrentLocation(0);
    v28 = *(_QWORD *)(v27 - 8);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568995B8);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      v31 = *v26;
      *v25 = *v26;
      v32 = *(int *)(v27 + 20);
      v33 = (char *)v25 + v32;
      v34 = (char *)v26 + v32;
      v35 = v31;
      v36 = __swift_instantiateConcreteTypeFromMangledName(qword_25689D800);
      v37 = *(_QWORD *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v34, 1, v36))
      {
        v38 = type metadata accessor for LocationAccuracy(0);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v33, v34, v36);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v33, 0, 1, v36);
      }
      (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
  }
  return a1;
}

uint64_t type metadata accessor for SolarPosition(uint64_t a1)
{
  return sub_237E42BC0(a1, qword_256899CE0);
}

uint64_t sub_237E514D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  int *v6;
  id *v7;
  uint64_t v8;
  uint64_t result;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v4 = sub_237EE1D70();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = (int *)type metadata accessor for SolarCycle(0);
  v5(a1 + v6[5], v4);
  v5(a1 + v6[6], v4);
  v5(a1 + v6[7], v4);
  v5(a1 + v6[8], v4);
  v7 = (id *)(a1 + *(int *)(a2 + 20));
  v8 = type metadata accessor for CurrentLocation(0);
  result = (*(uint64_t (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8);
  if (!(_DWORD)result)
  {

    v10 = (char *)v7 + *(int *)(v8 + 20);
    v11 = __swift_instantiateConcreteTypeFromMangledName(qword_25689D800);
    v12 = *(_QWORD *)(v11 - 8);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  }
  return result;
}

uint64_t sub_237E51600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void **v24;
  void **v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v6 = sub_237EE1D70();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = type metadata accessor for SolarEvent(0);
  *(_BYTE *)(a1 + *(int *)(v8 + 20)) = *(_BYTE *)(a2 + *(int *)(v8 + 20));
  *(_DWORD *)(a1 + *(int *)(v8 + 24)) = *(_DWORD *)(a2 + *(int *)(v8 + 24));
  v9 = (int *)type metadata accessor for SolarCycle(0);
  v10 = v9[5];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v7(a1 + v10, a2 + v10, v6);
  *(_BYTE *)(v11 + *(int *)(v8 + 20)) = *(_BYTE *)(v12 + *(int *)(v8 + 20));
  *(_DWORD *)(v11 + *(int *)(v8 + 24)) = *(_DWORD *)(v12 + *(int *)(v8 + 24));
  v13 = v9[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v7(a1 + v13, a2 + v13, v6);
  *(_BYTE *)(v14 + *(int *)(v8 + 20)) = *(_BYTE *)(v15 + *(int *)(v8 + 20));
  *(_DWORD *)(v14 + *(int *)(v8 + 24)) = *(_DWORD *)(v15 + *(int *)(v8 + 24));
  v16 = v9[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v7(a1 + v16, a2 + v16, v6);
  *(_BYTE *)(v17 + *(int *)(v8 + 20)) = *(_BYTE *)(v18 + *(int *)(v8 + 20));
  *(_DWORD *)(v17 + *(int *)(v8 + 24)) = *(_DWORD *)(v18 + *(int *)(v8 + 24));
  v19 = v9[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v7(a1 + v19, a2 + v19, v6);
  *(_BYTE *)(v20 + *(int *)(v8 + 20)) = *(_BYTE *)(v21 + *(int *)(v8 + 20));
  *(_DWORD *)(v20 + *(int *)(v8 + 24)) = *(_DWORD *)(v21 + *(int *)(v8 + 24));
  v22 = type metadata accessor for SolarPosition(0);
  *(_DWORD *)(a1 + *(int *)(v22 + 20)) = *(_DWORD *)(a2 + *(int *)(v22 + 20));
  *(_DWORD *)(a1 + *(int *)(v22 + 24)) = *(_DWORD *)(a2 + *(int *)(v22 + 24));
  v23 = *(int *)(a3 + 20);
  v24 = (void **)(a1 + v23);
  v25 = (void **)(a2 + v23);
  v26 = type metadata accessor for CurrentLocation(0);
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568995B8);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v29 = *v25;
    *v24 = *v25;
    v30 = *(int *)(v26 + 20);
    v31 = (char *)v24 + v30;
    v32 = (char *)v25 + v30;
    v33 = v29;
    v34 = __swift_instantiateConcreteTypeFromMangledName(qword_25689D800);
    v35 = *(_QWORD *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v32, 1, v34))
    {
      v36 = type metadata accessor for LocationAccuracy(0);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v31, v32, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v31, 0, 1, v34);
    }
    (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  return a1;
}

uint64_t sub_237E5188C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void **v24;
  void **v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(void **, uint64_t, uint64_t);
  int v29;
  void *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  size_t v38;
  void **v39;
  void **v40;
  void *v41;
  void *v42;
  id v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(char *, uint64_t, uint64_t);
  int v50;

  v6 = sub_237EE1D70();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v8 = type metadata accessor for SolarEvent(0);
  *(_BYTE *)(a1 + *(int *)(v8 + 20)) = *(_BYTE *)(a2 + *(int *)(v8 + 20));
  *(_DWORD *)(a1 + *(int *)(v8 + 24)) = *(_DWORD *)(a2 + *(int *)(v8 + 24));
  v9 = (int *)type metadata accessor for SolarCycle(0);
  v10 = v9[5];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v7(a1 + v10, a2 + v10, v6);
  *(_BYTE *)(v11 + *(int *)(v8 + 20)) = *(_BYTE *)(v12 + *(int *)(v8 + 20));
  *(_DWORD *)(v11 + *(int *)(v8 + 24)) = *(_DWORD *)(v12 + *(int *)(v8 + 24));
  v13 = v9[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v7(a1 + v13, a2 + v13, v6);
  *(_BYTE *)(v14 + *(int *)(v8 + 20)) = *(_BYTE *)(v15 + *(int *)(v8 + 20));
  *(_DWORD *)(v14 + *(int *)(v8 + 24)) = *(_DWORD *)(v15 + *(int *)(v8 + 24));
  v16 = v9[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v7(a1 + v16, a2 + v16, v6);
  *(_BYTE *)(v17 + *(int *)(v8 + 20)) = *(_BYTE *)(v18 + *(int *)(v8 + 20));
  *(_DWORD *)(v17 + *(int *)(v8 + 24)) = *(_DWORD *)(v18 + *(int *)(v8 + 24));
  v19 = v9[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v7(a1 + v19, a2 + v19, v6);
  *(_BYTE *)(v20 + *(int *)(v8 + 20)) = *(_BYTE *)(v21 + *(int *)(v8 + 20));
  *(_DWORD *)(v20 + *(int *)(v8 + 24)) = *(_DWORD *)(v21 + *(int *)(v8 + 24));
  v22 = type metadata accessor for SolarPosition(0);
  *(_DWORD *)(a1 + *(int *)(v22 + 20)) = *(_DWORD *)(a2 + *(int *)(v22 + 20));
  *(_DWORD *)(a1 + *(int *)(v22 + 24)) = *(_DWORD *)(a2 + *(int *)(v22 + 24));
  v23 = *(int *)(a3 + 20);
  v24 = (void **)(a1 + v23);
  v25 = (void **)(a2 + v23);
  v26 = type metadata accessor for CurrentLocation(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v27 + 48);
  LODWORD(v8) = v28(v24, 1, v26);
  v29 = v28(v25, 1, v26);
  if (!(_DWORD)v8)
  {
    if (!v29)
    {
      v41 = *v25;
      v42 = *v24;
      *v24 = *v25;
      v43 = v41;

      v44 = *(int *)(v26 + 20);
      v45 = (char *)v24 + v44;
      v46 = (char *)v25 + v44;
      v47 = __swift_instantiateConcreteTypeFromMangledName(qword_25689D800);
      v48 = *(_QWORD *)(v47 - 8);
      v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48);
      LODWORD(v42) = v49(v45, 1, v47);
      v50 = v49(v46, 1, v47);
      if ((_DWORD)v42)
      {
        if (!v50)
        {
          (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v45, v46, v47);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
          return a1;
        }
      }
      else
      {
        if (!v50)
        {
          (*(void (**)(char *, char *, uint64_t))(v48 + 24))(v45, v46, v47);
          return a1;
        }
        (*(void (**)(char *, uint64_t))(v48 + 8))(v45, v47);
      }
      v38 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for LocationAccuracy(0) - 8) + 64);
      v39 = (void **)v45;
      v40 = (void **)v46;
      goto LABEL_8;
    }
    sub_237E21F00((uint64_t)v24, type metadata accessor for CurrentLocation);
LABEL_7:
    v38 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2568995B8) - 8) + 64);
    v39 = v24;
    v40 = v25;
LABEL_8:
    memcpy(v39, v40, v38);
    return a1;
  }
  if (v29)
    goto LABEL_7;
  v30 = *v25;
  *v24 = *v25;
  v31 = *(int *)(v26 + 20);
  v32 = (char *)v24 + v31;
  v33 = (char *)v25 + v31;
  v34 = v30;
  v35 = __swift_instantiateConcreteTypeFromMangledName(qword_25689D800);
  v36 = *(_QWORD *)(v35 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v33, 1, v35))
  {
    v37 = type metadata accessor for LocationAccuracy(0);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v32, v33, v35);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v32, 0, 1, v35);
  }
  (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  return a1;
}

uint64_t sub_237E51C1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = sub_237EE1D70();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = type metadata accessor for SolarEvent(0);
  *(_BYTE *)(a1 + *(int *)(v8 + 20)) = *(_BYTE *)(a2 + *(int *)(v8 + 20));
  *(_DWORD *)(a1 + *(int *)(v8 + 24)) = *(_DWORD *)(a2 + *(int *)(v8 + 24));
  v9 = (int *)type metadata accessor for SolarCycle(0);
  v10 = v9[5];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v7(a1 + v10, a2 + v10, v6);
  *(_BYTE *)(v11 + *(int *)(v8 + 20)) = *(_BYTE *)(v12 + *(int *)(v8 + 20));
  *(_DWORD *)(v11 + *(int *)(v8 + 24)) = *(_DWORD *)(v12 + *(int *)(v8 + 24));
  v13 = v9[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v7(a1 + v13, a2 + v13, v6);
  *(_BYTE *)(v14 + *(int *)(v8 + 20)) = *(_BYTE *)(v15 + *(int *)(v8 + 20));
  *(_DWORD *)(v14 + *(int *)(v8 + 24)) = *(_DWORD *)(v15 + *(int *)(v8 + 24));
  v16 = v9[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v7(a1 + v16, a2 + v16, v6);
  *(_BYTE *)(v17 + *(int *)(v8 + 20)) = *(_BYTE *)(v18 + *(int *)(v8 + 20));
  *(_DWORD *)(v17 + *(int *)(v8 + 24)) = *(_DWORD *)(v18 + *(int *)(v8 + 24));
  v19 = v9[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v7(a1 + v19, a2 + v19, v6);
  *(_BYTE *)(v20 + *(int *)(v8 + 20)) = *(_BYTE *)(v21 + *(int *)(v8 + 20));
  *(_DWORD *)(v20 + *(int *)(v8 + 24)) = *(_DWORD *)(v21 + *(int *)(v8 + 24));
  v22 = type metadata accessor for SolarPosition(0);
  *(_DWORD *)(a1 + *(int *)(v22 + 20)) = *(_DWORD *)(a2 + *(int *)(v22 + 20));
  *(_DWORD *)(a1 + *(int *)(v22 + 24)) = *(_DWORD *)(a2 + *(int *)(v22 + 24));
  v23 = *(int *)(a3 + 20);
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  v26 = type metadata accessor for CurrentLocation(0);
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568995B8);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    *v24 = *v25;
    v29 = *(int *)(v26 + 20);
    v30 = (char *)v24 + v29;
    v31 = (char *)v25 + v29;
    v32 = __swift_instantiateConcreteTypeFromMangledName(qword_25689D800);
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      v34 = type metadata accessor for LocationAccuracy(0);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v30, v31, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  return a1;
}

uint64_t sub_237E51EA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void **v24;
  void **v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(void **, uint64_t, uint64_t);
  int v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  size_t v36;
  void **v37;
  const void *v38;
  void *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(char *, uint64_t, uint64_t);
  int v46;
  int v47;

  v6 = sub_237EE1D70();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = type metadata accessor for SolarEvent(0);
  *(_BYTE *)(a1 + *(int *)(v8 + 20)) = *(_BYTE *)(a2 + *(int *)(v8 + 20));
  *(_DWORD *)(a1 + *(int *)(v8 + 24)) = *(_DWORD *)(a2 + *(int *)(v8 + 24));
  v9 = (int *)type metadata accessor for SolarCycle(0);
  v10 = v9[5];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v7(a1 + v10, a2 + v10, v6);
  *(_BYTE *)(v11 + *(int *)(v8 + 20)) = *(_BYTE *)(v12 + *(int *)(v8 + 20));
  *(_DWORD *)(v11 + *(int *)(v8 + 24)) = *(_DWORD *)(v12 + *(int *)(v8 + 24));
  v13 = v9[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v7(a1 + v13, a2 + v13, v6);
  *(_BYTE *)(v14 + *(int *)(v8 + 20)) = *(_BYTE *)(v15 + *(int *)(v8 + 20));
  *(_DWORD *)(v14 + *(int *)(v8 + 24)) = *(_DWORD *)(v15 + *(int *)(v8 + 24));
  v16 = v9[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v7(a1 + v16, a2 + v16, v6);
  *(_BYTE *)(v17 + *(int *)(v8 + 20)) = *(_BYTE *)(v18 + *(int *)(v8 + 20));
  *(_DWORD *)(v17 + *(int *)(v8 + 24)) = *(_DWORD *)(v18 + *(int *)(v8 + 24));
  v19 = v9[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v7(a1 + v19, a2 + v19, v6);
  *(_BYTE *)(v20 + *(int *)(v8 + 20)) = *(_BYTE *)(v21 + *(int *)(v8 + 20));
  *(_DWORD *)(v20 + *(int *)(v8 + 24)) = *(_DWORD *)(v21 + *(int *)(v8 + 24));
  v22 = type metadata accessor for SolarPosition(0);
  *(_DWORD *)(a1 + *(int *)(v22 + 20)) = *(_DWORD *)(a2 + *(int *)(v22 + 20));
  *(_DWORD *)(a1 + *(int *)(v22 + 24)) = *(_DWORD *)(a2 + *(int *)(v22 + 24));
  v23 = *(int *)(a3 + 20);
  v24 = (void **)(a1 + v23);
  v25 = (void **)(a2 + v23);
  v26 = type metadata accessor for CurrentLocation(0);
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v27 + 48);
  LODWORD(v8) = v28(v24, 1, v26);
  v29 = v28(v25, 1, v26);
  if (!(_DWORD)v8)
  {
    if (!v29)
    {
      v39 = *v24;
      *v24 = *v25;

      v40 = *(int *)(v26 + 20);
      v41 = (char *)v24 + v40;
      v42 = (char *)v25 + v40;
      v43 = __swift_instantiateConcreteTypeFromMangledName(qword_25689D800);
      v44 = *(_QWORD *)(v43 - 8);
      v45 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v44 + 48);
      v46 = v45(v41, 1, v43);
      v47 = v45(v42, 1, v43);
      if (v46)
      {
        if (!v47)
        {
          (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v41, v42, v43);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
          return a1;
        }
      }
      else
      {
        if (!v47)
        {
          (*(void (**)(char *, char *, uint64_t))(v44 + 40))(v41, v42, v43);
          return a1;
        }
        (*(void (**)(char *, uint64_t))(v44 + 8))(v41, v43);
      }
      v36 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for LocationAccuracy(0) - 8) + 64);
      v37 = (void **)v41;
      v38 = v42;
      goto LABEL_8;
    }
    sub_237E21F00((uint64_t)v24, type metadata accessor for CurrentLocation);
LABEL_7:
    v36 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2568995B8) - 8) + 64);
    v37 = v24;
    v38 = v25;
LABEL_8:
    memcpy(v37, v38, v36);
    return a1;
  }
  if (v29)
    goto LABEL_7;
  *v24 = *v25;
  v30 = *(int *)(v26 + 20);
  v31 = (char *)v24 + v30;
  v32 = (char *)v25 + v30;
  v33 = __swift_instantiateConcreteTypeFromMangledName(qword_25689D800);
  v34 = *(_QWORD *)(v33 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
  {
    v35 = type metadata accessor for LocationAccuracy(0);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  }
  (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  return a1;
}

uint64_t sub_237E5222C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_237E52238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = type metadata accessor for SolarPosition(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568995B8);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_237E522B0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_237E522BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = type metadata accessor for SolarPosition(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568995B8);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for CurrentLocationSolarPosition(uint64_t a1)
{
  return sub_237E42BC0(a1, qword_256899C50);
}

void sub_237E52350()
{
  unint64_t v0;
  unint64_t v1;

  type metadata accessor for SolarPosition(319);
  if (v0 <= 0x3F)
  {
    sub_237E511B8();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

_QWORD *sub_237E523D4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v24 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_237EE1D70();
    v8 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = type metadata accessor for SolarEvent(0);
    *((_BYTE *)a1 + *(int *)(v9 + 20)) = *((_BYTE *)a2 + *(int *)(v9 + 20));
    *(_DWORD *)((char *)a1 + *(int *)(v9 + 24)) = *(_DWORD *)((char *)a2 + *(int *)(v9 + 24));
    v10 = (int *)type metadata accessor for SolarCycle(0);
    v11 = v10[5];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v8((_QWORD *)((char *)a1 + v11), (_QWORD *)((char *)a2 + v11), v7);
    v12[*(int *)(v9 + 20)] = v13[*(int *)(v9 + 20)];
    *(_DWORD *)&v12[*(int *)(v9 + 24)] = *(_DWORD *)&v13[*(int *)(v9 + 24)];
    v14 = v10[6];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v8((_QWORD *)((char *)a1 + v14), (_QWORD *)((char *)a2 + v14), v7);
    v15[*(int *)(v9 + 20)] = v16[*(int *)(v9 + 20)];
    *(_DWORD *)&v15[*(int *)(v9 + 24)] = *(_DWORD *)&v16[*(int *)(v9 + 24)];
    v17 = v10[7];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v8((_QWORD *)((char *)a1 + v17), (_QWORD *)((char *)a2 + v17), v7);
    v18[*(int *)(v9 + 20)] = v19[*(int *)(v9 + 20)];
    *(_DWORD *)&v18[*(int *)(v9 + 24)] = *(_DWORD *)&v19[*(int *)(v9 + 24)];
    v20 = v10[8];
    v21 = (char *)a1 + v20;
    v22 = (char *)a2 + v20;
    v8((_QWORD *)((char *)a1 + v20), (_QWORD *)((char *)a2 + v20), v7);
    v21[*(int *)(v9 + 20)] = v22[*(int *)(v9 + 20)];
    *(_DWORD *)&v21[*(int *)(v9 + 24)] = *(_DWORD *)&v22[*(int *)(v9 + 24)];
    v23 = *(int *)(a3 + 24);
    *(_DWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_DWORD *)((char *)a2 + *(int *)(a3 + 20));
    *(_DWORD *)((char *)a1 + v23) = *(_DWORD *)((char *)a2 + v23);
  }
  return a1;
}

uint64_t sub_237E52580(uint64_t a1)
{
  uint64_t v2;
  int *v3;
  void (*v5)(uint64_t, uint64_t);

  v2 = sub_237EE1D70();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v5(a1, v2);
  v3 = (int *)type metadata accessor for SolarCycle(0);
  v5(a1 + v3[5], v2);
  v5(a1 + v3[6], v2);
  v5(a1 + v3[7], v2);
  return ((uint64_t (*)(uint64_t, uint64_t))v5)(a1 + v3[8], v2);
}

uint64_t sub_237E5262C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_237EE1D70();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = type metadata accessor for SolarEvent(0);
  *(_BYTE *)(a1 + *(int *)(v8 + 20)) = *(_BYTE *)(a2 + *(int *)(v8 + 20));
  *(_DWORD *)(a1 + *(int *)(v8 + 24)) = *(_DWORD *)(a2 + *(int *)(v8 + 24));
  v9 = (int *)type metadata accessor for SolarCycle(0);
  v10 = v9[5];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v7(a1 + v10, a2 + v10, v6);
  *(_BYTE *)(v11 + *(int *)(v8 + 20)) = *(_BYTE *)(v12 + *(int *)(v8 + 20));
  *(_DWORD *)(v11 + *(int *)(v8 + 24)) = *(_DWORD *)(v12 + *(int *)(v8 + 24));
  v13 = v9[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v7(a1 + v13, a2 + v13, v6);
  *(_BYTE *)(v14 + *(int *)(v8 + 20)) = *(_BYTE *)(v15 + *(int *)(v8 + 20));
  *(_DWORD *)(v14 + *(int *)(v8 + 24)) = *(_DWORD *)(v15 + *(int *)(v8 + 24));
  v16 = v9[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v7(a1 + v16, a2 + v16, v6);
  *(_BYTE *)(v17 + *(int *)(v8 + 20)) = *(_BYTE *)(v18 + *(int *)(v8 + 20));
  *(_DWORD *)(v17 + *(int *)(v8 + 24)) = *(_DWORD *)(v18 + *(int *)(v8 + 24));
  v19 = v9[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v7(a1 + v19, a2 + v19, v6);
  *(_BYTE *)(v20 + *(int *)(v8 + 20)) = *(_BYTE *)(v21 + *(int *)(v8 + 20));
  *(_DWORD *)(v20 + *(int *)(v8 + 24)) = *(_DWORD *)(v21 + *(int *)(v8 + 24));
  v22 = *(int *)(a3 + 24);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + v22) = *(_DWORD *)(a2 + v22);
  return a1;
}

uint64_t sub_237E527AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_237EE1D70();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v8 = type metadata accessor for SolarEvent(0);
  *(_BYTE *)(a1 + *(int *)(v8 + 20)) = *(_BYTE *)(a2 + *(int *)(v8 + 20));
  *(_DWORD *)(a1 + *(int *)(v8 + 24)) = *(_DWORD *)(a2 + *(int *)(v8 + 24));
  v9 = (int *)type metadata accessor for SolarCycle(0);
  v10 = v9[5];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v7(a1 + v10, a2 + v10, v6);
  *(_BYTE *)(v11 + *(int *)(v8 + 20)) = *(_BYTE *)(v12 + *(int *)(v8 + 20));
  *(_DWORD *)(v11 + *(int *)(v8 + 24)) = *(_DWORD *)(v12 + *(int *)(v8 + 24));
  v13 = v9[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v7(a1 + v13, a2 + v13, v6);
  *(_BYTE *)(v14 + *(int *)(v8 + 20)) = *(_BYTE *)(v15 + *(int *)(v8 + 20));
  *(_DWORD *)(v14 + *(int *)(v8 + 24)) = *(_DWORD *)(v15 + *(int *)(v8 + 24));
  v16 = v9[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v7(a1 + v16, a2 + v16, v6);
  *(_BYTE *)(v17 + *(int *)(v8 + 20)) = *(_BYTE *)(v18 + *(int *)(v8 + 20));
  *(_DWORD *)(v17 + *(int *)(v8 + 24)) = *(_DWORD *)(v18 + *(int *)(v8 + 24));
  v19 = v9[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v7(a1 + v19, a2 + v19, v6);
  *(_BYTE *)(v20 + *(int *)(v8 + 20)) = *(_BYTE *)(v21 + *(int *)(v8 + 20));
  *(_DWORD *)(v20 + *(int *)(v8 + 24)) = *(_DWORD *)(v21 + *(int *)(v8 + 24));
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + *(int *)(a3 + 24)) = *(_DWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_237E52930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_237EE1D70();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = type metadata accessor for SolarEvent(0);
  *(_BYTE *)(a1 + *(int *)(v8 + 20)) = *(_BYTE *)(a2 + *(int *)(v8 + 20));
  *(_DWORD *)(a1 + *(int *)(v8 + 24)) = *(_DWORD *)(a2 + *(int *)(v8 + 24));
  v9 = (int *)type metadata accessor for SolarCycle(0);
  v10 = v9[5];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v7(a1 + v10, a2 + v10, v6);
  *(_BYTE *)(v11 + *(int *)(v8 + 20)) = *(_BYTE *)(v12 + *(int *)(v8 + 20));
  *(_DWORD *)(v11 + *(int *)(v8 + 24)) = *(_DWORD *)(v12 + *(int *)(v8 + 24));
  v13 = v9[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v7(a1 + v13, a2 + v13, v6);
  *(_BYTE *)(v14 + *(int *)(v8 + 20)) = *(_BYTE *)(v15 + *(int *)(v8 + 20));
  *(_DWORD *)(v14 + *(int *)(v8 + 24)) = *(_DWORD *)(v15 + *(int *)(v8 + 24));
  v16 = v9[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v7(a1 + v16, a2 + v16, v6);
  *(_BYTE *)(v17 + *(int *)(v8 + 20)) = *(_BYTE *)(v18 + *(int *)(v8 + 20));
  *(_DWORD *)(v17 + *(int *)(v8 + 24)) = *(_DWORD *)(v18 + *(int *)(v8 + 24));
  v19 = v9[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v7(a1 + v19, a2 + v19, v6);
  *(_BYTE *)(v20 + *(int *)(v8 + 20)) = *(_BYTE *)(v21 + *(int *)(v8 + 20));
  *(_DWORD *)(v20 + *(int *)(v8 + 24)) = *(_DWORD *)(v21 + *(int *)(v8 + 24));
  v22 = *(int *)(a3 + 24);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + v22) = *(_DWORD *)(a2 + v22);
  return a1;
}

uint64_t sub_237E52AB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v6 = sub_237EE1D70();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = type metadata accessor for SolarEvent(0);
  *(_BYTE *)(a1 + *(int *)(v8 + 20)) = *(_BYTE *)(a2 + *(int *)(v8 + 20));
  *(_DWORD *)(a1 + *(int *)(v8 + 24)) = *(_DWORD *)(a2 + *(int *)(v8 + 24));
  v9 = (int *)type metadata accessor for SolarCycle(0);
  v10 = v9[5];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v7(a1 + v10, a2 + v10, v6);
  *(_BYTE *)(v11 + *(int *)(v8 + 20)) = *(_BYTE *)(v12 + *(int *)(v8 + 20));
  *(_DWORD *)(v11 + *(int *)(v8 + 24)) = *(_DWORD *)(v12 + *(int *)(v8 + 24));
  v13 = v9[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v7(a1 + v13, a2 + v13, v6);
  *(_BYTE *)(v14 + *(int *)(v8 + 20)) = *(_BYTE *)(v15 + *(int *)(v8 + 20));
  *(_DWORD *)(v14 + *(int *)(v8 + 24)) = *(_DWORD *)(v15 + *(int *)(v8 + 24));
  v16 = v9[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v7(a1 + v16, a2 + v16, v6);
  *(_BYTE *)(v17 + *(int *)(v8 + 20)) = *(_BYTE *)(v18 + *(int *)(v8 + 20));
  *(_DWORD *)(v17 + *(int *)(v8 + 24)) = *(_DWORD *)(v18 + *(int *)(v8 + 24));
  v19 = v9[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v7(a1 + v19, a2 + v19, v6);
  *(_BYTE *)(v20 + *(int *)(v8 + 20)) = *(_BYTE *)(v21 + *(int *)(v8 + 20));
  *(_DWORD *)(v20 + *(int *)(v8 + 24)) = *(_DWORD *)(v21 + *(int *)(v8 + 24));
  v22 = *(int *)(a3 + 24);
  *(_DWORD *)(a1 + *(int *)(a3 + 20)) = *(_DWORD *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + v22) = *(_DWORD *)(a2 + v22);
  return a1;
}

uint64_t sub_237E52C30()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_237E52C3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SolarCycle(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_237E52C78()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_237E52C84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SolarCycle(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_237E52CC4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SolarCycle(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_237E52D3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  swift_defaultActor_initialize();
  v1 = v0 + OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_currentLocation;
  v2 = type metadata accessor for CurrentLocation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_currentLocationSolarPositionStream;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256899D70);
  v4 = swift_allocObject();
  v5 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 96);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899D48);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  v7 = *(_QWORD *)(*(_QWORD *)v4 + 104);
  type metadata accessor for CPUnfairLock();
  v8 = swift_allocObject();
  *(_DWORD *)(v8 + 16) = 0;
  *(_QWORD *)(v4 + v7) = v8;
  v9 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 112)) = MEMORY[0x24BEE4B00];
  *(_BYTE *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 120)) = 0;
  *(_QWORD *)(v0 + v3) = v4;
  v10 = OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_solarTerminatorStream;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256899D78);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_237EE7820;
  *(_QWORD *)(v11 + 32) = 0;
  *(_BYTE *)(v11 + 40) = 0;
  v12 = swift_allocObject();
  *(_DWORD *)(v12 + 16) = 0;
  *(_QWORD *)(v11 + 48) = v12;
  *(_QWORD *)(v11 + 56) = v9;
  *(_BYTE *)(v11 + 64) = 0;
  *(_QWORD *)(v0 + v10) = v11;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_solarMovementsUpdateTask) = 0;
  v13 = OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_solarCycleStreams;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256899D80);
  v14 = swift_allocObject();
  v15 = swift_allocObject();
  *(_QWORD *)(v0 + v13) = v14;
  *(_DWORD *)(v15 + 16) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_solarCycleCancellationBlockByLocation) = v9;
  *(_QWORD *)(v14 + 16) = v15;
  *(_QWORD *)(v14 + 24) = v9;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_overrideTimeUpdateTask) = 0;
  return v0;
}

uint64_t sub_237E52F00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568995B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BOOL sub_237E52F48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  char v30;
  uint64_t v31;
  char *v32;

  v4 = type metadata accessor for CurrentLocation(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899D20);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568995B8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v31 - v15;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v31 - v18;
  if (!sub_237E5E978(a1, a2))
    return 0;
  v20 = type metadata accessor for SolarPosition(0);
  if (*(float *)(a1 + *(int *)(v20 + 20)) != *(float *)(a2 + *(int *)(v20 + 20))
    || *(float *)(a1 + *(int *)(v20 + 24)) != *(float *)(a2 + *(int *)(v20 + 24)))
  {
    return 0;
  }
  v32 = v13;
  v21 = (uint64_t)v10;
  v22 = type metadata accessor for CurrentLocationSolarPosition(0);
  sub_237E52F00(a1 + *(int *)(v22 + 20), (uint64_t)v19);
  v23 = v21;
  sub_237E52F00(a2 + *(int *)(v22 + 20), (uint64_t)v16);
  v24 = v21 + *(int *)(v8 + 48);
  sub_237E52F00((uint64_t)v19, v21);
  sub_237E52F00((uint64_t)v16, v24);
  v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v25(v21, 1, v4) == 1)
  {
    sub_237E2209C((uint64_t)v16, &qword_2568995B8);
    sub_237E2209C((uint64_t)v19, &qword_2568995B8);
    if (v25(v24, 1, v4) == 1)
    {
      sub_237E2209C(v21, &qword_2568995B8);
      return 1;
    }
    v29 = &qword_256899D20;
    goto LABEL_15;
  }
  v27 = v21;
  v28 = (uint64_t)v32;
  sub_237E52F00(v27, (uint64_t)v32);
  if (v25(v24, 1, v4) == 1)
  {
    v29 = &qword_256899D20;
LABEL_14:
    sub_237E2209C((uint64_t)v16, &qword_2568995B8);
    sub_237E2209C((uint64_t)v19, &qword_2568995B8);
    sub_237E21F00(v28, type metadata accessor for CurrentLocation);
LABEL_15:
    sub_237E2209C(v23, v29);
    return 0;
  }
  sub_237E47CE0(v24, (uint64_t)v7, type metadata accessor for CurrentLocation);
  sub_237E39A5C();
  if ((sub_237EE2EB0() & 1) == 0)
  {
    sub_237E21F00((uint64_t)v7, type metadata accessor for CurrentLocation);
    v29 = &qword_2568995B8;
    goto LABEL_14;
  }
  v30 = sub_237ED7774(v28 + *(int *)(v4 + 20), (uint64_t)&v7[*(int *)(v4 + 20)]);
  sub_237E21F00((uint64_t)v7, type metadata accessor for CurrentLocation);
  sub_237E2209C((uint64_t)v16, &qword_2568995B8);
  sub_237E2209C((uint64_t)v19, &qword_2568995B8);
  sub_237E21F00(v28, type metadata accessor for CurrentLocation);
  sub_237E2209C(v23, &qword_2568995B8);
  return (v30 & 1) != 0;
}

uint64_t sub_237E532AC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_237E532D4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_237E20844;
  return sub_237E50044(a1, v4, v5, v6);
}

uint64_t sub_237E53344(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_237E20844;
  return sub_237E5084C(a1, v4, v5, v6);
}

uint64_t sub_237E533B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  int64_t v36;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899D60);
  v29 = *(_QWORD *)(v4 - 8);
  v30 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899D68);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v28 - v12;
  v14 = *(_QWORD *)(a1 + 64);
  v31 = a1 + 64;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v36 = v15;
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  swift_bridgeObjectRetain();
  result = swift_beginAccess();
  v19 = 0;
  v36 = (unint64_t)(v36 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v21 = v20 | (v19 << 6);
      goto LABEL_23;
    }
    v22 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v36)
      return swift_release();
    v23 = *(_QWORD *)(v31 + 8 * v22);
    ++v19;
    if (!v23)
    {
      v19 = v22 + 1;
      if (v22 + 1 >= v36)
        return swift_release();
      v23 = *(_QWORD *)(v31 + 8 * v19);
      if (!v23)
      {
        v19 = v22 + 2;
        if (v22 + 2 >= v36)
          return swift_release();
        v23 = *(_QWORD *)(v31 + 8 * v19);
        if (!v23)
        {
          v19 = v22 + 3;
          if (v22 + 3 >= v36)
            return swift_release();
          v23 = *(_QWORD *)(v31 + 8 * v19);
          if (!v23)
            break;
        }
      }
    }
LABEL_22:
    v17 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v19 << 6);
LABEL_23:
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v13, *(_QWORD *)(a1 + 56) + *(_QWORD *)(v8 + 72) * v21, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v13, v7);
    v25 = *(_QWORD *)(a2 + 24);
    if (v25 != 1)
    {
      v26 = *(_BYTE *)(a2 + 40);
      v27 = *(_QWORD *)(a2 + 32);
      v32 = *(_QWORD *)(a2 + 16);
      v33 = v25;
      v34 = v27;
      v35 = v26;
      swift_bridgeObjectRetain();
      sub_237EE2C7C();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v30);
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  v24 = v22 + 4;
  if (v24 >= v36)
    return swift_release();
  v23 = *(_QWORD *)(v31 + 8 * v24);
  if (v23)
  {
    v19 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    v19 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v19 >= v36)
      return swift_release();
    v23 = *(_QWORD *)(v31 + 8 * v19);
    ++v24;
    if (v23)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_237E53688(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568995B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

CGColorRef sub_237E536D0(char a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  _QWORD v11[12];

  if (a1 == 2)
    return CGColorCreateGenericGray(1.0, 1.0);
  v11[10] = v1;
  v11[11] = v2;
  if (qword_256897B18 != -1)
    swift_once();
  v4 = (void *)qword_25689DF48;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = 0x4069800000000000;
  v6 = objc_allocWithZone(MEMORY[0x24BEBD4B8]);
  v11[4] = sub_237E2DF20;
  v11[5] = v5;
  v11[0] = MEMORY[0x24BDAC760];
  v11[1] = 1107296256;
  v11[2] = sub_237E7D770;
  v11[3] = &block_descriptor_3;
  v7 = _Block_copy(v11);
  v8 = v4;
  v9 = objc_msgSend(v6, sel_initWithDynamicProvider_, v7);
  _Block_release(v7);
  swift_release();
  v10 = objc_msgSend(v9, sel_CGColor);

  return (CGColorRef)v10;
}

void sub_237E53808(int64x2_t *a1@<X8>)
{
  char *v1;
  char *v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64x2_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = &v1[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView____lazy_storage___scaler];
  if ((v1[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView____lazy_storage___scaler + 40] & 1) != 0)
  {
    v4 = objc_msgSend(v1, sel_traitCollection);
    objc_msgSend(v4, sel_displayScale);
    v13 = v5;

    v6 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
    objc_msgSend(v6, sel_bounds);
    v8 = v7;
    v10 = v9;

    *(_QWORD *)v3 = v13;
    *(_OWORD *)(v3 + 8) = xmmword_237EE79A0;
    *((_QWORD *)v3 + 3) = v8;
    *((_QWORD *)v3 + 4) = v10;
    v3[40] = 0;
    v11 = vdupq_lane_s64(0x408AA00000000000, 0);
    v11.i64[0] = v13;
    v12 = 0x4078900000000000;
  }
  else
  {
    v8 = *((_QWORD *)v3 + 3);
    v10 = *((_QWORD *)v3 + 4);
    v12 = *((_QWORD *)v3 + 2);
    v11 = *(int64x2_t *)v3;
  }
  *a1 = v11;
  a1[1].i64[0] = v12;
  a1[1].i64[1] = v8;
  a1[2].i64[0] = v10;
}

id sub_237E53914(double a1, double a2, double a3, double a4)
{
  char *v4;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  objc_super v14;

  *(_QWORD *)&v4[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_majorTickLayer] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_minorTickMaskLayer] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_minorTickBackgroundLayer] = 0;
  v9 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v4[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_tickLayers] = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v4[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_hourLabels] = v9;
  v10 = &v4[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_leftComplicationFrame];
  *(_OWORD *)v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  v11 = &v4[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_rightComplicationFrame];
  *(_OWORD *)v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  v12 = &v4[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView____lazy_storage___scaler];
  *((_QWORD *)v12 + 4) = 0;
  *(_OWORD *)v12 = 0u;
  *((_OWORD *)v12 + 1) = 0u;
  v12[40] = 1;
  v14.receiver = v4;
  v14.super_class = (Class)type metadata accessor for AnalogClockDialView();
  return objc_msgSendSuper2(&v14, sel_initWithFrame_, a1, a2, a3, a4);
}

void sub_237E53A3C()
{
  char *v0;
  char *v1;
  char *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  int v10;
  int v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  uint64_t v17;
  id v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64x2_t v31;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_tickLayers];
  swift_beginAccess();
  if (*(_QWORD *)v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v27 = sub_237EE30A8();
    swift_bridgeObjectRelease();
    if (v27)
      return;
  }
  else if (*(_QWORD *)((*(_QWORD *)v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    return;
  }
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE56D0]), sel_init);
  v4 = *(void **)&v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_majorTickLayer];
  v29 = OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_majorTickLayer;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_majorTickLayer] = v3;

  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE56D0]), sel_init);
  v6 = *(void **)&v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_minorTickMaskLayer];
  v30 = OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_minorTickMaskLayer;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_minorTickMaskLayer] = v5;

  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE56B8]), sel_init);
  v8 = *(void **)&v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_minorTickBackgroundLayer];
  v28 = OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_minorTickBackgroundLayer;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_minorTickBackgroundLayer] = v7;

  v9 = 0;
  do
  {
    v10 = 2 * (-858993459 * v9 > 0x33333333);
    if (!v9)
      v10 = 1;
    if (v9 == 30)
      v11 = 1;
    else
      v11 = v10;
    v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE56D0]), sel_init);
    sub_237E53808(&v31);
    UIRoundToScale();
    objc_msgSend(v12, sel_setCornerRadius_);
    if (v11 == 2)
    {
      v13 = *(void **)&v0[v30];
      if (!v13)
      {
        __break(1u);
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
    }
    else
    {
      v13 = *(void **)&v0[v29];
      if (!v13)
        goto LABEL_27;
    }
    objc_msgSend(v13, sel_addSublayer_, v12, v28);
    swift_beginAccess();
    v14 = v12;
    MEMORY[0x23B82621C]();
    if (*(_QWORD *)((*(_QWORD *)v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)v2 & 0xFFFFFFFFFFFFFF8)
                                                                                + 0x18) >> 1)
      sub_237EE2BF8();
    ++v9;
    sub_237EE2C10();
    sub_237EE2BEC();
    swift_endAccess();

  }
  while (v9 != 60);
  v15 = *(void **)&v0[v28];
  if (!v15)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  objc_msgSend(v15, sel_setMask_, *(_QWORD *)&v0[v30]);
  v16 = *(void **)&v0[v28];
  if (!v16)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568982F8);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_237EE79B0;
  sub_237E55D54();
  v18 = v16;
  *(_QWORD *)(v17 + 32) = sub_237EE2E98();
  *(_QWORD *)(v17 + 40) = sub_237EE2E98();
  *(_QWORD *)(v17 + 48) = sub_237EE2E98();
  sub_237EE2BEC();
  v19 = (void *)sub_237EE2BBC();
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_setLocations_, v19);

  v20 = *(void **)&v1[v28];
  if (!v20)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  objc_msgSend(v20, sel_setType_, *MEMORY[0x24BDE5C48]);
  v21 = *(void **)&v1[v28];
  if (!v21)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  objc_msgSend(v21, sel_setStartPoint_, 0.0, 0.0);
  v22 = *(void **)&v1[v28];
  if (!v22)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  objc_msgSend(v22, sel_setEndPoint_, 1.0, 0.0);
  v23 = objc_msgSend(v1, sel_layer);
  if (!*(_QWORD *)&v1[v28])
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v24 = v23;
  objc_msgSend(v23, sel_addSublayer_);

  v25 = objc_msgSend(v1, sel_layer);
  if (*(_QWORD *)&v1[v29])
  {
    v26 = v25;
    objc_msgSend(v25, sel_addSublayer_);

    return;
  }
LABEL_34:
  __break(1u);
}

void sub_237E53E84()
{
  char *v0;
  void *v1;
  char *v2;
  uint64_t v3;
  uint64_t i;
  id v5;
  uint64_t v6;
  void *v7;
  double v8;
  double v9;
  CGFloat v10;
  __CFString *v11;
  CTFontRef v12;
  id v13;
  int64x2_t v14;
  double v15;
  double v16;
  double v17;

  v1 = v0;
  v2 = &v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_hourLabels];
  swift_beginAccess();
  if (*(_QWORD *)v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_237EE30A8();
    swift_bridgeObjectRelease();
    if (v3)
      return;
  }
  else if (*(_QWORD *)((*(_QWORD *)v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    return;
  }
  for (i = 3; i != 15; i += 3)
  {
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD708]), sel_init);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25689D9E0);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_237EE55E0;
    *(_QWORD *)(v6 + 56) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v6 + 64) = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v6 + 32) = i;
    sub_237EE2A60();
    swift_bridgeObjectRelease();
    v7 = (void *)sub_237EE2A54();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_setText_, v7);

    sub_237E53808(&v14);
    if (qword_256897B30 != -1)
      swift_once();
    v8 = *(double *)&v14.i64[1];
    v9 = v16;
    if (v17 < v16)
      v9 = v17;
    if (v15 < *(double *)&v14.i64[1])
      v8 = v15;
    v10 = *(double *)&qword_25689DF60 * (v9 / v8);
    v11 = (__CFString *)sub_237EE2A54();
    v12 = CTFontCreateWithNameAndOptions(v11, v10, 0, 0x20000uLL);

    objc_msgSend(v5, sel_setFont_, v12);
    objc_msgSend(v5, sel_sizeToFit);
    objc_msgSend(v1, sel_addSubview_, v5);
    swift_beginAccess();
    v13 = v5;
    MEMORY[0x23B82621C]();
    if (*(_QWORD *)((*(_QWORD *)v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)v2 & 0xFFFFFFFFFFFFFF8)
                                                                                + 0x18) >> 1)
      sub_237EE2BF8();
    sub_237EE2C10();
    sub_237EE2BEC();
    swift_endAccess();

  }
}

void sub_237E54148()
{
  char *v0;
  void *v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  id v43;
  void *v44;
  id v45;
  uint64_t v46;
  id v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  char *v52;
  uint64_t aBlock;
  uint64_t v54;
  id (*v55)(uint64_t, void *);
  void *v56;
  id (*v57)(uint64_t);
  uint64_t v58;
  objc_super v59;

  v59.receiver = v0;
  v59.super_class = (Class)type metadata accessor for AnalogClockDialView();
  objc_msgSendSuper2(&v59, sel_layoutSubviews);
  sub_237E53A3C();
  sub_237E53E84();
  v1 = *(void **)&v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_majorTickLayer];
  if (!v1)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v2 = v1;
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v2, sel_setFrame_);

  v3 = *(void **)&v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_minorTickMaskLayer];
  if (!v3)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v4 = v3;
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v4, sel_setFrame_);

  v5 = OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_minorTickBackgroundLayer;
  v6 = *(void **)&v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_minorTickBackgroundLayer];
  if (!v6)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = v6;
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v7, sel_setFrame_);

  v8 = *(void **)&v0[v5];
  if (v8)
  {
    v52 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256899DF8);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_237EE79C0;
    v10 = qword_256897B20;
    v51 = v8;
    if (v10 != -1)
      swift_once();
    v11 = (void *)qword_25689DF50;
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = v11;
    *(_QWORD *)(v12 + 24) = 0x4059800000000000;
    v13 = objc_allocWithZone(MEMORY[0x24BEBD4B8]);
    v57 = sub_237E2DF74;
    v58 = v12;
    v14 = MEMORY[0x24BDAC760];
    aBlock = MEMORY[0x24BDAC760];
    v54 = 1107296256;
    v55 = sub_237E7D770;
    v56 = &block_descriptor_7_0;
    v15 = _Block_copy(&aBlock);
    v16 = v11;
    v17 = objc_msgSend(v13, sel_initWithDynamicProvider_, v15);
    _Block_release(v15);
    swift_release();
    v18 = objc_msgSend(v17, sel_CGColor);

    type metadata accessor for CGColor(0);
    v20 = v19;
    *(_QWORD *)(v9 + 56) = v19;
    *(_QWORD *)(v9 + 32) = v18;
    if (qword_256897B28 != -1)
      swift_once();
    v21 = (void *)qword_25689DF58;
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = v21;
    *(_QWORD *)(v22 + 24) = 0x4059800000000000;
    v23 = objc_allocWithZone(MEMORY[0x24BEBD4B8]);
    v57 = sub_237E2DF74;
    v58 = v22;
    aBlock = v14;
    v54 = 1107296256;
    v55 = sub_237E7D770;
    v56 = &block_descriptor_14;
    v24 = _Block_copy(&aBlock);
    v25 = v21;
    v26 = objc_msgSend(v23, sel_initWithDynamicProvider_, v24);
    _Block_release(v24);
    swift_release();
    v27 = objc_msgSend(v26, sel_CGColor);

    *(_QWORD *)(v9 + 88) = v20;
    *(_QWORD *)(v9 + 64) = v27;
    v28 = (void *)qword_25689DF50;
    v29 = swift_allocObject();
    *(_QWORD *)(v29 + 16) = v28;
    *(_QWORD *)(v29 + 24) = 0x4059800000000000;
    v30 = objc_allocWithZone(MEMORY[0x24BEBD4B8]);
    v57 = sub_237E2DF74;
    v58 = v29;
    aBlock = v14;
    v54 = 1107296256;
    v55 = sub_237E7D770;
    v56 = &block_descriptor_21;
    v31 = _Block_copy(&aBlock);
    v32 = v28;
    v33 = objc_msgSend(v30, sel_initWithDynamicProvider_, v31);
    _Block_release(v31);
    swift_release();
    v34 = objc_msgSend(v33, sel_CGColor);

    *(_QWORD *)(v9 + 120) = v20;
    *(_QWORD *)(v9 + 96) = v34;
    v35 = (void *)sub_237EE2BBC();
    swift_bridgeObjectRelease();
    objc_msgSend(v51, sel_setColors_, v35);

    v36 = &v52[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_hourLabels];
    swift_beginAccess();
    v37 = *(_QWORD *)v36;
    v38 = v14;
    if (v37 >> 62)
    {
      swift_bridgeObjectRetain();
      v39 = sub_237EE30A8();
      if (v39)
        goto LABEL_11;
    }
    else
    {
      v39 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v39)
      {
LABEL_11:
        v40 = objc_opt_self();
        if (v39 >= 1)
        {
          v41 = (void *)v40;
          v42 = 0;
          do
          {
            if ((v37 & 0xC000000000000001) != 0)
              v43 = (id)MEMORY[0x23B826624](v42, v37);
            else
              v43 = *(id *)(v37 + 8 * v42 + 32);
            v44 = v43;
            ++v42;
            v45 = objc_msgSend(v41, sel_whiteColor);
            v46 = swift_allocObject();
            *(_QWORD *)(v46 + 16) = v45;
            *(_QWORD *)(v46 + 24) = 0x4069800000000000;
            v47 = objc_allocWithZone(MEMORY[0x24BEBD4B8]);
            v57 = sub_237E2DF74;
            v58 = v46;
            aBlock = v38;
            v54 = 1107296256;
            v55 = sub_237E7D770;
            v56 = &block_descriptor_28;
            v48 = _Block_copy(&aBlock);
            v49 = v45;
            v50 = objc_msgSend(v47, sel_initWithDynamicProvider_, v48);
            _Block_release(v48);

            swift_release();
            objc_msgSend(v44, sel_setTextColor_, v50);

          }
          while (v39 != v42);
          goto LABEL_18;
        }
        __break(1u);
        goto LABEL_20;
      }
    }
LABEL_18:
    swift_bridgeObjectRelease();
    sub_237E5476C();
    sub_237E55650();
    return;
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_237E5476C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  double v14;
  CGFloat v15;
  double *v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  unint64_t v28;
  double v29;
  double v30;
  double v31;
  double v32;
  long double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  id v39;
  double MidX;
  __double2 v41;
  CGFloat tx;
  CGFloat ty;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  CGColorRef v47;
  unsigned int v48;
  double v49;
  id v50;
  CGFloat v51;
  CGFloat v52;
  CGFloat v53;
  CGFloat v54;
  double v55;
  double v56;
  double v57;
  CGFloat v58;
  CGFloat v59;
  CGFloat v60;
  CGFloat v61;
  uint64_t v62;
  CGFloat v63;
  long double v64;
  CGFloat v65;
  CGFloat v66;
  CGFloat v67;
  CGFloat v68;
  double v69;
  double v70;
  double v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int (*v75)(uint64_t, uint64_t, _QWORD *);
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  void (*v79)(char *, uint64_t, _QWORD *);
  NSObject *v80;
  os_log_type_t v81;
  uint8_t *v82;
  double v83;
  double v84;
  double v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unsigned int (*v89)(uint64_t, uint64_t, _QWORD *);
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  void (*v93)(uint64_t, uint64_t, _QWORD *);
  NSObject *v94;
  os_log_type_t v95;
  uint8_t *v96;
  __int128 v98;
  CGFloat *p_b;
  char *v100;
  uint64_t v101;
  double v102;
  double v103;
  CGFloat v104;
  CGFloat v105;
  CGFloat v106;
  CGFloat v107;
  CGFloat v108;
  CGFloat v109;
  CGFloat v110;
  CGFloat v111;
  CGFloat height;
  CGFloat width;
  CGFloat y;
  CGFloat x;
  char *v116;
  char *v117;
  double *v118;
  uint64_t v119;
  CGFloat v120;
  CGFloat v121;
  CGFloat v122;
  CGFloat v123;
  _QWORD *v124;
  CGFloat v125;
  CGFloat v126;
  CGFloat v127;
  CGFloat v128;
  CGFloat v129;
  CGFloat v130;
  double v131;
  uint64_t v132;
  unint64_t v133;
  unint64_t v134;
  __int128 v135;
  __int128 v136;
  uint64_t v137;
  id v138;
  CGAffineTransform v139;
  CGAffineTransform v140;
  CGAffineTransform v141;
  int64x2_t v142;
  CGRect v143;
  CGRect v144;
  CGRect v145;
  CGRect v146;
  CGRect v147;
  CGRect v148;
  CGRect v149;
  CGRect v150;
  CGRect v151;
  CGRect v152;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6548);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v98 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v98 - v5;
  v7 = (_QWORD *)sub_237EE1FB0();
  v8 = *(v7 - 1);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (uint64_t)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v98 - v12;
  sub_237E53808(&v142);
  UIFloorToScale();
  v15 = v14;
  v16 = (double *)&v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView____lazy_storage___scaler];
  UIFloorToScale();
  v18 = v17;
  UIFloorToScale();
  v20 = v19;
  UIFloorToScale();
  v22 = v21;
  objc_msgSend(v0, sel_bounds);
  v144 = CGRectInset(v143, 0.0, v15);
  y = v144.origin.y;
  x = v144.origin.x;
  height = v144.size.height;
  width = v144.size.width;
  objc_msgSend(v0, sel_bounds);
  v146 = CGRectInset(v145, v18, 0.0);
  v110 = v146.origin.y;
  v111 = v146.origin.x;
  v108 = v146.size.height;
  v109 = v146.size.width;
  objc_msgSend(v0, sel_bounds);
  v148 = CGRectInset(v147, 0.0, v20);
  v122 = v148.origin.y;
  v123 = v148.origin.x;
  v120 = v148.size.height;
  v121 = v148.size.width;
  objc_msgSend(v0, sel_bounds);
  v150 = CGRectInset(v149, v22, 0.0);
  v106 = v150.origin.y;
  v107 = v150.origin.x;
  v104 = v150.size.height;
  v105 = v150.size.width;
  v138 = v0;
  v23 = (uint64_t)&v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_tickLayers];
  swift_beginAccess();
  v24 = *(_QWORD *)v23;
  if (*(_QWORD *)v23 >> 62)
    goto LABEL_53;
  v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v116 = v6;
    v117 = v3;
    v134 = v24;
    if (v24 >> 62)
      break;
    v26 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v28 = v134;
    if (!v26)
      return swift_bridgeObjectRelease();
LABEL_5:
    v23 = 0;
    v3 = 0;
    v131 = 6.28318531 / (double)v25;
    v133 = v28 & 0xC000000000000001;
    p_b = &v141.b;
    v29 = *MEMORY[0x24BDBD8B8];
    v129 = *(double *)(MEMORY[0x24BDBD8B8] + 8);
    v130 = v29;
    v30 = *(double *)(MEMORY[0x24BDBD8B8] + 16);
    v127 = *(double *)(MEMORY[0x24BDBD8B8] + 24);
    v128 = v30;
    v31 = *(double *)(MEMORY[0x24BDBD8B8] + 32);
    v125 = *(double *)(MEMORY[0x24BDBD8B8] + 40);
    v126 = v31;
    *(_QWORD *)&v27 = 134349056;
    v98 = v27;
    v103 = -4.71238898;
    v102 = -3.14159265;
    v124 = v7;
    v118 = v16;
    v119 = v8;
    v100 = v13;
    v101 = v10;
    v132 = v26;
    while (1)
    {
      v24 = v133 ? MEMORY[0x23B826624](v23, v28) : (unint64_t)*(id *)(v28 + 8 * v23 + 32);
      v6 = (char *)v24;
      if (__OFADD__(v23, 1))
        break;
      v137 = v23 + 1;
      v48 = 2 * (&v3[5 * (v23 / 5uLL)] != 0);
      if (!v23)
        v48 = 1;
      if (v23 == 30)
        v10 = 1;
      else
        v10 = v48;
      v49 = v131 * (double)v23 + -1.57079633;
      v50 = v138;
      objc_msgSend(v138, sel_bounds, v98, p_b);
      v55 = sub_237E55244(v49, v51, v52, v53, v54);
      v57 = v56;
      objc_msgSend(v50, sel_bounds);
      *(double *)&v62 = COERCE_DOUBLE(sub_237E55440(v49, v58, v59, v60, v61));
      v63 = *(double *)&v62;
      if ((_DWORD)v10 != 2 && (v10 & 1) == 0)
      {
        switch(v62)
        {
          case 1:
          case 4:
            v64 = v49;
            v66 = y;
            v65 = x;
            v68 = height;
            v67 = width;
            goto LABEL_32;
          case 2:
          case 8:
            v64 = v49;
            v66 = v110;
            v65 = v111;
            v68 = v108;
            v67 = v109;
            goto LABEL_32;
          default:
            goto LABEL_33;
        }
      }
      switch(v62)
      {
        case 1:
        case 4:
          v64 = v49;
          v66 = v122;
          v65 = v123;
          v68 = v120;
          v67 = v121;
          goto LABEL_32;
        case 2:
        case 8:
          v64 = v49;
          v66 = v106;
          v65 = v107;
          v68 = v104;
          v67 = v105;
LABEL_32:
          v69 = sub_237E55244(v64, v65, v66, v67, v68);
          v71 = v70;
          break;
        default:
LABEL_33:
          if (qword_2542C6458 != -1)
            swift_once();
          v72 = qword_2542C64F8 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_rendering_private;
          swift_beginAccess();
          v73 = v72;
          v74 = (uint64_t)v116;
          sub_237E2CAA0(v73, (uint64_t)v116);
          v75 = *(unsigned int (**)(uint64_t, uint64_t, _QWORD *))(v8 + 48);
          v76 = v8;
          v77 = v124;
          if (v75(v74, 1, v124) == 1)
          {
            v78 = (uint64_t)v100;
            sub_237E6072C((uint64_t)v100);
            sub_237E4B270(v74);
          }
          else
          {
            v79 = *(void (**)(char *, uint64_t, _QWORD *))(v76 + 32);
            v78 = (uint64_t)v100;
            v79(v100, v74, v77);
          }
          v80 = sub_237EE1F98();
          v81 = sub_237EE2D9C();
          if (os_log_type_enabled(v80, v81))
          {
            v82 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)v82 = v98;
            v141.a = v63;
            sub_237EE2EE0();
            _os_log_impl(&dword_237E17000, v80, v81, "Invalid frame edge %{public}lu", v82, 0xCu);
            MEMORY[0x23B8272A8](v82, -1, -1);
          }

          v8 = v119;
          (*(void (**)(uint64_t, _QWORD *))(v119 + 8))(v78, v124);
          v69 = sub_237E55244(v49, v123, v122, v121, v120);
          v71 = v83;
          v16 = v118;
          break;
      }
      objc_msgSend(v6, sel_cornerRadius);
      v85 = v84;
      v32 = v49;
      switch(*(_QWORD *)&v63)
      {
        case 1:
          v32 = v49 + v103;
          break;
        case 2:
          v32 = v49 + v102;
          break;
        case 4:
          v32 = v49 + -1.57079633;
          break;
        case 8:
          break;
        default:
          if (qword_2542C6458 != -1)
            swift_once();
          v86 = qword_2542C64F8 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_rendering_private;
          swift_beginAccess();
          v87 = v86;
          v88 = (uint64_t)v117;
          sub_237E2CAA0(v87, (uint64_t)v117);
          v89 = *(unsigned int (**)(uint64_t, uint64_t, _QWORD *))(v8 + 48);
          v90 = v8;
          v91 = v124;
          if (v89(v88, 1, v124) == 1)
          {
            v92 = v101;
            sub_237E6072C(v101);
            sub_237E4B270(v88);
          }
          else
          {
            v93 = *(void (**)(uint64_t, uint64_t, _QWORD *))(v90 + 32);
            v92 = v101;
            v93(v101, v88, v91);
          }
          v94 = sub_237EE1F98();
          v95 = sub_237EE2D9C();
          if (os_log_type_enabled(v94, v95))
          {
            v96 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)v96 = v98;
            v141.a = v63;
            sub_237EE2EE0();
            _os_log_impl(&dword_237E17000, v94, v95, "Invalid frame edge %{public}lu", v96, 0xCu);
            MEMORY[0x23B8272A8](v96, -1, -1);
          }

          v8 = v119;
          (*(void (**)(uint64_t, _QWORD *))(v119 + 8))(v92, v124);
          v32 = 0.0;
          v16 = v118;
          break;
      }
      v33 = v85 / cos(v32) - v85;
      v34 = sqrt(v69 * v69 + v71 * v71) + v33;
      v13 = (char *)&unk_2509CA000;
      v141.a = v130;
      v141.b = v129;
      v141.c = v128;
      v141.d = v127;
      v35 = sqrt(v55 * v55 + v57 * v57) - v34 - v33;
      v141.tx = v126;
      v141.ty = v125;
      objc_msgSend(v6, sel_setAffineTransform_, &v141);
      v36 = v16[1];
      if (v16[2] < v36)
        v36 = v16[2];
      if (v16[4] >= v16[3])
        v37 = v16[3];
      else
        v37 = v16[4];
      v38 = 2.0;
      if ((_DWORD)v10 != 2)
        v38 = 3.5;
      objc_msgSend(v6, sel_setFrame_, 0.0, 0.0, v35, v38 * (v37 / v36));
      v7 = &unk_2509CA000;
      v39 = v138;
      objc_msgSend(v138, sel_bounds);
      MidX = CGRectGetMidX(v151);
      v41 = __sincos_stret(v49);
      objc_msgSend(v39, sel_bounds);
      objc_msgSend(v6, sel_setPosition_, v41.__cosval * v35 * 0.5 + MidX, v41.__sinval * v35 * 0.5 + CGRectGetMidY(v152));
      CGAffineTransformMakeTranslation(&v141, v34, 0.0);
      v135 = *(_OWORD *)&v141.c;
      v136 = *(_OWORD *)&v141.a;
      tx = v141.tx;
      ty = v141.ty;
      CGAffineTransformMakeRotation(&v141, v49);
      v44 = *(_OWORD *)&v141.a;
      v45 = *(_OWORD *)&v141.c;
      v46 = *(_OWORD *)&v141.tx;
      *(_OWORD *)&v141.a = v136;
      *(_OWORD *)&v141.c = v135;
      v141.tx = tx;
      v141.ty = ty;
      *(_OWORD *)&v140.a = v44;
      *(_OWORD *)&v140.c = v45;
      *(_OWORD *)&v140.tx = v46;
      CGAffineTransformConcat(&v139, &v141, &v140);
      v141 = v139;
      objc_msgSend(v6, sel_setAffineTransform_, &v141);
      v47 = sub_237E536D0(v10);
      objc_msgSend(v6, sel_setBackgroundColor_, v47);

      --v3;
      ++v23;
      v28 = v134;
      if (v137 == v132)
        return swift_bridgeObjectRelease();
    }
    __break(1u);
LABEL_53:
    v134 = v24;
    swift_bridgeObjectRetain();
    v25 = sub_237EE30A8();
    swift_bridgeObjectRelease();
    v24 = *(_QWORD *)v23;
  }
  swift_bridgeObjectRetain();
  v26 = sub_237EE30A8();
  v28 = v134;
  if (v26)
    goto LABEL_5;
  return swift_bridgeObjectRelease();
}

double sub_237E55244(long double a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  double i;
  long double v10;
  CGFloat Width;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  CGRect v18;
  CGRect v19;
  CGRect v20;
  CGRect v21;
  CGRect v22;
  CGRect v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;

  for (i = fmod(a1, 6.28318531); i < 0.0; i = i + 6.28318531)
    ;
  v18.origin.x = a2;
  v18.origin.y = a3;
  v18.size.width = a4;
  v18.size.height = a5;
  v10 = CGRectGetHeight(v18) * 0.5;
  v19.origin.x = a2;
  v19.origin.y = a3;
  v19.size.width = a4;
  v19.size.height = a5;
  Width = CGRectGetWidth(v19);
  v12 = atan2(v10, Width * 0.5);
  if (i < v12)
    goto LABEL_4;
  if (i < 3.14159265 - v12)
  {
    v22.origin.x = a2;
    v22.origin.y = a3;
    v22.size.width = a4;
    v22.size.height = a5;
    v15 = CGRectGetHeight(v22) * 0.5;
    v16 = 1.57079633;
LABEL_12:
    v13 = v15 * tan(i + v16);
    v26.origin.x = a2;
    v26.origin.y = a3;
    v26.size.width = a4;
    v26.size.height = a5;
    CGRectGetHeight(v26);
    return v13;
  }
  if (i < v12 + 3.14159265)
  {
    v23.origin.x = a2;
    v23.origin.y = a3;
    v23.size.width = a4;
    v23.size.height = a5;
    v13 = CGRectGetWidth(v23) * 0.5;
    v24.origin.x = a2;
    v24.origin.y = a3;
    v24.size.width = a4;
    v24.size.height = a5;
    CGRectGetWidth(v24);
    v14 = i + 3.14159265;
    goto LABEL_5;
  }
  if (i < 6.28318531 - v12)
  {
    v25.origin.x = a2;
    v25.origin.y = a3;
    v25.size.width = a4;
    v25.size.height = a5;
    v15 = CGRectGetHeight(v25) * 0.5;
    v16 = 4.71238898;
    goto LABEL_12;
  }
LABEL_4:
  v20.origin.x = a2;
  v20.origin.y = a3;
  v20.size.width = a4;
  v20.size.height = a5;
  v13 = CGRectGetWidth(v20) * 0.5;
  v21.origin.x = a2;
  v21.origin.y = a3;
  v21.size.width = a4;
  v21.size.height = a5;
  CGRectGetWidth(v21);
  v14 = i;
LABEL_5:
  tan(v14);
  return v13;
}

uint64_t sub_237E55440(long double a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  double i;
  CGFloat v10;
  double v11;
  long double v12;
  double n;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  long double v17;
  CGFloat Width;
  long double v19;
  double j;
  long double v22;
  CGFloat v23;
  long double v24;
  double k;
  long double v26;
  double m;
  CGRect v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;

  for (i = remainder(a1, 6.28318531); i < 0.0; i = i + 6.28318531)
    ;
  if (i >= 4.71238898)
  {
    v30.origin.x = a2;
    v30.origin.y = a3;
    v30.size.width = a4;
    v30.size.height = a5;
    v17 = CGRectGetHeight(v30) * -0.5;
    v31.origin.x = a2;
    v31.origin.y = a3;
    v31.size.width = a4;
    v31.size.height = a5;
    Width = CGRectGetWidth(v31);
    v19 = atan2(v17, Width * 0.5);
    for (j = remainder(v19, 6.28318531); j < 0.0; j = j + 6.28318531)
      ;
    if (i < j)
      return 1;
    else
      return 8;
  }
  else if (i >= 3.14159265)
  {
    v32.origin.x = a2;
    v32.origin.y = a3;
    v32.size.width = a4;
    v32.size.height = a5;
    v22 = CGRectGetHeight(v32) * -0.5;
    v33.origin.x = a2;
    v33.origin.y = a3;
    v33.size.width = a4;
    v33.size.height = a5;
    v23 = CGRectGetWidth(v33);
    v24 = atan2(v22, v23 * -0.5);
    for (k = remainder(v24, 6.28318531); k < 0.0; k = k + 6.28318531)
      ;
    if (i >= k)
      return 1;
    else
      return 2;
  }
  else
  {
    v28.origin.x = a2;
    v28.origin.y = a3;
    v28.size.width = a4;
    v28.size.height = a5;
    v10 = CGRectGetHeight(v28) * 0.5;
    v29.origin.x = a2;
    v29.origin.y = a3;
    v29.size.width = a4;
    v29.size.height = a5;
    v11 = CGRectGetWidth(v29);
    if (i >= 1.57079633)
    {
      v26 = atan2(v10, v11 * -0.5);
      for (m = remainder(v26, 6.28318531); m < 0.0; m = m + 6.28318531)
        ;
      v14 = i < m;
      v15 = 2;
      v16 = 4;
    }
    else
    {
      v12 = atan2(v10, v11 * 0.5);
      for (n = remainder(v12, 6.28318531); n < 0.0; n = n + 6.28318531)
        ;
      v14 = i < n;
      v15 = 4;
      v16 = 8;
    }
    if (v14)
      return v16;
    else
      return v15;
  }
}

uint64_t sub_237E55650()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  SEL *v7;
  uint64_t v8;
  id v9;
  id v10;
  CGFloat v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  CGFloat Height;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  id v35;
  SEL *v36;
  id v37;
  double v38;
  id v39;
  id v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double *v50;
  double *v51;
  double *v52;
  double v53;
  int64x2_t v54;
  int64x2_t v55;
  int64x2_t v56;
  int64x2_t v57;
  int64x2_t v58;
  CGRect v59;
  CGRect v60;
  CGRect v61;
  CGRect v62;
  CGRect v63;

  v1 = &v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_hourLabels];
  swift_beginAccess();
  v2 = *(_QWORD *)v1;
  if (*(_QWORD *)v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_237EE30A8();
    swift_bridgeObjectRelease();
    v2 = *(_QWORD *)v1;
    if (*(_QWORD *)v1 >> 62)
    {
      swift_bridgeObjectRetain();
      result = sub_237EE30A8();
      v4 = result;
      if (result)
        goto LABEL_4;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v4)
    return swift_bridgeObjectRelease();
LABEL_4:
  if (v4 >= 1)
  {
    v6 = 0;
    v52 = (double *)&v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_leftComplicationFrame];
    v51 = (double *)&v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_rightComplicationFrame];
    v7 = (SEL *)&unk_2509CA000;
    v53 = 6.28318531 / (double)v3;
    while (1)
    {
      v9 = (v2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x23B826624](v6, v2) : *(id *)(v2 + 8 * v6 + 32);
      v10 = v9;
      objc_msgSend(v10, v7[422]);
      UIRectIntegralWithViewScale();
      objc_msgSend(v10, sel_setFrame_);

      objc_msgSend(v0, sel_bounds);
      v15 = sub_237E55244(v53 * (double)v6, v11, v12, v13, v14);
      v17 = sqrt(v15 * v15 + v16 * v16);
      if (!v6)
        break;
      if (v6 == 2)
      {
        sub_237E53808(&v56);
        UIFloorToScale();
        goto LABEL_18;
      }
      if (v6 == 1)
      {
        sub_237E53808(&v55);
        UICeilToScale();
        v19 = v18;
        objc_msgSend(v10, sel__capOffsetFromBoundsTop);
        v21 = v20;
        objc_msgSend(v10, sel_bounds);
        Height = CGRectGetHeight(v59);
        v23 = v17 - v19;
        v24 = Height * 0.5 - v21;
        goto LABEL_21;
      }
      sub_237E53808(&v57);
      UIFloorToScale();
      v26 = v27;
      objc_msgSend(v10, sel__firstLineBaselineOffsetFromBoundsTop);
      v29 = v28;
      objc_msgSend(v10, sel_bounds);
      v24 = v29 + CGRectGetHeight(v61) * -0.5;
LABEL_20:
      v23 = v17 - v26;
LABEL_21:
      v30 = v23 + v24;
      objc_msgSend(v0, sel_bounds);
      UIRectGetCenter();
      UIPointRoundToViewScale();
      v32 = v31;
      v34 = v33;
      v35 = v10;
      v36 = v7;
      objc_msgSend(v35, v7[422]);
      v37 = objc_msgSend(v0, sel_traitCollection);
      objc_msgSend(v37, sel_displayScale);

      v38 = v32;
      UIRectIntegralWithScale();
      objc_msgSend(v35, sel_setFrame_);

      __sincos_stret(v53 * (double)v6);
      v39 = v35;
      v40 = objc_msgSend(v0, sel_traitCollection);
      objc_msgSend(v40, sel_displayScale);

      UIPointRoundToScale();
      objc_msgSend(v39, sel_setCenter_);

      if (v6 == 3)
      {

        v7 = v36;
      }
      else
      {
        v7 = v36;
        if (v6 != 1)
        {
          objc_msgSend(v39, sel_bounds);
          v41 = v30 - CGRectGetWidth(v62) * 0.5;
          sub_237E53808(&v58);
          UIRoundToScale();
          v43 = v42;
          objc_msgSend(v0, sel_bounds);
          v44 = CGRectGetHeight(v63) - (v43 + v43);
          UIRoundToScale();
          v46 = v45;

          v47 = v34 - v44 * 0.5 + v46;
          v8 = v4;
          if (v6)
          {
            v48 = v38 - v41 + v46;
            v49 = v38 - v46;
            v50 = v52;
          }
          else
          {
            v48 = v38 + v46;
            v49 = v38 + v41 - v46;
            v50 = v51;
          }
          *v50 = v48;
          v50[1] = v47;
          v50[2] = v49 - v48;
          v50[3] = v34 + v44 * 0.5 - v46 - v47;
          goto LABEL_8;
        }

      }
      v8 = v4;
LABEL_8:
      if (v8 == ++v6)
        return swift_bridgeObjectRelease();
    }
    sub_237E53808(&v54);
    UICeilToScale();
LABEL_18:
    v26 = v25;
    objc_msgSend(v10, sel_bounds);
    v24 = CGRectGetWidth(v60) * -0.5;
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

id sub_237E55C60()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AnalogClockDialView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for AnalogClockDialView()
{
  return objc_opt_self();
}

uint64_t sub_237E55D18()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

unint64_t sub_237E55D54()
{
  unint64_t result;

  result = qword_256899DF0;
  if (!qword_256899DF0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256899DF0);
  }
  return result;
}

void sub_237E55D90()
{
  char *v0;
  uint64_t v1;
  char *v2;
  char *v3;
  char *v4;

  *(_QWORD *)&v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_majorTickLayer] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_minorTickMaskLayer] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_minorTickBackgroundLayer] = 0;
  v1 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_tickLayers] = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_hourLabels] = v1;
  v2 = &v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_leftComplicationFrame];
  *(_OWORD *)v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  v3 = &v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView_rightComplicationFrame];
  *(_OWORD *)v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  v4 = &v0[OBJC_IVAR____TtC11ClockPoster19AnalogClockDialView____lazy_storage___scaler];
  *((_QWORD *)v4 + 4) = 0;
  *(_OWORD *)v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  v4[40] = 1;

  sub_237EE309C();
  __break(1u);
}

id sub_237E55EA0(void *a1, unint64_t a2, uint64_t a3, int a4, double a5)
{
  double v5;
  double v6;
  CGFloat v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  float64x2_t v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  const __CTRun *v29;
  const __CFDictionary *v31;
  id v32;
  id v33;
  CFIndex GlyphCount;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t inited;
  uint64_t v50;
  double v51;
  unint64_t v52;
  uint64_t v53;
  CGGlyph v54;
  double v55;
  uint64_t v56;
  uint64_t v57;
  double (*v58)(uint64_t, uint64_t);
  double v59;
  uint64_t v60;
  uint64_t v61;
  double v62;
  uint64_t v63;
  uint64_t v64;
  double v65;
  double v66;
  CGFloat v67;
  uint64_t v68;
  uint64_t v69;
  CGFloat v70;
  uint64_t v71;
  uint64_t v72;
  CGFloat v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  double v78;
  CGPathRef v79;
  id v80;
  uint64_t v81;
  id v82;
  void *v84;
  const __CTLine *v85;
  void *v86;
  const __CTFont *v87;
  uint64_t v88;
  unint64_t v89;
  id v90;
  double v91;
  uint64_t v92;
  uint64_t v93;
  int v94;
  double v95;
  void *v96;
  unint64_t v97;
  double Width;
  const CGPath *v99;
  const __CFDictionary *v100;
  unint64_t v101;
  const __CTRun *run;
  uint64_t v104;
  id v105;
  double v106;
  unint64_t v107;
  double v108;
  uint64_t v109;
  unint64_t v110;
  const __CTFont *font;
  const __CTFont *v112;
  __int128 v113;
  uint64_t v114;
  uint64_t v115;
  CGAffineTransform matrix;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  _OWORD v120[2];
  uint64_t v121;
  _OWORD v122[3];
  uint64_t v123;
  CFRange v124;
  CFRange v125;
  CFRange v126;
  CGRect v127;

  LODWORD(v7) = a4;
  v123 = *MEMORY[0x24BDAC8D0];
  v105 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD420]), sel_init);
  v90 = (id)a3;
  objc_msgSend((id)a3, sel_bounds);
  Width = CGRectGetWidth(v127);
  v99 = (const CGPath *)a2;
  v11 = sub_237E58A58((const CGPath *)a2);
  if (*(_QWORD *)(v11 + 16))
  {
    v12 = *(_QWORD *)(v11 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v13 = *(_QWORD *)(v12 + 16);
    if (!v13)
      goto LABEL_17;
    swift_bridgeObjectRetain();
    v14 = 0;
    v15 = v13 - 1;
    v16 = 0.0;
    while (1)
    {
      v17 = *(_QWORD *)(v12 + 8 * v14 + 32);
      v18 = *(_QWORD *)(v17 + 16);
      switch(v18)
      {
        case 2:
          v22 = vsubq_f64(*(float64x2_t *)(v17 + 48), *(float64x2_t *)(v17 + 32));
          v21 = sqrt(vaddvq_f64(vmulq_f64(v22, v22)));
          break;
        case 3:
          v23 = *(double *)(v17 + 32);
          v24 = *(double *)(v17 + 40);
          v26 = *(double *)(v17 + 48);
          v25 = *(double *)(v17 + 56);
          v27 = *(double *)(v17 + 64);
          v28 = *(double *)(v17 + 72);
          v21 = (sqrt((v27 - v26) * (v27 - v26) + (v28 - v25) * (v28 - v25))
               + sqrt((v25 - v24) * (v25 - v24) + (v26 - v23) * (v26 - v23))
               + sqrt((v27 - v23) * (v27 - v23) + (v28 - v24) * (v28 - v24)))
              * 0.5;
          break;
        case 4:
          v19 = swift_bridgeObjectRetain();
          sub_237E58C00(v19);
          v21 = v20;
          swift_bridgeObjectRelease();
          break;
        default:
          v16 = v16 + 0.0;
          if (v15 == v14)
            goto LABEL_16;
          goto LABEL_13;
      }
      v16 = v16 + v21;
      if (v15 == v14)
        goto LABEL_16;
LABEL_13:
      if (__OFADD__(++v14, 1))
      {
        __break(1u);
LABEL_16:
        swift_bridgeObjectRelease();
LABEL_17:
        swift_bridgeObjectRelease();
        objc_msgSend(a1, sel_size);
        v87 = (const __CTFont *)objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, a5);
        CTFontGetCapHeight(v87);
        v85 = CTLineCreateWithAttributedString((CFAttributedStringRef)a1);
        CTLineGetGlyphRuns(v85);
        *(_QWORD *)&v122[0] = 0;
        type metadata accessor for CTRun(0);
        sub_237EE2BC8();
LABEL_74:
        __break(1u);
      }
    }
  }
  while (1)
  {
    __break(1u);
    swift_bridgeObjectRetain();
    v81 = sub_237EE30A8();
    swift_bridgeObjectRelease();
    if (!v81)
      break;
    v89 = a2;
    a2 = 0;
    v97 = a3 & 0xC000000000000001;
    v88 = a3 + 32;
    v96 = (void *)*MEMORY[0x24BEBB360];
    v91 = (v5 - (Width + v6)) * 0.5;
    v95 = Width * 0.5 + v91;
    v94 = LODWORD(v7);
    v92 = v81;
    v93 = a3;
    while (1)
    {
      if (v97)
      {
        v29 = (const __CTRun *)MEMORY[0x23B826624](a2, a3);
      }
      else
      {
        if (a2 >= *(_QWORD *)(v89 + 16))
          goto LABEL_70;
        v29 = (const __CTRun *)*(id *)(v88 + 8 * a2);
      }
      run = v29;
      if (__OFADD__(a2++, 1))
        break;
      v101 = a2;
      v31 = CTRunGetAttributes(v29);
      *(_QWORD *)&v117 = v96;
      type metadata accessor for Key(0);
      v32 = v96;
      v100 = v31;
      v33 = -[__CFDictionary __swift_objectForKeyedSubscript:](v31, sel___swift_objectForKeyedSubscript_, sub_237EE31C8());
      swift_unknownObjectRelease();
      if (!v33)
      {
        __break(1u);
        goto LABEL_74;
      }
      sub_237EE2F10();
      swift_unknownObjectRelease();
      sub_237E24AC8(&matrix, &v117);
      type metadata accessor for CTFont(0);
      swift_dynamicCast();
      font = v112;

      GlyphCount = CTRunGetGlyphCount(run);
      v35 = sub_237E6F644(GlyphCount, 0.0, 0.0);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v35 = (uint64_t)sub_237E61DE8(0, *(_QWORD *)(v35 + 16), 0, (_QWORD *)v35);
      v124.location = 0;
      v124.length = GlyphCount;
      CTRunGetPositions(run, v124, (CGPoint *)(v35 + 32));
      v36 = sub_237E6F650(GlyphCount, 0.0, 0.0);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v36 = (uint64_t)sub_237E61DDC(0, *(_QWORD *)(v36 + 16), 0, (_QWORD *)v36);
      v125.location = 0;
      v125.length = GlyphCount;
      CTRunGetAdvances(run, v125, (CGSize *)(v36 + 32));
      v37 = *(_QWORD *)(v36 + 16);
      if (v37)
      {
        *(_QWORD *)&v117 = MEMORY[0x24BEE4AF8];
        swift_bridgeObjectRetain();
        sub_237E62768(0, v37, 0);
        a2 = v117;
        v38 = *(_QWORD *)(v117 + 16);
        v39 = 32;
        do
        {
          v40 = *(_QWORD *)(v36 + v39);
          *(_QWORD *)&v117 = a2;
          v41 = *(_QWORD *)(a2 + 24);
          if (v38 >= v41 >> 1)
          {
            sub_237E62768(v41 > 1, v38 + 1, 1);
            a2 = v117;
          }
          *(_QWORD *)(a2 + 16) = v38 + 1;
          *(_QWORD *)(a2 + 8 * v38 + 32) = v40;
          v39 += 16;
          ++v38;
          --v37;
        }
        while (v37);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
        a2 = MEMORY[0x24BEE4AF8];
      }
      v42 = sub_237E6F55C(0, GlyphCount);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v42 = (uint64_t)sub_237E61A64(0, *(_QWORD *)(v42 + 16), 0, (char *)v42);
      v126.location = 0;
      v126.length = GlyphCount;
      v109 = v42 + 32;
      CTRunGetGlyphs(run, v126, (CGGlyph *)(v42 + 32));
      v121 = 0;
      memset(v120, 0, sizeof(v120));
      if ((LOBYTE(v7) & 1) != 0)
      {
        v43 = *(_QWORD *)(a2 + 16);
        if (v43)
        {
          v44 = Width + v91 + *(double *)(a2 + 8 * v43 + 24) * 0.5;
          v45 = (_QWORD *)swift_bridgeObjectRetain();
          v46 = sub_237E58CB4(v45, a2, v44);
          swift_bridgeObjectRelease();
          v47 = sub_237E56B6C(v99, (uint64_t)v46, 1, a5);
          swift_bridgeObjectRelease();
          v48 = *(_QWORD *)(v47 + 16);
          if (v48)
          {
            sub_237E2CFE8(v47 + 40 * v48 - 8, (uint64_t)&v117);
          }
          else
          {
            *(_QWORD *)&v119 = 0;
            v117 = 0u;
            v118 = 0u;
          }
          swift_bridgeObjectRelease();
          sub_237E2209C((uint64_t)v120, &qword_256899E08);
          sub_237E21FC0((uint64_t)&v117, (uint64_t)v120, &qword_256899E08);
        }
        a3 = (uint64_t)sub_237E58CB4((_QWORD *)v35, a2, v91);
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_256899E00);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_237EE55E0;
        *(double *)(inited + 32) = v95;
        v50 = sub_237E56B6C(v99, inited, 0, a5);
        swift_setDeallocating();
        if (*(_QWORD *)(v50 + 16))
        {
          sub_237E2CFE8(v50 + 32, (uint64_t)&v117);
        }
        else
        {
          *(_QWORD *)&v119 = 0;
          v117 = 0u;
          v118 = 0u;
        }
        swift_bridgeObjectRelease();
        sub_237E2209C((uint64_t)v120, &qword_256899E08);
        sub_237E21FC0((uint64_t)&v117, (uint64_t)v120, &qword_256899E08);
        a3 = (uint64_t)sub_237E58CB4((_QWORD *)v35, a2, v95);
      }
      swift_bridgeObjectRelease();
      v104 = sub_237E56B6C(v99, a3, LOBYTE(v7) & 1, a5);
      swift_bridgeObjectRelease();
      sub_237E22004((uint64_t)v120, (uint64_t)&v117, &qword_256899E08);
      if (*((_QWORD *)&v118 + 1))
      {
        sub_237E2D1BC(&v117, (uint64_t)&matrix);
        sub_237E58E9C(&matrix, v122, Width, v106);
        v117 = v122[0];
        v118 = v122[1];
        v119 = v122[2];
        objc_msgSend(v90, sel_setAffineTransform_, &v117);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&matrix);
      }
      else
      {
        sub_237E2209C((uint64_t)&v117, &qword_256899E08);
      }
      v7 = 0.0;
      v51 = *(double *)(v104 + 16);
      v107 = a2 + 32;
      v108 = v51;
      v110 = a2;
      while (1)
      {
        if (*(_QWORD *)&v7 == *(_QWORD *)&v51)
        {
          v7 = v51;
          memset(&matrix, 0, sizeof(matrix));
        }
        else
        {
          if (*(_QWORD *)&v7 >= *(_QWORD *)(v104 + 16))
            goto LABEL_68;
          a3 = (uint64_t)&v113;
          sub_237E2CFE8(v104 + 32 + 40 * *(_QWORD *)&v7, (uint64_t)&v113);
          matrix.a = v7;
          sub_237E2D1BC(&v113, (uint64_t)&matrix.b);
          ++*(_QWORD *)&v7;
        }
        sub_237E21FC0((uint64_t)&matrix, (uint64_t)&v117, &qword_256899E10);
        if (!(_QWORD)v119)
          break;
        v52 = v117;
        sub_237E2D1BC((__int128 *)((char *)&v117 + 8), (uint64_t)&v112);
        if ((v52 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
LABEL_68:
          __break(1u);
          goto LABEL_69;
        }
        if (v52 >= *(_QWORD *)(v42 + 16))
          goto LABEL_66;
        if (v52 >= *(_QWORD *)(a2 + 16))
          goto LABEL_67;
        v53 = v42;
        v54 = *(_WORD *)(v109 + 2 * v52);
        v55 = *(double *)(v107 + 8 * v52);
        v57 = v114;
        v56 = v115;
        __swift_project_boxed_opaque_existential_1(&v112, v114);
        v58 = *(double (**)(uint64_t, uint64_t))(v56 + 56);
        v59 = v58(v57, v56) * v55 * 0.5;
        v61 = v114;
        v60 = v115;
        __swift_project_boxed_opaque_existential_1(&v112, v114);
        v62 = (*(double (**)(uint64_t, uint64_t))(v60 + 80))(v61, v60) * v55 * 0.5;
        v63 = v114;
        v64 = v115;
        __swift_project_boxed_opaque_existential_1(&v112, v114);
        v65 = v106 * (*(double (**)(uint64_t, uint64_t))(v64 + 80))(v63, v64) * 0.5;
        v66 = v106 * v58(v57, v56) * 0.5;
        v67 = v58(v57, v56);
        v68 = v114;
        v69 = v115;
        __swift_project_boxed_opaque_existential_1(&v112, v114);
        v70 = (*(double (**)(uint64_t, uint64_t))(v69 + 80))(v68, v69);
        v71 = v114;
        v72 = v115;
        __swift_project_boxed_opaque_existential_1(&v112, v114);
        v73 = -(*(double (**)(uint64_t, uint64_t))(v72 + 80))(v71, v72);
        v5 = v58(v57, v56);
        v74 = v114;
        v75 = v115;
        __swift_project_boxed_opaque_existential_1(&v112, v114);
        v6 = (*(double (**)(uint64_t, uint64_t))(v75 + 8))(v74, v75) + v65 - v59;
        v76 = v114;
        v77 = v115;
        a3 = (uint64_t)__swift_project_boxed_opaque_existential_1(&v112, v114);
        v78 = (*(double (**)(uint64_t, uint64_t))(v77 + 32))(v76, v77);
        CGAffineTransformMake(&matrix, v67, v70, v73, v5, v6, v78 - v66 - v62);
        v79 = CTFontCreatePathForGlyph(font, v54, &matrix);
        if (v79)
        {
          a3 = (uint64_t)v79;
          v80 = objc_msgSend((id)objc_opt_self(), sel_bezierPathWithCGPath_, v79);
          objc_msgSend(v105, sel_appendPath_, v80);

        }
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v112);
        v42 = v53;
        a2 = v110;
        v51 = v108;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_237E2209C((uint64_t)v120, &qword_256899E08);
      swift_bridgeObjectRelease();
      a3 = v93;
      a2 = v101;
      LODWORD(v7) = v94;
      if (v101 == v92)
        goto LABEL_72;
    }
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
  }
LABEL_72:
  swift_bridgeObjectRelease();
  v82 = objc_msgSend(v105, sel_CGPath);

  return v82;
}

double sub_237E56A9C()
{
  uint64_t v0;

  return *(double *)v0;
}

double sub_237E56AA4()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

double sub_237E56AAC()
{
  return 0.0;
}

uint64_t getEnumTagSinglePayload for CurvedTextPathProvider(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CurvedTextPathProvider(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for CurvedTextPathProvider()
{
  return &type metadata for CurvedTextPathProvider;
}

double sub_237E56B5C()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double sub_237E56B64()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

uint64_t sub_237E56B6C(const CGPath *a1, uint64_t a2, char a3, double a4)
{
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  float64x2_t v21;
  double v22;
  int64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  double *v45;
  double v46;
  unint64_t v47;
  double v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[24];
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;

  result = sub_237E58A58(a1);
  if (!*(_QWORD *)(result + 16))
    goto LABEL_55;
  v8 = *(_QWORD *)(result + 32);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  v56 = *(_QWORD *)(v8 + 16);
  if (!v56)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  v9 = 0;
  v10 = 0;
  v11 = *(_QWORD *)(a2 + 16);
  v53 = a2 + 32;
  v57 = v11;
  v54 = v11 - 1;
  v55 = v8 + 32;
  v12 = a2 + 40;
  v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v14 = 0.0;
  v50 = a3 & 1;
  v51 = v12;
  v52 = v8;
  while (v10 < *(_QWORD *)(v8 + 16))
  {
    v15 = v9;
    v16 = *(_QWORD *)(v55 + 8 * v10);
    v17 = *(_QWORD *)(v16 + 16);
    if (v17 == 2)
    {
      v21 = vsubq_f64(*(float64x2_t *)(v16 + 48), *(float64x2_t *)(v16 + 32));
      v22 = sqrt(vaddvq_f64(vmulq_f64(v21, v21)));
      result = swift_bridgeObjectRetain();
      v23 = v57;
      v18 = v54;
      goto LABEL_13;
    }
    v18 = v54;
    if (v17 == 3)
    {
      v24 = swift_bridgeObjectRetain();
      result = sub_237E58DCC(v24);
LABEL_12:
      v22 = v20;
      v23 = v57;
LABEL_13:
      v25 = v14;
      if (v9 >= v23)
        goto LABEL_25;
      goto LABEL_16;
    }
    if (v17 == 4)
    {
      v19 = swift_bridgeObjectRetain();
      result = sub_237E58C00(v19);
      goto LABEL_12;
    }
    result = swift_bridgeObjectRetain();
    v22 = 0.0;
    v25 = v14;
    v23 = v57;
    if (v9 >= v57)
      goto LABEL_25;
LABEL_16:
    if (v9 >= (unint64_t)v23)
      goto LABEL_50;
    v26 = *(double *)(v53 + 8 * v9);
    if (v14 + v26 <= v22)
    {
      v27 = v9;
      v25 = v14;
      while (1)
      {
        v25 = v25 + v26;
        if (v18 == v27)
          break;
        v9 = v27 + 1;
        v26 = *(double *)(v12 + 8 * v27++);
        if (v25 + v26 > v22)
          goto LABEL_24;
      }
      v9 = v57;
LABEL_24:
      v23 = v57;
      if (v9 < v15)
      {
        __break(1u);
        break;
      }
    }
    else
    {
      v25 = v14;
    }
LABEL_25:
    v28 = v9 - v15;
    if (v9 != v15)
    {
      if (v9 <= v15)
        goto LABEL_51;
      if (v15 < 0)
        goto LABEL_52;
      if (v15 >= v23)
        goto LABEL_53;
      if (v9 > v23)
        goto LABEL_54;
      v29 = sub_237E61CA8(0, 1, 1, MEMORY[0x24BEE4AF8]);
      v44 = v29[2];
      v45 = (double *)(v53 + 8 * v15);
      do
      {
        v46 = *v45;
        v47 = v29[3];
        if (v44 >= v47 >> 1)
          v29 = sub_237E61CA8((_QWORD *)(v47 > 1), v44 + 1, 1, v29);
        v29[2] = v44 + 1;
        *(double *)&v29[v44 + 4] = v14 + v46;
        v48 = *v45++;
        v14 = v14 + v48;
        ++v44;
        --v28;
      }
      while (v28);
LABEL_27:
      sub_237E56FB0(v16, (uint64_t)v29, v50, a4);
      v31 = v30;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v32 = *(_QWORD *)(v31 + 16);
      if (v32)
      {
        v33 = v31 + 32;
        do
        {
          sub_237E2CFE8(v33, (uint64_t)v58);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v61 = v13;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v13 = sub_237E61DC8(0, v13[2] + 1, 1, v13);
            v61 = v13;
          }
          v36 = v13[2];
          v35 = v13[3];
          if (v36 >= v35 >> 1)
            v61 = sub_237E61DC8((_QWORD *)(v35 > 1), v36 + 1, 1, v13);
          v37 = v59;
          v38 = v60;
          v39 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v58, v59);
          v40 = MEMORY[0x24BDAC7A8](v39);
          v42 = (char *)&v49 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, __n128))(v43 + 16))(v42, v40);
          sub_237E589E0(v36, (uint64_t)v42, (uint64_t *)&v61, v37, v38);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v58);
          v13 = v61;
          v33 += 40;
          --v32;
        }
        while (v32);
      }
      goto LABEL_4;
    }
    v29 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if (*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
      goto LABEL_27;
    swift_bridgeObjectRelease();
LABEL_4:
    result = swift_bridgeObjectRelease();
    ++v10;
    v14 = v25 - v22;
    v12 = v51;
    v8 = v52;
    if (v10 == v56)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
  }
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
  return result;
}

void sub_237E56FB0(uint64_t a1, uint64_t a2, char a3, double a4)
{
  double v8;
  uint64_t v9;
  double v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  double (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  double v32;
  double v33;
  _QWORD *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[24];
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[3];
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;

  v8 = sub_237E58E58(a1) * 10.0;
  if ((~*(_QWORD *)&v8 & 0x7FF0000000000000) == 0)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v8 >= 9.22337204e18)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    return;
  }
  v9 = (uint64_t)v8;
  if ((uint64_t)v8 >= 1)
  {
    v10 = (double)((uint64_t)v8 - 1);
    v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v12 = sub_237E61CA8(0, 1, 1, MEMORY[0x24BEE4AF8]);
    v13 = 0;
    v14 = v12[2];
    do
    {
      v15 = v12[3];
      if (v14 >= v15 >> 1)
        v12 = sub_237E61CA8((_QWORD *)(v15 > 1), v14 + 1, 1, v12);
      v12[2] = v14 + 1;
      *(double *)&v12[v14++ + 4] = (double)v13++ / v10;
    }
    while (v9 != v13);
    v16 = sub_237E6F768(a1);
    v17 = sub_237E57388(v16, (uint64_t)v12, a3 & 1, a4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v56 = v11;
    v18 = v17[2];
    if (!v18)
      goto LABEL_28;
    v44 = v17;
    v19 = (uint64_t)(v17 + 4);
    sub_237E2CFE8((uint64_t)(v17 + 4), (uint64_t)v53);
    v20 = 0;
    v21 = *(_QWORD *)(a2 + 16);
    v45 = a2 + 32;
    v22 = 0.0;
    while (1)
    {
      sub_237E2CFE8(v19, (uint64_t)&v50);
      if (v20 == v21)
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v50);
LABEL_23:
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v53);
        return;
      }
      v46 = v18;
      v23 = v54;
      v24 = v55;
      __swift_project_boxed_opaque_existential_1(v53, v54);
      v25 = v21;
      v26 = v51;
      v27 = v52;
      __swift_project_boxed_opaque_existential_1(&v50, v51);
      v28 = (*(double (**)(uint64_t, uint64_t))(v27 + 8))(v26, v27);
      v29 = (*(double (**)(uint64_t, uint64_t))(v24 + 8))(v23, v24);
      v30 = *(double (**)(uint64_t, uint64_t))(v27 + 32);
      v31 = v27;
      v21 = v25;
      v32 = v30(v26, v31);
      (*(void (**)(uint64_t, uint64_t))(v24 + 32))(v23, v24);
      if (v20 >= v25)
        break;
      v22 = v22 + sqrt((v28 - v29) * (v28 - v29) + (v32 - v33) * (v32 - v33));
      if (*(double *)(v45 + 8 * v20) > v22)
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v53);
      }
      else
      {
        sub_237E2CFE8((uint64_t)&v50, (uint64_t)v47);
        v34 = v56;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          v34 = sub_237E61DC8(0, v34[2] + 1, 1, v34);
          v56 = v34;
        }
        v36 = v34[2];
        v35 = v34[3];
        if (v36 >= v35 >> 1)
          v56 = sub_237E61DC8((_QWORD *)(v35 > 1), v36 + 1, 1, v34);
        v37 = v48;
        v38 = v49;
        v39 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v47, v48);
        v40 = MEMORY[0x24BDAC7A8](v39);
        v42 = (char *)&v44 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v43 + 16))(v42, v40);
        sub_237E589E0(v36, (uint64_t)v42, (uint64_t *)&v56, v37, v38);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v47);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v53);
        ++v20;
      }
      sub_237E2D1BC(&v50, (uint64_t)v53);
      v19 += 40;
      v18 = v46 - 1;
      if (v46 == 1)
        goto LABEL_23;
    }
    __break(1u);
    goto LABEL_25;
  }
}

_QWORD *sub_237E57388(uint64_t a1, uint64_t a2, char a3, double a4)
{
  uint64_t v4;
  uint64_t v7;
  double *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __n128 v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  double *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  double v31;
  ValueMetadata *v32;
  _UNKNOWN **v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  ValueMetadata *v38;
  _UNKNOWN **v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  ValueMetadata *v47;
  _UNKNOWN **v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  ValueMetadata *v53;
  _UNKNOWN **v54;
  double v55;
  double v56;
  double v57;
  double v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double *v63;
  uint64_t v64;
  uint64_t v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t inited;
  _QWORD *v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __n128 v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  _QWORD v87[3];
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  ValueMetadata *v91;
  _UNKNOWN **v92;
  _QWORD *v93;

  v93 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v4 = *(_QWORD *)(a1 + 16);
  switch(v4)
  {
    case 2:
      v26 = *(_QWORD *)(a2 + 16);
      if (v26)
      {
        v27 = (double *)(a2 + 32);
        v28 = a1 + 32;
        v29 = a1 + 72;
        v82 = a2;
        swift_bridgeObjectRetain();
        v30 = (_QWORD *)MEMORY[0x24BEE4AF8];
        do
        {
          v31 = *v27;
          sub_237E2CFE8(v28, (uint64_t)&v90);
          sub_237E2CFE8(v29, (uint64_t)v87);
          v32 = v91;
          v33 = v92;
          __swift_project_boxed_opaque_existential_1(&v90, (uint64_t)v91);
          v34 = ((double (*)(ValueMetadata *, _UNKNOWN **))v33[1])(v32, v33);
          v35 = v88;
          v36 = v89;
          __swift_project_boxed_opaque_existential_1(v87, v88);
          v37 = (*(double (**)(uint64_t, uint64_t))(v36 + 8))(v35, v36);
          v38 = v91;
          v39 = v92;
          __swift_project_boxed_opaque_existential_1(&v90, (uint64_t)v91);
          v40 = ((double (*)(ValueMetadata *, _UNKNOWN **))v39[4])(v38, v39);
          v41 = v88;
          v42 = v89;
          __swift_project_boxed_opaque_existential_1(v87, v88);
          v43 = (*(double (**)(uint64_t, uint64_t))(v42 + 32))(v41, v42);
          v44 = v88;
          v45 = v89;
          __swift_project_boxed_opaque_existential_1(v87, v88);
          v46 = (*(double (**)(uint64_t, uint64_t))(v45 + 8))(v44, v45);
          v47 = v91;
          v48 = v92;
          __swift_project_boxed_opaque_existential_1(&v90, (uint64_t)v91);
          v49 = v46 - ((double (*)(ValueMetadata *, _UNKNOWN **))v48[1])(v47, v48);
          v50 = v88;
          v51 = v89;
          __swift_project_boxed_opaque_existential_1(v87, v88);
          v52 = (*(double (**)(uint64_t, uint64_t))(v51 + 32))(v50, v51);
          v53 = v91;
          v54 = v92;
          __swift_project_boxed_opaque_existential_1(&v90, (uint64_t)v91);
          v55 = v52 - ((double (*)(ValueMetadata *, _UNKNOWN **))v54[4])(v53, v54);
          v56 = sqrt(v49 * v49 + v55 * v55);
          v57 = 0.0;
          v58 = 0.0;
          if (v56 > 0.0)
          {
            v57 = v49 / v56;
            v58 = v55 / v56;
          }
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v87);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v90);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v30 = sub_237E61DC8(0, v30[2] + 1, 1, v30);
          v60 = v30[2];
          v59 = v30[3];
          if (v60 >= v59 >> 1)
            v30 = sub_237E61DC8((_QWORD *)(v59 > 1), v60 + 1, 1, v30);
          v91 = &type metadata for SamplePoint;
          v92 = &off_2509C1720;
          v61 = swift_allocObject();
          *(_QWORD *)&v90 = v61;
          *(double *)(v61 + 16) = (1.0 - v31) * v34 + v31 * v37;
          *(double *)(v61 + 24) = (1.0 - v31) * v40 + v31 * v43;
          *(double *)(v61 + 32) = v57;
          *(double *)(v61 + 40) = v58;
          *(_QWORD *)(v61 + 48) = 0;
          v30[2] = v60 + 1;
          sub_237E2D1BC(&v90, (uint64_t)&v30[5 * v60 + 4]);
          v93 = v30;
          ++v27;
          --v26;
        }
        while (v26);
        goto LABEL_29;
      }
      break;
    case 3:
      v62 = *(_QWORD *)(a2 + 16);
      if (v62)
      {
        v63 = (double *)(a2 + 32);
        v85 = a1 + 32;
        v64 = a1 + 72;
        v65 = a1 + 112;
        v82 = a2;
        swift_bridgeObjectRetain();
        v86 = xmmword_237EE4470;
        do
        {
          v66 = *v63;
          __swift_instantiateConcreteTypeFromMangledName(&qword_256899E18);
          v67 = swift_allocObject();
          *(_OWORD *)(v67 + 16) = v86;
          sub_237E2CFE8(v85, v67 + 32);
          sub_237E2CFE8(v64, v67 + 72);
          v68 = swift_allocObject();
          *(_OWORD *)(v68 + 16) = v86;
          sub_237E2CFE8(v64, v68 + 32);
          sub_237E2CFE8(v65, v68 + 72);
          __swift_instantiateConcreteTypeFromMangledName(&qword_256899E20);
          inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = v86;
          *(_QWORD *)(inited + 32) = v67;
          *(_QWORD *)(inited + 40) = v68;
          sub_237E58490(inited, a3 & 1, (uint64_t)&v90, v66, a4);
          swift_setDeallocating();
          __swift_instantiateConcreteTypeFromMangledName(&qword_256899E28);
          swift_arrayDestroy();
          sub_237E2CFE8((uint64_t)&v90, (uint64_t)v87);
          v70 = v93;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            v70 = sub_237E61DC8(0, v70[2] + 1, 1, v70);
            v93 = v70;
          }
          v72 = v70[2];
          v71 = v70[3];
          if (v72 >= v71 >> 1)
            v93 = sub_237E61DC8((_QWORD *)(v71 > 1), v72 + 1, 1, v70);
          v73 = v88;
          v74 = v89;
          v75 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v87, v88);
          v76 = MEMORY[0x24BDAC7A8](v75);
          v78 = (char *)&v81 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, __n128))(v79 + 16))(v78, v76);
          sub_237E589E0(v72, (uint64_t)v78, (uint64_t *)&v93, v73, v74);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v87);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v90);
          ++v63;
          --v62;
        }
        while (v62);
        goto LABEL_29;
      }
      break;
    case 4:
      v7 = *(_QWORD *)(a2 + 16);
      if (v7)
      {
        v8 = (double *)(a2 + 32);
        v85 = a1 + 32;
        v9 = a1 + 72;
        v10 = a1 + 112;
        v84 = a1 + 152;
        v82 = a2;
        swift_bridgeObjectRetain();
        v86 = xmmword_237EE4470;
        v83 = xmmword_237EE79C0;
        do
        {
          v11 = *v8;
          __swift_instantiateConcreteTypeFromMangledName(&qword_256899E18);
          v12 = swift_allocObject();
          *(_OWORD *)(v12 + 16) = v86;
          sub_237E2CFE8(v85, v12 + 32);
          sub_237E2CFE8(v9, v12 + 72);
          v13 = swift_allocObject();
          *(_OWORD *)(v13 + 16) = v86;
          sub_237E2CFE8(v9, v13 + 32);
          sub_237E2CFE8(v10, v13 + 72);
          v14 = swift_allocObject();
          *(_OWORD *)(v14 + 16) = v86;
          sub_237E2CFE8(v10, v14 + 32);
          sub_237E2CFE8(v84, v14 + 72);
          __swift_instantiateConcreteTypeFromMangledName(&qword_256899E20);
          v15 = swift_initStackObject();
          *(_OWORD *)(v15 + 16) = v83;
          *(_QWORD *)(v15 + 32) = v12;
          *(_QWORD *)(v15 + 40) = v13;
          *(_QWORD *)(v15 + 48) = v14;
          sub_237E58490(v15, a3 & 1, (uint64_t)&v90, v11, a4);
          swift_setDeallocating();
          __swift_instantiateConcreteTypeFromMangledName(&qword_256899E28);
          swift_arrayDestroy();
          sub_237E2CFE8((uint64_t)&v90, (uint64_t)v87);
          v16 = v93;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            v16 = sub_237E61DC8(0, v16[2] + 1, 1, v16);
            v93 = v16;
          }
          v18 = v16[2];
          v17 = v16[3];
          if (v18 >= v17 >> 1)
            v93 = sub_237E61DC8((_QWORD *)(v17 > 1), v18 + 1, 1, v16);
          v19 = v88;
          v20 = v89;
          v21 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v87, v88);
          v22 = MEMORY[0x24BDAC7A8](v21);
          v24 = (char *)&v81 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, __n128))(v25 + 16))(v24, v22);
          sub_237E589E0(v18, (uint64_t)v24, (uint64_t *)&v93, v19, v20);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v87);
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v90);
          ++v8;
          --v7;
        }
        while (v7);
LABEL_29:
        swift_bridgeObjectRelease();
      }
      break;
  }
  return v93;
}

unint64_t sub_237E57B84(unint64_t result, unsigned int *a2)
{
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  CGFloat x;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  _QWORD *v26;
  CGFloat v27;
  uint64_t v28;
  uint64_t v29;
  double *v30;
  uint64_t v31;
  CGFloat v32;
  CGFloat v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  __int128 v43;
  unint64_t v44;
  double v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  CGFloat v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  __int128 v63;
  CGPoint v64;
  _BYTE v65[32];
  CGFloat v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  CGPoint v70;

  if (!result)
    return result;
  v2 = result;
  v3 = *a2;
  v4 = (_QWORD *)*((_QWORD *)a2 + 1);
  switch((int)v3)
  {
    case 0:
      v5 = (_QWORD *)*v4;
      v6 = v4[1];
      type metadata accessor for CGPoint(0);
      v69 = v7;
      v66 = *(double *)&v5;
      v67 = v6;
      result = sub_237E8EFB4((uint64_t)&v66, 0x50746E6572727563, 0xEC000000746E696FLL);
      v8 = *(_QWORD *)v2;
      if (*(_QWORD *)(*(_QWORD *)v2 + 16))
      {
        result = sub_237EAD554(0x7368746170627573, 0xE800000000000000);
        if ((v9 & 1) != 0)
        {
          sub_237E22004(*(_QWORD *)(v8 + 56) + 32 * result, (uint64_t)v65, &qword_256899E40);
          sub_237E21FC0((uint64_t)v65, (uint64_t)&v66, &qword_256899E40);
          if (!v69)
            return sub_237E2209C((uint64_t)&v66, &qword_256899E40);
          v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899E38);
          result = swift_dynamicCast();
          if ((result & 1) != 0)
          {
            x = v64.x;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              goto LABEL_86;
            goto LABEL_8;
          }
        }
      }
      return result;
    case 2:
      v3 = 2;
      goto LABEL_14;
    case 3:
      goto LABEL_14;
    case 4:
      v21 = *(_QWORD *)result;
      if (!*(_QWORD *)(*(_QWORD *)result + 16))
        return result;
      result = sub_237EAD554(0x7368746170627573, 0xE800000000000000);
      if ((v22 & 1) == 0)
        return result;
      v23 = *(_QWORD *)(v21 + 56) + 32 * result;
      v24 = &qword_256899E40;
      sub_237E22004(v23, (uint64_t)v65, &qword_256899E40);
      sub_237E21FC0((uint64_t)v65, (uint64_t)&v66, &qword_256899E40);
      if (!v69)
        return sub_237E2209C((uint64_t)&v66, &qword_256899E40);
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899E38);
      v26 = (_QWORD *)MEMORY[0x24BEE4AD8];
      result = swift_dynamicCast();
      if ((result & 1) == 0)
        return result;
      v27 = v64.x;
      v28 = *(_QWORD *)(*(_QWORD *)&v64.x + 16);
      if (!v28)
        return swift_bridgeObjectRelease();
      v29 = *(_QWORD *)(*(_QWORD *)&v64.x + 8 * v28 + 24);
      if (!*(_QWORD *)(v29 + 16))
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        {
          v62 = *(_QWORD *)(*(_QWORD *)&v64.x + 16);
          if (v62)
          {
LABEL_79:
            *(_QWORD *)(*(_QWORD *)&v27 + 16) = v62 - 1;
            swift_bridgeObjectRelease();
LABEL_80:
            v69 = v25;
            v66 = v27;
            goto LABEL_11;
          }
        }
        else
        {
          v27 = COERCE_DOUBLE(sub_237E46E64(*(_QWORD **)&v64.x));
          v62 = *(_QWORD *)(*(_QWORD *)&v27 + 16);
          if (v62)
            goto LABEL_79;
        }
        __break(1u);
        goto LABEL_89;
      }
      v30 = *(double **)(v29 + 32);
      if (*((_QWORD *)v30 + 2))
      {
        v31 = *(_QWORD *)v2;
        if (*(_QWORD *)(*(_QWORD *)v2 + 16))
        {
          v32 = v30[4];
          v33 = v30[5];
          v34 = sub_237EAD554(0x50746E6572727563, 0xEC000000746E696FLL);
          if ((v35 & 1) != 0)
          {
            sub_237E22004(*(_QWORD *)(v31 + 56) + 32 * v34, (uint64_t)v65, &qword_256899E40);
            sub_237E21FC0((uint64_t)v65, (uint64_t)&v66, &qword_256899E40);
            if (v69)
            {
              type metadata accessor for CGPoint(0);
              if ((swift_dynamicCast() & 1) != 0)
              {
                v70.x = v32;
                v70.y = v33;
                if (!CGPointEqualToPoint(v64, v70))
                {
                  __swift_instantiateConcreteTypeFromMangledName(&qword_256899E48);
                  v24 = (uint64_t *)swift_allocObject();
                  *((_OWORD *)v24 + 1) = xmmword_237EE4470;
                  *((CGPoint *)v24 + 2) = v64;
                  *((CGFloat *)v24 + 6) = v32;
                  *((CGFloat *)v24 + 7) = v33;
                  if (*(_QWORD *)(*(_QWORD *)&v64.x + 16))
                  {
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
                    {
                      v36 = *(_QWORD *)(*(_QWORD *)&v64.x + 16);
                      if (v36)
                        goto LABEL_36;
                      goto LABEL_90;
                    }
LABEL_89:
                    v27 = COERCE_DOUBLE(sub_237E46E64(*(_QWORD **)&v27));
                    v36 = *(_QWORD *)(*(_QWORD *)&v27 + 16);
                    if (v36)
                    {
LABEL_36:
                      v37 = v36 - 1;
                      v26 = *(_QWORD **)(*(_QWORD *)&v27 + 8 * v37 + 32);
                      *(_QWORD *)(*(_QWORD *)&v27 + 16) = v37;
                      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
                      {
LABEL_37:
                        v39 = v26[2];
                        v38 = v26[3];
                        if (v39 >= v38 >> 1)
                          v26 = sub_237E62008((_QWORD *)(v38 > 1), v39 + 1, 1, v26);
                        v26[2] = v39 + 1;
                        v26[v39 + 4] = v24;
                        v41 = *(_QWORD *)(*(_QWORD *)&v27 + 16);
                        v40 = *(_QWORD *)(*(_QWORD *)&v27 + 24);
                        if (v41 >= v40 >> 1)
                          v27 = COERCE_DOUBLE(sub_237E62134((_QWORD *)(v40 > 1), v41 + 1, 1, *(_QWORD **)&v27));
                        *(_QWORD *)(*(_QWORD *)&v27 + 16) = v41 + 1;
                        *(_QWORD *)(*(_QWORD *)&v27 + 8 * v41 + 32) = v26;
                        goto LABEL_80;
                      }
LABEL_91:
                      v26 = sub_237E62008(0, v26[2] + 1, 1, v26);
                      goto LABEL_37;
                    }
LABEL_90:
                    __break(1u);
                    goto LABEL_91;
                  }
                  swift_bridgeObjectRelease();
                }
              }
            }
            else
            {
              sub_237E2209C((uint64_t)&v66, &qword_256899E40);
            }
          }
        }
      }
      return swift_bridgeObjectRelease();
    default:
      v3 = (_DWORD)v3 == 1;
LABEL_14:
      v16 = *(_QWORD *)result;
      if (!*(_QWORD *)(*(_QWORD *)result + 16))
        goto LABEL_43;
      v17 = sub_237EAD554(0x50746E6572727563, 0xEC000000746E696FLL);
      if ((v18 & 1) == 0)
        goto LABEL_43;
      sub_237E22004(*(_QWORD *)(v16 + 56) + 32 * v17, (uint64_t)v65, &qword_256899E40);
      sub_237E21FC0((uint64_t)v65, (uint64_t)&v66, &qword_256899E40);
      if (v69)
      {
        type metadata accessor for CGPoint(0);
        if ((swift_dynamicCast() & 1) != 0)
        {
          x = COERCE_DOUBLE(sub_237E61DE8(0, 1, 1, MEMORY[0x24BEE4AF8]));
          v20 = *(_QWORD *)(*(_QWORD *)&x + 16);
          v19 = *(_QWORD *)(*(_QWORD *)&x + 24);
          if (v20 >= v19 >> 1)
            x = COERCE_DOUBLE(sub_237E61DE8((_QWORD *)(v19 > 1), v20 + 1, 1, *(_QWORD **)&x));
          *(_QWORD *)(*(_QWORD *)&x + 16) = v20 + 1;
          *(CGPoint *)(*(_QWORD *)&x + 16 * v20 + 32) = v64;
LABEL_44:
          if (v3)
          {
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              x = COERCE_DOUBLE(sub_237E61DE8(0, *(_QWORD *)(*(_QWORD *)&x + 16) + 1, 1, *(_QWORD **)&x));
            v42 = *(_QWORD *)(*(_QWORD *)&x + 16);
            do
            {
              v43 = *(_OWORD *)v4;
              v44 = *(_QWORD *)(*(_QWORD *)&x + 24);
              if (v42 >= v44 >> 1)
              {
                v63 = *(_OWORD *)v4;
                v45 = COERCE_DOUBLE(sub_237E61DE8((_QWORD *)(v44 > 1), v42 + 1, 1, *(_QWORD **)&x));
                v43 = v63;
                x = v45;
              }
              *(_QWORD *)(*(_QWORD *)&x + 16) = v42 + 1;
              *(_OWORD *)(*(_QWORD *)&x + 16 * v42 + 32) = v43;
              v4 += 2;
              ++v42;
              --v3;
            }
            while (v3);
          }
          v46 = *(_QWORD *)v2;
          if (*(_QWORD *)(*(_QWORD *)v2 + 16))
          {
            v47 = sub_237EAD554(0x7368746170627573, 0xE800000000000000);
            if ((v48 & 1) != 0)
            {
              sub_237E22004(*(_QWORD *)(v46 + 56) + 32 * v47, (uint64_t)v65, &qword_256899E40);
              sub_237E21FC0((uint64_t)v65, (uint64_t)&v66, &qword_256899E40);
              if (v69)
              {
                v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899E38);
                if ((swift_dynamicCast() & 1) != 0)
                {
                  v49 = v64.x;
                  if (!*(_QWORD *)(*(_QWORD *)&v64.x + 16))
                  {
                    v52 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_64:
                    swift_bridgeObjectRetain();
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                      v52 = sub_237E62008(0, v52[2] + 1, 1, v52);
                    v59 = v52[2];
                    v58 = v52[3];
                    if (v59 >= v58 >> 1)
                      v52 = sub_237E62008((_QWORD *)(v58 > 1), v59 + 1, 1, v52);
                    v52[2] = v59 + 1;
                    *(CGFloat *)&v52[v59 + 4] = x;
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                      v49 = COERCE_DOUBLE(sub_237E62134(0, *(_QWORD *)(*(_QWORD *)&v49 + 16) + 1, 1, *(_QWORD **)&v49));
                    v61 = *(_QWORD *)(*(_QWORD *)&v49 + 16);
                    v60 = *(_QWORD *)(*(_QWORD *)&v49 + 24);
                    if (v61 >= v60 >> 1)
                      v49 = COERCE_DOUBLE(sub_237E62134((_QWORD *)(v60 > 1), v61 + 1, 1, *(_QWORD **)&v49));
                    *(_QWORD *)(*(_QWORD *)&v49 + 16) = v61 + 1;
                    *(_QWORD *)(*(_QWORD *)&v49 + 8 * v61 + 32) = v52;
                    v69 = v10;
                    v66 = v49;
                    sub_237E8EFB4((uint64_t)&v66, 0x7368746170627573, 0xE800000000000000);
                    v53 = *(_QWORD *)(*(_QWORD *)&x + 16);
                    if (!v53)
                      goto LABEL_73;
                    goto LABEL_61;
                  }
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
                  {
                    v50 = *(_QWORD *)(*(_QWORD *)&v64.x + 16);
                    if (v50)
                    {
LABEL_58:
                      v51 = v50 - 1;
                      v52 = *(_QWORD **)(*(_QWORD *)&v49 + 8 * v51 + 32);
                      *(_QWORD *)(*(_QWORD *)&v49 + 16) = v51;
                      goto LABEL_64;
                    }
                  }
                  else
                  {
                    v49 = COERCE_DOUBLE(sub_237E46E64(*(_QWORD **)&v64.x));
                    v50 = *(_QWORD *)(*(_QWORD *)&v49 + 16);
                    if (v50)
                      goto LABEL_58;
                  }
                  __break(1u);
LABEL_86:
                  x = COERCE_DOUBLE(sub_237E62134(0, *(_QWORD *)(*(_QWORD *)&x + 16) + 1, 1, *(_QWORD **)&x));
LABEL_8:
                  v13 = *(_QWORD *)(*(_QWORD *)&x + 16);
                  v12 = *(_QWORD *)(*(_QWORD *)&x + 24);
                  if (v13 >= v12 >> 1)
                    x = COERCE_DOUBLE(sub_237E62134((_QWORD *)(v12 > 1), v13 + 1, 1, *(_QWORD **)&x));
                  *(_QWORD *)(*(_QWORD *)&x + 16) = v13 + 1;
                  *(_QWORD *)(*(_QWORD *)&x + 8 * v13 + 32) = MEMORY[0x24BEE4AF8];
                  v69 = v10;
                  v66 = x;
LABEL_11:
                  v14 = 0x7368746170627573;
                  v15 = 0xE800000000000000;
                  return sub_237E8EFB4((uint64_t)&v66, v14, v15);
                }
              }
              else
              {
                sub_237E2209C((uint64_t)&v66, &qword_256899E40);
              }
            }
          }
          v53 = *(_QWORD *)(*(_QWORD *)&x + 16);
          if (!v53)
          {
LABEL_73:
            swift_bridgeObjectRelease();
            v66 = 0.0;
            v67 = 0;
            v68 = 0;
            v69 = 1;
            goto LABEL_74;
          }
LABEL_61:
          v54 = (_QWORD *)(*(_QWORD *)&x + 16 * v53);
          v55 = (_QWORD *)v54[2];
          v56 = v54[3];
          swift_bridgeObjectRelease();
          type metadata accessor for CGPoint(0);
          v69 = v57;
          v66 = *(double *)&v55;
          v67 = v56;
LABEL_74:
          v14 = 0x50746E6572727563;
          v15 = 0xEC000000746E696FLL;
          return sub_237E8EFB4((uint64_t)&v66, v14, v15);
        }
      }
      else
      {
        sub_237E2209C((uint64_t)&v66, &qword_256899E40);
      }
LABEL_43:
      x = MEMORY[0x24BEE4AF8];
      goto LABEL_44;
  }
}

uint64_t sub_237E58490@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  ValueMetadata *v15;
  _UNKNOWN **v16;
  double (*v17)(ValueMetadata *, _UNKNOWN **);
  double v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  ValueMetadata *v22;
  _UNKNOWN **v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  ValueMetadata *v31;
  _UNKNOWN **v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  ValueMetadata *v37;
  _UNKNOWN **v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  ValueMetadata *v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  double v64;
  int v65;
  uint64_t v66;
  __int128 v67;
  _QWORD v68[3];
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  ValueMetadata *v72;
  _UNKNOWN **v73;
  __int128 v74;
  uint64_t v75;
  _UNKNOWN **v76;
  _QWORD *v77;

  v65 = a2;
  v66 = a3;
  v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v77 = (_QWORD *)MEMORY[0x24BEE4AF8];
  type metadata accessor for CGPoint(0);
  v75 = v9;
  v76 = &off_2509C1580;
  v74 = 0uLL;
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    v64 = a5;
    *(double *)&v67 = 1.0 - a4;
    result = swift_bridgeObjectRetain();
    v12 = 0;
    while (1)
    {
      v13 = *(_QWORD *)(a1 + 8 * v12 + 32);
      v14 = *(_QWORD *)(v13 + 16);
      if (!v14)
        break;
      result = sub_237E2CFE8(v13 + 32, (uint64_t)&v71);
      if (v14 == 1)
        goto LABEL_24;
      sub_237E2CFE8(v13 + 72, (uint64_t)v68);
      v15 = v72;
      v16 = v73;
      __swift_project_boxed_opaque_existential_1(&v71, (uint64_t)v72);
      v17 = (double (*)(ValueMetadata *, _UNKNOWN **))v16[1];
      swift_bridgeObjectRetain();
      v18 = v17(v15, v16);
      v19 = v69;
      v20 = v70;
      __swift_project_boxed_opaque_existential_1(v68, v69);
      v21 = (*(double (**)(uint64_t, uint64_t))(v20 + 8))(v19, v20);
      v22 = v72;
      v23 = v73;
      __swift_project_boxed_opaque_existential_1(&v71, (uint64_t)v72);
      v24 = ((double (*)(ValueMetadata *, _UNKNOWN **))v23[4])(v22, v23);
      v25 = v69;
      v26 = v70;
      __swift_project_boxed_opaque_existential_1(v68, v69);
      v27 = (*(double (**)(uint64_t, uint64_t))(v26 + 32))(v25, v26);
      v28 = v69;
      v29 = v70;
      __swift_project_boxed_opaque_existential_1(v68, v69);
      v30 = (*(double (**)(uint64_t, uint64_t))(v29 + 8))(v28, v29);
      v31 = v72;
      v32 = v73;
      __swift_project_boxed_opaque_existential_1(&v71, (uint64_t)v72);
      v33 = v30 - ((double (*)(ValueMetadata *, _UNKNOWN **))v32[1])(v31, v32);
      v34 = v69;
      v35 = v70;
      __swift_project_boxed_opaque_existential_1(v68, v69);
      v36 = (*(double (**)(uint64_t, uint64_t))(v35 + 32))(v34, v35);
      v37 = v72;
      v38 = v73;
      __swift_project_boxed_opaque_existential_1(&v71, (uint64_t)v72);
      v39 = v36 - ((double (*)(ValueMetadata *, _UNKNOWN **))v38[4])(v37, v38);
      v40 = sqrt(v33 * v33 + v39 * v39);
      v41 = 0.0;
      v42 = 0.0;
      if (v40 > 0.0)
      {
        v41 = v33 / v40;
        v42 = v39 / v40;
      }
      v43 = *(double *)&v67 * v18 + v21 * a4;
      v44 = *(double *)&v67 * v24 + v27 * a4;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v68);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v71);
      swift_bridgeObjectRelease();
      v72 = &type metadata for SamplePoint;
      v73 = &off_2509C1720;
      v45 = swift_allocObject();
      *(_QWORD *)&v71 = v45;
      *(double *)(v45 + 16) = v43;
      *(double *)(v45 + 24) = v44;
      *(double *)(v45 + 32) = v41;
      *(double *)(v45 + 40) = v42;
      *(_QWORD *)(v45 + 48) = 0;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v74);
      sub_237E2D1BC(&v71, (uint64_t)&v74);
      sub_237E2CFE8((uint64_t)&v74, (uint64_t)&v71);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v8 = sub_237E61DC8(0, v8[2] + 1, 1, v8);
        v77 = v8;
      }
      v47 = v8[2];
      v46 = v8[3];
      if (v47 >= v46 >> 1)
        v77 = sub_237E61DC8((_QWORD *)(v46 > 1), v47 + 1, 1, v8);
      ++v12;
      v48 = v72;
      v49 = (uint64_t)v73;
      v50 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v71, (uint64_t)v72);
      v51 = MEMORY[0x24BDAC7A8](v50);
      v53 = (char *)&v63 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, __n128))(v54 + 16))(v53, v51);
      sub_237E589E0(v47, (uint64_t)v53, (uint64_t *)&v77, (uint64_t)v48, v49);
      result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v71);
      v8 = v77;
      if (v10 == v12)
      {
        swift_bridgeObjectRelease();
        v55 = v66;
        a5 = v64;
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
  }
  else
  {
    v55 = v66;
LABEL_14:
    v56 = v8[2];
    if (v56 >= 2)
    {
      v57 = v56 - 1;
      v58 = (uint64_t)(v8 + 9);
      v59 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v67 = xmmword_237EE4470;
      do
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_256899E18);
        v60 = swift_allocObject();
        *(_OWORD *)(v60 + 16) = v67;
        sub_237E2CFE8(v58 - 40, v60 + 32);
        sub_237E2CFE8(v58, v60 + 72);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v59 = sub_237E61DB4(0, v59[2] + 1, 1, v59);
        v62 = v59[2];
        v61 = v59[3];
        if (v62 >= v61 >> 1)
          v59 = sub_237E61DB4((_QWORD *)(v61 > 1), v62 + 1, 1, v59);
        v59[2] = v62 + 1;
        v59[v62 + 4] = v60;
        v58 += 40;
        --v57;
      }
      while (v57);
      sub_237E58490(&v71, v59, v65 & 1, a4, a5);
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v74);
      sub_237E2D1BC(&v71, (uint64_t)&v74);
    }
    sub_237E2D1BC(&v74, v55);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_237E589E0(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_0;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_0, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_237E2D1BC(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_237E58A58(const CGPath *a1)
{
  uint64_t inited;
  unint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v8;
  unint64_t info;
  _BYTE v10[32];
  _BYTE v11[24];
  uint64_t v12;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256899E30);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_237EE4470;
  strcpy((char *)(inited + 32), "currentPoint");
  *(_BYTE *)(inited + 45) = 0;
  *(_WORD *)(inited + 46) = -5120;
  *(_OWORD *)(inited + 48) = 0u;
  *(_OWORD *)(inited + 64) = 0u;
  *(_QWORD *)(inited + 80) = 0x7368746170627573;
  *(_QWORD *)(inited + 88) = 0xE800000000000000;
  *(_QWORD *)(inited + 120) = __swift_instantiateConcreteTypeFromMangledName(&qword_256899E38);
  *(_QWORD *)(inited + 96) = MEMORY[0x24BEE4AF8];
  info = sub_237EAB4AC(inited);
  CGPathApply(a1, &info, (CGPathApplierFunction)sub_237E5848C);
  v3 = info;
  if (!*(_QWORD *)(info + 16))
    goto LABEL_7;
  v4 = sub_237EAD554(0x7368746170627573, 0xE800000000000000);
  if ((v5 & 1) == 0)
    goto LABEL_7;
  sub_237E22004(*(_QWORD *)(v3 + 56) + 32 * v4, (uint64_t)v10, &qword_256899E40);
  sub_237E21FC0((uint64_t)v10, (uint64_t)v11, &qword_256899E40);
  if (!v12)
  {
    sub_237E2209C((uint64_t)v11, &qword_256899E40);
    goto LABEL_7;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    v6 = MEMORY[0x24BEE4AF8];
    goto LABEL_8;
  }
  v6 = v8;
LABEL_8:
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_237E58C00(uint64_t result)
{
  unint64_t v1;

  v1 = *(_QWORD *)(result + 16);
  if (!v1)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v1 == 1)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v1 < 3)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v1 == 3)
LABEL_9:
    __break(1u);
  return result;
}

_QWORD *sub_237E58CB4(_QWORD *result, uint64_t a2, double a3)
{
  unint64_t v3;
  double *v5;
  double *v6;
  _QWORD *v7;
  double v8;
  double v9;
  double v10;
  unint64_t v11;
  unint64_t v12;

  v3 = result[2];
  if (!v3)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  if (v3 <= *(_QWORD *)(a2 + 16))
  {
    v5 = (double *)(result + 4);
    v6 = (double *)(a2 + 32);
    v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v8 = 0.0;
    do
    {
      v9 = *v5;
      v10 = *v6;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v7 = sub_237E61CA8(0, v7[2] + 1, 1, v7);
      v12 = v7[2];
      v11 = v7[3];
      if (v12 >= v11 >> 1)
        v7 = sub_237E61CA8((_QWORD *)(v11 > 1), v12 + 1, 1, v7);
      v7[2] = v12 + 1;
      *(double *)&v7[v12 + 4] = v9 + a3 + v10 * 0.5 - v8;
      ++v6;
      v5 += 2;
      v8 = v9 + a3 + v10 * 0.5;
      --v3;
    }
    while (v3);
    return v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_237E58DCC(uint64_t result)
{
  unint64_t v1;

  v1 = *(_QWORD *)(result + 16);
  if (!v1)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1 < 3)
LABEL_7:
    __break(1u);
  return result;
}

double sub_237E58E58(uint64_t result)
{
  uint64_t v1;
  double v2;
  float64x2_t v3;

  v1 = *(_QWORD *)(result + 16);
  switch(v1)
  {
    case 2:
      v3 = vsubq_f64(*(float64x2_t *)(result + 48), *(float64x2_t *)(result + 32));
      return sqrt(vaddvq_f64(vmulq_f64(v3, v3)));
    case 3:
      sub_237E58DCC(result);
      break;
    case 4:
      sub_237E58C00(result);
      break;
    default:
      return 0.0;
  }
  return v2;
}

CGFloat sub_237E58E9C@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v8;
  uint64_t v9;
  double (*v10)(uint64_t, uint64_t);
  double v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  CGFloat v19;
  uint64_t v20;
  uint64_t v21;
  CGFloat v22;
  uint64_t v23;
  uint64_t v24;
  CGFloat v25;
  CGFloat v26;
  uint64_t v27;
  uint64_t v28;
  CGFloat v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  CGFloat result;
  __int128 v34;
  __int128 v35;
  CGAffineTransform v36;

  v8 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  v10 = *(double (**)(uint64_t, uint64_t))(v9 + 56);
  v11 = v10(v8, v9) * a3 * 0.5;
  v12 = a1[3];
  v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  v14 = (*(double (**)(uint64_t, uint64_t))(v13 + 80))(v12, v13) * a3 * 0.5;
  v15 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v17 = (*(double (**)(uint64_t, uint64_t))(v16 + 80))(v15, v16) * a4 * 0.5;
  v18 = v10(v8, v9) * a4 * 0.5;
  v19 = v10(v8, v9);
  v20 = a1[3];
  v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  v22 = (*(double (**)(uint64_t, uint64_t))(v21 + 80))(v20, v21);
  v23 = a1[3];
  v24 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v23);
  v25 = -(*(double (**)(uint64_t, uint64_t))(v24 + 80))(v23, v24);
  v26 = v10(v8, v9);
  v27 = a1[3];
  v28 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v27);
  v29 = (*(double (**)(uint64_t, uint64_t))(v28 + 8))(v27, v28) + v17 - v11;
  v30 = a1[3];
  v31 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v30);
  v32 = (*(double (**)(uint64_t, uint64_t))(v31 + 32))(v30, v31);
  CGAffineTransformMake(&v36, v19, v22, v25, v26, v29, v32 - v18 - v14);
  result = v36.a;
  v34 = *(_OWORD *)&v36.c;
  v35 = *(_OWORD *)&v36.tx;
  *a2 = *(_OWORD *)&v36.a;
  a2[1] = v34;
  a2[2] = v35;
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_237E590CC()
{
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for SamplePoint()
{
  return &type metadata for SamplePoint;
}

uint64_t sub_237E590EC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_237E590F4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_237E590FC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

__n128 __swift_memcpy28_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 12) = *(_OWORD *)(a2 + 12);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for PerlinNoiseGenerator(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 28))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PerlinNoiseGenerator(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 28) = v3;
  return result;
}

ValueMetadata *type metadata accessor for PerlinNoiseGenerator()
{
  return &type metadata for PerlinNoiseGenerator;
}

uint64_t sub_237E59178()
{
  float *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  float v4;
  float v5;
  float v6;
  float v7;
  float v8;
  float v9;
  uint64_t v10;
  float v11;
  float v12;
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25689D9E0);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_237EE55E0;
  v2 = *(_QWORD *)v0;
  v3 = MEMORY[0x24BEE1448];
  *(_QWORD *)(v1 + 56) = MEMORY[0x24BEE13C8];
  *(_QWORD *)(v1 + 64) = v3;
  *(_QWORD *)(v1 + 32) = v2;
  sub_237EE2A90();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  noise2();
  v5 = v0[5];
  v6 = -v5;
  if (v5 < fabsf(v4))
  {
    if (v4 < v6)
      v4 = -v5;
    if (v4 >= v5)
      v4 = v0[5];
  }
  v7 = v0[3];
  v8 = v0[4] - v7;
  v9 = v0[6];
  fmodf(v7 + (float)((float)(1.0 - (float)((float)(v5 - v4) / (float)(v5 + v5))) * v8), v9);
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_237EE55E0;
  noise2();
  if (v5 < fabsf(v11))
  {
    if (v11 < v6)
      v11 = -v5;
    if (v11 >= v5)
      v11 = v5;
  }
  v12 = fmodf(v7 + (float)(v8 * (float)(1.0 - (float)((float)(v5 - v11) / (float)(v5 + v5)))), v9);
  v13 = MEMORY[0x24BEE1568];
  *(_QWORD *)(v10 + 56) = MEMORY[0x24BEE14E8];
  *(_QWORD *)(v10 + 64) = v13;
  *(float *)(v10 + 32) = v12;
  sub_237EE2A90();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  swift_bridgeObjectRetain();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0x28326573696F6E70;
}

BOOL sub_237E59428(uint64_t a1, uint64_t a2)
{
  _BOOL8 result;

  result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_f32(*(float32x4_t *)(a1 + 8), *(float32x4_t *)(a2 + 8))), 0xFuLL))) & 1) != 0&& *(double *)a1 == *(double *)a2)
  {
    return *(float *)(a1 + 24) == *(float *)(a2 + 24);
  }
  return result;
}

unint64_t sub_237E5947C(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_237E594A8();
  result = sub_237E594EC();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_237E594A8()
{
  unint64_t result;

  result = qword_256899E50;
  if (!qword_256899E50)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE7AA8, &type metadata for PerlinNoiseGenerator);
    atomic_store(result, (unint64_t *)&qword_256899E50);
  }
  return result;
}

unint64_t sub_237E594EC()
{
  unint64_t result;

  result = qword_256899E58;
  if (!qword_256899E58)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE7AD0, &type metadata for PerlinNoiseGenerator);
    atomic_store(result, (unint64_t *)&qword_256899E58);
  }
  return result;
}

void sub_237E59530()
{
  uint64_t v0;

  sub_237E2481C(3);
  qword_25689DF18 = v0;
}

id sub_237E59564()
{
  id v0;
  double v1;
  double v2;
  double v3;
  double v4;
  id result;

  v0 = objc_allocWithZone(MEMORY[0x24BDE56F0]);
  LODWORD(v1) = 1051260355;
  LODWORD(v2) = 1059816735;
  LODWORD(v3) = 0;
  LODWORD(v4) = 1.0;
  result = objc_msgSend(v0, sel_initWithControlPoints__::, v1, v3, v2, v4);
  qword_25689DF20 = (uint64_t)result;
  return result;
}

void sub_237E595B4()
{
  id v0;
  id v1;
  const __CTFontDescriptor *v2;
  CTFontRef v3;

  v0 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_weight_, 22.0, *MEMORY[0x24BEBB610]);
  v1 = objc_msgSend(v0, sel_fontDescriptor);

  v2 = (const __CTFontDescriptor *)objc_msgSend(v1, sel_fontDescriptorWithDesign_, *MEMORY[0x24BEBB578]);
  if (!v2)
    v2 = (const __CTFontDescriptor *)v1;
  v3 = CTFontCreateWithFontDescriptor(v2, 0.0, 0);

  qword_25689DF28 = (uint64_t)v3;
}

unint64_t sub_237E5967C()
{
  uint64_t inited;
  void *v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  unint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(qword_256899E68);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_237EE55E0;
  v1 = (void *)*MEMORY[0x24BEBB360];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BEBB360];
  v2 = qword_256897B00;
  v3 = v1;
  if (v2 != -1)
    swift_once();
  v4 = (void *)qword_25689DF28;
  *(_QWORD *)(inited + 40) = qword_25689DF28;
  v5 = v4;
  result = sub_237EAB3A4(inited);
  qword_25689DF30 = result;
  return result;
}

unint64_t sub_237E5971C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  CGMutablePathRef v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  CGMutablePathRef v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  CGMutablePathRef v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  CGMutablePathRef v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  CGMutablePathRef v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  CGMutablePathRef v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  CGMutablePathRef v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  CGMutablePathRef v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  CGMutablePathRef v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  CGMutablePathRef v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  CGMutablePathRef v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  CGMutablePathRef v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  CGMutablePathRef v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  CGMutablePathRef v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  CGMutablePathRef v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  CGMutablePathRef v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  CGMutablePathRef v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  CGMutablePathRef v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  CGMutablePathRef v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  CGMutablePathRef v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  CGMutablePathRef v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  CGMutablePathRef v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  CGMutablePathRef v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  CGMutablePathRef v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  CGMutablePathRef v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  CGMutablePathRef v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  CGMutablePathRef v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  CGMutablePathRef v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  CGMutablePathRef v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  CGMutablePathRef v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  CGMutablePathRef v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  CGMutablePathRef v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  CGMutablePathRef v297;
  unint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256899E60);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_237EE7B20;
  *(_QWORD *)(v0 + 32) = 48;
  *(_QWORD *)(v0 + 40) = 0xE100000000000000;
  sub_237E5A080(48, 0xE100000000000000);
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = sub_237E5A1E0(48, 0xE100000000000000);
  *(_QWORD *)(v0 + 48) = v2;
  *(_QWORD *)(v0 + 56) = v4;
  *(_QWORD *)(v0 + 64) = v6;
  *(_QWORD *)(v0 + 72) = v8;
  *(_QWORD *)(v0 + 80) = v9;
  *(_QWORD *)(v0 + 88) = 49;
  *(_QWORD *)(v0 + 96) = 0xE100000000000000;
  sub_237E5A080(49, 0xE100000000000000);
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v18 = sub_237E5A1E0(49, 0xE100000000000000);
  *(_QWORD *)(v0 + 104) = v11;
  *(_QWORD *)(v0 + 112) = v13;
  *(_QWORD *)(v0 + 120) = v15;
  *(_QWORD *)(v0 + 128) = v17;
  *(_QWORD *)(v0 + 136) = v18;
  *(_QWORD *)(v0 + 144) = 50;
  *(_QWORD *)(v0 + 152) = 0xE100000000000000;
  sub_237E5A080(50, 0xE100000000000000);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v27 = sub_237E5A1E0(50, 0xE100000000000000);
  *(_QWORD *)(v0 + 160) = v20;
  *(_QWORD *)(v0 + 168) = v22;
  *(_QWORD *)(v0 + 176) = v24;
  *(_QWORD *)(v0 + 184) = v26;
  *(_QWORD *)(v0 + 192) = v27;
  *(_QWORD *)(v0 + 200) = 51;
  *(_QWORD *)(v0 + 208) = 0xE100000000000000;
  sub_237E5A080(51, 0xE100000000000000);
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v35 = v34;
  v36 = sub_237E5A1E0(51, 0xE100000000000000);
  *(_QWORD *)(v0 + 216) = v29;
  *(_QWORD *)(v0 + 224) = v31;
  *(_QWORD *)(v0 + 232) = v33;
  *(_QWORD *)(v0 + 240) = v35;
  *(_QWORD *)(v0 + 248) = v36;
  *(_QWORD *)(v0 + 256) = 52;
  *(_QWORD *)(v0 + 264) = 0xE100000000000000;
  sub_237E5A080(52, 0xE100000000000000);
  v38 = v37;
  v40 = v39;
  v42 = v41;
  v44 = v43;
  v45 = sub_237E5A1E0(52, 0xE100000000000000);
  *(_QWORD *)(v0 + 272) = v38;
  *(_QWORD *)(v0 + 280) = v40;
  *(_QWORD *)(v0 + 288) = v42;
  *(_QWORD *)(v0 + 296) = v44;
  *(_QWORD *)(v0 + 304) = v45;
  *(_QWORD *)(v0 + 312) = 53;
  *(_QWORD *)(v0 + 320) = 0xE100000000000000;
  sub_237E5A080(53, 0xE100000000000000);
  v47 = v46;
  v49 = v48;
  v51 = v50;
  v53 = v52;
  v54 = sub_237E5A1E0(53, 0xE100000000000000);
  *(_QWORD *)(v0 + 328) = v47;
  *(_QWORD *)(v0 + 336) = v49;
  *(_QWORD *)(v0 + 344) = v51;
  *(_QWORD *)(v0 + 352) = v53;
  *(_QWORD *)(v0 + 360) = v54;
  *(_QWORD *)(v0 + 368) = 54;
  *(_QWORD *)(v0 + 376) = 0xE100000000000000;
  sub_237E5A080(54, 0xE100000000000000);
  v56 = v55;
  v58 = v57;
  v60 = v59;
  v62 = v61;
  v63 = sub_237E5A1E0(54, 0xE100000000000000);
  *(_QWORD *)(v0 + 384) = v56;
  *(_QWORD *)(v0 + 392) = v58;
  *(_QWORD *)(v0 + 400) = v60;
  *(_QWORD *)(v0 + 408) = v62;
  *(_QWORD *)(v0 + 416) = v63;
  *(_QWORD *)(v0 + 424) = 55;
  *(_QWORD *)(v0 + 432) = 0xE100000000000000;
  sub_237E5A080(55, 0xE100000000000000);
  v65 = v64;
  v67 = v66;
  v69 = v68;
  v71 = v70;
  v72 = sub_237E5A1E0(55, 0xE100000000000000);
  *(_QWORD *)(v0 + 440) = v65;
  *(_QWORD *)(v0 + 448) = v67;
  *(_QWORD *)(v0 + 456) = v69;
  *(_QWORD *)(v0 + 464) = v71;
  *(_QWORD *)(v0 + 472) = v72;
  *(_QWORD *)(v0 + 480) = 56;
  *(_QWORD *)(v0 + 488) = 0xE100000000000000;
  sub_237E5A080(56, 0xE100000000000000);
  v74 = v73;
  v76 = v75;
  v78 = v77;
  v80 = v79;
  v81 = sub_237E5A1E0(56, 0xE100000000000000);
  *(_QWORD *)(v0 + 496) = v74;
  *(_QWORD *)(v0 + 504) = v76;
  *(_QWORD *)(v0 + 512) = v78;
  *(_QWORD *)(v0 + 520) = v80;
  *(_QWORD *)(v0 + 528) = v81;
  *(_QWORD *)(v0 + 536) = 57;
  *(_QWORD *)(v0 + 544) = 0xE100000000000000;
  sub_237E5A080(57, 0xE100000000000000);
  v83 = v82;
  v85 = v84;
  v87 = v86;
  v89 = v88;
  v90 = sub_237E5A1E0(57, 0xE100000000000000);
  *(_QWORD *)(v0 + 552) = v83;
  *(_QWORD *)(v0 + 560) = v85;
  *(_QWORD *)(v0 + 568) = v87;
  *(_QWORD *)(v0 + 576) = v89;
  *(_QWORD *)(v0 + 584) = v90;
  *(_QWORD *)(v0 + 592) = 41177;
  *(_QWORD *)(v0 + 600) = 0xA200000000000000;
  sub_237E5A080(41177, 0xA200000000000000);
  v92 = v91;
  v94 = v93;
  v96 = v95;
  v98 = v97;
  v99 = sub_237E5A1E0(41177, 0xA200000000000000);
  *(_QWORD *)(v0 + 608) = v92;
  *(_QWORD *)(v0 + 616) = v94;
  *(_QWORD *)(v0 + 624) = v96;
  *(_QWORD *)(v0 + 632) = v98;
  *(_QWORD *)(v0 + 640) = v99;
  *(_QWORD *)(v0 + 648) = 41433;
  *(_QWORD *)(v0 + 656) = 0xA200000000000000;
  sub_237E5A080(41433, 0xA200000000000000);
  v101 = v100;
  v103 = v102;
  v105 = v104;
  v107 = v106;
  v108 = sub_237E5A1E0(41433, 0xA200000000000000);
  *(_QWORD *)(v0 + 664) = v101;
  *(_QWORD *)(v0 + 672) = v103;
  *(_QWORD *)(v0 + 680) = v105;
  *(_QWORD *)(v0 + 688) = v107;
  *(_QWORD *)(v0 + 696) = v108;
  *(_QWORD *)(v0 + 704) = 41689;
  *(_QWORD *)(v0 + 712) = 0xA200000000000000;
  sub_237E5A080(41689, 0xA200000000000000);
  v110 = v109;
  v112 = v111;
  v114 = v113;
  v116 = v115;
  v117 = sub_237E5A1E0(41689, 0xA200000000000000);
  *(_QWORD *)(v0 + 720) = v110;
  *(_QWORD *)(v0 + 728) = v112;
  *(_QWORD *)(v0 + 736) = v114;
  *(_QWORD *)(v0 + 744) = v116;
  *(_QWORD *)(v0 + 752) = v117;
  *(_QWORD *)(v0 + 760) = 41945;
  *(_QWORD *)(v0 + 768) = 0xA200000000000000;
  sub_237E5A080(41945, 0xA200000000000000);
  v119 = v118;
  v121 = v120;
  v123 = v122;
  v125 = v124;
  v126 = sub_237E5A1E0(41945, 0xA200000000000000);
  *(_QWORD *)(v0 + 776) = v119;
  *(_QWORD *)(v0 + 784) = v121;
  *(_QWORD *)(v0 + 792) = v123;
  *(_QWORD *)(v0 + 800) = v125;
  *(_QWORD *)(v0 + 808) = v126;
  *(_QWORD *)(v0 + 816) = 42201;
  *(_QWORD *)(v0 + 824) = 0xA200000000000000;
  sub_237E5A080(42201, 0xA200000000000000);
  v128 = v127;
  v130 = v129;
  v132 = v131;
  v134 = v133;
  v135 = sub_237E5A1E0(42201, 0xA200000000000000);
  *(_QWORD *)(v0 + 832) = v128;
  *(_QWORD *)(v0 + 840) = v130;
  *(_QWORD *)(v0 + 848) = v132;
  *(_QWORD *)(v0 + 856) = v134;
  *(_QWORD *)(v0 + 864) = v135;
  *(_QWORD *)(v0 + 872) = 42457;
  *(_QWORD *)(v0 + 880) = 0xA200000000000000;
  sub_237E5A080(42457, 0xA200000000000000);
  v137 = v136;
  v139 = v138;
  v141 = v140;
  v143 = v142;
  v144 = sub_237E5A1E0(42457, 0xA200000000000000);
  *(_QWORD *)(v0 + 888) = v137;
  *(_QWORD *)(v0 + 896) = v139;
  *(_QWORD *)(v0 + 904) = v141;
  *(_QWORD *)(v0 + 912) = v143;
  *(_QWORD *)(v0 + 920) = v144;
  *(_QWORD *)(v0 + 928) = 42713;
  *(_QWORD *)(v0 + 936) = 0xA200000000000000;
  sub_237E5A080(42713, 0xA200000000000000);
  v146 = v145;
  v148 = v147;
  v150 = v149;
  v152 = v151;
  v153 = sub_237E5A1E0(42713, 0xA200000000000000);
  *(_QWORD *)(v0 + 944) = v146;
  *(_QWORD *)(v0 + 952) = v148;
  *(_QWORD *)(v0 + 960) = v150;
  *(_QWORD *)(v0 + 968) = v152;
  *(_QWORD *)(v0 + 976) = v153;
  *(_QWORD *)(v0 + 984) = 42969;
  *(_QWORD *)(v0 + 992) = 0xA200000000000000;
  sub_237E5A080(42969, 0xA200000000000000);
  v155 = v154;
  v157 = v156;
  v159 = v158;
  v161 = v160;
  v162 = sub_237E5A1E0(42969, 0xA200000000000000);
  *(_QWORD *)(v0 + 1000) = v155;
  *(_QWORD *)(v0 + 1008) = v157;
  *(_QWORD *)(v0 + 1016) = v159;
  *(_QWORD *)(v0 + 1024) = v161;
  *(_QWORD *)(v0 + 1032) = v162;
  *(_QWORD *)(v0 + 1040) = 43225;
  *(_QWORD *)(v0 + 1048) = 0xA200000000000000;
  sub_237E5A080(43225, 0xA200000000000000);
  v164 = v163;
  v166 = v165;
  v168 = v167;
  v170 = v169;
  v171 = sub_237E5A1E0(43225, 0xA200000000000000);
  *(_QWORD *)(v0 + 1056) = v164;
  *(_QWORD *)(v0 + 1064) = v166;
  *(_QWORD *)(v0 + 1072) = v168;
  *(_QWORD *)(v0 + 1080) = v170;
  *(_QWORD *)(v0 + 1088) = v171;
  *(_QWORD *)(v0 + 1096) = 43481;
  *(_QWORD *)(v0 + 1104) = 0xA200000000000000;
  sub_237E5A080(43481, 0xA200000000000000);
  v173 = v172;
  v175 = v174;
  v177 = v176;
  v179 = v178;
  v180 = sub_237E5A1E0(43481, 0xA200000000000000);
  *(_QWORD *)(v0 + 1112) = v173;
  *(_QWORD *)(v0 + 1120) = v175;
  *(_QWORD *)(v0 + 1128) = v177;
  *(_QWORD *)(v0 + 1136) = v179;
  *(_QWORD *)(v0 + 1144) = v180;
  *(_QWORD *)(v0 + 1152) = 46299;
  *(_QWORD *)(v0 + 1160) = 0xA200000000000000;
  sub_237E5A080(46299, 0xA200000000000000);
  v182 = v181;
  v184 = v183;
  v186 = v185;
  v188 = v187;
  v189 = sub_237E5A1E0(46299, 0xA200000000000000);
  *(_QWORD *)(v0 + 1168) = v182;
  *(_QWORD *)(v0 + 1176) = v184;
  *(_QWORD *)(v0 + 1184) = v186;
  *(_QWORD *)(v0 + 1192) = v188;
  *(_QWORD *)(v0 + 1200) = v189;
  *(_QWORD *)(v0 + 1208) = 46555;
  *(_QWORD *)(v0 + 1216) = 0xA200000000000000;
  sub_237E5A080(46555, 0xA200000000000000);
  v191 = v190;
  v193 = v192;
  v195 = v194;
  v197 = v196;
  v198 = sub_237E5A1E0(46555, 0xA200000000000000);
  *(_QWORD *)(v0 + 1224) = v191;
  *(_QWORD *)(v0 + 1232) = v193;
  *(_QWORD *)(v0 + 1240) = v195;
  *(_QWORD *)(v0 + 1248) = v197;
  *(_QWORD *)(v0 + 1256) = v198;
  *(_QWORD *)(v0 + 1264) = 46811;
  *(_QWORD *)(v0 + 1272) = 0xA200000000000000;
  sub_237E5A080(46811, 0xA200000000000000);
  v200 = v199;
  v202 = v201;
  v204 = v203;
  v206 = v205;
  v207 = sub_237E5A1E0(46811, 0xA200000000000000);
  *(_QWORD *)(v0 + 1280) = v200;
  *(_QWORD *)(v0 + 1288) = v202;
  *(_QWORD *)(v0 + 1296) = v204;
  *(_QWORD *)(v0 + 1304) = v206;
  *(_QWORD *)(v0 + 1312) = v207;
  *(_QWORD *)(v0 + 1320) = 10921440;
  *(_QWORD *)(v0 + 1328) = 0xA300000000000000;
  sub_237E5A080(10921440, 0xA300000000000000);
  v209 = v208;
  v211 = v210;
  v213 = v212;
  v215 = v214;
  v216 = sub_237E5A1E0(10921440, 0xA300000000000000);
  *(_QWORD *)(v0 + 1336) = v209;
  *(_QWORD *)(v0 + 1344) = v211;
  *(_QWORD *)(v0 + 1352) = v213;
  *(_QWORD *)(v0 + 1360) = v215;
  *(_QWORD *)(v0 + 1368) = v216;
  *(_QWORD *)(v0 + 1376) = 10986976;
  *(_QWORD *)(v0 + 1384) = 0xA300000000000000;
  sub_237E5A080(10986976, 0xA300000000000000);
  v218 = v217;
  v220 = v219;
  v222 = v221;
  v224 = v223;
  v225 = sub_237E5A1E0(10986976, 0xA300000000000000);
  *(_QWORD *)(v0 + 1392) = v218;
  *(_QWORD *)(v0 + 1400) = v220;
  *(_QWORD *)(v0 + 1408) = v222;
  *(_QWORD *)(v0 + 1416) = v224;
  *(_QWORD *)(v0 + 1424) = v225;
  *(_QWORD *)(v0 + 1432) = 11052512;
  *(_QWORD *)(v0 + 1440) = 0xA300000000000000;
  sub_237E5A080(11052512, 0xA300000000000000);
  v227 = v226;
  v229 = v228;
  v231 = v230;
  v233 = v232;
  v234 = sub_237E5A1E0(11052512, 0xA300000000000000);
  *(_QWORD *)(v0 + 1448) = v227;
  *(_QWORD *)(v0 + 1456) = v229;
  *(_QWORD *)(v0 + 1464) = v231;
  *(_QWORD *)(v0 + 1472) = v233;
  *(_QWORD *)(v0 + 1480) = v234;
  *(_QWORD *)(v0 + 1488) = 11118048;
  *(_QWORD *)(v0 + 1496) = 0xA300000000000000;
  sub_237E5A080(11118048, 0xA300000000000000);
  v236 = v235;
  v238 = v237;
  v240 = v239;
  v242 = v241;
  v243 = sub_237E5A1E0(11118048, 0xA300000000000000);
  *(_QWORD *)(v0 + 1504) = v236;
  *(_QWORD *)(v0 + 1512) = v238;
  *(_QWORD *)(v0 + 1520) = v240;
  *(_QWORD *)(v0 + 1528) = v242;
  *(_QWORD *)(v0 + 1536) = v243;
  *(_QWORD *)(v0 + 1544) = 11183584;
  *(_QWORD *)(v0 + 1552) = 0xA300000000000000;
  sub_237E5A080(11183584, 0xA300000000000000);
  v245 = v244;
  v247 = v246;
  v249 = v248;
  v251 = v250;
  v252 = sub_237E5A1E0(11183584, 0xA300000000000000);
  *(_QWORD *)(v0 + 1560) = v245;
  *(_QWORD *)(v0 + 1568) = v247;
  *(_QWORD *)(v0 + 1576) = v249;
  *(_QWORD *)(v0 + 1584) = v251;
  *(_QWORD *)(v0 + 1592) = v252;
  *(_QWORD *)(v0 + 1600) = 11249120;
  *(_QWORD *)(v0 + 1608) = 0xA300000000000000;
  sub_237E5A080(11249120, 0xA300000000000000);
  v254 = v253;
  v256 = v255;
  v258 = v257;
  v260 = v259;
  v261 = sub_237E5A1E0(11249120, 0xA300000000000000);
  *(_QWORD *)(v0 + 1616) = v254;
  *(_QWORD *)(v0 + 1624) = v256;
  *(_QWORD *)(v0 + 1632) = v258;
  *(_QWORD *)(v0 + 1640) = v260;
  *(_QWORD *)(v0 + 1648) = v261;
  *(_QWORD *)(v0 + 1656) = 11314656;
  *(_QWORD *)(v0 + 1664) = 0xA300000000000000;
  sub_237E5A080(11314656, 0xA300000000000000);
  v263 = v262;
  v265 = v264;
  v267 = v266;
  v269 = v268;
  v270 = sub_237E5A1E0(11314656, 0xA300000000000000);
  *(_QWORD *)(v0 + 1672) = v263;
  *(_QWORD *)(v0 + 1680) = v265;
  *(_QWORD *)(v0 + 1688) = v267;
  *(_QWORD *)(v0 + 1696) = v269;
  *(_QWORD *)(v0 + 1704) = v270;
  *(_QWORD *)(v0 + 1712) = 11380192;
  *(_QWORD *)(v0 + 1720) = 0xA300000000000000;
  sub_237E5A080(11380192, 0xA300000000000000);
  v272 = v271;
  v274 = v273;
  v276 = v275;
  v278 = v277;
  v279 = sub_237E5A1E0(11380192, 0xA300000000000000);
  *(_QWORD *)(v0 + 1728) = v272;
  *(_QWORD *)(v0 + 1736) = v274;
  *(_QWORD *)(v0 + 1744) = v276;
  *(_QWORD *)(v0 + 1752) = v278;
  *(_QWORD *)(v0 + 1760) = v279;
  *(_QWORD *)(v0 + 1768) = 11445728;
  *(_QWORD *)(v0 + 1776) = 0xA300000000000000;
  sub_237E5A080(11445728, 0xA300000000000000);
  v281 = v280;
  v283 = v282;
  v285 = v284;
  v287 = v286;
  v288 = sub_237E5A1E0(11445728, 0xA300000000000000);
  *(_QWORD *)(v0 + 1784) = v281;
  *(_QWORD *)(v0 + 1792) = v283;
  *(_QWORD *)(v0 + 1800) = v285;
  *(_QWORD *)(v0 + 1808) = v287;
  *(_QWORD *)(v0 + 1816) = v288;
  *(_QWORD *)(v0 + 1824) = 11511264;
  *(_QWORD *)(v0 + 1832) = 0xA300000000000000;
  sub_237E5A080(11511264, 0xA300000000000000);
  v290 = v289;
  v292 = v291;
  v294 = v293;
  v296 = v295;
  v297 = sub_237E5A1E0(11511264, 0xA300000000000000);
  *(_QWORD *)(v0 + 1840) = v290;
  *(_QWORD *)(v0 + 1848) = v292;
  *(_QWORD *)(v0 + 1856) = v294;
  *(_QWORD *)(v0 + 1864) = v296;
  *(_QWORD *)(v0 + 1872) = v297;
  result = sub_237EAB82C(v0);
  qword_25689DF38 = result;
  return result;
}

void sub_237E5A080(uint64_t a1, unint64_t a2)
{
  const __CTFont *v4;
  const UniChar *v5;
  unint64_t v6;
  uint64_t v7;
  _BOOL4 GlyphsForCharacters;
  const CGPath *PathForGlyph;
  const CGPath *v10;

  if (qword_256897AF0 != -1)
    swift_once();
  v4 = (const __CTFont *)qword_25689DF18;
  swift_bridgeObjectRetain();
  v5 = (const UniChar *)sub_237E7394C(a1, a2);
  swift_bridgeObjectRelease();
  v6 = *((_QWORD *)v5 + 2);
  v7 = sub_237E6F55C(0, v6);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v7 = (uint64_t)sub_237E61A64(0, *(_QWORD *)(v7 + 16), 0, (char *)v7);
  GlyphsForCharacters = CTFontGetGlyphsForCharacters(v4, v5 + 16, (CGGlyph *)(v7 + 32), v6);
  swift_release();
  if (!GlyphsForCharacters)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return;
  }
  if (*(_QWORD *)(v7 + 16))
  {
    PathForGlyph = CTFontCreatePathForGlyph(v4, *(_WORD *)(v7 + 32), 0);
    if (PathForGlyph)
    {
      v10 = PathForGlyph;
      CGPathGetBoundingBox(PathForGlyph);
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_9;
  }
  __break(1u);
}

CGMutablePathRef sub_237E5A1E0(uint64_t a1, uint64_t a2)
{
  CGMutablePathRef Mutable;

  if (a1 == 48 && a2 == 0xE100000000000000 || (sub_237EE31BC() & 1) != 0)
    goto LABEL_4;
  if (a1 == 49 && a2 == 0xE100000000000000 || (sub_237EE31BC() & 1) != 0)
  {
LABEL_134:
    Mutable = CGPathCreateMutable();
    sub_237EE2DB4();
    sub_237EE2DCC();
    sub_237EE2DCC();
    sub_237EE2DCC();
    goto LABEL_5;
  }
  if (a1 == 50 && a2 == 0xE100000000000000 || (sub_237EE31BC() & 1) != 0)
  {
    Mutable = CGPathCreateMutable();
    sub_237EE2DB4();
    sub_237EE2DC0();
    goto LABEL_5;
  }
  if ((a1 != 51 || a2 != 0xE100000000000000) && (sub_237EE31BC() & 1) == 0)
  {
    if (a1 == 52 && a2 == 0xE100000000000000 || (sub_237EE31BC() & 1) != 0)
      goto LABEL_134;
    if (a1 == 53 && a2 == 0xE100000000000000
      || (sub_237EE31BC() & 1) != 0
      || a1 == 54 && a2 == 0xE100000000000000
      || (sub_237EE31BC() & 1) != 0)
    {
      goto LABEL_4;
    }
    if (a1 == 55 && a2 == 0xE100000000000000 || (sub_237EE31BC() & 1) != 0)
    {
      Mutable = CGPathCreateMutable();
      sub_237EE2DB4();
      sub_237EE2DCC();
      sub_237EE2DCC();
      sub_237EE2DCC();
      sub_237EE2DCC();
      sub_237EE2DC0();
      return Mutable;
    }
    if (a1 == 56 && a2 == 0xE100000000000000
      || (sub_237EE31BC() & 1) != 0
      || a1 == 57 && a2 == 0xE100000000000000
      || (sub_237EE31BC() & 1) != 0)
    {
      goto LABEL_4;
    }
    if (a1 == 41177 && a2 == 0xA200000000000000 || (sub_237EE31BC() & 1) != 0)
      goto LABEL_94;
    if (a1 == 41433 && a2 == 0xA200000000000000
      || (sub_237EE31BC() & 1) != 0
      || a1 == 41689 && a2 == 0xA200000000000000
      || (sub_237EE31BC() & 1) != 0)
    {
      goto LABEL_134;
    }
    if (a1 == 41945 && a2 == 0xA200000000000000 || (sub_237EE31BC() & 1) != 0)
      goto LABEL_4;
    if (a1 == 42201 && a2 == 0xA200000000000000 || (sub_237EE31BC() & 1) != 0)
      goto LABEL_134;
    if (a1 == 42457 && a2 == 0xA200000000000000 || (sub_237EE31BC() & 1) != 0)
    {
      Mutable = CGPathCreateMutable();
      sub_237EE2DB4();
      sub_237EE2DCC();
      goto LABEL_5;
    }
    if (a1 == 42713 && a2 == 0xA200000000000000
      || (sub_237EE31BC() & 1) != 0
      || a1 == 42969 && a2 == 0xA200000000000000
      || (sub_237EE31BC() & 1) != 0
      || a1 == 43225 && a2 == 0xA200000000000000
      || (sub_237EE31BC() & 1) != 0
      || a1 == 43481 && a2 == 0xA200000000000000
      || (sub_237EE31BC() & 1) != 0)
    {
      goto LABEL_134;
    }
    if (a1 == 46299 && a2 == 0xA200000000000000 || (sub_237EE31BC() & 1) != 0)
      goto LABEL_94;
    if (a1 == 46555 && a2 == 0xA200000000000000 || (sub_237EE31BC() & 1) != 0)
      goto LABEL_134;
    if (a1 == 46811 && a2 == 0xA200000000000000 || (sub_237EE31BC() & 1) != 0)
    {
LABEL_94:
      Mutable = CGPathCreateMutable();
      sub_237EE2DB4();
      sub_237EE2DCC();
      sub_237EE2DCC();
      sub_237EE2DCC();
      sub_237EE2DCC();
      goto LABEL_5;
    }
    if ((a1 != 10921440 || a2 != 0xA300000000000000) && (sub_237EE31BC() & 1) == 0)
    {
      if (a1 == 10986976 && a2 == 0xA300000000000000 || (sub_237EE31BC() & 1) != 0)
      {
        Mutable = CGPathCreateMutable();
        sub_237EE2DB4();
        sub_237EE2DC0();
        sub_237EE2DCC();
        sub_237EE2DCC();
        sub_237EE2DCC();
        goto LABEL_5;
      }
      if (a1 == 11052512 && a2 == 0xA300000000000000
        || (sub_237EE31BC() & 1) != 0
        || a1 == 11118048 && a2 == 0xA300000000000000
        || (sub_237EE31BC() & 1) != 0)
      {
        goto LABEL_134;
      }
      if ((a1 != 11183584 || a2 != 0xA300000000000000)
        && (sub_237EE31BC() & 1) == 0
        && (a1 != 11249120 || a2 != 0xA300000000000000)
        && (sub_237EE31BC() & 1) == 0
        && (a1 != 11314656 || a2 != 0xA300000000000000)
        && (sub_237EE31BC() & 1) == 0
        && (a1 != 11380192 || a2 != 0xA300000000000000)
        && (sub_237EE31BC() & 1) == 0
        && (a1 != 11445728 || a2 != 0xA300000000000000)
        && (sub_237EE31BC() & 1) == 0)
      {
        if (a1 != 11511264 || a2 != 0xA300000000000000)
          sub_237EE31BC();
        goto LABEL_134;
      }
    }
  }
LABEL_4:
  Mutable = CGPathCreateMutable();
  sub_237EE2DB4();
  sub_237EE2DCC();
  sub_237EE2DCC();
LABEL_5:
  sub_237EE2DCC();
  return Mutable;
}

ValueMetadata *type metadata accessor for PlayClockFaceConstants()
{
  return &type metadata for PlayClockFaceConstants;
}

ValueMetadata *type metadata accessor for PlayClockFaceConstants.Alarm()
{
  return &type metadata for PlayClockFaceConstants.Alarm;
}

void destroy for PlayClockFaceConstants.Alarm.Metrics(uint64_t a1)
{

}

uint64_t initializeWithCopy for PlayClockFaceConstants.Alarm.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  void *v4;
  id v5;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = v4;
  return a1;
}

_QWORD *assignWithCopy for PlayClockFaceConstants.Alarm.Metrics(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  v3 = (void *)a2[4];
  v4 = (void *)a1[4];
  a1[4] = v3;
  v5 = v3;

  return a1;
}

uint64_t assignWithTake for PlayClockFaceConstants.Alarm.Metrics(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  void *v4;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  return a1;
}

uint64_t getEnumTagSinglePayload for PlayClockFaceConstants.Alarm.Metrics(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PlayClockFaceConstants.Alarm.Metrics(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayClockFaceConstants.Alarm.Metrics()
{
  return &type metadata for PlayClockFaceConstants.Alarm.Metrics;
}

_QWORD *sub_237E5CA74(_QWORD *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(_QWORD *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *(_QWORD *)a2;
    *a1 = *(_QWORD *)a2;
    a1 = (_QWORD *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_237EE1D70();
    v8 = *(void (**)(_QWORD *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = type metadata accessor for SolarEvent(0);
    *((_BYTE *)a1 + *(int *)(v9 + 20)) = a2[*(int *)(v9 + 20)];
    *(_DWORD *)((char *)a1 + *(int *)(v9 + 24)) = *(_DWORD *)&a2[*(int *)(v9 + 24)];
    v10 = a3[5];
    v11 = (char *)a1 + v10;
    v12 = &a2[v10];
    v8((_QWORD *)((char *)a1 + v10), &a2[v10], v7);
    v11[*(int *)(v9 + 20)] = v12[*(int *)(v9 + 20)];
    *(_DWORD *)&v11[*(int *)(v9 + 24)] = *(_DWORD *)&v12[*(int *)(v9 + 24)];
    v13 = a3[6];
    v14 = (char *)a1 + v13;
    v15 = &a2[v13];
    v8((_QWORD *)((char *)a1 + v13), &a2[v13], v7);
    v14[*(int *)(v9 + 20)] = v15[*(int *)(v9 + 20)];
    *(_DWORD *)&v14[*(int *)(v9 + 24)] = *(_DWORD *)&v15[*(int *)(v9 + 24)];
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = &a2[v16];
    v8((_QWORD *)((char *)a1 + v16), &a2[v16], v7);
    v17[*(int *)(v9 + 20)] = v18[*(int *)(v9 + 20)];
    *(_DWORD *)&v17[*(int *)(v9 + 24)] = *(_DWORD *)&v18[*(int *)(v9 + 24)];
    v19 = a3[8];
    v20 = (char *)a1 + v19;
    v21 = &a2[v19];
    v8((_QWORD *)((char *)a1 + v19), v21, v7);
    v20[*(int *)(v9 + 20)] = v21[*(int *)(v9 + 20)];
    *(_DWORD *)&v20[*(int *)(v9 + 24)] = *(_DWORD *)&v21[*(int *)(v9 + 24)];
  }
  return a1;
}

uint64_t type metadata accessor for SolarEvent(uint64_t a1)
{
  return sub_237E42BC0(a1, qword_256899F68);
}

uint64_t sub_237E5CC0C(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = sub_237EE1D70();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  v6(a1 + a2[5], v4);
  v6(a1 + a2[6], v4);
  v6(a1 + a2[7], v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + a2[8], v4);
}

uint64_t sub_237E5CCB0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_237EE1D70();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = type metadata accessor for SolarEvent(0);
  *(_BYTE *)(a1 + *(int *)(v8 + 20)) = *(_BYTE *)(a2 + *(int *)(v8 + 20));
  *(_DWORD *)(a1 + *(int *)(v8 + 24)) = *(_DWORD *)(a2 + *(int *)(v8 + 24));
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v7(a1 + v9, a2 + v9, v6);
  *(_BYTE *)(v10 + *(int *)(v8 + 20)) = *(_BYTE *)(v11 + *(int *)(v8 + 20));
  *(_DWORD *)(v10 + *(int *)(v8 + 24)) = *(_DWORD *)(v11 + *(int *)(v8 + 24));
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v7(a1 + v12, a2 + v12, v6);
  *(_BYTE *)(v13 + *(int *)(v8 + 20)) = *(_BYTE *)(v14 + *(int *)(v8 + 20));
  *(_DWORD *)(v13 + *(int *)(v8 + 24)) = *(_DWORD *)(v14 + *(int *)(v8 + 24));
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v7(a1 + v15, a2 + v15, v6);
  *(_BYTE *)(v16 + *(int *)(v8 + 20)) = *(_BYTE *)(v17 + *(int *)(v8 + 20));
  *(_DWORD *)(v16 + *(int *)(v8 + 24)) = *(_DWORD *)(v17 + *(int *)(v8 + 24));
  v18 = a3[8];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v7(a1 + v18, v20, v6);
  *(_BYTE *)(v19 + *(int *)(v8 + 20)) = *(_BYTE *)(v20 + *(int *)(v8 + 20));
  *(_DWORD *)(v19 + *(int *)(v8 + 24)) = *(_DWORD *)(v20 + *(int *)(v8 + 24));
  return a1;
}

uint64_t sub_237E5CE08(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_237EE1D70();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v8 = type metadata accessor for SolarEvent(0);
  *(_BYTE *)(a1 + *(int *)(v8 + 20)) = *(_BYTE *)(a2 + *(int *)(v8 + 20));
  *(_DWORD *)(a1 + *(int *)(v8 + 24)) = *(_DWORD *)(a2 + *(int *)(v8 + 24));
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v7(a1 + v9, a2 + v9, v6);
  *(_BYTE *)(v10 + *(int *)(v8 + 20)) = *(_BYTE *)(v11 + *(int *)(v8 + 20));
  *(_DWORD *)(v10 + *(int *)(v8 + 24)) = *(_DWORD *)(v11 + *(int *)(v8 + 24));
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v7(a1 + v12, a2 + v12, v6);
  *(_BYTE *)(v13 + *(int *)(v8 + 20)) = *(_BYTE *)(v14 + *(int *)(v8 + 20));
  *(_DWORD *)(v13 + *(int *)(v8 + 24)) = *(_DWORD *)(v14 + *(int *)(v8 + 24));
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v7(a1 + v15, a2 + v15, v6);
  *(_BYTE *)(v16 + *(int *)(v8 + 20)) = *(_BYTE *)(v17 + *(int *)(v8 + 20));
  *(_DWORD *)(v16 + *(int *)(v8 + 24)) = *(_DWORD *)(v17 + *(int *)(v8 + 24));
  v18 = a3[8];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v7(a1 + v18, v20, v6);
  *(_BYTE *)(v19 + *(int *)(v8 + 20)) = *(_BYTE *)(v20 + *(int *)(v8 + 20));
  *(_DWORD *)(v19 + *(int *)(v8 + 24)) = *(_DWORD *)(v20 + *(int *)(v8 + 24));
  return a1;
}

uint64_t sub_237E5CF60(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_237EE1D70();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = type metadata accessor for SolarEvent(0);
  *(_BYTE *)(a1 + *(int *)(v8 + 20)) = *(_BYTE *)(a2 + *(int *)(v8 + 20));
  *(_DWORD *)(a1 + *(int *)(v8 + 24)) = *(_DWORD *)(a2 + *(int *)(v8 + 24));
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v7(a1 + v9, a2 + v9, v6);
  *(_BYTE *)(v10 + *(int *)(v8 + 20)) = *(_BYTE *)(v11 + *(int *)(v8 + 20));
  *(_DWORD *)(v10 + *(int *)(v8 + 24)) = *(_DWORD *)(v11 + *(int *)(v8 + 24));
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v7(a1 + v12, a2 + v12, v6);
  *(_BYTE *)(v13 + *(int *)(v8 + 20)) = *(_BYTE *)(v14 + *(int *)(v8 + 20));
  *(_DWORD *)(v13 + *(int *)(v8 + 24)) = *(_DWORD *)(v14 + *(int *)(v8 + 24));
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v7(a1 + v15, a2 + v15, v6);
  *(_BYTE *)(v16 + *(int *)(v8 + 20)) = *(_BYTE *)(v17 + *(int *)(v8 + 20));
  *(_DWORD *)(v16 + *(int *)(v8 + 24)) = *(_DWORD *)(v17 + *(int *)(v8 + 24));
  v18 = a3[8];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v7(a1 + v18, v20, v6);
  *(_BYTE *)(v19 + *(int *)(v8 + 20)) = *(_BYTE *)(v20 + *(int *)(v8 + 20));
  *(_DWORD *)(v19 + *(int *)(v8 + 24)) = *(_DWORD *)(v20 + *(int *)(v8 + 24));
  return a1;
}

uint64_t sub_237E5D0B8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_237EE1D70();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = type metadata accessor for SolarEvent(0);
  *(_BYTE *)(a1 + *(int *)(v8 + 20)) = *(_BYTE *)(a2 + *(int *)(v8 + 20));
  *(_DWORD *)(a1 + *(int *)(v8 + 24)) = *(_DWORD *)(a2 + *(int *)(v8 + 24));
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v7(a1 + v9, a2 + v9, v6);
  *(_BYTE *)(v10 + *(int *)(v8 + 20)) = *(_BYTE *)(v11 + *(int *)(v8 + 20));
  *(_DWORD *)(v10 + *(int *)(v8 + 24)) = *(_DWORD *)(v11 + *(int *)(v8 + 24));
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v7(a1 + v12, a2 + v12, v6);
  *(_BYTE *)(v13 + *(int *)(v8 + 20)) = *(_BYTE *)(v14 + *(int *)(v8 + 20));
  *(_DWORD *)(v13 + *(int *)(v8 + 24)) = *(_DWORD *)(v14 + *(int *)(v8 + 24));
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v7(a1 + v15, a2 + v15, v6);
  *(_BYTE *)(v16 + *(int *)(v8 + 20)) = *(_BYTE *)(v17 + *(int *)(v8 + 20));
  *(_DWORD *)(v16 + *(int *)(v8 + 24)) = *(_DWORD *)(v17 + *(int *)(v8 + 24));
  v18 = a3[8];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v7(a1 + v18, v20, v6);
  *(_BYTE *)(v19 + *(int *)(v8 + 20)) = *(_BYTE *)(v20 + *(int *)(v8 + 20));
  *(_DWORD *)(v19 + *(int *)(v8 + 24)) = *(_DWORD *)(v20 + *(int *)(v8 + 24));
  return a1;
}

uint64_t sub_237E5D210()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_237E5D21C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SolarEvent(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_237E5D258()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_237E5D264(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SolarEvent(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SolarCycle(uint64_t a1)
{
  return sub_237E42BC0(a1, qword_256899EC8);
}

uint64_t sub_237E5D2B8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SolarEvent(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_237E5D328(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_237EE1D70();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    *(_DWORD *)((char *)a1 + v8) = *(_DWORD *)((char *)a2 + v8);
  }
  return a1;
}

uint64_t sub_237E5D3B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_237EE1D70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + v7) = *(_DWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_237E5D41C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_237EE1D70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + *(int *)(a3 + 24)) = *(_DWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_237E5D484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_237EE1D70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + v7) = *(_DWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_237E5D4E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_237EE1D70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_DWORD *)(a1 + v7) = *(_DWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_237E5D54C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_237E5D558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_237EE1D70();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 4)
    return v9 - 3;
  else
    return 0;
}

uint64_t sub_237E5D5D0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_237E5D5DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_237EE1D70();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 3;
  return result;
}

uint64_t sub_237E5D654()
{
  uint64_t result;
  unint64_t v1;

  result = sub_237EE1D70();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_237E5D6D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  char v10;
  void (*v11)(char *, uint64_t);
  char v13;
  char v14;
  uint64_t v15;

  v1 = v0;
  v2 = type metadata accessor for SolarEvent(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_237EE1D70();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256897B48 != -1)
    swift_once();
  sub_237EA1DE0((uint64_t)v8);
  v9 = (int *)type metadata accessor for SolarCycle(0);
  sub_237E21EBC(v1 + v9[7], (uint64_t)v4, type metadata accessor for SolarEvent);
  v10 = sub_237EE1D04();
  v11 = *(void (**)(char *, uint64_t))(v6 + 8);
  v11(v4, v5);
  if ((v10 & 1) != 0)
  {
    v11(v8, v5);
    return 0;
  }
  else
  {
    sub_237E21EBC(v1 + v9[6], (uint64_t)v4, type metadata accessor for SolarEvent);
    v13 = sub_237EE1D04();
    v11(v4, v5);
    if ((v13 & 1) != 0)
    {
      v11(v8, v5);
      return 3;
    }
    else
    {
      sub_237E21EBC(v1 + v9[5], (uint64_t)v4, type metadata accessor for SolarEvent);
      v14 = sub_237EE1D04();
      v11(v8, v5);
      v11(v4, v5);
      if ((v14 & 1) != 0)
        return 2;
      else
        return 1;
    }
  }
}

void sub_237E5D8A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t);
  uint64_t v12;

  v1 = v0;
  v2 = type metadata accessor for SolarEvent(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_237EE1D70();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_237E5D6D4();
  if (qword_256897B48 != -1)
    swift_once();
  sub_237EA1DE0((uint64_t)v8);
  v10 = type metadata accessor for SolarCycle(0);
  sub_237E21EBC(v1 + *(int *)(v10 + 24), (uint64_t)v4, type metadata accessor for SolarEvent);
  sub_237EE1D10();
  v11 = *(void (**)(char *, uint64_t))(v6 + 8);
  v11(v8, v5);
  v11(v4, v5);
  __asm { BR              X10 }
}

void sub_237E5DAAC(uint64_t a1, double a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  double v19;
  double v20;
  double v21;
  void (*v22)(char *, uint64_t, uint64_t);
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  uint64_t v41;

  v6 = sub_237EE1D70();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6548);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_237EE1FB0();
  v38 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = CGSizeMake(a2, a3);
  v21 = v20;
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v22(v18, a1, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v18, 0, 1, v6);
  v23 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v18, 1, v6) != 1)
  {
    v23 = (void *)sub_237EE1CF8();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v18, v6);
  }
  v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE3CBF8]), sel_initWithLocation_date_body_, v23, 0, v19, v21);

  if (v24)
  {
    objc_msgSend(v24, sel_altitude);

  }
  else
  {
    if (qword_2542C6458 != -1)
      swift_once();
    v25 = qword_2542C64F8 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_data_private;
    swift_beginAccess();
    sub_237E2CAA0(v25, (uint64_t)v12);
    v26 = v38;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v12, 1, v13) == 1)
    {
      sub_237E6072C((uint64_t)v15);
      sub_237E4B270((uint64_t)v12);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v15, v12, v13);
    }
    v22(v9, a1, v6);
    v27 = sub_237EE1F98();
    v28 = sub_237EE2D90();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc();
      v37 = swift_slowAlloc();
      v41 = v37;
      *(_DWORD *)v29 = 141558531;
      v39 = 1752392040;
      sub_237EE2EE0();
      *(_WORD *)(v29 + 12) = 2081;
      v39 = *(_QWORD *)&a2;
      v40 = a3;
      type metadata accessor for CLLocationCoordinate2D(0);
      v30 = sub_237EE2A9C();
      v36 = v13;
      v39 = sub_237E2A660(v30, v31, &v41);
      sub_237EE2EE0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 22) = 2082;
      sub_237E20E98((unint64_t *)&qword_256899610, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
      v32 = sub_237EE3180();
      v39 = sub_237E2A660(v32, v33, &v41);
      sub_237EE2EE0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      _os_log_impl(&dword_237E17000, v27, v28, "Failed to get elevationDegrees for location:%{private,mask.hash}s, date: %{public}s", (uint8_t *)v29, 0x20u);
      v34 = v37;
      swift_arrayDestroy();
      MEMORY[0x23B8272A8](v34, -1, -1);
      MEMORY[0x23B8272A8](v29, -1, -1);

      (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v36);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);

      (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v13);
    }
  }
}

uint64_t sub_237E5DF5C@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  double v29;
  double v30;
  void *v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  id v37;
  char *v38;
  uint64_t v39;
  int v40;
  int v41;
  uint64_t v42;
  void (*v43)(uint64_t, char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  void (*v51)(uint64_t, uint64_t);
  int *v52;
  uint64_t v53;
  uint64_t v54;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v61 = a1;
  v5 = type metadata accessor for SolarEvent(0);
  MEMORY[0x24BDAC7A8](v5);
  v65 = (uint64_t)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v64 = (uint64_t)&v56 - v8;
  MEMORY[0x24BDAC7A8](v9);
  v63 = (uint64_t)&v56 - v10;
  MEMORY[0x24BDAC7A8](v11);
  v62 = (uint64_t)&v56 - v12;
  v13 = sub_237EE1D70();
  v59 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v60 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v58 = (char *)&v56 - v16;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v56 - v18;
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v56 - v21;
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v56 - v24;
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v56 - v27;
  sub_237EE1C08();
  v30 = v29;
  v31 = (void *)objc_opt_self();
  v32 = CGSizeMake(a2, a3);
  v34 = v33;
  objc_msgSend(v31, sel_nextEventOfType_after_forLocation_altitudeInDegrees_accuracy_, 8, v30, v32, v33, 0.0, 60.0);
  v57 = v25;
  sub_237EE1BFC();
  v35 = *MEMORY[0x24BE3C908];
  objc_msgSend(v31, sel_prevEventOfType_before_forLocation_altitudeInDegrees_accuracy_, 8, v30, v32, v34, *MEMORY[0x24BE3C908], 60.0);
  sub_237EE1BFC();
  v56 = v28;
  sub_237EE1C08();
  v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE3D060]), sel_initWithLocation_time_altitudeInDegrees_accuracy_, v32, v34, v36, v35, 60.0);
  objc_msgSend(v37, sel_nextEventOfType_, 16);
  sub_237EE1BFC();
  objc_msgSend(v37, sel_nextEventOfType_, 32);
  v38 = v19;
  sub_237EE1BFC();
  sub_237EE1C08();
  objc_msgSend(v31, sel_prevEventOfType_before_forLocation_altitudeInDegrees_accuracy_, 512);
  v39 = (uint64_t)v58;
  sub_237EE1BFC();

  sub_237E5DAAC((uint64_t)v22, a2, a3);
  LODWORD(v32) = v40;
  sub_237E5DAAC(v39, a2, a3);
  LODWORD(a3) = v41;
  v42 = v59;
  v43 = *(void (**)(uint64_t, char *, uint64_t))(v59 + 16);
  v44 = v62;
  v43(v62, v28, v13);
  *(_BYTE *)(v44 + *(int *)(v5 + 20)) = 0;
  *(_DWORD *)(v44 + *(int *)(v5 + 24)) = 0;
  v45 = v63;
  v46 = v22;
  v43(v63, v22, v13);
  *(_BYTE *)(v45 + *(int *)(v5 + 20)) = 2;
  *(_DWORD *)(v45 + *(int *)(v5 + 24)) = LODWORD(v32);
  v47 = v64;
  v43(v64, v38, v13);
  *(_BYTE *)(v47 + *(int *)(v5 + 20)) = 1;
  *(_DWORD *)(v47 + *(int *)(v5 + 24)) = 0;
  v48 = v65;
  v43(v65, (char *)v39, v13);
  *(_BYTE *)(v48 + *(int *)(v5 + 20)) = 3;
  *(_DWORD *)(v48 + *(int *)(v5 + 24)) = LODWORD(a3);
  v49 = v60;
  v50 = v57;
  v43((uint64_t)v60, v57, v13);
  v51 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
  v51(v39, v13);
  v51((uint64_t)v38, v13);
  v51((uint64_t)v46, v13);
  v51((uint64_t)v50, v13);
  v51((uint64_t)v56, v13);
  v52 = (int *)type metadata accessor for SolarCycle(0);
  v53 = v61;
  v54 = v61 + v52[8];
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v54, v49, v13);
  *(_BYTE *)(v54 + *(int *)(v5 + 20)) = 0;
  *(_DWORD *)(v54 + *(int *)(v5 + 24)) = 0;
  sub_237E5ED38(v62, v53);
  sub_237E5ED38(v63, v53 + v52[5]);
  sub_237E5ED38(v64, v53 + v52[6]);
  return sub_237E5ED38(v65, v53 + v52[7]);
}

uint64_t sub_237E5E430()
{
  sub_237EE3264();
  sub_237EE1D70();
  sub_237E20E98(&qword_256899FC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_237EE2A18();
  type metadata accessor for SolarEvent(0);
  sub_237EE3270();
  sub_237EE327C();
  return sub_237EE3294();
}

BOOL sub_237E5E4DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (sub_237EE1D28() & 1) != 0
      && *(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(a3 + 20))
      && *(float *)(a1 + *(int *)(a3 + 24)) == *(float *)(a2 + *(int *)(a3 + 24));
}

uint64_t sub_237E5E544()
{
  sub_237EE1D70();
  sub_237E20E98(&qword_256899FC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_237EE2A18();
  sub_237EE3270();
  return sub_237EE327C();
}

uint64_t sub_237E5E5D4()
{
  sub_237EE3264();
  sub_237EE1D70();
  sub_237E20E98(&qword_256899FC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_237EE2A18();
  sub_237EE3270();
  sub_237EE327C();
  return sub_237EE3294();
}

uint64_t sub_237E5E678(uint64_t a1)
{
  uint64_t result;

  result = sub_237E20E98(&qword_256899FA8, type metadata accessor for SolarEvent, (uint64_t)&unk_237EE91A8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_237E5E6B4()
{
  return sub_237E20E98(&qword_256899FB0, type metadata accessor for SolarEvent, (uint64_t)&unk_237EE922C);
}

uint64_t sub_237E5E6E0()
{
  sub_237EE1D70();
  sub_237E20E98(&qword_256899FC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_237EE2A18();
  type metadata accessor for SolarEvent(0);
  sub_237EE3270();
  sub_237EE327C();
  type metadata accessor for SolarCycle(0);
  sub_237EE2A18();
  sub_237EE3270();
  sub_237EE327C();
  sub_237EE2A18();
  sub_237EE3270();
  sub_237EE327C();
  sub_237EE2A18();
  sub_237EE3270();
  sub_237EE327C();
  sub_237EE2A18();
  sub_237EE3270();
  return sub_237EE327C();
}

uint64_t sub_237E5E894()
{
  sub_237EE3264();
  sub_237E5E6E0();
  return sub_237EE3294();
}

uint64_t sub_237E5E8D4()
{
  sub_237EE3264();
  sub_237E5E6E0();
  return sub_237EE3294();
}

uint64_t sub_237E5E910(uint64_t a1)
{
  uint64_t result;

  result = sub_237E20E98(&qword_256899FB8, type metadata accessor for SolarCycle, (uint64_t)&unk_237EE9254);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_237E5E94C()
{
  return sub_237E20E98(&qword_256899FC0, type metadata accessor for SolarCycle, (uint64_t)&unk_237EE92D8);
}

BOOL sub_237E5E978(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  float v24;
  float v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  float v29;
  float v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  float v35;
  float v36;
  uint64_t v37;
  char *v38;
  char *v39;
  _BOOL8 v40;
  char *v42;
  uint64_t v43;

  v4 = (int *)type metadata accessor for SolarCycle(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v42 - v8;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v42 - v11;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v42 - v14;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v42 - v17;
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v42 - v20;
  if ((sub_237EE1D28() & 1) == 0
    || (v22 = type metadata accessor for SolarEvent(0),
        *(unsigned __int8 *)(a1 + *(int *)(v22 + 20)) != *(unsigned __int8 *)(a2 + *(int *)(v22 + 20))))
  {
    sub_237E21EBC(a1, (uint64_t)v21, type metadata accessor for SolarCycle);
    sub_237E21EBC(a2, (uint64_t)v18, type metadata accessor for SolarCycle);
LABEL_14:
    sub_237E5ECFC((uint64_t)v18);
    sub_237E5ECFC((uint64_t)v21);
    sub_237E21EBC(a1, (uint64_t)v15, type metadata accessor for SolarCycle);
    sub_237E21EBC(a2, (uint64_t)v12, type metadata accessor for SolarCycle);
LABEL_15:
    sub_237E5ECFC((uint64_t)v12);
    sub_237E5ECFC((uint64_t)v15);
    sub_237E21EBC(a1, (uint64_t)v9, type metadata accessor for SolarCycle);
    sub_237E21EBC(a2, (uint64_t)v6, type metadata accessor for SolarCycle);
LABEL_16:
    v40 = 0;
    goto LABEL_17;
  }
  v43 = v22;
  v23 = *(int *)(v22 + 24);
  v24 = *(float *)(a1 + v23);
  v25 = *(float *)(a2 + v23);
  sub_237E21EBC(a1, (uint64_t)v21, type metadata accessor for SolarCycle);
  sub_237E21EBC(a2, (uint64_t)v18, type metadata accessor for SolarCycle);
  if (v24 != v25)
    goto LABEL_14;
  v26 = v4[5];
  v27 = &v21[v26];
  v42 = &v18[v26];
  if ((sub_237EE1D28() & 1) == 0 || v27[*(int *)(v43 + 20)] != v42[*(int *)(v43 + 20)])
    goto LABEL_14;
  v28 = *(int *)(v43 + 24);
  v29 = *(float *)&v27[v28];
  v30 = *(float *)&v42[v28];
  sub_237E5ECFC((uint64_t)v18);
  sub_237E5ECFC((uint64_t)v21);
  sub_237E21EBC(a1, (uint64_t)v15, type metadata accessor for SolarCycle);
  sub_237E21EBC(a2, (uint64_t)v12, type metadata accessor for SolarCycle);
  if (v29 != v30)
    goto LABEL_15;
  v31 = v4[6];
  v32 = &v15[v31];
  v33 = &v12[v31];
  if ((sub_237EE1D28() & 1) == 0 || v32[*(int *)(v43 + 20)] != v33[*(int *)(v43 + 20)])
    goto LABEL_15;
  v34 = *(int *)(v43 + 24);
  v35 = *(float *)&v32[v34];
  v36 = *(float *)&v33[v34];
  sub_237E5ECFC((uint64_t)v12);
  sub_237E5ECFC((uint64_t)v15);
  sub_237E21EBC(a1, (uint64_t)v9, type metadata accessor for SolarCycle);
  sub_237E21EBC(a2, (uint64_t)v6, type metadata accessor for SolarCycle);
  if (v35 != v36)
    goto LABEL_16;
  v37 = v4[8];
  v38 = &v9[v37];
  v39 = &v6[v37];
  if ((sub_237EE1D28() & 1) == 0 || v38[*(int *)(v43 + 20)] != v39[*(int *)(v43 + 20)])
    goto LABEL_16;
  v40 = *(float *)&v38[*(int *)(v43 + 24)] == *(float *)&v39[*(int *)(v43 + 24)];
LABEL_17:
  sub_237E5ECFC((uint64_t)v6);
  sub_237E5ECFC((uint64_t)v9);
  return v40;
}

uint64_t sub_237E5ECFC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SolarCycle(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_237E5ED38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SolarEvent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for SolarCycle.Phase()
{
  return &type metadata for SolarCycle.Phase;
}

uint64_t getEnumTagSinglePayload for SolarContext.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s11ClockPoster10SolarEventV4KindOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_237E5EE70 + 4 * byte_237EE9165[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_237E5EEA4 + 4 * byte_237EE9160[v4]))();
}

uint64_t sub_237E5EEA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237E5EEAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237E5EEB4);
  return result;
}

uint64_t sub_237E5EEC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237E5EEC8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_237E5EECC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237E5EED4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SolarEvent.Kind()
{
  return &type metadata for SolarEvent.Kind;
}

unint64_t sub_237E5EEF4()
{
  unint64_t result;

  result = qword_256899FD0;
  if (!qword_256899FD0)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE930C, &type metadata for SolarEvent.Kind);
    atomic_store(result, (unint64_t *)&qword_256899FD0);
  }
  return result;
}

unint64_t sub_237E5EF3C()
{
  unint64_t result;

  result = qword_256899FD8;
  if (!qword_256899FD8)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE93B4, &type metadata for SolarCycle.Phase);
    atomic_store(result, (unint64_t *)&qword_256899FD8);
  }
  return result;
}

uint64_t static ClockLogger.data.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_237E5F7F0(&OBJC_IVAR____TtC11ClockPoster11ClockLogger_data_private, a1);
}

uint64_t static ClockLogger.rendering.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_237E5F7F0(&OBJC_IVAR____TtC11ClockPoster11ClockLogger_rendering_private, a1);
}

uint64_t CustomStringConvertibleViaMirror.description.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v8;
  uint64_t v11[4];

  v3 = sub_237EE32B8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[3] = a1;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v11);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(boxed_opaque_existential_0, v1, a1);
  sub_237EE32A0();
  sub_237EE32AC();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v8 = sub_237EE3054();
  swift_release();
  v11[0] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898630);
  sub_237E22690((unint64_t *)&qword_256898638, &qword_256898630, MEMORY[0x24BEE12B0]);
  sub_237EE2A3C();
  swift_bridgeObjectRelease();
  v11[0] = 60;
  v11[1] = 0xE100000000000000;
  swift_getDynamicType();
  sub_237EE333C();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  return v11[0];
}

ClockPoster::ClockLogger::Host_optional __swiftcall ClockLogger.Host.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  ClockPoster::ClockLogger::Host_optional result;
  char v5;

  v2 = v1;
  v3 = sub_237EE30F0();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

void *static ClockLogger.Host.allCases.getter()
{
  return &unk_2509BE808;
}

uint64_t ClockLogger.Host.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x746E6569626D61;
  else
    return 7368801;
}

uint64_t sub_237E5F230(char *a1, char *a2)
{
  return sub_237EAAD3C(*a1, *a2);
}

uint64_t sub_237E5F23C()
{
  sub_237EE3264();
  sub_237EE2ACC();
  swift_bridgeObjectRelease();
  return sub_237EE3294();
}

uint64_t sub_237E5F2B4()
{
  sub_237EE2ACC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_237E5F308()
{
  sub_237EE3264();
  sub_237EE2ACC();
  swift_bridgeObjectRelease();
  return sub_237EE3294();
}

ClockPoster::ClockLogger::Host_optional sub_237E5F37C(Swift::String *a1)
{
  return ClockLogger.Host.init(rawValue:)(*a1);
}

void sub_237E5F388(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 7368801;
  if (*v1)
    v2 = 0x746E6569626D61;
  v3 = 0xE300000000000000;
  if (*v1)
    v3 = 0xE700000000000000;
  *a1 = v2;
  a1[1] = v3;
}

void sub_237E5F3C0(_QWORD *a1@<X8>)
{
  *a1 = &unk_2509BE830;
}

ClockPoster::ClockLogger::Role_optional __swiftcall ClockLogger.Role.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ClockPoster::ClockLogger::Role_optional result;
  char v5;

  v2 = v1;
  v3 = sub_237EE30F0();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static ClockLogger.Role.allCases.getter()
{
  return &unk_2509BE8C0;
}

uint64_t ClockLogger.Role.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x7265646E6572;
  if (*v0 != 1)
    v1 = 0x657461647075;
  if (*v0)
    return v1;
  else
    return 1953064037;
}

uint64_t sub_237E5F480(char *a1, unsigned __int8 *a2)
{
  return sub_237EAAC44(*a1, *a2);
}

uint64_t sub_237E5F48C()
{
  sub_237EE3264();
  sub_237EE2ACC();
  swift_bridgeObjectRelease();
  return sub_237EE3294();
}

uint64_t sub_237E5F51C()
{
  sub_237EE2ACC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_237E5F588()
{
  sub_237EE3264();
  sub_237EE2ACC();
  swift_bridgeObjectRelease();
  return sub_237EE3294();
}

ClockPoster::ClockLogger::Role_optional sub_237E5F614(Swift::String *a1)
{
  return ClockLogger.Role.init(rawValue:)(*a1);
}

void sub_237E5F620(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0x7265646E6572;
  if (v2 != 1)
    v4 = 0x657461647075;
  v5 = v2 == 0;
  if (*v1)
    v6 = v4;
  else
    v6 = 1953064037;
  if (!v5)
    v3 = 0xE600000000000000;
  *a1 = v6;
  a1[1] = v3;
}

void sub_237E5F670(_QWORD *a1@<X8>)
{
  *a1 = &unk_2509BE8E8;
}

uint64_t sub_237E5F680()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;

  type metadata accessor for ClockLogger();
  v0 = swift_allocObject();
  v1 = v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger____lazy_storage___fallbackLogger;
  v2 = sub_237EE1FB0();
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_configuration_private, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_rendering_private, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_data_private, 1, 1, v2);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v3)(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_location_private, 1, 1, v2);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_roles) = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_specificFaceKind) = 5;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_host) = 2;
  qword_2542C64F8 = v0;
  return result;
}

uint64_t static ClockLogger.sharedInstance.getter()
{
  if (qword_2542C6458 != -1)
    swift_once();
  return swift_retain();
}

uint64_t static ClockLogger.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_237E5F7F0(&OBJC_IVAR____TtC11ClockPoster11ClockLogger_configuration_private, a1);
}

uint64_t static ClockLogger.location.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_237E5F7F0(&OBJC_IVAR____TtC11ClockPoster11ClockLogger_location_private, a1);
}

uint64_t sub_237E5F7F0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6548);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2542C6458 != -1)
    swift_once();
  v7 = qword_2542C64F8 + *a1;
  swift_beginAccess();
  sub_237E2CAA0(v7, (uint64_t)v6);
  v8 = sub_237EE1FB0();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v6, v8);
  sub_237E6072C(a2);
  return sub_237E4B270((uint64_t)v6);
}

unint64_t static ClockLogger.processDescription.getter()
{
  unint64_t v1;

  if (qword_2542C6458 != -1)
    swift_once();
  v1 = sub_237E60FA4();
  sub_237EE2AF0();
  sub_237E6161C();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_237E5F998(unsigned __int8 *a1, char *a2, _BYTE *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int v17;
  char v18;
  unsigned __int8 v19;
  unsigned __int8 v20;
  uint64_t v21;
  int v22;
  uint64_t result;
  uint64_t *v24;
  uint64_t v25;
  char v26;
  char *v27;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  void (*v38)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  _BOOL4 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65[2];
  unsigned __int8 v66[24];

  v4 = v3;
  v8 = sub_237EE1FB0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v61 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6548);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v57 - v15;
  v17 = *a1;
  v18 = *a2;
  v19 = *(_BYTE *)(v4 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_specificFaceKind);
  *(_BYTE *)(v4 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_specificFaceKind) = *a3;
  v66[0] = v19;
  sub_237E60A54((char *)v66);
  v20 = *(_BYTE *)(v4 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_host);
  *(_BYTE *)(v4 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_host) = v18;
  v66[0] = v20;
  sub_237E610DC(v66);
  v21 = v4 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_configuration_private;
  swift_beginAccess();
  sub_237E2CAA0(v21, (uint64_t)v16);
  v59 = v8;
  v60 = v9;
  v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v16, 1, v8);
  result = sub_237E4B270((uint64_t)v16);
  if (v17 == 3)
  {
    if (v22 != 1)
      return result;
LABEL_11:
    v57 = v17;
    v31 = sub_237E6161C();
    v33 = v32;
    sub_237E60FA4();
    v65[0] = 0;
    v65[1] = 0xE000000000000000;
    sub_237EE2FA0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v65[0] = v31;
    v65[1] = v33;
    sub_237EE2AF0();
    v34 = v61;
    sub_237EE1FA4();
    v35 = v60;
    v36 = *(void (**)(char *, char *, uint64_t))(v60 + 16);
    v58 = v22;
    v37 = v59;
    v36(v13, v34, v59);
    v38 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56);
    v38(v13, 0, 1, v37);
    swift_beginAccess();
    sub_237E628BC((uint64_t)v13, v21);
    swift_endAccess();
    sub_237E60FA4();
    v65[0] = v31;
    v65[1] = v33;
    swift_bridgeObjectRetain();
    sub_237EE2AF0();
    sub_237EE1FA4();
    v38(v13, 0, 1, v37);
    v39 = v4 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_rendering_private;
    swift_beginAccess();
    sub_237E628BC((uint64_t)v13, v39);
    swift_endAccess();
    sub_237E60FA4();
    v65[0] = v31;
    v65[1] = v33;
    swift_bridgeObjectRetain();
    sub_237EE2AF0();
    sub_237EE1FA4();
    v38(v13, 0, 1, v37);
    v40 = v4 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_data_private;
    swift_beginAccess();
    sub_237E628BC((uint64_t)v13, v40);
    swift_endAccess();
    sub_237E60FA4();
    v65[0] = v31;
    v65[1] = v33;
    sub_237EE2AF0();
    sub_237EE1FA4();
    v38(v13, 0, 1, v37);
    v41 = v4 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_location_private;
    swift_beginAccess();
    sub_237E628BC((uint64_t)v13, v41);
    swift_endAccess();
    swift_retain_n();
    v42 = sub_237EE1F98();
    v43 = sub_237EE2D78();
    v44 = os_log_type_enabled(v42, v43);
    if (v58 == 1)
    {
      if (v44)
      {
        v50 = (uint8_t *)swift_slowAlloc();
        v51 = swift_slowAlloc();
        v64 = v51;
        v65[0] = 0;
        *(_DWORD *)v50 = 136446210;
        v65[1] = 0xE000000000000000;
        sub_237EE2FA0();
        swift_bridgeObjectRelease();
        strcpy((char *)v65, "[ClockLogger: ");
        HIBYTE(v65[1]) = -18;
        if (qword_2542C6458 != -1)
          swift_once();
        v62 = sub_237E60FA4();
        v63 = v52;
        sub_237EE2AF0();
        sub_237E6161C();
        sub_237EE2AF0();
        swift_bridgeObjectRelease();
        sub_237EE2AF0();
        swift_bridgeObjectRelease();
        sub_237EE2AF0();
        v65[0] = sub_237E2A660(v65[0], v65[1], &v64);
        sub_237EE2EE0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_237E17000, v42, v43, "%{public}s: Starting up logging", v50, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x23B8272A8](v51, -1, -1);
        v53 = (uint64_t)v50;
        goto LABEL_29;
      }
    }
    else if (v44)
    {
      v45 = swift_slowAlloc();
      v46 = swift_slowAlloc();
      v64 = v46;
      v65[0] = 0;
      *(_DWORD *)v45 = 136446466;
      v65[1] = 0xE000000000000000;
      sub_237EE2FA0();
      swift_bridgeObjectRelease();
      strcpy((char *)v65, "[ClockLogger: ");
      HIBYTE(v65[1]) = -18;
      if (qword_2542C6458 != -1)
        swift_once();
      v62 = sub_237E60FA4();
      v63 = v47;
      sub_237EE2AF0();
      sub_237E6161C();
      sub_237EE2AF0();
      swift_bridgeObjectRelease();
      sub_237EE2AF0();
      swift_bridgeObjectRelease();
      sub_237EE2AF0();
      v65[0] = sub_237E2A660(v65[0], v65[1], &v64);
      sub_237EE2EE0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 12) = 2082;
      if (v57 == 3)
      {
        v48 = 0xE600000000000000;
        v49 = 0x3E4C4C554E3CLL;
      }
      else
      {
        if (v57)
        {
          v54 = 0xE600000000000000;
          if (v57 == 1)
            v55 = 0x7265646E6572;
          else
            v55 = 0x657461647075;
        }
        else
        {
          v54 = 0xE400000000000000;
          v55 = 1953064037;
        }
        v65[0] = v55;
        v65[1] = v54;
        sub_237E33174();
        v49 = sub_237EE2F04();
        v48 = v56;
        swift_bridgeObjectRelease();
      }
      v65[0] = sub_237E2A660(v49, v48, &v64);
      sub_237EE2EE0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_237E17000, v42, v43, "%{public}s: Adding role to logging: '%{public}s'", (uint8_t *)v45, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x23B8272A8](v46, -1, -1);
      v53 = v45;
LABEL_29:
      MEMORY[0x23B8272A8](v53, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v61, v59);
    }

    swift_release_n();
    return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v61, v59);
  }
  v24 = (uint64_t *)(v4 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_roles);
  swift_beginAccess();
  v25 = *v24;
  swift_bridgeObjectRetain();
  v26 = sub_237E60310(v17, v25);
  result = swift_bridgeObjectRelease();
  if (v22 == 1 || (v26 & 1) == 0)
  {
    swift_beginAccess();
    v27 = (char *)*v24;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v24 = (uint64_t)v27;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v27 = sub_237E62148(0, *((_QWORD *)v27 + 2) + 1, 1, v27);
      *v24 = (uint64_t)v27;
    }
    v30 = *((_QWORD *)v27 + 2);
    v29 = *((_QWORD *)v27 + 3);
    if (v30 >= v29 >> 1)
    {
      v27 = sub_237E62148((char *)(v29 > 1), v30 + 1, 1, v27);
      *v24 = (uint64_t)v27;
    }
    *((_QWORD *)v27 + 2) = v30 + 1;
    v27[v30 + 32] = v17;
    swift_endAccess();
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_237E60310(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  swift_bridgeObjectRetain();
  v5 = 0;
  while (1)
  {
    v6 = a2 + v5++;
    v7 = *(unsigned __int8 *)(v6 + 32);
    v8 = v7 == 1 ? 0x7265646E6572 : 0x657461647075;
    v9 = v7 ? v8 : 1953064037;
    v10 = v7 ? 0xE600000000000000 : 0xE400000000000000;
    if (a1)
    {
      if (a1 == 1)
        v11 = 0x7265646E6572;
      else
        v11 = 0x657461647075;
      v12 = 0xE600000000000000;
      if (v9 != v11)
        goto LABEL_20;
    }
    else
    {
      v12 = 0xE400000000000000;
      if (v9 != 1953064037)
        goto LABEL_20;
    }
    if (v10 == v12)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return 1;
    }
LABEL_20:
    v13 = sub_237EE31BC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) != 0)
      break;
    if (v2 == v5)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_237E60450(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  char v7;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  id v13;
  char v14;

  if (a2 >> 62)
    goto LABEL_20;
  v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = sub_237EE30A8())
  {
    v4 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      v5 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      v5 = (id)MEMORY[0x23B826624](0, a2);
LABEL_5:
      v6 = v5;
      sub_237E387EC();
      v7 = sub_237EE2EB0();

      if ((v7 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v3 == 1)
        goto LABEL_18;
      if (v4)
        break;
      v4 = 5;
      while (1)
      {
        v12 = v4 - 3;
        if (__OFADD__(v4 - 4, 1))
          break;
        v13 = *(id *)(a2 + 8 * v4);
        v14 = sub_237EE2EB0();

        if ((v14 & 1) != 0)
          goto LABEL_6;
        ++v4;
        if (v12 == v3)
          goto LABEL_18;
      }
      __break(1u);
    }
    v9 = 1;
    while (1)
    {
      MEMORY[0x23B826624](v9, a2);
      v10 = v9 + 1;
      if (__OFADD__(v9, 1))
        break;
      v11 = sub_237EE2EB0();
      swift_unknownObjectRelease();
      if ((v11 & 1) != 0)
        goto LABEL_6;
      ++v9;
      if (v10 == v3)
        goto LABEL_18;
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_237E605C4(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;
  _QWORD *v13;
  int v14;
  char v15;
  uint64_t v16;

  v2 = v1;
  v3 = *a1;
  v4 = (_QWORD *)(v1 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_roles);
  swift_beginAccess();
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 + 16);
  result = swift_bridgeObjectRetain();
  v13 = v4;
  if (v6)
  {
    v8 = 0;
    v9 = MEMORY[0x24BEE4AF8];
    v14 = v3;
    while (v8 < *(_QWORD *)(v5 + 16))
    {
      v12 = *(_BYTE *)(v5 + 32 + v8);
      v15 = v12;
      result = sub_237E62F88(&v15, v3, v2);
      if ((result & 1) != 0)
      {
        result = swift_isUniquelyReferenced_nonNull_native();
        v16 = v9;
        if ((result & 1) == 0)
        {
          result = sub_237E627A0(0, *(_QWORD *)(v9 + 16) + 1, 1);
          v9 = v16;
        }
        v11 = *(_QWORD *)(v9 + 16);
        v10 = *(_QWORD *)(v9 + 24);
        if (v11 >= v10 >> 1)
        {
          result = sub_237E627A0(v10 > 1, v11 + 1, 1);
          v9 = v16;
        }
        *(_QWORD *)(v9 + 16) = v11 + 1;
        *(_BYTE *)(v9 + v11 + 32) = v12;
        v3 = v14;
      }
      if (v6 == ++v8)
        goto LABEL_12;
    }
    __break(1u);
  }
  else
  {
    v9 = MEMORY[0x24BEE4AF8];
LABEL_12:
    swift_bridgeObjectRelease();
    *v13 = v9;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_237E6072C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6548);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v4);
  v8 = &v13[-v7];
  v9 = v1 + OBJC_IVAR____TtC11ClockPoster11ClockLogger____lazy_storage___fallbackLogger;
  swift_beginAccess();
  sub_237E2CAA0(v9, (uint64_t)v8);
  v10 = sub_237EE1FB0();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
    return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v11 + 32))(a1, v8, v10);
  sub_237E4B270((uint64_t)v8);
  sub_237E6089C();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16))(v6, a1, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess();
  sub_237E628BC((uint64_t)v6, v9);
  return swift_endAccess();
}

void sub_237E6089C()
{
  os_log_type_t v0;
  uint8_t *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  NSObject *oslog;
  uint64_t v6;

  sub_237EE1FA4();
  swift_retain_n();
  oslog = sub_237EE1F98();
  v0 = sub_237EE2D90();
  if (os_log_type_enabled(oslog, v0))
  {
    v1 = (uint8_t *)swift_slowAlloc();
    v2 = swift_slowAlloc();
    v6 = v2;
    *(_DWORD *)v1 = 136446210;
    v3 = sub_237E62904();
    sub_237E2A660(v3, v4, &v6);
    sub_237EE2EE0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_237E17000, oslog, v0, "%{public}s: ***** MUST SETUP ClockLogger before using its loggers. Call ClockLogger.add(...) to do this *****", v1, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x23B8272A8](v2, -1, -1);
    MEMORY[0x23B8272A8](v1, -1, -1);

  }
  else
  {
    swift_release_n();

  }
}

void sub_237E60A54(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  NSObject *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];
  int v21;
  NSObject *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26[2];
  uint64_t v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6548);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_237EE1FB0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  if ((_DWORD)v11 != 5)
  {
    v12 = OBJC_IVAR____TtC11ClockPoster11ClockLogger_specificFaceKind;
    if (*(_BYTE *)(v2 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_specificFaceKind) == 5
      || (sub_237EAA7F4(*a1), (v13 & 1) == 0))
    {
      if (qword_2542C6458 != -1)
        swift_once();
      v14 = qword_2542C64F8 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_configuration_private;
      swift_beginAccess();
      sub_237E2CAA0(v14, (uint64_t)v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
      {
        sub_237E6072C((uint64_t)v10);
        sub_237E4B270((uint64_t)v6);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
      }
      swift_retain_n();
      v15 = sub_237EE1F98();
      v16 = sub_237EE2D90();
      if (os_log_type_enabled(v15, (os_log_type_t)v16))
      {
        v20[2] = v12;
        v22 = v15;
        v17 = swift_slowAlloc();
        v18 = swift_slowAlloc();
        v20[1] = v18;
        *(_DWORD *)v17 = 136446722;
        v26[0] = 0;
        v26[1] = 0xE000000000000000;
        v27 = v18;
        sub_237EE2FA0();
        swift_bridgeObjectRelease();
        strcpy((char *)v26, "[ClockLogger: ");
        HIBYTE(v26[1]) = -18;
        v23 = v2;
        v24 = sub_237E60FA4();
        v25 = v19;
        sub_237EE2AF0();
        sub_237E6161C();
        sub_237EE2AF0();
        swift_bridgeObjectRelease();
        sub_237EE2AF0();
        swift_bridgeObjectRelease();
        sub_237EE2AF0();
        v26[0] = sub_237E2A660(v26[0], v26[1], &v27);
        sub_237EE2EE0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v17 + 12) = 2082;
        v21 = v16;
        __asm { BR              X10 }
      }

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
  }
}

unint64_t sub_237E60FA4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t result;

  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_specificFaceKind);
  result = 0xD000000000000015;
  if ((_DWORD)v1 != 5)
  {
    sub_237EE2AF0();
    __asm { BR              X10 }
  }
  return result;
}

void sub_237E610DC(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  BOOL v19;
  char v20;
  NSObject *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  int v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  os_log_type_t v38;
  os_log_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  os_log_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47[2];
  uint64_t v48;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6548);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_237EE1FB0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  if (v11 != 2)
  {
    v12 = OBJC_IVAR____TtC11ClockPoster11ClockLogger_host;
    v13 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_host);
    if (v13 == 2)
      goto LABEL_3;
    if ((v11 & 1) != 0)
      v15 = 0x746E6569626D61;
    else
      v15 = 7368801;
    if ((v11 & 1) != 0)
      v16 = 0xE700000000000000;
    else
      v16 = 0xE300000000000000;
    if ((v13 & 1) != 0)
      v17 = 0x746E6569626D61;
    else
      v17 = 7368801;
    if ((v13 & 1) != 0)
      v18 = 0xE700000000000000;
    else
      v18 = 0xE300000000000000;
    v19 = v15 == v17 && v16 == v18;
    if (v19)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
    v20 = sub_237EE31BC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0)
    {
LABEL_3:
      if (qword_2542C6458 != -1)
        swift_once();
      v14 = qword_2542C64F8 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_configuration_private;
      swift_beginAccess();
      sub_237E2CAA0(v14, (uint64_t)v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
      {
        sub_237E6072C((uint64_t)v10);
        sub_237E4B270((uint64_t)v6);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
      }
      swift_retain_n();
      v21 = sub_237EE1F98();
      v22 = sub_237EE2D90();
      if (os_log_type_enabled(v21, (os_log_type_t)v22))
      {
        v43 = v22;
        v44 = v21;
        v23 = swift_slowAlloc();
        v24 = swift_slowAlloc();
        v42 = v24;
        *(_DWORD *)v23 = 136446722;
        v25 = v2;
        v47[0] = 0;
        v47[1] = 0xE000000000000000;
        v48 = v24;
        sub_237EE2FA0();
        swift_bridgeObjectRelease();
        strcpy((char *)v47, "[ClockLogger: ");
        HIBYTE(v47[1]) = -18;
        v41 = v12;
        v45 = sub_237E60FA4();
        v46 = v26;
        sub_237EE2AF0();
        sub_237E6161C();
        sub_237EE2AF0();
        swift_bridgeObjectRelease();
        sub_237EE2AF0();
        swift_bridgeObjectRelease();
        sub_237EE2AF0();
        v47[0] = sub_237E2A660(v47[0], v47[1], &v48);
        sub_237EE2EE0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v23 + 12) = 2082;
        v27 = 0x746E6569626D61;
        if ((v11 & 1) != 0)
        {
          v28 = 0xE700000000000000;
        }
        else
        {
          v27 = 7368801;
          v28 = 0xE300000000000000;
        }
        v47[0] = v27;
        v47[1] = v28;
        sub_237E33174();
        v29 = sub_237EE2F04();
        v31 = v30;
        swift_bridgeObjectRelease();
        v47[0] = sub_237E2A660(v29, v31, &v48);
        sub_237EE2EE0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v23 + 22) = 2082;
        v32 = *(unsigned __int8 *)(v25 + v41);
        if (v32 == 2)
        {
          v33 = 0xE600000000000000;
          v34 = 0x3E656E6F4E3CLL;
        }
        else
        {
          v19 = (v32 & 1) == 0;
          v35 = 0x746E6569626D61;
          if (v19)
          {
            v35 = 7368801;
            v36 = 0xE300000000000000;
          }
          else
          {
            v36 = 0xE700000000000000;
          }
          v47[0] = v35;
          v47[1] = v36;
          v34 = sub_237EE2F04();
          v33 = v37;
          swift_bridgeObjectRelease();
        }
        v38 = v43;
        v47[0] = sub_237E2A660(v34, v33, &v48);
        sub_237EE2EE0();
        swift_release_n();
        swift_bridgeObjectRelease();
        v39 = v44;
        _os_log_impl(&dword_237E17000, v44, v38, "%{public}s: Host cannot change for life of process - trying to change '%{public}s' to '%{public}s'", (uint8_t *)v23, 0x20u);
        v40 = v42;
        swift_arrayDestroy();
        MEMORY[0x23B8272A8](v40, -1, -1);
        MEMORY[0x23B8272A8](v23, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
  }
}

uint64_t sub_237E6161C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_host) != 2)
  {
    sub_237E33174();
    sub_237EE2F04();
    swift_bridgeObjectRelease();
  }
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  v1 = v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_roles;
  swift_beginAccess();
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = 0;
    do
    {
      ++v3;
      sub_237E33174();
      sub_237EE2F04();
      swift_bridgeObjectRelease();
      sub_237EE2AF0();
      swift_bridgeObjectRelease();
      sub_237EE2AF0();
      swift_bridgeObjectRelease();
    }
    while (v2 != v3);
    swift_bridgeObjectRelease();
  }
  sub_237EE2AF0();
  return 0;
}

uint64_t ClockLogger.deinit()
{
  uint64_t v0;

  sub_237E4B270(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger____lazy_storage___fallbackLogger);
  sub_237E4B270(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_configuration_private);
  sub_237E4B270(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_rendering_private);
  sub_237E4B270(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_data_private);
  sub_237E4B270(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_location_private);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ClockLogger.__deallocating_deinit()
{
  uint64_t v0;

  sub_237E4B270(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger____lazy_storage___fallbackLogger);
  sub_237E4B270(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_configuration_private);
  sub_237E4B270(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_rendering_private);
  sub_237E4B270(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_data_private);
  sub_237E4B270(v0 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_location_private);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

_QWORD *sub_237E61958(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25689A030);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_237E629F8(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_237E61A64(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  int64_t v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25689A038);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 31;
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = v12 & 0xFFFFFFFFFFFFFFFELL;
      v13 = v10 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v13 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 32])
          memmove(v13, a4 + 32, 2 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_237E62AE0(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_237E61B6C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25689A040);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 152);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[19 * v8 + 4])
          memmove(v12, a4 + 4, 152 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_237E62BC8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_237E61C94(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_237E62394(a1, a2, a3, a4, &qword_25689A010, type metadata accessor for WorldViewModel.Pin);
}

_QWORD *sub_237E61CA8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256899E00);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_237E629F8(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_237E61DB4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_237E6201C(a1, a2, a3, a4, &qword_256899E20, &qword_256899E28);
}

_QWORD *sub_237E61DC8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_237E62254(a1, a2, a3, a4, &qword_256899E18, &qword_25689A048);
}

_QWORD *sub_237E61DDC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_237E61DF4(a1, a2, a3, a4, &qword_25689A050);
}

_QWORD *sub_237E61DE8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_237E61DF4(a1, a2, a3, a4, &qword_256899E48);
}

_QWORD *sub_237E61DF4(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 17;
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 4);
      v14 = v11 + 4;
      if ((v6 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v14 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v9 + 4])
          memmove(v14, a4 + 4, 16 * v9);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_237E62CB8(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_237E61EFC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25689A078);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_237E62CB8(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_237E62008(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_237E6201C(a1, a2, a3, a4, &qword_25689A068, &qword_25689A070);
}

_QWORD *sub_237E6201C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v15 = v14 - 32;
      if (v14 < 32)
        v15 = v14 - 25;
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      v16 = v13 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v16 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4])
          memmove(v16, a4 + 4, 8 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_237E62DA0(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

_QWORD *sub_237E62134(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_237E6201C(a1, a2, a3, a4, &qword_25689A058, &qword_25689A060);
}

char *sub_237E62148(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2542C6560);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v12 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_237E62EA4(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_237E62240(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_237E62254(a1, a2, a3, a4, &qword_2542C6468, &qword_2542C6540);
}

_QWORD *sub_237E62254(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  _QWORD *v15;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      v15 = v13 + 4;
      if ((v8 & 1) != 0)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4])
          memmove(v15, a4 + 4, 40 * v11);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v15 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_237E63938(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_237E62380(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_237E62394(a1, a2, a3, a4, &qword_25689A080, type metadata accessor for ColorProviderPoint);
}

uint64_t sub_237E62394(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_237EE3090();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_237E63A40(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_237E625A0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_237E62394(a1, a2, a3, a4, &qword_25689A018, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

_QWORD *sub_237E625B4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25689A020);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_237E63B58(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_237E626C0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_237EB6098(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_237E626DC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_237EB6200(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_237E626F8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_237EB6214(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_237E62714(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_237EB6398(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_237E62730(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_237EB6500(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_237E6274C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_237EB683C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_237E62768(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_237EB69F4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_237E62784(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_237EB6B50(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_237E627A0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_237EB6CAC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_237E627BC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_237EB6DF8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_237E627D8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_237EB6F60(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_237E627F4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_bridgeObjectRetain();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  result = sub_237EE3084();
  *a1 = 0;
  a1[1] = v3;
  return result;
}

uint64_t sub_237E628BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6548);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_237E62904()
{
  _QWORD v1[2];

  sub_237EE2FA0();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "[ClockLogger: ");
  HIBYTE(v1[1]) = -18;
  if (qword_2542C6458 != -1)
    swift_once();
  sub_237E60FA4();
  sub_237EE2AF0();
  sub_237E6161C();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  return v1[0];
}

char *sub_237E629F8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_237EE30D8();
  __break(1u);
  return result;
}

char *sub_237E62AE0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 2 * a1 + 32);
    v6 = 2 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_237EE30D8();
  __break(1u);
  return result;
}

uint64_t sub_237E62BC8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 152 * a1 + 32;
    v6 = a3 + 152 * v4;
    if (v5 >= v6 || v5 + 152 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_237EE30D8();
  __break(1u);
  return result;
}

char *sub_237E62CB8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = 16 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_237EE30D8();
  __break(1u);
  return result;
}

uint64_t sub_237E62DA0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 8 * a1 + 32;
    v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_237EE30D8();
  __break(1u);
  return result;
}

char *sub_237E62EA4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_237EE30D8();
  __break(1u);
  return result;
}

uint64_t sub_237E62F88(_BYTE *a1, int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  int v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;

  v44 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6548);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_237EE1FB0();
  v47 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  if (v13 == 1)
    v14 = 0x7265646E6572;
  else
    v14 = 0x657461647075;
  if (*a1)
    v15 = v14;
  else
    v15 = 1953064037;
  if (*a1)
    v16 = 0xE600000000000000;
  else
    v16 = 0xE400000000000000;
  v46 = a2;
  if ((_BYTE)a2)
  {
    if (a2 == 1)
      v17 = 0x7265646E6572;
    else
      v17 = 0x657461647075;
    v18 = 0xE600000000000000;
  }
  else
  {
    v18 = 0xE400000000000000;
    v17 = 1953064037;
  }
  v45 = v10;
  if (v15 == v17 && v16 == v18)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v19 = sub_237EE31BC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
      goto LABEL_32;
  }
  if (qword_2542C6458 != -1)
    swift_once();
  v20 = qword_2542C64F8 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_configuration_private;
  swift_beginAccess();
  sub_237E2CAA0(v20, (uint64_t)v8);
  v21 = v47;
  v22 = v45;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v8, 1, v45) == 1)
  {
    sub_237E6072C((uint64_t)v12);
    sub_237E4B270((uint64_t)v8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v12, v8, v22);
  }
  swift_retain_n();
  v23 = sub_237EE1F98();
  v24 = sub_237EE2D78();
  if (!os_log_type_enabled(v23, v24))
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v12, v22);
LABEL_32:
    if (!v13)
      goto LABEL_44;
    goto LABEL_33;
  }
  v43 = v3;
  v25 = swift_slowAlloc();
  v42 = swift_slowAlloc();
  v50 = v42;
  *(_DWORD *)v25 = 136446466;
  v26 = sub_237E62904();
  v48 = sub_237E2A660(v26, v27, &v50);
  sub_237EE2EE0();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v25 + 12) = 2082;
  if ((_BYTE)v46)
  {
    v28 = 0x7265646E6572;
    if (v46 != 1)
      v28 = 0x657461647075;
    v29 = 0xE600000000000000;
  }
  else
  {
    v29 = 0xE400000000000000;
    v28 = 1953064037;
  }
  v48 = v28;
  v49 = v29;
  sub_237E33174();
  v34 = sub_237EE2F04();
  v36 = v35;
  swift_bridgeObjectRelease();
  v48 = sub_237E2A660(v34, v36, &v50);
  sub_237EE2EE0();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_237E17000, v23, v24, "%{public}s: Removing role from logging: '%{public}s'", (uint8_t *)v25, 0x16u);
  v37 = v42;
  swift_arrayDestroy();
  MEMORY[0x23B8272A8](v37, -1, -1);
  MEMORY[0x23B8272A8](v25, -1, -1);

  (*(void (**)(char *, uint64_t))(v47 + 8))(v12, v45);
  if (!v13)
  {
LABEL_44:
    v30 = 0xE400000000000000;
    v31 = 1953064037;
    v32 = v46;
    if (!(_BYTE)v46)
      goto LABEL_45;
LABEL_37:
    v33 = 0xE600000000000000;
    if (v32 == 1)
    {
      if (v31 != 0x7265646E6572)
        goto LABEL_48;
    }
    else if (v31 != 0x657461647075)
    {
      goto LABEL_48;
    }
    goto LABEL_46;
  }
LABEL_33:
  v30 = 0xE600000000000000;
  if (v13 != 1)
  {
    v31 = 0x657461647075;
    v32 = v46;
    if (!(_BYTE)v46)
      goto LABEL_45;
    goto LABEL_37;
  }
  v31 = 0x7265646E6572;
  v32 = v46;
  if ((_BYTE)v46)
    goto LABEL_37;
LABEL_45:
  v33 = 0xE400000000000000;
  if (v31 != 1953064037)
  {
LABEL_48:
    v39 = sub_237EE31BC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v38 = v39 ^ 1;
    return v38 & 1;
  }
LABEL_46:
  if (v30 != v33)
    goto LABEL_48;
  swift_bridgeObjectRelease_n();
  v38 = 0;
  return v38 & 1;
}

unint64_t sub_237E634C4()
{
  unint64_t result;

  result = qword_256899FE0;
  if (!qword_256899FE0)
  {
    result = MEMORY[0x23B8271D0](&protocol conformance descriptor for ClockLogger.Host, &type metadata for ClockLogger.Host);
    atomic_store(result, (unint64_t *)&qword_256899FE0);
  }
  return result;
}

uint64_t sub_237E63508()
{
  return sub_237E22690(&qword_256899FE8, &qword_256899FF0, MEMORY[0x24BEE12E0]);
}

unint64_t sub_237E63538()
{
  unint64_t result;

  result = qword_256899FF8;
  if (!qword_256899FF8)
  {
    result = MEMORY[0x23B8271D0](&protocol conformance descriptor for ClockLogger.Role, &type metadata for ClockLogger.Role);
    atomic_store(result, (unint64_t *)&qword_256899FF8);
  }
  return result;
}

uint64_t sub_237E6357C()
{
  return sub_237E22690(&qword_25689A000, &qword_25689A008, MEMORY[0x24BEE12E0]);
}

uint64_t sub_237E635A8()
{
  return type metadata accessor for ClockLogger();
}

uint64_t type metadata accessor for ClockLogger()
{
  uint64_t result;

  result = qword_2542C6530;
  if (!qword_2542C6530)
    return swift_getSingletonMetadata();
  return result;
}

void sub_237E635EC()
{
  unint64_t v0;

  sub_237E636B0();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for ClockLogger()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ClockLogger.add(role:host:lifeCycleOfProcessDedicatedTo:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of ClockLogger.remove(role:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of ClockLogger.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

void sub_237E636B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2542C6550)
  {
    sub_237EE1FB0();
    v0 = sub_237EE2ED4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2542C6550);
  }
}

uint64_t getEnumTagSinglePayload for ClockLogger.Host(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ClockLogger.Host(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_237E637E0 + 4 * byte_237EE93F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_237E63814 + 4 * byte_237EE93F0[v4]))();
}

uint64_t sub_237E63814(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237E6381C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237E63824);
  return result;
}

uint64_t sub_237E63830(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237E63838);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_237E6383C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237E63844(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_237E63850(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ClockLogger.Host()
{
  return &type metadata for ClockLogger.Host;
}

uint64_t storeEnumTagSinglePayload for ClockLogger.Role(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_237E638B8 + 4 * byte_237EE93FF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_237E638EC + 4 * byte_237EE93FA[v4]))();
}

uint64_t sub_237E638EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237E638F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237E638FCLL);
  return result;
}

uint64_t sub_237E63908(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237E63910);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_237E63914(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237E6391C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClockLogger.Role()
{
  return &type metadata for ClockLogger.Role;
}

uint64_t sub_237E63938(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 40 * a1 + 32;
    v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_237EE30D8();
  __break(1u);
  return result;
}

uint64_t sub_237E63A40(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_237EE30D8();
  __break(1u);
  return result;
}

uint64_t sub_237E63B58(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25689A028);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_237EE30D8();
  __break(1u);
  return result;
}

id sub_237E63E00()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RollingClockView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_237E63E94()
{
  return type metadata accessor for RollingClockView();
}

uint64_t type metadata accessor for RollingClockView()
{
  uint64_t result;

  result = qword_25689A0C0;
  if (!qword_25689A0C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_237E63ED8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_237EE1EC0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

_QWORD *sub_237E63F60(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  char v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v10 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = *((_BYTE *)a2 + 8);
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (_QWORD *)(a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256898698);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v9 = sub_237EE21A8();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_237E64048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;

  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (_QWORD *)(a1 + v5);
  v7 = (_QWORD *)(a2 + v5);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898698);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_237EE21A8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    *v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_237E640F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (_QWORD *)(a2 + v7);
    sub_237E2209C(a1 + v7, &qword_256898698);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256898698);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_237EE21A8();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_237E641D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(a3 + 20);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898698);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_237EE21A8();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_237E64284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v6;
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (void *)(a1 + v7);
    v9 = (const void *)(a2 + v7);
    sub_237E2209C(a1 + v7, &qword_256898698);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898698);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_237EE21A8();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_237E6435C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_237E6436C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for WorldClockFace(uint64_t a1)
{
  return sub_237E42BC0(a1, (uint64_t *)&unk_25689A130);
}

void sub_237E64390()
{
  unint64_t v0;

  sub_237E64404();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_237E64404()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25689A140)
  {
    sub_237EE21A8();
    v0 = sub_237EE20AC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25689A140);
  }
}

uint64_t sub_237E64458()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_237E64468@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  *a2 = *(_QWORD *)(v3 + 120);
  return swift_retain();
}

uint64_t sub_237E644F8()
{
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  swift_retain();
  sub_237EE1F14();
  swift_release();
  return swift_release();
}

uint64_t sub_237E645B0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  v4 = v3 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__alarmTime;
  swift_beginAccess();
  return sub_237E22004(v4, a2, &qword_25689C140);
}

uint64_t sub_237E64668(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[16];
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_237E22004(a1, (uint64_t)v6, &qword_25689C140);
  v7 = *a2;
  swift_getKeyPath();
  v10 = v7;
  v11 = v6;
  v12 = v7;
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F14();
  swift_release();
  return sub_237E2209C((uint64_t)v6, &qword_25689C140);
}

uint64_t sub_237E64770@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  char v60;

  v55 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A1B0);
  MEMORY[0x24BDAC7A8](v3);
  v54 = (uint64_t)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v52 = (uint64_t *)((char *)&v45 - v6);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A1B8);
  MEMORY[0x24BDAC7A8](v7);
  v53 = (uint64_t)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v45 - v10;
  v12 = sub_237EE21A8();
  v48 = *(_QWORD *)(v12 - 8);
  v49 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A1C0);
  v50 = *(_QWORD *)(v15 - 8);
  v51 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A1C8);
  MEMORY[0x24BDAC7A8](v46);
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v56 = (uint64_t)&v45 - v21;
  KeyPath = swift_getKeyPath();
  type metadata accessor for WorldViewModel(0);
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  v23 = sub_237EE20B8();
  v57 = KeyPath;
  v58 = 0;
  v59 = v23;
  v60 = v24 & 1;
  v47 = a1;
  v25 = *(_BYTE *)(a1 + 8);
  v26 = swift_retain();
  sub_237EC3CFC(v26, v25);
  swift_release();
  sub_237E6CFC4();
  sub_237EE2640();
  swift_release();
  swift_release();
  swift_release();
  v27 = swift_getKeyPath();
  v29 = v48;
  v28 = v49;
  (*(void (**)(char *, _QWORD, uint64_t))(v48 + 104))(v14, *MEMORY[0x24BDED100], v49);
  v30 = (uint64_t *)&v19[*(int *)(v46 + 36)];
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A1D8);
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))((char *)v30 + *(int *)(v31 + 28), v14, v28);
  *v30 = v27;
  v33 = v50;
  v32 = v51;
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v19, v17, v51);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v28);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v32);
  v34 = v56;
  sub_237E21FC0((uint64_t)v19, v56, &qword_25689A1C8);
  *(_QWORD *)v11 = sub_237EE23F4();
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 1;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A1E0);
  v36 = v47;
  sub_237E64C30(v47, (uint64_t)&v11[*(int *)(v35 + 44)]);
  v37 = sub_237EE23F4();
  v38 = (uint64_t)v52;
  *v52 = v37;
  *(_QWORD *)(v38 + 8) = 0;
  *(_BYTE *)(v38 + 16) = 1;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A1E8);
  sub_237E65374(v36, (_QWORD *)(v38 + *(int *)(v39 + 44)));
  sub_237E22004(v34, (uint64_t)v19, &qword_25689A1C8);
  v40 = v53;
  sub_237E22004((uint64_t)v11, v53, &qword_25689A1B8);
  v41 = v54;
  sub_237E22004(v38, v54, &qword_25689A1B0);
  v42 = v55;
  sub_237E22004((uint64_t)v19, v55, &qword_25689A1C8);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A1F0);
  sub_237E22004(v40, v42 + *(int *)(v43 + 48), &qword_25689A1B8);
  sub_237E22004(v41, v42 + *(int *)(v43 + 64), &qword_25689A1B0);
  sub_237E2209C(v38, &qword_25689A1B0);
  sub_237E2209C((uint64_t)v11, &qword_25689A1B8);
  sub_237E2209C(v56, &qword_25689A1C8);
  sub_237E2209C(v41, &qword_25689A1B0);
  sub_237E2209C(v40, &qword_25689A1B8);
  return sub_237E2209C((uint64_t)v19, &qword_25689A1C8);
}

uint64_t sub_237E64BFC()
{
  return sub_237EE22E0();
}

uint64_t sub_237E64C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_237E6D104(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x24BDED130], MEMORY[0x24BDEE080]);
}

uint64_t sub_237E64C30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v25[12];
  int v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  _BYTE v42[7];
  unsigned __int8 v43;
  _BYTE v44[7];
  char v45;
  _BYTE v46[7];
  char v47;
  _BYTE v48[7];
  char v49;
  _BYTE v50[7];
  char v51;
  _BYTE v52[7];
  char v53;
  _BYTE v54[7];
  char v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  unsigned __int8 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned __int8 v71;
  uint64_t v72;
  unsigned __int8 v73;
  uint64_t v74;
  uint64_t v75;

  v4 = type metadata accessor for WorldClockFace(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v36 = sub_237EE21A8();
  v34 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v8 = &v25[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A2C8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v25[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v12);
  v41 = &v25[-v13];
  sub_237EE2904();
  sub_237EE21E4();
  v31 = v56;
  v32 = v58;
  v33 = v60;
  v35 = v62;
  v37 = v64;
  v38 = v66;
  v40 = v68;
  v39 = v69;
  v55 = 1;
  v53 = v57;
  v51 = v59;
  v49 = v61;
  v47 = v63;
  v45 = v65;
  v43 = v67;
  sub_237EC3D20((uint64_t)v8);
  sub_237E21EBC(a1, (uint64_t)&v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for WorldClockFace);
  v14 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v15 = swift_allocObject();
  sub_237E47CE0((uint64_t)&v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], v15 + v14, type metadata accessor for WorldClockFace);
  *(_QWORD *)v11 = sub_237EE2394();
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 1;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A2D0);
  sub_237E6718C((uint64_t)v8, (void (*)(uint64_t))sub_237E6D338, v15, (uint64_t)&v11[*(int *)(v16 + 44)]);
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(v34 + 8))(v8, v36);
  v17 = v41;
  sub_237E21FC0((uint64_t)v11, (uint64_t)v41, &qword_25689A2C8);
  sub_237EE2904();
  sub_237EE20E8();
  v36 = v70;
  LODWORD(v34) = v71;
  v30 = v72;
  v29 = v73;
  v28 = v74;
  v27 = v75;
  LOBYTE(v15) = v55;
  LOBYTE(v14) = v53;
  v18 = v51;
  LOBYTE(v8) = v49;
  LOBYTE(v6) = v47;
  v19 = v45;
  v26 = v43;
  sub_237E22004((uint64_t)v17, (uint64_t)v11, &qword_25689A2C8);
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = v15;
  *(_DWORD *)(a2 + 9) = *(_DWORD *)v54;
  *(_DWORD *)(a2 + 12) = *(_DWORD *)&v54[3];
  *(_QWORD *)(a2 + 16) = v31;
  *(_BYTE *)(a2 + 24) = v14;
  *(_DWORD *)(a2 + 25) = *(_DWORD *)v52;
  *(_DWORD *)(a2 + 28) = *(_DWORD *)&v52[3];
  *(_QWORD *)(a2 + 32) = v32;
  *(_BYTE *)(a2 + 40) = v18;
  *(_DWORD *)(a2 + 44) = *(_DWORD *)&v50[3];
  *(_DWORD *)(a2 + 41) = *(_DWORD *)v50;
  *(_QWORD *)(a2 + 48) = v33;
  *(_BYTE *)(a2 + 56) = (_BYTE)v8;
  *(_DWORD *)(a2 + 57) = *(_DWORD *)v48;
  *(_DWORD *)(a2 + 60) = *(_DWORD *)&v48[3];
  *(_QWORD *)(a2 + 64) = v35;
  *(_BYTE *)(a2 + 72) = v6;
  *(_DWORD *)(a2 + 73) = *(_DWORD *)v46;
  *(_DWORD *)(a2 + 76) = *(_DWORD *)&v46[3];
  *(_QWORD *)(a2 + 80) = v37;
  *(_BYTE *)(a2 + 88) = v19;
  *(_DWORD *)(a2 + 89) = *(_DWORD *)v44;
  *(_DWORD *)(a2 + 92) = *(_DWORD *)&v44[3];
  *(_QWORD *)(a2 + 96) = v38;
  *(_BYTE *)(a2 + 104) = v26;
  *(_DWORD *)(a2 + 108) = *(_DWORD *)&v42[3];
  *(_DWORD *)(a2 + 105) = *(_DWORD *)v42;
  v20 = v39;
  *(_QWORD *)(a2 + 112) = v40;
  *(_QWORD *)(a2 + 120) = v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A2D8);
  sub_237E22004((uint64_t)v11, a2 + *(int *)(v21 + 48), &qword_25689A2C8);
  v22 = a2 + *(int *)(v21 + 64);
  *(_QWORD *)v22 = 0;
  *(_BYTE *)(v22 + 8) = 1;
  *(_QWORD *)(v22 + 16) = v36;
  *(_BYTE *)(v22 + 24) = v34;
  *(_QWORD *)(v22 + 32) = v30;
  *(_BYTE *)(v22 + 40) = v29;
  v23 = v27;
  *(_QWORD *)(v22 + 48) = v28;
  *(_QWORD *)(v22 + 56) = v23;
  sub_237E2209C((uint64_t)v41, &qword_25689A2C8);
  return sub_237E2209C((uint64_t)v11, &qword_25689A2C8);
}

uint64_t sub_237E651C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v12;

  v2 = type metadata accessor for Dashboard(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v12 - v6;
  type metadata accessor for WorldViewModel(0);
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  *(_QWORD *)v4 = sub_237EE20B8();
  v4[8] = v8 & 1;
  v9 = (uint64_t *)&v4[*(int *)(v2 + 20)];
  *v9 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898698);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)&v4[*(int *)(v2 + 24)] = 0x3FD51EB851EB851FLL;
  sub_237E47CE0((uint64_t)v4, (uint64_t)v7, type metadata accessor for Dashboard);
  LOBYTE(a1) = *(_BYTE *)(a1 + 8);
  v10 = swift_retain();
  sub_237EC3CFC(v10, a1);
  swift_release();
  sub_237E20E98(qword_25689A2F0, type metadata accessor for Dashboard, (uint64_t)&unk_237EE9918);
  sub_237EE2640();
  swift_release();
  return sub_237E21F00((uint64_t)v7, type metadata accessor for Dashboard);
}

uint64_t sub_237E65374@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  _BYTE *v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE v47[4];
  int v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  _BYTE *v63;
  _QWORD *v64;
  _BYTE *v65;
  unsigned __int8 v66;
  char v67;
  char v68;
  char v69;
  char v70;
  char v71;
  char v72;
  uint64_t v73;
  unsigned __int8 v74;
  uint64_t v75;
  unsigned __int8 v76;
  uint64_t v77;
  uint64_t v78;
  _BYTE *v79;
  char v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  char v84;
  _BYTE *v85;
  char v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  unsigned __int8 v90;
  _BYTE *v91;
  uint64_t v92;

  v64 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899518);
  MEMORY[0x24BDAC7A8](v3);
  v63 = &v47[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  MEMORY[0x24BDAC7A8](v5);
  v50 = &v47[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for WorldClockFace(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = sub_237EE21A8();
  v51 = *(_QWORD *)(v10 - 8);
  v52 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v47[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A1F8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = &v47[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A200);
  MEMORY[0x24BDAC7A8](v54);
  v53 = &v47[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A208);
  MEMORY[0x24BDAC7A8](v56);
  v55 = &v47[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v18);
  v65 = &v47[-v19];
  sub_237EE2904();
  sub_237EE20E8();
  v62 = v73;
  v61 = v74;
  v60 = v75;
  v59 = v76;
  v57 = v78;
  v58 = v77;
  sub_237EC3D20((uint64_t)v12);
  sub_237E21EBC(a1, (uint64_t)&v47[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for WorldClockFace);
  v20 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v21 = swift_allocObject();
  sub_237E47CE0((uint64_t)&v47[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], v21 + v20, type metadata accessor for WorldClockFace);
  *(_QWORD *)v15 = sub_237EE2394();
  *((_QWORD *)v15 + 1) = 0;
  v15[16] = 1;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A210);
  sub_237E67994((uint64_t)v12, (void (*)(uint64_t))sub_237E6D050, v21, (uint64_t)&v15[*(int *)(v22 + 44)]);
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(v51 + 8))(v12, v52);
  v23 = sub_237EE2934();
  LOBYTE(v9) = *(_BYTE *)(a1 + 8);
  v24 = swift_retain();
  v25 = sub_237EC3CFC(v24, v9);
  swift_release();
  swift_getKeyPath();
  v79 = (_BYTE *)v25;
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  v26 = v25 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__alarmTime;
  swift_beginAccess();
  v27 = v50;
  sub_237E22004(v26, (uint64_t)v50, &qword_25689C140);
  swift_release();
  v28 = (uint64_t)v53;
  v29 = (uint64_t *)&v53[*(int *)(v54 + 36)];
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898878);
  sub_237E22004((uint64_t)v27, (uint64_t)v29 + *(int *)(v30 + 36), &qword_25689C140);
  *v29 = v23;
  sub_237E22004((uint64_t)v15, v28, &qword_25689A1F8);
  sub_237E2209C((uint64_t)v27, &qword_25689C140);
  sub_237E2209C((uint64_t)v15, &qword_25689A1F8);
  v31 = sub_237EE2934();
  LOBYTE(v23) = *(_BYTE *)(a1 + 8);
  v32 = swift_retain();
  v33 = sub_237EC3CFC(v32, v23);
  swift_release();
  swift_getKeyPath();
  v79 = (_BYTE *)v33;
  sub_237EE1F20();
  swift_release();
  v34 = v33 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__highlighted;
  swift_beginAccess();
  v35 = v63;
  sub_237E22004(v34, (uint64_t)v63, &qword_256899518);
  swift_release();
  v36 = (uint64_t)v55;
  v37 = (uint64_t *)&v55[*(int *)(v56 + 36)];
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A218);
  sub_237E22004((uint64_t)v35, (uint64_t)v37 + *(int *)(v38 + 36), &qword_256899518);
  *v37 = v31;
  sub_237E22004(v28, v36, &qword_25689A200);
  sub_237E2209C((uint64_t)v35, &qword_256899518);
  sub_237E2209C(v28, &qword_25689A200);
  v39 = v65;
  sub_237E21FC0(v36, (uint64_t)v65, &qword_25689A208);
  sub_237EE2904();
  sub_237EE21E4();
  v63 = v79;
  v56 = v81;
  v54 = v83;
  v53 = v85;
  v51 = v89;
  v52 = v87;
  v49 = v92;
  v50 = v91;
  v72 = 1;
  v71 = v80;
  v70 = v82;
  v69 = v84;
  v68 = v86;
  v67 = v88;
  v66 = v90;
  sub_237E22004((uint64_t)v39, v36, &qword_25689A208);
  LOBYTE(v20) = v72;
  LOBYTE(v31) = v71;
  LOBYTE(v27) = v70;
  LOBYTE(v35) = v69;
  LOBYTE(v33) = v68;
  LOBYTE(v25) = v67;
  v48 = v66;
  v40 = v64;
  *v64 = 0;
  *((_BYTE *)v40 + 8) = 1;
  v40[2] = v62;
  *((_BYTE *)v40 + 24) = v61;
  v40[4] = v60;
  *((_BYTE *)v40 + 40) = v59;
  v41 = v57;
  v40[6] = v58;
  v40[7] = v41;
  v42 = v40;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A220);
  sub_237E22004(v36, (uint64_t)v42 + *(int *)(v43 + 48), &qword_25689A208);
  v44 = (uint64_t)v42 + *(int *)(v43 + 64);
  *(_QWORD *)v44 = 0;
  *(_BYTE *)(v44 + 8) = v20;
  *(_QWORD *)(v44 + 16) = v63;
  *(_BYTE *)(v44 + 24) = v31;
  *(_QWORD *)(v44 + 32) = v56;
  *(_BYTE *)(v44 + 40) = (_BYTE)v27;
  *(_QWORD *)(v44 + 48) = v54;
  *(_BYTE *)(v44 + 56) = (_BYTE)v35;
  *(_QWORD *)(v44 + 64) = v53;
  *(_BYTE *)(v44 + 72) = v33;
  *(_QWORD *)(v44 + 80) = v52;
  *(_BYTE *)(v44 + 88) = v25;
  *(_QWORD *)(v44 + 96) = v51;
  *(_BYTE *)(v44 + 104) = v48;
  v45 = v49;
  *(_QWORD *)(v44 + 112) = v50;
  *(_QWORD *)(v44 + 120) = v45;
  sub_237E2209C((uint64_t)v65, &qword_25689A208);
  return sub_237E2209C(v36, &qword_25689A208);
}

uint64_t sub_237E65AC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v57 = a2;
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A268);
  MEMORY[0x24BDAC7A8](v53);
  v48 = (uint64_t *)((char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  MEMORY[0x24BDAC7A8](v4);
  v54 = (uint64_t)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_237EE1D70();
  v55 = *(_QWORD *)(v6 - 8);
  v56 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v47 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A270);
  MEMORY[0x24BDAC7A8](v49);
  v51 = (uint64_t)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A278);
  MEMORY[0x24BDAC7A8](v9);
  v52 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A280);
  MEMORY[0x24BDAC7A8](v50);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899518);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for WorldViewModel.Pin(0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1;
  v21 = *(_BYTE *)(a1 + 8);
  v22 = swift_retain();
  v23 = sub_237EC3CFC(v22, v21);
  swift_release();
  swift_getKeyPath();
  v59 = v23;
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  v24 = v23 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__highlighted;
  swift_beginAccess();
  sub_237E22004(v24, (uint64_t)v15, &qword_256899518);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_237E2209C((uint64_t)v15, &qword_256899518);
  }
  else
  {
    sub_237E47CE0((uint64_t)v15, (uint64_t)v19, type metadata accessor for WorldViewModel.Pin);
    if ((v19[16] & 1) == 0)
    {
      *(_QWORD *)v12 = sub_237EE2394();
      *((_QWORD *)v12 + 1) = 0;
      v12[16] = 0;
      v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A2A8);
      sub_237E66120(a1, (uint64_t)&v12[*(int *)(v42 + 44)]);
      sub_237E22004((uint64_t)v12, v51, &qword_25689A280);
      swift_storeEnumTagMultiPayload();
      v43 = MEMORY[0x24BDF4498];
      sub_237E22690(&qword_25689A298, &qword_25689A280, MEMORY[0x24BDF4498]);
      sub_237E22690(&qword_25689A2A0, &qword_25689A268, v43);
      v44 = (uint64_t)v52;
      sub_237EE24B4();
      sub_237E2209C((uint64_t)v12, &qword_25689A280);
      sub_237E21F00((uint64_t)v19, type metadata accessor for WorldViewModel.Pin);
      v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A288);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v44, 0, 1, v45);
      return sub_237E21FC0(v44, v57, &qword_25689A278);
    }
    sub_237E21F00((uint64_t)v19, type metadata accessor for WorldViewModel.Pin);
  }
  v25 = *(_BYTE *)(a1 + 8);
  v26 = swift_retain();
  v27 = sub_237EC3CFC(v26, v25);
  swift_release();
  swift_getKeyPath();
  v58 = v27;
  sub_237EE1F20();
  swift_release();
  v28 = v27 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__alarmTime;
  swift_beginAccess();
  v29 = v28;
  v30 = v54;
  sub_237E22004(v29, v54, &qword_25689C140);
  swift_release();
  v32 = v55;
  v31 = v56;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v30, 1, v56) == 1)
  {
    sub_237E2209C(v30, &qword_25689C140);
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A288);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v57, 1, 1, v33);
  }
  else
  {
    v35 = (uint64_t)v47;
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v47, v30, v31);
    v36 = sub_237EE2394();
    v37 = (uint64_t)v48;
    *v48 = v36;
    *(_QWORD *)(v37 + 8) = 0;
    *(_BYTE *)(v37 + 16) = 0;
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A290);
    sub_237E66A30(v20, v35, v37 + *(int *)(v38 + 44));
    sub_237E22004(v37, v51, &qword_25689A268);
    swift_storeEnumTagMultiPayload();
    v39 = MEMORY[0x24BDF4498];
    sub_237E22690(&qword_25689A298, &qword_25689A280, MEMORY[0x24BDF4498]);
    sub_237E22690(&qword_25689A2A0, &qword_25689A268, v39);
    v40 = (uint64_t)v52;
    sub_237EE24B4();
    sub_237E2209C(v37, &qword_25689A268);
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A288);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v40, 0, 1, v41);
    sub_237E21FC0(v40, v57, &qword_25689A278);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8))(v35, v31);
  }
}

uint64_t sub_237E66120@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  id v30;
  uint64_t v31;
  uint64_t KeyPath;
  uint64_t v33;
  id v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __CFString *v43;
  CTFontRef v44;
  uint64_t v45;
  char v46;
  char v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  CTFontRef v56;
  void *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t);
  uint64_t v72;
  id v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  unsigned int v77;
  void (*v78)(char *);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  id v102;
  CTFontRef v103;
  __int16 v104;
  uint64_t v105;
  unsigned __int8 v106;
  uint64_t v107;
  unsigned __int8 v108;
  uint64_t v109;
  uint64_t v110;

  v92 = a2;
  v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898840);
  v89 = *(_QWORD *)(v90 - 8);
  MEMORY[0x24BDAC7A8](v90);
  v91 = (char *)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v87 = (char *)&v72 - v5;
  MEMORY[0x24BDAC7A8](v6);
  v88 = (char *)&v72 - v7;
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898988);
  MEMORY[0x24BDAC7A8](v85);
  v9 = (uint64_t *)((char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_237EE27A8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_237EE26C4();
  v15 = *(_QWORD *)(v14 - 8);
  v79 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = v17;
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A2B0);
  MEMORY[0x24BDAC7A8](v84);
  v86 = (uint64_t)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (uint64_t *)((char *)&v72 - v20);
  MEMORY[0x24BDAC7A8](v22);
  v93 = (uint64_t)&v72 - v23;
  v83 = sub_237EE2778();
  v24 = sub_237EE2724();
  v77 = *MEMORY[0x24BDF3C28];
  v78 = *(void (**)(char *))(v15 + 104);
  v78(v17);
  v25 = MEMORY[0x23B825DC0](v17, 0.8, 0.0, 0.0, 1.0);
  v76 = a1;
  LOBYTE(a1) = *(_BYTE *)(a1 + 8);
  v26 = swift_retain();
  v27 = sub_237EC3CFC(v26, a1);
  swift_release();
  swift_getKeyPath();
  v95 = v27;
  v75 = sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  LODWORD(v15) = *(unsigned __int8 *)(v27 + 176);
  swift_release();
  if ((_DWORD)v15)
    v28 = v25;
  else
    v28 = v24;
  swift_retain();
  swift_release();
  swift_release();
  v73 = (id)objc_opt_self();
  v29 = *MEMORY[0x24BEBB610];
  v30 = objc_msgSend(v73, sel_systemFontOfSize_weight_, 26.0, *MEMORY[0x24BEBB610]);
  v31 = sub_237EE2574();
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x24BDF40B0], v10);
  v33 = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))((char *)v9 + *(int *)(v85 + 28), v13, v10);
  *v9 = v33;
  sub_237E22004((uint64_t)v9, (uint64_t)v21 + *(int *)(v84 + 36), &qword_256898988);
  *v21 = v83;
  v21[1] = v28;
  v21[2] = KeyPath;
  v21[3] = v31;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_237E2209C((uint64_t)v9, &qword_256898988);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_237E21FC0((uint64_t)v21, v93, &qword_25689A2B0);
  sub_237EE2904();
  sub_237EE20E8();
  v85 = v105;
  LODWORD(v84) = v106;
  v83 = v107;
  v82 = v108;
  v81 = v109;
  v80 = v110;
  v34 = objc_msgSend(v73, sel_systemFontOfSize_weight_, 26.0, v29);
  v35 = sub_237EE2724();
  v36 = v74;
  ((void (*)(char *, _QWORD, uint64_t))v78)(v74, v77, v79);
  v37 = MEMORY[0x23B825DC0](v36, 0.6, 0.0, 0.0, 1.0);
  v38 = v76;
  v39 = *(_BYTE *)(v76 + 8);
  v40 = swift_retain();
  v41 = sub_237EC3CFC(v40, v39);
  swift_release();
  swift_getKeyPath();
  v95 = v41;
  sub_237EE1F20();
  swift_release();
  LODWORD(v36) = *(unsigned __int8 *)(v41 + 176);
  swift_release();
  if ((_DWORD)v36)
    v42 = v37;
  else
    v42 = v35;
  swift_retain();
  swift_release();
  swift_release();
  v43 = (__CFString *)sub_237EE2A54();
  v44 = CTFontCreateWithNameAndOptions(v43, 92.0, 0, 0x20000uLL);

  type metadata accessor for RollingClockViewModel();
  sub_237E20E98(&qword_256897E18, (uint64_t (*)(uint64_t))type metadata accessor for RollingClockViewModel, (uint64_t)&unk_237EE4558);
  v45 = sub_237EE20B8();
  v47 = v46;
  swift_retain();
  v48 = v34;
  v49 = sub_237E23CCC();

  swift_release();
  v95 = v45;
  v96 = v47 & 1;
  v97 = v49;
  v98 = v42;
  v99 = 0;
  v100 = 0;
  v101 = 0;
  v102 = v48;
  v103 = v44;
  v104 = 896;
  LOBYTE(v48) = *(_BYTE *)(v38 + 8);
  v50 = swift_retain();
  v51 = sub_237EC3CFC(v50, (char)v48);
  swift_release();
  swift_getKeyPath();
  v94 = v51;
  sub_237EE1F20();
  swift_release();
  swift_retain();
  swift_release();
  sub_237E32F44();
  v52 = v87;
  sub_237EE2640();
  swift_release();
  v53 = v98;
  v54 = v99;
  v55 = v100;
  v57 = v102;
  v56 = v103;
  LOBYTE(v44) = v101;

  swift_release();
  sub_237E20A7C(v53, v54, v55, (char)v44);

  v58 = v89;
  v59 = v88;
  v60 = v90;
  (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v88, v52, v90);
  v61 = v93;
  v62 = v86;
  sub_237E22004(v93, v86, &qword_25689A2B0);
  v63 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
  v64 = v58;
  v65 = v91;
  v63(v91, v59, v60);
  v66 = v92;
  sub_237E22004(v62, v92, &qword_25689A2B0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A2B8);
  v68 = v66 + *(int *)(v67 + 48);
  *(_QWORD *)v68 = 0;
  *(_BYTE *)(v68 + 8) = 1;
  *(_QWORD *)(v68 + 16) = v85;
  *(_BYTE *)(v68 + 24) = v84;
  *(_QWORD *)(v68 + 32) = v83;
  *(_BYTE *)(v68 + 40) = v82;
  v69 = v80;
  *(_QWORD *)(v68 + 48) = v81;
  *(_QWORD *)(v68 + 56) = v69;
  v63((char *)(v66 + *(int *)(v67 + 64)), v65, v60);
  v70 = *(void (**)(char *, uint64_t))(v64 + 8);
  v70(v59, v60);
  sub_237E2209C(v61, &qword_25689A2B0);
  v70(v65, v60);
  return sub_237E2209C(v62, &qword_25689A2B0);
}

uint64_t sub_237E66A30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  id v28;
  uint64_t v29;
  uint64_t KeyPath;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int v76;
  void (*v77)(char *);
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unsigned __int8 v86;
  uint64_t v87;
  unsigned __int8 v88;
  uint64_t v89;
  uint64_t v90;

  v81 = a2;
  v83 = a3;
  v4 = sub_237EE1B0C();
  MEMORY[0x24BDAC7A8](v4);
  v80 = (uint64_t)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898988);
  MEMORY[0x24BDAC7A8](v73);
  v7 = (uint64_t *)((char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v70 = sub_237EE27A8();
  v8 = *(_QWORD *)(v70 - 8);
  MEMORY[0x24BDAC7A8](v70);
  v10 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_237EE26C4();
  v12 = *(_QWORD *)(v11 - 8);
  v78 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = v14;
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A2B0);
  MEMORY[0x24BDAC7A8](v69);
  v82 = (uint64_t)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (uint64_t *)((char *)&v66 - v17);
  MEMORY[0x24BDAC7A8](v19);
  v72 = (uint64_t)&v66 - v20;
  v68 = sub_237EE2778();
  v21 = sub_237EE2724();
  v76 = *MEMORY[0x24BDF3C28];
  v77 = *(void (**)(char *))(v12 + 104);
  v77(v14);
  v22 = MEMORY[0x23B825DC0](v14, 0.8, 0.0, 0.0, 1.0);
  v75 = a1;
  v23 = *(_BYTE *)(a1 + 8);
  v24 = swift_retain();
  v25 = sub_237EC3CFC(v24, v23);
  swift_release();
  swift_getKeyPath();
  v85 = v25;
  v74 = sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  LODWORD(v12) = *(unsigned __int8 *)(v25 + 176);
  swift_release();
  if ((_DWORD)v12)
    v26 = v22;
  else
    v26 = v21;
  swift_retain();
  swift_release();
  swift_release();
  v79 = (id)objc_opt_self();
  v27 = *MEMORY[0x24BEBB610];
  v28 = objc_msgSend(v79, sel_systemFontOfSize_weight_, 26.0, *MEMORY[0x24BEBB610]);
  v29 = sub_237EE2574();
  KeyPath = swift_getKeyPath();
  v31 = v70;
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BDF40B0], v70);
  v32 = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)v7 + *(int *)(v73 + 28), v10, v31);
  *v7 = v32;
  sub_237E22004((uint64_t)v7, (uint64_t)v18 + *(int *)(v69 + 36), &qword_256898988);
  *v18 = v68;
  v18[1] = v26;
  v18[2] = KeyPath;
  v18[3] = v29;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_237E2209C((uint64_t)v7, &qword_256898988);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v31);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v33 = v72;
  sub_237E21FC0((uint64_t)v18, v72, &qword_25689A2B0);
  sub_237EE2904();
  sub_237EE20E8();
  v73 = v85;
  LODWORD(v70) = v86;
  v69 = v87;
  LODWORD(v68) = v88;
  v67 = v89;
  v66 = v90;
  sub_237E4E2B0(v80);
  v34 = sub_237EE25EC();
  v36 = v35;
  v38 = v37 & 1;
  v39 = sub_237EE2724();
  v40 = v71;
  ((void (*)(char *, _QWORD, uint64_t))v77)(v71, v76, v78);
  v41 = MEMORY[0x23B825DC0](v40, 0.6, 0.0, 0.0, 1.0);
  LOBYTE(v29) = *(_BYTE *)(v75 + 8);
  v42 = swift_retain();
  v43 = sub_237EC3CFC(v42, v29);
  swift_release();
  swift_getKeyPath();
  v84 = v43;
  sub_237EE1F20();
  swift_release();
  LODWORD(v40) = *(unsigned __int8 *)(v43 + 176);
  swift_release();
  if ((_DWORD)v40)
    v44 = v41;
  else
    v44 = v39;
  swift_retain();
  swift_release();
  swift_release();
  v84 = v44;
  v45 = sub_237EE25A4();
  v47 = v46;
  v49 = v48 & 1;
  sub_237E21F3C(v34, v36, v38);
  swift_release();
  swift_bridgeObjectRelease();
  v50 = objc_msgSend(v79, sel_systemFontOfSize_weight_, 26.0, v27);
  sub_237EE2574();
  v51 = sub_237EE25BC();
  v53 = v52;
  v55 = v54;
  v57 = v56;
  swift_release();
  v58 = v55 & 1;
  sub_237E21F3C(v45, v47, v49);
  swift_bridgeObjectRelease();
  v59 = v82;
  sub_237E22004(v33, v82, &qword_25689A2B0);
  v60 = v83;
  sub_237E22004(v59, v83, &qword_25689A2B0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A2C0);
  v62 = v60 + *(int *)(v61 + 48);
  *(_QWORD *)v62 = 0;
  *(_BYTE *)(v62 + 8) = 1;
  *(_QWORD *)(v62 + 16) = v73;
  *(_BYTE *)(v62 + 24) = v70;
  *(_QWORD *)(v62 + 32) = v69;
  *(_BYTE *)(v62 + 40) = v68;
  v63 = v66;
  *(_QWORD *)(v62 + 48) = v67;
  *(_QWORD *)(v62 + 56) = v63;
  v64 = v60 + *(int *)(v61 + 64);
  *(_QWORD *)v64 = v51;
  *(_QWORD *)(v64 + 8) = v53;
  *(_BYTE *)(v64 + 16) = v58;
  *(_QWORD *)(v64 + 24) = v57;
  sub_237E21EAC(v51, v53, v58);
  swift_bridgeObjectRetain();
  sub_237E2209C(v33, &qword_25689A2B0);
  sub_237E21F3C(v51, v53, v58);
  swift_bridgeObjectRelease();
  return sub_237E2209C(v59, &qword_25689A2B0);
}

uint64_t sub_237E6718C@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  void (*v36)(char *, uint64_t);
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  void (*v40)(char *, uint64_t, uint64_t, __n128);
  uint64_t v41;
  void (*v42)(uint64_t);
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char v48;
  char v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  char v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  char v67;
  char v68;
  char v69;
  char v70;
  char v71;
  char v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  char v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  char v85;
  __int128 v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  char v92;
  __int128 v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  char v97;
  __int128 v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  char v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  char v114;

  v41 = a3;
  v42 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A2E0);
  v45 = *(_QWORD *)(v6 - 8);
  v46 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v44 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v47 = (char *)&v38 - v9;
  v10 = sub_237EE21A8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *MEMORY[0x24BDED100];
  v40 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 104);
  v40(v14, v15, v10, v12);
  v43 = a1;
  LOBYTE(a1) = sub_237EE219C();
  v39 = *(void (**)(char *, uint64_t))(v11 + 8);
  v39(v14, v10);
  sub_237EE2904();
  if ((a1 & 1) != 0)
  {
    sub_237EE20E8();
    *(_QWORD *)&v73 = 0;
    BYTE8(v73) = 1;
    *(_QWORD *)&v74 = v82;
    BYTE8(v74) = v83;
    *(_QWORD *)&v75 = v84;
    BYTE8(v75) = v85;
    v76 = v86;
    sub_237E6D0C0((uint64_t)&v73);
    sub_237E21FC0((uint64_t)&v73, (uint64_t)&v59, &qword_25689A230);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25689A238);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25689A240);
    v16 = MEMORY[0x24BDF4610];
    sub_237E21CA0(&qword_25689A248, &qword_25689A238, MEMORY[0x24BDF4610], MEMORY[0x24BDEBEE0]);
    sub_237E21CA0(&qword_25689A250, &qword_25689A240, v16, MEMORY[0x24BDEDBB8]);
  }
  else
  {
    sub_237EE21E4();
    LOBYTE(v50) = 1;
    LOBYTE(v94) = v83;
    v72 = v85;
    v71 = BYTE8(v86);
    v70 = v88;
    v69 = v90;
    v68 = v92;
    *(_QWORD *)&v73 = 0;
    BYTE8(v73) = 1;
    *(_QWORD *)&v74 = v82;
    BYTE8(v74) = v83;
    *(_QWORD *)&v75 = v84;
    BYTE8(v75) = v85;
    *(_QWORD *)&v76 = v86;
    BYTE8(v76) = BYTE8(v86);
    *(_QWORD *)&v77 = v87;
    BYTE8(v77) = v88;
    *(_QWORD *)&v78 = v89;
    BYTE8(v78) = v90;
    *(_QWORD *)&v79 = v91;
    BYTE8(v79) = v92;
    v80 = v93;
    sub_237E6D0B4((uint64_t)&v73);
    sub_237E21FC0((uint64_t)&v73, (uint64_t)&v59, &qword_25689A230);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25689A238);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25689A240);
    v17 = MEMORY[0x24BDF4610];
    sub_237E21CA0(&qword_25689A248, &qword_25689A238, MEMORY[0x24BDF4610], MEMORY[0x24BDEBEE0]);
    sub_237E21CA0(&qword_25689A250, &qword_25689A240, v17, MEMORY[0x24BDEDBB8]);
  }
  v18 = sub_237EE24B4();
  v42(v18);
  ((void (*)(char *, uint64_t, uint64_t))v40)(v14, v15, v10);
  v19 = sub_237EE219C();
  v39(v14, v10);
  sub_237EE2904();
  if ((v19 & 1) != 0)
  {
    sub_237EE21E4();
    v72 = 1;
    v71 = v95;
    v70 = v97;
    v69 = BYTE8(v98);
    v68 = v100;
    v49 = v102;
    v48 = v104;
    *(_QWORD *)&v59 = 0;
    BYTE8(v59) = 1;
    *(_QWORD *)&v60 = v94;
    BYTE8(v60) = v95;
    *(_QWORD *)&v61 = v96;
    BYTE8(v61) = v97;
    *(_QWORD *)&v62 = v98;
    BYTE8(v62) = BYTE8(v98);
    *(_QWORD *)&v63 = v99;
    BYTE8(v63) = v100;
    *(_QWORD *)&v64 = v101;
    BYTE8(v64) = v102;
    *(_QWORD *)&v65 = v103;
    BYTE8(v65) = v104;
    v66 = v105;
    sub_237E6D0C0((uint64_t)&v59);
  }
  else
  {
    sub_237EE20E8();
    *(_QWORD *)&v59 = 0;
    BYTE8(v59) = 1;
    *(_QWORD *)&v60 = v94;
    BYTE8(v60) = v95;
    *(_QWORD *)&v61 = v96;
    BYTE8(v61) = v97;
    v62 = v98;
    sub_237E6D0B4((uint64_t)&v59);
  }
  sub_237E21FC0((uint64_t)&v59, (uint64_t)&v50, &qword_25689A258);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689A240);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689A238);
  v20 = MEMORY[0x24BDF4610];
  sub_237E21CA0(&qword_25689A250, &qword_25689A240, MEMORY[0x24BDF4610], MEMORY[0x24BDEDBB8]);
  sub_237E21CA0(&qword_25689A248, &qword_25689A238, v20, MEMORY[0x24BDEBEE0]);
  sub_237EE24B4();
  v56 = v112;
  v57 = v113;
  v58 = v114;
  v52 = v108;
  v53 = v109;
  v54 = v110;
  v55 = v111;
  v50 = v106;
  v51 = v107;
  v22 = v44;
  v21 = v45;
  v23 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
  v24 = v46;
  v25 = v47;
  v23(v44, v47, v46);
  v65 = v79;
  v66 = v80;
  v67 = v81;
  v61 = v75;
  v62 = v76;
  v63 = v77;
  v64 = v78;
  v59 = v73;
  v60 = v74;
  v26 = v57;
  *(_OWORD *)(a4 + 96) = v56;
  *(_OWORD *)(a4 + 112) = v26;
  *(_BYTE *)(a4 + 128) = v58;
  v27 = v53;
  *(_OWORD *)(a4 + 32) = v52;
  *(_OWORD *)(a4 + 48) = v27;
  v28 = v55;
  *(_OWORD *)(a4 + 64) = v54;
  *(_OWORD *)(a4 + 80) = v28;
  v29 = v51;
  *(_OWORD *)a4 = v50;
  *(_OWORD *)(a4 + 16) = v29;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A2E8);
  v23((char *)(a4 + *(int *)(v30 + 48)), v22, v24);
  v31 = a4 + *(int *)(v30 + 64);
  v32 = v66;
  *(_OWORD *)(v31 + 96) = v65;
  *(_OWORD *)(v31 + 112) = v32;
  *(_BYTE *)(v31 + 128) = v67;
  v33 = v62;
  *(_OWORD *)(v31 + 32) = v61;
  *(_OWORD *)(v31 + 48) = v33;
  v34 = v64;
  *(_OWORD *)(v31 + 64) = v63;
  *(_OWORD *)(v31 + 80) = v34;
  v35 = v60;
  *(_OWORD *)v31 = v59;
  *(_OWORD *)(v31 + 16) = v35;
  v36 = *(void (**)(char *, uint64_t))(v21 + 8);
  v36(v25, v24);
  return ((uint64_t (*)(char *, uint64_t))v36)(v22, v24);
}

uint64_t sub_237E67994@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v34;
  void (*v35)(char *, uint64_t);
  void (*v36)(char *, uint64_t, uint64_t, __n128);
  uint64_t v37;
  void (*v38)(uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  char v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  char v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  char v79;
  __int128 v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  char v86;
  __int128 v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  char v91;
  __int128 v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  char v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  char v108;

  v37 = a3;
  v38 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A228);
  MEMORY[0x24BDAC7A8](v6);
  v40 = (uint64_t)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v41 = (uint64_t)&v34 - v9;
  v10 = sub_237EE21A8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *MEMORY[0x24BDED100];
  v36 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v11 + 104);
  v36(v14, v15, v10, v12);
  v39 = a1;
  LOBYTE(a1) = sub_237EE219C();
  v35 = *(void (**)(char *, uint64_t))(v11 + 8);
  v35(v14, v10);
  sub_237EE2904();
  if ((a1 & 1) != 0)
  {
    sub_237EE20E8();
    *(_QWORD *)&v67 = 0;
    BYTE8(v67) = 1;
    *(_QWORD *)&v68 = v76;
    BYTE8(v68) = v77;
    *(_QWORD *)&v69 = v78;
    BYTE8(v69) = v79;
    v70 = v80;
    sub_237E6D0C0((uint64_t)&v67);
    sub_237E21FC0((uint64_t)&v67, (uint64_t)&v53, &qword_25689A230);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25689A238);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25689A240);
    v16 = MEMORY[0x24BDF4610];
    sub_237E21CA0(&qword_25689A248, &qword_25689A238, MEMORY[0x24BDF4610], MEMORY[0x24BDEBEE0]);
    sub_237E21CA0(&qword_25689A250, &qword_25689A240, v16, MEMORY[0x24BDEDBB8]);
  }
  else
  {
    sub_237EE21E4();
    LOBYTE(v44) = 1;
    LOBYTE(v88) = v77;
    v66 = v79;
    v65 = BYTE8(v80);
    v64 = v82;
    v63 = v84;
    v62 = v86;
    *(_QWORD *)&v67 = 0;
    BYTE8(v67) = 1;
    *(_QWORD *)&v68 = v76;
    BYTE8(v68) = v77;
    *(_QWORD *)&v69 = v78;
    BYTE8(v69) = v79;
    *(_QWORD *)&v70 = v80;
    BYTE8(v70) = BYTE8(v80);
    *(_QWORD *)&v71 = v81;
    BYTE8(v71) = v82;
    *(_QWORD *)&v72 = v83;
    BYTE8(v72) = v84;
    *(_QWORD *)&v73 = v85;
    BYTE8(v73) = v86;
    v74 = v87;
    sub_237E6D0B4((uint64_t)&v67);
    sub_237E21FC0((uint64_t)&v67, (uint64_t)&v53, &qword_25689A230);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25689A238);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25689A240);
    v17 = MEMORY[0x24BDF4610];
    sub_237E21CA0(&qword_25689A248, &qword_25689A238, MEMORY[0x24BDF4610], MEMORY[0x24BDEBEE0]);
    sub_237E21CA0(&qword_25689A250, &qword_25689A240, v17, MEMORY[0x24BDEDBB8]);
  }
  v18 = sub_237EE24B4();
  v38(v18);
  ((void (*)(char *, uint64_t, uint64_t))v36)(v14, v15, v10);
  v19 = sub_237EE219C();
  v35(v14, v10);
  sub_237EE2904();
  if ((v19 & 1) != 0)
  {
    sub_237EE21E4();
    v66 = 1;
    v65 = v89;
    v64 = v91;
    v63 = BYTE8(v92);
    v62 = v94;
    v43 = v96;
    v42 = v98;
    *(_QWORD *)&v53 = 0;
    BYTE8(v53) = 1;
    *(_QWORD *)&v54 = v88;
    BYTE8(v54) = v89;
    *(_QWORD *)&v55 = v90;
    BYTE8(v55) = v91;
    *(_QWORD *)&v56 = v92;
    BYTE8(v56) = BYTE8(v92);
    *(_QWORD *)&v57 = v93;
    BYTE8(v57) = v94;
    *(_QWORD *)&v58 = v95;
    BYTE8(v58) = v96;
    *(_QWORD *)&v59 = v97;
    BYTE8(v59) = v98;
    v60 = v99;
    sub_237E6D0C0((uint64_t)&v53);
  }
  else
  {
    sub_237EE20E8();
    *(_QWORD *)&v53 = 0;
    BYTE8(v53) = 1;
    *(_QWORD *)&v54 = v88;
    BYTE8(v54) = v89;
    *(_QWORD *)&v55 = v90;
    BYTE8(v55) = v91;
    v56 = v92;
    sub_237E6D0B4((uint64_t)&v53);
  }
  sub_237E21FC0((uint64_t)&v53, (uint64_t)&v44, &qword_25689A258);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689A240);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689A238);
  v20 = MEMORY[0x24BDF4610];
  sub_237E21CA0(&qword_25689A250, &qword_25689A240, MEMORY[0x24BDF4610], MEMORY[0x24BDEDBB8]);
  sub_237E21CA0(&qword_25689A248, &qword_25689A238, v20, MEMORY[0x24BDEBEE0]);
  sub_237EE24B4();
  v50 = v106;
  v51 = v107;
  v52 = v108;
  v46 = v102;
  v47 = v103;
  v48 = v104;
  v49 = v105;
  v44 = v100;
  v45 = v101;
  v21 = v40;
  v22 = v41;
  sub_237E22004(v41, v40, &qword_25689A228);
  v59 = v73;
  v60 = v74;
  v61 = v75;
  v55 = v69;
  v56 = v70;
  v57 = v71;
  v58 = v72;
  v53 = v67;
  v54 = v68;
  v23 = v51;
  *(_OWORD *)(a4 + 96) = v50;
  *(_OWORD *)(a4 + 112) = v23;
  *(_BYTE *)(a4 + 128) = v52;
  v24 = v47;
  *(_OWORD *)(a4 + 32) = v46;
  *(_OWORD *)(a4 + 48) = v24;
  v25 = v49;
  *(_OWORD *)(a4 + 64) = v48;
  *(_OWORD *)(a4 + 80) = v25;
  v26 = v45;
  *(_OWORD *)a4 = v44;
  *(_OWORD *)(a4 + 16) = v26;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A260);
  sub_237E22004(v21, a4 + *(int *)(v27 + 48), &qword_25689A228);
  v28 = a4 + *(int *)(v27 + 64);
  v29 = v60;
  *(_OWORD *)(v28 + 96) = v59;
  *(_OWORD *)(v28 + 112) = v29;
  *(_BYTE *)(v28 + 128) = v61;
  v30 = v56;
  *(_OWORD *)(v28 + 32) = v55;
  *(_OWORD *)(v28 + 48) = v30;
  v31 = v58;
  *(_OWORD *)(v28 + 64) = v57;
  *(_OWORD *)(v28 + 80) = v31;
  v32 = v54;
  *(_OWORD *)v28 = v53;
  *(_OWORD *)(v28 + 16) = v32;
  sub_237E2209C(v22, &qword_25689A228);
  return sub_237E2209C(v21, &qword_25689A228);
}

uint64_t sub_237E6814C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v13;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A198);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v6 = sub_237EE2904();
  v6[1] = v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A1A0);
  sub_237E64770(v2, (uint64_t)v6 + *(int *)(v8 + 44));
  v9 = sub_237EE21C0();
  v10 = sub_237EE252C();
  sub_237E22004((uint64_t)v6, a1, &qword_25689A198);
  v11 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25689A1A8) + 36);
  *(_QWORD *)v11 = v9;
  *(_BYTE *)(v11 + 8) = v10;
  return sub_237E2209C((uint64_t)v6, &qword_25689A198);
}

uint64_t sub_237E68228(uint64_t a1)
{
  uint64_t result;

  result = sub_237E20E98(&qword_2568986A8, type metadata accessor for WorldClockFace, (uint64_t)&unk_237EE9738);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_237E68264@<X0>(uint64_t a1@<X1>, char a2@<W2>, uint64_t a3@<X3>, char a4@<W4>, uint64_t a5@<X8>)
{
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;

  v33 = a5;
  v8 = a4 & 1;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A3A0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A3A8);
  MEMORY[0x24BDAC7A8](v32);
  v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v11 = sub_237EE2904();
  v11[1] = v14;
  v15 = (uint64_t *)((char *)v11 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25689A3B0) + 44));
  LOBYTE(v35) = a2 & 1;
  LOBYTE(v34) = v8;
  sub_237E685A8(a1, a2 & 1, a3, v8, v15);
  v16 = swift_retain();
  v17 = sub_237EC3CFC(v16, v8);
  swift_release();
  swift_getKeyPath();
  *(_QWORD *)&v35 = v17;
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  swift_release();
  v18 = swift_retain();
  v19 = sub_237EC3CFC(v18, v8);
  swift_release();
  swift_getKeyPath();
  *(_QWORD *)&v35 = v19;
  sub_237EE1F20();
  swift_release();
  swift_release();
  sub_237EE2904();
  sub_237EE20E8();
  sub_237E22004((uint64_t)v11, (uint64_t)v13, &qword_25689A3A0);
  v20 = &v13[*(int *)(v32 + 36)];
  v21 = v36;
  *(_OWORD *)v20 = v35;
  *((_OWORD *)v20 + 1) = v21;
  *((_OWORD *)v20 + 2) = v37;
  sub_237E2209C((uint64_t)v11, &qword_25689A3A0);
  v22 = swift_retain();
  v23 = sub_237EC3CFC(v22, v8);
  swift_release();
  swift_getKeyPath();
  v34 = v23;
  sub_237EE1F20();
  swift_release();
  v24 = *(_QWORD *)(v23 + 144);
  swift_release();
  v25 = swift_retain();
  v26 = sub_237EC3CFC(v25, v8);
  swift_release();
  swift_getKeyPath();
  v34 = v26;
  sub_237EE1F20();
  swift_release();
  v27 = *(_QWORD *)(v26 + 152);
  swift_release();
  v28 = v33;
  sub_237E22004((uint64_t)v13, v33, &qword_25689A3A8);
  v29 = (_QWORD *)(v28 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25689A3B8) + 36));
  *v29 = v24;
  v29[1] = v27;
  return sub_237E2209C((uint64_t)v13, &qword_25689A3A8);
}

uint64_t sub_237E685A8@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t *a5@<X8>)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  double v67;
  double v68;
  id v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  double v86;
  double v87;
  id v88;
  id v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(char *, uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unsigned __int8 v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  char *v124;
  void (*v125)(char *, char *, uint64_t);
  uint64_t v126;
  char *v127;
  uint64_t *v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  void (*v132)(char *, uint64_t);
  uint64_t v134;
  unsigned int v135;
  unsigned int v136;
  int v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  int v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unsigned int v146;
  void (*v147)(char *, uint64_t, uint64_t);
  uint64_t v148;
  int v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  int v163;
  uint64_t v164;
  _BYTE v165[7];
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  _BYTE v174[7];
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char v187;
  _BYTE v188[7];
  uint64_t v189;
  unsigned int v190;
  unsigned int v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  uint64_t v200;
  uint64_t v201;
  unsigned __int8 v202;
  _BYTE v203[7];
  uint64_t v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  __int128 v210;
  __int128 v211;
  __int128 v212;
  __int128 v213;
  __int128 v214;
  __int128 v215;
  __int128 v216;
  __int128 v217;
  __int128 v218;
  __int128 v219;
  __int128 v220;
  __int128 v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  unsigned __int8 v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  unsigned __int8 v232;
  uint64_t v233;
  unsigned int v234;
  unsigned int v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  __int128 v240;
  __int128 v241;
  _OWORD v242[9];
  uint64_t v243;
  _OWORD v244[9];
  uint64_t v245;

  LODWORD(v156) = a2;
  v164 = a1;
  v153 = a5;
  v6 = a4 & 1;
  v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A3C0);
  v161 = *(_QWORD *)(v155 - 8);
  MEMORY[0x24BDAC7A8](v155);
  v154 = (char *)&v134 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v160 = (char *)&v134 - v9;
  v10 = sub_237EE26C4();
  v11 = *(_QWORD *)(v10 - 8);
  v158 = v10;
  v159 = v11;
  MEMORY[0x24BDAC7A8](v10);
  v157 = (char *)&v134 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_237EE2784();
  v151 = *(_QWORD *)(v13 - 8);
  v152 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v150 = (char *)&v134 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A3C8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v134 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = swift_retain();
  v19 = sub_237EC3CFC(v18, v6);
  swift_release();
  swift_getKeyPath();
  *(_QWORD *)&v213 = v19;
  v20 = sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  v21 = *(unsigned __int8 *)(v19 + 136);
  swift_release();
  v163 = v6;
  v162 = v20;
  if (v21 == 1)
  {
    swift_retain();
    LODWORD(v156) = v156 & 1;
    sub_237E6D9F8(v164, v156);
    v22 = sub_237EC3CFC(a3, v6);
    swift_getKeyPath();
    *(_QWORD *)&v213 = v22;
    sub_237EE1F20();
    swift_release();
    v23 = *(_OWORD *)(v22 + 296);
    v24 = *(_OWORD *)(v22 + 312);
    v25 = *(_OWORD *)(v22 + 264);
    v219 = *(_OWORD *)(v22 + 280);
    v220 = v23;
    v221 = v24;
    v222 = *(_QWORD *)(v22 + 328);
    v26 = *(_OWORD *)(v22 + 232);
    v215 = *(_OWORD *)(v22 + 216);
    v216 = v26;
    v217 = *(_OWORD *)(v22 + 248);
    v218 = v25;
    v27 = *(_OWORD *)(v22 + 200);
    v213 = *(_OWORD *)(v22 + 184);
    v214 = v27;
    sub_237E2CCDC((uint64_t)&v213);
    swift_release();
    swift_bridgeObjectRetain();
    sub_237E3A78C((uint64_t)&v213);
    if (qword_256897B50 != -1)
      swift_once();
    v28 = (id)qword_25689DFE0;
    sub_237EE27C0();
    v29 = *MEMORY[0x24BDF4068];
    v30 = sub_237EE279C();
    v31 = *(_QWORD *)(v30 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 104))(v17, v29, v30);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v17, 0, 1, v30);
    sub_237EE2790();
    swift_release();
    sub_237E2209C((uint64_t)v17, &qword_25689A3C8);
    v33 = v150;
    v32 = v151;
    v34 = v152;
    (*(void (**)(char *, _QWORD, uint64_t))(v151 + 104))(v150, *MEMORY[0x24BDF3FD0], v152);
    v35 = sub_237EE27B4();
    swift_release();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v34);
    v183 = v35;
    v184 = 0;
    LOWORD(v185) = 1;
    BYTE2(v185) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25689A3D0);
    sub_237E21CA0(&qword_25689A3D8, &qword_25689A3D0, MEMORY[0x24BDF40E8], MEMORY[0x24BDEEC40]);
    sub_237EE24B4();
    sub_237E6DA30(v164, v156);
    swift_release();
    v151 = *((_QWORD *)&v199 + 1);
    v152 = v199;
    v149 = BYTE2(v200);
    LODWORD(v150) = (unsigned __int16)v200;
  }
  else
  {
    swift_retain();
    LODWORD(v156) = v156 & 1;
    sub_237E6D9F8(v164, v156);
    v36 = sub_237EC3CFC(a3, v6);
    swift_getKeyPath();
    *(_QWORD *)&v213 = v36;
    sub_237EE1F20();
    swift_release();
    v37 = *(_OWORD *)(v36 + 296);
    v38 = *(_OWORD *)(v36 + 312);
    v39 = *(_OWORD *)(v36 + 264);
    v219 = *(_OWORD *)(v36 + 280);
    v220 = v37;
    v221 = v38;
    v222 = *(_QWORD *)(v36 + 328);
    v40 = *(_OWORD *)(v36 + 232);
    v215 = *(_OWORD *)(v36 + 216);
    v216 = v40;
    v217 = *(_OWORD *)(v36 + 248);
    v218 = v39;
    v41 = *(_OWORD *)(v36 + 200);
    v213 = *(_OWORD *)(v36 + 184);
    v214 = v41;
    sub_237E2CCDC((uint64_t)&v213);
    swift_release();
    swift_bridgeObjectRetain();
    sub_237E3A78C((uint64_t)&v213);
    if (qword_256897B50 != -1)
      swift_once();
    v42 = (id)qword_25689DFE0;
    sub_237EE27C0();
    v43 = *MEMORY[0x24BDF4068];
    v44 = sub_237EE279C();
    v45 = *(_QWORD *)(v44 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v45 + 104))(v17, v43, v44);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v17, 0, 1, v44);
    v46 = sub_237EE2790();
    swift_release();
    sub_237E2209C((uint64_t)v17, &qword_25689A3C8);
    v183 = v46;
    v184 = 0;
    LOWORD(v185) = 0;
    BYTE2(v185) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25689A3D0);
    sub_237E21CA0(&qword_25689A3D8, &qword_25689A3D0, MEMORY[0x24BDF40E8], MEMORY[0x24BDEEC40]);
    sub_237EE24B4();
    sub_237E6DA30(v164, v156);
    swift_release();
    v151 = *((_QWORD *)&v199 + 1);
    v152 = v199;
    v149 = BYTE2(v200);
    LODWORD(v150) = (unsigned __int16)v200;
  }
  sub_237EE2724();
  v47 = sub_237EE273C();
  swift_release();
  v48 = *(void (**)(char *, uint64_t, uint64_t))(v159 + 104);
  v49 = v157;
  v146 = *MEMORY[0x24BDF3C28];
  v147 = v48;
  ((void (*)(char *))v48)(v157);
  v50 = MEMORY[0x23B825DC0](v49, 0.6, 0.0, 0.0, 1.0);
  v51 = swift_retain();
  v164 = a3;
  v52 = v163;
  v53 = sub_237EC3CFC(v51, v163);
  swift_release();
  swift_getKeyPath();
  *(_QWORD *)&v213 = v53;
  sub_237EE1F20();
  swift_release();
  LODWORD(v49) = *(unsigned __int8 *)(v53 + 176);
  swift_release();
  if ((_DWORD)v49)
    v54 = v50;
  else
    v54 = v47;
  v159 = v54;
  swift_retain();
  swift_release();
  swift_release();
  swift_retain();
  v55 = v52;
  v56 = sub_237EC3CFC(v164, v52);
  swift_release();
  swift_getKeyPath();
  *(_QWORD *)&v213 = v56;
  sub_237EE1F20();
  swift_release();
  v57 = *(_QWORD *)(v56 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__solarTerminatorPath);
  v58 = *(_QWORD *)(v56 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__solarTerminatorPath + 8);
  v156 = *(_QWORD *)(v56 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__solarTerminatorPath + 16);
  v59 = *(_BYTE *)(v56 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__solarTerminatorPath + 24);
  swift_bridgeObjectRetain();
  swift_release();
  if (v58)
  {
    v139 = v58;
    LODWORD(v148) = v59 & 1;
    LODWORD(v138) = v57 & 1;
    swift_retain();
    v60 = sub_237EC3CFC(v164, v52);
    swift_release();
    swift_getKeyPath();
    *(_QWORD *)&v213 = v60;
    sub_237EE1F20();
    swift_release();
    v61 = *(_OWORD *)(v60 + 296);
    v62 = *(_OWORD *)(v60 + 312);
    v63 = *(_OWORD *)(v60 + 264);
    v244[6] = *(_OWORD *)(v60 + 280);
    v244[7] = v61;
    v244[8] = v62;
    v245 = *(_QWORD *)(v60 + 328);
    v64 = *(_OWORD *)(v60 + 232);
    v244[2] = *(_OWORD *)(v60 + 216);
    v244[3] = v64;
    v244[4] = *(_OWORD *)(v60 + 248);
    v244[5] = v63;
    v65 = *(_OWORD *)(v60 + 200);
    v244[0] = *(_OWORD *)(v60 + 184);
    v244[1] = v65;
    sub_237E2CCDC((uint64_t)v244);
    swift_release();
    swift_retain();
    v66 = sub_237EC3CFC(v164, v52);
    swift_release();
    swift_getKeyPath();
    *(_QWORD *)&v213 = v66;
    sub_237EE1F20();
    swift_release();
    v67 = *(double *)(v66 + 160);
    v68 = *(double *)(v66 + 168);
    swift_release();
    v69 = sub_237E3A464(v57 & 1, v58, v156, v148, (uint64_t)v244, 1, v67, v68);
    sub_237E3A78C((uint64_t)v244);
    v70 = objc_msgSend(v69, sel_CGPath);

    sub_237EE2580();
    v144 = v224;
    v145 = v223;
    v142 = v226;
    v143 = v225;
    v141 = v227;
    sub_237EE2700();
    v71 = sub_237EE273C();
    swift_release();
    sub_237EE2700();
    v72 = sub_237EE273C();
    swift_release();
    v73 = swift_retain();
    v74 = sub_237EC3CFC(v73, v52);
    swift_release();
    swift_getKeyPath();
    *(_QWORD *)&v213 = v74;
    sub_237EE1F20();
    v75 = v163;
    swift_release();
    LODWORD(v69) = *(unsigned __int8 *)(v74 + 176);
    swift_release();
    if ((_DWORD)v69)
      v76 = v72;
    else
      v76 = v71;
    v140 = v76;
    swift_retain();
    swift_release();
    swift_release();
    v77 = swift_retain();
    v78 = sub_237EC3CFC(v77, v75);
    swift_release();
    swift_getKeyPath();
    *(_QWORD *)&v213 = v78;
    sub_237EE1F20();
    swift_release();
    v79 = *(_OWORD *)(v78 + 296);
    v80 = *(_OWORD *)(v78 + 312);
    v81 = *(_OWORD *)(v78 + 264);
    v242[6] = *(_OWORD *)(v78 + 280);
    v242[7] = v79;
    v242[8] = v80;
    v243 = *(_QWORD *)(v78 + 328);
    v82 = *(_OWORD *)(v78 + 232);
    v242[2] = *(_OWORD *)(v78 + 216);
    v242[3] = v82;
    v242[4] = *(_OWORD *)(v78 + 248);
    v242[5] = v81;
    v83 = *(_OWORD *)(v78 + 200);
    v242[0] = *(_OWORD *)(v78 + 184);
    v242[1] = v83;
    sub_237E2CCDC((uint64_t)v242);
    swift_release();
    v84 = swift_retain();
    v85 = sub_237EC3CFC(v84, v75);
    swift_release();
    swift_getKeyPath();
    *(_QWORD *)&v213 = v85;
    sub_237EE1F20();
    swift_release();
    v86 = *(double *)(v85 + 160);
    v87 = *(double *)(v85 + 168);
    swift_release();
    v88 = sub_237E3A464(v138, v139, v156, v148, (uint64_t)v242, 0, v86, v87);
    swift_bridgeObjectRelease();
    sub_237E3A78C((uint64_t)v242);
    v89 = objc_msgSend(v88, sel_CGPath);

    sub_237EE2580();
    v156 = v228;
    v148 = v229;
    v138 = v231;
    v139 = v230;
    v137 = v232;
    sub_237EE20C4();
    v90 = v233;
    v135 = v235;
    v136 = v234;
    v91 = v236;
    v134 = v237;
    v92 = v238;
    v93 = v157;
    v94 = v158;
    v95 = v146;
    v96 = v147;
    v147(v157, v146, v158);
    v97 = MEMORY[0x23B825DC0](v93, 0.580392157, 0.580392157, 0.580392157, 1.0);
    v96(v93, v95, v94);
    v98 = MEMORY[0x23B825DC0](v93, 0.6, 0.0, 0.0, 1.0);
    v99 = swift_retain();
    v100 = sub_237EC3CFC(v99, v75);
    swift_release();
    swift_getKeyPath();
    *(_QWORD *)&v213 = v100;
    sub_237EE1F20();
    swift_release();
    LODWORD(v93) = *(unsigned __int8 *)(v100 + 176);
    swift_release();
    if ((_DWORD)v93)
      v101 = v98;
    else
      v101 = v97;
    swift_retain();
    swift_release();
    swift_release();
    v102 = sub_237E24B4C();
    v103 = *(_QWORD *)(v102 + 16);
    if (v103)
    {
      v158 = v101;
      *(_QWORD *)&v213 = MEMORY[0x24BEE4AF8];
      sub_237E627BC(0, v103, 0);
      v104 = v213;
      v105 = v102 + 40;
      do
      {
        swift_retain();
        v106 = sub_237EE28C8();
        v108 = v107;
        *(_QWORD *)&v213 = v104;
        v110 = *(_QWORD *)(v104 + 16);
        v109 = *(_QWORD *)(v104 + 24);
        if (v110 >= v109 >> 1)
        {
          sub_237E627BC(v109 > 1, v110 + 1, 1);
          v104 = v213;
        }
        *(_QWORD *)(v104 + 16) = v110 + 1;
        v111 = v104 + 16 * v110;
        *(_QWORD *)(v111 + 32) = v106;
        *(_QWORD *)(v111 + 40) = v108;
        v105 += 16;
        --v103;
      }
      while (v103);
      swift_bridgeObjectRelease();
      v101 = v158;
    }
    else
    {
      swift_bridgeObjectRelease();
      v104 = MEMORY[0x24BEE4AF8];
    }
    sub_237EE297C();
    sub_237EE2988();
    MEMORY[0x23B825F40](v104);
    sub_237EE2184();
    *(_DWORD *)v188 = *(_DWORD *)v165;
    *(_DWORD *)&v188[3] = *(_DWORD *)&v165[3];
    *(_QWORD *)&v166 = v156;
    *((_QWORD *)&v166 + 1) = v148;
    *(_QWORD *)&v167 = v139;
    *((_QWORD *)&v167 + 1) = v138;
    LOBYTE(v168) = v137;
    DWORD1(v168) = *(_DWORD *)&v165[3];
    *(_DWORD *)((char *)&v168 + 1) = *(_DWORD *)v165;
    *((_QWORD *)&v168 + 1) = v90;
    *(_QWORD *)&v169 = __PAIR64__(v135, v136);
    *((_QWORD *)&v169 + 1) = v91;
    *(_QWORD *)&v170 = v134;
    *((_QWORD *)&v170 + 1) = v92;
    *(_QWORD *)&v171 = v101;
    *((_QWORD *)&v171 + 1) = v239;
    v172 = v240;
    v173 = v241;
    v178 = v169;
    v177 = v168;
    v176 = v167;
    v175 = v166;
    v182 = v241;
    v181 = v240;
    v180 = v171;
    v179 = v170;
    v183 = v156;
    v184 = v148;
    v185 = v139;
    v186 = v138;
    v187 = v137;
    v189 = v90;
    v190 = v136;
    v191 = v135;
    v192 = v91;
    v193 = v134;
    v194 = v92;
    v195 = v101;
    v196 = v239;
    v197 = v240;
    v198 = v241;
    v113 = v144;
    v112 = v145;
    v115 = v142;
    v114 = v143;
    v116 = v141;
    sub_237E6DE14(v145, v144, v143, v142, v141);
    v117 = v140;
    swift_retain();
    sub_237E6DF3C((uint64_t)&v166);
    sub_237E6DF98((uint64_t)&v183);
    sub_237E6DF24(v112, v113, v114, v115, v116);
    swift_release();
    *(_QWORD *)&v199 = v112;
    *((_QWORD *)&v199 + 1) = v113;
    v200 = v114;
    v201 = v115;
    v202 = v116;
    *(_DWORD *)v203 = *(_DWORD *)v174;
    *(_DWORD *)&v203[3] = *(_DWORD *)&v174[3];
    v204 = v117;
    v209 = v179;
    v210 = v180;
    v211 = v181;
    v212 = v182;
    v205 = v175;
    v206 = v176;
    v207 = v177;
    v208 = v178;
    CGSizeMake(*(double *)&v177, *(double *)&v178);
    sub_237E21FC0((uint64_t)&v199, (uint64_t)&v213, &qword_25689A3E0);
    v55 = v163;
  }
  else
  {
    sub_237E6DD1C(&v199);
    sub_237E21FC0((uint64_t)&v199, (uint64_t)&v213, &qword_25689A3E0);
  }
  v118 = swift_retain();
  v119 = sub_237EC3CFC(v118, v55);
  swift_release();
  swift_getKeyPath();
  *(_QWORD *)&v199 = v119;
  sub_237EE1F20();
  swift_release();
  v120 = *(_QWORD *)(v119 + 160);
  v121 = *(_QWORD *)(v119 + 168);
  swift_release();
  type metadata accessor for WorldViewModel(0);
  *(_QWORD *)&v199 = sub_237EE20B8();
  BYTE8(v199) = v122 & 1;
  v200 = v120;
  v201 = v121;
  v123 = swift_retain();
  sub_237EC3CFC(v123, v55);
  swift_release();
  sub_237E6DD3C();
  v124 = v160;
  sub_237EE2640();
  swift_release();
  swift_release();
  sub_237E21FC0((uint64_t)&v213, (uint64_t)&v175, &qword_25689A3E0);
  v125 = *(void (**)(char *, char *, uint64_t))(v161 + 16);
  v127 = v154;
  v126 = v155;
  v125(v154, v124, v155);
  v128 = v153;
  v129 = v151;
  *v153 = v152;
  v128[1] = v129;
  v130 = v149;
  *((_WORD *)v128 + 8) = (_WORD)v150;
  *((_BYTE *)v128 + 18) = v130;
  v128[3] = v159;
  sub_237E21FC0((uint64_t)&v175, (uint64_t)&v183, &qword_25689A3E0);
  sub_237E21FC0((uint64_t)&v183, (uint64_t)(v128 + 4), &qword_25689A3E0);
  v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A3F0);
  v125((char *)v128 + *(int *)(v131 + 64), v127, v126);
  j__swift_retain();
  swift_retain();
  sub_237E6DE2C(&v183, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_237E6DD80);
  v132 = *(void (**)(char *, uint64_t))(v161 + 8);
  v132(v160, v126);
  v132(v127, v126);
  sub_237E21FC0((uint64_t)&v175, (uint64_t)&v199, &qword_25689A3E0);
  sub_237E6DE2C(&v199, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_237E6DE90);
  j__swift_release();
  return swift_release();
}

uint64_t sub_237E6982C@<X0>(uint64_t (**a1)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v3 = *(_QWORD *)v1;
  v4 = *(_BYTE *)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_BYTE *)(v1 + 24);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v3;
  *(_BYTE *)(v7 + 24) = v4;
  *(_QWORD *)(v7 + 32) = v5;
  *(_BYTE *)(v7 + 40) = v6;
  *a1 = sub_237E6DCDC;
  a1[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v7;
  sub_237E6D9F8(v3, v4);
  return swift_retain();
}

uint64_t sub_237E698A8@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[4];

  v9 = a2 & 1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898A78);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (_QWORD *)((char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v12 = sub_237EE2904();
  v12[1] = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689A4C0);
  v14 = swift_retain();
  v15 = sub_237EC3CFC(v14, v9);
  swift_release();
  swift_getKeyPath();
  v21[1] = v15;
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  swift_beginAccess();
  v16 = *(_QWORD *)(v15 + 336);
  swift_bridgeObjectRetain();
  swift_release();
  v21[0] = v16;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a1;
  *(_BYTE *)(v17 + 24) = v9;
  *(double *)(v17 + 32) = a4;
  *(double *)(v17 + 40) = a5;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689A4C8);
  type metadata accessor for CLLocationCoordinate2D(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689A4D0);
  sub_237E22690(&qword_25689A4D8, &qword_25689A4C8, MEMORY[0x24BEE12D8]);
  sub_237E6DFFC(&qword_25689A4E0, &qword_25689A4D0, (uint64_t (*)(void))sub_237E6E1C8);
  sub_237E20E98(&qword_25689A4F0, type metadata accessor for WorldViewModel.Pin, (uint64_t)&unk_237EE6C28);
  sub_237EE28BC();
  v18 = sub_237EE2904();
  sub_237E2E64C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a3, 0.0, 1, INFINITY, 0, v18, v19);
  return sub_237E2209C((uint64_t)v12, &qword_256898A78);
}

uint64_t sub_237E69B40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  double *v8;
  char v9;
  double v10;
  double v11;
  uint64_t result;
  char v13;

  v8 = (double *)(a1 + *(int *)(type metadata accessor for WorldViewModel.Pin(0) + 32));
  if (*(_BYTE *)(a1 + 17))
    v9 = *(_BYTE *)(a1 + 16);
  else
    v9 = *(_BYTE *)(a1 + 16) | 0x80;
  v10 = v8[1] - a4 * 0.5;
  v11 = *v8 - a3 * 0.5;
  type metadata accessor for WorldViewModel(0);
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  result = sub_237EE20B8();
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v13 & 1;
  *(_BYTE *)(a2 + 9) = v9;
  *(double *)(a2 + 16) = v11;
  *(double *)(a2 + 24) = v10;
  return result;
}

uint64_t sub_237E69C00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_237E698A8(*(_QWORD *)v1, *(_BYTE *)(v1 + 8), a1, *(double *)(v1 + 16), *(double *)(v1 + 24));
}

uint64_t sub_237E69C18@<X0>(__int16 a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  void *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  char v47;
  char v48;
  char v49;
  int v50;
  char v51;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  __int16 v74;
  _DWORD v75[2];
  _DWORD v76[2];
  _DWORD v77[2];
  int v78;
  __int16 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  _BYTE v90[7];
  char v91;
  _BYTE v92[7];
  char v93;
  int v94;
  __int16 v95;
  _BYTE v96[7];
  char v97;
  _BYTE v98[7];
  char v99;
  int v100;
  __int16 v101;
  uint64_t v102;
  __int16 v103;
  int v104;
  __int16 v105;
  uint64_t v106;
  char v107;
  _BYTE v108[7];
  uint64_t v109;
  char v110;
  _BYTE v111[7];
  uint64_t v112;
  uint64_t v113;
  __int128 v114;
  char v115;
  _BYTE v116[7];
  uint64_t v117;
  __int16 v118;
  int v119;
  __int16 v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  __int16 v128;
  _BYTE v129[7];
  _BYTE v130[7];
  unsigned __int8 v131;
  _BYTE v132[7];
  unsigned __int8 v133;
  int v134;
  __int16 v135;
  uint64_t v136;
  unsigned __int8 v137;
  uint64_t v138;
  unsigned __int8 v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  unsigned __int8 v143;
  uint64_t v144;
  unsigned __int8 v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char v149;
  uint64_t v150;
  char v151;
  __int128 v152;

  v63 = sub_237EE26C4();
  v60 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v61 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = a1 & 0x100;
  LODWORD(v59) = a1;
  v68 = sub_237EE2724();
  sub_237EE2904();
  sub_237EE20E8();
  v64 = v136;
  v65 = v138;
  v57 = v137;
  LODWORD(v58) = v139;
  v66 = v141;
  v67 = v140;
  v71 = sub_237EE2904();
  v72 = v6;
  v62 = (id)objc_opt_self();
  MEMORY[0x23B825DCC](objc_msgSend(v62, sel_systemOrangeColor));
  v7 = sub_237EE273C();
  swift_release();
  v8 = sub_237E3916C(v7, v5 >> 7);
  v10 = v9;
  v11 = a1 & 1;
  LODWORD(v55) = v11;
  v12 = swift_retain();
  v13 = sub_237EC3CFC(v12, v11);
  swift_release();
  swift_getKeyPath();
  v102 = v13;
  v53 = sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  v14 = *(unsigned __int8 *)(v13 + 176);
  swift_release();
  if (v14)
    v15 = v10;
  else
    v15 = v8;
  v70 = v15;
  swift_retain();
  swift_release();
  swift_release();
  v102 = sub_237EE2700();
  sub_237E6E42C();
  v69 = sub_237EE276C();
  v133 = v57;
  v131 = v58;
  v16 = dbl_237EE96E0[v5 == 0];
  v54 = 2 * (v5 == 0);
  v17 = sub_237EE2724();
  v18 = v61;
  (*(void (**)(char *, _QWORD, uint64_t))(v60 + 104))(v61, *MEMORY[0x24BDF3C28], v63);
  v19 = MEMORY[0x23B825DC0](v18, v16, 0.0, 0.0, 1.0);
  v20 = swift_retain();
  v21 = v55;
  v22 = sub_237EC3CFC(v20, v55);
  swift_release();
  swift_getKeyPath();
  v102 = v22;
  sub_237EE1F20();
  swift_release();
  LODWORD(v18) = *(unsigned __int8 *)(v22 + 176);
  swift_release();
  if ((_DWORD)v18)
    v23 = v19;
  else
    v23 = v17;
  v63 = v23;
  swift_retain();
  swift_release();
  swift_release();
  sub_237EE2904();
  sub_237EE20E8();
  v60 = v144;
  v61 = v142;
  v56 = v145;
  v57 = v143;
  v58 = v147;
  v59 = v146;
  v24 = MEMORY[0x23B825DCC](objc_msgSend(v62, sel_systemOrangeColor));
  v25 = sub_237E3916C(v24, v54);
  v27 = v26;
  v28 = swift_retain();
  v29 = sub_237EC3CFC(v28, v21);
  swift_release();
  swift_getKeyPath();
  v102 = v29;
  sub_237EE1F20();
  swift_release();
  v30 = *(unsigned __int8 *)(v29 + 176);
  swift_release();
  if (v30)
    v31 = v27;
  else
    v31 = (void *)v25;
  v62 = v31;
  swift_retain();
  swift_release();
  swift_release();
  sub_237EE2904();
  sub_237EE20E8();
  v32 = v148;
  v33 = v149;
  v34 = v150;
  v35 = v151;
  v78 = v134;
  v79 = v135;
  LODWORD(v53) = v133;
  v77[0] = *(_DWORD *)v132;
  *(_DWORD *)((char *)v77 + 3) = *(_DWORD *)&v132[3];
  LODWORD(v54) = v131;
  v76[0] = *(_DWORD *)v130;
  *(_DWORD *)((char *)v76 + 3) = *(_DWORD *)&v130[3];
  *(_DWORD *)((char *)v75 + 3) = *(_DWORD *)&v129[3];
  v75[0] = *(_DWORD *)v129;
  v74 = v128;
  v73 = v127;
  v36 = v68;
  *(_QWORD *)&v80 = v68;
  WORD4(v80) = 256;
  HIWORD(v80) = v135;
  *(_DWORD *)((char *)&v80 + 10) = v134;
  v38 = v64;
  v37 = v65;
  *(_QWORD *)&v81 = v64;
  BYTE8(v81) = v133;
  HIDWORD(v81) = *(_DWORD *)&v132[3];
  *(_DWORD *)((char *)&v81 + 9) = *(_DWORD *)v132;
  *(_QWORD *)&v82 = v65;
  BYTE8(v82) = v131;
  HIDWORD(v82) = *(_DWORD *)&v130[3];
  *(_DWORD *)((char *)&v82 + 9) = *(_DWORD *)v130;
  v40 = v66;
  v39 = v67;
  *(_QWORD *)&v83 = v67;
  *((_QWORD *)&v83 + 1) = v66;
  v55 = xmmword_237EE96F0;
  v84 = xmmword_237EE96F0;
  LOBYTE(v85) = 1;
  DWORD1(v85) = *(_DWORD *)&v129[3];
  *(_DWORD *)((char *)&v85 + 1) = *(_DWORD *)v129;
  *((_QWORD *)&v85 + 1) = v70;
  LOWORD(v86) = 256;
  WORD3(v86) = v128;
  *(_DWORD *)((char *)&v86 + 2) = v127;
  *((_QWORD *)&v86 + 1) = v71;
  *(_QWORD *)&v87 = v72;
  *((_QWORD *)&v87 + 1) = v69;
  v88 = 0x4022000000000000uLL;
  v89 = 0;
  v41 = v81;
  *(_OWORD *)a2 = v80;
  *(_OWORD *)(a2 + 16) = v41;
  v42 = v82;
  v43 = v83;
  v44 = v85;
  *(_OWORD *)(a2 + 64) = v84;
  *(_OWORD *)(a2 + 80) = v44;
  *(_OWORD *)(a2 + 32) = v42;
  *(_OWORD *)(a2 + 48) = v43;
  v45 = v86;
  v46 = v88;
  *(_OWORD *)(a2 + 112) = v87;
  *(_OWORD *)(a2 + 128) = v46;
  *(_OWORD *)(a2 + 96) = v45;
  v47 = v56;
  v48 = v57;
  v99 = v57;
  v97 = v56;
  v93 = v33;
  v91 = v35;
  *(_DWORD *)(a2 + 162) = v100;
  *(_WORD *)(a2 + 166) = v101;
  *(_DWORD *)(a2 + 177) = *(_DWORD *)v98;
  *(_DWORD *)(a2 + 180) = *(_DWORD *)&v98[3];
  v49 = v47;
  *(_DWORD *)(a2 + 193) = *(_DWORD *)v96;
  *(_DWORD *)(a2 + 196) = *(_DWORD *)&v96[3];
  v50 = v94;
  *(_WORD *)(a2 + 230) = v95;
  *(_DWORD *)(a2 + 226) = v50;
  LOBYTE(v50) = v93;
  *(_DWORD *)(a2 + 241) = *(_DWORD *)v92;
  *(_DWORD *)(a2 + 244) = *(_DWORD *)&v92[3];
  *(_DWORD *)(a2 + 257) = *(_DWORD *)v90;
  v51 = v91;
  *(_DWORD *)(a2 + 260) = *(_DWORD *)&v90[3];
  *(_QWORD *)(a2 + 144) = 0;
  *(_QWORD *)(a2 + 152) = v63;
  *(_WORD *)(a2 + 160) = 256;
  *(_QWORD *)(a2 + 168) = v61;
  *(_BYTE *)(a2 + 176) = v48;
  *(_QWORD *)(a2 + 184) = v60;
  *(_BYTE *)(a2 + 192) = v49;
  *(_QWORD *)(a2 + 200) = v59;
  *(_QWORD *)(a2 + 208) = v58;
  *(_QWORD *)(a2 + 216) = v62;
  *(_WORD *)(a2 + 224) = 256;
  *(_QWORD *)(a2 + 232) = v32;
  *(_BYTE *)(a2 + 240) = v50;
  *(_QWORD *)(a2 + 248) = v34;
  *(_BYTE *)(a2 + 256) = v51;
  *(_OWORD *)(a2 + 264) = v152;
  sub_237E6E470((uint64_t)&v80);
  v102 = v36;
  v103 = 256;
  v104 = v78;
  v105 = v79;
  v106 = v38;
  v107 = v53;
  *(_DWORD *)v108 = v77[0];
  *(_DWORD *)&v108[3] = *(_DWORD *)((char *)v77 + 3);
  v109 = v37;
  v110 = v54;
  *(_DWORD *)v111 = v76[0];
  *(_DWORD *)&v111[3] = *(_DWORD *)((char *)v76 + 3);
  v112 = v39;
  v113 = v40;
  v114 = v55;
  v115 = 1;
  *(_DWORD *)&v116[3] = *(_DWORD *)((char *)v75 + 3);
  *(_DWORD *)v116 = v75[0];
  v117 = v70;
  v118 = 256;
  v120 = v74;
  v119 = v73;
  v121 = v71;
  v122 = v72;
  v123 = v69;
  v124 = 0x4022000000000000;
  v126 = 0;
  v125 = 0;
  return sub_237E6E4B8((uint64_t)&v102);
}

void *sub_237E6A3C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int16 v3;
  __int16 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  _BYTE __src[280];

  v3 = *(unsigned __int8 *)(v1 + 8);
  v4 = *(unsigned __int8 *)(v1 + 9);
  v5 = sub_237EE2904();
  v7 = v6;
  sub_237E69C18(v3 | (v4 << 8), (uint64_t)__src);
  v8 = sub_237EE2910();
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v7;
  result = memcpy((void *)(a1 + 16), __src, 0x118uLL);
  *(_QWORD *)(a1 + 296) = v8;
  *(_BYTE *)(a1 + 304) = v4;
  return result;
}

uint64_t sub_237E6A468@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t result;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  double v60;
  uint64_t v61;
  double v62;
  double v63;
  uint64_t v64;
  char v65;
  double v66;
  double v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v2 = v1;
  v71 = a1;
  v3 = type metadata accessor for Dashboard(0);
  MEMORY[0x24BDAC7A8](v3);
  v74 = (uint64_t)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899518);
  MEMORY[0x24BDAC7A8](v5);
  v68 = (uint64_t)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v73 = (uint64_t)&v68 - v8;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v68 - v10;
  v12 = sub_237EE21A8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v68 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A3F8);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A400);
  MEMORY[0x24BDAC7A8](v22);
  v75 = (char *)&v68 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A408);
  MEMORY[0x24BDAC7A8](v69);
  v70 = (char *)&v68 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237EC3D20((uint64_t)v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x24BDED100], v12);
  v25 = sub_237EE219C();
  v26 = *(void (**)(char *, uint64_t))(v13 + 8);
  v26(v15, v12);
  v26(v18, v12);
  v72 = v22;
  if ((v25 & 1) != 0)
    v27 = sub_237EE2400();
  else
    v27 = sub_237EE240C();
  *(_QWORD *)v21 = v27;
  *((_QWORD *)v21 + 1) = 0;
  v21[16] = 1;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A410);
  sub_237E6AC60(v2, (uint64_t)&v21[*(int *)(v28 + 44)]);
  v29 = sub_237EE2934();
  v30 = *(_BYTE *)(v2 + 8);
  v31 = swift_retain();
  v32 = sub_237EC3CFC(v31, v30);
  swift_release();
  swift_getKeyPath();
  v78 = v32;
  sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  v33 = v32 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__highlighted;
  swift_beginAccess();
  sub_237E22004(v33, (uint64_t)v11, &qword_256899518);
  swift_release();
  v34 = (uint64_t)v75;
  v35 = (uint64_t *)&v75[*(int *)(v72 + 36)];
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A218);
  sub_237E22004((uint64_t)v11, (uint64_t)v35 + *(int *)(v36 + 36), &qword_256899518);
  *v35 = v29;
  sub_237E22004((uint64_t)v21, v34, &qword_25689A3F8);
  sub_237E2209C((uint64_t)v11, &qword_256899518);
  sub_237E2209C((uint64_t)v21, &qword_25689A3F8);
  LOBYTE(v35) = *(_BYTE *)(v2 + 8);
  v37 = swift_retain();
  v38 = sub_237EC3CFC(v37, (char)v35);
  swift_release();
  swift_getKeyPath();
  v77 = v38;
  sub_237EE1F20();
  swift_release();
  v39 = v38 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__highlighted;
  swift_beginAccess();
  v40 = v73;
  sub_237E22004(v39, v73, &qword_256899518);
  swift_release();
  v41 = type metadata accessor for WorldViewModel.Pin(0);
  v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 48);
  if (v42(v40, 1, v41) == 1)
  {
    sub_237E2209C(v40, &qword_256899518);
LABEL_12:
    v59 = v74;
    sub_237E21EBC(v2, v74, type metadata accessor for Dashboard);
    sub_237E21F00(v59, type metadata accessor for Dashboard);
    v57 = v69;
    v56 = (uint64_t)v70;
    v58 = (uint64_t)v75;
    goto LABEL_13;
  }
  sub_237E3FDB4();
  v44 = v43;
  sub_237E21F00(v40, type metadata accessor for WorldViewModel.Pin);
  if (!v44)
    goto LABEL_12;
  swift_bridgeObjectRelease();
  v45 = v2;
  v46 = v74;
  sub_237E21EBC(v45, v74, type metadata accessor for Dashboard);
  v47 = *(_BYTE *)(v46 + 8);
  v48 = swift_retain();
  v49 = sub_237EC3CFC(v48, v47);
  swift_release();
  swift_getKeyPath();
  v76 = v49;
  sub_237EE1F20();
  swift_release();
  v50 = v49 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__highlighted;
  swift_beginAccess();
  v51 = v68;
  sub_237E22004(v50, v68, &qword_256899518);
  swift_release();
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v42)(v51, 1, v41);
  if ((_DWORD)result != 1)
  {
    v53 = sub_237E3FDB4();
    v55 = v54;
    sub_237E21F00(v51, type metadata accessor for WorldViewModel.Pin);
    v57 = v69;
    v56 = (uint64_t)v70;
    v58 = (uint64_t)v75;
    if (v55)
    {
      if (!v53 && v55 == 0xE000000000000000)
      {
        sub_237E21F00(v46, type metadata accessor for Dashboard);
        swift_bridgeObjectRelease();
LABEL_13:
        if (qword_256897AC0 != -1)
          swift_once();
        v60 = *(double *)&qword_25689DEE0;
        v61 = v71;
        if (qword_256897AC8 != -1)
          swift_once();
        v62 = v60 + *(double *)&qword_25689DEE8;
        if (qword_256897AD0 != -1)
          swift_once();
        v63 = 18.0 - (v62 + *(double *)&qword_25689DEF0);
LABEL_20:
        sub_237E22004(v58, v56, &qword_25689A400);
        v64 = v56 + *(int *)(v57 + 36);
        *(_QWORD *)v64 = 0;
        *(double *)(v64 + 8) = v63;
        sub_237E2209C(v58, &qword_25689A400);
        return sub_237E21FC0(v56, v61, &qword_25689A408);
      }
      v65 = sub_237EE31BC();
      sub_237E21F00(v46, type metadata accessor for Dashboard);
      swift_bridgeObjectRelease();
      if ((v65 & 1) != 0)
        goto LABEL_13;
    }
    else
    {
      sub_237E21F00(v46, type metadata accessor for Dashboard);
    }
    if (qword_256897AC0 != -1)
      swift_once();
    v66 = *(double *)&qword_25689DEE0;
    v61 = v71;
    if (qword_256897AC8 != -1)
      swift_once();
    v67 = v66 + *(double *)&qword_25689DEE8;
    if (qword_256897AD0 != -1)
      swift_once();
    v63 = -(v67 + *(double *)&qword_25689DEF0);
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

uint64_t sub_237E6AC60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  __CFString *v38;
  __CFString *v39;
  CTFontRef v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  __CFString *v59;
  CTFontRef v60;
  uint64_t v61;
  char v62;
  char v63;
  char *v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  CTFontRef v72;
  CTFontRef v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  char v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  char v93;
  uint64_t v94;
  char v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(char *, uint64_t, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t (*v120)(void);
  char v121;
  char v122;
  uint64_t KeyPath;
  char *v124;
  uint64_t v125;
  uint64_t *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void (*v137)(char *, char *, uint64_t);
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  void (*v143)(char *, uint64_t);
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  id v148;
  CTFontRef v149;
  unsigned int v150;
  void (*v151)(char *, uint64_t, uint64_t);
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  char *v176;
  char *v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  uint64_t v184;
  char v185;
  id v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char v190;
  CTFontRef v191;
  CTFontRef v192;
  __int16 v193;
  uint64_t v194;
  uint64_t v195;

  v173 = a2;
  v172 = sub_237EE2238();
  v171 = *(_QWORD *)(v172 - 8);
  MEMORY[0x24BDAC7A8](v172);
  v170 = (char *)&v145 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = sub_237EE24F0();
  MEMORY[0x24BDAC7A8](v163);
  v166 = (char *)&v145 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_237EE2220();
  MEMORY[0x24BDAC7A8](v5);
  v154 = (char *)&v145 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_237EE2268();
  MEMORY[0x24BDAC7A8](v7);
  v153 = (char *)&v145 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = sub_237EE2298();
  v158 = *(_QWORD *)(v159 - 8);
  MEMORY[0x24BDAC7A8](v159);
  v177 = (char *)&v145 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899518);
  MEMORY[0x24BDAC7A8](v10);
  v152 = (uint64_t)&v145 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898010);
  MEMORY[0x24BDAC7A8](v155);
  v161 = (char *)&v145 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898000);
  MEMORY[0x24BDAC7A8](v156);
  v165 = (char *)&v145 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A418);
  MEMORY[0x24BDAC7A8](v162);
  v169 = (uint64_t)&v145 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v160 = (uint64_t)&v145 - v16;
  MEMORY[0x24BDAC7A8](v17);
  v168 = (uint64_t)&v145 - v18;
  v19 = sub_237EE26C4();
  v20 = *(_QWORD *)(v19 - 8);
  v175 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v145 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A420);
  v179 = *(_QWORD *)(v23 - 8);
  v180 = v23;
  MEMORY[0x24BDAC7A8](v23);
  v167 = (char *)&v145 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v157 = (char *)&v145 - v26;
  MEMORY[0x24BDAC7A8](v27);
  v178 = (char *)&v145 - v28;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A428);
  MEMORY[0x24BDAC7A8](v29);
  v164 = (uint64_t)&v145 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)&v145 - v32;
  MEMORY[0x24BDAC7A8](v34);
  v36 = (char *)&v145 - v35;
  *(_QWORD *)v33 = sub_237EE2394();
  *((_QWORD *)v33 + 1) = 0;
  v33[16] = 0;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A430);
  sub_237E6BD00(a1, (uint64_t)&v33[*(int *)(v37 + 44)]);
  v176 = v36;
  sub_237E21FC0((uint64_t)v33, (uint64_t)v36, &qword_25689A428);
  v147 = 0x8000000237EEE3F0;
  v38 = (__CFString *)sub_237EE2A54();
  v149 = CTFontCreateWithNameAndOptions(v38, 92.0, 0, 0x20000uLL);

  v39 = (__CFString *)sub_237EE2A54();
  v40 = CTFontCreateWithNameAndOptions(v39, 92.0, 0, 0x20000uLL);

  v148 = sub_237E23CCC();
  v41 = sub_237EE2724();
  v42 = *MEMORY[0x24BDF3C28];
  v43 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 104);
  v174 = v22;
  v43(v22, v42, v19);
  v44 = MEMORY[0x23B825DC0](v22, 1.0, 0.0, 0.0, 1.0);
  LOBYTE(v40) = *(_BYTE *)(a1 + 8);
  v45 = swift_retain();
  v46 = a1;
  v47 = sub_237EC3CFC(v45, (char)v40);
  swift_release();
  swift_getKeyPath();
  v184 = v47;
  v48 = sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  LODWORD(v20) = *(unsigned __int8 *)(v47 + 176);
  swift_release();
  if ((_DWORD)v20)
    v49 = v44;
  else
    v49 = v41;
  v146 = v49;
  swift_retain();
  swift_release();
  swift_release();
  v50 = sub_237EE2724();
  v150 = v42;
  v51 = v174;
  v151 = v43;
  ((void (*)(void))v43)();
  v52 = MEMORY[0x23B825DC0](v51, 0.8, 0.0, 0.0, 1.0);
  v53 = (char *)v46;
  v54 = *(_BYTE *)(v46 + 8);
  v55 = swift_retain();
  v56 = sub_237EC3CFC(v55, v54);
  swift_release();
  swift_getKeyPath();
  v184 = v56;
  v181 = v48;
  sub_237EE1F20();
  swift_release();
  v57 = *(unsigned __int8 *)(v56 + 176);
  swift_release();
  if (v57)
    v58 = v52;
  else
    v58 = v50;
  swift_retain();
  swift_release();
  swift_release();
  v59 = (__CFString *)sub_237EE2A54();
  v60 = CTFontCreateWithNameAndOptions(v59, 92.0, 0, 0x20000uLL);

  type metadata accessor for RollingClockViewModel();
  sub_237E20E98(&qword_256897E18, (uint64_t (*)(uint64_t))type metadata accessor for RollingClockViewModel, (uint64_t)&unk_237EE4558);
  v61 = sub_237EE20B8();
  v63 = v62;
  if (qword_256897AC0 != -1)
    swift_once();
  v184 = v61;
  v185 = v63 & 1;
  v186 = v148;
  v187 = v146;
  v188 = v58;
  v189 = 0;
  v190 = 0;
  v191 = v149;
  v192 = v60;
  v193 = 768;
  v194 = 0;
  v195 = qword_25689DEE0;
  v64 = v53;
  v65 = v53[8];
  v66 = swift_retain();
  v67 = sub_237EC3CFC(v66, v65);
  swift_release();
  swift_getKeyPath();
  v182 = v67;
  sub_237EE1F20();
  swift_release();
  swift_retain();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689A438);
  sub_237E6DFFC(&qword_25689A440, &qword_25689A438, (uint64_t (*)(void))sub_237E32F44);
  v68 = v157;
  sub_237EE2640();
  swift_release();
  v69 = v187;
  v70 = v188;
  v71 = v189;
  v72 = v191;
  v73 = v192;
  v74 = v190;

  swift_release();
  sub_237E20A7C(v69, v70, v71, v74);

  (*(void (**)(char *, char *, uint64_t))(v179 + 32))(v178, v68, v180);
  v157 = v64;
  LOBYTE(v69) = v64[8];
  v75 = swift_retain();
  v76 = sub_237EC3CFC(v75, v69);
  swift_release();
  swift_getKeyPath();
  v184 = v76;
  sub_237EE1F20();
  swift_release();
  v77 = v76 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__highlighted;
  swift_beginAccess();
  v78 = v152;
  sub_237E22004(v77, v152, &qword_256899518);
  swift_release();
  v79 = type metadata accessor for WorldViewModel.Pin(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 48))(v78, 1, v79) == 1)
  {
    sub_237E2209C(v78, &qword_256899518);
  }
  else
  {
    v80 = sub_237E3FDB4();
    v82 = v81;
    sub_237E21F00(v78, type metadata accessor for WorldViewModel.Pin);
    if (v82)
      goto LABEL_13;
  }
  swift_bridgeObjectRelease();
  v80 = 0;
  v82 = 0xE000000000000000;
LABEL_13:
  v182 = v80;
  v183 = v82;
  sub_237E33174();
  v83 = sub_237EE25F8();
  v85 = v84;
  v87 = v86 & 1;
  v88 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_weight_, 26.0, *MEMORY[0x24BEBB610]);
  sub_237EE2574();
  v89 = sub_237EE25BC();
  v91 = v90;
  v93 = v92;
  v152 = v94;
  swift_release();
  v95 = v93 & 1;
  sub_237E21F3C(v83, v85, v87);
  swift_bridgeObjectRelease();
  v96 = v174;
  v97 = v150;
  v98 = v175;
  v99 = v151;
  v151(v174, v150, v175);
  v100 = MEMORY[0x23B825DC0](v96, 0.552941176, 0.552941176, 0.57254902, 1.0);
  v99(v96, v97, v98);
  v101 = MEMORY[0x23B825DC0](v96, 0.6, 0.0, 0.0, 1.0);
  LOBYTE(v97) = v157[8];
  v102 = swift_retain();
  v103 = sub_237EC3CFC(v102, v97);
  swift_release();
  swift_getKeyPath();
  v182 = v103;
  sub_237EE1F20();
  swift_release();
  LODWORD(v99) = *(unsigned __int8 *)(v103 + 176);
  swift_release();
  if ((_DWORD)v99)
    v104 = v101;
  else
    v104 = v100;
  swift_retain();
  swift_release();
  swift_release();
  v182 = v104;
  v105 = sub_237EE25A4();
  v107 = v106;
  LODWORD(v181) = v108;
  v110 = v109;
  sub_237E21F3C(v89, v91, v95);
  swift_release();
  swift_bridgeObjectRelease();
  sub_237EE225C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898DF8);
  sub_237EE2244();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_237EE4470;
  sub_237EE21F0();
  sub_237EE2250();
  sub_237EE2214();
  sub_237EE2250();
  sub_237EE2274();
  type metadata accessor for Dashboard(0);
  v111 = sub_237EE2934();
  v112 = sub_237EE2280();
  v113 = sub_237EE228C();
  if (!v112)
  {
    if (!v113)
    {
      v112 = 0;
      goto LABEL_22;
    }
LABEL_20:
    v112 |= v113;
    goto LABEL_22;
  }
  if ((v113 & ~v112) != 0)
    goto LABEL_20;
LABEL_22:
  v114 = v158;
  v115 = (uint64_t)v166;
  v116 = v177;
  v117 = v159;
  (*(void (**)(char *, char *, uint64_t))(v158 + 16))(v166, v177, v159);
  v118 = v163;
  *(_QWORD *)(v115 + *(int *)(v163 + 20)) = v111;
  *(_DWORD *)(v115 + *(int *)(v118 + 24)) = v112;
  v119 = (uint64_t)v161;
  v120 = MEMORY[0x24BDF0B50];
  sub_237E21EBC(v115, (uint64_t)&v161[*(int *)(v155 + 36)], (uint64_t (*)(_QWORD))MEMORY[0x24BDF0B50]);
  *(_QWORD *)v119 = v105;
  *(_QWORD *)(v119 + 8) = v107;
  v121 = v181;
  v122 = v181 & 1;
  *(_BYTE *)(v119 + 16) = v181 & 1;
  *(_QWORD *)(v119 + 24) = v110;
  sub_237E21EAC(v105, v107, v121 & 1);
  swift_bridgeObjectRetain();
  sub_237E21F00(v115, (uint64_t (*)(_QWORD))v120);
  (*(void (**)(char *, uint64_t))(v114 + 8))(v116, v117);
  sub_237E21F3C(v105, v107, v122);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v124 = v170;
  sub_237EE222C();
  v125 = (uint64_t)v165;
  v126 = (uint64_t *)&v165[*(int *)(v156 + 36)];
  v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898030);
  v128 = v171;
  v129 = v172;
  (*(void (**)(char *, char *, uint64_t))(v171 + 16))((char *)v126 + *(int *)(v127 + 28), v124, v172);
  *v126 = KeyPath;
  sub_237E22004(v119, v125, &qword_256898010);
  (*(void (**)(char *, uint64_t))(v128 + 8))(v124, v129);
  sub_237E2209C(v119, &qword_256898010);
  if (qword_256897AC8 != -1)
    swift_once();
  v130 = qword_25689DEE8;
  v131 = v160;
  sub_237E22004(v125, v160, &qword_256898000);
  v132 = (_QWORD *)(v131 + *(int *)(v162 + 36));
  *v132 = 0;
  v132[1] = v130;
  sub_237E2209C(v125, &qword_256898000);
  v133 = v168;
  sub_237E21FC0(v131, v168, &qword_25689A418);
  v134 = v164;
  sub_237E22004((uint64_t)v176, v164, &qword_25689A428);
  v136 = v179;
  v135 = v180;
  v137 = *(void (**)(char *, char *, uint64_t))(v179 + 16);
  v138 = v167;
  v139 = v178;
  v137(v167, v178, v180);
  v140 = v169;
  sub_237E22004(v133, v169, &qword_25689A418);
  v141 = v173;
  sub_237E22004(v134, v173, &qword_25689A428);
  v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A448);
  v137((char *)(v141 + *(int *)(v142 + 48)), v138, v135);
  sub_237E22004(v140, v141 + *(int *)(v142 + 64), &qword_25689A418);
  sub_237E2209C(v133, &qword_25689A418);
  v143 = *(void (**)(char *, uint64_t))(v136 + 8);
  v143(v139, v135);
  sub_237E2209C((uint64_t)v176, &qword_25689A428);
  sub_237E2209C(v140, &qword_25689A418);
  v143(v138, v135);
  return sub_237E2209C(v134, &qword_25689A428);
}

uint64_t sub_237E6BD00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  unsigned int *v57;
  BOOL v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  uint64_t KeyPath;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t *v77;
  char *v78;
  uint64_t v79;
  int v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  char v114;
  id v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  char v127;
  id v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  char v133;
  char *v134;
  char *v135;
  uint64_t v136;
  int v137;
  int v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  _QWORD v161[2];
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  char *v173;
  char *v174;
  char *v175;
  char *v176;
  char *v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;

  v202 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A450);
  MEMORY[0x24BDAC7A8](v3);
  v186 = (char *)v161 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v196 = sub_237EE24F0();
  MEMORY[0x24BDAC7A8](v196);
  v177 = (char *)v161 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898010);
  MEMORY[0x24BDAC7A8](v179);
  v182 = (char *)v161 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v189 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898000);
  v201 = *(_QWORD *)(v189 - 8);
  MEMORY[0x24BDAC7A8](v189);
  v181 = (char *)v161 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v180 = (uint64_t)v161 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A458);
  MEMORY[0x24BDAC7A8](v10);
  v187 = (uint64_t)v161 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v188 = (uint64_t)v161 - v13;
  v197 = sub_237EE2238();
  v195 = *(_QWORD *)(v197 - 8);
  MEMORY[0x24BDAC7A8](v197);
  v194 = (char *)v161 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_237EE2220();
  MEMORY[0x24BDAC7A8](v15);
  v191 = (char *)v161 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_237EE2268();
  MEMORY[0x24BDAC7A8](v17);
  v190 = (char *)v161 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_237EE2298();
  v192 = *(_QWORD *)(v19 - 8);
  v193 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v178 = (char *)v161 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v174 = (char *)v161 - v22;
  v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898988);
  MEMORY[0x24BDAC7A8](v164);
  v169 = (_QWORD *)((char *)v161 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v168 = sub_237EE27A8();
  v167 = *(_QWORD *)(v168 - 8);
  MEMORY[0x24BDAC7A8](v168);
  v166 = (char *)v161 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_237EE26C4();
  v198 = *(_QWORD *)(v25 - 8);
  v199 = v25;
  MEMORY[0x24BDAC7A8](v25);
  v200 = (char *)v161 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A2B0);
  MEMORY[0x24BDAC7A8](v163);
  v165 = (_QWORD *)((char *)v161 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A460);
  MEMORY[0x24BDAC7A8](v28);
  v183 = (uint64_t)v161 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A468);
  MEMORY[0x24BDAC7A8](v170);
  v173 = (char *)v161 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v185 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A470);
  v184 = *(_QWORD *)(v185 - 8);
  MEMORY[0x24BDAC7A8](v185);
  v172 = (char *)v161 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v32);
  v171 = (uint64_t)v161 - v33;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A478);
  MEMORY[0x24BDAC7A8](v34);
  v36 = (char *)v161 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v37);
  v39 = (char *)v161 - v38;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899518);
  MEMORY[0x24BDAC7A8](v40);
  v42 = (char *)v161 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for WorldViewModel.Pin(0);
  v44 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v46 = (char *)v161 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v203 = a1;
  v47 = *(_BYTE *)(a1 + 8);
  v48 = swift_retain();
  v49 = sub_237EC3CFC(v48, v47);
  swift_release();
  swift_getKeyPath();
  v206 = v49;
  v50 = sub_237E20E98(&qword_2568984E8, type metadata accessor for WorldViewModel, (uint64_t)&unk_237EE6D58);
  sub_237EE1F20();
  swift_release();
  v51 = v49 + OBJC_IVAR____TtC11ClockPoster14WorldViewModel__highlighted;
  swift_beginAccess();
  v52 = v51;
  v53 = v43;
  sub_237E22004(v52, (uint64_t)v42, &qword_256899518);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43) == 1)
  {
    sub_237E2209C((uint64_t)v42, &qword_256899518);
    v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A480);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v202, 1, 1, v54);
  }
  v161[1] = v50;
  v175 = v39;
  v176 = v36;
  v56 = v203;
  sub_237E47CE0((uint64_t)v42, (uint64_t)v46, type metadata accessor for WorldViewModel.Pin);
  v57 = (unsigned int *)MEMORY[0x24BDF3C28];
  v58 = v46[16] == 1;
  v162 = v46;
  if (!v58)
  {
    v89 = 1;
    v91 = v200;
    v90 = v201;
    v92 = (uint64_t)v176;
    v93 = (uint64_t)v175;
    v95 = v198;
    v94 = v199;
    v96 = v185;
    v97 = v184;
    goto LABEL_15;
  }
  v161[0] = v43;
  v59 = sub_237EE2778();
  v60 = objc_msgSend((id)objc_opt_self(), sel_systemOrangeColor);
  v61 = MEMORY[0x23B825DCC](v60);
  v62 = *v57;
  v63 = v200;
  (*(void (**)(char *, uint64_t, uint64_t))(v198 + 104))(v200, v62, v199);
  v64 = MEMORY[0x23B825DC0](v63, 0.6, 0.0, 0.0, 1.0);
  v65 = *(_BYTE *)(v56 + 8);
  v66 = swift_retain();
  v67 = sub_237EC3CFC(v66, v65);
  swift_release();
  swift_getKeyPath();
  v204 = v67;
  sub_237EE1F20();
  swift_release();
  LODWORD(v63) = *(unsigned __int8 *)(v67 + 176);
  swift_release();
  if ((_DWORD)v63)
    v68 = v64;
  else
    v68 = v61;
  swift_retain();
  swift_release();
  swift_release();
  v69 = objc_msgSend((id)objc_opt_self(), (SEL)0x1F383D934, 26.0, *MEMORY[0x24BEBB610]);
  v70 = sub_237EE2574();
  KeyPath = swift_getKeyPath();
  v72 = v167;
  v73 = v166;
  v74 = v168;
  (*(void (**)(char *, _QWORD, uint64_t))(v167 + 104))(v166, *MEMORY[0x24BDF40B0], v168);
  v75 = swift_getKeyPath();
  v76 = v169;
  (*(void (**)(char *, char *, uint64_t))(v72 + 16))((char *)v169 + *(int *)(v164 + 28), v73, v74);
  *v76 = v75;
  v77 = v165;
  sub_237E22004((uint64_t)v76, (uint64_t)v165 + *(int *)(v163 + 36), &qword_256898988);
  *v77 = v59;
  v77[1] = v68;
  v77[2] = KeyPath;
  v77[3] = v70;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_237E2209C((uint64_t)v76, &qword_256898988);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v73, v74);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_237E22004((uint64_t)v77, v183, &qword_25689A2B0);
  sub_237E2209C((uint64_t)v77, &qword_25689A2B0);
  sub_237EE225C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898DF8);
  sub_237EE2244();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_237EE55E0;
  sub_237EE2214();
  sub_237EE2250();
  v78 = v174;
  sub_237EE2274();
  type metadata accessor for Dashboard(0);
  v79 = sub_237EE2934();
  v80 = sub_237EE2280();
  v81 = sub_237EE228C();
  if (v80)
  {
    v83 = v195;
    v82 = v196;
    v85 = v193;
    v84 = v194;
    v86 = v192;
    v87 = (uint64_t)v173;
    v88 = v170;
    if ((v81 & ~v80) == 0)
      goto LABEL_14;
  }
  else
  {
    v83 = v195;
    v82 = v196;
    v85 = v193;
    v84 = v194;
    v86 = v192;
    v87 = (uint64_t)v173;
    v88 = v170;
    if (!v81)
    {
      v80 = 0;
      goto LABEL_14;
    }
  }
  v80 |= v81;
LABEL_14:
  v98 = v87 + *(int *)(v88 + 36);
  (*(void (**)(uint64_t, char *, uint64_t))(v86 + 16))(v98, v78, v85);
  *(_QWORD *)(v98 + *(int *)(v82 + 20)) = v79;
  *(_DWORD *)(v98 + *(int *)(v82 + 24)) = v80;
  v99 = v183;
  sub_237E22004(v183, v87, &qword_25689A460);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v78, v85);
  sub_237E2209C(v99, &qword_25689A460);
  v100 = swift_getKeyPath();
  sub_237EE222C();
  v101 = v185;
  v102 = (uint64_t)v172;
  v103 = (uint64_t *)&v172[*(int *)(v185 + 36)];
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898030);
  v105 = v197;
  (*(void (**)(char *, char *, uint64_t))(v83 + 16))((char *)v103 + *(int *)(v104 + 28), v84, v197);
  *v103 = v100;
  sub_237E22004(v87, v102, &qword_25689A468);
  (*(void (**)(char *, uint64_t))(v83 + 8))(v84, v105);
  sub_237E2209C(v87, &qword_25689A468);
  v106 = v171;
  sub_237E21FC0(v102, v171, &qword_25689A470);
  v93 = (uint64_t)v175;
  sub_237E21FC0(v106, (uint64_t)v175, &qword_25689A470);
  v96 = v101;
  v89 = 0;
  v91 = v200;
  v90 = v201;
  v92 = (uint64_t)v176;
  v46 = v162;
  v95 = v198;
  v94 = v199;
  v97 = v184;
  v53 = v161[0];
LABEL_15:
  v107 = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v97 + 56))(v93, v89, 1, v96);
  v108 = &v46[*(int *)(v53 + 40)];
  v109 = *((_QWORD *)v108 + 1);
  if (v109)
  {
    v204 = *(_QWORD *)v108;
    v205 = v109;
    sub_237E33174();
    swift_bridgeObjectRetain();
    v110 = sub_237EE25F8();
    v112 = v111;
    v114 = v113 & 1;
    v115 = objc_msgSend((id)objc_opt_self(), sel_systemOrangeColor);
    v116 = MEMORY[0x23B825DCC](v115);
    (*(void (**)(char *, _QWORD, uint64_t))(v95 + 104))(v91, *MEMORY[0x24BDF3C28], v94);
    v117 = MEMORY[0x23B825DC0](v91, 0.8, 0.0, 0.0, 1.0);
    v118 = *(_BYTE *)(v203 + 8);
    v119 = swift_retain();
    v120 = sub_237EC3CFC(v119, v118);
    swift_release();
    swift_getKeyPath();
    v204 = v120;
    sub_237EE1F20();
    swift_release();
    v121 = *(unsigned __int8 *)(v120 + 176);
    swift_release();
    if (v121)
      v122 = v117;
    else
      v122 = v116;
    swift_retain();
    swift_release();
    swift_release();
    v204 = v122;
    v123 = sub_237EE25A4();
    v125 = v124;
    v127 = v126 & 1;
    sub_237E21F3C(v110, v112, v114);
    swift_release();
    swift_bridgeObjectRelease();
    v128 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_weight_, 26.0, *MEMORY[0x24BEBB610]);
    sub_237EE2574();
    v129 = sub_237EE25BC();
    v131 = v130;
    v133 = v132;
    v200 = v134;
    swift_release();
    sub_237E21F3C(v123, v125, v127);
    swift_bridgeObjectRelease();
    sub_237EE225C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256898DF8);
    sub_237EE2244();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_237EE55E0;
    sub_237EE21FC();
    sub_237EE2250();
    v135 = v178;
    sub_237EE2274();
    type metadata accessor for Dashboard(0);
    v136 = sub_237EE2934();
    v137 = sub_237EE2280();
    v138 = sub_237EE228C();
    if (v137)
    {
      v139 = (uint64_t)v186;
      v140 = (uint64_t)v177;
      if ((v138 & ~v137) == 0)
        goto LABEL_26;
    }
    else
    {
      v139 = (uint64_t)v186;
      v140 = (uint64_t)v177;
      if (!v138)
      {
        v137 = 0;
        goto LABEL_26;
      }
    }
    v137 |= v138;
LABEL_26:
    v145 = v192;
    v144 = v193;
    (*(void (**)(uint64_t, char *, uint64_t))(v192 + 16))(v140, v135, v193);
    v146 = v196;
    *(_QWORD *)(v140 + *(int *)(v196 + 20)) = v136;
    *(_DWORD *)(v140 + *(int *)(v146 + 24)) = v137;
    v147 = (uint64_t)v182;
    sub_237E21EBC(v140, (uint64_t)&v182[*(int *)(v179 + 36)], (uint64_t (*)(_QWORD))MEMORY[0x24BDF0B50]);
    *(_QWORD *)v147 = v129;
    *(_QWORD *)(v147 + 8) = v131;
    v148 = v133 & 1;
    *(_BYTE *)(v147 + 16) = v148;
    *(_QWORD *)(v147 + 24) = v200;
    sub_237E21EAC(v129, v131, v148);
    swift_bridgeObjectRetain();
    sub_237E21F00(v140, (uint64_t (*)(_QWORD))MEMORY[0x24BDF0B50]);
    (*(void (**)(char *, uint64_t))(v145 + 8))(v135, v144);
    sub_237E21F3C(v129, v131, v148);
    swift_bridgeObjectRelease();
    v149 = swift_getKeyPath();
    v150 = v194;
    sub_237EE222C();
    v143 = v189;
    v151 = (uint64_t)v181;
    v152 = (uint64_t *)&v181[*(int *)(v189 + 36)];
    v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898030);
    v154 = v195;
    v155 = v197;
    (*(void (**)(char *, char *, uint64_t))(v195 + 16))((char *)v152 + *(int *)(v153 + 28), v150, v197);
    *v152 = v149;
    sub_237E22004(v147, v151, &qword_256898010);
    (*(void (**)(char *, uint64_t))(v154 + 8))(v150, v155);
    sub_237E2209C(v147, &qword_256898010);
    v156 = v180;
    sub_237E21FC0(v151, v180, &qword_256898000);
    v157 = v156;
    v142 = v188;
    sub_237E21FC0(v157, v188, &qword_256898000);
    v107 = 0;
    v90 = v201;
    v141 = v202;
    v92 = (uint64_t)v176;
    v93 = (uint64_t)v175;
    v46 = v162;
    goto LABEL_27;
  }
  v141 = v202;
  v139 = (uint64_t)v186;
  v142 = v188;
  v143 = v189;
LABEL_27:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v90 + 56))(v142, v107, 1, v143);
  sub_237E22004(v93, v92, &qword_25689A478);
  v158 = v187;
  sub_237E22004(v142, v187, &qword_25689A458);
  sub_237E22004(v92, v139, &qword_25689A478);
  v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A488);
  sub_237E22004(v158, v139 + *(int *)(v159 + 48), &qword_25689A458);
  sub_237E2209C(v142, &qword_25689A458);
  sub_237E2209C(v93, &qword_25689A478);
  sub_237E21F00((uint64_t)v46, type metadata accessor for WorldViewModel.Pin);
  sub_237E2209C(v158, &qword_25689A458);
  sub_237E2209C(v92, &qword_25689A478);
  v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A480);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v160 - 8) + 56))(v139, 0, 1, v160);
  return sub_237E21FC0(v139, v141, &qword_25689A450);
}

uint64_t sub_237E6CF78@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_237EE22B0();
  *a1 = v3;
  return result;
}

uint64_t sub_237E6CFA0()
{
  return sub_237EE22BC();
}

unint64_t sub_237E6CFC4()
{
  unint64_t result;

  result = qword_25689A1D0;
  if (!qword_25689A1D0)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE9968, &type metadata for Map);
    atomic_store(result, (unint64_t *)&qword_25689A1D0);
  }
  return result;
}

uint64_t sub_237E6D008()
{
  return sub_237EE22E0();
}

uint64_t sub_237E6D028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_237E6D104(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x24BDED130], MEMORY[0x24BDEE080]);
}

uint64_t sub_237E6D050@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WorldClockFace(0) - 8) + 80);
  return sub_237E65AC4(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_237E6D09C()
{
  uint64_t v0;

  return sub_237E406D8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_237E6D0B4(uint64_t result)
{
  *(_BYTE *)(result + 128) = 1;
  return result;
}

uint64_t sub_237E6D0C0(uint64_t result)
{
  *(_BYTE *)(result + 128) = 0;
  return result;
}

uint64_t sub_237E6D0D0()
{
  return sub_237EE22A4();
}

uint64_t sub_237E6D0F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_237E6D104(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x24BDF40C0], MEMORY[0x24BDEDE98]);
}

uint64_t sub_237E6D104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t (*a6)(char *))
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  a5(0);
  MEMORY[0x24BDAC7A8]();
  v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_237E6D180@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_237EE2328();
  *a1 = result;
  return result;
}

uint64_t sub_237E6D1A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_237EE2328();
  *a1 = result;
  return result;
}

uint64_t sub_237E6D1D0()
{
  swift_retain();
  return sub_237EE2334();
}

uint64_t sub_237E6D1F8()
{
  swift_retain();
  return sub_237EE2334();
}

uint64_t sub_237E6D220()
{
  return sub_237EE22A4();
}

uint64_t sub_237E6D240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_237E6D104(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x24BDF40C0], MEMORY[0x24BDEDE98]);
}

uint64_t sub_237E6D26C()
{
  uint64_t v0;

  return sub_237E3E490(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t objectdestroyTm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = type metadata accessor for WorldClockFace(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  v3 = v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898698);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_237EE21A8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_237E6D338()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WorldClockFace(0) - 8) + 80);
  return sub_237E651C0(v0 + ((v1 + 16) & ~v1));
}

uint64_t type metadata accessor for Dashboard(uint64_t a1)
{
  return sub_237E42BC0(a1, qword_25689A350);
}

_QWORD *sub_237E6D388(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  char v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *((_BYTE *)a2 + 8);
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (_QWORD *)(a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256898698);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_237EE21A8();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    *(_QWORD *)((char *)v4 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  return v4;
}

uint64_t sub_237E6D480(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898698);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_237EE21A8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_237E6D4F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898698);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_237EE21A8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_237E6D5C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (_QWORD *)(a2 + v7);
    sub_237E2209C(a1 + v7, &qword_256898698);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256898698);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_237EE21A8();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_237E6D6B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(int *)(a3 + 20);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898698);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_237EE21A8();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_237E6D780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v6;
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 20);
    v8 = (void *)(a1 + v7);
    v9 = (const void *)(a2 + v7);
    sub_237E2209C(a1 + v7, &qword_256898698);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898698);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_237EE21A8();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_237E6D86C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A0D0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_237E6D8F4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 8) = -(char)a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689A0D0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_237E6D978()
{
  unint64_t v0;

  sub_237E64404();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_237E6D9F8(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t destroy for Map(uint64_t a1)
{
  sub_237E6DA30(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  return swift_release();
}

uint64_t sub_237E6DA30(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_release();
  return result;
}

uint64_t initializeWithCopy for Map(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  char v6;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_237E6D9F8(*(_QWORD *)a2, v5);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  v6 = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v6;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Map(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;

  v4 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a2 + 8);
  sub_237E6D9F8(*(_QWORD *)a2, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_237E6DA30(v6, v7);
  v8 = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for Map(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;

  v4 = *a2;
  v5 = *((_BYTE *)a2 + 8);
  v6 = *(_QWORD *)a1;
  v7 = *(_BYTE *)(a1 + 8);
  *(_QWORD *)a1 = v4;
  *(_BYTE *)(a1 + 8) = v5;
  sub_237E6DA30(v6, v7);
  v8 = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_BYTE *)(a1 + 24) = v8;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Map(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Map(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for Map()
{
  return &type metadata for Map;
}

unint64_t sub_237E6DC08()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25689A390;
  if (!qword_25689A390)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25689A1A8);
    v2[0] = sub_237E22690(&qword_25689A398, &qword_25689A198, MEMORY[0x24BDF4750]);
    v2[1] = MEMORY[0x24BDF1050];
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25689A390);
  }
  return result;
}

uint64_t sub_237E6DC8C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_237E6DC9C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_237E6DCAC()
{
  uint64_t v0;

  sub_237E6DA30(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_237E6DCDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_237E68264(*(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40), a1);
}

double sub_237E6DD1C(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

unint64_t sub_237E6DD3C()
{
  unint64_t result;

  result = qword_25689A3E8;
  if (!qword_25689A3E8)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE9AC0, &type metadata for PinCollection);
    atomic_store(result, (unint64_t *)&qword_25689A3E8);
  }
  return result;
}

uint64_t sub_237E6DD80(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11)
{
  if (a6)
  {
    sub_237E6DE14(result, a2, a3, a4, a5);
    swift_retain();
    sub_237E6DE14(a7, a8, a9, a10, a11);
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_237E6DE14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 - 2 <= 3)
    return swift_retain();
  return result;
}

_QWORD *sub_237E6DE2C(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21]);
  return a1;
}

uint64_t sub_237E6DE90(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unsigned __int8 a11)
{
  if (a6)
  {
    sub_237E6DF24(result, a2, a3, a4, a5);
    swift_release();
    sub_237E6DF24(a7, a8, a9, a10, a11);
    swift_bridgeObjectRelease();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_237E6DF24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a5 - 2 <= 3)
    return swift_release();
  return result;
}

uint64_t sub_237E6DF3C(uint64_t a1)
{
  sub_237E6DE14(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_237E6DF98(uint64_t a1)
{
  sub_237E6DF24(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_237E6DFFC(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = MEMORY[0x24BDEC438];
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for PinCollection()
{
  return &type metadata for PinCollection;
}

uint64_t sub_237E6E080()
{
  return sub_237E22690(&qword_25689A490, &qword_25689A498, MEMORY[0x24BDEC6F8]);
}

uint64_t sub_237E6E0AC()
{
  return sub_237E6DFFC(&qword_25689A4A0, &qword_25689A408, (uint64_t (*)(void))sub_237E6E0D8);
}

unint64_t sub_237E6E0D8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25689A4A8;
  if (!qword_25689A4A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25689A400);
    v2[0] = sub_237E22690(&qword_25689A4B0, &qword_25689A3F8, MEMORY[0x24BDF4700]);
    v2[1] = sub_237E22690(&qword_25689A4B8, &qword_25689A218, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25689A4A8);
  }
  return result;
}

uint64_t sub_237E6E174()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_237E6E18C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_237E6E1B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_237E69B40(a1, a2, *(double *)(v2 + 32), *(double *)(v2 + 40));
}

unint64_t sub_237E6E1C8()
{
  unint64_t result;

  result = qword_25689A4E8;
  if (!qword_25689A4E8)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE9B3C, &type metadata for Pin);
    atomic_store(result, (unint64_t *)&qword_25689A4E8);
  }
  return result;
}

uint64_t sub_237E6E210(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Pin(uint64_t a1, uint64_t a2)
{
  char v4;

  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  return a1;
}

uint64_t __swift_memcpy10_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for Pin(uint64_t a1, uint64_t a2)
{
  char v4;

  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  swift_release();
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  return a1;
}

uint64_t getEnumTagSinglePayload for Pin(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 10))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Pin(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 10) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 10) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for Pin()
{
  return &type metadata for Pin;
}

unint64_t sub_237E6E398()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25689A4F8;
  if (!qword_25689A4F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256898A80);
    v2[0] = sub_237E22690(&qword_25689A500, &qword_256898A78, MEMORY[0x24BDF4750]);
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25689A4F8);
  }
  return result;
}

uint64_t sub_237E6E41C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_237E6E42C()
{
  unint64_t result;

  result = qword_25689A508;
  if (!qword_25689A508)
  {
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDF3E58], MEMORY[0x24BDF3E48]);
    atomic_store(result, (unint64_t *)&qword_25689A508);
  }
  return result;
}

uint64_t sub_237E6E470(uint64_t a1)
{
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_237E6E4B8(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

unint64_t sub_237E6E504()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25689A510;
  if (!qword_25689A510)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25689A518);
    v2[0] = sub_237E22690(&qword_25689A520, &qword_25689A528, MEMORY[0x24BDF4750]);
    v2[1] = sub_237E22690(&qword_25689A530, &qword_25689A538, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25689A510);
  }
  return result;
}

id sub_237E6E5A0()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.658823529, 0.658823529, 0.658823529, 1.0);
  qword_25689DF48 = (uint64_t)result;
  return result;
}

id sub_237E6E5E4()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.419607843, 0.419607843, 0.419607843, 1.0);
  qword_25689DF50 = (uint64_t)result;
  return result;
}

id sub_237E6E628()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.176470588, 0.176470588, 0.176470588, 1.0);
  qword_25689DF58 = (uint64_t)result;
  return result;
}

void sub_237E6E66C()
{
  qword_25689DF60 = 0x4049800000000000;
}

id sub_237E6E680(void *a1)
{
  _BYTE *v1;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  objc_super v10;

  v1[OBJC_IVAR____TtC11ClockPoster17ClockFaceHostView_wasUnsupportedPortraitInterface] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC11ClockPoster17ClockFaceHostView_hostedClockFace] = a1;
  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for ClockFaceHostView();
  v3 = a1;
  v4 = objc_msgSendSuper2(&v10, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0, v10.receiver, v10.super_class);
  v5 = (void *)objc_opt_self();
  v6 = v4;
  v7 = objc_msgSend(v5, sel_blackColor);
  objc_msgSend(v6, sel_setBackgroundColor_, v7);

  v8 = v6;
  objc_msgSend(v8, sel_setClipsToBounds_, 1);

  return v8;
}

id sub_237E6E89C()
{
  char *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  objc_class *v18;
  void *v19;
  id v20;
  double v21;
  double v22;
  uint64_t v23;
  NSObject *v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  double Height;
  id v29;
  id v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  NSObject *v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v52;
  NSObject *v53;
  os_log_type_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  CGFloat v62;
  CGFloat Width;
  objc_super v64;
  CGRect v65;
  CGRect v66;
  CGRect v67;
  CGRect v68;
  CGRect v69;
  CGRect v70;
  CGRect v71;
  CGRect v72;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6548);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v59 = (uint64_t)&v56 - v6;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v56 - v8;
  v10 = sub_237EE1FB0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v61 = (uint64_t)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v60 = (uint64_t)&v56 - v14;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v56 - v16;
  v18 = (objc_class *)type metadata accessor for ClockFaceHostView();
  v64.receiver = v0;
  v64.super_class = v18;
  objc_msgSendSuper2(&v64, sel_layoutSubviews);
  v19 = *(void **)&v0[OBJC_IVAR____TtC11ClockPoster17ClockFaceHostView_hostedClockFace];
  v20 = objc_msgSend(v19, sel_superview);

  if (!v20)
  {
    objc_msgSend(v0, sel_frame);
    if (v21 <= 0.0 || (objc_msgSend(v0, sel_frame), v22 <= 0.0))
    {
      if (qword_2542C6458 != -1)
        swift_once();
      v23 = qword_2542C64F8 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_rendering_private;
      swift_beginAccess();
      sub_237E2CAA0(v23, (uint64_t)v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
      {
        sub_237E6072C((uint64_t)v17);
        sub_237E4B270((uint64_t)v9);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v17, v9, v10);
      }
      v24 = v0;
      v25 = sub_237EE1F98();
      v26 = sub_237EE2D90();
      if (os_log_type_enabled(v25, v26))
      {
        v27 = swift_slowAlloc();
        *(_DWORD *)v27 = 134349312;
        v57 = v10;
        -[NSObject frame](v24, sel_frame, v27 + 4);
        Width = CGRectGetWidth(v65);
        v58 = v11;
        sub_237EE2EE0();
        *(_WORD *)(v27 + 12) = 2050;
        -[NSObject frame](v24, sel_frame, v27 + 14);
        Width = CGRectGetHeight(v66);
        v10 = v57;
        v11 = v58;
        sub_237EE2EE0();

        _os_log_impl(&dword_237E17000, v25, v26, "Frame is invalid at layoutSubviews; unable add ClockFace. Frame: %{public}f x %{public}f.",
          (uint8_t *)v27,
          0x16u);
        MEMORY[0x23B8272A8](v27, -1, -1);
      }
      else
      {

        v25 = v24;
      }

      (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
    }
    else
    {
      objc_msgSend(v0, sel_addSubview_, v19);
    }
  }
  objc_msgSend(v19, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v1, sel_frame);
  Height = CGRectGetHeight(v67);
  objc_msgSend(v1, sel_frame);
  if (CGRectGetWidth(v68) >= Height
    || (v29 = objc_msgSend((id)objc_opt_self(), sel_currentDevice),
        v30 = objc_msgSend(v29, sel_userInterfaceIdiom),
        v29,
        v30 == (id)1))
  {
    objc_msgSend(v1, sel_setHidden_, 0);
    if (*((_BYTE *)v1 + OBJC_IVAR____TtC11ClockPoster17ClockFaceHostView_wasUnsupportedPortraitInterface) == 1)
    {
      *((_BYTE *)v1 + OBJC_IVAR____TtC11ClockPoster17ClockFaceHostView_wasUnsupportedPortraitInterface) = 0;
      if (qword_2542C6458 != -1)
        swift_once();
      v31 = qword_2542C64F8 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_rendering_private;
      swift_beginAccess();
      sub_237E2CAA0(v31, (uint64_t)v4);
      v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v4, 1, v10);
      v58 = v11;
      v33 = v61;
      if (v32 == 1)
      {
        sub_237E6072C(v61);
        sub_237E4B270((uint64_t)v4);
      }
      else
      {
        (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v61, v4, v10);
      }
      v46 = v1;
      v47 = sub_237EE1F98();
      v48 = sub_237EE2D90();
      if (os_log_type_enabled(v47, v48))
      {
        v49 = swift_slowAlloc();
        *(_DWORD *)v49 = 134349312;
        objc_msgSend(v46, (SEL)&stru_2509CA538.type);
        v62 = CGRectGetWidth(v69);
        sub_237EE2EE0();
        *(_WORD *)(v49 + 12) = 2050;
        objc_msgSend(v46, (SEL)&stru_2509CA538.type);
        v62 = CGRectGetHeight(v70);
        sub_237EE2EE0();

        _os_log_impl(&dword_237E17000, v47, v48, "Recovering from last layout pass where frame was an unsupported portrait size. Frame: (%{public}f, %{public}f).", (uint8_t *)v49, 0x16u);
        v50 = v49;
        v33 = v61;
        MEMORY[0x23B8272A8](v50, -1, -1);
      }
      else
      {

        v47 = v46;
      }

      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v33, v10);
    }
    objc_msgSend(v1, sel_bounds);
    return objc_msgSend(v19, sel_setFrame_);
  }
  else
  {
    objc_msgSend(v1, sel_setHidden_, 1);
    objc_msgSend(v1, sel_frame);
    v35 = v34;
    objc_msgSend(v1, sel_frame);
    v37 = v36;
    objc_msgSend(v1, sel_frame);
    v39 = v38;
    objc_msgSend(v1, sel_frame);
    objc_msgSend(v19, sel_setFrame_, v35, v37, v39, v40);
    *((_BYTE *)v1 + OBJC_IVAR____TtC11ClockPoster17ClockFaceHostView_wasUnsupportedPortraitInterface) = 1;
    if (qword_2542C6458 != -1)
      swift_once();
    v41 = qword_2542C64F8 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_rendering_private;
    swift_beginAccess();
    v42 = v41;
    v43 = v59;
    sub_237E2CAA0(v42, v59);
    v44 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v43, 1, v10);
    v45 = v60;
    if (v44 == 1)
    {
      sub_237E6072C(v60);
      sub_237E4B270(v43);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v60, v43, v10);
    }
    v52 = v1;
    v53 = sub_237EE1F98();
    v54 = sub_237EE2D90();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = swift_slowAlloc();
      *(_DWORD *)v55 = 134349312;
      objc_msgSend(v52, (SEL)&stru_2509CA538.type);
      v62 = CGRectGetWidth(v71);
      sub_237EE2EE0();
      *(_WORD *)(v55 + 12) = 2050;
      objc_msgSend(v52, (SEL)&stru_2509CA538.type);
      v62 = CGRectGetHeight(v72);
      sub_237EE2EE0();

      _os_log_impl(&dword_237E17000, v53, v54, "Frame is portrait, unsupported on iOS. Frame: (%{public}f, %{public}f). This is likely on the first layout pass of an Ambient extension coming up over a portrait SpringBoard interface.", (uint8_t *)v55, 0x16u);
      MEMORY[0x23B8272A8](v55, -1, -1);
    }
    else
    {

      v53 = v52;
    }

    return (id)(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v45, v10);
  }
}

id sub_237E6F254()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClockFaceHostView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ClockFaceHostView()
{
  return objc_opt_self();
}

_QWORD *sub_237E6F2B4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  __int128 v11;
  unint64_t v12;
  unint64_t v20;
  float64x2_t v21;
  unint64_t v22;
  unint64_t v23;
  float64x2_t *v24;
  float64x2_t v25;
  float64x2_t v26;
  unint64_t v27;
  uint64_t v28;
  double v29;
  unint64_t v30;
  _QWORD *v31;
  _QWORD *v33;
  double v34;
  float64x2_t v35;
  float64x2_t v36;
  float64x2_t v37;
  __int128 v38;
  float64x2_t v39;
  float64x2_t v40;
  float64x2_t v41;
  float64x2_t v42;
  float64x2_t v43;
  double v44;
  __int128 v45;

  v4 = a1;
  v5 = *(_QWORD *)(a1 + 16);
  if (v5 < 4)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256899E48);
    v7 = swift_allocObject();
    v8 = (unint64_t)&unk_237EE5000;
    _Q0 = xmmword_237EE55E0;
    v11 = *(_OWORD *)(v4 + 32);
    v10 = v4 + 32;
    *(_OWORD *)(v7 + 16) = xmmword_237EE55E0;
    *(_OWORD *)(v7 + 32) = v11;
    if (a2 < 1)
    {
LABEL_21:
      __break(1u);
LABEL_22:
      v45 = _Q0;
      v33 = sub_237E61DE8((_QWORD *)(v8 > 1), v10, 1, v2);
      _Q0 = v45;
      v2 = v33;
    }
    else
    {
      v2 = (_QWORD *)v7;
      v12 = v5 - 2;
      v8 = 1;
      __asm
      {
        FMOV            V1.2D, #-5.0
        FMOV            V0.2D, #4.0
      }
      v36 = _Q0;
      v37 = _Q1;
      __asm { FMOV            V0.2D, #3.0 }
      v35 = _Q0;
      __asm { FMOV            V0.2D, #0.5 }
      v39 = (float64x2_t)_Q0;
      do
      {
        if (v8 == v12)
        {
          __break(1u);
          goto LABEL_21;
        }
        v20 = v8 + 1;
        v21 = *(float64x2_t *)(v10 + 16 * (v8 + 1));
        v38 = (__int128)v21;
        if (a2 == 1)
        {
          v22 = v2[2];
        }
        else
        {
          v24 = (float64x2_t *)(v10 + 16 * v8);
          v25 = v24[-1];
          v26 = v24[2];
          v43 = vaddq_f64(*v24, *v24);
          v41 = vsubq_f64(vaddq_f64(vaddq_f64(vaddq_f64(v25, v25), vmulq_f64(*v24, v37)), vmulq_f64(v21, v36)), v26);
          v42 = vsubq_f64(v21, v25);
          v40 = vaddq_f64(vsubq_f64(vsubq_f64(vmulq_f64(*v24, v35), v25), vmulq_f64(v21, v35)), v26);
          v27 = v2[2];
          v28 = 1;
          do
          {
            v44 = 1.0 / (double)a2 * (double)v28;
            v29 = pow(v44, 3.0);
            v30 = v2[3];
            v22 = v27 + 1;
            if (v27 >= v30 >> 1)
            {
              v34 = v29;
              v31 = sub_237E61DE8((_QWORD *)(v30 > 1), v27 + 1, 1, v2);
              v29 = v34;
              v2 = v31;
            }
            ++v28;
            v2[2] = v22;
            *(float64x2_t *)&v2[2 * v27++ + 4] = vmulq_f64(vaddq_f64(vmulq_n_f64(v40, v29), vaddq_f64(vaddq_f64(v43, vmulq_n_f64(v42, v44)), vmulq_n_f64(v41, v44 * v44))), v39);
          }
          while (a2 != v28);
        }
        v23 = v2[3];
        v3 = v22 + 1;
        if (v22 >= v23 >> 1)
          v2 = sub_237E61DE8((_QWORD *)(v23 > 1), v22 + 1, 1, v2);
        v2[2] = v3;
        _Q0 = v38;
        *(_OWORD *)&v2[2 * v22 + 4] = v38;
        v8 = v20;
      }
      while (v20 != v12);
      _Q0 = *(_OWORD *)(v10 + 16 * v5 - 16);
      v8 = v2[3];
      v10 = v22 + 2;
      if (v3 >= v8 >> 1)
        goto LABEL_22;
    }
    v2[2] = v10;
    *(_OWORD *)&v2[2 * v3 + 4] = _Q0;
    return v2;
  }
  return (_QWORD *)v4;
}

uint64_t sub_237E6F54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_237E6F554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_237E6F55C(unsigned int a1, unint64_t a2)
{
  uint64_t result;
  _WORD *v5;
  unint64_t v6;
  int16x8_t v7;
  int16x8_t *v8;
  unint64_t v9;
  unint64_t v10;

  if ((a2 & 0x8000000000000000) != 0)
  {
    result = sub_237EE3090();
    __break(1u);
    return result;
  }
  if (!a2)
    return MEMORY[0x24BEE4AF8];
  result = sub_237EE2C04();
  *(_QWORD *)(result + 16) = a2;
  v5 = (_WORD *)(result + 32);
  if (a2 < 0x10)
  {
    v6 = 0;
LABEL_9:
    v10 = a2 - v6;
    do
    {
      *v5++ = a1;
      --v10;
    }
    while (v10);
    return result;
  }
  v6 = a2 & 0xFFFFFFFFFFFFFFF0;
  v5 += a2 & 0xFFFFFFFFFFFFFFF0;
  v7 = vdupq_n_s16(a1);
  v8 = (int16x8_t *)(result + 48);
  v9 = a2 & 0xFFFFFFFFFFFFFFF0;
  do
  {
    v8[-1] = v7;
    *v8 = v7;
    v8 += 2;
    v9 -= 16;
  }
  while (v9);
  if (v6 != a2)
    goto LABEL_9;
  return result;
}

uint64_t sub_237E6F644(unint64_t a1, double a2, double a3)
{
  return sub_237E6F65C(a1, type metadata accessor for CGPoint, a2, a3);
}

uint64_t sub_237E6F650(unint64_t a1, double a2, double a3)
{
  return sub_237E6F65C(a1, type metadata accessor for CGSize, a2, a3);
}

uint64_t sub_237E6F65C(unint64_t a1, void (*a2)(_QWORD), double a3, double a4)
{
  uint64_t result;
  double *v6;
  unint64_t v7;
  double v8;
  double v9;
  int64x2_t v10;
  int64x2_t v11;
  double *v12;
  unint64_t v13;
  double *v14;
  unint64_t v15;

  if ((a1 & 0x8000000000000000) != 0)
  {
    result = sub_237EE3090();
    __break(1u);
    return result;
  }
  if (!a1)
    return MEMORY[0x24BEE4AF8];
  a2(0);
  result = sub_237EE2C04();
  *(_QWORD *)(result + 16) = a1;
  v6 = (double *)(result + 32);
  if (a1 < 4)
  {
    v7 = 0;
    v8 = a4;
    v9 = a3;
LABEL_9:
    v15 = a1 - v7;
    do
    {
      *v6 = v9;
      v6[1] = v8;
      v6 += 2;
      --v15;
    }
    while (v15);
    return result;
  }
  v7 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  v6 += 2 * (a1 & 0xFFFFFFFFFFFFFFFCLL);
  v9 = a3;
  v10 = vdupq_lane_s64(*(uint64_t *)&a3, 0);
  v8 = a4;
  v11 = vdupq_lane_s64(*(uint64_t *)&a4, 0);
  v12 = (double *)(result + 64);
  v13 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v14 = v12 - 4;
    vst2q_f64(v14, *(float64x2x2_t *)v10.i8);
    vst2q_f64(v12, *(float64x2x2_t *)v10.i8);
    v12 += 8;
    v13 -= 4;
  }
  while (v13);
  if (v7 != a1)
    goto LABEL_9;
  return result;
}

uint64_t sub_237E6F768(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  __int128 *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  _UNKNOWN **v12;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v13 = MEMORY[0x24BEE4AF8];
    sub_237E6274C(0, v1, 0);
    v2 = v13;
    v4 = (__int128 *)(a1 + 32);
    do
    {
      v9 = *v4;
      v13 = v2;
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_237E6274C(v5 > 1, v6 + 1, 1);
        v2 = v13;
      }
      type metadata accessor for CGPoint(0);
      v11 = v7;
      v12 = &off_2509C1580;
      v10 = v9;
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_237E2D1BC(&v10, v2 + 40 * v6 + 32);
      ++v4;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_237E6F858(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  unint64_t v6;
  unint64_t v7;
  id *v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD v12[2];
  uint64_t v13;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_237EE30A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x24BEE4AF8];
  if (!v2)
    return v3;
  v13 = MEMORY[0x24BEE4AF8];
  result = sub_237E627D8(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        MEMORY[0x23B826624](i, a1);
        sub_237E74A2C(0, &qword_25689A618);
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_237E627D8(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v7 = *(_QWORD *)(v3 + 16);
        v6 = *(_QWORD *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_237E627D8(v6 > 1, v7 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v7 + 1;
        sub_237E24AC8(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      v8 = (id *)(a1 + 32);
      sub_237E74A2C(0, &qword_25689A618);
      do
      {
        v9 = *v8;
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_237E627D8(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v11 = *(_QWORD *)(v3 + 16);
        v10 = *(_QWORD *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_237E627D8(v10 > 1, v11 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v11 + 1;
        sub_237E24AC8(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

char *sub_237E6FAB8(double a1, double a2, double a3, double a4)
{
  void *v4;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  double v28;
  double v29;
  id v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  objc_class *v39;
  char *v40;
  char *v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  objc_super v47;

  v44 = type metadata accessor for TextClockDescriptor(0);
  MEMORY[0x24BDAC7A8](v44);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_237EE1EC0();
  v46 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for TimeString(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v45 = (uint64_t)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = v4;
  sub_237EE1EB4();
  *(_QWORD *)&v17[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v17[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_overlap] = 0;
  v17[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_blurColon] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_compositingFilter] = 0;
  v17[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_transformModifier] = 0;
  v18 = OBJC_IVAR____TtC11ClockPoster15RollingTimeView_timeLabel;
  type metadata accessor for RollingTimeLabel();
  v19 = (char *)swift_allocObject();
  v20 = sub_237E3AE08();
  *((_QWORD *)v19 + 3) = 0;
  *((_QWORD *)v19 + 4) = 0;
  *((_QWORD *)v19 + 2) = v20;
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v21(&v19[OBJC_IVAR____TtC11ClockPoster16RollingTimeLabel_timeString], 1, 1, v14);
  *(_QWORD *)&v17[v18] = v19;
  v22 = OBJC_IVAR____TtC11ClockPoster15RollingTimeView_offScreenTimeLabel;
  v23 = (char *)swift_allocObject();
  v24 = sub_237E3AE08();
  *((_QWORD *)v23 + 3) = 0;
  *((_QWORD *)v23 + 4) = 0;
  *((_QWORD *)v23 + 2) = v24;
  v21(&v23[OBJC_IVAR____TtC11ClockPoster16RollingTimeLabel_timeString], 1, 1, v14);
  *(_QWORD *)&v17[v22] = v23;
  v25 = OBJC_IVAR____TtC11ClockPoster15RollingTimeView_maxScale;
  v26 = (void *)objc_opt_self();
  v27 = objc_msgSend(v26, sel_mainScreen);
  objc_msgSend(v27, sel_scale);
  v29 = v28;

  v30 = objc_msgSend(v26, sel_mainScreen);
  objc_msgSend(v30, sel_nativeScale);
  v32 = v31;

  *(double *)&v17[v25] = v29 / v32;
  *(_QWORD *)&v17[OBJC_IVAR____TtC11ClockPoster15RollingTimeView____lazy_storage___redModeColonLayers] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC11ClockPoster15RollingTimeView____lazy_storage___colonBlurViews] = 0;
  v17[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_isAnimating] = 0;
  *(_QWORD *)&v17[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_timeTextListenerTask] = 0;
  if (qword_256897B48 != -1)
    swift_once();
  sub_237EE1EB4();
  v33 = v46;
  v34 = *(uint64_t (**)(char *, char *, uint64_t))(v46 + 16);
  v35 = v34(&v10[*(int *)(v44 + 20)], v13, v11);
  *(_QWORD *)v10 = 0;
  MEMORY[0x24BDAC7A8](v35);
  *(&v43 - 2) = (uint64_t)v10;
  *(&v43 - 1) = v36;
  v37 = v45;
  sub_237E9FC4C((uint64_t (*)(void))sub_237E2062C, (uint64_t)(&v43 - 4), v45);
  sub_237E21F00((uint64_t)v10, type metadata accessor for TextClockDescriptor);
  v38 = *(void (**)(char *, uint64_t))(v33 + 8);
  v38(v13, v11);
  sub_237E20634(v37, (uint64_t)&v17[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_timeString]);

  v39 = (objc_class *)type metadata accessor for RollingTimeView();
  v47.receiver = v17;
  v47.super_class = v39;
  v40 = (char *)objc_msgSendSuper2(&v47, sel_initWithFrame_, a1, a2, a3, a4);
  v34(v13, &v40[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_timeZone], v11);
  v41 = v40;
  sub_237E70DC4();

  v38(v13, v11);
  return v41;
}

BOOL sub_237E6FEDC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void sub_237E6FF18()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  objc_class *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  void *v18;
  char *v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  void *v35;
  id v36;
  void *v37;
  void *v38;
  uint64_t v39;
  objc_super v40;
  CGRect v41;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25689C1A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v39 - v6;
  v8 = (objc_class *)type metadata accessor for RollingTimeView();
  v40.receiver = v0;
  v40.super_class = v8;
  objc_msgSendSuper2(&v40, sel_layoutSubviews);
  v9 = *(_QWORD *)&v0[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_timeLabel];
  v10 = v9 + OBJC_IVAR____TtC11ClockPoster16RollingTimeLabel_timeString;
  swift_beginAccess();
  sub_237E3B5B4(v10, (uint64_t)v7);
  v11 = type metadata accessor for TimeString(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v11);
  sub_237E3B5FC((uint64_t)v7);
  if (v13 == 1)
  {
    v14 = (uint64_t)&v1[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_timeString];
    swift_beginAccess();
    sub_237E21EBC(v14, (uint64_t)v4, type metadata accessor for TimeString);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v4, 0, 1, v11);
    swift_beginAccess();
    sub_237E747B4((uint64_t)v4, v10);
    swift_endAccess();
    sub_237E3B0CC();
    sub_237E3B5FC((uint64_t)v4);
  }
  v15 = *(_QWORD *)(v9 + 16);
  if (!(v15 >> 62))
  {
    v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v16)
      goto LABEL_5;
LABEL_11:
    swift_bridgeObjectRelease();
LABEL_12:
    v19 = v1;
    sub_237E73FEC((uint64_t)v19, v19);
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  v16 = sub_237EE30A8();
  if (!v16)
    goto LABEL_11;
LABEL_5:
  if ((v15 & 0xC000000000000001) != 0)
  {
    v17 = (id)MEMORY[0x23B826624](0, v15);
  }
  else
  {
    if (!*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_38;
    }
    v17 = *(id *)(v15 + 32);
  }
  v18 = v17;
  swift_bridgeObjectRelease();
  v19 = (char *)objc_msgSend(v18, sel_superview);

  if (!v19)
    goto LABEL_12;
LABEL_13:

  if ((v1[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_isAnimating] & 1) != 0)
    return;
  v20 = swift_bridgeObjectRetain();
  sub_237E716B0(v20, 0, 1);
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)&v1[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_offScreenTimeLabel];
  v16 = *(_QWORD *)(v11 + 16);
  swift_bridgeObjectRetain();
  objc_msgSend(v1, sel_bounds);
  *(double *)&v21 = CGRectGetHeight(v41);
  sub_237E716B0(v16, v21, 0);
  swift_bridgeObjectRelease();
  sub_237E71E84();
  v9 = *(_QWORD *)(v9 + 16);
  if (!(v9 >> 62))
  {
    v22 = *(char **)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v22)
      goto LABEL_16;
LABEL_39:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_38:
  swift_bridgeObjectRetain();
  v22 = (char *)sub_237EE30A8();
  if (!v22)
    goto LABEL_39;
LABEL_16:
  v23 = v22 - 1;
  if (__OFSUB__(v22, 1))
  {
    __break(1u);
  }
  else if ((v9 & 0xC000000000000001) == 0)
  {
    if (((unint64_t)v23 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if ((unint64_t)v23 < *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v24 = (char *)*(id *)(v9 + 8 * (_QWORD)v23 + 32);
      goto LABEL_21;
    }
    __break(1u);
    goto LABEL_44;
  }
  v24 = (char *)MEMORY[0x23B826624](v23, v9);
LABEL_21:
  v22 = v24;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(v11 + 16);
  if (!(v16 >> 62))
  {
    v25 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v25)
      goto LABEL_23;
LABEL_45:
    swift_bridgeObjectRelease();

    return;
  }
LABEL_44:
  swift_bridgeObjectRetain();
  v25 = sub_237EE30A8();
  if (!v25)
    goto LABEL_45;
LABEL_23:
  v26 = v25 - 1;
  if (__OFSUB__(v25, 1))
  {
    __break(1u);
    goto LABEL_48;
  }
  if ((v16 & 0xC000000000000001) != 0)
  {
LABEL_48:
    v27 = (id)MEMORY[0x23B826624](v26, v16);
    goto LABEL_28;
  }
  if ((v26 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_50;
  }
  if (v26 >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_50:
    __break(1u);
    return;
  }
  v27 = *(id *)(v16 + 8 * v26 + 32);
LABEL_28:
  v28 = v27;
  swift_bridgeObjectRelease();
  v29 = MEMORY[0x23B827344](&v1[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_delegate]);
  if (v29)
  {
    v30 = v29;
    v31 = OBJC_IVAR____TtC11ClockPoster17PlayClockFaceView_alarmComplicationView;
    v32 = *(void **)(v29 + OBJC_IVAR____TtC11ClockPoster17PlayClockFaceView_alarmComplicationView);
    v33 = v32;
    sub_237EE1738(v32, v22);

    v34 = OBJC_IVAR____TtC11ClockPoster17PlayClockFaceView_onDeckAlarmComplicationView;
    v35 = *(void **)(v30 + OBJC_IVAR____TtC11ClockPoster17PlayClockFaceView_onDeckAlarmComplicationView);
    v36 = v35;
    sub_237EE1738(v35, v28);

    v37 = *(void **)(v30 + v31);
    if (v37)
      objc_msgSend(v37, sel_setAlpha_, 1.0);
    v38 = *(void **)(v30 + v34);
    if (v38)
      objc_msgSend(v38, sel_setAlpha_, 0.0);

    swift_unknownObjectRelease();
  }
  else
  {

  }
}

uint64_t sub_237E70428(uint64_t result)
{
  uint64_t v1;
  double v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  double v8;
  void *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t i;
  id v14;
  void *v15;

  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC11ClockPoster15RollingTimeView_blurColon) == 1)
  {
    if ((result & 1) != 0)
      v2 = 1.0;
    else
      v2 = 0.0;
    v3 = sub_237E705F4();
    v4 = v3;
    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      result = sub_237EE30A8();
      v5 = result;
      if (!result)
        goto LABEL_14;
    }
    else
    {
      v5 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain();
      if (!v5)
        goto LABEL_14;
    }
    if (v5 < 1)
    {
      __break(1u);
      goto LABEL_26;
    }
    v6 = 0;
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x23B826624](v6, v4);
      else
        v7 = *(id *)(v4 + 8 * v6 + 32);
      v9 = v7;
      ++v6;
      *(float *)&v8 = v2;
      objc_msgSend(v7, sel_setOpacity_, v8);

    }
    while (v5 != v6);
LABEL_14:
    swift_bridgeObjectRelease_n();
    v10 = sub_237E70884();
    v11 = v10;
    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      result = sub_237EE30A8();
      v12 = result;
      if (result)
      {
LABEL_16:
        if (v12 >= 1)
        {
          for (i = 0; i != v12; ++i)
          {
            if ((v11 & 0xC000000000000001) != 0)
              v14 = (id)MEMORY[0x23B826624](i, v11);
            else
              v14 = *(id *)(v11 + 8 * i + 32);
            v15 = v14;
            objc_msgSend(v14, sel_setAlpha_, 1.0 - v2);

          }
          return swift_bridgeObjectRelease_n();
        }
LABEL_26:
        __break(1u);
        return result;
      }
    }
    else
    {
      v12 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain();
      if (v12)
        goto LABEL_16;
    }
    return swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_237E705F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OBJC_IVAR____TtC11ClockPoster15RollingTimeView____lazy_storage___redModeColonLayers;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC11ClockPoster15RollingTimeView____lazy_storage___redModeColonLayers))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11ClockPoster15RollingTimeView____lazy_storage___redModeColonLayers);
  }
  else
  {
    v2 = sub_237E70658();
    *(_QWORD *)(v0 + v1) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_237E70658()
{
  char v0;
  double v1;
  double v2;
  char v3;
  id v4;
  uint64_t inited;
  id v6;
  id v7;
  void *v8;
  double v9;
  id v10;
  id v11;
  uint64_t v13;

  sub_237E70C94();
  v0 = 0;
  v13 = MEMORY[0x24BEE4AF8];
  v2 = v1 * 0.5;
  do
  {
    v3 = v0;
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDE5640]), sel_init);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256898750);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_237EE55E0;
    *(_QWORD *)(inited + 32) = 0x7974696361706FLL;
    *(_QWORD *)(inited + 40) = 0xE700000000000000;
    v6 = objc_allocWithZone(MEMORY[0x24BDBCEF8]);
    v7 = v4;
    *(_QWORD *)(inited + 48) = objc_msgSend(v6, sel_init);
    sub_237EAB184(inited);
    __swift_instantiateConcreteTypeFromMangledName(qword_256898758);
    v8 = (void *)sub_237EE29F4();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_setActions_, v8);

    LODWORD(v9) = 0;
    objc_msgSend(v7, sel_setOpacity_, v9);
    v10 = v7;
    objc_msgSend(v10, sel_frame);
    objc_msgSend(v10, sel_setFrame_);

    objc_msgSend(v10, sel_setCornerRadius_, v2);
    v11 = v10;
    MEMORY[0x23B82621C]();
    if (*(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_237EE2BF8();
    sub_237EE2C10();
    sub_237EE2BEC();

    v0 = 1;
  }
  while ((v3 & 1) == 0);
  return v13;
}

uint64_t sub_237E70884()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  uint64_t v28;

  v1 = OBJC_IVAR____TtC11ClockPoster15RollingTimeView____lazy_storage___colonBlurViews;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC11ClockPoster15RollingTimeView____lazy_storage___colonBlurViews))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11ClockPoster15RollingTimeView____lazy_storage___colonBlurViews);
  }
  else
  {
    v3 = v0;
    sub_237E70C94();
    v5 = v4;
    v28 = MEMORY[0x24BEE4AF8];
    v6 = (void *)objc_opt_self();
    if (qword_256897B50 != -1)
      swift_once();
    v7 = (id)qword_25689DFE0;
    v8 = (void *)sub_237EE2A54();
    v9 = objc_msgSend(v6, sel_materialViewWithRecipeNamed_inBundle_options_initialWeighting_scaleAdjustment_, v8, v7, 0, 0, 1.0);

    if (v9)
    {
      v10 = v9;
      objc_msgSend(v10, sel_frame);
      objc_msgSend(v10, sel_setFrame_);

      v11 = objc_msgSend(v10, sel_layer);
      objc_msgSend(v11, sel_setCornerRadius_, v5 * 0.5);

      v12 = (void *)objc_opt_self();
      v13 = v10;
      v14 = objc_msgSend(v12, sel_whiteColor);
      v15 = objc_msgSend(v14, sel_colorWithAlphaComponent_, 0.75);

      objc_msgSend(v13, sel_setBackgroundColor_, v15);
      v16 = v13;
      MEMORY[0x23B82621C]();
      if (*(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_237EE2BF8();
      sub_237EE2C10();
      sub_237EE2BEC();

    }
    v17 = (id)qword_25689DFE0;
    v18 = (void *)sub_237EE2A54();
    v19 = objc_msgSend(v6, sel_materialViewWithRecipeNamed_inBundle_options_initialWeighting_scaleAdjustment_, v18, v17, 0, 0, 1.0);

    if (v19)
    {
      v20 = v19;
      objc_msgSend(v20, sel_frame);
      objc_msgSend(v20, sel_setFrame_);

      v21 = objc_msgSend(v20, sel_layer);
      objc_msgSend(v21, sel_setCornerRadius_, v5 * 0.5);

      v22 = (void *)objc_opt_self();
      v23 = v20;
      v24 = objc_msgSend(v22, sel_whiteColor);
      v25 = objc_msgSend(v24, sel_colorWithAlphaComponent_, 0.75);

      objc_msgSend(v23, sel_setBackgroundColor_, v25);
      v26 = v23;
      MEMORY[0x23B82621C]();
      if (*(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_237EE2BF8();
      sub_237EE2C10();
      sub_237EE2BEC();

    }
    v2 = v28;
    *(_QWORD *)(v3 + v1) = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

void sub_237E70C94()
{
  uint64_t v0;
  const UniChar *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  char *v6;
  const __CTFont *v7;
  _BOOL4 GlyphsForCharacters;
  const __CTFont *v9;
  const CGPath *PathForGlyph;
  const CGPath *v11;

  v1 = (const UniChar *)sub_237E7394C(46, 0xE100000000000000);
  v2 = *((_QWORD *)v1 + 2);
  v3 = sub_237E6F55C(0, v2);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11ClockPoster15RollingTimeView_timeLabel);
  v5 = *(void **)(v4 + 24);
  if (!v5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v6 = (char *)v3;
  v7 = v5;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v6 = sub_237E61A64(0, *((_QWORD *)v6 + 2), 0, v6);
  GlyphsForCharacters = CTFontGetGlyphsForCharacters(v7, v1 + 16, (CGGlyph *)v6 + 16, v2);

  swift_release();
  if (!GlyphsForCharacters)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return;
  }
  v9 = *(const __CTFont **)(v4 + 24);
  if (v9)
  {
    if (*((_QWORD *)v6 + 2))
    {
      PathForGlyph = CTFontCreatePathForGlyph(v9, *((_WORD *)v6 + 16), 0);
      if (PathForGlyph)
      {
        v11 = PathForGlyph;
        CGPathGetBoundingBox(PathForGlyph);
        swift_bridgeObjectRelease();

        return;
      }
      goto LABEL_9;
    }
    __break(1u);
    goto LABEL_11;
  }
LABEL_12:
  __break(1u);
}

uint64_t sub_237E70DC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t, __n128);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v25;
  uint64_t v26;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897E20);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_237EE1EC0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v25 - v11;
  v26 = OBJC_IVAR____TtC11ClockPoster15RollingTimeView_timeTextListenerTask;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC11ClockPoster15RollingTimeView_timeTextListenerTask))
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25689DA00);
    sub_237EE2CAC();
    swift_release();
  }
  v13 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v6 + 16);
  v13(v12, v1 + OBJC_IVAR____TtC11ClockPoster15RollingTimeView_timeZone, v5, v10);
  v14 = sub_237EE2C64();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v4, 1, 1, v14);
  v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  ((void (*)(char *, char *, uint64_t))v13)(v8, v12, v5);
  sub_237EE2C4C();
  swift_retain();
  v16 = sub_237EE2C40();
  v17 = *(unsigned __int8 *)(v6 + 80);
  v25 = v12;
  v18 = (uint64_t)v4;
  v19 = (v17 + 32) & ~v17;
  v20 = (v7 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject();
  v22 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v21 + 16) = v16;
  *(_QWORD *)(v21 + 24) = v22;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v21 + v19, v8, v5);
  *(_QWORD *)(v21 + v20) = v15;
  swift_release();
  v23 = sub_237ECBB58(v18, (uint64_t)&unk_25689A628, v21);
  *(_QWORD *)(v1 + v26) = v23;
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v25, v5);
}

uint64_t sub_237E71010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[11] = a4;
  v5[12] = a5;
  v6 = type metadata accessor for TimeString(0);
  v5[13] = v6;
  v5[14] = *(_QWORD *)(v6 - 8);
  v5[15] = swift_task_alloc();
  v5[16] = swift_task_alloc();
  v5[17] = swift_task_alloc();
  v5[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25689C1A0);
  v5[19] = swift_task_alloc();
  v5[20] = type metadata accessor for TextClockDescriptor(0);
  v5[21] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897E38);
  v5[22] = v7;
  v5[23] = *(_QWORD *)(v7 - 8);
  v5[24] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897E40);
  v5[25] = v8;
  v5[26] = *(_QWORD *)(v8 - 8);
  v5[27] = swift_task_alloc();
  v5[28] = sub_237EE2C4C();
  v5[29] = sub_237EE2C40();
  v5[30] = sub_237EE2C28();
  v5[31] = v9;
  return swift_task_switch();
}

uint64_t sub_237E71170()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  if (qword_256897B48 != -1)
    swift_once();
  v2 = v0[23];
  v1 = v0[24];
  v4 = (double *)v0[21];
  v3 = v0[22];
  v5 = v0[11];
  v6 = qword_25689B990;
  v7 = (char *)v4 + *(int *)(v0[20] + 20);
  v8 = sub_237EE1EC0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v7, v5, v8);
  *v4 = 0.0;
  v9 = swift_task_alloc();
  *(_QWORD *)(v9 + 16) = v6;
  *(_QWORD *)(v9 + 24) = v4;
  sub_237E736C4(v4, (void (*)(uint64_t))sub_237E2088C, v1);
  swift_task_dealloc();
  sub_237E21F00((uint64_t)v4, type metadata accessor for TextClockDescriptor);
  sub_237EE2C88();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  v0[32] = 0;
  v0[33] = sub_237EE2C40();
  v10 = (_QWORD *)swift_task_alloc();
  v0[34] = v10;
  *v10 = v0;
  v10[1] = sub_237E71304;
  return sub_237EE2C94();
}

uint64_t sub_237E71304()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_237E71358()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;

  v1 = v0[19];
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v0[14] + 48))(v1, 1, v0[13]) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(v0[26] + 8))(v0[27], v0[25]);
    swift_release();
LABEL_7:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
  v2 = v0[12] + 16;
  sub_237E20634(v1, v0[18]);
  v3 = MEMORY[0x23B827344](v2);
  if (!v3)
  {
    v12 = v0[26];
    v11 = v0[27];
    v13 = v0[25];
    v14 = v0[18];
    swift_release();
    sub_237E21F00(v14, type metadata accessor for TimeString);
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    goto LABEL_7;
  }
  v4 = (char *)v3;
  v5 = v0[32];
  sub_237EE2CC4();
  if (v5)
  {
    v7 = v0[26];
    v6 = v0[27];
    v8 = v0[25];
    v9 = v0[18];

    swift_release();
    sub_237E21F00(v9, type metadata accessor for TimeString);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
  v16 = v0[17];
  v17 = (_QWORD *)v0[16];
  sub_237E21EBC(v0[18], v16, type metadata accessor for TimeString);
  v18 = &v4[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_timeString];
  swift_beginAccess();
  sub_237E21EBC((uint64_t)v18, (uint64_t)v17, type metadata accessor for TimeString);
  swift_beginAccess();
  sub_237E20434(v16, (uint64_t)v18);
  swift_endAccess();
  v19 = *v17 == *(_QWORD *)v18 && v17[1] == *((_QWORD *)v18 + 1);
  if (!v19 && (sub_237EE31BC() & 1) == 0)
  {
    v20 = v0[15];
    sub_237E21EBC((uint64_t)v18, v20, type metadata accessor for TimeString);
    sub_237E7278C(v20);
    sub_237E21F00(v20, type metadata accessor for TimeString);
  }
  v21 = v0[18];
  v22 = v0[16];
  sub_237E21F00(v0[17], type metadata accessor for TimeString);
  sub_237E21F00(v22, type metadata accessor for TimeString);

  sub_237E21F00(v21, type metadata accessor for TimeString);
  v0[32] = 0;
  v0[33] = sub_237EE2C40();
  v23 = (_QWORD *)swift_task_alloc();
  v0[34] = v23;
  *v23 = v0;
  v23[1] = sub_237E71304;
  return sub_237EE2C94();
}

uint64_t sub_237E716B0(unint64_t a1, uint64_t a2, char a3)
{
  char *v3;
  char *v4;
  unint64_t v5;
  uint64_t v6;
  double v7;
  double x;
  double v9;
  double Height;
  double v11;
  double v12;
  double Width;
  double v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  double v18;
  unint64_t v19;
  id v20;
  void *v21;
  long double v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  id v27;
  void *v28;
  double v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  double v34;
  CGFloat v35;
  double v36;
  double v37;
  double v38;
  double v39;
  uint64_t v40;
  double v41;
  id v42;
  CGFloat v43;
  double v44;
  double v45;
  double v46;
  double v47;
  unint64_t v48;
  uint64_t v49;
  double v51;
  CGFloat b;
  CGFloat ty;
  CGFloat tx;
  CGFloat d;
  CGFloat c;
  CGFloat a;
  CGFloat v58;
  double sx;
  CGAffineTransform v60;
  CGAffineTransform t2;
  CGAffineTransform t1;
  CGRect v63;
  CGRect v64;
  CGRect v65;
  CGRect v66;
  CGRect v67;

  v4 = v3;
  v5 = a1;
  v6 = OBJC_IVAR____TtC11ClockPoster15RollingTimeView_overlap;
  sub_237E71AF4(a1);
  x = v7;
  objc_msgSend(v4, sel_bounds);
  v9 = CGRectGetWidth(v63) / x;
  objc_msgSend(v4, sel_bounds);
  Height = CGRectGetHeight(v64);
  sub_237E71C54(v5);
  v12 = Height / v11;
  if (v12 >= v9)
    v12 = v9;
  if (*(double *)&v4[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_maxScale] < v12)
    v12 = *(double *)&v4[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_maxScale];
  sx = v12;
  objc_msgSend(v4, sel_bounds);
  Width = CGRectGetWidth(v65);
  v14 = *(double *)&v4[v6];
  v49 = sub_237E71D44(v5);
  if (v5 >> 62)
    goto LABEL_18;
  v15 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v15)
    return swift_bridgeObjectRelease();
  while (v15 >= 1)
  {
    v17 = 0;
    v18 = (Width - x * sx) * 0.5;
    v19 = v5;
    v48 = v5 & 0xC000000000000001;
    v47 = sx * v14;
    v5 = 0x3FF0000000000000;
    while (1)
    {
      v20 = v48 ? (id)MEMORY[0x23B826624](v17, v19) : *(id *)(v19 + 8 * v17 + 32);
      v21 = v20;
      objc_msgSend(v20, sel__tightBoundingRectOfFirstLine);
      x = v66.origin.x;
      v51 = CGRectGetWidth(v66);
      objc_msgSend(v21, sel_transform);
      v22 = atan2(t1.b, t1.a);
      CGAffineTransformMakeRotation(&t1, v22);
      c = t1.c;
      a = t1.a;
      tx = t1.tx;
      d = t1.d;
      b = t1.b;
      ty = t1.ty;
      CGAffineTransformMakeScale(&t1, sx, sx);
      Width = t1.a;
      v58 = t1.b;
      v24 = t1.c;
      v23 = t1.d;
      v26 = t1.tx;
      v25 = t1.ty;
      t1.b = 0.0;
      t1.c = 0.0;
      t1.a = 1.0;
      t1.d = 1.0;
      t1.tx = 0.0;
      t1.ty = 0.0;
      objc_msgSend(v21, sel_setTransform_, &t1);
      v27 = v21;
      v28 = v27;
      if ((a3 & 1) != 0)
      {
        objc_msgSend(v27, sel__tightBoundingRectOfFirstLine);
        v43 = v29;
        v44 = v25;
        v45 = v23;
        v46 = v24;
        v31 = v30;
        v33 = v32;
        v35 = v34;
        objc_msgSend(v4, sel_bounds);
        UIRectGetHeight(v36, v37, v38, v39);
        v67.origin.y = v31;
        v67.size.width = v33;
        v24 = v46;
        v67.size.height = v35;
        v67.origin.x = v43;
        v25 = v44;
        CGRectGetHeight(v67);
        v23 = v45;
      }
      objc_msgSend(v28, sel_frame);
      objc_msgSend(v28, sel_setFrame_);

      v14 = v58;
      t1.a = Width;
      t1.b = v58;
      t1.c = v24;
      t1.d = v23;
      t1.tx = v26;
      t1.ty = v25;
      objc_msgSend(v28, sel_setTransform_, &t1);
      v40 = v17 - v49;
      if (__OFSUB__(v17, v49))
        break;
      ++v17;
      v41 = v18 - sx * x - v47 * (double)v40;
      v42 = v28;
      objc_msgSend(v42, sel_frame);
      objc_msgSend(v42, sel_setFrame_, v41);

      t1.a = Width;
      t1.b = v58;
      t1.c = v24;
      t1.d = v23;
      t1.tx = v26;
      t1.ty = v25;
      t2.a = a;
      t2.b = b;
      t2.c = c;
      t2.d = d;
      t2.tx = tx;
      t2.ty = ty;
      CGAffineTransformConcat(&v60, &t1, &t2);
      t1 = v60;
      objc_msgSend(v42, sel_setTransform_, &t1);

      v18 = v18 + sx * v51;
      if (v15 == v17)
        return swift_bridgeObjectRelease();
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    result = sub_237EE30A8();
    v15 = result;
    if (!result)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_237E71AF4(unint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  double v6;
  id v7;
  void *v8;
  double Width;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  CGRect v13;

  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_237EE30A8();
    v3 = result;
    if (!result)
      goto LABEL_10;
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (!v3)
      goto LABEL_10;
  }
  if (v3 < 1)
  {
LABEL_18:
    __break(1u);
    return result;
  }
  v5 = 0;
  v6 = 0.0;
  do
  {
    if ((a1 & 0xC000000000000001) != 0)
      v7 = (id)MEMORY[0x23B826624](v5, a1);
    else
      v7 = *(id *)(a1 + 8 * v5 + 32);
    v8 = v7;
    ++v5;
    objc_msgSend(v7, sel__tightBoundingRectOfFirstLine);
    Width = CGRectGetWidth(v13);

    v6 = v6 + Width;
  }
  while (v3 != v5);
LABEL_10:
  result = swift_bridgeObjectRelease();
  if (v2)
  {
    swift_bridgeObjectRetain();
    v10 = sub_237EE30A8();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v11 = __OFSUB__(v10, 1);
  v12 = v10 - 1;
  if (v11)
  {
    __break(1u);
    goto LABEL_17;
  }
  result = sub_237E71D44(a1);
  if (__OFSUB__(v12, result))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  return result;
}

uint64_t sub_237E71C54(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  double v5;
  id v6;
  void *v7;
  double Height;
  CGRect v9;

  if (!(a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  result = sub_237EE30A8();
  v2 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v2 >= 1)
  {
    v4 = 0;
    v5 = 0.0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x23B826624](v4, a1);
      else
        v6 = *(id *)(a1 + 8 * v4 + 32);
      v7 = v6;
      objc_msgSend(v6, sel__tightBoundingRectOfFirstLine);
      Height = CGRectGetHeight(v9);

      if (Height > v5)
        v5 = Height;
      ++v4;
    }
    while (v2 != v4);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_237E71D44(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  if (!(a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  result = sub_237EE30A8();
  if (!result)
    goto LABEL_13;
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x23B826624](0, a1);
LABEL_6:
    v5 = v4;
    swift_bridgeObjectRelease();
    v6 = objc_msgSend(v5, sel_text);

    if (v6)
    {
      v7 = sub_237EE2A84();
      v9 = v8;

      if (v7 == 9142498 && v9 == 0xA300000000000000)
      {
        swift_bridgeObjectRelease();
        return 1;
      }
      v10 = sub_237EE31BC();
      swift_bridgeObjectRelease();
      if ((v10 & 1) != 0)
        return 1;
    }
    return 0;
  }
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v4 = *(id *)(a1 + 32);
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

void sub_237E71E84()
{
  char *v0;
  double v1;
  double v2;
  CGFloat v3;
  CGFloat v4;
  unint64_t v5;
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t i;
  id v18;
  void *v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  unint64_t v29;
  unint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  BOOL v34;
  id v35;
  void *v36;
  id v37;
  double v38;
  double v39;
  unint64_t v40;
  id v41;
  void *v42;
  uint64_t v43;
  id v44;
  void *v45;
  id v46;
  double v47;
  double v48;
  char *v49;
  id v50;
  id v51;
  CGRect v52;
  CGRect v53;
  CGRect v54;
  CGRect v55;

  if (v0[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_blurColon] == 1)
  {
    v5 = *(_QWORD *)(*(_QWORD *)&v0[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_timeLabel] + 16);
    if ((v5 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      v51 = (id)MEMORY[0x23B826624](2, v5);
      swift_bridgeObjectRelease();
      v6 = v51;
    }
    else
    {
      if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) < 3uLL)
      {
        __break(1u);
        goto LABEL_15;
      }
      v6 = *(id *)(v5 + 48);
    }
    v50 = v6;
    objc_msgSend(v6, sel__tightBoundingRectOfFirstLine);
    v1 = v7;
    v2 = v8;
    v3 = v9;
    v4 = v10;
    v5 = sub_237E70884();
    if (!(v5 >> 62))
    {
      if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_7:
        if ((v5 & 0xC000000000000001) != 0)
        {
          v11 = (id)MEMORY[0x23B826624](0, v5);
        }
        else
        {
          if (!*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_27;
          }
          v11 = *(id *)(v5 + 32);
        }
        v12 = v11;
        swift_bridgeObjectRelease();
        v13 = objc_msgSend(v12, sel_superview);

        if (v13)
        {

          goto LABEL_38;
        }
LABEL_17:
        objc_msgSend(v0, sel_bringSubviewToFront_, v50);
        v14 = objc_msgSend(v50, sel_layer);
        objc_msgSend(v14, sel_setCompositingFilter_, 0);

        v15 = sub_237E70884();
        v5 = v15;
        if (!(v15 >> 62))
        {
          v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v16)
            goto LABEL_28;
LABEL_19:
          if (v16 < 1)
          {
LABEL_87:
            __break(1u);
            goto LABEL_88;
          }
          for (i = 0; i != v16; ++i)
          {
            if ((v5 & 0xC000000000000001) != 0)
              v18 = (id)MEMORY[0x23B826624](i, v5);
            else
              v18 = *(id *)(v5 + 8 * i + 32);
            v19 = v18;
            objc_msgSend(v50, sel_addSubview_, v18);

          }
LABEL_28:
          swift_bridgeObjectRelease_n();
          v20 = sub_237E741AC();
          v49 = v0;
          v21 = sub_237E705F4();
          v22 = v21;
          if (v21 >> 62)
          {
            swift_bridgeObjectRetain();
            v23 = sub_237EE30A8();
            if (v23)
              goto LABEL_30;
          }
          else
          {
            v23 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (v23)
            {
LABEL_30:
              if (v23 < 1)
              {
LABEL_88:
                __break(1u);
                return;
              }
              v24 = 0;
              do
              {
                if ((v22 & 0xC000000000000001) != 0)
                  v25 = (id)MEMORY[0x23B826624](v24, v22);
                else
                  v25 = *(id *)(v22 + 8 * v24 + 32);
                v26 = v25;
                ++v24;
                v27 = objc_msgSend(v50, sel_layer, v49);
                objc_msgSend(v27, sel_addSublayer_, v26);

                sub_237E6F858(v20);
                v28 = (void *)sub_237EE2BBC();
                swift_bridgeObjectRelease();
                objc_msgSend(v26, sel_setFilters_, v28);

              }
              while (v23 != v24);
            }
          }
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
LABEL_38:
          v29 = sub_237E70884();
          if (v29 >> 62)
            v30 = sub_237EE30A8();
          else
            v30 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v30)
          {
            if ((v29 & 0xC000000000000001) != 0)
            {
              v31 = (id)MEMORY[0x23B826624](0, v29);
            }
            else
            {
              if (!*(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
                goto LABEL_77;
              }
              v31 = *(id *)(v29 + 32);
            }
            v32 = v31;
            swift_bridgeObjectRelease();
            objc_msgSend(v32, sel_frame);
            objc_msgSend(v32, sel_setFrame_, v1, v2);

          }
          else
          {
            swift_bridgeObjectRelease();
          }
          v29 = sub_237E70884();
          if (v29 >> 62)
          {
            v33 = sub_237EE30A8();
            if (v33)
            {
LABEL_48:
              v34 = __OFSUB__(v33, 1);
              v30 = v33 - 1;
              if (!v34)
              {
                if ((v29 & 0xC000000000000001) == 0)
                {
                  if ((v30 & 0x8000000000000000) != 0)
                  {
                    __break(1u);
                  }
                  else if (v30 < *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10))
                  {
                    v35 = *(id *)(v29 + 8 * v30 + 32);
LABEL_53:
                    v36 = v35;
                    swift_bridgeObjectRelease();
                    v37 = v36;
                    v52.origin.x = v1;
                    v52.origin.y = v2;
                    v52.size.width = v3;
                    v52.size.height = v4;
                    v38 = v2 + CGRectGetHeight(v52);
                    objc_msgSend(v37, sel_frame);
                    v39 = v38 - CGRectGetHeight(v53);
                    objc_msgSend(v37, sel_frame);
                    objc_msgSend(v37, sel_setFrame_, v1, v39);

                    goto LABEL_57;
                  }
                  __break(1u);
                  goto LABEL_81;
                }
LABEL_78:
                v35 = (id)MEMORY[0x23B826624](v30, v29);
                goto LABEL_53;
              }
LABEL_77:
              __break(1u);
              goto LABEL_78;
            }
          }
          else
          {
            v33 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (v33)
              goto LABEL_48;
          }
          swift_bridgeObjectRelease();
LABEL_57:
          v29 = sub_237E705F4();
          if (v29 >> 62)
          {
            v40 = sub_237EE30A8();
            if (v40)
            {
LABEL_59:
              if ((v29 & 0xC000000000000001) == 0)
              {
                if (!*(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10))
                {
                  __break(1u);
                  goto LABEL_83;
                }
                v41 = *(id *)(v29 + 32);
                goto LABEL_62;
              }
LABEL_81:
              v41 = (id)MEMORY[0x23B826624](0, v29);
LABEL_62:
              v42 = v41;
              swift_bridgeObjectRelease();
              objc_msgSend(v42, sel_frame);
              objc_msgSend(v42, sel_setFrame_, v1, v2);

              goto LABEL_65;
            }
          }
          else
          {
            v40 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (v40)
              goto LABEL_59;
          }
          swift_bridgeObjectRelease();
LABEL_65:
          v29 = sub_237E705F4();
          if (v29 >> 62)
          {
            v43 = sub_237EE30A8();
            if (v43)
            {
LABEL_67:
              v34 = __OFSUB__(v43, 1);
              v40 = v43 - 1;
              if (!v34)
              {
                if ((v29 & 0xC000000000000001) == 0)
                {
                  if ((v40 & 0x8000000000000000) != 0)
                  {
                    __break(1u);
                  }
                  else if (v40 < *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10))
                  {
                    v44 = *(id *)(v29 + 8 * v40 + 32);
LABEL_72:
                    v45 = v44;
                    swift_bridgeObjectRelease();
                    v46 = v45;
                    v54.origin.x = v1;
                    v54.origin.y = v2;
                    v54.size.width = v3;
                    v54.size.height = v4;
                    v47 = v2 + CGRectGetHeight(v54);
                    objc_msgSend(v46, sel_frame);
                    v48 = v47 - CGRectGetHeight(v55);
                    objc_msgSend(v46, sel_frame);
                    objc_msgSend(v46, sel_setFrame_, v1, v48);

                    return;
                  }
                  __break(1u);
                  goto LABEL_87;
                }
LABEL_84:
                v44 = (id)MEMORY[0x23B826624](v40, v29);
                goto LABEL_72;
              }
LABEL_83:
              __break(1u);
              goto LABEL_84;
            }
          }
          else
          {
            v43 = *(_QWORD *)((v29 & 0xFFFFFFFFFFFFF8) + 0x10);
            if (v43)
              goto LABEL_67;
          }

          swift_bridgeObjectRelease();
          return;
        }
LABEL_27:
        swift_bridgeObjectRetain();
        v16 = sub_237EE30A8();
        if (!v16)
          goto LABEL_28;
        goto LABEL_19;
      }
LABEL_16:
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
LABEL_15:
    if (sub_237EE30A8())
      goto LABEL_7;
    goto LABEL_16;
  }
}

unint64_t sub_237E725A4(unint64_t result)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t i;
  id v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  CGFloat v10;
  CGAffineTransform v11;

  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC11ClockPoster15RollingTimeView_transformModifier) != 1)
    return result;
  v2 = result;
  if (!(result >> 62))
  {
    v3 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_4;
    return swift_bridgeObjectRelease();
  }
LABEL_18:
  swift_bridgeObjectRetain();
  v3 = sub_237EE30A8();
  if (!v3)
    return swift_bridgeObjectRelease();
LABEL_4:
  for (i = 4; ; ++i)
  {
    if ((v2 & 0xC000000000000001) != 0)
      v5 = (id)MEMORY[0x23B826624](i - 4, v2);
    else
      v5 = *(id *)(v2 + 8 * i);
    v6 = v5;
    v7 = i - 3;
    if (__OFADD__(i - 4, 1))
    {
      __break(1u);
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
    if (qword_256897B38 != -1)
      swift_once();
    v8 = off_25689A578;
    v9 = *((_QWORD *)off_25689A578 + 2);
    if (HIDWORD(v9))
      break;
    if (v8[2] <= (unint64_t)arc4random_uniform(v9))
      goto LABEL_17;
    CLKDegreesToRadians();
    CGAffineTransformMakeRotation(&v11, v10);
    objc_msgSend(v6, sel_setTransform_, &v11);

    if (v7 == v3)
      return swift_bridgeObjectRelease();
  }
  result = sub_237EE3090();
  __break(1u);
  return result;
}

uint64_t sub_237E7278C(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  SEL *v19;
  NSObject *v20;
  char *v21;
  id v22;
  void *v23;
  char *v24;
  uint64_t v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  double v38;
  CGFloat v39;
  double v40;
  double v41;
  double v42;
  CGFloat v43;
  double v44;
  CGFloat v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double Height;
  double v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  void *v55;
  id v56;
  id v57;
  uint64_t v58;
  void *v59;
  id v60;
  id v61;
  NSObject *v62;
  uint64_t v63;
  NSObject *v64;
  void *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  id v69;
  void *v70;
  id v71;
  char *v72;
  char *v73;
  uint64_t v74;
  _QWORD v76[2];
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  id v88;
  unint64_t v89;
  uint64_t v90;
  NSObject *v91;
  char *v92;
  uint64_t v93;
  uint64_t aBlock;
  uint64_t v95;
  void *v96;
  void *v97;
  void *v98;
  uint64_t v99;
  CGRect v100;

  v2 = v1;
  v84 = sub_237EE29A0();
  v83 = *(_QWORD *)(v84 - 8);
  MEMORY[0x24BDAC7A8](v84);
  v82 = (char *)v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v81 = sub_237EE29D0();
  v80 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81);
  v79 = (char *)v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for TimeString(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v76[1] = v8;
  v77 = (uint64_t)v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25689C1A0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)&v1[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_offScreenTimeLabel];
  v78 = a1;
  sub_237E21EBC(a1, (uint64_t)v11, type metadata accessor for TimeString);
  v76[0] = v7;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  v13 = v12 + OBJC_IVAR____TtC11ClockPoster16RollingTimeLabel_timeString;
  swift_beginAccess();
  sub_237E747B4((uint64_t)v11, v13);
  swift_endAccess();
  v90 = v12;
  sub_237E3B0CC();
  sub_237E3B5FC((uint64_t)v11);
  objc_msgSend(v2, sel_setNeedsLayout);
  objc_msgSend(v2, sel_layoutIfNeeded);
  v2[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_isAnimating] = 1;
  v14 = (uint64_t)dispatch_group_create();
  v92 = v2;
  v15 = *(_QWORD *)(*(_QWORD *)&v2[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_timeLabel] + 16);
  if (v15 >> 62)
    goto LABEL_42;
  v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_3:
  v91 = v14;
  if (v16)
  {
    v88 = (id)objc_opt_self();
    v89 = v15 & 0xC000000000000001;
    v85 = v15 & 0xFFFFFFFFFFFFFF8;
    v17 = 0.0333333333;
    v18 = -0.0333333333;
    v19 = (SEL *)&unk_2509CA000;
    v87 = v15;
    v86 = v16;
    v20 = v91;
    v14 = 4;
    while (1)
    {
      v21 = (char *)(v14 - 4);
      if (v89)
      {
        v22 = (id)MEMORY[0x23B826624](v14 - 4, v15);
      }
      else
      {
        if ((unint64_t)v21 >= *(_QWORD *)(v85 + 16))
          goto LABEL_41;
        v22 = *(id *)(v15 + 8 * v14);
      }
      v23 = v22;
      v24 = (char *)(v14 - 3);
      if (__OFADD__(v21, 1))
      {
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        swift_bridgeObjectRetain();
        v16 = sub_237EE30A8();
        goto LABEL_3;
      }
      v25 = *(_QWORD *)(v90 + 16);
      if ((v25 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        v26 = (id)MEMORY[0x23B826624](v14 - 4, v25);
        swift_bridgeObjectRelease();
      }
      else
      {
        if ((unint64_t)v21 >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_40;
        v26 = *(id *)(v25 + 8 * v14);
      }
      v27 = objc_msgSend(v23, v19[455]);
      if (v27)
      {
        v28 = v27;
        v29 = sub_237EE2A84();
        v31 = v30;

      }
      else
      {
        v29 = 0;
        v31 = 0;
      }
      v32 = objc_msgSend(v26, v19[455]);
      if (v32)
      {
        v33 = v32;
        v34 = sub_237EE2A84();
        v36 = v35;

        if (v31)
        {
          if (v36)
          {
            if (v29 == v34 && v31 == v36)
            {
              swift_bridgeObjectRelease();
              v37 = 1;
            }
            else
            {
              v37 = sub_237EE31BC();
              swift_bridgeObjectRelease();
            }
          }
          else
          {
LABEL_23:
            v37 = 0;
          }
LABEL_28:
          swift_bridgeObjectRelease();
          goto LABEL_29;
        }
        if (v36)
        {
          v37 = 0;
          goto LABEL_28;
        }
      }
      else if (v31)
      {
        goto LABEL_23;
      }
      v37 = 1;
LABEL_29:
      objc_msgSend(v26, sel__tightBoundingRectOfFirstLine);
      v39 = v38;
      v41 = v40;
      v43 = v42;
      v45 = v44;
      objc_msgSend(v92, sel_bounds);
      Height = UIRectGetHeight(v46, v47, v48, v49);
      v100.origin.x = v39;
      v100.origin.y = v41;
      v100.size.width = v43;
      v100.size.height = v45;
      v51 = (Height - CGRectGetHeight(v100)) * 0.5 - v41;
      v18 = v17 + v18;
      dispatch_group_enter(v20);
      v52 = swift_allocObject();
      *(_QWORD *)(v52 + 16) = v26;
      v53 = (v37 & 1) == 0;
      *(_BYTE *)(v52 + 24) = v53;
      *(double *)(v52 + 32) = v51;
      *(_QWORD *)(v52 + 40) = v23;
      v98 = sub_237E74830;
      v99 = v52;
      v54 = MEMORY[0x24BDAC760];
      aBlock = MEMORY[0x24BDAC760];
      v95 = 1107296256;
      v96 = sub_237E38D84;
      v97 = &block_descriptor_4;
      v55 = _Block_copy(&aBlock);
      v56 = v26;
      v57 = v23;
      swift_release();
      v58 = swift_allocObject();
      *(_BYTE *)(v58 + 16) = v53;
      *(_QWORD *)(v58 + 24) = v57;
      *(_QWORD *)(v58 + 32) = v56;
      *(_QWORD *)(v58 + 40) = v20;
      v98 = sub_237E74890;
      v99 = v58;
      aBlock = v54;
      v95 = 1107296256;
      v96 = sub_237E731D8;
      v97 = &block_descriptor_6_0;
      v59 = _Block_copy(&aBlock);
      v60 = v56;
      v61 = v57;
      v62 = v20;
      swift_release();
      objc_msgSend(v88, sel_animateWithDuration_delay_usingSpringWithDamping_initialSpringVelocity_options_animations_completion_, 0, v55, v59, 2.0, v18, 0.6, 0.0);

      _Block_release(v59);
      _Block_release(v55);
      if ((v37 & 1) != 0)
      {
        ++v14;
        v15 = v87;
        v19 = (SEL *)&unk_2509CA000;
        if (v24 == (char *)v86)
          goto LABEL_36;
      }
      else
      {
        v17 = 0.0833333333;
        v15 = v87;
        v19 = (SEL *)&unk_2509CA000;
        if (v24 == (char *)v86)
          goto LABEL_36;
        ++v14;
      }
    }
  }
  v18 = -0.0333333333;
LABEL_36:
  swift_bridgeObjectRelease();
  v63 = MEMORY[0x23B827344](&v92[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_delegate]);
  v64 = v91;
  if (v63)
  {
    sub_237EE1414(v91, v18);
    swift_unknownObjectRelease();
  }
  sub_237E74A2C(0, (unint64_t *)&qword_25689C150);
  v65 = (void *)sub_237EE2DFC();
  v66 = v77;
  sub_237E21EBC(v78, v77, type metadata accessor for TimeString);
  v67 = (*(unsigned __int8 *)(v76[0] + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v76[0] + 80);
  v68 = swift_allocObject();
  v69 = v92;
  *(_QWORD *)(v68 + 16) = v92;
  sub_237E20634(v66, v68 + v67);
  v98 = sub_237E74968;
  v99 = v68;
  aBlock = MEMORY[0x24BDAC760];
  v95 = 1107296256;
  v96 = sub_237E38D84;
  v97 = &block_descriptor_12;
  v70 = _Block_copy(&aBlock);
  v71 = v69;
  v72 = v79;
  sub_237EE29B8();
  v93 = MEMORY[0x24BEE4AF8];
  sub_237E74998();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689A608);
  sub_237E749E0();
  v73 = v82;
  v74 = v84;
  sub_237EE2F1C();
  sub_237EE2DD8();
  _Block_release(v70);

  (*(void (**)(char *, uint64_t))(v83 + 8))(v73, v74);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v72, v81);
  return swift_release();
}

id sub_237E72FEC(void *a1, char a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  CGRect v21;

  objc_msgSend(a1, sel_transform);
  v7 = v15;
  v6 = v16;
  v9 = v17;
  v8 = v18;
  v11 = v19;
  v10 = v20;
  v15 = 0x3FF0000000000000;
  v16 = 0;
  v17 = 0;
  v18 = 0x3FF0000000000000;
  v19 = 0;
  v20 = 0;
  objc_msgSend(a1, sel_setTransform_, &v15);
  if ((a2 & 1) != 0)
  {
    objc_msgSend(a1, sel_frame);
    objc_msgSend(a1, sel_setFrame_);
    objc_msgSend(a3, sel_frame);
    CGRectGetHeight(v21);
    objc_msgSend(a3, sel_frame);
    objc_msgSend(a3, sel_setFrame_);
    return objc_msgSend(a1, sel_setTransform_, &v15, v7, v6, v9, v8, v11, v10);
  }
  else
  {
    v15 = 0x3FF0000000000000;
    v16 = 0;
    v17 = 0;
    v18 = 0x3FF0000000000000;
    v19 = 0;
    v20 = 0;
    objc_msgSend(a3, sel_setTransform_, &v15);
    objc_msgSend(a1, sel_frame);
    v14 = v13;
    objc_msgSend(a3, sel_frame);
    objc_msgSend(a3, sel_setFrame_, v14);
    return objc_msgSend(a3, sel_setTransform_, &v15, v7, v6, v9, v8, v11, v10);
  }
}

void sub_237E7316C(int a1, char a2, void *a3, id a4, dispatch_group_t group)
{
  __int128 v7;

  if ((a2 & 1) != 0)
  {
    objc_msgSend(a4, sel_transform);
    objc_msgSend(a3, sel_setTransform_, &v7);
  }
  dispatch_group_leave(group);
}

uint64_t sub_237E731D8(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

id sub_237E73214(_BYTE *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25689C1A0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_isAnimating] = 0;
  v7 = *(_QWORD *)&a1[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_timeLabel];
  sub_237E21EBC(a2, (uint64_t)v6, type metadata accessor for TimeString);
  v8 = type metadata accessor for TimeString(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v6, 0, 1, v8);
  v9 = v7 + OBJC_IVAR____TtC11ClockPoster16RollingTimeLabel_timeString;
  swift_beginAccess();
  sub_237E747B4((uint64_t)v6, v9);
  swift_endAccess();
  sub_237E3B0CC();
  sub_237E3B5FC((uint64_t)v6);
  v10 = swift_bridgeObjectRetain();
  sub_237E725A4(v10);
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setNeedsLayout);
  return objc_msgSend(a1, sel_layoutIfNeeded);
}

id sub_237E73358()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RollingTimeView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_237E73458()
{
  return type metadata accessor for RollingTimeView();
}

uint64_t type metadata accessor for RollingTimeView()
{
  uint64_t result;

  result = qword_25689A5E8;
  if (!qword_25689A5E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_237E7349C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_237EE1EC0();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for TimeString(319);
    if (v2 <= 0x3F)
      return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for RollingTimeView.TransformModifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_237E735B4 + 4 * byte_237EE9C55[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_237E735E8 + 4 * byte_237EE9C50[v4]))();
}

uint64_t sub_237E735E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237E735F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237E735F8);
  return result;
}

uint64_t sub_237E73604(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237E7360CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_237E73610(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237E73618(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RollingTimeView.TransformModifier()
{
  return &type metadata for RollingTimeView.TransformModifier;
}

unint64_t sub_237E73638()
{
  unint64_t result;

  result = qword_25689A5F8;
  if (!qword_25689A5F8)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE9D34, &type metadata for RollingTimeView.TransformModifier);
    atomic_store(result, (unint64_t *)&qword_25689A5F8);
  }
  return result;
}

uint64_t sub_237E7367C()
{
  uint64_t result;
  void *v1;

  v1 = (void *)sub_237EB5F04(-5, 5);
  result = sub_237ECBDC0(5uLL);
  off_25689A578 = v1;
  return result;
}

uint64_t sub_237E736C4@<X0>(double *a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  double *v10;
  os_unfair_lock_s *v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;

  v4 = v3;
  v8 = type metadata accessor for TextClockDescriptor(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (double *)((char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = (os_unfair_lock_s *)(*(_QWORD *)(v3 + 16) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v11);
  swift_endAccess();
  v12 = (uint64_t *)(v3 + 24);
  swift_beginAccess();
  v13 = *(_QWORD *)(v3 + 24);
  if (!*(_QWORD *)(v13 + 16))
    goto LABEL_5;
  swift_bridgeObjectRetain();
  v14 = sub_237EAD420(a1);
  if ((v15 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    __swift_instantiateConcreteTypeFromMangledName(&qword_25689A630);
    v16 = swift_allocObject();
    v17 = v16 + *(_QWORD *)(*(_QWORD *)v16 + 96);
    v18 = type metadata accessor for TimeString(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
    v19 = *(_QWORD *)v16;
    v24 = a3;
    v20 = *(_QWORD *)(v19 + 104);
    type metadata accessor for CPUnfairLock();
    v21 = swift_allocObject();
    *(_DWORD *)(v21 + 16) = 0;
    *(_QWORD *)(v16 + v20) = v21;
    *(_QWORD *)(v16 + *(_QWORD *)(*(_QWORD *)v16 + 112)) = MEMORY[0x24BEE4B00];
    *(_BYTE *)(v16 + *(_QWORD *)(*(_QWORD *)v16 + 120)) = 0;
    sub_237E21EBC((uint64_t)a1, (uint64_t)v10, type metadata accessor for TextClockDescriptor);
    swift_beginAccess();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = *v12;
    *v12 = 0x8000000000000000;
    sub_237E9B87C(v16, v10, isUniquelyReferenced_nonNull_native);
    *v12 = v25;
    swift_bridgeObjectRelease();
    a3 = v24;
    sub_237E21F00((uint64_t)v10, type metadata accessor for TextClockDescriptor);
    swift_endAccess();
    goto LABEL_6;
  }
  v16 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v14);
  swift_retain();
  swift_bridgeObjectRelease();
LABEL_6:
  swift_retain();
  sub_237E8F3EC(v16, v4, a2, a3);
  swift_beginAccess();
  os_unfair_lock_unlock(v11);
  swift_endAccess();
  return swift_release();
}

_QWORD *sub_237E7394C(uint64_t a1, unint64_t a2)
{
  unint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  _BYTE v7[8];

  v2 = a2;
  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_5;
  v4 = sub_237EE2B50();
  if (!v4)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    v5 = sub_237E73D5C(v4, 0);
    swift_bridgeObjectRetain();
    v2 = sub_237E73A1C((uint64_t)v7, (uint64_t)(v5 + 4), v4, a1, v2);
    swift_bridgeObjectRelease();
    if (v2 == v4)
      break;
    __break(1u);
LABEL_5:
    v4 = sub_237EE2B44();
    if (!v4)
      return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v5;
}

uint64_t sub_237E73A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v8;
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int *v16;
  int *v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  unsigned int v23;
  int *v24;
  __int16 v25;
  uint64_t v26;
  int *v27;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[2];

  if ((a5 & 0x2000000000000000) != 0)
    v8 = HIBYTE(a5) & 0xF;
  else
    v8 = a4 & 0xFFFFFFFFFFFFLL;
  if (!a2)
  {
    v11 = 0;
    v12 = 0;
    a3 = 0;
    v15 = 1;
    goto LABEL_31;
  }
  swift_bridgeObjectRetain();
  if (!a3)
  {
    v11 = 0;
    v12 = 0;
    v15 = 1;
    goto LABEL_30;
  }
  if (a3 < 0)
  {
    __break(1u);
    JUMPOUT(0x237E73D3CLL);
  }
  v11 = 0;
  v12 = 0;
  v13 = 0;
  v14 = a5 & 0xFFFFFFFFFFFFFFLL;
  v30 = a1;
  v15 = 1;
  v16 = &dword_237E73D4C;
  v17 = &dword_237E73D3C;
  while (1)
  {
    if ((v15 & 1) == 0)
    {
      v15 = 1;
      LOWORD(v18) = v12;
      v12 = 0;
      goto LABEL_9;
    }
    if (v11 >= v8)
      break;
    if ((a5 & 0x1000000000000000) != 0)
    {
      v21 = v14;
      v22 = v16;
      v23 = sub_237EE2F94();
      v17 = &dword_237E73D3C;
      v16 = v22;
      v14 = v21;
      v18 = v23;
    }
    else
    {
      if ((a5 & 0x2000000000000000) == 0)
      {
        v19 = (a5 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if ((a4 & 0x1000000000000000) == 0)
        {
          v26 = v14;
          v27 = v16;
          v19 = sub_237EE2FC4();
          v17 = &dword_237E73D3C;
          v16 = v27;
          v14 = v26;
        }
        v18 = *(unsigned __int8 *)(v19 + v11);
        if (*(char *)(v19 + v11) < 0)
          __asm { BR              X9 }
        ++v11;
        v15 = 1;
        goto LABEL_9;
      }
      v31[0] = a4;
      v31[1] = v14;
      v18 = *((unsigned __int8 *)v31 + v11);
      if (*((char *)v31 + v11) < 0)
        __asm { BR              X9 }
      v20 = 1;
    }
    v11 += v20;
    if (HIWORD(v18))
    {
      v29 = v14;
      v24 = v17;
      v12 = sub_237EE32E8();
      v25 = sub_237EE32E8();
      v17 = v24;
      v16 = &dword_237E73D4C;
      v14 = v29;
      LOWORD(v18) = v25;
      v15 = 0;
    }
    else
    {
      v15 = 1;
    }
LABEL_9:
    *(_WORD *)(a2 + 2 * v13++) = v18;
    if (a3 == v13)
      goto LABEL_29;
  }
  v15 = 1;
  a3 = v13;
LABEL_29:
  a1 = v30;
LABEL_30:
  swift_bridgeObjectRelease();
LABEL_31:
  *(_QWORD *)a1 = a4;
  *(_QWORD *)(a1 + 8) = a5;
  *(_QWORD *)(a1 + 16) = v11;
  *(_QWORD *)(a1 + 24) = v8;
  *(_WORD *)(a1 + 32) = v12;
  *(_BYTE *)(a1 + 34) = v15;
  return a3;
}

_QWORD *sub_237E73D5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  int64_t v6;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689A038);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v6 = v5 - 32;
  if (v5 < 32)
    v6 = v5 - 31;
  v4[2] = a1;
  v4[3] = v6 & 0xFFFFFFFFFFFFFFFELL;
  return v4;
}

void sub_237E73DCC()
{
  _BYTE *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void (*v6)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  double v13;
  double v14;
  id v15;
  double v16;
  double v17;

  sub_237EE1EB4();
  *(_QWORD *)&v0[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&v0[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_overlap] = 0;
  v0[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_blurColon] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_compositingFilter] = 0;
  v0[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_transformModifier] = 0;
  v1 = OBJC_IVAR____TtC11ClockPoster15RollingTimeView_timeLabel;
  type metadata accessor for RollingTimeLabel();
  v2 = (_QWORD *)swift_allocObject();
  v3 = sub_237E3AE08();
  v2[3] = 0;
  v2[4] = 0;
  v2[2] = v3;
  v4 = (char *)v2 + OBJC_IVAR____TtC11ClockPoster16RollingTimeLabel_timeString;
  v5 = type metadata accessor for TimeString(0);
  v6 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  *(_QWORD *)&v0[v1] = v2;
  v7 = OBJC_IVAR____TtC11ClockPoster15RollingTimeView_offScreenTimeLabel;
  v8 = (char *)swift_allocObject();
  v9 = sub_237E3AE08();
  *((_QWORD *)v8 + 3) = 0;
  *((_QWORD *)v8 + 4) = 0;
  *((_QWORD *)v8 + 2) = v9;
  v6(&v8[OBJC_IVAR____TtC11ClockPoster16RollingTimeLabel_timeString], 1, 1, v5);
  *(_QWORD *)&v0[v7] = v8;
  v10 = OBJC_IVAR____TtC11ClockPoster15RollingTimeView_maxScale;
  v11 = (void *)objc_opt_self();
  v12 = objc_msgSend(v11, sel_mainScreen);
  objc_msgSend(v12, sel_scale);
  v14 = v13;

  v15 = objc_msgSend(v11, sel_mainScreen);
  objc_msgSend(v15, sel_nativeScale);
  v17 = v16;

  *(double *)&v0[v10] = v14 / v17;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11ClockPoster15RollingTimeView____lazy_storage___redModeColonLayers] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11ClockPoster15RollingTimeView____lazy_storage___colonBlurViews] = 0;
  v0[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_isAnimating] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC11ClockPoster15RollingTimeView_timeTextListenerTask] = 0;

  sub_237EE309C();
  __break(1u);
}

uint64_t sub_237E73FEC(uint64_t a1, void *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t i;
  id v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t j;
  id v13;
  void *v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC11ClockPoster15RollingTimeView_timeLabel) + 16);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain_n();
    result = sub_237EE30A8();
    v5 = result;
    if (!result)
      goto LABEL_10;
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    if (!v5)
      goto LABEL_10;
  }
  if (v5 < 1)
  {
    __break(1u);
    goto LABEL_21;
  }
  for (i = 0; i != v5; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0)
      v8 = (id)MEMORY[0x23B826624](i, v4);
    else
      v8 = *(id *)(v4 + 8 * i + 32);
    v9 = v8;
    objc_msgSend(a2, sel_addSubview_, v8);

  }
LABEL_10:
  swift_bridgeObjectRelease_n();
  v10 = *(_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC11ClockPoster15RollingTimeView_offScreenTimeLabel) + 16);
  if (!(v10 >> 62))
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    if (v11)
      goto LABEL_12;
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  result = sub_237EE30A8();
  v11 = result;
  if (!result)
    return swift_bridgeObjectRelease_n();
LABEL_12:
  if (v11 >= 1)
  {
    for (j = 0; j != v11; ++j)
    {
      if ((v10 & 0xC000000000000001) != 0)
        v13 = (id)MEMORY[0x23B826624](j, v10);
      else
        v13 = *(id *)(v10 + 8 * j + 32);
      v14 = v13;
      objc_msgSend(a2, sel_addSubview_, v13);

    }
    return swift_bridgeObjectRelease_n();
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_237E741AC()
{
  id v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  id v22;
  CGColorRef GenericRGB;
  uint64_t v24;
  _OWORD v26[5];

  sub_237EE2A84();
  v0 = objc_allocWithZone(MEMORY[0x24BDE56B0]);
  v1 = (void *)sub_237EE2A54();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithType_, v1);

  v3 = (void *)sub_237EE2BBC();
  objc_msgSend(v2, sel_setValue_forKey_, v3, *MEMORY[0x24BDE5B40]);

  v4 = (void *)sub_237EE1F5C();
  v5 = *MEMORY[0x24BDE5AA8];
  objc_msgSend(v2, sel_setValue_forKey_, v4, *MEMORY[0x24BDE5AA8]);

  sub_237EE2A84();
  v6 = objc_allocWithZone(MEMORY[0x24BDE56B0]);
  v7 = (void *)sub_237EE2A54();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v6, sel_initWithType_, v7);

  v9 = (void *)sub_237EE2D18();
  objc_msgSend(v8, sel_setValue_forKey_, v9, *MEMORY[0x24BDE5B18]);

  v10 = (void *)sub_237EE2C1C();
  objc_msgSend(v8, sel_setValue_forKey_, v10, *MEMORY[0x24BDE5B00]);

  v11 = (void *)sub_237EE2C1C();
  objc_msgSend(v8, sel_setValue_forKey_, v11, *MEMORY[0x24BDE5AE0]);

  sub_237EE2A84();
  v12 = objc_allocWithZone(MEMORY[0x24BDE56B0]);
  v13 = (void *)sub_237EE2A54();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend(v12, sel_initWithType_, v13);

  v15 = (void *)sub_237EE1F5C();
  objc_msgSend(v14, sel_setValue_forKey_, v15, v5);

  sub_237EE2A84();
  v16 = objc_allocWithZone(MEMORY[0x24BDE56B0]);
  v17 = (void *)sub_237EE2A54();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(v16, sel_initWithType_, v17);

  v26[0] = xmmword_237EE9BE0;
  v26[1] = xmmword_237EE9BF0;
  v26[2] = xmmword_237EE9C00;
  v26[3] = xmmword_237EE9C10;
  v26[4] = xmmword_237EE4460;
  v19 = objc_msgSend((id)objc_opt_self(), sel_valueWithCAColorMatrix_, v26);
  objc_msgSend(v18, sel_setValue_forKey_, v19, *MEMORY[0x24BDE5AD8]);

  sub_237EE2A84();
  v20 = objc_allocWithZone(MEMORY[0x24BDE56B0]);
  v21 = (void *)sub_237EE2A54();
  swift_bridgeObjectRelease();
  v22 = objc_msgSend(v20, sel_initWithType_, v21);

  GenericRGB = CGColorCreateGenericRGB(1.0, 0.0, 0.0, 0.08);
  objc_msgSend(v22, sel_setValue_forKey_, GenericRGB, *MEMORY[0x24BDE5AD0]);

  __swift_instantiateConcreteTypeFromMangledName(&qword_2568982F8);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_237EE9C20;
  *(_QWORD *)(v24 + 32) = v2;
  *(_QWORD *)(v24 + 40) = v8;
  *(_QWORD *)(v24 + 48) = v14;
  *(_QWORD *)(v24 + 56) = v18;
  *(_QWORD *)(v24 + 64) = v22;
  *(_QWORD *)&v26[0] = v24;
  sub_237EE2BEC();
  return *(_QWORD *)&v26[0];
}

uint64_t sub_237E745A8(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;

  v3 = *(_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC11ClockPoster15RollingTimeView_timeLabel) + 16);
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain_n();
    result = sub_237EE30A8();
    v4 = result;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
  }
  if (v4)
  {
    if (v4 < 1)
    {
      __break(1u);
      goto LABEL_22;
    }
    v6 = 0;
    v7 = OBJC_IVAR____TtC11ClockPoster15RollingTimeView_compositingFilter;
    do
    {
      if ((v3 & 0xC000000000000001) != 0)
        v8 = (id)MEMORY[0x23B826624](v6, v3);
      else
        v8 = *(id *)(v3 + 8 * v6 + 32);
      v9 = v8;
      ++v6;
      v10 = objc_msgSend(v8, sel_layer);
      objc_msgSend(v10, sel_setCompositingFilter_, *(_QWORD *)(a2 + v7));

    }
    while (v4 != v6);
  }
  swift_bridgeObjectRelease_n();
  v11 = *(_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC11ClockPoster15RollingTimeView_offScreenTimeLabel) + 16);
  if (!(v11 >> 62))
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    if (v12)
      goto LABEL_12;
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  result = sub_237EE30A8();
  v12 = result;
  if (!result)
    return swift_bridgeObjectRelease_n();
LABEL_12:
  if (v12 >= 1)
  {
    v13 = 0;
    v14 = OBJC_IVAR____TtC11ClockPoster15RollingTimeView_compositingFilter;
    do
    {
      if ((v11 & 0xC000000000000001) != 0)
        v15 = (id)MEMORY[0x23B826624](v13, v11);
      else
        v15 = *(id *)(v11 + 8 * v13 + 32);
      v16 = v15;
      ++v13;
      v17 = objc_msgSend(v15, sel_layer);
      objc_msgSend(v17, sel_setCompositingFilter_, *(_QWORD *)(a2 + v14));

    }
    while (v12 != v13);
    return swift_bridgeObjectRelease_n();
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_237E747B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25689C1A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

double UIRectGetHeight(double a1, double a2, double a3, double a4)
{
  return a4;
}

uint64_t sub_237E74804()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_237E74830()
{
  uint64_t v0;

  return sub_237E72FEC(*(void **)(v0 + 16), *(_BYTE *)(v0 + 24), *(void **)(v0 + 40));
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_237E7485C()
{
  id *v0;

  return swift_deallocObject();
}

void sub_237E74890(int a1)
{
  uint64_t v1;

  sub_237E7316C(a1, *(_BYTE *)(v1 + 16), *(void **)(v1 + 24), *(id *)(v1 + 32), *(dispatch_group_t *)(v1 + 40));
}

uint64_t sub_237E748A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for TimeString(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 24) & ~v2;

  v4 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v0 + v3 + *(int *)(v1 + 36);
  v6 = sub_237EE1EC0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v4 + *(int *)(v1 + 40);
  v8 = sub_237EE1D70();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  return swift_deallocObject();
}

id sub_237E74968()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TimeString(0) - 8) + 80);
  return sub_237E73214(*(_BYTE **)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

unint64_t sub_237E74998()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25689A600;
  if (!qword_25689A600)
  {
    v1 = sub_237EE29A0();
    result = MEMORY[0x23B8271D0](MEMORY[0x24BEE5468], v1);
    atomic_store(result, (unint64_t *)&qword_25689A600);
  }
  return result;
}

unint64_t sub_237E749E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25689A610;
  if (!qword_25689A610)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25689A608);
    result = MEMORY[0x23B8271D0](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_25689A610);
  }
  return result;
}

uint64_t sub_237E74A2C(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_237E74A64()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_237E74A88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_237EE1EC0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_237E74B18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(sub_237EE1EC0() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_237E20844;
  return sub_237E71010(a1, v6, v7, v8, v9);
}

uint64_t sub_237E74BBC(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

void sub_237E74BF0(float a1, float a2)
{
  if ((~COERCE_INT(a2 - a1) & 0x7F800000) != 0)
    sub_237E7A0E0(16777217);
  else
    __break(1u);
}

uint64_t sub_237E74C60@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  _BYTE v14[8];
  __int128 v15[6];
  _BYTE v16[100];
  int v17;
  int v18;
  uint64_t v19;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689AB08);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_237E7A16C();
  sub_237EE32D0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v14[7] = 0;
  sub_237E471FC();
  sub_237EE312C();
  sub_237E2D180(v15, (uint64_t)v16);
  LOBYTE(v15[0]) = 3;
  sub_237EE3114();
  v19 = v9;
  LOBYTE(v15[0]) = 1;
  sub_237EE3120();
  v17 = v10;
  LOBYTE(v15[0]) = 2;
  sub_237EE3120();
  v12 = v11;
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  v18 = v12;
  sub_237E2A1CC((uint64_t)v16, a2);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return sub_237E2A208((uint64_t)v16);
}

uint64_t sub_237E74E78(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689AB18);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_237E7A16C();
  sub_237EE32DC();
  v8[15] = 0;
  sub_237E47240();
  sub_237EE3168();
  if (!v1)
  {
    v8[14] = 1;
    sub_237EE315C();
    v8[13] = 2;
    sub_237EE315C();
    v8[12] = 3;
    sub_237EE3150();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_237E74FEC(char *a1)
{
  sub_237EAA688(*a1);
}

void sub_237E74FF8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_237EE3264();
  __asm { BR              X9 }
}

uint64_t sub_237E7503C()
{
  sub_237EE2ACC();
  swift_bridgeObjectRelease();
  return sub_237EE3294();
}

void sub_237E750B0()
{
  __asm { BR              X10 }
}

uint64_t sub_237E750E4()
{
  sub_237EE2ACC();
  return swift_bridgeObjectRelease();
}

void sub_237E75144()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_237EE3264();
  __asm { BR              X9 }
}

uint64_t sub_237E75184()
{
  sub_237EE2ACC();
  swift_bridgeObjectRelease();
  return sub_237EE3294();
}

uint64_t sub_237E751F8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_237E7AE60();
  *a1 = result;
  return result;
}

uint64_t sub_237E75224()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_237E7524C + 4 * byte_237EE9D6C[*v0]))();
}

void sub_237E7524C(char *a1@<X8>)
{
  strcpy(a1, "foregroundSeed");
  a1[15] = -18;
}

void sub_237E75274(char *a1@<X8>)
{
  strcpy(a1, "backgroundSeed");
  a1[15] = -18;
}

void sub_237E7529C(_QWORD *a1@<X8>)
{
  *a1 = 0x6D69546573696F6ELL;
  a1[1] = 0xE900000000000065;
}

uint64_t sub_237E752BC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_237E752E4 + 4 * byte_237EE9D70[*v0]))(1802465132, 0xE400000000000000);
}

uint64_t sub_237E752E4()
{
  return 0x756F726765726F66;
}

uint64_t sub_237E75314()
{
  return 0x6D69546573696F6ELL;
}

uint64_t sub_237E75330@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_237E7AE60();
  *a1 = result;
  return result;
}

void sub_237E75354(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_237E75360()
{
  sub_237E7A16C();
  return sub_237EE3324();
}

uint64_t sub_237E75388()
{
  sub_237E7A16C();
  return sub_237EE3330();
}

uint64_t sub_237E753B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t result;
  __int128 v9[6];

  sub_237E28430(a1, (uint64_t)v9);
  sub_237E74BF0(0.0, 10000.0);
  v5 = v4;
  sub_237E74BF0(10001.0, 20000.0);
  v7 = v6;
  sub_237E2846C(a1);
  result = sub_237E2D180(v9, a2);
  *(_QWORD *)(a2 + 112) = 0;
  *(_DWORD *)(a2 + 100) = v5;
  *(_DWORD *)(a2 + 104) = v7;
  return result;
}

uint64_t sub_237E7543C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_237E74C60(a1, a2);
}

uint64_t sub_237E75450(_QWORD *a1)
{
  return sub_237E74E78(a1);
}

double sub_237E7546C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  BOOL v4;
  double result;
  char v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v4 = a1 == 7957363 && a2 == 0xE300000000000000;
  if (v4 || (sub_237EE31BC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v12 = 0u;
    v13 = 0u;
    v10 = 0u;
    v11 = 0u;
    v9 = 0u;
  }
  else
  {
    if (a1 == 0x6D75727463657073 && a2 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v8 = sub_237EE31BC();
      swift_bridgeObjectRelease();
      if ((v8 & 1) == 0)
      {
        *(_QWORD *)a3 = 0;
        *(_QWORD *)(a3 + 8) = 0;
        *(_QWORD *)(a3 + 16) = 0;
        *(_QWORD *)(a3 + 24) = 2;
        result = 0.0;
        *(_OWORD *)(a3 + 32) = 0u;
        *(_OWORD *)(a3 + 48) = 0u;
        *(_OWORD *)(a3 + 64) = 0u;
        return result;
      }
    }
    v9 = 0uLL;
    *(_QWORD *)&v10 = 0;
    *((_QWORD *)&v10 + 1) = 1;
    v11 = 0u;
    v12 = 0u;
    v13 = 0u;
  }
  sub_237E7A90C(&v9, (_OWORD *)a3);
  return result;
}

void sub_237E75598(uint64_t a1@<X0>, uint64_t a2@<X8>, float a3@<S0>)
{
  float v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  _QWORD *v27;
  ValueMetadata *v28;
  uint64_t v29;
  float v30;
  float v31;
  float v32;
  unint64_t v33;
  uint64_t v34;
  ValueMetadata *v35;
  uint64_t v36;
  float v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  _QWORD *v43;
  ValueMetadata *v44;
  uint64_t v45;
  float v46;
  float v47;
  float v48;
  uint64_t v49;
  ValueMetadata *v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  __int128 v55;
  ValueMetadata *v56;
  _UNKNOWN **v57;
  __int128 v58;
  ValueMetadata *v59;
  _UNKNOWN **v60;
  __int128 v61;
  ValueMetadata *v62;
  _UNKNOWN **v63;
  __int128 v64;
  ValueMetadata *v65;
  _UNKNOWN **v66;
  __int128 v67;
  ValueMetadata *v68;
  _UNKNOWN **v69;
  __int128 v70;
  uint64_t v71;
  __int128 v72;
  _OWORD v73[5];

  *(float *)(a2 + 80) = a3;
  sub_237E75BB4(v73);
  sub_237E7A558((uint64_t)v73, (uint64_t)&v70);
  if (v71 == 1)
  {
    v10 = *(_QWORD *)(a1 + 112);
    v11 = *(_DWORD *)(a1 + 100);
    *(_QWORD *)(a2 + 64) = &type metadata for ColorProvider;
    v12 = sub_237E7A604();
    *(_QWORD *)(a2 + 72) = v12;
    v13 = swift_allocObject();
    *(_QWORD *)(a2 + 40) = v13;
    *(_QWORD *)(v13 + 40) = &type metadata for NoiseColorChannelGenerator;
    *(_QWORD *)(v13 + 48) = &off_2509C03E0;
    v14 = (_QWORD *)swift_allocObject();
    *(_QWORD *)(v13 + 16) = v14;
    v14[5] = &type metadata for PerlinNoiseGenerator;
    v15 = sub_237E7A5B0();
    v14[6] = v15;
    v16 = swift_allocObject();
    v14[2] = v16;
    *(_QWORD *)(v16 + 16) = v10;
    *(_DWORD *)(v16 + 24) = v11;
    *(_OWORD *)(v16 + 28) = xmmword_237EEA2E0;
    *(_QWORD *)(v13 + 80) = &type metadata for FixedColorChannel;
    *(_QWORD *)(v13 + 88) = &off_2509C03D0;
    *(_DWORD *)(v13 + 56) = 1051260355;
    v17 = sub_237E7A7CC(0.66, 1.0);
    *(_QWORD *)(v13 + 120) = &type metadata for ColorCurveChannelProvider;
    *(_QWORD *)(v13 + 128) = &off_2509C03C0;
    *(_DWORD *)(v13 + 96) = v18;
    *(_QWORD *)(v13 + 104) = v17;
    v19 = *(_DWORD *)(a1 + 104);
    v68 = &type metadata for NoiseColorChannelGenerator;
    v69 = &off_2509C03E0;
    v20 = (_QWORD *)swift_allocObject();
    *(_QWORD *)&v67 = v20;
    v20[5] = &type metadata for PerlinNoiseGenerator;
    v20[6] = v15;
    v21 = swift_allocObject();
    v20[2] = v21;
    *(_QWORD *)(v21 + 16) = v10;
    *(_DWORD *)(v21 + 24) = v19;
    *(_OWORD *)(v21 + 28) = xmmword_237EEA2E0;
    v65 = &type metadata for FixedColorChannel;
    v66 = &off_2509C03D0;
    LODWORD(v64) = 1059648963;
    v22 = sub_237E7A7CC(0.0, 0.66);
    v62 = &type metadata for ColorCurveChannelProvider;
    v63 = &off_2509C03C0;
    LODWORD(v61) = v23;
    *((_QWORD *)&v61 + 1) = v22;
    sub_237E2A208(a1);
    sub_237E7A888((uint64_t)v73);
    *(_QWORD *)(a2 + 24) = &type metadata for ColorProvider;
    *(_QWORD *)(a2 + 32) = v12;
    v24 = swift_allocObject();
    *(_QWORD *)a2 = v24;
    sub_237E2D1BC(&v67, v24 + 16);
    sub_237E2D1BC(&v64, v24 + 56);
    sub_237E2D1BC(&v61, v24 + 96);
    return;
  }
  if (!v71)
  {
    v5 = sub_237E8D6B0();
    v7 = v6;
    *(_QWORD *)(a2 + 64) = &type metadata for ColorCurve;
    v8 = sub_237E7A8C8();
    *(_QWORD *)(a2 + 72) = v8;
    *(float *)(a2 + 40) = v5;
    *(_QWORD *)(a2 + 48) = v7;
    v68 = &type metadata for ColorCurve;
    v69 = (_UNKNOWN **)v8;
    LODWORD(v67) = sub_237E8DA08();
    *((_QWORD *)&v67 + 1) = v9;
    sub_237E2A208(a1);
    sub_237E7A888((uint64_t)v73);
    sub_237E2D1BC(&v67, a2);
    return;
  }
  sub_237E2D1BC(&v70, (uint64_t)&v67);
  sub_237E2D1BC(&v72, (uint64_t)&v64);
  v25 = *(_QWORD *)(a1 + 112);
  v26 = *(_DWORD *)(a1 + 100);
  v62 = &type metadata for NoiseColorChannelGenerator;
  v63 = &off_2509C03E0;
  v27 = (_QWORD *)swift_allocObject();
  *(_QWORD *)&v61 = v27;
  v28 = v68;
  v29 = (uint64_t)v69;
  __swift_project_boxed_opaque_existential_1(&v67, (uint64_t)v68);
  v30 = sub_237E79B04((uint64_t)v28, v29);
  if ((float)(v30 + -0.2) < 0.0)
    v30 = v30 + 1.0;
  v31 = v30 + -0.2;
  v32 = v30 + 0.2;
  if ((float)(v30 + -0.2) > (float)(v30 + 0.2))
  {
    __break(1u);
  }
  else
  {
    v27[5] = &type metadata for PerlinNoiseGenerator;
    v33 = sub_237E7A5B0();
    v27[6] = v33;
    v34 = swift_allocObject();
    v27[2] = v34;
    *(_QWORD *)(v34 + 16) = v25;
    *(_DWORD *)(v34 + 24) = v26;
    *(float *)(v34 + 28) = v31;
    *(float *)(v34 + 32) = v32;
    *(_QWORD *)(v34 + 36) = 0x3F8000003F333333;
    v35 = v68;
    v36 = (uint64_t)v69;
    __swift_project_boxed_opaque_existential_1(&v67, (uint64_t)v68);
    v37 = sub_237E75CB0((uint64_t)v35, v36);
    *(_QWORD *)(a2 + 64) = &type metadata for ColorProvider;
    v38 = sub_237E7A604();
    *(_QWORD *)(a2 + 72) = v38;
    v39 = swift_allocObject();
    *(_QWORD *)(a2 + 40) = v39;
    *(_QWORD *)(v39 + 80) = &type metadata for FixedColorChannel;
    *(_QWORD *)(v39 + 88) = &off_2509C03D0;
    *(float *)(v39 + 56) = v37;
    v40 = sub_237E7A7CC(0.66, 1.0);
    *(_QWORD *)(v39 + 120) = &type metadata for ColorCurveChannelProvider;
    *(_QWORD *)(v39 + 128) = &off_2509C03C0;
    *(_DWORD *)(v39 + 96) = v41;
    *(_QWORD *)(v39 + 104) = v40;
    sub_237E2D1BC(&v61, v39 + 16);
    v42 = *(_DWORD *)(a1 + 104);
    v62 = &type metadata for NoiseColorChannelGenerator;
    v63 = &off_2509C03E0;
    v43 = (_QWORD *)swift_allocObject();
    *(_QWORD *)&v61 = v43;
    v44 = v65;
    v45 = (uint64_t)v66;
    __swift_project_boxed_opaque_existential_1(&v64, (uint64_t)v65);
    v46 = sub_237E79B04((uint64_t)v44, v45);
    if ((float)(v46 + -0.2) < 0.0)
      v46 = v46 + 1.0;
    v47 = v46 + -0.2;
    v48 = v46 + 0.2;
    if ((float)(v46 + -0.2) <= (float)(v46 + 0.2))
    {
      v43[5] = &type metadata for PerlinNoiseGenerator;
      v43[6] = v33;
      v49 = swift_allocObject();
      v43[2] = v49;
      *(_QWORD *)(v49 + 16) = v25;
      *(_DWORD *)(v49 + 24) = v42;
      *(float *)(v49 + 28) = v47;
      *(float *)(v49 + 32) = v48;
      *(_QWORD *)(v49 + 36) = 0x3F8000003F333333;
      v50 = v65;
      v51 = (uint64_t)v66;
      __swift_project_boxed_opaque_existential_1(&v64, (uint64_t)v65);
      v59 = &type metadata for FixedColorChannel;
      v60 = &off_2509C03D0;
      LODWORD(v58) = sub_237E75CB0((uint64_t)v50, v51);
      v52 = sub_237E7A7CC(0.0, 0.66);
      v57 = &off_2509C03C0;
      LODWORD(v55) = v53;
      v56 = &type metadata for ColorCurveChannelProvider;
      *((_QWORD *)&v55 + 1) = v52;
      sub_237E2A208(a1);
      sub_237E7A888((uint64_t)v73);
      *(_QWORD *)(a2 + 24) = &type metadata for ColorProvider;
      *(_QWORD *)(a2 + 32) = v38;
      v54 = swift_allocObject();
      *(_QWORD *)a2 = v54;
      sub_237E2D1BC(&v61, v54 + 16);
      sub_237E2D1BC(&v58, v54 + 56);
      sub_237E2D1BC(&v55, v54 + 96);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v64);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v67);
      return;
    }
  }
  __break(1u);
}

void sub_237E75BB4(_OWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12[5];

  v2 = ClockFaceLook.identifier.getter();
  sub_237E7546C(v2, v3, (uint64_t)&v10);
  if (v11 != 2)
  {
    sub_237E7A90C(&v10, v12);
    sub_237E7A90C(v12, a1);
    return;
  }
  sub_237E2209C((uint64_t)&v10, &qword_25689AB68);
  sub_237E7B14C();
  v5 = *(_QWORD *)(v4 + 16);
  swift_bridgeObjectRelease();
  sub_237E7B14C();
  v7 = *(_QWORD *)(v6 + 16);
  if (v5 == 1)
  {
    if (!v7)
    {
LABEL_12:
      __break(1u);
      goto LABEL_13;
    }
    v8 = 32;
  }
  else
  {
    if (v7 < 2)
    {
LABEL_13:
      __break(1u);
      return;
    }
    v8 = 72;
  }
  sub_237E2CFE8(v6 + v8, (uint64_t)v12);
  swift_bridgeObjectRelease();
  sub_237E7B14C();
  if (!*(_QWORD *)(v9 + 16))
  {
    __break(1u);
    goto LABEL_12;
  }
  sub_237E2CFE8(v9 + 32, (uint64_t)a1);
  swift_bridgeObjectRelease();
  sub_237E2D1BC(v12, (uint64_t)a1 + 40);
}

float sub_237E75CB0(uint64_t a1, uint64_t a2)
{
  void *v2;
  double v4[2];

  v4[1] = *(double *)MEMORY[0x24BDAC8D0];
  v4[0] = 0.0;
  v2 = (void *)(*(uint64_t (**)(void))(a2 + 40))();
  objc_msgSend(v2, sel_getHue_saturation_brightness_alpha_, 0, v4, 0, 0);

  return v4[0];
}

uint64_t sub_237E75D34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _BYTE v28[120];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897E20);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v28[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  type metadata accessor for RollingClockViewModel();
  swift_allocObject();
  *(_QWORD *)(v1 + 16) = sub_237E19ED0();
  *(_OWORD *)(v1 + 24) = xmmword_237EE55A0;
  v7 = v1 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__solarPosition;
  v8 = type metadata accessor for CurrentLocationSolarPosition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = v2 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__colorPalette;
  *(_OWORD *)v9 = 0u;
  *(_OWORD *)(v9 + 16) = 0u;
  *(_OWORD *)(v9 + 32) = 0u;
  *(_OWORD *)(v9 + 48) = 0u;
  *(_OWORD *)(v9 + 64) = 0u;
  *(_DWORD *)(v9 + 80) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__isDebuggingHUDVisible) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__isDisplayStyleRedMode) = 0;
  v10 = v2 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__initialContext;
  *(_OWORD *)v10 = 0u;
  *(_OWORD *)(v10 + 16) = 0u;
  *(_OWORD *)(v10 + 32) = 0u;
  *(_OWORD *)(v10 + 48) = 0u;
  *(_OWORD *)(v10 + 64) = 0u;
  *(_OWORD *)(v10 + 80) = 0u;
  *(_QWORD *)(v10 + 96) = 255;
  *(_QWORD *)(v10 + 104) = 0;
  *(_QWORD *)(v10 + 112) = 0;
  *(_BYTE *)(v2 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__shouldRenderRedMode) = 0;
  v11 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v11, sel_bounds);
  v13 = v12;
  v15 = v14;

  CGSizeMake(v13 * 1.4 * 0.5, v13 * 1.4 * 0.5 / (v13 / v15));
  UISizeRoundToScale();
  v18 = (v16 + v16 - v13) * 0.5;
  v19 = (v17 + v17 - v15) * 0.5;
  v20 = v2 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__solarOrbit;
  *(_QWORD *)v20 = 0x3FE0000000000000;
  *(_QWORD *)(v20 + 8) = 0;
  *(double *)(v20 + 16) = v16 + v16;
  *(double *)(v20 + 24) = v17 + v17;
  *(double *)(v20 + 32) = v16;
  *(double *)(v20 + 40) = v17;
  *(double *)(v20 + 48) = v19;
  *(double *)(v20 + 56) = v18;
  *(double *)(v20 + 64) = v19;
  *(double *)(v20 + 72) = v18;
  *(double *)(v20 + 80) = v13;
  *(double *)(v20 + 88) = v15;
  *(_DWORD *)(v2 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__percentRedMode) = 0;
  *(_DWORD *)(v2 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__percentRedModeCurve) = 0;
  sub_237EE1F44();
  sub_237E2A1CC(a1, (uint64_t)v28);
  sub_237E760E4((uint64_t)v28);
  sub_237E2A1CC(a1, (uint64_t)v28);
  sub_237E760E4((uint64_t)v28);
  v21 = sub_237EE2C64();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v6, 1, 1, v21);
  v22 = swift_allocObject();
  swift_weakInit();
  sub_237EE2C4C();
  swift_retain();
  v23 = sub_237EE2C40();
  v24 = (_QWORD *)swift_allocObject();
  v25 = MEMORY[0x24BEE6930];
  v24[2] = v23;
  v24[3] = v25;
  v24[4] = v22;
  swift_release();
  sub_237EDA9E4((uint64_t)v6, (uint64_t)&unk_25689AB28, (uint64_t)v24);
  swift_release();
  sub_237E2A208(a1);
  return v2;
}

uint64_t sub_237E7602C()
{
  swift_getKeyPath();
  sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F20();
  swift_release();
  return swift_retain();
}

uint64_t sub_237E760AC(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + 16) = a2;
  swift_retain();
  return swift_release();
}

uint64_t sub_237E760E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t, uint64_t);
  int v22;
  uint64_t KeyPath;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(int *, _QWORD, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(int *, uint64_t, uint64_t, uint64_t);
  int v31;
  uint64_t v32;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t *v43;
  int v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[3];
  uint64_t v49;
  uint64_t v50;
  _QWORD v51[3];
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55[3];
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[40];
  int v59;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899D48);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CurrentLocationSolarPosition(0);
  v35 = *(_QWORD *)(v7 - 8);
  v36 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v34 = (uint64_t)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237E2A1CC(a1, (uint64_t)v55);
  swift_getKeyPath();
  v42 = v1;
  v43 = v55;
  v9 = v1 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel___observationRegistrar;
  v48[0] = v2;
  sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F14();
  swift_release();
  sub_237E2209C((uint64_t)v55, &qword_2568986E0);
  sub_237E2A1CC(a1, (uint64_t)v55);
  swift_getKeyPath();
  v48[0] = v2;
  sub_237EE1F20();
  swift_release();
  sub_237E75598((uint64_t)v55, (uint64_t)v48, *(float *)(v2 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__percentRedMode));
  swift_getKeyPath();
  v40 = v2;
  v41 = v48;
  v55[0] = v2;
  sub_237EE1F14();
  swift_release();
  sub_237E2209C((uint64_t)v48, &qword_25689AB00);
  v10 = *(_QWORD *)(a1 + 112);
  swift_getKeyPath();
  v38 = v2;
  v39 = v10;
  v55[0] = v2;
  sub_237EE1F14();
  swift_release();
  swift_getKeyPath();
  v55[0] = v2;
  v37 = v9;
  sub_237EE1F20();
  swift_release();
  v11 = v2 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__solarPosition;
  swift_beginAccess();
  sub_237E22004(v11, (uint64_t)v6, &qword_256899D48);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v6, 1, v36) == 1)
  {
    sub_237E2A208(a1);
    return sub_237E2209C((uint64_t)v6, &qword_256899D48);
  }
  v35 = a1;
  v13 = v34;
  sub_237E79A74((uint64_t)v6, v34);
  swift_getKeyPath();
  v55[0] = v2;
  sub_237EE1F20();
  swift_release();
  v14 = v2 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__colorPalette;
  swift_beginAccess();
  v36 = v14;
  result = sub_237E22004(v14, (uint64_t)v48, &qword_25689AB00);
  if (v49)
  {
    v15 = v52;
    v16 = v53;
    __swift_project_boxed_opaque_existential_1(v51, v52);
    v17 = *(void (**)(uint64_t))(v16 + 32);
    v46 = v15;
    v47 = v16;
    __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v45);
    v18 = type metadata accessor for SolarPosition(0);
    v17(v13);
    v19 = v49;
    v20 = v50;
    __swift_project_boxed_opaque_existential_1(v48, v49);
    v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 32);
    v56 = v19;
    v57 = v20;
    __swift_allocate_boxed_opaque_existential_0(v55);
    v21(v13, v18, v19, v20);
    v22 = v54;
    sub_237E2D1BC(&v45, (uint64_t)v58);
    v59 = v22;
    sub_237E79AC0((uint64_t)v48);
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    v33[-2] = v2;
    v33[-1] = v55;
    v48[0] = v2;
    v33[1] = MEMORY[0x24BEE4AE0] + 8;
    sub_237EE1F14();
    swift_release();
    sub_237E2209C((uint64_t)v55, &qword_25689AB00);
    swift_getKeyPath();
    v55[0] = v2;
    sub_237EE1F20();
    swift_release();
    result = sub_237E22004(v36, (uint64_t)v48, &qword_25689AB00);
    if (v49)
    {
      v44 = *(_DWORD *)(v13 + *(int *)(v18 + 24));
      v24 = v52;
      v25 = v53;
      __swift_project_boxed_opaque_existential_1(v51, v52);
      v26 = *(void (**)(int *, _QWORD, uint64_t, uint64_t))(v25 + 32);
      v46 = v24;
      v47 = v25;
      __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v45);
      v27 = MEMORY[0x24BEE14E8];
      v26(&v44, MEMORY[0x24BEE14E8], v24, v25);
      v28 = v49;
      v29 = v50;
      __swift_project_boxed_opaque_existential_1(v48, v49);
      v30 = *(void (**)(int *, uint64_t, uint64_t, uint64_t))(v29 + 32);
      v56 = v28;
      v57 = v29;
      __swift_allocate_boxed_opaque_existential_0(v55);
      v30(&v44, v27, v28, v29);
      v31 = v54;
      sub_237E2D1BC(&v45, (uint64_t)v58);
      v59 = v31;
      sub_237E79AC0((uint64_t)v48);
      v32 = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](v32);
      v33[-2] = v2;
      v33[-1] = v55;
      v48[0] = v2;
      sub_237EE1F14();
      swift_release();
      sub_237E2209C((uint64_t)v55, &qword_25689AB00);
      sub_237E2A208(v35);
      return sub_237E21F00(v13, type metadata accessor for CurrentLocationSolarPosition);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_237E76704@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  _QWORD v6[12];
  int v7;
  uint64_t v8;

  swift_getKeyPath();
  v6[0] = v1;
  sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F20();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__initialContext;
  swift_beginAccess();
  result = sub_237E22004(v3, (uint64_t)v6, &qword_2568986E0);
  if ((_BYTE)v7 == 0xFF)
  {
    __break(1u);
  }
  else
  {
    swift_getKeyPath();
    sub_237EE1F20();
    swift_release();
    v5 = *(_QWORD *)(v1 + 24);
    sub_237E28430((uint64_t)v6, a1);
    *(_QWORD *)(a1 + 112) = v5;
    *(_QWORD *)(a1 + 100) = v8;
    return sub_237E2A208((uint64_t)v6);
  }
  return result;
}

uint64_t sub_237E7682C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(_QWORD *, uint64_t, uint64_t, uint64_t);
  int v11;
  uint64_t KeyPath;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[4];
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24[5];
  _DWORD v25[14];

  v1 = v0;
  swift_getKeyPath();
  v24[0] = v0;
  sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F20();
  swift_release();
  v2 = v0 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__colorPalette;
  swift_beginAccess();
  result = sub_237E22004(v2, (uint64_t)v17, &qword_25689AB00);
  if (v18)
  {
    swift_getKeyPath();
    v24[0] = v1;
    sub_237EE1F20();
    swift_release();
    v16[0] = *(_QWORD *)(v1 + 24);
    v4 = v21;
    v5 = v22;
    __swift_project_boxed_opaque_existential_1(v20, v21);
    v6 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v5 + 32);
    v14 = v4;
    v15 = v5;
    __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v13);
    v7 = MEMORY[0x24BEE13C8];
    v6(v16, MEMORY[0x24BEE13C8], v4, v5);
    v8 = v18;
    v9 = v19;
    __swift_project_boxed_opaque_existential_1(v17, v18);
    v10 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v9 + 32);
    v24[3] = v8;
    v24[4] = v9;
    __swift_allocate_boxed_opaque_existential_0(v24);
    v10(v16, v7, v8, v9);
    v11 = v23;
    sub_237E2D1BC(&v13, (uint64_t)v25);
    v25[10] = v11;
    sub_237E79AC0((uint64_t)v17);
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    v17[0] = v1;
    sub_237EE1F14();
    swift_release();
    return sub_237E2209C((uint64_t)v24, &qword_25689AB00);
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_237E76A6C()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F20();
  swift_release();
  return *(double *)(v0 + 24);
}

double sub_237E76AE8@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  double result;

  v3 = *a1;
  swift_getKeyPath();
  sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F20();
  swift_release();
  result = *(double *)(v3 + 24);
  *a2 = result;
  return result;
}

uint64_t sub_237E76B6C()
{
  swift_getKeyPath();
  sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F14();
  return swift_release();
}

double sub_237E76C14()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F20();
  swift_release();
  return *(double *)(v0 + 32);
}

uint64_t sub_237E76C90(uint64_t result, double a2)
{
  *(double *)(result + 32) = a2;
  return result;
}

uint64_t sub_237E76C98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  int v20;
  uint64_t KeyPath;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(_DWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_DWORD *, uint64_t, uint64_t, uint64_t);
  int v29;
  uint64_t v30;
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  _DWORD v34[3];
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[3];
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45[3];
  uint64_t v46;
  uint64_t v47;
  _BYTE v48[40];
  int v49;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899D48);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CurrentLocationSolarPosition(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v9 = v0 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel___observationRegistrar;
  v45[0] = v1;
  sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  v33 = v9;
  sub_237EE1F20();
  swift_release();
  v10 = v1 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__solarPosition;
  swift_beginAccess();
  sub_237E22004(v10, (uint64_t)v4, &qword_256899D48);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    return sub_237E2209C((uint64_t)v4, &qword_256899D48);
  sub_237E79A74((uint64_t)v4, (uint64_t)v8);
  swift_getKeyPath();
  v45[0] = v1;
  sub_237EE1F20();
  swift_release();
  v12 = v1 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__colorPalette;
  swift_beginAccess();
  v32 = v12;
  result = sub_237E22004(v12, (uint64_t)v38, &qword_25689AB00);
  if (v39)
  {
    v13 = v42;
    v14 = v43;
    __swift_project_boxed_opaque_existential_1(v41, v42);
    v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 32);
    v36 = v13;
    v37 = v14;
    __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v35);
    v16 = type metadata accessor for SolarPosition(0);
    v15(v8, v16, v13, v14);
    v17 = v39;
    v18 = v40;
    __swift_project_boxed_opaque_existential_1(v38, v39);
    v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 32);
    v46 = v17;
    v47 = v18;
    __swift_allocate_boxed_opaque_existential_0(v45);
    v19(v8, v16, v17, v18);
    v20 = v44;
    sub_237E2D1BC(&v35, (uint64_t)v48);
    v49 = v20;
    sub_237E79AC0((uint64_t)v38);
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    v31[-2] = v1;
    v31[-1] = v45;
    v38[0] = v1;
    v31[1] = MEMORY[0x24BEE4AE0] + 8;
    sub_237EE1F14();
    v31[0] = 0;
    swift_release();
    sub_237E2209C((uint64_t)v45, &qword_25689AB00);
    swift_getKeyPath();
    v45[0] = v1;
    sub_237EE1F20();
    swift_release();
    result = sub_237E22004(v32, (uint64_t)v38, &qword_25689AB00);
    if (v39)
    {
      v34[0] = *(_DWORD *)&v8[*(int *)(v16 + 24)];
      v22 = v42;
      v23 = v43;
      __swift_project_boxed_opaque_existential_1(v41, v42);
      v24 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v23 + 32);
      v36 = v22;
      v37 = v23;
      __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v35);
      v25 = MEMORY[0x24BEE14E8];
      v24(v34, MEMORY[0x24BEE14E8], v22, v23);
      v26 = v39;
      v27 = v40;
      __swift_project_boxed_opaque_existential_1(v38, v39);
      v28 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v27 + 32);
      v46 = v26;
      v47 = v27;
      __swift_allocate_boxed_opaque_existential_0(v45);
      v28(v34, v25, v26, v27);
      v29 = v44;
      sub_237E2D1BC(&v35, (uint64_t)v48);
      v49 = v29;
      sub_237E79AC0((uint64_t)v38);
      v30 = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](v30);
      v31[-2] = v1;
      v31[-1] = v45;
      v38[0] = v1;
      sub_237EE1F14();
      swift_release();
      sub_237E2209C((uint64_t)v45, &qword_25689AB00);
      return sub_237E21F00((uint64_t)v8, type metadata accessor for CurrentLocationSolarPosition);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_237E77160@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  swift_getKeyPath();
  sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F20();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__solarPosition;
  swift_beginAccess();
  return sub_237E22004(v3, a1, &qword_256899D48);
}

uint64_t sub_237E77210(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899D48);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237E22004(a2, (uint64_t)v6, &qword_256899D48);
  v7 = a1 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__solarPosition;
  swift_beginAccess();
  sub_237E47284((uint64_t)v6, v7, &qword_256899D48);
  swift_endAccess();
  sub_237E76C98();
  return sub_237E2209C((uint64_t)v6, &qword_256899D48);
}

uint64_t sub_237E772E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  swift_getKeyPath();
  sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F20();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__colorPalette;
  swift_beginAccess();
  return sub_237E22004(v3, a1, &qword_25689AB00);
}

uint64_t sub_237E77398@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F20();
  swift_release();
  v4 = v3 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__colorPalette;
  swift_beginAccess();
  return sub_237E22004(v4, a2, &qword_25689AB00);
}

uint64_t sub_237E77448(uint64_t a1)
{
  _BYTE v2[88];

  sub_237E22004(a1, (uint64_t)v2, &qword_25689AB00);
  swift_getKeyPath();
  sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F14();
  swift_release();
  return sub_237E2209C((uint64_t)v2, &qword_25689AB00);
}

uint64_t sub_237E77508(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = a1 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__colorPalette;
  swift_beginAccess();
  sub_237E47284(a2, v3, &qword_25689AB00);
  return swift_endAccess();
}

uint64_t (*sub_237E77578())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_237E775BC()
{
  uint64_t v0;
  unsigned __int8 *v1;

  swift_getKeyPath();
  sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F20();
  swift_release();
  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__isDebuggingHUDVisible);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_237E77658@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  _BYTE *v4;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F20();
  swift_release();
  v4 = (_BYTE *)(v3 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__isDebuggingHUDVisible);
  result = swift_beginAccess();
  *a2 = *v4;
  return result;
}

uint64_t sub_237E776FC()
{
  swift_getKeyPath();
  sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F14();
  return swift_release();
}

void (*sub_237E7779C(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC11ClockPoster14SolarViewModel___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F20();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_237EE1F38();
  swift_release();
  v4[7] = sub_237E77578();
  return sub_237E7787C;
}

void sub_237E7787C(_QWORD *a1)
{
  _QWORD *v1;

  v1 = (_QWORD *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 56))(*a1, 0);
  *v1 = v1[4];
  swift_getKeyPath();
  sub_237EE1F2C();
  swift_release();
  free(v1);
}

double sub_237E778EC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  uint64_t v12;
  float v13;
  float v14;
  double v15;
  double v16;
  uint64_t v18;
  uint64_t v19;

  v18 = type metadata accessor for SolarPosition(0);
  MEMORY[0x24BDAC7A8](v18);
  v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for CurrentLocationSolarPosition(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899D48);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v19 = v0;
  sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F20();
  swift_release();
  v10 = *(void **)(v0 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__solarOrbit + 8);
  swift_getKeyPath();
  v19 = v0;
  v11 = v10;
  sub_237EE1F20();
  swift_release();
  v12 = v0 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__solarPosition;
  swift_beginAccess();
  sub_237E22004(v12, (uint64_t)v9, &qword_256899D48);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3))
  {
    sub_237E2209C((uint64_t)v9, &qword_256899D48);
    v13 = 3.1416;
  }
  else
  {
    sub_237E21EBC((uint64_t)v9, (uint64_t)v6, type metadata accessor for CurrentLocationSolarPosition);
    sub_237E2209C((uint64_t)v9, &qword_256899D48);
    sub_237E21EBC((uint64_t)v6, (uint64_t)v2, type metadata accessor for SolarPosition);
    sub_237E21F00((uint64_t)v6, type metadata accessor for CurrentLocationSolarPosition);
    v14 = *(float *)&v2[*(int *)(v18 + 24)];
    sub_237E21F00((uint64_t)v2, type metadata accessor for SolarPosition);
    v13 = (float)((float)(v14 + 0.5) * 3.1416) + (float)((float)(v14 + 0.5) * 3.1416);
  }
  __sincosf_stret(v13);
  UIPointRoundToScale();
  v16 = v15;

  return v16;
}

uint64_t sub_237E77BC0()
{
  return sub_237E78480((uint64_t)&unk_237EE9FA0, &OBJC_IVAR____TtC11ClockPoster14SolarViewModel__isDisplayStyleRedMode);
}

uint64_t sub_237E77BD4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_237E784FC(a1, &OBJC_IVAR____TtC11ClockPoster14SolarViewModel__isDisplayStyleRedMode, a2);
}

uint64_t sub_237E77BE8()
{
  swift_getKeyPath();
  sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F14();
  return swift_release();
}

uint64_t sub_237E77C88(uint64_t a1, char a2)
{
  uint64_t result;
  uint64_t KeyPath;

  swift_getKeyPath();
  sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F14();
  swift_release();
  swift_getKeyPath();
  sub_237EE1F14();
  result = swift_release();
  if ((a2 & 1) == 0)
  {
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    sub_237EE1F14();
    return swift_release();
  }
  return result;
}

void sub_237E77E08()
{
  void *v0;
  void *v1;
  id v2;
  id v3;

  v0 = (void *)*MEMORY[0x24BDE5D20];
  v1 = (void *)objc_opt_self();
  v2 = v0;
  v3 = objc_msgSend(v1, sel_functionWithName_, v2);

  qword_25689DF98 = (uint64_t)v3;
}

uint64_t sub_237E77E70(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t KeyPath;
  uint64_t v5;

  swift_getKeyPath();
  sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F20();
  swift_release();
  v3 = OBJC_IVAR____TtC11ClockPoster14SolarViewModel__shouldRenderRedMode;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__shouldRenderRedMode) & 1) == 0)
  {
    swift_getKeyPath();
    sub_237EE1F20();
    swift_release();
    if (*(float *)(v1 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__percentRedMode) != 0.0)
      goto LABEL_5;
  }
  swift_getKeyPath();
  sub_237EE1F20();
  swift_release();
  if (*(_BYTE *)(v1 + v3) == 1)
  {
    swift_getKeyPath();
    sub_237EE1F20();
    swift_release();
    if (*(float *)(v1 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__percentRedMode) != 1.0)
    {
LABEL_5:
      swift_getKeyPath();
      sub_237EE1F20();
      swift_release();
      swift_getKeyPath();
      sub_237EE1F20();
      swift_release();
      KeyPath = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](KeyPath);
      sub_237EE1F14();
      swift_release();
    }
  }
  swift_getKeyPath();
  sub_237EE1F20();
  swift_release();
  if (1.79769313e308 - a1 * 0.012 * *(double *)(v1 + 32) > a1)
  {
    swift_getKeyPath();
    sub_237EE1F20();
    swift_release();
  }
  v5 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v5);
  sub_237EE1F14();
  return swift_release();
}

uint64_t sub_237E781DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  swift_getKeyPath();
  sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F20();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__initialContext;
  swift_beginAccess();
  return sub_237E22004(v3, a1, &qword_2568986E0);
}

uint64_t sub_237E7828C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F20();
  swift_release();
  v4 = v3 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__initialContext;
  swift_beginAccess();
  return sub_237E22004(v4, a2, &qword_2568986E0);
}

uint64_t sub_237E7833C(uint64_t a1)
{
  _BYTE v2[120];

  sub_237E22004(a1, (uint64_t)v2, &qword_2568986E0);
  swift_getKeyPath();
  sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F14();
  swift_release();
  return sub_237E2209C((uint64_t)v2, &qword_2568986E0);
}

uint64_t sub_237E783FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = a1 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__initialContext;
  swift_beginAccess();
  sub_237E47284(a2, v3, &qword_2568986E0);
  return swift_endAccess();
}

uint64_t sub_237E7846C()
{
  return sub_237E78480((uint64_t)&unk_237EEA0B8, &OBJC_IVAR____TtC11ClockPoster14SolarViewModel__shouldRenderRedMode);
}

uint64_t sub_237E78480(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  swift_getKeyPath();
  sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F20();
  swift_release();
  return *(unsigned __int8 *)(v2 + *a2);
}

uint64_t sub_237E784FC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X4>, _BYTE *a3@<X8>)
{
  uint64_t v5;
  uint64_t result;

  v5 = *a1;
  swift_getKeyPath();
  sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F20();
  result = swift_release();
  *a3 = *(_BYTE *)(v5 + *a2);
  return result;
}

uint64_t sub_237E7858C()
{
  swift_getKeyPath();
  sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F14();
  return swift_release();
}

id sub_237E7862C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _OWORD *v3;
  void *v4;
  __int128 v5;
  __int128 v6;

  swift_getKeyPath();
  sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F20();
  swift_release();
  v3 = (_OWORD *)(v1 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__solarOrbit);
  v4 = *(void **)(v1 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__solarOrbit + 8);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__solarOrbit);
  *(_QWORD *)(a1 + 8) = v4;
  v5 = v3[2];
  *(_OWORD *)(a1 + 16) = v3[1];
  *(_OWORD *)(a1 + 32) = v5;
  v6 = v3[4];
  *(_OWORD *)(a1 + 48) = v3[3];
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = v3[5];
  return v4;
}

id sub_237E786DC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  _OWORD *v4;
  void *v5;
  __int128 v6;
  __int128 v7;

  v3 = *a1;
  swift_getKeyPath();
  sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F20();
  swift_release();
  v4 = (_OWORD *)(v3 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__solarOrbit);
  v5 = *(void **)(v3 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__solarOrbit + 8);
  *(_QWORD *)a2 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__solarOrbit);
  *(_QWORD *)(a2 + 8) = v5;
  v6 = v4[2];
  *(_OWORD *)(a2 + 16) = v4[1];
  *(_OWORD *)(a2 + 32) = v6;
  v7 = v4[4];
  *(_OWORD *)(a2 + 48) = v4[3];
  *(_OWORD *)(a2 + 64) = v7;
  *(_OWORD *)(a2 + 80) = v4[5];
  return v5;
}

uint64_t sub_237E7878C(_OWORD *a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  _OWORD v5[6];

  v1 = a1[3];
  v5[2] = a1[2];
  v5[3] = v1;
  v2 = a1[5];
  v5[4] = a1[4];
  v5[5] = v2;
  v3 = a1[1];
  v5[0] = *a1;
  v5[1] = v3;
  swift_getKeyPath();
  sub_237E7A32C((uint64_t)v5);
  sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F14();
  sub_237E7A354((uint64_t)v5);
  return swift_release();
}

float sub_237E78850()
{
  return sub_237E78C30((uint64_t)&unk_237EEA068, &OBJC_IVAR____TtC11ClockPoster14SolarViewModel__percentRedMode);
}

uint64_t sub_237E78864()
{
  swift_getKeyPath();
  sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F14();
  return swift_release();
}

uint64_t sub_237E7890C(uint64_t a1, float a2)
{
  uint64_t v3;
  void *v4;
  double v5;
  uint64_t KeyPath;

  v3 = OBJC_IVAR____TtC11ClockPoster14SolarViewModel__percentRedMode;
  *(float *)(a1 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__percentRedMode) = a2;
  if (qword_256897B40 != -1)
    swift_once();
  v4 = (void *)qword_25689DF98;
  swift_getKeyPath();
  sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F20();
  swift_release();
  LODWORD(v5) = *(_DWORD *)(a1 + v3);
  objc_msgSend(v4, sel__solveForInput_, v5);
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  sub_237EE1F14();
  return swift_release();
}

uint64_t sub_237E78A68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  int v3;
  uint64_t KeyPath;
  _QWORD v5[5];
  uint64_t v6;
  _QWORD v7[5];
  _DWORD v8[12];

  swift_getKeyPath();
  v7[0] = v0;
  sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F20();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__colorPalette;
  swift_beginAccess();
  result = sub_237E22004(v1, (uint64_t)v5, &qword_25689AB00);
  if (v5[3])
  {
    swift_getKeyPath();
    v7[0] = v0;
    sub_237EE1F20();
    swift_release();
    v3 = *(_DWORD *)(v0 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__percentRedModeCurve);
    sub_237E2CFE8((uint64_t)&v6, (uint64_t)v8);
    sub_237E2CFE8((uint64_t)v5, (uint64_t)v7);
    v8[10] = v3;
    sub_237E79AC0((uint64_t)v5);
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    v5[0] = v0;
    sub_237EE1F14();
    swift_release();
    return sub_237E2209C((uint64_t)v7, &qword_25689AB00);
  }
  else
  {
    __break(1u);
  }
  return result;
}

float sub_237E78C1C()
{
  return sub_237E78C30((uint64_t)&unk_237EEA040, &OBJC_IVAR____TtC11ClockPoster14SolarViewModel__percentRedModeCurve);
}

float sub_237E78C30(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  swift_getKeyPath();
  sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F20();
  swift_release();
  return *(float *)(v2 + *a2);
}

float sub_237E78CAC@<S0>(uint64_t *a1@<X0>, _QWORD *a2@<X4>, float *a3@<X8>)
{
  uint64_t v5;
  float result;

  v5 = *a1;
  swift_getKeyPath();
  sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F20();
  swift_release();
  result = *(float *)(v5 + *a2);
  *a3 = result;
  return result;
}

uint64_t sub_237E78D3C()
{
  swift_getKeyPath();
  sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F14();
  return swift_release();
}

uint64_t sub_237E78DE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  sub_237E2209C(v0 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__solarPosition, &qword_256899D48);
  sub_237E2209C(v0 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__colorPalette, &qword_25689AB00);
  sub_237E2209C(v0 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__initialContext, &qword_2568986E0);

  v1 = v0 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel___observationRegistrar;
  v2 = sub_237EE1F50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_237E78E98()
{
  return type metadata accessor for SolarViewModel();
}

uint64_t type metadata accessor for SolarViewModel()
{
  uint64_t result;

  result = qword_25689A6B0;
  if (!qword_25689A6B0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_237E78EDC()
{
  unint64_t v0;
  unint64_t v1;

  sub_237E78FBC();
  if (v0 <= 0x3F)
  {
    sub_237EE1F50();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

void sub_237E78FBC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25689A6C0)
  {
    type metadata accessor for CurrentLocationSolarPosition(255);
    v0 = sub_237EE2ED4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25689A6C0);
  }
}

uint64_t destroy for SolarViewModel.ColorPalette(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  return __swift_destroy_boxed_opaque_existential_1Tm(a1 + 40);
}

uint64_t initializeWithCopy for SolarViewModel.ColorPalette(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  return a1;
}

uint64_t assignWithCopy for SolarViewModel.ColorPalette(uint64_t a1, uint64_t a2)
{
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  return a1;
}

__n128 __swift_memcpy84_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for SolarViewModel.ColorPalette(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for SolarViewModel.ColorPalette(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 84))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SolarViewModel.ColorPalette(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 80) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 84) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 84) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SolarViewModel.ColorPalette()
{
  return &type metadata for SolarViewModel.ColorPalette;
}

uint64_t initializeWithCopy for SolarContext(uint64_t a1, uint64_t a2)
{
  int v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v4 = *(unsigned __int8 *)(a2 + 96);
  if (v4 == 2)
  {
    v7 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
    v8 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 40, a2 + 40);
    v9 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v9;
    *(_BYTE *)(a1 + 96) = 2;
    swift_bridgeObjectRetain();
  }
  else if (v4 == 1)
  {
    v10 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v10;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_BYTE *)(a1 + 96) = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else if (*(_BYTE *)(a2 + 96))
  {
    v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
    v12 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v12;
    v13 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v13;
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v5;
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    v6 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v6;
    *(_BYTE *)(a1 + 96) = 0;
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)(a1 + 100) = *(_QWORD *)(a2 + 100);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  return a1;
}

uint64_t assignWithCopy for SolarContext(uint64_t a1, __int128 *a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  if ((__int128 *)a1 != a2)
  {
    sub_237E2846C(a1);
    v4 = *((unsigned __int8 *)a2 + 96);
    if (v4 == 2)
    {
      v6 = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
      v7 = *((_QWORD *)a2 + 8);
      *(_QWORD *)(a1 + 64) = v7;
      *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, (uint64_t)a2 + 40);
      *(_QWORD *)(a1 + 80) = *((_QWORD *)a2 + 10);
      *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
      *(_BYTE *)(a1 + 96) = 2;
      swift_bridgeObjectRetain();
    }
    else if (v4 == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
      *(_BYTE *)(a1 + 96) = 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else if (*((_BYTE *)a2 + 96))
    {
      v8 = *a2;
      v9 = a2[2];
      *(_OWORD *)(a1 + 16) = a2[1];
      *(_OWORD *)(a1 + 32) = v9;
      *(_OWORD *)a1 = v8;
      v10 = a2[3];
      v11 = a2[4];
      v12 = a2[5];
      *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
      *(_OWORD *)(a1 + 64) = v11;
      *(_OWORD *)(a1 + 80) = v12;
      *(_OWORD *)(a1 + 48) = v10;
    }
    else
    {
      v5 = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 24) = v5;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v5 - 8))(a1, a2);
      *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
      *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
      *(_BYTE *)(a1 + 96) = 0;
      swift_bridgeObjectRetain();
    }
  }
  *(_DWORD *)(a1 + 100) = *((_DWORD *)a2 + 25);
  *(_DWORD *)(a1 + 104) = *((_DWORD *)a2 + 26);
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  return a1;
}

__n128 __swift_memcpy120_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for SolarContext(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;

  if (a1 != a2)
  {
    sub_237E2846C(a1);
    v4 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v4;
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
  }
  *(_QWORD *)(a1 + 100) = *(_QWORD *)(a2 + 100);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for SolarContext(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 120))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 96);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SolarContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 120) = 0;
    if (a2)
      *(_BYTE *)(result + 96) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SolarContext()
{
  return &type metadata for SolarContext;
}

unint64_t sub_237E795E4(uint64_t a1)
{
  unint64_t result;

  result = sub_237E79608();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_237E79608()
{
  unint64_t result;

  result = qword_25689AA30;
  if (!qword_25689AA30)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE9E34, &type metadata for SolarContext);
    atomic_store(result, (unint64_t *)&qword_25689AA30);
  }
  return result;
}

unint64_t sub_237E7964C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_237E79688();
  a1[2] = sub_237E796CC();
  a1[3] = sub_237E79710();
  result = sub_237E79754();
  a1[4] = result;
  return result;
}

unint64_t sub_237E79688()
{
  unint64_t result;

  result = qword_25689AA98;
  if (!qword_25689AA98)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE9E5C, &type metadata for SolarContext);
    atomic_store(result, (unint64_t *)&qword_25689AA98);
  }
  return result;
}

unint64_t sub_237E796CC()
{
  unint64_t result;

  result = qword_25689AAA0;
  if (!qword_25689AAA0)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE9EC8, &type metadata for SolarContext);
    atomic_store(result, (unint64_t *)&qword_25689AAA0);
  }
  return result;
}

unint64_t sub_237E79710()
{
  unint64_t result;

  result = qword_25689AAA8;
  if (!qword_25689AAA8)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE9EA0, &type metadata for SolarContext);
    atomic_store(result, (unint64_t *)&qword_25689AAA8);
  }
  return result;
}

unint64_t sub_237E79754()
{
  unint64_t result;

  result = qword_25689AAB0;
  if (!qword_25689AAB0)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE9E78, &type metadata for SolarContext);
    atomic_store(result, (unint64_t *)&qword_25689AAB0);
  }
  return result;
}

uint64_t sub_237E79798()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F20();
  swift_release();
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__isDisplayStyleRedMode);
}

uint64_t sub_237E79824()
{
  swift_getKeyPath();
  sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F14();
  return swift_release();
}

void (*sub_237E798C4(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_237E7779C(v2);
  return sub_237E23288;
}

uint64_t sub_237E7990C(uint64_t a1)
{
  uint64_t result;

  result = sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_237E79940(uint64_t a1)
{
  uint64_t result;

  result = sub_237E79974(&qword_25689AAF8, (uint64_t)&unk_237EE9F48);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_237E79974(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for SolarViewModel();
    result = MEMORY[0x23B8271D0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_237E799B4@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_237E784FC(a1, &OBJC_IVAR____TtC11ClockPoster14SolarViewModel__isDisplayStyleRedMode, a2);
}

void sub_237E799DC()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__isDisplayStyleRedMode) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_237E799FC()
{
  return sub_237E79A10();
}

uint64_t sub_237E79A10()
{
  uint64_t v0;
  char v1;
  _BYTE *v2;
  uint64_t result;

  v1 = *(_BYTE *)(v0 + 24);
  v2 = (_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__isDebuggingHUDVisible);
  result = swift_beginAccess();
  *v2 = v1;
  return result;
}

uint64_t sub_237E79A74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CurrentLocationSolarPosition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_237E79AC0(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 40);
  return a1;
}

uint64_t sub_237E79AEC()
{
  uint64_t v0;

  return sub_237E77508(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

float sub_237E79B04(uint64_t a1, uint64_t a2)
{
  void *v2;
  double v4[2];

  v4[1] = *(double *)MEMORY[0x24BDAC8D0];
  v4[0] = 0.0;
  v2 = (void *)(*(uint64_t (**)(void))(a2 + 40))();
  objc_msgSend(v2, sel_getHue_saturation_brightness_alpha_, v4, 0, 0, 0);

  return v4[0];
}

uint64_t sub_237E79B88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[6] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899D48);
  v4[7] = v5;
  v4[8] = *(_QWORD *)(v5 - 8);
  v4[9] = swift_task_alloc();
  v4[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689AB30);
  v4[11] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689AB38);
  v4[12] = v6;
  v4[13] = *(_QWORD *)(v6 - 8);
  v4[14] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689AB40);
  v4[15] = v7;
  v4[16] = *(_QWORD *)(v7 - 8);
  v4[17] = swift_task_alloc();
  v4[18] = sub_237EE2C4C();
  v4[19] = sub_237EE2C40();
  v4[20] = sub_237EE2C28();
  v4[21] = v8;
  return swift_task_switch();
}

uint64_t sub_237E79CB0()
{
  uint64_t v0;

  if (qword_256897AE8 != -1)
    swift_once();
  *(_QWORD *)(v0 + 176) = qword_25689DF10;
  return swift_task_switch();
}

uint64_t sub_237E79D14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_currentLocationSolarPositionStream);
  swift_retain();
  sub_237E90B1C(v3, v1, v2);
  return swift_task_switch();
}

uint64_t sub_237E79D78()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[13];
  v1 = v0[14];
  v3 = v0[12];
  sub_237EE2C88();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  v0[23] = 0;
  v0[24] = sub_237EE2C40();
  v4 = (_QWORD *)swift_task_alloc();
  v0[25] = v4;
  *v4 = v0;
  v4[1] = sub_237E79E44;
  return sub_237EE2C94();
}

uint64_t sub_237E79E44()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_237E79E98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 64) + 48))(v1, 1, *(_QWORD *)(v0 + 56)) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
    swift_release();
  }
  else
  {
    sub_237E7A4C4(v1, *(_QWORD *)(v0 + 80));
    Strong = swift_weakLoadStrong();
    if (Strong)
    {
      v3 = Strong;
      v4 = *(_QWORD *)(v0 + 184);
      v6 = *(_QWORD *)(v0 + 72);
      v5 = *(_QWORD *)(v0 + 80);
      sub_237E22004(v5, v6, &qword_256899D48);
      swift_getKeyPath();
      v7 = swift_task_alloc();
      *(_QWORD *)(v7 + 16) = v3;
      *(_QWORD *)(v7 + 24) = v6;
      *(_QWORD *)(v0 + 40) = v3;
      sub_237E79974(&qword_256898680, (uint64_t)&unk_237EE9F0C);
      sub_237EE1F14();
      swift_release();
      swift_task_dealloc();
      sub_237E2209C(v6, &qword_256899D48);
      swift_release();
      sub_237E2209C(v5, &qword_256899D48);
      *(_QWORD *)(v0 + 184) = v4;
      *(_QWORD *)(v0 + 192) = sub_237EE2C40();
      v8 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 200) = v8;
      *v8 = v0;
      v8[1] = sub_237E79E44;
      return sub_237EE2C94();
    }
    v11 = *(_QWORD *)(v0 + 128);
    v10 = *(_QWORD *)(v0 + 136);
    v12 = *(_QWORD *)(v0 + 120);
    v13 = *(_QWORD *)(v0 + 80);
    swift_release();
    sub_237E2209C(v13, &qword_256899D48);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_237E7A0E0(uint64_t result)
{
  unsigned int v1;
  unsigned int v2;
  unint64_t v3;
  unsigned int v4;
  int64_t v5;
  uint64_t v6;

  if ((_DWORD)result)
  {
    v1 = result;
    v2 = result;
    v6 = 0;
    MEMORY[0x23B8272B4](&v6, 8);
    v3 = v6 * (unint64_t)v2;
    result = HIDWORD(v3);
    if (v3 < v1)
    {
      v4 = -v1 % v1;
      if (v4 > v3)
      {
        do
        {
          v6 = 0;
          MEMORY[0x23B8272B4](&v6, 8);
          v5 = v6 * (unint64_t)v2;
        }
        while (v4 > v5);
        return v5 >> 32;
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_237E7A16C()
{
  unint64_t result;

  result = qword_25689AB10;
  if (!qword_25689AB10)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEA284, &type metadata for SolarContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25689AB10);
  }
  return result;
}

BOOL sub_237E7A1B0(uint64_t a1, uint64_t a2)
{
  return (_s11ClockPoster0A8FaceLookO2eeoiySbAC_ACtFZ_0() & 1) != 0
      && *(float *)(a1 + 100) == *(float *)(a2 + 100)
      && *(float *)(a1 + 104) == *(float *)(a2 + 104)
      && *(double *)(a1 + 112) == *(double *)(a2 + 112);
}

float sub_237E7A210@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  return sub_237E78CAC(a1, &OBJC_IVAR____TtC11ClockPoster14SolarViewModel__percentRedModeCurve, a2);
}

uint64_t sub_237E7A238()
{
  return sub_237E7A290();
}

float sub_237E7A24C@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  return sub_237E78CAC(a1, &OBJC_IVAR____TtC11ClockPoster14SolarViewModel__percentRedMode, a2);
}

uint64_t sub_237E7A274()
{
  uint64_t v0;

  return sub_237E7890C(*(_QWORD *)(v0 + 16), *(float *)(v0 + 24));
}

uint64_t sub_237E7A290()
{
  uint64_t v0;

  *(_DWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__percentRedModeCurve) = *(_DWORD *)(v0 + 24);
  return sub_237E78A68();
}

void sub_237E7A2D4()
{
  uint64_t v0;
  __int128 *v1;
  uint64_t v2;
  void *v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v1 = *(__int128 **)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__solarOrbit;
  v3 = *(void **)(v2 + 8);
  v4 = *v1;
  *(_OWORD *)(v2 + 16) = v1[1];
  v5 = v1[5];
  v7 = v1[2];
  v6 = v1[3];
  *(_OWORD *)(v2 + 64) = v1[4];
  *(_OWORD *)(v2 + 80) = v5;
  *(_OWORD *)(v2 + 32) = v7;
  *(_OWORD *)(v2 + 48) = v6;
  *(_OWORD *)v2 = v4;
  sub_237E7A32C((uint64_t)v1);

}

uint64_t sub_237E7A32C(uint64_t a1)
{
  id v2;

  v2 = *(id *)(a1 + 8);
  return a1;
}

uint64_t sub_237E7A354(uint64_t a1)
{

  return a1;
}

uint64_t sub_237E7A37C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_237E784FC(a1, &OBJC_IVAR____TtC11ClockPoster14SolarViewModel__shouldRenderRedMode, a2);
}

void sub_237E7A3A4()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__shouldRenderRedMode) = *(_BYTE *)(v0 + 24);
}

uint64_t sub_237E7A3C4()
{
  uint64_t v0;

  return sub_237E783FC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_237E7A3EC()
{
  return sub_237E7A524();
}

uint64_t sub_237E7A408()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_237E7A42C()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_237E7A458(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_237E20844;
  return sub_237E79B88(a1, v4, v5, v6);
}

uint64_t sub_237E7A4C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899D48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_237E7A50C()
{
  uint64_t v0;

  return sub_237E77210(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_237E7A524()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + 24) = *(_QWORD *)(v0 + 24);
  return sub_237E7682C();
}

uint64_t sub_237E7A558(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for SolarViewModel.Style(a2, a1);
  return a2;
}

uint64_t sub_237E7A58C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

unint64_t sub_237E7A5B0()
{
  unint64_t result;

  result = qword_25689AB48;
  if (!qword_25689AB48)
  {
    result = MEMORY[0x23B8271D0](&unk_237EE7AF8, &type metadata for PerlinNoiseGenerator);
    atomic_store(result, (unint64_t *)&qword_25689AB48);
  }
  return result;
}

uint64_t sub_237E7A5F4()
{
  return swift_deallocObject();
}

unint64_t sub_237E7A604()
{
  unint64_t result;

  result = qword_25689AB50;
  if (!qword_25689AB50)
  {
    result = MEMORY[0x23B8271D0](&unk_237EED430, &type metadata for ColorProvider);
    atomic_store(result, (unint64_t *)&qword_25689AB50);
  }
  return result;
}

uint64_t sub_237E7A648()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 96);
  return swift_deallocObject();
}

uint64_t sub_237E7A67C(uint64_t a1)
{
  int64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    sub_237E62730(0, v2, 0);
    __asm { BR              X9 }
  }
  return sub_237E36C20(MEMORY[0x24BEE4AF8]);
}

uint64_t sub_237E7A7CC(float a1, float a2)
{
  uint64_t inited;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25689AB60);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_237EE5590;
  strcpy((char *)(inited + 32), "fff?");
  *(float *)(inited + 40) = a1;
  *(_DWORD *)(inited + 44) = 0;
  *(_BYTE *)(inited + 48) = 1;
  *(float *)(inited + 52) = a2;
  *(_DWORD *)(inited + 56) = 1063675494;
  *(_BYTE *)(inited + 60) = 2;
  *(float *)(inited + 64) = a2;
  *(_DWORD *)(inited + 68) = 1036831949;
  *(_BYTE *)(inited + 72) = 3;
  *(float *)(inited + 76) = a1;
  v5 = sub_237E7A67C(inited);
  swift_setDeallocating();
  return v5;
}

uint64_t sub_237E7A888(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 24) >= 0xFFFFFFFFuLL)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 40);
  }
  return a1;
}

unint64_t sub_237E7A8C8()
{
  unint64_t result;

  result = qword_25689AB58;
  if (!qword_25689AB58)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEB110, &type metadata for ColorCurve);
    atomic_store(result, (unint64_t *)&qword_25689AB58);
  }
  return result;
}

_OWORD *sub_237E7A90C(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;

  *a2 = *a1;
  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[4];
  a2[3] = a1[3];
  a2[4] = v4;
  a2[1] = v2;
  a2[2] = v3;
  return a2;
}

uint64_t destroy for SolarViewModel.Style(uint64_t result)
{
  uint64_t v1;

  if (*(_QWORD *)(result + 24) >= 0xFFFFFFFFuLL)
  {
    v1 = result;
    __swift_destroy_boxed_opaque_existential_1Tm(result);
    return __swift_destroy_boxed_opaque_existential_1Tm(v1 + 40);
  }
  return result;
}

uint64_t initializeWithCopy for SolarViewModel.Style(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v4 = *(_QWORD *)(a2 + 24);
  if (v4 < 0xFFFFFFFF)
  {
    v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
  }
  else
  {
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
    v6 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 64) = v6;
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 40, a2 + 40);
  }
  return a1;
}

uint64_t assignWithCopy for SolarViewModel.Style(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v4 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(_QWORD *)(a1 + 24) = v4;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
      v5 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 64) = v5;
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v6 = *(_OWORD *)(a2 + 16);
    v7 = *(_OWORD *)(a2 + 32);
    v8 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v8;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 32) = v7;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1);
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 40);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for SolarViewModel.Style(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  if (*(_QWORD *)(a1 + 24) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 24);
  __swift_destroy_boxed_opaque_existential_1Tm(a1);
  if (v4 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(a1 + 40);
LABEL_5:
    v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    return a1;
  }
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for SolarViewModel.Style(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 80))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SolarViewModel.Style(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2 + 1;
  }
  return result;
}

uint64_t sub_237E7AC5C(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

double sub_237E7AC74(uint64_t a1, int a2)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 72) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 24) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for SolarViewModel.Style()
{
  return &type metadata for SolarViewModel.Style;
}

uint64_t storeEnumTagSinglePayload for SolarContext.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_237E7AD08 + 4 * byte_237EE9D79[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_237E7AD3C + 4 * byte_237EE9D74[v4]))();
}

uint64_t sub_237E7AD3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237E7AD44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237E7AD4CLL);
  return result;
}

uint64_t sub_237E7AD58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237E7AD60);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_237E7AD64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237E7AD6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SolarContext.CodingKeys()
{
  return &type metadata for SolarContext.CodingKeys;
}

unint64_t sub_237E7AD8C()
{
  unint64_t result;

  result = qword_25689AB70;
  if (!qword_25689AB70)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEA25C, &type metadata for SolarContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25689AB70);
  }
  return result;
}

unint64_t sub_237E7ADD4()
{
  unint64_t result;

  result = qword_25689AB78;
  if (!qword_25689AB78)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEA194, &type metadata for SolarContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25689AB78);
  }
  return result;
}

unint64_t sub_237E7AE1C()
{
  unint64_t result;

  result = qword_25689AB80;
  if (!qword_25689AB80)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEA1BC, &type metadata for SolarContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25689AB80);
  }
  return result;
}

uint64_t sub_237E7AE60()
{
  unint64_t v0;

  v0 = sub_237EE30F0();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_237E7AEA8()
{
  return sub_237E79AEC();
}

uint64_t sub_237E7AEBC()
{
  return sub_237E7A274();
}

uint64_t sub_237E7AED0()
{
  return sub_237E7A3C4();
}

void sub_237E7AEE4()
{
  sub_237E799DC();
}

void sub_237E7AEF8()
{
  sub_237E7A3A4();
}

uint64_t ClockFaceLook.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD v9[6];
  char v10;

  v1 = v0;
  memset(v9, 0, sizeof(v9));
  v10 = 3;
  v2 = _s11ClockPoster0A8FaceLookO2eeoiySbAC_ACtFZ_0();
  sub_237E2846C((uint64_t)v9);
  if ((v2 & 1) != 0)
    return 0x6D6F747375636E75;
  sub_237E7B26C();
  v3 = v4;
  v6 = v5;
  sub_237E28430(v1, (uint64_t)v9);
  if (!v6)
  {
    sub_237E7B14C();
    v3 = sub_237E8A630(v7);
    swift_bridgeObjectRelease();
  }
  sub_237E2846C((uint64_t)v9);
  return v3;
}

uint64_t sub_237E7AFE0(uint64_t a1)
{
  uint64_t v2;

  v2 = MEMORY[0x23B8271D0](&unk_237EE6D20, a1);
  return sub_237E7B024(a1, v2);
}

uint64_t sub_237E7B024(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v8 = (char *)&v11 - v7;
  (*(void (**)(uint64_t, uint64_t, __n128))(a2 + 40))(a1, a2, v6);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 72))(AssociatedTypeWitness, AssociatedConformanceWitness);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, AssociatedTypeWitness);
}

uint64_t sub_237E7B108(uint64_t a1)
{
  uint64_t v2;

  v2 = MEMORY[0x23B8271D0](&unk_237EE9F48, a1);
  return sub_237E7B024(a1, v2);
}

void sub_237E7B14C()
{
  uint64_t v0;
  _BYTE v1[104];

  sub_237E28430(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_237E7B18C()
{
  uint64_t v0;
  __int128 v2[2];
  __int128 v3;

  swift_bridgeObjectRelease();
  sub_237E2D1BC(&v3, (uint64_t)v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6468);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_237EE55E0;
  sub_237E2D1BC(v2, v0 + 32);
  return v0;
}

void sub_237E7B26C()
{
  uint64_t v0;
  _BYTE v1[104];

  sub_237E28430(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_237E7B2AC()
{
  uint64_t v0;
  _QWORD v2[17];

  v0 = v2[5];
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v2);
  return v0;
}

void ClockFaceLook.thumbnailView.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v3[104];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6548);
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_237EE1FB0();
  MEMORY[0x24BDAC7A8](v2);
  sub_237E28430(v0, (uint64_t)v3);
  __asm { BR              X10 }
}

id sub_237E7B3A8()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  id v5;
  void *v6;

  swift_bridgeObjectRelease();
  sub_237E2D1BC((__int128 *)(v0 - 168), v0 - 208);
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBDB00]), sel_init);
  v2 = *(_QWORD *)(v0 - 184);
  v3 = *(_QWORD *)(v0 - 176);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 - 208), v2);
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 40);
  v5 = v1;
  v6 = (void *)v4(v2, v3);
  objc_msgSend(v5, sel_setBackgroundColor_, v6);

  __swift_destroy_boxed_opaque_existential_1Tm(v0 - 208);
  return v5;
}

id ClockFaceLook.primaryUIColor.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  uint64_t v32;
  id v33;
  void *v34;
  id v35;
  uint64_t v37;
  uint64_t v38;
  __int128 aBlock;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  char v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6548);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v37 - v6;
  v8 = sub_237EE1FB0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v37 - v13;
  sub_237E7B14C();
  if (*(_QWORD *)(v15 + 16))
  {
    sub_237E2CFE8(v15 + 32, (uint64_t)&v46);
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v47 + 1))
    {
      sub_237E2D1BC(&v46, (uint64_t)&aBlock);
      v16 = *((_QWORD *)&v40 + 1);
      v17 = v41;
      __swift_project_boxed_opaque_existential_1(&aBlock, *((uint64_t *)&v40 + 1));
      v18 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 40))(v16, v17);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&aBlock);
      return v18;
    }
  }
  else
  {
    v48 = 0;
    v46 = 0u;
    v47 = 0u;
    swift_bridgeObjectRelease();
  }
  sub_237E2209C((uint64_t)&v46, &qword_25689AB88);
  v43 = 0u;
  v44 = 0u;
  v41 = 0u;
  v42 = 0u;
  aBlock = 0u;
  v40 = 0u;
  v45 = 3;
  v19 = _s11ClockPoster0A8FaceLookO2eeoiySbAC_ACtFZ_0();
  sub_237E2846C((uint64_t)&aBlock);
  if ((v19 & 1) != 0)
  {
    if (qword_2542C6458 != -1)
      swift_once();
    v20 = qword_2542C64F8 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_data_private;
    swift_beginAccess();
    sub_237E22004(v20, (uint64_t)v7, &qword_2542C6548);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_237E6072C((uint64_t)v14);
      sub_237E2209C((uint64_t)v7, &qword_2542C6548);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
    }
    v22 = sub_237EE1F98();
    v23 = sub_237EE2D90();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_237E17000, v22, v23, "This primaryUIColor shouldn't be used for uncustomizable looks.", v24, 2u);
      MEMORY[0x23B8272A8](v24, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  }
  else
  {
    if (qword_2542C6458 != -1)
      swift_once();
    v21 = qword_2542C64F8 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_data_private;
    swift_beginAccess();
    sub_237E22004(v21, (uint64_t)v5, &qword_2542C6548);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v5, 1, v8) == 1)
    {
      sub_237E6072C((uint64_t)v12);
      sub_237E2209C((uint64_t)v5, &qword_2542C6548);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v5, v8);
    }
    sub_237E28430(v1, (uint64_t)&aBlock);
    v25 = sub_237EE1F98();
    v26 = sub_237EE2D90();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v38 = v28;
      *(_DWORD *)v27 = 136446210;
      v29 = sub_237E269C0();
      v37 = sub_237E2A660(v29, v30, &v38);
      sub_237EE2EE0();
      swift_bridgeObjectRelease();
      sub_237E2846C((uint64_t)&aBlock);
      _os_log_impl(&dword_237E17000, v25, v26, "Missing color for %{public}s", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x23B8272A8](v28, -1, -1);
      MEMORY[0x23B8272A8](v27, -1, -1);
    }
    else
    {
      sub_237E2846C((uint64_t)&aBlock);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  v31 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = v31;
  v33 = objc_allocWithZone(MEMORY[0x24BEBD4B8]);
  *(_QWORD *)&v41 = sub_237E7DAD8;
  *((_QWORD *)&v41 + 1) = v32;
  *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v40 = sub_237E7D770;
  *((_QWORD *)&v40 + 1) = &block_descriptor_5;
  v34 = _Block_copy(&aBlock);
  v35 = v31;
  v18 = objc_msgSend(v33, sel_initWithDynamicProvider_, v34);
  _Block_release(v34);

  swift_release();
  return v18;
}

uint64_t ClockFaceLook.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE v6[48];

  ClockFaceLook.identifier.getter();
  sub_237EE2ACC();
  swift_bridgeObjectRelease();
  sub_237E7B14C();
  v1 = *(_QWORD *)(v0 + 16);
  if (!v1)
    return swift_bridgeObjectRelease();
  v2 = v0 + 32;
  do
  {
    sub_237E2CFE8(v2, (uint64_t)v6);
    sub_237E2CFE8((uint64_t)v6, (uint64_t)&v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6540);
    if (swift_dynamicCast())
    {
      sub_237EE3288();
      sub_237EE3288();
      sub_237EE3288();
      sub_237EE3288();
    }
    sub_237E2CFE8((uint64_t)v6, (uint64_t)&v5);
    if (swift_dynamicCast())
    {
      sub_237EE3288();
      sub_237EE3288();
      sub_237EE3288();
      sub_237EE3288();
      sub_237EE3288();
      sub_237EE3288();
      sub_237EE3288();
      sub_237EE3288();
    }
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v6);
    v2 += 40;
    --v1;
  }
  while (v1);
  return swift_bridgeObjectRelease();
}

uint64_t ClockFaceLook.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[4];
  _BYTE v15[24];
  uint64_t v16;
  uint64_t v17;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689AB90);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_237E7DAF8();
  sub_237EE32DC();
  sub_237E7C124();
  v15[0] = 1;
  sub_237EE3144();
  if (v1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_237E7B26C();
    if (v8)
    {
      v15[0] = 2;
      sub_237EE3144();
      swift_bridgeObjectRelease();
    }
    LOBYTE(v14[0]) = 0;
    sub_237EE3138();
    sub_237E7B14C();
    v10 = *(_QWORD *)(v9 + 16);
    if (v10)
    {
      v12 = v9;
      v13 = v4;
      v17 = v3;
      v11 = v9 + 32;
      do
      {
        sub_237E2CFE8(v11, (uint64_t)v14);
        __swift_project_boxed_opaque_existential_1(v14, v14[3]);
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v15, v16);
        sub_237EE31B0();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
        v11 += 40;
        --v10;
      }
      while (v10);
      swift_bridgeObjectRelease();
      v3 = v17;
      v4 = v13;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  }
}

void sub_237E7C124()
{
  uint64_t v0;
  _BYTE v1[104];

  sub_237E28430(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_237E7C15C()
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v1);
  return 0x726F6C6F63;
}

uint64_t ClockFaceLook.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  _QWORD *v10;
  ValueMetadata *v11;
  unint64_t v12;
  unint64_t v13;
  ValueMetadata *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  unint64_t v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  ValueMetadata *v35;
  unint64_t v36;
  _QWORD v37[3];
  uint64_t v38;
  _QWORD *v39;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689ABA0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_237E7DAF8();
  sub_237EE32D0();
  if (!v2)
  {
    LOBYTE(v28) = 0;
    sub_237EE30FC();
    v25 = v6;
    v24 = a2;
    v26 = v5;
    __swift_project_boxed_opaque_existential_1(v37, v38);
    v9 = sub_237EE31A4();
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if ((v9 & 1) == 0)
    {
      v39 = a1;
      while (1)
      {
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v38);
        sub_237E7DB3C();
        sub_237EE318C();
        if ((v36 & 1) != 0)
        {
          v28 = 0u;
          v29 = 0u;
          v30 = 0;
        }
        else
        {
          v15 = v34;
          v14 = v35;
          v27 = v33;
          *((_QWORD *)&v29 + 1) = &type metadata for SolidClockFaceColor;
          v30 = sub_237E34EC0();
          v16 = swift_allocObject();
          *(_QWORD *)&v28 = v16;
          *(_OWORD *)(v16 + 16) = v27;
          *(_QWORD *)(v16 + 32) = v15;
          *(_QWORD *)(v16 + 40) = v14;
        }
        sub_237E22004((uint64_t)&v28, (uint64_t)&v33, &qword_25689AB88);
        v11 = v35;
        sub_237E2209C((uint64_t)&v33, &qword_25689AB88);
        if (!v11)
        {
          __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v37, v38);
          v35 = &type metadata for DynamicClockFaceColor;
          v36 = sub_237E35ABC();
          *(_QWORD *)&v33 = swift_allocObject();
          sub_237E7DB90();
          sub_237EE3198();
          sub_237E7DBD4((uint64_t)&v33, (uint64_t)&v28);
          a1 = v39;
        }
        sub_237E22004((uint64_t)&v28, (uint64_t)&v31, &qword_25689AB88);
        if (!v32)
          break;
        sub_237E2D1BC(&v31, (uint64_t)&v33);
        sub_237E2CFE8((uint64_t)&v33, (uint64_t)&v31);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v10 = sub_237E62240(0, v10[2] + 1, 1, v10);
        v13 = v10[2];
        v12 = v10[3];
        if (v13 >= v12 >> 1)
          v10 = sub_237E62240((_QWORD *)(v12 > 1), v13 + 1, 1, v10);
        v10[2] = v13 + 1;
        sub_237E2D1BC(&v31, (uint64_t)&v10[5 * v13 + 4]);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v33);
        sub_237E2209C((uint64_t)&v28, &qword_25689AB88);
        __swift_project_boxed_opaque_existential_1(v37, v38);
        if ((sub_237EE31A4() & 1) != 0)
          goto LABEL_17;
      }
      sub_237E2209C((uint64_t)&v31, &qword_25689AB88);
      sub_237E2209C((uint64_t)&v28, &qword_25689AB88);
    }
LABEL_17:
    LOBYTE(v28) = 1;
    v17 = v26;
    sub_237EE3108();
    v18 = sub_237E7DC64();
    v19 = v25;
    v21 = v18;
    swift_bridgeObjectRelease();
    LOBYTE(v28) = 2;
    sub_237EE3108();
    v22 = v24;
    sub_237E7C794(v21);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_237E2D180(&v28, v22);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v37);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

void sub_237E7C794(char a1)
{
  __asm { BR              X10 }
}

void sub_237E7C7DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (*(_QWORD *)(v0 + 16))
  {
    sub_237EE2FA0();
    sub_237EE3084();
    sub_237EE2AF0();
    v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6540);
    MEMORY[0x23B82624C](v0, v2);
    sub_237EE2AF0();
    swift_bridgeObjectRelease();
    sub_237EE2AF0();
    sub_237E7E598();
    swift_allocError();
    *(_QWORD *)v3 = 0;
    *(_QWORD *)(v3 + 8) = 0xE000000000000000;
    *(_BYTE *)(v3 + 16) = 0;
    swift_willThrow();
  }
  else
  {
    *(_OWORD *)(v1 + 64) = 0u;
    *(_OWORD *)(v1 + 80) = 0u;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)v1 = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
    *(_BYTE *)(v1 + 96) = 3;
  }
}

uint64_t sub_237E7CA48(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_237EAA9C8(*a1, *a2);
}

uint64_t sub_237E7CA54()
{
  sub_237EE3264();
  sub_237EE2ACC();
  swift_bridgeObjectRelease();
  return sub_237EE3294();
}

uint64_t sub_237E7CB00()
{
  sub_237EE2ACC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_237E7CB88()
{
  sub_237EE3264();
  sub_237EE2ACC();
  swift_bridgeObjectRelease();
  return sub_237EE3294();
}

uint64_t sub_237E7CC30@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_237E7E550();
  *a1 = result;
  return result;
}

void sub_237E7CC5C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE600000000000000;
  v4 = 0xEE00726569666974;
  v5 = 0x6E65644965707974;
  if (v2 != 1)
  {
    v5 = 0xD000000000000010;
    v4 = 0x8000000237EEE130;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x73726F6C6F63;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_237E7CCC8()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x6E65644965707974;
  if (*v0 != 1)
    v1 = 0xD000000000000010;
  if (*v0)
    return v1;
  else
    return 0x73726F6C6F63;
}

uint64_t sub_237E7CD30@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_237E7E550();
  *a1 = result;
  return result;
}

uint64_t sub_237E7CD54()
{
  sub_237E7DAF8();
  return sub_237EE3324();
}

uint64_t sub_237E7CD7C()
{
  sub_237E7DAF8();
  return sub_237EE3330();
}

uint64_t ClockFaceLook.hashValue.getter()
{
  sub_237EE3264();
  ClockFaceLook.hash(into:)();
  return sub_237EE3294();
}

uint64_t sub_237E7CDE0()
{
  sub_237EE3264();
  ClockFaceLook.hash(into:)();
  return sub_237EE3294();
}

uint64_t sub_237E7CE20()
{
  sub_237EE3264();
  ClockFaceLook.hash(into:)();
  return sub_237EE3294();
}

uint64_t sub_237E7CE58@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ClockFaceLook.init(from:)(a1, a2);
}

uint64_t sub_237E7CE6C(_QWORD *a1)
{
  return ClockFaceLook.encode(to:)(a1);
}

void sub_237E7CE84(char *a1)
{
  sub_237EAAED0(*a1);
}

void sub_237E7CE90()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_237EE3264();
  __asm { BR              X9 }
}

uint64_t sub_237E7CEE8()
{
  sub_237EE2ACC();
  swift_bridgeObjectRelease();
  return sub_237EE3294();
}

void sub_237E7CF6C()
{
  __asm { BR              X10 }
}

uint64_t sub_237E7CFB4()
{
  sub_237EE2ACC();
  return swift_bridgeObjectRelease();
}

void sub_237E7D024()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_237EE3264();
  __asm { BR              X9 }
}

uint64_t sub_237E7D078()
{
  sub_237EE2ACC();
  swift_bridgeObjectRelease();
  return sub_237EE3294();
}

uint64_t sub_237E7D0FC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_237E7DC1C();
  *a1 = result;
  return result;
}

uint64_t sub_237E7D128()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_237E7D164 + 4 * byte_237EEA32C[*v0]))();
}

void sub_237E7D164(_QWORD *a1@<X8>)
{
  *a1 = 0x726F6C6F63;
  a1[1] = 0xE500000000000000;
}

void sub_237E7D17C(char *a1@<X8>)
{
  strcpy(a1, "gradient_array");
  a1[15] = -18;
}

void sub_237E7D1A4(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "splitTone_a_b");
  *(_WORD *)(a1 + 14) = -4864;
}

char *sub_237E7D1CC(void *a1, void *a2)
{
  char *v2;
  uint64_t v5;
  id v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v19;
  id v20;
  void *v21;
  char *v22;
  objc_super v24;
  CGRect v25;

  v5 = OBJC_IVAR____TtC11ClockPoster26ClackFaceLookThumbnailView_gradientLayer;
  v6 = objc_allocWithZone(MEMORY[0x24BDE56B8]);
  v7 = v2;
  *(_QWORD *)&v2[v5] = objc_msgSend(v6, sel_init);

  v24.receiver = v7;
  v24.super_class = (Class)type metadata accessor for ClackFaceLookThumbnailView();
  v8 = (char *)objc_msgSendSuper2(&v24, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v9 = OBJC_IVAR____TtC11ClockPoster26ClackFaceLookThumbnailView_gradientLayer;
  v10 = *(void **)&v8[OBJC_IVAR____TtC11ClockPoster26ClackFaceLookThumbnailView_gradientLayer];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256899DF8);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_237EE4470;
  type metadata accessor for CGColor(0);
  *(_QWORD *)(v11 + 32) = a1;
  *(_QWORD *)(v11 + 88) = v12;
  *(_QWORD *)(v11 + 56) = v12;
  *(_QWORD *)(v11 + 64) = a2;
  v13 = v8;
  v14 = v10;
  v15 = a1;
  v16 = a2;
  v17 = (void *)sub_237EE2BBC();
  swift_bridgeObjectRelease();
  objc_msgSend(v14, sel_setColors_, v17);

  v18 = *(void **)&v8[v9];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2568982F8);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_237EEA300;
  sub_237E55D54();
  v20 = v18;
  *(_QWORD *)(v19 + 32) = sub_237EE2EA4();
  *(_QWORD *)(v19 + 40) = sub_237EE2EA4();
  sub_237EE2BEC();
  v21 = (void *)sub_237EE2BBC();
  swift_bridgeObjectRelease();
  objc_msgSend(v20, sel_setLocations_, v21);

  v22 = v13;
  objc_msgSend(v22, sel_frame);
  objc_msgSend(v22, sel__setCornerRadius_, CGRectGetWidth(v25) * 0.5);

  return v22;
}

id sub_237E7D490()
{
  char *v0;
  uint64_t v1;
  id v2;
  id v3;
  id v4;
  objc_super v6;

  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for ClackFaceLookThumbnailView();
  objc_msgSendSuper2(&v6, sel_layoutSubviews);
  v1 = OBJC_IVAR____TtC11ClockPoster26ClackFaceLookThumbnailView_gradientLayer;
  v2 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC11ClockPoster26ClackFaceLookThumbnailView_gradientLayer], sel_superlayer);

  if (!v2)
  {
    v3 = objc_msgSend(v0, sel_layer);
    objc_msgSend(v3, sel_insertSublayer_atIndex_, *(_QWORD *)&v0[v1], 0);

    objc_msgSend(*(id *)&v0[v1], sel_setType_, *MEMORY[0x24BDE5C58]);
  }
  v4 = *(id *)&v0[v1];
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v4, sel_setFrame_);

  objc_msgSend(*(id *)&v0[v1], sel_setStartPoint_, 0.0, 0.5);
  return objc_msgSend(*(id *)&v0[v1], sel_setEndPoint_, 1.0, 0.5);
}

id sub_237E7D60C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClackFaceLookThumbnailView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_237E7D64C(uint64_t a1)
{
  uint64_t v2;

  v2 = MEMORY[0x23B8271D0](&unk_237EEAA3C, a1);
  return sub_237E7B024(a1, v2);
}

void sub_237E7D690()
{
  sub_237EE309C();
  __break(1u);
}

uint64_t sub_237E7D6E8(uint64_t a1)
{
  uint64_t v2;

  v2 = MEMORY[0x23B8271D0](&unk_237EECA30, a1);
  return sub_237E7B024(a1, v2);
}

uint64_t sub_237E7D72C(uint64_t a1)
{
  uint64_t v2;

  v2 = MEMORY[0x23B8271D0](&unk_237EEDBCC, a1);
  return sub_237E7B024(a1, v2);
}

id sub_237E7D770(uint64_t a1, void *a2)
{
  uint64_t (*v3)(void);
  id v4;
  void *v5;

  v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v5 = (void *)v3();
  swift_release();

  return v5;
}

uint64_t _s11ClockPoster0A8FaceLookO2eeoiySbAC_ACtFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  float64x2_t v16;
  float64x2_t v17;
  float64x2_t v18;
  float64x2_t v19;
  float64x2_t v20;
  float64x2_t v21;
  float64x2_t v22;
  float64x2_t v23;
  float64x2_t v24;
  float64x2_t v25;
  float64x2_t v26;
  float64x2_t v27;
  __int128 v28[2];
  __int128 v29[3];

  sub_237E7C124();
  v1 = v0;
  v3 = v2;
  sub_237E7C124();
  if (v1 == v5 && v3 == v4)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v6 = sub_237EE31BC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v6 & 1) == 0)
      return result;
  }
  sub_237E7B14C();
  v9 = v8;
  sub_237E7B14C();
  v11 = v10;
  v12 = *(_QWORD *)(v10 + 16);
  if (v12)
  {
    v13 = 0;
    v14 = *(_QWORD *)(v9 + 16);
    v15 = 32;
    while (1)
    {
      result = sub_237E2CFE8(v11 + v15, (uint64_t)v29);
      if (v14 == v13)
        goto LABEL_20;
      if (v13 >= *(_QWORD *)(v9 + 16))
        break;
      sub_237E2CFE8(v9 + v15, (uint64_t)v28);
      sub_237E2CFE8((uint64_t)v29, (uint64_t)&v22);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6540);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v18 = v26;
        v20 = v27;
        sub_237E2CFE8((uint64_t)v28, (uint64_t)&v22);
        if ((swift_dynamicCast() & 1) != 0
          && (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v18, v26), (int32x4_t)vceqq_f64(v20, v27))), 0xFuLL))) & 1) == 0)
        {
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
LABEL_20:
          __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
LABEL_21:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      sub_237E2D1BC(v29, (uint64_t)&v26);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v19 = v24;
        v21 = v25;
        v16 = v22;
        v17 = v23;
        sub_237E2D1BC(v28, (uint64_t)&v26);
        if ((swift_dynamicCast() & 1) != 0
          && (vminv_u8((uint8x8_t)vcltz_s8(vshl_n_s8(vmovn_s16(vuzp1q_s16((int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(v16, v22), (int32x4_t)vceqq_f64(v17, v23)), (int16x8_t)vuzp1q_s32((int32x4_t)vceqq_f64(v19, v24), (int32x4_t)vceqq_f64(v21, v25)))), 7uLL))) & 1) == 0)
        {
          goto LABEL_21;
        }
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
      }
      ++v13;
      v15 += 40;
      if (v12 == v13)
        goto LABEL_18;
    }
    __break(1u);
  }
  else
  {
LABEL_18:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 1;
  }
  return result;
}

uint64_t type metadata accessor for ClackFaceLookThumbnailView()
{
  return objc_opt_self();
}

uint64_t sub_237E7DAB4()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_237E7DAD8(uint64_t a1)
{
  uint64_t v1;

  return sub_237E38E94(a1, *(void **)(v1 + 16));
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

unint64_t sub_237E7DAF8()
{
  unint64_t result;

  result = qword_25689AB98;
  if (!qword_25689AB98)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEA5D8, &type metadata for ClockFaceLook.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25689AB98);
  }
  return result;
}

unint64_t sub_237E7DB3C()
{
  unint64_t result;

  result = qword_2542C64B0;
  if (!qword_2542C64B0)
  {
    result = MEMORY[0x23B8271D0](&protocol conformance descriptor for SolidClockFaceColor, &type metadata for SolidClockFaceColor);
    atomic_store(result, (unint64_t *)&qword_2542C64B0);
  }
  return result;
}

uint64_t sub_237E7DB80()
{
  return swift_deallocObject();
}

unint64_t sub_237E7DB90()
{
  unint64_t result;

  result = qword_2542C64D8;
  if (!qword_2542C64D8)
  {
    result = MEMORY[0x23B8271D0](&protocol conformance descriptor for DynamicClockFaceColor, &type metadata for DynamicClockFaceColor);
    atomic_store(result, (unint64_t *)&qword_2542C64D8);
  }
  return result;
}

uint64_t sub_237E7DBD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689AB88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_237E7DC1C()
{
  unint64_t v0;

  v0 = sub_237EE30F0();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

unint64_t sub_237E7DC64()
{
  unint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRetain();
  v0 = sub_237EE30F0();
  swift_bridgeObjectRelease();
  if (v0 > 3)
  {
    sub_237EE2FA0();
    swift_bridgeObjectRelease();
    sub_237EE2AF0();
    sub_237E7E598();
    swift_allocError();
    *(_QWORD *)v1 = 0xD000000000000010;
    *(_QWORD *)(v1 + 8) = 0x8000000237EEF920;
    *(_BYTE *)(v1 + 16) = 0;
    swift_willThrow();
  }
  return v0;
}

uint64_t sub_237E7DD4C()
{
  return swift_deallocObject();
}

unint64_t sub_237E7DD60()
{
  unint64_t result;

  result = qword_25689ABA8;
  if (!qword_25689ABA8)
  {
    result = MEMORY[0x23B8271D0](&protocol conformance descriptor for ClockFaceLook, &type metadata for ClockFaceLook);
    atomic_store(result, (unint64_t *)&qword_25689ABA8);
  }
  return result;
}

unint64_t sub_237E7DDA4(uint64_t a1)
{
  unint64_t result;

  result = sub_237E7DDC8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_237E7DDC8()
{
  unint64_t result;

  result = qword_25689ABB0;
  if (!qword_25689ABB0)
  {
    result = MEMORY[0x23B8271D0](&protocol conformance descriptor for ClockFaceLook, &type metadata for ClockFaceLook);
    atomic_store(result, (unint64_t *)&qword_25689ABB0);
  }
  return result;
}

uint64_t destroy for ClockFaceLook(uint64_t result)
{
  uint64_t v1;
  unsigned int v2;

  v1 = result;
  v2 = *(unsigned __int8 *)(result + 96);
  if (v2 >= 3)
    v2 = *(_DWORD *)result + 3;
  if (v2 == 2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm(result);
    __swift_destroy_boxed_opaque_existential_1Tm(v1 + 40);
  }
  else if (v2 == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    if (v2)
      return result;
    __swift_destroy_boxed_opaque_existential_1Tm(result);
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ClockFaceLook(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v4 = *(unsigned __int8 *)(a2 + 96);
  if (v4 >= 3)
    v4 = *(_DWORD *)a2 + 3;
  if (v4 == 2)
  {
    v7 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
    v8 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 40, a2 + 40);
    v9 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v9;
    *(_BYTE *)(a1 + 96) = 2;
    swift_bridgeObjectRetain();
  }
  else if (v4 == 1)
  {
    v10 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v10;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_BYTE *)(a1 + 96) = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else if (v4)
  {
    v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
    v12 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v12;
    v13 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v13;
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v5;
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    v6 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v6;
    *(_BYTE *)(a1 + 96) = 0;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for ClockFaceLook(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  if ((__int128 *)a1 == a2)
    return a1;
  v4 = *(unsigned __int8 *)(a1 + 96);
  if (v4 >= 3)
    v4 = *(_DWORD *)a1 + 3;
  switch(v4)
  {
    case 2u:
      __swift_destroy_boxed_opaque_existential_1Tm(a1);
      __swift_destroy_boxed_opaque_existential_1Tm(a1 + 40);
      goto LABEL_10;
    case 1u:
      swift_bridgeObjectRelease();
      goto LABEL_10;
    case 0u:
      __swift_destroy_boxed_opaque_existential_1Tm(a1);
LABEL_10:
      swift_bridgeObjectRelease();
      break;
  }
  v5 = *((unsigned __int8 *)a2 + 96);
  if (v5 >= 3)
    v5 = *(_DWORD *)a2 + 3;
  if (v5 == 2)
  {
    v7 = *((_QWORD *)a2 + 3);
    *(_QWORD *)(a1 + 24) = v7;
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    (**(void (***)(uint64_t, __int128 *))(v7 - 8))(a1, a2);
    v8 = *((_QWORD *)a2 + 8);
    *(_QWORD *)(a1 + 64) = v8;
    *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 40, (uint64_t)a2 + 40);
    *(_QWORD *)(a1 + 80) = *((_QWORD *)a2 + 10);
    *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
    *(_BYTE *)(a1 + 96) = 2;
    swift_bridgeObjectRetain();
  }
  else if (v5 == 1)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
    *(_BYTE *)(a1 + 96) = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else if (v5)
  {
    v9 = *a2;
    v10 = a2[2];
    *(_OWORD *)(a1 + 16) = a2[1];
    *(_OWORD *)(a1 + 32) = v10;
    *(_OWORD *)a1 = v9;
    v11 = a2[3];
    v12 = a2[4];
    v13 = a2[5];
    *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
    *(_OWORD *)(a1 + 64) = v12;
    *(_OWORD *)(a1 + 80) = v13;
    *(_OWORD *)(a1 + 48) = v11;
  }
  else
  {
    v6 = *((_QWORD *)a2 + 3);
    *(_QWORD *)(a1 + 24) = v6;
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
    *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
    *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
    *(_BYTE *)(a1 + 96) = 0;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithTake for ClockFaceLook(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  if (a1 == a2)
    return a1;
  v4 = *(unsigned __int8 *)(a1 + 96);
  if (v4 >= 3)
    v4 = *(_DWORD *)a1 + 3;
  switch(v4)
  {
    case 2u:
      __swift_destroy_boxed_opaque_existential_1Tm(a1);
      __swift_destroy_boxed_opaque_existential_1Tm(a1 + 40);
      goto LABEL_10;
    case 1u:
      swift_bridgeObjectRelease();
      goto LABEL_10;
    case 0u:
      __swift_destroy_boxed_opaque_existential_1Tm(a1);
LABEL_10:
      swift_bridgeObjectRelease();
      break;
  }
  v5 = *(unsigned __int8 *)(a2 + 96);
  if (v5 >= 3)
    v5 = *(_DWORD *)a2 + 3;
  if (v5 == 2)
  {
    v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
    v8 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v8;
    v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
    *(_BYTE *)(a1 + 96) = 2;
  }
  else if (v5 == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_BYTE *)(a1 + 96) = 1;
  }
  else if (v5)
  {
    v10 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v10;
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
    v11 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
    v12 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v12;
  }
  else
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_BYTE *)(a1 + 96) = 0;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ClockFaceLook(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 97))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 96);
  if (v3 >= 4)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ClockFaceLook(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 96) = 0;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 97) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 97) = 0;
    if (a2)
      *(_BYTE *)(result + 96) = -(char)a2;
  }
  return result;
}

uint64_t sub_237E7E33C(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 96);
  if (result >= 3)
    return (*(_DWORD *)a1 + 3);
  return result;
}

uint64_t sub_237E7E358(uint64_t result, unsigned int a2)
{
  unsigned int v2;

  if (a2 > 2)
  {
    v2 = a2 - 3;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    LOBYTE(a2) = 3;
    *(_DWORD *)result = v2;
  }
  *(_BYTE *)(result + 96) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ClockFaceLook()
{
  return &type metadata for ClockFaceLook;
}

uint64_t sub_237E7E394(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_237E7E39C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t sub_237E7E3A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t storeEnumTagSinglePayload for ClockFaceLook.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_237E7E3F8 + 4 * byte_237EEA335[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_237E7E42C + 4 * byte_237EEA330[v4]))();
}

uint64_t sub_237E7E42C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237E7E434(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237E7E43CLL);
  return result;
}

uint64_t sub_237E7E448(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237E7E450);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_237E7E454(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237E7E45C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClockFaceLook.CodingKeys()
{
  return &type metadata for ClockFaceLook.CodingKeys;
}

unint64_t sub_237E7E47C()
{
  unint64_t result;

  result = qword_25689ABE8;
  if (!qword_25689ABE8)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEA5B0, &type metadata for ClockFaceLook.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25689ABE8);
  }
  return result;
}

unint64_t sub_237E7E4C4()
{
  unint64_t result;

  result = qword_25689ABF0;
  if (!qword_25689ABF0)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEA4E8, &type metadata for ClockFaceLook.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25689ABF0);
  }
  return result;
}

unint64_t sub_237E7E50C()
{
  unint64_t result;

  result = qword_25689ABF8;
  if (!qword_25689ABF8)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEA510, &type metadata for ClockFaceLook.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25689ABF8);
  }
  return result;
}

uint64_t sub_237E7E550()
{
  unint64_t v0;

  v0 = sub_237EE30F0();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

unint64_t sub_237E7E598()
{
  unint64_t result;

  result = qword_25689AC00;
  if (!qword_25689AC00)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEA704, &type metadata for ClockFaceLookCodingError);
    atomic_store(result, (unint64_t *)&qword_25689AC00);
  }
  return result;
}

uint64_t destroy for ClockFaceLookCodingError()
{
  return sub_237E7E5F0();
}

uint64_t sub_237E7E5F0()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s11ClockPoster24ClockFaceLookCodingErrorOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_237E2CC6C();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ClockFaceLookCodingError(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  sub_237E2CC6C();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_237E7E5F0();
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ClockFaceLookCodingError(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_237E7E5F0();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClockFaceLookCodingError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ClockFaceLookCodingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_237E7E778(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_237E7E780(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ClockFaceLookCodingError()
{
  return &type metadata for ClockFaceLookCodingError;
}

uint64_t storeEnumTagSinglePayload for ClockFaceLookType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_237E7E7E8 + 4 * byte_237EEA33F[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_237E7E81C + 4 * byte_237EEA33A[v4]))();
}

uint64_t sub_237E7E81C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237E7E824(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237E7E82CLL);
  return result;
}

uint64_t sub_237E7E838(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237E7E840);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_237E7E844(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237E7E84C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClockFaceLookType()
{
  return &type metadata for ClockFaceLookType;
}

unint64_t sub_237E7E86C()
{
  unint64_t result;

  result = qword_25689AC08;
  if (!qword_25689AC08)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEA6DC, &type metadata for ClockFaceLookType);
    atomic_store(result, (unint64_t *)&qword_25689AC08);
  }
  return result;
}

uint64_t sub_237E7E8B4()
{
  char *v0;
  __CFNotificationCenter *v1;
  __CFString *v2;
  char *v3;
  uint64_t v4;

  v1 = CFNotificationCenterGetDarwinNotifyCenter();
  v2 = (__CFString *)sub_237EE2A54();
  CFNotificationCenterRemoveObserver(v1, v0, v2, 0);

  v3 = &v0[OBJC_IVAR____TtCV11ClockPoster24DarwinNotificationCenter12Subscription_id];
  v4 = sub_237EE1D94();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_237E7E96C()
{
  return type metadata accessor for DarwinNotificationCenter.Subscription();
}

uint64_t type metadata accessor for DarwinNotificationCenter.Subscription()
{
  uint64_t result;

  result = qword_25689AC38;
  if (!qword_25689AC38)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_237E7E9B0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_237EE1D94();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_237E7EA34()
{
  sub_237EE3264();
  sub_237EE1D94();
  sub_237E20E98(&qword_25689ACD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_237EE2A18();
  return sub_237EE3294();
}

uint64_t sub_237E7EAB0()
{
  sub_237EE1D94();
  sub_237E20E98(&qword_25689ACD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  return sub_237EE2A18();
}

uint64_t sub_237E7EB1C()
{
  sub_237EE3264();
  sub_237EE1D94();
  sub_237E20E98(&qword_25689ACD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_237EE2A18();
  return sub_237EE3294();
}

uint64_t sub_237E7EB94@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtCV11ClockPoster24DarwinNotificationCenter12Subscription_id;
  v4 = sub_237EE1D94();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_237E7EBDC()
{
  return sub_237EE1D7C();
}

uint64_t sub_237E7EBF8()
{
  return sub_237E20E98(&qword_25689ACD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
}

uint64_t sub_237E7EC24()
{
  return sub_237E20E98(&qword_25689ACD8, (uint64_t (*)(uint64_t))type metadata accessor for DarwinNotificationCenter.Subscription, (uint64_t)&unk_237EEA7AC);
}

uint64_t sub_237E7EC50()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689B248);
  return sub_237EE2A48() & 1;
}

uint64_t sub_237E7ECA8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689B248);
  return sub_237EE2A24();
}

void sub_237E7ECEC()
{
  sub_237E220F8();
  sub_237EE1BD8();
  __break(1u);
}

void sub_237E7ED10()
{
  sub_237EE1AC4();
  __break(1u);
}

uint64_t sub_237E7ED28(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B238);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_237E84FC0();
  sub_237EE32DC();
  v8[15] = 0;
  sub_237E47240();
  sub_237EE3168();
  if (!v1)
  {
    v8[14] = 1;
    sub_237EE3150();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_237E7EE4C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[16];
  __int128 v13[6];
  _BYTE v14[104];
  uint64_t v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B228);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_237E84FC0();
  sub_237EE32D0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v12[15] = 0;
  sub_237E471FC();
  sub_237EE312C();
  sub_237E2D180(v13, (uint64_t)v14);
  LOBYTE(v13[0]) = 1;
  sub_237EE3114();
  v10 = v9;
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  v15 = v10;
  sub_237E2A13C((uint64_t)v14, a2);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  return sub_237E2A198((uint64_t)v14);
}

uint64_t sub_237E7EFF8()
{
  _BYTE *v0;

  if (*v0)
    return 0x656C676E61;
  else
    return 1802465132;
}

uint64_t sub_237E7F028@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237E852A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237E7F04C()
{
  sub_237E84FC0();
  return sub_237EE3324();
}

uint64_t sub_237E7F074()
{
  sub_237E84FC0();
  return sub_237EE3330();
}

uint64_t sub_237E7F09C@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  result = sub_237E2D180(a1, a2);
  *(_QWORD *)(a2 + 104) = 0;
  return result;
}

uint64_t sub_237E7F0C4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_237E7EE4C(a1, a2);
}

uint64_t sub_237E7F0D8(_QWORD *a1)
{
  return sub_237E7ED28(a1);
}

BOOL sub_237E7F0EC(uint64_t a1, uint64_t a2)
{
  return (_s11ClockPoster0A8FaceLookO2eeoiySbAC_ACtFZ_0() & 1) != 0 && *(double *)(a1 + 104) == *(double *)(a2 + 104);
}

uint64_t (*sub_237E7F130())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_237E7F16C()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F20();
  swift_release();
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_237E7F204@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F20();
  swift_release();
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 16);
  return result;
}

uint64_t sub_237E7F2A4()
{
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F14();
  return swift_release();
}

void (*sub_237E7F34C(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F20();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_237EE1F38();
  swift_release();
  v4[7] = sub_237E7F130();
  return sub_237E7F434;
}

void sub_237E7F434(_QWORD *a1)
{
  _QWORD *v1;

  v1 = (_QWORD *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 56))(*a1, 0);
  *v1 = v1[4];
  swift_getKeyPath();
  sub_237EE1F2C();
  swift_release();
  free(v1);
}

uint64_t sub_237E7F4A4()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F20();
  swift_release();
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_237E7F528@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F20();
  result = swift_release();
  *a2 = *(_BYTE *)(v3 + 17);
  return result;
}

uint64_t sub_237E7F5B4()
{
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F14();
  return swift_release();
}

uint64_t sub_237E7F65C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(uint64_t, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t KeyPath;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897E20);
  MEMORY[0x24BDAC7A8](v4);
  v40 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_237EE1D70();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v42 = (uint64_t)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_237EE1B0C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_WORD *)(v1 + 16) = 0;
  type metadata accessor for RollingClockViewModel();
  swift_allocObject();
  *(_QWORD *)(v1 + 24) = sub_237E19ED0();
  *(_QWORD *)(v1 + 144) = 0;
  *(_QWORD *)(v1 + 152) = 0xE000000000000000;
  sub_237EE1B00();
  v13 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
  v13(v1 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__alarmText, v12, v9);
  v41 = v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v1 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__alarmTime, 1, 1, v6);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__complicationForegroundColor) = sub_237EE2724();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__complicationTintColor) = sub_237EE2724();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__complicationSecondaryTintColor) = 0;
  v14 = v1 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__temperature;
  v15 = __swift_instantiateConcreteTypeFromMangledName(qword_25689AD70);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__colorWheelIndex) = 0;
  sub_237EE1F44();
  v16 = a1;
  sub_237E2A13C(a1, v2 + 32);
  if (qword_256897B48 != -1)
    swift_once();
  v17 = v42;
  sub_237EA1DE0(v42);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16))(v2 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__date, v17, v6);
  v38 = v16;
  v18 = ClockFaceLook.primaryUIColor.getter();
  v19 = MEMORY[0x23B825DCC](v18);
  v39 = v6;
  v20 = v19;
  sub_237E7FBD8(v17, v19, 0, (uint64_t)v12);
  v13(v2 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__dateText, v12, v9);
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  *(&v37 - 2) = v2;
  *(&v37 - 1) = v20;
  v43 = v2;
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  swift_retain();
  sub_237EE1F14();
  swift_release();
  swift_release();
  v22 = sub_237EE2C64();
  v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v24 = (uint64_t)v40;
  v23(v40, 1, 1, v22);
  v25 = swift_allocObject();
  swift_weakInit();
  sub_237EE2C4C();
  swift_retain();
  v26 = sub_237EE2C40();
  v27 = (_QWORD *)swift_allocObject();
  v28 = MEMORY[0x24BEE6930];
  v27[2] = v26;
  v27[3] = v28;
  v27[4] = v25;
  swift_release();
  sub_237EDA9E4(v24, (uint64_t)&unk_25689B278, (uint64_t)v27);
  swift_release();
  v23((char *)v24, 1, 1, v22);
  v29 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  v30 = sub_237EE2C40();
  v31 = (_QWORD *)swift_allocObject();
  v31[2] = v30;
  v31[3] = v28;
  v31[4] = v29;
  swift_release();
  sub_237EDA9E4(v24, (uint64_t)&unk_25689B288, (uint64_t)v31);
  swift_release();
  v23((char *)v24, 1, 1, v22);
  v32 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  v33 = sub_237EE2C40();
  v34 = (_QWORD *)swift_allocObject();
  v34[2] = v33;
  v34[3] = v28;
  v34[4] = v32;
  swift_release();
  sub_237EDA9E4(v24, (uint64_t)&unk_25689B298, (uint64_t)v34);
  swift_release();
  v23((char *)v24, 1, 1, v22);
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = 0;
  *(_QWORD *)(v35 + 24) = 0;
  sub_237EDA9E4(v24, (uint64_t)&unk_25689B2A8, v35);
  swift_release();
  sub_237E83F20();
  swift_release();
  sub_237E2A198(v38);
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v42, v39);
  return v2;
}

uint64_t sub_237E7FBD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  uint64_t KeyPath;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;

  v73 = a3;
  v74 = a2;
  v71 = a4;
  v72 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B240);
  v65 = *(_QWORD *)(v4 - 8);
  v66 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v64 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_237EE1A94();
  v58 = *(_QWORD *)(v6 - 8);
  v59 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v57 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899A10);
  v55 = *(_QWORD *)(v8 - 8);
  v56 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v54 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_237EE1B54();
  v62 = *(_QWORD *)(v10 - 8);
  v63 = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v61 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v60 = (char *)&v53 - v13;
  v14 = sub_237EE1CD4();
  v15 = *(_QWORD *)(v14 - 8);
  v69 = v14;
  v70 = v15;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_237EE1C44();
  v67 = *(_QWORD *)(v18 - 8);
  v68 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_237EE1CA4();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_237EE1CC8();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v53 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v27);
  v32 = (char *)&v53 - v31;
  v33 = MEMORY[0x24BDAC7A8](v30);
  v35 = (char *)&v53 - v34;
  MEMORY[0x23B825010](v33);
  sub_237EE1C80();
  sub_237EE1CBC();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  v36 = *(void (**)(char *, uint64_t))(v26 + 8);
  v36(v29, v25);
  sub_237EE1C38();
  sub_237EE1C20();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v20, v68);
  v36(v32, v25);
  sub_237EE1C14();
  v36(v35, v25);
  sub_237E20E98(&qword_256899A18, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE318], MEMORY[0x24BDCE310]);
  v37 = v69;
  sub_237EE1D58();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v17, v37);
  if ((v73 & 1) != 0)
  {
    KeyPath = swift_getKeyPath();
    *(&v53 - 2) = MEMORY[0x24BDAC7A8](KeyPath);
    swift_getKeyPath();
    v75 = v74;
    sub_237E220F8();
    swift_retain();
    return sub_237EE1AE8();
  }
  else
  {
    v40 = swift_getKeyPath();
    *(&v53 - 2) = MEMORY[0x24BDAC7A8](v40);
    swift_getKeyPath();
    sub_237E4E910();
    v41 = v54;
    sub_237EE1B30();
    swift_release();
    v43 = v57;
    v42 = v58;
    v44 = v59;
    (*(void (**)(char *, _QWORD, uint64_t))(v58 + 104))(v57, *MEMORY[0x24BDCC120], v59);
    v45 = v60;
    v46 = v56;
    sub_237EE1B3C();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v44);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v41, v46);
    v47 = swift_getKeyPath();
    *(&v53 - 2) = MEMORY[0x24BDAC7A8](v47);
    swift_getKeyPath();
    sub_237E220F8();
    v48 = v64;
    sub_237EE1B30();
    swift_release();
    v75 = v74;
    v49 = v61;
    v50 = v66;
    sub_237EE1B3C();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v48, v50);
    sub_237EE1AF4();
    v51 = v63;
    v52 = *(void (**)(char *, uint64_t))(v62 + 8);
    v52(v49, v63);
    return ((uint64_t (*)(char *, uint64_t))v52)(v45, v51);
  }
}

uint64_t sub_237E8013C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[6] = a4;
  v5 = sub_237EE1D70();
  v4[7] = v5;
  v4[8] = *(_QWORD *)(v5 - 8);
  v4[9] = swift_task_alloc();
  v4[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  v4[11] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899D50);
  v4[12] = v6;
  v4[13] = *(_QWORD *)(v6 - 8);
  v4[14] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899D58);
  v4[15] = v7;
  v4[16] = *(_QWORD *)(v7 - 8);
  v4[17] = swift_task_alloc();
  v4[18] = sub_237EE2C4C();
  v4[19] = sub_237EE2C40();
  v4[20] = sub_237EE2C28();
  v4[21] = v8;
  return swift_task_switch();
}

uint64_t sub_237E80260()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  if (qword_256897B48 != -1)
    swift_once();
  v2 = v0[13];
  v1 = v0[14];
  v3 = v0[12];
  v4 = qword_25689B990;
  v5 = *(_QWORD *)(qword_25689B990 + OBJC_IVAR____TtC11ClockPoster5Clock_dateStreamObservers);
  swift_retain();
  sub_237E97200(2, v5, v4, 2, v1);
  sub_237EE2C88();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  v0[22] = 0;
  v0[23] = sub_237EE2C40();
  v6 = (_QWORD *)swift_task_alloc();
  v0[24] = v6;
  *v6 = v0;
  v6[1] = sub_237E80398;
  return sub_237EE2C94();
}

uint64_t sub_237E80398()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_237E803EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
    swift_release();
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v3 + 32))(*(_QWORD *)(v0 + 80), v1, v2);
    Strong = swift_weakLoadStrong();
    if (Strong)
    {
      v5 = Strong;
      v6 = *(_QWORD *)(v0 + 176);
      v7 = *(_QWORD *)(v0 + 72);
      v20 = *(_QWORD *)(v0 + 80);
      v9 = *(_QWORD *)(v0 + 56);
      v8 = *(_QWORD *)(v0 + 64);
      (*(void (**)(uint64_t))(v8 + 16))(v7);
      swift_getKeyPath();
      v10 = swift_task_alloc();
      *(_QWORD *)(v10 + 16) = v5;
      *(_QWORD *)(v10 + 24) = v7;
      *(_QWORD *)(v0 + 40) = v5;
      sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
      sub_237EE1F14();
      swift_release();
      swift_task_dealloc();
      v11 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
      v11(v7, v9);
      swift_release();
      v11(v20, v9);
      *(_QWORD *)(v0 + 176) = v6;
      *(_QWORD *)(v0 + 184) = sub_237EE2C40();
      v12 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 192) = v12;
      *v12 = v0;
      v12[1] = sub_237E80398;
      return sub_237EE2C94();
    }
    v15 = *(_QWORD *)(v0 + 128);
    v14 = *(_QWORD *)(v0 + 136);
    v16 = *(_QWORD *)(v0 + 120);
    v17 = *(_QWORD *)(v0 + 80);
    v18 = *(_QWORD *)(v0 + 56);
    v19 = *(_QWORD *)(v0 + 64);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_237E80650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[6] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B250);
  v4[7] = v5;
  v4[8] = *(_QWORD *)(v5 - 8);
  v4[9] = swift_task_alloc();
  v4[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689B2B0);
  v4[11] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B2B8);
  v4[12] = v6;
  v4[13] = *(_QWORD *)(v6 - 8);
  v4[14] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B2C0);
  v4[15] = v7;
  v4[16] = *(_QWORD *)(v7 - 8);
  v4[17] = swift_task_alloc();
  v4[18] = sub_237EE2C4C();
  v4[19] = sub_237EE2C40();
  v4[20] = sub_237EE2C28();
  v4[21] = v8;
  return swift_task_switch();
}

uint64_t sub_237E80778()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  if (qword_256897B78 != -1)
    swift_once();
  v2 = v0[13];
  v1 = v0[14];
  v3 = v0[12];
  sub_237EDCE4C(v1);
  sub_237EE2C88();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  v0[22] = 0;
  v0[23] = sub_237EE2C40();
  v4 = (_QWORD *)swift_task_alloc();
  v0[24] = v4;
  *v4 = v0;
  v4[1] = sub_237E8088C;
  return sub_237EE2C94();
}

uint64_t sub_237E8088C()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_237E808E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 64) + 48))(v1, 1, *(_QWORD *)(v0 + 56)) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
    swift_release();
  }
  else
  {
    sub_237E21FC0(v1, *(_QWORD *)(v0 + 80), &qword_25689B250);
    Strong = swift_weakLoadStrong();
    if (Strong)
    {
      v3 = Strong;
      v4 = *(_QWORD *)(v0 + 176);
      v6 = *(_QWORD *)(v0 + 72);
      v5 = *(_QWORD *)(v0 + 80);
      sub_237E22004(v5, v6, &qword_25689B250);
      swift_getKeyPath();
      v7 = swift_task_alloc();
      *(_QWORD *)(v7 + 16) = v3;
      *(_QWORD *)(v7 + 24) = v6;
      *(_QWORD *)(v0 + 40) = v3;
      sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
      sub_237EE1F14();
      swift_release();
      swift_task_dealloc();
      sub_237E2209C(v6, &qword_25689B250);
      swift_release();
      sub_237E2209C(v5, &qword_25689B250);
      *(_QWORD *)(v0 + 176) = v4;
      *(_QWORD *)(v0 + 184) = sub_237EE2C40();
      v8 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 192) = v8;
      *v8 = v0;
      v8[1] = sub_237E8088C;
      return sub_237EE2C94();
    }
    v11 = *(_QWORD *)(v0 + 128);
    v10 = *(_QWORD *)(v0 + 136);
    v12 = *(_QWORD *)(v0 + 120);
    v13 = *(_QWORD *)(v0 + 80);
    swift_release();
    sub_237E2209C(v13, &qword_25689B250);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_237E80B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[6] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  v4[7] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898BC0);
  v4[8] = v5;
  v4[9] = *(_QWORD *)(v5 - 8);
  v4[10] = swift_task_alloc();
  v4[11] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898BC8);
  v4[12] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898BD0);
  v4[13] = v6;
  v4[14] = *(_QWORD *)(v6 - 8);
  v4[15] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898BD8);
  v4[16] = v7;
  v4[17] = *(_QWORD *)(v7 - 8);
  v4[18] = swift_task_alloc();
  v4[19] = sub_237EE2C4C();
  v4[20] = sub_237EE2C40();
  v4[21] = sub_237EE2C28();
  v4[22] = v8;
  return swift_task_switch();
}

uint64_t sub_237E80C84()
{
  uint64_t v0;

  if (qword_256897AE0 != -1)
    swift_once();
  *(_QWORD *)(v0 + 184) = qword_25689DF08;
  return swift_task_switch();
}

uint64_t sub_237E80CE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v1 + 112);
  swift_retain();
  sub_237E8FF84(v3, v1, v2);
  return swift_task_switch();
}

uint64_t sub_237E80D44()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[14];
  v1 = v0[15];
  v3 = v0[13];
  sub_237EE2C88();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  v0[24] = 0;
  v0[25] = sub_237EE2C40();
  v4 = (_QWORD *)swift_task_alloc();
  v0[26] = v4;
  *v4 = v0;
  v4[1] = sub_237E80E10;
  return sub_237EE2C94();
}

uint64_t sub_237E80E10()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_237E80E64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;

  v1 = *(_QWORD *)(v0 + 96);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 72) + 48))(v1, 1, *(_QWORD *)(v0 + 64)) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 128));
    swift_release();
LABEL_7:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  sub_237E21FC0(v1, *(_QWORD *)(v0 + 88), &qword_256898BC0);
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    v11 = *(_QWORD *)(v0 + 136);
    v10 = *(_QWORD *)(v0 + 144);
    v12 = *(_QWORD *)(v0 + 128);
    v13 = *(_QWORD *)(v0 + 88);
    swift_release();
    sub_237E2209C(v13, &qword_256898BC0);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    goto LABEL_7;
  }
  v3 = Strong;
  v4 = *(_QWORD *)(v0 + 80);
  sub_237E22004(*(_QWORD *)(v0 + 88), v4, &qword_256898BC0);
  v5 = type metadata accessor for Alarm();
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  v7 = *(_QWORD *)(v0 + 80);
  v8 = *(_QWORD *)(v0 + 56);
  if (v6 == 1)
  {
    sub_237E2209C(*(_QWORD *)(v0 + 80), &qword_256898BC0);
    v9 = sub_237EE1D70();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  }
  else
  {
    v15 = sub_237EE1D70();
    v16 = *(_QWORD *)(v15 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v8, v7, v15);
    sub_237E21F00(v7, (uint64_t (*)(_QWORD))type metadata accessor for Alarm);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(v8, 0, 1, v15);
  }
  v17 = *(_QWORD *)(v0 + 192);
  v18 = *(_QWORD *)(v0 + 88);
  v19 = *(_QWORD *)(v0 + 56);
  swift_getKeyPath();
  v20 = swift_task_alloc();
  *(_QWORD *)(v20 + 16) = v3;
  *(_QWORD *)(v20 + 24) = v19;
  *(_QWORD *)(v0 + 40) = v3;
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F14();
  swift_release();
  swift_task_dealloc();
  sub_237E2209C(v19, &qword_25689C140);
  swift_release();
  sub_237E2209C(v18, &qword_256898BC0);
  *(_QWORD *)(v0 + 192) = v17;
  *(_QWORD *)(v0 + 200) = sub_237EE2C40();
  v21 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 208) = v21;
  *v21 = v0;
  v21[1] = sub_237E80E10;
  return sub_237EE2C94();
}

uint64_t sub_237E81180()
{
  return swift_task_switch();
}

uint64_t sub_237E81194()
{
  uint64_t v0;

  if (qword_256897B68 != -1)
    swift_once();
  *(_QWORD *)(v0 + 16) = qword_25689DFF8;
  return swift_task_switch();
}

uint64_t sub_237E811F8()
{
  uint64_t v0;
  id v1;

  v1 = sub_237ED185C(1);
  sub_237ED1F14();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_237E81238()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897E20);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_237EE2C64();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = 0;
  sub_237EDA9E4((uint64_t)v3, (uint64_t)&unk_25689B268, v5);
  swift_release();
  swift_release();
  sub_237E2A198(v0 + 32);
  swift_bridgeObjectRelease();
  v6 = v0 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__alarmText;
  v7 = sub_237EE1B0C();
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  sub_237E2209C(v0 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__alarmTime, &qword_25689C140);
  v8(v0 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__dateText, v7);
  swift_release();
  swift_release();
  swift_release();
  v9 = v0 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__date;
  v10 = sub_237EE1D70();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  sub_237E2209C(v0 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__temperature, &qword_25689B250);
  v11 = v0 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel___observationRegistrar;
  v12 = sub_237EE1F50();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  return v0;
}

uint64_t sub_237E813F4()
{
  return swift_task_switch();
}

uint64_t sub_237E81408()
{
  uint64_t v0;

  if (qword_256897B68 != -1)
    swift_once();
  *(_QWORD *)(v0 + 16) = qword_25689DFF8;
  return swift_task_switch();
}

uint64_t sub_237E8146C()
{
  uint64_t v0;
  id v1;

  v1 = sub_237ED185C(1);
  sub_237ED2250();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_237E814AC()
{
  sub_237E81238();
  return swift_deallocClassInstance();
}

uint64_t sub_237E814D0()
{
  return type metadata accessor for DigitalClockViewModel();
}

uint64_t type metadata accessor for DigitalClockViewModel()
{
  uint64_t result;

  result = qword_25689AD58;
  if (!qword_25689AD58)
    return swift_getSingletonMetadata();
  return result;
}

void sub_237E81514()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_237EE1B0C();
  if (v0 <= 0x3F)
  {
    sub_237E846E0();
    if (v1 <= 0x3F)
    {
      sub_237EE1D70();
      if (v2 <= 0x3F)
      {
        sub_237E84734();
        if (v3 <= 0x3F)
        {
          sub_237EE1F50();
          if (v4 <= 0x3F)
            swift_updateClassMetadata2();
        }
      }
    }
  }
}

uint64_t sub_237E81644()
{
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F20();
  swift_release();
  return swift_retain();
}

uint64_t sub_237E816CC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F20();
  swift_release();
  *a2 = *(_QWORD *)(v3 + 24);
  return swift_retain();
}

uint64_t sub_237E8175C()
{
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  swift_retain();
  sub_237EE1F14();
  swift_release();
  return swift_release();
}

uint64_t sub_237E81814@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  swift_getKeyPath();
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F20();
  swift_release();
  swift_beginAccess();
  return sub_237E2A13C(v1 + 32, a1);
}

uint64_t sub_237E818BC(uint64_t a1, uint64_t a2)
{
  __int128 v4[7];

  sub_237E2A13C(a2, (uint64_t)v4);
  swift_beginAccess();
  sub_237E8593C(v4, a1 + 32);
  swift_endAccess();
  sub_237E83F20();
  return sub_237E2A198((uint64_t)v4);
}

uint64_t sub_237E81938()
{
  uint64_t v0;
  uint64_t v1;

  swift_getKeyPath();
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F20();
  swift_release();
  v1 = *(_QWORD *)(v0 + 144);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_237E819CC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F20();
  swift_release();
  v4 = *(_QWORD *)(v3 + 152);
  *a2 = *(_QWORD *)(v3 + 144);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_237E81A5C()
{
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  swift_bridgeObjectRetain();
  sub_237EE1F14();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_237E81B18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[104];

  v1 = v0;
  v2 = sub_237EE26C4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v28[0] = v0;
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F20();
  swift_release();
  if (*(_BYTE *)(v0 + 17) == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3C28], v2);
    return MEMORY[0x23B825DC0](v5, 0.6, 0.0, 0.0, 1.0);
  }
  swift_getKeyPath();
  v28[0] = v0;
  sub_237EE1F20();
  swift_release();
  swift_beginAccess();
  sub_237E2A13C(v0 + 32, (uint64_t)v28);
  sub_237E28430((uint64_t)v28, (uint64_t)v31);
  sub_237E2A198((uint64_t)v28);
  sub_237E7B14C();
  v8 = v7;
  sub_237E2846C((uint64_t)v31);
  v9 = *(_QWORD *)(v8 + 16);
  swift_bridgeObjectRelease();
  if (v9 >= 3)
  {
    swift_getKeyPath();
    v28[0] = v1;
    sub_237EE1F20();
    swift_release();
    return 0xD000000000000023;
  }
  swift_getKeyPath();
  v28[0] = v1;
  sub_237EE1F20();
  swift_release();
  sub_237E2A13C(v1 + 32, (uint64_t)v28);
  sub_237E28430((uint64_t)v28, (uint64_t)v31);
  sub_237E2A198((uint64_t)v28);
  sub_237E7B14C();
  v11 = v10;
  sub_237E2846C((uint64_t)v31);
  v12 = *(_QWORD *)(v11 + 16);
  swift_bridgeObjectRelease();
  if (v12 >= 2)
  {
    swift_getKeyPath();
    v28[0] = v1;
    sub_237EE1F20();
    swift_release();
    sub_237E2A13C(v1 + 32, (uint64_t)v28);
    sub_237E28430((uint64_t)v28, (uint64_t)v31);
    sub_237E2A198((uint64_t)v28);
    sub_237E7B14C();
    v14 = v13;
    sub_237E2846C((uint64_t)v31);
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v27 = MEMORY[0x24BEE4AF8];
      sub_237EE2FE8();
      v16 = v14 + 32;
      do
      {
        sub_237E2CFE8(v16, (uint64_t)v28);
        v17 = v29;
        v18 = v30;
        __swift_project_boxed_opaque_existential_1(v28, v29);
        v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 40))(v17, v18);
        MEMORY[0x23B825DCC](v19);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
        sub_237EE2FD0();
        sub_237EE2FF4();
        sub_237EE3000();
        sub_237EE2FDC();
        v16 += 40;
        --v15;
      }
      while (v15);
      v6 = v27;
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x24BEE4AF8];
    }
    return v6;
  }
  swift_getKeyPath();
  v28[0] = v1;
  sub_237EE1F20();
  swift_release();
  sub_237E2A13C(v1 + 32, (uint64_t)v28);
  sub_237E28430((uint64_t)v28, (uint64_t)v31);
  sub_237E2A198((uint64_t)v28);
  sub_237E7B14C();
  v21 = v20;
  result = sub_237E2846C((uint64_t)v31);
  if (*(_QWORD *)(v21 + 16))
  {
    sub_237E2CFE8(v21 + 32, (uint64_t)v28);
    swift_bridgeObjectRelease();
    v23 = v29;
    v24 = v30;
    __swift_project_boxed_opaque_existential_1(v28, v29);
    v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 40))(v23, v24);
    v6 = MEMORY[0x23B825DCC](v25);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
    return v6;
  }
  __break(1u);
  return result;
}

uint64_t sub_237E81FCC@<X0>(uint64_t a1@<X8>)
{
  return sub_237E82764(&OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__alarmText, a1);
}

uint64_t sub_237E81FE0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_237E8283C(a1, &OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__alarmText, a2);
}

uint64_t sub_237E81FF4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;

  v4 = sub_237EE1B0C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a1, v4, v6);
  v9 = *a2;
  swift_getKeyPath();
  v12 = v9;
  v13 = v8;
  v14 = v9;
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F14();
  swift_release();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_237E82100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = v0;
  v2 = sub_237EE1D70();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v19 - v10;
  v12 = sub_237EE1B0C();
  v20 = *(_QWORD *)(v12 - 8);
  v21 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v15 = v0 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel___observationRegistrar;
  v23 = v1;
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  v19 = v15;
  sub_237EE1F20();
  swift_release();
  v16 = v1 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__alarmTime;
  swift_beginAccess();
  sub_237E22004(v16, (uint64_t)v11, &qword_25689C140);
  sub_237E22004((uint64_t)v11, (uint64_t)v8, &qword_25689C140);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_237E2209C((uint64_t)v8, &qword_25689C140);
    sub_237EE1B00();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_237E4E2B0((uint64_t)v14);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_237E2209C((uint64_t)v11, &qword_25689C140);
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  *(&v19 - 2) = v1;
  *(&v19 - 1) = (uint64_t)v14;
  v22 = v1;
  sub_237EE1F14();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v14, v21);
}

uint64_t sub_237E823A4@<X0>(uint64_t a1@<X8>)
{
  return sub_237E83A4C(&OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__alarmTime, &qword_25689C140, a1);
}

uint64_t sub_237E823C0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_237E83B04(a1, &OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__alarmTime, &qword_25689C140, a2);
}

uint64_t sub_237E823DC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[16];
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_237E22004(a1, (uint64_t)v6, &qword_25689C140);
  v7 = *a2;
  swift_getKeyPath();
  v10 = v7;
  v11 = v6;
  v12 = v7;
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F14();
  swift_release();
  return sub_237E2209C((uint64_t)v6, &qword_25689C140);
}

uint64_t sub_237E824E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237E22004(a2, (uint64_t)v6, &qword_25689C140);
  v7 = a1 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__alarmTime;
  swift_beginAccess();
  sub_237E47284((uint64_t)v6, v7, &qword_25689C140);
  swift_endAccess();
  sub_237E82100();
  return sub_237E2209C((uint64_t)v6, &qword_25689C140);
}

BOOL sub_237E825BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for TimeString(0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v9 = v0;
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F20();
  swift_release();
  v4 = *(_QWORD *)(v0 + 24);
  swift_getKeyPath();
  v9 = v4;
  sub_237E20E98(&qword_256897E18, (uint64_t (*)(uint64_t))type metadata accessor for RollingClockViewModel, (uint64_t)&unk_237EE4558);
  swift_retain();
  sub_237EE1F20();
  swift_release();
  v5 = v4 + OBJC_IVAR____TtC11ClockPoster21RollingClockViewModel__timeString;
  swift_beginAccess();
  sub_237E855E8(v5, (uint64_t)v3);
  swift_release();
  swift_bridgeObjectRetain();
  sub_237E21F00((uint64_t)v3, type metadata accessor for TimeString);
  v6 = sub_237EE2AD8();
  swift_bridgeObjectRelease();
  return v6 > 4;
}

uint64_t sub_237E82750@<X0>(uint64_t a1@<X8>)
{
  return sub_237E82764(&OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__dateText, a1);
}

uint64_t sub_237E82764@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  swift_getKeyPath();
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F20();
  swift_release();
  v5 = v2 + *a1;
  swift_beginAccess();
  v6 = sub_237EE1B0C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, v5, v6);
}

uint64_t sub_237E82828@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_237E8283C(a1, &OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__dateText, a2);
}

uint64_t sub_237E8283C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *a1;
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F20();
  swift_release();
  v6 = v5 + *a2;
  swift_beginAccess();
  v7 = sub_237EE1B0C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a3, v6, v7);
}

uint64_t sub_237E82904(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;

  v4 = sub_237EE1B0C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a1, v4, v6);
  v9 = *a2;
  swift_getKeyPath();
  v12 = v9;
  v13 = v8;
  v14 = v9;
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F14();
  swift_release();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_237E82A10(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *a3;
  swift_beginAccess();
  v5 = sub_237EE1B0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(v4, a2, v5);
  return swift_endAccess();
}

uint64_t sub_237E82A88()
{
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F20();
  swift_release();
  return swift_retain();
}

uint64_t sub_237E82B18@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F20();
  swift_release();
  *a2 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__complicationForegroundColor);
  return swift_retain();
}

uint64_t sub_237E82BB0()
{
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  swift_retain();
  sub_237EE1F14();
  swift_release();
  return swift_release();
}

uint64_t sub_237E82C68()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  _QWORD v12[2];
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  _QWORD *v18;

  v1 = v0;
  v12[1] = *v0;
  v2 = sub_237EE1D70();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_237EE1B0C();
  v13 = *(_QWORD *)(v6 - 8);
  v14 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v18 = v0;
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F20();
  swift_release();
  v9 = (char *)v0 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__date;
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v9, v2);
  swift_getKeyPath();
  v17 = v1;
  sub_237EE1F20();
  swift_release();
  v10 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__complicationTintColor);
  swift_getKeyPath();
  v17 = v1;
  swift_retain();
  sub_237EE1F20();
  swift_release();
  sub_237E7FBD8((uint64_t)v5, v10, *((unsigned __int8 *)v1 + 17), (uint64_t)v8);
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_getKeyPath();
  v15 = v1;
  v16 = v8;
  v17 = v1;
  sub_237EE1F14();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v8, v14);
}

uint64_t sub_237E82EB4()
{
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F20();
  swift_release();
  return swift_retain();
}

uint64_t sub_237E82F44@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F20();
  swift_release();
  *a2 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__complicationTintColor);
  return swift_retain();
}

uint64_t sub_237E82FDC()
{
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  swift_retain();
  sub_237EE1F14();
  swift_release();
  return swift_release();
}

uint64_t sub_237E83094(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)(a1 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__complicationTintColor) = a2;
  swift_retain_n();
  swift_release();
  sub_237E82C68();
  return swift_release();
}

uint64_t sub_237E830F4()
{
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F20();
  swift_release();
  return swift_retain();
}

uint64_t sub_237E83184@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F20();
  swift_release();
  *a2 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__complicationSecondaryTintColor);
  return swift_retain();
}

uint64_t sub_237E8321C()
{
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  swift_retain();
  sub_237EE1F14();
  swift_release();
  return swift_release();
}

uint64_t sub_237E832D4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  _QWORD v12[2];
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  _QWORD *v18;

  v1 = v0;
  v12[1] = *v0;
  v2 = sub_237EE1D70();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_237EE1B0C();
  v13 = *(_QWORD *)(v6 - 8);
  v14 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v18 = v0;
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F20();
  swift_release();
  v9 = (char *)v0 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__date;
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v9, v2);
  swift_getKeyPath();
  v17 = v1;
  sub_237EE1F20();
  swift_release();
  v10 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__complicationTintColor);
  swift_getKeyPath();
  v17 = v1;
  swift_retain();
  sub_237EE1F20();
  swift_release();
  sub_237E7FBD8((uint64_t)v5, v10, *((unsigned __int8 *)v1 + 17), (uint64_t)v8);
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_getKeyPath();
  v15 = v1;
  v16 = v8;
  v17 = v1;
  sub_237EE1F14();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v8, v14);
}

uint64_t sub_237E83520@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  swift_getKeyPath();
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F20();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__date;
  swift_beginAccess();
  v4 = sub_237EE1D70();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_237E835E4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a1;
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F20();
  swift_release();
  v4 = v3 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__date;
  swift_beginAccess();
  v5 = sub_237EE1D70();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_237E836A8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;

  v4 = sub_237EE1D70();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a1, v4, v6);
  v9 = *a2;
  swift_getKeyPath();
  v12 = v9;
  v13 = v8;
  v14 = v9;
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F14();
  swift_release();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_237E837B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __n128 v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v4 = sub_237EE1D70();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a2, v4, v6);
  v9 = a1 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__date;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 24))(v9, v8, v4);
  swift_endAccess();
  sub_237E832D4();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_237E83894(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B250);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = v1 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__temperature;
  swift_beginAccess();
  sub_237E47284(a1, v6, &qword_25689B250);
  swift_endAccess();
  swift_getKeyPath();
  v15 = v1;
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F20();
  swift_release();
  sub_237E22004(v6, (uint64_t)v5, &qword_25689B250);
  v7 = sub_237E85380((uint64_t)v5);
  v9 = v8;
  sub_237E2209C((uint64_t)v5, &qword_25689B250);
  swift_getKeyPath();
  v12 = v1;
  v13 = v7;
  v14 = v9;
  v15 = v1;
  sub_237EE1F14();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_237E2209C(a1, &qword_25689B250);
}

uint64_t sub_237E83A30@<X0>(uint64_t a1@<X8>)
{
  return sub_237E83A4C(&OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__temperature, &qword_25689B250, a1);
}

uint64_t sub_237E83A4C@<X0>(_QWORD *a1@<X1>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;

  swift_getKeyPath();
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F20();
  swift_release();
  v7 = v3 + *a1;
  swift_beginAccess();
  return sub_237E22004(v7, a3, a2);
}

uint64_t sub_237E83B04@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X4>, uint64_t *a3@<X5>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;

  v7 = *a1;
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F20();
  swift_release();
  v8 = v7 + *a2;
  swift_beginAccess();
  return sub_237E22004(v8, a4, a3);
}

uint64_t sub_237E83BC0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[16];
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B250);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_237E22004(a1, (uint64_t)v6, &qword_25689B250);
  v7 = *a2;
  swift_getKeyPath();
  v10 = v7;
  v11 = v6;
  v12 = v7;
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F14();
  swift_release();
  return sub_237E2209C((uint64_t)v6, &qword_25689B250);
}

uint64_t sub_237E83CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B250);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237E22004(a2, (uint64_t)v5, &qword_25689B250);
  return sub_237E83894((uint64_t)v5);
}

uint64_t sub_237E83D5C()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F20();
  swift_release();
  return *(_QWORD *)(v0 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__colorWheelIndex);
}

uint64_t sub_237E83DE8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F20();
  result = swift_release();
  *a2 = *(_QWORD *)(v3 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__colorWheelIndex);
  return result;
}

uint64_t sub_237E83E7C()
{
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F14();
  return swift_release();
}

uint64_t sub_237E83F20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];
  uint64_t v38;
  _QWORD v39[16];

  v1 = v0;
  v2 = sub_237EE26C4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v39[0] = v0;
  v6 = sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F20();
  swift_release();
  if ((*(_BYTE *)(v0 + 17) & 1) != 0)
  {
    v38 = v6;
    v7 = *MEMORY[0x24BDF3C28];
    v8 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
    v8(v5, v7, v2);
    v9 = MEMORY[0x23B825DC0](v5, 0.8, 0.0, 0.0, 1.0);
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    v37[-2] = v0;
    v37[-1] = v9;
    v39[0] = v0;
    v37[1] = MEMORY[0x24BEE4AE0] + 8;
    sub_237EE1F14();
    swift_release();
    swift_release();
    v8(v5, v7, v2);
    v11 = MEMORY[0x23B825DC0](v5, 0.6, 0.0, 0.0, 1.0);
    v12 = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](v12);
    v37[-2] = v0;
    v37[-1] = v11;
    v39[0] = v0;
    sub_237EE1F14();
    swift_release();
    swift_release();
    v13 = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](v13);
    v37[-2] = v0;
    v37[-1] = 0;
    v39[0] = v0;
    sub_237EE1F14();
    return swift_release();
  }
  v14 = sub_237EE2724();
  v15 = swift_getKeyPath();
  v16 = v37;
  MEMORY[0x24BDAC7A8](v15);
  v37[-2] = v0;
  v37[-1] = v14;
  v39[0] = v0;
  sub_237EE1F14();
  swift_release();
  swift_release();
  v17 = sub_237E81B18();
  if (v20 != 3)
  {
    sub_237E20A7C(v17, v18, v19, v20);
    swift_getKeyPath();
    v39[0] = v0;
    sub_237EE1F20();
    swift_release();
    swift_beginAccess();
    sub_237E2A13C(v0 + 32, (uint64_t)v39);
    v28 = ClockFaceLook.primaryUIColor.getter();
    sub_237E2846C((uint64_t)v39);
    v29 = MEMORY[0x23B825DCC](v28);
    v30 = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](v30);
    v37[-2] = v1;
    v37[-1] = v29;
    v39[0] = v1;
    sub_237EE1F14();
    swift_release();
    return swift_release();
  }
  sub_237E20A7C(v17, v18, v19, 3);
  if (qword_256897AB8 != -1)
    swift_once();
  swift_getKeyPath();
  v39[0] = v0;
  v38 = v6;
  sub_237EE1F20();
  swift_release();
  v21 = OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__colorWheelIndex;
  v22 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__colorWheelIndex);
  swift_beginAccess();
  if ((qword_25689DED8 & 0xC000000000000001) == 0)
  {
    if ((v22 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v22 < *(_QWORD *)((qword_25689DED8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v23 = *(id *)(qword_25689DED8 + 8 * v22 + 32);
      goto LABEL_10;
    }
    __break(1u);
    goto LABEL_26;
  }
  v23 = (id)MEMORY[0x23B826624](v22);
LABEL_10:
  v24 = v23;
  swift_endAccess();
  v25 = MEMORY[0x23B825DCC](v24);
  v26 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v26);
  v37[-2] = v1;
  v37[-1] = v25;
  v39[0] = v1;
  sub_237EE1F14();
  swift_release();
  swift_release();
  swift_getKeyPath();
  v39[0] = v1;
  sub_237EE1F20();
  swift_release();
  v16 = *(_QWORD **)(v1 + v21);
  v22 = qword_25689DED8;
  if (!((unint64_t)qword_25689DED8 >> 62))
  {
    v27 = *(_QWORD *)((qword_25689DED8 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_12;
  }
LABEL_26:
  swift_bridgeObjectRetain();
  v27 = sub_237EE30A8();
  swift_bridgeObjectRelease();
LABEL_12:
  if (__OFSUB__(v27, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v16 == (_QWORD *)(v27 - 1))
  {
    v22 = 0;
  }
  else
  {
    swift_getKeyPath();
    v39[0] = v1;
    sub_237EE1F20();
    result = swift_release();
    v32 = *(_QWORD *)(v1 + v21);
    v22 = v32 + 1;
    if (__OFADD__(v32, 1))
      goto LABEL_31;
  }
  result = swift_beginAccess();
  if ((qword_25689DED8 & 0xC000000000000001) != 0)
  {
LABEL_28:
    v33 = (id)MEMORY[0x23B826624](v22);
    goto LABEL_21;
  }
  if ((v22 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v22 < *(_QWORD *)((qword_25689DED8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v33 = *(id *)(qword_25689DED8 + 8 * v22 + 32);
LABEL_21:
    v34 = v33;
    swift_endAccess();
    v35 = MEMORY[0x23B825DCC](v34);
    v36 = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](v36);
    v37[-2] = v1;
    v37[-1] = v35;
    v39[0] = v1;
    sub_237EE1F14();
    swift_release();
    return swift_release();
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

CTFontRef sub_237E8463C(double a1)
{
  __CFString *v2;
  CTFontRef v3;

  sub_237E825BC();
  v2 = (__CFString *)sub_237EE2A54();
  swift_bridgeObjectRelease();
  v3 = CTFontCreateWithNameAndOptions(v2, round(a1 / 2.13), 0, 0x20000uLL);

  return v3;
}

void sub_237E846E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25689BEC0)
  {
    sub_237EE1D70();
    v0 = sub_237EE2ED4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25689BEC0);
  }
}

void sub_237E84734()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25689AD68)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_25689AD70);
    v0 = sub_237EE2ED4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25689AD68);
  }
}

uint64_t initializeWithCopy for DigitalClockContext(uint64_t a1, uint64_t a2)
{
  int v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;

  v4 = *(unsigned __int8 *)(a2 + 96);
  if (v4 == 2)
  {
    v7 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
    v8 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 40, a2 + 40);
    v9 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v9;
    *(_BYTE *)(a1 + 96) = 2;
    swift_bridgeObjectRetain();
  }
  else if (v4 == 1)
  {
    v10 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v10;
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_BYTE *)(a1 + 96) = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else if (*(_BYTE *)(a2 + 96))
  {
    v11 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v11;
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
    v12 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v12;
    v13 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v13;
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v5;
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    v6 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v6;
    *(_BYTE *)(a1 + 96) = 0;
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  return a1;
}

uint64_t assignWithCopy for DigitalClockContext(uint64_t a1, __int128 *a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  if ((__int128 *)a1 != a2)
  {
    sub_237E2846C(a1);
    v4 = *((unsigned __int8 *)a2 + 96);
    if (v4 == 2)
    {
      v6 = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
      v7 = *((_QWORD *)a2 + 8);
      *(_QWORD *)(a1 + 64) = v7;
      *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, (uint64_t)a2 + 40);
      *(_QWORD *)(a1 + 80) = *((_QWORD *)a2 + 10);
      *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
      *(_BYTE *)(a1 + 96) = 2;
      swift_bridgeObjectRetain();
    }
    else if (v4 == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
      *(_BYTE *)(a1 + 96) = 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else if (*((_BYTE *)a2 + 96))
    {
      v8 = *a2;
      v9 = a2[2];
      *(_OWORD *)(a1 + 16) = a2[1];
      *(_OWORD *)(a1 + 32) = v9;
      *(_OWORD *)a1 = v8;
      v10 = a2[3];
      v11 = a2[4];
      v12 = a2[5];
      *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
      *(_OWORD *)(a1 + 64) = v11;
      *(_OWORD *)(a1 + 80) = v12;
      *(_OWORD *)(a1 + 48) = v10;
    }
    else
    {
      v5 = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 24) = v5;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v5 - 8))(a1, a2);
      *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
      *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
      *(_BYTE *)(a1 + 96) = 0;
      swift_bridgeObjectRetain();
    }
  }
  *(_QWORD *)(a1 + 104) = *((_QWORD *)a2 + 13);
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for DigitalClockContext(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;

  if (a1 != a2)
  {
    sub_237E2846C(a1);
    v4 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v4;
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
  }
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for DigitalClockContext(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 112))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 96);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DigitalClockContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 112) = 0;
    if (a2)
      *(_BYTE *)(result + 96) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DigitalClockContext()
{
  return &type metadata for DigitalClockContext;
}

unint64_t sub_237E84B40(uint64_t a1)
{
  unint64_t result;

  result = sub_237E84B64();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_237E84B64()
{
  unint64_t result;

  result = qword_25689B158;
  if (!qword_25689B158)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEA944, &type metadata for DigitalClockContext);
    atomic_store(result, (unint64_t *)&qword_25689B158);
  }
  return result;
}

unint64_t sub_237E84BA8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_237E84BE4();
  a1[2] = sub_237E84C28();
  a1[3] = sub_237E84C6C();
  result = sub_237E84CB0();
  a1[4] = result;
  return result;
}

unint64_t sub_237E84BE4()
{
  unint64_t result;

  result = qword_25689B1C0;
  if (!qword_25689B1C0)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEA96C, &type metadata for DigitalClockContext);
    atomic_store(result, (unint64_t *)&qword_25689B1C0);
  }
  return result;
}

unint64_t sub_237E84C28()
{
  unint64_t result;

  result = qword_25689B1C8;
  if (!qword_25689B1C8)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEA9D8, &type metadata for DigitalClockContext);
    atomic_store(result, (unint64_t *)&qword_25689B1C8);
  }
  return result;
}

unint64_t sub_237E84C6C()
{
  unint64_t result;

  result = qword_25689B1D0;
  if (!qword_25689B1D0)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEA9B0, &type metadata for DigitalClockContext);
    atomic_store(result, (unint64_t *)&qword_25689B1D0);
  }
  return result;
}

unint64_t sub_237E84CB0()
{
  unint64_t result;

  result = qword_25689B1D8;
  if (!qword_25689B1D8)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEA988, &type metadata for DigitalClockContext);
    atomic_store(result, (unint64_t *)&qword_25689B1D8);
  }
  return result;
}

uint64_t sub_237E84CF4()
{
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F14();
  return swift_release();
}

uint64_t sub_237E84D9C()
{
  swift_getKeyPath();
  sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  sub_237EE1F14();
  return swift_release();
}

void (*sub_237E84E44(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_237E7F34C(v2);
  return sub_237E23288;
}

uint64_t sub_237E84E8C(uint64_t a1)
{
  uint64_t result;

  result = sub_237E20E98(&qword_2568984F0, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA90);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_237E84EC8(uint64_t a1)
{
  uint64_t result;

  result = sub_237E20E98(&qword_25689B220, (uint64_t (*)(uint64_t))type metadata accessor for DigitalClockViewModel, (uint64_t)&unk_237EEAA3C);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_237E84F0C()
{
  return sub_237E84F20();
}

uint64_t sub_237E84F20()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 16) + 17) = *(_BYTE *)(v0 + 24);
  return sub_237E83F20();
}

uint64_t sub_237E84F5C()
{
  return sub_237E84F70();
}

uint64_t sub_237E84F70()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_BYTE *)(v0 + 24);
  result = swift_beginAccess();
  *(_BYTE *)(v1 + 16) = v2;
  return result;
}

unint64_t sub_237E84FC0()
{
  unint64_t result;

  result = qword_25689B230;
  if (!qword_25689B230)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEAEAC, &type metadata for DigitalClockContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25689B230);
  }
  return result;
}

uint64_t sub_237E8500C()
{
  return sub_237E85220();
}

uint64_t sub_237E85030()
{
  uint64_t v0;

  return sub_237E83094(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_237E85058()
{
  return sub_237E8506C();
}

uint64_t sub_237E8506C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__complicationSecondaryTintColor) = *(_QWORD *)(v0 + 24);
  swift_retain();
  return swift_release();
}

uint64_t sub_237E850AC()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__colorWheelIndex) = *(_QWORD *)(v0 + 24);
  return sub_237E83F20();
}

uint64_t sub_237E850EC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_237E8283C(a1, &OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__dateText, a2);
}

uint64_t sub_237E85114()
{
  uint64_t v0;

  return sub_237E82A10(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__dateText);
}

uint64_t sub_237E85140()
{
  return 8;
}

uint64_t sub_237E8514C()
{
  return swift_release();
}

uint64_t sub_237E85154(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

_QWORD *sub_237E85168(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void sub_237E85174()
{
  sub_237EE1AC4();
  __break(1u);
}

void sub_237E85190()
{
  sub_237E220F8();
  sub_237EE1BD8();
  __break(1u);
}

uint64_t sub_237E851B4()
{
  return 8;
}

uint64_t sub_237E851C4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689B248);
  return sub_237EE2A24();
}

uint64_t sub_237E85208()
{
  uint64_t v0;

  return sub_237E837B4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_237E85220()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__complicationForegroundColor) = *(_QWORD *)(v0 + 24);
  swift_retain();
  return swift_release();
}

uint64_t sub_237E85260@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_237E83B04(a1, &OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__temperature, &qword_25689B250, a2);
}

uint64_t sub_237E85290()
{
  uint64_t v0;

  return sub_237E83CC8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_237E852A8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1802465132 && a2 == 0xE400000000000000;
  if (v2 || (sub_237EE31BC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C676E61 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237EE31BC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_237E85380(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v13;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B250);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_25689AD70);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237E22004(a1, (uint64_t)v4, &qword_25689B250);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_237E2209C((uint64_t)v4, &qword_25689B250);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1668]), sel_init);
    objc_msgSend(v10, sel_setUnitStyle_, 1);
    v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16F0]), sel_init);
    objc_msgSend(v11, sel_setNumberStyle_, 1);
    objc_msgSend(v11, sel_setMaximumFractionDigits_, 0);
    objc_msgSend(v10, sel_setNumberFormatter_, v11);
    sub_237E8559C();
    v9 = sub_237EE2E68();

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v9;
}

uint64_t sub_237E8554C()
{
  return sub_237E85560();
}

uint64_t sub_237E85560()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[2];
  v2 = v0[4];
  *(_QWORD *)(v1 + 144) = v0[3];
  *(_QWORD *)(v1 + 152) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

unint64_t sub_237E8559C()
{
  unint64_t result;

  result = qword_25689B258;
  if (!qword_25689B258)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_25689B258);
  }
  return result;
}

uint64_t sub_237E855E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TimeString(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_237E8562C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + 24) = *(_QWORD *)(v0 + 24);
  swift_retain();
  return swift_release();
}

uint64_t sub_237E85664@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_237E83B04(a1, &OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__alarmTime, &qword_25689C140, a2);
}

uint64_t sub_237E85694()
{
  uint64_t v0;

  return sub_237E824E4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_237E856AC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_237E8283C(a1, &OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__alarmText, a2);
}

uint64_t sub_237E856D4()
{
  uint64_t v0;

  return sub_237E82A10(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &OBJC_IVAR____TtC11ClockPoster21DigitalClockViewModel__alarmText);
}

uint64_t sub_237E856F4()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_237E85718()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_237E487A8;
  return swift_task_switch();
}

uint64_t sub_237E85770()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_237E85798(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_237E487A8;
  return sub_237E8013C(a1, v4, v5, v6);
}

uint64_t sub_237E85808(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_237E20844;
  return sub_237E80650(a1, v4, v5, v6);
}

uint64_t sub_237E85878(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_237E487A8;
  return sub_237E80B38(a1, v4, v5, v6);
}

uint64_t sub_237E858E4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_237E487A8;
  return swift_task_switch();
}

uint64_t sub_237E8593C(__int128 *a1, uint64_t a2)
{
  assignWithCopy for DigitalClockContext(a2, a1);
  return a2;
}

uint64_t storeEnumTagSinglePayload for DigitalClockContext.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_237E859BC + 4 * byte_237EEA869[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_237E859F0 + 4 * byte_237EEA864[v4]))();
}

uint64_t sub_237E859F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237E859F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237E85A00);
  return result;
}

uint64_t sub_237E85A0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237E85A14);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_237E85A18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237E85A20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DigitalClockContext.CodingKeys()
{
  return &type metadata for DigitalClockContext.CodingKeys;
}

unint64_t sub_237E85A40()
{
  unint64_t result;

  result = qword_25689B2C8;
  if (!qword_25689B2C8)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEAE84, &type metadata for DigitalClockContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25689B2C8);
  }
  return result;
}

unint64_t sub_237E85A88()
{
  unint64_t result;

  result = qword_25689B2D0;
  if (!qword_25689B2D0)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEADF4, &type metadata for DigitalClockContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25689B2D0);
  }
  return result;
}

unint64_t sub_237E85AD0()
{
  unint64_t result;

  result = qword_25689B2D8;
  if (!qword_25689B2D8)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEAE1C, &type metadata for DigitalClockContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25689B2D8);
  }
  return result;
}

uint64_t sub_237E85B24()
{
  return sub_237E85030();
}

uint64_t sub_237E85B38()
{
  return sub_237E85114();
}

uint64_t sub_237E85B4C()
{
  return sub_237E856D4();
}

uint64_t sub_237E85B60()
{
  return sub_237E85694();
}

uint64_t sub_237E85B74()
{
  return sub_237E85290();
}

uint64_t sub_237E85B88()
{
  return sub_237E85208();
}

uint64_t destroy for SolarClockFace()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for SolarClockFace(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SolarClockFace(uint64_t a1, uint64_t a2)
{
  char v4;

  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SolarClockFace(uint64_t a1, uint64_t a2)
{
  char v4;

  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SolarClockFace(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SolarClockFace(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SolarClockFace()
{
  return &type metadata for SolarClockFace;
}

uint64_t sub_237E85D88()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_237E85D98@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_237E20E98(&qword_256898680, (uint64_t (*)(uint64_t))type metadata accessor for SolarViewModel, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F20();
  swift_release();
  *a2 = *(_QWORD *)(v3 + 16);
  return swift_retain();
}

uint64_t sub_237E85E28()
{
  swift_getKeyPath();
  sub_237E20E98(&qword_256898680, (uint64_t (*)(uint64_t))type metadata accessor for SolarViewModel, (uint64_t)&unk_237EE9F0C);
  swift_retain();
  sub_237EE1F14();
  swift_release();
  return swift_release();
}

uint64_t sub_237E85EE0@<X0>(char a1@<W1>, uint64_t a2@<X2>, uint64_t a3@<X8>, double a4@<D0>)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double *v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 *v36;
  double v37;
  double v38;
  uint64_t v39;
  double v40;
  int v41;
  double v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE v57[4];
  int v58;
  uint64_t v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  _BYTE *v64;
  _BYTE *v65;
  uint64_t v66;
  _BYTE *v67;
  double v68;
  uint64_t v69;
  double v70;
  uint64_t v71;
  double v72;
  double v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  double v79;
  uint64_t v80;
  double v81;

  v66 = a3;
  v6 = a1 & 1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B320);
  MEMORY[0x24BDAC7A8](v7);
  v67 = &v57[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v65 = &v57[-v10];
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B328);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (uint64_t *)&v57[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B330);
  MEMORY[0x24BDAC7A8](v14);
  v16 = &v57[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B338);
  MEMORY[0x24BDAC7A8](v17);
  v19 = &v57[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v20);
  v22 = &v57[-v21];
  *v13 = sub_237EE2904();
  v13[1] = v23;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B340);
  sub_237E864D4(v6, a2, (char *)v13 + *(int *)(v24 + 44), a4);
  v68 = a4;
  v62 = a2;
  v69 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689B348);
  sub_237EE27D8();
  v25 = 1.0 / v81;
  sub_237EE2994();
  v27 = v26;
  v29 = v28;
  sub_237E22004((uint64_t)v13, (uint64_t)v16, &qword_25689B328);
  v30 = (double *)&v16[*(int *)(v14 + 36)];
  *v30 = v25;
  v30[1] = v25;
  *((_QWORD *)v30 + 2) = v27;
  *((_QWORD *)v30 + 3) = v29;
  sub_237E2209C((uint64_t)v13, &qword_25689B328);
  v31 = sub_237EE21C0();
  LOBYTE(v13) = sub_237EE252C();
  sub_237E22004((uint64_t)v16, (uint64_t)v19, &qword_25689B330);
  v32 = &v19[*(int *)(v17 + 36)];
  *(_QWORD *)v32 = v31;
  v32[8] = (_BYTE)v13;
  sub_237E2209C((uint64_t)v16, &qword_25689B330);
  v64 = v22;
  sub_237E21FC0((uint64_t)v19, (uint64_t)v22, &qword_25689B338);
  v33 = swift_retain();
  v63 = v6;
  *(double *)&v34 = COERCE_DOUBLE(sub_237EC3F64(v33, v6));
  swift_release();
  swift_getKeyPath();
  v68 = *(double *)&v34;
  v35 = sub_237E20E98(&qword_256898680, (uint64_t (*)(uint64_t))type metadata accessor for SolarViewModel, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F20();
  swift_release();
  v36 = (unsigned __int8 *)(v34 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__isDebuggingHUDVisible);
  swift_beginAccess();
  LODWORD(v36) = *v36;
  swift_release();
  if ((_DWORD)v36 == 1)
  {
    v79 = a4;
    v80 = v62;
    sub_237EE27F0();
    v37 = v68;
    v60 = v68;
    v61 = v69;
    v38 = v70;
    type metadata accessor for SolarViewModel();
    *(double *)&v39 = COERCE_DOUBLE(sub_237EE20B8());
    v62 = v35;
    v40 = *(double *)&v39;
    v58 = v41;
    v79 = 1.0;
    sub_237EE27CC();
    v42 = v68;
    v43 = v69;
    v59 = v69;
    LOBYTE(v79) = 1;
    sub_237EE27CC();
    v44 = LOBYTE(v68);
    v45 = v69;
    LOBYTE(v79) = 1;
    sub_237EE27CC();
    v46 = LOBYTE(v68);
    v47 = v69;
    v68 = v40;
    LOBYTE(v69) = v58 & 1;
    v70 = v37;
    v71 = v61;
    v72 = v38;
    v73 = v42;
    v74 = v43;
    v75 = v44;
    v76 = v45;
    v77 = v46;
    v78 = v47;
    v48 = swift_retain();
    sub_237EC3F64(v48, v63);
    swift_release();
    sub_237E87760();
    v49 = (uint64_t)v65;
    sub_237EE2640();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B350);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 56))(v49, 0, 1, v50);
  }
  else
  {
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B350);
    v49 = (uint64_t)v65;
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v65, 1, 1, v51);
  }
  v52 = (uint64_t)v64;
  sub_237E22004((uint64_t)v64, (uint64_t)v19, &qword_25689B338);
  v53 = v67;
  sub_237E22004(v49, (uint64_t)v67, &qword_25689B320);
  v54 = v66;
  sub_237E22004((uint64_t)v19, v66, &qword_25689B338);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B358);
  sub_237E22004((uint64_t)v53, v54 + *(int *)(v55 + 48), &qword_25689B320);
  sub_237E2209C(v49, &qword_25689B320);
  sub_237E2209C(v52, &qword_25689B338);
  sub_237E2209C((uint64_t)v53, &qword_25689B320);
  return sub_237E2209C((uint64_t)v19, &qword_25689B338);
}

uint64_t sub_237E864D4@<X0>(char a1@<W1>, uint64_t a2@<X2>, char *a3@<X8>, double a4@<D0>)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  int v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  double v68;
  double v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v60 = a3;
  v6 = a1 & 1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B368);
  MEMORY[0x24BDAC7A8](v7);
  v67 = (uint64_t)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v52 - v10);
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B370);
  v63 = *(_QWORD *)(v66 - 8);
  MEMORY[0x24BDAC7A8](v66);
  v65 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v52 - v14;
  type metadata accessor for SolarViewModel();
  sub_237E20E98(&qword_256898680, (uint64_t (*)(uint64_t))type metadata accessor for SolarViewModel, (uint64_t)&unk_237EE9F0C);
  v16 = sub_237EE20B8();
  v69 = 0.0333333333;
  v70 = v16;
  LOBYTE(v71) = v17 & 1;
  v18 = swift_retain();
  v19 = v6;
  sub_237EC3F64(v18, v6);
  swift_release();
  sub_237E877A4();
  v64 = v15;
  sub_237EE2640();
  swift_release();
  swift_release();
  v69 = a4;
  v70 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689B348);
  sub_237EE27D8();
  v20 = 0.0;
  v21 = 0;
  v22 = 0;
  v23 = 0;
  v24 = 0;
  v25 = 0;
  v61 = 0;
  v26 = 0;
  v27 = 0;
  v28 = 0;
  if (1.0 / v68 != 1.0)
  {
    v61 = sub_237EE26E8();
    sub_237EE20C4();
    v29 = v69;
    v22 = v70;
    v23 = v71;
    v24 = v72;
    v25 = v73;
    v27 = sub_237EE2904();
    v20 = v29 * 0.5;
    v21 = *(_QWORD *)&v29;
    v26 = 256;
  }
  v54 = v24;
  v57 = v26;
  v62 = v25;
  v58 = v28;
  v59 = v27;
  v30 = *(_QWORD *)&v20;
  v31 = v21;
  *v11 = sub_237EE2904();
  v11[1] = v32;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B380);
  sub_237E8690C(v19 != 0, a2, (uint64_t)v11 + *(int *)(v33 + 44));
  v34 = (uint64_t)v11;
  v56 = v11;
  v35 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
  v36 = v61;
  v38 = v65;
  v37 = v66;
  v35(v65, v64, v66);
  sub_237E22004(v34, v67, &qword_25689B368);
  v39 = v23;
  v53 = v23;
  v40 = v60;
  v35(v60, v38, v37);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B388);
  v42 = (uint64_t *)&v40[*(int *)(v41 + 48)];
  v55 = v30;
  *v42 = v30;
  v42[1] = v31;
  v42[2] = v22;
  v42[3] = v39;
  v43 = v54;
  v44 = v62;
  v42[4] = v54;
  v42[5] = v44;
  v45 = v57;
  v42[6] = v36;
  v42[7] = v45;
  v46 = v58;
  v42[8] = v59;
  v42[9] = v46;
  sub_237E22004(v67, (uint64_t)&v40[*(int *)(v41 + 64)], &qword_25689B368);
  v47 = v30;
  v48 = v53;
  sub_237E877E8(v47, v31, v22, v53, v43);
  sub_237E2209C((uint64_t)v56, &qword_25689B368);
  v49 = *(void (**)(char *, uint64_t))(v63 + 8);
  v50 = v66;
  v49(v64, v66);
  sub_237E2209C(v67, &qword_25689B368);
  sub_237E87818(v55, v31, v22, v48, v43);
  return ((uint64_t (*)(char *, uint64_t))v49)(v65, v50);
}

uint64_t sub_237E8690C@<X0>(char a1@<W1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v25 = a2;
  v28 = a3;
  v3 = a1 & 1;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B390);
  MEMORY[0x24BDAC7A8](v26);
  v27 = (uint64_t)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_237EE26C4();
  v23 = *(_QWORD *)(v5 - 8);
  v24 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B398);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B3A0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v22 - v15;
  v17 = swift_retain();
  v18 = sub_237EC3F64(v17, v3);
  swift_release();
  swift_getKeyPath();
  v29 = v18;
  sub_237E20E98(&qword_256898680, (uint64_t (*)(uint64_t))type metadata accessor for SolarViewModel, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F20();
  swift_release();
  v19 = *(unsigned __int8 *)(v18 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__isDisplayStyleRedMode);
  swift_release();
  if (v19 == 1)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v23 + 104))(v7, *MEMORY[0x24BDF3C28], v24);
    v20 = MEMORY[0x23B825DC0](v7, 0.8, 0.0, 0.0, 1.0);
    sub_237E86C9C(v20, 0, 0, 0, v3 != 0, (uint64_t)v10);
    swift_release();
    sub_237E22004((uint64_t)v10, (uint64_t)v13, &qword_25689B398);
    *(_QWORD *)&v13[*(int *)(v11 + 36)] = 0x3FF0000000000000;
  }
  else
  {
    sub_237E86C9C(2, 0, 0, 4, v3 != 0, (uint64_t)v10);
    sub_237E22004((uint64_t)v10, (uint64_t)v13, &qword_25689B398);
    *(_QWORD *)&v13[*(int *)(v11 + 36)] = 0;
  }
  sub_237E2209C((uint64_t)v10, &qword_25689B398);
  sub_237E21FC0((uint64_t)v13, (uint64_t)v16, &qword_25689B3A0);
  sub_237E22004((uint64_t)v16, v27, &qword_25689B3A0);
  swift_storeEnumTagMultiPayload();
  sub_237E87850();
  sub_237EE24B4();
  return sub_237E2209C((uint64_t)v16, &qword_25689B3A0);
}

uint64_t sub_237E86C9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W5>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  __CFString *v12;
  CTFontRef v13;
  uint64_t v14;
  char v15;
  char v16;
  const __CTFont *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  const __CTFont *v25;
  const __CTFont *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v33[2];
  int v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  const __CTFont *v47;
  const __CTFont *v48;
  __int16 v49;

  v38 = a6;
  v34 = a5 & 1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898840);
  v36 = *(_QWORD *)(v10 - 8);
  v37 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v35 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (__CFString *)sub_237EE2A54();
  v13 = CTFontCreateWithNameAndOptions(v12, 210.0, 0, 0x20000uLL);

  type metadata accessor for RollingClockViewModel();
  sub_237E209B8(a1, a2, a3, a4);
  v33[1] = sub_237E20E98(&qword_256897E18, (uint64_t (*)(uint64_t))type metadata accessor for RollingClockViewModel, (uint64_t)&unk_237EE4558);
  v14 = sub_237EE20B8();
  v16 = v15;
  sub_237E209B8(a1, a2, a3, a4);
  v17 = v13;
  v18 = sub_237E23CCC();
  sub_237E20A7C(a1, a2, a3, a4);
  v40 = v14;
  v41 = v16 & 1;
  v42 = v18;
  v43 = a1;
  v44 = a2;
  v45 = a3;
  v46 = a4;
  v47 = v17;
  v48 = v17;
  v49 = 640;
  v19 = swift_retain();
  v20 = sub_237EC3F64(v19, v34);
  swift_release();
  swift_getKeyPath();
  v39 = v20;
  sub_237E20E98(&qword_256898680, (uint64_t (*)(uint64_t))type metadata accessor for SolarViewModel, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F20();
  swift_release();
  swift_retain();
  swift_release();
  sub_237E32F44();
  v21 = v35;
  sub_237EE2640();
  swift_release();
  v22 = v43;
  v23 = v44;
  v24 = v45;
  v26 = v47;
  v25 = v48;
  v27 = v46;

  swift_release();
  sub_237E20A7C(v22, v23, v24, v27);

  sub_237EE2118();
  sub_237EE2934();
  v28 = sub_237EE2124();
  swift_release();
  swift_release();
  v30 = v36;
  v29 = v37;
  v31 = v38;
  (*(void (**)(uint64_t, char *, uint64_t))(v36 + 16))(v38, v21, v37);
  *(_QWORD *)(v31 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25689B398) + 36)) = v28;
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v21, v29);
}

uint64_t sub_237E86FAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B308);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (uint64_t *)((char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = *(_BYTE *)(v1 + 8);
  v7 = *(double *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  *v5 = sub_237EE2904();
  v5[1] = v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B310);
  sub_237E85EE0(v6, v8, (uint64_t)v5 + *(int *)(v10 + 44), v7);
  v11 = sub_237EE2700();
  v12 = sub_237EE252C();
  sub_237E22004((uint64_t)v5, a1, &qword_25689B308);
  v13 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25689B318) + 36);
  *(_QWORD *)v13 = v11;
  *(_BYTE *)(v13 + 8) = v12;
  return sub_237E2209C((uint64_t)v5, &qword_25689B308);
}

unint64_t sub_237E870AC(uint64_t a1)
{
  unint64_t result;

  result = sub_237E2CE98();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void sub_237E870D0(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>, double a5@<D0>)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  double *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  id v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int16 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char v68;
  __int128 v69;

  v51 = a1;
  v49 = a4;
  v7 = a3 & 1;
  v8 = sub_237EE1D70();
  v53 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B458);
  v55 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B408);
  MEMORY[0x24BDAC7A8](v54);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B3E8);
  MEMORY[0x24BDAC7A8](v47);
  v48 = (uint64_t)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_retain();
  v18 = sub_237EC3F64(v17, v7);
  swift_release();
  swift_getKeyPath();
  v56 = v18;
  v52 = sub_237E20E98(&qword_256898680, (uint64_t (*)(uint64_t))type metadata accessor for SolarViewModel, (uint64_t)&unk_237EE9F0C);
  sub_237EE1F20();
  swift_release();
  v19 = v18 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__colorPalette;
  swift_beginAccess();
  sub_237E22004(v19, (uint64_t)&v56, &qword_25689AB00);
  swift_release();
  if (!v59)
  {
    __break(1u);
    goto LABEL_7;
  }
  v50 = v11;
  v20 = v63;
  v21 = v64;
  __swift_project_boxed_opaque_existential_1(&v61, v63);
  v22 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 24))(v20, v21);
  v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.4, 0.0, 0.0, 1.0);
  v24 = (id)CLKUIInterpolateBetweenColors();

  if (!v24)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_237E79AC0((uint64_t)&v56);
  v25 = MEMORY[0x23B825DCC](v24);
  sub_237EE2904();
  sub_237EE20E8();
  v56 = v25;
  v57 = 256;
  v58 = v65;
  LOBYTE(v59) = v66;
  v60 = v67;
  LOBYTE(v61) = v68;
  v62 = v69;
  v63 = 0x4069000000000000;
  LOBYTE(v64) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689B448);
  sub_237EE20D0();
  v26 = swift_allocObject();
  *(double *)(v26 + 16) = a5;
  *(_QWORD *)(v26 + 24) = a2;
  *(_BYTE *)(v26 + 32) = v7 != 0;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689B410);
  sub_237E87F78();
  sub_237E20E98(&qword_256898838, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
  sub_237EE2688();
  swift_release();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v10, v8);
  swift_release();
  v27 = swift_retain();
  sub_237EC3F64(v27, v7);
  swift_release();
  v28 = sub_237E778EC();
  v30 = v29;
  swift_release();
  v31 = v55;
  v32 = v50;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v15, v13, v50);
  v33 = (double *)&v15[*(int *)(v54 + 36)];
  *v33 = v28;
  *((_QWORD *)v33 + 1) = v30;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v32);
  v34 = swift_retain();
  v35 = sub_237EC3F64(v34, v7);
  swift_release();
  swift_getKeyPath();
  v56 = v35;
  sub_237EE1F20();
  swift_release();
  v36 = v35 + OBJC_IVAR____TtC11ClockPoster14SolarViewModel__colorPalette;
  swift_beginAccess();
  sub_237E22004(v36, (uint64_t)&v56, &qword_25689AB00);
  swift_release();
  v37 = v59;
  if (!v59)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v38 = v60;
  __swift_project_boxed_opaque_existential_1(&v56, v59);
  v39 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v38 + 24))(v37, v38);
  v40 = objc_msgSend((id)objc_opt_self(), sel_blackColor);
  v41 = (id)CLKUIInterpolateBetweenColors();

  if (v41)
  {
    sub_237E79AC0((uint64_t)&v56);
    v42 = MEMORY[0x23B825DCC](v41);
    v43 = sub_237EE252C();
    v44 = v48;
    sub_237E22004((uint64_t)v15, v48, &qword_25689B408);
    v45 = v44 + *(int *)(v47 + 36);
    *(_QWORD *)v45 = v42;
    *(_BYTE *)(v45 + 8) = v43;
    sub_237E2209C((uint64_t)v15, &qword_25689B408);
    sub_237E21FC0(v44, v49, &qword_25689B3E8);
    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_237E876F4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v4;
  double v5;
  double v6;
  uint64_t v7;

  v4 = a4 & 1;
  sub_237EE1CE0();
  v6 = v5;
  v7 = swift_retain();
  sub_237EC3F64(v7, v4);
  swift_release();
  sub_237E77E70(v6);
  return swift_release();
}

unint64_t sub_237E87760()
{
  unint64_t result;

  result = qword_25689B360;
  if (!qword_25689B360)
  {
    result = MEMORY[0x23B8271D0](&unk_237EECF88, &type metadata for SolarClockFaceDebugHUD);
    atomic_store(result, (unint64_t *)&qword_25689B360);
  }
  return result;
}

unint64_t sub_237E877A4()
{
  unint64_t result;

  result = qword_25689B378;
  if (!qword_25689B378)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEB018, &type metadata for SolarBackground);
    atomic_store(result, (unint64_t *)&qword_25689B378);
  }
  return result;
}

uint64_t sub_237E877E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  if (a5)
  {
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_237E87818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  if (a5)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

unint64_t sub_237E87850()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25689B3A8;
  if (!qword_25689B3A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25689B3A0);
    v2[0] = sub_237E878D4();
    v2[1] = sub_237E22690(&qword_25689B3C8, &qword_25689B3D0, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25689B3A8);
  }
  return result;
}

unint64_t sub_237E878D4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_25689B3B0;
  if (!qword_25689B3B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25689B398);
    v2[2] = &type metadata for RollingClock;
    v2[3] = type metadata accessor for RollingClockViewModel();
    v2[4] = sub_237E32F44();
    v2[5] = sub_237E20E98(&qword_256897E18, (uint64_t (*)(uint64_t))type metadata accessor for RollingClockViewModel, (uint64_t)&unk_237EE4558);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_237E22690(&qword_25689B3B8, &qword_25689B3C0, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25689B3B0);
  }
  return result;
}

uint64_t sub_237E879BC()
{
  uint64_t v0;

  return sub_237E760AC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t destroy for SolarBackground()
{
  return swift_release();
}

uint64_t _s11ClockPoster15SolarBackgroundVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 16);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SolarBackground(uint64_t a1, uint64_t a2)
{
  char v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = v3;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SolarBackground(uint64_t a1, uint64_t a2)
{
  char v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = v3;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for SolarBackground()
{
  return &type metadata for SolarBackground;
}

unint64_t sub_237E87AB0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25689B3D8;
  if (!qword_25689B3D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25689B318);
    v2[0] = sub_237E22690(&qword_25689B3E0, &qword_25689B308, MEMORY[0x24BDF4750]);
    v2[1] = sub_237E22690(&qword_256898828, &qword_256898830, MEMORY[0x24BDF06D0]);
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25689B3D8);
  }
  return result;
}

uint64_t sub_237E87B4C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_237E87B5C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = sub_237EE24E4();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDF0768];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v15 - v7;
  v9 = *v0;
  v10 = v0[1];
  v11 = *((_BYTE *)v0 + 16);
  sub_237EE24D8();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v9;
  *(_QWORD *)(v12 + 24) = v10;
  *(_BYTE *)(v12 + 32) = v11;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v1);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_237E87D10;
  *(_QWORD *)(v13 + 24) = v12;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689B3E8);
  sub_237E20E98(&qword_25689B3F0, v2, MEMORY[0x24BDF0760]);
  sub_237E87E1C();
  sub_237EE20DC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v1);
}

uint64_t sub_237E87CEC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_237E87D10(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_237E870D0(a1, *(_QWORD *)(v2 + 24), *(_BYTE *)(v2 + 32), a2, *(double *)(v2 + 16));
}

uint64_t sub_237E87D20(uint64_t a1, void (*a2)(char *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B448);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B450);
  if (*(_QWORD *)(*(_QWORD *)(result - 8) + 64) == v6)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
    a2((char *)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))((char *)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_237E87DF0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_237E87E14(uint64_t a1)
{
  uint64_t v1;

  return sub_237E87D20(a1, *(void (**)(char *))(v1 + 16));
}

unint64_t sub_237E87E1C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25689B3F8;
  if (!qword_25689B3F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25689B3E8);
    v2[0] = sub_237E87EA0();
    v2[1] = sub_237E22690(&qword_256898828, &qword_256898830, MEMORY[0x24BDF06D0]);
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25689B3F8);
  }
  return result;
}

unint64_t sub_237E87EA0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  _QWORD v5[6];

  result = qword_25689B400;
  if (!qword_25689B400)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25689B408);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25689B410);
    v3 = sub_237EE1D70();
    v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
    v5[2] = v2;
    v5[3] = v3;
    v5[4] = sub_237E87F78();
    v5[5] = sub_237E20E98(&qword_256898838, v4, MEMORY[0x24BDCE958]);
    v5[0] = swift_getOpaqueTypeConformance2();
    v5[1] = sub_237E88068();
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v1, v5);
    atomic_store(result, (unint64_t *)&qword_25689B400);
  }
  return result;
}

unint64_t sub_237E87F78()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25689B418;
  if (!qword_25689B418)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25689B410);
    v2[0] = sub_237E87FE4();
    v2[1] = MEMORY[0x24BDEB920];
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25689B418);
  }
  return result;
}

unint64_t sub_237E87FE4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_25689B420;
  if (!qword_25689B420)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25689B428);
    v2[0] = sub_237E22690(&qword_25689B430, &qword_25689B438, MEMORY[0x24BDEB358]);
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_25689B420);
  }
  return result;
}

unint64_t sub_237E88068()
{
  unint64_t result;

  result = qword_25689B440;
  if (!qword_25689B440)
  {
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDED5C0], MEMORY[0x24BDED5D0]);
    atomic_store(result, (unint64_t *)&qword_25689B440);
  }
  return result;
}

uint64_t sub_237E880B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_237E876F4(a1, a2, *(_QWORD *)(v2 + 24), *(_BYTE *)(v2 + 32));
}

unint64_t sub_237E880C8()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_25689B460;
  if (!qword_25689B460)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25689B468);
    v2 = sub_237E87E1C();
    result = MEMORY[0x23B8271D0](MEMORY[0x24BDEBD40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25689B460);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for ColorCurveElement(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  a1[2] = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

void destroy for ColorCurveElement(uint64_t a1)
{

}

_QWORD *assignWithCopy for ColorCurveElement(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *a1 = *a2;
  v4 = (void *)a2[1];
  v5 = (void *)a1[1];
  a1[1] = v4;
  v6 = v4;

  v7 = (void *)a2[2];
  v8 = (void *)a1[2];
  a1[2] = v7;
  v9 = v7;

  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ColorCurveElement(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;

  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for ColorCurveElement(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ColorCurveElement(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ColorCurveElement()
{
  return &type metadata for ColorCurveElement;
}

ValueMetadata *type metadata accessor for ColorCurve()
{
  return &type metadata for ColorCurve;
}

uint64_t sub_237E882EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  char *v17;
  int v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B480);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for SolarPosition(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16))(v12, a1, a3, v15);
  v18 = swift_dynamicCast();
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  if (v18)
  {
    v19(v8, 0, 1, v13);
    sub_237E88A2C((uint64_t)v8, (uint64_t)v17);
    v22 = a2;
    swift_bridgeObjectRetain_n();
    sub_237E8DD80(&v22);
    swift_bridgeObjectRelease();
    a2 = v22;
    sub_237E88A70((uint64_t)v17);
  }
  else
  {
    v19(v8, 1, 1, v13);
    sub_237E889EC((uint64_t)v8);
    swift_bridgeObjectRetain();
  }
  return a2;
}

id sub_237E884AC(uint64_t a1, float a2)
{
  uint64_t v2;
  double v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  double v10;
  void *v11;
  void *v12;
  double v13;
  void *v14;
  void *v15;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return objc_msgSend((id)objc_opt_self(), sel_blackColor);
  if (v2 == 1)
    return *(id *)(a1 + 40);
  v4 = a2;
  sub_237E8859C(a1, (uint64_t)&v10, a2);
  v5 = v11;
  v6 = v12;
  v7 = v14;
  v8 = v15;
  v9 = sub_237E88AAC(v11, v14, v15, v4, v10, v13);

  return v9;
}

void sub_237E8859C(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v3;
  uint64_t v4;
  double v6;
  void *v7;
  void **v8;
  void *v9;
  double v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  double v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  double v27;
  void *v28;
  void *v29;
  double v30;
  void *v31;
  void *v32;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v39;
  void *v40;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    __break(1u);
    goto LABEL_15;
  }
  v4 = v3 - 1;
  if (v3 == 1)
  {
LABEL_15:
    __break(1u);
    return;
  }
  v6 = *(double *)(a1 + 32);
  v7 = *(void **)(a1 + 48);
  v8 = (void **)(a1 + 72);
  v9 = *(void **)(a1 + 72);
  v10 = *(double *)(a1 + 56);
  v11 = *(void **)(a1 + 64);
  v12 = *(id *)(a1 + 40);
  v13 = v7;
  v14 = v11;
  v15 = v9;
  v16 = v6;
  v39 = v13;
  v40 = v12;
  v17 = v12;
  while (1)
  {
    v27 = *((double *)v8 - 5);
    v28 = *(v8 - 4);
    v29 = *(v8 - 3);
    v30 = *((double *)v8 - 2);
    v32 = *(v8 - 1);
    v31 = *v8;
    if (v27 <= a3 && v30 >= a3)
      break;
    if (v4 == 1)
    {
      v18 = v28;
      v19 = v29;
      v20 = v17;
      v21 = v19;
      v22 = v32;
      v23 = v31;
      v24 = v13;
      v13 = v23;

      v25 = v40;
      v26 = v39;

      v17 = v22;
      v10 = v6;
      v14 = v25;
      v15 = v26;
      v16 = v30;
    }
    else
    {
      v30 = v16;
    }
    v8 += 3;
    v27 = v30;
    if (!--v4)
      goto LABEL_13;
  }
  v34 = v28;
  v35 = v29;
  v36 = v32;
  v37 = v31;

  v17 = v34;
  v13 = v35;
  v10 = v30;
  v14 = v36;
  v15 = v37;
LABEL_13:
  *(double *)a2 = v27;
  *(_QWORD *)(a2 + 8) = v17;
  *(_QWORD *)(a2 + 16) = v13;
  *(double *)(a2 + 24) = v10;
  *(_QWORD *)(a2 + 32) = v14;
  *(_QWORD *)(a2 + 40) = v15;
}

uint64_t sub_237E8875C(uint64_t a1, float a2)
{
  id v4;
  id v5;

  sub_237EE2FA0();
  sub_237EE2AF0();
  sub_237EE2D00();
  sub_237EE2AF0();
  v4 = sub_237E884AC(a1, a2);
  v5 = objc_msgSend(v4, sel_description);
  sub_237EE2A84();

  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  return 0;
}

id sub_237E88868()
{
  uint64_t v0;

  return sub_237E884AC(*(_QWORD *)(v0 + 8), *(float *)v0);
}

uint64_t sub_237E88874@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  int v6;

  result = sub_237E882EC(a1, *(_QWORD *)(v3 + 8), a2);
  *(_DWORD *)a3 = v6;
  *(_QWORD *)(a3 + 8) = result;
  return result;
}

uint64_t sub_237E888A8()
{
  uint64_t v0;

  return sub_237E8875C(*(_QWORD *)(v0 + 8), *(float *)v0);
}

uint64_t sub_237E888B4(uint64_t a1, uint64_t a2)
{
  float v2;
  uint64_t v3;
  float v4;
  uint64_t v5;
  id v6;
  id v7;

  v2 = *(float *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(float *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  sub_237E39A5C();
  v6 = sub_237E884AC(v3, v2);
  v7 = sub_237E884AC(v5, v4);
  LOBYTE(v5) = sub_237EE2EB0();

  return v5 & 1;
}

unint64_t sub_237E88938(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_237E88964();
  result = sub_237E889A8();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_237E88964()
{
  unint64_t result;

  result = qword_25689B470;
  if (!qword_25689B470)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEB0E8, &type metadata for ColorCurve);
    atomic_store(result, (unint64_t *)&qword_25689B470);
  }
  return result;
}

unint64_t sub_237E889A8()
{
  unint64_t result;

  result = qword_25689B478;
  if (!qword_25689B478)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEB0C0, &type metadata for ColorCurve);
    atomic_store(result, (unint64_t *)&qword_25689B478);
  }
  return result;
}

uint64_t sub_237E889EC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B480);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_237E88A2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SolarPosition(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_237E88A70(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SolarPosition(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_237E88AAC(void *a1, void *a2, void *a3, double a4, double a5, double a6)
{
  double v7;
  BOOL v8;
  double v9;
  void *v10;
  void *v11;
  float v12;
  id v13;
  id v14;
  double v15;
  float v16;
  double v17;
  id result;
  id v19;

  v7 = 1.0 - a5;
  v8 = a6 > a5;
  if (a6 > a5)
    v7 = -a5;
  v9 = v7 + a6;
  if (v8)
    v10 = a2;
  else
    v10 = a1;
  if (v8)
    v11 = a1;
  else
    v11 = a2;
  v12 = (a4 - a5) / v9;
  v13 = v11;
  v14 = v10;
  *(float *)&v15 = v12;
  objc_msgSend(a3, sel__solveForInput_, v15);
  v17 = CGFloatMin(v16);
  CGFloatMax(v17);
  result = (id)CLKUIInterpolateBetweenColors();
  if (result)
  {
    v19 = result;

    return v19;
  }
  else
  {
    __break(1u);
  }
  return result;
}

double CGFloatMin(double a1)
{
  return fmin(a1, 1.0);
}

double CGFloatMax(double a1)
{
  return fmax(a1, 0.0);
}

void sub_237E88C7C()
{
  char *v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  _QWORD v22[6];
  objc_super v23;
  CGRect v24;
  CGRect v25;

  v23.receiver = v0;
  v23.super_class = (Class)type metadata accessor for DigitalClockFaceComplicationsView();
  objc_msgSendSuper2(&v23, sel_layoutSubviews);
  sub_237E88F50();
  v1 = OBJC_IVAR____TtC11ClockPoster33DigitalClockFaceComplicationsView_temperatureLabel;
  if (!*(_QWORD *)&v0[OBJC_IVAR____TtC11ClockPoster33DigitalClockFaceComplicationsView_temperatureLabel])
  {
    if (qword_256897AA8 != -1)
      swift_once();
    v2 = sub_237EB121C(*(double *)&qword_25689DEC8);
    v3 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = v3;
    v5 = objc_allocWithZone(MEMORY[0x24BEBD4B8]);
    v22[4] = sub_237E89E44;
    v22[5] = v4;
    v22[0] = MEMORY[0x24BDAC760];
    v22[1] = 1107296256;
    v22[2] = sub_237E7D770;
    v22[3] = &block_descriptor_14_0;
    v6 = _Block_copy(v22);
    v7 = v3;
    v8 = objc_msgSend(v5, sel_initWithDynamicProvider_, v6);
    _Block_release(v6);

    swift_release();
    objc_msgSend(v2, sel_setTextColor_, v8);

    objc_msgSend(v0, sel_addSubview_, v2);
    v9 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v2;
    v10 = v2;

    sub_237E89524();
  }
  if (qword_256897AB0 != -1)
    swift_once();
  v11 = *(double *)&qword_25689DED0;
  objc_msgSend(v0, sel_frame);
  CGRectGetWidth(v24);
  v12 = CGRectMake();
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v18 = *(void **)&v0[OBJC_IVAR____TtC11ClockPoster33DigitalClockFaceComplicationsView_dateLabel];
  if (v18)
    objc_msgSend(v18, sel_setFrame_, v12);
  v19 = *(void **)&v0[v1];
  if (v19)
    objc_msgSend(v19, sel_setFrame_, v13, v11, v15, v17);
  v20 = *(void **)&v0[OBJC_IVAR____TtC11ClockPoster33DigitalClockFaceComplicationsView_alarmComplication];
  if (v20)
  {
    v21 = v20;
    objc_msgSend(v0, sel_frame);
    objc_msgSend(v21, sel_setFrame_, v13, CGRectGetHeight(v25) - (v11 + v11), v15);

  }
}

void sub_237E88F50()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  void (*v10)(char *, uint64_t);
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  uint64_t inited;
  uint64_t v22;
  unint64_t v23;
  id v24;
  id v25;
  char *v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  _QWORD aBlock[7];

  v1 = v0;
  v2 = sub_237EE1D70();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 104;
  v6 = OBJC_IVAR____TtC11ClockPoster33DigitalClockFaceComplicationsView_dateLabel;
  if (!*(_QWORD *)&v0[OBJC_IVAR____TtC11ClockPoster33DigitalClockFaceComplicationsView_dateLabel])
  {
    v30 = sub_237E89784();
    if (qword_256897B48 != -1)
      swift_once();
    sub_237EA1DE0((uint64_t)v5);
    v7 = (void *)sub_237EE1CF8();
    v8 = (void *)objc_opt_self();
    v9 = objc_msgSend(v8, sel_textProviderWithDate_units_, v7, 512);

    v10 = *(void (**)(char *, uint64_t))(v3 + 8);
    v10(v5, v2);
    objc_msgSend(v9, sel_setShortUnits_, 1);
    objc_msgSend(v9, sel_setTintColor_, v30);
    sub_237EA1DE0((uint64_t)v5);
    v11 = (void *)sub_237EE1CF8();
    v12 = objc_msgSend(v8, sel_textProviderWithDate_units_, v11, 16);

    v10(v5, v2);
    v13 = (void *)objc_opt_self();
    v14 = v12;
    v15 = objc_msgSend(v13, sel_whiteColor);
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = v15;
    v17 = objc_allocWithZone(MEMORY[0x24BEBD4B8]);
    aBlock[4] = sub_237E89E44;
    aBlock[5] = v16;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_237E7D770;
    aBlock[3] = &block_descriptor_7_1;
    v18 = _Block_copy(aBlock);
    v19 = v15;
    v20 = objc_msgSend(v17, sel_initWithDynamicProvider_, v18);
    _Block_release(v18);

    swift_release();
    objc_msgSend(v14, sel_setTintColor_, v20);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25689D9E0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_237EE4470;
    v22 = sub_237E74A2C(0, &qword_25689B4E8);
    *(_QWORD *)(inited + 56) = v22;
    v23 = sub_237E89DD8();
    *(_QWORD *)(inited + 32) = v9;
    *(_QWORD *)(inited + 96) = v22;
    *(_QWORD *)(inited + 104) = v23;
    *(_QWORD *)(inited + 64) = v23;
    *(_QWORD *)(inited + 72) = v14;
    v24 = v14;
    v25 = v9;
    v26 = sub_237E89310(inited);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25689B4F8);
    swift_arrayDestroy();
    if (qword_256897AA8 != -1)
      swift_once();
    v27 = sub_237EB121C(*(double *)&qword_25689DEC8);
    objc_msgSend(v27, sel_setUsesTextProviderTintColoring_, 1);
    objc_msgSend(v27, sel_setTextProvider_, v26);
    v28 = v30;
    objc_msgSend(v27, sel_setTintColor_, v30);
    objc_msgSend(v1, sel_addSubview_, v27);
    v29 = *(void **)&v1[v6];
    *(_QWORD *)&v1[v6] = v27;

  }
}

char *sub_237E89310(uint64_t a1)
{
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *result;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  _QWORD v23[4];

  sub_237EE3078();
  v2 = (_QWORD *)swift_allocObject();
  v2[2] = 8;
  v2[3] = 0;
  v3 = v2 + 3;
  v2[4] = 0;
  v2[5] = 0;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_25:
    v20 = sub_237EE306C();
    v21 = (void *)sub_237EE2A54();
    v22 = objc_msgSend((id)objc_opt_self(), sel_textProviderWithFormat_arguments_, v21, v20);
    swift_release();

    return (char *)v22;
  }
  v5 = 0;
  v6 = a1 + 32;
  while (1)
  {
    sub_237E2CFE8(v6 + 40 * v5, (uint64_t)v23);
    __swift_project_boxed_opaque_existential_1(v23, v23[3]);
    result = (char *)sub_237EE32C4();
    v8 = *v3;
    v9 = *((_QWORD *)result + 2);
    v10 = __OFADD__(*v3, v9);
    v11 = *v3 + v9;
    if (v10)
      break;
    v12 = result;
    v13 = v2[4];
    if (v13 >= v11)
      goto LABEL_18;
    if (v13 + 0x4000000000000000 < 0)
      goto LABEL_28;
    v14 = (char *)v2[5];
    if (2 * v13 > v11)
      v11 = 2 * v13;
    v2[4] = v11;
    if ((unint64_t)(v11 - 0x1000000000000000) >> 61 != 7)
      goto LABEL_29;
    result = (char *)swift_slowAlloc();
    v2[5] = result;
    if (v14)
    {
      if (result != v14 || result >= &v14[8 * v8])
        memmove(result, v14, 8 * v8);
      sub_237EE3060();
LABEL_18:
      result = (char *)v2[5];
    }
    if (!result)
      goto LABEL_30;
    v16 = *((_QWORD *)v12 + 2);
    if (v16)
    {
      v17 = (uint64_t *)(v12 + 32);
      v18 = *v3;
      while (1)
      {
        v19 = *v17++;
        *(_QWORD *)&result[8 * v18] = v19;
        v18 = *v3 + 1;
        if (__OFADD__(*v3, 1))
          break;
        *v3 = v18;
        if (!--v16)
          goto LABEL_3;
      }
      __break(1u);
      break;
    }
LABEL_3:
    ++v5;
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
    if (v5 == v4)
      goto LABEL_25;
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

void sub_237E89524()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B250);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_25689AD70);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237E89D90(v1 + OBJC_IVAR____TtC11ClockPoster33DigitalClockFaceComplicationsView_currentTemperature, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_237E2209C((uint64_t)v4, &qword_25689B250);
    v9 = *(void **)(v1 + OBJC_IVAR____TtC11ClockPoster33DigitalClockFaceComplicationsView_temperatureLabel);
    if (v9)
      objc_msgSend(v9, sel_setTextProvider_, 0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1668]), sel_init);
    objc_msgSend(v10, sel_setUnitStyle_, 1);
    v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16F0]), sel_init);
    objc_msgSend(v11, sel_setNumberStyle_, 1);
    objc_msgSend(v11, sel_setMaximumFractionDigits_, 0);
    objc_msgSend(v10, sel_setNumberFormatter_, v11);
    sub_237E74A2C(0, &qword_25689B258);
    sub_237EE2E68();
    v12 = (void *)sub_237EE2A54();
    swift_bridgeObjectRelease();
    v13 = objc_msgSend((id)objc_opt_self(), sel_textProviderWithText_, v12);

    v14 = *(void **)(v1 + OBJC_IVAR____TtC11ClockPoster33DigitalClockFaceComplicationsView_temperatureLabel);
    if (v14)
    {
      objc_msgSend(v14, sel_setTextProvider_, v13);

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

    }
  }
}

id sub_237E89784()
{
  char *v0;
  id result;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  double v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[6];

  result = objc_msgSend(v0, sel__shouldReverseLayoutDirection);
  v2 = OBJC_IVAR____TtC11ClockPoster33DigitalClockFaceComplicationsView_colors;
  if (!(_DWORD)result)
  {
LABEL_22:
    v14 = *(_QWORD *)&v0[v2];
    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      v0 = (char *)sub_237EE30A8();
      if (v0)
      {
LABEL_24:
        if ((v14 & 0xC000000000000001) != 0)
        {
          v15 = (id)MEMORY[0x23B826624](0, v14);
        }
        else
        {
          if (!*(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_33;
          }
          v15 = *(id *)(v14 + 32);
        }
        v16 = v15;
        swift_bridgeObjectRelease();
        return v16;
      }
    }
    else
    {
      v0 = *(char **)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v0)
        goto LABEL_24;
    }
    swift_bridgeObjectRelease();
    v17 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = v17;
    v19 = objc_allocWithZone(MEMORY[0x24BEBD4B8]);
    v26[4] = sub_237E7DAD8;
    v26[5] = v18;
    v26[0] = MEMORY[0x24BDAC760];
    v26[1] = 1107296256;
    v26[2] = sub_237E7D770;
    v26[3] = &block_descriptor_6;
    v20 = _Block_copy(v26);
    v21 = v17;
    v22 = objc_msgSend(v19, sel_initWithDynamicProvider_, v20);
    _Block_release(v20);

    swift_release();
    return v22;
  }
  v3 = *(_QWORD *)&v0[OBJC_IVAR____TtC11ClockPoster33DigitalClockFaceComplicationsView_colors];
  if (!(v3 >> 62))
  {
    if (*(uint64_t *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10) > 2)
      goto LABEL_4;
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  v13 = sub_237EE30A8();
  result = (id)swift_bridgeObjectRelease();
  if (v13 <= 2)
  {
LABEL_21:
    v2 = OBJC_IVAR____TtC11ClockPoster33DigitalClockFaceComplicationsView_colors;
    goto LABEL_22;
  }
LABEL_4:
  v4 = *(_QWORD *)&v0[v2];
  if (!(v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_6;
  }
LABEL_33:
  swift_bridgeObjectRetain();
  v5 = sub_237EE30A8();
  result = (id)swift_bridgeObjectRelease();
LABEL_6:
  v6 = round(0.75 / (double)v5);
  if ((~*(_QWORD *)&v6 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v6 <= -9.22337204e18)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (v6 >= 9.22337204e18)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v7 = *(_QWORD *)&v0[v2];
  if (!(v7 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    v9 = v8 - 1;
    if (!__OFSUB__(v8, 1))
      goto LABEL_11;
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
LABEL_37:
  swift_bridgeObjectRetain();
  v23 = sub_237EE30A8();
  result = (id)swift_bridgeObjectRelease();
  v9 = v23 - 1;
  if (__OFSUB__(v23, 1))
    goto LABEL_39;
LABEL_11:
  v10 = *(_QWORD *)&v0[v2];
  if (!(v10 >> 62))
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_13;
  }
LABEL_40:
  v24 = v9;
  swift_bridgeObjectRetain();
  v11 = sub_237EE30A8();
  result = (id)swift_bridgeObjectRelease();
  v9 = v24;
  v10 = *(_QWORD *)&v0[v2];
LABEL_13:
  if ((v11 & ~(v11 >> 63)) >= v9)
    v12 = v9;
  else
    v12 = v11 & ~(v11 >> 63);
  if ((v10 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v25 = MEMORY[0x23B826624](v12, v10);
    swift_bridgeObjectRelease();
    return (id)v25;
  }
  else
  {
    if ((v12 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v12 < *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      return *(id *)(v10 + 8 * v12 + 32);
    }
    __break(1u);
  }
  return result;
}

id sub_237E89B4C()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DigitalClockFaceComplicationsView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_237E89C08()
{
  return type metadata accessor for DigitalClockFaceComplicationsView();
}

uint64_t type metadata accessor for DigitalClockFaceComplicationsView()
{
  uint64_t result;

  result = qword_25689B4C8;
  if (!qword_25689B4C8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_237E89C4C()
{
  unint64_t v0;
  unint64_t v1;

  sub_237E89D08(319, (unint64_t *)&qword_25689AD68, qword_25689AD70);
  if (v0 <= 0x3F)
  {
    sub_237E89D08(319, &qword_25689B4D8, &qword_25689B4E0);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

void sub_237E89D08(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v4 = sub_237EE2ED4();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_237E89D54()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t sub_237E89D90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B250);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_237E89DD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25689B4F0;
  if (!qword_25689B4F0)
  {
    v1 = sub_237E74A2C(255, &qword_25689B4E8);
    result = MEMORY[0x23B8271D0](MEMORY[0x24BEE5BE8], v1);
    atomic_store(result, (unint64_t *)&qword_25689B4F0);
  }
  return result;
}

double CGRectMake()
{
  return 0.0;
}

uint64_t sub_237E89E60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;
  __int128 v6[2];
  __int128 v7[3];
  char v8;
  __int128 v9[2];

  sub_237E28430(a1, (uint64_t)v7);
  if (v8 || (swift_bridgeObjectRelease(), sub_237E2D1BC(v7, (uint64_t)v9), sub_237E28430(a2, (uint64_t)v7), v8))
  {
    sub_237E2846C((uint64_t)v7);
    result = sub_237EE309C();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_237E2D1BC(v7, (uint64_t)v6);
    sub_237E2D1BC(v9, a3);
    result = sub_237E2D1BC(v6, a3 + 40);
    *(_QWORD *)(a3 + 80) = 0;
    *(_QWORD *)(a3 + 88) = 0;
    *(_BYTE *)(a3 + 96) = 2;
  }
  return result;
}

double sub_237E89F54@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64x2_t v16;
  uint64_t v17;
  int64x2_t v18;
  double result;
  float64x2_t v20;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6468);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_237EE4470;
  *(_QWORD *)(v13 + 56) = &type metadata for SolidClockFaceColor;
  v14 = sub_237E34EC0();
  *(_QWORD *)(v13 + 64) = v14;
  v15 = swift_allocObject();
  *(_QWORD *)(v13 + 32) = v15;
  v16.i64[0] = a1;
  v16.i64[1] = a2;
  v20 = (float64x2_t)vdupq_n_s64(0x406FE00000000000uLL);
  *(float64x2_t *)(v15 + 16) = vdivq_f64(vcvtq_f64_s64(v16), v20);
  *(double *)(v15 + 32) = (double)a3 / 255.0;
  *(_QWORD *)(v15 + 40) = 0x3FF0000000000000;
  *(_QWORD *)(v13 + 96) = &type metadata for SolidClockFaceColor;
  *(_QWORD *)(v13 + 104) = v14;
  v17 = swift_allocObject();
  *(_QWORD *)(v13 + 72) = v17;
  v18.i64[0] = a4;
  v18.i64[1] = a5;
  *(float64x2_t *)(v17 + 16) = vdivq_f64(vcvtq_f64_s64(v18), v20);
  result = (double)a6 / 255.0;
  *(double *)(v17 + 32) = result;
  *(_QWORD *)(v17 + 40) = 0x3FF0000000000000;
  *(_QWORD *)(a7 + 8) = 0;
  *(_QWORD *)(a7 + 16) = 0;
  *(_QWORD *)a7 = v13;
  *(_BYTE *)(a7 + 96) = 1;
  return result;
}

uint64_t sub_237E8A0A4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64x2_t *v5;
  int64x2_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  float64x2_t v12;
  float64x2_t v13;
  int64x2_t v14;
  __int128 v15;
  ValueMetadata *v16;
  unint64_t v17;
  uint64_t v18;

  v2 = *(_QWORD *)(result + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v4 = result;
    v11 = a2;
    v18 = MEMORY[0x24BEE4AF8];
    sub_237E626DC(0, v2, 0);
    v3 = v18;
    v5 = (int64x2_t *)(v4 + 48);
    v12 = (float64x2_t)vdupq_n_s64(0x406FE00000000000uLL);
    do
    {
      v6 = v5[-1];
      v7 = v5->i64[0];
      v18 = v3;
      v9 = *(_QWORD *)(v3 + 16);
      v8 = *(_QWORD *)(v3 + 24);
      if (v9 >= v8 >> 1)
      {
        v14 = v6;
        sub_237E626DC(v8 > 1, v9 + 1, 1);
        v6 = v14;
        v3 = v18;
      }
      v13 = vdivq_f64(vcvtq_f64_s64(v6), v12);
      v5 = (int64x2_t *)((char *)v5 + 24);
      v16 = &type metadata for SolidClockFaceColor;
      v17 = sub_237E34EC0();
      v10 = swift_allocObject();
      *(_QWORD *)&v15 = v10;
      *(float64x2_t *)(v10 + 16) = v13;
      *(double *)(v10 + 32) = (double)v7 / 255.0;
      *(_QWORD *)(v10 + 40) = 0x3FF0000000000000;
      *(_QWORD *)(v3 + 16) = v9 + 1;
      result = sub_237E2D1BC(&v15, v3 + 40 * v9 + 32);
      --v2;
    }
    while (v2);
    a2 = v11;
  }
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 96) = 1;
  return result;
}

uint64_t sub_237E8A214()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[3];
  ValueMetadata *v5;
  unint64_t v6;
  _QWORD v7[7];
  char v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  char v14;
  _BYTE v15[104];

  *((_QWORD *)&v10 + 1) = &type metadata for SolidClockFaceColor;
  v0 = sub_237E34EC0();
  *(_QWORD *)&v11 = v0;
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_237EEB180;
  *(_OWORD *)(v1 + 32) = xmmword_237EEB190;
  v14 = 0;
  *((_QWORD *)&v11 + 1) = 0;
  *(_QWORD *)&v12 = 0;
  *(_QWORD *)&v9 = v1;
  v5 = &type metadata for SolidClockFaceColor;
  v6 = v0;
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_237EEB1A0;
  *(_OWORD *)(v2 + 32) = xmmword_237EEB1B0;
  v8 = 0;
  v7[0] = 0;
  v7[1] = 0;
  v4[0] = v2;
  sub_237E89E60((uint64_t)&v9, (uint64_t)v4, (uint64_t)v15);
  sub_237E2846C((uint64_t)v4);
  sub_237E2846C((uint64_t)&v9);
  v12 = 0u;
  v13 = 0u;
  v11 = 0u;
  v9 = 0u;
  v10 = 0u;
  sub_237E7A558((uint64_t)&v9, (uint64_t)v4);
  if ((unint64_t)v5 > 1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
  }
  sub_237E7A888((uint64_t)&v9);
  sub_237E8C9C4();
  swift_bridgeObjectRelease();
  return sub_237E2846C((uint64_t)v15);
}

uint64_t sub_237E8A394()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[3];
  ValueMetadata *v5;
  unint64_t v6;
  _QWORD v7[7];
  char v8;
  _QWORD v9[3];
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  char v14;
  _BYTE v15[104];

  v10 = (uint64_t)&type metadata for SolidClockFaceColor;
  v0 = sub_237E34EC0();
  *(_QWORD *)&v11 = v0;
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_237EEB1C0;
  *(_OWORD *)(v1 + 32) = xmmword_237EE5FF0;
  v14 = 0;
  *((_QWORD *)&v11 + 1) = 0;
  *(_QWORD *)&v12 = 0;
  v9[0] = v1;
  v5 = &type metadata for SolidClockFaceColor;
  v6 = v0;
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_237EEB1D0;
  *(_OWORD *)(v2 + 32) = xmmword_237EEB1E0;
  v8 = 0;
  v7[0] = 0;
  v7[1] = 0;
  v4[0] = v2;
  sub_237E89E60((uint64_t)v9, (uint64_t)v4, (uint64_t)v15);
  sub_237E2846C((uint64_t)v4);
  sub_237E2846C((uint64_t)v9);
  memset(v9, 0, sizeof(v9));
  v10 = 1;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  sub_237E7A558((uint64_t)v9, (uint64_t)v4);
  if ((unint64_t)v5 > 1)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v7);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v4);
  }
  sub_237E7A888((uint64_t)v9);
  sub_237E8C9C4();
  swift_bridgeObjectRelease();
  return sub_237E2846C((uint64_t)v15);
}

uint64_t sub_237E8A51C()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[12];
  char v5;
  _QWORD v6[12];
  char v7;
  _BYTE v8[104];

  v6[3] = &type metadata for SolidClockFaceColor;
  v0 = sub_237E34EC0();
  v6[4] = v0;
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_237EEB1F0;
  *(_OWORD *)(v1 + 32) = xmmword_237EEB200;
  v7 = 0;
  v6[5] = 0;
  v6[6] = 0;
  v6[0] = v1;
  v4[3] = &type metadata for SolidClockFaceColor;
  v4[4] = v0;
  v2 = swift_allocObject();
  *(int64x2_t *)(v2 + 16) = vdupq_n_s64(0x3FE999999999999AuLL);
  *(_OWORD *)(v2 + 32) = xmmword_237EEB210;
  v5 = 0;
  v4[5] = 0;
  v4[6] = 0;
  v4[0] = v2;
  sub_237E89E60((uint64_t)v6, (uint64_t)v4, (uint64_t)v8);
  sub_237E2846C((uint64_t)v4);
  sub_237E2846C((uint64_t)v6);
  sub_237E8C9C4();
  return sub_237E2846C((uint64_t)v8);
}

uint64_t sub_237E8A630(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v17 = MEMORY[0x24BEE4AF8];
    sub_237E626C0(0, v1, 0);
    v4 = a1 + 32;
    v2 = v17;
    do
    {
      sub_237E2CFE8(v4, (uint64_t)v14);
      v5 = v15;
      v6 = v16;
      __swift_project_boxed_opaque_existential_1(v14, v15);
      v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 32))(v5, v6);
      v9 = v8;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_237E626C0(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v17;
      }
      v11 = *(_QWORD *)(v2 + 16);
      v10 = *(_QWORD *)(v2 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_237E626C0(v10 > 1, v11 + 1, 1);
        v2 = v17;
      }
      *(_QWORD *)(v2 + 16) = v11 + 1;
      v12 = v2 + 16 * v11;
      *(_QWORD *)(v12 + 32) = v7;
      *(_QWORD *)(v12 + 40) = v9;
      v4 += 40;
      --v1;
    }
    while (v1);
  }
  v14[0] = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898630);
  sub_237E8D620();
  sub_237EE2A3C();
  swift_bridgeObjectRelease();
  v14[0] = 91;
  v14[1] = 0xE100000000000000;
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  return v14[0];
}

__n128 DynamicClockFaceColor.base.getter@<Q0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)v1;
  v3 = *(_OWORD *)(v1 + 16);
  *a1 = *(_OWORD *)v1;
  a1[1] = v3;
  return result;
}

__n128 DynamicClockFaceColor.variation.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(v1 + 32);
  v3 = *(_OWORD *)(v1 + 48);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

unint64_t DynamicClockFaceColor.stringValue.getter()
{
  sub_237EE2FA0();
  swift_bridgeObjectRelease();
  SolidClockFaceColor.stringValue.getter();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  SolidClockFaceColor.stringValue.getter();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  return 0xD00000000000001ELL;
}

unint64_t SolidClockFaceColor.stringValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *v0;
  v2 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25689D9E0);
  v5 = swift_allocObject();
  v6 = MEMORY[0x24BEE13C8];
  *(_OWORD *)(v5 + 16) = xmmword_237EE55E0;
  v7 = MEMORY[0x24BEE1448];
  *(_QWORD *)(v5 + 56) = v6;
  *(_QWORD *)(v5 + 64) = v7;
  *(_QWORD *)(v5 + 32) = v1;
  sub_237EE2A90();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_237EE55E0;
  *(_QWORD *)(v8 + 56) = v6;
  *(_QWORD *)(v8 + 64) = v7;
  *(_QWORD *)(v8 + 32) = v2;
  sub_237EE2A90();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_237EE55E0;
  *(_QWORD *)(v9 + 56) = v6;
  *(_QWORD *)(v9 + 64) = v7;
  *(_QWORD *)(v9 + 32) = v4;
  sub_237EE2A90();
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_237EE55E0;
  *(_QWORD *)(v10 + 56) = v6;
  *(_QWORD *)(v10 + 64) = v7;
  *(_QWORD *)(v10 + 32) = v3;
  sub_237EE2A90();
  sub_237EE2FA0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  return 0xD000000000000015;
}

id DynamicClockFaceColor.primaryUIColor.getter()
{
  double *v0;
  id v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  _QWORD v8[6];

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, *v0, v0[1], v0[2], v0[3]);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v1;
  v3 = objc_allocWithZone(MEMORY[0x24BEBD4B8]);
  v8[4] = sub_237E7DAD8;
  v8[5] = v2;
  v8[0] = MEMORY[0x24BDAC760];
  v8[1] = 1107296256;
  v8[2] = sub_237E7D770;
  v8[3] = &block_descriptor_7;
  v4 = _Block_copy(v8);
  v5 = v1;
  v6 = objc_msgSend(v3, sel_initWithDynamicProvider_, v4);
  _Block_release(v4);

  swift_release();
  return v6;
}

id SolidClockFaceColor.primaryUIColor.getter()
{
  return sub_237E8B7A4((uint64_t)&unk_2509C3210, (uint64_t)sub_237E89E44, (uint64_t)&block_descriptor_7_2);
}

uint64_t DynamicClockFaceColor.primaryColor.getter()
{
  double *v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v11;

  v1 = sub_237EE26C4();
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  v6 = v0[1];
  v7 = v0[2];
  v8 = v0[3];
  (*(void (**)(char *, _QWORD, __n128))(v9 + 104))(v4, *MEMORY[0x24BDF3C28], v2);
  return MEMORY[0x23B825DC0](v4, v5, v6, v7, v8);
}

id DynamicClockFaceColor.secondaryUIColor.getter()
{
  double *v0;
  id v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  _QWORD v8[6];

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, v0[4], v0[5], v0[6], v0[7]);
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v1;
  v3 = objc_allocWithZone(MEMORY[0x24BEBD4B8]);
  v8[4] = sub_237E89E44;
  v8[5] = v2;
  v8[0] = MEMORY[0x24BDAC760];
  v8[1] = 1107296256;
  v8[2] = sub_237E7D770;
  v8[3] = &block_descriptor_14_1;
  v4 = _Block_copy(v8);
  v5 = v1;
  v6 = objc_msgSend(v3, sel_initWithDynamicProvider_, v4);
  _Block_release(v4);

  swift_release();
  return v6;
}

uint64_t DynamicClockFaceColor.secondaryColor.getter()
{
  double *v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v11;

  v1 = sub_237EE26C4();
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0[4];
  v6 = v0[5];
  v7 = v0[6];
  v8 = v0[7];
  (*(void (**)(char *, _QWORD, __n128))(v9 + 104))(v4, *MEMORY[0x24BDF3C28], v2);
  return MEMORY[0x23B825DC0](v4, v5, v6, v7, v8);
}

uint64_t DynamicClockFaceColor.hash(into:)()
{
  sub_237EE3288();
  sub_237EE3288();
  sub_237EE3288();
  sub_237EE3288();
  sub_237EE3288();
  sub_237EE3288();
  sub_237EE3288();
  return sub_237EE3288();
}

BOOL static SolidClockFaceColor.== infix(_:_:)(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3];
}

uint64_t sub_237E8AF94()
{
  _BYTE *v0;

  if (*v0)
    return 0x6F69746169726176;
  else
    return 1702060386;
}

uint64_t sub_237E8AFCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237E8D3AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237E8AFF0()
{
  sub_237E8CB54();
  return sub_237EE3324();
}

uint64_t sub_237E8B018()
{
  sub_237E8CB54();
  return sub_237EE3330();
}

uint64_t DynamicClockFaceColor.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15;
  char v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B508);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v1;
  v8 = *((_QWORD *)v1 + 2);
  v9 = *((_QWORD *)v1 + 3);
  v10 = *((_QWORD *)v1 + 4);
  v11 = *((_QWORD *)v1 + 5);
  v12 = *((_QWORD *)v1 + 6);
  v13 = *((_QWORD *)v1 + 7);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_237E8CB54();
  sub_237EE32DC();
  v17 = v15;
  v18 = v8;
  v19 = v9;
  v16 = 0;
  sub_237E8CB98();
  sub_237EE3168();
  if (!v2)
  {
    *(_QWORD *)&v17 = v10;
    *((_QWORD *)&v17 + 1) = v11;
    v18 = v12;
    v19 = v13;
    v16 = 1;
    sub_237EE3168();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t DynamicClockFaceColor.hashValue.getter()
{
  sub_237EE3264();
  SolidClockFaceColor.hash(into:)();
  SolidClockFaceColor.hash(into:)();
  return sub_237EE3294();
}

uint64_t DynamicClockFaceColor.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v14;
  __int128 v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B518);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_237E8CB54();
  sub_237EE32D0();
  if (!v2)
  {
    v16 = 0;
    sub_237E7DB3C();
    sub_237EE312C();
    v9 = v14;
    v10 = v15;
    v16 = 1;
    sub_237EE312C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v11 = v14;
    v12 = v15;
    *a2 = v9;
    a2[1] = v10;
    a2[2] = v11;
    a2[3] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t _s11ClockPoster05SolidA9FaceColorV07primaryE07SwiftUI0E0Vvg_0()
{
  double *v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v11;

  v1 = sub_237EE26C4();
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  v6 = v0[1];
  v7 = v0[2];
  v8 = v0[3];
  (*(void (**)(char *, _QWORD, __n128))(v9 + 104))(v4, *MEMORY[0x24BDF3C28], v2);
  return MEMORY[0x23B825DC0](v4, v5, v6, v7, v8);
}

uint64_t sub_237E8B478()
{
  double *v0;
  uint64_t v1;
  __n128 v2;
  uint64_t v3;
  char *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v11;

  v1 = sub_237EE26C4();
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0[4];
  v6 = v0[5];
  v7 = v0[6];
  v8 = v0[7];
  (*(void (**)(char *, _QWORD, __n128))(v9 + 104))(v4, *MEMORY[0x24BDF3C28], v2);
  return MEMORY[0x23B825DC0](v4, v5, v6, v7, v8);
}

uint64_t sub_237E8B514()
{
  sub_237EE3264();
  SolidClockFaceColor.hash(into:)();
  SolidClockFaceColor.hash(into:)();
  return sub_237EE3294();
}

uint64_t sub_237E8B59C()
{
  SolidClockFaceColor.hash(into:)();
  return SolidClockFaceColor.hash(into:)();
}

uint64_t sub_237E8B5FC()
{
  sub_237EE3264();
  SolidClockFaceColor.hash(into:)();
  SolidClockFaceColor.hash(into:)();
  return sub_237EE3294();
}

uint64_t sub_237E8B680@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return DynamicClockFaceColor.init(from:)(a1, a2);
}

uint64_t sub_237E8B694(_QWORD *a1)
{
  return DynamicClockFaceColor.encode(to:)(a1);
}

ClockPoster::SolidClockFaceColor __swiftcall SolidClockFaceColor.init(_:)(UIColor a1)
{
  uint64_t v1;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  _QWORD v11[2];
  ClockPoster::SolidClockFaceColor result;

  v3 = v1;
  v11[1] = *MEMORY[0x24BDAC8D0];
  v10 = 0.0;
  v11[0] = 0;
  v8 = 0.0;
  v9 = 0.0;
  -[objc_class getRed:green:blue:alpha:](a1.super.isa, sel_getRed_green_blue_alpha_, v11, &v10, &v9, &v8);

  v5 = v10;
  v4 = *(double *)v11;
  v7 = v8;
  v6 = v9;
  *(_QWORD *)v3 = v11[0];
  *(double *)(v3 + 8) = v5;
  *(double *)(v3 + 16) = v6;
  *(double *)(v3 + 24) = v7;
  result.alpha = v7;
  result.blue = v6;
  result.green = v5;
  result.red = v4;
  return result;
}

ClockPoster::SolidClockFaceColor __swiftcall SolidClockFaceColor.init(red:green:blue:alpha:)(Swift::Double red, Swift::Double green, Swift::Double blue, Swift::Double alpha)
{
  Swift::Double *v4;
  ClockPoster::SolidClockFaceColor result;

  *v4 = red;
  v4[1] = green;
  v4[2] = blue;
  v4[3] = alpha;
  result.alpha = alpha;
  result.blue = blue;
  result.green = green;
  result.red = red;
  return result;
}

id SolidClockFaceColor.uiColor.getter()
{
  return sub_237E8B7A4((uint64_t)&unk_2509C32B0, (uint64_t)sub_237E89E44, (uint64_t)&block_descriptor_21_0);
}

uint64_t sub_237E8B760()
{
  uint64_t v0;

  return swift_deallocObject();
}

id SolidClockFaceColor.secondaryUIColor.getter()
{
  return sub_237E8B7A4((uint64_t)&unk_2509C3300, (uint64_t)sub_237E89E44, (uint64_t)&block_descriptor_28_0);
}

id sub_237E8B7A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double *v3;
  id v6;
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  _QWORD v13[6];

  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, *v3, v3[1], v3[2], v3[3]);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v6;
  v8 = objc_allocWithZone(MEMORY[0x24BEBD4B8]);
  v13[4] = a2;
  v13[5] = v7;
  v13[0] = MEMORY[0x24BDAC760];
  v13[1] = 1107296256;
  v13[2] = sub_237E7D770;
  v13[3] = a3;
  v9 = _Block_copy(v13);
  v10 = v6;
  v11 = objc_msgSend(v8, sel_initWithDynamicProvider_, v9);
  _Block_release(v9);

  swift_release();
  return v11;
}

uint64_t SolidClockFaceColor.hash(into:)()
{
  sub_237EE3288();
  sub_237EE3288();
  sub_237EE3288();
  return sub_237EE3288();
}

uint64_t sub_237E8B924()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_237E8B94C + 4 * byte_237EEB220[*v0]))(6579570, 0xE300000000000000);
}

uint64_t sub_237E8B94C()
{
  return 0x6E65657267;
}

uint64_t sub_237E8B960()
{
  return 1702194274;
}

uint64_t sub_237E8B970()
{
  return 0x6168706C61;
}

uint64_t sub_237E8B984@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237E8D498(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237E8B9A8()
{
  sub_237E8CBDC();
  return sub_237EE3324();
}

uint64_t sub_237E8B9D0()
{
  sub_237E8CBDC();
  return sub_237EE3330();
}

uint64_t SolidClockFaceColor.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B520);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_237E8CBDC();
  sub_237EE32DC();
  v8[15] = 0;
  sub_237EE3150();
  if (!v1)
  {
    v8[14] = 1;
    sub_237EE3150();
    v8[13] = 2;
    sub_237EE3150();
    v8[12] = 3;
    sub_237EE3150();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t SolidClockFaceColor.hashValue.getter()
{
  sub_237EE3264();
  SolidClockFaceColor.hash(into:)();
  return sub_237EE3294();
}

uint64_t SolidClockFaceColor.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  char v22;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B530);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_237E8CBDC();
  sub_237EE32D0();
  if (!v2)
  {
    v22 = 0;
    sub_237EE3114();
    v10 = v9;
    v21 = 1;
    sub_237EE3114();
    v12 = v11;
    v20 = 2;
    sub_237EE3114();
    v15 = v14;
    v19 = 3;
    sub_237EE3114();
    v17 = v16;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
    a2[1] = v12;
    a2[2] = v15;
    a2[3] = v17;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_237E8BD74()
{
  sub_237EE3264();
  SolidClockFaceColor.hash(into:)();
  return sub_237EE3294();
}

uint64_t sub_237E8BDC0()
{
  sub_237EE3264();
  SolidClockFaceColor.hash(into:)();
  return sub_237EE3294();
}

uint64_t sub_237E8BE04@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return SolidClockFaceColor.init(from:)(a1, a2);
}

uint64_t sub_237E8BE18(_QWORD *a1)
{
  return SolidClockFaceColor.encode(to:)(a1);
}

BOOL sub_237E8BE2C(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3];
}

uint64_t UIColor.cpStringValue.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[2];

  v16[1] = *MEMORY[0x24BDAC8D0];
  v15 = 0;
  v16[0] = 0;
  v13 = 0;
  v14 = 0;
  objc_msgSend(v0, sel_getRed_green_blue_alpha_, v16, &v15, &v14, &v13);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25689D9E0);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_237EE55E0;
  v2 = v16[0];
  v3 = MEMORY[0x24BEE50B0];
  *(_QWORD *)(v1 + 56) = MEMORY[0x24BEE50B0];
  v4 = sub_237E8CC20();
  *(_QWORD *)(v1 + 64) = v4;
  *(_QWORD *)(v1 + 32) = v2;
  v5 = sub_237EE2A90();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_237EE55E0;
  v7 = v15;
  *(_QWORD *)(v6 + 56) = v3;
  *(_QWORD *)(v6 + 64) = v4;
  *(_QWORD *)(v6 + 32) = v7;
  sub_237EE2A90();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_237EE55E0;
  v9 = v14;
  *(_QWORD *)(v8 + 56) = v3;
  *(_QWORD *)(v8 + 64) = v4;
  *(_QWORD *)(v8 + 32) = v9;
  sub_237EE2A90();
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_237EE55E0;
  v11 = v13;
  *(_QWORD *)(v10 + 56) = v3;
  *(_QWORD *)(v10 + 64) = v4;
  *(_QWORD *)(v10 + 32) = v11;
  sub_237EE2A90();
  sub_237EE2AF0();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  return v5;
}

id static UIColor.cpColor(from:)(_BOOL8 a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  BOOL v26;
  _BYTE *v28;
  uint64_t v29;
  _BOOL8 v30;
  _BOOL8 *v31;
  unsigned __int8 *v32;
  int v33;
  unsigned __int8 *v34;
  int v35;
  BOOL v36;
  _BOOL8 v37;
  uint64_t v38;

  v37 = a1;
  v38 = a2;
  sub_237E33174();
  v2 = (_QWORD *)sub_237EE2EF8();
  v3 = v2;
  if (v2[2] == 4)
  {
    v4 = v2[4];
    v5 = v2[5];
    MEMORY[0x24BDAC7A8](v2);
    if ((v5 & 0x1000000000000000) != 0 || !(v5 & 0x2000000000000000 | v4 & 0x1000000000000000))
    {
      swift_bridgeObjectRetain();
      sub_237EE2F88();
      goto LABEL_9;
    }
    if ((v5 & 0x2000000000000000) != 0)
    {
      v37 = v4;
      v38 = v5 & 0xFFFFFFFFFFFFFFLL;
      switch((char)v4)
      {
        case 0:
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 32:
          swift_bridgeObjectRetain();
          goto LABEL_13;
        default:
          swift_bridgeObjectRetain();
          v15 = (_BYTE *)_swift_stdlib_strtof_clocale();
          if (v15)
            v9 = *v15 == 0;
          else
LABEL_13:
            v9 = 0;
          v36 = v9;
          v8 = swift_bridgeObjectRelease();
          break;
      }
LABEL_15:
      if (!v36 || 0.0 > 1.0)
        goto LABEL_58;
      if (v3[2] < 2uLL)
      {
        __break(1u);
      }
      else
      {
        v10 = v3[6];
        v11 = v3[7];
        MEMORY[0x24BDAC7A8](v8);
        if ((v11 & 0x1000000000000000) != 0 || !(v11 & 0x2000000000000000 | v10 & 0x1000000000000000))
        {
          swift_bridgeObjectRetain();
          sub_237EE2F88();
          goto LABEL_25;
        }
        if ((v11 & 0x2000000000000000) != 0)
        {
          v37 = v10;
          v38 = v11 & 0xFFFFFFFFFFFFFFLL;
          switch((char)v10)
          {
            case 0:
            case 9:
            case 10:
            case 11:
            case 12:
            case 13:
            case 32:
              swift_bridgeObjectRetain();
              goto LABEL_30;
            default:
              swift_bridgeObjectRetain();
              v28 = (_BYTE *)_swift_stdlib_strtof_clocale();
              if (v28)
                v16 = *v28 == 0;
              else
LABEL_30:
                v16 = 0;
              v36 = v16;
              v14 = swift_bridgeObjectRelease();
              break;
          }
LABEL_32:
          if (!v36 || 0.0 > 1.0)
            goto LABEL_58;
          if (v3[2] < 3uLL)
          {
            __break(1u);
            goto LABEL_80;
          }
          v17 = v3[8];
          v18 = v3[9];
          MEMORY[0x24BDAC7A8](v14);
          if ((v18 & 0x1000000000000000) != 0 || !(v18 & 0x2000000000000000 | v17 & 0x1000000000000000))
          {
            swift_bridgeObjectRetain();
            sub_237EE2F88();
            swift_bridgeObjectRelease();
            if (!v36)
              goto LABEL_58;
          }
          else
          {
            if ((v18 & 0x2000000000000000) == 0)
            {
              if ((v17 & 0x1000000000000000) != 0)
              {
                v19 = (v18 & 0xFFFFFFFFFFFFFFFLL) + 32;
                swift_bridgeObjectRetain();
                goto LABEL_40;
              }
LABEL_80:
              v19 = sub_237EE2FC4();
              swift_bridgeObjectRetain();
              if (!v19)
              {
                v20 = 0;
LABEL_41:
                sub_237E8CCA8(v20, (BOOL *)&v37);
                v21 = v37;
                swift_bridgeObjectRelease();
                if (!v21)
                  goto LABEL_58;
                goto LABEL_42;
              }
LABEL_40:
              v20 = (_BYTE *)v19;
              goto LABEL_41;
            }
            v37 = v17;
            v38 = v18 & 0xFFFFFFFFFFFFFFLL;
            if (v17 <= 0x20u && ((1 << v17) & 0x100003E01) != 0)
            {
              swift_bridgeObjectRetain();
LABEL_57:
              swift_bridgeObjectRelease();
              goto LABEL_58;
            }
            swift_bridgeObjectRetain();
            v32 = (unsigned __int8 *)_swift_stdlib_strtof_clocale();
            if (!v32)
              goto LABEL_57;
            v33 = *v32;
            swift_bridgeObjectRelease();
            if (v33)
              goto LABEL_58;
          }
LABEL_42:
          if (0.0 <= 1.0)
          {
            if (v3[2] < 4uLL)
            {
              __break(1u);
              goto LABEL_85;
            }
            v23 = v3[10];
            v22 = v3[11];
            swift_bridgeObjectRetain();
            v24 = swift_bridgeObjectRelease();
            MEMORY[0x24BDAC7A8](v24);
            if ((v22 & 0x1000000000000000) != 0 || !(v22 & 0x2000000000000000 | v23 & 0x1000000000000000))
            {
              sub_237EE2F88();
              swift_bridgeObjectRelease();
              if (!v36)
                goto LABEL_59;
              goto LABEL_50;
            }
            if ((v22 & 0x2000000000000000) == 0)
            {
              if ((v23 & 0x1000000000000000) != 0)
              {
                v25 = (_BYTE *)((v22 & 0xFFFFFFFFFFFFFFFLL) + 32);
                goto LABEL_49;
              }
LABEL_85:
              v25 = (_BYTE *)sub_237EE2FC4();
LABEL_49:
              sub_237E8CCA8(v25, (BOOL *)&v37);
              v26 = v37;
              swift_bridgeObjectRelease();
              if (v26)
                goto LABEL_50;
LABEL_59:
              v37 = 0;
              v38 = 0xE000000000000000;
              sub_237EE2FA0();
              sub_237EE2AF0();
              sub_237EE2AF0();
              goto LABEL_60;
            }
            v37 = v23;
            v38 = v22 & 0xFFFFFFFFFFFFFFLL;
            if (v23 > 0x20u || ((1 << v23) & 0x100003E01) == 0)
            {
              v34 = (unsigned __int8 *)_swift_stdlib_strtof_clocale();
              if (v34)
              {
                v35 = *v34;
                swift_bridgeObjectRelease();
                if (v35)
                  goto LABEL_59;
LABEL_50:
                if (0.0 <= 1.0)
                  return objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.0, 0.0, 0.0, 0.0);
                goto LABEL_59;
              }
            }
          }
LABEL_58:
          swift_bridgeObjectRelease();
          goto LABEL_59;
        }
        if ((v10 & 0x1000000000000000) != 0)
        {
          v12 = (v11 & 0xFFFFFFFFFFFFFFFLL) + 32;
          swift_bridgeObjectRetain();
          goto LABEL_23;
        }
      }
      v12 = sub_237EE2FC4();
      swift_bridgeObjectRetain();
      if (!v12)
      {
        v13 = 0;
        goto LABEL_24;
      }
LABEL_23:
      v13 = (_BYTE *)v12;
LABEL_24:
      sub_237E8CCA8(v13, (BOOL *)&v37);
      v36 = v37;
LABEL_25:
      v14 = swift_bridgeObjectRelease();
      goto LABEL_32;
    }
    if ((v4 & 0x1000000000000000) != 0)
    {
      v6 = (v5 & 0xFFFFFFFFFFFFFFFLL) + 32;
      swift_bridgeObjectRetain();
    }
    else
    {
      v6 = sub_237EE2FC4();
      swift_bridgeObjectRetain();
      if (!v6)
      {
        v7 = 0;
        goto LABEL_8;
      }
    }
    v7 = (_BYTE *)v6;
LABEL_8:
    sub_237E8CCA8(v7, (BOOL *)&v37);
    v36 = v37;
LABEL_9:
    v8 = swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  swift_bridgeObjectRelease();
  v37 = 0;
  v38 = 0xE000000000000000;
  sub_237EE2FA0();
  sub_237EE2AF0();
  sub_237EE2AF0();
LABEL_60:
  sub_237EE2AF0();
  v30 = v37;
  v29 = v38;
  sub_237E8CC64();
  swift_allocError();
  *v31 = v30;
  v31[1] = v29;
  return (id)swift_willThrow();
}

void sub_237E8C9C4()
{
  uint64_t v0;
  _BYTE v1[104];

  sub_237E28430(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_237E8CA10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _BYTE v5[40];
  __int128 v6;

  swift_bridgeObjectRelease();
  sub_237E2D1BC(&v6, (uint64_t)v5);
  sub_237E2CFE8((uint64_t)v5, v0);
  v1 = ClockFaceLook.identifier.getter();
  v3 = v2;
  result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v5);
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 48) = v3;
  *(_BYTE *)(v0 + 96) = 0;
  return result;
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t _s11ClockPoster07DynamicA9FaceColorV2eeoiySbAC_ACtFZ_0(float64x2_t *a1, float64x2_t *a2)
{
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*a1, *a2), (int32x4_t)vceqq_f64(a1[1], a2[1]))), 0xFuLL))) & 1) != 0)return vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(a1[2], a2[2]), (int32x4_t)vceqq_f64(a1[3], a2[3]))), 0xFuLL))) & 1;
  else
    return 0;
}

unint64_t sub_237E8CB54()
{
  unint64_t result;

  result = qword_25689B510;
  if (!qword_25689B510)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEB65C, &type metadata for DynamicClockFaceColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25689B510);
  }
  return result;
}

unint64_t sub_237E8CB98()
{
  unint64_t result;

  result = qword_2542C6498;
  if (!qword_2542C6498)
  {
    result = MEMORY[0x23B8271D0](&protocol conformance descriptor for SolidClockFaceColor, &type metadata for SolidClockFaceColor);
    atomic_store(result, (unint64_t *)&qword_2542C6498);
  }
  return result;
}

unint64_t sub_237E8CBDC()
{
  unint64_t result;

  result = qword_25689B528;
  if (!qword_25689B528)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEB60C, &type metadata for SolidClockFaceColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25689B528);
  }
  return result;
}

unint64_t sub_237E8CC20()
{
  unint64_t result;

  result = qword_25689B538;
  if (!qword_25689B538)
  {
    result = MEMORY[0x23B8271D0](MEMORY[0x24BEE5108], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_25689B538);
  }
  return result;
}

unint64_t sub_237E8CC64()
{
  unint64_t result;

  result = qword_25689B540;
  if (!qword_25689B540)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEB5CC, &type metadata for UIColorError);
    atomic_store(result, (unint64_t *)&qword_25689B540);
  }
  return result;
}

_BYTE *sub_237E8CCA8@<X0>(_BYTE *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_237E8CCBC(a1, a2);
}

_BYTE *sub_237E8CCBC@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v3 = *result;
  v4 = v3 > 0x20;
  v5 = (1 << v3) & 0x100003E01;
  v6 = v4 || v5 == 0;
  v7 = v6 && (result = (_BYTE *)_swift_stdlib_strtof_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

uint64_t sub_237E8CD28(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_237E8CE30(a1, a2, a3, (uint64_t (*)(void))sub_237E7DB90, (uint64_t (*)(void))sub_237E8CD44, (uint64_t (*)(void))sub_237E8CD88);
}

unint64_t sub_237E8CD44()
{
  unint64_t result;

  result = qword_2542C64C0;
  if (!qword_2542C64C0)
  {
    result = MEMORY[0x23B8271D0](&protocol conformance descriptor for DynamicClockFaceColor, &type metadata for DynamicClockFaceColor);
    atomic_store(result, (unint64_t *)&qword_2542C64C0);
  }
  return result;
}

unint64_t sub_237E8CD88()
{
  unint64_t result;

  result = qword_2542C64C8;
  if (!qword_2542C64C8)
  {
    result = MEMORY[0x23B8271D0](&protocol conformance descriptor for DynamicClockFaceColor, &type metadata for DynamicClockFaceColor);
    atomic_store(result, (unint64_t *)&qword_2542C64C8);
  }
  return result;
}

unint64_t sub_237E8CDD0()
{
  unint64_t result;

  result = qword_2542C64D0;
  if (!qword_2542C64D0)
  {
    result = MEMORY[0x23B8271D0](&protocol conformance descriptor for DynamicClockFaceColor, &type metadata for DynamicClockFaceColor);
    atomic_store(result, (unint64_t *)&qword_2542C64D0);
  }
  return result;
}

uint64_t sub_237E8CE14(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_237E8CE30(a1, a2, a3, (uint64_t (*)(void))sub_237E7DB3C, (uint64_t (*)(void))sub_237E8CB98, (uint64_t (*)(void))sub_237E8CE74);
}

uint64_t sub_237E8CE30(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t result;

  a1[1] = a4();
  a1[2] = a5();
  result = a6();
  a1[3] = result;
  return result;
}

unint64_t sub_237E8CE74()
{
  unint64_t result;

  result = qword_2542C64A0;
  if (!qword_2542C64A0)
  {
    result = MEMORY[0x23B8271D0](&protocol conformance descriptor for SolidClockFaceColor, &type metadata for SolidClockFaceColor);
    atomic_store(result, (unint64_t *)&qword_2542C64A0);
  }
  return result;
}

unint64_t sub_237E8CEBC()
{
  unint64_t result;

  result = qword_2542C64A8;
  if (!qword_2542C64A8)
  {
    result = MEMORY[0x23B8271D0](&protocol conformance descriptor for SolidClockFaceColor, &type metadata for SolidClockFaceColor);
    atomic_store(result, (unint64_t *)&qword_2542C64A8);
  }
  return result;
}

uint64_t dispatch thunk of ClockFaceColor.stringValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ClockFaceColor.primaryUIColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ClockFaceColor.primaryColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of ClockFaceColor.secondaryUIColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of ClockFaceColor.secondaryColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for DynamicClockFaceColor(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DynamicClockFaceColor(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 64) = v3;
  return result;
}

ValueMetadata *type metadata accessor for DynamicClockFaceColor()
{
  return &type metadata for DynamicClockFaceColor;
}

ValueMetadata *type metadata accessor for SolidClockFaceColor()
{
  return &type metadata for SolidClockFaceColor;
}

_QWORD *initializeBufferWithCopyOfBuffer for UIColorError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for UIColorError(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for UIColorError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for UIColorError()
{
  return &type metadata for UIColorError;
}

uint64_t storeEnumTagSinglePayload for SolidClockFaceColor.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_237E8D0B0 + 4 * byte_237EEB22D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_237E8D0E4 + 4 * byte_237EEB228[v4]))();
}

uint64_t sub_237E8D0E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237E8D0EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237E8D0F4);
  return result;
}

uint64_t sub_237E8D100(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237E8D108);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_237E8D10C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237E8D114(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SolidClockFaceColor.CodingKeys()
{
  return &type metadata for SolidClockFaceColor.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for DynamicClockFaceColor.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_237E8D17C + 4 * byte_237EEB237[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_237E8D1B0 + 4 * byte_237EEB232[v4]))();
}

uint64_t sub_237E8D1B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237E8D1B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237E8D1C0);
  return result;
}

uint64_t sub_237E8D1CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237E8D1D4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_237E8D1D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237E8D1E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DynamicClockFaceColor.CodingKeys()
{
  return &type metadata for DynamicClockFaceColor.CodingKeys;
}

unint64_t sub_237E8D200()
{
  unint64_t result;

  result = qword_25689B548;
  if (!qword_25689B548)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEB4EC, &type metadata for DynamicClockFaceColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25689B548);
  }
  return result;
}

unint64_t sub_237E8D248()
{
  unint64_t result;

  result = qword_25689B550;
  if (!qword_25689B550)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEB5A4, &type metadata for SolidClockFaceColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25689B550);
  }
  return result;
}

unint64_t sub_237E8D290()
{
  unint64_t result;

  result = qword_25689B558;
  if (!qword_25689B558)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEB514, &type metadata for SolidClockFaceColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25689B558);
  }
  return result;
}

unint64_t sub_237E8D2D8()
{
  unint64_t result;

  result = qword_25689B560;
  if (!qword_25689B560)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEB53C, &type metadata for SolidClockFaceColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25689B560);
  }
  return result;
}

unint64_t sub_237E8D320()
{
  unint64_t result;

  result = qword_25689B568;
  if (!qword_25689B568)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEB45C, &type metadata for DynamicClockFaceColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25689B568);
  }
  return result;
}

unint64_t sub_237E8D368()
{
  unint64_t result;

  result = qword_25689B570[0];
  if (!qword_25689B570[0])
  {
    result = MEMORY[0x23B8271D0](&unk_237EEB484, &type metadata for DynamicClockFaceColor.CodingKeys);
    atomic_store(result, qword_25689B570);
  }
  return result;
}

uint64_t sub_237E8D3AC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1702060386 && a2 == 0xE400000000000000;
  if (v2 || (sub_237EE31BC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F69746169726176 && a2 == 0xE90000000000006ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237EE31BC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_237E8D498(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 6579570 && a2 == 0xE300000000000000;
  if (v2 || (sub_237EE31BC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E65657267 && a2 == 0xE500000000000000 || (sub_237EE31BC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702194274 && a2 == 0xE400000000000000 || (sub_237EE31BC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6168706C61 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_237EE31BC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

unint64_t sub_237E8D620()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256898638;
  if (!qword_256898638)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256898630);
    result = MEMORY[0x23B8271D0](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_256898638);
  }
  return result;
}

uint64_t sub_237E8D66C()
{
  return swift_deallocObject();
}

float sub_237E8D6B0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t i;
  uint64_t v4;
  id v5;
  id v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v11[6];
  char v12;
  id v13;
  char v14;
  id v15;
  char v16;
  id v17;
  char v18;
  id v19;
  char v20;
  id v21;
  char v22;
  id v23;
  char v24;
  id v25;
  char v26;
  id v27;
  char v28;

  v11[5] = (uint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.0, 0.0, 0.0, 1.0);
  v12 = 0;
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.384313725, 0.48627451, 0.643137255, 1.0);
  v14 = 1;
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.384313725, 0.48627451, 0.643137255, 1.0);
  v16 = 2;
  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.470588235, 0.768627451, 1.0, 1.0);
  v18 = 3;
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.470588235, 0.768627451, 1.0, 1.0);
  v20 = 4;
  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.470588235, 0.768627451, 1.0, 1.0);
  v22 = 5;
  v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.470588235, 0.509803922, 0.788235294, 1.0);
  v24 = 6;
  v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.470588235, 0.509803922, 0.788235294, 1.0);
  v26 = 7;
  v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.0, 0.0, 0.0, 1.0);
  v28 = 8;
  v11[0] = MEMORY[0x24BEE4AF8];
  sub_237E626F8(0, 9, 0);
  v0 = v11[0];
  v1 = *MEMORY[0x24BDE5D20];
  v2 = (void *)objc_opt_self();
  for (i = 0; i != 18; i += 2)
  {
    v4 = qword_237EEB778[SLOBYTE(v11[i + 6])];
    v5 = (id)v11[i + 5];
    v6 = objc_msgSend(v2, sel_functionWithName_, v1);
    v11[0] = v0;
    v8 = *(_QWORD *)(v0 + 16);
    v7 = *(_QWORD *)(v0 + 24);
    if (v8 >= v7 >> 1)
    {
      sub_237E626F8(v7 > 1, v8 + 1, 1);
      v0 = v11[0];
    }
    *(_QWORD *)(v0 + 16) = v8 + 1;
    v9 = (_QWORD *)(v0 + 24 * v8);
    v9[4] = v4;
    v9[5] = v5;
    v9[6] = v6;
  }
  swift_arrayDestroy();
  v11[0] = v0;
  swift_bridgeObjectRetain();
  sub_237E8DD80(v11);
  swift_release();
  return 0.0;
}

float sub_237E8DA08()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t i;
  uint64_t v4;
  id v5;
  id v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v11[6];
  char v12;
  id v13;
  char v14;
  id v15;
  char v16;
  id v17;
  char v18;
  id v19;
  char v20;
  id v21;
  char v22;
  id v23;
  char v24;
  id v25;
  char v26;
  id v27;
  char v28;

  v11[5] = (uint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.803921569, 0.549019608, 0.815686275, 1.0);
  v12 = 0;
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.803921569, 0.549019608, 0.815686275, 1.0);
  v14 = 1;
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.803921569, 0.674509804, 0.4, 1.0);
  v16 = 2;
  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.552941176, 0.658823529, 0.22745098, 1.0);
  v18 = 3;
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.588235294, 0.529411765, 0.352941176, 1.0);
  v20 = 4;
  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.619607843, 0.4, 0.478431373, 1.0);
  v22 = 5;
  v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.898039216, 0.588235294, 0.149019608, 1.0);
  v24 = 6;
  v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.803921569, 0.360784314, 0.184313725, 1.0);
  v26 = 7;
  v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEBD4B8]), sel_initWithRed_green_blue_alpha_, 0.803921569, 0.549019608, 0.815686275, 1.0);
  v28 = 8;
  v11[0] = MEMORY[0x24BEE4AF8];
  sub_237E626F8(0, 9, 0);
  v0 = v11[0];
  v1 = *MEMORY[0x24BDE5D20];
  v2 = (void *)objc_opt_self();
  for (i = 0; i != 18; i += 2)
  {
    v4 = qword_237EEB778[SLOBYTE(v11[i + 6])];
    v5 = (id)v11[i + 5];
    v6 = objc_msgSend(v2, sel_functionWithName_, v1);
    v11[0] = v0;
    v8 = *(_QWORD *)(v0 + 16);
    v7 = *(_QWORD *)(v0 + 24);
    if (v8 >= v7 >> 1)
    {
      sub_237E626F8(v7 > 1, v8 + 1, 1);
      v0 = v11[0];
    }
    *(_QWORD *)(v0 + 16) = v8 + 1;
    v9 = (_QWORD *)(v0 + 24 * v8);
    v9[4] = v4;
    v9[5] = v5;
    v9[6] = v6;
  }
  swift_arrayDestroy();
  v11[0] = v0;
  swift_bridgeObjectRetain();
  sub_237E8DD80(v11);
  swift_release();
  return 0.0;
}

uint64_t sub_237E8DD80(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_237EB77E4(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_237E8DDE8(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_237E8DDE8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double *v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  char v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  unint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  double v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  char *v95;
  uint64_t v96;
  unint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  double *__dst;

  v3 = a1[1];
  result = sub_237EE3174();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v86 = *a1;
      v87 = -1;
      v88 = 1;
      v89 = *a1;
      do
      {
        v90 = *(double *)(v86 + 24 * v88);
        v91 = v87;
        v92 = v89;
        do
        {
          if (v90 >= *(double *)v92)
            break;
          if (!v86)
            goto LABEL_141;
          v93 = *(_OWORD *)(v92 + 32);
          *(_OWORD *)(v92 + 24) = *(_OWORD *)v92;
          *(_QWORD *)(v92 + 40) = *(_QWORD *)(v92 + 16);
          *(double *)v92 = v90;
          *(_OWORD *)(v92 + 8) = v93;
          v92 -= 24;
        }
        while (!__CFADD__(v91++, 1));
        ++v88;
        v89 += 24;
        --v87;
      }
      while (v88 != v3);
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v6 = result;
  v104 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x24BEE4AF8];
    __dst = (double *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v12 = (char *)MEMORY[0x24BEE4AF8];
LABEL_103:
      v95 = v12;
      v106 = v9;
      if (v13 >= 2)
      {
        v96 = *v104;
        do
        {
          v97 = v13 - 2;
          if (v13 < 2)
            goto LABEL_132;
          if (!v96)
            goto LABEL_145;
          v98 = v95;
          v99 = *(_QWORD *)&v95[16 * v97 + 32];
          v100 = *(_QWORD *)&v95[16 * v13 + 24];
          sub_237E8E504((double *)(v96 + 24 * v99), (double *)(v96 + 24 * *(_QWORD *)&v95[16 * v13 + 16]), v96 + 24 * v100, __dst);
          if (v1)
            break;
          if (v100 < v99)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v98 = sub_237E46894((uint64_t)v98);
          if (v97 >= *((_QWORD *)v98 + 2))
            goto LABEL_134;
          v101 = &v98[16 * v97 + 32];
          *(_QWORD *)v101 = v99;
          *((_QWORD *)v101 + 1) = v100;
          v102 = *((_QWORD *)v98 + 2);
          if (v13 > v102)
            goto LABEL_135;
          memmove(&v98[16 * v13 + 16], &v98[16 * v13 + 32], 16 * (v102 - v13));
          v95 = v98;
          *((_QWORD *)v98 + 2) = v102 - 1;
          v13 = v102 - 1;
        }
        while (v102 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v106 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v106 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v7 = v5 >> 1;
    v8 = sub_237EE2C04();
    *(_QWORD *)(v8 + 16) = v7;
    v106 = v8;
    __dst = (double *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v105 = *a1 + 48;
  v103 = *a1 - 24;
  v12 = (char *)MEMORY[0x24BEE4AF8];
  v107 = v6;
  v108 = v3;
  v109 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(double *)(v11 + 24 * v10);
      v16 = *(double *)(v11 + 24 * v14);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v17 = (double *)(v105 + 24 * v14);
        v18 = v15;
        while (1)
        {
          v19 = v18;
          v18 = *v17;
          if (v15 < v16 == *v17 >= v19)
            break;
          ++v10;
          v17 += 3;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14)
          goto LABEL_138;
        if (v14 < v10)
        {
          v20 = 24 * v10;
          v21 = 24 * v14;
          v22 = v10;
          v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11)
                goto LABEL_144;
              v24 = v11 + v21;
              v25 = v11 + v20;
              v26 = *(_QWORD *)(v11 + v21);
              v27 = *(_OWORD *)(v11 + v21 + 8);
              v28 = *(_OWORD *)(v11 + v20 - 24);
              *(_QWORD *)(v24 + 16) = *(_QWORD *)(v11 + v20 - 8);
              *(_OWORD *)v24 = v28;
              *(_QWORD *)(v25 - 24) = v26;
              *(_OWORD *)(v25 - 16) = v27;
            }
            ++v23;
            v20 -= 24;
            v21 += 24;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_136;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v29 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_139;
    if (v29 >= v3)
      v29 = v3;
    if (v29 < v14)
      break;
    if (v10 != v29)
    {
      v30 = v103 + 24 * v10;
      do
      {
        v31 = *(double *)(v11 + 24 * v10);
        v32 = v14;
        v33 = v30;
        do
        {
          if (v31 >= *(double *)v33)
            break;
          if (!v11)
            goto LABEL_142;
          v34 = *(_OWORD *)(v33 + 32);
          *(_OWORD *)(v33 + 24) = *(_OWORD *)v33;
          *(_QWORD *)(v33 + 40) = *(_QWORD *)(v33 + 16);
          *(double *)v33 = v31;
          *(_OWORD *)(v33 + 8) = v34;
          v33 -= 24;
          ++v32;
        }
        while (v10 != v32);
        ++v10;
        v30 += 24;
      }
      while (v10 != v29);
      v10 = v29;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_237E4652C(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v36 = *((_QWORD *)v12 + 2);
    v35 = *((_QWORD *)v12 + 3);
    v13 = v36 + 1;
    v11 = v109;
    if (v36 >= v35 >> 1)
    {
      v85 = sub_237E4652C((char *)(v35 > 1), v36 + 1, 1, v12);
      v11 = v109;
      v12 = v85;
    }
    *((_QWORD *)v12 + 2) = v13;
    v37 = v12 + 32;
    v38 = &v12[16 * v36 + 32];
    *(_QWORD *)v38 = v14;
    *((_QWORD *)v38 + 1) = v10;
    if (v36)
    {
      while (1)
      {
        v39 = v13 - 1;
        if (v13 >= 4)
        {
          v44 = &v37[16 * v13];
          v45 = *((_QWORD *)v44 - 8);
          v46 = *((_QWORD *)v44 - 7);
          v50 = __OFSUB__(v46, v45);
          v47 = v46 - v45;
          if (v50)
            goto LABEL_120;
          v49 = *((_QWORD *)v44 - 6);
          v48 = *((_QWORD *)v44 - 5);
          v50 = __OFSUB__(v48, v49);
          v42 = v48 - v49;
          v43 = v50;
          if (v50)
            goto LABEL_121;
          v51 = v13 - 2;
          v52 = &v37[16 * v13 - 32];
          v54 = *(_QWORD *)v52;
          v53 = *((_QWORD *)v52 + 1);
          v50 = __OFSUB__(v53, v54);
          v55 = v53 - v54;
          if (v50)
            goto LABEL_123;
          v50 = __OFADD__(v42, v55);
          v56 = v42 + v55;
          if (v50)
            goto LABEL_126;
          if (v56 >= v47)
          {
            v74 = &v37[16 * v39];
            v76 = *(_QWORD *)v74;
            v75 = *((_QWORD *)v74 + 1);
            v50 = __OFSUB__(v75, v76);
            v77 = v75 - v76;
            if (v50)
              goto LABEL_130;
            v67 = v42 < v77;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v68 = *((_QWORD *)v12 + 4);
            v69 = *((_QWORD *)v12 + 5);
            v50 = __OFSUB__(v69, v68);
            v61 = v69 - v68;
            v62 = v50;
            goto LABEL_77;
          }
          v41 = *((_QWORD *)v12 + 4);
          v40 = *((_QWORD *)v12 + 5);
          v50 = __OFSUB__(v40, v41);
          v42 = v40 - v41;
          v43 = v50;
        }
        if ((v43 & 1) != 0)
          goto LABEL_122;
        v51 = v13 - 2;
        v57 = &v37[16 * v13 - 32];
        v59 = *(_QWORD *)v57;
        v58 = *((_QWORD *)v57 + 1);
        v60 = __OFSUB__(v58, v59);
        v61 = v58 - v59;
        v62 = v60;
        if (v60)
          goto LABEL_125;
        v63 = &v37[16 * v39];
        v65 = *(_QWORD *)v63;
        v64 = *((_QWORD *)v63 + 1);
        v50 = __OFSUB__(v64, v65);
        v66 = v64 - v65;
        if (v50)
          goto LABEL_128;
        if (__OFADD__(v61, v66))
          goto LABEL_129;
        if (v61 + v66 >= v42)
        {
          v67 = v42 < v66;
LABEL_83:
          if (v67)
            v39 = v51;
          goto LABEL_85;
        }
LABEL_77:
        if ((v62 & 1) != 0)
          goto LABEL_124;
        v70 = &v37[16 * v39];
        v72 = *(_QWORD *)v70;
        v71 = *((_QWORD *)v70 + 1);
        v50 = __OFSUB__(v71, v72);
        v73 = v71 - v72;
        if (v50)
          goto LABEL_127;
        if (v73 < v61)
          goto LABEL_15;
LABEL_85:
        v78 = v39 - 1;
        if (v39 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11)
          goto LABEL_143;
        v79 = v12;
        v80 = &v37[16 * v78];
        v81 = *(_QWORD *)v80;
        v82 = &v37[16 * v39];
        v83 = *((_QWORD *)v82 + 1);
        sub_237E8E504((double *)(v11 + 24 * *(_QWORD *)v80), (double *)(v11 + 24 * *(_QWORD *)v82), v11 + 24 * v83, __dst);
        if (v1)
          goto LABEL_93;
        if (v83 < v81)
          goto LABEL_117;
        if (v39 > *((_QWORD *)v79 + 2))
          goto LABEL_118;
        *(_QWORD *)v80 = v81;
        *(_QWORD *)&v37[16 * v78 + 8] = v83;
        v84 = *((_QWORD *)v79 + 2);
        if (v39 >= v84)
          goto LABEL_119;
        v12 = v79;
        v13 = v84 - 1;
        memmove(&v37[16 * v39], v82 + 16, 16 * (v84 - 1 - v39));
        *((_QWORD *)v79 + 2) = v84 - 1;
        v11 = v109;
        if (v84 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v107;
    v3 = v108;
    if (v10 >= v108)
    {
      v9 = v106;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_237EE3090();
  __break(1u);
  return result;
}

uint64_t sub_237E8E504(double *__src, double *a2, unint64_t a3, double *__dst)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  double *v12;
  double *v13;
  __int128 v14;
  __int128 v15;
  char *v16;
  unint64_t v17;
  double *v18;
  double *v19;
  double v20;
  __int128 v21;
  __int128 v22;
  uint64_t result;
  char *v24;
  double *v25;
  double *v26;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = ((char *)a2 - (char *)__src) / 24;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 24;
  v26 = __src;
  v25 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -23)
    {
      if (__dst != a2 || &a2[3 * v11] <= __dst)
        memmove(__dst, a2, 24 * v11);
      v16 = (char *)&v4[3 * v11];
      v24 = v16;
      v26 = v6;
      if (v7 < v6 && v10 >= 24)
      {
        v17 = a3 - 24;
        v18 = v6;
        while (1)
        {
          v19 = (double *)(v17 + 24);
          v20 = *(v18 - 3);
          v18 -= 3;
          if (*((double *)v16 - 3) >= v20)
          {
            v24 = v16 - 24;
            if (v19 < (double *)v16 || v17 >= (unint64_t)v16 || v19 != (double *)v16)
            {
              v22 = *(_OWORD *)(v16 - 24);
              *(_QWORD *)(v17 + 16) = *((_QWORD *)v16 - 1);
              *(_OWORD *)v17 = v22;
            }
            v18 = v6;
            v16 -= 24;
            if (v6 <= v7)
              goto LABEL_38;
          }
          else
          {
            if (v19 != v6 || v17 >= (unint64_t)v6)
            {
              v21 = *(_OWORD *)v18;
              *(double *)(v17 + 16) = v18[2];
              *(_OWORD *)v17 = v21;
            }
            v26 = v18;
            if (v18 <= v7)
              goto LABEL_38;
          }
          v17 -= 24;
          v6 = v18;
          if (v16 <= (char *)v4)
            goto LABEL_38;
        }
      }
      goto LABEL_38;
    }
  }
  else if (v8 >= -23)
  {
    if (__dst != __src || &__src[3 * v9] <= __dst)
      memmove(__dst, __src, 24 * v9);
    v12 = &v4[3 * v9];
    v24 = (char *)v12;
    if ((unint64_t)v6 < a3 && v8 >= 24)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4)
          {
            v15 = *(_OWORD *)v4;
            v7[2] = v4[2];
            *(_OWORD *)v7 = v15;
          }
          v4 += 3;
          v25 = v4;
          v13 = v6;
        }
        else
        {
          v13 = v6 + 3;
          if (v7 < v6 || v7 >= v13 || v7 != v6)
          {
            v14 = *(_OWORD *)v6;
            v7[2] = v6[2];
            *(_OWORD *)v7 = v14;
          }
        }
        v7 += 3;
        if (v4 >= v12)
          break;
        v6 = v13;
      }
      while ((unint64_t)v13 < a3);
      v26 = v7;
    }
LABEL_38:
    sub_237E46624((void **)&v26, (const void **)&v25, &v24);
    return 1;
  }
  result = sub_237EE30D8();
  __break(1u);
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SolarSkyColorPalette(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v5 = v3;
  return a1;
}

uint64_t assignWithCopy for SolarSkyColorPalette(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  void *v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v6 = v3;

  return a1;
}

uint64_t assignWithTake for SolarSkyColorPalette(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;

  return a1;
}

uint64_t getEnumTagSinglePayload for SolarSkyColorPalette(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xF8 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 248);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 8)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SolarSkyColorPalette(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF7)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 248;
    if (a3 >= 0xF8)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xF8)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_237E8E8EC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_237E8E8F4(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SolarSkyColorPalette()
{
  return &type metadata for SolarSkyColorPalette;
}

uint64_t sub_237E8E910()
{
  uint64_t result;
  unint64_t v1;

  result = sub_237EE2ED4();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_237E8E9A4(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_237E8E9EC()
{
  sub_237EE2ACC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_237E8EA4C()
{
  sub_237EE3264();
  sub_237EE3288();
  return sub_237EE3294();
}

void sub_237E8EA98(uint64_t a1, char a2)
{
  sub_237EE3264();
  __asm { BR              X10 }
}

uint64_t sub_237E8EAF0()
{
  sub_237EE2ACC();
  swift_bridgeObjectRelease();
  return sub_237EE3294();
}

uint64_t sub_237E8EB68(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  __int128 v7[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_237E2D1BC((__int128 *)a1, (uint64_t)v7);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v6 = *v2;
    *v2 = 0x8000000000000000;
    sub_237E9B9D8(v7, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v6;
    swift_bridgeObjectRelease();
    return sub_237E2846C(a2);
  }
  else
  {
    sub_237E2209C(a1, &qword_2568986D0);
    sub_237E97778(a2, (uint64_t)v7);
    sub_237E2846C(a2);
    return sub_237E2209C((uint64_t)v7, &qword_2568986D0);
  }
}

uint64_t sub_237E8EC24(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t *v5;
  uint64_t *v9;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v9 = v5;
  v12 = __swift_instantiateConcreteTypeFromMangledName(a3);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(a1, 1, v15) == 1)
  {
    sub_237E2209C(a1, a3);
    sub_237E97954(a2, a4, a5, (uint64_t)v14);
    v19 = sub_237EE1D94();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(a2, v19);
    return sub_237E2209C((uint64_t)v14, a3);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(v18, a1, v15);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v24 = *v9;
    *v9 = 0x8000000000000000;
    sub_237E9C110((uint64_t)v18, a2, isUniquelyReferenced_nonNull_native, a4, a5);
    *v9 = v24;
    swift_bridgeObjectRelease();
    v22 = sub_237EE1D94();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(a2, v22);
  }
}

uint64_t sub_237E8EDC8(uint64_t a1, double a2, double a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v24;
  uint64_t v25;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899518);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for WorldViewModel.Pin(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v12 + 48))(a1, 1, v11, v13) == 1)
  {
    sub_237E2209C(a1, &qword_256899518);
    v16 = sub_237EAD79C(a2, a3);
    if ((v17 & 1) != 0)
    {
      v18 = v16;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v20 = *v4;
      v25 = *v4;
      *v4 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_237E9D3E4();
        v20 = v25;
      }
      sub_237E47CE0(*(_QWORD *)(v20 + 56) + *(_QWORD *)(v12 + 72) * v18, (uint64_t)v10, type metadata accessor for WorldViewModel.Pin);
      sub_237E9AD54(v18, v20);
      *v4 = v20;
      swift_bridgeObjectRelease();
      v21 = 0;
    }
    else
    {
      v21 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, v21, 1, v11);
    return sub_237E2209C((uint64_t)v10, &qword_256899518);
  }
  else
  {
    sub_237E47CE0(a1, (uint64_t)v15, type metadata accessor for WorldViewModel.Pin);
    v22 = swift_isUniquelyReferenced_nonNull_native();
    v25 = *v4;
    *v4 = 0x8000000000000000;
    sub_237E9BC48((uint64_t)v15, v22, a2, a3);
    *v4 = v25;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_237E8EFB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _QWORD v9[4];

  if (*(_QWORD *)(a1 + 24) == 1)
  {
    sub_237E2209C(a1, &qword_25689B7D8);
    sub_237E97868(a2, a3, v9);
    swift_bridgeObjectRelease();
    return sub_237E2209C((uint64_t)v9, &qword_25689B7D8);
  }
  else
  {
    sub_237E21FC0(a1, (uint64_t)v9, &qword_256899E40);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v3;
    *v3 = 0x8000000000000000;
    sub_237E9BFE0((uint64_t)v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_237E8F094(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v22;
  uint64_t v23;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_237EE1D70();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, __n128))(v10 + 48))(a1, 1, v9, v11) == 1)
  {
    sub_237E2209C(a1, &qword_25689C140);
    v14 = sub_237EAD898(a2);
    if ((v15 & 1) != 0)
    {
      v16 = v14;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v18 = *v3;
      v23 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_237E9E1FC();
        v18 = v23;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 32))(v8, *(_QWORD *)(v18 + 56) + *(_QWORD *)(v10 + 72) * v16, v9);
      sub_237E9B120(v16, v18);
      *v3 = v18;
      swift_bridgeObjectRelease();
      v19 = 0;
    }
    else
    {
      v19 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v19, 1, v9);
    return sub_237E2209C((uint64_t)v8, &qword_25689C140);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v13, a1, v9);
    v20 = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v3;
    *v3 = 0x8000000000000000;
    sub_237E9C544((uint64_t)v13, a2, v20);
    *v3 = v23;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_237E8F26C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B6E8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ScheduledTask();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, __n128))(v13 + 48))(a1, 1, v10) == 1)
  {
    sub_237E2209C(a1, &qword_25689B6E8);
    sub_237E97AA4(a2, (uint64_t)v8);
    v14 = sub_237EE1D94();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a2, v14);
    return sub_237E2209C((uint64_t)v8, &qword_25689B6E8);
  }
  else
  {
    sub_237E47CE0(a1, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledTask);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v3;
    *v3 = 0x8000000000000000;
    sub_237E9C668((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v19;
    swift_bridgeObjectRelease();
    v17 = sub_237EE1D94();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a2, v17);
  }
}

uint64_t sub_237E8F3EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  os_unfair_lock_s *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  os_unfair_lock_s *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t);
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;

  v37 = a4;
  v38 = a3;
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B7A8);
  v40 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v41 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B7B0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v43 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v39 = (char *)&v36 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v36 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25689C1A0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v36 - v18;
  v20 = (os_unfair_lock_s *)(*(_QWORD *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 104)) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v20);
  v21 = *(_QWORD *)(*(_QWORD *)a1 + 120);
  v22 = *(_BYTE *)(a1 + v21);
  if ((v22 & 1) == 0)
    *(_BYTE *)(a1 + v21) = 1;
  os_unfair_lock_unlock(v20);
  swift_endAccess();
  v23 = type metadata accessor for TimeString(0);
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
  v44 = v19;
  v24(v19, 1, 1, v23);
  if ((v22 & 1) == 0)
  {
    v25 = (os_unfair_lock_s *)(*(_QWORD *)(a2 + 16) + 16);
    swift_beginAccess();
    os_unfair_lock_unlock(v25);
    v26 = swift_endAccess();
    v38(v26);
    swift_beginAccess();
    os_unfair_lock_lock(v25);
    swift_endAccess();
    v24(v17, 0, 1, v23);
    sub_237E9F9C4((uint64_t)v17, (uint64_t)v44, (uint64_t *)&unk_25689C1A0);
  }
  v38 = (void (*)(uint64_t))a2;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897E38);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
  v30 = (uint64_t)v13;
  v29(v13, 1, 1, v27);
  swift_beginAccess();
  os_unfair_lock_lock(v20);
  v31 = swift_endAccess();
  MEMORY[0x24BDAC7A8](v31);
  v32 = (uint64_t)v44;
  *(&v36 - 2) = a1;
  *(&v36 - 1) = v32;
  (*(void (**)(char *, _QWORD, uint64_t))(v40 + 104))(v41, *MEMORY[0x24BEE6A10], v42);
  v33 = (uint64_t)v39;
  sub_237EE2CA0();
  v29((char *)v33, 0, 1, v27);
  sub_237E9F9C4(v33, v30, &qword_25689B7B0);
  swift_beginAccess();
  os_unfair_lock_unlock(v20);
  swift_endAccess();
  v34 = v43;
  sub_237E22004(v30, v43, &qword_25689B7B0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v34, 1, v27);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v37, v34, v27);
    sub_237E2209C(v30, &qword_25689B7B0);
    sub_237E2209C((uint64_t)v44, (uint64_t *)&unk_25689C1A0);
    return swift_release();
  }
  return result;
}

uint64_t sub_237E8F7E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  os_unfair_lock_s *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;

  v34 = a3;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B678);
  v37 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v38 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B680);
  MEMORY[0x24BDAC7A8](v6);
  v40 = (uint64_t)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v36 = (char *)&v32 - v9;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v32 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898AF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v32 - v17;
  v19 = (os_unfair_lock_s *)(*(_QWORD *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 104)) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v19);
  v20 = *(_QWORD *)(*(_QWORD *)a1 + 120);
  v21 = *(_BYTE *)(a1 + v20);
  if ((v21 & 1) == 0)
    *(_BYTE *)(a1 + v20) = 1;
  os_unfair_lock_unlock(v19);
  swift_endAccess();
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v23(v18, 1, 1, v22);
  if ((v21 & 1) == 0)
  {
    sub_237EA2CB8(a2, (uint64_t)v15);
    v23(v15, 0, 1, v22);
    sub_237E9F9C4((uint64_t)v15, (uint64_t)v18, &qword_256898AF0);
  }
  v35 = a2;
  v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25689C240);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56);
  v26(v12, 1, 1, v24);
  swift_beginAccess();
  os_unfair_lock_lock(v19);
  v27 = swift_endAccess();
  v28 = MEMORY[0x24BDAC7A8](v27);
  *(&v32 - 2) = a1;
  *(&v32 - 1) = (uint64_t)v18;
  v33 = v18;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v37 + 104))(v38, *MEMORY[0x24BEE6A10], v39, v28);
  v29 = (uint64_t)v36;
  sub_237EE2CA0();
  v26((char *)v29, 0, 1, v24);
  sub_237E9F9C4(v29, (uint64_t)v12, &qword_25689B680);
  swift_beginAccess();
  os_unfair_lock_unlock(v19);
  swift_endAccess();
  v30 = v40;
  sub_237E22004((uint64_t)v12, v40, &qword_25689B680);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v30, 1, v24);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v34, v30, v24);
    sub_237E2209C((uint64_t)v12, &qword_25689B680);
    sub_237E2209C((uint64_t)v33, &qword_256898AF0);
    return swift_release();
  }
  return result;
}

uint64_t sub_237E8FB7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  os_unfair_lock_s *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v24;
  os_unfair_lock_s *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;

  v41 = a2;
  v36 = a3;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B678);
  v37 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v38 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B680);
  MEMORY[0x24BDAC7A8](v5);
  v40 = (uint64_t)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v35 - v8;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v35 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898AF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v35 - v17;
  v19 = (os_unfair_lock_s *)(*(_QWORD *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 104)) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v19);
  v20 = *(_QWORD *)(*(_QWORD *)a1 + 120);
  v21 = *(_BYTE *)(a1 + v20);
  if ((v21 & 1) == 0)
    *(_BYTE *)(a1 + v20) = 1;
  os_unfair_lock_unlock(v19);
  swift_endAccess();
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v23(v18, 1, 1, v22);
  v42 = v18;
  if ((v21 & 1) == 0)
  {
    v24 = *(_QWORD **)(v41 + 40);
    v25 = (os_unfair_lock_s *)(v24[2] + 16);
    swift_beginAccess();
    swift_retain();
    os_unfair_lock_lock(v25);
    v26 = (uint64_t)v24 + *(_QWORD *)(*v24 + 96);
    swift_beginAccess();
    sub_237E22004(v26, (uint64_t)v15, &qword_25689C140);
    os_unfair_lock_unlock(v25);
    swift_endAccess();
    swift_release();
    v23(v15, 0, 1, v22);
    sub_237E9F9C4((uint64_t)v15, (uint64_t)v42, &qword_256898AF0);
  }
  v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25689C240);
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
  v29(v12, 1, 1, v27);
  swift_beginAccess();
  os_unfair_lock_lock(v19);
  v30 = swift_endAccess();
  v31 = MEMORY[0x24BDAC7A8](v30);
  v32 = (uint64_t)v42;
  *(&v35 - 2) = a1;
  *(&v35 - 1) = v32;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v37 + 104))(v38, *MEMORY[0x24BEE6A10], v39, v31);
  sub_237EE2CA0();
  v29(v9, 0, 1, v27);
  sub_237E9F9C4((uint64_t)v9, (uint64_t)v12, &qword_25689B680);
  swift_beginAccess();
  os_unfair_lock_unlock(v19);
  swift_endAccess();
  v33 = v40;
  sub_237E22004((uint64_t)v12, v40, &qword_25689B680);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v33, 1, v27);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v36, v33, v27);
    sub_237E2209C((uint64_t)v12, &qword_25689B680);
    sub_237E2209C((uint64_t)v42, &qword_256898AF0);
    return swift_release();
  }
  return result;
}

uint64_t sub_237E8FF84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  os_unfair_lock_s *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  __n128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;

  v35 = a3;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B6F8);
  v38 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v39 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B700);
  MEMORY[0x24BDAC7A8](v6);
  v41 = (uint64_t)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v37 = (char *)&v33 - v9;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v33 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898BC8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v33 - v17;
  v19 = (os_unfair_lock_s *)(*(_QWORD *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 104)) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v19);
  v20 = *(_QWORD *)(*(_QWORD *)a1 + 120);
  v21 = *(_BYTE *)(a1 + v20);
  if ((v21 & 1) == 0)
    *(_BYTE *)(a1 + v20) = 1;
  os_unfair_lock_unlock(v19);
  swift_endAccess();
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898BC0);
  v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v23(v18, 1, 1, v22);
  if ((v21 & 1) == 0)
  {
    sub_237E4C60C();
    sub_237E4C87C();
    v24 = type metadata accessor for Alarm();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v15, 1, 1, v24);
    v23(v15, 0, 1, v22);
    sub_237E9F9C4((uint64_t)v15, (uint64_t)v18, &qword_256898BC8);
  }
  v36 = a2;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898BD0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
  v27(v12, 1, 1, v25);
  swift_beginAccess();
  os_unfair_lock_lock(v19);
  v28 = swift_endAccess();
  v29 = MEMORY[0x24BDAC7A8](v28);
  *(&v33 - 2) = a1;
  *(&v33 - 1) = (uint64_t)v18;
  v34 = v18;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v38 + 104))(v39, *MEMORY[0x24BEE6A10], v40, v29);
  v30 = (uint64_t)v37;
  sub_237EE2CA0();
  v27((char *)v30, 0, 1, v25);
  sub_237E9F9C4(v30, (uint64_t)v12, &qword_25689B700);
  swift_beginAccess();
  os_unfair_lock_unlock(v19);
  swift_endAccess();
  v31 = v41;
  sub_237E22004((uint64_t)v12, v41, &qword_25689B700);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v31, 1, v25);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v35, v31, v25);
    sub_237E2209C((uint64_t)v12, &qword_25689B700);
    sub_237E2209C((uint64_t)v34, &qword_256898BC8);
    return swift_release();
  }
  return result;
}

uint64_t sub_237E90340@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  os_unfair_lock_s *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t result;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  char v52;

  v44 = a3;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B8D8);
  v46 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v47 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B8E0);
  MEMORY[0x24BDAC7A8](v6);
  v49 = (uint64_t)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v43 - v9;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v43 - v12;
  v14 = sub_237EE1D70();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897E20);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (os_unfair_lock_s *)(*(_QWORD *)(a1 + 48) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v21);
  v22 = *(_BYTE *)(a1 + 64);
  if ((v22 & 1) == 0)
    *(_BYTE *)(a1 + 64) = 1;
  os_unfair_lock_unlock(v21);
  swift_endAccess();
  v50 = xmmword_237EE7820;
  v51 = 0;
  v52 = 0;
  if ((v22 & 1) == 0)
  {
    v45 = a1;
    v23 = OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_solarMovementsUpdateTask;
    v24 = *(_QWORD *)(a2 + OBJC_IVAR____TtC11ClockPoster17SolarDataProvider_solarMovementsUpdateTask);
    v43 = v15;
    if (!v24)
    {
      v25 = sub_237EE2C64();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v20, 1, 1, v25);
      v26 = swift_allocObject();
      swift_weakInit();
      v27 = (_QWORD *)swift_allocObject();
      v27[2] = 0;
      v27[3] = 0;
      v27[4] = v26;
      *(_QWORD *)(a2 + v23) = sub_237ECBB58((uint64_t)v20, (uint64_t)&unk_256899D40, (uint64_t)v27);
      swift_release();
    }
    v28 = a2;
    v29 = v14;
    if (qword_256897B48 != -1)
      swift_once();
    sub_237EA1DE0((uint64_t)v17);
    v30 = sub_237ED9504();
    v32 = v31;
    v34 = v33;
    v36 = v35;
    (*(void (**)(char *, uint64_t))(v43 + 8))(v17, v29);
    *(_QWORD *)&v50 = v30;
    *((_QWORD *)&v50 + 1) = v32;
    v51 = v34;
    v52 = v36;
    a2 = v28;
    a1 = v45;
  }
  v45 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568995E8);
  v38 = *(_QWORD *)(v37 - 8);
  v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
  v39(v13, 1, 1, v37);
  swift_beginAccess();
  os_unfair_lock_lock(v21);
  v40 = swift_endAccess();
  MEMORY[0x24BDAC7A8](v40);
  *(&v43 - 2) = a1;
  *(&v43 - 1) = (uint64_t)&v50;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689B8E8);
  (*(void (**)(char *, _QWORD, uint64_t))(v46 + 104))(v47, *MEMORY[0x24BEE6A10], v48);
  sub_237EE2CA0();
  v39(v10, 0, 1, v37);
  sub_237E9F9C4((uint64_t)v10, (uint64_t)v13, &qword_25689B8E0);
  swift_beginAccess();
  os_unfair_lock_unlock(v21);
  swift_endAccess();
  v41 = v49;
  sub_237E22004((uint64_t)v13, v49, &qword_25689B8E0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v41, 1, v37);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32))(v44, v41, v37);
    sub_237E2209C((uint64_t)v13, &qword_25689B8E0);
    sub_237E48530(v50, *((uint64_t *)&v50 + 1));
    return swift_release();
  }
  return result;
}

uint64_t sub_237E907C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  os_unfair_lock_s *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  os_unfair_lock_s *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B8A0);
  v32 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B8A8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v29 - v13;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v29 - v16;
  v18 = (os_unfair_lock_s *)(*(_QWORD *)(a1 + 24) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v18);
  v19 = *(_BYTE *)(a1 + 40);
  v30 = a3;
  v31 = a2;
  v34 = v6;
  v35 = v11;
  v33 = v8;
  if ((v19 & 1) != 0)
  {
    os_unfair_lock_unlock(v18);
    swift_endAccess();
    v20 = 1;
  }
  else
  {
    *(_BYTE *)(a1 + 40) = 1;
    os_unfair_lock_unlock(v18);
    swift_endAccess();
    v36 = 1;
    sub_237EB8E94();
    v21 = *(_QWORD *)(a2 + 32);
    v22 = (os_unfair_lock_s *)(*(_QWORD *)(v21 + 16) + 16);
    swift_beginAccess();
    swift_retain();
    os_unfair_lock_lock(v22);
    swift_beginAccess();
    v20 = *(_QWORD *)(v21 + 24);
    swift_bridgeObjectRetain();
    os_unfair_lock_unlock(v22);
    swift_endAccess();
    swift_release();
  }
  v36 = v20;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2568995D8);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
  v25(v17, 1, 1, v23);
  swift_beginAccess();
  os_unfair_lock_lock(v18);
  v26 = swift_endAccess();
  MEMORY[0x24BDAC7A8](v26);
  *(&v29 - 2) = a1;
  *(&v29 - 1) = (uint64_t)&v36;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689B8B0);
  (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v33, *MEMORY[0x24BEE6A10], v34);
  sub_237EE2CA0();
  v25(v14, 0, 1, v23);
  sub_237E9F9C4((uint64_t)v14, (uint64_t)v17, &qword_25689B8A8);
  swift_beginAccess();
  os_unfair_lock_unlock(v18);
  swift_endAccess();
  v27 = (uint64_t)v35;
  sub_237E22004((uint64_t)v17, (uint64_t)v35, &qword_25689B8A8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v27, 1, v23);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v30, v27, v23);
    sub_237E2209C((uint64_t)v17, &qword_25689B8A8);
    sub_237E47D4C(v36);
    return swift_release();
  }
  return result;
}

uint64_t sub_237E90B1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  os_unfair_lock_s *v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;

  v34 = a3;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B860);
  v37 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v38 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B868);
  MEMORY[0x24BDAC7A8](v6);
  v40 = (uint64_t)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v36 = (char *)&v32 - v9;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v32 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689AB30);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v32 - v17;
  v19 = (os_unfair_lock_s *)(*(_QWORD *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 104)) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v19);
  v20 = *(_QWORD *)(*(_QWORD *)a1 + 120);
  v21 = *(_BYTE *)(a1 + v20);
  if ((v21 & 1) == 0)
    *(_BYTE *)(a1 + v20) = 1;
  os_unfair_lock_unlock(v19);
  swift_endAccess();
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899D48);
  v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v23(v18, 1, 1, v22);
  if ((v21 & 1) == 0)
  {
    sub_237E4FB30(a2, (uint64_t)v15);
    v23(v15, 0, 1, v22);
    sub_237E9F9C4((uint64_t)v15, (uint64_t)v18, &qword_25689AB30);
  }
  v35 = a2;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689AB38);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56);
  v26(v12, 1, 1, v24);
  swift_beginAccess();
  os_unfair_lock_lock(v19);
  v27 = swift_endAccess();
  v28 = MEMORY[0x24BDAC7A8](v27);
  *(&v32 - 2) = a1;
  *(&v32 - 1) = (uint64_t)v18;
  v33 = v18;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v37 + 104))(v38, *MEMORY[0x24BEE6A10], v39, v28);
  v29 = (uint64_t)v36;
  sub_237EE2CA0();
  v26((char *)v29, 0, 1, v24);
  sub_237E9F9C4(v29, (uint64_t)v12, &qword_25689B868);
  swift_beginAccess();
  os_unfair_lock_unlock(v19);
  swift_endAccess();
  v30 = v40;
  sub_237E22004((uint64_t)v12, v40, &qword_25689B868);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v30, 1, v24);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v34, v30, v24);
    sub_237E2209C((uint64_t)v12, &qword_25689B868);
    sub_237E2209C((uint64_t)v33, &qword_25689AB30);
    return swift_release();
  }
  return result;
}

uint64_t sub_237E90EB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  os_unfair_lock_s *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  __n128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  _QWORD v36[2];
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  LODWORD(v43) = a4;
  v36[0] = a5;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B7F0);
  v39 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v40 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B7F8);
  MEMORY[0x24BDAC7A8](v9);
  v42 = (uint64_t)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v38 = (char *)v36 - v12;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v36 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)v36 - v20;
  v22 = (os_unfair_lock_s *)(*(_QWORD *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 104)) + 16);
  swift_beginAccess();
  swift_retain();
  os_unfair_lock_lock(v22);
  v23 = *(_QWORD *)(*(_QWORD *)a1 + 120);
  v24 = *(_BYTE *)(a1 + v23);
  if ((v24 & 1) == 0)
    *(_BYTE *)(a1 + v23) = 1;
  os_unfair_lock_unlock(v22);
  swift_endAccess();
  v25 = sub_237EE1D70();
  v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
  v26(v21, 1, 1, v25);
  if ((v24 & 1) == 0)
  {
    swift_retain();
    sub_237E9741C(a2, a3, v43, (uint64_t)v18);
    v26(v18, 0, 1, v25);
    sub_237E9F9C4((uint64_t)v18, (uint64_t)v21, &qword_25689C140);
  }
  v43 = a3;
  v36[1] = a2;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899D50);
  v37 = *(_QWORD *)(v27 - 8);
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56);
  v29 = (uint64_t)v15;
  v28(v15, 1, 1, v27);
  swift_beginAccess();
  os_unfair_lock_lock(v22);
  v30 = swift_endAccess();
  v31 = MEMORY[0x24BDAC7A8](v30);
  v36[-2] = a1;
  v36[-1] = v21;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v39 + 104))(v40, *MEMORY[0x24BEE6A10], v41, v31);
  v32 = (uint64_t)v38;
  sub_237EE2CA0();
  v28((char *)v32, 0, 1, v27);
  sub_237E9F9C4(v32, v29, &qword_25689B7F8);
  swift_beginAccess();
  os_unfair_lock_unlock(v22);
  swift_endAccess();
  v33 = v42;
  v34 = v37;
  sub_237E22004(v29, v42, &qword_25689B7F8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v33, 1, v27) == 1)
  {
    result = swift_release();
    __break(1u);
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v34 + 32))(v36[0], v33, v27);
    sub_237E2209C(v29, &qword_25689B7F8);
    sub_237E2209C((uint64_t)v21, &qword_25689C140);
    swift_release_n();
    return swift_release();
  }
  return result;
}

uint64_t sub_237E91290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v32 = a3;
  v34 = a1;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B770);
  v4 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25689C1A0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v31 - v11;
  v13 = type metadata accessor for TimeString(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v31 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v31 - v21;
  v23 = *(_QWORD *)(*(_QWORD *)a2 + 96);
  v35 = a2;
  v24 = a2 + v23;
  swift_beginAccess();
  sub_237E22004(v24, (uint64_t)v12, (uint64_t *)&unk_25689C1A0);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v25(v12, 1, v13) == 1)
  {
    v26 = v33;
    sub_237E2209C((uint64_t)v12, (uint64_t *)&unk_25689C1A0);
    sub_237E22004(v32, (uint64_t)v10, (uint64_t *)&unk_25689C1A0);
    v27 = v25(v10, 1, v13);
    v28 = v34;
    if (v27 == 1)
    {
      sub_237E2209C((uint64_t)v10, (uint64_t *)&unk_25689C1A0);
    }
    else
    {
      sub_237E47CE0((uint64_t)v10, (uint64_t)v17, type metadata accessor for TimeString);
      sub_237E21EBC((uint64_t)v17, (uint64_t)v20, type metadata accessor for TimeString);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25689B778);
      sub_237EE2C7C();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v26);
      sub_237E92A50((uint64_t)v17);
      sub_237E21F00((uint64_t)v17, type metadata accessor for TimeString);
    }
  }
  else
  {
    sub_237E47CE0((uint64_t)v12, (uint64_t)v22, type metadata accessor for TimeString);
    sub_237E21EBC((uint64_t)v22, (uint64_t)v20, type metadata accessor for TimeString);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25689B778);
    v29 = v34;
    sub_237EE2C7C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v33);
    sub_237E21F00((uint64_t)v22, type metadata accessor for TimeString);
    v28 = v29;
  }
  return sub_237E95644(v28);
}

uint64_t sub_237E91574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v34 = a3;
  v36 = a1;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B688);
  v4 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898AF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v33 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v33 - v18;
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v33 - v21;
  v23 = *(_QWORD *)(*(_QWORD *)a2 + 96);
  v37 = a2;
  v24 = a2 + v23;
  swift_beginAccess();
  sub_237E22004(v24, (uint64_t)v12, &qword_256898AF0);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v25(v12, 1, v13) == 1)
  {
    v26 = v35;
    sub_237E2209C((uint64_t)v12, &qword_256898AF0);
    sub_237E22004(v34, (uint64_t)v9, &qword_256898AF0);
    v27 = v25(v9, 1, v13);
    v28 = v36;
    if (v27 == 1)
    {
      v29 = &qword_256898AF0;
      v30 = (uint64_t)v9;
    }
    else
    {
      sub_237E21FC0((uint64_t)v9, (uint64_t)v16, &qword_25689C140);
      sub_237E22004((uint64_t)v16, (uint64_t)v19, &qword_25689C140);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25689B690);
      sub_237EE2C7C();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v26);
      sub_237E934B0((uint64_t)v16);
      v30 = (uint64_t)v16;
      v29 = &qword_25689C140;
    }
    sub_237E2209C(v30, v29);
  }
  else
  {
    sub_237E21FC0((uint64_t)v12, (uint64_t)v22, &qword_25689C140);
    sub_237E22004((uint64_t)v22, (uint64_t)v19, &qword_25689C140);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25689B690);
    v31 = v36;
    sub_237EE2C7C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v35);
    sub_237E2209C((uint64_t)v22, &qword_25689C140);
    v28 = v31;
  }
  return sub_237E9586C(v28);
}

uint64_t sub_237E91858(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v34 = a3;
  v36 = a1;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B718);
  v4 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898BC8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v33 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898BC0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v33 - v18;
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v33 - v21;
  v23 = *(_QWORD *)(*(_QWORD *)a2 + 96);
  v37 = a2;
  v24 = a2 + v23;
  swift_beginAccess();
  sub_237E22004(v24, (uint64_t)v12, &qword_256898BC8);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v25(v12, 1, v13) == 1)
  {
    v26 = v35;
    sub_237E2209C((uint64_t)v12, &qword_256898BC8);
    sub_237E22004(v34, (uint64_t)v9, &qword_256898BC8);
    v27 = v25(v9, 1, v13);
    v28 = v36;
    if (v27 == 1)
    {
      v29 = &qword_256898BC8;
      v30 = (uint64_t)v9;
    }
    else
    {
      sub_237E21FC0((uint64_t)v9, (uint64_t)v16, &qword_256898BC0);
      sub_237E22004((uint64_t)v16, (uint64_t)v19, &qword_256898BC0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25689B720);
      sub_237EE2C7C();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v26);
      sub_237E93AE0((uint64_t)v16);
      v30 = (uint64_t)v16;
      v29 = &qword_256898BC0;
    }
    sub_237E2209C(v30, v29);
  }
  else
  {
    sub_237E21FC0((uint64_t)v12, (uint64_t)v22, &qword_256898BC0);
    sub_237E22004((uint64_t)v22, (uint64_t)v19, &qword_256898BC0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25689B720);
    v31 = v36;
    sub_237EE2C7C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v35);
    sub_237E2209C((uint64_t)v22, &qword_256898BC0);
    v28 = v31;
  }
  return sub_237E95A94(v28);
}

uint64_t sub_237E91B3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899D60);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v10 = *(_QWORD *)(a2 + 24);
  if (v10 == 1)
  {
    v11 = *(_QWORD *)(a3 + 8);
    if (v11 != 1)
    {
      v12 = *(_QWORD *)(a3 + 16);
      v14 = *(_BYTE *)(a3 + 24);
      v19 = *(_QWORD *)a3;
      v13 = v19;
      v20 = v11;
      v21 = v12;
      v22 = v14;
      swift_bridgeObjectRetain_n();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256899D68);
      sub_237EE2C7C();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      sub_237E94134(v13, v11, v12, v14);
      sub_237E48530(v13, v11);
    }
  }
  else
  {
    v15 = *(_BYTE *)(a2 + 40);
    v16 = *(_QWORD *)(a2 + 32);
    v19 = *(_QWORD *)(a2 + 16);
    v20 = v10;
    v21 = v16;
    v22 = v15;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256899D68);
    sub_237EE2C7C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return sub_237E95CBC(a1);
}

uint64_t sub_237E91CCC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B8B8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (uint64_t *)(a2 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(a2 + 16) == 1)
  {
    v11 = *a3;
    if (v11 != 1)
    {
      v18 = v11;
      swift_bridgeObjectRetain_n();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25689B8C0);
      sub_237EE2C7C();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      v12 = *v10;
      if (*v10)
      {
        if (v12 != 1 && v11)
        {
          sub_237E9F974(v11);
          sub_237E9F974(v12);
          v13 = sub_237EBBED4(v12, v11);
          sub_237E47D4C(v11);
          sub_237E47D4C(v12);
          if ((v13 & 1) != 0)
          {
LABEL_12:
            v15 = v11;
LABEL_13:
            sub_237E47D4C(v15);
            return sub_237E95EDC(a1);
          }
          v12 = *v10;
        }
      }
      else
      {
        if (!v11)
        {
          sub_237E47D4C(0);
          v15 = 0;
          goto LABEL_13;
        }
        v12 = 0;
      }
      *(_QWORD *)(a2 + 16) = v11;
      swift_bridgeObjectRetain();
      sub_237E47D4C(v12);
      swift_beginAccess();
      swift_retain();
      v14 = swift_bridgeObjectRetain();
      sub_237EBC254(v14, a2);
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_12;
    }
  }
  else
  {
    v18 = *(_QWORD *)(a2 + 16);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25689B8C0);
    sub_237EE2C7C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return sub_237E95EDC(a1);
}

uint64_t sub_237E91EC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v32 = a3;
  v34 = a1;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B6C0);
  v4 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689DA20);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v31 - v11;
  v13 = type metadata accessor for CurrentLocationResult(0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v31 - v18;
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v31 - v21;
  v23 = *(_QWORD *)(*(_QWORD *)a2 + 96);
  v35 = a2;
  v24 = a2 + v23;
  swift_beginAccess();
  sub_237E22004(v24, (uint64_t)v12, &qword_25689DA20);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v25(v12, 1, v13) == 1)
  {
    v26 = v33;
    sub_237E2209C((uint64_t)v12, &qword_25689DA20);
    sub_237E22004(v32, (uint64_t)v9, &qword_25689DA20);
    v27 = v25(v9, 1, v13);
    v28 = v34;
    if (v27 == 1)
    {
      sub_237E2209C((uint64_t)v9, &qword_25689DA20);
    }
    else
    {
      sub_237E47CE0((uint64_t)v9, (uint64_t)v16, type metadata accessor for CurrentLocationResult);
      sub_237E21EBC((uint64_t)v16, (uint64_t)v19, type metadata accessor for CurrentLocationResult);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25689B6C8);
      sub_237EE2C7C();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v26);
      sub_237E94274((uint64_t)v16);
      sub_237E21F00((uint64_t)v16, type metadata accessor for CurrentLocationResult);
    }
  }
  else
  {
    sub_237E47CE0((uint64_t)v12, (uint64_t)v22, type metadata accessor for CurrentLocationResult);
    sub_237E21EBC((uint64_t)v22, (uint64_t)v19, type metadata accessor for CurrentLocationResult);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25689B6C8);
    v29 = v34;
    sub_237EE2C7C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v33);
    sub_237E21F00((uint64_t)v22, type metadata accessor for CurrentLocationResult);
    v28 = v29;
  }
  return sub_237E960FC(v28);
}

uint64_t sub_237E921A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v34 = a3;
  v36 = a1;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B880);
  v4 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689AB30);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v33 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899D48);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v33 - v18;
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v33 - v21;
  v23 = *(_QWORD *)(*(_QWORD *)a2 + 96);
  v37 = a2;
  v24 = a2 + v23;
  swift_beginAccess();
  sub_237E22004(v24, (uint64_t)v12, &qword_25689AB30);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v25(v12, 1, v13) == 1)
  {
    v26 = v35;
    sub_237E2209C((uint64_t)v12, &qword_25689AB30);
    sub_237E22004(v34, (uint64_t)v9, &qword_25689AB30);
    v27 = v25(v9, 1, v13);
    v28 = v36;
    if (v27 == 1)
    {
      v29 = &qword_25689AB30;
      v30 = (uint64_t)v9;
    }
    else
    {
      sub_237E21FC0((uint64_t)v9, (uint64_t)v16, &qword_256899D48);
      sub_237E22004((uint64_t)v16, (uint64_t)v19, &qword_256899D48);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25689B888);
      sub_237EE2C7C();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v26);
      sub_237E94640((uint64_t)v16);
      v30 = (uint64_t)v16;
      v29 = &qword_256899D48;
    }
    sub_237E2209C(v30, v29);
  }
  else
  {
    sub_237E21FC0((uint64_t)v12, (uint64_t)v22, &qword_256899D48);
    sub_237E22004((uint64_t)v22, (uint64_t)v19, &qword_256899D48);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25689B888);
    v31 = v36;
    sub_237EE2C7C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v35);
    sub_237E2209C((uint64_t)v22, &qword_256899D48);
    v28 = v31;
  }
  return sub_237E96324(v28);
}

uint64_t sub_237E9248C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v29 = a3;
  v32 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B790);
  v30 = *(_QWORD *)(v4 - 8);
  v31 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v29 - v11;
  v13 = sub_237EE1D70();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v29 - v18;
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v29 - v21;
  v23 = *(_QWORD *)(*(_QWORD *)a2 + 96);
  v33 = a2;
  v24 = a2 + v23;
  swift_beginAccess();
  sub_237E22004(v24, (uint64_t)v12, &qword_25689C140);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v25(v12, 1, v13) == 1)
  {
    sub_237E2209C((uint64_t)v12, &qword_25689C140);
    sub_237E22004(v29, (uint64_t)v9, &qword_25689C140);
    v26 = v25(v9, 1, v13);
    v27 = v32;
    if (v26 == 1)
    {
      sub_237E2209C((uint64_t)v9, &qword_25689C140);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v9, v13);
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v19, v16, v13);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25689B798);
      sub_237EE2C7C();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v31);
      sub_237E94C38((uint64_t)v16);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v22, v12, v13);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v19, v22, v13);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25689B798);
    v27 = v32;
    sub_237EE2C7C();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v31);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v22, v13);
  }
  return sub_237E9654C(v27);
}

uint64_t sub_237E9276C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v34 = a3;
  v36 = a1;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B840);
  v4 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B2B0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v33 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B250);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v33 - v18;
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v33 - v21;
  v23 = *(_QWORD *)(*(_QWORD *)a2 + 96);
  v37 = a2;
  v24 = a2 + v23;
  swift_beginAccess();
  sub_237E22004(v24, (uint64_t)v12, &qword_25689B2B0);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v25(v12, 1, v13) == 1)
  {
    v26 = v35;
    sub_237E2209C((uint64_t)v12, &qword_25689B2B0);
    sub_237E22004(v34, (uint64_t)v9, &qword_25689B2B0);
    v27 = v25(v9, 1, v13);
    v28 = v36;
    if (v27 == 1)
    {
      v29 = &qword_25689B2B0;
      v30 = (uint64_t)v9;
    }
    else
    {
      sub_237E21FC0((uint64_t)v9, (uint64_t)v16, &qword_25689B250);
      sub_237E22004((uint64_t)v16, (uint64_t)v19, &qword_25689B250);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25689B848);
      sub_237EE2C7C();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v26);
      sub_237E95010((uint64_t)v16);
      v30 = (uint64_t)v16;
      v29 = &qword_25689B250;
    }
    sub_237E2209C(v30, v29);
  }
  else
  {
    sub_237E21FC0((uint64_t)v12, (uint64_t)v22, &qword_25689B250);
    sub_237E22004((uint64_t)v22, (uint64_t)v19, &qword_25689B250);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25689B848);
    v31 = v36;
    sub_237EE2C7C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v35);
    sub_237E2209C((uint64_t)v22, &qword_25689B250);
    v28 = v31;
  }
  return sub_237E96774(v28);
}

uint64_t sub_237E92A50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  _QWORD *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = type metadata accessor for TimeString(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v31 = (uint64_t *)((char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B768);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25689C1A0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v33 = (uint64_t)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v32 = (uint64_t)&v30 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (uint64_t *)((char *)&v30 - v15);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 96);
  swift_beginAccess();
  v34 = a1;
  sub_237E21EBC(a1, (uint64_t)v18, type metadata accessor for TimeString);
  v20 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56);
  v20(v18, 0, 1, v3);
  v21 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_237E22004(v19, (uint64_t)v8, (uint64_t *)&unk_25689C1A0);
  sub_237E22004((uint64_t)v18, v21, (uint64_t *)&unk_25689C1A0);
  v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v22((uint64_t)v8, 1, v3) == 1)
  {
    sub_237E2209C((uint64_t)v18, (uint64_t *)&unk_25689C1A0);
    if (v22(v21, 1, v3) == 1)
      return sub_237E2209C((uint64_t)v8, (uint64_t *)&unk_25689C1A0);
  }
  else
  {
    sub_237E22004((uint64_t)v8, (uint64_t)v16, (uint64_t *)&unk_25689C1A0);
    if (v22(v21, 1, v3) != 1)
    {
      v24 = v31;
      sub_237E47CE0(v21, (uint64_t)v31, type metadata accessor for TimeString);
      v25 = _s11ClockPoster10TimeStringV2eeoiySbAC_ACtFZ_0(v16, v24);
      sub_237E21F00((uint64_t)v24, type metadata accessor for TimeString);
      sub_237E2209C((uint64_t)v18, (uint64_t *)&unk_25689C1A0);
      sub_237E21F00((uint64_t)v16, type metadata accessor for TimeString);
      result = sub_237E2209C((uint64_t)v8, (uint64_t *)&unk_25689C1A0);
      if ((v25 & 1) != 0)
        return result;
      goto LABEL_8;
    }
    sub_237E2209C((uint64_t)v18, (uint64_t *)&unk_25689C1A0);
    sub_237E21F00((uint64_t)v16, type metadata accessor for TimeString);
  }
  sub_237E2209C((uint64_t)v8, &qword_25689B768);
LABEL_8:
  v26 = v32;
  sub_237E21EBC(v34, v32, type metadata accessor for TimeString);
  v20((char *)v26, 0, 1, v3);
  v27 = v26;
  v28 = v33;
  sub_237E21FC0(v27, v33, (uint64_t *)&unk_25689C1A0);
  swift_beginAccess();
  sub_237E9F9C4(v28, v19, (uint64_t *)&unk_25689C1A0);
  swift_endAccess();
  swift_beginAccess();
  swift_retain();
  v29 = swift_bridgeObjectRetain();
  sub_237E9EDAC(v29, v1, &qword_25689B770, (uint64_t *)&unk_25689C1A0, type metadata accessor for TimeString, &qword_25689B778);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_237E92E1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  _QWORD *v40;
  uint64_t *v41;
  _QWORD *v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v3 = type metadata accessor for City();
  v53 = *(_QWORD *)(v3 - 8);
  v54 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v51 = (char **)((char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B738);
  MEMORY[0x24BDAC7A8](v58);
  v57 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B740);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v52 = (char **)((char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8);
  v56 = (char *)&v50 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B748);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B750);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v62 = (uint64_t)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v61 = (uint64_t)&v50 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v50 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v50 - v22;
  v24 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  v60 = v1;
  v25 = v1 + v24;
  swift_beginAccess();
  v63 = a1;
  sub_237E22004(a1, (uint64_t)v23, &qword_25689B740);
  v26 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56);
  v26(v23, 0, 1, v6);
  v27 = (uint64_t)&v13[*(int *)(v11 + 48)];
  v59 = v25;
  sub_237E22004(v25, (uint64_t)v13, &qword_25689B750);
  sub_237E22004((uint64_t)v23, v27, &qword_25689B750);
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v28((uint64_t)v13, 1, v6) == 1)
  {
    sub_237E2209C((uint64_t)v23, &qword_25689B750);
    if (v28(v27, 1, v6) == 1)
      return sub_237E2209C((uint64_t)v13, &qword_25689B750);
    v55 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v26;
    v33 = &qword_25689B748;
    goto LABEL_23;
  }
  v31 = (uint64_t)v57;
  v30 = v58;
  v32 = (uint64_t)v56;
  v55 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v26;
  sub_237E22004((uint64_t)v13, (uint64_t)v21, &qword_25689B750);
  if (v28(v27, 1, v6) == 1)
  {
    v33 = &qword_25689B748;
LABEL_22:
    sub_237E2209C((uint64_t)v23, &qword_25689B750);
    sub_237E2209C((uint64_t)v21, &qword_25689B740);
LABEL_23:
    sub_237E2209C((uint64_t)v13, v33);
    goto LABEL_24;
  }
  v50 = v13;
  v34 = v32;
  sub_237E21FC0(v27, v32, &qword_25689B740);
  v35 = v31;
  v36 = v31 + *(int *)(v30 + 48);
  sub_237E22004((uint64_t)v21, v31, &qword_25689B740);
  sub_237E22004(v32, v36, &qword_25689B740);
  v37 = v54;
  v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48);
  if (v38(v31, 1, v54) == 1)
  {
    if (v38(v36, 1, v37) == 1)
    {
      sub_237E2209C(v31, &qword_25689B740);
      sub_237E2209C(v34, &qword_25689B740);
      sub_237E2209C((uint64_t)v23, &qword_25689B750);
      sub_237E2209C((uint64_t)v21, &qword_25689B740);
      return sub_237E2209C((uint64_t)v50, &qword_25689B750);
    }
    v41 = &qword_25689B738;
    goto LABEL_21;
  }
  v39 = v31;
  v40 = v52;
  sub_237E22004(v39, (uint64_t)v52, &qword_25689B740);
  if (v38(v36, 1, v37) == 1)
  {
    v41 = &qword_25689B738;
LABEL_20:
    sub_237E21F00((uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for City);
LABEL_21:
    sub_237E2209C(v35, v41);
    sub_237E2209C(v34, &qword_25689B740);
    v33 = &qword_25689B750;
    v13 = v50;
    goto LABEL_22;
  }
  v42 = v51;
  sub_237E47CE0(v36, (uint64_t)v51, (uint64_t (*)(_QWORD))type metadata accessor for City);
  if ((*v40 != *v42 || v40[1] != v42[1]) && (sub_237EE31BC() & 1) == 0
    || (sub_237E74A2C(0, (unint64_t *)&qword_25689D9D0), (sub_237EE2EB0() & 1) == 0))
  {
    sub_237E21F00((uint64_t)v42, (uint64_t (*)(_QWORD))type metadata accessor for City);
    v41 = &qword_25689B740;
    goto LABEL_20;
  }
  v43 = MEMORY[0x23B825514]((char *)v40 + *(int *)(v37 + 24), (char *)v42 + *(int *)(v37 + 24));
  sub_237E21F00((uint64_t)v42, (uint64_t (*)(_QWORD))type metadata accessor for City);
  sub_237E21F00((uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for City);
  sub_237E2209C(v35, &qword_25689B740);
  sub_237E2209C(v34, &qword_25689B740);
  sub_237E2209C((uint64_t)v23, &qword_25689B750);
  sub_237E2209C((uint64_t)v21, &qword_25689B740);
  result = sub_237E2209C((uint64_t)v50, &qword_25689B750);
  if ((v43 & 1) == 0)
  {
LABEL_24:
    v44 = v61;
    sub_237E22004(v63, v61, &qword_25689B740);
    v55(v44, 0, 1, v6);
    v45 = v44;
    v46 = v62;
    sub_237E21FC0(v45, v62, &qword_25689B750);
    v47 = v59;
    swift_beginAccess();
    sub_237E9F9C4(v46, v47, &qword_25689B750);
    swift_endAccess();
    v48 = v60;
    swift_beginAccess();
    swift_retain();
    v49 = swift_bridgeObjectRetain();
    sub_237E9E910(v49, v48, &qword_25689B758, &qword_25689B750, &qword_25689B740, &qword_25689B760);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_237E934B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v3 = sub_237EE1D70();
  v4 = *(_QWORD *)(v3 - 8);
  v55 = v3;
  v56 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v51 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_25689B698);
  MEMORY[0x24BDAC7A8](v53);
  v54 = (uint64_t)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v52 = (uint64_t)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v57 = (uint64_t)&v50 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B6A0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898AF0);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v60 = (uint64_t)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v59 = (uint64_t)&v50 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v50 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v50 - v23;
  v25 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  v58 = v1;
  v26 = v1 + v25;
  swift_beginAccess();
  v61 = a1;
  v27 = a1;
  v28 = v26;
  sub_237E22004(v27, (uint64_t)v24, &qword_25689C140);
  v29 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56);
  v29(v24, 0, 1, v7);
  v30 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_237E22004(v26, (uint64_t)v14, &qword_256898AF0);
  sub_237E22004((uint64_t)v24, v30, &qword_256898AF0);
  v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v31((uint64_t)v14, 1, v7) == 1)
  {
    sub_237E2209C((uint64_t)v24, &qword_256898AF0);
    if (v31(v30, 1, v7) == 1)
    {
      v32 = (uint64_t)v14;
      return sub_237E2209C(v32, &qword_256898AF0);
    }
    v33 = &qword_25689B6A0;
    goto LABEL_15;
  }
  sub_237E22004((uint64_t)v14, (uint64_t)v22, &qword_256898AF0);
  if (v31(v30, 1, v7) == 1)
  {
    v33 = &qword_25689B6A0;
LABEL_14:
    sub_237E2209C((uint64_t)v24, &qword_256898AF0);
    sub_237E2209C((uint64_t)v22, &qword_25689C140);
LABEL_15:
    sub_237E2209C((uint64_t)v14, v33);
LABEL_16:
    v41 = v59;
    sub_237E22004(v61, v59, &qword_25689C140);
    v29((char *)v41, 0, 1, v7);
    v42 = v41;
    v43 = v60;
    sub_237E21FC0(v42, v60, &qword_256898AF0);
    swift_beginAccess();
    sub_237E9F9C4(v43, v28, &qword_256898AF0);
    swift_endAccess();
    v44 = v58;
    swift_beginAccess();
    swift_retain();
    v45 = swift_bridgeObjectRetain();
    sub_237E9E910(v45, v44, &qword_25689B688, &qword_256898AF0, &qword_25689C140, &qword_25689B690);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  v50 = v28;
  v34 = v57;
  sub_237E21FC0(v30, v57, &qword_25689C140);
  v35 = v54;
  v36 = v54 + *((int *)v53 + 12);
  v53 = v22;
  sub_237E22004((uint64_t)v22, v54, &qword_25689C140);
  sub_237E22004(v34, v36, &qword_25689C140);
  v37 = v55;
  v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
  if (v38(v35, 1, v55) == 1)
  {
    if (v38(v36, 1, v37) == 1)
    {
      sub_237E2209C(v35, &qword_25689C140);
      sub_237E2209C(v57, &qword_25689C140);
      sub_237E2209C((uint64_t)v24, &qword_256898AF0);
      sub_237E2209C((uint64_t)v53, &qword_25689C140);
      v32 = (uint64_t)v14;
      return sub_237E2209C(v32, &qword_256898AF0);
    }
    goto LABEL_13;
  }
  v40 = v52;
  sub_237E22004(v35, v52, &qword_25689C140);
  if (v38(v36, 1, v37) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v40, v37);
LABEL_13:
    sub_237E2209C(v35, &qword_25689B698);
    sub_237E2209C(v57, &qword_25689C140);
    v33 = &qword_256898AF0;
    v22 = v53;
    v28 = v50;
    goto LABEL_14;
  }
  v46 = v56;
  v47 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 32))(v51, v36, v37);
  sub_237E20E98(&qword_256898838, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
  v48 = sub_237EE2A48();
  v49 = *(void (**)(char *, uint64_t))(v46 + 8);
  v49(v47, v37);
  v49((char *)v40, v37);
  sub_237E2209C(v35, &qword_25689C140);
  sub_237E2209C(v57, &qword_25689C140);
  sub_237E2209C((uint64_t)v24, &qword_256898AF0);
  sub_237E2209C((uint64_t)v53, &qword_25689C140);
  result = sub_237E2209C((uint64_t)v14, &qword_256898AF0);
  v28 = v50;
  if ((v48 & 1) == 0)
    goto LABEL_16;
  return result;
}

uint64_t sub_237E93AE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v3 = type metadata accessor for Alarm();
  v55 = *(_QWORD *)(v3 - 8);
  v56 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v52 = (uint64_t)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B708);
  MEMORY[0x24BDAC7A8](v54);
  v57 = (uint64_t)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898BC0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v53 = (uint64_t)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v58 = (uint64_t)&v50 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B710);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898BC8);
  MEMORY[0x24BDAC7A8](v14);
  v62 = (uint64_t)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v61 = (uint64_t)&v50 - v17;
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v50 - v19;
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v50 - v22;
  v24 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  v59 = v1;
  v25 = v1 + v24;
  swift_beginAccess();
  v63 = a1;
  sub_237E22004(a1, (uint64_t)v23, &qword_256898BC0);
  v26 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56);
  v26(v23, 0, 1, v6);
  v27 = (uint64_t)&v13[*(int *)(v11 + 48)];
  v60 = v25;
  sub_237E22004(v25, (uint64_t)v13, &qword_256898BC8);
  sub_237E22004((uint64_t)v23, v27, &qword_256898BC8);
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v28((uint64_t)v13, 1, v6) == 1)
  {
    sub_237E2209C((uint64_t)v23, &qword_256898BC8);
    if (v28(v27, 1, v6) == 1)
      return sub_237E2209C((uint64_t)v13, &qword_256898BC8);
    v30 = &qword_25689B710;
    goto LABEL_21;
  }
  sub_237E22004((uint64_t)v13, (uint64_t)v20, &qword_256898BC8);
  if (v28(v27, 1, v6) == 1)
  {
    v30 = &qword_25689B710;
LABEL_20:
    sub_237E2209C((uint64_t)v23, &qword_256898BC8);
    sub_237E2209C((uint64_t)v20, &qword_256898BC0);
LABEL_21:
    sub_237E2209C((uint64_t)v13, v30);
LABEL_22:
    v45 = v61;
    sub_237E22004(v63, v61, &qword_256898BC0);
    v26((char *)v45, 0, 1, v6);
    v46 = v62;
    sub_237E21FC0(v45, v62, &qword_256898BC8);
    v47 = v60;
    swift_beginAccess();
    sub_237E9F9C4(v46, v47, &qword_256898BC8);
    swift_endAccess();
    v48 = v59;
    swift_beginAccess();
    swift_retain();
    v49 = swift_bridgeObjectRetain();
    sub_237E9E910(v49, v48, &qword_25689B718, &qword_256898BC8, &qword_256898BC0, &qword_25689B720);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  v51 = v26;
  v31 = v58;
  sub_237E21FC0(v27, v58, &qword_256898BC0);
  v32 = v57;
  v33 = v57 + *(int *)(v54 + 48);
  v34 = (uint64_t)v20;
  sub_237E22004((uint64_t)v20, v57, &qword_256898BC0);
  sub_237E22004(v31, v33, &qword_256898BC0);
  v35 = v56;
  v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
  if (v36(v32, 1, v56) == 1)
  {
    if (v36(v33, 1, v35) == 1)
    {
      sub_237E2209C(v32, &qword_256898BC0);
      sub_237E2209C(v58, &qword_256898BC0);
      sub_237E2209C((uint64_t)v23, &qword_256898BC8);
      sub_237E2209C((uint64_t)v20, &qword_256898BC0);
      return sub_237E2209C((uint64_t)v13, &qword_256898BC8);
    }
    v38 = &qword_25689B708;
    v26 = v51;
    goto LABEL_19;
  }
  v37 = v53;
  sub_237E22004(v32, v53, &qword_256898BC0);
  if (v36(v33, 1, v35) == 1)
  {
    v38 = &qword_25689B708;
LABEL_18:
    v26 = v51;
    sub_237E21F00(v53, (uint64_t (*)(_QWORD))type metadata accessor for Alarm);
LABEL_19:
    v20 = (char *)v34;
    sub_237E2209C(v32, v38);
    sub_237E2209C(v58, &qword_256898BC0);
    v30 = &qword_256898BC8;
    goto LABEL_20;
  }
  v39 = v52;
  sub_237E47CE0(v33, v52, (uint64_t (*)(_QWORD))type metadata accessor for Alarm);
  if ((sub_237EE1D28() & 1) == 0)
  {
    sub_237E21F00(v39, (uint64_t (*)(_QWORD))type metadata accessor for Alarm);
    v38 = &qword_256898BC0;
    goto LABEL_18;
  }
  v40 = *(int *)(v35 + 20);
  v41 = *(unsigned __int8 *)(v37 + v40);
  v42 = v37;
  v43 = *(unsigned __int8 *)(v39 + v40);
  sub_237E21F00(v39, (uint64_t (*)(_QWORD))type metadata accessor for Alarm);
  sub_237E21F00(v42, (uint64_t (*)(_QWORD))type metadata accessor for Alarm);
  sub_237E2209C(v32, &qword_256898BC0);
  sub_237E2209C(v58, &qword_256898BC0);
  sub_237E2209C((uint64_t)v23, &qword_256898BC8);
  sub_237E2209C(v34, &qword_256898BC0);
  result = sub_237E2209C((uint64_t)v13, &qword_256898BC8);
  v44 = v41 == v43;
  v26 = v51;
  if (!v44)
    goto LABEL_22;
  return result;
}

void sub_237E94134(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  int32x2_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  swift_beginAccess();
  v10 = *(_QWORD *)(v4 + 24);
  v11 = *(_QWORD *)(v4 + 32);
  v12 = *(_BYTE *)(v4 + 40);
  if (!v10)
  {
    sub_237E48530(*(_QWORD *)(v4 + 16), 0);
    if (!a2)
      return;
    goto LABEL_13;
  }
  if (v10 == 1 || a2 == 0)
    goto LABEL_13;
  if (((a1 ^ ((*(_QWORD *)(v4 + 16) & 1) == 0)) & 1) == 0)
    goto LABEL_13;
  sub_237EDA788(v10, a2, v9);
  if ((v14 & 1) == 0)
    goto LABEL_13;
  if ((v12 & 1) != 0)
  {
    if ((a4 & 1) != 0)
      return;
    goto LABEL_13;
  }
  if ((a4 & 1) != 0 || v11 != a3)
  {
LABEL_13:
    v15 = *(_QWORD *)(v4 + 16);
    v16 = *(_QWORD *)(v4 + 24);
    *(_QWORD *)(v4 + 16) = a1;
    *(_QWORD *)(v4 + 24) = a2;
    *(_QWORD *)(v4 + 32) = a3;
    *(_BYTE *)(v4 + 40) = a4;
    swift_bridgeObjectRetain();
    sub_237E48530(v15, v16);
    swift_beginAccess();
    swift_retain();
    v17 = swift_bridgeObjectRetain();
    sub_237E533B0(v17, v4);
    swift_bridgeObjectRelease();
    swift_release();
  }
}

uint64_t sub_237E94274(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = type metadata accessor for CurrentLocationResult(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v31 = (uint64_t)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B6B8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689DA20);
  MEMORY[0x24BDAC7A8](v9);
  v33 = (uint64_t)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v32 = (uint64_t)&v30 - v12;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v30 - v14;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v30 - v17;
  v19 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 96);
  swift_beginAccess();
  v34 = a1;
  sub_237E21EBC(a1, (uint64_t)v18, type metadata accessor for CurrentLocationResult);
  v20 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56);
  v20(v18, 0, 1, v3);
  v21 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_237E22004(v19, (uint64_t)v8, &qword_25689DA20);
  sub_237E22004((uint64_t)v18, v21, &qword_25689DA20);
  v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v22((uint64_t)v8, 1, v3) == 1)
  {
    sub_237E2209C((uint64_t)v18, &qword_25689DA20);
    if (v22(v21, 1, v3) == 1)
      return sub_237E2209C((uint64_t)v8, &qword_25689DA20);
  }
  else
  {
    sub_237E22004((uint64_t)v8, (uint64_t)v15, &qword_25689DA20);
    if (v22(v21, 1, v3) != 1)
    {
      v24 = v31;
      sub_237E47CE0(v21, v31, type metadata accessor for CurrentLocationResult);
      v25 = sub_237ED79A8((uint64_t)v15, v24);
      sub_237E21F00(v24, type metadata accessor for CurrentLocationResult);
      sub_237E2209C((uint64_t)v18, &qword_25689DA20);
      sub_237E21F00((uint64_t)v15, type metadata accessor for CurrentLocationResult);
      result = sub_237E2209C((uint64_t)v8, &qword_25689DA20);
      if (v25)
        return result;
      goto LABEL_8;
    }
    sub_237E2209C((uint64_t)v18, &qword_25689DA20);
    sub_237E21F00((uint64_t)v15, type metadata accessor for CurrentLocationResult);
  }
  sub_237E2209C((uint64_t)v8, &qword_25689B6B8);
LABEL_8:
  v26 = v32;
  sub_237E21EBC(v34, v32, type metadata accessor for CurrentLocationResult);
  v20((char *)v26, 0, 1, v3);
  v27 = v26;
  v28 = v33;
  sub_237E21FC0(v27, v33, &qword_25689DA20);
  swift_beginAccess();
  sub_237E9F9C4(v28, v19, &qword_25689DA20);
  swift_endAccess();
  swift_beginAccess();
  swift_retain();
  v29 = swift_bridgeObjectRetain();
  sub_237E9EDAC(v29, v1, &qword_25689B6C0, &qword_25689DA20, type metadata accessor for CurrentLocationResult, &qword_25689B6C8);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_237E94640(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v3 = type metadata accessor for CurrentLocationSolarPosition(0);
  v48 = *(_QWORD *)(v3 - 8);
  v49 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v45 = (uint64_t)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_25689B870);
  MEMORY[0x24BDAC7A8](v47);
  v50 = (uint64_t)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899D48);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v46 = (uint64_t)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v51 = (uint64_t)&v45 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B878);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689AB30);
  MEMORY[0x24BDAC7A8](v14);
  v54 = (uint64_t)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v53 = (uint64_t)&v45 - v17;
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v45 - v19;
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v45 - v22;
  v24 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  v52 = v1;
  v25 = v1 + v24;
  swift_beginAccess();
  v55 = a1;
  sub_237E22004(a1, (uint64_t)v23, &qword_256899D48);
  v26 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56);
  v26(v23, 0, 1, v6);
  v27 = (uint64_t)&v13[*(int *)(v11 + 48)];
  sub_237E22004(v25, (uint64_t)v13, &qword_25689AB30);
  sub_237E22004((uint64_t)v23, v27, &qword_25689AB30);
  v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v28((uint64_t)v13, 1, v6) == 1)
  {
    sub_237E2209C((uint64_t)v23, &qword_25689AB30);
    if (v28(v27, 1, v6) == 1)
    {
      v29 = (uint64_t)v13;
      return sub_237E2209C(v29, &qword_25689AB30);
    }
    v30 = &qword_25689B878;
    goto LABEL_15;
  }
  sub_237E22004((uint64_t)v13, (uint64_t)v20, &qword_25689AB30);
  if (v28(v27, 1, v6) == 1)
  {
    v30 = &qword_25689B878;
LABEL_14:
    sub_237E2209C((uint64_t)v23, &qword_25689AB30);
    sub_237E2209C((uint64_t)v20, &qword_256899D48);
LABEL_15:
    sub_237E2209C((uint64_t)v13, v30);
LABEL_16:
    v39 = v53;
    sub_237E22004(v55, v53, &qword_256899D48);
    v26((char *)v39, 0, 1, v6);
    v40 = v54;
    sub_237E21FC0(v39, v54, &qword_25689AB30);
    swift_beginAccess();
    sub_237E9F9C4(v40, v25, &qword_25689AB30);
    swift_endAccess();
    v41 = v52;
    swift_beginAccess();
    swift_retain();
    v42 = swift_bridgeObjectRetain();
    sub_237E9E910(v42, v41, &qword_25689B880, &qword_25689AB30, &qword_256899D48, &qword_25689B888);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  v31 = v27;
  v32 = v51;
  sub_237E21FC0(v31, v51, &qword_256899D48);
  v33 = v50;
  v34 = v50 + *((int *)v47 + 12);
  v47 = v20;
  sub_237E22004((uint64_t)v20, v50, &qword_256899D48);
  sub_237E22004(v32, v34, &qword_256899D48);
  v35 = v49;
  v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48);
  if (v36(v33, 1, v49) == 1)
  {
    if (v36(v34, 1, v35) == 1)
    {
      sub_237E2209C(v33, &qword_256899D48);
      sub_237E2209C(v51, &qword_256899D48);
      sub_237E2209C((uint64_t)v23, &qword_25689AB30);
      sub_237E2209C((uint64_t)v47, &qword_256899D48);
      v29 = (uint64_t)v13;
      return sub_237E2209C(v29, &qword_25689AB30);
    }
    goto LABEL_13;
  }
  v38 = v46;
  sub_237E22004(v33, v46, &qword_256899D48);
  if (v36(v34, 1, v35) == 1)
  {
    sub_237E21F00(v38, type metadata accessor for CurrentLocationSolarPosition);
LABEL_13:
    sub_237E2209C(v33, &qword_25689B870);
    sub_237E2209C(v51, &qword_256899D48);
    v30 = &qword_25689AB30;
    v20 = v47;
    goto LABEL_14;
  }
  v43 = v45;
  sub_237E47CE0(v34, v45, type metadata accessor for CurrentLocationSolarPosition);
  v44 = sub_237E52F48(v38, v43);
  sub_237E21F00(v43, type metadata accessor for CurrentLocationSolarPosition);
  sub_237E21F00(v38, type metadata accessor for CurrentLocationSolarPosition);
  sub_237E2209C(v33, &qword_256899D48);
  sub_237E2209C(v51, &qword_256899D48);
  sub_237E2209C((uint64_t)v23, &qword_25689AB30);
  sub_237E2209C((uint64_t)v47, &qword_256899D48);
  result = sub_237E2209C((uint64_t)v13, &qword_25689AB30);
  if (!v44)
    goto LABEL_16;
  return result;
}

uint64_t sub_237E94C38(uint64_t a1)
{
  int64_t v1;
  int64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  void (*v22)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  char *v26;
  char v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, uint64_t, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;

  v2 = v1;
  v4 = sub_237EE1D70();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v33 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B698);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  MEMORY[0x24BDAC7A8](v10);
  v36 = (uint64_t)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v35 = (char *)&v33 - v13;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v33 - v15;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v33 - v18;
  v20 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 96);
  swift_beginAccess();
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v37 = a1;
  v34 = v21;
  v21(v19, a1, v4);
  v22 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56);
  v22(v19, 0, 1, v4);
  v23 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_237E22004(v20, (uint64_t)v9, &qword_25689C140);
  sub_237E22004((uint64_t)v19, v23, &qword_25689C140);
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v24((uint64_t)v9, 1, v4) == 1)
  {
    sub_237E2209C((uint64_t)v19, &qword_25689C140);
    if (v24(v23, 1, v4) == 1)
      return sub_237E2209C((uint64_t)v9, &qword_25689C140);
  }
  else
  {
    sub_237E22004((uint64_t)v9, (uint64_t)v16, &qword_25689C140);
    if (v24(v23, 1, v4) != 1)
    {
      v26 = v33;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v33, v23, v4);
      sub_237E20E98(&qword_256898838, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
      v27 = sub_237EE2A48();
      v28 = *(void (**)(char *, uint64_t))(v5 + 8);
      v28(v26, v4);
      sub_237E2209C((uint64_t)v19, &qword_25689C140);
      v28(v16, v4);
      result = sub_237E2209C((uint64_t)v9, &qword_25689C140);
      if ((v27 & 1) != 0)
        return result;
      goto LABEL_8;
    }
    sub_237E2209C((uint64_t)v19, &qword_25689C140);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v16, v4);
  }
  sub_237E2209C((uint64_t)v9, &qword_25689B698);
LABEL_8:
  v29 = v35;
  v34(v35, v37, v4);
  v22(v29, 0, 1, v4);
  v30 = (uint64_t)v29;
  v31 = v36;
  sub_237E21FC0(v30, v36, &qword_25689C140);
  swift_beginAccess();
  sub_237E9F9C4(v31, v20, &qword_25689C140);
  swift_endAccess();
  swift_beginAccess();
  swift_retain();
  v32 = swift_bridgeObjectRetain();
  sub_237E9F2D4(v32, v2);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_237E95010(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_25689AD70);
  v4 = *(_QWORD *)(v3 - 8);
  v55 = v3;
  v56 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v51 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_25689B828);
  MEMORY[0x24BDAC7A8](v53);
  v54 = (uint64_t)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B250);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v52 = (uint64_t)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v57 = (uint64_t)&v50 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B830);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B2B0);
  MEMORY[0x24BDAC7A8](v15);
  v60 = (uint64_t)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v59 = (uint64_t)&v50 - v18;
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v50 - v20;
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v50 - v23;
  v25 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  v58 = v1;
  v26 = v1 + v25;
  swift_beginAccess();
  v61 = a1;
  v27 = a1;
  v28 = v26;
  sub_237E22004(v27, (uint64_t)v24, &qword_25689B250);
  v29 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56);
  v29(v24, 0, 1, v7);
  v30 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_237E22004(v26, (uint64_t)v14, &qword_25689B2B0);
  sub_237E22004((uint64_t)v24, v30, &qword_25689B2B0);
  v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v31((uint64_t)v14, 1, v7) == 1)
  {
    sub_237E2209C((uint64_t)v24, &qword_25689B2B0);
    if (v31(v30, 1, v7) == 1)
    {
      v32 = (uint64_t)v14;
      return sub_237E2209C(v32, &qword_25689B2B0);
    }
    v33 = &qword_25689B830;
    goto LABEL_15;
  }
  sub_237E22004((uint64_t)v14, (uint64_t)v21, &qword_25689B2B0);
  if (v31(v30, 1, v7) == 1)
  {
    v33 = &qword_25689B830;
LABEL_14:
    sub_237E2209C((uint64_t)v24, &qword_25689B2B0);
    sub_237E2209C((uint64_t)v21, &qword_25689B250);
LABEL_15:
    sub_237E2209C((uint64_t)v14, v33);
LABEL_16:
    v41 = v59;
    sub_237E22004(v61, v59, &qword_25689B250);
    v29((char *)v41, 0, 1, v7);
    v42 = v41;
    v43 = v60;
    sub_237E21FC0(v42, v60, &qword_25689B2B0);
    swift_beginAccess();
    sub_237E9F9C4(v43, v28, &qword_25689B2B0);
    swift_endAccess();
    v44 = v58;
    swift_beginAccess();
    swift_retain();
    v45 = swift_bridgeObjectRetain();
    sub_237E9E910(v45, v44, &qword_25689B840, &qword_25689B2B0, &qword_25689B250, &qword_25689B848);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  v50 = v28;
  v34 = v57;
  sub_237E21FC0(v30, v57, &qword_25689B250);
  v35 = v54;
  v36 = v54 + *((int *)v53 + 12);
  v53 = v21;
  sub_237E22004((uint64_t)v21, v54, &qword_25689B250);
  sub_237E22004(v34, v36, &qword_25689B250);
  v37 = v55;
  v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
  if (v38(v35, 1, v55) == 1)
  {
    if (v38(v36, 1, v37) == 1)
    {
      sub_237E2209C(v35, &qword_25689B250);
      sub_237E2209C(v57, &qword_25689B250);
      sub_237E2209C((uint64_t)v24, &qword_25689B2B0);
      sub_237E2209C((uint64_t)v53, &qword_25689B250);
      v32 = (uint64_t)v14;
      return sub_237E2209C(v32, &qword_25689B2B0);
    }
    goto LABEL_13;
  }
  v40 = v52;
  sub_237E22004(v35, v52, &qword_25689B250);
  if (v38(v36, 1, v37) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v40, v37);
LABEL_13:
    sub_237E2209C(v35, &qword_25689B828);
    sub_237E2209C(v57, &qword_25689B250);
    v33 = &qword_25689B2B0;
    v21 = v53;
    v28 = v50;
    goto LABEL_14;
  }
  v46 = v56;
  v47 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 32))(v51, v36, v37);
  sub_237E22690(&qword_25689B838, qword_25689AD70, MEMORY[0x24BDCB5C8]);
  v48 = sub_237EE2A48();
  v49 = *(void (**)(char *, uint64_t))(v46 + 8);
  v49(v47, v37);
  v49((char *)v40, v37);
  sub_237E2209C(v35, &qword_25689B250);
  sub_237E2209C(v57, &qword_25689B250);
  sub_237E2209C((uint64_t)v24, &qword_25689B2B0);
  sub_237E2209C((uint64_t)v53, &qword_25689B250);
  result = sub_237E2209C((uint64_t)v14, &qword_25689B2B0);
  v28 = v50;
  if ((v48 & 1) == 0)
    goto LABEL_16;
  return result;
}

uint64_t sub_237E95644(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v19[3];

  v19[2] = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B7B8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_237EE1D94();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v19 - v10;
  sub_237EE1D88();
  v12 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v12(v9, v11, v5);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B778);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v4, a1, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v4, 0, 1, v13);
  swift_beginAccess();
  sub_237E8EC24((uint64_t)v4, (uint64_t)v9, &qword_25689B7B8, &qword_25689B778, &qword_25689B7C0);
  swift_endAccess();
  v15 = swift_allocObject();
  swift_weakInit();
  v12(v9, v11, v5);
  v16 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v15;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v17 + v16, v9, v5);
  swift_retain();
  sub_237EE2C70();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  return swift_release();
}

uint64_t sub_237E9586C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v19[3];

  v19[2] = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B6A8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_237EE1D94();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v19 - v10;
  sub_237EE1D88();
  v12 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v12(v8, v11, v5);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B690);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v4, a1, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v4, 0, 1, v13);
  swift_beginAccess();
  sub_237E8EC24((uint64_t)v4, (uint64_t)v8, &qword_25689B6A8, &qword_25689B690, &qword_25689B6B0);
  swift_endAccess();
  v15 = swift_allocObject();
  swift_weakInit();
  v12(v8, v11, v5);
  v16 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v15;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v17 + v16, v8, v5);
  swift_retain();
  sub_237EE2C70();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  return swift_release();
}

uint64_t sub_237E95A94(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v19[3];

  v19[2] = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B728);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_237EE1D94();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v19 - v10;
  sub_237EE1D88();
  v12 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v12(v8, v11, v5);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B720);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v4, a1, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v4, 0, 1, v13);
  swift_beginAccess();
  sub_237E8EC24((uint64_t)v4, (uint64_t)v8, &qword_25689B728, &qword_25689B720, &qword_25689B730);
  swift_endAccess();
  v15 = swift_allocObject();
  swift_weakInit();
  v12(v8, v11, v5);
  v16 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v15;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v17 + v16, v8, v5);
  swift_retain();
  sub_237EE2C70();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  return swift_release();
}

uint64_t sub_237E95CBC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v19[3];

  v19[2] = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B8F0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_237EE1D94();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v19 - v10;
  sub_237EE1D88();
  v12 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v12(v8, v11, v5);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256899D68);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v4, a1, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v4, 0, 1, v13);
  swift_beginAccess();
  sub_237E8EC24((uint64_t)v4, (uint64_t)v8, &qword_25689B8F0, &qword_256899D68, &qword_25689B8F8);
  swift_endAccess();
  v15 = swift_allocObject();
  swift_weakInit();
  v12(v8, v11, v5);
  v16 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v15;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v17 + v16, v8, v5);
  swift_retain();
  sub_237EE2C70();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  return swift_release();
}

uint64_t sub_237E95EDC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v19[3];

  v19[2] = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B8C8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_237EE1D94();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v19 - v10;
  sub_237EE1D88();
  v12 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v12(v8, v11, v5);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B8C0);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v4, a1, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v4, 0, 1, v13);
  swift_beginAccess();
  sub_237E8EC24((uint64_t)v4, (uint64_t)v8, &qword_25689B8C8, &qword_25689B8C0, &qword_25689B8D0);
  swift_endAccess();
  v15 = swift_allocObject();
  swift_weakInit();
  v12(v8, v11, v5);
  v16 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v15;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v17 + v16, v8, v5);
  swift_retain();
  sub_237EE2C70();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  return swift_release();
}

uint64_t sub_237E960FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v19[3];

  v19[2] = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B6D0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_237EE1D94();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v19 - v10;
  sub_237EE1D88();
  v12 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v12(v8, v11, v5);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B6C8);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v4, a1, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v4, 0, 1, v13);
  swift_beginAccess();
  sub_237E8EC24((uint64_t)v4, (uint64_t)v8, &qword_25689B6D0, &qword_25689B6C8, &qword_25689B6D8);
  swift_endAccess();
  v15 = swift_allocObject();
  swift_weakInit();
  v12(v8, v11, v5);
  v16 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v15;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v17 + v16, v8, v5);
  swift_retain();
  sub_237EE2C70();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  return swift_release();
}

uint64_t sub_237E96324(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v19[3];

  v19[2] = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B890);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_237EE1D94();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v19 - v10;
  sub_237EE1D88();
  v12 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v12(v8, v11, v5);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B888);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v4, a1, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v4, 0, 1, v13);
  swift_beginAccess();
  sub_237E8EC24((uint64_t)v4, (uint64_t)v8, &qword_25689B890, &qword_25689B888, &qword_25689B898);
  swift_endAccess();
  v15 = swift_allocObject();
  swift_weakInit();
  v12(v8, v11, v5);
  v16 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v15;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v17 + v16, v8, v5);
  swift_retain();
  sub_237EE2C70();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  return swift_release();
}

uint64_t sub_237E9654C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v19[3];

  v19[2] = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B808);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_237EE1D94();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v19 - v10;
  sub_237EE1D88();
  v12 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v12(v8, v11, v5);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B798);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v4, a1, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v4, 0, 1, v13);
  swift_beginAccess();
  sub_237E8EC24((uint64_t)v4, (uint64_t)v8, &qword_25689B808, &qword_25689B798, &qword_25689B810);
  swift_endAccess();
  v15 = swift_allocObject();
  swift_weakInit();
  v12(v8, v11, v5);
  v16 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v15;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v17 + v16, v8, v5);
  swift_retain();
  sub_237EE2C70();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  return swift_release();
}

uint64_t sub_237E96774(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v19[3];

  v19[2] = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B850);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_237EE1D94();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v19 - v10;
  sub_237EE1D88();
  v12 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  v12(v8, v11, v5);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B848);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v4, a1, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v4, 0, 1, v13);
  swift_beginAccess();
  sub_237E8EC24((uint64_t)v4, (uint64_t)v8, &qword_25689B850, &qword_25689B848, &qword_25689B858);
  swift_endAccess();
  v15 = swift_allocObject();
  swift_weakInit();
  v12(v8, v11, v5);
  v16 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v15;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v17 + v16, v8, v5);
  swift_retain();
  sub_237EE2C70();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  return swift_release();
}

uint64_t sub_237E9699C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_237E96A2C(a3, a4, a5, a6, a7);
    return swift_release();
  }
  return result;
}

uint64_t sub_237E96A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD aBlock[6];

  v28 = a4;
  v29 = a5;
  v27 = a3;
  v24 = a2;
  v25 = a1;
  v30 = sub_237EE29A0();
  v33 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_237EE29D0();
  v31 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_237EE1D94();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v13 = sub_237EE29AC();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237E74A2C(0, (unint64_t *)&qword_25689C150);
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x24BEE5470], v13);
  v26 = sub_237EE2E20();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v17 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v25, v10);
  v18 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v17;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v19 + v18, (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  aBlock[4] = v28;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_237E38D84;
  aBlock[3] = v29;
  v20 = _Block_copy(aBlock);
  swift_retain();
  sub_237EE29B8();
  v34 = MEMORY[0x24BEE4AF8];
  sub_237E20E98((unint64_t *)&qword_25689A600, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689A608);
  sub_237E22690((unint64_t *)&qword_25689A610, &qword_25689A608, MEMORY[0x24BEE12C8]);
  v21 = v30;
  sub_237EE2F1C();
  v22 = (void *)v26;
  MEMORY[0x23B826474](0, v9, v6, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v33 + 8))(v6, v21);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v32);
  swift_release();
  return swift_release();
}

uint64_t sub_237E96D44(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t result;
  os_unfair_lock_s *v13;
  _BYTE v14[24];

  v9 = __swift_instantiateConcreteTypeFromMangledName(a3);
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v14[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v13 = (os_unfair_lock_s *)(*(_QWORD *)(result + *(_QWORD *)(*(_QWORD *)result + 104)) + 16);
    swift_beginAccess();
    os_unfair_lock_lock(v13);
    swift_endAccess();
    swift_beginAccess();
    sub_237E97954(a2, a4, a5, (uint64_t)v11);
    sub_237E2209C((uint64_t)v11, a3);
    swift_endAccess();
    swift_beginAccess();
    os_unfair_lock_unlock(v13);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t sub_237E96E98(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t result;
  os_unfair_lock_s *v7;
  _BYTE v8[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B8F0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v7 = (os_unfair_lock_s *)(*(_QWORD *)(result + 48) + 16);
    swift_beginAccess();
    os_unfair_lock_lock(v7);
    swift_endAccess();
    swift_beginAccess();
    sub_237E97954(a2, &qword_256899D68, &qword_25689B8F8, (uint64_t)v5);
    sub_237E2209C((uint64_t)v5, &qword_25689B8F0);
    swift_endAccess();
    swift_beginAccess();
    os_unfair_lock_unlock(v7);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t sub_237E96FD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t result;
  os_unfair_lock_s *v7;
  _BYTE v8[24];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B8C8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v7 = (os_unfair_lock_s *)(*(_QWORD *)(result + 24) + 16);
    swift_beginAccess();
    os_unfair_lock_lock(v7);
    swift_endAccess();
    swift_beginAccess();
    sub_237E97954(a2, &qword_25689B8C0, &qword_25689B8D0, (uint64_t)v5);
    sub_237E2209C((uint64_t)v5, &qword_25689B8C8);
    swift_endAccess();
    swift_beginAccess();
    os_unfair_lock_unlock(v7);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t sub_237E97118()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  v2 = sub_237EE2ED4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_237E97180()
{
  sub_237E97118();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ObservationStream(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ObservationStream);
}

uint64_t sub_237E971B0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_237E97200@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  os_unfair_lock_s *v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;

  v10 = (os_unfair_lock_s *)(*(_QWORD *)(a2 + 16) + 16);
  swift_beginAccess();
  swift_retain();
  os_unfair_lock_lock(v10);
  swift_endAccess();
  v11 = (uint64_t *)(a2 + 24);
  swift_beginAccess();
  v12 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(v12 + 16) && (v13 = sub_237EAD898(a1), (v14 & 1) != 0))
  {
    v15 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13);
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25689B7E8);
    v15 = swift_allocObject();
    v16 = v15 + *(_QWORD *)(*(_QWORD *)v15 + 96);
    v17 = sub_237EE1D70();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
    v18 = *(_QWORD *)(*(_QWORD *)v15 + 104);
    type metadata accessor for CPUnfairLock();
    v19 = swift_allocObject();
    *(_DWORD *)(v19 + 16) = 0;
    *(_QWORD *)(v15 + v18) = v19;
    *(_QWORD *)(v15 + *(_QWORD *)(*(_QWORD *)v15 + 112)) = MEMORY[0x24BEE4B00];
    *(_BYTE *)(v15 + *(_QWORD *)(*(_QWORD *)v15 + 120)) = 0;
    swift_beginAccess();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v11;
    *v11 = 0x8000000000000000;
    sub_237E9BEAC(v15, a1, isUniquelyReferenced_nonNull_native);
    *v11 = v22;
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  swift_retain();
  swift_retain();
  sub_237E90EB4(v15, a2, a3, a4, a5);
  swift_beginAccess();
  os_unfair_lock_unlock(v10);
  swift_endAccess();
  swift_release_n();
  return swift_release();
}

uint64_t sub_237E9741C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897E20);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (os_unfair_lock_s *)(*(_QWORD *)(a1 + 16) + 16);
  swift_beginAccess();
  os_unfair_lock_unlock(v11);
  swift_endAccess();
  v12 = sub_237EE2C64();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 1, 1, v12);
  sub_237EE2C4C();
  swift_retain();
  v13 = sub_237EE2C40();
  v14 = swift_allocObject();
  v15 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v15;
  *(_QWORD *)(v14 + 32) = a2;
  *(_BYTE *)(v14 + 40) = a3;
  sub_237EDA9E4((uint64_t)v10, (uint64_t)&unk_25689B800, v14);
  swift_release();
  sub_237EA1DE0(a4);
  swift_beginAccess();
  os_unfair_lock_lock(v11);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_237E97578()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_237E9759C()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

void type metadata accessor for ObservationStreamCollection()
{
  JUMPOUT(0x23B827140);
}

uint64_t sub_237E975D4(uint64_t a1)
{
  uint64_t v1;

  return sub_237E91574(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_237E975DC(char a1, uint64_t a2, _QWORD *a3)
{
  unint64_t result;

  sub_237EE3264();
  sub_237EE3288();
  sub_237EE3294();
  result = sub_237EE2F34();
  *(_QWORD *)((char *)a3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  *(_BYTE *)(a3[6] + result) = a1;
  *(_QWORD *)(a3[7] + 8 * result) = a2;
  ++a3[2];
  return result;
}

uint64_t sub_237E97694(char a1, uint64_t a2, _QWORD *a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  sub_237EE3264();
  sub_237EE3288();
  sub_237EE3294();
  v6 = sub_237EE2F34();
  *(_QWORD *)((char *)a3 + ((v6 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v6;
  *(_BYTE *)(a3[6] + v6) = a1;
  v7 = a3[7];
  v8 = sub_237EE1D70();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * v6, a2, v8);
  ++a3[2];
  return result;
}

double sub_237E97778@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  double result;
  uint64_t v11;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_237EAD5EC(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v11 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_237E9D068();
      v9 = v11;
    }
    sub_237E2846C(*(_QWORD *)(v9 + 48) + 104 * v6);
    sub_237E2D1BC((__int128 *)(*(_QWORD *)(v9 + 56) + 40 * v6), a2);
    sub_237E9A66C(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_237E97868@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  uint64_t result;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_237EAD554(a1, a2);
  LOBYTE(a2) = v9;
  result = swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_237E9D950();
      v12 = v13;
    }
    swift_bridgeObjectRelease();
    sub_237E21FC0(*(_QWORD *)(v12 + 56) + 32 * v8, (uint64_t)a3, &qword_256899E40);
    sub_237E9AF4C(v8, v12);
    *v4 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    a3[3] = 1;
  }
  return result;
}

uint64_t sub_237E97954@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t *v7;
  unint64_t v10;
  char v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v7 = v4;
  swift_bridgeObjectRetain();
  v10 = sub_237EAD3B4(a1);
  LOBYTE(a1) = v11;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v7;
    v21 = *v7;
    *v7 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_237E9DB4C(a2, a3);
      v13 = v21;
    }
    v14 = *(_QWORD *)(v13 + 48);
    v15 = sub_237EE1D94();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14 + *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72) * v10, v15);
    v16 = *(_QWORD *)(v13 + 56);
    v17 = __swift_instantiateConcreteTypeFromMangledName(a2);
    v18 = *(_QWORD *)(v17 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v18 + 32))(a4, v16 + *(_QWORD *)(v18 + 72) * v10, v17);
    sub_237E9AAB0(v10, v13, a2);
    *v7 = v13;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(a4, 0, 1, v17);
  }
  else
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(a2);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a4, 1, 1, v20);
  }
}

uint64_t sub_237E97AA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_237EAD3B4(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v17 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_237E9E418();
      v9 = v17;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_237EE1D94();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    v12 = *(_QWORD *)(v9 + 56);
    v13 = type metadata accessor for ScheduledTask();
    v14 = *(_QWORD *)(v13 - 8);
    sub_237E47CE0(v12 + *(_QWORD *)(v14 + 72) * v6, a2, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledTask);
    sub_237E9B308(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a2, 0, 1, v13);
  }
  else
  {
    v16 = type metadata accessor for ScheduledTask();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 1, 1, v16);
  }
}

uint64_t sub_237E97BE0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_237EAD3B4(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_237E9E6E0();
    v7 = v12;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = sub_237EE1D94();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4, v9);
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_237E9B5DC(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_237E97CB8(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  int v41;

  v3 = v2;
  v5 = type metadata accessor for TextClockDescriptor(0);
  v39 = *(_QWORD *)(v5 - 8);
  v40 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689B7C8);
  v41 = a2;
  v9 = sub_237EE30C0();
  v10 = v9;
  if (*(_QWORD *)(v8 + 16))
  {
    v36 = v2;
    v11 = 1 << *(_BYTE *)(v8 + 32);
    v12 = *(_QWORD *)(v8 + 64);
    v38 = (_QWORD *)(v8 + 64);
    if (v11 < 64)
      v13 = ~(-1 << v11);
    else
      v13 = -1;
    v14 = v13 & v12;
    v37 = (unint64_t)(v11 + 63) >> 6;
    v15 = v9 + 64;
    result = swift_retain();
    v17 = 0;
    while (1)
    {
      if (v14)
      {
        v19 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v20 = v19 | (v17 << 6);
      }
      else
      {
        v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v37)
          goto LABEL_34;
        v22 = v38[v21];
        ++v17;
        if (!v22)
        {
          v17 = v21 + 1;
          if (v21 + 1 >= v37)
            goto LABEL_34;
          v22 = v38[v17];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v37)
            {
LABEL_34:
              swift_release();
              v3 = v36;
              if ((v41 & 1) != 0)
              {
                v34 = 1 << *(_BYTE *)(v8 + 32);
                if (v34 >= 64)
                  bzero(v38, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v34;
                *(_QWORD *)(v8 + 16) = 0;
              }
              break;
            }
            v22 = v38[v23];
            if (!v22)
            {
              while (1)
              {
                v17 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v17 >= v37)
                  goto LABEL_34;
                v22 = v38[v17];
                ++v23;
                if (v22)
                  goto LABEL_21;
              }
            }
            v17 = v23;
          }
        }
LABEL_21:
        v14 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      v24 = *(_QWORD *)(v39 + 72);
      v25 = *(_QWORD *)(v8 + 48) + v24 * v20;
      if ((v41 & 1) != 0)
      {
        sub_237E47CE0(v25, (uint64_t)v7, type metadata accessor for TextClockDescriptor);
        v26 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v20);
      }
      else
      {
        sub_237E21EBC(v25, (uint64_t)v7, type metadata accessor for TextClockDescriptor);
        v26 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v20);
        swift_retain();
      }
      sub_237EE3264();
      sub_237EE3288();
      sub_237EE1EC0();
      sub_237E20E98((unint64_t *)&unk_25689C110, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
      sub_237EE2A18();
      result = sub_237EE3294();
      v27 = -1 << *(_BYTE *)(v10 + 32);
      v28 = result & ~v27;
      v29 = v28 >> 6;
      if (((-1 << v28) & ~*(_QWORD *)(v15 + 8 * (v28 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v15 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v30 = 0;
        v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v32 = v29 == v31;
          if (v29 == v31)
            v29 = 0;
          v30 |= v32;
          v33 = *(_QWORD *)(v15 + 8 * v29);
        }
        while (v33 == -1);
        v18 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      result = sub_237E47CE0((uint64_t)v7, *(_QWORD *)(v10 + 48) + v24 * v18, type metadata accessor for TextClockDescriptor);
      *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v18) = v26;
      ++*(_QWORD *)(v10 + 16);
    }
  }
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_237E98078(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD *v18;
  unint64_t v19;
  int64_t v20;
  __int128 *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  __int128 v32[2];
  __int128 v33[7];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689B900);
  v6 = sub_237EE30C0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v31 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v30 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v30)
      break;
    v18 = (_QWORD *)(v5 + 64);
    v19 = *(_QWORD *)(v31 + 8 * v17);
    ++v13;
    if (!v19)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v30)
        goto LABEL_34;
      v19 = *(_QWORD *)(v31 + 8 * v13);
      if (!v19)
      {
        v20 = v17 + 2;
        if (v20 >= v30)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v19 = *(_QWORD *)(v31 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            v13 = v20 + 1;
            if (__OFADD__(v20, 1))
              goto LABEL_43;
            if (v13 >= v30)
              goto LABEL_34;
            v19 = *(_QWORD *)(v31 + 8 * v13);
            ++v20;
            if (v19)
              goto LABEL_21;
          }
        }
        v13 = v20;
      }
    }
LABEL_21:
    v10 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    v21 = (__int128 *)(*(_QWORD *)(v5 + 48) + 104 * v16);
    if ((a2 & 1) != 0)
    {
      sub_237E2D180(v21, (uint64_t)v33);
      sub_237E2D1BC((__int128 *)(*(_QWORD *)(v5 + 56) + 40 * v16), (uint64_t)v32);
    }
    else
    {
      sub_237E28430((uint64_t)v21, (uint64_t)v33);
      sub_237E2CFE8(*(_QWORD *)(v5 + 56) + 40 * v16, (uint64_t)v32);
    }
    sub_237EE3264();
    ClockFaceLook.hash(into:)();
    result = sub_237EE3294();
    v22 = -1 << *(_BYTE *)(v7 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v24);
      }
      while (v28 == -1);
      v14 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    sub_237E2D180(v33, *(_QWORD *)(v7 + 48) + 104 * v14);
    result = sub_237E2D1BC(v32, *(_QWORD *)(v7 + 56) + 40 * v14);
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v18 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v29 = 1 << *(_BYTE *)(v5 + 32);
  if (v29 >= 64)
    bzero(v18, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v18 = -1 << v29;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_237E9839C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(qword_25689B908);
  v6 = sub_237EE30C0();
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_28;
  v7 = 1 << *(_BYTE *)(v5 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v5 + 64);
  v18 = (unint64_t)(v7 + 63) >> 6;
  swift_retain();
  if (v9)
  {
    v10 = __clz(__rbit64(v9));
    goto LABEL_18;
  }
  if (v18 <= 1)
  {
    swift_release();
    v11 = (_QWORD *)(v5 + 64);
    if ((a2 & 1) == 0)
      goto LABEL_28;
    goto LABEL_24;
  }
  v11 = (_QWORD *)(v5 + 64);
  v12 = *(_QWORD *)(v5 + 72);
  v13 = 1;
  if (v12)
    goto LABEL_17;
  v13 = 2;
  if (v18 <= 2)
    goto LABEL_21;
  v12 = *(_QWORD *)(v5 + 80);
  if (v12)
  {
LABEL_17:
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_18:
    v15 = *(unsigned __int8 *)(*(_QWORD *)(v5 + 48) + v10);
    if ((a2 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_237EE3264();
    __asm { BR              X8 }
  }
  v14 = 3;
  if (v18 > 3)
  {
    v12 = *(_QWORD *)(v5 + 88);
    if (v12)
    {
      v13 = 3;
      goto LABEL_17;
    }
    while (1)
    {
      v13 = v14 + 1;
      if (__OFADD__(v14, 1))
      {
        __break(1u);
        JUMPOUT(0x237E98700);
      }
      if (v13 >= v18)
        break;
      v12 = *(_QWORD *)(v5 + 64 + 8 * v13);
      ++v14;
      if (v12)
        goto LABEL_17;
    }
  }
LABEL_21:
  swift_release();
  if ((a2 & 1) == 0)
    goto LABEL_28;
LABEL_24:
  v16 = 1 << *(_BYTE *)(v5 + 32);
  if (v16 >= 64)
    bzero(v11, ((unint64_t)(v16 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v11 = -1 << v16;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_28:
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_237E98714(uint64_t a1, int a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t result;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  _QWORD *v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[4];
  int v46;
  uint64_t *v47;
  int64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;

  v6 = v4;
  v8 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v54 = *(_QWORD *)(v8 - 8);
  v55 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v53 = &v45[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_237EE1D94();
  v52 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v45[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v14 = sub_237EE30C0();
  v15 = v14;
  if (!*(_QWORD *)(v13 + 16))
    goto LABEL_41;
  v16 = 1 << *(_BYTE *)(v13 + 32);
  v17 = *(_QWORD *)(v13 + 64);
  v49 = (_QWORD *)(v13 + 64);
  if (v16 < 64)
    v18 = ~(-1 << v16);
  else
    v18 = -1;
  v19 = v18 & v17;
  v47 = v4;
  v48 = (unint64_t)(v16 + 63) >> 6;
  v20 = v14 + 64;
  v51 = v13;
  result = swift_retain();
  v22 = 0;
  v46 = a2;
  v23 = 16;
  if ((a2 & 1) != 0)
    v23 = 32;
  v50 = v23;
  v24 = v23;
  while (1)
  {
    if (v19)
    {
      v26 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v27 = v26 | (v22 << 6);
      goto LABEL_24;
    }
    v28 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v28 >= v48)
      break;
    v29 = v49;
    v30 = v49[v28];
    ++v22;
    if (!v30)
    {
      v22 = v28 + 1;
      if (v28 + 1 >= v48)
        goto LABEL_34;
      v30 = v49[v22];
      if (!v30)
      {
        v31 = v28 + 2;
        if (v31 >= v48)
        {
LABEL_34:
          v43 = v51;
          swift_release();
          v6 = v47;
          if ((v46 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v30 = v49[v31];
        if (!v30)
        {
          while (1)
          {
            v22 = v31 + 1;
            if (__OFADD__(v31, 1))
              goto LABEL_43;
            if (v22 >= v48)
              goto LABEL_34;
            v30 = v49[v22];
            ++v31;
            if (v30)
              goto LABEL_23;
          }
        }
        v22 = v31;
      }
    }
LABEL_23:
    v19 = (v30 - 1) & v30;
    v27 = __clz(__rbit64(v30)) + (v22 << 6);
LABEL_24:
    v32 = v51;
    v33 = *(_QWORD *)(v52 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v52 + v24))(v12, *(_QWORD *)(v51 + 48) + v33 * v27, v10);
    v34 = *(_QWORD *)(v32 + 56);
    v35 = *(_QWORD *)(v54 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v54 + v24))(v53, v34 + v35 * v27, v55);
    sub_237E20E98(&qword_25689ACD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_237EE2A0C();
    v36 = -1 << *(_BYTE *)(v15 + 32);
    v37 = result & ~v36;
    v38 = v37 >> 6;
    if (((-1 << v37) & ~*(_QWORD *)(v20 + 8 * (v37 >> 6))) != 0)
    {
      v25 = __clz(__rbit64((-1 << v37) & ~*(_QWORD *)(v20 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v39 = 0;
      v40 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v41 = v38 == v40;
        if (v38 == v40)
          v38 = 0;
        v39 |= v41;
        v42 = *(_QWORD *)(v20 + 8 * v38);
      }
      while (v42 == -1);
      v25 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(_QWORD *)(v20 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v52 + 32))(*(_QWORD *)(v15 + 48) + v33 * v25, v12, v10);
    result = (*(uint64_t (**)(unint64_t, _BYTE *, uint64_t))(v54 + 32))(*(_QWORD *)(v15 + 56) + v35 * v25, v53, v55);
    ++*(_QWORD *)(v15 + 16);
  }
  v43 = v51;
  swift_release();
  v6 = v47;
  v29 = v49;
  if ((v46 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v44 = 1 << *(_BYTE *)(v43 + 32);
  if (v44 >= 64)
    bzero(v29, ((unint64_t)(v44 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v29 = -1 << v44;
  *(_QWORD *)(v43 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v6 = v15;
  return result;
}

uint64_t sub_237E98B10(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  _QWORD *v37;
  uint64_t v38;
  int v39;
  __int128 v40;

  v3 = v2;
  v5 = type metadata accessor for WorldViewModel.Pin(0);
  v38 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689B7D0);
  v39 = a2;
  result = sub_237EE30C0();
  v10 = result;
  if (*(_QWORD *)(v8 + 16))
  {
    v35 = v2;
    v11 = 0;
    v12 = *(_QWORD *)(v8 + 64);
    v37 = (_QWORD *)(v8 + 64);
    v13 = 1 << *(_BYTE *)(v8 + 32);
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v15 = v14 & v12;
    v36 = (unint64_t)(v13 + 63) >> 6;
    v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        v18 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v19 = v18 | (v11 << 6);
      }
      else
      {
        v20 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        result = (uint64_t)v37;
        if (v20 >= v36)
          goto LABEL_34;
        v21 = v37[v20];
        ++v11;
        if (!v21)
        {
          v11 = v20 + 1;
          if (v20 + 1 >= v36)
            goto LABEL_34;
          v21 = v37[v11];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v36)
            {
LABEL_34:
              if ((v39 & 1) == 0)
              {
                result = swift_release();
                v3 = v35;
                goto LABEL_41;
              }
              v33 = 1 << *(_BYTE *)(v8 + 32);
              if (v33 >= 64)
                bzero(v37, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v37 = -1 << v33;
              v3 = v35;
              *(_QWORD *)(v8 + 16) = 0;
              break;
            }
            v21 = v37[v22];
            if (!v21)
            {
              while (1)
              {
                v11 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_43;
                if (v11 >= v36)
                  goto LABEL_34;
                v21 = v37[v11];
                ++v22;
                if (v21)
                  goto LABEL_21;
              }
            }
            v11 = v22;
          }
        }
LABEL_21:
        v15 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v11 << 6);
      }
      v23 = *(_QWORD *)(v8 + 56);
      v40 = *(_OWORD *)(*(_QWORD *)(v8 + 48) + 16 * v19);
      v24 = *(_QWORD *)(v38 + 72);
      v25 = v23 + v24 * v19;
      if ((v39 & 1) != 0)
        sub_237E47CE0(v25, (uint64_t)v7, type metadata accessor for WorldViewModel.Pin);
      else
        sub_237E21EBC(v25, (uint64_t)v7, type metadata accessor for WorldViewModel.Pin);
      sub_237EE3264();
      sub_237EE3288();
      sub_237EE3288();
      result = sub_237EE3294();
      v26 = -1 << *(_BYTE *)(v10 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v16 + 8 * v28);
        }
        while (v32 == -1);
        v17 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_OWORD *)(*(_QWORD *)(v10 + 48) + 16 * v17) = v40;
      result = sub_237E47CE0((uint64_t)v7, *(_QWORD *)(v10 + 56) + v24 * v17, type metadata accessor for WorldViewModel.Pin);
      ++*(_QWORD *)(v10 + 16);
    }
  }
  result = swift_release();
LABEL_41:
  *v3 = v10;
  return result;
}

uint64_t sub_237E98E78(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  char v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v34;
  uint64_t v35;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689B7A0);
  v6 = a2;
  v7 = sub_237EE30C0();
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  else
    v10 = -1;
  v11 = v10 & *(_QWORD *)(v5 + 64);
  v33 = v2;
  v34 = (unint64_t)(v9 + 63) >> 6;
  v12 = v7 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v19 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_31;
    }
    v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v14;
    if (!v23)
    {
      v14 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v14);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          v3 = v33;
          if ((v6 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v14 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v14 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v14);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v14 = v24;
      }
    }
LABEL_30:
    v11 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_31:
    v29 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v20);
    v30 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v6 & 1) == 0)
      v31 = v30;
    sub_237EE3264();
    sub_237EE2ACC();
    swift_bridgeObjectRelease();
    result = sub_237EE3294();
    v15 = -1 << *(_BYTE *)(v8 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v17 == v26;
        if (v17 == v26)
          v17 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v28 == -1);
      v18 = __clz(__rbit64(~v28)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_BYTE *)(*(_QWORD *)(v8 + 48) + v18) = v29;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v18) = v30;
    ++*(_QWORD *)(v8 + 16);
  }
  swift_release();
  v3 = v33;
  v22 = (_QWORD *)(v5 + 64);
  if ((v6 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v32 = 1 << *(_BYTE *)(v5 + 32);
  if (v32 >= 64)
    bzero(v22, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v32;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v8;
  return result;
}

unint64_t sub_237E991A8(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689B818);
  v6 = (_QWORD *)sub_237EE30C0();
  if (*(_QWORD *)(v5 + 16))
  {
    v7 = 1 << *(_BYTE *)(v5 + 32);
    v8 = (_QWORD *)(v5 + 64);
    v9 = -1;
    if (v7 < 64)
      v9 = ~(-1 << v7);
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v11 = (unint64_t)(v7 + 63) >> 6;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v15 = v14 | (v13 << 6);
      }
      else
      {
        v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v16 >= v11)
          goto LABEL_22;
        v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          v13 = v16 + 1;
          if (v16 + 1 >= v11)
            goto LABEL_22;
          v17 = v8[v13];
          if (!v17)
          {
            v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_22:
              swift_release();
              if ((a2 & 1) != 0)
              {
                v21 = 1 << *(_BYTE *)(v5 + 32);
                if (v21 > 63)
                  bzero((void *)(v5 + 64), ((unint64_t)(v21 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v21;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                v13 = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_29;
                if (v13 >= v11)
                  goto LABEL_22;
                v17 = v8[v13];
                ++v18;
                if (v17)
                  goto LABEL_19;
              }
            }
            v13 = v18;
          }
        }
LABEL_19:
        v10 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      v19 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v15);
      v20 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v15);
      if ((a2 & 1) == 0)
        swift_retain();
      result = sub_237E975DC(v19, v20, v6);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_237E99388(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;
  _BYTE v37[32];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689B7E0);
  v36 = a2;
  v6 = sub_237EE30C0();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v34)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v35 + 8 * v18);
    ++v13;
    if (!v20)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v34)
        goto LABEL_34;
      v20 = *(_QWORD *)(v35 + 8 * v13);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v34)
        {
LABEL_34:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v20 = *(_QWORD *)(v35 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v13 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_43;
            if (v13 >= v34)
              goto LABEL_34;
            v20 = *(_QWORD *)(v35 + 8 * v13);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v13 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    v22 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
    v24 = *v22;
    v23 = v22[1];
    v25 = *(_QWORD *)(v5 + 56) + 32 * v17;
    if ((v36 & 1) != 0)
    {
      sub_237E21FC0(v25, (uint64_t)v37, &qword_256899E40);
    }
    else
    {
      sub_237E22004(v25, (uint64_t)v37, &qword_256899E40);
      swift_bridgeObjectRetain();
    }
    sub_237EE3264();
    sub_237EE2ACC();
    result = sub_237EE3294();
    v26 = -1 << *(_BYTE *)(v7 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v24;
    v15[1] = v23;
    result = sub_237E21FC0((uint64_t)v37, *(_QWORD *)(v7 + 56) + 32 * v14, &qword_256899E40);
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v19 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

unint64_t sub_237E996C0(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  char v19;
  void *v20;
  id v21;
  uint64_t v22;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689B788);
  v6 = (_QWORD *)sub_237EE30C0();
  if (*(_QWORD *)(v5 + 16))
  {
    v7 = 1 << *(_BYTE *)(v5 + 32);
    v8 = (_QWORD *)(v5 + 64);
    v9 = -1;
    if (v7 < 64)
      v9 = ~(-1 << v7);
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v11 = (unint64_t)(v7 + 63) >> 6;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v15 = v14 | (v13 << 6);
      }
      else
      {
        v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v16 >= v11)
          goto LABEL_22;
        v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          v13 = v16 + 1;
          if (v16 + 1 >= v11)
            goto LABEL_22;
          v17 = v8[v13];
          if (!v17)
          {
            v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_22:
              swift_release();
              if ((a2 & 1) != 0)
              {
                v22 = 1 << *(_BYTE *)(v5 + 32);
                if (v22 > 63)
                  bzero((void *)(v5 + 64), ((unint64_t)(v22 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v22;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                v13 = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_29;
                if (v13 >= v11)
                  goto LABEL_22;
                v17 = v8[v13];
                ++v18;
                if (v17)
                  goto LABEL_19;
              }
            }
            v13 = v18;
          }
        }
LABEL_19:
        v10 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      v19 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v15);
      v20 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v15);
      if ((a2 & 1) == 0)
        v21 = v20;
      result = sub_237E975DC(v19, (uint64_t)v20, v6);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_237E9989C(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  int v41;

  v3 = v2;
  v5 = type metadata accessor for TextClockDescriptor(0);
  v39 = *(_QWORD *)(v5 - 8);
  v40 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689B780);
  v41 = a2;
  v9 = sub_237EE30C0();
  v10 = v9;
  if (*(_QWORD *)(v8 + 16))
  {
    v36 = v2;
    v11 = 1 << *(_BYTE *)(v8 + 32);
    v12 = *(_QWORD *)(v8 + 64);
    v38 = (_QWORD *)(v8 + 64);
    if (v11 < 64)
      v13 = ~(-1 << v11);
    else
      v13 = -1;
    v14 = v13 & v12;
    v37 = (unint64_t)(v11 + 63) >> 6;
    v15 = v9 + 64;
    result = swift_retain();
    v17 = 0;
    while (1)
    {
      if (v14)
      {
        v19 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v20 = v19 | (v17 << 6);
      }
      else
      {
        v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v37)
          goto LABEL_34;
        v22 = v38[v21];
        ++v17;
        if (!v22)
        {
          v17 = v21 + 1;
          if (v21 + 1 >= v37)
            goto LABEL_34;
          v22 = v38[v17];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v37)
            {
LABEL_34:
              swift_release();
              v3 = v36;
              if ((v41 & 1) != 0)
              {
                v34 = 1 << *(_BYTE *)(v8 + 32);
                if (v34 >= 64)
                  bzero(v38, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v34;
                *(_QWORD *)(v8 + 16) = 0;
              }
              break;
            }
            v22 = v38[v23];
            if (!v22)
            {
              while (1)
              {
                v17 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v17 >= v37)
                  goto LABEL_34;
                v22 = v38[v17];
                ++v23;
                if (v22)
                  goto LABEL_21;
              }
            }
            v17 = v23;
          }
        }
LABEL_21:
        v14 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      v24 = *(_QWORD *)(v39 + 72);
      v25 = *(_QWORD *)(v8 + 48) + v24 * v20;
      if ((v41 & 1) != 0)
      {
        sub_237E47CE0(v25, (uint64_t)v7, type metadata accessor for TextClockDescriptor);
        v26 = *(id *)(*(_QWORD *)(v8 + 56) + 8 * v20);
      }
      else
      {
        sub_237E21EBC(v25, (uint64_t)v7, type metadata accessor for TextClockDescriptor);
        v26 = *(id *)(*(_QWORD *)(v8 + 56) + 8 * v20);
      }
      sub_237EE3264();
      sub_237EE3288();
      sub_237EE1EC0();
      sub_237E20E98((unint64_t *)&unk_25689C110, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
      sub_237EE2A18();
      result = sub_237EE3294();
      v27 = -1 << *(_BYTE *)(v10 + 32);
      v28 = result & ~v27;
      v29 = v28 >> 6;
      if (((-1 << v28) & ~*(_QWORD *)(v15 + 8 * (v28 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v15 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v30 = 0;
        v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v32 = v29 == v31;
          if (v29 == v31)
            v29 = 0;
          v30 |= v32;
          v33 = *(_QWORD *)(v15 + 8 * v29);
        }
        while (v33 == -1);
        v18 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      result = sub_237E47CE0((uint64_t)v7, *(_QWORD *)(v10 + 48) + v24 * v18, type metadata accessor for TextClockDescriptor);
      *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v18) = v26;
      ++*(_QWORD *)(v10 + 16);
    }
  }
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_237E99C5C(uint64_t a1, int a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t result;
  int v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  int v28;
  _QWORD *v29;

  v3 = v2;
  v5 = sub_237EE1D70();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689B820);
  v29 = (_QWORD *)sub_237EE30C0();
  if (*(_QWORD *)(v9 + 16))
  {
    v27 = v2;
    v10 = 1 << *(_BYTE *)(v9 + 32);
    v11 = (_QWORD *)(v9 + 64);
    v12 = -1;
    if (v10 < 64)
      v12 = ~(-1 << v10);
    v13 = v12 & *(_QWORD *)(v9 + 64);
    v14 = (unint64_t)(v10 + 63) >> 6;
    result = swift_retain();
    v16 = a2;
    v17 = 0;
    v28 = v16;
    if ((v16 & 1) != 0)
      v18 = 4;
    else
      v18 = 2;
    while (1)
    {
      if (v13)
      {
        v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v20 = v19 | (v17 << 6);
      }
      else
      {
        v22 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
LABEL_31:
          __break(1u);
          return result;
        }
        if (v22 >= v14)
          goto LABEL_22;
        v23 = v11[v22];
        ++v17;
        if (!v23)
        {
          v17 = v22 + 1;
          if (v22 + 1 >= v14)
            goto LABEL_22;
          v23 = v11[v17];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v14)
            {
LABEL_22:
              swift_release();
              if ((v28 & 1) == 0)
              {
                result = swift_release();
                v3 = v27;
                goto LABEL_29;
              }
              v25 = 1 << *(_BYTE *)(v9 + 32);
              if (v25 >= 64)
                bzero((void *)(v9 + 64), ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v11 = -1 << v25;
              v3 = v27;
              *(_QWORD *)(v9 + 16) = 0;
              break;
            }
            v23 = v11[v24];
            if (!v23)
            {
              while (1)
              {
                v17 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_31;
                if (v17 >= v14)
                  goto LABEL_22;
                v23 = v11[v17];
                ++v24;
                if (v23)
                  goto LABEL_21;
              }
            }
            v17 = v24;
          }
        }
LABEL_21:
        v13 = (v23 - 1) & v23;
        v20 = __clz(__rbit64(v23)) + (v17 << 6);
      }
      v21 = *(_BYTE *)(*(_QWORD *)(v9 + 48) + v20);
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 8 * v18))(v8, *(_QWORD *)(v9 + 56) + *(_QWORD *)(v6 + 72) * v20, v5);
      result = sub_237E97694(v21, (uint64_t)v8, v29);
    }
  }
  result = swift_release();
LABEL_29:
  *v3 = v29;
  return result;
}

uint64_t sub_237E99EBC(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t i;
  int v48;
  uint64_t v49;

  v3 = v2;
  v5 = type metadata accessor for ScheduledTask();
  v46 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v49 = (uint64_t)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_237EE1D94();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689B6F0);
  v48 = a2;
  v12 = sub_237EE30C0();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_42;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v45 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v43 = v2;
  v44 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 64;
  result = swift_retain();
  v20 = 0;
  v21 = v11;
  for (i = v11; ; v21 = i)
  {
    if (v17)
    {
      v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      return result;
    }
    if (v25 >= v44)
      break;
    v26 = v45;
    v27 = v45[v25];
    ++v20;
    if (!v27)
    {
      v20 = v25 + 1;
      if (v25 + 1 >= v44)
        goto LABEL_35;
      v27 = v45[v20];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v44)
        {
LABEL_35:
          swift_release();
          v3 = v43;
          if ((v48 & 1) == 0)
            goto LABEL_42;
          goto LABEL_36;
        }
        v27 = v45[v28];
        if (!v27)
        {
          while (1)
          {
            v20 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_44;
            if (v20 >= v44)
              goto LABEL_35;
            v27 = v45[v20];
            ++v28;
            if (v27)
              goto LABEL_21;
          }
        }
        v20 = v28;
      }
    }
LABEL_21:
    v17 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v20 << 6);
LABEL_22:
    v29 = *(_QWORD *)(v8 + 72);
    v30 = *(_QWORD *)(v21 + 48) + v29 * v24;
    if ((v48 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 32))(v10, v30, v7);
      v31 = *(_QWORD *)(v21 + 56);
      v32 = *(_QWORD *)(v46 + 72);
      sub_237E47CE0(v31 + v32 * v24, v49, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledTask);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, v30, v7);
      v33 = *(_QWORD *)(v21 + 56);
      v32 = *(_QWORD *)(v46 + 72);
      sub_237E21EBC(v33 + v32 * v24, v49, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledTask);
    }
    sub_237E20E98(&qword_25689ACD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_237EE2A0C();
    v34 = -1 << *(_BYTE *)(v13 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v18 + 8 * (v35 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v18 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v18 + 8 * v36);
      }
      while (v40 == -1);
      v22 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v13 + 48) + v29 * v22, v10, v7);
    result = sub_237E47CE0(v49, *(_QWORD *)(v13 + 56) + v32 * v22, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledTask);
    ++*(_QWORD *)(v13 + 16);
  }
  swift_release();
  v3 = v43;
  v26 = v45;
  if ((v48 & 1) == 0)
    goto LABEL_42;
LABEL_36:
  v41 = 1 << *(_BYTE *)(i + 32);
  if (v41 >= 64)
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v41;
  *(_QWORD *)(i + 16) = 0;
LABEL_42:
  result = swift_release();
  *v3 = v13;
  return result;
}

uint64_t sub_237E9A2D8(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  int v42;

  v3 = v2;
  v5 = sub_237EE1D94();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689B6E0);
  v42 = a2;
  v10 = sub_237EE30C0();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_34;
      v24 = v40[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v39)
              goto LABEL_34;
            v24 = v40[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
      swift_retain();
    }
    sub_237E20E98(&qword_25689ACD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_237EE2A0C();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

unint64_t sub_237E9A66C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  const void *v15;
  BOOL v16;
  uint64_t v17;
  unint64_t v18;
  __int128 *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  _BYTE v26[112];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_237EE2F28();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v11 = 104 * v6;
        sub_237E28430(*(_QWORD *)(a2 + 48) + 104 * v6, (uint64_t)v26);
        sub_237EE3264();
        ClockFaceLook.hash(into:)();
        v12 = sub_237EE3294();
        result = sub_237E2846C((uint64_t)v26);
        v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8)
            goto LABEL_5;
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          v14 = *(_QWORD *)(a2 + 48);
          result = v14 + 104 * v3;
          v15 = (const void *)(v14 + v11);
          if (104 * v3 < v11 || (result < (unint64_t)v15 + 104 ? (v16 = v3 == v6) : (v16 = 0), !v16))
            result = (unint64_t)memmove((void *)result, v15, 0x68uLL);
          v17 = *(_QWORD *)(a2 + 56);
          v18 = v17 + 40 * v3;
          v19 = (__int128 *)(v17 + 40 * v6);
          if (v3 != v6 || (v3 = v6, v18 >= (unint64_t)v19 + 40))
          {
            v9 = *v19;
            v10 = v19[1];
            *(_QWORD *)(v18 + 32) = *((_QWORD *)v19 + 4);
            *(_OWORD *)v18 = v9;
            *(_OWORD *)(v18 + 16) = v10;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_237E9A860(unint64_t result, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v3 = result;
  v4 = a2 + 64;
  v5 = (result + 1) & ~(-1 << *(_BYTE *)(a2 + 32));
  if (((1 << v5) & *(_QWORD *)(a2 + 64 + 8 * (v5 >> 6))) != 0)
  {
    result = sub_237EE2F28();
    if ((*(_QWORD *)(v4 + 8 * (v5 >> 6)) & (1 << v5)) != 0)
    {
      v6 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 48) + v5);
      sub_237EE3264();
      __asm { BR              X8 }
    }
    v7 = (uint64_t *)(v4 + 8 * (v3 >> 6));
    v8 = *v7;
    v9 = (-1 << v3) - 1;
  }
  else
  {
    v7 = (uint64_t *)(v4 + 8 * (result >> 6));
    v9 = *v7;
    v8 = (-1 << result) - 1;
  }
  *v7 = v9 & v8;
  v10 = *(_QWORD *)(a2 + 16);
  v11 = __OFSUB__(v10, 1);
  v12 = v10 - 1;
  if (v11)
  {
    __break(1u);
    JUMPOUT(0x237E9AA9CLL);
  }
  *(_QWORD *)(a2 + 16) = v12;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_237E9AAB0(int64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;
  void (*v33)(char *, unint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;

  v32 = a3;
  v5 = sub_237EE1D94();
  v34 = *(_QWORD *)(v5 - 8);
  result = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    v35 = a2 + 64;
    result = sub_237EE2F28();
    v12 = v35;
    if ((*(_QWORD *)(v35 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v13 = (result + 1) & v11;
      v14 = *(_QWORD *)(v34 + 72);
      v33 = *(void (**)(char *, unint64_t, uint64_t))(v34 + 16);
      do
      {
        v15 = v14 * v10;
        v33(v8, *(_QWORD *)(a2 + 48) + v14 * v10, v5);
        sub_237E20E98(&qword_25689ACD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v16 = sub_237EE2A0C();
        result = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v8, v5);
        v17 = v16 & v11;
        if (a1 >= (uint64_t)v13)
        {
          if (v17 < v13 || a1 < (uint64_t)v17)
            goto LABEL_6;
        }
        else if (v17 < v13 && a1 < (uint64_t)v17)
        {
          goto LABEL_6;
        }
        if (v14 * a1 < v15 || *(_QWORD *)(a2 + 48) + v14 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v15 + v14))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v14 * a1 != v15)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v20 = *(_QWORD *)(a2 + 56);
        v21 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(v32) - 8) + 72);
        v22 = v21 * a1;
        result = v20 + v21 * a1;
        v23 = v21 * v10;
        v24 = v20 + v21 * v10 + v21;
        if (v22 < v23 || result >= v24)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v10;
          if (v22 == v23)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        a1 = v10;
LABEL_6:
        v10 = (v10 + 1) & v11;
        v12 = v35;
      }
      while (((*(_QWORD *)(v35 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v26 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v26;
    v28 = (-1 << a1) - 1;
  }
  else
  {
    v26 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v26;
    v27 = (-1 << a1) - 1;
  }
  *v26 = v28 & v27;
  v29 = *(_QWORD *)(a2 + 16);
  v30 = __OFSUB__(v29, 1);
  v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_237E9AD54(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_237EE2F28();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        sub_237EE3264();
        sub_237EE3288();
        sub_237EE3288();
        result = sub_237EE3294();
        v9 = result & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v9 < v8)
          goto LABEL_11;
LABEL_12:
        v10 = *(_QWORD *)(a2 + 48);
        v11 = (_OWORD *)(v10 + 16 * v3);
        v12 = (_OWORD *)(v10 + 16 * v6);
        if (v3 != v6 || v11 >= v12 + 1)
          *v11 = *v12;
        v13 = *(_QWORD *)(a2 + 56);
        v14 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for WorldViewModel.Pin(0) - 8) + 72);
        v15 = v14 * v3;
        result = v13 + v14 * v3;
        v16 = v14 * v6;
        v17 = v13 + v14 * v6 + v14;
        if (v15 < v16 || result >= v17)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v15 == v16)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v9 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v9)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_237E9AF4C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_237EE2F28();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_237EE3264();
        swift_bridgeObjectRetain();
        sub_237EE2ACC();
        v10 = sub_237EE3294();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_OWORD *)(v15 + 32 * v3);
          v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 2))
          {
            v9 = v17[1];
            *v16 = *v17;
            v16[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_237E9B120(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_237EE2F28();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        sub_237EE3264();
        sub_237EE3288();
        result = sub_237EE3294();
        v9 = result & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v9 < v8)
          goto LABEL_11;
LABEL_12:
        v10 = *(_QWORD *)(a2 + 48);
        v11 = (_BYTE *)(v10 + v3);
        v12 = (_BYTE *)(v10 + v6);
        if (v3 != v6 || v11 >= v12 + 1)
          *v11 = *v12;
        v13 = *(_QWORD *)(a2 + 56);
        v14 = *(_QWORD *)(*(_QWORD *)(sub_237EE1D70() - 8) + 72);
        v15 = v14 * v3;
        result = v13 + v14 * v3;
        v16 = v14 * v6;
        v17 = v13 + v14 * v6 + v14;
        if (v15 < v16 || result >= v17)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v15 == v16)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v9 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v9)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_237E9B308(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, unint64_t, uint64_t);
  unint64_t v37;
  uint64_t v38;

  v4 = sub_237EE1D94();
  v38 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v11 = sub_237EE2F28();
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v37 = (v11 + 1) & v10;
      v12 = *(_QWORD *)(v38 + 72);
      v36 = *(void (**)(char *, unint64_t, uint64_t))(v38 + 16);
      v13 = v10;
      do
      {
        v14 = v7;
        v15 = v12;
        v16 = v12 * v9;
        v17 = v13;
        v36(v6, *(_QWORD *)(a2 + 48) + v12 * v9, v4);
        sub_237E20E98(&qword_25689ACD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v18 = sub_237EE2A0C();
        (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v37)
        {
          if (v19 >= v37 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v7 = v14;
            if (v15 * a1 < v16
              || *(_QWORD *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v16 + v15))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v22 = *(_QWORD *)(a2 + 56);
            v23 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ScheduledTask() - 8) + 72);
            v24 = v23 * a1;
            v25 = v22 + v23 * a1;
            v26 = v23 * v9;
            v27 = v22 + v23 * v9 + v23;
            if (v24 < v26 || v25 >= v27)
            {
              swift_arrayInitWithTakeFrontToBack();
              a1 = v9;
              v13 = v17;
            }
            else
            {
              a1 = v9;
              v13 = v17;
              if (v24 != v26)
              {
                swift_arrayInitWithTakeBackToFront();
                v13 = v17;
                a1 = v9;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v37 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v7 = v14;
LABEL_5:
        v9 = (v9 + 1) & v13;
        v12 = v15;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v29 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v30 = *v29;
    v31 = (-1 << a1) - 1;
  }
  else
  {
    v29 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v31 = *v29;
    v30 = (-1 << a1) - 1;
  }
  *v29 = v31 & v30;
  v32 = *(_QWORD *)(a2 + 16);
  v33 = __OFSUB__(v32, 1);
  v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_237E9B5DC(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, unint64_t, uint64_t);
  unint64_t v33;
  uint64_t v34;

  v4 = sub_237EE1D94();
  v34 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v11 = sub_237EE2F28();
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v33 = (v11 + 1) & v10;
      v12 = *(_QWORD *)(v34 + 72);
      v32 = *(void (**)(char *, unint64_t, uint64_t))(v34 + 16);
      v13 = v10;
      do
      {
        v14 = v7;
        v15 = v12;
        v16 = v12 * v9;
        v17 = v13;
        v32(v6, *(_QWORD *)(a2 + 48) + v12 * v9, v4);
        sub_237E20E98(&qword_25689ACD0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v18 = sub_237EE2A0C();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v6, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v33)
        {
          if (v19 >= v33 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v7 = v14;
            if (v15 * a1 < v16
              || (v12 = v15, *(_QWORD *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v16 + v15)))
            {
              swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v22 = *(_QWORD *)(a2 + 56);
            v23 = (_QWORD *)(v22 + 8 * a1);
            v24 = (_QWORD *)(v22 + 8 * v9);
            if (a1 != v9 || (a1 = v9, v23 >= v24 + 1))
            {
              *v23 = *v24;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v33 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v7 = v14;
        v12 = v15;
LABEL_5:
        v9 = (v9 + 1) & v13;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v25 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v26 = *v25;
    v27 = (-1 << a1) - 1;
  }
  else
  {
    v25 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v25;
    v26 = (-1 << a1) - 1;
  }
  *v25 = v27 & v26;
  v28 = *(_QWORD *)(a2 + 16);
  v29 = __OFSUB__(v28, 1);
  v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
}

uint64_t sub_237E9B87C(uint64_t a1, double *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for TextClockDescriptor(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)*v3;
  v13 = sub_237EAD420(a2);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  v17 = v12;
  v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    v19 = *v4;
    if ((v17 & 1) != 0)
    {
LABEL_8:
      v20 = v19[7];
      result = swift_release();
      *(_QWORD *)(v20 + 8 * v13) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_237E9CE30();
    goto LABEL_7;
  }
  sub_237E97CB8(v16, a3 & 1);
  v22 = sub_237EAD420(a2);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    result = sub_237EE31E0();
    __break(1u);
    return result;
  }
  v13 = v22;
  v19 = *v4;
  if ((v17 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  sub_237E21EBC((uint64_t)a2, (uint64_t)v10, type metadata accessor for TextClockDescriptor);
  return sub_237E9CBBC(v13, (uint64_t)v10, a1, v19);
}

uint64_t sub_237E9B9D8(__int128 *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t result;
  unint64_t v19;
  char v20;
  __int128 v21[6];

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_237EAD5EC(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7] + 40 * v10;
        __swift_destroy_boxed_opaque_existential_1Tm(v17);
        return sub_237E2D1BC(a1, v17);
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_237E9D068();
      goto LABEL_7;
    }
    sub_237E98078(v13, a3 & 1);
    v19 = sub_237EAD5EC(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_237E28430(a2, (uint64_t)v21);
      return sub_237E9C934(v10, v21, a1, v16);
    }
  }
  result = sub_237EE31E0();
  __break(1u);
  return result;
}

void sub_237E9BB14(uint64_t a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v4 = v3;
  v8 = *v3;
  sub_237EAD644(a2);
  v11 = v10;
  v12 = *(_QWORD *)(v8 + 16);
  v13 = (v9 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v15 = v9;
  v16 = *(_QWORD *)(v8 + 24);
  if (v16 >= v14 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v16 >= v14 && (a3 & 1) == 0)
  {
    sub_237E9D244();
LABEL_7:
    v17 = (_QWORD *)*v4;
    if ((v15 & 1) != 0)
    {
LABEL_8:
      v18 = v17[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v18 + 8 * v11) = a1;
      return;
    }
LABEL_11:
    v17[(v11 >> 6) + 8] |= 1 << v11;
    *(_BYTE *)(v17[6] + v11) = a2;
    *(_QWORD *)(v17[7] + 8 * v11) = a1;
    v21 = v17[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v17[2] = v23;
      return;
    }
    goto LABEL_14;
  }
  sub_237E9839C(v14, a3 & 1);
  sub_237EAD644(a2);
  if ((v15 & 1) == (v20 & 1))
  {
    v11 = v19;
    v17 = (_QWORD *)*v4;
    if ((v15 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_237EE31E0();
  __break(1u);
}

uint64_t sub_237E9BC48(uint64_t a1, char a2, double a3, double a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_237EAD79C(a3, a4);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a2 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        v20 = type metadata accessor for WorldViewModel.Pin(0);
        return sub_237E9F760(a1, v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v12, type metadata accessor for WorldViewModel.Pin);
      }
      return sub_237E9CA00(v12, a1, v18, a3, a4);
    }
    if (v17 >= v15 && (a2 & 1) == 0)
    {
      sub_237E9D3E4();
      goto LABEL_7;
    }
    sub_237E98B10(v15, a2 & 1);
    v22 = sub_237EAD79C(a3, a4);
    if ((v16 & 1) == (v23 & 1))
    {
      v12 = v22;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
      return sub_237E9CA00(v12, a1, v18, a3, a4);
    }
  }
  type metadata accessor for CLLocationCoordinate2D(0);
  result = sub_237EE31E0();
  __break(1u);
  return result;
}

void sub_237E9BD78(uint64_t a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  char v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v7 = a2 & 1;
  v8 = *v3;
  v10 = sub_237EAD7FC(a2 & 1);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_237E9D610();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];

      *(_QWORD *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = v7;
    *(_QWORD *)(v16[7] + 8 * v10) = a1;
    v20 = v16[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return;
    }
    goto LABEL_14;
  }
  sub_237E98E78(v13, a3 & 1);
  v18 = sub_237EAD7FC(v7);
  if ((v14 & 1) == (v19 & 1))
  {
    v10 = v18;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_237EE31E0();
  __break(1u);
}

uint64_t sub_237E9BEAC(uint64_t a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v4 = v3;
  v8 = *v3;
  v10 = sub_237EAD898(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_237E9D7B0();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];
      result = swift_release();
      *(_QWORD *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = a2;
    *(_QWORD *)(v16[7] + 8 * v10) = a1;
    v19 = v16[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (!v20)
    {
      v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_237E991A8(result, a3 & 1);
  result = sub_237EAD898(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    v10 = result;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_237EE31E0();
  __break(1u);
  return result;
}

uint64_t sub_237E9BFE0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_237EAD554(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
        return sub_237E9F9C4(a1, v18[7] + 32 * v12, &qword_256899E40);
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_237E9D950();
      goto LABEL_7;
    }
    sub_237E99388(v15, a4 & 1);
    v20 = sub_237EAD554(a2, a3);
    if ((v16 & 1) == (v21 & 1))
    {
      v12 = v20;
      v18 = *v5;
      if ((v16 & 1) != 0)
        return sub_237E9F9C4(a1, v18[7] + 32 * v12, &qword_256899E40);
LABEL_11:
      sub_237E9CA90(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_237EE31E0();
  __break(1u);
  return result;
}

uint64_t sub_237E9C110(uint64_t a1, uint64_t a2, char a3, uint64_t *a4, uint64_t *a5)
{
  _QWORD *v5;
  _QWORD **v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  unint64_t v26;
  char v27;
  uint64_t *v28;
  uint64_t v29;

  v28 = a5;
  v29 = a1;
  v7 = (_QWORD **)v5;
  v10 = sub_237EE1D94();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (_QWORD *)*v5;
  v16 = sub_237EAD3B4(a2);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
  }
  else
  {
    v20 = v15;
    v21 = v14[3];
    if (v21 >= v19 && (a3 & 1) != 0)
    {
LABEL_7:
      v22 = *v7;
      if ((v20 & 1) != 0)
      {
LABEL_8:
        v23 = v22[7];
        v24 = __swift_instantiateConcreteTypeFromMangledName(a4);
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 40))(v23 + *(_QWORD *)(*(_QWORD *)(v24 - 8) + 72) * v16, v29, v24);
      }
      goto LABEL_11;
    }
    if (v21 >= v19 && (a3 & 1) == 0)
    {
      sub_237E9DB4C(a4, v28);
      goto LABEL_7;
    }
    sub_237E98714(v19, a3 & 1, a4, v28);
    v26 = sub_237EAD3B4(a2);
    if ((v20 & 1) == (v27 & 1))
    {
      v16 = v26;
      v22 = *v7;
      if ((v20 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
      return sub_237E9CB00(v16, (uint64_t)v13, v29, v22, a4);
    }
  }
  result = sub_237EE31E0();
  __break(1u);
  return result;
}

void sub_237E9C2B4(uint64_t a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v8 = *v3;
  v10 = sub_237EAD898(a2);
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v14 = v9;
  v15 = *(_QWORD *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_237E9DE28();
LABEL_7:
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
    {
LABEL_8:
      v17 = v16[7];

      *(_QWORD *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(_BYTE *)(v16[6] + v10) = a2;
    *(_QWORD *)(v16[7] + 8 * v10) = a1;
    v20 = v16[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return;
    }
    goto LABEL_14;
  }
  sub_237E996C0(v13, a3 & 1);
  v18 = sub_237EAD898(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    v10 = v18;
    v16 = (_QWORD *)*v4;
    if ((v14 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_237EE31E0();
  __break(1u);
}

void sub_237E9C3E8(uint64_t a1, double *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for TextClockDescriptor(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)*v3;
  v13 = sub_237EAD420(a2);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  v17 = v12;
  v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    v19 = *v4;
    if ((v17 & 1) != 0)
    {
LABEL_8:
      v20 = v19[7];

      *(_QWORD *)(v20 + 8 * v13) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_237E9DFC8();
    goto LABEL_7;
  }
  sub_237E9989C(v16, a3 & 1);
  v21 = sub_237EAD420(a2);
  if ((v17 & 1) != (v22 & 1))
  {
LABEL_14:
    sub_237EE31E0();
    __break(1u);
    return;
  }
  v13 = v21;
  v19 = *v4;
  if ((v17 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  sub_237E21EBC((uint64_t)a2, (uint64_t)v10, type metadata accessor for TextClockDescriptor);
  sub_237E9CBBC(v13, (uint64_t)v10, a1, v19);
}

uint64_t sub_237E9C544(uint64_t a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_237EAD898(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = sub_237EE1D70();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, a1, v18);
      }
      return sub_237E9CC54(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_237E9E1FC();
      goto LABEL_7;
    }
    sub_237E99C5C(v13, a3 & 1);
    v20 = sub_237EAD898(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_237E9CC54(v10, a2, a1, v16);
    }
  }
  result = sub_237EE31E0();
  __break(1u);
  return result;
}

uint64_t sub_237E9C668(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = sub_237EE1D94();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_237EAD3B4(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      v22 = type metadata accessor for ScheduledTask();
      return sub_237E9F760(a1, v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledTask);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_237E9E418();
    goto LABEL_7;
  }
  sub_237E99EBC(v17, a3 & 1);
  v24 = sub_237EAD3B4(a2);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_14:
    result = sub_237EE31E0();
    __break(1u);
    return result;
  }
  v14 = v24;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_237E9CCE0(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_237E9C7D8(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_237EE1D94();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_237EAD3B4(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      result = swift_release();
      *(_QWORD *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_237E9E6E0();
    goto LABEL_7;
  }
  sub_237E9A2D8(v17, a3 & 1);
  v23 = sub_237EAD3B4(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    result = sub_237EE31E0();
    __break(1u);
    return result;
  }
  v14 = v23;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_237E9CD98(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_237E9C934(unint64_t a1, __int128 *a2, __int128 *a3, _QWORD *a4)
{
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  sub_237E2D180(a2, a4[6] + 104 * a1);
  result = sub_237E2D1BC(a3, a4[7] + 40 * a1);
  v8 = a4[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a4[2] = v10;
  return result;
}

unint64_t sub_237E9C9BC(unint64_t result, char a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_BYTE *)(a4[6] + result) = a2;
  *(_QWORD *)(a4[7] + 8 * result) = a3;
  v4 = a4[2];
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
    __break(1u);
  else
    a4[2] = v6;
  return result;
}

uint64_t sub_237E9CA00(unint64_t a1, uint64_t a2, _QWORD *a3, double a4, double a5)
{
  double *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a3[(a1 >> 6) + 8] |= 1 << a1;
  v8 = (double *)(a3[6] + 16 * a1);
  *v8 = a4;
  v8[1] = a5;
  v9 = a3[7];
  v10 = type metadata accessor for WorldViewModel.Pin(0);
  result = sub_237E47CE0(a2, v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, type metadata accessor for WorldViewModel.Pin);
  v12 = a3[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a3[2] = v14;
  return result;
}

uint64_t sub_237E9CA90(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_237E21FC0(a4, a5[7] + 32 * a1, &qword_256899E40);
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_237E9CB00(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v10 = a4[6];
  v11 = sub_237EE1D94();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a2, v11);
  v12 = a4[7];
  v13 = __swift_instantiateConcreteTypeFromMangledName(a5);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v12 + *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72) * a1, a3, v13);
  v15 = a4[2];
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    a4[2] = v17;
  return result;
}

uint64_t sub_237E9CBBC(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for TextClockDescriptor(0);
  result = sub_237E47CE0(a2, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, type metadata accessor for TextClockDescriptor);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_237E9CC54(unint64_t a1, char a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_BYTE *)(a4[6] + a1) = a2;
  v7 = a4[7];
  v8 = sub_237EE1D70();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, a3, v8);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

uint64_t sub_237E9CCE0(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_237EE1D94();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v10 = a4[7];
  v11 = type metadata accessor for ScheduledTask();
  result = sub_237E47CE0(a3, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledTask);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

uint64_t sub_237E9CD98(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_237EE1D94();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

void *sub_237E9CE30()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = type metadata accessor for TextClockDescriptor(0);
  v27 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689B7C8);
  v5 = *v0;
  v6 = sub_237EE30B4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v26 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v11;
    if (!v22)
    {
      v11 = v21 + 1;
      if (v21 + 1 >= v15)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v11);
      if (!v22)
        break;
    }
LABEL_25:
    v14 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_12:
    v18 = *(_QWORD *)(v27 + 72) * v17;
    sub_237E21EBC(*(_QWORD *)(v5 + 48) + v18, (uint64_t)v4, type metadata accessor for TextClockDescriptor);
    v19 = 8 * v17;
    v20 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v17);
    sub_237E47CE0((uint64_t)v4, *(_QWORD *)(v7 + 48) + v18, type metadata accessor for TextClockDescriptor);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v20;
    result = (void *)swift_retain();
  }
  v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v11 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v11);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_237E9D068()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  __int128 v21[2];
  __int128 v22[6];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689B900);
  v2 = *v0;
  v3 = sub_237EE30B4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 104 * v15;
    sub_237E28430(*(_QWORD *)(v2 + 48) + 104 * v15, (uint64_t)v22);
    v17 = 40 * v15;
    sub_237E2CFE8(*(_QWORD *)(v2 + 56) + v17, (uint64_t)v21);
    sub_237E2D180(v22, *(_QWORD *)(v4 + 48) + v16);
    result = (void *)sub_237E2D1BC(v21, *(_QWORD *)(v4 + 56) + v17);
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_237E9D244()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_25689B908);
  v2 = *v0;
  v3 = sub_237EE30B4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = (void *)swift_bridgeObjectRetain();
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_237E9D3E4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  uint64_t v9;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;
  __int128 v27;

  v1 = v0;
  v2 = type metadata accessor for WorldViewModel.Pin(0);
  v26 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689B7D0);
  v5 = *v0;
  v6 = sub_237EE30B4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (void *)(v6 + 64);
  v9 = v5 + 64;
  v10 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v13 = 1 << *(_BYTE *)(v5 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v5 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v9 + 8 * v22);
    ++v12;
    if (!v23)
    {
      v12 = v22 + 1;
      if (v22 + 1 >= v16)
        goto LABEL_26;
      v23 = *(_QWORD *)(v9 + 8 * v12);
      if (!v23)
        break;
    }
LABEL_25:
    v15 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_12:
    v19 = 16 * v18;
    v20 = *(_QWORD *)(v26 + 72) * v18;
    v21 = *(_QWORD *)(v5 + 56) + v20;
    v27 = *(_OWORD *)(*(_QWORD *)(v5 + 48) + 16 * v18);
    sub_237E21EBC(v21, (uint64_t)v4, type metadata accessor for WorldViewModel.Pin);
    *(_OWORD *)(*(_QWORD *)(v7 + 48) + v19) = v27;
    result = (void *)sub_237E47CE0((uint64_t)v4, *(_QWORD *)(v7 + 56) + v20, type metadata accessor for WorldViewModel.Pin);
  }
  v24 = v22 + 2;
  if (v24 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v9 + 8 * v24);
  if (v23)
  {
    v12 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v23 = *(_QWORD *)(v9 + 8 * v12);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_237E9D610()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689B7A0);
  v2 = *v0;
  v3 = sub_237EE30B4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(void **)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_237E9D7B0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689B818);
  v2 = *v0;
  v3 = sub_237EE30B4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = (void *)swift_retain();
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_237E9D950()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  unint64_t v6;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  _BYTE v26[32];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689B7E0);
  v2 = *v0;
  v3 = sub_237EE30B4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v24 = v1;
  result = (void *)(v3 + 64);
  v6 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v6)
    result = memmove(result, (const void *)(v2 + 64), 8 * v6);
  v25 = v2 + 64;
  v8 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v9 = 1 << *(_BYTE *)(v2 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v2 + 64);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    v21 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v12)
      goto LABEL_26;
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v8;
    if (!v22)
    {
      v8 = v21 + 1;
      if (v21 + 1 >= v12)
        goto LABEL_26;
      v22 = *(_QWORD *)(v25 + 8 * v8);
      if (!v22)
        break;
    }
LABEL_25:
    v11 = (v22 - 1) & v22;
    v14 = __clz(__rbit64(v22)) + (v8 << 6);
LABEL_12:
    v15 = 16 * v14;
    v16 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v14);
    v17 = *v16;
    v18 = v16[1];
    v19 = 32 * v14;
    sub_237E22004(*(_QWORD *)(v2 + 56) + 32 * v14, (uint64_t)v26, &qword_256899E40);
    v20 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v15);
    *v20 = v17;
    v20[1] = v18;
    sub_237E21FC0((uint64_t)v26, *(_QWORD *)(v4 + 56) + v19, &qword_256899E40);
    result = (void *)swift_bridgeObjectRetain();
  }
  v23 = v21 + 2;
  if (v23 >= v12)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v24;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v8 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v8 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v8 >= v12)
      goto LABEL_26;
    v22 = *(_QWORD *)(v25 + 8 * v8);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

char *sub_237E9DB4C(uint64_t *a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *result;
  char *v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  int64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;

  v44 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v40 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v43 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_237EE1D94();
  v39 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v41 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v36 = v2;
  v6 = *v2;
  v7 = sub_237EE30B4();
  v8 = *(_QWORD *)(v6 + 16);
  v46 = v7;
  if (!v8)
  {
    result = (char *)swift_release();
    v35 = v46;
    v34 = v36;
LABEL_25:
    *v34 = v35;
    return result;
  }
  v9 = v7;
  result = (char *)(v7 + 64);
  v11 = (char *)(v6 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v9 + 32)) + 63) >> 6;
  v37 = v6 + 64;
  if (v9 != v6 || result >= &v11[8 * v12])
  {
    result = (char *)memmove(result, v11, 8 * v12);
    v9 = v46;
  }
  v13 = 0;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v45 = v6;
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 64);
  v38 = (unint64_t)(v14 + 63) >> 6;
  v17 = v39;
  v18 = v40;
  v20 = v41;
  v19 = v42;
  v21 = v44;
  v22 = v46;
  while (1)
  {
    if (v16)
    {
      v23 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v47 = v13;
      v24 = v23 | (v13 << 6);
      v25 = v45;
      goto LABEL_9;
    }
    v30 = v13 + 1;
    v25 = v45;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v30 >= v38)
      goto LABEL_23;
    v31 = *(_QWORD *)(v37 + 8 * v30);
    v32 = v13 + 1;
    if (!v31)
    {
      v32 = v30 + 1;
      if (v30 + 1 >= v38)
        goto LABEL_23;
      v31 = *(_QWORD *)(v37 + 8 * v32);
      if (!v31)
        break;
    }
LABEL_22:
    v16 = (v31 - 1) & v31;
    v47 = v32;
    v24 = __clz(__rbit64(v31)) + (v32 << 6);
LABEL_9:
    v26 = *(_QWORD *)(v17 + 72) * v24;
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v20, *(_QWORD *)(v25 + 48) + v26, v19);
    v27 = *(_QWORD *)(v18 + 72) * v24;
    v28 = *(_QWORD *)(v25 + 56) + v27;
    v29 = v43;
    (*(void (**)(char *, unint64_t, uint64_t))(v18 + 16))(v43, v28, v21);
    (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(*(_QWORD *)(v22 + 48) + v26, v20, v19);
    result = (char *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v18 + 32))(*(_QWORD *)(v22 + 56) + v27, v29, v21);
    v13 = v47;
  }
  v33 = v30 + 2;
  if (v33 >= v38)
  {
LABEL_23:
    result = (char *)swift_release();
    v34 = v36;
    v35 = v46;
    goto LABEL_25;
  }
  v31 = *(_QWORD *)(v37 + 8 * v33);
  if (v31)
  {
    v32 = v33;
    goto LABEL_22;
  }
  while (1)
  {
    v32 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v32 >= v38)
      goto LABEL_23;
    v31 = *(_QWORD *)(v37 + 8 * v32);
    ++v33;
    if (v31)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_237E9DE28()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689B788);
  v2 = *v0;
  v3 = sub_237EE30B4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(void **)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_237E9DFC8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = type metadata accessor for TextClockDescriptor(0);
  v27 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689B780);
  v5 = *v0;
  v6 = sub_237EE30B4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (id)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (id)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v26 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v11;
    if (!v22)
    {
      v11 = v21 + 1;
      if (v21 + 1 >= v15)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v11);
      if (!v22)
        break;
    }
LABEL_25:
    v14 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_12:
    v18 = *(_QWORD *)(v27 + 72) * v17;
    sub_237E21EBC(*(_QWORD *)(v5 + 48) + v18, (uint64_t)v4, type metadata accessor for TextClockDescriptor);
    v19 = 8 * v17;
    v20 = *(void **)(*(_QWORD *)(v5 + 56) + v19);
    sub_237E47CE0((uint64_t)v4, *(_QWORD *)(v7 + 48) + v18, type metadata accessor for TextClockDescriptor);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v20;
    result = v20;
  }
  v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_26:
    result = (id)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v11 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v11);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_237E9E1FC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  int64_t v25;

  v1 = sub_237EE1D70();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689B820);
  v23 = v0;
  v5 = *v0;
  v6 = sub_237EE30B4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v23 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v24 = v5 + 64;
  v25 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v25)
      goto LABEL_26;
    v20 = *(_QWORD *)(v24 + 8 * v19);
    ++v11;
    if (!v20)
    {
      v11 = v19 + 1;
      if (v19 + 1 >= v25)
        goto LABEL_26;
      v20 = *(_QWORD *)(v24 + 8 * v11);
      if (!v20)
        break;
    }
LABEL_25:
    v14 = (v20 - 1) & v20;
    v16 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_12:
    v17 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16);
    v18 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 56) + v18, v1);
    *(_BYTE *)(*(_QWORD *)(v7 + 48) + v16) = v17;
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 56) + v18, v4, v1);
  }
  v21 = v19 + 2;
  if (v21 >= v25)
    goto LABEL_26;
  v20 = *(_QWORD *)(v24 + 8 * v21);
  if (v20)
  {
    v11 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v11 >= v25)
      goto LABEL_26;
    v20 = *(_QWORD *)(v24 + 8 * v11);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_237E9E418()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t i;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  int64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = type metadata accessor for ScheduledTask();
  v36 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v35 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_237EE1D94();
  v3 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v33 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689B6F0);
  v30 = v0;
  v5 = *v0;
  v6 = sub_237EE30B4();
  v7 = *(_QWORD *)(v5 + 16);
  v38 = v6;
  if (!v7)
  {
    result = (void *)swift_release();
    v28 = v38;
    v27 = v30;
LABEL_25:
    *v27 = v28;
    return result;
  }
  v8 = v6;
  result = (void *)(v6 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
  {
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
    v8 = v38;
  }
  v11 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v37 = v5;
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v31 = v5 + 64;
  v32 = (unint64_t)(v12 + 63) >> 6;
  v16 = v33;
  v15 = v34;
  v17 = (uint64_t)v35;
  for (i = v38;
        ;
        result = (void *)sub_237E47CE0(v17, *(_QWORD *)(i + 56) + v23, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledTask))
  {
    if (v14)
    {
      v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v20 = v19 | (v11 << 6);
      v21 = v37;
      goto LABEL_9;
    }
    v24 = v11 + 1;
    v21 = v37;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v32)
      goto LABEL_23;
    v25 = *(_QWORD *)(v31 + 8 * v24);
    ++v11;
    if (!v25)
    {
      v11 = v24 + 1;
      if (v24 + 1 >= v32)
        goto LABEL_23;
      v25 = *(_QWORD *)(v31 + 8 * v11);
      if (!v25)
        break;
    }
LABEL_22:
    v14 = (v25 - 1) & v25;
    v20 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_9:
    v22 = *(_QWORD *)(v3 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v16, *(_QWORD *)(v21 + 48) + v22, v15);
    v23 = *(_QWORD *)(v36 + 72) * v20;
    sub_237E21EBC(*(_QWORD *)(v21 + 56) + v23, v17, (uint64_t (*)(_QWORD))type metadata accessor for ScheduledTask);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(i + 48) + v22, v16, v15);
  }
  v26 = v24 + 2;
  if (v26 >= v32)
  {
LABEL_23:
    result = (void *)swift_release();
    v27 = v30;
    v28 = v38;
    goto LABEL_25;
  }
  v25 = *(_QWORD *)(v31 + 8 * v26);
  if (v25)
  {
    v11 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v11 >= v32)
      goto LABEL_23;
    v25 = *(_QWORD *)(v31 + 8 * v11);
    ++v26;
    if (v25)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_237E9E6E0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_237EE1D94();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689B6E0);
  v24 = v0;
  v5 = *v0;
  v6 = sub_237EE30B4();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    result = (void *)swift_retain();
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_237E9E910(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, uint64_t *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  int64_t v38;
  unint64_t v39;
  int64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  int64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;

  v11 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v58 = *(_QWORD *)(v11 - 8);
  v59 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v57 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = a5;
  v65 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v16 = *(_QWORD *)(v65 - 8);
  v17 = MEMORY[0x24BDAC7A8](v65);
  v56 = (uint64_t)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v54 = (uint64_t)&v51 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(a6);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x24BDAC7A8](v20);
  MEMORY[0x24BDAC7A8](v22);
  v64 = (char *)&v51 - v24;
  v25 = *(_QWORD *)(a1 + 64);
  v61 = a1 + 64;
  v26 = 1 << *(_BYTE *)(a1 + 32);
  v66 = v26;
  v27 = -1;
  if (v26 < 64)
    v27 = ~(-1 << v26);
  v28 = v27 & v25;
  v29 = a2 + *(_QWORD *)(*(_QWORD *)a2 + 96);
  v30 = v23;
  v31 = a1;
  swift_bridgeObjectRetain();
  v63 = v29;
  result = swift_beginAccess();
  v33 = 0;
  v62 = (unint64_t)(v66 + 63) >> 6;
  v55 = v16;
  v52 = v31;
  v53 = v15;
  while (1)
  {
    if (v28)
    {
      v36 = __clz(__rbit64(v28));
      v28 &= v28 - 1;
      v66 = v33;
      v37 = v36 | (v33 << 6);
      goto LABEL_24;
    }
    v38 = v33 + 1;
    if (__OFADD__(v33, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v38 >= v62)
      return swift_release();
    v39 = *(_QWORD *)(v61 + 8 * v38);
    v40 = v33 + 1;
    if (!v39)
    {
      v40 = v33 + 2;
      if (v33 + 2 >= v62)
        return swift_release();
      v39 = *(_QWORD *)(v61 + 8 * v40);
      if (!v39)
      {
        v40 = v33 + 3;
        if (v33 + 3 >= v62)
          return swift_release();
        v39 = *(_QWORD *)(v61 + 8 * v40);
        if (!v39)
        {
          v40 = v33 + 4;
          if (v33 + 4 >= v62)
            return swift_release();
          v39 = *(_QWORD *)(v61 + 8 * v40);
          if (!v39)
            break;
        }
      }
    }
LABEL_23:
    v28 = (v39 - 1) & v39;
    v66 = v40;
    v37 = __clz(__rbit64(v39)) + (v40 << 6);
LABEL_24:
    v42 = v64;
    (*(void (**)(char *, unint64_t, uint64_t))(v21 + 16))(v64, *(_QWORD *)(v31 + 56) + *(_QWORD *)(v21 + 72) * v37, v20);
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v30, v42, v20);
    sub_237E22004(v63, (uint64_t)v15, a4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, v65) == 1)
    {
      v34 = (uint64_t)v15;
      v35 = a4;
    }
    else
    {
      v43 = (uint64_t)v15;
      v44 = v30;
      v45 = v54;
      v46 = a4;
      v47 = v60;
      sub_237E21FC0(v43, v54, v60);
      sub_237E22004(v45, v56, v47);
      v48 = v21;
      v49 = v57;
      sub_237EE2C7C();
      v50 = v49;
      v21 = v48;
      (*(void (**)(char *, uint64_t))(v58 + 8))(v50, v59);
      v34 = v45;
      v30 = v44;
      v35 = v47;
      a4 = v46;
      v31 = v52;
      v15 = v53;
      v16 = v55;
    }
    sub_237E2209C(v34, v35);
    v33 = v66;
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v30, v20);
  }
  v41 = v33 + 5;
  if (v33 + 5 >= v62)
    return swift_release();
  v39 = *(_QWORD *)(v61 + 8 * v41);
  if (v39)
  {
    v40 = v33 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    v40 = v41 + 1;
    if (__OFADD__(v41, 1))
      break;
    if (v40 >= v62)
      return swift_release();
    v39 = *(_QWORD *)(v61 + 8 * v40);
    ++v41;
    if (v39)
      goto LABEL_23;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_237E9ED28()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_237E9ED50(uint64_t a1)
{
  return sub_237E9F1F0(a1, (uint64_t)&unk_2509C3998, (uint64_t)&unk_2509C39E8, (uint64_t)sub_237E9ED78, (uint64_t)&block_descriptor_8);
}

uint64_t sub_237E9ED78()
{
  return sub_237E9F910(&qword_25689B6A8, &qword_25689B690, &qword_25689B6B0);
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t sub_237E9EDAC(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t (*a5)(_QWORD), uint64_t *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t (*v45)(_QWORD);
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t (*v50)(_QWORD);
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t (*v60)(_QWORD);
  uint64_t v61;
  int64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;

  v11 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v58 = *(_QWORD *)(v11 - 8);
  v59 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v57 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = a5;
  v65 = a5(0);
  v16 = *(_QWORD *)(v65 - 8);
  v17 = MEMORY[0x24BDAC7A8](v65);
  v56 = (uint64_t)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v54 = (uint64_t)&v51 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(a6);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x24BDAC7A8](v20);
  MEMORY[0x24BDAC7A8](v22);
  v64 = (char *)&v51 - v24;
  v25 = *(_QWORD *)(a1 + 64);
  v61 = a1 + 64;
  v26 = 1 << *(_BYTE *)(a1 + 32);
  v66 = v26;
  v27 = -1;
  if (v26 < 64)
    v27 = ~(-1 << v26);
  v28 = v27 & v25;
  v29 = a2 + *(_QWORD *)(*(_QWORD *)a2 + 96);
  v30 = v23;
  v31 = a1;
  swift_bridgeObjectRetain();
  v63 = v29;
  result = swift_beginAccess();
  v33 = 0;
  v62 = (unint64_t)(v66 + 63) >> 6;
  v55 = v16;
  v52 = v31;
  v53 = v15;
  while (1)
  {
    if (v28)
    {
      v34 = __clz(__rbit64(v28));
      v28 &= v28 - 1;
      v66 = v33;
      v35 = v34 | (v33 << 6);
      goto LABEL_24;
    }
    v36 = v33 + 1;
    if (__OFADD__(v33, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v36 >= v62)
      return swift_release();
    v37 = *(_QWORD *)(v61 + 8 * v36);
    v38 = v33 + 1;
    if (!v37)
    {
      v38 = v33 + 2;
      if (v33 + 2 >= v62)
        return swift_release();
      v37 = *(_QWORD *)(v61 + 8 * v38);
      if (!v37)
      {
        v38 = v33 + 3;
        if (v33 + 3 >= v62)
          return swift_release();
        v37 = *(_QWORD *)(v61 + 8 * v38);
        if (!v37)
        {
          v38 = v33 + 4;
          if (v33 + 4 >= v62)
            return swift_release();
          v37 = *(_QWORD *)(v61 + 8 * v38);
          if (!v37)
            break;
        }
      }
    }
LABEL_23:
    v28 = (v37 - 1) & v37;
    v66 = v38;
    v35 = __clz(__rbit64(v37)) + (v38 << 6);
LABEL_24:
    v40 = v64;
    (*(void (**)(char *, unint64_t, uint64_t))(v21 + 16))(v64, *(_QWORD *)(v31 + 56) + *(_QWORD *)(v21 + 72) * v35, v20);
    (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v30, v40, v20);
    sub_237E22004(v63, (uint64_t)v15, a4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, v65) == 1)
    {
      sub_237E2209C((uint64_t)v15, a4);
    }
    else
    {
      v41 = (uint64_t)v15;
      v42 = v30;
      v43 = v54;
      v44 = a4;
      v45 = v60;
      sub_237E47CE0(v41, v54, v60);
      sub_237E21EBC(v43, v56, v45);
      v46 = v21;
      v47 = v57;
      sub_237EE2C7C();
      v48 = v47;
      v21 = v46;
      (*(void (**)(char *, uint64_t))(v58 + 8))(v48, v59);
      v49 = v43;
      v30 = v42;
      v50 = v45;
      a4 = v44;
      v31 = v52;
      v15 = v53;
      v16 = v55;
      sub_237E21F00(v49, v50);
    }
    v33 = v66;
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v30, v20);
  }
  v39 = v33 + 5;
  if (v33 + 5 >= v62)
    return swift_release();
  v37 = *(_QWORD *)(v61 + 8 * v39);
  if (v37)
  {
    v38 = v33 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    v38 = v39 + 1;
    if (__OFADD__(v39, 1))
      break;
    if (v38 >= v62)
      return swift_release();
    v37 = *(_QWORD *)(v61 + 8 * v38);
    ++v39;
    if (v37)
      goto LABEL_23;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_237E9F1CC(uint64_t a1)
{
  return sub_237E9F1F0(a1, (uint64_t)&unk_2509C3A38, (uint64_t)&unk_2509C3A88, (uint64_t)sub_237E9F268, (uint64_t)&block_descriptor_20);
}

uint64_t sub_237E9F1F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;

  v11 = *(unsigned __int8 *)(*(_QWORD *)(sub_237EE1D94() - 8) + 80);
  return sub_237E9699C(a1, *(_QWORD *)(v5 + 16), v5 + ((v11 + 24) & ~v11), a2, a3, a4, a5);
}

uint64_t sub_237E9F268()
{
  return sub_237E9F910(&qword_25689B6D0, &qword_25689B6C8, &qword_25689B6D8);
}

uint64_t sub_237E9F284(uint64_t a1)
{
  uint64_t v1;

  return sub_237E91858(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_237E9F290(uint64_t a1)
{
  return sub_237E9F1F0(a1, (uint64_t)&unk_2509C3AD8, (uint64_t)&unk_2509C3B28, (uint64_t)sub_237E9F2B8, (uint64_t)&block_descriptor_33);
}

uint64_t sub_237E9F2B8()
{
  return sub_237E9F910(&qword_25689B728, &qword_25689B720, &qword_25689B730);
}

uint64_t sub_237E9F2D4(uint64_t a1, int64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;

  v53 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B790);
  v48 = *(_QWORD *)(v3 - 8);
  v49 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v47 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = &qword_25689C140;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_237EE1D70();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v46 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v45 = (char *)&v41 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B798);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v41 - v19;
  v21 = *(_QWORD *)(a1 + 64);
  v50 = a1 + 64;
  v22 = 1 << *(_BYTE *)(a1 + 32);
  v51 = v22;
  v52 = a1;
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v54 = v23 & v21;
  v24 = v53 + *(_QWORD *)(*(_QWORD *)v53 + 96);
  swift_bridgeObjectRetain();
  result = swift_beginAccess();
  v26 = v54;
  v27 = 0;
  v51 = (unint64_t)(v51 + 63) >> 6;
  v43 = v20;
  v44 = v15;
  v42 = v24;
  while (1)
  {
    if (v26)
    {
      v54 = (v26 - 1) & v26;
      v53 = v27;
      v28 = __clz(__rbit64(v26)) | (v27 << 6);
      goto LABEL_24;
    }
    v29 = v27 + 1;
    if (__OFADD__(v27, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v51)
      return swift_release();
    v30 = *(_QWORD *)(v50 + 8 * v29);
    v31 = v27 + 1;
    if (!v30)
    {
      v31 = v27 + 2;
      if (v27 + 2 >= v51)
        return swift_release();
      v30 = *(_QWORD *)(v50 + 8 * v31);
      if (!v30)
      {
        v31 = v27 + 3;
        if (v27 + 3 >= v51)
          return swift_release();
        v30 = *(_QWORD *)(v50 + 8 * v31);
        if (!v30)
        {
          v31 = v27 + 4;
          if (v27 + 4 >= v51)
            return swift_release();
          v30 = *(_QWORD *)(v50 + 8 * v31);
          if (!v30)
            break;
        }
      }
    }
LABEL_23:
    v54 = (v30 - 1) & v30;
    v53 = v31;
    v28 = __clz(__rbit64(v30)) + (v31 << 6);
LABEL_24:
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v20, *(_QWORD *)(v52 + 56) + *(_QWORD *)(v15 + 72) * v28, v14);
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v20, v14);
    sub_237E22004(v24, (uint64_t)v8, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_237E2209C((uint64_t)v8, v5);
    }
    else
    {
      v33 = v45;
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v45, v8, v9);
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v46, v33, v9);
      v34 = v8;
      v35 = v9;
      v36 = v10;
      v37 = v5;
      v38 = v47;
      sub_237EE2C7C();
      v24 = v42;
      v39 = v38;
      v5 = v37;
      v10 = v36;
      v9 = v35;
      v8 = v34;
      v15 = v44;
      (*(void (**)(char *, uint64_t))(v48 + 8))(v39, v49);
      v40 = v33;
      v20 = v43;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v40, v9);
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v27 = v53;
    v26 = v54;
  }
  v32 = v27 + 5;
  if (v27 + 5 >= v51)
    return swift_release();
  v30 = *(_QWORD *)(v50 + 8 * v32);
  if (v30)
  {
    v31 = v27 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    v31 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v31 >= v51)
      return swift_release();
    v30 = *(_QWORD *)(v50 + 8 * v31);
    ++v32;
    if (v30)
      goto LABEL_23;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_237E9F710(uint64_t a1)
{
  uint64_t v1;

  return sub_237E91290(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_237E9F71C(uint64_t a1)
{
  return sub_237E9F1F0(a1, (uint64_t)&unk_2509C3B78, (uint64_t)&unk_2509C3BC8, (uint64_t)sub_237E9F744, (uint64_t)&block_descriptor_46);
}

uint64_t sub_237E9F744()
{
  return sub_237E9F910(&qword_25689B7B8, &qword_25689B778, &qword_25689B7C0);
}

uint64_t sub_237E9F760(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_237E9F7A4(uint64_t a1)
{
  uint64_t v1;

  return sub_237E9248C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_237E9F7AC()
{
  return objectdestroy_49Tm();
}

uint64_t sub_237E9F7B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 40);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_237E20844;
  return sub_237EA300C(a1, v4, v5, v6, v7);
}

uint64_t sub_237E9F834(uint64_t a1)
{
  return sub_237E9F1F0(a1, (uint64_t)&unk_2509C3C40, (uint64_t)&unk_2509C3C90, (uint64_t)sub_237E9F85C, (uint64_t)&block_descriptor_64);
}

uint64_t sub_237E9F85C()
{
  return sub_237E9F910(&qword_25689B808, &qword_25689B798, &qword_25689B810);
}

uint64_t sub_237E9F87C(uint64_t a1)
{
  return sub_237E9F1F0(a1, (uint64_t)&unk_2509C3CE0, (uint64_t)&unk_2509C3D30, (uint64_t)sub_237E9F8A4, (uint64_t)&block_descriptor_77);
}

uint64_t sub_237E9F8A4()
{
  return sub_237E9F910(&qword_25689B850, &qword_25689B848, &qword_25689B858);
}

uint64_t sub_237E9F8C0(uint64_t a1)
{
  uint64_t v1;

  return sub_237E921A8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_237E9F8CC(uint64_t a1)
{
  return sub_237E9F1F0(a1, (uint64_t)&unk_2509C3D80, (uint64_t)&unk_2509C3DD0, (uint64_t)sub_237E9F8F4, (uint64_t)&block_descriptor_90);
}

uint64_t sub_237E9F8F4()
{
  return sub_237E9F910(&qword_25689B890, &qword_25689B888, &qword_25689B898);
}

uint64_t sub_237E9F910(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(sub_237EE1D94() - 8) + 80);
  return sub_237E96D44(*(_QWORD *)(v3 + 16), v3 + ((v7 + 24) & ~v7), a1, a2, a3);
}

uint64_t sub_237E9F96C(uint64_t a1)
{
  uint64_t v1;

  return sub_237E91CCC(a1, *(_QWORD *)(v1 + 16), *(uint64_t **)(v1 + 24));
}

uint64_t sub_237E9F974(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_237E9F988(uint64_t a1)
{
  return sub_237E9F1F0(a1, (uint64_t)&unk_2509C3E20, (uint64_t)&unk_2509C3E70, (uint64_t)sub_237E9F9B0, (uint64_t)&block_descriptor_103);
}

uint64_t sub_237E9F9B0()
{
  return sub_237E9FAF4(sub_237E96FD8);
}

uint64_t sub_237E9F9BC(uint64_t a1)
{
  uint64_t v1;

  return sub_237E91B3C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_237E9F9C4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_237E9FA08()
{
  return objectdestroy_49Tm();
}

uint64_t objectdestroy_49Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_237E9FA4C(uint64_t a1)
{
  return sub_237E9F1F0(a1, (uint64_t)&unk_2509C3F10, (uint64_t)&unk_2509C3F60, (uint64_t)sub_237E9FAE8, (uint64_t)&block_descriptor_123);
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_237EE1D94();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_237E9FAE8()
{
  return sub_237E9FAF4(sub_237E96E98);
}

uint64_t sub_237E9FAF4(uint64_t (*a1)(_QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_237EE1D94() - 8) + 80);
  return a1(*(_QWORD *)(v1 + 16), v1 + ((v2 + 24) & ~v2));
}

uint64_t sub_237E9FB34()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_237E9FB3C(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_237E9FB7C + 4 * byte_237EEB7CA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_237E9FB9C + 4 * byte_237EEB7CF[v4]))();
}

_BYTE *sub_237E9FB7C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_237E9FB9C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_237E9FBA4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_237E9FBAC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_237E9FBB4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_237E9FBBC(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for ObservationStreamCollection.ObservationError()
{
  JUMPOUT(0x23B827140);
}

void sub_237E9FBD4()
{
  JUMPOUT(0x23B8271D0);
}

uint64_t sub_237E9FC4C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  _QWORD *v16;
  uint64_t v17;
  void *v18;
  _QWORD aBlock[6];

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25689C1A0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)aBlock - v10;
  if (objc_msgSend((id)objc_opt_self(), sel_isMainThread))
    return a1();
  v13 = type metadata accessor for TimeString(0);
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v11, 1, 1, v13);
  sub_237E74A2C(0, (unint64_t *)&qword_25689C150);
  v15 = sub_237EE2DFC();
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = v11;
  v16[3] = a1;
  v16[4] = a2;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = sub_237EAA0F0;
  *(_QWORD *)(v17 + 24) = v16;
  aBlock[4] = sub_237EAA578;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_237ED10FC;
  aBlock[3] = &block_descriptor_32;
  v18 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  dispatch_sync(v15, v18);

  _Block_release(v18);
  LOBYTE(v18) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v18 & 1) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  sub_237E22004((uint64_t)v11, (uint64_t)v9, (uint64_t *)&unk_25689C1A0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13);
  if ((_DWORD)result == 1)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  sub_237E47CE0((uint64_t)v9, a3, type metadata accessor for TimeString);
  sub_237E2209C((uint64_t)v11, (uint64_t *)&unk_25689C1A0);
  return swift_release();
}

uint64_t sub_237E9FEAC(void (*a1)(_QWORD *__return_ptr), uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  void *v8;
  char v9;
  _QWORD aBlock[6];
  __int16 v11;

  if (objc_msgSend((id)objc_opt_self(), sel_isMainThread))
  {
    a1(aBlock);
    return LOBYTE(aBlock[0]);
  }
  v11 = 256;
  sub_237E74A2C(0, (unint64_t *)&qword_25689C150);
  v5 = sub_237EE2DFC();
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = &v11;
  v6[3] = a1;
  v6[4] = a2;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_237EA9EB0;
  *(_QWORD *)(v7 + 24) = v6;
  aBlock[4] = sub_237E23C80;
  aBlock[5] = v7;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_237ED10FC;
  aBlock[3] = &block_descriptor_9;
  v8 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  dispatch_sync((dispatch_queue_t)v5, v8);

  _Block_release(v8);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v5 & 1) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if ((v11 & 0x100) != 0)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  v9 = v11;
  swift_release();
  return v9 & 1;
}

uint64_t sub_237EA0048(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25689C1A0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(v5);
  v8 = type metadata accessor for TimeString(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 0, 1, v8);
  return sub_237E9F9C4((uint64_t)v7, a1, (uint64_t *)&unk_25689C1A0);
}

uint64_t sub_237EA00F8()
{
  sub_237EE3264();
  sub_237EE3288();
  return sub_237EE3294();
}

void sub_237EA0148(char a1)
{
  sub_237EE3264();
  __asm { BR              X10 }
}

uint64_t sub_237EA01A4()
{
  sub_237EE2ACC();
  swift_bridgeObjectRelease();
  return sub_237EE3294();
}

void sub_237EA021C(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  int64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;

  v45 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C170);
  v44 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for TextClockDescriptor(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C1B0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C188);
  v12 = *(_QWORD *)(v46 - 8);
  v13 = MEMORY[0x24BDAC7A8](v46);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *v1;
  v16 = v1[1];
  v19 = v1[2];
  v18 = v1[3];
  v20 = v18;
  v21 = v1[4];
  v40 = v15;
  v41 = v4;
  v47 = v19;
  if (v21)
  {
    v42 = v2;
    v43 = v16;
    v22 = v12;
    v23 = (v21 - 1) & v21;
    v24 = __clz(__rbit64(v21)) | (v18 << 6);
LABEL_3:
    sub_237E21EBC(*(_QWORD *)(v17 + 48) + *(_QWORD *)(v6 + 72) * v24, (uint64_t)v8, type metadata accessor for TextClockDescriptor);
    v25 = *(void **)(*(_QWORD *)(v17 + 56) + 8 * v24);
    v26 = *(int *)(v46 + 48);
    v27 = (uint64_t)v8;
    v28 = v46;
    sub_237E47CE0(v27, (uint64_t)v11, type metadata accessor for TextClockDescriptor);
    *(_QWORD *)&v11[v26] = v25;
    v12 = v22;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v11, 0, 1, v28);
    v29 = v25;
    v2 = v42;
    v16 = v43;
    goto LABEL_23;
  }
  v30 = v18 + 1;
  if (__OFADD__(v18, 1))
  {
LABEL_29:
    __break(1u);
    return;
  }
  v31 = (unint64_t)(v19 + 64) >> 6;
  if (v30 < v31)
  {
    v32 = *(_QWORD *)(v16 + 8 * v30);
    if (v32)
    {
LABEL_7:
      v42 = v2;
      v43 = v16;
      v22 = v12;
      v23 = (v32 - 1) & v32;
      v24 = __clz(__rbit64(v32)) + (v30 << 6);
      v20 = v30;
      goto LABEL_3;
    }
    v33 = v18 + 2;
    v20 = v18 + 1;
    if (v18 + 2 < v31)
    {
      v32 = *(_QWORD *)(v16 + 8 * v33);
      if (v32)
      {
LABEL_10:
        v30 = v33;
        goto LABEL_7;
      }
      v20 = v18 + 2;
      if (v18 + 3 < v31)
      {
        v32 = *(_QWORD *)(v16 + 8 * (v18 + 3));
        if (v32)
        {
          v30 = v18 + 3;
          goto LABEL_7;
        }
        v33 = v18 + 4;
        v20 = v18 + 3;
        if (v18 + 4 < v31)
        {
          v32 = *(_QWORD *)(v16 + 8 * v33);
          if (v32)
            goto LABEL_10;
          v30 = v18 + 5;
          v20 = v18 + 4;
          if (v18 + 5 < v31)
          {
            v32 = *(_QWORD *)(v16 + 8 * v30);
            if (v32)
              goto LABEL_7;
            v20 = v31 - 1;
            v34 = v18 + 6;
            while (v31 != v34)
            {
              v32 = *(_QWORD *)(v16 + 8 * v34++);
              if (v32)
              {
                v30 = v34 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  v28 = v46;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v12 + 56))(v11, 1, 1, v46, v13);
  v23 = 0;
LABEL_23:
  *v1 = v17;
  v1[1] = v16;
  v1[2] = v47;
  v1[3] = v20;
  v1[4] = v23;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v28) == 1)
  {
    sub_237E2209C((uint64_t)v11, &qword_25689C1B0);
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v44 + 56))(v45, 1, 1, v2);
    return;
  }
  v35 = (uint64_t)v40;
  sub_237E21FC0((uint64_t)v11, (uint64_t)v40, &qword_25689C188);
  v36 = (uint64_t)&v41[*(int *)(v2 + 48)];
  v37 = v1[5];
  sub_237E21FC0(v35, v36, &qword_25689C188);
  if (__OFADD__(v37, 1))
  {
    __break(1u);
    goto LABEL_29;
  }
  v1[5] = v37 + 1;
  v38 = v45;
  v39 = (uint64_t)v45 + *(int *)(v2 + 48);
  *v45 = v37;
  sub_237E21FC0(v36, v39, &qword_25689C188);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v38, 0, 1, v2);
}

void sub_237EA05C0(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(_QWORD *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;

  v20 = a3;
  v27 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C170);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C160);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = -1 << *(_BYTE *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 64);
  v13 = ~v11;
  v14 = -v11;
  v21 = a1;
  v22 = a1 + 64;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  else
    v15 = -1;
  v23 = v13;
  v24 = 0;
  v25 = v15 & v12;
  v26 = 0;
  swift_bridgeObjectRetain();
  sub_237EA021C(v10);
  v19 = v5;
  v16 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v5 + 48);
  if (v16(v10, 1, v4) == 1)
  {
LABEL_7:
    sub_237E24AD8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v20, 1, 1, v4);
  }
  else
  {
    while (1)
    {
      sub_237E21FC0((uint64_t)v10, (uint64_t)v7, &qword_25689C170);
      sub_237E74A2C(0, (unint64_t *)&qword_25689D9D0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_25689C188);
      if ((sub_237EE2EB0() & 1) != 0)
        break;
      sub_237E2209C((uint64_t)v7, &qword_25689C170);
      sub_237EA021C(v10);
      if (v16(v10, 1, v4) == 1)
        goto LABEL_7;
    }
    sub_237E24AD8();
    v17 = v20;
    sub_237E21FC0((uint64_t)v7, v20, &qword_25689C170);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v4);
  }

}

uint64_t sub_237EA07F0(void (*a1)(char *, uint64_t))
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  char v19[24];

  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v3);
  swift_endAccess();
  swift_beginAccess();
  v4 = *(_QWORD *)(v1 + 24);
  v5 = v4 + 64;
  v6 = -1 << *(_BYTE *)(v4 + 32);
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v4 + 64);
  v9 = (unint64_t)(63 - v6) >> 6;
  result = swift_bridgeObjectRetain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v13 = v12 | (v11 << 6);
      goto LABEL_6;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_24;
    }
    if (v15 >= v9)
      goto LABEL_22;
    v16 = *(_QWORD *)(v5 + 8 * v15);
    v17 = v11 + 1;
    if (!v16)
    {
      v17 = v11 + 2;
      if (v11 + 2 >= v9)
        goto LABEL_22;
      v16 = *(_QWORD *)(v5 + 8 * v17);
      if (!v16)
      {
        v17 = v11 + 3;
        if (v11 + 3 >= v9)
          goto LABEL_22;
        v16 = *(_QWORD *)(v5 + 8 * v17);
        if (!v16)
          break;
      }
    }
LABEL_21:
    v8 = (v16 - 1) & v16;
    v13 = __clz(__rbit64(v16)) + (v17 << 6);
    v11 = v17;
LABEL_6:
    v14 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v13);
    v19[0] = *(_BYTE *)(*(_QWORD *)(v4 + 48) + v13);
    swift_retain();
    a1(v19, v14);
    result = swift_release();
  }
  v18 = v11 + 4;
  if (v11 + 4 >= v9)
  {
LABEL_22:
    sub_237E24AD8();
    swift_beginAccess();
    os_unfair_lock_unlock(v3);
    return swift_endAccess();
  }
  v16 = *(_QWORD *)(v5 + 8 * v18);
  if (v16)
  {
    v17 = v11 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    v17 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v17 >= v9)
      goto LABEL_22;
    v16 = *(_QWORD *)(v5 + 8 * v17);
    ++v18;
    if (v16)
      goto LABEL_21;
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_237EA09E4(uint64_t a1, char a2)
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  os_unfair_lock_s *v10;

  v5 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 16) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v5);
  swift_endAccess();
  swift_beginAccess();
  v6 = *(_QWORD *)(v2 + 24);
  if (*(_QWORD *)(v6 + 16) && (v7 = sub_237EAD898(a2), (v8 & 1) != 0))
  {
    v9 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v7);
    v10 = (os_unfair_lock_s *)(*(_QWORD *)(v9 + *(_QWORD *)(*(_QWORD *)v9 + 104)) + 16);
    swift_beginAccess();
    swift_retain();
    os_unfair_lock_lock(v10);
    swift_endAccess();
    sub_237E94C38(a1);
    swift_beginAccess();
    os_unfair_lock_unlock(v10);
    swift_endAccess();
    swift_release();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25689C1D0);
    sub_237E22690(&qword_25689C1D8, &qword_25689C1D0, (uint64_t)&unk_237EEB930);
    swift_allocError();
    swift_willThrow();
  }
  swift_beginAccess();
  os_unfair_lock_unlock(v5);
  return swift_endAccess();
}

uint64_t sub_237EA0B68(uint64_t a1, double *a2)
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  os_unfair_lock_s *v10;

  v5 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 16) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v5);
  swift_endAccess();
  swift_beginAccess();
  v6 = *(_QWORD *)(v2 + 24);
  if (!*(_QWORD *)(v6 + 16))
    goto LABEL_5;
  swift_bridgeObjectRetain();
  v7 = sub_237EAD420(a2);
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    __swift_instantiateConcreteTypeFromMangledName(&qword_25689C190);
    sub_237E22690(&qword_25689C198, &qword_25689C190, (uint64_t)&unk_237EEB930);
    swift_allocError();
    swift_willThrow();
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v7);
  swift_retain();
  swift_bridgeObjectRelease();
  v10 = (os_unfair_lock_s *)(*(_QWORD *)(v9 + *(_QWORD *)(*(_QWORD *)v9 + 104)) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v10);
  swift_endAccess();
  sub_237E92A50(a1);
  swift_beginAccess();
  os_unfair_lock_unlock(v10);
  swift_endAccess();
  swift_release();
LABEL_6:
  swift_beginAccess();
  os_unfair_lock_unlock(v5);
  return swift_endAccess();
}

BOOL static ClockTimeInterval.< infix(_:_:)(char *a1, char *a2)
{
  return dbl_237EEC168[*a1] < dbl_237EEC168[*a2];
}

double ClockTimeInterval.rawValue.getter()
{
  char *v0;

  return dbl_237EEC168[*v0];
}

ClockPoster::ClockTimeInterval_optional __swiftcall ClockTimeInterval.init(rawValue:)(Swift::Double rawValue)
{
  char *v1;
  char v2;
  char v3;
  ClockPoster::ClockTimeInterval_optional result;

  if (rawValue == 0.01666)
  {
    *v1 = 0;
  }
  else
  {
    if (rawValue == 60.0)
      v2 = 2;
    else
      v2 = 3;
    if (rawValue == 1.0)
      v3 = 1;
    else
      v3 = v2;
    *v1 = v3;
  }
  return result;
}

void *static ClockTimeInterval.allCases.getter()
{
  return &unk_2509BEAB8;
}

BOOL sub_237EA0D94(char *a1, char *a2)
{
  return dbl_237EEC168[*a1] == dbl_237EEC168[*a2];
}

uint64_t sub_237EA0DB8()
{
  return sub_237EA00F8();
}

uint64_t sub_237EA0DC0()
{
  return sub_237EE3288();
}

uint64_t sub_237EA0DF4()
{
  return sub_237E8EA4C();
}

ClockPoster::ClockTimeInterval_optional sub_237EA0DFC(Swift::Double *a1)
{
  return ClockTimeInterval.init(rawValue:)(*a1);
}

double sub_237EA0E04@<D0>(double *a1@<X8>)
{
  char *v1;
  double result;

  result = dbl_237EEC168[*v1];
  *a1 = result;
  return result;
}

void sub_237EA0E1C(_QWORD *a1@<X8>)
{
  *a1 = &unk_2509BEAE0;
}

BOOL sub_237EA0E2C(char *a1, char *a2)
{
  return dbl_237EEC168[*a1] < dbl_237EEC168[*a2];
}

BOOL sub_237EA0E50(char *a1, char *a2)
{
  return dbl_237EEC168[*a2] >= dbl_237EEC168[*a1];
}

BOOL sub_237EA0E74(char *a1, char *a2)
{
  return dbl_237EEC168[*a1] >= dbl_237EEC168[*a2];
}

BOOL sub_237EA0E98(char *a1, char *a2)
{
  return dbl_237EEC168[*a2] < dbl_237EEC168[*a1];
}

uint64_t sub_237EA0EBC()
{
  char *v0;

  return sub_237E271AC(*v0);
}

uint64_t OverrideTime.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_237EE1D70();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t OverrideTime.date.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_237EE1D70();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*OverrideTime.date.modify())()
{
  return CGSizeMake;
}

__n128 OverrideTime.advancingRate.getter@<Q0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __n128 result;
  __int128 v5;

  v3 = v1 + *(int *)(type metadata accessor for OverrideTime(0) + 20);
  result = *(__n128 *)v3;
  v5 = *(_OWORD *)(v3 + 16);
  *a1 = *(_OWORD *)v3;
  a1[1] = v5;
  return result;
}

uint64_t type metadata accessor for OverrideTime(uint64_t a1)
{
  return sub_237E42BC0(a1, qword_25689BAB0);
}

__n128 OverrideTime.advancingRate.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  __n128 *v4;
  __n128 result;
  __n128 v6;

  v6 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  v4 = (__n128 *)(v1 + *(int *)(type metadata accessor for OverrideTime(0) + 20));
  result = v6;
  *v4 = v6;
  v4[1].n128_u64[0] = v2;
  v4[1].n128_u64[1] = v3;
  return result;
}

double (*OverrideTime.advancingRate.modify())(double, double)
{
  type metadata accessor for OverrideTime(0);
  return CGSizeMake;
}

uint64_t OverrideTime.AdvancingRate.offset.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t OverrideTime.AdvancingRate.offset.setter(uint64_t result, uint64_t a2)
{
  _QWORD *v2;

  *v2 = result;
  v2[1] = a2;
  return result;
}

uint64_t (*OverrideTime.AdvancingRate.offset.modify())()
{
  return CGSizeMake;
}

uint64_t OverrideTime.AdvancingRate.interval.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t OverrideTime.AdvancingRate.interval.setter(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*OverrideTime.AdvancingRate.interval.modify())()
{
  return CGSizeMake;
}

uint64_t OverrideTime.AdvancingRate.init(offset:interval:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

Swift::Void __swiftcall OverrideTime.AdvancingRate.pause()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 16) = sub_237EE330C();
  *(_QWORD *)(v0 + 24) = v1;
}

uint64_t static OverrideTime.AdvancingRate.paused.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v2 = sub_237EE330C();
  v4 = v3;
  result = sub_237EE330C();
  *a1 = v2;
  a1[1] = v4;
  a1[2] = result;
  a1[3] = v6;
  return result;
}

uint64_t static OverrideTime.AdvancingRate.== infix(_:_:)()
{
  if ((sub_237EE3300() & 1) != 0)
    return sub_237EE3300();
  else
    return 0;
}

uint64_t sub_237EA1108()
{
  _BYTE *v0;

  if (*v0)
    return 0x6C61767265746E69;
  else
    return 0x74657366666FLL;
}

uint64_t sub_237EA1140@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237EA9BEC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237EA1164()
{
  sub_237EA130C();
  return sub_237EE3324();
}

uint64_t sub_237EA118C()
{
  sub_237EA130C();
  return sub_237EE3330();
}

uint64_t OverrideTime.AdvancingRate.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B998);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v7 = v1[1];
  v9 = v1[2];
  v13 = v1[3];
  v14 = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_237EA130C();
  sub_237EE32DC();
  v16 = v8;
  v17 = v7;
  v18 = 0;
  v10 = v15;
  sub_237EE3168();
  if (!v10)
  {
    v16 = v14;
    v17 = v13;
    v18 = 1;
    sub_237EE3168();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_237EA130C()
{
  unint64_t result;

  result = qword_25689B9A0;
  if (!qword_25689B9A0)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEC0FC, &type metadata for OverrideTime.AdvancingRate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25689B9A0);
  }
  return result;
}

uint64_t OverrideTime.AdvancingRate.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v12;
  char v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B9A8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_237EA130C();
  sub_237EE32D0();
  if (!v2)
  {
    v13 = 0;
    sub_237EE312C();
    v9 = v12;
    v13 = 1;
    sub_237EE312C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v10 = v12;
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_237EA14D0@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return OverrideTime.AdvancingRate.init(from:)(a1, a2);
}

uint64_t sub_237EA14E4(_QWORD *a1)
{
  return OverrideTime.AdvancingRate.encode(to:)(a1);
}

uint64_t sub_237EA14F8()
{
  if ((sub_237EE3300() & 1) != 0)
    return sub_237EE3300();
  else
    return 0;
}

__n128 OverrideTime.init(date:advancingRate:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __n128 *v8;
  __n128 result;
  __n128 v10;

  v10 = *a2;
  v5 = a2[1].n128_u64[0];
  v6 = a2[1].n128_u64[1];
  v7 = sub_237EE1D70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a3, a1, v7);
  v8 = (__n128 *)(a3 + *(int *)(type metadata accessor for OverrideTime(0) + 20));
  result = v10;
  *v8 = v10;
  v8[1].n128_u64[0] = v5;
  v8[1].n128_u64[1] = v6;
  return result;
}

BOOL static OverrideTime.== infix(_:_:)()
{
  _BOOL8 result;

  result = 0;
  if ((sub_237EE1D28() & 1) != 0)
  {
    type metadata accessor for OverrideTime(0);
    if ((sub_237EE3300() & 1) != 0 && (sub_237EE3300() & 1) != 0)
      return 1;
  }
  return result;
}

uint64_t sub_237EA1654()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E69636E61766461;
  else
    return 1702125924;
}

uint64_t sub_237EA1694@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_237EA9CD4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_237EA16B8()
{
  sub_237EA1874();
  return sub_237EE3324();
}

uint64_t sub_237EA16E0()
{
  sub_237EA1874();
  return sub_237EE3330();
}

uint64_t OverrideTime.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  __int128 *v9;
  __int128 v10;
  _BYTE v12[16];
  __int128 v13;
  __int128 v14;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B9B0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_237EA1874();
  sub_237EE32DC();
  LOBYTE(v13) = 0;
  sub_237EE1D70();
  sub_237E20E98(&qword_25689B9C0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  sub_237EE3168();
  if (!v2)
  {
    v9 = (__int128 *)(v3 + *(int *)(type metadata accessor for OverrideTime(0) + 20));
    v10 = v9[1];
    v13 = *v9;
    v14 = v10;
    v12[15] = 1;
    sub_237EA18B8();
    sub_237EE3168();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_237EA1874()
{
  unint64_t result;

  result = qword_25689B9B8;
  if (!qword_25689B9B8)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEC0AC, &type metadata for OverrideTime.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25689B9B8);
  }
  return result;
}

unint64_t sub_237EA18B8()
{
  unint64_t result;

  result = qword_25689B9C8;
  if (!qword_25689B9C8)
  {
    result = MEMORY[0x23B8271D0](&protocol conformance descriptor for OverrideTime.AdvancingRate, &type metadata for OverrideTime.AdvancingRate);
    atomic_store(result, (unint64_t *)&qword_25689B9C8);
  }
  return result;
}

uint64_t OverrideTime.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _OWORD *v16;
  __int128 v17;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  char v29;

  v22 = a2;
  v26 = sub_237EE1D70();
  v23 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v24 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B9D0);
  v5 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for OverrideTime(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_237EA1874();
  sub_237EE32D0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v20 = a1;
  v21 = v5;
  v11 = (uint64_t)v10;
  v12 = v23;
  LOBYTE(v27) = 0;
  sub_237E20E98(&qword_25689B9D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  v14 = v24;
  v13 = v25;
  v15 = v26;
  sub_237EE312C();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v11, v14, v15);
  v29 = 1;
  sub_237EA1B98();
  sub_237EE312C();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v13);
  v16 = (_OWORD *)(v11 + *(int *)(v8 + 20));
  v17 = v28;
  *v16 = v27;
  v16[1] = v17;
  sub_237E21EBC(v11, v22, type metadata accessor for OverrideTime);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v20);
  return sub_237E21F00(v11, type metadata accessor for OverrideTime);
}

unint64_t sub_237EA1B98()
{
  unint64_t result;

  result = qword_25689B9E0;
  if (!qword_25689B9E0)
  {
    result = MEMORY[0x23B8271D0](&protocol conformance descriptor for OverrideTime.AdvancingRate, &type metadata for OverrideTime.AdvancingRate);
    atomic_store(result, (unint64_t *)&qword_25689B9E0);
  }
  return result;
}

uint64_t sub_237EA1BDC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return OverrideTime.init(from:)(a1, a2);
}

uint64_t sub_237EA1BF0(_QWORD *a1)
{
  return OverrideTime.encode(to:)(a1);
}

BOOL sub_237EA1C04()
{
  return (sub_237EE1D28() & 1) != 0 && (sub_237EE3300() & 1) != 0 && (sub_237EE3300() & 1) != 0;
}

BOOL sub_237EA1C90()
{
  return (_s11ClockPoster10TimeStringV1loiySbAC_ACtFZ_0() & 1) == 0;
}

BOOL sub_237EA1CB8()
{
  return (_s11ClockPoster10TimeStringV1loiySbAC_ACtFZ_0() & 1) == 0;
}

uint64_t sub_237EA1CD4()
{
  return _s11ClockPoster10TimeStringV1loiySbAC_ACtFZ_0();
}

uint64_t sub_237EA1CE4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;

  if (MEMORY[0x23B826C24]("Clock:shared"))
  {
    type metadata accessor for SystemSystemStatusBarOverrideProvider();
    v0 = (_QWORD *)swift_allocObject();
    v0[2] = 0;
    v0[3] = 0;
    v0[4] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEB36D8]), sel_init);
    type metadata accessor for SystemOverrideClock();
    v1 = (_QWORD *)swift_allocObject();
    sub_237EA8350((uint64_t)v0, v1);
    swift_release();
  }
  type metadata accessor for Clock(0);
  v2 = swift_allocObject();
  result = sub_237EA2878();
  qword_25689B990 = v2;
  return result;
}

uint64_t static Clock.shared.getter()
{
  if (qword_256897B48 != -1)
    swift_once();
  return swift_retain();
}

void sub_237EA1DE0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B9E8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v18 - v7;
  v9 = type metadata accessor for OverrideTime(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11ClockPoster5Clock_overrideClock);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v6, 1, 1, v9);
  v14 = (os_unfair_lock_s *)(*(_QWORD *)(v13 + 40) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v14);
  swift_endAccess();
  v15 = v13 + OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC4954213OverrideClock_locked_overrideTime;
  swift_beginAccess();
  sub_237E2209C((uint64_t)v6, &qword_25689B9E8);
  sub_237E22004(v15, (uint64_t)v6, &qword_25689B9E8);
  swift_endAccess();
  swift_beginAccess();
  os_unfair_lock_unlock(v14);
  swift_endAccess();
  sub_237E21FC0((uint64_t)v6, (uint64_t)v8, &qword_25689B9E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_237E2209C((uint64_t)v8, &qword_25689B9E8);
    v16 = objc_msgSend((id)objc_opt_self(), sel_now);
    sub_237EE1D34();

  }
  else
  {
    sub_237E47CE0((uint64_t)v8, (uint64_t)v12, type metadata accessor for OverrideTime);
    v17 = sub_237EE1D70();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(a1, v12, v17);
  }
}

uint64_t sub_237EA2010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v10;

  v0 = sub_237EE1D70();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1500]), sel_init);
  v5 = (void *)sub_237EE2A54();
  objc_msgSend(v4, sel_setDateFormat_, v5);

  sub_237EA1DE0((uint64_t)v3);
  v6 = (void *)sub_237EE1CF8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v7 = objc_msgSend(v4, sel_stringFromDate_, v6);

  v8 = sub_237EE2A84();
  return v8;
}

BOOL sub_237EA2130()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v14;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B9E8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - v5;
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC11ClockPoster5Clock_overrideClock);
  v8 = type metadata accessor for OverrideTime(0);
  v9 = *(_QWORD *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v3, 1, 1, v8);
  v10 = (os_unfair_lock_s *)(*(_QWORD *)(v7 + 40) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v10);
  swift_endAccess();
  v11 = v7 + OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC4954213OverrideClock_locked_overrideTime;
  swift_beginAccess();
  sub_237E2209C((uint64_t)v3, &qword_25689B9E8);
  sub_237E22004(v11, (uint64_t)v3, &qword_25689B9E8);
  swift_endAccess();
  swift_beginAccess();
  os_unfair_lock_unlock(v10);
  swift_endAccess();
  sub_237E21FC0((uint64_t)v3, (uint64_t)v6, &qword_25689B9E8);
  v12 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1;
  sub_237E2209C((uint64_t)v6, &qword_25689B9E8);
  return v12;
}

uint64_t sub_237EA22C4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;

  v3 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC11ClockPoster5Clock_overrideClock);
  v4 = type metadata accessor for OverrideTime(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a2, 1, 1, v4);
  v5 = (os_unfair_lock_s *)(*(_QWORD *)(v3 + 40) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v5);
  swift_endAccess();
  v6 = v3 + OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC4954213OverrideClock_locked_overrideTime;
  swift_beginAccess();
  sub_237E2209C(a2, &qword_25689B9E8);
  sub_237E22004(v6, a2, &qword_25689B9E8);
  swift_endAccess();
  swift_beginAccess();
  os_unfair_lock_unlock(v5);
  return swift_endAccess();
}

uint64_t sub_237EA23C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B9E8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_237E22004(a1, (uint64_t)v4, &qword_25689B9E8);
  return sub_237EA2444((uint64_t)v4);
}

uint64_t sub_237EA2444(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B9E8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v15 - v7;
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11ClockPoster5Clock_overrideClock);
  v10 = type metadata accessor for OverrideTime(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 1, 1, v10);
  v11 = (os_unfair_lock_s *)(*(_QWORD *)(v9 + 40) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v11);
  swift_endAccess();
  v12 = v9 + OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC4954213OverrideClock_locked_overrideTime;
  swift_beginAccess();
  sub_237E2209C((uint64_t)v5, &qword_25689B9E8);
  sub_237E22004(v12, (uint64_t)v5, &qword_25689B9E8);
  swift_endAccess();
  swift_beginAccess();
  os_unfair_lock_unlock(v11);
  swift_endAccess();
  sub_237E21FC0((uint64_t)v5, (uint64_t)v8, &qword_25689B9E8);
  v13 = v1 + OBJC_IVAR____TtC11ClockPoster5Clock_lastOverrideTime;
  swift_beginAccess();
  sub_237E9F9C4((uint64_t)v8, v13, &qword_25689B9E8);
  swift_endAccess();
  sub_237E22004(a1, (uint64_t)v8, &qword_25689B9E8);
  sub_237EA5D5C((uint64_t)v8);
  return sub_237E2209C(a1, &qword_25689B9E8);
}

uint64_t sub_237EA260C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11ClockPoster5Clock_overrideClock);
  v4 = type metadata accessor for OverrideTime(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, 1, 1, v4);
  v5 = (os_unfair_lock_s *)(*(_QWORD *)(v3 + 40) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v5);
  swift_endAccess();
  v6 = v3 + OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC4954213OverrideClock_locked_overrideTime;
  swift_beginAccess();
  sub_237E2209C(a1, &qword_25689B9E8);
  sub_237E22004(v6, a1, &qword_25689B9E8);
  swift_endAccess();
  swift_beginAccess();
  os_unfair_lock_unlock(v5);
  return swift_endAccess();
}

void (*sub_237EA2704(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  uint64_t v10;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25689B9E8) - 8) + 64);
  v5 = malloc(v4);
  v3[10] = v5;
  v6 = malloc(v4);
  v3[11] = v6;
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC11ClockPoster5Clock_overrideClock);
  v8 = type metadata accessor for OverrideTime(0);
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v5, 1, 1, v8);
  v9 = (os_unfair_lock_s *)(*(_QWORD *)(v7 + 40) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v9);
  swift_endAccess();
  v10 = v7 + OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC4954213OverrideClock_locked_overrideTime;
  swift_beginAccess();
  sub_237E2209C((uint64_t)v5, &qword_25689B9E8);
  sub_237E22004(v10, (uint64_t)v5, &qword_25689B9E8);
  swift_endAccess();
  swift_beginAccess();
  os_unfair_lock_unlock(v9);
  swift_endAccess();
  sub_237E21FC0((uint64_t)v5, (uint64_t)v6, &qword_25689B9E8);
  return sub_237EA286C;
}

void sub_237EA286C(uint64_t a1, char a2)
{
  sub_237EA62BC(a1, a2, (void (*)(void *))sub_237EA2444);
}

uint64_t sub_237EA2878()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v32;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897E20);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0 + OBJC_IVAR____TtC11ClockPoster5Clock_lastOverrideTime;
  v6 = type metadata accessor for OverrideTime(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  sub_237EE1D64();
  v7 = OBJC_IVAR____TtC11ClockPoster5Clock_atomicClock;
  type metadata accessor for AtomicClock();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 24) = 0;
  swift_unknownObjectWeakInit();
  v9 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v8 + 32) = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v1 + v7) = v8;
  v10 = OBJC_IVAR____TtC11ClockPoster5Clock_textClock;
  *(_QWORD *)(v1 + v10) = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for TextClock(0)), sel_init);
  v11 = OBJC_IVAR____TtC11ClockPoster5Clock_dateStreamObservers;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689C200);
  v12 = swift_allocObject();
  type metadata accessor for CPUnfairLock();
  v13 = swift_allocObject();
  *(_DWORD *)(v13 + 16) = 0;
  *(_QWORD *)(v12 + 16) = v13;
  *(_QWORD *)(v12 + 24) = v9;
  *(_QWORD *)(v1 + v11) = v12;
  v14 = OBJC_IVAR____TtC11ClockPoster5Clock_textClockStreamObservers;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689C208);
  v15 = swift_allocObject();
  v16 = swift_allocObject();
  *(_DWORD *)(v16 + 16) = 0;
  *(_QWORD *)(v15 + 16) = v16;
  *(_QWORD *)(v15 + 24) = v9;
  *(_QWORD *)(v1 + v14) = v15;
  v17 = OBJC_IVAR____TtC11ClockPoster5Clock__lastOverridePublishTimeByInterval;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689C210);
  v18 = swift_allocObject();
  v19 = swift_allocObject();
  *(_DWORD *)(v19 + 16) = 0;
  *(_QWORD *)(v18 + 16) = v19;
  *(_QWORD *)(v18 + 24) = v9;
  *(_QWORD *)(v1 + v17) = v18;
  v20 = OBJC_IVAR____TtC11ClockPoster5Clock_overrideDateStream;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689C1F0);
  v21 = swift_allocObject();
  v22 = v21 + *(_QWORD *)(*(_QWORD *)v21 + 96);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
  v24 = *(_QWORD *)(*(_QWORD *)v21 + 104);
  v25 = swift_allocObject();
  *(_DWORD *)(v25 + 16) = 0;
  *(_QWORD *)(v21 + v24) = v25;
  *(_QWORD *)(v21 + *(_QWORD *)(*(_QWORD *)v21 + 112)) = v9;
  *(_BYTE *)(v21 + *(_QWORD *)(*(_QWORD *)v21 + 120)) = 0;
  *(_QWORD *)(v1 + v20) = v21;
  type metadata accessor for OverrideClock(0);
  swift_allocObject();
  v26 = swift_retain();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC11ClockPoster5Clock_overrideClock) = sub_237EA6518(v26);
  v27 = sub_237EE2C64();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v4, 1, 1, v27);
  sub_237EE2C4C();
  swift_retain();
  v28 = sub_237EE2C40();
  v29 = (_QWORD *)swift_allocObject();
  v30 = MEMORY[0x24BEE6930];
  v29[2] = v28;
  v29[3] = v30;
  v29[4] = v1;
  sub_237EDA9E4((uint64_t)v4, (uint64_t)&unk_25689C220, (uint64_t)v29);
  swift_release();
  swift_release();
  *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC11ClockPoster5Clock_overrideClock) + 24) = &off_2509C40A0;
  swift_unknownObjectWeakAssign();
  return v1;
}

uint64_t sub_237EA2BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  sub_237EE2C4C();
  *(_QWORD *)(v4 + 24) = sub_237EE2C40();
  sub_237EE2C28();
  return swift_task_switch();
}

uint64_t sub_237EA2C38()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_release();
  *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC11ClockPoster5Clock_atomicClock) + 24) = &off_2509C4080;
  swift_unknownObjectWeakAssign();
  *(_QWORD *)(*(_QWORD *)(v1 + OBJC_IVAR____TtC11ClockPoster5Clock_textClock)
            + OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC495429TextClock_delegate
            + 8) = &off_2509C4090;
  swift_unknownObjectWeakAssign();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_237EA2CB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B9E8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v19 - v8;
  v10 = *(_QWORD *)(a1 + OBJC_IVAR____TtC11ClockPoster5Clock_overrideClock);
  v11 = type metadata accessor for OverrideTime(0);
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v6, 1, 1, v11);
  v13 = (os_unfair_lock_s *)(*(_QWORD *)(v10 + 40) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v13);
  swift_endAccess();
  v14 = v10 + OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC4954213OverrideClock_locked_overrideTime;
  swift_beginAccess();
  sub_237E2209C((uint64_t)v6, &qword_25689B9E8);
  sub_237E22004(v14, (uint64_t)v6, &qword_25689B9E8);
  swift_endAccess();
  swift_beginAccess();
  os_unfair_lock_unlock(v13);
  swift_endAccess();
  sub_237E21FC0((uint64_t)v6, (uint64_t)v9, &qword_25689B9E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
  {
    sub_237E2209C((uint64_t)v9, &qword_25689B9E8);
    v15 = sub_237EE1D70();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a2, 1, 1, v15);
  }
  else
  {
    v17 = sub_237EE1D70();
    v18 = *(_QWORD *)(v17 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v18 + 16))(a2, v9, v17);
    sub_237E2209C((uint64_t)v9, &qword_25689B9E8);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(a2, 0, 1, v17);
  }
}

uint64_t sub_237EA2EC0@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  int v5;

  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC11ClockPoster5Clock_dateStreamObservers);
  v5 = *a1;
  swift_retain();
  return sub_237E97200(v5, v4, v2, v5, a2);
}

void sub_237EA2F10(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897E20);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_237EE2C64();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  sub_237EE2C4C();
  swift_retain();
  v10 = sub_237EE2C40();
  v11 = swift_allocObject();
  v12 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v12;
  *(_QWORD *)(v11 + 32) = a1;
  *(_BYTE *)(v11 + 40) = a2;
  sub_237EDA9E4((uint64_t)v8, (uint64_t)&unk_25689B800, v11);
  swift_release();
  sub_237EA1DE0(a3);
}

uint64_t sub_237EA300C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  *(_BYTE *)(v5 + 32) = a5;
  *(_QWORD *)(v5 + 16) = a4;
  sub_237EE2C4C();
  *(_QWORD *)(v5 + 24) = sub_237EE2C40();
  sub_237EE2C28();
  return swift_task_switch();
}

uint64_t sub_237EA307C()
{
  uint64_t v0;
  unsigned __int8 v1;
  unsigned __int8 v3;

  v1 = *(_BYTE *)(v0 + 32);
  swift_release();
  v3 = v1;
  sub_237EA3A90(&v3);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_237EA30D0@<X0>(double *a1@<X1>, uint64_t a2@<X8>)
{
  return sub_237EA4C74(a1, a2);
}

uint64_t Clock.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_237E2209C(v0 + OBJC_IVAR____TtC11ClockPoster5Clock_lastOverrideTime, &qword_25689B9E8);
  v1 = v0 + OBJC_IVAR____TtC11ClockPoster5Clock_dateInited;
  v2 = sub_237EE1D70();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t Clock.__deallocating_deinit()
{
  Clock.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_237EA31EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v5 + 56) = a5;
  *(_QWORD *)(v5 + 16) = a4;
  v6 = sub_237EE1D70();
  *(_QWORD *)(v5 + 24) = v6;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 40) = swift_task_alloc();
  sub_237EE2C4C();
  *(_QWORD *)(v5 + 48) = sub_237EE2C40();
  sub_237EE2C28();
  return swift_task_switch();
}

uint64_t sub_237EA3284()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  id v5;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(_BYTE *)(v0 + 56);
  swift_release();
  v5 = objc_msgSend((id)objc_opt_self(), sel_now);
  sub_237EE1D34();

  sub_237EA09E4(v1, v4);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_237EA334C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  return swift_task_switch();
}

uint64_t sub_237EA3368()
{
  uint64_t v0;

  sub_237EA0B68(*(_QWORD *)(v0 + 24), *(double **)(v0 + 32));
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_237EA33C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  os_unfair_lock_s *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = a2;
  v15 = a1;
  v16 = a3;
  sub_237EA07F0((void (*)(char *, uint64_t))sub_237EAA294);
  v9 = (os_unfair_lock_s *)(*(_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC11ClockPoster5Clock_overrideDateStream)
                                      + *(_QWORD *)(**(_QWORD **)(a1
                                                                + OBJC_IVAR____TtC11ClockPoster5Clock_overrideDateStream)
                                                  + 104))
                          + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v9);
  swift_endAccess();
  sub_237E934B0(a2);
  swift_beginAccess();
  os_unfair_lock_unlock(v9);
  swift_endAccess();
  v10 = *(_QWORD *)(a1 + OBJC_IVAR____TtC11ClockPoster5Clock_textClock);
  sub_237E22004(a2, (uint64_t)v8, &qword_25689C140);
  v11 = v10 + OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC495429TextClock_overrideDate;
  swift_beginAccess();
  sub_237E47284((uint64_t)v8, v11, &qword_25689C140);
  swift_endAccess();
  sub_237EA44D8();
  return sub_237E2209C((uint64_t)v8, &qword_25689C140);
}

uint64_t sub_237EA3530(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  os_unfair_lock_s *v26;
  uint64_t v27;
  uint64_t v28;
  os_unfair_lock_s *v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  int v34;
  uint64_t v35;
  double v36;
  double v37;
  uint64_t v38;
  double v39;
  double v40;
  int v41;
  char v42;
  double v43;
  uint64_t v45;
  os_unfair_lock_s *v46;
  uint64_t v47;
  os_unfair_lock_s *v48;
  uint64_t v49;
  uint64_t v50;
  os_unfair_lock_s *v51;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  int v58;
  uint64_t v59;

  v56 = a5;
  v57 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v53 - v12;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v53 - v15;
  v17 = sub_237EE1D70();
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v53 - v21;
  v58 = *a1;
  v24 = v23;
  sub_237E22004(a3, (uint64_t)v16, &qword_25689C140);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  if (v25(v16, 1, v17) == 1)
  {
    sub_237E2209C((uint64_t)v16, &qword_25689C140);
    if (qword_256897B48 != -1)
      swift_once();
    sub_237EA1DE0((uint64_t)v19);
    v26 = (os_unfair_lock_s *)(*(_QWORD *)(v57 + *(_QWORD *)(*(_QWORD *)v57 + 104)) + 16);
    swift_beginAccess();
    os_unfair_lock_lock(v26);
    swift_endAccess();
    sub_237E94C38((uint64_t)v19);
    swift_beginAccess();
    os_unfair_lock_unlock(v26);
    swift_endAccess();
    v22 = v19;
  }
  else
  {
    v55 = v10;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v22, v16, v17);
    v27 = v24;
    v53 = OBJC_IVAR____TtC11ClockPoster5Clock__lastOverridePublishTimeByInterval;
    v54 = a4;
    v28 = *(_QWORD *)(a4 + OBJC_IVAR____TtC11ClockPoster5Clock__lastOverridePublishTimeByInterval);
    v29 = (os_unfair_lock_s *)(*(_QWORD *)(v28 + 16) + 16);
    swift_beginAccess();
    swift_retain();
    os_unfair_lock_lock(v29);
    swift_beginAccess();
    v30 = *(_QWORD *)(v28 + 24);
    swift_bridgeObjectRetain();
    os_unfair_lock_unlock(v29);
    swift_endAccess();
    swift_release();
    if (*(_QWORD *)(v30 + 16))
    {
      v31 = sub_237EAD898(v58);
      v24 = v27;
      if ((v32 & 1) != 0)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v27 + 16))(v13, *(_QWORD *)(v30 + 56) + *(_QWORD *)(v27 + 72) * v31, v17);
        v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
        v33(v13, 0, 1, v17);
      }
      else
      {
        v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
        v33(v13, 1, 1, v17);
      }
    }
    else
    {
      v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
      v33(v13, 1, 1, v17);
      v24 = v27;
    }
    swift_bridgeObjectRelease();
    v34 = v25(v13, 1, v17);
    v35 = (uint64_t)v55;
    if (v34)
    {
      sub_237E2209C((uint64_t)v13, &qword_25689C140);
      v36 = 0.0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v19, v13, v17);
      sub_237E2209C((uint64_t)v13, &qword_25689C140);
      sub_237EE1D1C();
      v36 = v37;
      (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v17);
    }
    v38 = v54;
    sub_237EE1D1C();
    v40 = vabdd_f64(v39, v36);
    v41 = v25(v56, 1, v17);
    v42 = v58;
    if (v58)
    {
      if (v58 == 1)
        v43 = 1.0;
      else
        v43 = 60.0;
    }
    else
    {
      v43 = 0.01666;
    }
    if (v40 > v43 || v41 == 1)
    {
      v45 = v24;
      v46 = (os_unfair_lock_s *)(*(_QWORD *)(v57 + *(_QWORD *)(*(_QWORD *)v57 + 104)) + 16);
      swift_beginAccess();
      os_unfair_lock_lock(v46);
      swift_endAccess();
      sub_237E94C38((uint64_t)v22);
      swift_beginAccess();
      os_unfair_lock_unlock(v46);
      swift_endAccess();
      (*(void (**)(uint64_t, char *, uint64_t))(v45 + 16))(v35, v22, v17);
      v33((char *)v35, 0, 1, v17);
      v47 = *(_QWORD *)(v38 + v53);
      v48 = (os_unfair_lock_s *)(*(_QWORD *)(v47 + 16) + 16);
      swift_beginAccess();
      swift_retain();
      os_unfair_lock_lock(v48);
      swift_beginAccess();
      v49 = *(_QWORD *)(v47 + 24);
      swift_bridgeObjectRetain();
      os_unfair_lock_unlock(v48);
      swift_endAccess();
      v59 = v49;
      sub_237E8F094(v35, v42);
      v50 = v59;
      swift_beginAccess();
      os_unfair_lock_lock(v48);
      *(_QWORD *)(v47 + 24) = v50;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v51 = v48;
      v24 = v45;
      os_unfair_lock_unlock(v51);
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v22, v17);
}

uint64_t sub_237EA3A90(unsigned __int8 *a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t aBlock;
  uint64_t v23;
  void *v24;
  void *v25;
  void *v26;
  uint64_t v27;

  v2 = *a1;
  v3 = swift_allocObject();
  swift_weakInit();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  *(_BYTE *)(v4 + 24) = v2;
  v5 = swift_allocObject();
  *(_BYTE *)(v5 + 16) = v2;
  v6 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  v7 = (uint64_t *)(v1 + 32);
  swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)(v1 + 32) + 16) || (sub_237EAD898(v2), (v8 & 1) == 0))
  {
    if (v2)
    {
      v9 = swift_allocObject();
      *(_QWORD *)(v9 + 16) = sub_237EAA130;
      *(_QWORD *)(v9 + 24) = v4;
      if (v2 == 1)
      {
        v26 = sub_237EAA5D8;
        v27 = v9;
        v10 = MEMORY[0x24BDAC760];
        aBlock = MEMORY[0x24BDAC760];
        v23 = 1107296256;
        v24 = sub_237EA41D4;
        v25 = &block_descriptor_58;
        v11 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        v26 = sub_237EAA14C;
        v27 = v5;
        aBlock = v10;
        v23 = 1107296256;
        v24 = sub_237EA4278;
        v25 = &block_descriptor_61;
        v12 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        v13 = objc_msgSend(v6, sel_startSecondUpdatesWithHandler_identificationLog_, v11, v12);
      }
      else
      {
        v26 = sub_237EAA178;
        v27 = v9;
        v16 = MEMORY[0x24BDAC760];
        aBlock = MEMORY[0x24BDAC760];
        v23 = 1107296256;
        v24 = sub_237EA41D4;
        v25 = &block_descriptor_48;
        v11 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        v26 = sub_237EAA14C;
        v27 = v5;
        aBlock = v16;
        v23 = 1107296256;
        v24 = sub_237EA4278;
        v25 = &block_descriptor_51;
        v12 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        v13 = objc_msgSend(v6, sel_startMinuteUpdatesWithHandler_identificationLog_, v11, v12);
      }
    }
    else
    {
      v14 = swift_allocObject();
      *(_QWORD *)(v14 + 16) = sub_237EAA130;
      *(_QWORD *)(v14 + 24) = v4;
      v26 = sub_237EAA5D8;
      v27 = v14;
      v15 = MEMORY[0x24BDAC760];
      aBlock = MEMORY[0x24BDAC760];
      v23 = 1107296256;
      v24 = sub_237EA41D4;
      v25 = &block_descriptor_68;
      v11 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      v26 = sub_237EAA14C;
      v27 = v5;
      aBlock = v15;
      v23 = 1107296256;
      v24 = sub_237EA4278;
      v25 = &block_descriptor_71;
      v12 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      v13 = objc_msgSend(v6, sel_start60fpsUpdatesWithHandler_identificationLog_, v11, v12);
    }
    v17 = v13;
    _Block_release(v12);
    _Block_release(v11);
    swift_beginAccess();
    v18 = v17;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v21 = *v7;
    *v7 = 0x8000000000000000;
    sub_237E9C2B4((uint64_t)v18, v2, isUniquelyReferenced_nonNull_native);
    *v7 = v21;
    swift_bridgeObjectRelease();
    swift_endAccess();

    v6 = v18;
  }

  swift_release();
  return swift_release();
}

uint64_t sub_237EA3EA8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897E20);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v8 = MEMORY[0x23B827344](result + 16);
    if (v8)
    {
      v9 = v8;
      if (sub_237EA2130())
      {
        swift_unknownObjectRelease();
      }
      else
      {
        v10 = sub_237EE2C64();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 1, 1, v10);
        sub_237EE2C4C();
        swift_retain();
        v11 = sub_237EE2C40();
        v12 = swift_allocObject();
        v13 = MEMORY[0x24BEE6930];
        *(_QWORD *)(v12 + 16) = v11;
        *(_QWORD *)(v12 + 24) = v13;
        *(_QWORD *)(v12 + 32) = v9;
        *(_BYTE *)(v12 + 40) = a3;
        sub_237ECBB58((uint64_t)v6, (uint64_t)&unk_25689C1C8, v12);
        swift_release();
        swift_release();
      }
    }
    return swift_release();
  }
  return result;
}

unint64_t sub_237EA3FF8()
{
  unint64_t v1;

  if (qword_2542C6458 != -1)
    swift_once();
  v1 = sub_237E60FA4();
  sub_237EE2AF0();
  sub_237E6161C();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  sub_237EE2AF0();
  sub_237EE2AF0();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_237EA4108(uint64_t a1, void (*a2)(char *))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_237EE1D70();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  a2(v6);
  return sub_237E2209C((uint64_t)v6, &qword_25689C140);
}

uint64_t sub_237EA41D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *);
  uint64_t v8;

  v2 = sub_237EE1D70();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *))(a1 + 32);
  sub_237EE1D34();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id sub_237EA4278(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;
  void *v3;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  swift_release();
  v3 = (void *)sub_237EE2A54();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_237EA42D4()
{
  uint64_t v0;

  sub_237E74BBC(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_237EA4300()
{
  sub_237EE3264();
  sub_237EE3288();
  type metadata accessor for TextClockDescriptor(0);
  sub_237EE1EC0();
  sub_237E20E98((unint64_t *)&unk_25689C110, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_237EE2A18();
  return sub_237EE3294();
}

uint64_t sub_237EA4398()
{
  sub_237EE3288();
  sub_237EE1EC0();
  sub_237E20E98((unint64_t *)&unk_25689C110, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  return sub_237EE2A18();
}

uint64_t sub_237EA4418()
{
  sub_237EE3264();
  sub_237EE3288();
  sub_237EE1EC0();
  sub_237E20E98((unint64_t *)&unk_25689C110, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF510], MEMORY[0x24BDCF530]);
  sub_237EE2A18();
  return sub_237EE3294();
}

uint64_t sub_237EA44AC(double *a1, double *a2)
{
  if (*a1 == *a2)
    JUMPOUT(0x23B825514);
  return 0;
}

void sub_237EA44D8()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  id v31;
  void *v32;
  uint64_t v33;
  id v34[2];
  uint64_t v35;
  unsigned int (*v36)(_QWORD *, uint64_t, uint64_t);
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  MEMORY[0x24BDAC7A8](v1);
  v39 = (uint64_t)v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C170);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v38 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (id *)((char *)v34 - v7);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C160);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (id *)((char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(_QWORD *)&v0[OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC495429TextClock__timeFormatterByOffset];
  v13 = (os_unfair_lock_s *)(*(_QWORD *)(v12 + 16) + 16);
  swift_beginAccess();
  swift_retain();
  os_unfair_lock_lock(v13);
  swift_beginAccess();
  v14 = *(_QWORD *)(v12 + 24);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v13);
  swift_endAccess();
  swift_release();
  v15 = -1 << *(_BYTE *)(v14 + 32);
  v16 = ~v15;
  v17 = *(_QWORD *)(v14 + 64);
  v18 = -v15;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  else
    v19 = -1;
  v40 = v14;
  v41 = v14 + 64;
  v42 = v16;
  v43 = 0;
  v44 = v19 & v17;
  v45 = 0;
  v20 = (uint64_t)&v0[OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC495429TextClock_overrideDate];
  v34[1] = (id)v14;
  swift_bridgeObjectRetain();
  v34[0] = v0;
  v37 = v20;
  swift_beginAccess();
  sub_237EA021C(v11);
  v36 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v4 + 48);
  if (v36(v11, 1, v3) != 1)
  {
    v35 = v3;
    do
    {
      sub_237E21FC0((uint64_t)v11, (uint64_t)v8, &qword_25689C170);
      v21 = *(int *)(v3 + 48);
      v22 = v38;
      v23 = (uint64_t)&v38[v21];
      v24 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25689C188) + 48);
      v25 = (uint64_t)v8 + v21;
      *v22 = *v8;
      sub_237E21EBC(v25, v23, type metadata accessor for TextClockDescriptor);
      v26 = *(void **)(v25 + v24);
      *(_QWORD *)(v23 + v24) = v26;
      v27 = v39;
      sub_237E22004(v37, v39, &qword_25689C140);
      v28 = sub_237EE1D70();
      v29 = *(_QWORD *)(v28 - 8);
      v30 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28);
      v31 = v26;
      v32 = 0;
      if (v30 != 1)
      {
        v33 = v39;
        v32 = (void *)sub_237EE1CF8();
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v33, v28);
      }
      objc_msgSend(v31, sel_setOverrideDate_, v32);

      sub_237E21F00(v23, type metadata accessor for TextClockDescriptor);
      sub_237E2209C((uint64_t)v8, &qword_25689C170);
      sub_237EA021C(v11);
      v3 = v35;
    }
    while (v36(v11, 1, v35) != 1);
  }
  sub_237E24AD8();
  swift_bridgeObjectRelease();

}

id sub_237EA492C()
{
  void *v0;
  objc_super v2;

  sub_237EA49FC();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TextClock(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_237EA49FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  id result;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  os_unfair_lock_s *v18;

  v1 = OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC495429TextClock__timeFormatterByOffset;
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC495429TextClock__timeFormatterByOffset);
  v3 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 16) + 16);
  swift_beginAccess();
  swift_retain();
  os_unfair_lock_lock(v3);
  swift_beginAccess();
  v4 = *(_QWORD *)(v2 + 24);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v3);
  swift_endAccess();
  result = (id)swift_release();
  v6 = 0;
  v7 = v4 + 64;
  v8 = 1 << *(_BYTE *)(v4 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v4 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v6 << 6);
      goto LABEL_5;
    }
    v14 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v11)
      goto LABEL_23;
    v15 = *(_QWORD *)(v7 + 8 * v14);
    ++v6;
    if (!v15)
    {
      v6 = v14 + 1;
      if (v14 + 1 >= v11)
        goto LABEL_23;
      v15 = *(_QWORD *)(v7 + 8 * v6);
      if (!v15)
      {
        v6 = v14 + 2;
        if (v14 + 2 >= v11)
          goto LABEL_23;
        v15 = *(_QWORD *)(v7 + 8 * v6);
        if (!v15)
        {
          v6 = v14 + 3;
          if (v14 + 3 >= v11)
            goto LABEL_23;
          v15 = *(_QWORD *)(v7 + 8 * v6);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v10 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_5:
    result = objc_msgSend(*(id *)(*(_QWORD *)(v4 + 56) + 8 * v13), sel_removeObserver_, v0);
  }
  v16 = v14 + 4;
  if (v16 >= v11)
  {
LABEL_23:
    swift_release();
    v17 = *(_QWORD *)(v0 + v1);
    v18 = (os_unfair_lock_s *)(*(_QWORD *)(v17 + 16) + 16);
    swift_beginAccess();
    swift_retain();
    os_unfair_lock_lock(v18);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    os_unfair_lock_unlock(v18);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    os_unfair_lock_lock(v18);
    *(_QWORD *)(v17 + 24) = MEMORY[0x24BEE4B00];
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(v18);
    swift_endAccess();
    return (id)swift_release();
  }
  v15 = *(_QWORD *)(v7 + 8 * v16);
  if (v15)
  {
    v6 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v6 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v6 >= v11)
      goto LABEL_23;
    v15 = *(_QWORD *)(v7 + 8 * v6);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_237EA4C74@<X0>(double *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  double *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  os_unfair_lock_s *v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, uint64_t, uint64_t);
  int v27;
  void *v28;
  void *v29;
  double *v30;
  uint64_t v31;
  os_unfair_lock_s *v32;
  id v33;
  uint64_t v34;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v36;
  uint64_t v38;
  double *v39;
  double *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v3 = v2;
  v6 = type metadata accessor for TextClockDescriptor(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (double *)((char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v38 - v13;
  v42 = OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC495429TextClock__timeFormatterByOffset;
  v15 = *(_QWORD *)(v2
                  + OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC495429TextClock__timeFormatterByOffset);
  v16 = (os_unfair_lock_s *)(*(_QWORD *)(v15 + 16) + 16);
  swift_beginAccess();
  swift_retain();
  os_unfair_lock_lock(v16);
  swift_beginAccess();
  v17 = *(_QWORD *)(v15 + 24);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v16);
  swift_endAccess();
  swift_release();
  if (*(_QWORD *)(v17 + 16))
  {
    sub_237EAD420(a1);
    v19 = v18;
    v20 = swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
      goto LABEL_13;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v43 = v3;
  v39 = v8;
  v41 = a2;
  v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB87B0]), sel_init);
  v22 = v21;
  v40 = a1;
  if (*a1 != 0.0)
    objc_msgSend(v21, sel_setTimeOffset_, *a1);
  v23 = v43 + OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC495429TextClock_overrideDate;
  swift_beginAccess();
  sub_237E22004(v23, (uint64_t)v14, &qword_25689C140);
  v24 = sub_237EE1D70();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v14, 1, v24);
  sub_237E2209C((uint64_t)v14, &qword_25689C140);
  if (v27 != 1)
  {
    sub_237E22004(v23, (uint64_t)v12, &qword_25689C140);
    if (v26(v12, 1, v24) == 1)
    {
      v28 = 0;
    }
    else
    {
      v28 = (void *)sub_237EE1CF8();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v24);
    }
    objc_msgSend(v22, sel_setOverrideDate_, v28);

  }
  a1 = v40;
  v29 = (void *)sub_237EE1E9C();
  objc_msgSend(v22, sel_setTimeZone_, v29);

  v3 = v43;
  objc_msgSend(v22, sel_addObserver_, v43);
  v30 = v39;
  sub_237E21EBC((uint64_t)a1, (uint64_t)v39, type metadata accessor for TextClockDescriptor);
  v31 = *(_QWORD *)(v3 + v42);
  v32 = (os_unfair_lock_s *)(*(_QWORD *)(v31 + 16) + 16);
  swift_beginAccess();
  v33 = v22;
  swift_retain();
  os_unfair_lock_lock(v32);
  swift_beginAccess();
  v34 = *(_QWORD *)(v31 + 24);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v32);
  swift_endAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v44 = v34;
  sub_237E9C3E8((uint64_t)v33, v30, isUniquelyReferenced_nonNull_native);
  v36 = v44;
  swift_bridgeObjectRelease();
  sub_237E21F00((uint64_t)v30, type metadata accessor for TextClockDescriptor);
  swift_beginAccess();
  os_unfair_lock_lock(v32);
  *(_QWORD *)(v31 + 24) = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v32);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_release();

  a2 = v41;
LABEL_13:
  MEMORY[0x24BDAC7A8](v20);
  *(&v38 - 2) = (uint64_t)a1;
  *(&v38 - 1) = v3;
  return sub_237E9FC4C(sub_237EAA5D4, (uint64_t)(&v38 - 4), a2);
}

id sub_237EA50B0@<X0>(double *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id result;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_237EE1D70();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v50 - v14;
  if (qword_256897B48 != -1)
    swift_once();
  sub_237EA1DE0((uint64_t)v15);
  if (*a1 != 0.0)
  {
    sub_237EE1CEC();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v13, v9);
  }
  v16 = *(_QWORD *)(a2
                  + OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC495429TextClock__timeFormatterByOffset);
  v17 = (os_unfair_lock_s *)(*(_QWORD *)(v16 + 16) + 16);
  swift_beginAccess();
  swift_retain();
  os_unfair_lock_lock(v17);
  swift_beginAccess();
  v18 = *(_QWORD *)(v16 + 24);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v17);
  swift_endAccess();
  swift_release();
  if (*(_QWORD *)(v18 + 16) && (v19 = sub_237EAD420(a1), (v20 & 1) != 0))
  {
    v21 = *(id *)(*(_QWORD *)(v18 + 56) + 8 * v19);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB87B0]), sel_init);
    v23 = a2 + OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC495429TextClock_overrideDate;
    swift_beginAccess();
    sub_237E22004(v23, (uint64_t)v8, &qword_25689C140);
    LODWORD(v23) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
    v21 = v22;
    v24 = 0;
    if ((_DWORD)v23 != 1)
    {
      v24 = (void *)sub_237EE1CF8();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    }
    objc_msgSend(v21, sel_setOverrideDate_, v24);

    objc_msgSend(v21, sel_setTimeOffset_, *a1);
    type metadata accessor for TextClockDescriptor(0);
    v25 = (void *)sub_237EE1E9C();
    objc_msgSend(v21, sel_setTimeZone_, v25);

  }
  result = objc_msgSend(v21, sel_timeText);
  if (!result)
  {
    __break(1u);
    goto LABEL_16;
  }
  v27 = result;
  v55 = v15;
  v28 = sub_237EE2A84();
  v56 = v29;
  v57 = v28;

  result = objc_msgSend(v21, sel_timeAndDesignatorText);
  if (!result)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v30 = result;
  v53 = v10;
  v54 = v9;
  v31 = sub_237EE2A84();
  v51 = v32;
  v52 = v31;

  v33 = objc_msgSend(v21, sel_designatorRangeInTimeAndDesignatorText);
  v35 = v34;
  result = objc_msgSend(v21, sel_timeSubstringToSeparatorText);
  if (result)
  {
    v36 = result;
    v37 = sub_237EE2A84();
    v39 = v38;

    v40 = objc_msgSend(v21, sel_separatorRangeInTimeText);
    v42 = v41;

    v43 = (char *)a1 + *(int *)(type metadata accessor for TextClockDescriptor(0) + 20);
    v44 = type metadata accessor for TimeString(0);
    v45 = &a3[*(int *)(v44 + 36)];
    v46 = sub_237EE1EC0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v45, v43, v46);
    v47 = v55;
    v48 = v56;
    *(_QWORD *)a3 = v57;
    *((_QWORD *)a3 + 1) = v48;
    v49 = v51;
    *((_QWORD *)a3 + 2) = v52;
    *((_QWORD *)a3 + 3) = v49;
    *((_QWORD *)a3 + 4) = v33;
    *((_QWORD *)a3 + 5) = v35;
    *((_QWORD *)a3 + 6) = v37;
    *((_QWORD *)a3 + 7) = v39;
    *((_QWORD *)a3 + 8) = v40;
    *((_QWORD *)a3 + 9) = v42;
    return (id)(*(uint64_t (**)(char *, char *, uint64_t))(v53 + 32))(&a3[*(int *)(v44 + 40)], v47, v54);
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_237EA54E8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  os_unfair_lock_s *v33;
  id v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (**v41)(_QWORD, _QWORD, _QWORD);
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (**v51)(_QWORD, _QWORD, _QWORD);
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  NSObject *v71;
  os_log_type_t v72;
  uint8_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t (**v85)(_QWORD, _QWORD, _QWORD);
  uint64_t v86;
  uint64_t v87;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2542C6548);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v81 = (uint64_t)&v74 - v8;
  v9 = sub_237EE1FB0();
  v85 = *(uint64_t (***)(_QWORD, _QWORD, _QWORD))(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v83 = (uint64_t)&v74 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897E20);
  MEMORY[0x24BDAC7A8](v14);
  v78 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for TimeString(0);
  v75 = *(_QWORD *)(v16 - 8);
  v17 = *(_QWORD *)(v75 + 64);
  MEMORY[0x24BDAC7A8](v16);
  v77 = (uint64_t)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v82 = (uint64_t)&v74 - v19;
  v20 = type metadata accessor for TextClockDescriptor(0);
  v86 = *(_QWORD *)(v20 - 8);
  v21 = *(_QWORD *)(v86 + 64);
  MEMORY[0x24BDAC7A8](v20);
  v76 = (uint64_t)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v87 = (uint64_t)&v74 - v23;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C160);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C168);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v74 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v84 = (uint64_t)&v74 - v31;
  if (a1)
  {
    v79 = v2;
    v80 = v9;
    v32 = *(_QWORD *)(v2
                    + OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC495429TextClock__timeFormatterByOffset);
    v33 = (os_unfair_lock_s *)(*(_QWORD *)(v32 + 16) + 16);
    swift_beginAccess();
    v34 = a1;
    swift_retain();
    os_unfair_lock_lock(v33);
    swift_beginAccess();
    v35 = *(_QWORD *)(v32 + 24);
    swift_bridgeObjectRetain();
    os_unfair_lock_unlock(v33);
    swift_endAccess();
    swift_release();
    v36 = v34;
    sub_237EA05C0(v35, v36, (uint64_t)v26);
    swift_bridgeObjectRelease();
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C170);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v26, 1, v37) == 1)
    {
      sub_237E2209C((uint64_t)v26, &qword_25689C160);
      v38 = 1;
      v39 = v84;
    }
    else
    {
      v42 = (uint64_t)&v26[*(int *)(v37 + 48)];

      v39 = v84;
      sub_237E47CE0(v42, v84, type metadata accessor for TextClockDescriptor);
      v38 = 0;
    }
    v43 = v86;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v86 + 56))(v39, v38, 1, v20);
    sub_237E22004(v39, (uint64_t)v29, &qword_25689C168);
    v44 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 48))(v29, 1, v20);
    v45 = v79;
    v46 = v80;
    v47 = v87;
    if (v44 == 1)
    {
      sub_237E2209C((uint64_t)v29, &qword_25689C168);
      if (qword_2542C6458 != -1)
        swift_once();
      v48 = qword_2542C64F8 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_data_private;
      swift_beginAccess();
      v49 = v48;
      v50 = v81;
      sub_237E22004(v49, v81, &qword_2542C6548);
      v51 = v85;
      v52 = v85[6](v50, 1, v46);
      v53 = v83;
      if (v52 == 1)
      {
        sub_237E6072C(v83);
        sub_237E2209C(v50, &qword_2542C6548);
      }
      else
      {
        v51[4](v83, v50, v46);
      }
      v71 = sub_237EE1F98();
      v72 = sub_237EE2D9C();
      if (os_log_type_enabled(v71, v72))
      {
        v73 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v73 = 0;
        _os_log_impl(&dword_237E17000, v71, v72, "Cannot map CLKTimeFormatter to listeners.", v73, 2u);
        MEMORY[0x23B8272A8](v73, -1, -1);
      }

      ((void (*)(uint64_t, uint64_t))v51[1])(v53, v46);
    }
    else
    {
      v54 = sub_237E47CE0((uint64_t)v29, v87, type metadata accessor for TextClockDescriptor);
      MEMORY[0x24BDAC7A8](v54);
      *(&v74 - 2) = v47;
      *(&v74 - 1) = v45;
      v55 = v82;
      sub_237E9FC4C((uint64_t (*)(void))sub_237E2062C, (uint64_t)(&v74 - 4), v82);
      v56 = MEMORY[0x23B827344](v45 + OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC495429TextClock_delegate);
      if (v56)
      {
        v57 = v56;
        v58 = sub_237EE2C64();
        v59 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56);
        v85 = (uint64_t (**)(_QWORD, _QWORD, _QWORD))v36;
        v60 = (uint64_t)v78;
        v59(v78, 1, 1, v58);
        v61 = v77;
        sub_237E21EBC(v55, v77, type metadata accessor for TimeString);
        v62 = v76;
        sub_237E21EBC(v47, v76, type metadata accessor for TextClockDescriptor);
        v63 = (*(unsigned __int8 *)(v75 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
        v64 = (v17 + *(unsigned __int8 *)(v86 + 80) + v63) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
        v65 = (_QWORD *)swift_allocObject();
        v65[2] = 0;
        v65[3] = 0;
        v65[4] = v57;
        sub_237E47CE0(v61, (uint64_t)v65 + v63, type metadata accessor for TimeString);
        v66 = (uint64_t)v65 + v64;
        v47 = v87;
        sub_237E47CE0(v62, v66, type metadata accessor for TextClockDescriptor);
        swift_retain();
        sub_237ECBB58(v60, (uint64_t)&unk_25689C180, (uint64_t)v65);
        swift_release();

        swift_release();
      }
      else
      {

      }
      sub_237E21F00(v55, type metadata accessor for TimeString);
      sub_237E21F00(v47, type metadata accessor for TextClockDescriptor);
    }
    return sub_237E2209C(v39, &qword_25689C168);
  }
  else
  {
    if (qword_2542C6458 != -1)
      swift_once();
    v40 = qword_2542C64F8 + OBJC_IVAR____TtC11ClockPoster11ClockLogger_data_private;
    swift_beginAccess();
    sub_237E22004(v40, (uint64_t)v6, &qword_2542C6548);
    v41 = v85;
    if (((uint64_t (**)(char *, uint64_t, uint64_t))v85)[6](v6, 1, v9) == 1)
    {
      sub_237E6072C((uint64_t)v11);
      sub_237E2209C((uint64_t)v6, &qword_2542C6548);
    }
    else
    {
      ((uint64_t (**)(char *, char *, uint64_t))v41)[4](v11, v6, v9);
    }
    v67 = sub_237EE1F98();
    v68 = sub_237EE2D9C();
    if (os_log_type_enabled(v67, v68))
    {
      v69 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v69 = 0;
      _os_log_impl(&dword_237E17000, v67, v68, "CLKTimeFormatter must never CLKTimeFormatterObserver call is nil.", v69, 2u);
      MEMORY[0x23B8272A8](v69, -1, -1);
    }

    return ((uint64_t (*)(char *, uint64_t))v41[1])(v11, v9);
  }
}

uint64_t sub_237EA5D5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  os_unfair_lock_s *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  MEMORY[0x24BDAC7A8](v3);
  v37 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v39 = (char *)&v36 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B9E8);
  MEMORY[0x24BDAC7A8](v7);
  v38 = (uint64_t)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v36 - v10;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v36 - v13;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v36 - v16;
  v18 = type metadata accessor for OverrideTime(0);
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
  v20 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 40) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v20);
  swift_endAccess();
  v21 = v1 + OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC4954213OverrideClock_locked_overrideTime;
  swift_beginAccess();
  sub_237E2209C((uint64_t)v17, &qword_25689B9E8);
  sub_237E22004(v21, (uint64_t)v17, &qword_25689B9E8);
  v40 = a1;
  sub_237E22004(a1, (uint64_t)v14, &qword_25689B9E8);
  sub_237E22004(v21, (uint64_t)v11, &qword_25689B9E8);
  swift_endAccess();
  swift_beginAccess();
  sub_237E47284((uint64_t)v14, v21, &qword_25689B9E8);
  swift_endAccess();
  sub_237EA6344((uint64_t)v11);
  sub_237E2209C((uint64_t)v14, &qword_25689B9E8);
  sub_237E2209C((uint64_t)v11, &qword_25689B9E8);
  swift_beginAccess();
  os_unfair_lock_unlock(v20);
  swift_endAccess();
  v22 = MEMORY[0x23B827344](v1 + 16);
  if (v22)
  {
    v23 = v22;
    v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
    v25 = 1;
    v26 = v24(v17, 1, v18);
    v27 = sub_237EE1D70();
    v28 = *(_QWORD *)(v27 - 8);
    v29 = (uint64_t)v39;
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v39, v17, v27);
      v25 = 0;
    }
    v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
    v30(v29, v25, 1, v27);
    v31 = v38;
    sub_237E22004(v40, v38, &qword_25689B9E8);
    if (v24((char *)v31, 1, v18) == 1)
    {
      sub_237E2209C(v31, &qword_25689B9E8);
      v32 = 1;
      v33 = (uint64_t)v37;
    }
    else
    {
      v33 = (uint64_t)v37;
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v37, v31, v27);
      sub_237E21F00(v31, type metadata accessor for OverrideTime);
      v32 = 0;
    }
    v30(v33, v32, 1, v27);
    v34 = MEMORY[0x23B826C24]("Clock:shared");
    if ((_DWORD)v34)
    {
      MEMORY[0x24BDAC7A8](v34);
      *(&v36 - 4) = v23;
      *(&v36 - 3) = v33;
      *(&v36 - 2) = v29;
      sub_237E23920(sub_237EAA288, (uint64_t)(&v36 - 6));
    }
    swift_unknownObjectRelease();
    sub_237E2209C(v33, &qword_25689C140);
    sub_237E2209C(v29, &qword_25689C140);
  }
  sub_237E2209C(v40, &qword_25689B9E8);
  return sub_237E2209C((uint64_t)v17, &qword_25689B9E8);
}

void (*sub_237EA6154(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  os_unfair_lock_s *v8;
  uint64_t v9;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25689B9E8) - 8) + 64);
  v5 = malloc(v4);
  v3[10] = v5;
  v6 = malloc(v4);
  v3[11] = v6;
  v7 = type metadata accessor for OverrideTime(0);
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
  v8 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 40) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v8);
  swift_endAccess();
  v9 = v1 + OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC4954213OverrideClock_locked_overrideTime;
  swift_beginAccess();
  sub_237E2209C((uint64_t)v5, &qword_25689B9E8);
  sub_237E22004(v9, (uint64_t)v5, &qword_25689B9E8);
  swift_endAccess();
  swift_beginAccess();
  os_unfair_lock_unlock(v8);
  swift_endAccess();
  sub_237E21FC0((uint64_t)v5, (uint64_t)v6, &qword_25689B9E8);
  return sub_237EA62B0;
}

void sub_237EA62B0(uint64_t a1, char a2)
{
  sub_237EA62BC(a1, a2, (void (*)(void *))sub_237EA5D5C);
}

void sub_237EA62BC(uint64_t a1, char a2, void (*a3)(void *))
{
  void *v4;
  void *v5;
  void *v6;

  v4 = *(void **)a1;
  v5 = *(void **)(*(_QWORD *)a1 + 80);
  v6 = *(void **)(*(_QWORD *)a1 + 88);
  if ((a2 & 1) != 0)
  {
    sub_237E22004(*(_QWORD *)(*(_QWORD *)a1 + 88), (uint64_t)v5, &qword_25689B9E8);
    a3(v5);
    sub_237E2209C((uint64_t)v6, &qword_25689B9E8);
  }
  else
  {
    a3(*(void **)(*(_QWORD *)a1 + 88));
  }
  free(v6);
  free(v5);
  free(v4);
}

uint64_t sub_237EA6344(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  int v12;
  uint64_t v13;
  uint64_t result;
  _QWORD v15[2];
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B9E8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v15 - v7;
  v16 = v1;
  v9 = v1 + OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC4954213OverrideClock_locked_overrideTime;
  swift_beginAccess();
  v10 = type metadata accessor for OverrideTime(0);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
  v12 = v11(v9, 1, v10);
  v13 = 0;
  if (!v12)
    v13 = *(_QWORD *)(v9 + *(int *)(v10 + 20) + 16);
  v15[1] = v13;
  sub_237E22004(a1, (uint64_t)v8, &qword_25689B9E8);
  if (v11((uint64_t)v8, 1, v10) == 1)
  {
    result = sub_237E2209C((uint64_t)v8, &qword_25689B9E8);
    if (v12)
      return result;
    goto LABEL_9;
  }
  v15[0] = *(_QWORD *)&v8[*(int *)(v10 + 20) + 24];
  sub_237E21F00((uint64_t)v8, type metadata accessor for OverrideTime);
  if (v12 || (sub_237EE3300() & 1) == 0 || (result = sub_237EE3300(), (result & 1) == 0))
  {
LABEL_9:
    sub_237E22004(v9, (uint64_t)v5, &qword_25689B9E8);
    sub_237EA73D4((uint64_t)v5);
    return sub_237E2209C((uint64_t)v5, &qword_25689B9E8);
  }
  return result;
}

_QWORD *sub_237EA6518(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897E20);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[3] = 0;
  swift_unknownObjectWeakInit();
  type metadata accessor for CPUnfairLock();
  v6 = swift_allocObject();
  *(_DWORD *)(v6 + 16) = 0;
  v1[5] = v6;
  v7 = (char *)v1 + OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC4954213OverrideClock_locked_overrideTime;
  v8 = type metadata accessor for OverrideTime(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *(_QWORD *)((char *)v1
            + OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC4954213OverrideClock_advanceTimeTask) = 0;
  v9 = (char *)v1 + OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC4954213OverrideClock_initializationTime;
  sub_237EE1D40();
  v10 = sub_237EE1D70();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 0, 1, v10);
  v1[4] = a1;
  if (a1)
  {
    v11 = sub_237EE2C64();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v5, 1, 1, v11);
    v12 = swift_allocObject();
    swift_weakInit();
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = 0;
    v13[3] = 0;
    v13[4] = a1;
    v13[5] = v12;
    swift_retain();
    sub_237EDA9E4((uint64_t)v5, (uint64_t)&unk_25689C230, (uint64_t)v13);
    swift_release();
  }
  return v1;
}

uint64_t sub_237EA66B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[18] = a4;
  v5[19] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256897E20);
  v5[20] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689B9E8);
  v5[21] = swift_task_alloc();
  v5[22] = swift_task_alloc();
  v6 = sub_237EE1D70();
  v5[23] = v6;
  v5[24] = *(_QWORD *)(v6 - 8);
  v5[25] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  v5[26] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[27] = v8;
  v5[28] = *(_QWORD *)(v8 + 64);
  v5[29] = swift_task_alloc();
  v5[30] = swift_task_alloc();
  v5[31] = swift_task_alloc();
  v5[32] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256898AF0);
  v5[33] = swift_task_alloc();
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25689C240);
  v5[34] = v9;
  v5[35] = *(_QWORD *)(v9 - 8);
  v5[36] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256898AF8);
  v5[37] = v10;
  v5[38] = *(_QWORD *)(v10 - 8);
  v5[39] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_237EA6840()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = v0[35];
  v1 = v0[36];
  v3 = v0[34];
  v4 = v0[18];
  v5 = *(_QWORD *)(v4 + 32);
  swift_retain();
  sub_237E8FB7C(v5, v4, v1);
  sub_237EE2C88();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  v6 = (_QWORD *)swift_task_alloc();
  v0[40] = v6;
  *v6 = v0;
  v6[1] = sub_237EA6920;
  return sub_237EE2C94();
}

uint64_t sub_237EA6920()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_237EA6974()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  double v17;
  void (*v18)(uint64_t, uint64_t);
  int v19;
  uint64_t v20;
  uint64_t v21;
  os_unfair_lock_s *v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;

  v1 = *(_QWORD *)(v0 + 264);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 216) + 48))(v1, 1, *(_QWORD *)(v0 + 208)) == 1)goto LABEL_7;
  sub_237E21FC0(v1, *(_QWORD *)(v0 + 256), &qword_25689C140);
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_237E2209C(*(_QWORD *)(v0 + 256), &qword_25689C140);
LABEL_7:
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 304) + 8))(*(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 296));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v3 = Strong;
  v4 = *(_QWORD *)(v0 + 248);
  v6 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 192);
  v7 = Strong + OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC4954213OverrideClock_initializationTime;
  sub_237E22004(Strong + OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC4954213OverrideClock_initializationTime, v4, &qword_25689C140);
  v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  result = v8(v4, 1, v6);
  if ((_DWORD)result != 1)
  {
    v11 = *(_QWORD *)(v0 + 240);
    v10 = *(_QWORD *)(v0 + 248);
    v13 = *(_QWORD *)(v0 + 192);
    v12 = *(_QWORD *)(v0 + 200);
    v14 = *(_QWORD *)(v0 + 184);
    v42 = *(_QWORD *)(v0 + 176);
    v15 = *(_QWORD *)(v0 + 168);
    sub_237EE1D40();
    sub_237EE1CE0();
    v17 = v16;
    v18 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v18(v12, v14);
    v18(v10, v14);
    sub_237E22004(v7, v11, &qword_25689C140);
    v19 = v8(v11, 1, v14);
    sub_237E2209C(v11, &qword_25689C140);
    v20 = type metadata accessor for OverrideTime(0);
    v21 = *(_QWORD *)(v20 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v15, 1, 1, v20);
    v22 = (os_unfair_lock_s *)(*(_QWORD *)(v3 + 40) + 16);
    swift_beginAccess();
    os_unfair_lock_lock(v22);
    swift_endAccess();
    v23 = v3 + OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC4954213OverrideClock_locked_overrideTime;
    swift_beginAccess();
    sub_237E2209C(v15, &qword_25689B9E8);
    sub_237E22004(v23, v15, &qword_25689B9E8);
    swift_endAccess();
    swift_beginAccess();
    os_unfair_lock_unlock(v22);
    swift_endAccess();
    sub_237E21FC0(v15, v42, &qword_25689B9E8);
    v24 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v42, 1, v20);
    v25 = *(_QWORD *)(v0 + 176);
    if (v24 == 1)
    {
      sub_237E2209C(v25, &qword_25689B9E8);
    }
    else
    {
      sub_237E2209C(v25, &qword_25689B9E8);
      if (v19 != 1 && v17 <= 1.0)
      {
        sub_237E2209C(*(_QWORD *)(v0 + 256), &qword_25689C140);
        swift_release();
LABEL_19:
        v41 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 320) = v41;
        *v41 = v0;
        v41[1] = sub_237EA6920;
        return sub_237EE2C94();
      }
    }
    v26 = *(_QWORD *)(v0 + 256);
    v27 = *(_QWORD *)(v0 + 232);
    v28 = *(_QWORD *)(v0 + 216);
    v29 = *(_QWORD *)(v0 + 160);
    v30 = sub_237EE2C64();
    v31 = *(_QWORD *)(v30 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56))(v29, 1, 1, v30);
    sub_237E22004(v26, v27, &qword_25689C140);
    v32 = (*(unsigned __int8 *)(v28 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    v33 = (_QWORD *)swift_allocObject();
    v33[2] = 0;
    v34 = v33 + 2;
    v33[3] = 0;
    v33[4] = v3;
    sub_237E21FC0(v27, (uint64_t)v33 + v32, &qword_25689C140);
    LODWORD(v27) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30);
    swift_retain();
    v35 = *(_QWORD *)(v0 + 160);
    if ((_DWORD)v27 == 1)
    {
      sub_237E2209C(*(_QWORD *)(v0 + 160), &qword_256897E20);
      if (*v34)
      {
LABEL_13:
        swift_getObjectType();
        swift_unknownObjectRetain();
        v36 = sub_237EE2C28();
        v38 = v37;
        swift_unknownObjectRelease();
LABEL_16:
        v39 = swift_allocObject();
        *(_QWORD *)(v39 + 16) = &unk_25689C258;
        *(_QWORD *)(v39 + 24) = v33;
        if (v38 | v36)
        {
          *(_QWORD *)(v0 + 16) = 0;
          *(_QWORD *)(v0 + 24) = 0;
          *(_QWORD *)(v0 + 32) = v36;
          *(_QWORD *)(v0 + 40) = v38;
        }
        v40 = *(_QWORD *)(v0 + 256);
        swift_task_create();
        swift_release();
        swift_release();
        sub_237E2209C(v40, &qword_25689C140);
        goto LABEL_19;
      }
    }
    else
    {
      sub_237EE2C58();
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v35, v30);
      if (*v34)
        goto LABEL_13;
    }
    v36 = 0;
    v38 = 0;
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_237EA6EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[8] = a4;
  v5[9] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  v5[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_237EA6F58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = sub_237EE1D70();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v1, 1, 1, v4);
  v5 = (os_unfair_lock_s *)(*(_QWORD *)(v3 + 40) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v5);
  swift_endAccess();
  sub_237EA70A4(v1, v3, v2);
  swift_beginAccess();
  os_unfair_lock_unlock(v5);
  swift_endAccess();
  v6 = MEMORY[0x23B827344](v3 + 16);
  if (v6)
  {
    v7 = v6;
    if (MEMORY[0x23B826C24]("Clock:shared"))
    {
      v8 = swift_task_alloc();
      v9 = *(_OWORD *)(v0 + 72);
      *(_QWORD *)(v8 + 16) = v7;
      *(_OWORD *)(v8 + 24) = v9;
      sub_237E23920(sub_237EAA5CC, v8);
      swift_unknownObjectRelease();
      swift_task_dealloc();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  sub_237E2209C(*(_QWORD *)(v0 + 80), &qword_25689C140);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_237EA70A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B9E8);
  MEMORY[0x24BDAC7A8](v6);
  v38 = (uint64_t)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v36 - v9;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v36 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  MEMORY[0x24BDAC7A8](v14);
  v36 = (uint64_t)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v36 - v17;
  v19 = a2 + OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC4954213OverrideClock_locked_overrideTime;
  swift_beginAccess();
  sub_237E22004(v19, (uint64_t)v13, &qword_25689B9E8);
  v20 = type metadata accessor for OverrideTime(0);
  v37 = *(_QWORD *)(v20 - 8);
  v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48))(v13, 1, v20);
  v39 = a2;
  if (v21)
  {
    sub_237E2209C((uint64_t)v13, &qword_25689B9E8);
    v22 = sub_237EE1D70();
    v23 = *(_QWORD *)(v22 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v18, 1, 1, v22);
  }
  else
  {
    v22 = sub_237EE1D70();
    v23 = *(_QWORD *)(v22 - 8);
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v18, v13, v22);
    sub_237E2209C((uint64_t)v13, &qword_25689B9E8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v18, 0, 1, v22);
  }
  sub_237E9F9C4((uint64_t)v18, a1, &qword_25689C140);
  sub_237EE1D70();
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  v25 = 1;
  if (v24(a3, 1, v22) == 1)
    goto LABEL_7;
  v26 = v36;
  sub_237E22004(a3, v36, &qword_25689C140);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v24)(v26, 1, v22);
  if ((_DWORD)result != 1)
  {
    v28 = sub_237EE330C();
    v30 = v29;
    v31 = sub_237EE330C();
    v33 = v32;
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(v10, v26, v22);
    v25 = 0;
    v34 = (uint64_t *)&v10[*(int *)(v20 + 20)];
    *v34 = v28;
    v34[1] = v30;
    v34[2] = v31;
    v34[3] = v33;
LABEL_7:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v10, v25, 1, v20);
    v35 = v38;
    sub_237E22004(v19, v38, &qword_25689B9E8);
    swift_beginAccess();
    sub_237E47284((uint64_t)v10, v19, &qword_25689B9E8);
    swift_endAccess();
    sub_237EA6344(v35);
    sub_237E2209C((uint64_t)v10, &qword_25689B9E8);
    return sub_237E2209C(v35, &qword_25689B9E8);
  }
  __break(1u);
  return result;
}

uint64_t sub_237EA73D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256897E20);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689B9E8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC4954213OverrideClock_advanceTimeTask;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC4954213OverrideClock_advanceTimeTask))
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25689C120);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25689DA00);
    sub_237EE2CAC();
    swift_release();
  }
  *(_QWORD *)(v1 + v9) = 0;
  swift_release();
  sub_237E22004(a1, (uint64_t)v8, &qword_25689B9E8);
  v10 = type metadata accessor for OverrideTime(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v8, 1, v10) == 1)
    return sub_237E2209C((uint64_t)v8, &qword_25689B9E8);
  v12 = &v8[*(int *)(v10 + 20)];
  v13 = *(_QWORD *)v12;
  v14 = *((_QWORD *)v12 + 1);
  v15 = *((_QWORD *)v12 + 2);
  v16 = *((_QWORD *)v12 + 3);
  sub_237E21F00((uint64_t)v8, type metadata accessor for OverrideTime);
  sub_237EE330C();
  result = sub_237EE3300();
  if ((result & 1) == 0)
  {
    sub_237EE330C();
    result = sub_237EE3300();
    if ((result & 1) == 0)
    {
      v17 = sub_237EE2C64();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v5, 1, 1, v17);
      v18 = swift_allocObject();
      swift_weakInit();
      v19 = (_QWORD *)swift_allocObject();
      v19[2] = 0;
      v19[3] = 0;
      v19[4] = v18;
      v19[5] = v13;
      v19[6] = v14;
      v19[7] = v15;
      v19[8] = v16;
      *(_QWORD *)(v1 + v9) = sub_237ECBC8C((uint64_t)v5, (uint64_t)&unk_25689C138, (uint64_t)v19);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_237EA7620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8[21] = a7;
  v8[22] = a8;
  v8[19] = a5;
  v8[20] = a6;
  v8[17] = a1;
  v8[18] = a4;
  v9 = sub_237EE303C();
  v8[23] = v9;
  v8[24] = *(_QWORD *)(v9 - 8);
  v8[25] = swift_task_alloc();
  v10 = sub_237EE3024();
  v8[26] = v10;
  v8[27] = *(_QWORD *)(v10 - 8);
  v8[28] = swift_task_alloc();
  v8[29] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689B9E8);
  v8[30] = swift_task_alloc();
  v8[31] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  v8[32] = swift_task_alloc();
  v11 = sub_237EE1D70();
  v8[33] = v11;
  v8[34] = *(_QWORD *)(v11 - 8);
  v8[35] = swift_task_alloc();
  v8[36] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_237EA7750()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  _QWORD *v25;
  uint64_t v26;

  if ((sub_237EE2CB8() & 1) != 0
    || (swift_beginAccess(), Strong = swift_weakLoadStrong(), (*(_QWORD *)(v0 + 296) = Strong) == 0))
  {
    **(_BYTE **)(v0 + 136) = 0;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = Strong;
  v3 = *(_QWORD *)(v0 + 240);
  v26 = *(_QWORD *)(v0 + 248);
  v4 = type metadata accessor for OverrideTime(0);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  v6 = (os_unfair_lock_s *)(*(_QWORD *)(v2 + 40) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v6);
  swift_endAccess();
  v7 = v2 + OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC4954213OverrideClock_locked_overrideTime;
  swift_beginAccess();
  sub_237E2209C(v3, &qword_25689B9E8);
  sub_237E22004(v7, v3, &qword_25689B9E8);
  swift_endAccess();
  swift_beginAccess();
  os_unfair_lock_unlock(v6);
  swift_endAccess();
  sub_237E21FC0(v3, v26, &qword_25689B9E8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v26, 1, v4))
  {
    v8 = *(_QWORD *)(v0 + 264);
    v9 = *(_QWORD *)(v0 + 272);
    v10 = *(_QWORD *)(v0 + 256);
    sub_237E2209C(*(_QWORD *)(v0 + 248), &qword_25689B9E8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v10, 1, 1, v8);
  }
  else
  {
    v13 = *(_QWORD *)(v0 + 272);
    v12 = *(_QWORD *)(v0 + 280);
    v15 = *(_QWORD *)(v0 + 256);
    v14 = *(_QWORD *)(v0 + 264);
    v16 = *(_QWORD *)(v0 + 248);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v12, v16, v14);
    sub_237E2209C(v16, &qword_25689B9E8);
    sub_237EE32F4();
    sub_237EE32F4();
    sub_237EE1CEC();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v15, 0, 1, v14);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v15, 1, v14) != 1)
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 32))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264));
      goto LABEL_8;
    }
  }
  v17 = *(_QWORD *)(v0 + 256);
  sub_237EE1D40();
  sub_237E2209C(v17, &qword_25689C140);
LABEL_8:
  v18 = *(_QWORD *)(v0 + 288);
  v19 = *(_QWORD *)(v0 + 224);
  v21 = *(_QWORD *)(v0 + 208);
  v20 = *(_QWORD *)(v0 + 216);
  v22 = swift_task_alloc();
  *(_QWORD *)(v22 + 16) = v2;
  *(_QWORD *)(v22 + 24) = v18;
  sub_237E9FEAC((void (*)(_QWORD *__return_ptr))sub_237EA9E98, v22);
  swift_task_dealloc();
  sub_237EE300C();
  sub_237EE32F4();
  sub_237EE32F4();
  v23 = sub_237EE3318();
  MEMORY[0x23B826684](v23);
  v24 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
  *(_QWORD *)(v0 + 304) = v24;
  v24(v19, v21);
  *(_QWORD *)(v0 + 120) = 0;
  *(_QWORD *)(v0 + 112) = 0;
  *(_BYTE *)(v0 + 128) = 1;
  sub_237EE3204();
  v25 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 312) = v25;
  sub_237E20E98(&qword_25689C148, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6E10], MEMORY[0x24BEE6E20]);
  *v25 = v0;
  v25[1] = sub_237EA7B7C;
  return sub_237EE2CD0();
}

uint64_t sub_237EA7B7C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 320) = v0;
  swift_task_dealloc();
  v3 = (void (*)(uint64_t, uint64_t))v2[38];
  v4 = v2[29];
  v5 = v2[26];
  (*(void (**)(_QWORD, _QWORD))(v2[24] + 8))(v2[25], v2[23]);
  v3(v4, v5);
  return swift_task_switch();
}

uint64_t sub_237EA7C30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t);
  _QWORD *v28;
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 272);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  if ((sub_237EE2CB8() & 1) != 0 || (Strong = swift_weakLoadStrong(), (*(_QWORD *)(v0 + 296) = Strong) == 0))
  {
    **(_BYTE **)(v0 + 136) = 0;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = Strong;
  v6 = *(_QWORD *)(v0 + 240);
  v29 = *(_QWORD *)(v0 + 248);
  v7 = type metadata accessor for OverrideTime(0);
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  v9 = (os_unfair_lock_s *)(*(_QWORD *)(v5 + 40) + 16);
  swift_beginAccess();
  os_unfair_lock_lock(v9);
  swift_endAccess();
  v10 = v5 + OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC4954213OverrideClock_locked_overrideTime;
  swift_beginAccess();
  sub_237E2209C(v6, &qword_25689B9E8);
  sub_237E22004(v10, v6, &qword_25689B9E8);
  swift_endAccess();
  swift_beginAccess();
  os_unfair_lock_unlock(v9);
  swift_endAccess();
  sub_237E21FC0(v6, v29, &qword_25689B9E8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v29, 1, v7))
  {
    v11 = *(_QWORD *)(v0 + 264);
    v12 = *(_QWORD *)(v0 + 272);
    v13 = *(_QWORD *)(v0 + 256);
    sub_237E2209C(*(_QWORD *)(v0 + 248), &qword_25689B9E8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v13, 1, 1, v11);
  }
  else
  {
    v16 = *(_QWORD *)(v0 + 272);
    v15 = *(_QWORD *)(v0 + 280);
    v18 = *(_QWORD *)(v0 + 256);
    v17 = *(_QWORD *)(v0 + 264);
    v19 = *(_QWORD *)(v0 + 248);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v15, v19, v17);
    sub_237E2209C(v19, &qword_25689B9E8);
    sub_237EE32F4();
    sub_237EE32F4();
    sub_237EE1CEC();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(v18, 0, 1, v17);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v18, 1, v17) != 1)
    {
      (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 272) + 32))(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 264));
      goto LABEL_8;
    }
  }
  v20 = *(_QWORD *)(v0 + 256);
  sub_237EE1D40();
  sub_237E2209C(v20, &qword_25689C140);
LABEL_8:
  v21 = *(_QWORD *)(v0 + 288);
  v22 = *(_QWORD *)(v0 + 224);
  v24 = *(_QWORD *)(v0 + 208);
  v23 = *(_QWORD *)(v0 + 216);
  v25 = swift_task_alloc();
  *(_QWORD *)(v25 + 16) = v5;
  *(_QWORD *)(v25 + 24) = v21;
  sub_237E9FEAC((void (*)(_QWORD *__return_ptr))sub_237EA9E98, v25);
  swift_task_dealloc();
  sub_237EE300C();
  sub_237EE32F4();
  sub_237EE32F4();
  v26 = sub_237EE3318();
  MEMORY[0x23B826684](v26);
  v27 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
  *(_QWORD *)(v0 + 304) = v27;
  v27(v22, v24);
  *(_QWORD *)(v0 + 120) = 0;
  *(_QWORD *)(v0 + 112) = 0;
  *(_BYTE *)(v0 + 128) = 1;
  sub_237EE3204();
  v28 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 312) = v28;
  sub_237E20E98(&qword_25689C148, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6E10], MEMORY[0x24BEE6E20]);
  *v28 = v0;
  v28[1] = sub_237EA7B7C;
  return sub_237EE2CD0();
}

uint64_t sub_237EA8060()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 288);
  v2 = *(_QWORD *)(v0 + 272);
  v3 = *(_QWORD *)(v0 + 264);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_237EA811C@<X0>(uint64_t a1@<X1>, BOOL *a2@<X8>)
{
  void (*v4)(uint64_t, char);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t result;
  _QWORD v11[4];

  v4 = sub_237EA6154(v11);
  v6 = v5;
  v7 = type metadata accessor for OverrideTime(0);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if (!v8)
  {
    v9 = sub_237EE1D70();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v6, a1, v9);
  }
  result = ((uint64_t (*)(_QWORD *, _QWORD))v4)(v11, 0);
  *a2 = v8 != 0;
  return result;
}

uint64_t sub_237EA81C8()
{
  uint64_t v0;

  sub_237E74BBC(v0 + 16);
  swift_release();
  swift_release();
  sub_237E2209C(v0 + OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC4954213OverrideClock_locked_overrideTime, &qword_25689B9E8);
  swift_release();
  sub_237E2209C(v0 + OBJC_IVAR____TtC11ClockPosterP33_379590E2B70ADE273C4445A41EC4954213OverrideClock_initializationTime, &qword_25689C140);
  return swift_deallocClassInstance();
}

uint64_t _s11ClockPoster10TimeStringV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  BOOL v5;
  uint64_t v6;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if ((v4 || (sub_237EE31BC() & 1) != 0)
    && (a1[2] == a2[2] ? (v5 = a1[3] == a2[3]) : (v5 = 0),
        (v5 || (sub_237EE31BC() & 1) != 0)
     && a1[4] == a2[4]
     && a1[5] == a2[5]
     && (a1[6] == a2[6] && a1[7] == a2[7] || (sub_237EE31BC() & 1) != 0))
    && a1[8] == a2[8]
    && a1[9] == a2[9]
    && (v6 = type metadata accessor for TimeString(0),
        (MEMORY[0x23B825514]((char *)a1 + *(int *)(v6 + 36), (char *)a2 + *(int *)(v6 + 36)) & 1) != 0))
  {
    return sub_237EE1D28();
  }
  else
  {
    return 0;
  }
}

_QWORD *sub_237EA8350(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25689C140);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689C1F0);
  v8 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v8 + *(_QWORD *)(*(_QWORD *)v8 + 96), 1, 1, v4);
  v9 = *(_QWORD *)(*(_QWORD *)v8 + 104);
  type metadata accessor for CPUnfairLock();
  v10 = swift_allocObject();
  *(_DWORD *)(v10 + 16) = 0;
  *(_QWORD *)(v8 + v9) = v10;
  *(_QWORD *)(v8 + *(_QWORD *)(*(_QWORD *)v8 + 112)) = MEMORY[0x24BEE4B00];
  *(_BYTE *)(v8 + *(_QWORD *)(*(_QWORD *)v8 + 120)) = 0;
  a2[4] = v8;
  v11 = sub_237EE1D70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 1, 1, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25689C1F8);
  v12 = (_QWORD *)swift_allocObject();
  v13 = swift_allocObject();
  *(_DWORD *)(v13 + 16) = 0;
  v12[2] = v13;
  sub_237E21FC0((uint64_t)v7, (uint64_t)v12 + *(_QWORD *)(*v12 + 96), &qword_25689C140);
  a2[5] = v12;
  a2[2] = a1;
  a2[3] = &off_2509C5588;
  v14 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  swift_retain();
  sub_237EC036C((uint64_t)sub_237EAA2A0, v14);
  swift_release_n();
  return a2;
}

uint64_t _s11ClockPoster10TimeStringV1loiySbAC_ACtFZ_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  void (*v5)(char *, uint64_t);
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v0 = sub_237EE1D70();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TimeString(0);
  sub_237EE1D64();
  v4 = sub_237EE1E84();
  v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v3, v0);
  sub_237EE1D64();
  v6 = sub_237EE1E84();
  v5(v3, v0);
  if (v4 == v6)
  {
    v7 = sub_237EE1D10();
  }
  else
  {
    sub_237EE1D64();
    v8 = sub_237EE1E84();
    v5(v3, v0);
    sub_237EE1D64();
    v9 = sub_237EE1E84();
    v5(v3, v0);
    v7 = v8 < v9;
  }
  return v7 & 1;
}

unint64_t sub_237EA8680()
{
  unint64_t result;

  result = qword_25689BA30;
  if (!qword_25689BA30)
  {
    result = MEMORY[0x23B8271D0](&protocol conformance descriptor for ClockTimeInterval, &type metadata for ClockTimeInterval);
    atomic_store(result, (unint64_t *)&qword_25689BA30);
  }
  return result;
}

uint64_t sub_237EA86C4()
{
  return sub_237E22690(&qword_25689BA38, &qword_25689BA40, MEMORY[0x24BEE12E0]);
}

unint64_t sub_237EA86F0(uint64_t a1)
{
  unint64_t result;

  result = sub_237EA8714();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_237EA8714()
{
  unint64_t result;

  result = qword_25689BA48;
  if (!qword_25689BA48)
  {
    result = MEMORY[0x23B8271D0](&protocol conformance descriptor for ClockTimeInterval, &type metadata for ClockTimeInterval);
    atomic_store(result, (unint64_t *)&qword_25689BA48);
  }
  return result;
}

uint64_t sub_237EA8758()
{
  return sub_237E20E98(&qword_25689BA50, type metadata accessor for TimeString, (uint64_t)&protocol conformance descriptor for TimeString);
}

uint64_t type metadata accessor for TimeString(uint64_t a1)
{
  return sub_237E42BC0(a1, qword_25689BB40);
}

uint64_t storeEnumTagSinglePayload for ClockTimeInterval(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_237EA87EC + 4 * byte_237EEB9AA[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_237EA8820 + 4 * byte_237EEB9A5[v4]))();
}

uint64_t sub_237EA8820(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237EA8828(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237EA8830);
  return result;
}

uint64_t sub_237EA883C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237EA8844);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_237EA8848(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237EA8850(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClockTimeInterval()
{
  return &type metadata for ClockTimeInterval;
}

uint64_t *initializeBufferWithCopyOfBuffer for OverrideTime(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_237EE1D70();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (_OWORD *)((char *)a1 + v8);
    v10 = (_OWORD *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
  }
  return a1;
}

uint64_t initializeWithCopy for OverrideTime(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;

  v6 = sub_237EE1D70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  return a1;
}

uint64_t assignWithCopy for OverrideTime(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_237EE1D70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  v8[2] = v9[2];
  v8[3] = v9[3];
  return a1;
}

uint64_t initializeWithTake for OverrideTime(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;

  v6 = sub_237EE1D70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  return a1;
}

uint64_t assignWithTake for OverrideTime(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  __int128 v10;

  v6 = sub_237EE1D70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  return a1;
}

uint64_t getEnumTagSinglePayload for OverrideTime()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_237EA8AB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_237EE1D70();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for OverrideTime()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_237EA8AF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_237EE1D70();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_237EA8B38()
{
  uint64_t result;
  unint64_t v1;

  result = sub_237EE1D70();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for OverrideTime.AdvancingRate()
{
  return &type metadata for OverrideTime.AdvancingRate;
}

_QWORD *initializeBufferWithCopyOfBuffer for TimeString(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    v9 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v9;
    v10 = *(int *)(a3 + 36);
    v11 = a1 + v10;
    v12 = (uint64_t)a2 + v10;
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    v13 = sub_237EE1EC0();
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    v15 = *(int *)(a3 + 40);
    v16 = (char *)v4 + v15;
    v17 = (uint64_t)a2 + v15;
    v18 = sub_237EE1D70();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  }
  return v4;
}

uint64_t destroy for TimeString(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = sub_237EE1EC0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 40);
  v7 = sub_237EE1D70();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t initializeWithCopy for TimeString(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  v9 = *(int *)(a3 + 36);
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v12 = sub_237EE1EC0();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  v14 = *(int *)(a3 + 40);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_237EE1D70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  return a1;
}

_QWORD *assignWithCopy for TimeString(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  v6 = *(int *)(a3 + 36);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_237EE1EC0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 40);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_237EE1D70();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

_OWORD *initializeWithTake for TimeString(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  a1[4] = a2[4];
  v8 = *(int *)(a3 + 36);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_237EE1EC0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = *(int *)(a3 + 40);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_237EE1D70();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  return a1;
}

uint64_t assignWithTake for TimeString(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  v9 = *(int *)(a3 + 36);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_237EE1EC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = *(int *)(a3 + 40);
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_237EE1D70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for TimeString()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_237EA90C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_237EE1EC0();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 36);
    }
    else
    {
      v10 = sub_237EE1D70();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 40);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for TimeString()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_237EA9170(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_237EE1EC0();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 36);
    }
    else
    {
      v10 = sub_237EE1D70();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 40);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_237EA920C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_237EE1EC0();
  if (v1 <= 0x3F)
  {
    result = sub_237EE1D70();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_237EA92AC()
{
  return type metadata accessor for Clock(0);
}

uint64_t type metadata accessor for Clock(uint64_t a1)
{
  return sub_237E42BC0(a1, (uint64_t *)&unk_25689BBB8);
}

void sub_237EA92C8()
{
  unint64_t v0;
  unint64_t v1;

  sub_237E1B410(319, qword_25689BBC8, (void (*)(uint64_t))type metadata accessor for OverrideTime);
  if (v0 <= 0x3F)
  {
    sub_237EE1D70();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for Clock()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Clock.now.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of Clock.now_debugString.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of Clock.isOverriding.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of Clock.overrideTime.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of Clock.overrideTime.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of Clock.overrideTime.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of Clock.currentTime(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t type metadata accessor for AtomicClock()
{
  return objc_opt_self();
}

uint64_t sub_237EA9404()
{
  return type metadata accessor for TextClock(0);
}

uint64_t type metadata accessor for TextClock(uint64_t a1)
{
  return sub_237E42BC0(a1, (uint64_t *)&unk_25689BEB0);
}

void sub_237EA9420()
{
  unint64_t v0;

  sub_237E1B410(319, (unint64_t *)&qword_25689BEC0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t sub_237EA94B4()
{
  return type metadata accessor for OverrideClock(0);
}

uint64_t type metadata accessor for OverrideClock(uint64_t a1)
{
  return sub_237E42BC0(a1, qword_25689BF00);
}

void sub_237EA94D0()
{
  unint64_t v0;
  unint64_t v1;

  sub_237E1B410(319, qword_25689BBC8, (void (*)(uint64_t))type metadata accessor for OverrideTime);
  if (v0 <= 0x3F)
  {
    sub_237E1B410(319, (unint64_t *)&qword_25689BEC0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t *sub_237EA9598(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_237EE1EC0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_237EA9620(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_237EE1EC0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *sub_237EA9658(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_237EE1EC0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *sub_237EA96B4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_237EE1EC0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_QWORD *sub_237EA9710(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_237EE1EC0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_237EA976C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_237EE1EC0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_237EA97C8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_237EA97D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = sub_237EE1EC0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t sub_237EA9814()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_237EA9820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = sub_237EE1EC0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t type metadata accessor for TextClockDescriptor(uint64_t a1)
{
  return sub_237E42BC0(a1, qword_25689C098);
}

uint64_t sub_237EA9878()
{
  uint64_t result;
  unint64_t v1;

  result = sub_237EE1EC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for OverrideTime.CodingKeys()
{
  return &type metadata for OverrideTime.CodingKeys;
}

uint64_t _s11ClockPoster12OverrideTimeV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_237EA9954 + 4 * byte_237EEB9B4[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_237EA9988 + 4 * byte_237EEB9AF[v4]))();
}

uint64_t sub_237EA9988(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_237EA9990(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x237EA9998);
  return result;
}

uint64_t sub_237EA99A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x237EA99ACLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_237EA99B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_237EA99B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OverrideTime.AdvancingRate.CodingKeys()
{
  return &type metadata for OverrideTime.AdvancingRate.CodingKeys;
}

unint64_t sub_237EA99D8()
{
  unint64_t result;

  result = qword_25689C0D0;
  if (!qword_25689C0D0)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEBF20, &type metadata for OverrideTime.AdvancingRate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25689C0D0);
  }
  return result;
}

unint64_t sub_237EA9A20()
{
  unint64_t result;

  result = qword_25689C0D8;
  if (!qword_25689C0D8)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEBFD8, &type metadata for OverrideTime.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25689C0D8);
  }
  return result;
}

uint64_t sub_237EA9A64(uint64_t a1)
{
  uint64_t result;

  result = sub_237E20E98(&qword_25689C0E0, type metadata accessor for TextClockDescriptor, (uint64_t)&unk_237EEC000);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_237EA9AA0()
{
  return sub_237E20E98(&qword_25689C0E8, type metadata accessor for TextClockDescriptor, (uint64_t)&unk_237EEC028);
}

unint64_t sub_237EA9AD0()
{
  unint64_t result;

  result = qword_25689C0F0;
  if (!qword_25689C0F0)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEBF48, &type metadata for OverrideTime.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25689C0F0);
  }
  return result;
}

unint64_t sub_237EA9B18()
{
  unint64_t result;

  result = qword_25689C0F8;
  if (!qword_25689C0F8)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEBF70, &type metadata for OverrideTime.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25689C0F8);
  }
  return result;
}

unint64_t sub_237EA9B60()
{
  unint64_t result;

  result = qword_25689C100;
  if (!qword_25689C100)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEBE90, &type metadata for OverrideTime.AdvancingRate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25689C100);
  }
  return result;
}

unint64_t sub_237EA9BA8()
{
  unint64_t result;

  result = qword_25689C108;
  if (!qword_25689C108)
  {
    result = MEMORY[0x23B8271D0](&unk_237EEBEB8, &type metadata for OverrideTime.AdvancingRate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25689C108);
  }
  return result;
}

uint64_t sub_237EA9BEC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x74657366666FLL && a2 == 0xE600000000000000;
  if (v2 || (sub_237EE31BC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C61767265746E69 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237EE31BC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_237EA9CD4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_237EE31BC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E69636E61766461 && a2 == 0xED00006574615267)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_237EE31BC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_237EA9DD8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_237EA9DFC()
{
  return objectdestroy_49Tm();
}

uint64_t sub_237EA9E04(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = v1[7];
  v10 = v1[8];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v11;
  *v11 = v2;
  v11[1] = sub_237E20844;
  return sub_237EA7620(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_237EA9E98@<X0>(BOOL *a1@<X8>)
{
  uint64_t v1;

  return sub_237EA811C(*(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_237EA9EA0()
{
  return swift_deallocObject();
}

_QWORD *sub_237EA9EB0()
{
  uint64_t v0;
  _BYTE *v1;
  _QWORD *result;
  uint64_t v3;

  v1 = *(_BYTE **)(v0 + 16);
  result = (*(_QWORD *(**)(uint64_t *__return_ptr))(v0 + 24))(&v3);
  *v1 = v3;
  v1[1] = 0;
  return result;
}

uint64_t sub_237EA9EEC()
{
  return swift_deallocObject();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t sub_237EA9F14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void (*v11)(unint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;

  v1 = type metadata accessor for TimeString(0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = type metadata accessor for TextClockDescriptor(0);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v7 = (v3 + v4 + v6) & ~v6;
  swift_unknownObjectRelease();
  swift_release();
  v8 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = v0 + v3 + *(int *)(v1 + 36);
  v10 = sub_237EE1EC0();
  v11 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
  v11(v9, v10);
  v12 = v8 + *(int *)(v1 + 40);
  v13 = sub_237EE1D70();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  v11(v0 + *(int *)(v5 + 20) + v7, v10);
  return swift_deallocObject();
}

uint64_t sub_237EAA034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v2 = *(_QWORD *)(type metadata accessor for TimeString(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for TextClockDescriptor(0) - 8) + 80);
  v6 = v3 + v4 + v5;
  v7 = *(_QWORD *)(v0 + 32);
  v8 = v0 + v3;
  v9 = v0 + (v6 & ~v5);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v10;
  *v10 = v1;
  v10[1] = sub_237E487A8;
  v10[3] = v8;
  v10[4] = v9;
  v10[2] = v7;
  return swift_task_switch();
}

uint64_t sub_237EAA0E0()
{
  return swift_deallocObject();
}

