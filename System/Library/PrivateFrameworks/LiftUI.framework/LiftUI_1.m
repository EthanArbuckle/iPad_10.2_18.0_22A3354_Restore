uint64_t sub_1B0FCFEF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v8;
  _QWORD *v9;
  uint64_t v10;

  v2 = *(_QWORD *)(v0 + 96);
  v1 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 88);
  sub_1B1035BB8();
  v4 = sub_1B1035BA0();
  v6 = v5;
  *(_QWORD *)(v0 + 112) = v5;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (v6 >> 60 == 15)
  {
    if ((sub_1B1035D98() & 1) != 0)
    {
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    else
    {
      type metadata accessor for RemoteLoaderError(0);
      sub_1B0FD4920();
      v10 = swift_allocError();
      swift_storeEnumTagMultiPayload();
      *(_QWORD *)(v0 + 16) = v10;
      *(_BYTE *)(v0 + 56) = 1;
      sub_1B1035D68();
      *(_QWORD *)(v0 + 136) = sub_1B1035D5C();
      sub_1B1035D50();
      return swift_task_switch();
    }
  }
  else
  {
    v8 = *(_BYTE *)(v0 + 58);
    *(_QWORD *)(v0 + 120) = v4;
    *(_BYTE *)(v0 + 57) = v8;
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 128) = v9;
    *v9 = v0;
    v9[1] = sub_1B0FD0080;
    return sub_1B0FCF2D4(v4, v6, (_BYTE *)(v0 + 57));
  }
}

uint64_t sub_1B0FD0080()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B0FD00D4()
{
  uint64_t v0;

  sub_1B0FD490C(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 112));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B0FD010C()
{
  uint64_t v0;

  swift_release();
  sub_1B0FD0F60(0, v0 + 16);
  sub_1B0F5A3AC(v0 + 16, &qword_1EEEE03E0);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B0FD0168(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;

  *(_QWORD *)(v6 + 80) = a4;
  *(_QWORD *)(v6 + 88) = v5;
  *(_QWORD *)(v6 + 64) = a1;
  *(_QWORD *)(v6 + 72) = a3;
  v9 = sub_1B10344C0();
  *(_QWORD *)(v6 + 96) = v9;
  *(_QWORD *)(v6 + 104) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v6 + 112) = swift_task_alloc();
  *(_BYTE *)(v6 + 58) = *a2;
  *(_BYTE *)(v6 + 59) = *a5;
  return swift_task_switch();
}

uint64_t sub_1B0FD01EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  void *v6;
  id v8;

  v1 = *(_QWORD *)(v0 + 88) + OBJC_IVAR____TtC6LiftUI12RemoteLoader_dataSource;
  v2 = MEMORY[0x1B5E152E4](v1);
  *(_QWORD *)(v0 + 120) = v2;
  if (v2)
  {
    v3 = *(_QWORD *)(v1 + 8);
    v4 = *(_QWORD *)(v0 + 64);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 8))(v4, ObjectType, v3);
    __asm { BR              X10 }
  }
  type metadata accessor for RemoteLoaderError(0);
  sub_1B0FD4920();
  v6 = (void *)swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  *(_QWORD *)(v0 + 168) = v6;
  if ((sub_1B1035D98() & 1) != 0)
  {

    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 16) = v6;
    *(_BYTE *)(v0 + 56) = 1;
    sub_1B1035D68();
    v8 = v6;
    *(_QWORD *)(v0 + 176) = sub_1B1035D5C();
    sub_1B1035D50();
    return swift_task_switch();
  }
}

uint64_t sub_1B0FD038C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD, uint64_t, uint64_t);

  sub_1B1034460();
  if (v0[10] >> 60 != 15)
  {
    sub_1B0F57594(v0[9], v0[10]);
    sub_1B10344A8();
  }
  sub_1B0FE3504();
  v5 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v1 + 16) + *(_QWORD *)(v1 + 16));
  v3 = (_QWORD *)swift_task_alloc();
  v0[16] = v3;
  *v3 = v0;
  v3[1] = sub_1B0FD04A0;
  return v5(v0[14], v2, v1);
}

uint64_t sub_1B0FD04A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  _QWORD *v8;

  v6 = *v3;
  *(_QWORD *)(v6 + 136) = v2;
  swift_task_dealloc();
  if (v2)
    return swift_task_switch();
  *(_BYTE *)(v6 + 57) = *(_BYTE *)(v6 + 59);
  *(_QWORD *)(v6 + 144) = a2;
  *(_QWORD *)(v6 + 152) = a1;
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 160) = v8;
  *v8 = v6;
  v8[1] = sub_1B0FD055C;
  return sub_1B0FCF2D4(a1, a2, (_BYTE *)(v6 + 57));
}

uint64_t sub_1B0FD055C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B0FD05B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  sub_1B0F576D8(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 144));
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B0FD0610()
{
  uint64_t v0;

  swift_release();
  sub_1B0FD0F60(0, v0 + 16);
  sub_1B0F5A3AC(v0 + 16, &qword_1EEEE03E0);
  return swift_task_switch();
}

uint64_t sub_1B0FD0670()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B0FD06A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v6;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v4 = *(void **)(v0 + 136);
  *(_QWORD *)(v0 + 168) = v4;
  if ((sub_1B1035D98() & 1) != 0)
  {

    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 16) = v4;
    *(_BYTE *)(v0 + 56) = 1;
    sub_1B1035D68();
    v6 = v4;
    *(_QWORD *)(v0 + 176) = sub_1B1035D5C();
    sub_1B1035D50();
    return swift_task_switch();
  }
}

uint64_t sub_1B0FD0780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;

  *(_QWORD *)(v6 + 72) = a4;
  *(_QWORD *)(v6 + 80) = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDEA00);
  *(_QWORD *)(v6 + 88) = swift_task_alloc();
  v11 = sub_1B10345E0();
  *(_QWORD *)(v6 + 96) = v11;
  *(_QWORD *)(v6 + 104) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v6 + 112) = swift_task_alloc();
  *(_OWORD *)(v6 + 120) = *(_OWORD *)a1;
  *(_QWORD *)(v6 + 136) = *(_QWORD *)(a1 + 16);
  *(_BYTE *)(v6 + 59) = *(_BYTE *)(a1 + 24);
  *(_OWORD *)(v6 + 144) = *(_OWORD *)a2;
  *(_QWORD *)(v6 + 160) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(v6 + 60) = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(v6 + 168) = *(_OWORD *)a3;
  *(_QWORD *)(v6 + 184) = *(_QWORD *)(a3 + 16);
  *(_BYTE *)(v6 + 61) = *(_BYTE *)(a3 + 24);
  *(_BYTE *)(v6 + 62) = *a5;
  return swift_task_switch();
}

uint64_t sub_1B0FD0874()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v7;
  unsigned int v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  void *v13;
  Swift::String v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  StringResolvable.resolved(with:)(*(_QWORD *)(v0 + 72));
  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 88);
  sub_1B10345D4();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1B0F5A3AC(*(_QWORD *)(v0 + 88), &qword_1EEEDEA00);
    type metadata accessor for RemoteLoaderError(0);
    sub_1B0FD4920();
    v4 = (void *)swift_allocError();
    *(_QWORD *)(v0 + 216) = v4;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    v5 = v4;
    if ((sub_1B1035D98() & 1) != 0)
    {

      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    else
    {
      *(_QWORD *)(v0 + 16) = v4;
      *(_BYTE *)(v0 + 56) = 1;
      sub_1B1035D68();
      v7 = v4;
      *(_QWORD *)(v0 + 224) = sub_1B1035D5C();
      sub_1B1035D50();
      return swift_task_switch();
    }
  }
  else
  {
    v8 = *(unsigned __int8 *)(v0 + 60);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 32))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
    if (v8 <= 0xFD)
    {
      v10 = *(_QWORD *)(v0 + 72);
      v26 = *(_QWORD *)(v0 + 144);
      sub_1B0F56B9C(v26, *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_BYTE *)(v0 + 60));
      v11 = StringResolvable.resolved(with:)(v10);
      v13 = v12;
      sub_1B0F56B88(*(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_BYTE *)(v0 + 60));
      v14._countAndFlagsBits = v11;
      v14._object = v13;
      HTTPRequestMethod.init(rawValue:)(v14);
      v9 = v26;
    }
    else
    {
      v9 = 8;
    }
    v15 = *(unsigned __int8 *)(v0 + 61);
    if (v15 == 255)
    {
      v23 = 0;
      v25 = 0xF000000000000000;
    }
    else
    {
      v16 = *(_QWORD *)(v0 + 176);
      v17 = *(_QWORD *)(v0 + 184);
      v18 = *(_QWORD *)(v0 + 168);
      v19 = *(_QWORD *)(v0 + 72);
      v20 = v15 & 1;
      sub_1B0F56C30(v18, v16, v17, v15 & 1);
      v21 = sub_1B0FD7904(v19, v18, v16, v17, v20);
      sub_1B0F57190(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), *(_BYTE *)(v0 + 61));
      sub_1B103452C();
      swift_allocObject();
      sub_1B1034520();
      *(_QWORD *)(v0 + 64) = v21;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF5E0);
      sub_1B0F97014();
      v23 = sub_1B1034514();
      v25 = v24;
      swift_release();
      swift_bridgeObjectRelease();
    }
    *(_QWORD *)(v0 + 192) = v23;
    *(_QWORD *)(v0 + 200) = v25;
    *(_BYTE *)(v0 + 57) = v9;
    *(_BYTE *)(v0 + 58) = *(_BYTE *)(v0 + 62);
    v22 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v22;
    *v22 = v0;
    v22[1] = sub_1B0FD0C78;
    return sub_1B0FD0168(*(_QWORD *)(v0 + 112), (_BYTE *)(v0 + 57), v23, v25, (_BYTE *)(v0 + 58));
  }
}

uint64_t sub_1B0FD0C78()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1B0FD0CCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  sub_1B0FD490C(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B0FD0D30()
{
  uint64_t v0;

  swift_release();
  sub_1B0FD0F60(0, v0 + 16);
  sub_1B0F5A3AC(v0 + 16, &qword_1EEEE03E0);
  return swift_task_switch();
}

uint64_t sub_1B0FD0D90()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 216);

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B0FD0DE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[4];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE910);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B0F5A974(a1, (uint64_t)v7, &qword_1EEEDE910);
  v8 = sub_1B1035D80();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1B0F5A3AC((uint64_t)v7, &qword_1EEEDE910);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
  }
  else
  {
    sub_1B1035D74();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
  }
  swift_getObjectType();
  swift_unknownObjectRetain();
  v10 = sub_1B1035D50();
  v12 = v11;
  swift_unknownObjectRelease();
  if (v12 | v10)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v10;
    v14[3] = v12;
  }
  return swift_task_create();
}

uint64_t sub_1B0FD0F60(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  char v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  _BYTE v15[48];
  __int128 v16[2];
  unsigned __int8 v17;
  _OWORD v18[2];
  char v19;

  v3 = v2;
  v6 = sub_1B1035AD4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)&v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  if (a1)
  {
    sub_1B0FB9F24();
    *v9 = sub_1B1035E40();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF740], v6);
    v10 = sub_1B1035AE0();
    result = (*(uint64_t (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
    if ((v10 & 1) == 0)
    {
      __break(1u);
      return result;
    }
    sub_1B0F56FC4(a1, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B0FD3C04);
  }
  sub_1B0F5A974(a2, (uint64_t)v16, &qword_1EEEE03E0);
  if (v17 == 255)
  {
    sub_1B0F5A3AC((uint64_t)v16, &qword_1EEEE03E0);
    v12 = v3 + OBJC_IVAR____TtC6LiftUI12RemoteLoader_savedStatus;
    swift_beginAccess();
    sub_1B0F5A974(v12, (uint64_t)v16, &qword_1EEEE03E0);
    if (v17 == 255)
    {
      sub_1B0F5A3AC((uint64_t)v16, &qword_1EEEE03E0);
      type metadata accessor for RemoteLoaderError(0);
      sub_1B0FD4920();
      v13 = swift_allocError();
      swift_storeEnumTagMultiPayload();
      *(_QWORD *)&v18[0] = v13;
      v19 = 1;
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1B0FD4848((uint64_t *)v18, (uint64_t)v16);
      swift_retain();
      sub_1B1034700();
    }
    else
    {
      sub_1B0F6BC6C(v16, v18);
      sub_1B0FD4848((uint64_t *)v18, (uint64_t)v16);
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1B0FD4848((uint64_t *)v16, (uint64_t)v15);
      swift_retain();
      sub_1B1034700();
      sub_1B0F5A378((uint64_t)v16);
    }
  }
  else
  {
    sub_1B0F6BC6C(v16, v18);
    sub_1B0FCEAB4((uint64_t *)v18);
  }
  return sub_1B0F5A378((uint64_t)v18);
}

uint64_t sub_1B0FD11E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[36] = a3;
  v4[37] = v3;
  v4[34] = a1;
  v4[35] = a2;
  v5 = sub_1B1035F60();
  v4[38] = v5;
  v4[39] = *(_QWORD *)(v5 - 8);
  v4[40] = swift_task_alloc();
  v4[41] = swift_task_alloc();
  v4[42] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1B0FD1268()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  NSObject *v12;
  os_log_type_t v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t (*v30)(void);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  uint64_t v38;

  sub_1B0FD3C0C();
  sub_1B10344CC();
  sub_1B0F5A974(v0 + 16, v0 + 136, &qword_1EEEDEBD8);
  if (*(_QWORD *)(v0 + 144))
  {
    v23 = *(_QWORD *)(v0 + 272);
    sub_1B0FD3C50(v0 + 16);
    v24 = *(_OWORD *)(v0 + 184);
    v26 = *(_OWORD *)(v0 + 136);
    v25 = *(_OWORD *)(v0 + 152);
    *(_OWORD *)(v23 + 32) = *(_OWORD *)(v0 + 168);
    *(_OWORD *)(v23 + 48) = v24;
    *(_OWORD *)v23 = v26;
    *(_OWORD *)(v23 + 16) = v25;
    v28 = *(_OWORD *)(v0 + 216);
    v27 = *(_OWORD *)(v0 + 232);
    v29 = *(_OWORD *)(v0 + 200);
    *(_QWORD *)(v23 + 112) = *(_QWORD *)(v0 + 248);
    *(_OWORD *)(v23 + 80) = v28;
    *(_OWORD *)(v23 + 96) = v27;
    *(_OWORD *)(v23 + 64) = v29;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v30 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    sub_1B0F5A3AC(v0 + 136, &qword_1EEEDEBD8);
    type metadata accessor for RemoteLoaderError(0);
    sub_1B0FD4920();
    v35 = (void *)swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_1B0FD3C50(v0 + 16);
    *(_QWORD *)(v0 + 256) = v35;
    v1 = v35;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE3F8);
    if (swift_dynamicCast())
    {
      v3 = *(_QWORD *)(v0 + 328);
      v2 = *(_QWORD *)(v0 + 336);
      v4 = *(_QWORD *)(v0 + 304);
      v5 = *(_QWORD *)(v0 + 312);

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v3, v2, v4);
      if (qword_1EEEDE0B0 != -1)
        swift_once();
      v6 = *(_QWORD *)(v0 + 320);
      v7 = *(_QWORD *)(v0 + 328);
      v8 = *(_QWORD *)(v0 + 304);
      v9 = *(_QWORD *)(v0 + 312);
      v10 = sub_1B103467C();
      __swift_project_value_buffer(v10, (uint64_t)qword_1EEF0BA00);
      v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
      v11(v6, v7, v8);
      v12 = sub_1B1034664();
      v13 = sub_1B1035E34();
      v14 = os_log_type_enabled(v12, v13);
      v16 = *(_QWORD *)(v0 + 312);
      v15 = *(_QWORD *)(v0 + 320);
      if (v14)
      {
        v36 = *(_QWORD *)(v0 + 304);
        v17 = (uint8_t *)swift_slowAlloc();
        v37 = v11;
        v38 = swift_slowAlloc();
        v18 = v38;
        *(_DWORD *)v17 = 136315138;
        v19 = sub_1B0FD1628();
        *(_QWORD *)(v0 + 264) = sub_1B0F6B618(v19, v20, &v38);
        sub_1B1035E7C();
        swift_bridgeObjectRelease();
        v21 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
        v21(v15, v36);
        _os_log_impl(&dword_1B0F50000, v12, v13, "Error decoding view: %s", v17, 0xCu);
        swift_arrayDestroy();
        v22 = v18;
        v11 = v37;
        MEMORY[0x1B5E15248](v22, -1, -1);
        MEMORY[0x1B5E15248](v17, -1, -1);
      }
      else
      {
        v21 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
        v21(*(_QWORD *)(v0 + 320), *(_QWORD *)(v0 + 304));
      }

      v31 = *(_QWORD *)(v0 + 328);
      v32 = *(_QWORD *)(v0 + 304);
      swift_allocError();
      v11(v33, v31, v32);
      swift_willThrow();
      v21(v31, v32);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v30 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v30();
}

unint64_t sub_1B0FD1628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 *v17;
  int v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;

  v1 = sub_1B1035F54();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v26 - v7;
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v26 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v26 - v12;
  v14 = sub_1B1035F60();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (__int128 *)((char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__int128 *, uint64_t, uint64_t))(v15 + 16))(v17, v0, v14);
  v18 = (*(uint64_t (**)(__int128 *, uint64_t))(v15 + 88))(v17, v14);
  if (v18 == *MEMORY[0x1E0DEC450])
  {
    (*(void (**)(__int128 *, uint64_t))(v15 + 96))(v17, v14);
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF988);
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v8, (char *)v17 + *(int *)(v19 + 48), v1);
    v29 = 0;
    v30 = 0xE000000000000000;
    sub_1B1035F18();
    swift_bridgeObjectRelease();
    v29 = 0xD00000000000001FLL;
    v30 = 0x80000001B104CEA0;
    sub_1B0FD23C0();
    sub_1B1035C18();
    swift_bridgeObjectRelease();
    sub_1B1035C18();
    sub_1B10362D8();
    sub_1B1035C18();
    swift_bridgeObjectRelease();
    v20 = v29;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v8, v1);
  }
  else if (v18 == *MEMORY[0x1E0DEC460])
  {
    (*(void (**)(__int128 *, uint64_t))(v15 + 96))(v17, v14);
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF988);
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, (char *)v17 + *(int *)(v21 + 48), v1);
    v29 = 0;
    v30 = 0xE000000000000000;
    sub_1B1035F18();
    swift_bridgeObjectRelease();
    v29 = 0xD000000000000020;
    v30 = 0x80000001B104CE70;
    sub_1B0FD23C0();
    sub_1B1035C18();
    swift_bridgeObjectRelease();
    sub_1B1035C18();
    sub_1B10362D8();
    sub_1B1035C18();
    swift_bridgeObjectRelease();
    v20 = v29;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  else if (v18 == *MEMORY[0x1E0DEC448])
  {
    (*(void (**)(__int128 *, uint64_t))(v15 + 96))(v17, v14);
    v22 = (char *)v17 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF980) + 48);
    sub_1B0F5A0E4(v17, (uint64_t)&v29);
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v11, v22, v1);
    v27 = 0;
    v28 = 0xE000000000000000;
    sub_1B1035F18();
    sub_1B1035C18();
    __swift_project_boxed_opaque_existential_1(&v29, v31);
    sub_1B10362A8();
    sub_1B1035C18();
    swift_bridgeObjectRelease();
    sub_1B1035C18();
    sub_1B0FD23C0();
    sub_1B1035C18();
    swift_bridgeObjectRelease();
    sub_1B1035C18();
    __swift_project_boxed_opaque_existential_1(&v29, v31);
    sub_1B0FD256C();
    sub_1B1035C18();
    swift_bridgeObjectRelease();
    v20 = v27;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v11, v1);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
  }
  else if (v18 == *MEMORY[0x1E0DEC458])
  {
    (*(void (**)(__int128 *, uint64_t))(v15 + 96))(v17, v14);
    (*(void (**)(char *, __int128 *, uint64_t))(v2 + 32))(v13, v17, v1);
    v29 = 0;
    v30 = 0xE000000000000000;
    sub_1B1035F18();
    swift_bridgeObjectRelease();
    v29 = 0xD000000000000020;
    v30 = 0x80000001B104CF00;
    sub_1B0FD23C0();
    sub_1B1035C18();
    swift_bridgeObjectRelease();
    sub_1B1035C18();
    sub_1B1035F48();
    sub_1B1035C18();
    swift_bridgeObjectRelease();
    v20 = v29;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v13, v1);
  }
  else
  {
    v23 = sub_1B1034538();
    if (v24)
      v20 = v23;
    else
      v20 = 0xD00000000000001CLL;
    (*(void (**)(__int128 *, uint64_t))(v15 + 8))(v17, v14);
  }
  return v20;
}

uint64_t sub_1B0FD1BC0(uint64_t result, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  if (*(_QWORD *)(a4 + OBJC_IVAR____TtC6LiftUI12RemoteLoader_remoteState))
  {
    v5 = result;
    v6 = *a3;
    swift_retain();
    sub_1B0FECFA8(v5, a2, v6);
    return swift_release();
  }
  return result;
}

uint64_t RemoteLoader.reload<A>(decoding:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  void (*v22)(char *, uint64_t, uint64_t);
  char *v23;
  uint64_t v24;
  void (*v25)(_QWORD *, _QWORD);
  _QWORD *v26;
  _QWORD *v27;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  char v34;
  char *v35;
  char *v36;
  uint64_t result;
  char *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  char *v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  _OWORD v54[7];
  uint64_t v55;
  _QWORD v56[5];

  v8 = sub_1B1035AD4();
  v40 = *(_QWORD *)(v8 - 8);
  v41 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v39 = (uint64_t *)((char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(_QWORD *)(a3 - 8);
  v12 = MEMORY[0x1E0C80A78](v9);
  v38 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v38 - v15;
  MEMORY[0x1E0C80A78](v14);
  v45 = (char *)&v38 - v17;
  if (qword_1EEEDE0B0 != -1)
    swift_once();
  v44 = a1;
  v18 = sub_1B103467C();
  v42 = __swift_project_value_buffer(v18, (uint64_t)qword_1EEF0BA00);
  v19 = sub_1B1034664();
  v20 = sub_1B1035E34();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v21 = 0;
    _os_log_impl(&dword_1B0F50000, v19, v20, "Loading from decoder", v21, 2u);
    MEMORY[0x1B5E15248](v21, -1, -1);
  }

  v22 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v23 = v45;
  v22(v45, a2, a3);
  v24 = sub_1B10344E4();
  v25 = (void (*)(_QWORD *, _QWORD))(*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(a4 + 32))(v56, a3, a4);
  v27 = v26;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v54[0] = *v27;
  *v27 = 0x8000000000000000;
  sub_1B0FD2FB8(v24, (uint64_t)sub_1B0FD2F40, 0, isUniquelyReferenced_nonNull_native, (uint64_t *)v54);
  *v27 = *(_QWORD *)&v54[0];
  swift_bridgeObjectRelease();
  v25(v56, 0);
  v22(v16, (uint64_t)v23, a3);
  sub_1B0FD3BC0();
  sub_1B1034688();
  v43 = *(void (**)(char *, uint64_t))(v11 + 8);
  v43(v16, a3);
  v29 = v56[0];
  if (!v56[0])
    v29 = sub_1B0F554CC(MEMORY[0x1E0DEE9D8]);
  v30 = v41;
  sub_1B0FB9F24();
  v31 = sub_1B1035E40();
  v32 = v39;
  v33 = v40;
  *v39 = v31;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v33 + 104))(v32, *MEMORY[0x1E0DEF740], v30);
  v34 = sub_1B1035AE0();
  (*(void (**)(uint64_t *, uint64_t))(v33 + 8))(v32, v30);
  if ((v34 & 1) != 0)
  {
    sub_1B0F56FC4(v29, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B0FD3C04);
    swift_bridgeObjectRelease();
    v35 = v38;
    v36 = v45;
    v22(v38, (uint64_t)v45, a3);
    sub_1B0FD3C0C();
    sub_1B1034688();
    v43(v35, a3);
    sub_1B0F5A974((uint64_t)v56, (uint64_t)&v46, &qword_1EEEDEBD8);
    if (*((_QWORD *)&v46 + 1))
    {
      v54[5] = v51;
      v54[6] = v52;
      v54[0] = v46;
      v54[1] = v47;
      v54[2] = v48;
      v55 = v53;
      v54[3] = v49;
      v54[4] = v50;
      *((_QWORD *)&v47 + 1) = &type metadata for ViewContent;
      *(_QWORD *)&v48 = sub_1B0F6BCF8();
      *(_QWORD *)&v46 = swift_allocObject();
      sub_1B0F641B8((uint64_t)v54, v46 + 16);
      BYTE8(v48) = 0;
      sub_1B0FCEAB4((uint64_t *)&v46);
      sub_1B0F6427C((uint64_t)v54);
      sub_1B0FD3C50((uint64_t)v56);
      v43(v36, a3);
      return sub_1B0F5A378((uint64_t)&v46);
    }
    else
    {
      sub_1B0FD3C50((uint64_t)v56);
      v43(v36, a3);
      return sub_1B0F5A3AC((uint64_t)&v46, &qword_1EEEDEBD8);
    }
  }
  else
  {
    __break(1u);
    *(_QWORD *)v33 = *(_QWORD *)&v54[0];
    result = swift_bridgeObjectRelease();
    __break(1u);
  }
  return result;
}

uint64_t RemoteLoader.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC6LiftUI12RemoteLoader__status;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE03C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1B0F5A3AC(v0 + OBJC_IVAR____TtC6LiftUI12RemoteLoader_savedStatus, &qword_1EEEE03E0);
  swift_release();
  sub_1B0FD3CD0(v0 + OBJC_IVAR____TtC6LiftUI12RemoteLoader_dataSource);
  swift_release();
  swift_release();
  return v0;
}

uint64_t RemoteLoader.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC6LiftUI12RemoteLoader__status;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE03C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1B0F5A3AC(v0 + OBJC_IVAR____TtC6LiftUI12RemoteLoader_savedStatus, &qword_1EEEE03E0);
  swift_release();
  sub_1B0FD3CD0(v0 + OBJC_IVAR____TtC6LiftUI12RemoteLoader_dataSource);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1B0FD23C0()
{
  uint64_t v0;
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[4];
  uint64_t v13;

  v0 = sub_1B1035F3C();
  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    sub_1B0FDD884(0, v1, 0);
    v2 = v0 + 32;
    v3 = v13;
    do
    {
      sub_1B0F5FD84(v2, (uint64_t)v12);
      __swift_project_boxed_opaque_existential_1(v12, v12[3]);
      v4 = sub_1B0FD256C();
      v6 = v5;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B0FDD884(0, *(_QWORD *)(v3 + 16) + 1, 1);
        v3 = v13;
      }
      v8 = *(_QWORD *)(v3 + 16);
      v7 = *(_QWORD *)(v3 + 24);
      if (v8 >= v7 >> 1)
      {
        sub_1B0FDD884(v7 > 1, v8 + 1, 1);
        v3 = v13;
      }
      *(_QWORD *)(v3 + 16) = v8 + 1;
      v9 = v3 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v4;
      *(_QWORD *)(v9 + 40) = v6;
      v2 += 40;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v3 = MEMORY[0x1E0DEE9D8];
  }
  v12[0] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDEA88);
  sub_1B0F5A7E4(&qword_1EEEDEA90, &qword_1EEEDEA88, MEMORY[0x1E0DEAF20]);
  v10 = sub_1B1035B64();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1B0FD256C()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD v12[4];
  uint64_t v13;
  unint64_t v14;

  swift_getDynamicType();
  swift_getMetatypeMetadata();
  v0 = sub_1B1035BDC();
  v2 = v1;
  v13 = 46;
  v14 = 0xE100000000000000;
  v12[2] = &v13;
  swift_bridgeObjectRetain();
  v3 = (_QWORD *)sub_1B0FD294C(0x7FFFFFFFFFFFFFFFLL, 1, sub_1B0FD4968, (uint64_t)v12, v0, v2);
  if (v3[2] < 2uLL)
  {
    swift_bridgeObjectRelease();
    v13 = v0;
    v14 = v2;
    goto LABEL_5;
  }
  result = swift_bridgeObjectRelease();
  if (v3[2] >= 2uLL)
  {
    v5 = v3[8];
    v6 = v3[9];
    v7 = v3[10];
    v8 = v3[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v9 = MEMORY[0x1B5E14648](v5, v6, v7, v8);
    v11 = v10;
    swift_bridgeObjectRelease();
    v13 = v9;
    v14 = v11;
LABEL_5:
    sub_1B1035C18();
    sub_1B10362A8();
    sub_1B1035C18();
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t EnvironmentValues.remoteLoader.getter()
{
  uint64_t v1;

  sub_1B0FD3CF4();
  sub_1B1034B38();
  return v1;
}

uint64_t sub_1B0FD2710@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_1B0FD3CF4();
  result = sub_1B1034B38();
  *a1 = v3;
  return result;
}

uint64_t sub_1B0FD275C()
{
  sub_1B0FD3CF4();
  swift_retain();
  return sub_1B1034B44();
}

uint64_t EnvironmentValues.remoteLoader.setter()
{
  sub_1B0FD3CF4();
  return sub_1B1034B44();
}

uint64_t sub_1B0FD27F0()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for RemoteLoader(0);
  v0 = swift_allocObject();
  result = sub_1B0FCE870();
  qword_1EEEE0398 = v0;
  return result;
}

uint64_t sub_1B0FD282C@<X0>(_QWORD *a1@<X8>)
{
  if (qword_1EEEDE0A0 != -1)
    swift_once();
  *a1 = qword_1EEEE0398;
  return swift_retain();
}

uint64_t (*EnvironmentValues.remoteLoader.modify(uint64_t a1))(_QWORD *a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 16) = v1;
  *(_QWORD *)(a1 + 24) = sub_1B0FD3CF4();
  sub_1B1034B38();
  return sub_1B0FD28CC;
}

uint64_t sub_1B0FD28CC(_QWORD *a1, char a2)
{
  a1[1] = *a1;
  if ((a2 & 1) == 0)
    return sub_1B1034B44();
  swift_retain();
  sub_1B1034B44();
  return swift_release();
}

uint64_t sub_1B0FD294C(uint64_t a1, char a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  unint64_t v48;
  _QWORD v50[4];

  v50[3] = a4;
  if (a1 < 0)
    goto LABEL_42;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = MEMORY[0x1E0DEE9D8];
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = 15;
  v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (v12 = HIBYTE(a6) & 0xF) : (v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0)
      v11 = a5 & 0xFFFFFFFFFFFFLL;
    v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0)
      v30 = 11;
    sub_1B0FD2DE8(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    v13 = *(_QWORD **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  v42 = a1;
  v43 = v10;
  v48 = 4 * v12;
  v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v14 = 15;
  v15 = 15;
  v16 = 15;
  while (1)
  {
    v50[0] = sub_1B1035C6C();
    v50[1] = v17;
    v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
      break;
    v14 = sub_1B1035C0C();
LABEL_9:
    if (v48 == v14 >> 14)
      goto LABEL_29;
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    v14 = sub_1B1035C0C();
    *(_QWORD *)(v47 + 16) = v14;
    v15 = v14;
    v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14)
    goto LABEL_41;
  v20 = sub_1B1035C84();
  v44 = v21;
  v45 = v20;
  v23 = v22;
  v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_1B0FDD664(0, v13[2] + 1, 1, v13);
  v27 = v13[2];
  v26 = v13[3];
  if (v27 >= v26 >> 1)
    v13 = sub_1B0FDD664((_QWORD *)(v26 > 1), v27 + 1, 1, v13);
  v13[2] = v27 + 1;
  v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(_QWORD *)(v43 + 16) = v13;
  v29 = sub_1B1035C0C();
  v14 = v29;
  *(_QWORD *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    v15 = v29;
    v16 = v29;
    goto LABEL_9;
  }
  v16 = v29;
  v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    v31 = sub_1B1035C84();
    v33 = v32;
    v35 = v34;
    v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_1B0FDD664(0, v13[2] + 1, 1, v13);
    v39 = v13[2];
    v38 = v13[3];
    if (v39 >= v38 >> 1)
      v13 = sub_1B0FDD664((_QWORD *)(v38 > 1), v39 + 1, 1, v13);
    v13[2] = v39 + 1;
    v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(_QWORD *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_1B1036014();
  __break(1u);
LABEL_42:
  result = sub_1B1036014();
  __break(1u);
  return result;
}

uint64_t sub_1B0FD2DE8(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t result;

  v4 = *(_QWORD *)(a2 + 16) >> 14;
  v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1)
    return v5 ^ 1u;
  if (a1 >> 14 >= v4)
  {
    v7 = sub_1B1035C84();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v14 = *(_QWORD **)(a4 + 16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v14 = sub_1B0FDD664(0, v14[2] + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v17 = v14[2];
    v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      v14 = sub_1B0FDD664((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  result = sub_1B1036014();
  __break(1u);
  return result;
}

uint64_t sub_1B0FD2F40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0430) + 48);
  v5 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0438) + 48);
  v6 = sub_1B1036008();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return sub_1B0F57208(v4, v5);
}

uint64_t sub_1B0FD2FB8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  void (*v23)(char *, char *, uint64_t);
  _OWORD *v24;
  char *v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  _QWORD v39[2];
  _OWORD v40[2];
  _OWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v10 = sub_1B1036008();
  v49 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0440);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = -1 << *(_BYTE *)(a1 + 32);
  v17 = ~v16;
  v18 = *(_QWORD *)(a1 + 64);
  v19 = -v16;
  v42 = a1;
  v43 = a1 + 64;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  else
    v20 = -1;
  v44 = v17;
  v45 = 0;
  v46 = v20 & v18;
  v47 = a2;
  v48 = a3;
  v39[1] = a1;
  swift_bridgeObjectRetain();
  v39[0] = a3;
  swift_retain();
  sub_1B0FD32EC((uint64_t)v15);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0438);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v15, 1, v21) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1B0FD48BC();
    return swift_release();
  }
  v23 = *(void (**)(char *, char *, uint64_t))(v49 + 32);
  while (1)
  {
    v25 = &v15[*(int *)(v21 + 48)];
    v23(v12, v15, v10);
    sub_1B0F5A964(v25, v41);
    v26 = *a5;
    v28 = sub_1B0F56A48((uint64_t)v12);
    v29 = *(_QWORD *)(v26 + 16);
    v30 = (v27 & 1) == 0;
    v31 = v29 + v30;
    if (__OFADD__(v29, v30))
      break;
    v32 = v27;
    if (*(_QWORD *)(v26 + 24) >= v31)
    {
      if ((a4 & 1) != 0)
      {
        if ((v27 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        sub_1B0F9D8A0();
        if ((v32 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      sub_1B0F9BD90(v31, a4 & 1);
      v33 = sub_1B0F56A48((uint64_t)v12);
      if ((v32 & 1) != (v34 & 1))
        goto LABEL_22;
      v28 = v33;
      if ((v32 & 1) != 0)
      {
LABEL_7:
        sub_1B0F57208((uint64_t)v41, (uint64_t)v40);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
        (*(void (**)(char *, uint64_t))(v49 + 8))(v12, v10);
        v24 = (_OWORD *)(*(_QWORD *)(*a5 + 56) + 32 * v28);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
        sub_1B0F5A964(v40, v24);
        goto LABEL_8;
      }
    }
    v35 = (_QWORD *)*a5;
    *(_QWORD *)(*a5 + 8 * (v28 >> 6) + 64) |= 1 << v28;
    v23((char *)(v35[6] + *(_QWORD *)(v49 + 72) * v28), v12, v10);
    sub_1B0F5A964(v41, (_OWORD *)(v35[7] + 32 * v28));
    v36 = v35[2];
    v37 = __OFADD__(v36, 1);
    v38 = v36 + 1;
    if (v37)
      goto LABEL_21;
    v35[2] = v38;
LABEL_8:
    sub_1B0FD32EC((uint64_t)v15);
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0438);
    a4 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v15, 1, v21) == 1)
      goto LABEL_5;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_1B10361B8();
  __break(1u);
  return result;
}

uint64_t sub_1B0FD32EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0430);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0448);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v37 - v12;
  v15 = *v1;
  v14 = v1[1];
  v17 = v1[2];
  v16 = v1[3];
  v18 = v1[4];
  v37 = v6;
  if (v18)
  {
    v38 = v14;
    v39 = v17;
    v19 = v4;
    v20 = a1;
    v21 = (v18 - 1) & v18;
    v40 = v16;
    v22 = __clz(__rbit64(v18)) | (v16 << 6);
LABEL_3:
    v23 = *(_QWORD *)(v15 + 48);
    v24 = sub_1B1036008();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v13, v23 + *(_QWORD *)(*(_QWORD *)(v24 - 8) + 72) * v22, v24);
    sub_1B0F57208(*(_QWORD *)(v15 + 56) + 32 * v22, (uint64_t)&v13[*(int *)(v3 + 48)]);
    v25 = 0;
    a1 = v20;
    v4 = v19;
    v14 = v38;
    v17 = v39;
    goto LABEL_4;
  }
  v32 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
    return result;
  }
  v33 = (unint64_t)(v17 + 64) >> 6;
  if (v32 >= v33)
  {
    v40 = v16;
    v21 = 0;
    v25 = 1;
    goto LABEL_4;
  }
  v34 = *(_QWORD *)(v14 + 8 * v32);
  if (v34)
  {
LABEL_11:
    v38 = v14;
    v39 = v17;
    v19 = v4;
    v20 = a1;
    v21 = (v34 - 1) & v34;
    v22 = __clz(__rbit64(v34)) + (v32 << 6);
    v40 = v32;
    goto LABEL_3;
  }
  v35 = v16 + 2;
  if (v16 + 2 >= v33)
    goto LABEL_27;
  v34 = *(_QWORD *)(v14 + 8 * v35);
  if (v34)
  {
LABEL_15:
    v32 = v35;
    goto LABEL_11;
  }
  if (v16 + 3 >= v33)
    goto LABEL_28;
  v34 = *(_QWORD *)(v14 + 8 * (v16 + 3));
  if (v34)
  {
    v32 = v16 + 3;
    goto LABEL_11;
  }
  v35 = v16 + 4;
  if (v16 + 4 < v33)
  {
    v34 = *(_QWORD *)(v14 + 8 * v35);
    if (v34)
      goto LABEL_15;
    v32 = v16 + 5;
    if (v16 + 5 < v33)
    {
      v34 = *(_QWORD *)(v14 + 8 * v32);
      if (v34)
        goto LABEL_11;
      v32 = v33 - 1;
      v36 = v16 + 6;
      while (v33 != v36)
      {
        v34 = *(_QWORD *)(v14 + 8 * v36++);
        if (v34)
        {
          v32 = v36 - 1;
          goto LABEL_11;
        }
      }
LABEL_27:
      v21 = 0;
      v25 = 1;
      v40 = v32;
      goto LABEL_4;
    }
LABEL_28:
    v21 = 0;
    v25 = 1;
    v40 = v35;
    goto LABEL_4;
  }
  v21 = 0;
  v25 = 1;
  v40 = v16 + 3;
LABEL_4:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v13, v25, 1, v3);
  *v1 = v15;
  v1[1] = v14;
  v26 = v40;
  v1[2] = v17;
  v1[3] = v26;
  v1[4] = v21;
  v27 = (void (*)(uint64_t))v1[5];
  sub_1B0FB0EE0((uint64_t)v13, (uint64_t)v10, &qword_1EEEE0448);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1)
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0438);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(a1, 1, 1, v28);
  }
  else
  {
    v29 = (uint64_t)v10;
    v30 = (uint64_t)v37;
    sub_1B0FB0EE0(v29, (uint64_t)v37, &qword_1EEEE0430);
    v27(v30);
    sub_1B0F5A3AC(v30, &qword_1EEEE0430);
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0438);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(a1, 0, 1, v31);
  }
}

uint64_t sub_1B0FD362C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_BYTE *, _QWORD);
  _BYTE v12[32];
  __int128 v13;
  __int128 v14;

  v3 = sub_1B1036008();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = OBJC_IVAR____TtC6LiftUI12RemoteLoader_remoteState;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC6LiftUI12RemoteLoader_remoteState) = a1;
  swift_retain();
  swift_release();
  if (qword_1EEEDE090 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v3, (uint64_t)qword_1EEF0B9B0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, v8, v3);
  v9 = *(_QWORD *)(v1 + v7);
  if (v9)
  {
    *((_QWORD *)&v14 + 1) = type metadata accessor for RemoteStateStore(0);
    *(_QWORD *)&v13 = v9;
  }
  else
  {
    v13 = 0u;
    v14 = 0u;
  }
  swift_retain();
  v10 = (uint64_t (*)(_BYTE *, _QWORD))sub_1B10344D8();
  sub_1B0FCE224((uint64_t)&v13, (uint64_t)v6);
  return v10(v12, 0);
}

uint64_t _s6LiftUI12RemoteLoaderC11remoteState15contentRegistryAcA0cF5StoreC_AA07ContentH0CtcfC_0(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void (*v11)(_BYTE *, _QWORD);
  uint64_t v12;
  _BYTE v14[32];
  _QWORD v15[4];

  v3 = sub_1B1036008();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for RemoteLoader(0);
  v7 = swift_allocObject();
  sub_1B0FCE870();
  v8 = qword_1EEEDE0B8;
  swift_retain();
  if (v8 != -1)
    swift_once();
  v9 = __swift_project_value_buffer(v3, (uint64_t)qword_1EEF0BA18);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, v9, v3);
  v15[3] = type metadata accessor for ContentRegistry();
  v15[0] = a2;
  v10 = a2;
  v11 = (void (*)(_BYTE *, _QWORD))sub_1B10344D8();
  sub_1B0FCE224((uint64_t)v15, (uint64_t)v6);
  v11(v14, 0);
  v12 = swift_retain();
  sub_1B0FD362C(v12);
  swift_release();

  swift_release_n();
  return v7;
}

uint64_t sub_1B0FD38DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RemoteContent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B0FD3920()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  unsigned int v7;
  int v8;

  v1 = *(_QWORD *)(type metadata accessor for RemoteContent(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_unknownObjectRelease();
  v3 = v0 + v2;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      sub_1B0F576D8(*(_QWORD *)v3, *(_QWORD *)(v3 + 8));
      break;
    case 1u:
      swift_bridgeObjectRelease();
      break;
    case 2u:
      v4 = sub_1B10345E0();
      (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v2, v4);
      v5 = (uint64_t *)(v3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE130) + 64));
      v6 = v5[1];
      if (v6 >> 60 != 15)
        sub_1B0F576D8(*v5, v6);
      break;
    case 3u:
      sub_1B0F56ADC(*(_QWORD *)v3, *(_QWORD *)(v3 + 8), *(_QWORD *)(v3 + 16), *(_BYTE *)(v3 + 24));
      v7 = *(unsigned __int8 *)(v3 + 56);
      if (v7 <= 0xFD)
        sub_1B0F56ADC(*(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), v7);
      v8 = *(unsigned __int8 *)(v3 + 88);
      if (v8 != 255)
        sub_1B0F571A8(*(_QWORD *)(v3 + 64), *(_QWORD *)(v3 + 72), *(_QWORD *)(v3 + 80), v8 & 1);
      swift_release();
      break;
    default:
      break;
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B0FD3A7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RemoteContent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B0FD3AC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(type metadata accessor for RemoteContent(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  v10 = *(_QWORD *)v9;
  v11 = *(_BYTE *)(v9 + 8);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_1B0F737CC;
  return sub_1B0FCEC64(a1, v6, v7, v8, v10, v11);
}

uint64_t sub_1B0FD3B70@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  sub_1B0FD3CF4();
  result = sub_1B1034B38();
  *a1 = v3;
  return result;
}

unint64_t sub_1B0FD3BC0()
{
  unint64_t result;

  result = qword_1EEEE03C8;
  if (!qword_1EEEE03C8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1048C7C, &type metadata for LiftUIDataResponse);
    atomic_store(result, (unint64_t *)&qword_1EEEE03C8);
  }
  return result;
}

uint64_t sub_1B0FD3C04(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_1B0FD1BC0(a1, a2, a3, v3);
}

unint64_t sub_1B0FD3C0C()
{
  unint64_t result;

  result = qword_1EEEE03D0;
  if (!qword_1EEEE03D0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1048C54, &type metadata for LiftUIViewResponse);
    atomic_store(result, (unint64_t *)&qword_1EEEE03D0);
  }
  return result;
}

uint64_t sub_1B0FD3C50(uint64_t a1)
{
  destroy for LiftUIViewResponse(a1);
  return a1;
}

uint64_t sub_1B0FD3C84()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B0FD3CD0(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

unint64_t sub_1B0FD3CF4()
{
  unint64_t result;

  result = qword_1EEEE03E8;
  if (!qword_1EEEE03E8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1043194, &type metadata for RemoteLoaderKey);
    atomic_store(result, (unint64_t *)&qword_1EEEE03E8);
  }
  return result;
}

unint64_t sub_1B0FD3D3C()
{
  unint64_t result;

  result = qword_1EEEE03F0;
  if (!qword_1EEEE03F0)
  {
    result = MEMORY[0x1B5E15188](&protocol conformance descriptor for ReloadType, &type metadata for ReloadType);
    atomic_store(result, (unint64_t *)&qword_1EEEE03F0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ReloadType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B0FD3DD4 + 4 * byte_1B1042F56[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B0FD3E08 + 4 * byte_1B1042F51[v4]))();
}

uint64_t sub_1B0FD3E08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B0FD3E10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B0FD3E18);
  return result;
}

uint64_t sub_1B0FD3E24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B0FD3E2CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B0FD3E30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B0FD3E38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReloadType()
{
  return &type metadata for ReloadType;
}

uint64_t sub_1B0FD3E54()
{
  return type metadata accessor for RemoteLoader(0);
}

uint64_t type metadata accessor for RemoteLoader(uint64_t a1)
{
  return sub_1B0F52C7C(a1, (uint64_t *)&unk_1EEEE03F8);
}

void sub_1B0FD3E70()
{
  unint64_t v0;

  sub_1B0FD3F20();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for RemoteLoader()
{
  return swift_lookUpClassMethod();
}

void sub_1B0FD3F20()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEEE0408)
  {
    v0 = sub_1B103470C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEEE0408);
  }
}

void destroy for RemoteLoader.Status(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 >= 2)
    v1 = *(_DWORD *)a1 + 2;
  if (v1 == 1)
  {

  }
  else if (!v1)
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
  }
}

uint64_t initializeWithCopy for RemoteLoader.Status(uint64_t a1, uint64_t *a2)
{
  unsigned int v3;
  __int128 v4;
  uint64_t v5;
  id v6;
  __int128 v7;

  v3 = *((unsigned __int8 *)a2 + 40);
  if (v3 >= 2)
    v3 = *(_DWORD *)a2 + 2;
  if (v3 == 1)
  {
    v5 = *a2;
    v6 = (id)*a2;
    *(_QWORD *)a1 = v5;
    *(_BYTE *)(a1 + 40) = 1;
  }
  else if (v3)
  {
    v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)((char *)a2 + 25);
  }
  else
  {
    v4 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v4;
    (**(void (***)(uint64_t))(v4 - 8))(a1);
    *(_BYTE *)(a1 + 40) = 0;
  }
  return a1;
}

uint64_t assignWithCopy for RemoteLoader.Status(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  void *v7;
  id v8;
  __int128 v9;
  __int128 v10;

  if ((__int128 *)a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
    {

    }
    else if (!v4)
    {
      __swift_destroy_boxed_opaque_existential_1(a1);
    }
    v5 = *((unsigned __int8 *)a2 + 40);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v7 = *(void **)a2;
      v8 = v7;
      *(_QWORD *)a1 = v7;
      *(_BYTE *)(a1 + 40) = 1;
    }
    else if (v5)
    {
      v9 = *a2;
      v10 = a2[1];
      *(_OWORD *)(a1 + 25) = *(__int128 *)((char *)a2 + 25);
      *(_OWORD *)a1 = v9;
      *(_OWORD *)(a1 + 16) = v10;
    }
    else
    {
      v6 = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
      *(_BYTE *)(a1 + 40) = 0;
    }
  }
  return a1;
}

uint64_t assignWithTake for RemoteLoader.Status(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
    {

    }
    else if (!v4)
    {
      __swift_destroy_boxed_opaque_existential_1(a1);
    }
    v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 40) = 1;
    }
    else
    {
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      if (v5)
      {
        *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
      }
      else
      {
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_BYTE *)(a1 + 40) = 0;
      }
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteLoader.Status(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 3)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for RemoteLoader.Status(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteLoader.Status()
{
  return &type metadata for RemoteLoader.Status;
}

uint64_t sub_1B0FD4270(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEDE280);
  v2 = sub_1B103497C();
  v4[0] = v1;
  v4[1] = sub_1B0F5A7E4(&qword_1EEEDE278, &qword_1EEEDE280, MEMORY[0x1E0CDCF80]);
  return MEMORY[0x1B5E15188](MEMORY[0x1E0CD9C20], v2, v4);
}

ValueMetadata *type metadata accessor for RemoteLoaderKey()
{
  return &type metadata for RemoteLoaderKey;
}

uint64_t *sub_1B0FD4300(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v10 = sub_1B10344C0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v8 = sub_1B10345E0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1B0FD43EC(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v3 = sub_1B10344C0();
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v3 = sub_1B10345E0();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
}

void *sub_1B0FD4448(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v8 = sub_1B10344C0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_1B10345E0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1B0FD450C(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_1B0FD45E0((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v8 = sub_1B10344C0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = sub_1B10345E0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1B0FD45E0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RemoteLoaderError(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for RemoteLoaderError(uint64_t a1)
{
  return sub_1B0F52C7C(a1, (uint64_t *)&unk_1EEEE0410);
}

void *sub_1B0FD4630(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v8 = sub_1B10344C0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_1B10345E0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1B0FD46F4(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_1B0FD45E0((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v8 = sub_1B10344C0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = sub_1B10345E0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1B0FD47C8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1B10345E0();
  if (v1 <= 0x3F)
  {
    result = sub_1B10344C0();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1B0FD4848(uint64_t *a1, uint64_t a2)
{
  initializeWithCopy for RemoteLoader.Status(a2, a1);
  return a2;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_1B0FD48BC()
{
  return swift_release();
}

uint64_t sub_1B0FD48C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE03E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B0FD490C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1B0F576D8(a1, a2);
  return a1;
}

unint64_t sub_1B0FD4920()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEEDE160;
  if (!qword_1EEEDE160)
  {
    v1 = type metadata accessor for RemoteLoaderError(255);
    result = MEMORY[0x1B5E15188](&unk_1B10431CC, v1);
    atomic_store(result, (unint64_t *)&qword_1EEEDE160);
  }
  return result;
}

uint64_t sub_1B0FD4968(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1])
    return 1;
  else
    return sub_1B1036128() & 1;
}

uint64_t sub_1B0FD49BC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B0FD49E0()
{
  return swift_deallocObject();
}

uint64_t sub_1B0FD49F4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)(v0 + 16);
  v2 = (void *)sub_1B103458C();
  v3 = objc_msgSend(v1, sel_viewForError_, v2);

  if (!v3)
    return 0;
  sub_1B0FD6268();
  return sub_1B1035840();
}

id sub_1B0FD4A6C()
{
  uint64_t v0;
  id result;

  result = objc_msgSend(*(id *)(v0 + 16), sel_loadingView);
  if (result)
  {
    sub_1B0FD6268();
    return (id)sub_1B1035840();
  }
  return result;
}

void sub_1B0FD4ABC()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = (id)sub_1B1035B88();
  objc_msgSend(v1, sel_didFinishLoadingRemoteContentViewWithId_, v2);

}

void sub_1B0FD4B00()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)(v0 + 16);
  v2 = (void *)sub_1B1035B88();
  v3 = (id)sub_1B103458C();
  objc_msgSend(v1, sel_didFinishLoadingRemoteContentViewWithId_error_, v2, v3);

}

void sub_1B0FD4B64()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = *(void **)(v0 + 16);
  v2 = (void *)sub_1B10345BC();
  v7[0] = 0;
  v3 = objc_msgSend(v1, sel_requestFor_error_, v2, v7);

  v4 = v7[0];
  if (v3)
  {
    sub_1B1034478();
    v5 = v4;

  }
  else
  {
    v6 = v7[0];
    sub_1B1034598();

    swift_willThrow();
  }
}

uint64_t sub_1B0FD4C48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 136) = a1;
  *(_QWORD *)(v2 + 144) = v1;
  return swift_task_switch();
}

uint64_t sub_1B0FD4C60()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(void **)(v0[18] + 16);
  v2 = sub_1B103446C();
  v0[19] = v2;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_1B0FD4D10;
  v3 = swift_continuation_init();
  v0[10] = MEMORY[0x1E0C809B0];
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_1B0FD4DF0;
  v4[3] = &block_descriptor_1;
  v4[4] = v3;
  objc_msgSend(v1, sel_dataFor_completionHandler_, v2, v4);
  return swift_continuation_await();
}

uint64_t sub_1B0FD4D10()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 160) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_1B0FD4D70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_1B0FD4DB0()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 152);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B0FD4DF0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE3F8);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v8 = a2;
    v9 = sub_1B10345F8();
    v11 = v10;

    v12 = *(uint64_t **)(*(_QWORD *)(v3 + 64) + 40);
    *v12 = v9;
    v12[1] = v11;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1B0FD4E90()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

void sub_1B0FD4EB4()
{
  sub_1B0FD4B64();
}

uint64_t sub_1B0FD4EC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1B0FD4F28;
  v4[17] = a1;
  v4[18] = v1;
  return swift_task_switch();
}

uint64_t sub_1B0FD4F28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *v3;
  v7 = swift_task_dealloc();
  if (!v2)
  {
    v7 = a1;
    v8 = a2;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
}

id sub_1B0FD4F8C()
{
  id *v0;

  return *v0;
}

uint64_t sub_1B0FD4FA4()
{
  return sub_1B1034E44();
}

uint64_t sub_1B0FD4FE4()
{
  sub_1B0FD62E4();
  return sub_1B1034EA4();
}

uint64_t sub_1B0FD5034()
{
  sub_1B0FD62E4();
  return sub_1B1034E50();
}

void sub_1B0FD5084()
{
  sub_1B0FD62E4();
  sub_1B1034E98();
  __break(1u);
}

uint64_t static LiftUIFactory.viewController(json:delegate:dataSource:contentRegistry:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v12 = type metadata accessor for RemoteContent(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (uint64_t *)((char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v14 = a1;
  v14[1] = a2;
  swift_storeEnumTagMultiPayload();
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_bridgeObjectRetain();
  v15 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  v16 = LocalStateStore.init()();
  v17 = sub_1B0FD5718((uint64_t)v14, a3, a4, a5, v15, v16, a6);
  swift_release();
  swift_release();
  sub_1B0F57B2C((uint64_t)v14, type metadata accessor for RemoteContent);
  return v17;
}

uint64_t static LiftUIFactory.viewController(data:delegate:dataSource:contentRegistry:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v12 = type metadata accessor for RemoteContent(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (uint64_t *)((char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v14 = a1;
  v14[1] = a2;
  swift_storeEnumTagMultiPayload();
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  sub_1B0F57594(a1, a2);
  v15 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  v16 = LocalStateStore.init()();
  v17 = sub_1B0FD5718((uint64_t)v14, a3, a4, a5, v15, v16, a6);
  swift_release();
  swift_release();
  sub_1B0F57B2C((uint64_t)v14, type metadata accessor for RemoteContent);
  return v17;
}

uint64_t static LiftUIFactory.viewController(url:delegate:dataSource:contentRegistry:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v10 = type metadata accessor for RemoteContent(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE130);
  v14 = *(int *)(v13 + 48);
  v15 = *(int *)(v13 + 64);
  v16 = sub_1B10345E0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v12, a1, v16);
  v12[v14] = 8;
  *(_OWORD *)&v12[v15] = xmmword_1B10369A0;
  swift_storeEnumTagMultiPayload();
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  v17 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  v18 = LocalStateStore.init()();
  v19 = sub_1B0FD5718((uint64_t)v12, a2, a3, a4, v17, v18, a5);
  swift_release();
  swift_release();
  sub_1B0F57B2C((uint64_t)v12, type metadata accessor for RemoteContent);
  return v19;
}

id LiftUIFactory.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id LiftUIFactory.init()()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LiftUIFactory();
  return objc_msgSendSuper2(&v2, sel_init);
}

id LiftUIFactory.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LiftUIFactory();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1B0FD5718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t KeyPath;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t *v41;
  void *v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  void *v56;
  id v57;
  id v58;
  _QWORD v60[2];
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;

  v69 = a6;
  v70 = a7;
  v71 = a4;
  v72 = a3;
  v66 = a1;
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0490);
  MEMORY[0x1E0C80A78](v61);
  v10 = (char *)v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0498);
  MEMORY[0x1E0C80A78](v62);
  v63 = (uint64_t)v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1B103461C();
  v67 = *(_QWORD *)(v12 - 8);
  v68 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for RemoteContent(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for RemoteContentView(0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (_QWORD *)((char *)v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE04A0);
  MEMORY[0x1E0C80A78](v64);
  v22 = (char *)v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE04A8);
  MEMORY[0x1E0C80A78](v65);
  v24 = (char *)v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE04B0);
  v26 = MEMORY[0x1E0C80A78](v25);
  v28 = (char *)v60 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v63 = v26;
    type metadata accessor for LiftUIUIKitDelegateWrapper();
    v62 = swift_allocObject();
    *(_QWORD *)(v62 + 16) = a2;
    v60[1] = a2;
    sub_1B0F5A42C(v66, (uint64_t)v17, type metadata accessor for RemoteContent);
    swift_unknownObjectRetain_n();
    swift_retain();
    v29 = a5;
    v30 = v69;
    swift_retain();
    sub_1B1034610();
    v31 = sub_1B1034604();
    v33 = v32;
    (*(void (**)(char *, uint64_t))(v67 + 8))(v14, v68);
    sub_1B0F527B8(v31, v33, (uint64_t)v17, v29, v30, v20);
    KeyPath = swift_getKeyPath();
    type metadata accessor for AnyWeakDelegate();
    v35 = swift_allocObject();
    *(_QWORD *)(v35 + 24) = 0;
    swift_unknownObjectWeakInit();
    *(_QWORD *)(v35 + 24) = &off_1E62933D0;
    swift_unknownObjectWeakAssign();
    sub_1B0F5A42C((uint64_t)v20, (uint64_t)v22, type metadata accessor for RemoteContentView);
    v36 = (uint64_t *)&v22[*(int *)(v64 + 36)];
    *v36 = KeyPath;
    v36[1] = v35;
    v36[2] = (uint64_t)&off_1E6296350;
    sub_1B0F57B2C((uint64_t)v20, type metadata accessor for RemoteContentView);
    v37 = swift_getKeyPath();
    type metadata accessor for AnyWeakDataSource();
    v38 = swift_allocObject();
    *(_QWORD *)(v38 + 24) = 0;
    swift_unknownObjectWeakInit();
    *(_QWORD *)(v38 + 24) = v71;
    swift_unknownObjectWeakAssign();
    sub_1B0F5A974((uint64_t)v22, (uint64_t)v24, &qword_1EEEE04A0);
    v39 = (uint64_t *)&v24[*(int *)(v65 + 36)];
    *v39 = v37;
    v39[1] = v38;
    v39[2] = (uint64_t)&off_1E6297588;
    sub_1B0F5A3AC((uint64_t)v22, &qword_1EEEE04A0);
    v40 = swift_getKeyPath();
    sub_1B0F5A974((uint64_t)v24, (uint64_t)v28, &qword_1EEEE04A8);
    v41 = (uint64_t *)&v28[*(int *)(v63 + 36)];
    v42 = v70;
    *v41 = v40;
    v41[1] = (uint64_t)v42;
    v43 = v42;
    sub_1B0F5A3AC((uint64_t)v24, &qword_1EEEE04A8);
    v44 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE04C0));
    v45 = sub_1B1034E20();
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_1B0F5A42C(v66, (uint64_t)v17, type metadata accessor for RemoteContent);
    swift_retain();
    v46 = v69;
    swift_retain();
    sub_1B1034610();
    v47 = sub_1B1034604();
    v49 = v48;
    (*(void (**)(char *, uint64_t))(v67 + 8))(v14, v68);
    sub_1B0F527B8(v47, v49, (uint64_t)v17, a5, v46, v20);
    v50 = swift_getKeyPath();
    type metadata accessor for AnyWeakDataSource();
    v51 = swift_allocObject();
    *(_QWORD *)(v51 + 24) = 0;
    swift_unknownObjectWeakInit();
    *(_QWORD *)(v51 + 24) = v71;
    swift_unknownObjectWeakAssign();
    sub_1B0F5A42C((uint64_t)v20, (uint64_t)v10, type metadata accessor for RemoteContentView);
    v52 = (uint64_t *)&v10[*(int *)(v61 + 36)];
    *v52 = v50;
    v52[1] = v51;
    v52[2] = (uint64_t)&off_1E6297588;
    sub_1B0F57B2C((uint64_t)v20, type metadata accessor for RemoteContentView);
    v53 = swift_getKeyPath();
    v54 = v63;
    sub_1B0F5A974((uint64_t)v10, v63, &qword_1EEEE0490);
    v55 = (uint64_t *)(v54 + *(int *)(v62 + 36));
    v56 = v70;
    *v55 = v53;
    v55[1] = (uint64_t)v56;
    v57 = v56;
    sub_1B0F5A3AC((uint64_t)v10, &qword_1EEEE0490);
    v58 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE04B8));
    return sub_1B1034E20();
  }
  return v45;
}

uint64_t _s6LiftUI0A9UIFactoryC14viewController4json8delegate10dataSourceSo06UIViewE0CSS_So0A10UIDelegate_pSgSo0a6UIDataI0_pSgtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _UNKNOWN **v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v8 = type metadata accessor for RemoteContent(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a4)
  {
    type metadata accessor for LiftUIObjcDataSourceWrapper();
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = a4;
    v12 = &off_1E62933F8;
  }
  else
  {
    type metadata accessor for BasicLiftUIDataSource();
    v11 = swift_allocObject();
    v12 = &protocol witness table for BasicLiftUIDataSource;
  }
  v13 = objc_allocWithZone((Class)type metadata accessor for ContentRegistry());
  swift_unknownObjectRetain();
  v14 = objc_msgSend(v13, sel_init);
  *v10 = a1;
  v10[1] = a2;
  swift_storeEnumTagMultiPayload();
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  swift_bridgeObjectRetain();
  v15 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  v16 = LocalStateStore.init()();
  v17 = sub_1B0FD5718((uint64_t)v10, a3, v11, (uint64_t)v12, v15, v16, v14);
  swift_release();
  swift_release();
  sub_1B0F57B2C((uint64_t)v10, type metadata accessor for RemoteContent);
  swift_unknownObjectRelease();

  return v17;
}

uint64_t _s6LiftUI0A9UIFactoryC14viewController4data8delegate0F6SourceSo06UIViewE0C10Foundation4DataV_So0A10UIDelegate_pSgSo0a6UIDataH0_pSgtFZ_0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  _UNKNOWN **v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v8 = type metadata accessor for RemoteContent(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a4)
  {
    type metadata accessor for LiftUIObjcDataSourceWrapper();
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = a4;
    v12 = &off_1E62933F8;
  }
  else
  {
    type metadata accessor for BasicLiftUIDataSource();
    v11 = swift_allocObject();
    v12 = &protocol witness table for BasicLiftUIDataSource;
  }
  v13 = objc_allocWithZone((Class)type metadata accessor for ContentRegistry());
  swift_unknownObjectRetain();
  v14 = objc_msgSend(v13, sel_init);
  *v10 = a1;
  v10[1] = a2;
  swift_storeEnumTagMultiPayload();
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  sub_1B0F57594(a1, a2);
  v15 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  v16 = LocalStateStore.init()();
  v17 = sub_1B0FD5718((uint64_t)v10, a3, v11, (uint64_t)v12, v15, v16, v14);
  swift_release();
  swift_release();
  sub_1B0F57B2C((uint64_t)v10, type metadata accessor for RemoteContent);
  swift_unknownObjectRelease();

  return v17;
}

uint64_t _s6LiftUI0A9UIFactoryC14viewController3url8delegate10dataSourceSo06UIViewE0C10Foundation3URLV_So0A10UIDelegate_pSgSo0a6UIDataI0_pSgtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _UNKNOWN **v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v6 = type metadata accessor for RemoteContent(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    type metadata accessor for LiftUIObjcDataSourceWrapper();
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = a3;
    v10 = &off_1E62933F8;
  }
  else
  {
    type metadata accessor for BasicLiftUIDataSource();
    v9 = swift_allocObject();
    v10 = &protocol witness table for BasicLiftUIDataSource;
  }
  v11 = objc_allocWithZone((Class)type metadata accessor for ContentRegistry());
  swift_unknownObjectRetain();
  v12 = objc_msgSend(v11, sel_init);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE130);
  v14 = *(int *)(v13 + 48);
  v15 = *(int *)(v13 + 64);
  v16 = sub_1B10345E0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v8, a1, v16);
  v8[v14] = 8;
  *(_OWORD *)&v8[v15] = xmmword_1B10369A0;
  swift_storeEnumTagMultiPayload();
  type metadata accessor for RemoteStateStore(0);
  swift_allocObject();
  v17 = RemoteStateStore.init()();
  type metadata accessor for LocalStateStore(0);
  swift_allocObject();
  v18 = LocalStateStore.init()();
  v19 = sub_1B0FD5718((uint64_t)v8, a2, v9, (uint64_t)v10, v17, v18, v12);
  swift_release();
  swift_release();
  sub_1B0F57B2C((uint64_t)v8, type metadata accessor for RemoteContent);
  swift_unknownObjectRelease();

  return v19;
}

uint64_t type metadata accessor for LiftUIFactory()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for LiftUIUIKitDelegateWrapper()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for LiftUIObjcDataSourceWrapper()
{
  return objc_opt_self();
}

unint64_t sub_1B0FD6268()
{
  unint64_t result;

  result = qword_1EEEE0480;
  if (!qword_1EEEE0480)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1043418, &type metadata for AnyUIViewRepresentable);
    atomic_store(result, &qword_1EEEE0480);
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyUIViewRepresentable()
{
  return &type metadata for AnyUIViewRepresentable;
}

uint64_t sub_1B0FD62D8()
{
  return MEMORY[0x1E0CE0788];
}

unint64_t sub_1B0FD62E4()
{
  unint64_t result;

  result = qword_1EEEE04C8;
  if (!qword_1EEEE04C8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1043388, &type metadata for AnyUIViewRepresentable);
    atomic_store(result, (unint64_t *)&qword_1EEEE04C8);
  }
  return result;
}

uint64_t sub_1B0FD6328@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  char v6;

  if (*(_QWORD *)(a3 + 16) && (result = sub_1B0F56A3C(result, a2), (v6 & 1) != 0))
  {
    *a4 = *(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * result);
    return swift_retain();
  }
  else
  {
    *a4 = 0xF000000000000007;
  }
  return result;
}

unint64_t StringResolvable.resolved(with:)(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  char v42;
  unint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t, uint64_t);
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v77 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE04D0);
  v78 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE04D8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)v1;
  v10 = *(_QWORD *)(v1 + 8);
  v12 = *(_QWORD *)(v1 + 16);
  v13 = *(unsigned __int8 *)(v1 + 24);
  if (!(v13 >> 6))
  {
    sub_1B0F56BC8(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_QWORD *)(v1 + 16), v13 & 1);
    v1 = sub_1B0FD70A8(v77, v11, v10, v12, v13 & 1);
    sub_1B0F56ADC(v11, v10, v12, v13);
    return v1;
  }
  if (v13 >> 6 == 1)
  {
    v14 = v77;
    swift_retain();
    v15 = v82;
    v16 = sub_1B0FDED78(v11, v14);
    swift_release();
    if (!v15)
    {
      *(_QWORD *)&v79 = v16;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDEA88);
      sub_1B0F5A7E4(&qword_1EEEDEA90, &qword_1EEEDEA88, MEMORY[0x1E0DEAF20]);
      v1 = sub_1B1035B64();
      swift_bridgeObjectRelease();
    }
    return v1;
  }
  v72 = (char *)v7;
  v1 = v13 & 1;
  sub_1B0F56BC8(v11, v10, v12, v13 & 1);
  v17 = v82;
  v19 = sub_1B0FD70A8(v77, v11, v10, v12, v13 & 1);
  v20 = v11;
  v21 = v17;
  if (v17)
  {
    sub_1B0F56ADC(v20, v10, v12, v13);
    return v1;
  }
  v22 = v18;
  v66 = v10;
  v67 = v12;
  v68 = v20;
  v69 = v13;
  v70 = v6;
  v23 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE04E0);
  sub_1B1034640();
  *(_QWORD *)&v79 = v23;
  *((_QWORD *)&v79 + 1) = v22;
  v76 = v22;
  sub_1B0FD72B4();
  sub_1B0F5A7E4(&qword_1EEEE04F0, &qword_1EEEE04D8, MEMORY[0x1E0DF1F60]);
  v1 = (unint64_t)&v79;
  v71 = v9;
  v24 = sub_1B1035B58();
  v25 = *(char **)(v24 + 16);
  if (v25)
  {
    v82 = 0;
    v26 = *(unsigned __int8 *)(v78 + 80);
    v65 = v24;
    v21 = v24 + ((v26 + 32) & ~v26);
    v73 = *(_QWORD *)(v78 + 72);
    v27 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v28 = 15;
    v29 = *(void (**)(char *, uint64_t, uint64_t))(v78 + 16);
    v74 = v23;
    v75 = v29;
    while (1)
    {
      v75(v4, v21, v2);
      v1 = (unint64_t)v4;
      if ((unint64_t)sub_1B1034658() >> 14 < v28 >> 14)
        break;
      v30 = sub_1B1035C84();
      v31 = MEMORY[0x1B5E14648](v30);
      v33 = v32;
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v27 = sub_1B0FDCFE8(0, v27[2] + 1, 1, v27);
      v35 = v27[2];
      v34 = v27[3];
      if (v35 >= v34 >> 1)
        v27 = sub_1B0FDCFE8((_QWORD *)(v34 > 1), v35 + 1, 1, v27);
      v27[2] = v35 + 1;
      v36 = &v27[4 * v35];
      v36[4] = v31;
      v36[5] = v33;
      v36[6] = 0;
      *((_BYTE *)v36 + 56) = 0;
      swift_getKeyPath();
      sub_1B103464C();
      swift_release();
      v37 = MEMORY[0x1B5E14648](v79, *((_QWORD *)&v79 + 1), v80, v81);
      v1 = v38;
      swift_bridgeObjectRelease();
      v39 = v82;
      sub_1B0FDC1D8((uint64_t)&v79, 0xFuLL, v37, v1, (uint64_t)&unk_1E629FE78, (void (*)(uint64_t, uint64_t, unint64_t))sub_1B0F56BC8, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_1B0FE6CDC, (void (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_1B0F92F34, (uint64_t)&unk_1E629FEA0, (void (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_1B0F92EA8);
      v82 = v39;
      if (v39)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1B0F56ADC(v68, v66, v67, v69);
        (*(void (**)(char *, uint64_t))(v78 + 8))(v4, v2);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, char *))(v70 + 8))(v71, v72);
        return v1;
      }
      swift_bridgeObjectRelease();
      v40 = v79;
      v41 = v80;
      v42 = v81;
      v44 = v27[2];
      v43 = v27[3];
      if (v44 >= v43 >> 1)
      {
        v64 = v79;
        v47 = sub_1B0FDCFE8((_QWORD *)(v43 > 1), v44 + 1, 1, v27);
        v40 = v64;
        v27 = v47;
      }
      v27[2] = v44 + 1;
      v45 = &v27[4 * v44];
      *((_OWORD *)v45 + 2) = v40;
      v45[6] = v41;
      *((_BYTE *)v45 + 56) = v42;
      v1 = (unint64_t)v4;
      sub_1B1034658();
      v28 = v46;
      (*(void (**)(char *, uint64_t))(v78 + 8))(v4, v2);
      v23 = v74;
      v21 += v73;
      if (!--v25)
      {
        swift_bridgeObjectRelease();
        v21 = v82;
        goto LABEL_22;
      }
    }
    __break(1u);
    goto LABEL_34;
  }
  swift_bridgeObjectRelease();
  v27 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v28 = 15;
LABEL_22:
  v48 = HIBYTE(v76) & 0xF;
  if ((v76 & 0x2000000000000000) == 0)
    v48 = v23 & 0xFFFFFFFFFFFFLL;
  v25 = v71;
  v4 = v72;
  if (4 * v48 < v28 >> 14)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v49 = sub_1B1035C84();
  v51 = v50;
  v53 = v52;
  v55 = v54;
  swift_bridgeObjectRelease();
  v1 = MEMORY[0x1B5E14648](v49, v51, v53, v55);
  v2 = v56;
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
LABEL_35:
    v27 = sub_1B0FDCFE8(0, v27[2] + 1, 1, v27);
  v57 = v77;
  v59 = v27[2];
  v58 = v27[3];
  if (v59 >= v58 >> 1)
    v27 = sub_1B0FDCFE8((_QWORD *)(v58 > 1), v59 + 1, 1, v27);
  v27[2] = v59 + 1;
  v60 = &v27[4 * v59];
  v60[4] = v1;
  v60[5] = v2;
  v60[6] = 0;
  *((_BYTE *)v60 + 56) = 0;
  swift_retain();
  v61 = sub_1B0FDED78((uint64_t)v27, v57);
  if (v21)
  {
    swift_release();
  }
  else
  {
    v63 = v61;
    swift_bridgeObjectRelease();
    swift_release();
    *(_QWORD *)&v79 = v63;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDEA88);
    sub_1B0F5A7E4(&qword_1EEEDEA90, &qword_1EEEDEA88, MEMORY[0x1E0DEAF20]);
    v1 = sub_1B1035B64();
  }
  sub_1B0F56ADC(v68, v66, v67, v69);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *))(v70 + 8))(v25, v4);
  return v1;
}

uint64_t sub_1B0FD6B00@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unsigned __int8 v20;

  if ((a5 & 1) == 0)
  {
    *(_QWORD *)a6 = a2;
    *(_BYTE *)(a6 + 8) = a3 & 1;
    return result;
  }
  v11 = result;
  if ((~a4 & 0xF000000000000007) != 0)
  {
    sub_1B0F5E604(a2, a3, a4, 1);
    sub_1B0F5A880(a4);
    RemoteStateStore.subscript.getter(a2, a3, &v19);
    v14 = v19;
    if ((~v19 & 0xF000000000000007) != 0)
    {
      swift_bridgeObjectRelease();
      sub_1B0FD8094(v14, v11, a4, a6);
      sub_1B0F571D8(a4);
      sub_1B0FC9D10(v14);
    }
    else
    {
      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v15 = a2;
      *(_QWORD *)(v15 + 8) = a3;
      *(_QWORD *)(v15 + 16) = &type metadata for NumericValue;
      *(_BYTE *)(v15 + 32) = 0;
      swift_willThrow();
      sub_1B0F571D8(a4);
    }
    return sub_1B0F571D8(a4);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1B0F5A880(a4);
    RemoteStateStore.subscript.getter(a2, a3, &v18);
    v12 = v18;
    if ((~v18 & 0xF000000000000007) == 0)
    {
LABEL_5:
      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v13 = a2;
      *(_QWORD *)(v13 + 8) = a3;
      *(_QWORD *)(v13 + 16) = &type metadata for NumericValue;
      *(_BYTE *)(v13 + 32) = 0;
      return swift_willThrow();
    }
    sub_1B0FD7D18(v18, (uint64_t)&v19);
    if (v6)
    {
      swift_bridgeObjectRelease();
      return sub_1B0FC9D10(v12);
    }
    else
    {
      sub_1B0FC9D10(v12);
      v16 = v20;
      if (v20 == 255)
        goto LABEL_5;
      v17 = v19;
      result = swift_bridgeObjectRelease();
      *(_QWORD *)a6 = v17;
      *(_BYTE *)(a6 + 8) = v16 & 1;
    }
  }
  return result;
}

unint64_t sub_1B0FD6CF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v16;

  v5 = a2;
  if ((a5 & 1) != 0)
  {
    if ((~a4 & 0xF000000000000007) != 0)
    {
      sub_1B0F5E604(a2, a3, a4, 1);
      sub_1B0F5A880(a4);
      RemoteStateStore.subscript.getter(v5, a3, &v16);
      v11 = v16;
      if ((~v16 & 0xF000000000000007) != 0)
      {
        swift_bridgeObjectRelease();
        v5 = sub_1B0FD859C(v11, a1, a4);
        sub_1B0F571D8(a4);
        sub_1B0FC9D10(v11);
      }
      else
      {
        sub_1B0FA58DC();
        swift_allocError();
        *(_QWORD *)v12 = v5;
        *(_QWORD *)(v12 + 8) = a3;
        *(_QWORD *)(v12 + 16) = MEMORY[0x1E0DEB418];
        *(_BYTE *)(v12 + 32) = 0;
        swift_willThrow();
        sub_1B0F571D8(a4);
      }
      sub_1B0F571D8(a4);
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1B0F5A880(a4);
      RemoteStateStore.subscript.getter(v5, a3, &v16);
      v9 = v16;
      if ((~v16 & 0xF000000000000007) != 0)
      {
        if (v16 >> 61 == 1)
        {
          v5 = *(_QWORD *)(v16 + 16);
          sub_1B0FC9D10(v16);
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1B0F970C4();
          swift_allocError();
          v13 = MEMORY[0x1E0DEB418];
          *v14 = v9;
          v14[1] = v13;
          swift_retain();
          swift_willThrow();
          swift_bridgeObjectRelease();
          sub_1B0FC9D10(v9);
        }
      }
      else
      {
        sub_1B0FA58DC();
        swift_allocError();
        *(_QWORD *)v10 = v5;
        *(_QWORD *)(v10 + 8) = a3;
        *(_QWORD *)(v10 + 16) = MEMORY[0x1E0DEB418];
        *(_BYTE *)(v10 + 32) = 0;
        swift_willThrow();
      }
    }
  }
  return v5;
}

uint64_t sub_1B0FD6EFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t *a6@<X8>)
{
  uint64_t result;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;

  if ((a5 & 1) != 0)
  {
    if ((~a4 & 0xF000000000000007) != 0)
    {
      sub_1B0F5A84C(a2, a3, a4, 1);
      sub_1B0F5A880(a4);
      RemoteStateStore.subscript.getter(&v16, a2, a3);
      v14 = v16;
      if ((~v16 & 0xF000000000000007) != 0)
      {
        swift_bridgeObjectRelease();
        sub_1B0FD8B94(v14, a1, a4, a6);
        sub_1B0F571D8(a4);
        sub_1B0FC9D10(v14);
      }
      else
      {
        sub_1B0FA58DC();
        swift_allocError();
        *(_QWORD *)v15 = a2;
        *(_QWORD *)(v15 + 8) = a3;
        *(_QWORD *)(v15 + 16) = &type metadata for DecodableState;
        *(_BYTE *)(v15 + 32) = 0;
        swift_willThrow();
        sub_1B0F571D8(a4);
      }
      return sub_1B0F571D8(a4);
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1B0F5A880(a4);
      RemoteStateStore.subscript.getter(&v16, a2, a3);
      v12 = v16;
      if ((~v16 & 0xF000000000000007) != 0)
      {
        result = swift_bridgeObjectRelease();
        *a6 = v12;
      }
      else
      {
        sub_1B0FA58DC();
        swift_allocError();
        *(_QWORD *)v13 = a2;
        *(_QWORD *)(v13 + 8) = a3;
        *(_QWORD *)(v13 + 16) = &type metadata for DecodableState;
        *(_BYTE *)(v13 + 32) = 0;
        return swift_willThrow();
      }
    }
  }
  else
  {
    *a6 = a2;
    return swift_retain();
  }
  return result;
}

uint64_t sub_1B0FD70A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v17;

  v7 = a2;
  if ((a5 & 1) != 0)
  {
    if ((~a4 & 0xF000000000000007) != 0)
    {
      sub_1B0F56BC8(a2, a3, a4, 1);
      sub_1B0F5A880(a4);
      RemoteStateStore.subscript.getter(v7, a3, &v17);
      v12 = v17;
      if ((~v17 & 0xF000000000000007) != 0)
      {
        swift_bridgeObjectRelease();
        v15 = sub_1B0FD906C(v12, a1, a4);
        if (!v5)
        {
          v7 = v15;
          sub_1B0F571D8(a4);
          sub_1B0FC9D10(v12);
          sub_1B0F571D8(a4);
          return v7;
        }
        sub_1B0F571D8(a4);
        sub_1B0FC9D10(v12);
      }
      else
      {
        sub_1B0FA58DC();
        swift_allocError();
        *(_QWORD *)v13 = v7;
        *(_QWORD *)(v13 + 8) = a3;
        *(_QWORD *)(v13 + 16) = MEMORY[0x1E0DEA968];
        *(_BYTE *)(v13 + 32) = 0;
        swift_willThrow();
        sub_1B0F571D8(a4);
      }
      sub_1B0F571D8(a4);
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1B0F5A880(a4);
      RemoteStateStore.subscript.getter(v7, a3, &v17);
      v10 = v17;
      if ((~v17 & 0xF000000000000007) != 0)
      {
        sub_1B0F9877C();
        if (!v5)
          v7 = v14;
        sub_1B0FC9D10(v10);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1B0FA58DC();
        swift_allocError();
        *(_QWORD *)v11 = v7;
        *(_QWORD *)(v11 + 8) = a3;
        *(_QWORD *)(v11 + 16) = MEMORY[0x1E0DEA968];
        *(_BYTE *)(v11 + 32) = 0;
        swift_willThrow();
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v7;
}

unint64_t sub_1B0FD72B4()
{
  unint64_t result;

  result = qword_1EEEE04E8;
  if (!qword_1EEEE04E8)
  {
    result = MEMORY[0x1B5E15188](MEMORY[0x1E0DEA980], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EEEE04E8);
  }
  return result;
}

double sub_1B0FD72F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  double v5;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t *v16;
  unint64_t v18;

  if ((a5 & 1) == 0)
    return *(double *)&a2;
  if ((~a4 & 0xF000000000000007) != 0)
  {
    sub_1B0F5E604(a2, a3, a4, 1);
    sub_1B0F5A880(a4);
    RemoteStateStore.subscript.getter(a2, a3, &v18);
    v12 = v18;
    if ((~v18 & 0xF000000000000007) != 0)
    {
      swift_bridgeObjectRelease();
      v5 = sub_1B0FD9600(v12, a1, a4);
      sub_1B0F571D8(a4);
      sub_1B0FC9D10(v12);
    }
    else
    {
      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v13 = a2;
      *(_QWORD *)(v13 + 8) = a3;
      *(_QWORD *)(v13 + 16) = MEMORY[0x1E0DEB070];
      *(_BYTE *)(v13 + 32) = 0;
      swift_willThrow();
      sub_1B0F571D8(a4);
    }
    sub_1B0F571D8(a4);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1B0F5A880(a4);
    RemoteStateStore.subscript.getter(a2, a3, &v18);
    v10 = v18;
    if ((~v18 & 0xF000000000000007) != 0)
    {
      if (v18 >> 61 == 1)
      {
        v14 = *(_QWORD *)(v18 + 16);
        sub_1B0FC9D10(v18);
        swift_bridgeObjectRelease();
        return (double)v14;
      }
      else
      {
        if (v18 >> 61 == 2)
        {
          v5 = *(double *)(v18 + 16);
          sub_1B0FC9D10(v18);
        }
        else
        {
          sub_1B0F970C4();
          swift_allocError();
          v15 = MEMORY[0x1E0DEB070];
          *v16 = v10;
          v16[1] = v15;
          swift_willThrow();
        }
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v11 = a2;
      *(_QWORD *)(v11 + 8) = a3;
      *(_QWORD *)(v11 + 16) = MEMORY[0x1E0DEB070];
      *(_BYTE *)(v11 + 32) = 0;
      swift_willThrow();
    }
  }
  return v5;
}

uint64_t sub_1B0FD7528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v16;

  if ((a5 & 1) != 0)
  {
    v6 = a1;
    if ((~a4 & 0xF000000000000007) != 0)
    {
      sub_1B0F5E604(a2, a3, a4, 1);
      sub_1B0F5A880(a4);
      RemoteStateStore.subscript.getter(a2, a3, &v16);
      v11 = v16;
      if ((~v16 & 0xF000000000000007) != 0)
      {
        swift_bridgeObjectRelease();
        LOBYTE(v6) = sub_1B0FD9C64(v11, v6, a4);
        sub_1B0F571D8(a4);
        sub_1B0FC9D10(v11);
      }
      else
      {
        sub_1B0FA58DC();
        swift_allocError();
        *(_QWORD *)v12 = a2;
        *(_QWORD *)(v12 + 8) = a3;
        *(_QWORD *)(v12 + 16) = MEMORY[0x1E0DEAFA0];
        *(_BYTE *)(v12 + 32) = 0;
        swift_willThrow();
        sub_1B0F571D8(a4);
      }
      sub_1B0F571D8(a4);
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1B0F5A880(a4);
      RemoteStateStore.subscript.getter(a2, a3, &v16);
      v9 = v16;
      if ((~v16 & 0xF000000000000007) != 0)
      {
        if (v16 >> 61 == 3)
        {
          LOBYTE(v6) = *(_BYTE *)(v16 + 16);
          sub_1B0FC9D10(v16);
        }
        else
        {
          sub_1B0F970C4();
          swift_allocError();
          v13 = MEMORY[0x1E0DEAFA0];
          *v14 = v9;
          v14[1] = v13;
          swift_willThrow();
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1B0FA58DC();
        swift_allocError();
        *(_QWORD *)v10 = a2;
        *(_QWORD *)(v10 + 8) = a3;
        *(_QWORD *)(v10 + 16) = MEMORY[0x1E0DEAFA0];
        *(_BYTE *)(v10 + 32) = 0;
        swift_willThrow();
      }
    }
  }
  else
  {
    LOBYTE(v6) = a2 & 1;
  }
  return v6 & 1;
}

uint64_t sub_1B0FD7724(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v18;

  v5 = a2;
  if ((a5 & 1) != 0)
  {
    if ((~a4 & 0xF000000000000007) != 0)
    {
      sub_1B0F767BC(a2, a3, a4, 1, sub_1B0F76F14);
      sub_1B0F5A880(a4);
      RemoteStateStore.subscript.getter(v5, a3, &v18);
      v13 = v18;
      if ((~v18 & 0xF000000000000007) != 0)
      {
        swift_bridgeObjectRelease();
        v5 = (uint64_t)sub_1B0FDA25C(v13, a1, a4);
        sub_1B0F571D8(a4);
        sub_1B0FC9D10(v13);
      }
      else
      {
        sub_1B0FA58DC();
        swift_allocError();
        v15 = v14;
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0570);
        *(_QWORD *)v15 = v5;
        *(_QWORD *)(v15 + 8) = a3;
        *(_QWORD *)(v15 + 16) = v16;
        *(_BYTE *)(v15 + 32) = 0;
        swift_willThrow();
        sub_1B0F571D8(a4);
      }
      sub_1B0F571D8(a4);
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1B0F5A880(a4);
      RemoteStateStore.subscript.getter(v5, a3, &v18);
      v9 = v18;
      if ((~v18 & 0xF000000000000007) != 0)
      {
        v5 = sub_1B0FD7EF8(v18);
        sub_1B0FC9D10(v9);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1B0FA58DC();
        swift_allocError();
        v11 = v10;
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0570);
        *(_QWORD *)v11 = v5;
        *(_QWORD *)(v11 + 8) = a3;
        *(_QWORD *)(v11 + 16) = v12;
        *(_BYTE *)(v11 + 32) = 0;
        swift_willThrow();
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v5;
}

uint64_t sub_1B0FD7904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  unint64_t v19;

  v5 = a2;
  if ((a5 & 1) != 0)
  {
    if ((~a4 & 0xF000000000000007) != 0)
    {
      sub_1B0F767BC(a2, a3, a4, 1, sub_1B0F76F14);
      sub_1B0F5A880(a4);
      RemoteStateStore.subscript.getter(v5, a3, &v19);
      v13 = v19;
      if ((~v19 & 0xF000000000000007) != 0)
      {
        swift_bridgeObjectRelease();
        v5 = sub_1B0FDA290(v13, a1, a4);
        sub_1B0F571D8(a4);
        sub_1B0FC9D10(v13);
      }
      else
      {
        sub_1B0FA58DC();
        swift_allocError();
        v15 = v14;
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF5E0);
        *(_QWORD *)v15 = v5;
        *(_QWORD *)(v15 + 8) = a3;
        *(_QWORD *)(v15 + 16) = v16;
        *(_BYTE *)(v15 + 32) = 0;
        swift_willThrow();
        sub_1B0F571D8(a4);
      }
      sub_1B0F571D8(a4);
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1B0F5A880(a4);
      RemoteStateStore.subscript.getter(v5, a3, &v19);
      v9 = v19;
      if ((~v19 & 0xF000000000000007) != 0)
      {
        if (v19 >> 61 == 5)
        {
          v5 = sub_1B0FCB3E0(*(_QWORD *)(v19 + 16));
          sub_1B0FC9D10(v9);
        }
        else
        {
          v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF5E0);
          sub_1B0F970C4();
          swift_allocError();
          *v17 = v9;
          v17[1] = v5;
          swift_willThrow();
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1B0FA58DC();
        swift_allocError();
        v11 = v10;
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF5E0);
        *(_QWORD *)v11 = v5;
        *(_QWORD *)(v11 + 8) = a3;
        *(_QWORD *)(v11 + 16) = v12;
        *(_BYTE *)(v11 + 32) = 0;
        swift_willThrow();
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v5;
}

uint64_t sub_1B0FD7B38(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v18;

  v5 = a2;
  if ((a5 & 1) != 0)
  {
    if ((~a4 & 0xF000000000000007) != 0)
    {
      sub_1B0F767BC(a2, a3, a4, 1, sub_1B0F76F14);
      sub_1B0F5A880(a4);
      RemoteStateStore.subscript.getter(v5, a3, &v18);
      v13 = v18;
      if ((~v18 & 0xF000000000000007) != 0)
      {
        swift_bridgeObjectRelease();
        v5 = (uint64_t)sub_1B0FDA8EC(v13, a1, a4);
        sub_1B0F571D8(a4);
        sub_1B0FC9D10(v13);
      }
      else
      {
        sub_1B0FA58DC();
        swift_allocError();
        v15 = v14;
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE410);
        *(_QWORD *)v15 = v5;
        *(_QWORD *)(v15 + 8) = a3;
        *(_QWORD *)(v15 + 16) = v16;
        *(_BYTE *)(v15 + 32) = 0;
        swift_willThrow();
        sub_1B0F571D8(a4);
      }
      sub_1B0F571D8(a4);
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1B0F5A880(a4);
      RemoteStateStore.subscript.getter(v5, a3, &v18);
      v9 = v18;
      if ((~v18 & 0xF000000000000007) != 0)
      {
        v5 = sub_1B0FD7DB0(v18);
        sub_1B0FC9D10(v9);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1B0FA58DC();
        swift_allocError();
        v11 = v10;
        v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE410);
        *(_QWORD *)v11 = v5;
        *(_QWORD *)(v11 + 8) = a3;
        *(_QWORD *)(v11 + 16) = v12;
        *(_BYTE *)(v11 + 32) = 0;
        swift_willThrow();
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v5;
}

unint64_t sub_1B0FD7D18@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t *v4;

  v2 = result;
  if (result >> 61 == 2)
  {
    *(_QWORD *)a2 = *(_QWORD *)(result + 16);
    *(_BYTE *)(a2 + 8) = 1;
  }
  else if (result >> 61 == 1)
  {
    *(_QWORD *)a2 = *(_QWORD *)(result + 16);
    *(_BYTE *)(a2 + 8) = 0;
  }
  else
  {
    sub_1B0F970C4();
    swift_allocError();
    v3 = MEMORY[0x1E0DEB070];
    *v4 = v2;
    v4[1] = v3;
    swift_retain();
    return swift_willThrow();
  }
  return result;
}

unint64_t sub_1B0FD7DB0(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v11;

  v1 = a1;
  if (a1 >> 61 == 4)
  {
    v2 = *(_QWORD *)(a1 + 16);
    v3 = *(_QWORD *)(v2 + 16);
    v1 = MEMORY[0x1E0DEE9D8];
    if (v3)
    {
      v11 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1B0FDD868(0, v3, 0);
      v4 = 0;
      v1 = v11;
      v5 = *(_QWORD *)(v11 + 16);
      do
      {
        v6 = *(_QWORD *)(v2 + 8 * v4 + 32);
        v7 = *(_QWORD *)(v11 + 24);
        swift_retain();
        if (v5 >= v7 >> 1)
          sub_1B0FDD868(v7 > 1, v5 + 1, 1);
        ++v4;
        *(_QWORD *)(v11 + 16) = v5 + 1;
        *(_QWORD *)(v11 + 8 * v5++ + 32) = v6;
      }
      while (v3 != v4);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE410);
    sub_1B0F970C4();
    swift_allocError();
    *v9 = v1;
    v9[1] = v8;
    swift_retain();
    swift_willThrow();
  }
  return v1;
}

unint64_t sub_1B0FD7EF8(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t *v12;
  unint64_t v14;

  v1 = a1;
  if (a1 >> 61 == 4)
  {
    v2 = *(_QWORD *)(a1 + 16);
    v3 = *(_QWORD *)(v2 + 16);
    v1 = MEMORY[0x1E0DEE9D8];
    if (v3)
    {
      v14 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1B0FDD9B4(0, v3, 0);
      v4 = 0;
      v1 = v14;
      while (1)
      {
        v5 = *(_QWORD *)(v2 + 8 * v4 + 32);
        if (v5 >> 61 != 1)
          break;
        v6 = *(_QWORD *)(v5 + 16);
        v14 = v1;
        v8 = *(_QWORD *)(v1 + 16);
        v7 = *(_QWORD *)(v1 + 24);
        if (v8 >= v7 >> 1)
          sub_1B0FDD9B4(v7 > 1, v8 + 1, 1);
        ++v4;
        *(_QWORD *)(v1 + 16) = v8 + 1;
        *(_QWORD *)(v1 + 8 * v8 + 32) = v6;
        if (v3 == v4)
        {
          swift_bridgeObjectRelease();
          return v1;
        }
      }
      sub_1B0F970C4();
      swift_allocError();
      v11 = MEMORY[0x1E0DEB418];
      *v12 = v5;
      v12[1] = v11;
      swift_retain();
      swift_willThrow();
      v1 = v14;
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE410);
    sub_1B0F970C4();
    swift_allocError();
    *v10 = v1;
    v10[1] = v9;
    swift_retain();
    swift_willThrow();
  }
  return v1;
}

uint64_t sub_1B0FD8094@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  if ((a3 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(a3 + 16);
    v7 = *(_QWORD *)(a3 + 24);
    v9 = *(_QWORD *)(a3 + 32);
    v10 = *(_BYTE *)(a3 + 40);
    v11 = *(_QWORD *)(a3 + 48);
    sub_1B0F56B9C(v8, v7, v9, v10);
    sub_1B0F5A880(v11);
    v12 = StringResolvable.resolved(with:)(a2);
    if (v4)
    {
LABEL_3:
      sub_1B0F571D8(v11);
      return sub_1B0F56ADC(v8, v7, v9, v10);
    }
    v41 = v13;
    if (a1 >> 61 == 5)
    {
      v25 = v12;
      v26 = sub_1B0FCB3E0(*(_QWORD *)(a1 + 16));
      if (!*(_QWORD *)(v26 + 16) || (v39 = v26, v27 = sub_1B0F56A3C(v25, v41), (v28 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        swift_release();
        sub_1B0FA58DC();
        swift_allocError();
        *(_QWORD *)v38 = a1;
        *(_BYTE *)(v38 + 32) = 1;
        swift_retain();
        swift_willThrow();
        goto LABEL_3;
      }
      v29 = *(_QWORD *)(*(_QWORD *)(v39 + 56) + 8 * v27);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_release();
      if ((~v11 & 0xF000000000000007) == 0)
      {
        sub_1B0FD7D18(v29, a4);
        sub_1B0F56ADC(v8, v7, v9, v10);
        return swift_release();
      }
      swift_retain();
      sub_1B0FD8094(v29, a2, v11);
      sub_1B0F571D8(v11);
      sub_1B0F56ADC(v8, v7, v9, v10);
      swift_release();
      return sub_1B0F571D8(v11);
    }
    else
    {
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF5E0);
      sub_1B0F970C4();
      swift_allocError();
      *v36 = a1;
      v36[1] = v35;
      swift_retain();
      swift_willThrow();
      sub_1B0F571D8(v11);
      sub_1B0F56ADC(v8, v7, v9, v10);
      return swift_bridgeObjectRelease();
    }
  }
  v16 = *(_QWORD *)(a3 + 16);
  v15 = *(_QWORD *)(a3 + 24);
  v17 = *(_QWORD *)(a3 + 32);
  v18 = *(_BYTE *)(a3 + 40);
  v19 = *(_QWORD *)(a3 + 48);
  sub_1B0F6C708(v16, v15, v17, v18);
  v40 = v19;
  sub_1B0F5A880(v19);
  v20 = sub_1B0FA7470(a2);
  if ((v21 & 1) != 0)
  {
    if (qword_1EEEDE0B0 != -1)
      swift_once();
    v30 = sub_1B103467C();
    __swift_project_value_buffer(v30, (uint64_t)qword_1EEF0BA00);
    v31 = sub_1B1034664();
    v32 = sub_1B1035E1C();
    if (os_log_type_enabled(v31, v32))
    {
      v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v33 = 0;
      _os_log_impl(&dword_1B0F50000, v31, v32, "SubReference to find value, unable to resolve index", v33, 2u);
      MEMORY[0x1B5E15248](v33, -1, -1);
    }

    sub_1B0FA58DC();
    swift_allocError();
    *(_QWORD *)v34 = 2;
    *(_QWORD *)(v34 + 8) = 0;
    *(_QWORD *)(v34 + 16) = 0;
    *(_QWORD *)(v34 + 24) = 0;
    *(_BYTE *)(v34 + 32) = 5;
    goto LABEL_23;
  }
  v22 = v20;
  v23 = sub_1B0FD7DB0(a1);
  if (v4)
  {
LABEL_24:
    sub_1B0F571D8(v40);
    return sub_1B0F6C7D4(v16, v15, v17, v18);
  }
  if (v22 < 0 || v22 >= *(_QWORD *)(v23 + 16))
  {
    swift_bridgeObjectRelease();
    sub_1B0FA58DC();
    swift_allocError();
    *(_QWORD *)v37 = a1;
    *(_BYTE *)(v37 + 32) = 1;
    swift_retain();
LABEL_23:
    swift_willThrow();
    goto LABEL_24;
  }
  v24 = *(_QWORD *)(v23 + 8 * v22 + 32);
  swift_retain();
  swift_bridgeObjectRelease();
  if ((~v19 & 0xF000000000000007) == 0)
  {
    sub_1B0FD7D18(v24, a4);
    sub_1B0F6C7D4(v16, v15, v17, v18);
    return swift_release();
  }
  swift_retain();
  sub_1B0FD8094(v24, a2, v19);
  sub_1B0F571D8(v19);
  sub_1B0F6C7D4(v16, v15, v17, v18);
  swift_release();
  return sub_1B0F571D8(v19);
}

unint64_t sub_1B0FD859C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t *v32;
  uint64_t v33;
  uint64_t v35;
  unint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  if (a3 < 0)
  {
    v14 = *(_QWORD *)(a3 + 16);
    v13 = *(_QWORD *)(a3 + 24);
    v15 = *(_QWORD *)(a3 + 32);
    v16 = *(_BYTE *)(a3 + 40);
    v17 = *(_QWORD *)(a3 + 48);
    sub_1B0F6C708(v14, v13, v15, v16);
    v41 = v17;
    sub_1B0F5A880(v17);
    v18 = sub_1B0FA7470(a2);
    if ((v19 & 1) != 0)
    {
      if (qword_1EEEDE0B0 != -1)
        swift_once();
      v26 = sub_1B103467C();
      __swift_project_value_buffer(v26, (uint64_t)qword_1EEF0BA00);
      v27 = sub_1B1034664();
      v28 = sub_1B1035E1C();
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v29 = 0;
        _os_log_impl(&dword_1B0F50000, v27, v28, "SubReference to find value, unable to resolve index", v29, 2u);
        MEMORY[0x1B5E15248](v29, -1, -1);
      }

      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v30 = 2;
      *(_QWORD *)(v30 + 8) = 0;
      *(_QWORD *)(v30 + 16) = 0;
      *(_QWORD *)(v30 + 24) = 0;
      *(_BYTE *)(v30 + 32) = 5;
    }
    else
    {
      v20 = v18;
      v21 = sub_1B0FD7DB0(a1);
      if (v3)
      {
LABEL_28:
        sub_1B0F571D8(v41);
        sub_1B0F6C7D4(v14, v13, v15, v16);
        return a1;
      }
      if ((v20 & 0x8000000000000000) == 0 && v20 < *(_QWORD *)(v21 + 16))
      {
        a1 = *(_QWORD *)(v21 + 8 * v20 + 32);
        swift_retain();
        swift_bridgeObjectRelease();
        if ((~v17 & 0xF000000000000007) != 0)
        {
          swift_retain();
          a1 = sub_1B0FD859C(a1, a2, v17);
          sub_1B0F571D8(v17);
          sub_1B0F6C7D4(v14, v13, v15, v16);
          swift_release();
          sub_1B0F571D8(v17);
          return a1;
        }
        if (a1 >> 61 == 1)
        {
          a1 = *(_QWORD *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        }
        else
        {
          sub_1B0F970C4();
          swift_allocError();
          v36 = MEMORY[0x1E0DEB418];
          *v37 = a1;
          v37[1] = v36;
          swift_retain();
          swift_willThrow();
        }
        sub_1B0F6C7D4(v14, v13, v15, v16);
        goto LABEL_19;
      }
      swift_bridgeObjectRelease();
      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v33 = a1;
      *(_BYTE *)(v33 + 32) = 1;
      swift_retain();
    }
    swift_willThrow();
    goto LABEL_28;
  }
  v7 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v8 = *(_QWORD *)(a3 + 32);
  v9 = *(_BYTE *)(a3 + 40);
  v10 = *(_QWORD *)(a3 + 48);
  sub_1B0F56B9C(v7, v6, v8, v9);
  sub_1B0F5A880(v10);
  v11 = StringResolvable.resolved(with:)(a2);
  if (!v3)
  {
    v42 = v12;
    if (a1 >> 61 != 5)
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF5E0);
      sub_1B0F970C4();
      swift_allocError();
      *v32 = a1;
      v32[1] = v31;
      swift_retain();
      swift_willThrow();
      sub_1B0F571D8(v10);
      sub_1B0F56ADC(v7, v6, v8, v9);
      swift_bridgeObjectRelease();
      return a1;
    }
    v22 = v11;
    v23 = sub_1B0FCB3E0(*(_QWORD *)(a1 + 16));
    if (!*(_QWORD *)(v23 + 16) || (v40 = v23, v24 = sub_1B0F56A3C(v22, v42), (v25 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v35 = a1;
      *(_BYTE *)(v35 + 32) = 1;
      swift_retain();
      swift_willThrow();
      goto LABEL_3;
    }
    a1 = *(_QWORD *)(*(_QWORD *)(v40 + 56) + 8 * v24);
    swift_retain();
    swift_bridgeObjectRelease();
    swift_release();
    if ((~v10 & 0xF000000000000007) != 0)
    {
      swift_retain();
      a1 = sub_1B0FD859C(a1, a2, v10);
      sub_1B0F571D8(v10);
      sub_1B0F56ADC(v7, v6, v8, v9);
      swift_release();
      sub_1B0F571D8(v10);
      return a1;
    }
    if (a1 >> 61 == 1)
    {
      a1 = *(_QWORD *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
    }
    else
    {
      sub_1B0F970C4();
      swift_allocError();
      v38 = MEMORY[0x1E0DEB418];
      *v39 = a1;
      v39[1] = v38;
      swift_retain();
      swift_willThrow();
    }
    sub_1B0F56ADC(v7, v6, v8, v9);
LABEL_19:
    swift_release();
    return a1;
  }
LABEL_3:
  sub_1B0F571D8(v10);
  sub_1B0F56ADC(v7, v6, v8, v9);
  return a1;
}

uint64_t sub_1B0FD8B94@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  if ((a3 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(a3 + 16);
    v7 = *(_QWORD *)(a3 + 24);
    v9 = *(_QWORD *)(a3 + 32);
    v10 = *(_BYTE *)(a3 + 40);
    v11 = *(_QWORD *)(a3 + 48);
    sub_1B0F56B9C(v8, v7, v9, v10);
    sub_1B0F5A880(v11);
    v12 = StringResolvable.resolved(with:)(a2);
    if (v4)
    {
LABEL_3:
      sub_1B0F571D8(v11);
      return sub_1B0F56ADC(v8, v7, v9, v10);
    }
    v41 = v13;
    if (a1 >> 61 != 5)
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF5E0);
      sub_1B0F970C4();
      swift_allocError();
      *v35 = a1;
      v35[1] = v34;
      swift_retain();
      swift_willThrow();
      sub_1B0F571D8(v11);
      sub_1B0F56ADC(v8, v7, v9, v10);
      return swift_bridgeObjectRelease();
    }
    v25 = v12;
    v26 = sub_1B0FCB3E0(*(_QWORD *)(a1 + 16));
    if (!*(_QWORD *)(v26 + 16) || (v39 = v26, v27 = sub_1B0F56A3C(v25, v41), (v28 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v37 = a1;
      *(_BYTE *)(v37 + 32) = 1;
      swift_retain();
      swift_willThrow();
      goto LABEL_3;
    }
    v24 = *(_QWORD *)(*(_QWORD *)(v39 + 56) + 8 * v27);
    swift_retain();
    swift_bridgeObjectRelease();
    swift_release();
    if ((~v11 & 0xF000000000000007) == 0)
    {
      result = sub_1B0F56ADC(v8, v7, v9, v10);
      goto LABEL_15;
    }
    swift_retain();
    sub_1B0FD8B94(v24, a2, v11);
    sub_1B0F571D8(v11);
    sub_1B0F56ADC(v8, v7, v9, v10);
    swift_release();
    v38 = v11;
    return sub_1B0F571D8(v38);
  }
  v16 = *(_QWORD *)(a3 + 16);
  v15 = *(_QWORD *)(a3 + 24);
  v17 = *(_QWORD *)(a3 + 32);
  v18 = *(_BYTE *)(a3 + 40);
  v19 = *(_QWORD *)(a3 + 48);
  sub_1B0F6C708(v16, v15, v17, v18);
  v40 = v19;
  sub_1B0F5A880(v19);
  v20 = sub_1B0FA7470(a2);
  if ((v21 & 1) != 0)
  {
    if (qword_1EEEDE0B0 != -1)
      swift_once();
    v29 = sub_1B103467C();
    __swift_project_value_buffer(v29, (uint64_t)qword_1EEF0BA00);
    v30 = sub_1B1034664();
    v31 = sub_1B1035E1C();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v32 = 0;
      _os_log_impl(&dword_1B0F50000, v30, v31, "SubReference to find value, unable to resolve index", v32, 2u);
      MEMORY[0x1B5E15248](v32, -1, -1);
    }

    sub_1B0FA58DC();
    swift_allocError();
    *(_QWORD *)v33 = 2;
    *(_QWORD *)(v33 + 8) = 0;
    *(_QWORD *)(v33 + 16) = 0;
    *(_QWORD *)(v33 + 24) = 0;
    *(_BYTE *)(v33 + 32) = 5;
    goto LABEL_23;
  }
  v22 = v20;
  v23 = sub_1B0FD7DB0(a1);
  if (v4)
  {
LABEL_24:
    sub_1B0F571D8(v40);
    return sub_1B0F6C7D4(v16, v15, v17, v18);
  }
  if (v22 < 0 || v22 >= *(_QWORD *)(v23 + 16))
  {
    swift_bridgeObjectRelease();
    sub_1B0FA58DC();
    swift_allocError();
    *(_QWORD *)v36 = a1;
    *(_BYTE *)(v36 + 32) = 1;
    swift_retain();
LABEL_23:
    swift_willThrow();
    goto LABEL_24;
  }
  v24 = *(_QWORD *)(v23 + 8 * v22 + 32);
  swift_retain();
  swift_bridgeObjectRelease();
  if ((~v19 & 0xF000000000000007) == 0)
  {
    result = sub_1B0F6C7D4(v16, v15, v17, v18);
LABEL_15:
    *a4 = v24;
    return result;
  }
  swift_retain();
  sub_1B0FD8B94(v24, a2, v19);
  sub_1B0F571D8(v19);
  sub_1B0F6C7D4(v16, v15, v17, v18);
  swift_release();
  v38 = v19;
  return sub_1B0F571D8(v38);
}

uint64_t sub_1B0FD906C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  unint64_t *v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;

  if (a3 < 0)
  {
    v15 = *(_QWORD *)(a3 + 16);
    v14 = *(_QWORD *)(a3 + 24);
    v16 = *(_QWORD *)(a3 + 32);
    v17 = *(_BYTE *)(a3 + 40);
    v18 = *(_QWORD *)(a3 + 48);
    v44 = v15;
    v45 = v14;
    v46 = v16;
    v47 = v17;
    sub_1B0F6C708(v15, v14, v16, v17);
    v48 = v18;
    sub_1B0F5A880(v18);
    v11 = (uint64_t)&v44;
    sub_1B0FA7470(a2);
    if ((v20 & 1) != 0)
    {
      if (qword_1EEEDE0B0 != -1)
        swift_once();
      v31 = sub_1B103467C();
      __swift_project_value_buffer(v31, (uint64_t)qword_1EEF0BA00);
      v32 = sub_1B1034664();
      v33 = sub_1B1035E1C();
      v11 = v33;
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v34 = 0;
        _os_log_impl(&dword_1B0F50000, v32, (os_log_type_t)v11, "SubReference to find value, unable to resolve index", v34, 2u);
        MEMORY[0x1B5E15248](v34, -1, -1);
      }

      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v35 = 2;
      *(_QWORD *)(v35 + 8) = 0;
      *(_QWORD *)(v35 + 16) = 0;
      *(_QWORD *)(v35 + 24) = 0;
      *(_BYTE *)(v35 + 32) = 5;
    }
    else
    {
      v21 = v19;
      v22 = sub_1B0FD7DB0(a1);
      if (v3)
      {
LABEL_23:
        sub_1B0F571D8(v48);
        sub_1B0F6C7D4(v15, v14, v16, v17);
        return v11;
      }
      v11 = v22;
      if ((v21 & 0x8000000000000000) == 0 && v21 < *(_QWORD *)(v22 + 16))
      {
        v23 = *(_QWORD *)(v22 + 8 * v21 + 32);
        swift_retain();
        swift_bridgeObjectRelease();
        v24 = v48;
        if ((~v48 & 0xF000000000000007) != 0)
        {
          swift_retain();
          v40 = sub_1B0FD906C(v23, a2, v24);
          v41 = v24;
          v11 = v40;
          sub_1B0F571D8(v41);
          sub_1B0F6C7D4(v15, v14, v16, v17);
          swift_release();
          sub_1B0F571D8(v41);
        }
        else
        {
          v44 = v23;
          sub_1B0F9877C();
          v11 = v42;
          sub_1B0F6C7D4(v15, v14, v16, v17);
          swift_release();
        }
        return v11;
      }
      swift_bridgeObjectRelease();
      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v37 = a1;
      *(_BYTE *)(v37 + 32) = 1;
      swift_retain();
    }
    swift_willThrow();
    goto LABEL_23;
  }
  v7 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v8 = *(_QWORD *)(a3 + 32);
  v9 = *(_BYTE *)(a3 + 40);
  v10 = *(_QWORD *)(a3 + 48);
  v44 = v7;
  v45 = v6;
  v46 = v8;
  v47 = v9;
  sub_1B0F56B9C(v7, v6, v8, v9);
  sub_1B0F5A880(v10);
  v11 = (uint64_t)&v44;
  v12 = StringResolvable.resolved(with:)(a2);
  if (v3)
  {
LABEL_3:
    sub_1B0F571D8(v10);
    sub_1B0F56ADC(v7, v6, v8, v9);
    return v11;
  }
  v48 = v13;
  if (a1 >> 61 != 5)
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF5E0);
    sub_1B0F970C4();
    swift_allocError();
    *v36 = a1;
    v36[1] = v11;
    swift_retain();
    swift_willThrow();
    sub_1B0F571D8(v10);
    sub_1B0F56ADC(v7, v6, v8, v9);
    swift_bridgeObjectRelease();
    return v11;
  }
  v25 = v12;
  v26 = sub_1B0FCB3E0(*(_QWORD *)(a1 + 16));
  if (!*(_QWORD *)(v26 + 16) || (v43 = v26, v27 = sub_1B0F56A3C(v25, v48), (v28 & 1) == 0))
  {
    v11 = a1 & 0x1FFFFFFFFFFFFFFFLL;
    swift_bridgeObjectRelease();
    swift_release();
    sub_1B0FA58DC();
    swift_allocError();
    *(_QWORD *)v39 = a1;
    *(_BYTE *)(v39 + 32) = 1;
    swift_retain();
    swift_willThrow();
    goto LABEL_3;
  }
  v29 = *(_QWORD *)(*(_QWORD *)(v43 + 56) + 8 * v27);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  if ((~v10 & 0xF000000000000007) != 0)
  {
    swift_retain();
    v11 = sub_1B0FD906C(v29, a2, v10);
    sub_1B0F571D8(v10);
    sub_1B0F56ADC(v7, v6, v8, v9);
    swift_release();
    sub_1B0F571D8(v10);
  }
  else
  {
    v44 = v29;
    sub_1B0F9877C();
    v11 = v30;
    sub_1B0F56ADC(v7, v6, v8, v9);
    swift_release();
  }
  return v11;
}

double sub_1B0FD9600(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  double v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t *v35;
  uint64_t v36;
  uint64_t v38;
  double v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t *v42;
  unint64_t v43;
  unint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  if (a3 < 0)
  {
    v15 = *(_QWORD *)(a3 + 16);
    v14 = *(_QWORD *)(a3 + 24);
    v16 = *(_QWORD *)(a3 + 32);
    v17 = *(_BYTE *)(a3 + 40);
    v18 = *(_QWORD *)(a3 + 48);
    sub_1B0F6C708(v15, v14, v16, v17);
    v46 = v18;
    sub_1B0F5A880(v18);
    sub_1B0FA7470(a2);
    if ((v20 & 1) != 0)
    {
      if (qword_1EEEDE0B0 != -1)
        swift_once();
      v29 = sub_1B103467C();
      __swift_project_value_buffer(v29, (uint64_t)qword_1EEF0BA00);
      v30 = sub_1B1034664();
      v31 = sub_1B1035E1C();
      if (os_log_type_enabled(v30, v31))
      {
        v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v32 = 0;
        _os_log_impl(&dword_1B0F50000, v30, v31, "SubReference to find value, unable to resolve index", v32, 2u);
        MEMORY[0x1B5E15248](v32, -1, -1);
      }

      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v33 = 2;
      *(_QWORD *)(v33 + 8) = 0;
      *(_QWORD *)(v33 + 16) = 0;
      *(_QWORD *)(v33 + 24) = 0;
      *(_BYTE *)(v33 + 32) = 5;
    }
    else
    {
      v21 = v19;
      v22 = sub_1B0FD7DB0(a1);
      if (v3)
      {
LABEL_30:
        sub_1B0F571D8(v46);
        sub_1B0F6C7D4(v15, v14, v16, v17);
        return v4;
      }
      if ((v21 & 0x8000000000000000) == 0 && v21 < *(_QWORD *)(v22 + 16))
      {
        v23 = *(_QWORD *)(v22 + 8 * v21 + 32);
        swift_retain();
        swift_bridgeObjectRelease();
        if ((~v18 & 0xF000000000000007) != 0)
        {
          swift_retain();
          sub_1B0FD9600(v23, a2, v18);
          v4 = v39;
          sub_1B0F571D8(v18);
          sub_1B0F6C7D4(v15, v14, v16, v17);
          swift_release();
          sub_1B0F571D8(v18);
          return v4;
        }
        if (v23 >> 61 != 1)
        {
          if (v23 >> 61 == 2)
          {
            v4 = *(double *)((v23 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
          }
          else
          {
            sub_1B0F970C4();
            swift_allocError();
            v41 = MEMORY[0x1E0DEB070];
            *v42 = v23;
            v42[1] = v41;
            swift_retain();
            swift_willThrow();
          }
          sub_1B0F6C7D4(v15, v14, v16, v17);
          goto LABEL_21;
        }
        v40 = *(_QWORD *)((v23 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        sub_1B0F6C7D4(v15, v14, v16, v17);
LABEL_38:
        swift_release();
        return (double)v40;
      }
      swift_bridgeObjectRelease();
      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v36 = a1;
      *(_BYTE *)(v36 + 32) = 1;
      swift_retain();
    }
    swift_willThrow();
    goto LABEL_30;
  }
  v8 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(a3 + 24);
  v9 = *(_QWORD *)(a3 + 32);
  v10 = *(_BYTE *)(a3 + 40);
  v11 = *(_QWORD *)(a3 + 48);
  sub_1B0F56B9C(v8, v7, v9, v10);
  sub_1B0F5A880(v11);
  v12 = StringResolvable.resolved(with:)(a2);
  if (!v3)
  {
    v47 = v13;
    if (a1 >> 61 != 5)
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF5E0);
      sub_1B0F970C4();
      swift_allocError();
      *v35 = a1;
      v35[1] = v34;
      swift_retain();
      swift_willThrow();
      sub_1B0F571D8(v11);
      sub_1B0F56ADC(v8, v7, v9, v10);
      swift_bridgeObjectRelease();
      return v4;
    }
    v24 = v12;
    v25 = sub_1B0FCB3E0(*(_QWORD *)(a1 + 16));
    if (!*(_QWORD *)(v25 + 16) || (v45 = v25, v26 = sub_1B0F56A3C(v24, v47), (v27 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v38 = a1;
      *(_BYTE *)(v38 + 32) = 1;
      swift_retain();
      swift_willThrow();
      goto LABEL_3;
    }
    v28 = *(_QWORD *)(*(_QWORD *)(v45 + 56) + 8 * v26);
    swift_retain();
    swift_bridgeObjectRelease();
    swift_release();
    if ((~v11 & 0xF000000000000007) != 0)
    {
      swift_retain();
      v4 = sub_1B0FD9600(v28, a2, v11);
      sub_1B0F571D8(v11);
      sub_1B0F56ADC(v8, v7, v9, v10);
      swift_release();
      sub_1B0F571D8(v11);
      return v4;
    }
    if (v28 >> 61 != 1)
    {
      if (v28 >> 61 == 2)
      {
        v4 = *(double *)((v28 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      }
      else
      {
        sub_1B0F970C4();
        swift_allocError();
        v43 = MEMORY[0x1E0DEB070];
        *v44 = v28;
        v44[1] = v43;
        swift_retain();
        swift_willThrow();
      }
      sub_1B0F56ADC(v8, v7, v9, v10);
LABEL_21:
      swift_release();
      return v4;
    }
    v40 = *(_QWORD *)((v28 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
    sub_1B0F56ADC(v8, v7, v9, v10);
    goto LABEL_38;
  }
LABEL_3:
  sub_1B0F571D8(v11);
  sub_1B0F56ADC(v8, v7, v9, v10);
  return v4;
}

unint64_t sub_1B0FD9C64(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t *v32;
  uint64_t v33;
  uint64_t v35;
  unint64_t v36;
  unint64_t *v37;
  unint64_t v38;
  unint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  if (a3 < 0)
  {
    v14 = *(_QWORD *)(a3 + 16);
    v13 = *(_QWORD *)(a3 + 24);
    v15 = *(_QWORD *)(a3 + 32);
    v16 = *(_BYTE *)(a3 + 40);
    v17 = *(_QWORD *)(a3 + 48);
    sub_1B0F6C708(v14, v13, v15, v16);
    v41 = v17;
    sub_1B0F5A880(v17);
    sub_1B0FA7470(a2);
    if ((v19 & 1) != 0)
    {
      if (qword_1EEEDE0B0 != -1)
        swift_once();
      v26 = sub_1B103467C();
      __swift_project_value_buffer(v26, (uint64_t)qword_1EEF0BA00);
      v27 = sub_1B1034664();
      v28 = sub_1B1035E1C();
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v29 = 0;
        _os_log_impl(&dword_1B0F50000, v27, v28, "SubReference to find value, unable to resolve index", v29, 2u);
        MEMORY[0x1B5E15248](v29, -1, -1);
      }

      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v30 = 2;
      *(_QWORD *)(v30 + 8) = 0;
      *(_QWORD *)(v30 + 16) = 0;
      *(_QWORD *)(v30 + 24) = 0;
      *(_BYTE *)(v30 + 32) = 5;
    }
    else
    {
      v20 = v18;
      v21 = sub_1B0FD7DB0(a1);
      if (v3)
      {
LABEL_28:
        sub_1B0F571D8(v41);
        sub_1B0F6C7D4(v14, v13, v15, v16);
        return a1 & 1;
      }
      if ((v20 & 0x8000000000000000) == 0 && v20 < *(_QWORD *)(v21 + 16))
      {
        a1 = *(_QWORD *)(v21 + 8 * v20 + 32);
        swift_retain();
        swift_bridgeObjectRelease();
        if ((~v17 & 0xF000000000000007) != 0)
        {
          swift_retain();
          LOBYTE(a1) = sub_1B0FD9C64(a1, a2, v17);
          sub_1B0F571D8(v17);
          sub_1B0F6C7D4(v14, v13, v15, v16);
          swift_release();
          sub_1B0F571D8(v17);
          return a1 & 1;
        }
        if (a1 >> 61 == 3)
        {
          LOBYTE(a1) = *(_BYTE *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        }
        else
        {
          sub_1B0F970C4();
          swift_allocError();
          v36 = MEMORY[0x1E0DEAFA0];
          *v37 = a1;
          v37[1] = v36;
          swift_retain();
          swift_willThrow();
        }
        sub_1B0F6C7D4(v14, v13, v15, v16);
        goto LABEL_19;
      }
      swift_bridgeObjectRelease();
      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v33 = a1;
      *(_BYTE *)(v33 + 32) = 1;
      swift_retain();
    }
    swift_willThrow();
    goto LABEL_28;
  }
  v7 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v8 = *(_QWORD *)(a3 + 32);
  v9 = *(_BYTE *)(a3 + 40);
  v10 = *(_QWORD *)(a3 + 48);
  sub_1B0F56B9C(v7, v6, v8, v9);
  sub_1B0F5A880(v10);
  v11 = StringResolvable.resolved(with:)(a2);
  if (!v3)
  {
    v42 = v12;
    if (a1 >> 61 != 5)
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF5E0);
      sub_1B0F970C4();
      swift_allocError();
      *v32 = a1;
      v32[1] = v31;
      swift_retain();
      swift_willThrow();
      sub_1B0F571D8(v10);
      sub_1B0F56ADC(v7, v6, v8, v9);
      swift_bridgeObjectRelease();
      return a1 & 1;
    }
    v22 = v11;
    v23 = sub_1B0FCB3E0(*(_QWORD *)(a1 + 16));
    if (!*(_QWORD *)(v23 + 16) || (v40 = v23, v24 = sub_1B0F56A3C(v22, v42), (v25 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v35 = a1;
      *(_BYTE *)(v35 + 32) = 1;
      swift_retain();
      swift_willThrow();
      goto LABEL_3;
    }
    a1 = *(_QWORD *)(*(_QWORD *)(v40 + 56) + 8 * v24);
    swift_retain();
    swift_bridgeObjectRelease();
    swift_release();
    if ((~v10 & 0xF000000000000007) != 0)
    {
      swift_retain();
      LOBYTE(a1) = sub_1B0FD9C64(a1, a2, v10);
      sub_1B0F571D8(v10);
      sub_1B0F56ADC(v7, v6, v8, v9);
      swift_release();
      sub_1B0F571D8(v10);
      return a1 & 1;
    }
    if (a1 >> 61 == 3)
    {
      LOBYTE(a1) = *(_BYTE *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
    }
    else
    {
      sub_1B0F970C4();
      swift_allocError();
      v38 = MEMORY[0x1E0DEAFA0];
      *v39 = a1;
      v39[1] = v38;
      swift_retain();
      swift_willThrow();
    }
    sub_1B0F56ADC(v7, v6, v8, v9);
LABEL_19:
    swift_release();
    return a1 & 1;
  }
LABEL_3:
  sub_1B0F571D8(v10);
  sub_1B0F56ADC(v7, v6, v8, v9);
  return a1 & 1;
}

NSObject *sub_1B0FDA25C(unint64_t a1, NSObject *a2, uint64_t a3)
{
  return sub_1B0FDA920(a1, a2, a3, (void (*)(uint64_t))sub_1B0F76F14, (void (*)(uint64_t))sub_1B0F76F18, (uint64_t (*)(uint64_t, NSObject *, uint64_t))sub_1B0FDA25C, (uint64_t (*)(uint64_t))sub_1B0FD7EF8);
}

unint64_t sub_1B0FDA290(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t *v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  unint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  if (a3 < 0)
  {
    v14 = *(_QWORD *)(a3 + 16);
    v13 = *(_QWORD *)(a3 + 24);
    v15 = *(_QWORD *)(a3 + 32);
    v16 = *(_BYTE *)(a3 + 40);
    v17 = *(_QWORD *)(a3 + 48);
    sub_1B0F6C708(v14, v13, v15, v16);
    v41 = v17;
    sub_1B0F5A880(v17);
    sub_1B0FA7470(a2);
    if ((v19 & 1) != 0)
    {
      if (qword_1EEEDE0B0 != -1)
        swift_once();
      v26 = sub_1B103467C();
      __swift_project_value_buffer(v26, (uint64_t)qword_1EEF0BA00);
      v27 = sub_1B1034664();
      v28 = sub_1B1035E1C();
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v29 = 0;
        _os_log_impl(&dword_1B0F50000, v27, v28, "SubReference to find value, unable to resolve index", v29, 2u);
        MEMORY[0x1B5E15248](v29, -1, -1);
      }

      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v30 = 2;
      *(_QWORD *)(v30 + 8) = 0;
      *(_QWORD *)(v30 + 16) = 0;
      *(_QWORD *)(v30 + 24) = 0;
      *(_BYTE *)(v30 + 32) = 5;
    }
    else
    {
      v20 = v18;
      v21 = sub_1B0FD7DB0(a1);
      if (v3)
      {
LABEL_25:
        sub_1B0F571D8(v41);
        sub_1B0F6C7D4(v14, v13, v15, v16);
        return a1;
      }
      if ((v20 & 0x8000000000000000) == 0 && v20 < *(_QWORD *)(v21 + 16))
      {
        a1 = *(_QWORD *)(v21 + 8 * v20 + 32);
        swift_retain();
        swift_bridgeObjectRelease();
        if ((~v17 & 0xF000000000000007) != 0)
        {
          swift_retain();
          a1 = sub_1B0FDA290(a1, a2, v17);
          sub_1B0F571D8(v17);
          sub_1B0F6C7D4(v14, v13, v15, v16);
          swift_release();
          sub_1B0F571D8(v17);
          return a1;
        }
        if (a1 >> 61 == 5)
        {
          a1 = sub_1B0FCB3E0(*(_QWORD *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10));
          sub_1B0F6C7D4(v14, v13, v15, v16);
          swift_release();
          return a1;
        }
        v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF5E0);
        sub_1B0F970C4();
        swift_allocError();
        *v37 = a1;
        v37[1] = v36;
        swift_retain();
        swift_willThrow();
        sub_1B0F6C7D4(v14, v13, v15, v16);
        goto LABEL_32;
      }
      swift_bridgeObjectRelease();
      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v33 = a1;
      *(_BYTE *)(v33 + 32) = 1;
      swift_retain();
    }
    swift_willThrow();
    goto LABEL_25;
  }
  v7 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v8 = *(_QWORD *)(a3 + 32);
  v9 = *(_BYTE *)(a3 + 40);
  v10 = *(_QWORD *)(a3 + 48);
  sub_1B0F56B9C(v7, v6, v8, v9);
  sub_1B0F5A880(v10);
  v11 = StringResolvable.resolved(with:)(a2);
  if (!v3)
  {
    v42 = v12;
    if (a1 >> 61 != 5)
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF5E0);
      sub_1B0F970C4();
      swift_allocError();
      *v32 = a1;
      v32[1] = v31;
      swift_retain();
      swift_willThrow();
      sub_1B0F571D8(v10);
      sub_1B0F56ADC(v7, v6, v8, v9);
      swift_bridgeObjectRelease();
      return a1;
    }
    v22 = v11;
    v23 = sub_1B0FCB3E0(*(_QWORD *)(a1 + 16));
    if (!*(_QWORD *)(v23 + 16) || (v40 = v23, v24 = sub_1B0F56A3C(v22, v42), (v25 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v35 = a1;
      *(_BYTE *)(v35 + 32) = 1;
      swift_retain();
      swift_willThrow();
      goto LABEL_3;
    }
    a1 = *(_QWORD *)(*(_QWORD *)(v40 + 56) + 8 * v24);
    swift_retain();
    swift_bridgeObjectRelease();
    swift_release();
    if ((~v10 & 0xF000000000000007) != 0)
    {
      swift_retain();
      a1 = sub_1B0FDA290(a1, a2, v10);
      sub_1B0F571D8(v10);
      sub_1B0F56ADC(v7, v6, v8, v9);
      swift_release();
      sub_1B0F571D8(v10);
      return a1;
    }
    if (a1 >> 61 == 5)
    {
      a1 = sub_1B0FCB3E0(*(_QWORD *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10));
      sub_1B0F56ADC(v7, v6, v8, v9);
      swift_release();
      return a1;
    }
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF5E0);
    sub_1B0F970C4();
    swift_allocError();
    *v39 = a1;
    v39[1] = v38;
    swift_retain();
    swift_willThrow();
    sub_1B0F56ADC(v7, v6, v8, v9);
LABEL_32:
    swift_release();
    return a1;
  }
LABEL_3:
  sub_1B0F571D8(v10);
  sub_1B0F56ADC(v7, v6, v8, v9);
  return a1;
}

NSObject *sub_1B0FDA8EC(unint64_t a1, NSObject *a2, uint64_t a3)
{
  return sub_1B0FDA920(a1, a2, a3, (void (*)(uint64_t))sub_1B0F76F14, (void (*)(uint64_t))sub_1B0F76F18, (uint64_t (*)(uint64_t, NSObject *, uint64_t))sub_1B0FDA8EC, (uint64_t (*)(uint64_t))sub_1B0FD7DB0);
}

NSObject *sub_1B0FDA920(unint64_t a1, NSObject *a2, uint64_t a3, void (*a4)(uint64_t), void (*a5)(uint64_t), uint64_t (*a6)(uint64_t, NSObject *, uint64_t), uint64_t (*a7)(uint64_t))
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;

  if (a3 < 0)
  {
    v19 = *(_QWORD *)(a3 + 16);
    v18 = *(_QWORD *)(a3 + 24);
    v20 = *(_QWORD *)(a3 + 32);
    v21 = *(_QWORD *)(a3 + 48);
    v42 = *(_BYTE *)(a3 + 40);
    sub_1B0F6C708(v19, v18, v20, v42);
    v22 = v21;
    a4(v21);
    sub_1B0FA7470((uint64_t)a2);
    if ((v24 & 1) != 0)
    {
      if (qword_1EEEDE0B0 != -1)
        swift_once();
      v33 = sub_1B103467C();
      __swift_project_value_buffer(v33, (uint64_t)qword_1EEF0BA00);
      a2 = sub_1B1034664();
      v34 = sub_1B1035E1C();
      if (os_log_type_enabled(a2, v34))
      {
        v35 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v35 = 0;
        _os_log_impl(&dword_1B0F50000, a2, v34, "SubReference to find value, unable to resolve index", v35, 2u);
        MEMORY[0x1B5E15248](v35, -1, -1);
      }

      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v36 = 2;
      *(_QWORD *)(v36 + 8) = 0;
      *(_QWORD *)(v36 + 16) = 0;
      *(_QWORD *)(v36 + 24) = 0;
      *(_BYTE *)(v36 + 32) = 5;
    }
    else
    {
      v25 = v23;
      v26 = sub_1B0FD7DB0(a1);
      if (v7)
      {
LABEL_23:
        a5(v22);
        sub_1B0F6C7D4(v19, v18, v20, v42);
        return a2;
      }
      if ((v25 & 0x8000000000000000) == 0 && v25 < *(_QWORD *)(v26 + 16))
      {
        v27 = *(_QWORD *)(v26 + 8 * v25 + 32);
        swift_retain();
        swift_bridgeObjectRelease();
        if ((~v22 & 0xF000000000000007) != 0)
        {
          swift_retain();
          a2 = a6(v27, a2, v22);
          a5(v22);
          sub_1B0F6C7D4(v19, v18, v20, v42);
          swift_release();
          a5(v22);
        }
        else
        {
          a2 = a7(v27);
          sub_1B0F6C7D4(v19, v18, v20, v42);
          swift_release();
        }
        return a2;
      }
      swift_bridgeObjectRelease();
      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v38 = a1;
      *(_BYTE *)(v38 + 32) = 1;
      swift_retain();
    }
    swift_willThrow();
    goto LABEL_23;
  }
  v12 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(a3 + 24);
  v13 = *(_QWORD *)(a3 + 32);
  v14 = *(_BYTE *)(a3 + 40);
  v15 = *(_QWORD *)(a3 + 48);
  sub_1B0F56B9C(v12, v11, v13, v14);
  a4(v15);
  v16 = StringResolvable.resolved(with:)((uint64_t)a2);
  if (v7)
  {
LABEL_3:
    a5(v15);
    sub_1B0F56ADC(v12, v11, v13, v14);
    return a2;
  }
  v43 = v17;
  if (a1 >> 61 != 5)
  {
    a2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF5E0);
    sub_1B0F970C4();
    swift_allocError();
    *v37 = a1;
    v37[1] = (unint64_t)a2;
    swift_retain();
    swift_willThrow();
    a5(v15);
    sub_1B0F56ADC(v12, v11, v13, v14);
    swift_bridgeObjectRelease();
    return a2;
  }
  v28 = v16;
  v29 = sub_1B0FCB3E0(*(_QWORD *)(a1 + 16));
  if (!*(_QWORD *)(v29 + 16) || (v41 = v29, v30 = sub_1B0F56A3C(v28, v43), (v31 & 1) == 0))
  {
    a2 = (a1 & 0x1FFFFFFFFFFFFFFFLL);
    swift_bridgeObjectRelease();
    swift_release();
    sub_1B0FA58DC();
    swift_allocError();
    *(_QWORD *)v40 = a1;
    *(_BYTE *)(v40 + 32) = 1;
    swift_retain();
    swift_willThrow();
    goto LABEL_3;
  }
  v32 = *(_QWORD *)(*(_QWORD *)(v41 + 56) + 8 * v30);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  if ((~v15 & 0xF000000000000007) != 0)
  {
    swift_retain();
    a2 = a6(v32, a2, v15);
    a5(v15);
    sub_1B0F56ADC(v12, v11, v13, v14);
    swift_release();
    a5(v15);
  }
  else
  {
    a2 = a7(v32);
    sub_1B0F56ADC(v12, v11, v13, v14);
    swift_release();
  }
  return a2;
}

uint64_t sub_1B0FDAEC0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  __int128 v12;
  uint64_t v13;
  char v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE04F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B0FE0844();
  sub_1B1036278();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF3C8);
    sub_1B0F5A7E4(&qword_1EEEDF4B8, &qword_1EEEDF3C8, (uint64_t)&protocol conformance descriptor for Referenceable<A>);
    sub_1B10360BC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v9 = v13;
    v10 = v14;
    *(_OWORD *)a2 = v12;
    *(_QWORD *)(a2 + 16) = v9;
    *(_BYTE *)(a2 + 24) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B0FDB018@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B0FE1144(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B0FDB040()
{
  sub_1B0FE0844();
  return sub_1B10362B4();
}

uint64_t sub_1B0FDB068()
{
  sub_1B0FE0844();
  return sub_1B10362C0();
}

uint64_t sub_1B0FDB090@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B0FDAEC0(a1, a2);
}

uint64_t StringResolvable.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  char v14;
  _QWORD v16[4];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE04F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B0F5FD84(a1, (uint64_t)v16);
  sub_1B0FA6448(v16, &v17);
  if (v2)
  {

    sub_1B0F5FD84(a1, (uint64_t)v16);
    __swift_project_boxed_opaque_existential_1(v16, v16[3]);
    sub_1B0FE0844();
    sub_1B1036278();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF3C8);
    sub_1B0F5A7E4(&qword_1EEEDF4B8, &qword_1EEEDF3C8, (uint64_t)&protocol conformance descriptor for Referenceable<A>);
    sub_1B10360BC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v9 = v17;
    v10 = v18;
    v11 = v19;
    v12 = v20;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    result = __swift_destroy_boxed_opaque_existential_1(a1);
    v14 = v12 | 0x80;
  }
  else
  {
    v9 = v17;
    v10 = v18;
    v11 = v19;
    v14 = v20;
    result = __swift_destroy_boxed_opaque_existential_1(a1);
  }
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v10;
  *(_QWORD *)(a2 + 16) = v11;
  *(_BYTE *)(a2 + 24) = v14;
  return result;
}

uint64_t sub_1B0FDB2E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return StringResolvable.init(from:)(a1, a2);
}

unint64_t sub_1B0FDB2F4(unint64_t result, unint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char v28;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned __int8 v54;
  unint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned __int8 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned __int8 v71;
  uint64_t v72;
  uint64_t v73;
  unsigned __int8 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unsigned __int8 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  char v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  unsigned __int8 v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unsigned __int8 v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  char v103;
  unint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v109;
  int v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unsigned __int8 v121;
  uint64_t v122;
  char v123;
  unsigned __int8 v124;
  int v125;

  v4 = a4;
  v5 = a3;
  v6 = a2;
  v7 = result;
  v8 = a3 & 0xFFFFFFFFFFFFLL;
  if ((a4 & 0x2000000000000000) != 0)
    v8 = HIBYTE(a4) & 0xF;
  v9 = a2 >> 14;
  v112 = 4 * v8;
  if (a2 >> 14 != 4 * v8)
  {
    v100 = v8;
    v101 = result;
    v109 = 0;
    v11 = 0;
    v113 = 0;
    v21 = 0;
    LODWORD(v18) = 255;
    v12 = a2;
    while (1)
    {
      if ((v21 & 1) != 0)
        v6 = v12;
      result = sub_1B1035C6C();
      v23 = result;
      v24 = v22;
      v117 = result;
      v111 = v22;
      if (result != 46 || v22 != 0xE100000000000000)
      {
        result = sub_1B1036128();
        v23 = v117;
        if ((result & 1) == 0)
        {
          v21 = 0;
          if (v117 == 91)
            goto LABEL_27;
          goto LABEL_28;
        }
      }
      v25 = v4;
      v26 = v6 >> 14;
      if (v6 >> 14 == v9)
        break;
      if ((_BYTE)v18 == 0xFF)
      {
        if (v9 < v26)
          goto LABEL_85;
        v36 = sub_1B1035C84();
        v113 = MEMORY[0x1B5E14648](v36);
        v11 = v37;
        v4 = v25;
        result = swift_bridgeObjectRelease();
        v23 = v117;
        v6 = 0;
        v21 = 1;
        v109 = 0xF000000000000007;
        LODWORD(v18) = 1;
LABEL_26:
        v24 = v111;
        if (v23 == 91)
          goto LABEL_27;
        goto LABEL_28;
      }
      result = swift_allocObject();
      if (v9 < v26)
      {
        __break(1u);
LABEL_85:
        __break(1u);
LABEL_86:
        __break(1u);
        goto LABEL_87;
      }
      v27 = result;
      v28 = v18 & 1;
      v103 = v18 & 1;
      v29 = v18;
      v30 = v109;
      sub_1B0F5E604(v113, v11, v109, v28);
      v105 = v12;
      v31 = sub_1B1035C84();
      v32 = MEMORY[0x1B5E14648](v31);
      v12 = v113;
      v34 = v33;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v27 + 16) = v32;
      *(_QWORD *)(v27 + 24) = v34;
      v35 = v113;
      *(_QWORD *)(v27 + 32) = 0;
      *(_BYTE *)(v27 + 40) = 0;
      *(_QWORD *)(v27 + 48) = 0xF000000000000007;
      sub_1B0FE6AE8(v27, v113, v11, v109, v103, (uint64_t)&v118);
      if (v115)
        goto LABEL_74;
      sub_1B0F5FD28(v113, v11, v109, v29);
      sub_1B0F5FD28(v113, v11, v109, v29);
      result = swift_release();
      v6 = 0;
      v11 = v119;
      v113 = v118;
      v109 = v120;
      v21 = 1;
      LODWORD(v18) = v121;
      v12 = v105;
      v4 = a4;
      v5 = a3;
      v24 = v111;
      v23 = v117;
      if (v117 == 91)
      {
LABEL_27:
        if (v24 == 0xE100000000000000)
          goto LABEL_29;
      }
LABEL_28:
      result = sub_1B1036128();
      v23 = v117;
      if ((result & 1) == 0)
        goto LABEL_31;
LABEL_29:
      if ((v21 & 1) != 0)
      {
        v21 = 1;
LABEL_31:
        if (v23 != 93)
          goto LABEL_47;
        goto LABEL_44;
      }
      v38 = v6 >> 14;
      if (v6 >> 14 == v9)
      {
        v39 = v113;
      }
      else if ((_BYTE)v18 == 0xFF)
      {
        if (v9 < v38)
          goto LABEL_88;
        v46 = sub_1B1035C84();
        v39 = MEMORY[0x1B5E14648](v46);
        v11 = v47;
        swift_bridgeObjectRelease();
        LODWORD(v18) = 1;
        v109 = 0xF000000000000007;
      }
      else
      {
        result = swift_allocObject();
        if (v9 < v38)
          goto LABEL_86;
        v40 = result;
        v41 = v18 & 1;
        v106 = v18 & 1;
        v29 = v18;
        v30 = v109;
        sub_1B0F5E604(v113, v11, v109, v41);
        v42 = sub_1B1035C84();
        v43 = MEMORY[0x1B5E14648](v42);
        v45 = v44;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v40 + 16) = v43;
        *(_QWORD *)(v40 + 24) = v45;
        v35 = v113;
        *(_QWORD *)(v40 + 32) = 0;
        *(_BYTE *)(v40 + 40) = 0;
        *(_QWORD *)(v40 + 48) = 0xF000000000000007;
        sub_1B0FE6AE8(v40, v113, v11, v109, v106, (uint64_t)&v118);
        if (v115)
        {
LABEL_74:
          swift_bridgeObjectRelease();
          sub_1B0F5FD28(v35, v11, v30, v29);
          sub_1B0F5FD28(v35, v11, v30, v29);
          goto LABEL_75;
        }
        sub_1B0F5FD28(v113, v11, v109, v29);
        sub_1B0F5FD28(v113, v11, v109, v29);
        swift_release();
        v39 = v118;
        v11 = v119;
        v109 = v120;
        LODWORD(v18) = v121;
        v5 = a3;
      }
      v48 = sub_1B1035C0C();
      v49 = sub_1B0FDB2F4(&v118, v48, v5, a4);
      if (v115)
      {
        sub_1B0F5FD28(v39, v11, v109, v18);
        swift_bridgeObjectRelease();
        return v12;
      }
      v107 = v49;
      v114 = v39;
      v51 = v118;
      v50 = v119;
      v52 = v120;
      v12 = v121;
      if ((_BYTE)v18 == 0xFF)
      {
        swift_bridgeObjectRelease();
        v124 = -1;
        sub_1B0FA58DC();
        swift_allocError();
        *(_QWORD *)v94 = 2;
        *(_QWORD *)(v94 + 8) = 0;
        *(_QWORD *)(v94 + 16) = 0;
        *(_QWORD *)(v94 + 24) = 0;
        *(_BYTE *)(v94 + 32) = 5;
        swift_willThrow();
        sub_1B0F5E6A0(v51, v50, v52, v12);
        v74 = v124;
        v75 = v114;
        v76 = v11;
        v77 = v109;
        goto LABEL_63;
      }
      v53 = swift_allocObject();
      *(_QWORD *)(v53 + 16) = v51;
      *(_QWORD *)(v53 + 24) = v50;
      *(_QWORD *)(v53 + 32) = v52;
      *(_BYTE *)(v53 + 40) = v12;
      *(_QWORD *)(v53 + 48) = 0xF000000000000007;
      v125 = v18;
      sub_1B0F5FD10(v114, v11, v109, v18);
      sub_1B0F5E604(v51, v50, v52, v12);
      sub_1B0FE6AE8(v53 | 0x8000000000000000, v114, v11, v109, v18 & 1, (uint64_t)&v118);
      sub_1B0F5E6A0(v51, v50, v52, v12);
      v54 = v125;
      sub_1B0F5FD28(v114, v11, v109, v125);
      sub_1B0F5FD28(v114, v11, v109, v54);
      swift_release();
      v6 = 0;
      v11 = v119;
      v113 = v118;
      v109 = v120;
      v21 = 1;
      LODWORD(v18) = v121;
      v12 = v107;
      v4 = a4;
      v5 = a3;
      v24 = v111;
      if (v117 != 93)
      {
LABEL_47:
        v55 = v4;
        v56 = sub_1B1036128();
        result = swift_bridgeObjectRelease();
        v57 = v21 | ~v56;
        v4 = v55;
        if ((v57 & 1) == 0)
        {
LABEL_51:
          v124 = v18;
          if ((_BYTE)v18 == 0xFF)
          {
            if (v12 >> 14 < v6 >> 14)
              goto LABEL_90;
            v86 = v11;
            v87 = sub_1B1035C84();
            v88 = MEMORY[0x1B5E14648](v87);
            v90 = v89;
            swift_bridgeObjectRelease();
            v118 = sub_1B0FDCD9C(v88, v90);
            LOBYTE(v119) = v91 & 1;
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0530);
            if (swift_dynamicCast())
            {
              v123 = 0;
              sub_1B0F5FD28(v113, v11, v109, 0xFFu);
              v92 = 0;
              v11 = 0;
              v19 = 0;
              v93 = v122;
              v124 = 0;
            }
            else
            {
              v96 = sub_1B1035C84();
              v93 = MEMORY[0x1B5E14648](v96);
              v11 = v97;
              swift_bridgeObjectRelease();
              sub_1B0F5FD28(v113, v86, v109, v124);
              v92 = 1;
              LOBYTE(v118) = 1;
              v124 = 1;
              v19 = 0xF000000000000007;
            }
          }
          else
          {
            v60 = v18;
            result = swift_allocObject();
            if (v12 >> 14 < v6 >> 14)
              goto LABEL_89;
            v61 = result;
            v125 = v60;
            v62 = v11;
            sub_1B0F5E604(v113, v11, v109, v60 & 1);
            v63 = sub_1B1035C84();
            v64 = MEMORY[0x1B5E14648](v63);
            v66 = v65;
            swift_bridgeObjectRelease();
            *(_QWORD *)(v61 + 16) = v64;
            *(_QWORD *)(v61 + 24) = v66;
            *(_QWORD *)(v61 + 32) = 0;
            *(_BYTE *)(v61 + 40) = 0;
            *(_QWORD *)(v61 + 48) = 0xF000000000000007;
            sub_1B0FE6AE8(v61, v113, v62, v109, v60 & 1, (uint64_t)&v118);
            if (v115)
            {
              v67 = v125;
              sub_1B0F5FD28(v113, v62, v109, v125);
              v68 = v113;
              v69 = v62;
              v70 = v109;
              v71 = v67;
LABEL_68:
              sub_1B0F5FD28(v68, v69, v70, v71);
LABEL_75:
              swift_release();
              return v12;
            }
            v95 = v125;
            sub_1B0F5FD28(v113, v62, v109, v125);
            sub_1B0F5FD28(v113, v62, v109, v95);
            swift_release();
            v93 = v118;
            v11 = v119;
            v19 = v120;
            v92 = v121;
            v124 = v121;
          }
          if (v92 == 255)
          {
            sub_1B0FA58DC();
            swift_allocError();
            *(_QWORD *)v98 = 2;
            *(_QWORD *)(v98 + 8) = 0;
            *(_QWORD *)(v98 + 16) = 0;
            *(_QWORD *)(v98 + 24) = 0;
            *(_BYTE *)(v98 + 32) = 5;
            swift_willThrow();
            v74 = v124;
            v75 = v93;
            goto LABEL_62;
          }
          *(_QWORD *)v101 = v93;
          *(_QWORD *)(v101 + 8) = v11;
          *(_QWORD *)(v101 + 16) = v19;
          *(_BYTE *)(v101 + 24) = v92 & 1;
          return v12;
        }
        goto LABEL_48;
      }
LABEL_44:
      if (v24 != 0xE100000000000000)
        goto LABEL_47;
      result = swift_bridgeObjectRelease();
      if ((v21 & 1) == 0)
        goto LABEL_51;
LABEL_48:
      v9 = v12 >> 14;
      if (v12 >> 14 != v112)
      {
        result = sub_1B1035C0C();
        v12 = result;
        v9 = result >> 14;
      }
      if (v9 == v112)
      {
        v124 = v18;
        v116 = v100 << 16;
        v110 = (v4 >> 60) & ((v5 & 0x800000000000000) == 0);
        if ((v21 & 1) != 0)
        {
          v7 = v101;
          v19 = v109;
          v20 = v113;
          goto LABEL_57;
        }
        if ((_BYTE)v18 == 0xFF)
        {
          v7 = v101;
          v10 = v113;
          goto LABEL_5;
        }
        v78 = v18;
        result = swift_allocObject();
        if (v112 < v6 >> 14)
          goto LABEL_91;
        v79 = result;
        v125 = v78;
        v80 = v11;
        sub_1B0F5E604(v113, v11, v109, v78 & 1);
        v81 = sub_1B1035C84();
        v82 = MEMORY[0x1B5E14648](v81);
        v84 = v83;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v79 + 16) = v82;
        *(_QWORD *)(v79 + 24) = v84;
        *(_QWORD *)(v79 + 32) = 0;
        *(_BYTE *)(v79 + 40) = 0;
        *(_QWORD *)(v79 + 48) = 0xF000000000000007;
        sub_1B0FE6AE8(v79, v113, v80, v109, v78 & 1, (uint64_t)&v118);
        if (v115)
        {
          v85 = v125;
          sub_1B0F5FD28(v113, v80, v109, v125);
          v68 = v113;
          v69 = v80;
          v70 = v109;
          v71 = v85;
          goto LABEL_68;
        }
        v99 = v125;
        sub_1B0F5FD28(v113, v80, v109, v125);
        sub_1B0F5FD28(v113, v80, v109, v99);
        swift_release();
        v20 = v118;
        v11 = v119;
        v19 = v120;
        LOBYTE(v18) = v121;
        v124 = v121;
        v7 = v101;
        goto LABEL_57;
      }
    }
    v6 = 0;
    v21 = 1;
    v4 = v25;
    goto LABEL_26;
  }
  v10 = 0;
  v11 = 0;
  v109 = 0;
  v116 = v8 << 16;
  v110 = (a4 >> 60) & ((a3 & 0x800000000000000) == 0);
  v124 = -1;
  v12 = a2;
LABEL_5:
  if (v112 < v6 >> 14)
  {
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
  }
  else
  {
    v102 = v11;
    v13 = sub_1B1035C84();
    v14 = MEMORY[0x1B5E14648](v13);
    v16 = v15;
    swift_bridgeObjectRelease();
    v118 = sub_1B0FDCD9C(v14, v16);
    LOBYTE(v119) = v17 & 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0530);
    if (swift_dynamicCast())
    {
      v123 = 0;
      sub_1B0F5FD28(v10, v102, v109, 0xFFu);
      LOBYTE(v18) = 0;
      v11 = 0;
      v19 = 0;
      v20 = v122;
      v124 = 0;
    }
    else
    {
      v58 = sub_1B1035C84();
      v20 = MEMORY[0x1B5E14648](v58);
      v18 = v59;
      swift_bridgeObjectRelease();
      sub_1B0F5FD28(v10, v102, v109, v124);
      LOBYTE(v118) = 1;
      v124 = 1;
      v19 = 0xF000000000000007;
      v11 = v18;
      LOBYTE(v18) = 1;
    }
LABEL_57:
    if ((_BYTE)v18 == 0xFF)
    {
      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v73 = 5;
      *(_QWORD *)(v73 + 8) = 0;
      *(_QWORD *)(v73 + 16) = 0;
      *(_QWORD *)(v73 + 24) = 0;
      *(_BYTE *)(v73 + 32) = 5;
      swift_willThrow();
      v74 = v124;
      v75 = v20;
LABEL_62:
      v76 = v11;
      v77 = v19;
LABEL_63:
      sub_1B0F5FD28(v75, v76, v77, v74);
    }
    else
    {
      *(_QWORD *)v7 = v20;
      *(_QWORD *)(v7 + 8) = v11;
      *(_QWORD *)(v7 + 16) = v19;
      *(_BYTE *)(v7 + 24) = v18 & 1;
      v72 = 7;
      if (v110)
        v72 = 11;
      return v116 | v72;
    }
    return v12;
  }
  return result;
}

uint64_t sub_1B0FDC098(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1B0FDC1D8(a1, a2, a3, a4, (uint64_t)&unk_1E629FE78, (void (*)(uint64_t, uint64_t, unint64_t))sub_1B0F56BC8, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_1B0FE6CDC, (void (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_1B0F92F34, (uint64_t)&unk_1E629FEA0, (void (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_1B0F92EA8);
}

uint64_t sub_1B0FDC0E8(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1B0FDC1D8(a1, a2, a3, a4, (uint64_t)&unk_1E629FDD8, (void (*)(uint64_t, uint64_t, unint64_t))sub_1B0F5E604, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_1B0FE6EE0, (void (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_1B0F5FD28, (uint64_t)&unk_1E629FE00, (void (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_1B0F5FD10);
}

uint64_t sub_1B0FDC138(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1B0FDC1D8(a1, a2, a3, a4, (uint64_t)&unk_1E629FE28, (void (*)(uint64_t, uint64_t, unint64_t))sub_1B0F5E604, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_1B0FE70D4, (void (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_1B0F5FD28, (uint64_t)&unk_1E629FE50, (void (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_1B0F5FD10);
}

uint64_t sub_1B0FDC188(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1B0FDC1D8(a1, a2, a3, a4, (uint64_t)&unk_1E629FEC8, (void (*)(uint64_t, uint64_t, unint64_t))sub_1B0F5A84C, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_1B0FE72C8, (void (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_1B0F75CB4, (uint64_t)&unk_1E629FEF0, (void (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_1B0F75C64);
}

uint64_t sub_1B0FDC1D8(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, unint64_t), void (*a7)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t), void (*a8)(uint64_t, uint64_t, unint64_t, uint64_t), uint64_t a9, void (*a10)(uint64_t, uint64_t, unint64_t, uint64_t))
{
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  char v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  int64x2_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(unint64_t, uint64_t, unint64_t, uint64_t);
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  int64x2_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v91;
  unint64_t v92;
  unsigned int v93;
  unsigned int v94;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  int64x2_t v108;
  unsigned __int8 v109;

  v11 = a2;
  v12 = a1;
  v13 = a3 & 0xFFFFFFFFFFFFLL;
  if ((a4 & 0x2000000000000000) != 0)
    v13 = HIBYTE(a4) & 0xF;
  v14 = 4 * v13;
  v15 = a2 >> 14;
  if (a2 >> 14 == 4 * v13)
  {
    v16 = v13 << 16;
    v17 = (a4 >> 60) & ((a3 & 0x800000000000000) == 0);
    if (v14 >= a2 >> 14)
      goto LABEL_5;
    goto LABEL_74;
  }
  v88 = v13;
  v16 = 0;
  v99 = 0;
  v100 = 0;
  v24 = 0;
  v10 = 255;
  v25 = a2;
  v91 = 4 * v13;
  do
  {
    if ((v24 & 1) != 0)
      v11 = v25;
    result = sub_1B1035C6C();
    v27 = result;
    v28 = v26;
    v106 = result;
    v102 = v26;
    if (result != 46 || v26 != 0xE100000000000000)
    {
      result = sub_1B1036128();
      v27 = v106;
      if ((result & 1) == 0)
      {
        v24 = 0;
        if (v106 == 91)
          goto LABEL_29;
        goto LABEL_30;
      }
    }
    v29 = v11 >> 14;
    if (v11 >> 14 == v15)
    {
      v11 = 0;
      v24 = 1;
      goto LABEL_28;
    }
    if ((_BYTE)v10 == 0xFF)
    {
      if (v15 < v29)
        goto LABEL_80;
      v38 = sub_1B1035C84();
      v39 = MEMORY[0x1B5E14648](v38);
      v99 = v40;
      v100 = v39;
      result = swift_bridgeObjectRelease();
      v27 = v106;
      v11 = 0;
      v24 = 1;
      v16 = 0xF000000000000007;
      v10 = 1;
LABEL_28:
      v28 = v102;
      if (v27 == 91)
        goto LABEL_29;
      goto LABEL_30;
    }
    result = swift_allocObject();
    if (v15 < v29)
    {
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
      goto LABEL_83;
    }
    v30 = result;
    v31 = v10;
    LODWORD(v92) = v10 & 1;
    a6(v100, v99, v16);
    v97 = v25;
    v32 = sub_1B1035C84();
    v33 = MEMORY[0x1B5E14648](v32);
    v34 = v31;
    v35 = v16;
    v37 = v36;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v30 + 16) = v33;
    *(_QWORD *)(v30 + 24) = v37;
    *(_QWORD *)(v30 + 32) = 0;
    *(_BYTE *)(v30 + 40) = 0;
    *(_QWORD *)(v30 + 48) = 0xF000000000000007;
    a7(&v107, v30, v100, v99, v35, v92);
    if (v105)
    {
      swift_release();
      swift_bridgeObjectRelease();
      a8(v100, v99, v35, v34);
      return ((uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))a8)(v100, v99, v35, v34);
    }
    swift_release();
    a8(v100, v99, v35, v34);
    result = ((uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))a8)(v100, v99, v35, v34);
    v11 = 0;
    v16 = v108.u64[1];
    v99 = v108.i64[0];
    v100 = v107;
    v24 = 1;
    v10 = v109;
    v25 = v97;
    v14 = v91;
    v28 = v102;
    v27 = v106;
    if (v106 == 91)
    {
LABEL_29:
      if (v28 == 0xE100000000000000)
        goto LABEL_31;
    }
LABEL_30:
    result = sub_1B1036128();
    v27 = v106;
    if ((result & 1) == 0)
      goto LABEL_33;
LABEL_31:
    if ((v24 & 1) == 0)
    {
      v41 = v11 >> 14;
      if (v11 >> 14 == v15)
      {
        v42 = v10;
        v44 = a3;
        v43 = a4;
        v45 = v100;
        v46 = v99;
      }
      else if ((_BYTE)v10 == 0xFF)
      {
        if (v15 < v41)
          goto LABEL_82;
        v44 = a3;
        v43 = a4;
        v54 = sub_1B1035C84();
        v45 = MEMORY[0x1B5E14648](v54);
        v46 = v55;
        swift_bridgeObjectRelease();
        v42 = 1;
        v16 = 0xF000000000000007;
      }
      else
      {
        result = swift_allocObject();
        if (v15 < v41)
          goto LABEL_81;
        v47 = result;
        v48 = v10 & 1;
        LODWORD(v92) = v10;
        v14 = v100;
        ((void (*)(uint64_t, uint64_t, unint64_t, uint64_t))a6)(v100, v99, v16, v48);
        v49 = sub_1B1035C84();
        v50 = MEMORY[0x1B5E14648](v49);
        v51 = v16;
        v53 = v52;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v47 + 16) = v50;
        *(_QWORD *)(v47 + 24) = v53;
        v10 = v99;
        v16 = v51;
        *(_QWORD *)(v47 + 32) = 0;
        *(_BYTE *)(v47 + 40) = 0;
        *(_QWORD *)(v47 + 48) = 0xF000000000000007;
        a7(&v107, v47, v100, v99, v51, v48);
        if (v105)
          goto LABEL_75;
        swift_release();
        a8(v100, v99, v51, v92);
        a8(v100, v99, v51, v92);
        v45 = v107;
        v16 = v108.u64[1];
        v46 = v108.i64[0];
        v42 = v109;
        v44 = a3;
        v43 = a4;
      }
      v56 = sub_1B1035C0C();
      v57 = sub_1B0FDB2F4((unint64_t)&v107, v56, v44, v43);
      if (v105)
      {
        a8(v45, v46, v16, v42);
        return swift_bridgeObjectRelease();
      }
      v98 = v57;
      v58 = v107;
      v59 = v108;
      v101 = v109;
      if ((_BYTE)v42 == 0xFF)
      {
        swift_bridgeObjectRelease();
        sub_1B0FA58DC();
        swift_allocError();
        *(_QWORD *)v86 = 2;
        *(_QWORD *)(v86 + 8) = 0;
        *(_QWORD *)(v86 + 16) = 0;
        *(_QWORD *)(v86 + 24) = 0;
        *(_BYTE *)(v86 + 32) = 5;
        swift_willThrow();
        return sub_1B0F5E6A0(v58, v59.i64[0], v59.i64[1], v101);
      }
      v60 = swift_allocObject();
      *(_QWORD *)(v60 + 16) = v58;
      *(int64x2_t *)(v60 + 24) = v59;
      *(_BYTE *)(v60 + 40) = v101;
      v92 = v60 | 0x8000000000000000;
      *(_QWORD *)(v60 + 48) = 0xF000000000000007;
      a10(v45, v46, v16, v42);
      sub_1B0F5E604(v58, v59.i64[0], v59.i64[1], v101);
      a7(&v107, v92, v45, v46, v16, v42 & 1);
      sub_1B0F5E6A0(v58, v59.i64[0], v59.i64[1], v101);
      swift_release();
      a8(v45, v46, v16, v42);
      a8(v45, v46, v16, v42);
      v11 = 0;
      v16 = v108.u64[1];
      v99 = v108.i64[0];
      v100 = v107;
      v24 = 1;
      v10 = v109;
      v25 = v98;
      v14 = v91;
      v28 = v102;
      if (v106 == 93)
        goto LABEL_46;
LABEL_49:
      v61 = sub_1B1036128();
      result = swift_bridgeObjectRelease();
      if (v24 & 1 | ((v61 & 1) == 0))
        goto LABEL_50;
LABEL_54:
      if ((_BYTE)v10 == 0xFF)
      {
        if (v25 >> 14 >= v11 >> 14)
        {
          v79 = v25;
          v80 = sub_1B1035C84();
          v81 = MEMORY[0x1B5E14648](v80);
          v83 = v82;
          swift_bridgeObjectRelease();
          v84 = 1;
          v85 = vdupq_n_s64(0xF000000000000007);
          v85.i64[0] = v83;
LABEL_70:
          if (v84 != 255)
          {
            *(_QWORD *)a1 = v81;
            *(int64x2_t *)(a1 + 8) = v85;
            *(_BYTE *)(a1 + 24) = v84 & 1;
            return v79;
          }
          sub_1B0FA58DC();
          swift_allocError();
          *(_QWORD *)v87 = 2;
          *(_QWORD *)(v87 + 8) = 0;
          *(_QWORD *)(v87 + 16) = 0;
          *(_QWORD *)(v87 + 24) = 0;
          *(_BYTE *)(v87 + 32) = 5;
          return swift_willThrow();
        }
LABEL_84:
        __break(1u);
        goto LABEL_85;
      }
      result = swift_allocObject();
      if (v25 >> 14 >= v11 >> 14)
      {
        v63 = result;
        v64 = v10 & 1;
        v93 = v10;
        ((void (*)(uint64_t, uint64_t, unint64_t, uint64_t))a6)(v100, v99, v16, v64);
        v65 = sub_1B1035C84();
        v66 = MEMORY[0x1B5E14648](v65);
        v68 = v67;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v63 + 16) = v66;
        *(_QWORD *)(v63 + 24) = v68;
        *(_QWORD *)(v63 + 32) = 0;
        *(_BYTE *)(v63 + 40) = 0;
        *(_QWORD *)(v63 + 48) = 0xF000000000000007;
        a7(&v107, v63, v100, v99, v16, v64);
        if (v105)
        {
          swift_release();
          v69 = v93;
          v70 = (uint64_t (*)(unint64_t, uint64_t, unint64_t, uint64_t))a8;
          a8(v100, v99, v16, v93);
          v71 = v100;
          v72 = v99;
          goto LABEL_76;
        }
        v79 = v25;
        swift_release();
        a8(v100, v99, v16, v93);
        a8(v100, v99, v16, v93);
        v81 = v107;
        v85 = v108;
        v84 = v109;
        goto LABEL_70;
      }
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    v24 = 1;
LABEL_33:
    if (v27 != 93)
      goto LABEL_49;
LABEL_46:
    if (v28 != 0xE100000000000000)
      goto LABEL_49;
    result = swift_bridgeObjectRelease();
    if ((v24 & 1) == 0)
      goto LABEL_54;
LABEL_50:
    v15 = v25 >> 14;
    if (v25 >> 14 != v14)
    {
      v25 = sub_1B1035C0C();
      v15 = v25 >> 14;
    }
  }
  while (v15 != v14);
  v21 = v16;
  v16 = v88 << 16;
  v17 = (a4 >> 60) & ((a3 & 0x800000000000000) == 0);
  if ((v24 & 1) != 0)
  {
LABEL_59:
    v12 = a1;
    goto LABEL_6;
  }
  if ((_BYTE)v10 == 0xFF)
  {
    v12 = a1;
    if (v14 >= v11 >> 14)
    {
LABEL_5:
      v18 = sub_1B1035C84();
      v19 = MEMORY[0x1B5E14648](v18);
      v99 = v20;
      v100 = v19;
      swift_bridgeObjectRelease();
      LOBYTE(v10) = 1;
      v21 = 0xF000000000000007;
LABEL_6:
      if ((_BYTE)v10 != 0xFF)
      {
        *(_QWORD *)v12 = v100;
        *(_QWORD *)(v12 + 8) = v99;
        *(_QWORD *)(v12 + 16) = v21;
        *(_BYTE *)(v12 + 24) = v10 & 1;
        v22 = 7;
        if (v17)
          v22 = 11;
        return v16 | v22;
      }
      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v62 = 5;
      *(_QWORD *)(v62 + 8) = 0;
      *(_QWORD *)(v62 + 16) = 0;
      *(_QWORD *)(v62 + 24) = 0;
      *(_BYTE *)(v62 + 32) = 5;
      return swift_willThrow();
    }
LABEL_74:
    __break(1u);
LABEL_75:
    swift_release();
    swift_bridgeObjectRelease();
    v69 = v92;
    v70 = (uint64_t (*)(unint64_t, uint64_t, unint64_t, uint64_t))a8;
    a8(v14, v10, v16, v92);
    v71 = v14;
    v72 = v10;
LABEL_76:
    v78 = v16;
    return v70(v71, v72, v78, v69);
  }
  v94 = v10;
  result = swift_allocObject();
  if (v14 < v11 >> 14)
  {
LABEL_85:
    __break(1u);
    return result;
  }
  v73 = result;
  a6(v100, v99, v21);
  v74 = sub_1B1035C84();
  v75 = MEMORY[0x1B5E14648](v74);
  v77 = v76;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v73 + 16) = v75;
  *(_QWORD *)(v73 + 24) = v77;
  *(_QWORD *)(v73 + 32) = 0;
  *(_BYTE *)(v73 + 40) = 0;
  *(_QWORD *)(v73 + 48) = 0xF000000000000007;
  a7(&v107, v73, v100, v99, v21, v94 & 1);
  if (!v105)
  {
    swift_release();
    a8(v100, v99, v21, v94);
    a8(v100, v99, v21, v94);
    v21 = v108.u64[1];
    v99 = v108.i64[0];
    v100 = v107;
    LOBYTE(v10) = v109;
    goto LABEL_59;
  }
  swift_release();
  v69 = v94;
  v70 = (uint64_t (*)(unint64_t, uint64_t, unint64_t, uint64_t))a8;
  a8(v100, v99, v21, v94);
  v71 = v100;
  v72 = v99;
  v78 = v21;
  return v70(v71, v72, v78, v69);
}

uint64_t sub_1B0FDCD9C(uint64_t result, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  char v22;
  _QWORD v23[3];

  v3 = HIBYTE(a2) & 0xF;
  v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = result & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0)
        v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v6 = (unsigned __int8 *)sub_1B1035F6C();
      v7 = (uint64_t)sub_1B0FDE538(v6, v4, 10);
      v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3)
        goto LABEL_50;
      if (v3 == 1 || (BYTE1(result) - 48) > 9u)
        goto LABEL_34;
      v7 = (BYTE1(result) - 48);
      v14 = v3 - 2;
      if (v14)
      {
        v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          v16 = *v15 - 48;
          if (v16 > 9)
            goto LABEL_34;
          v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v17 + v16;
          if (__OFADD__(v17, v16))
            goto LABEL_34;
          v9 = 0;
          ++v15;
          if (!--v14)
            goto LABEL_37;
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            v7 = -(uint64_t)(BYTE1(result) - 48);
            v10 = v3 - 2;
            if (v10)
            {
              v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                v12 = *v11 - 48;
                if (v12 > 9)
                  goto LABEL_34;
                v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
                  goto LABEL_34;
                v7 = v13 - v12;
                if (__OFSUB__(v13, v12))
                  goto LABEL_34;
                v9 = 0;
                ++v11;
                if (!--v10)
                  goto LABEL_37;
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          v7 = 0;
          v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u)
        goto LABEL_34;
      v7 = (result - 48);
      v18 = v3 - 1;
      if (v18)
      {
        v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          v20 = *v19 - 48;
          if (v20 > 9)
            goto LABEL_34;
          v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v21 + v20;
          if (__OFADD__(v21, v20))
            goto LABEL_34;
          v9 = 0;
          ++v19;
          if (!--v18)
            goto LABEL_37;
        }
      }
    }
LABEL_36:
    v9 = 0;
    goto LABEL_37;
  }
  v7 = (uint64_t)sub_1B0FDE454(result, a2, 10);
  v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    return 0;
  else
    return v7;
}

_QWORD *sub_1B0FDCFE8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0540);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1B0FDEC70(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1B0FDD0F4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0520);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1B0FE0E50(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1B0FDD200(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1B0FDD42C(a1, a2, a3, a4, &qword_1EEEE0578, &qword_1EEEDE5D8);
}

char *sub_1B0FDD214(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0558);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x1E0DEE9D8];
      v12 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1B0FE0C64(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1B0FDD30C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0538);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1B0FE0B74(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1B0FDD418(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1B0FDD42C(a1, a2, a3, a4, &qword_1EEEDE498, &qword_1EEEDE4E0);
}

_QWORD *sub_1B0FDD42C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  _QWORD *v15;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      v15 = v13 + 4;
      if ((v8 & 1) != 0)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4])
          memmove(v15, a4 + 4, 40 * v11);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v15 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1B0FE0D48(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1B0FDD558(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0528);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1B0FE0F40(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1B0FDD664(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0550);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1B0FE1034(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1B0FDD770(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE8C0);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1B0FDD7D4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_1B1035C60();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x1B5E1469C](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

uint64_t sub_1B0FDD84C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1B0FDD9D0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1B0FDD868(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1B0FDDB3C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1B0FDD884(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1B0FDDCA4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1B0FDD8A0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1B0FDDE0C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1B0FDD8BC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1B0FDDF74(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1B0FDD8D8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1B0FDE154(a1, a2, a3, (_QWORD *)*v3, &qword_1EEEE0548, &qword_1EEEDE5E0);
  *v3 = result;
  return result;
}

uint64_t sub_1B0FDD904(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1B0FDE154(a1, a2, a3, (_QWORD *)*v3, &qword_1EEEE0578, &qword_1EEEDE5D8);
  *v3 = result;
  return result;
}

uint64_t sub_1B0FDD930(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1B0FDE154(a1, a2, a3, (_QWORD *)*v3, &qword_1EEEE0580, &qword_1EEEE0588);
  *v3 = result;
  return result;
}

uint64_t sub_1B0FDD95C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1B0FDE154(a1, a2, a3, (_QWORD *)*v3, &qword_1EEEE05A8, &qword_1EEEE05B0);
  *v3 = result;
  return result;
}

uint64_t sub_1B0FDD988(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1B0FDE154(a1, a2, a3, (_QWORD *)*v3, &qword_1EEEE0590, &qword_1EEEE0598);
  *v3 = result;
  return result;
}

uint64_t sub_1B0FDD9B4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1B0FDE2F8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1B0FDD9D0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0528);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1B1036050();
  __break(1u);
  return result;
}

uint64_t sub_1B0FDDB3C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0520);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1B1036050();
  __break(1u);
  return result;
}

uint64_t sub_1B0FDDCA4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0538);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1B1036050();
  __break(1u);
  return result;
}

uint64_t sub_1B0FDDE0C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE05A0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1B1036050();
  __break(1u);
  return result;
}

uint64_t sub_1B0FDDF74(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0560);
  v10 = *(_QWORD *)(sub_1B1034D84() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_34;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(sub_1B1034D84() - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (char *)v13 + v17;
  v19 = (char *)a4 + v17;
  if ((a1 & 1) != 0)
  {
    if (v13 < a4 || v18 >= &v19[*(_QWORD *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v20 = *(_QWORD *)(v16 + 72) * v8;
  v21 = &v18[v20];
  v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  result = sub_1B1036050();
  __break(1u);
  return result;
}

uint64_t sub_1B0FDE154(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v15 = (unint64_t)(v13 + 4);
  v16 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11)
      memmove(v13 + 4, a4 + 4, 40 * v11);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  result = sub_1B1036050();
  __break(1u);
  return result;
}

uint64_t sub_1B0FDE2F8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0568);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1B1036050();
  __break(1u);
  return result;
}

unsigned __int8 *sub_1B0FDE454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_1B1035C78();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_1B0FDE7B4();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_1B1035F6C();
  }
LABEL_7:
  v11 = sub_1B0FDE538(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_1B0FDE538(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1B0FDE7B4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_1B1035C84();
  v4 = sub_1B0FDE830(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1B0FDE830(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_1B0FDE974(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_1B0FDD770(v9, 0);
      v12 = sub_1B0FDEA60((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v13 = MEMORY[0x1B5E14654](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x1B5E14654);
LABEL_9:
      sub_1B1035F6C();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1B5E14654]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_1B0FDE974(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_1B0FDD7D4(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_1B0FDD7D4(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_1B1035C48();
  }
  __break(1u);
  return result;
}

unint64_t sub_1B0FDEA60(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_1B0FDD7D4(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_1B1035C54();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_1B1035F6C();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_1B0FDD7D4(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_1B1035C30();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1B0FDEC70(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF3C8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1B1036050();
  __break(1u);
  return result;
}

uint64_t sub_1B0FDED78(uint64_t a1, uint64_t a2)
{
  void *v2;
  int64_t v3;
  uint64_t v4;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  BOOL v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t result;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t KeyPath;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  void *v169;
  void *v170;
  void *v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  unint64_t v178;
  uint64_t v179;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = MEMORY[0x1E0DEE9D8];
  if (!v3)
    return v4;
  v169 = v2;
  v179 = MEMORY[0x1E0DEE9D8];
  sub_1B0FDD884(0, v3, 0);
  v4 = v179;
  v167 = qword_1EEEE0768;
  v163 = a2 + qword_1EEEE0760;
  v7 = (_BYTE *)(a1 + 56);
  v164 = a2;
  v8 = a2;
  while (1)
  {
    v10 = *((_QWORD *)v7 - 3);
    v9 = *((_QWORD *)v7 - 2);
    if ((*v7 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      goto LABEL_60;
    }
    v172 = *((_QWORD *)v7 - 1);
    if ((~v172 & 0xF000000000000007) != 0)
      break;
    if (!*(_QWORD *)(v8 + v167))
    {
      sub_1B0F56BC8(v10, v9, v172, 1);
      swift_bridgeObjectRetain();
      sub_1B0F5A880(v172);
      goto LABEL_32;
    }
    v165 = *(_QWORD *)(v8 + v167);
    v11 = *((_QWORD *)v7 - 3);
    v12 = v8;
    swift_beginAccess();
    v13 = *(_QWORD *)v163;
    v14 = *(_QWORD *)(*(_QWORD *)v163 + 16);
    sub_1B0F56BC8(v11, v9, v172, 1);
    sub_1B0F56BC8(v11, v9, v172, 1);
    v162 = v11;
    if (!v14)
    {
      swift_retain();
LABEL_31:
      swift_endAccess();
      swift_release();
      v10 = v11;
      goto LABEL_32;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    v15 = sub_1B0F56A3C(v11, v9);
    if ((v16 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    v17 = *(_QWORD *)(v13 + 56) + 32 * v15;
    v19 = *(_QWORD *)v17;
    v18 = *(_QWORD *)(v17 + 8);
    v20 = *(_QWORD *)(v17 + 16);
    v21 = *(unsigned __int8 *)(v17 + 24);
    swift_endAccess();
    v160 = v18;
    sub_1B0F5A84C(v19, v18, v20, v21);
    swift_bridgeObjectRelease();
    v8 = v12;
    if (v21 != 1)
    {
      swift_release();
      v178 = v19;
LABEL_65:
      v10 = v162;
      goto LABEL_42;
    }
    v22 = v165;
    v23 = v20;
    v10 = v162;
    v158 = v20;
    if ((~v20 & 0xF000000000000007) != 0)
    {
      if (*(_QWORD *)(v165 + qword_1EEEE0768))
      {
        v83 = v165 + qword_1EEEE0760;
        v152 = *(_QWORD *)(v165 + qword_1EEEE0768);
        swift_beginAccess();
        v145 = *(_QWORD *)v83;
        v84 = *(_QWORD *)(*(_QWORD *)v83 + 16);
        v85 = v160;
        sub_1B0F5A84C(v19, v160, v23, 1);
        sub_1B0F5A880(v23);
        swift_retain();
        if (v84)
        {
          swift_bridgeObjectRetain();
          v86 = sub_1B0F56A3C(v19, v160);
          if ((v87 & 1) != 0)
          {
            v88 = *(_QWORD *)(v145 + 56) + 32 * v86;
            v89 = *(_QWORD *)v88;
            v90 = *(_QWORD *)(v88 + 8);
            v146 = *(_QWORD *)(v88 + 16);
            v91 = *(_BYTE *)(v88 + 24);
            swift_endAccess();
            sub_1B0F5A84C(v89, v90, v146, v91);
            swift_bridgeObjectRelease();
            sub_1B0FD6EFC(v152, v89, v90, v146, v91, &v175);
            if (v169)
            {

              swift_release();
              sub_1B0F74EA4(v89, v90, v146, v91);
              v169 = 0;
              v8 = v164;
              v85 = v160;
              goto LABEL_118;
            }
            v169 = 0;
            swift_release();
            sub_1B0F74EA4(v89, v90, v146, v91);
            v127 = v175;
            v8 = v164;
LABEL_119:
            if ((~v127 & 0xF000000000000007) != 0)
            {
              v112 = v160;
              swift_bridgeObjectRelease();
              sub_1B0FD8B94(v127, v165, v158, &v177);
              if (!v169)
              {
                v169 = 0;
                sub_1B0F571D8(v158);
                sub_1B0FC9D10(v127);
                sub_1B0F571D8(v158);
                swift_release();
                sub_1B0F74EA4(v19, v160, v158, 1);
                v19 = v177;
                v178 = v177;
                v8 = v164;
                goto LABEL_65;
              }
              sub_1B0F571D8(v158);
              sub_1B0FC9D10(v127);
              sub_1B0F571D8(v158);

              v169 = 0;
              v8 = v164;
              v114 = v158;
              v10 = v162;
            }
            else
            {
              sub_1B0FA58DC();
              v170 = (void *)swift_allocError();
              v112 = v160;
              *(_QWORD *)v128 = v19;
              *(_QWORD *)(v128 + 8) = v160;
              *(_QWORD *)(v128 + 16) = &type metadata for DecodableState;
              *(_BYTE *)(v128 + 32) = 0;
              swift_willThrow();
              v114 = v158;
              sub_1B0F571D8(v158);
              sub_1B0F571D8(v158);

              v169 = 0;
            }
            goto LABEL_123;
          }
          swift_bridgeObjectRelease();
        }
        swift_endAccess();
        swift_release();
        v8 = v164;
      }
      else
      {
        v85 = v160;
        sub_1B0F5A84C(v19, v160, v23, 1);
        sub_1B0F5A880(v158);
      }
LABEL_118:
      swift_bridgeObjectRetain();
      sub_1B0FEBA70(v19, v85, &v174);
      swift_bridgeObjectRelease();
      v127 = v174;
      goto LABEL_119;
    }
    if (!*(_QWORD *)(v165 + qword_1EEEE0768))
    {
      v100 = v160;
      swift_bridgeObjectRetain();
      sub_1B0F5A880(v23);
      goto LABEL_87;
    }
    v150 = *(_QWORD *)(v165 + qword_1EEEE0768);
    v24 = (uint64_t *)(v165 + qword_1EEEE0760);
    swift_beginAccess();
    v25 = *v24;
    v26 = *(_QWORD *)(v25 + 16);
    sub_1B0F5A84C(v19, v160, v20, 1);
    if (v26)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      v27 = sub_1B0F56A3C(v19, v160);
      v8 = v164;
      if ((v28 & 1) != 0)
      {
        v29 = *(_QWORD *)(v25 + 56) + 32 * v27;
        v140 = *(_QWORD *)v29;
        v143 = *(_QWORD *)(v29 + 8);
        v138 = *(_QWORD *)(v29 + 16);
        v30 = *(_BYTE *)(v29 + 24);
        swift_endAccess();
        sub_1B0F5A84C(v140, v143, v138, v30);
        swift_bridgeObjectRelease();
        sub_1B0FD6EFC(v150, v140, v143, v138, v30, &v175);
        if (!v169)
        {
          v169 = 0;
          swift_release();
          sub_1B0F74EA4(v140, v143, v138, v30);
          v110 = v175;
          v174 = v175;
          goto LABEL_97;
        }

        swift_release();
        sub_1B0F74EA4(v140, v143, v138, v30);
        v169 = 0;
        goto LABEL_86;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_retain();
      v8 = v164;
    }
    swift_endAccess();
    swift_release();
LABEL_86:
    v22 = v165;
    v100 = v160;
LABEL_87:
    v175 = v19;
    v176 = v100;
    v102 = (uint64_t *)(v22 + *(_QWORD *)(*(_QWORD *)v22 + 112));
    swift_beginAccess();
    v103 = *v102;
    v104 = *(_QWORD *)(v103 + 16);
    swift_bridgeObjectRetain();
    if (v104)
    {
      swift_bridgeObjectRetain();
      v105 = sub_1B0F56A3C(v19, v160);
      if ((v106 & 1) != 0)
      {
        v107 = *(_QWORD *)(*(_QWORD *)(v103 + 56) + 8 * v105);
        v108 = swift_bridgeObjectRelease();
        MEMORY[0x1E0C80A78](v108);
        KeyPath = swift_getKeyPath();
        MEMORY[0x1E0C80A78](KeyPath);
        swift_getKeyPath();
        sub_1B10346F4();
        swift_release();
        result = swift_release();
        if ((v107 & 0x8000000000000000) != 0)
          goto LABEL_150;
        v8 = v164;
        if (v107 >= *(_QWORD *)(v173 + 16))
          goto LABEL_151;
        v174 = *(_QWORD *)(v173 + 8 * v107 + 32);
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_96;
      }
      swift_bridgeObjectRelease();
    }
    v109 = *(_QWORD *)(v165 + *(_QWORD *)(*(_QWORD *)v165 + 120));
    if (v109)
    {
      (*(void (**)(unint64_t *__return_ptr, uint64_t *))(*(_QWORD *)v109 + 248))(&v174, &v175);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v174 = 0xF000000000000007;
    }
LABEL_96:
    v110 = v174;
LABEL_97:
    if ((~v110 & 0xF000000000000007) != 0)
    {
      swift_release();
      swift_bridgeObjectRelease();
      sub_1B0F74EA4(v19, v160, v158, 1);
      v178 = v110;
      v19 = v110;
      goto LABEL_42;
    }
    sub_1B0FA58DC();
    v111 = (void *)swift_allocError();
    v112 = v160;
    *(_QWORD *)v113 = v19;
    *(_QWORD *)(v113 + 8) = v160;
    *(_QWORD *)(v113 + 16) = &type metadata for DecodableState;
    *(_BYTE *)(v113 + 32) = 0;
    swift_willThrow();

    v169 = 0;
    v114 = v158;
LABEL_123:
    swift_release();
    sub_1B0F74EA4(v19, v112, v114, 1);
LABEL_32:
    v175 = v10;
    v176 = v9;
    v52 = (uint64_t *)(v8 + *(_QWORD *)(*(_QWORD *)v8 + 112));
    swift_beginAccess();
    v53 = *v52;
    v54 = *(_QWORD *)(v53 + 16);
    swift_bridgeObjectRetain();
    if (v54)
    {
      swift_bridgeObjectRetain();
      v55 = sub_1B0F56A3C(v10, v9);
      if ((v56 & 1) != 0)
      {
        v57 = *(_QWORD *)(*(_QWORD *)(v53 + 56) + 8 * v55);
        v58 = swift_bridgeObjectRelease();
        MEMORY[0x1E0C80A78](v58);
        v59 = swift_getKeyPath();
        MEMORY[0x1E0C80A78](v59);
        swift_getKeyPath();
        v8 = v164;
        sub_1B10346F4();
        swift_release();
        result = swift_release();
        if ((v57 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          return result;
        }
        if (v57 >= *(_QWORD *)(v177 + 16))
          goto LABEL_147;
        v178 = *(_QWORD *)(v177 + 8 * v57 + 32);
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_41;
      }
      swift_bridgeObjectRelease();
    }
    v61 = *(_QWORD *)(v8 + *(_QWORD *)(*(_QWORD *)v8 + 120));
    if (v61)
    {
      (*(void (**)(unint64_t *__return_ptr, uint64_t *))(*(_QWORD *)v61 + 248))(&v178, &v175);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v178 = 0xF000000000000007;
    }
LABEL_41:
    v19 = v178;
LABEL_42:
    if ((~v19 & 0xF000000000000007) == 0)
    {
      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v133 = v10;
      *(_QWORD *)(v133 + 8) = v9;
      *(_QWORD *)(v133 + 16) = MEMORY[0x1E0DEA968];
      *(_BYTE *)(v133 + 32) = 0;
      swift_willThrow();
      v134 = v10;
      v135 = v9;
      v136 = v172;
LABEL_141:
      sub_1B0F56B08(v134, v135, v136, 1);
      swift_release();
      return v4;
    }
    v175 = v19;
    sub_1B0F9877C();
    if (v169)
    {
      sub_1B0FC9D10(v19);
      swift_bridgeObjectRelease();
      sub_1B0F56B08(v10, v9, v172, 1);
      goto LABEL_144;
    }
    v64 = v62;
    v65 = v63;
    sub_1B0FC9D10(v19);
    swift_bridgeObjectRelease();
    sub_1B0F56B08(v10, v9, v172, 1);
    v10 = v64;
    v9 = v65;
LABEL_60:
    v179 = v4;
    v81 = *(_QWORD *)(v4 + 16);
    v80 = *(_QWORD *)(v4 + 24);
    if (v81 >= v80 >> 1)
    {
      sub_1B0FDD884(v80 > 1, v81 + 1, 1);
      v4 = v179;
    }
    v7 += 32;
    *(_QWORD *)(v4 + 16) = v81 + 1;
    v82 = v4 + 16 * v81;
    *(_QWORD *)(v82 + 32) = v10;
    *(_QWORD *)(v82 + 40) = v9;
    if (!--v3)
      return v4;
  }
  v31 = *(_QWORD *)(v8 + v167);
  v168 = v4;
  if (!v31)
  {
    v51 = *((_QWORD *)v7 - 1);
    sub_1B0F56BC8(v10, v9, v172, 1);
    sub_1B0F56BC8(v10, v9, v172, 1);
    sub_1B0F5A880(v172);
    goto LABEL_47;
  }
  swift_beginAccess();
  v32 = *(_QWORD *)v163;
  v33 = *(_QWORD *)(*(_QWORD *)v163 + 16);
  sub_1B0F56BC8(v10, v9, v172, 1);
  sub_1B0F56BC8(v10, v9, v172, 1);
  sub_1B0F5A880(v172);
  swift_retain();
  if (!v33)
  {
LABEL_46:
    swift_endAccess();
    swift_release();
    v51 = v172;
    v8 = v164;
    goto LABEL_47;
  }
  swift_bridgeObjectRetain();
  v34 = sub_1B0F56A3C(v10, v9);
  if ((v35 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_46;
  }
  v166 = v31;
  v36 = *(_QWORD *)(v32 + 56) + 32 * v34;
  v38 = *(_QWORD *)v36;
  v37 = *(_QWORD *)(v36 + 8);
  v39 = *(_QWORD *)(v36 + 16);
  v40 = *(unsigned __int8 *)(v36 + 24);
  swift_endAccess();
  v161 = v37;
  sub_1B0F5A84C(v38, v37, v39, v40);
  swift_bridgeObjectRelease();
  if (v40 != 1)
  {
    swift_release();
LABEL_67:
    v178 = v38;
    v51 = v172;
    v8 = v164;
    goto LABEL_57;
  }
  v159 = v39;
  v41 = (~v39 & 0xF000000000000007) == 0;
  v8 = v164;
  v42 = v166;
  if (v41)
  {
    v151 = *(_QWORD *)(v166 + qword_1EEEE0768);
    if (!v151)
    {
      v101 = v161;
      swift_bridgeObjectRetain();
      sub_1B0F5A880(v159);
      goto LABEL_103;
    }
    v43 = (uint64_t *)(v166 + qword_1EEEE0760);
    swift_beginAccess();
    v44 = *v43;
    v45 = *(_QWORD *)(v44 + 16);
    sub_1B0F5A84C(v38, v161, v159, 1);
    if (v45)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      v46 = sub_1B0F56A3C(v38, v161);
      if ((v47 & 1) != 0)
      {
        v48 = *(_QWORD *)(v44 + 56) + 32 * v46;
        v49 = *(_QWORD *)(v48 + 8);
        v144 = *(_QWORD *)v48;
        v141 = *(_QWORD *)(v48 + 16);
        v50 = *(_BYTE *)(v48 + 24);
        swift_endAccess();
        sub_1B0F5A84C(v144, v49, v141, v50);
        swift_bridgeObjectRelease();
        sub_1B0FD6EFC(v151, v144, v49, v141, v50, &v175);
        v42 = v166;
        if (!v169)
        {
          v169 = 0;
          swift_release();
          sub_1B0F74EA4(v144, v49, v141, v50);
          v122 = v175;
          v174 = v175;
          v8 = v164;
          goto LABEL_113;
        }

        swift_release();
        sub_1B0F74EA4(v144, v49, v141, v50);
        v169 = 0;
        goto LABEL_102;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_retain();
    }
    v42 = v166;
    swift_endAccess();
    swift_release();
LABEL_102:
    v8 = v164;
    v101 = v161;
LABEL_103:
    v175 = v38;
    v176 = v101;
    v115 = (uint64_t *)(v42 + *(_QWORD *)(*(_QWORD *)v42 + 112));
    swift_beginAccess();
    v116 = *v115;
    v117 = *(_QWORD *)(v116 + 16);
    swift_bridgeObjectRetain();
    if (v117)
    {
      swift_bridgeObjectRetain();
      v118 = sub_1B0F56A3C(v38, v161);
      if ((v119 & 1) != 0)
      {
        v156 = *(_QWORD *)(*(_QWORD *)(v116 + 56) + 8 * v118);
        v120 = swift_bridgeObjectRelease();
        MEMORY[0x1E0C80A78](v120);
        v149 = swift_getKeyPath();
        MEMORY[0x1E0C80A78](v149);
        swift_getKeyPath();
        sub_1B10346F4();
        swift_release();
        result = swift_release();
        if ((v156 & 0x8000000000000000) != 0)
          goto LABEL_152;
        v8 = v164;
        if (v156 >= *(_QWORD *)(v173 + 16))
          goto LABEL_153;
        v174 = *(_QWORD *)(v173 + 8 * v156 + 32);
        swift_retain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_112;
      }
      swift_bridgeObjectRelease();
    }
    v121 = *(_QWORD *)(v166 + *(_QWORD *)(*(_QWORD *)v166 + 120));
    if (v121)
    {
      (*(void (**)(unint64_t *__return_ptr, uint64_t *))(*(_QWORD *)v121 + 248))(&v174, &v175);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v174 = 0xF000000000000007;
    }
LABEL_112:
    v122 = v174;
LABEL_113:
    if ((~v122 & 0xF000000000000007) == 0)
    {
      sub_1B0FA58DC();
      v123 = (void *)swift_allocError();
      v124 = v161;
      *(_QWORD *)v125 = v38;
      *(_QWORD *)(v125 + 8) = v161;
      *(_QWORD *)(v125 + 16) = &type metadata for DecodableState;
      *(_BYTE *)(v125 + 32) = 0;
      swift_willThrow();

      v169 = 0;
      v126 = v159;
      goto LABEL_132;
    }
    swift_release();
    swift_bridgeObjectRelease();
    sub_1B0F74EA4(v38, v161, v159, 1);
    v178 = v122;
    v38 = v122;
    v51 = v172;
    goto LABEL_57;
  }
  v92 = *(_QWORD *)(v166 + qword_1EEEE0768);
  if (!v92)
  {
    sub_1B0F5A84C(v38, v161, v159, 1);
    sub_1B0F5A880(v159);
    goto LABEL_126;
  }
  v93 = v166 + qword_1EEEE0760;
  swift_beginAccess();
  v147 = *(_QWORD *)v93;
  v153 = *(_QWORD *)(*(_QWORD *)v93 + 16);
  sub_1B0F5A84C(v38, v161, v159, 1);
  sub_1B0F5A880(v159);
  swift_retain();
  if (!v153)
  {
LABEL_125:
    swift_endAccess();
    swift_release();
    v8 = v164;
LABEL_126:
    v99 = v161;
LABEL_127:
    swift_bridgeObjectRetain();
    sub_1B0FEBA70(v38, v99, &v174);
    swift_bridgeObjectRelease();
    v129 = v174;
    goto LABEL_128;
  }
  v154 = v92;
  swift_bridgeObjectRetain();
  v94 = sub_1B0F56A3C(v38, v161);
  if ((v95 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_125;
  }
  v96 = *(_QWORD *)(v147 + 56) + 32 * v94;
  v97 = *(_QWORD *)v96;
  v142 = *(_QWORD *)v96;
  v98 = *(_QWORD *)(v96 + 16);
  v139 = *(_QWORD *)(v96 + 8);
  v148 = *(_BYTE *)(v96 + 24);
  swift_endAccess();
  sub_1B0F5A84C(v97, v139, v98, v148);
  swift_bridgeObjectRelease();
  sub_1B0FD6EFC(v154, v142, v139, v98, v148, &v175);
  if (v169)
  {

    swift_release();
    sub_1B0F74EA4(v142, v139, v98, v148);
    v169 = 0;
    v8 = v164;
    v99 = v161;
    goto LABEL_127;
  }
  v169 = 0;
  swift_release();
  sub_1B0F74EA4(v142, v139, v98, v148);
  v129 = v175;
  v8 = v164;
LABEL_128:
  if ((~v129 & 0xF000000000000007) == 0)
  {
    sub_1B0FA58DC();
    v171 = (void *)swift_allocError();
    v124 = v161;
    *(_QWORD *)v130 = v38;
    *(_QWORD *)(v130 + 8) = v161;
    *(_QWORD *)(v130 + 16) = &type metadata for DecodableState;
    *(_BYTE *)(v130 + 32) = 0;
    swift_willThrow();
    v126 = v159;
    sub_1B0F571D8(v159);
    sub_1B0F571D8(v159);

    v169 = 0;
    goto LABEL_132;
  }
  v124 = v161;
  v131 = v129;
  swift_bridgeObjectRelease();
  v157 = v131;
  v132 = v131;
  v126 = v159;
  sub_1B0FD8B94(v132, v166, v159, &v177);
  if (!v169)
  {
    v169 = 0;
    sub_1B0F571D8(v159);
    sub_1B0FC9D10(v157);
    sub_1B0F571D8(v159);
    swift_release();
    sub_1B0F74EA4(v38, v161, v159, 1);
    v38 = v177;
    goto LABEL_67;
  }
  sub_1B0F571D8(v159);
  sub_1B0FC9D10(v157);
  sub_1B0F571D8(v159);

  v169 = 0;
  v8 = v164;
LABEL_132:
  swift_release();
  sub_1B0F74EA4(v38, v124, v126, 1);
  v51 = v172;
LABEL_47:
  v175 = v10;
  v176 = v9;
  v66 = (uint64_t *)(v8 + *(_QWORD *)(*(_QWORD *)v8 + 112));
  swift_beginAccess();
  v67 = *v66;
  v68 = *(_QWORD *)(v67 + 16);
  swift_bridgeObjectRetain();
  if (!v68)
    goto LABEL_53;
  swift_bridgeObjectRetain();
  v69 = sub_1B0F56A3C(v10, v9);
  if ((v70 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_53:
    v74 = *(_QWORD *)(v8 + *(_QWORD *)(*(_QWORD *)v8 + 120));
    if (v74)
    {
      (*(void (**)(unint64_t *__return_ptr, uint64_t *))(*(_QWORD *)v74 + 248))(&v178, &v175);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v178 = 0xF000000000000007;
    }
    goto LABEL_56;
  }
  v71 = *(_QWORD *)(*(_QWORD *)(v67 + 56) + 8 * v69);
  v72 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v72);
  v73 = swift_getKeyPath();
  MEMORY[0x1E0C80A78](v73);
  swift_getKeyPath();
  v8 = v164;
  sub_1B10346F4();
  swift_release();
  result = swift_release();
  if ((v71 & 0x8000000000000000) != 0)
    goto LABEL_148;
  if (v71 >= *(_QWORD *)(v177 + 16))
    goto LABEL_149;
  v178 = *(_QWORD *)(v177 + 8 * v71 + 32);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v51 = v172;
LABEL_56:
  v38 = v178;
LABEL_57:
  if ((~v38 & 0xF000000000000007) == 0)
  {
    sub_1B0FA58DC();
    swift_allocError();
    *(_QWORD *)v137 = v10;
    *(_QWORD *)(v137 + 8) = v9;
    *(_QWORD *)(v137 + 16) = MEMORY[0x1E0DEA968];
    *(_BYTE *)(v137 + 32) = 0;
    swift_willThrow();
    sub_1B0F571D8(v51);
    sub_1B0F571D8(v51);
    v134 = v10;
    v135 = v9;
    v136 = v51;
    goto LABEL_141;
  }
  v4 = v10;
  swift_bridgeObjectRelease();
  v75 = v8;
  v76 = sub_1B0FD906C(v38, v8, v51);
  if (!v169)
  {
    v78 = v76;
    v79 = v77;
    sub_1B0F571D8(v51);
    sub_1B0FC9D10(v38);
    sub_1B0F571D8(v51);
    sub_1B0F56B08(v4, v9, v51, 1);
    v9 = v79;
    v8 = v75;
    v10 = v78;
    v4 = v168;
    goto LABEL_60;
  }
  sub_1B0F571D8(v51);
  sub_1B0FC9D10(v38);
  sub_1B0F571D8(v51);
  sub_1B0F56B08(v4, v9, v51, 1);
LABEL_144:
  swift_release();
  return v4;
}

unint64_t sub_1B0FE0844()
{
  unint64_t result;

  result = qword_1EEEE0500;
  if (!qword_1EEEE0500)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10435F8, &type metadata for InlineInterpolationString.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0500);
  }
  return result;
}

uint64_t sub_1B0FE0888(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24) >> 6;
}

uint64_t sub_1B0FE0894(uint64_t result)
{
  *(_BYTE *)(result + 24) &= 0x3Fu;
  return result;
}

uint64_t sub_1B0FE08A4(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = *(_BYTE *)(result + 24) & 1 | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for StringResolvable()
{
  return &type metadata for StringResolvable;
}

uint64_t destroy for InlineInterpolationString(uint64_t a1)
{
  return sub_1B0F56B08(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for InlineInterpolationString(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1B0F56BC8(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for InlineInterpolationString(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1B0F56BC8(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  sub_1B0F56B08(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for InlineInterpolationString(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  sub_1B0F56B08(v5, v7, v6, v8);
  return a1;
}

ValueMetadata *type metadata accessor for InlineInterpolationString()
{
  return &type metadata for InlineInterpolationString;
}

uint64_t storeEnumTagSinglePayload for InlineInterpolationString.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B0FE0A40 + 4 * byte_1B1043470[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B0FE0A60 + 4 * byte_1B1043475[v4]))();
}

_BYTE *sub_1B0FE0A40(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B0FE0A60(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B0FE0A68(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B0FE0A70(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B0FE0A78(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B0FE0A80(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for InlineInterpolationString.CodingKeys()
{
  return &type metadata for InlineInterpolationString.CodingKeys;
}

unint64_t sub_1B0FE0AA0()
{
  unint64_t result;

  result = qword_1EEEE0508;
  if (!qword_1EEEE0508)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10435A8, &type metadata for InlineInterpolationString.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0508);
  }
  return result;
}

unint64_t sub_1B0FE0AE8()
{
  unint64_t result;

  result = qword_1EEEE0510;
  if (!qword_1EEEE0510)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1043518, &type metadata for InlineInterpolationString.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0510);
  }
  return result;
}

unint64_t sub_1B0FE0B30()
{
  unint64_t result;

  result = qword_1EEEE0518;
  if (!qword_1EEEE0518)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1043540, &type metadata for InlineInterpolationString.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0518);
  }
  return result;
}

uint64_t sub_1B0FE0B74(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1B1036050();
  __break(1u);
  return result;
}

char *sub_1B0FE0C64(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_1B1036050();
  __break(1u);
  return result;
}

uint64_t sub_1B0FE0D48(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 40 * a1 + 32;
    v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_1B1036050();
  __break(1u);
  return result;
}

uint64_t sub_1B0FE0E50(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1B1036050();
  __break(1u);
  return result;
}

uint64_t sub_1B0FE0F40(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1B1036050();
  __break(1u);
  return result;
}

uint64_t sub_1B0FE1034(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1B1036050();
  __break(1u);
  return result;
}

uint64_t sub_1B0FE1124()
{
  return 0x6C6F707265746E69;
}

uint64_t sub_1B0FE1144(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6C6F707265746E69 && a2 == 0xEC00000064657461)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1B1036128();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B0FE11D8()
{
  return objectdestroyTm_3((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1B0F56ADC);
}

uint64_t sub_1B0FE11E4()
{
  return objectdestroyTm_3((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1B0F6C7D4);
}

uint64_t sub_1B0FE11F0()
{
  return objectdestroyTm_3((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1B0F56ADC);
}

uint64_t sub_1B0FE11FC()
{
  return objectdestroyTm_3((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1B0F6C7D4);
}

uint64_t sub_1B0FE1208()
{
  return objectdestroyTm_3((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1B0F56ADC);
}

uint64_t sub_1B0FE1214()
{
  return objectdestroyTm_3((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1B0F6C7D4);
}

uint64_t sub_1B0FE1228()
{
  return 24;
}

__n128 sub_1B0FE1234(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_1B0FE1248()
{
  return objectdestroyTm_3((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1B0F56ADC);
}

uint64_t sub_1B0FE1254()
{
  return objectdestroyTm_3((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1B0F6C7D4);
}

uint64_t sub_1B0FE1260()
{
  return objectdestroyTm_3((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1B0F56ADC);
}

uint64_t sub_1B0FE126C()
{
  return objectdestroyTm_3((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1B0F6C7D4);
}

uint64_t objectdestroyTm_3(void (*a1)(_QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
  if ((~*(_QWORD *)(v1 + 48) & 0xF000000000000007) != 0)
    swift_release();
  return swift_deallocObject();
}

uint64_t destroy for OnDeleteModifier()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s6LiftUI16OnDeleteModifierVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for OnDeleteModifier(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for OnDeleteModifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for OnDeleteModifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OnDeleteModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for OnDeleteModifier()
{
  return &type metadata for OnDeleteModifier;
}

uint64_t destroy for OnMoveModifier()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for OnMoveModifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for OnMoveModifier(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for OnMoveModifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for OnMoveModifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OnMoveModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for OnMoveModifier()
{
  return &type metadata for OnMoveModifier;
}

uint64_t sub_1B0FE1664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  _QWORD v27[2];
  _QWORD v28[2];
  __int128 v29[2];
  uint64_t v30;
  uint64_t v31[3];
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  _BYTE v38[16];
  uint64_t v39;

  sub_1B0F5FD84(a1, (uint64_t)v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE5C8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE05C8);
  if (swift_dynamicCast())
  {
    sub_1B0F5A0E4(v29, (uint64_t)v34);
    sub_1B0FE28C4(v4, (uint64_t)v38);
    sub_1B0FE28C4((uint64_t)v38, (uint64_t)&v39);
    v9 = v39;
    if (v39)
    {
      v10 = v36;
      v24 = v36;
      __swift_project_boxed_opaque_existential_1(v34, v35);
      v11 = swift_allocObject();
      *(_QWORD *)(v11 + 16) = a2;
      v12 = *(_OWORD *)(v4 + 16);
      *(_OWORD *)(v11 + 24) = *(_OWORD *)v4;
      *(_OWORD *)(v11 + 40) = v12;
      *(_QWORD *)(v11 + 56) = *(_QWORD *)(v4 + 32);
      *(_QWORD *)(v11 + 64) = v9;
      *(_QWORD *)(v11 + 72) = a3;
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEE05E0);
      v25 = a3;
      v13 = sub_1B103497C();
      v32 = v13;
      v14 = sub_1B0FE29C4(&qword_1EEEE05E8, &qword_1EEEE05E0);
      v27[0] = v10;
      v27[1] = v14;
      v33 = MEMORY[0x1B5E15188](MEMORY[0x1E0CD9C10], v13, v27);
      __swift_allocate_boxed_opaque_existential_1(v31);
      v29[0] = *(_OWORD *)(v4 + 8);
      v37 = *(_OWORD *)(v4 + 24);
      sub_1B0F6CBB8((uint64_t)v38);
      sub_1B0F6CBB8((uint64_t)v38);
      swift_retain();
      sub_1B0F6CB90((uint64_t)v29);
      sub_1B0F6CB90((uint64_t)&v37);
      swift_retain();
      sub_1B1034C28();
      swift_release();
      v15 = sub_1B0F5B4C8(v9);
      v26[0] = *(_QWORD *)(v24 + 8);
      v26[1] = v14;
      v16 = MEMORY[0x1B5E15188](MEMORY[0x1E0CD9C20], v13, v26);
      sub_1B0F69B0C(v15, a2, v25, v13, v16, a4);
      swift_bridgeObjectRelease();
    }
    else
    {
      v18 = v36;
      __swift_project_boxed_opaque_existential_1(v34, v35);
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEE05E0);
      v19 = sub_1B103497C();
      v32 = v19;
      v28[0] = v18;
      v28[1] = sub_1B0FE29C4(&qword_1EEEE05E8, &qword_1EEEE05E0);
      v33 = MEMORY[0x1B5E15188](MEMORY[0x1E0CD9C10], v19, v28);
      __swift_allocate_boxed_opaque_existential_1(v31);
      sub_1B1034C28();
      v20 = v32;
      v21 = v33;
      v22 = __swift_project_boxed_opaque_existential_1(v31, v32);
      a4[3] = v20;
      a4[4] = *(_QWORD *)(v21 + 8);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a4);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(boxed_opaque_existential_1, v22, v20);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  }
  else
  {
    v30 = 0;
    memset(v29, 0, sizeof(v29));
    sub_1B0FE2884((uint64_t)v29);
    return sub_1B0F5FD84(a1, (uint64_t)a4);
  }
}

uint64_t sub_1B0FE19A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t inited;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  void (*v24)(char *, _QWORD);
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t *v39;
  uint64_t v40;
  _QWORD *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  char v51[32];
  uint64_t v52;

  v50 = a3;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE910);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1B1034628();
  v46 = *(_QWORD *)(v13 - 8);
  v47 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF048);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B10436A0;
  v48 = (_QWORD *)inited;
  v49 = a4;
  v17 = *(_QWORD *)(a4 + 8);
  v18 = *(_QWORD *)(a4 + 16);
  *(_QWORD *)(inited + 32) = v17;
  *(_QWORD *)(inited + 40) = v18;
  sub_1B1034634();
  sub_1B0FE2968();
  swift_bridgeObjectRetain();
  v19 = sub_1B1035DC8();
  v20 = MEMORY[0x1E0DEE9D8];
  if (!v19)
  {
LABEL_8:
    v29 = v48;
    sub_1B0FC98AC(v20, v48 + 6);
    swift_bridgeObjectRelease();
    v30 = *(_QWORD *)(v49 + 32);
    v29[7] = *(_QWORD *)(v49 + 24);
    v29[8] = v30;
    v31 = swift_allocObject();
    *(_QWORD *)(v31 + 16) = a2;
    v29[9] = v31 | 0x2000000000000000;
    swift_bridgeObjectRetain();
    v32 = sub_1B0F554CC((uint64_t)v29);
    v33 = MEMORY[0x1E0DEE9D8];
    v34 = sub_1B0F553A4(MEMORY[0x1E0DEE9D8]);
    type metadata accessor for RemoteStateStore(0);
    v35 = swift_allocObject();
    v36 = qword_1EEEE0760;
    v37 = v50;
    swift_retain();
    swift_retain();
    *(_QWORD *)(v35 + v36) = sub_1B0F553A4(v33);
    *(_QWORD *)(v35 + qword_1EEEE0768) = v37;
    swift_retain_n();
    swift_release();
    v38 = sub_1B0F55C84(v37);
    sub_1B0F56FC4(v32, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B0F56C60);
    swift_bridgeObjectRelease();
    swift_release();
    v39 = (unint64_t *)(v38 + qword_1EEEE0760);
    swift_beginAccess();
    *v39 = v34;
    swift_bridgeObjectRelease();
    v40 = sub_1B1035D80();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v12, 1, 1, v40);
    v41 = (_QWORD *)swift_allocObject();
    v41[2] = 0;
    v41[3] = 0;
    v41[4] = a5;
    v41[5] = v38;
    v41[6] = a6;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_1B0F706F4((uint64_t)v12, (uint64_t)&unk_1EEEDE930, (uint64_t)v41);
    swift_release();
    return swift_release();
  }
  v21 = v19;
  v45 = a2;
  v52 = MEMORY[0x1E0DEE9D8];
  sub_1B0FDD9B4(0, v19 & ~(v19 >> 63), 0);
  v22 = v52;
  result = sub_1B1035DBC();
  if ((v21 & 0x8000000000000000) == 0)
  {
    v42 = v12;
    v43 = a5;
    v44 = a6;
    do
    {
      v24 = (void (*)(char *, _QWORD))sub_1B1035DE0();
      v26 = *v25;
      v24(v51, 0);
      v52 = v22;
      v28 = *(_QWORD *)(v22 + 16);
      v27 = *(_QWORD *)(v22 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_1B0FDD9B4(v27 > 1, v28 + 1, 1);
        v22 = v52;
      }
      *(_QWORD *)(v22 + 16) = v28 + 1;
      *(_QWORD *)(v22 + 8 * v28 + 32) = v26;
      sub_1B1035DD4();
      --v21;
    }
    while (v21);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v15, v47);
    v20 = v52;
    a6 = v44;
    a5 = v43;
    v12 = v42;
    a2 = v45;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B0FE1D9C(char a1)
{
  return *(_QWORD *)&aActions_7[8 * a1];
}

uint64_t sub_1B0FE1DBC(char *a1, char *a2)
{
  return sub_1B100E3F8(*a1, *a2);
}

uint64_t sub_1B0FE1DC8()
{
  return sub_1B1010D0C();
}

uint64_t sub_1B0FE1DD0()
{
  return sub_1B1012DE4();
}

uint64_t sub_1B0FE1DD8()
{
  return sub_1B10141B8();
}

uint64_t sub_1B0FE1DE0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B0FE34BC();
  *a1 = result;
  return result;
}

uint64_t sub_1B0FE1E0C@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B0FE1D9C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B0FE1E34()
{
  char *v0;

  return sub_1B0FE1D9C(*v0);
}

uint64_t sub_1B0FE1E3C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B0FE34BC();
  *a1 = result;
  return result;
}

uint64_t sub_1B0FE1E60()
{
  sub_1B0FE3130();
  return sub_1B10362B4();
}

uint64_t sub_1B0FE1E88()
{
  sub_1B0FE3130();
  return sub_1B10362C0();
}

uint64_t sub_1B0FE1EB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1B0FE1664(a1, a2, a3, a4);
}

double sub_1B0FE1EF0@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1B0FE2A5C(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1B0FE1F34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v29;
  _QWORD v30[2];
  _QWORD v31[2];
  _QWORD v32[2];
  __int128 v33[2];
  uint64_t v34;
  uint64_t v35[3];
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;

  sub_1B0F5FD84(a1, (uint64_t)v35);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE5C8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE05C8);
  if (swift_dynamicCast())
  {
    v41 = a7;
    sub_1B0F5A0E4(v33, (uint64_t)v38);
    if (a4)
    {
      v14 = a3;
      v29 = a3;
      v15 = v40;
      __swift_project_boxed_opaque_existential_1(v38, v39);
      v16 = (_QWORD *)swift_allocObject();
      v16[2] = a2;
      v16[3] = a4;
      v16[4] = a5;
      v16[5] = a6;
      v16[6] = a4;
      v16[7] = v14;
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEE05F8);
      v17 = sub_1B103497C();
      v36 = v17;
      v18 = sub_1B0FE29C4(&qword_1EEEE0600, &qword_1EEEE05F8);
      v31[0] = v15;
      v31[1] = v18;
      v37 = MEMORY[0x1B5E15188](MEMORY[0x1E0CD9C10], v17, v31);
      __swift_allocate_boxed_opaque_existential_1(v35);
      swift_bridgeObjectRetain_n();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1B1034C34();
      swift_release();
      v19 = sub_1B0F5B4C8(a4);
      v30[0] = *(_QWORD *)(v15 + 8);
      v30[1] = v18;
      v20 = MEMORY[0x1B5E15188](MEMORY[0x1E0CD9C20], v17, v30);
      sub_1B0F69B0C(v19, a2, v29, v17, v20, v41);
      swift_bridgeObjectRelease();
    }
    else
    {
      v22 = v40;
      __swift_project_boxed_opaque_existential_1(v38, v39);
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEE05F8);
      v23 = sub_1B103497C();
      v36 = v23;
      v32[0] = v22;
      v32[1] = sub_1B0FE29C4(&qword_1EEEE0600, &qword_1EEEE05F8);
      v37 = MEMORY[0x1B5E15188](MEMORY[0x1E0CD9C10], v23, v32);
      __swift_allocate_boxed_opaque_existential_1(v35);
      sub_1B1034C34();
      v24 = v36;
      v25 = v37;
      v26 = __swift_project_boxed_opaque_existential_1(v35, v36);
      v27 = v41;
      v41[3] = v24;
      v27[4] = *(_QWORD *)(v25 + 8);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v27);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(boxed_opaque_existential_1, v26, v24);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  }
  else
  {
    v34 = 0;
    memset(v33, 0, sizeof(v33));
    sub_1B0FE2884((uint64_t)v33);
    return sub_1B0F5FD84(a1, (uint64_t)a7);
  }
}

uint64_t sub_1B0FE2238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t inited;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  void (*v24)(char *, _QWORD);
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char v49[32];
  uint64_t v50;

  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE910);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1B1034628();
  v44 = *(_QWORD *)(v15 - 8);
  v45 = v15;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF048);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B1036F70;
  *(_QWORD *)(inited + 32) = a4;
  *(_QWORD *)(inited + 40) = a5;
  v46 = inited;
  sub_1B1034634();
  sub_1B0FE2968();
  swift_bridgeObjectRetain();
  v19 = sub_1B1035DC8();
  v20 = MEMORY[0x1E0DEE9D8];
  v47 = a2;
  v48 = v14;
  if (!v19)
  {
LABEL_8:
    v29 = v46;
    sub_1B0FC98AC(v20, (unint64_t *)(v46 + 48));
    swift_bridgeObjectRelease();
    v30 = sub_1B0F554CC(v29);
    v31 = MEMORY[0x1E0DEE9D8];
    v32 = sub_1B0F553A4(MEMORY[0x1E0DEE9D8]);
    type metadata accessor for RemoteStateStore(0);
    v33 = swift_allocObject();
    v34 = qword_1EEEE0760;
    v35 = v47;
    swift_retain();
    swift_retain();
    *(_QWORD *)(v33 + v34) = sub_1B0F553A4(v31);
    *(_QWORD *)(v33 + qword_1EEEE0768) = v35;
    swift_retain_n();
    swift_release();
    v36 = sub_1B0F55C84(v35);
    sub_1B0F56FC4(v30, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B0F56C60);
    swift_bridgeObjectRelease();
    swift_release();
    v37 = (unint64_t *)(v36 + qword_1EEEE0760);
    swift_beginAccess();
    *v37 = v32;
    swift_bridgeObjectRelease();
    v38 = sub_1B1035D80();
    v39 = (uint64_t)v48;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v48, 1, 1, v38);
    v40 = (_QWORD *)swift_allocObject();
    v40[2] = 0;
    v40[3] = 0;
    v40[4] = a6;
    v40[5] = v36;
    v40[6] = a7;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_1B0F706F4(v39, (uint64_t)&unk_1EEEE0608, (uint64_t)v40);
    swift_release();
    return swift_release();
  }
  v21 = v19;
  v43 = a6;
  v50 = MEMORY[0x1E0DEE9D8];
  sub_1B0FDD9B4(0, v19 & ~(v19 >> 63), 0);
  v22 = v50;
  result = sub_1B1035DBC();
  if ((v21 & 0x8000000000000000) == 0)
  {
    v42 = a7;
    do
    {
      v24 = (void (*)(char *, _QWORD))sub_1B1035DE0();
      v26 = *v25;
      v24(v49, 0);
      v50 = v22;
      v28 = *(_QWORD *)(v22 + 16);
      v27 = *(_QWORD *)(v22 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_1B0FDD9B4(v27 > 1, v28 + 1, 1);
        v22 = v50;
      }
      *(_QWORD *)(v22 + 16) = v28 + 1;
      *(_QWORD *)(v22 + 8 * v28 + 32) = v26;
      sub_1B1035DD4();
      --v21;
    }
    while (v21);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v17, v45);
    v20 = v50;
    a7 = v42;
    a6 = v43;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B0FE25CC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7465537865646E69;
  else
    return 0x736E6F69746361;
}

uint64_t sub_1B0FE260C(char *a1, char *a2)
{
  return sub_1B100DB8C(*a1, *a2);
}

uint64_t sub_1B0FE2618()
{
  return sub_1B1010D74();
}

uint64_t sub_1B0FE2620()
{
  return sub_1B10129AC();
}

uint64_t sub_1B0FE2628()
{
  return sub_1B10146AC();
}

uint64_t sub_1B0FE2630@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1B103605C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1B0FE268C@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B0FE25CC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B0FE26B4()
{
  char *v0;

  return sub_1B0FE25CC(*v0);
}

uint64_t sub_1B0FE26BC@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1B103605C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1B0FE271C()
{
  sub_1B0FE30EC();
  return sub_1B10362B4();
}

uint64_t sub_1B0FE2744()
{
  sub_1B0FE30EC();
  return sub_1B10362C0();
}

uint64_t sub_1B0FE276C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t *v4;

  return sub_1B0FE1F34(a1, a2, a3, *v4, v4[1], v4[2], a4);
}

uint64_t sub_1B0FE2788@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_1B0FE2E04(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

unint64_t sub_1B0FE27B4(uint64_t a1)
{
  unint64_t result;

  result = sub_1B0FE27D8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B0FE27D8()
{
  unint64_t result;

  result = qword_1EEEE05B8;
  if (!qword_1EEEE05B8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1043718, &type metadata for OnDeleteModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE05B8);
  }
  return result;
}

unint64_t sub_1B0FE281C(uint64_t a1)
{
  unint64_t result;

  result = sub_1B0FE2840();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B0FE2840()
{
  unint64_t result;

  result = qword_1EEEE05C0;
  if (!qword_1EEEE05C0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10436F0, &type metadata for OnMoveModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE05C0);
  }
  return result;
}

uint64_t sub_1B0FE2884(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE05D0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B0FE28C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE05D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B0FE290C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B0FE2958(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1B0FE19A4(a1, a2, v2[2], (uint64_t)(v2 + 3), v2[8], v2[9]);
}

unint64_t sub_1B0FE2968()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEEE05F0;
  if (!qword_1EEEE05F0)
  {
    v1 = sub_1B1034634();
    result = MEMORY[0x1B5E15188](MEMORY[0x1E0CB13E0], v1);
    atomic_store(result, (unint64_t *)&qword_1EEEE05F0);
  }
  return result;
}

uint64_t sub_1B0FE29B0()
{
  return swift_deallocObject();
}

uint64_t sub_1B0FE29C4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1B5E15188](MEMORY[0x1E0CDBEF0], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B0FE2A04()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B0FE2A48(uint64_t a1)
{
  uint64_t *v1;

  return sub_1B0FE2238(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t sub_1B0FE2A5C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD v28[2];
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE v32[40];
  __int128 v33[2];
  uint64_t v34;
  uint64_t v35;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0620);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B0FE3130();
  sub_1B1036278();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF610);
  LOBYTE(v33[0]) = 0;
  sub_1B0F972CC();
  sub_1B10360A4();
  v31 = v6;
  v29 = a2;
  v10 = v35;
  if (v35)
  {
    v30 = v5;
    v11 = *(_QWORD *)(v35 + 16);
    if (v11)
    {
      v34 = MEMORY[0x1E0DEE9D8];
      sub_1B0FDD904(0, v11, 0);
      v28[1] = v10;
      v12 = v10 + 32;
      v13 = v34;
      do
      {
        sub_1B0F97374(v12, (uint64_t)v32);
        sub_1B0F5FD84((uint64_t)v32, (uint64_t)v33);
        sub_1B0F973B0((uint64_t)v32);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B0FDD904(0, *(_QWORD *)(v13 + 16) + 1, 1);
          v13 = v34;
        }
        v15 = *(_QWORD *)(v13 + 16);
        v14 = *(_QWORD *)(v13 + 24);
        if (v15 >= v14 >> 1)
        {
          sub_1B0FDD904(v14 > 1, v15 + 1, 1);
          v13 = v34;
        }
        *(_QWORD *)(v13 + 16) = v15 + 1;
        sub_1B0F5A0E4(v33, v13 + 40 * v15 + 32);
        v12 += 40;
        --v11;
      }
      while (v11);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v13 = MEMORY[0x1E0DEE9D8];
    }
    v5 = v30;
  }
  else
  {
    v13 = 0;
  }
  LOBYTE(v33[0]) = 1;
  swift_bridgeObjectRetain();
  v16 = v5;
  v18 = sub_1B103608C();
  v19 = v17;
  if (v17)
    v20 = v17;
  else
    v20 = 0xE800000000000000;
  LOBYTE(v33[0]) = 2;
  v30 = v20;
  swift_bridgeObjectRetain();
  v21 = sub_1B103608C();
  if (v19)
    v23 = v18;
  else
    v23 = 0x7465537865646E69;
  if (v22)
    v24 = v21;
  else
    v24 = 0x74657366666FLL;
  if (v22)
    v25 = v22;
  else
    v25 = 0xE600000000000000;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v16);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  v26 = v30;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v27 = v29;
  *v29 = v13;
  v27[1] = v23;
  v27[2] = v26;
  v27[3] = v24;
  v27[4] = v25;
  return result;
}

uint64_t sub_1B0FE2E04(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[40];
  __int128 v17[2];
  uint64_t v18;
  uint64_t v19;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0610);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_1B0FE30EC();
  sub_1B1036278();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF610);
    LOBYTE(v17[0]) = 0;
    sub_1B0F972CC();
    sub_1B10360A4();
    v7 = v19;
    if (v19)
    {
      v9 = *(_QWORD *)(v19 + 16);
      if (v9)
      {
        v14 = v4;
        v15 = v3;
        v18 = MEMORY[0x1E0DEE9D8];
        sub_1B0FDD904(0, v9, 0);
        v13 = v7;
        v10 = v7 + 32;
        v7 = v18;
        do
        {
          sub_1B0F97374(v10, (uint64_t)v16);
          sub_1B0F5FD84((uint64_t)v16, (uint64_t)v17);
          sub_1B0F973B0((uint64_t)v16);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B0FDD904(0, *(_QWORD *)(v7 + 16) + 1, 1);
            v7 = v18;
          }
          v12 = *(_QWORD *)(v7 + 16);
          v11 = *(_QWORD *)(v7 + 24);
          if (v12 >= v11 >> 1)
          {
            sub_1B0FDD904(v11 > 1, v12 + 1, 1);
            v7 = v18;
          }
          *(_QWORD *)(v7 + 16) = v12 + 1;
          sub_1B0F5A0E4(v17, v7 + 40 * v12 + 32);
          v10 += 40;
          --v9;
        }
        while (v9);
        swift_bridgeObjectRelease();
        v4 = v14;
        v3 = v15;
      }
      else
      {
        swift_bridgeObjectRelease();
        v7 = MEMORY[0x1E0DEE9D8];
      }
    }
    LOBYTE(v17[0]) = 1;
    swift_bridgeObjectRetain();
    sub_1B103608C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_1B0FE30EC()
{
  unint64_t result;

  result = qword_1EEEE0618;
  if (!qword_1EEEE0618)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10439B4, &type metadata for OnDeleteModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0618);
  }
  return result;
}

unint64_t sub_1B0FE3130()
{
  unint64_t result;

  result = qword_1EEEE0628;
  if (!qword_1EEEE0628)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1043964, &type metadata for OnMoveModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0628);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for OnMoveModifier.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B0FE31C0 + 4 * byte_1B10436B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B0FE31F4 + 4 * byte_1B10436B0[v4]))();
}

uint64_t sub_1B0FE31F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B0FE31FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B0FE3204);
  return result;
}

uint64_t sub_1B0FE3210(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B0FE3218);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B0FE321C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B0FE3224(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OnMoveModifier.CodingKeys()
{
  return &type metadata for OnMoveModifier.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for OnDeleteModifier.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B0FE328C + 4 * byte_1B10436BF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B0FE32C0 + 4 * byte_1B10436BA[v4]))();
}

uint64_t sub_1B0FE32C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B0FE32C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B0FE32D0);
  return result;
}

uint64_t sub_1B0FE32DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B0FE32E4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B0FE32E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B0FE32F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OnDeleteModifier.CodingKeys()
{
  return &type metadata for OnDeleteModifier.CodingKeys;
}

unint64_t sub_1B0FE3310()
{
  unint64_t result;

  result = qword_1EEEE0630;
  if (!qword_1EEEE0630)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104384C, &type metadata for OnDeleteModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0630);
  }
  return result;
}

unint64_t sub_1B0FE3358()
{
  unint64_t result;

  result = qword_1EEEE0638;
  if (!qword_1EEEE0638)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104393C, &type metadata for OnMoveModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0638);
  }
  return result;
}

unint64_t sub_1B0FE33A0()
{
  unint64_t result;

  result = qword_1EEEE0640;
  if (!qword_1EEEE0640)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1043874, &type metadata for OnMoveModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0640);
  }
  return result;
}

unint64_t sub_1B0FE33E8()
{
  unint64_t result;

  result = qword_1EEEE0648;
  if (!qword_1EEEE0648)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104389C, &type metadata for OnMoveModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0648);
  }
  return result;
}

unint64_t sub_1B0FE3430()
{
  unint64_t result;

  result = qword_1EEEE0650;
  if (!qword_1EEEE0650)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1043784, &type metadata for OnDeleteModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0650);
  }
  return result;
}

unint64_t sub_1B0FE3478()
{
  unint64_t result;

  result = qword_1EEEE0658;
  if (!qword_1EEEE0658)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10437AC, &type metadata for OnDeleteModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0658);
  }
  return result;
}

uint64_t sub_1B0FE34BC()
{
  unint64_t v0;

  v0 = sub_1B103605C();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1B0FE3504()
{
  uint64_t ObjCClassFromMetadata;
  id v1;
  void *v2;
  id v3;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  type metadata accessor for BasicLiftUIDataSource();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v1 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v2 = (void *)sub_1B1035B88();
  v3 = objc_msgSend(v1, sel_objectForInfoDictionaryKey_, v2);

  if (v3)
  {
    sub_1B1035E94();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_1B0FE42BC((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_1B103449C();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1B0F5A3AC((uint64_t)v6, &qword_1EEEDE158);
  }
  sub_1B103449C();

  return swift_bridgeObjectRelease();
}

uint64_t BasicLiftUIDataSource.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t sub_1B0FE36B4(uint64_t a1)
{
  return LiftUIDataSource.request(for:)(a1);
}

uint64_t LiftUIDataSource.request(for:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_1B10345E0();
  MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_1B1034484();
}

uint64_t BasicLiftUIDataSource.data(for:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EEEE0678 + dword_1EEEE0678);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1B0FD4F28;
  return v5(a1);
}

uint64_t BasicLiftUIDataSource.request(for:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_1B10345E0();
  MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_1B1034484();
}

uint64_t BasicLiftUIDataSource.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t BasicLiftUIDataSource.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t BasicLiftUIDataSource.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1B0FE3870(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_1B10345E0();
  MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_1B1034484();
}

uint64_t sub_1B0FE3904(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EEEE0678 + dword_1EEEE0678);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1B0FE4324;
  return v5(a1);
}

uint64_t static RemoteLoader.requestWithLiftUIHeaders(request:reloadType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1B10344C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return sub_1B0FE3504();
}

uint64_t _s7SwiftUI4ViewP04LiftB0E16liftUIDataSourceyQrAD0dfG0_pF_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  swift_getKeyPath();
  type metadata accessor for AnyWeakDataSource();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v3 + 24) = a2;
  swift_unknownObjectWeakAssign();
  sub_1B1035378();
  swift_release();
  return swift_release();
}

uint64_t sub_1B0FE3A8C()
{
  uint64_t v1;

  sub_1B0F5A920();
  sub_1B1034B38();
  return v1;
}

uint64_t _s7SwiftUI4ViewP04LiftB0E14liftUIDelegateyQrAD0dF0_pF_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  swift_getKeyPath();
  type metadata accessor for AnyWeakDelegate();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v3 + 24) = a2;
  swift_unknownObjectWeakAssign();
  sub_1B1035378();
  swift_release();
  return swift_release();
}

uint64_t sub_1B0FE3B8C()
{
  uint64_t v1;

  sub_1B0F5A8DC();
  sub_1B1034B38();
  return v1;
}

uint64_t sub_1B0FE3BD4()
{
  uint64_t result;

  type metadata accessor for BasicLiftUIDataSource();
  result = swift_allocObject();
  *(_QWORD *)&xmmword_1EEEE0660 = result;
  *((_QWORD *)&xmmword_1EEEE0660 + 1) = &protocol witness table for BasicLiftUIDataSource;
  return result;
}

uint64_t sub_1B0FE3C08@<X0>(_OWORD *a1@<X8>)
{
  if (qword_1EEEDE0A8 != -1)
    swift_once();
  *a1 = xmmword_1EEEE0660;
  return swift_unknownObjectRetain();
}

void sub_1B0FE3C60(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t sub_1B0FE3C68(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDEA00);
  v1[3] = swift_task_alloc();
  v2 = sub_1B10345E0();
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 - 8);
  v1[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1B0FE3CEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 24);
  sub_1B1034490();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1B0F5A3AC(*(_QWORD *)(v0 + 24), &qword_1EEEDEA00);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 32))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
    if ((sub_1B10345B0() & 1) != 0)
    {
      v4 = sub_1B10345EC();
      v6 = v5;
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 32));
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v4, v6);
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 8))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 32));
  }
  *(_QWORD *)(v0 + 56) = objc_msgSend((id)objc_opt_self(), sel_sharedSession);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v7;
  *v7 = v0;
  v7[1] = sub_1B0FE3E88;
  return sub_1B1035E10();
}

uint64_t sub_1B0FE3E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  v5 = *v4;
  *(_QWORD *)(v5 + 72) = a1;
  *(_QWORD *)(v5 + 80) = a2;
  *(_QWORD *)(v5 + 88) = a3;
  *(_QWORD *)(v5 + 96) = v3;
  swift_task_dealloc();
  if (!v3)

  return swift_task_switch();
}

uint64_t sub_1B0FE3F00()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  objc_opt_self();
  v1 = swift_dynamicCastObjCClass();
  v2 = *(void **)(v0 + 88);
  if (!v1)
    goto LABEL_4;
  v3 = (void *)v1;
  v4 = v2;
  if ((char *)objc_msgSend(v3, sel_statusCode) - 200 <= (char *)0x63)
  {
    v2 = *(void **)(v0 + 88);

LABEL_4:
    v5 = *(_QWORD *)(v0 + 72);
    v6 = *(_QWORD *)(v0 + 80);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v5, v6);
  }
  v8 = *(_QWORD *)(v0 + 80);
  v9 = *(void **)(v0 + 88);
  v10 = *(_QWORD *)(v0 + 72);
  v11 = *(_QWORD *)(v0 + 16);
  type metadata accessor for RemoteLoaderError(0);
  sub_1B0FD4920();
  swift_allocError();
  v13 = v12;
  v14 = sub_1B10344C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v13, v11, v14);
  swift_storeEnumTagMultiPayload();
  swift_willThrow();

  sub_1B0F576D8(v10, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B0FE4074()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t dispatch thunk of LiftUIDataSource.request(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of LiftUIDataSource.data(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 16) + *(_QWORD *)(a3 + 16));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1B0FE414C;
  return v9(a1, a2, a3);
}

uint64_t sub_1B0FE414C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  v6 = *v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t type metadata accessor for BasicLiftUIDataSource()
{
  return objc_opt_self();
}

uint64_t method lookup function for BasicLiftUIDataSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BasicLiftUIDataSource.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_1B0FE41E0(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA30_EnvironmentKeyWritingModifierVy04LiftB00J12UIDataSource_pGGAaBHPxAaBHD1__AiA0cI0HPyHCHCTm(a1, &qword_1EEEE0690, &qword_1EEEE0698);
}

uint64_t sub_1B0FE41F4(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA30_EnvironmentKeyWritingModifierVy04LiftB00J12UIDataSource_pGGAaBHPxAaBHD1__AiA0cI0HPyHCHCTm(a1, &qword_1EEEE06A0, &qword_1EEEE06A8);
}

uint64_t get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA30_EnvironmentKeyWritingModifierVy04LiftB00J12UIDataSource_pGGAaBHPxAaBHD1__AiA0cI0HPyHCHCTm(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v5 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
  v6 = sub_1B103497C();
  v8[0] = v5;
  v8[1] = sub_1B0FE427C(a3, a2);
  return MEMORY[0x1B5E15188](MEMORY[0x1E0CD9C20], v6, v8);
}

uint64_t sub_1B0FE427C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1B5E15188](MEMORY[0x1E0CDCF80], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B0FE42BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE158);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for LiftUIDataSourceKey()
{
  return &type metadata for LiftUIDataSourceKey;
}

ValueMetadata *type metadata accessor for LiftUIDelegateKey()
{
  return &type metadata for LiftUIDelegateKey;
}

ValueMetadata *type metadata accessor for SymbolRenderingModeModifier()
{
  return &type metadata for SymbolRenderingModeModifier;
}

uint64_t sub_1B0FE4344@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B103605C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B0FE4394@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1B0FE4AF4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B0FE43BC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B103605C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B0FE4410()
{
  sub_1B0FE493C();
  return sub_1B10362B4();
}

uint64_t sub_1B0FE4438()
{
  sub_1B0FE493C();
  return sub_1B10362C0();
}

uint64_t sub_1B0FE4460@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  __int128 v12;
  uint64_t v13;
  char v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE06D0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B0FE493C();
  sub_1B1036278();
  if (!v2)
  {
    sub_1B0F56A98();
    sub_1B10360BC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v9 = v13;
    v10 = v14;
    *(_OWORD *)a2 = v12;
    *(_QWORD *)(a2 + 16) = v9;
    *(_BYTE *)(a2 + 24) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1B0FE4590(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  char *v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE06B8);
  MEMORY[0x1E0C80A78](v6);
  v7 = *(_QWORD *)v2;
  v8 = *(_QWORD *)(v2 + 8);
  v9 = *(_QWORD *)(v2 + 16);
  v10 = *(_BYTE *)(v2 + 24);
  sub_1B0F56B9C(*(_QWORD *)v2, v8, v9, v10);
  StringResolvable.resolved(with:)(a2);
  if (v3)

  sub_1B0F56ADC(v7, v8, v9, v10);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v11 = (char *)sub_1B0FE46D4 + 4 * byte_1B1043BE0[sub_1B0FE4868()];
  __asm { BR              X10 }
}

uint64_t sub_1B0FE46D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  unint64_t v6;

  sub_1B1034DFC();
  v3 = sub_1B1034E14();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v0, 0, 1, v3);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEE06C0);
  v4 = sub_1B103497C();
  v5 = *(uint64_t **)(v2 - 72);
  v5[3] = v4;
  v6 = sub_1B0FE48B0();
  *(_QWORD *)(v2 - 128) = v1;
  *(_QWORD *)(v2 - 120) = v6;
  v5[4] = MEMORY[0x1B5E15188](MEMORY[0x1E0CD9C20], v4, v2 - 128);
  __swift_allocate_boxed_opaque_existential_1(v5);
  sub_1B1035498();
  return sub_1B0FE48FC(v0);
}

void sub_1B0FE47D8(_QWORD *a1, uint64_t a2)
{
  sub_1B0FE4590(a1, a2);
}

uint64_t sub_1B0FE47EC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B0FE4460(a1, a2);
}

unint64_t sub_1B0FE4800(uint64_t a1)
{
  unint64_t result;

  result = sub_1B0FE4824();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B0FE4824()
{
  unint64_t result;

  result = qword_1EEEE06B0;
  if (!qword_1EEEE06B0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1043C1C, &type metadata for SymbolRenderingModeModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE06B0);
  }
  return result;
}

uint64_t sub_1B0FE4868()
{
  unint64_t v0;

  v0 = sub_1B103605C();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

unint64_t sub_1B0FE48B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEEE06C8;
  if (!qword_1EEEE06C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEE06C0);
    result = MEMORY[0x1B5E15188](MEMORY[0x1E0CDCF80], v1);
    atomic_store(result, (unint64_t *)&qword_1EEEE06C8);
  }
  return result;
}

uint64_t sub_1B0FE48FC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE06B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1B0FE493C()
{
  unint64_t result;

  result = qword_1EEEE06D8;
  if (!qword_1EEEE06D8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1043D5C, &type metadata for SymbolRenderingModeModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE06D8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SymbolRenderingModeModifier.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B0FE49C0 + 4 * byte_1B1043BE5[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B0FE49E0 + 4 * byte_1B1043BEA[v4]))();
}

_BYTE *sub_1B0FE49C0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B0FE49E0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B0FE49E8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B0FE49F0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B0FE49F8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B0FE4A00(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SymbolRenderingModeModifier.CodingKeys()
{
  return &type metadata for SymbolRenderingModeModifier.CodingKeys;
}

unint64_t sub_1B0FE4A20()
{
  unint64_t result;

  result = qword_1EEEE06E0;
  if (!qword_1EEEE06E0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1043D34, &type metadata for SymbolRenderingModeModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE06E0);
  }
  return result;
}

unint64_t sub_1B0FE4A68()
{
  unint64_t result;

  result = qword_1EEEE06E8;
  if (!qword_1EEEE06E8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1043C6C, &type metadata for SymbolRenderingModeModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE06E8);
  }
  return result;
}

unint64_t sub_1B0FE4AB0()
{
  unint64_t result;

  result = qword_1EEEE06F0;
  if (!qword_1EEEE06F0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1043C94, &type metadata for SymbolRenderingModeModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE06F0);
  }
  return result;
}

uint64_t sub_1B0FE4AF4()
{
  return 0x6E697265646E6572;
}

uint64_t sub_1B0FE4B18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1B0FE4B30(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1B0FE4B38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_1B0FE4B40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_1B0FE4B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

_QWORD *sub_1B0FE4B60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15[2];
  __int128 v16[2];
  _QWORD v17[5];

  result = (*(_QWORD *(**)(_QWORD *__return_ptr))(a3 + 16))(v17);
  if (!v4)
  {
    v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
    sub_1B0F5FD84((uint64_t)v17, (uint64_t)v16);
    v11 = *(_QWORD *)(v10 + 16);
    if (v11)
    {
      v12 = (_QWORD *)(v10 + 32);
      do
      {
        v13 = v12[3];
        v14 = v12[4];
        __swift_project_boxed_opaque_existential_1(v12, v13);
        (*(void (**)(__int128 *__return_ptr, __int128 *, uint64_t, uint64_t, uint64_t))(v14 + 16))(v15, v16, a1, v13, v14);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
        sub_1B0F5A0E4(v15, (uint64_t)v16);
        v12 += 5;
        --v11;
      }
      while (v11);
    }
    sub_1B0F5A0E4(v16, a4);
    swift_bridgeObjectRelease();
    return (_QWORD *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  }
  return result;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for FillStyleWrapper(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FillStyleWrapper(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B0FE4D70 + 4 * byte_1B1043DB5[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_1B0FE4DA4 + 4 * byte_1B1043DB0[v4]))();
}

uint64_t sub_1B0FE4DA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1B0FE4DAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1B0FE4DB4);
  return result;
}

uint64_t sub_1B0FE4DC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1B0FE4DC8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B0FE4DCC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1B0FE4DD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FillStyleWrapper()
{
  return &type metadata for FillStyleWrapper;
}

ValueMetadata *type metadata accessor for ShapeStyleContentBox()
{
  return &type metadata for ShapeStyleContentBox;
}

uint64_t sub_1B0FE4E04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B0FE6470(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B0FE4E2C()
{
  sub_1B0FE5FFC();
  return sub_1B10362B4();
}

uint64_t sub_1B0FE4E54()
{
  sub_1B0FE5FFC();
  return sub_1B10362C0();
}

uint64_t sub_1B0FE4E7C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  void *v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t inited;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  _QWORD v56[5];
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  char v60[8];
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v46 = a2;
  v63 = *MEMORY[0x1E0C80C00];
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE06F8);
  v47 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v49 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE480);
  v50 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1B1036008();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v11 = sub_1B103626C();
  if (qword_1EEEDE0B8 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v7, (uint64_t)qword_1EEF0BA18);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v12, v7);
  if (*(_QWORD *)(v11 + 16) && (v13 = sub_1B0F56A48((uint64_t)v10), (v14 & 1) != 0))
  {
    sub_1B0F57208(*(_QWORD *)(v11 + 56) + 32 * v13, (uint64_t)&v57);
  }
  else
  {
    v57 = 0u;
    v58 = 0u;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (!*((_QWORD *)&v58 + 1))
  {
    sub_1B0FC70F4((uint64_t)&v57);
    goto LABEL_12;
  }
  type metadata accessor for ContentRegistry();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    type metadata accessor for ContentRegistryError();
    sub_1B0F524FC(&qword_1EEEDE488, (uint64_t (*)(uint64_t))type metadata accessor for ContentRegistryError, (uint64_t)&unk_1B1045C40);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v15 = (void *)v56[0];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v16 = sub_1B0F5DCE4();
  sub_1B1036278();
  if (v2)
  {

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v45 = v15;
  v18 = v51;
  v19 = sub_1B10360C8();
  if (!*(_QWORD *)(v19 + 16))
  {
    swift_bridgeObjectRelease();
    type metadata accessor for DynamicKeyError();
    sub_1B0F524FC(&qword_1EEEDE4C0, (uint64_t (*)(uint64_t))type metadata accessor for DynamicKeyError, (uint64_t)&unk_1B103D9EC);
    swift_allocError();
    sub_1B1036074();
    sub_1B1035F30();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();

    (*(void (**)(char *, uint64_t))(v50 + 8))(v6, v18);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v20 = *(_QWORD *)(v19 + 40);
  v43 = *(_QWORD *)(v19 + 32);
  v21 = *(_QWORD *)(v19 + 48);
  LODWORD(v44) = *(unsigned __int8 *)(v19 + 56);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  v22 = sub_1B1036074();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE498);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B1036F70;
  *(_QWORD *)(inited + 56) = &type metadata for DynamicKey;
  *(_QWORD *)(inited + 64) = v16;
  v24 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v24;
  v25 = v43;
  *(_QWORD *)(v24 + 16) = v43;
  *(_QWORD *)(v24 + 24) = v20;
  v26 = v21;
  *(_QWORD *)(v24 + 32) = v21;
  LOBYTE(v21) = v44;
  *(_BYTE *)(v24 + 40) = v44;
  *(_QWORD *)&v57 = v22;
  swift_bridgeObjectRetain();
  sub_1B0F5DD60(inited);
  v27 = sub_1B1000C28(v25, v20);
  v29 = v28;
  v42 = v27;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v52 = v25;
  v53 = v20;
  v54 = v26;
  v55 = v21;
  v30 = v51;
  sub_1B1036080();
  v41 = v26;
  *((_QWORD *)&v58 + 1) = v42;
  v59 = v29;
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v57);
  sub_1B1035DB0();
  sub_1B0F5A0E4(&v57, (uint64_t)v60);
  *(_QWORD *)&v57 = v25;
  *((_QWORD *)&v57 + 1) = v20;
  *(_QWORD *)&v58 = v41;
  BYTE8(v58) = v44;
  sub_1B0FE5FFC();
  sub_1B1036068();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0708);
  sub_1B0FE6040();
  v31 = v48;
  sub_1B10360A4();
  if ((_QWORD)v57)
    v32 = v57;
  else
    v32 = MEMORY[0x1E0DEE9D8];
  v33 = *(_QWORD *)(v32 + 16);
  if (v33)
  {
    v52 = MEMORY[0x1E0DEE9D8];
    sub_1B0FDD988(0, v33, 0);
    v44 = v32;
    v34 = v32 + 32;
    do
    {
      sub_1B0F5E070(v34, (uint64_t)v56);
      sub_1B0F5FD84((uint64_t)v56, (uint64_t)&v57);
      sub_1B0FC51BC((uint64_t)v56);
      v35 = v52;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B0FDD988(0, *(_QWORD *)(v35 + 16) + 1, 1);
        v35 = v52;
      }
      v37 = *(_QWORD *)(v35 + 16);
      v36 = *(_QWORD *)(v35 + 24);
      if (v37 >= v36 >> 1)
      {
        sub_1B0FDD988(v36 > 1, v37 + 1, 1);
        v35 = v52;
      }
      *(_QWORD *)(v35 + 16) = v37 + 1;
      sub_1B0F5A0E4(&v57, v35 + 40 * v37 + 32);
      v34 += 40;
      --v33;
    }
    while (v33);
    swift_bridgeObjectRelease();
    v30 = v51;
    v31 = v48;
  }
  else
  {
    swift_bridgeObjectRelease();
    v35 = MEMORY[0x1E0DEE9D8];
  }
  v38 = v46;
  v39 = v61;
  v40 = v62;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v60, v61);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(v35, v39, v40);

  (*(void (**)(char *, uint64_t))(v47 + 8))(v49, v31);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v6, v30);
  sub_1B0F5E070((uint64_t)v60, v38);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1B0FC51BC((uint64_t)v60);
}

uint64_t sub_1B0FE5774@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B0FE4E7C(a1, a2);
}

uint64_t sub_1B0FE5788@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  void *v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t inited;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  _QWORD *v26;
  uint64_t v27;
  __int128 v28;
  _OWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  _OWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  void *v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  _OWORD v47[2];
  uint64_t v48;
  uint64_t v49;

  v36 = a2;
  v49 = *MEMORY[0x1E0C80C00];
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE480);
  v37 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1B1036008();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1B103626C();
  if (qword_1EEEDE0B8 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v6, (uint64_t)qword_1EEF0BA18);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v11, v6);
  if (*(_QWORD *)(v10 + 16) && (v12 = sub_1B0F56A48((uint64_t)v9), (v13 & 1) != 0))
  {
    sub_1B0F57208(*(_QWORD *)(v10 + 56) + 32 * v12, (uint64_t)&v44);
  }
  else
  {
    v44 = 0u;
    v45 = 0u;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!*((_QWORD *)&v45 + 1))
  {
    sub_1B0FC70F4((uint64_t)&v44);
    goto LABEL_12;
  }
  type metadata accessor for ContentRegistry();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    type metadata accessor for ContentRegistryError();
    sub_1B0F524FC(&qword_1EEEDE488, (uint64_t (*)(uint64_t))type metadata accessor for ContentRegistryError, (uint64_t)&unk_1B1045C40);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v14 = v43;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v15 = sub_1B0F5DCE4();
  sub_1B1036278();
  if (v2)
  {

  }
  else
  {
    v35 = v14;
    v17 = v38;
    v18 = sub_1B10360C8();
    if (*(_QWORD *)(v18 + 16))
    {
      v19 = *(_QWORD *)(v18 + 40);
      v34 = *(_QWORD *)(v18 + 32);
      v33 = *(_QWORD *)(v18 + 48);
      v32 = *(unsigned __int8 *)(v18 + 56);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      v20 = sub_1B1036074();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE498);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1B1036F70;
      *(_QWORD *)(inited + 56) = &type metadata for DynamicKey;
      *(_QWORD *)(inited + 64) = v15;
      v22 = swift_allocObject();
      *(_QWORD *)(inited + 32) = v22;
      v23 = v34;
      *(_QWORD *)(v22 + 16) = v34;
      *(_QWORD *)(v22 + 24) = v19;
      v24 = v33;
      *(_QWORD *)(v22 + 32) = v33;
      v25 = v32;
      *(_BYTE *)(v22 + 40) = v32;
      *(_QWORD *)&v44 = v20;
      swift_bridgeObjectRetain();
      sub_1B0F5DD60(inited);
      v26 = sub_1B1000F24(v23, v19);
      v30 = v27;
      v31 = v26;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v39 = v23;
      v40 = v19;
      v41 = v24;
      v42 = v25;
      sub_1B1036080();
      swift_bridgeObjectRelease();
      *((_QWORD *)&v45 + 1) = v31;
      v46 = v30;
      __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v44);
      sub_1B1035DB0();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v5, v17);

      sub_1B0F5A0E4(&v44, (uint64_t)v47);
      v28 = v47[1];
      v29 = v36;
      *v36 = v47[0];
      v29[1] = v28;
      *((_QWORD *)v29 + 4) = v48;
    }
    else
    {
      swift_bridgeObjectRelease();
      type metadata accessor for DynamicKeyError();
      sub_1B0F524FC(&qword_1EEEDE4C0, (uint64_t (*)(uint64_t))type metadata accessor for DynamicKeyError, (uint64_t)&unk_1B103D9EC);
      swift_allocError();
      sub_1B1036074();
      sub_1B1035F30();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();

      (*(void (**)(char *, uint64_t))(v37 + 8))(v5, v17);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B0FE5D78(char a1)
{
  if ((a1 & 1) != 0)
    return 0x61696C6169746E61;
  else
    return 0x6C6C69466F65;
}

uint64_t sub_1B0FE5DB4@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1B0FE5788(a1, a2);
}

uint64_t sub_1B0FE5DC8()
{
  char *v0;

  return sub_1B0FE5D78(*v0);
}

uint64_t sub_1B0FE5DD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B0FE64FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B0FE5DF4()
{
  sub_1B0FE60E8();
  return sub_1B10362B4();
}

uint64_t sub_1B0FE5E1C()
{
  sub_1B0FE60E8();
  return sub_1B10362C0();
}

uint64_t sub_1B0FE5E44@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1B0FE5E9C(a1);
  if (!v2)
  {
    *a2 = result & 1;
    a2[1] = BYTE1(result) & 1;
  }
  return result;
}

uint64_t sub_1B0FE5E78()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B0FE5E9C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  char v7;
  char v8;
  char v10;
  int v11;
  _BYTE v12[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0720);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B0FE60E8();
  sub_1B1036278();
  if (v1)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v12[15] = 0;
  v7 = sub_1B1036098();
  v12[14] = 1;
  v8 = sub_1B1036098();
  v10 = (v8 == 2) | v8;
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  if ((v10 & 1) != 0)
    v11 = 256;
  else
    v11 = 0;
  return v11 & 0xFFFFFFFE | v7 & 1;
}

unint64_t sub_1B0FE5FFC()
{
  unint64_t result;

  result = qword_1EEEE0700;
  if (!qword_1EEEE0700)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10440E4, &type metadata for ShapeStyleContentBox.ShapeStyleContentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0700);
  }
  return result;
}

unint64_t sub_1B0FE6040()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EEEE0710;
  if (!qword_1EEEE0710)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEE0708);
    v2 = sub_1B0FE60A4();
    result = MEMORY[0x1B5E15188](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EEEE0710);
  }
  return result;
}

unint64_t sub_1B0FE60A4()
{
  unint64_t result;

  result = qword_1EEEE0718;
  if (!qword_1EEEE0718)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10440BC, &type metadata for ShapeStyleModifierBox);
    atomic_store(result, (unint64_t *)&qword_1EEEE0718);
  }
  return result;
}

unint64_t sub_1B0FE60E8()
{
  unint64_t result;

  result = qword_1EEEE0728;
  if (!qword_1EEEE0728)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104406C, &type metadata for FillStyleWrapper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0728);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FillStyleWrapper.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B0FE6178 + 4 * byte_1B1043DBF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B0FE61AC + 4 * byte_1B1043DBA[v4]))();
}

uint64_t sub_1B0FE61AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B0FE61B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B0FE61BCLL);
  return result;
}

uint64_t sub_1B0FE61C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B0FE61D0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B0FE61D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B0FE61DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FillStyleWrapper.CodingKeys()
{
  return &type metadata for FillStyleWrapper.CodingKeys;
}

ValueMetadata *type metadata accessor for ShapeStyleModifierBox()
{
  return &type metadata for ShapeStyleModifierBox;
}

uint64_t storeEnumTagSinglePayload for ShapeStyleContentBox.ShapeStyleContentCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B0FE6248 + 4 * byte_1B1043DC4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B0FE6268 + 4 * byte_1B1043DC9[v4]))();
}

_BYTE *sub_1B0FE6248(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B0FE6268(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B0FE6270(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B0FE6278(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B0FE6280(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B0FE6288(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ShapeStyleContentBox.ShapeStyleContentCodingKeys()
{
  return &type metadata for ShapeStyleContentBox.ShapeStyleContentCodingKeys;
}

unint64_t sub_1B0FE62A8()
{
  unint64_t result;

  result = qword_1EEEE0730;
  if (!qword_1EEEE0730)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1043F8C, &type metadata for ShapeStyleContentBox.ShapeStyleContentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0730);
  }
  return result;
}

unint64_t sub_1B0FE62F0()
{
  unint64_t result;

  result = qword_1EEEE0738;
  if (!qword_1EEEE0738)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1044044, &type metadata for FillStyleWrapper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0738);
  }
  return result;
}

unint64_t sub_1B0FE6338()
{
  unint64_t result;

  result = qword_1EEEE0740;
  if (!qword_1EEEE0740)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1043FB4, &type metadata for FillStyleWrapper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0740);
  }
  return result;
}

unint64_t sub_1B0FE6380()
{
  unint64_t result;

  result = qword_1EEEE0748;
  if (!qword_1EEEE0748)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1043FDC, &type metadata for FillStyleWrapper.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0748);
  }
  return result;
}

unint64_t sub_1B0FE63C8()
{
  unint64_t result;

  result = qword_1EEEE0750;
  if (!qword_1EEEE0750)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1043EFC, &type metadata for ShapeStyleContentBox.ShapeStyleContentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0750);
  }
  return result;
}

unint64_t sub_1B0FE6410()
{
  unint64_t result;

  result = qword_1EEEE0758;
  if (!qword_1EEEE0758)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1043F24, &type metadata for ShapeStyleContentBox.ShapeStyleContentCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0758);
  }
  return result;
}

uint64_t sub_1B0FE6454()
{
  return 0x7265696669646F6DLL;
}

uint64_t sub_1B0FE6470(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x7265696669646F6DLL && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1B1036128();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B0FE64FC(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6C6C69466F65 && a2 == 0xE600000000000000;
  if (v3 || (sub_1B1036128() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61696C6169746E61 && a2 == 0xEB00000000646573)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1B1036128();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t RemoteStateStore.__allocating_init()()
{
  return sub_1B0FE6604((void (*)(void))RemoteStateStore.init());
}

uint64_t LocalStateStore.__allocating_init()()
{
  return sub_1B0FE6604((void (*)(void))LocalStateStore.init());
}

uint64_t sub_1B0FE6604(void (*a1)(void))
{
  uint64_t v2;

  v2 = swift_allocObject();
  a1();
  return v2;
}

uint64_t RemoteStateStore.__allocating_init(parent:initialSet:referenceKeyMap:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v6 = swift_allocObject();
  v7 = qword_1EEEE0760;
  swift_retain();
  *(_QWORD *)(v6 + v7) = sub_1B0F553A4(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)(v6 + qword_1EEEE0768) = a1;
  swift_retain_n();
  swift_release();
  v8 = sub_1B0F55C84(a1);
  swift_retain();
  sub_1B0F56FC4(a2, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B0FEE2B0);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v9 = (_QWORD *)(v8 + qword_1EEEE0760);
  swift_beginAccess();
  *v9 = a3;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t RemoteStateStore.subscript.setter(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B0FEBD74(*a1, a2, a3);
}

uint64_t RemoteStateStore.set(reference:value:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[3];
  char v28;
  uint64_t v29;

  v5 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  if (*(_BYTE *)(a1 + 24) != 1)
  {
    sub_1B0FA58DC();
    swift_allocError();
    v21 = v20;
    *(_QWORD *)(v20 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDEA40);
    v22 = swift_allocObject();
    *(_QWORD *)v21 = v22;
    *(_QWORD *)(v22 + 16) = v5;
    *(_QWORD *)(v22 + 24) = v4;
    *(_QWORD *)(v22 + 32) = v6;
    *(_BYTE *)(v22 + 40) = 0;
    *(_BYTE *)(v21 + 32) = 2;
    swift_retain();
    return swift_willThrow();
  }
  v7 = v2;
  v8 = *a2;
  if (!*(_QWORD *)(v2 + qword_1EEEE0768))
  {
    sub_1B0F5A880(*(_QWORD *)(a1 + 16));
LABEL_11:
    sub_1B0FE79BC(v7, v8, v5, v4, v6, 1);
    return sub_1B0F571D8(v6);
  }
  v9 = (uint64_t *)(v2 + qword_1EEEE0760);
  swift_beginAccess();
  v10 = *v9;
  v11 = *(_QWORD *)(v10 + 16);
  sub_1B0F5A880(v6);
  swift_retain();
  if (!v11)
  {
LABEL_10:
    swift_endAccess();
    swift_release();
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  v12 = sub_1B0F56A3C(v5, v4);
  if ((v13 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v14 = *(_QWORD *)(v10 + 56) + 32 * v12;
  v15 = *(_QWORD *)v14;
  v16 = *(_QWORD *)(v14 + 8);
  v17 = *(_QWORD *)(v14 + 16);
  v18 = *(_BYTE *)(v14 + 24);
  swift_endAccess();
  sub_1B0F5A84C(v15, v16, v17, v18);
  swift_bridgeObjectRelease();
  sub_1B0FE72C8(v6, v15, v16, v17, v18, (uint64_t)v27);
  if (v3)
  {
    swift_release();
    sub_1B0F571D8(v6);
    return sub_1B0F74EA4(v15, v16, v17, v18);
  }
  else
  {
    v23 = v27[0];
    v25 = v27[2];
    v26 = v27[1];
    v24 = v28;
    v29 = v8;
    RemoteStateStore.set(reference:value:)(v27, &v29);
    sub_1B0F74EA4(v15, v16, v17, v18);
    swift_release();
    sub_1B0F571D8(v6);
    return sub_1B0F74EA4(v23, v26, v25, v24);
  }
}

uint64_t LocalStateStore.getScrollViewProxy(key:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  int v7;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  swift_bridgeObjectRetain();
  sub_1B0FEB89C(a1, a2, &v10);
  swift_bridgeObjectRelease();
  if (v11)
  {
    v6 = sub_1B10349A0();
    v7 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a3, v7 ^ 1u, 1, v6);
  }
  else
  {
    sub_1B0F5A3AC((uint64_t)&v10, &qword_1EEEDE158);
    v9 = sub_1B10349A0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a3, 1, 1, v9);
  }
}

uint64_t sub_1B0FE6AE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t result;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v21 = a5 & 1;
  if ((a5 & 1) != 0)
  {
    if ((~a4 & 0xF000000000000007) != 0)
    {
      swift_bridgeObjectRetain();
      sub_1B0F5A880(a4);
      sub_1B0FE74D8(a1, a4, &v20);
      result = sub_1B0F571D8(a4);
      v19 = v20;
      *(_QWORD *)a6 = a2;
      *(_QWORD *)(a6 + 8) = a3;
      *(_QWORD *)(a6 + 16) = v19;
    }
    else
    {
      *(_QWORD *)a6 = a2;
      *(_QWORD *)(a6 + 8) = a3;
      *(_QWORD *)(a6 + 16) = a1;
      sub_1B0F5E604(a2, a3, a4, 1);
      result = sub_1B0F5A880(a1);
    }
    *(_BYTE *)(a6 + 24) = 1;
  }
  else
  {
    if (qword_1EEEDE0B0 != -1)
      swift_once();
    v12 = sub_1B103467C();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EEF0BA00);
    v13 = sub_1B1034664();
    v14 = sub_1B1035E1C();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_1B0F50000, v13, v14, "Attempting to add a subreference to a value", v15, 2u);
      MEMORY[0x1B5E15248](v15, -1, -1);
    }

    sub_1B0FA58DC();
    swift_allocError();
    v17 = v16;
    *(_QWORD *)(v16 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF838);
    v18 = swift_allocObject();
    *(_QWORD *)v17 = v18;
    *(_QWORD *)(v18 + 16) = a2;
    *(_QWORD *)(v18 + 24) = a3;
    *(_QWORD *)(v18 + 32) = a4;
    *(_BYTE *)(v18 + 40) = 0;
    *(_BYTE *)(v17 + 32) = 2;
    swift_willThrow();
    return sub_1B0F5E6A0(a2, a3, a4, v21);
  }
  return result;
}

uint64_t sub_1B0FE6CDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  v22 = a5 & 1;
  if ((a5 & 1) != 0)
  {
    if ((~a4 & 0xF000000000000007) != 0)
    {
      swift_bridgeObjectRetain();
      sub_1B0F5A880(a4);
      sub_1B0FE74FC(a1, a4, &v21);
      result = sub_1B0F571D8(a4);
      v20 = v21;
      *(_QWORD *)a6 = a2;
      *(_QWORD *)(a6 + 8) = a3;
      *(_QWORD *)(a6 + 16) = v20;
    }
    else
    {
      *(_QWORD *)a6 = a2;
      *(_QWORD *)(a6 + 8) = a3;
      *(_QWORD *)(a6 + 16) = a1;
      sub_1B0F56BC8(a2, a3, a4, 1);
      result = sub_1B0F5A880(a1);
    }
    *(_BYTE *)(a6 + 24) = 1;
  }
  else
  {
    v12 = qword_1EEEDE0B0;
    swift_bridgeObjectRetain();
    if (v12 != -1)
      swift_once();
    v13 = sub_1B103467C();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EEF0BA00);
    v14 = sub_1B1034664();
    v15 = sub_1B1035E1C();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_1B0F50000, v14, v15, "Attempting to add a subreference to a value", v16, 2u);
      MEMORY[0x1B5E15248](v16, -1, -1);
    }

    sub_1B0FA58DC();
    swift_allocError();
    v18 = v17;
    *(_QWORD *)(v17 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF3C8);
    v19 = swift_allocObject();
    *(_QWORD *)v18 = v19;
    *(_QWORD *)(v19 + 16) = a2;
    *(_QWORD *)(v19 + 24) = a3;
    *(_QWORD *)(v19 + 32) = a4;
    *(_BYTE *)(v19 + 40) = 0;
    *(_BYTE *)(v18 + 32) = 2;
    swift_bridgeObjectRetain();
    swift_willThrow();
    return sub_1B0F56B08(a2, a3, a4, v22);
  }
  return result;
}

uint64_t sub_1B0FE6EE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t result;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v21 = a5 & 1;
  if ((a5 & 1) != 0)
  {
    if ((~a4 & 0xF000000000000007) != 0)
    {
      swift_bridgeObjectRetain();
      sub_1B0F5A880(a4);
      sub_1B0FE76E0(a1, a4, &v20);
      result = sub_1B0F571D8(a4);
      v19 = v20;
      *(_QWORD *)a6 = a2;
      *(_QWORD *)(a6 + 8) = a3;
      *(_QWORD *)(a6 + 16) = v19;
    }
    else
    {
      *(_QWORD *)a6 = a2;
      *(_QWORD *)(a6 + 8) = a3;
      *(_QWORD *)(a6 + 16) = a1;
      sub_1B0F5E604(a2, a3, a4, 1);
      result = sub_1B0F5A880(a1);
    }
    *(_BYTE *)(a6 + 24) = 1;
  }
  else
  {
    if (qword_1EEEDE0B0 != -1)
      swift_once();
    v12 = sub_1B103467C();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EEF0BA00);
    v13 = sub_1B1034664();
    v14 = sub_1B1035E1C();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_1B0F50000, v13, v14, "Attempting to add a subreference to a value", v15, 2u);
      MEMORY[0x1B5E15248](v15, -1, -1);
    }

    sub_1B0FA58DC();
    swift_allocError();
    v17 = v16;
    *(_QWORD *)(v16 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE4F0);
    v18 = swift_allocObject();
    *(_QWORD *)v17 = v18;
    *(_QWORD *)(v18 + 16) = a2;
    *(_QWORD *)(v18 + 24) = a3;
    *(_QWORD *)(v18 + 32) = a4;
    *(_BYTE *)(v18 + 40) = 0;
    *(_BYTE *)(v17 + 32) = 2;
    swift_willThrow();
    return sub_1B0F5E6A0(a2, a3, a4, v21);
  }
  return result;
}

uint64_t sub_1B0FE70D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t result;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v21 = a5 & 1;
  if ((a5 & 1) != 0)
  {
    if ((~a4 & 0xF000000000000007) != 0)
    {
      swift_bridgeObjectRetain();
      sub_1B0F5A880(a4);
      sub_1B0FE7704(a1, a4, &v20);
      result = sub_1B0F571D8(a4);
      v19 = v20;
      *(_QWORD *)a6 = a2;
      *(_QWORD *)(a6 + 8) = a3;
      *(_QWORD *)(a6 + 16) = v19;
    }
    else
    {
      *(_QWORD *)a6 = a2;
      *(_QWORD *)(a6 + 8) = a3;
      *(_QWORD *)(a6 + 16) = a1;
      sub_1B0F5E604(a2, a3, a4, 1);
      result = sub_1B0F5A880(a1);
    }
    *(_BYTE *)(a6 + 24) = 1;
  }
  else
  {
    if (qword_1EEEDE0B0 != -1)
      swift_once();
    v12 = sub_1B103467C();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EEF0BA00);
    v13 = sub_1B1034664();
    v14 = sub_1B1035E1C();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_1B0F50000, v13, v14, "Attempting to add a subreference to a value", v15, 2u);
      MEMORY[0x1B5E15248](v15, -1, -1);
    }

    sub_1B0FA58DC();
    swift_allocError();
    v17 = v16;
    *(_QWORD *)(v16 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0828);
    v18 = swift_allocObject();
    *(_QWORD *)v17 = v18;
    *(_QWORD *)(v18 + 16) = a2;
    *(_QWORD *)(v18 + 24) = a3;
    *(_QWORD *)(v18 + 32) = a4;
    *(_BYTE *)(v18 + 40) = 0;
    *(_BYTE *)(v17 + 32) = 2;
    swift_willThrow();
    return sub_1B0F5E6A0(a2, a3, a4, v21);
  }
  return result;
}

uint64_t sub_1B0FE72C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  v22 = a5 & 1;
  if ((a5 & 1) != 0)
  {
    if ((~a4 & 0xF000000000000007) != 0)
    {
      swift_bridgeObjectRetain();
      sub_1B0F5A880(a4);
      sub_1B0FE7728(a1, a4, &v21);
      result = sub_1B0F571D8(a4);
      v20 = v21;
      *(_QWORD *)a6 = a2;
      *(_QWORD *)(a6 + 8) = a3;
      *(_QWORD *)(a6 + 16) = v20;
    }
    else
    {
      *(_QWORD *)a6 = a2;
      *(_QWORD *)(a6 + 8) = a3;
      *(_QWORD *)(a6 + 16) = a1;
      sub_1B0F5A84C(a2, a3, a4, 1);
      result = sub_1B0F5A880(a1);
    }
    *(_BYTE *)(a6 + 24) = 1;
  }
  else
  {
    v12 = qword_1EEEDE0B0;
    swift_retain();
    if (v12 != -1)
      swift_once();
    v13 = sub_1B103467C();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EEF0BA00);
    v14 = sub_1B1034664();
    v15 = sub_1B1035E1C();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_1B0F50000, v14, v15, "Attempting to add a subreference to a value", v16, 2u);
      MEMORY[0x1B5E15248](v16, -1, -1);
    }

    sub_1B0FA58DC();
    swift_allocError();
    v18 = v17;
    *(_QWORD *)(v17 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDEA40);
    v19 = swift_allocObject();
    *(_QWORD *)v18 = v19;
    *(_QWORD *)(v19 + 16) = a2;
    *(_QWORD *)(v19 + 24) = a3;
    *(_QWORD *)(v19 + 32) = a4;
    *(_BYTE *)(v19 + 40) = 0;
    *(_BYTE *)(v18 + 32) = 2;
    swift_retain();
    swift_willThrow();
    return sub_1B0F74EA4(a2, a3, a4, v22);
  }
  return result;
}

_QWORD *sub_1B0FE74D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_1B0FE7520(a1, a2, (_QWORD *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1B0FE74D8, (void (*)(uint64_t))sub_1B0F5A880, a3);
}

_QWORD *sub_1B0FE74FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_1B0FE7520(a1, a2, (_QWORD *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1B0FE74FC, (void (*)(uint64_t))sub_1B0F5A880, a3);
}

_QWORD *sub_1B0FE7520@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *(*a3)(uint64_t *__return_ptr, uint64_t, uint64_t)@<X4>, void (*a4)(uint64_t)@<X5>, _QWORD *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  if (a2 < 0)
  {
    v16 = *(_QWORD *)(a2 + 16);
    v17 = *(_QWORD *)(a2 + 24);
    v18 = *(_QWORD *)(a2 + 32);
    v19 = *(_BYTE *)(a2 + 40);
    v20 = *(_QWORD *)(a2 + 48);
    v21 = swift_allocObject();
    v22 = v21;
    *(_QWORD *)(v21 + 16) = v16;
    *(_QWORD *)(v21 + 24) = v17;
    *(_QWORD *)(v21 + 32) = v18;
    *(_BYTE *)(v21 + 40) = v19;
    if ((~v20 & 0xF000000000000007) != 0)
    {
      sub_1B0F6C708(v16, v17, v18, v19);
      result = a3(&v24, a1, v20);
      *(_QWORD *)(v22 + 48) = v24;
      *a5 = v22 | 0x8000000000000000;
    }
    else
    {
      *(_QWORD *)(v21 + 48) = a1;
      *a5 = v21 | 0x8000000000000000;
      a4(a1);
      return (_QWORD *)sub_1B0F6C708(v16, v17, v18, v19);
    }
  }
  else
  {
    v8 = *(_QWORD *)(a2 + 16);
    v9 = *(_QWORD *)(a2 + 24);
    v10 = *(_QWORD *)(a2 + 32);
    v11 = *(_BYTE *)(a2 + 40);
    v12 = *(_QWORD *)(a2 + 48);
    v13 = swift_allocObject();
    v14 = v13;
    *(_QWORD *)(v13 + 16) = v8;
    *(_QWORD *)(v13 + 24) = v9;
    *(_QWORD *)(v13 + 32) = v10;
    *(_BYTE *)(v13 + 40) = v11;
    if ((~v12 & 0xF000000000000007) != 0)
    {
      sub_1B0F56B9C(v8, v9, v10, v11);
      result = a3(&v24, a1, v12);
      *(_QWORD *)(v14 + 48) = v24;
      *a5 = v14;
    }
    else
    {
      *(_QWORD *)(v13 + 48) = a1;
      *a5 = v13;
      sub_1B0F56B9C(v8, v9, v10, v11);
      return (_QWORD *)((uint64_t (*)(uint64_t))a4)(a1);
    }
  }
  return result;
}

_QWORD *sub_1B0FE76E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_1B0FE7520(a1, a2, (_QWORD *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1B0FE76E0, (void (*)(uint64_t))sub_1B0F5A880, a3);
}

_QWORD *sub_1B0FE7704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_1B0FE7520(a1, a2, (_QWORD *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1B0FE7704, (void (*)(uint64_t))sub_1B0F5A880, a3);
}

_QWORD *sub_1B0FE7728@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_1B0FE7520(a1, a2, (_QWORD *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1B0FE7728, (void (*)(uint64_t))sub_1B0F5A880, a3);
}

uint64_t RemoteStateStore.binding<A>(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  _QWORD *v10;

  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = a3;
  v9[5] = a4;
  v9[6] = v4;
  v9[7] = a1;
  v9[8] = a2;
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = a3;
  v10[5] = a4;
  v10[6] = v4;
  v10[7] = a1;
  v10[8] = a2;
  sub_1B1035E64();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  return sub_1B1035864();
}

uint64_t RemoteStateStore.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t result;
  uint64_t v19[3];

  v7 = *(_QWORD *)(v3 + qword_1EEEE0768);
  if (v7)
  {
    v8 = (uint64_t *)(v3 + qword_1EEEE0760);
    swift_beginAccess();
    v9 = *v8;
    v10 = *(_QWORD *)(v9 + 16);
    swift_retain();
    if (v10)
    {
      swift_bridgeObjectRetain();
      v11 = sub_1B0F56A3C(a1, a2);
      if ((v12 & 1) != 0)
      {
        v13 = *(_QWORD *)(v9 + 56) + 32 * v11;
        v14 = *(_QWORD *)v13;
        v15 = *(_QWORD *)(v13 + 8);
        v16 = *(_QWORD *)(v13 + 16);
        v17 = *(_BYTE *)(v13 + 24);
        swift_endAccess();
        sub_1B0F5A84C(v14, v15, v16, v17);
        swift_bridgeObjectRelease();
        sub_1B0FD6EFC(v7, v14, v15, v16, v17, v19);
        swift_release();
        result = sub_1B0F74EA4(v14, v15, v16, v17);
        *a3 = v19[0];
        return result;
      }
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    swift_release();
  }
  swift_bridgeObjectRetain();
  sub_1B0FEBA70(a1, a2, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B0FE79BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  void *v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;

  v23 = a6 & 1;
  if ((a6 & 1) == 0)
  {
    sub_1B0FA58DC();
    swift_allocError();
    v16 = v15;
    *(_QWORD *)(v15 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDEA40);
    v17 = swift_allocObject();
    *(_QWORD *)v16 = v17;
    *(_QWORD *)(v17 + 16) = a3;
    *(_QWORD *)(v17 + 24) = a4;
    *(_QWORD *)(v17 + 32) = a5;
    *(_BYTE *)(v17 + 40) = 0;
    *(_BYTE *)(v16 + 32) = 2;
    swift_retain_n();
    swift_willThrow();
    return sub_1B0F74EA4(a3, a4, a5, v23);
  }
  swift_bridgeObjectRetain();
  sub_1B0F5A880(a5);
  RemoteStateStore.subscript.getter(a3, a4, &v22);
  v12 = v22;
  if ((~v22 & 0xF000000000000007) == 0)
  {
    sub_1B0FA58DC();
    swift_allocError();
    *(_QWORD *)v13 = a3;
    *(_QWORD *)(v13 + 8) = a4;
    *(_QWORD *)(v13 + 16) = &type metadata for DecodableState;
    *(_BYTE *)(v13 + 32) = 0;
    swift_willThrow();
    return sub_1B0F571D8(a5);
  }
  if ((v22 >> 61) >= 4)
  {
    if (v22 >> 61 == 4)
    {
      if ((~a5 & 0xF000000000000007) != 0)
      {
        v18 = *(_QWORD **)(v22 + 16);
        sub_1B0FCC934(v22);
        sub_1B0F5A880(a5);
        sub_1B0FE9BF8(v18, a5, a2, a1, &v22);
        if (v6)
        {
          sub_1B0FC9D10(v12);
          sub_1B0F571D8(a5);
          swift_bridgeObjectRelease();
          goto LABEL_7;
        }
        v21 = v22;
        swift_retain();
        sub_1B0FEBD74(v21, a3, a4);
        sub_1B0F571D8(a5);
        swift_release();
        goto LABEL_19;
      }
    }
    else if ((~a5 & 0xF000000000000007) != 0)
    {
      v19 = *(_QWORD *)(v22 + 16);
      sub_1B0FCC934(v22);
      sub_1B0F5A880(a5);
      sub_1B0FE82F0(v19, a5, a2, a1, &v22);
      if (v6)
      {

        v20 = 0xF000000000000007;
      }
      else
      {
        v20 = v22;
        swift_retain();
      }
      sub_1B0FEBD74(v20, a3, a4);
      sub_1B0F571D8(a5);
      sub_1B0FC9D10(v20);
LABEL_19:
      sub_1B0F571D8(a5);
      goto LABEL_20;
    }
    sub_1B0FCC934(v22);
    swift_retain();
    sub_1B0FEBD74(a2, a3, a4);
LABEL_20:
    sub_1B0FC9D10(v12);
    return sub_1B0FC9D10(v12);
  }
  swift_retain();
  sub_1B0FEBD74(a2, a3, a4);
LABEL_7:
  sub_1B0F571D8(a5);
  return sub_1B0FC9D10(v12);
}

uint64_t sub_1B0FE7CA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  unint64_t v26;
  char v27;

  v27 = a6 & 1;
  if ((a6 & 1) == 0)
  {
    sub_1B0FA58DC();
    swift_allocError();
    v18 = v17;
    *(_QWORD *)(v17 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE170);
    v19 = swift_allocObject();
    *(_QWORD *)v18 = v19;
    *(_QWORD *)(v19 + 16) = a3;
    *(_QWORD *)(v19 + 24) = a4;
    *(_QWORD *)(v19 + 32) = a5;
    *(_BYTE *)(v19 + 40) = 0;
    *(_BYTE *)(v18 + 32) = 2;
    sub_1B0F767BC(a3, a4, a5, 0, sub_1B0F76F14);
    swift_bridgeObjectRetain();
    swift_willThrow();
    return sub_1B0F76648(a3, a4, a5, v27, sub_1B0F571D8);
  }
  swift_bridgeObjectRetain();
  sub_1B0F5A880(a5);
  RemoteStateStore.subscript.getter(a3, a4, &v26);
  v12 = v26;
  if ((~v26 & 0xF000000000000007) == 0)
  {
    sub_1B0FA58DC();
    swift_allocError();
    v14 = v13;
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF5E0);
    *(_QWORD *)v14 = a3;
    *(_QWORD *)(v14 + 8) = a4;
    *(_QWORD *)(v14 + 16) = v15;
    *(_BYTE *)(v14 + 32) = 0;
    swift_willThrow();
    return sub_1B0F571D8(a5);
  }
  if (v26 >> 61 != 5)
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF5E0);
    sub_1B0F970C4();
    swift_allocError();
    *v24 = v12;
    v24[1] = v23;
    swift_willThrow();
    goto LABEL_10;
  }
  v20 = sub_1B0FCB3E0(*(_QWORD *)(v26 + 16));
  sub_1B0FC9D10(v12);
  if (v6)
  {
LABEL_10:
    sub_1B0F571D8(a5);
    return swift_bridgeObjectRelease();
  }
  v21 = sub_1B0FCB3E0(v20);
  if ((~a5 & 0xF000000000000007) != 0)
  {
    swift_retain();
    sub_1B0FE8B38(v21, a5, a2, a1, &v26);
    v25 = v26;
    swift_retain();
    sub_1B0FEBD74(v25, a3, a4);
    sub_1B0F571D8(a5);
    sub_1B0FC9D10(v25);
    sub_1B0F571D8(a5);
  }
  else
  {
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = sub_1B0FCB3E0(a2);
    sub_1B0FEBD74(v22 | 0xA000000000000000, a3, a4);
  }
  swift_release();
  return swift_release();
}

uint64_t sub_1B0FE7F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;

  v27 = a6 & 1;
  if ((a6 & 1) == 0)
  {
    sub_1B0FA58DC();
    swift_allocError();
    v18 = v17;
    *(_QWORD *)(v17 + 24) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF070);
    v19 = swift_allocObject();
    *(_QWORD *)v18 = v19;
    *(_QWORD *)(v19 + 16) = a3;
    *(_QWORD *)(v19 + 24) = a4;
    *(_QWORD *)(v19 + 32) = a5;
    *(_BYTE *)(v19 + 40) = 0;
    *(_BYTE *)(v18 + 32) = 2;
    sub_1B0F767BC(a3, a4, a5, 0, sub_1B0F76F14);
    swift_bridgeObjectRetain();
    swift_willThrow();
    return sub_1B0F76648(a3, a4, a5, v27, sub_1B0F76F18);
  }
  swift_bridgeObjectRetain();
  sub_1B0F5A880(a5);
  RemoteStateStore.subscript.getter(a3, a4, &v26);
  v12 = v26;
  if ((~v26 & 0xF000000000000007) == 0)
  {
    sub_1B0FA58DC();
    swift_allocError();
    v14 = v13;
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE410);
    *(_QWORD *)v14 = a3;
    *(_QWORD *)(v14 + 8) = a4;
    *(_QWORD *)(v14 + 16) = v15;
    *(_BYTE *)(v14 + 32) = 0;
    swift_willThrow();
    return sub_1B0F571D8(a5);
  }
  v20 = sub_1B0FD7DB0(v26);
  sub_1B0FC9D10(v12);
  if (!v6)
  {
    sub_1B0FC97BC(v20, &v26);
    if ((v26 >> 61) < 4)
    {
      swift_release();
      sub_1B0FC97BC(a2, &v26);
      sub_1B0FEBD74(v26, a3, a4);
      sub_1B0F571D8(a5);
      return swift_bridgeObjectRelease();
    }
    if (v26 >> 61 == 4)
    {
      if ((~a5 & 0xF000000000000007) != 0)
      {
        v21 = *(_QWORD **)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        swift_retain();
        sub_1B0FEACD8(v21, a5, a2, a1, (unint64_t *)&v25);
        v23 = v25;
        swift_retain();
        sub_1B0FEBD74(v23, a3, a4);
        sub_1B0F571D8(a5);
        swift_release();
LABEL_15:
        sub_1B0F571D8(a5);
        goto LABEL_16;
      }
    }
    else if ((~a5 & 0xF000000000000007) != 0)
    {
      v22 = *(_QWORD *)((v26 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
      swift_retain();
      sub_1B0FE93AC(v22, a5, a2, a1, (unint64_t *)&v25);
      v24 = v25;
      swift_retain();
      sub_1B0FEBD74(v24, a3, a4);
      sub_1B0F571D8(a5);
      sub_1B0FC9D10(v24);
      goto LABEL_15;
    }
    sub_1B0FC97BC(a2, (unint64_t *)&v25);
    sub_1B0FEBD74(v25, a3, a4);
LABEL_16:
    swift_release();
    return swift_bridgeObjectRelease();
  }
  sub_1B0F571D8(a5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B0FE82F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t result;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 v57;
  unint64_t v58;
  NSObject *loga;
  uint64_t v62[3];
  unsigned __int8 v63;
  uint64_t v64;

  if ((a2 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(a2 + 24);
    v10 = *(_QWORD *)(a2 + 32);
    v11 = *(_BYTE *)(a2 + 40);
    v12 = *(_QWORD *)(a2 + 48);
    v62[0] = *(_QWORD *)(a2 + 16);
    v9 = v62[0];
    v62[1] = v8;
    v62[2] = v10;
    v63 = v11;
    swift_bridgeObjectRetain();
    sub_1B0F56B9C(v62[0], v8, v10, v11);
    sub_1B0F5A880(v12);
    v13 = StringResolvable.resolved(with:)(a4);
    if (v5)
    {
      swift_bridgeObjectRelease();
      sub_1B0F571D8(v12);
      v15 = v62[0];
      v16 = v8;
      v17 = v10;
      v18 = v11;
      return sub_1B0F56ADC(v15, v16, v17, v18);
    }
    v25 = v13;
    v58 = v14;
    v55 = v62[0];
    v56 = v10;
    v57 = v11;
    if ((~v12 & 0xF000000000000007) == 0)
    {
      swift_retain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v62[0] = a1;
      sub_1B0F9D4A8(a3, v25, v58, isUniquelyReferenced_nonNull_native);
      v27 = a1;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B0F56ADC(v9, v8, v10, v11);
LABEL_12:
      v28 = swift_allocObject();
      *(_QWORD *)(v28 + 16) = sub_1B0FCB3E0(v27);
      result = swift_bridgeObjectRelease();
      *a5 = v28 | 0xA000000000000000;
      return result;
    }
    v29 = v14;
    v54 = v12;
    if (*(_QWORD *)(a1 + 16))
    {
      sub_1B0F5A880(v12);
      swift_bridgeObjectRetain();
      v30 = v25;
      v31 = sub_1B0F56A3C(v25, v58);
      if ((v32 & 1) != 0)
      {
        v33 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v31);
        swift_retain();
        swift_bridgeObjectRelease();
        if ((v33 >> 61) < 4)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (qword_1EEEDE0B0 != -1)
            swift_once();
          v34 = sub_1B103467C();
          __swift_project_value_buffer(v34, (uint64_t)qword_1EEF0BA00);
          v35 = sub_1B1034664();
          v36 = sub_1B1035E34();
          if (os_log_type_enabled(v35, v36))
          {
            v37 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v37 = 0;
            _os_log_impl(&dword_1B0F50000, v35, v36, "Referenceable.updatedDict: Have a subreference but next structure is a value", v37, 2u);
            MEMORY[0x1B5E15248](v37, -1, -1);
          }

          sub_1B0FA58DC();
          swift_allocError();
          *(_QWORD *)v38 = 3;
          *(_QWORD *)(v38 + 8) = 0;
          *(_QWORD *)(v38 + 16) = 0;
          *(_QWORD *)(v38 + 24) = 0;
          *(_BYTE *)(v38 + 32) = 5;
          swift_willThrow();
          swift_release();
          sub_1B0F571D8(v12);
          sub_1B0F571D8(v12);
          v15 = v55;
          v16 = v8;
          v17 = v10;
          v18 = v57;
          return sub_1B0F56ADC(v15, v16, v17, v18);
        }
        v49 = *(_QWORD **)((v33 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        swift_retain();
        if (v33 >> 61 == 4)
        {
          sub_1B0FE9BF8(v49, v12, a3, a4, (unint64_t *)v62);
          v50 = v62[0];
          v51 = swift_isUniquelyReferenced_nonNull_native();
          v64 = a1;
          sub_1B0F9D4A8(v50, v30, v58, v51);
          v27 = v64;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B0F571D8(v12);
        }
        else
        {
          sub_1B0FE82F0(v62, v49, v12, a3, a4);
          v52 = v62[0];
          swift_retain();
          v53 = swift_isUniquelyReferenced_nonNull_native();
          v62[0] = a1;
          sub_1B0F9D4A8(v52, v30, v58, v53);
          v27 = v62[0];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B0F571D8(v12);
          swift_release();
        }
        swift_release();
        sub_1B0F571D8(v12);
        sub_1B0F56ADC(v55, v8, v10, v57);
        swift_release();
        goto LABEL_12;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_retain();
    }
    v39 = v25;
    swift_bridgeObjectRelease();
    if (qword_1EEEDE0B0 != -1)
      swift_once();
    v40 = sub_1B103467C();
    __swift_project_value_buffer(v40, (uint64_t)qword_1EEF0BA00);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v41 = sub_1B1034664();
    v42 = sub_1B1035E34();
    loga = v41;
    if (os_log_type_enabled(v41, v42))
    {
      v43 = swift_slowAlloc();
      v44 = swift_slowAlloc();
      v62[0] = v44;
      *(_DWORD *)v43 = 136315394;
      swift_bridgeObjectRetain();
      v64 = sub_1B0F6B618(v39, v58, v62);
      sub_1B1035E7C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v43 + 12) = 2080;
      swift_bridgeObjectRetain();
      v45 = sub_1B1035AF8();
      v47 = v46;
      swift_bridgeObjectRelease();
      v64 = sub_1B0F6B618(v45, v47, v62);
      v29 = v58;
      sub_1B1035E7C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B0F50000, loga, v42, "Referenceable.updatedDict: key not found %s dict: %s", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1B5E15248](v44, -1, -1);
      MEMORY[0x1B5E15248](v43, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    sub_1B0FA58DC();
    swift_allocError();
    *(_QWORD *)v48 = v39;
    *(_QWORD *)(v48 + 8) = v29;
    *(_BYTE *)(v48 + 32) = 4;
    swift_willThrow();
    sub_1B0F571D8(v54);
    sub_1B0F571D8(v54);
    v15 = v55;
    v16 = v8;
    v17 = v56;
    v18 = v57;
    return sub_1B0F56ADC(v15, v16, v17, v18);
  }
  if (qword_1EEEDE0B0 != -1)
    swift_once();
  v20 = sub_1B103467C();
  __swift_project_value_buffer(v20, (uint64_t)qword_1EEF0BA00);
  v21 = sub_1B1034664();
  v22 = sub_1B1035E34();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v23 = 0;
    _os_log_impl(&dword_1B0F50000, v21, v22, "Referenceable.updatedDict: trying to modify a dictionary using an index subreference", v23, 2u);
    MEMORY[0x1B5E15248](v23, -1, -1);
  }

  sub_1B0FA58DC();
  swift_allocError();
  *(_QWORD *)v24 = 5;
  *(_QWORD *)(v24 + 8) = 0;
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v24 + 24) = 0;
  *(_BYTE *)(v24 + 32) = 5;
  return swift_willThrow();
}

uint64_t sub_1B0FE8B38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t result;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned __int8 v59;
  unint64_t v60;
  NSObject *loga;
  uint64_t v64[3];
  unsigned __int8 v65;
  uint64_t v66;

  if ((a2 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(a2 + 24);
    v10 = *(_QWORD *)(a2 + 32);
    v11 = *(_BYTE *)(a2 + 40);
    v12 = *(_QWORD *)(a2 + 48);
    v64[0] = *(_QWORD *)(a2 + 16);
    v9 = v64[0];
    v64[1] = v8;
    v64[2] = v10;
    v65 = v11;
    swift_bridgeObjectRetain();
    sub_1B0F56B9C(v64[0], v8, v10, v11);
    sub_1B0F5A880(v12);
    v13 = StringResolvable.resolved(with:)(a4);
    if (v5)
    {
      swift_bridgeObjectRelease();
      sub_1B0F571D8(v12);
      v15 = v64[0];
      v16 = v8;
      v17 = v10;
      v18 = v11;
      return sub_1B0F56ADC(v15, v16, v17, v18);
    }
    v25 = v13;
    v60 = v14;
    v57 = v64[0];
    v58 = v10;
    v59 = v11;
    if ((~v12 & 0xF000000000000007) == 0)
    {
      v26 = v13;
      v27 = swift_allocObject();
      *(_QWORD *)(v27 + 16) = sub_1B0FCB3E0(a3);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v64[0] = a1;
      sub_1B0F9D4A8(v27 | 0xA000000000000000, v26, v60, isUniquelyReferenced_nonNull_native);
      v29 = a1;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B0F56ADC(v9, v8, v10, v11);
LABEL_12:
      v30 = swift_allocObject();
      *(_QWORD *)(v30 + 16) = sub_1B0FCB3E0(v29);
      result = swift_bridgeObjectRelease();
      *a5 = v30 | 0xA000000000000000;
      return result;
    }
    v31 = v14;
    v56 = v12;
    if (*(_QWORD *)(a1 + 16))
    {
      sub_1B0F5A880(v12);
      swift_bridgeObjectRetain();
      v32 = v25;
      v33 = sub_1B0F56A3C(v25, v60);
      if ((v34 & 1) != 0)
      {
        v35 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v33);
        swift_retain();
        swift_bridgeObjectRelease();
        if ((v35 >> 61) < 4)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (qword_1EEEDE0B0 != -1)
            swift_once();
          v36 = sub_1B103467C();
          __swift_project_value_buffer(v36, (uint64_t)qword_1EEF0BA00);
          v37 = sub_1B1034664();
          v38 = sub_1B1035E34();
          if (os_log_type_enabled(v37, v38))
          {
            v39 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v39 = 0;
            _os_log_impl(&dword_1B0F50000, v37, v38, "Referenceable.updatedDict: Have a subreference but next structure is a value", v39, 2u);
            MEMORY[0x1B5E15248](v39, -1, -1);
          }

          sub_1B0FA58DC();
          swift_allocError();
          *(_QWORD *)v40 = 3;
          *(_QWORD *)(v40 + 8) = 0;
          *(_QWORD *)(v40 + 16) = 0;
          *(_QWORD *)(v40 + 24) = 0;
          *(_BYTE *)(v40 + 32) = 5;
          swift_willThrow();
          swift_release();
          sub_1B0F571D8(v12);
          sub_1B0F571D8(v12);
          v15 = v57;
          v16 = v8;
          v17 = v10;
          v18 = v59;
          return sub_1B0F56ADC(v15, v16, v17, v18);
        }
        v51 = *(_QWORD **)((v35 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        swift_retain();
        if (v35 >> 61 == 4)
        {
          sub_1B0FEA460(v51, v12, a3, a4, (unint64_t *)v64);
          v52 = v64[0];
          v53 = swift_isUniquelyReferenced_nonNull_native();
          v66 = a1;
          sub_1B0F9D4A8(v52, v32, v60, v53);
          v29 = v66;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B0F571D8(v12);
        }
        else
        {
          sub_1B0FE8B38(v64, v51, v12, a3, a4);
          v54 = v64[0];
          swift_retain();
          v55 = swift_isUniquelyReferenced_nonNull_native();
          v64[0] = a1;
          sub_1B0F9D4A8(v54, v32, v60, v55);
          v29 = v64[0];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B0F571D8(v12);
          swift_release();
        }
        swift_release();
        sub_1B0F571D8(v12);
        sub_1B0F56ADC(v57, v8, v10, v59);
        swift_release();
        goto LABEL_12;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_retain();
    }
    v41 = v25;
    swift_bridgeObjectRelease();
    if (qword_1EEEDE0B0 != -1)
      swift_once();
    v42 = sub_1B103467C();
    __swift_project_value_buffer(v42, (uint64_t)qword_1EEF0BA00);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v43 = sub_1B1034664();
    v44 = sub_1B1035E34();
    loga = v43;
    if (os_log_type_enabled(v43, v44))
    {
      v45 = swift_slowAlloc();
      v46 = swift_slowAlloc();
      v64[0] = v46;
      *(_DWORD *)v45 = 136315394;
      swift_bridgeObjectRetain();
      v66 = sub_1B0F6B618(v41, v60, v64);
      sub_1B1035E7C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v45 + 12) = 2080;
      swift_bridgeObjectRetain();
      v47 = sub_1B1035AF8();
      v49 = v48;
      swift_bridgeObjectRelease();
      v66 = sub_1B0F6B618(v47, v49, v64);
      v31 = v60;
      sub_1B1035E7C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B0F50000, loga, v44, "Referenceable.updatedDict: key not found %s dict: %s", (uint8_t *)v45, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1B5E15248](v46, -1, -1);
      MEMORY[0x1B5E15248](v45, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    sub_1B0FA58DC();
    swift_allocError();
    *(_QWORD *)v50 = v41;
    *(_QWORD *)(v50 + 8) = v31;
    *(_BYTE *)(v50 + 32) = 4;
    swift_willThrow();
    sub_1B0F571D8(v56);
    sub_1B0F571D8(v56);
    v15 = v57;
    v16 = v8;
    v17 = v58;
    v18 = v59;
    return sub_1B0F56ADC(v15, v16, v17, v18);
  }
  if (qword_1EEEDE0B0 != -1)
    swift_once();
  v20 = sub_1B103467C();
  __swift_project_value_buffer(v20, (uint64_t)qword_1EEF0BA00);
  v21 = sub_1B1034664();
  v22 = sub_1B1035E34();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v23 = 0;
    _os_log_impl(&dword_1B0F50000, v21, v22, "Referenceable.updatedDict: trying to modify a dictionary using an index subreference", v23, 2u);
    MEMORY[0x1B5E15248](v23, -1, -1);
  }

  sub_1B0FA58DC();
  swift_allocError();
  *(_QWORD *)v24 = 5;
  *(_QWORD *)(v24 + 8) = 0;
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v24 + 24) = 0;
  *(_BYTE *)(v24 + 32) = 5;
  return swift_willThrow();
}

uint64_t sub_1B0FE93AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t result;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned __int8 v58;
  unint64_t v59;
  NSObject *loga;
  uint64_t v63[3];
  unsigned __int8 v64;
  uint64_t v65;

  if ((a2 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(a2 + 24);
    v10 = *(_QWORD *)(a2 + 32);
    v11 = *(_BYTE *)(a2 + 40);
    v12 = *(_QWORD *)(a2 + 48);
    v63[0] = *(_QWORD *)(a2 + 16);
    v9 = v63[0];
    v63[1] = v8;
    v63[2] = v10;
    v64 = v11;
    swift_bridgeObjectRetain();
    sub_1B0F56B9C(v63[0], v8, v10, v11);
    sub_1B0F5A880(v12);
    v13 = StringResolvable.resolved(with:)(a4);
    if (v5)
    {
      swift_bridgeObjectRelease();
      sub_1B0F571D8(v12);
      v15 = v63[0];
      v16 = v8;
      v17 = v10;
      v18 = v11;
      return sub_1B0F56ADC(v15, v16, v17, v18);
    }
    v25 = v13;
    v59 = v14;
    v56 = v63[0];
    v57 = v10;
    v58 = v11;
    if ((~v12 & 0xF000000000000007) == 0)
    {
      sub_1B0FC97BC(a3, (unint64_t *)v63);
      v26 = v63[0];
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v65 = a1;
      sub_1B0F9D4A8(v26, v25, v59, isUniquelyReferenced_nonNull_native);
      v28 = v65;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1B0F56ADC(v9, v8, v10, v11);
LABEL_12:
      v29 = swift_allocObject();
      *(_QWORD *)(v29 + 16) = sub_1B0FCB3E0(v28);
      result = swift_bridgeObjectRelease();
      *a5 = v29 | 0xA000000000000000;
      return result;
    }
    v30 = v14;
    v55 = v12;
    if (*(_QWORD *)(a1 + 16))
    {
      sub_1B0F5A880(v12);
      swift_bridgeObjectRetain();
      v31 = v25;
      v32 = sub_1B0F56A3C(v25, v59);
      if ((v33 & 1) != 0)
      {
        v34 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v32);
        swift_retain();
        swift_bridgeObjectRelease();
        if ((v34 >> 61) < 4)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (qword_1EEEDE0B0 != -1)
            swift_once();
          v35 = sub_1B103467C();
          __swift_project_value_buffer(v35, (uint64_t)qword_1EEF0BA00);
          v36 = sub_1B1034664();
          v37 = sub_1B1035E34();
          if (os_log_type_enabled(v36, v37))
          {
            v38 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v38 = 0;
            _os_log_impl(&dword_1B0F50000, v36, v37, "Referenceable.updatedDict: Have a subreference but next structure is a value", v38, 2u);
            MEMORY[0x1B5E15248](v38, -1, -1);
          }

          sub_1B0FA58DC();
          swift_allocError();
          *(_QWORD *)v39 = 3;
          *(_QWORD *)(v39 + 8) = 0;
          *(_QWORD *)(v39 + 16) = 0;
          *(_QWORD *)(v39 + 24) = 0;
          *(_BYTE *)(v39 + 32) = 5;
          swift_willThrow();
          swift_release();
          sub_1B0F571D8(v12);
          sub_1B0F571D8(v12);
          v15 = v56;
          v16 = v8;
          v17 = v10;
          v18 = v58;
          return sub_1B0F56ADC(v15, v16, v17, v18);
        }
        v50 = *(_QWORD **)((v34 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
        swift_retain();
        if (v34 >> 61 == 4)
        {
          sub_1B0FEACD8(v50, v12, a3, a4, (unint64_t *)v63);
          v51 = v63[0];
          v52 = swift_isUniquelyReferenced_nonNull_native();
          v65 = a1;
          sub_1B0F9D4A8(v51, v31, v59, v52);
          v28 = v65;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B0F571D8(v12);
        }
        else
        {
          sub_1B0FE93AC(v63, v50, v12, a3, a4);
          v53 = v63[0];
          swift_retain();
          v54 = swift_isUniquelyReferenced_nonNull_native();
          v63[0] = a1;
          sub_1B0F9D4A8(v53, v31, v59, v54);
          v28 = v63[0];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B0F571D8(v12);
          swift_release();
        }
        swift_release();
        sub_1B0F571D8(v12);
        sub_1B0F56ADC(v56, v8, v10, v58);
        swift_release();
        goto LABEL_12;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_retain();
    }
    v40 = v25;
    swift_bridgeObjectRelease();
    if (qword_1EEEDE0B0 != -1)
      swift_once();
    v41 = sub_1B103467C();
    __swift_project_value_buffer(v41, (uint64_t)qword_1EEF0BA00);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v42 = sub_1B1034664();
    v43 = sub_1B1035E34();
    loga = v42;
    if (os_log_type_enabled(v42, v43))
    {
      v44 = swift_slowAlloc();
      v45 = swift_slowAlloc();
      v63[0] = v45;
      *(_DWORD *)v44 = 136315394;
      swift_bridgeObjectRetain();
      v65 = sub_1B0F6B618(v40, v59, v63);
      sub_1B1035E7C();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v44 + 12) = 2080;
      swift_bridgeObjectRetain();
      v46 = sub_1B1035AF8();
      v48 = v47;
      swift_bridgeObjectRelease();
      v65 = sub_1B0F6B618(v46, v48, v63);
      v30 = v59;
      sub_1B1035E7C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1B0F50000, loga, v43, "Referenceable.updatedDict: key not found %s dict: %s", (uint8_t *)v44, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1B5E15248](v45, -1, -1);
      MEMORY[0x1B5E15248](v44, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    sub_1B0FA58DC();
    swift_allocError();
    *(_QWORD *)v49 = v40;
    *(_QWORD *)(v49 + 8) = v30;
    *(_BYTE *)(v49 + 32) = 4;
    swift_willThrow();
    sub_1B0F571D8(v55);
    sub_1B0F571D8(v55);
    v15 = v56;
    v16 = v8;
    v17 = v57;
    v18 = v58;
    return sub_1B0F56ADC(v15, v16, v17, v18);
  }
  if (qword_1EEEDE0B0 != -1)
    swift_once();
  v20 = sub_1B103467C();
  __swift_project_value_buffer(v20, (uint64_t)qword_1EEF0BA00);
  v21 = sub_1B1034664();
  v22 = sub_1B1035E34();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v23 = 0;
    _os_log_impl(&dword_1B0F50000, v21, v22, "Referenceable.updatedDict: trying to modify a dictionary using an index subreference", v23, 2u);
    MEMORY[0x1B5E15248](v23, -1, -1);
  }

  sub_1B0FA58DC();
  swift_allocError();
  *(_QWORD *)v24 = 5;
  *(_QWORD *)(v24 + 8) = 0;
  *(_QWORD *)(v24 + 16) = 0;
  *(_QWORD *)(v24 + 24) = 0;
  *(_BYTE *)(v24 + 32) = 5;
  return swift_willThrow();
}

uint64_t sub_1B0FE9BF8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t v49;
  unint64_t v50;
  os_log_type_t type;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60[3];
  char v61;
  uint64_t v62;

  if (a2 < 0)
  {
    v16 = *(_QWORD *)(a2 + 24);
    v17 = *(_QWORD *)(a2 + 32);
    v18 = *(_BYTE *)(a2 + 40);
    v19 = *(_QWORD *)(a2 + 48);
    v60[0] = *(_QWORD *)(a2 + 16);
    v60[1] = v16;
    v60[2] = v17;
    v61 = v18;
    swift_bridgeObjectRetain();
    v58 = v60[0];
    sub_1B0F6C708(v60[0], v16, v17, v18);
    v59 = v19;
    sub_1B0F5A880(v19);
    sub_1B0FA7470(a4);
    if ((v21 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      if (qword_1EEEDE0B0 != -1)
        swift_once();
      v23 = sub_1B103467C();
      __swift_project_value_buffer(v23, (uint64_t)qword_1EEF0BA00);
      v24 = sub_1B1034664();
      v25 = sub_1B1035E1C();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v26 = 0;
        _os_log_impl(&dword_1B0F50000, v24, v25, "SubReference to update array, unable to resolve index", v26, 2u);
        MEMORY[0x1B5E15248](v26, -1, -1);
      }

      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v27 = 2;
      *(_QWORD *)(v27 + 8) = 0;
      *(_QWORD *)(v27 + 16) = 0;
      *(_QWORD *)(v27 + 24) = 0;
      *(_BYTE *)(v27 + 32) = 5;
      swift_willThrow();
      sub_1B0F571D8(v59);
      v28 = v58;
    }
    else
    {
      if ((v20 & 0x8000000000000000) == 0 && v20 < a1[2])
      {
        if ((~v19 & 0xF000000000000007) == 0)
        {
          v22 = v20;
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            a1 = sub_1B0FEEA88(a1);
          if (v22 < a1[2])
          {
            a1[v22 + 4] = a3;
            swift_release();
            sub_1B0F6C7D4(v58, v16, v17, v18);
LABEL_15:
            sub_1B0FC97BC((uint64_t)a1, a5);
            return swift_bridgeObjectRelease();
          }
          __break(1u);
          goto LABEL_47;
        }
        v57 = v16;
        v44 = a1[v20 + 4];
        if ((v44 >> 61) < 4)
        {
          sub_1B0F5A880(v19);
          swift_retain();
          swift_bridgeObjectRelease();
          if (qword_1EEEDE0B0 == -1)
          {
LABEL_31:
            v45 = sub_1B103467C();
            __swift_project_value_buffer(v45, (uint64_t)qword_1EEF0BA00);
            v46 = sub_1B1034664();
            v47 = sub_1B1035E34();
            if (os_log_type_enabled(v46, v47))
            {
              v48 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v48 = 0;
              _os_log_impl(&dword_1B0F50000, v46, v47, "Referenceable.updatedArray: Have a subreference but next structure is a value", v48, 2u);
              MEMORY[0x1B5E15248](v48, -1, -1);
            }

            sub_1B0FA58DC();
            swift_allocError();
            *(_QWORD *)v49 = 3;
            *(_QWORD *)(v49 + 8) = 0;
            *(_QWORD *)(v49 + 16) = 0;
            *(_QWORD *)(v49 + 24) = 0;
            *(_BYTE *)(v49 + 32) = 5;
            swift_willThrow();
            swift_release();
            sub_1B0F571D8(v59);
            sub_1B0F571D8(v59);
            v28 = v58;
            v43 = v57;
            return sub_1B0F6C7D4(v28, v43, v17, v18);
          }
LABEL_47:
          swift_once();
          goto LABEL_31;
        }
        v56 = v20;
        if (v44 >> 61 == 4)
        {
          v53 = *(_QWORD *)(v44 + 16);
          swift_retain();
          sub_1B0F5A880(v19);
          swift_retain();
          sub_1B0FE9BF8(v60, v53, v19, a3, a4);
          if (v5)
          {
LABEL_41:
            swift_bridgeObjectRelease();
            sub_1B0F571D8(v19);
            swift_release();
            sub_1B0F6C7D4(v58, v57, v17, v18);
            sub_1B0F571D8(v19);
            return swift_release();
          }
          a4 = v60[0];
          a3 = v60[0] & 0x1FFFFFFFFFFFFFFFLL;
          swift_retain();
          v44 = v57;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            a1 = sub_1B0FEEA88(a1);
          v50 = v56;
          if (v56 < a1[2])
          {
LABEL_45:
            a1[v50 + 4] = a4;
            swift_release();
            sub_1B0F571D8(v19);
            swift_release();
            sub_1B0F571D8(v19);
            sub_1B0F6C7D4(v58, v44, v17, v18);
            swift_release();
            swift_release();
            goto LABEL_15;
          }
          __break(1u);
        }
        v54 = *(_QWORD *)(v44 + 16);
        swift_retain();
        sub_1B0F5A880(v19);
        swift_retain();
        sub_1B0FE82F0(v60, v54, v19, a3, a4);
        if (v5)
          goto LABEL_41;
        a4 = v60[0];
        swift_retain();
        result = swift_isUniquelyReferenced_nonNull_native();
        v44 = v57;
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_1B0FEEA88(a1);
          a1 = (_QWORD *)result;
        }
        v50 = v56;
        if (v56 >= a1[2])
        {
          __break(1u);
          return result;
        }
        goto LABEL_45;
      }
      v29 = v20;
      swift_bridgeObjectRelease();
      if (qword_1EEEDE0B0 != -1)
        swift_once();
      v30 = sub_1B103467C();
      __swift_project_value_buffer(v30, (uint64_t)qword_1EEF0BA00);
      swift_bridgeObjectRetain_n();
      v31 = sub_1B1034664();
      v32 = sub_1B1035E34();
      if (os_log_type_enabled(v31, v32))
      {
        type = v32;
        v33 = swift_slowAlloc();
        v52 = swift_slowAlloc();
        v60[0] = v52;
        *(_DWORD *)v33 = 134218242;
        v62 = v29;
        sub_1B1035E7C();
        *(_WORD *)(v33 + 12) = 2080;
        v34 = swift_bridgeObjectRetain();
        v35 = v18;
        v36 = MEMORY[0x1B5E1472C](v34, &type metadata for DecodableState);
        v55 = v17;
        v38 = v37;
        swift_bridgeObjectRelease();
        v39 = v36;
        v18 = v35;
        v40 = v29;
        v62 = sub_1B0F6B618(v39, v38, v60);
        sub_1B1035E7C();
        swift_bridgeObjectRelease_n();
        v17 = v55;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1B0F50000, v31, type, "Referenceable.updatedArray: index out of range idx: %ld array: %s", (uint8_t *)v33, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1B5E15248](v52, -1, -1);
        MEMORY[0x1B5E15248](v33, -1, -1);

        v41 = v58;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        v41 = v60[0];
        v40 = v29;
      }
      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v42 = v40;
      *(_BYTE *)(v42 + 32) = 3;
      swift_willThrow();
      sub_1B0F571D8(v59);
      v28 = v41;
    }
    v43 = v16;
    return sub_1B0F6C7D4(v28, v43, v17, v18);
  }
  if (qword_1EEEDE0B0 != -1)
    swift_once();
  v6 = sub_1B103467C();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EEF0BA00);
  v7 = sub_1B1034664();
  v8 = sub_1B1035E34();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1B0F50000, v7, v8, "Referenceable.updatedArray: trying to modify an array using an key subreference", v9, 2u);
    MEMORY[0x1B5E15248](v9, -1, -1);
  }

  sub_1B0FA58DC();
  swift_allocError();
  *(_QWORD *)v10 = 4;
  *(_QWORD *)(v10 + 8) = 0;
  *(_QWORD *)(v10 + 16) = 0;
  *(_QWORD *)(v10 + 24) = 0;
  *(_BYTE *)(v10 + 32) = 5;
  return swift_willThrow();
}

uint64_t sub_1B0FEA460@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58[3];
  char v59;
  uint64_t v60;

  if (a2 < 0)
  {
    v12 = v5;
    v17 = *(_QWORD *)(a2 + 24);
    v18 = *(_QWORD *)(a2 + 32);
    v19 = *(_BYTE *)(a2 + 40);
    v20 = *(_QWORD *)(a2 + 48);
    v58[0] = *(_QWORD *)(a2 + 16);
    v58[1] = v17;
    v58[2] = v18;
    v59 = v19;
    swift_bridgeObjectRetain();
    v55 = v58[0];
    v56 = v19;
    sub_1B0F6C708(v58[0], v17, v18, v19);
    v57 = v20;
    sub_1B0F5A880(v20);
    sub_1B0FA7470(a4);
    if ((v22 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      if (qword_1EEEDE0B0 != -1)
        swift_once();
      v25 = sub_1B103467C();
      __swift_project_value_buffer(v25, (uint64_t)qword_1EEF0BA00);
      v26 = sub_1B1034664();
      v27 = sub_1B1035E1C();
      if (os_log_type_enabled(v26, v27))
      {
        v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v28 = 0;
        _os_log_impl(&dword_1B0F50000, v26, v27, "SubReference to update array, unable to resolve index", v28, 2u);
        MEMORY[0x1B5E15248](v28, -1, -1);
      }

      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v29 = 2;
      *(_QWORD *)(v29 + 8) = 0;
      *(_QWORD *)(v29 + 16) = 0;
      *(_QWORD *)(v29 + 24) = 0;
      *(_BYTE *)(v29 + 32) = 5;
      swift_willThrow();
      sub_1B0F571D8(v57);
      v30 = v55;
      return sub_1B0F6C7D4(v30, v17, v18, v56);
    }
    if (v21 < 0 || v21 >= a1[2])
    {
      v31 = v21;
      swift_bridgeObjectRelease();
      if (qword_1EEEDE0B0 != -1)
        swift_once();
      v32 = sub_1B103467C();
      __swift_project_value_buffer(v32, (uint64_t)qword_1EEF0BA00);
      swift_bridgeObjectRetain_n();
      v33 = sub_1B1034664();
      v34 = sub_1B1035E34();
      if (os_log_type_enabled(v33, v34))
      {
        v35 = swift_slowAlloc();
        v48 = swift_slowAlloc();
        v58[0] = v48;
        *(_DWORD *)v35 = 134218242;
        v60 = v31;
        sub_1B1035E7C();
        *(_WORD *)(v35 + 12) = 2080;
        v49 = v17;
        v36 = swift_bridgeObjectRetain();
        v37 = MEMORY[0x1B5E1472C](v36, &type metadata for DecodableState);
        v53 = v18;
        v39 = v38;
        swift_bridgeObjectRelease();
        v60 = sub_1B0F6B618(v37, v39, v58);
        v17 = v49;
        sub_1B1035E7C();
        swift_bridgeObjectRelease_n();
        v18 = v53;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1B0F50000, v33, v34, "Referenceable.updatedArray: index out of range idx: %ld array: %s", (uint8_t *)v35, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1B5E15248](v48, -1, -1);
        MEMORY[0x1B5E15248](v35, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v40 = v31;
      *(_BYTE *)(v40 + 32) = 3;
      swift_willThrow();
      sub_1B0F571D8(v57);
      v30 = v55;
      return sub_1B0F6C7D4(v30, v17, v18, v56);
    }
    v23 = v20;
    if ((~v20 & 0xF000000000000007) == 0)
    {
      v52 = v21;
      v24 = swift_allocObject();
      *(_QWORD *)(v24 + 16) = sub_1B0FCB3E0(a3);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        a1 = sub_1B0FEEA88(a1);
      if (v52 < a1[2])
      {
        a1[v52 + 4] = v24 | 0xA000000000000000;
        swift_release();
        sub_1B0F6C7D4(v55, v17, v18, v19);
LABEL_15:
        sub_1B0FC97BC((uint64_t)a1, a5);
        return swift_bridgeObjectRelease();
      }
      __break(1u);
      goto LABEL_46;
    }
    v41 = a1[v21 + 4];
    if ((v41 >> 61) < 4)
    {
      sub_1B0F5A880(v57);
      swift_retain();
      swift_bridgeObjectRelease();
      if (qword_1EEEDE0B0 == -1)
      {
LABEL_30:
        v42 = sub_1B103467C();
        __swift_project_value_buffer(v42, (uint64_t)qword_1EEF0BA00);
        v43 = sub_1B1034664();
        v44 = sub_1B1035E34();
        if (os_log_type_enabled(v43, v44))
        {
          v45 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v45 = 0;
          _os_log_impl(&dword_1B0F50000, v43, v44, "Referenceable.updatedArray: Have a subreference but next structure is a value", v45, 2u);
          MEMORY[0x1B5E15248](v45, -1, -1);
        }

        sub_1B0FA58DC();
        swift_allocError();
        *(_QWORD *)v46 = 3;
        *(_QWORD *)(v46 + 8) = 0;
        *(_QWORD *)(v46 + 16) = 0;
        *(_QWORD *)(v46 + 24) = 0;
        *(_BYTE *)(v46 + 32) = 5;
        swift_willThrow();
        swift_release();
        sub_1B0F571D8(v57);
        sub_1B0F571D8(v57);
        v30 = v55;
        return sub_1B0F6C7D4(v30, v17, v18, v56);
      }
LABEL_46:
      swift_once();
      goto LABEL_30;
    }
    v54 = v21;
    if (v41 >> 61 == 4)
    {
      v50 = *(_QWORD *)(v41 + 16);
      swift_retain();
      sub_1B0F5A880(v57);
      swift_retain();
      v23 = v12;
      sub_1B0FEA460(v58, v50, v57, a3, a4);
      v41 = v12;
      if (v12)
      {
LABEL_40:
        swift_bridgeObjectRelease();
        sub_1B0F571D8(v57);
        swift_release();
        sub_1B0F6C7D4(v55, v17, v18, v19);
        sub_1B0F571D8(v57);
        return swift_release();
      }
      a4 = v58[0];
      a3 = v58[0] & 0x1FFFFFFFFFFFFFFFLL;
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        a1 = sub_1B0FEEA88(a1);
      v47 = v54;
      if (v54 < a1[2])
      {
LABEL_44:
        a1[v47 + 4] = a4;
        swift_release();
        sub_1B0F571D8(v57);
        swift_release();
        sub_1B0F571D8(v57);
        sub_1B0F6C7D4(v55, v17, v18, v19);
        swift_release();
        swift_release();
        goto LABEL_15;
      }
      __break(1u);
    }
    v51 = *(_QWORD *)(v41 + 16);
    swift_retain();
    sub_1B0F5A880(v23);
    swift_retain();
    sub_1B0FE8B38(v58, v51, v23, a3, a4);
    if (v12)
      goto LABEL_40;
    a4 = v58[0];
    swift_retain();
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1B0FEEA88(a1);
      a1 = (_QWORD *)result;
    }
    v47 = v54;
    if (v54 >= a1[2])
    {
      __break(1u);
      return result;
    }
    goto LABEL_44;
  }
  if (qword_1EEEDE0B0 != -1)
    swift_once();
  v6 = sub_1B103467C();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EEF0BA00);
  v7 = sub_1B1034664();
  v8 = sub_1B1035E34();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1B0F50000, v7, v8, "Referenceable.updatedArray: trying to modify an array using an key subreference", v9, 2u);
    MEMORY[0x1B5E15248](v9, -1, -1);
  }

  sub_1B0FA58DC();
  swift_allocError();
  *(_QWORD *)v10 = 4;
  *(_QWORD *)(v10 + 8) = 0;
  *(_QWORD *)(v10 + 16) = 0;
  *(_QWORD *)(v10 + 24) = 0;
  *(_BYTE *)(v10 + 32) = 5;
  return swift_willThrow();
}

uint64_t sub_1B0FEACD8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  unint64_t v51;
  os_log_type_t type;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61[3];
  char v62;
  uint64_t v63;

  if (a2 < 0)
  {
    v16 = *(_QWORD *)(a2 + 24);
    v17 = *(_QWORD *)(a2 + 32);
    v18 = *(_BYTE *)(a2 + 40);
    v19 = *(_QWORD *)(a2 + 48);
    v61[0] = *(_QWORD *)(a2 + 16);
    v61[1] = v16;
    v61[2] = v17;
    v62 = v18;
    swift_bridgeObjectRetain();
    v59 = v61[0];
    sub_1B0F6C708(v61[0], v16, v17, v18);
    v60 = v19;
    sub_1B0F5A880(v19);
    sub_1B0FA7470(a4);
    if ((v21 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      if (qword_1EEEDE0B0 != -1)
        swift_once();
      v24 = sub_1B103467C();
      __swift_project_value_buffer(v24, (uint64_t)qword_1EEF0BA00);
      v25 = sub_1B1034664();
      v26 = sub_1B1035E1C();
      if (os_log_type_enabled(v25, v26))
      {
        v27 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v27 = 0;
        _os_log_impl(&dword_1B0F50000, v25, v26, "SubReference to update array, unable to resolve index", v27, 2u);
        MEMORY[0x1B5E15248](v27, -1, -1);
      }

      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v28 = 2;
      *(_QWORD *)(v28 + 8) = 0;
      *(_QWORD *)(v28 + 16) = 0;
      *(_QWORD *)(v28 + 24) = 0;
      *(_BYTE *)(v28 + 32) = 5;
      swift_willThrow();
      v29 = v60;
      goto LABEL_21;
    }
    if (v20 < 0 || v20 >= a1[2])
    {
      v31 = v20;
      swift_bridgeObjectRelease();
      if (qword_1EEEDE0B0 != -1)
        swift_once();
      v32 = sub_1B103467C();
      __swift_project_value_buffer(v32, (uint64_t)qword_1EEF0BA00);
      swift_bridgeObjectRetain_n();
      v33 = sub_1B1034664();
      v34 = sub_1B1035E34();
      if (os_log_type_enabled(v33, v34))
      {
        type = v34;
        v35 = swift_slowAlloc();
        v53 = swift_slowAlloc();
        v61[0] = v53;
        *(_DWORD *)v35 = 134218242;
        v63 = v31;
        sub_1B1035E7C();
        *(_WORD *)(v35 + 12) = 2080;
        v36 = swift_bridgeObjectRetain();
        v37 = v18;
        v38 = MEMORY[0x1B5E1472C](v36, &type metadata for DecodableState);
        v56 = v17;
        v40 = v39;
        swift_bridgeObjectRelease();
        v41 = v38;
        v18 = v37;
        v42 = v31;
        v63 = sub_1B0F6B618(v41, v40, v61);
        sub_1B1035E7C();
        swift_bridgeObjectRelease_n();
        v17 = v56;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1B0F50000, v33, type, "Referenceable.updatedArray: index out of range idx: %ld array: %s", (uint8_t *)v35, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1B5E15248](v53, -1, -1);
        MEMORY[0x1B5E15248](v35, -1, -1);

        v43 = v59;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        v43 = v61[0];
        v42 = v31;
      }
      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v44 = v42;
      *(_BYTE *)(v44 + 32) = 3;
      swift_willThrow();
      sub_1B0F571D8(v60);
      v30 = v43;
      return sub_1B0F6C7D4(v30, v16, v17, v18);
    }
    if ((~v19 & 0xF000000000000007) == 0)
    {
      v22 = v20;
      sub_1B0FC97BC(a3, (unint64_t *)v61);
      v23 = v61[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        a1 = sub_1B0FEEA88(a1);
      if (v22 < a1[2])
      {
        a1[v22 + 4] = v23;
        swift_release();
        sub_1B0F6C7D4(v59, v16, v17, v18);
LABEL_15:
        sub_1B0FC97BC((uint64_t)a1, a5);
        return swift_bridgeObjectRelease();
      }
      __break(1u);
      goto LABEL_47;
    }
    v58 = v16;
    v45 = a1[v20 + 4];
    if ((v45 >> 61) < 4)
    {
      sub_1B0F5A880(v19);
      swift_retain();
      swift_bridgeObjectRelease();
      if (qword_1EEEDE0B0 == -1)
      {
LABEL_31:
        v46 = sub_1B103467C();
        __swift_project_value_buffer(v46, (uint64_t)qword_1EEF0BA00);
        v47 = sub_1B1034664();
        v48 = sub_1B1035E34();
        v16 = v58;
        if (os_log_type_enabled(v47, v48))
        {
          v49 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v49 = 0;
          _os_log_impl(&dword_1B0F50000, v47, v48, "Referenceable.updatedArray: Have a subreference but next structure is a value", v49, 2u);
          MEMORY[0x1B5E15248](v49, -1, -1);
        }

        sub_1B0FA58DC();
        swift_allocError();
        *(_QWORD *)v50 = 3;
        *(_QWORD *)(v50 + 8) = 0;
        *(_QWORD *)(v50 + 16) = 0;
        *(_QWORD *)(v50 + 24) = 0;
        *(_BYTE *)(v50 + 32) = 5;
        swift_willThrow();
        swift_release();
        sub_1B0F571D8(v60);
        v29 = v60;
LABEL_21:
        sub_1B0F571D8(v29);
        v30 = v59;
        return sub_1B0F6C7D4(v30, v16, v17, v18);
      }
LABEL_47:
      swift_once();
      goto LABEL_31;
    }
    v57 = v20;
    if (v45 >> 61 == 4)
    {
      v54 = *(_QWORD *)(v45 + 16);
      swift_retain();
      sub_1B0F5A880(v19);
      swift_retain();
      sub_1B0FEACD8(v61, v54, v19, a3, a4);
      if (v5)
      {
LABEL_41:
        swift_bridgeObjectRelease();
        sub_1B0F571D8(v19);
        swift_release();
        sub_1B0F6C7D4(v59, v58, v17, v18);
        sub_1B0F571D8(v19);
        return swift_release();
      }
      a4 = v61[0];
      a3 = v61[0] & 0x1FFFFFFFFFFFFFFFLL;
      swift_retain();
      v45 = v58;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        a1 = sub_1B0FEEA88(a1);
      v51 = v57;
      if (v57 < a1[2])
      {
LABEL_45:
        a1[v51 + 4] = a4;
        swift_release();
        sub_1B0F571D8(v19);
        swift_release();
        sub_1B0F571D8(v19);
        sub_1B0F6C7D4(v59, v45, v17, v18);
        swift_release();
        swift_release();
        goto LABEL_15;
      }
      __break(1u);
    }
    v55 = *(_QWORD *)(v45 + 16);
    swift_retain();
    sub_1B0F5A880(v19);
    swift_retain();
    sub_1B0FE93AC(v61, v55, v19, a3, a4);
    if (v5)
      goto LABEL_41;
    a4 = v61[0];
    swift_retain();
    result = swift_isUniquelyReferenced_nonNull_native();
    v45 = v58;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1B0FEEA88(a1);
      a1 = (_QWORD *)result;
    }
    v51 = v57;
    if (v57 >= a1[2])
    {
      __break(1u);
      return result;
    }
    goto LABEL_45;
  }
  if (qword_1EEEDE0B0 != -1)
    swift_once();
  v6 = sub_1B103467C();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EEF0BA00);
  v7 = sub_1B1034664();
  v8 = sub_1B1035E34();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v9 = 0;
    _os_log_impl(&dword_1B0F50000, v7, v8, "Referenceable.updatedArray: trying to modify an array using an key subreference", v9, 2u);
    MEMORY[0x1B5E15248](v9, -1, -1);
  }

  sub_1B0FA58DC();
  swift_allocError();
  *(_QWORD *)v10 = 4;
  *(_QWORD *)(v10 + 8) = 0;
  *(_QWORD *)(v10 + 16) = 0;
  *(_QWORD *)(v10 + 24) = 0;
  *(_BYTE *)(v10 + 32) = 5;
  return swift_willThrow();
}

uint64_t RemoteStateStore.init()()
{
  return sub_1B0FEE188(&qword_1EEEDE408, &qword_1EEEE0760, &qword_1EEEE0768, &qword_1EEEDE410);
}

uint64_t StateDict.init(parent:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;

  v2 = v1;
  v4 = *(_QWORD **)v1;
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  sub_1B1035D20();
  v6 = sub_1B103470C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v21 - v8;
  v10 = v2 + v4[13];
  v11 = sub_1B1035CF0();
  v12 = v4[10];
  v13 = v4[12];
  v22 = v11;
  v14 = sub_1B1035D20();
  sub_1B0FEE904((uint64_t)&v22, v14);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v10, v9, v6);
  v15 = *(_QWORD *)(*(_QWORD *)v2 + 112);
  swift_getTupleTypeMetadata2();
  sub_1B1035CF0();
  *(_QWORD *)(v2 + v15) = sub_1B1035B04();
  *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 128)) = 0;
  *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 120)) = a1;
  if (a1)
  {
    v16 = type metadata accessor for StateDict(0, v12, v5, v13);
    swift_retain();
    MEMORY[0x1B5E15188](&protocol conformance descriptor for StateDict<A, B>, v16);
    v22 = sub_1B10346A0();
    v17 = swift_allocObject();
    swift_weakInit();
    v18 = (_QWORD *)swift_allocObject();
    v18[2] = v12;
    v18[3] = v5;
    v18[4] = v13;
    v18[5] = v17;
    sub_1B10346B8();
    v19 = sub_1B1034718();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    v19 = 0;
  }
  *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 128)) = v19;
  swift_release();
  return v2;
}

uint64_t RemoteStateStore.init(parent:initialSet:referenceKeyMap:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v7 = qword_1EEEE0760;
  swift_retain();
  *(_QWORD *)(v3 + v7) = sub_1B0F553A4(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)(v3 + qword_1EEEE0768) = a1;
  swift_retain_n();
  swift_release();
  v8 = sub_1B0F55C84(a1);
  swift_retain();
  sub_1B0F56FC4(a2, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B0FEF2E8);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v9 = (_QWORD *)(v8 + qword_1EEEE0760);
  swift_beginAccess();
  *v9 = a3;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1B0FEB878(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1B0FECFA8(a1, a2, *a3);
}

uint64_t sub_1B0FEB89C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[2];

  v4 = v3;
  v18[0] = a1;
  v18[1] = a2;
  v8 = (uint64_t *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 112));
  result = swift_beginAccess();
  v10 = *v8;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_7;
  swift_bridgeObjectRetain();
  v11 = sub_1B0F56A3C(a1, a2);
  if ((v12 & 1) == 0)
  {
    result = swift_bridgeObjectRelease();
LABEL_7:
    v16 = *(_QWORD *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 120));
    if (v16)
      return (*(uint64_t (**)(_QWORD *))(*(_QWORD *)v16 + 248))(v18);
    *a3 = 0u;
    a3[1] = 0u;
    return result;
  }
  v13 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v11);
  v14 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v14);
  KeyPath = swift_getKeyPath();
  MEMORY[0x1E0C80A78](KeyPath);
  swift_getKeyPath();
  sub_1B10346F4();
  swift_release();
  result = swift_release();
  if ((v13 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v13 < *(_QWORD *)(v17 + 16))
  {
    sub_1B0F57208(v17 + 32 * v13 + 32, (uint64_t)a3);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1B0FEBA70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[2];

  v4 = v3;
  v18[0] = a1;
  v18[1] = a2;
  v8 = (uint64_t *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 112));
  result = swift_beginAccess();
  v10 = *v8;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_7;
  swift_bridgeObjectRetain();
  v11 = sub_1B0F56A3C(a1, a2);
  if ((v12 & 1) == 0)
  {
    result = swift_bridgeObjectRelease();
LABEL_7:
    v16 = *(_QWORD *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 120));
    if (v16)
      return (*(uint64_t (**)(_QWORD *))(*(_QWORD *)v16 + 248))(v18);
    *a3 = 0xF000000000000007;
    return result;
  }
  v13 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v11);
  v14 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v14);
  KeyPath = swift_getKeyPath();
  MEMORY[0x1E0C80A78](KeyPath);
  swift_getKeyPath();
  sub_1B10346F4();
  swift_release();
  result = swift_release();
  if ((v13 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v13 < *(_QWORD *)(v17 + 16))
  {
    *a3 = *(_QWORD *)(v17 + 8 * v13 + 32);
    swift_retain();
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1B0FEBC44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v5 = *(_QWORD **)v2;
  v6 = (uint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 112));
  swift_beginAccess();
  v7 = *v6;
  v8 = v5[10];
  v9 = v5[12];
  swift_bridgeObjectRetain();
  MEMORY[0x1B5E14594](&v13, a1, v7, v8, MEMORY[0x1E0DEB418], v9);
  swift_bridgeObjectRelease();
  if ((v14 & 1) != 0)
  {
    v10 = *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 120));
    if (v10)
      return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v10 + 248))(a1);
    else
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5[11] - 8) + 56))(a2, 1, 1, v5[11]);
  }
  else
  {
    sub_1B0FECBB0();
    v12 = v5[11];
    sub_1B1035D44();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a2, 0, 1, v12);
  }
}

uint64_t sub_1B0FEBD74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t KeyPath;
  void (*v16)(_QWORD *, _QWORD);
  uint64_t *v17;
  uint64_t *v18;
  _QWORD *v19;
  uint64_t v20;
  void (*v21)(_QWORD *, _QWORD *);
  _QWORD v22[4];
  _QWORD v23[2];

  v23[0] = a2;
  v23[1] = a3;
  if ((~a1 & 0xF000000000000007) == 0)
    return swift_bridgeObjectRelease();
  v6 = v3;
  v9 = (uint64_t *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 112));
  swift_beginAccess();
  v10 = *v9;
  if (*(_QWORD *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    v11 = sub_1B0F56A3C(a2, a3);
    if ((v12 & 1) != 0)
    {
      v13 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v11);
      swift_bridgeObjectRelease();
      v14 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v14);
      KeyPath = swift_getKeyPath();
      MEMORY[0x1E0C80A78](KeyPath);
      swift_getKeyPath();
      v16 = (void (*)(_QWORD *, _QWORD))sub_1B10346E8();
      v18 = v17;
      v19 = (_QWORD *)*v17;
      result = swift_isUniquelyReferenced_nonNull_native();
      *v18 = (uint64_t)v19;
      if ((result & 1) != 0)
      {
        if ((v13 & 0x8000000000000000) == 0)
          goto LABEL_7;
      }
      else
      {
        result = (uint64_t)sub_1B0FEEA88(v19);
        v19 = (_QWORD *)result;
        *v18 = result;
        if ((v13 & 0x8000000000000000) == 0)
        {
LABEL_7:
          if (v13 < v19[2])
          {
            v19[v13 + 4] = a1;
            swift_retain();
            swift_release();
            v16(v22, 0);
            swift_release();
LABEL_12:
            swift_release();
            return sub_1B0FC9D10(a1);
          }
          goto LABEL_17;
        }
      }
      __break(1u);
LABEL_17:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRelease();
  }
  v20 = *(_QWORD *)(v6 + *(_QWORD *)(*(_QWORD *)v6 + 120));
  if (v20)
  {
    v22[0] = a1;
    v21 = *(void (**)(_QWORD *, _QWORD *))(*(_QWORD *)v20 + 256);
    sub_1B0FCC934(a1);
    swift_retain();
    v21(v22, v23);
    goto LABEL_12;
  }
  sub_1B0FECFA8(a2, a3, a1);
  sub_1B0FC9D10(a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B0FEBFF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  void (*v15)(__int128 *, _QWORD);
  uint64_t *v16;
  uint64_t *v17;
  _QWORD *v18;
  uint64_t result;
  uint64_t v20;
  void (*v21)(__int128 *, _QWORD *);
  __int128 v22;
  uint64_t v23;
  uint64_t v24[4];
  _QWORD v25[2];

  v4 = v3;
  v25[0] = a2;
  v25[1] = a3;
  sub_1B0FEEDF0(a1, (uint64_t)&v22);
  if (!v23)
  {
    sub_1B0F5A3AC(a1, &qword_1EEEDE158);
    swift_bridgeObjectRelease();
    return sub_1B0F5A3AC((uint64_t)&v22, &qword_1EEEDE158);
  }
  sub_1B0F5A964(&v22, v24);
  v8 = (uint64_t *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 112));
  swift_beginAccess();
  v9 = *v8;
  if (*(_QWORD *)(v9 + 16))
  {
    swift_bridgeObjectRetain();
    v10 = sub_1B0F56A3C(a2, a3);
    if ((v11 & 1) != 0)
    {
      v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v10);
      swift_bridgeObjectRelease();
      v13 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v13);
      KeyPath = swift_getKeyPath();
      MEMORY[0x1E0C80A78](KeyPath);
      swift_getKeyPath();
      v15 = (void (*)(__int128 *, _QWORD))sub_1B10346E8();
      v17 = v16;
      v18 = (_QWORD *)*v16;
      result = swift_isUniquelyReferenced_nonNull_native();
      *v17 = (uint64_t)v18;
      if ((result & 1) != 0)
      {
        if ((v12 & 0x8000000000000000) == 0)
          goto LABEL_6;
      }
      else
      {
        result = (uint64_t)sub_1B0FEEA9C(v18);
        v18 = (_QWORD *)result;
        *v17 = result;
        if ((v12 & 0x8000000000000000) == 0)
        {
LABEL_6:
          if (v12 < v18[2])
          {
            __swift_assign_boxed_opaque_existential_0(&v18[4 * v12 + 4], v24);
            v15(&v22, 0);
            swift_release();
LABEL_12:
            swift_release();
            sub_1B0F5A3AC(a1, &qword_1EEEDE158);
            return __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
          }
          goto LABEL_17;
        }
      }
      __break(1u);
LABEL_17:
      __break(1u);
      return result;
    }
    swift_bridgeObjectRelease();
  }
  v20 = *(_QWORD *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 120));
  if (v20)
  {
    sub_1B0F57208((uint64_t)v24, (uint64_t)&v22);
    v21 = *(void (**)(__int128 *, _QWORD *))(*(_QWORD *)v20 + 256);
    swift_retain();
    v21(&v22, v25);
    goto LABEL_12;
  }
  sub_1B0FED240(a2, a3, (uint64_t)v24);
  sub_1B0F5A3AC(a1, &qword_1EEEDE158);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B0FEC2A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, char *);
  unint64_t v36;
  uint64_t KeyPath;
  void (*v38)(unint64_t *, _QWORD);
  uint64_t *v39;
  uint64_t *v40;
  uint64_t v41;
  char isClassOrObjCExistentialType;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;

  v54 = a2;
  v52 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v4 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](a1);
  v50 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = v6;
  v7 = *(_QWORD *)(v6 + 88);
  v8 = sub_1B1035E64();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v44 - v14;
  v16 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v15, a1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, v7) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v54, v52);
    v20 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v20(v19, v8);
    return ((uint64_t (*)(char *, uint64_t))v20)(v15, v8);
  }
  else
  {
    v45 = v12;
    v46 = v4;
    v48 = a1;
    v49 = v8;
    v47 = v9;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v15, v7);
    v22 = (uint64_t *)(v53 + *(_QWORD *)(*(_QWORD *)v53 + 112));
    swift_beginAccess();
    v23 = *v22;
    v24 = *(_QWORD *)(v51 + 96);
    swift_bridgeObjectRetain();
    v25 = v54;
    v26 = v52;
    MEMORY[0x1B5E14594](&v55, v54, v23, v52, MEMORY[0x1E0DEB418], v24);
    v27 = swift_bridgeObjectRelease();
    v28 = v7;
    if ((v56 & 1) != 0)
    {
      v29 = *(_QWORD *)(v53 + *(_QWORD *)(*(_QWORD *)v53 + 120));
      v30 = v49;
      if (v29)
      {
        v31 = v46;
        v32 = v50;
        (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v50, v25, v26);
        v33 = v45;
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v45, v18, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v33, 0, 1, v7);
        v34 = v26;
        v35 = *(void (**)(char *, char *))(*(_QWORD *)v29 + 256);
        swift_retain();
        v35(v33, v32);
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v25, v34);
        (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v48, v49);
      }
      else
      {
        sub_1B0FED4DC(v25);
        (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v25, v26);
        (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v48, v30);
      }
      return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v28);
    }
    else
    {
      v36 = v55;
      MEMORY[0x1E0C80A78](v27);
      *(&v44 - 4) = v26;
      *(&v44 - 3) = v28;
      *(&v44 - 2) = v24;
      KeyPath = swift_getKeyPath();
      MEMORY[0x1E0C80A78](KeyPath);
      *(&v44 - 4) = v26;
      *(&v44 - 3) = v28;
      *(&v44 - 2) = v24;
      swift_getKeyPath();
      v38 = (void (*)(unint64_t *, _QWORD))sub_1B10346E8();
      v40 = v39;
      sub_1B1035D20();
      sub_1B1035CE4();
      v41 = *v40;
      sub_1B0FEEA38(v36, v41);
      isClassOrObjCExistentialType = _swift_isClassOrObjCExistentialType();
      v43 = v41 & 0xFFFFFFFFFFFFFF8;
      if ((isClassOrObjCExistentialType & 1) == 0)
        v43 = v41;
      (*(void (**)(unint64_t, char *, uint64_t))(v16 + 24))(v43+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(_QWORD *)(v16 + 72) * v36, v18, v28);
      v38(&v55, 0);
      swift_release();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v54, v26);
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v48, v49);
      return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v28);
    }
  }
}

uint64_t (*RemoteStateStore.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t *a1, char a2)
{
  uint64_t v3;

  a1[2] = a3;
  a1[3] = v3;
  a1[1] = a2;
  RemoteStateStore.subscript.getter(a2, a3, a1);
  return sub_1B0FEC734;
}

uint64_t sub_1B0FEC734(uint64_t *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a1[2];
  v5 = *a1;
  swift_bridgeObjectRetain();
  v6 = a1[1];
  if ((a2 & 1) == 0)
    return sub_1B0FEBD74(v5, v6, v4);
  sub_1B0FCC934(v5);
  sub_1B0FEBD74(v5, v6, v4);
  return sub_1B0FC9D10(v5);
}

uint64_t sub_1B0FEC7C0@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  RemoteStateStore.subscript.getter(a1, a2, &v11);
  v8 = v11;
  if ((~v11 & 0xF000000000000007) != 0)
  {
    sub_1B0F99570(a3, a4);
    sub_1B0FC9D10(v8);
    v9 = 0;
  }
  else
  {
    v9 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a5, v9, 1, a3);
}

uint64_t sub_1B0FEC880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v13 = sub_1B1035E64();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v20 - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v20 - v15, a1, v13);
  v17 = *(_QWORD *)(a7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v16, 1, a7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    v18 = 0xF000000000000007;
  }
  else
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a8 + 8))(&v21, a7, a8);
    v18 = v21;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v16, a7);
  }
  swift_bridgeObjectRetain();
  return sub_1B0FEBD74(v18, a5, a6);
}

void RemoteStateStore.__allocating_init(parent:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void RemoteStateStore.init(parent:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1B0FEC9F8()
{
  return sub_1B0FEE6E0((uint64_t)&qword_1EEEE0760, &qword_1EEEE0768);
}

uint64_t RemoteStateStore.deinit()
{
  return sub_1B0FEE76C(&qword_1EEEDE408, (uint64_t)&qword_1EEEE0760, &qword_1EEEE0768);
}

uint64_t sub_1B0FECA28(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 104);
  v3 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  swift_release();
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  v5 = *(_QWORD *)(v1 + v4);
  *(_QWORD *)(v1 + v4) = 0;
  if (v5)
  {
    do
    {
      if (!swift_isUniquelyReferenced_native())
        break;
      v6 = *(_QWORD *)(v5 + *(_QWORD *)(*(_QWORD *)v5 + 120));
      swift_retain();
      swift_release();
      v5 = v6;
    }
    while (v6);
  }
  swift_release();
  return v1;
}

uint64_t StateDict.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 104);
  sub_1B1035D20();
  v2 = sub_1B103470C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 120);
  v4 = *(_QWORD *)(v0 + v3);
  *(_QWORD *)(v0 + v3) = 0;
  if (v4)
  {
    do
    {
      if (!swift_isUniquelyReferenced_native())
        break;
      v5 = *(_QWORD *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 120));
      swift_retain();
      swift_release();
      v4 = v5;
    }
    while (v5);
  }
  swift_release();
  return v0;
}

uint64_t RemoteStateStore.__deallocating_deinit()
{
  return sub_1B0FEE7FC((void (*)(void))RemoteStateStore.deinit);
}

uint64_t sub_1B0FECBB0()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1B10346F4();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1B0FECC4C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1B1034700();
}

uint64_t sub_1B0FECCE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 120)))
  {
    swift_beginAccess();
    v1 = sub_1B1035B10();
    swift_retain();
    swift_bridgeObjectRetain();
    MEMORY[0x1B5E15188](MEMORY[0x1E0DE9ED0], v1);
    v2 = sub_1B1035D38();
    sub_1B0FECCE4(v2);
    v3 = sub_1B1035F00();
    MEMORY[0x1B5E15188](MEMORY[0x1E0DEC210], v3);
    sub_1B1035D38();
    sub_1B1035CD8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 = sub_1B1035D20();
    MEMORY[0x1B5E15188](MEMORY[0x1E0DEAF38], v4);
    v5 = sub_1B1035F0C();
    swift_release();
  }
  else
  {
    swift_beginAccess();
    v6 = sub_1B1035B10();
    swift_bridgeObjectRetain();
    MEMORY[0x1B5E15188](MEMORY[0x1E0DE9ED0], v6);
    return sub_1B1035F0C();
  }
  return v5;
}

uint64_t sub_1B0FECEC8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return RemoteStateStore.subscript.getter(*a1, a1[1], a2);
}

uint64_t sub_1B0FECED4(uint64_t *a1, uint64_t *a2)
{
  return sub_1B0FEBD74(*a1, *a2, a2[1]);
}

uint64_t (*sub_1B0FECEE4(_QWORD *a1, uint64_t *a2))(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  v5 = a2[1];
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  RemoteStateStore.subscript.getter(v4, v5, a1);
  return sub_1B0FECF20;
}

uint64_t sub_1B0FECF20(uint64_t *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a1[3];
  v5 = *a1;
  swift_bridgeObjectRetain();
  v6 = a1[2];
  if ((a2 & 1) == 0)
    return sub_1B0FEBD74(v5, v6, v4);
  sub_1B0FCC934(v5);
  sub_1B0FEBD74(v5, v6, v4);
  return sub_1B0FC9D10(v5);
}

uint64_t sub_1B0FECFA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void (*v6)(_QWORD *, _QWORD);
  _QWORD **v7;
  _QWORD *v8;
  _QWORD *v9;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t KeyPath;
  uint64_t v15;
  uint64_t *v16;
  char v17;
  uint64_t v20;
  _QWORD v21[4];

  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  v6 = (void (*)(_QWORD *, _QWORD))sub_1B10346E8();
  v8 = v7;
  v9 = *v7;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v8 = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v9 = sub_1B0FDD0F4(0, v9[2] + 1, 1, v9);
    *v8 = v9;
  }
  v12 = v9[2];
  v11 = v9[3];
  if (v12 >= v11 >> 1)
  {
    v9 = sub_1B0FDD0F4((_QWORD *)(v11 > 1), v12 + 1, 1, v9);
    *v8 = v9;
  }
  v9[2] = v12 + 1;
  v9[v12 + 4] = a3;
  v6(v21, 0);
  swift_release();
  v13 = swift_release();
  MEMORY[0x1E0C80A78](v13);
  KeyPath = swift_getKeyPath();
  MEMORY[0x1E0C80A78](KeyPath);
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_1B10346F4();
  swift_release();
  swift_release();
  v15 = *(_QWORD *)(v21[0] + 16);
  swift_bridgeObjectRelease();
  v16 = (uint64_t *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 112));
  swift_beginAccess();
  v17 = swift_isUniquelyReferenced_nonNull_native();
  v20 = *v16;
  *v16 = 0x8000000000000000;
  sub_1B0F9D358(v15 - 1, a1, a2, v17);
  *v16 = v20;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_1B0FED240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void (*v5)(_QWORD *, _QWORD);
  _QWORD **v6;
  _QWORD *v7;
  _QWORD *v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t KeyPath;
  uint64_t v14;
  _QWORD *v15;
  char v16;
  _QWORD v19[4];
  _OWORD v20[2];

  sub_1B0F57208(a3, (uint64_t)v20);
  swift_getKeyPath();
  swift_getKeyPath();
  v5 = (void (*)(_QWORD *, _QWORD))sub_1B10346E8();
  v7 = v6;
  v8 = *v6;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v7 = v8;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v8 = sub_1B0FDD558(0, v8[2] + 1, 1, v8);
    *v7 = v8;
  }
  v11 = v8[2];
  v10 = v8[3];
  if (v11 >= v10 >> 1)
  {
    v8 = sub_1B0FDD558((_QWORD *)(v10 > 1), v11 + 1, 1, v8);
    *v7 = v8;
  }
  v8[2] = v11 + 1;
  sub_1B0F5A964(v20, &v8[4 * v11 + 4]);
  v5(v19, 0);
  swift_release();
  v12 = swift_release();
  MEMORY[0x1E0C80A78](v12);
  KeyPath = swift_getKeyPath();
  MEMORY[0x1E0C80A78](KeyPath);
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_1B10346F4();
  swift_release();
  swift_release();
  v14 = *(_QWORD *)(*(_QWORD *)&v20[0] + 16);
  swift_bridgeObjectRelease();
  v15 = (_QWORD *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 112));
  swift_beginAccess();
  v16 = swift_isUniquelyReferenced_nonNull_native();
  v19[0] = *v15;
  *v15 = 0x8000000000000000;
  sub_1B0F9D358(v14 - 1, a1, a2, v16);
  *v15 = v19[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_1B0FED4DC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(_BYTE *, _QWORD);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  _BYTE v24[32];

  v2 = (_QWORD *)*v1;
  v3 = v2[10];
  v14 = *(_QWORD *)(v3 - 8);
  v15 = a1;
  v4 = MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v2[11];
  MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *))(v9 + 16))((char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = v3;
  v20 = v7;
  v21 = v2[12];
  v10 = v21;
  swift_getKeyPath();
  v16 = v3;
  v17 = v7;
  v18 = v10;
  swift_getKeyPath();
  v11 = (void (*)(_BYTE *, _QWORD))sub_1B10346E8();
  sub_1B1035D20();
  sub_1B1035D14();
  v11(v24, 0);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v6, v15, v3);
  sub_1B0FECBB0();
  v12 = MEMORY[0x1B5E14768]();
  result = swift_bridgeObjectRelease();
  if (__OFSUB__(v12, 1))
  {
    __break(1u);
  }
  else
  {
    v22 = v12 - 1;
    v23 = 0;
    swift_beginAccess();
    sub_1B1035B28();
    sub_1B1035B40();
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1B0FED6BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = a1;
  v1 = sub_1B1035D20();
  return sub_1B0FEE904((uint64_t)&v3, v1);
}

uint64_t sub_1B0FED700@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1B0FECBB0();
  *a1 = result;
  return result;
}

uint64_t sub_1B0FED728()
{
  swift_bridgeObjectRetain();
  return sub_1B0FECC4C();
}

uint64_t StateDict.__allocating_init(parent:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  StateDict.init(parent:)(a1);
  return v2;
}

uint64_t sub_1B0FED78C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;
  uint64_t v9;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v9 = type metadata accessor for StateDict(0, a3, a4, a5);
    MEMORY[0x1B5E15188](&protocol conformance descriptor for StateDict<A, B>, v9);
    sub_1B10346A0();
    swift_release();
    sub_1B10346AC();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B0FED838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;

  v7 = *(_QWORD *)(a4 + a3 - 24);
  v8 = sub_1B1035E64();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v17 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v17 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v17 - v13, a3, v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
  return (*(uint64_t (**)(char *, char *))(**(_QWORD **)a2 + 256))(v12, v14);
}

void (*sub_1B0FED91C(_QWORD *a1, uint64_t a2))(uint64_t a1, char a2)
{
  uint64_t *v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;

  v5 = malloc(0x48uLL);
  *a1 = v5;
  *v5 = v2;
  v6 = *v2;
  v7 = sub_1B1035E64();
  v5[1] = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v5[2] = v8;
  v9 = *(_QWORD *)(v8 + 64);
  v5[3] = malloc(v9);
  v10 = malloc(v9);
  v5[4] = v10;
  v11 = *(_QWORD *)(v6 + 80);
  v5[5] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v5[6] = v12;
  v13 = *(_QWORD *)(v12 + 64);
  v5[7] = malloc(v13);
  v5[8] = malloc(v13);
  (*(void (**)(void))(v12 + 16))();
  sub_1B0FEBC44(a2, (uint64_t)v10);
  return sub_1B0FED9F8;
}

void sub_1B0FED9F8(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 56);
  v4 = *(void **)(*(_QWORD *)a1 + 64);
  if ((a2 & 1) != 0)
  {
    v5 = v2[5];
    v6 = v2[6];
    v8 = (void *)v2[3];
    v7 = (void *)v2[4];
    v9 = v2[1];
    v10 = v2[2];
    (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v8, v7, v9);
    (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v3, v4, v5);
    sub_1B0FEC2A0((uint64_t)v8, (uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
  }
  else
  {
    v8 = (void *)v2[3];
    v7 = (void *)v2[4];
    sub_1B0FEC2A0((uint64_t)v7, (uint64_t)v4);
  }
  free(v4);
  free(v3);
  free(v7);
  free(v8);
  free(v2);
}

uint64_t StateDict.__deallocating_deinit()
{
  StateDict.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1B0FEDAF0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  type metadata accessor for StateDict(0, a1[10], a1[11], a1[12]);
  result = sub_1B10346A0();
  *a2 = result;
  return result;
}

uint64_t StateDict.makeIterator()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1B0FECCE4();
  v1 = sub_1B1035FE4();
  swift_release();
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = v0;
  swift_retain();
  swift_getTupleTypeMetadata2();
  return sub_1B1035EF4();
}

uint64_t sub_1B0FEDBC8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t v11;

  v4 = sub_1B1035E64();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v11 - v6;
  sub_1B1035EE8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_1B0FEDE70((void (*)(char *, char *))sub_1B0FEF180, a1, MEMORY[0x1E0DEDCE8], TupleTypeMetadata2, v9, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1B0FEDCBC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;

  v5 = *a2;
  v6 = *(_QWORD *)(*a2 + 88);
  v19 = sub_1B1035E64();
  v7 = *(_QWORD *)(v19 - 8);
  v8 = MEMORY[0x1E0C80A78](v19);
  v10 = (char *)&v18 - v9;
  v11 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))(v5 + 248))(a1);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v19);
    result = sub_1B1036020();
    __break(1u);
  }
  else
  {
    v14 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v14(v13, v10, v6);
    v15 = *(_QWORD *)(v5 + 80);
    v16 = a3 + *(int *)(swift_getTupleTypeMetadata2() + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a3, a1, v15);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v14)(v16, v13, v6);
  }
  return result;
}

uint64_t sub_1B0FEDE70@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *);
  uint64_t v28;

  v25 = a5;
  v26 = a2;
  v28 = a4;
  v27 = a1;
  v24 = a3;
  v9 = *(_QWORD *)(a3 - 8);
  v10 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v13 + 16);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v10);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v6);
  v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    v27(v18, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v7)
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v25, v12, v24);
    v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(a6, v22, 1);
}

uint64_t sub_1B0FEE000@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = StateDict.makeIterator()();
  result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_1B0FEE03C()
{
  return 0;
}

uint64_t sub_1B0FEE044()
{
  return 2;
}

uint64_t sub_1B0FEE04C(uint64_t *a1)
{
  uint64_t v1;

  type metadata accessor for StateDict(0, a1[10], a1[11], a1[12]);
  v1 = sub_1B0FEEC28();
  swift_release();
  return v1;
}

void sub_1B0FEE098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  type metadata accessor for StateDict(0, a4[10], a4[11], a4[12]);
  JUMPOUT(0x1B5E146F0);
}

uint64_t sub_1B0FEE0F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  type metadata accessor for StateDict(0, a4[10], a4[11], a4[12]);
  return sub_1B1035C9C();
}

uint64_t LocalStateStore.init()()
{
  return sub_1B0FEE188(&qword_1EEEDE3B8, &qword_1EEEE0770, &qword_1EEEE0778, &qword_1EEEDE3C0);
}

uint64_t sub_1B0FEE188(uint64_t *a1, uint64_t *a2, _QWORD *a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];

  v8 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a2;
  swift_retain();
  v13 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v4 + v12) = sub_1B0F553A4(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)(v4 + *a3) = 0;
  swift_release();
  v14 = v4 + *(_QWORD *)(*(_QWORD *)v4 + 104);
  v17[1] = v13;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  sub_1B10346C4();
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v14, v11, v8);
  v15 = *(_QWORD *)(*(_QWORD *)v4 + 112);
  *(_QWORD *)(v4 + v15) = sub_1B0F553B0(v13);
  *(_QWORD *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 128)) = 0;
  *(_QWORD *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 120)) = 0;
  *(_QWORD *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 128)) = 0;
  swift_release();
  return v4;
}

uint64_t sub_1B0FEE2B0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1B0FECFA8(a1, a2, *a3);
}

uint64_t LocalStateStore.__allocating_init(parent:initialSet:referenceKeyMap:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = swift_allocObject();
  v7 = qword_1EEEE0770;
  swift_retain();
  *(_QWORD *)(v6 + v7) = sub_1B0F553A4(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)(v6 + qword_1EEEE0778) = a1;
  swift_retain_n();
  swift_release();
  v8 = sub_1B0F55E48(a1);
  swift_retain();
  sub_1B0FEEC2C(a2, (void (*)(uint64_t, uint64_t, _BYTE *))sub_1B0FEEC24);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  *(_QWORD *)(v8 + qword_1EEEE0770) = a3;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t LocalStateStore.init(parent:initialSet:referenceKeyMap:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;

  v7 = qword_1EEEE0770;
  swift_retain();
  *(_QWORD *)(v3 + v7) = sub_1B0F553A4(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)(v3 + qword_1EEEE0778) = a1;
  swift_retain_n();
  swift_release();
  v8 = sub_1B0F55E48(a1);
  swift_retain();
  sub_1B0FEEC2C(a2, (void (*)(uint64_t, uint64_t, _BYTE *))sub_1B0FEF2E4);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  *(_QWORD *)(v8 + qword_1EEEE0770) = a3;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1B0FEE468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B0FED240(a1, a2, a3);
}

uint64_t LocalStateStore.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  swift_bridgeObjectRetain();
  sub_1B0FEB89C(a1, a2, a3);
  return swift_bridgeObjectRelease();
}

uint64_t LocalStateStore.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE v7[32];

  sub_1B0FEEDF0(a1, (uint64_t)v7);
  sub_1B0FEBFF4((uint64_t)v7, a2, a3);
  return sub_1B0F5A3AC(a1, &qword_1EEEDE158);
}

void (*LocalStateStore.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t *a1, char a2)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = malloc(0x78uLL);
  *a1 = v7;
  v7[13] = a3;
  v7[14] = v3;
  v7[12] = a2;
  swift_bridgeObjectRetain();
  sub_1B0FEB89C(a2, a3, v7);
  swift_bridgeObjectRelease();
  return sub_1B0FEE5A4;
}

void sub_1B0FEE5A4(uint64_t *a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = (_QWORD *)*a1;
  v3 = *a1 + 32;
  if ((a2 & 1) != 0)
  {
    v4 = v2[13];
    v5 = v2[12];
    sub_1B0FEEDF0(*a1, v3);
    sub_1B0FEEDF0(v3, (uint64_t)(v2 + 8));
    swift_bridgeObjectRetain();
    sub_1B0FEBFF4((uint64_t)(v2 + 8), v5, v4);
    sub_1B0F5A3AC(v3, &qword_1EEEDE158);
  }
  else
  {
    v6 = v2[13];
    v7 = v2[12];
    sub_1B0FEEDF0(*a1, v3);
    swift_bridgeObjectRetain();
    sub_1B0FEBFF4(v3, v7, v6);
  }
  sub_1B0F5A3AC((uint64_t)v2, &qword_1EEEDE158);
  free(v2);
}

void LocalStateStore.__allocating_init(parent:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void LocalStateStore.init(parent:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1B0FEE6CC()
{
  return sub_1B0FEE6E0((uint64_t)&qword_1EEEE0770, &qword_1EEEE0778);
}

uint64_t sub_1B0FEE6E0(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v2 + *a2);
  *(_QWORD *)(v2 + *a2) = 0;
  if (v4)
  {
    do
    {
      if (!swift_isUniquelyReferenced_native())
        break;
      v5 = *(_QWORD *)(v4 + *a2);
      swift_retain();
      swift_release();
      v4 = v5;
    }
    while (v5);
  }
  return swift_release();
}

uint64_t LocalStateStore.deinit()
{
  return sub_1B0FEE76C(&qword_1EEEDE3B8, (uint64_t)&qword_1EEEE0770, &qword_1EEEE0778);
}

uint64_t sub_1B0FEE76C(uint64_t *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1B0FECA28(a1);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v4 + *a3);
  *(_QWORD *)(v4 + *a3) = 0;
  if (v5)
  {
    do
    {
      if (!swift_isUniquelyReferenced_native())
        break;
      v6 = *(_QWORD *)(v5 + *a3);
      swift_retain();
      swift_release();
      v5 = v6;
    }
    while (v6);
  }
  swift_release();
  return v4;
}

uint64_t LocalStateStore.__deallocating_deinit()
{
  return sub_1B0FEE7FC((void (*)(void))LocalStateStore.deinit);
}

uint64_t sub_1B0FEE7FC(void (*a1)(void))
{
  a1();
  return swift_deallocClassInstance();
}

uint64_t sub_1B0FEE81C@<X0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  swift_bridgeObjectRetain();
  sub_1B0FEB89C(v3, v4, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B0FEE860(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[32];

  v3 = *a2;
  v4 = a2[1];
  sub_1B0FEEDF0(a1, (uint64_t)v6);
  sub_1B0FEBFF4((uint64_t)v6, v3, v4);
  return sub_1B0F5A3AC(a1, &qword_1EEEDE158);
}

void (*sub_1B0FEE8B8(_QWORD *a1, uint64_t *a2))(_QWORD *a1)
{
  _QWORD *v4;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = LocalStateStore.subscript.modify(v4, *a2, a2[1]);
  return sub_1B0FABD1C;
}

uint64_t sub_1B0FEE904(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a2);
  sub_1B10346C4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, a2);
}

uint64_t sub_1B0FEE99C(uint64_t a1)
{
  uint64_t result;

  if (a1 < 0)
  {
    result = sub_1B1036014();
    __break(1u);
  }
  else if (a1)
  {
    result = sub_1B1035CFC();
    *(_QWORD *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1B0FEEA38(unint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  v5 = a2 & 0xFFFFFFFFFFFFF8;
  if ((result & 1) == 0)
    v5 = a2;
  if (*(_QWORD *)(v5 + 16) <= a1)
    goto LABEL_7;
  return result;
}

_QWORD *sub_1B0FEEA88(_QWORD *a1)
{
  return sub_1B0FDD0F4(0, a1[2], 0, a1);
}

_QWORD *sub_1B0FEEA9C(_QWORD *a1)
{
  return sub_1B0FDD558(0, a1[2], 0, a1);
}

uint64_t sub_1B0FEEAB0()
{
  return objectdestroyTm_4((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1B0F74EA4);
}

uint64_t sub_1B0FEEAC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1B0FEC7C0(v1[7], v1[8], v1[4], v1[5], a1);
}

uint64_t objectdestroy_2Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B0FEEB0C(uint64_t a1)
{
  uint64_t *v1;

  return sub_1B0FEC880(a1, v1[2], v1[3], v1[6], v1[7], v1[8], v1[4], v1[5]);
}

uint64_t type metadata accessor for StateDict(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StateDict);
}

uint64_t sub_1B0FEEB2C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1B0FEEB50()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B0FEEB74(uint64_t a1)
{
  uint64_t *v1;

  return sub_1B0FED78C(a1, v1[5], v1[2], v1[3], v1[4]);
}

uint64_t sub_1B0FEEB80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1B0FECBB0();
  *a1 = result;
  return result;
}

uint64_t sub_1B0FEEBA8()
{
  swift_bridgeObjectRetain();
  return sub_1B0FECC4C();
}

uint64_t sub_1B0FEEBD0()
{
  return 24;
}

__n128 sub_1B0FEEBDC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_1B0FEEBF0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B0FEEC1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1B0FEDBC8(*(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1B0FEEC2C(uint64_t a1, void (*a2)(uint64_t, uint64_t, _BYTE *))
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD v18[2];
  _BYTE v19[32];
  uint64_t v20;

  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v7)
      return swift_release();
    v16 = *(_QWORD *)(v20 + 8 * v15);
    ++v9;
    if (!v16)
    {
      v9 = v15 + 1;
      if (v15 + 1 >= v7)
        return swift_release();
      v16 = *(_QWORD *)(v20 + 8 * v9);
      if (!v16)
      {
        v9 = v15 + 2;
        if (v15 + 2 >= v7)
          return swift_release();
        v16 = *(_QWORD *)(v20 + 8 * v9);
        if (!v16)
        {
          v9 = v15 + 3;
          if (v15 + 3 >= v7)
            return swift_release();
          v16 = *(_QWORD *)(v20 + 8 * v9);
          if (!v16)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v16 - 1) & v16;
    v11 = __clz(__rbit64(v16)) + (v9 << 6);
LABEL_5:
    v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
    v13 = *v12;
    v14 = v12[1];
    sub_1B0F57208(*(_QWORD *)(a1 + 56) + 32 * v11, (uint64_t)v19);
    v18[0] = v13;
    v18[1] = v14;
    swift_bridgeObjectRetain();
    a2(v13, v14, v19);
    result = sub_1B0F5A3AC((uint64_t)v18, &qword_1EEEE0820);
  }
  v17 = v15 + 4;
  if (v17 >= v7)
    return swift_release();
  v16 = *(_QWORD *)(v20 + 8 * v17);
  if (v16)
  {
    v9 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v9 >= v7)
      return swift_release();
    v16 = *(_QWORD *)(v20 + 8 * v9);
    ++v17;
    if (v16)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1B0FEEDF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE158);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1B0FEEE38()
{
  JUMPOUT(0x1B5E15188);
}

uint64_t sub_1B0FEEE48(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(**(_QWORD **)a1 + 248))(a2);
}

uint64_t sub_1B0FEEE78()
{
  return 24;
}

__n128 sub_1B0FEEE84(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t type metadata accessor for RemoteStateStore(uint64_t a1)
{
  return sub_1B0F52C7C(a1, qword_1EEEE0780);
}

uint64_t method lookup function for RemoteStateStore()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1B0FEEEC0()
{
  uint64_t result;
  unint64_t v1;

  sub_1B1035D20();
  result = sub_1B103470C();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for StateDict()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StateDict.__allocating_init(parent:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 232))();
}

uint64_t dispatch thunk of StateDict.keys.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of StateDict.subscript.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of StateDict.subscript.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of StateDict.subscript.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of StateDict.setLocal(key:value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t type metadata accessor for LocalStateStore(uint64_t a1)
{
  return sub_1B0F52C7C(a1, (uint64_t *)&unk_1EEEE0810);
}

uint64_t sub_1B0FEEFB8()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for LocalStateStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LocalStateStore.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 296))();
}

uint64_t dispatch thunk of LocalStateStore.__allocating_init(parent:initialSet:referenceKeyMap:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t *__swift_assign_boxed_opaque_existential_0(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t sub_1B0FEF180@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1B0FEDCBC(a1, v2, a2);
}

uint64_t sub_1B0FEF19C()
{
  return objectdestroyTm_4((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1B0F5E6A0);
}

uint64_t objectdestroyTm_4(void (*a1)(_QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
  return swift_deallocObject();
}

uint64_t sub_1B0FEF1D8()
{
  return objectdestroyTm_3((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1B0F6C7D4);
}

uint64_t sub_1B0FEF1E4()
{
  return objectdestroyTm_3((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1B0F56ADC);
}

uint64_t sub_1B0FEF1F0()
{
  return objectdestroyTm_4((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1B0F5E6A0);
}

uint64_t sub_1B0FEF1FC()
{
  return objectdestroyTm_3((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1B0F6C7D4);
}

uint64_t sub_1B0FEF208()
{
  return objectdestroyTm_3((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1B0F56ADC);
}

uint64_t sub_1B0FEF214()
{
  return objectdestroyTm_4((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1B0F5E6A0);
}

uint64_t sub_1B0FEF220()
{
  return objectdestroyTm_3((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1B0F6C7D4);
}

uint64_t sub_1B0FEF22C()
{
  return objectdestroyTm_3((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1B0F56ADC);
}

uint64_t sub_1B0FEF238()
{
  return objectdestroyTm_3((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1B0F6C7D4);
}

uint64_t sub_1B0FEF244()
{
  return objectdestroyTm_3((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1B0F56ADC);
}

uint64_t sub_1B0FEF250()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B0FEF274()
{
  return objectdestroyTm_4((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1B0F56B08);
}

uint64_t sub_1B0FEF280()
{
  return objectdestroyTm_3((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1B0F6C7D4);
}

uint64_t sub_1B0FEF28C()
{
  return objectdestroyTm_3((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1B0F56ADC);
}

uint64_t sub_1B0FEF298()
{
  return objectdestroy_86Tm(sub_1B0F76F18);
}

uint64_t objectdestroy_86Tm(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;

  sub_1B0F76648(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40), a1);
  return swift_deallocObject();
}

uint64_t sub_1B0FEF2D4()
{
  return objectdestroy_86Tm(sub_1B0F571D8);
}

uint64_t destroy for AnimationAction(uint64_t a1)
{
  uint64_t result;
  int v3;

  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v3 = *(unsigned __int8 *)(a1 + 72);
  if (v3 != 254)
  {
    result = sub_1B0F56ADC(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
    if (v3 != 255)
      return sub_1B0F5E6A0(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), v3 & 1);
  }
  return result;
}

uint64_t initializeWithCopy for AnimationAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(unsigned __int8 *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5 == 254)
  {
    v6 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v6;
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  }
  else
  {
    v7 = *(_QWORD *)(a2 + 16);
    v8 = *(_QWORD *)(a2 + 24);
    v9 = *(_QWORD *)(a2 + 32);
    v10 = *(_BYTE *)(a2 + 40);
    sub_1B0F56B9C(v7, v8, v9, v10);
    *(_QWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 24) = v8;
    *(_QWORD *)(a1 + 32) = v9;
    *(_BYTE *)(a1 + 40) = v10;
    if (v5 == 255)
    {
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
    }
    else
    {
      v11 = *(_QWORD *)(a2 + 48);
      v12 = *(_QWORD *)(a2 + 56);
      v13 = *(_QWORD *)(a2 + 64);
      sub_1B0F5E604(v11, v12, v13, v5 & 1);
      *(_QWORD *)(a1 + 48) = v11;
      *(_QWORD *)(a1 + 56) = v12;
      *(_QWORD *)(a1 + 64) = v13;
      *(_BYTE *)(a1 + 72) = v5 & 1;
    }
  }
  return a1;
}

uint64_t assignWithCopy for AnimationAction(uint64_t a1, uint64_t a2)
{
  __int128 *v4;
  __int128 *v5;
  int v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;
  int v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  __int128 *v27;
  __int128 v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (__int128 *)(a1 + 16);
  v5 = (__int128 *)(a2 + 16);
  v6 = *(unsigned __int8 *)(a2 + 72);
  if (*(unsigned __int8 *)(a1 + 72) == 254)
  {
    if (v6 == 254)
    {
      v7 = *v5;
      v8 = *(_OWORD *)(a2 + 32);
      v9 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
      *(_OWORD *)(a1 + 32) = v8;
      *(_OWORD *)(a1 + 48) = v9;
LABEL_4:
      *v4 = v7;
      return a1;
    }
    v13 = *(_QWORD *)(a2 + 16);
    v14 = *(_QWORD *)(a2 + 24);
    v15 = *(_QWORD *)(a2 + 32);
    v16 = *(_BYTE *)(a2 + 40);
    sub_1B0F56B9C(v13, v14, v15, v16);
    *(_QWORD *)(a1 + 16) = v13;
    *(_QWORD *)(a1 + 24) = v14;
    *(_QWORD *)(a1 + 32) = v15;
    *(_BYTE *)(a1 + 40) = v16;
    v17 = *(unsigned __int8 *)(a2 + 72);
    if (v17 == 255)
    {
      v18 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
      *(_OWORD *)(a1 + 48) = v18;
      return a1;
    }
    goto LABEL_14;
  }
  if (v6 == 254)
  {
    sub_1B0FEF670(a1 + 16);
    v11 = *(_OWORD *)(a2 + 32);
    v10 = *(_OWORD *)(a2 + 48);
    v12 = *v5;
    *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
    *(_OWORD *)(a1 + 32) = v11;
    *(_OWORD *)(a1 + 48) = v10;
    *v4 = v12;
    return a1;
  }
  v19 = *(_QWORD *)(a2 + 16);
  v20 = *(_QWORD *)(a2 + 24);
  v21 = *(_QWORD *)(a2 + 32);
  v22 = *(_BYTE *)(a2 + 40);
  sub_1B0F56B9C(v19, v20, v21, v22);
  v23 = *(_QWORD *)(a1 + 16);
  v24 = *(_QWORD *)(a1 + 24);
  v25 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 16) = v19;
  *(_QWORD *)(a1 + 24) = v20;
  *(_QWORD *)(a1 + 32) = v21;
  v26 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v22;
  sub_1B0F56ADC(v23, v24, v25, v26);
  v4 = (__int128 *)(a1 + 48);
  v27 = (__int128 *)(a2 + 48);
  v17 = *(unsigned __int8 *)(a2 + 72);
  if (*(unsigned __int8 *)(a1 + 72) == 255)
  {
    if (v17 == 255)
    {
      v7 = *v27;
      *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
      goto LABEL_4;
    }
LABEL_14:
    v29 = v17 & 1;
    v30 = *(_QWORD *)(a2 + 48);
    v31 = *(_QWORD *)(a2 + 56);
    v32 = *(_QWORD *)(a2 + 64);
    sub_1B0F5E604(v30, v31, v32, v17 & 1);
    *(_QWORD *)(a1 + 48) = v30;
    *(_QWORD *)(a1 + 56) = v31;
    *(_QWORD *)(a1 + 64) = v32;
    *(_BYTE *)(a1 + 72) = v29;
    return a1;
  }
  if (v17 == 255)
  {
    sub_1B0F7F584(a1 + 48);
    v28 = *(_OWORD *)(a2 + 57);
    *v4 = *v27;
    *(_OWORD *)(a1 + 57) = v28;
  }
  else
  {
    v33 = v17 & 1;
    v34 = *(_QWORD *)(a2 + 48);
    v35 = *(_QWORD *)(a2 + 56);
    v36 = *(_QWORD *)(a2 + 64);
    sub_1B0F5E604(v34, v35, v36, v17 & 1);
    v37 = *(_QWORD *)(a1 + 48);
    v38 = *(_QWORD *)(a1 + 56);
    v39 = *(_QWORD *)(a1 + 64);
    v40 = *(_BYTE *)(a1 + 72);
    *(_QWORD *)(a1 + 48) = v34;
    *(_QWORD *)(a1 + 56) = v35;
    *(_QWORD *)(a1 + 64) = v36;
    *(_BYTE *)(a1 + 72) = v33;
    sub_1B0F5E6A0(v37, v38, v39, v40);
  }
  return a1;
}

uint64_t sub_1B0FEF670(uint64_t a1)
{
  destroy for SwiftUIAnimation(a1);
  return a1;
}

__n128 __swift_memcpy73_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for AnimationAction(uint64_t a1, uint64_t a2)
{
  int v4;
  __int128 v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  int v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 72) == 254)
    goto LABEL_4;
  v4 = *(unsigned __int8 *)(a2 + 72);
  if (v4 == 254)
  {
    sub_1B0FEF670(a1 + 16);
LABEL_4:
    v5 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v5;
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
    return a1;
  }
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_BYTE *)(a2 + 40);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = v6;
  v11 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v7;
  sub_1B0F56ADC(v8, v9, v10, v11);
  v12 = *(unsigned __int8 *)(a1 + 72);
  if (v12 != 255)
  {
    if (v4 != 255)
    {
      v13 = v12 & 1;
      v14 = *(_QWORD *)(a2 + 64);
      v15 = *(_QWORD *)(a1 + 48);
      v16 = *(_QWORD *)(a1 + 56);
      v17 = *(_QWORD *)(a1 + 64);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 64) = v14;
      *(_BYTE *)(a1 + 72) = v4 & 1;
      sub_1B0F5E6A0(v15, v16, v17, v13);
      return a1;
    }
    sub_1B0F7F584(a1 + 48);
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnimationAction(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 73))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AnimationAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 73) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnimationAction()
{
  return &type metadata for AnimationAction;
}

uint64_t sub_1B0FEF8BC(uint64_t a1, uint64_t a2)
{
  __int128 *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  __int128 aBlock;
  uint64_t (*v42)();
  void *v43;
  __int128 v44;
  uint64_t v45;
  char v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  _OWORD v50[3];
  uint64_t v51;

  v5 = sub_1B1035AB0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1B1035AC8();
  v39 = *(_QWORD *)(v9 - 8);
  v40 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)((char *)v50 + 9) = *(__int128 *)((char *)v2 + 57);
  v12 = v2[3];
  v49 = v2[2];
  v50[0] = v12;
  v13 = v2[1];
  v47 = *v2;
  v48 = v13;
  v14 = BYTE8(v50[1]);
  if (BYTE8(v50[1]) == 254)
  {
    v15 = 0;
  }
  else
  {
    v33 = a2;
    v34 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    v35 = v8;
    v36 = v6;
    v37 = v5;
    v16 = a1;
    v17 = *((_QWORD *)&v50[0] + 1);
    v18 = *(_QWORD *)&v50[1];
    v19 = *((_QWORD *)&v49 + 1);
    v20 = *(_QWORD *)&v50[0];
    v22 = *((_QWORD *)&v48 + 1);
    v21 = v49;
    v23 = v48;
    aBlock = v48;
    v42 = (uint64_t (*)())v49;
    LOBYTE(v43) = BYTE8(v49);
    v44 = v50[0];
    v45 = *(_QWORD *)&v50[1];
    v38 = *(void **)&v50[1];
    v46 = BYTE8(v50[1]);
    sub_1B0F56B9C(v48, *((uint64_t *)&v48 + 1), v49, BYTE8(v49));
    sub_1B0F5FD10(v20, v17, v18, v14);
    v32 = v16;
    v24 = v51;
    v15 = sub_1B0FA52E0(v16);
    result = sub_1B0FF0CE8(v23, v22, v21, v19, v20, v17, (uint64_t)v38, v14, (void (*)(void))sub_1B0F56ADC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B0F5FD28);
    v51 = v24;
    if (v24)
      return result;
    v5 = v37;
    v6 = v36;
    v8 = v35;
    v11 = v34;
    a2 = v33;
    a1 = v32;
  }
  sub_1B0FB9F24();
  v38 = (void *)sub_1B1035E40();
  v26 = swift_allocObject();
  v27 = v47;
  *(_OWORD *)(v26 + 40) = v48;
  v28 = v50[0];
  *(_OWORD *)(v26 + 56) = v49;
  *(_OWORD *)(v26 + 72) = v28;
  *(_OWORD *)(v26 + 81) = *(_OWORD *)((char *)v50 + 9);
  *(_QWORD *)(v26 + 16) = v15;
  *(_OWORD *)(v26 + 24) = v27;
  *(_QWORD *)(v26 + 104) = a1;
  *(_QWORD *)(v26 + 112) = a2;
  *(_QWORD *)&v44 = sub_1B0FF0C78;
  *((_QWORD *)&v44 + 1) = v26;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v42 = sub_1B0F71014;
  v43 = &block_descriptor_2;
  v29 = _Block_copy(&aBlock);
  swift_retain();
  sub_1B0F764F8((uint64_t)&v47);
  swift_retain();
  swift_retain();
  swift_release();
  sub_1B1035ABC();
  *(_QWORD *)&aBlock = MEMORY[0x1E0DEE9D8];
  sub_1B0FF0CA0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE9D0);
  sub_1B0F5A7E4((unint64_t *)&qword_1EEEDE9D8, &qword_1EEEDE9D0, MEMORY[0x1E0DEAF38]);
  sub_1B1035ED0();
  v30 = v38;
  MEMORY[0x1B5E148AC](0, v11, v8, v29);
  _Block_release(v29);
  swift_release();

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v11, v40);
}

uint64_t sub_1B0FEFC4C(uint64_t a1)
{
  if (a1)
    swift_retain();
  else
    sub_1B10359E4();
  sub_1B1034874();
  return swift_release();
}

uint64_t sub_1B0FEFCCC(uint64_t result, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = result;
  v5 = v2[1];
  if (*v2)
  {
    v6 = swift_bridgeObjectRetain();
    sub_1B0F75844(v6, (void (*)(uint64_t, uint64_t, _QWORD *))sub_1B0F75CCC);
    result = swift_bridgeObjectRelease();
  }
  if (v5)
  {
    v7 = *(_QWORD *)(v5 + 16);
    if (v7)
    {
      v8 = (_QWORD *)(v5 + 32);
      swift_bridgeObjectRetain();
      do
      {
        v9 = v8[3];
        v10 = v8[4];
        __swift_project_boxed_opaque_existential_1(v8, v9);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 24))(v4, a2, v9, v10);
        v8 += 5;
        --v7;
      }
      while (v7);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1B0FEFF58(char a1)
{
  return *(_QWORD *)&aBody_3[8 * a1];
}

uint64_t sub_1B0FEFF78(char *a1, char *a2)
{
  return sub_1B100E25C(*a1, *a2);
}

uint64_t sub_1B0FEFF84()
{
  return sub_1B1010DFC();
}

uint64_t sub_1B0FEFF8C()
{
  return sub_1B1012D2C();
}

uint64_t sub_1B0FEFF94()
{
  return sub_1B10142B4();
}

uint64_t sub_1B0FEFF9C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B0FF0FC4();
  *a1 = result;
  return result;
}

uint64_t sub_1B0FEFFC8@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B0FEFF58(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B0FEFFF0()
{
  char *v0;

  return sub_1B0FEFF58(*v0);
}

uint64_t sub_1B0FEFFF8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B0FF0FC4();
  *a1 = result;
  return result;
}

uint64_t sub_1B0FF001C()
{
  sub_1B0FF0D98();
  return sub_1B10362B4();
}

uint64_t sub_1B0FF0044()
{
  sub_1B0FF0D98();
  return sub_1B10362C0();
}

uint64_t sub_1B0FF006C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  _QWORD *v31;
  char isUniquelyReferenced_nonNull_native;
  char v33;
  unint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t result;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD v96[3];
  char v97;
  uint64_t v98;
  __int128 v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unsigned __int8 v105;
  uint64_t v106;

  v87 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE480);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0848);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[3];
  v95 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_1B0FF0D98();
  v12 = v94;
  sub_1B1036278();
  v13 = v12;
  if (v12)
  {
    v14 = (uint64_t)v95;
LABEL_27:
    __swift_destroy_boxed_opaque_existential_1(v14);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v90 = v6;
  v88 = v4;
  v89 = v3;
  v85 = v8;
  LOBYTE(v99) = 0;
  v15 = v7;
  if ((sub_1B10360D4() & 1) == 0)
  {
    v90 = 0;
    v14 = (uint64_t)v95;
    goto LABEL_24;
  }
  LOBYTE(v99) = 0;
  sub_1B0F5DCE4();
  v16 = v90;
  sub_1B1036068();
  v81 = v15;
  v94 = 0;
  v17 = v89;
  v18 = sub_1B10360C8();
  v19 = *(_QWORD *)(v18 + 16);
  v82 = v18;
  if (!v19)
  {
    v22 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v23 = v88;
LABEL_23:
    v90 = v22;
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD *, uint64_t))(v23 + 8))(v16, v17);
    swift_bridgeObjectRelease();
    v13 = v94;
    v14 = (uint64_t)v95;
    v15 = v81;
LABEL_24:
    LOBYTE(v96[0]) = 1;
    sub_1B0FF0DDC();
    sub_1B10360A4();
    if (v13)
    {
      (*(void (**)(char *, uint64_t))(v85 + 8))(v10, v15);
      goto LABEL_27;
    }
    v89 = v99;
    v46 = v100;
    v47 = v101;
    v48 = v102;
    v50 = v103;
    v49 = v104;
    v86 = v10;
    v51 = *((_QWORD *)&v99 + 1);
    LODWORD(v88) = v105;
    v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF610);
    LOBYTE(v99) = 2;
    v91 = v46;
    v92 = v51;
    v84 = v47;
    v83 = v48;
    v93 = v50;
    v82 = v49;
    sub_1B0FF0CE8(v89, v51, v46, v47, v48, v50, v49, v88, (void (*)(void))sub_1B0F56B9C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B0F5FD10);
    sub_1B0F972CC();
    sub_1B10360A4();
    v53 = v89;
    v54 = v82;
    v55 = v91;
    v56 = v85;
    if (v106)
    {
      v57 = *(_QWORD *)(v106 + 16);
      if (v57)
      {
        v81 = v15;
        v94 = 0;
        v98 = MEMORY[0x1E0DEE9D8];
        v58 = v106;
        sub_1B0FDD904(0, v57, 0);
        v59 = v58 + 32;
        v60 = v98;
        do
        {
          sub_1B0F97374(v59, (uint64_t)v96);
          sub_1B0F5FD84((uint64_t)v96, (uint64_t)&v99);
          sub_1B0F973B0((uint64_t)v96);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B0FDD904(0, *(_QWORD *)(v60 + 16) + 1, 1);
            v60 = v98;
          }
          v62 = *(_QWORD *)(v60 + 16);
          v61 = *(_QWORD *)(v60 + 24);
          if (v62 >= v61 >> 1)
          {
            sub_1B0FDD904(v61 > 1, v62 + 1, 1);
            v60 = v98;
          }
          *(_QWORD *)(v60 + 16) = v62 + 1;
          sub_1B0F5A0E4(&v99, v60 + 40 * v62 + 32);
          v59 += 40;
          --v57;
        }
        while (v57);
        swift_bridgeObjectRelease();
        v14 = (uint64_t)v95;
        v15 = v81;
        v56 = v85;
        v54 = v82;
        v63 = v89;
        goto LABEL_41;
      }
      swift_bridgeObjectRelease();
      v60 = MEMORY[0x1E0DEE9D8];
      v56 = v85;
    }
    else
    {
      v60 = 0;
    }
    v63 = v53;
LABEL_41:
    (*(void (**)(char *, uint64_t))(v56 + 8))(v86, v15);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    v64 = v92;
    v65 = v55;
    v66 = v55;
    v67 = v84;
    v68 = v83;
    sub_1B0FF0CE8(v63, v92, v66, v84, v83, v93, v54, v88, (void (*)(void))sub_1B0F56B9C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B0F5FD10);
    v69 = v64;
    v70 = v67;
    v71 = v67;
    v72 = v68;
    v73 = v93;
    v74 = v54;
    v75 = v54;
    v76 = v88;
    sub_1B0FF0CE8(v63, v69, v65, v70, v72, v93, v74, v88, (void (*)(void))sub_1B0F56ADC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B0F5FD28);
    v77 = v90;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v78 = v87;
    *v87 = v77;
    v78[1] = v60;
    v79 = v92;
    v78[2] = v89;
    v78[3] = v79;
    v78[4] = v65;
    v78[5] = v71;
    v80 = v83;
    v78[6] = v83;
    v78[7] = v73;
    v78[8] = v75;
    *((_BYTE *)v78 + 72) = v76;
    __swift_destroy_boxed_opaque_existential_1(v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1B0FF0CE8(v89, v79, v65, v84, v80, v73, v75, v76, (void (*)(void))sub_1B0F56ADC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B0F5FD28);
  }
  v20 = v18;
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDEA40);
  v83 = sub_1B0F5A7E4((unint64_t *)&qword_1EEEDEB48, &qword_1EEEDEA40, (uint64_t)&protocol conformance descriptor for Referenceable<A>);
  v21 = (_BYTE *)(v20 + 56);
  v22 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v23 = v88;
  v86 = v10;
  while (1)
  {
    v93 = v19;
    v25 = *((_QWORD *)v21 - 3);
    v26 = *((_QWORD *)v21 - 2);
    v27 = *v21;
    v28 = *((_QWORD *)v21 - 1);
    v96[0] = v25;
    v96[1] = v26;
    v96[2] = v28;
    v97 = v27;
    swift_bridgeObjectRetain_n();
    v29 = v94;
    sub_1B10360BC();
    v94 = v29;
    if (v29)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(_QWORD *, uint64_t))(v23 + 8))(v16, v17);
      (*(void (**)(char *, uint64_t))(v85 + 8))(v10, v81);
      swift_bridgeObjectRelease();
      v14 = (uint64_t)v95;
      goto LABEL_27;
    }
    swift_bridgeObjectRelease();
    v30 = v99;
    v91 = v100;
    LODWORD(v92) = v101;
    v31 = v22;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v96[0] = v31;
    v34 = sub_1B0F56A3C(v25, v26);
    v35 = v31[2];
    v36 = (v33 & 1) == 0;
    v37 = v35 + v36;
    if (__OFADD__(v35, v36))
      break;
    v38 = v33;
    if (v31[3] >= v37)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v22 = (_QWORD *)v96[0];
        if ((v33 & 1) != 0)
          goto LABEL_8;
      }
      else
      {
        sub_1B0F9DEA8();
        v22 = (_QWORD *)v96[0];
        if ((v38 & 1) != 0)
          goto LABEL_8;
      }
    }
    else
    {
      sub_1B0F9C72C(v37, isUniquelyReferenced_nonNull_native);
      v39 = sub_1B0F56A3C(v25, v26);
      if ((v38 & 1) != (v40 & 1))
        goto LABEL_44;
      v34 = v39;
      v22 = (_QWORD *)v96[0];
      if ((v38 & 1) != 0)
      {
LABEL_8:
        v24 = v22[7] + 32 * v34;
        sub_1B0F74EA4(*(_QWORD *)v24, *(_QWORD *)(v24 + 8), *(_QWORD *)(v24 + 16), *(_BYTE *)(v24 + 24));
        *(_OWORD *)v24 = v30;
        *(_QWORD *)(v24 + 16) = v91;
        *(_BYTE *)(v24 + 24) = v92;
        goto LABEL_9;
      }
    }
    v22[(v34 >> 6) + 8] |= 1 << v34;
    v41 = (uint64_t *)(v22[6] + 16 * v34);
    *v41 = v25;
    v41[1] = v26;
    v42 = v22[7] + 32 * v34;
    *(_OWORD *)v42 = v30;
    *(_QWORD *)(v42 + 16) = v91;
    *(_BYTE *)(v42 + 24) = v92;
    v43 = v22[2];
    v44 = __OFADD__(v43, 1);
    v45 = v43 + 1;
    if (v44)
      goto LABEL_43;
    v22[2] = v45;
    swift_bridgeObjectRetain();
LABEL_9:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v21 += 32;
    v19 = v93 - 1;
    v10 = v86;
    v17 = v89;
    v16 = v90;
    v23 = v88;
    if (v93 == 1)
      goto LABEL_23;
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  result = sub_1B10361B8();
  __break(1u);
  return result;
}

uint64_t sub_1B0FF0A18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1B0FEF8BC(a1, a2);
  return sub_1B0F746E8(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_1B0FF0A64@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = *(_QWORD *)(v4 + 8);
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  if (v8)
    v11 = v8;
  else
    v11 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v12 = sub_1B0F5B4C8(v11);
  swift_bridgeObjectRelease();
  sub_1B0F69B0C(v12, a2, a3, v9, v10, a4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B0FF0B18@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1B0FF006C(a1, a2);
}

unint64_t sub_1B0FF0B2C(uint64_t a1)
{
  unint64_t result;

  result = sub_1B0FF0B50();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B0FF0B50()
{
  unint64_t result;

  result = qword_1EEEE0830;
  if (!qword_1EEEE0830)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10442F4, &type metadata for AnimationAction);
    atomic_store(result, (unint64_t *)&qword_1EEEE0830);
  }
  return result;
}

unint64_t sub_1B0FF0B94(uint64_t a1)
{
  unint64_t result;

  result = sub_1B0FF0BB8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B0FF0BB8()
{
  unint64_t result;

  result = qword_1EEEE0840;
  if (!qword_1EEEE0840)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104431C, &type metadata for AnimationAction);
    atomic_store(result, (unint64_t *)&qword_1EEEE0840);
  }
  return result;
}

uint64_t sub_1B0FF0BFC()
{
  uint64_t v0;
  int v1;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(v0 + 96) != 254)
  {
    sub_1B0F56ADC(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
    v1 = *(unsigned __int8 *)(v0 + 96);
    if (v1 != 255)
      sub_1B0F5E6A0(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), v1 & 1);
  }
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B0FF0C78()
{
  uint64_t v0;

  return sub_1B0FEFC4C(*(_QWORD *)(v0 + 16));
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

unint64_t sub_1B0FF0CA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEEDE9C8;
  if (!qword_1EEEDE9C8)
  {
    v1 = sub_1B1035AB0();
    result = MEMORY[0x1B5E15188](MEMORY[0x1E0DEF510], v1);
    atomic_store(result, (unint64_t *)&qword_1EEEDE9C8);
  }
  return result;
}

uint64_t sub_1B0FF0CE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(void), uint64_t (*a10)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t result;

  if (a8 != 254)
  {
    a9();
    return a10(a5, a6, a7, a8);
  }
  return result;
}

uint64_t sub_1B0FF0D54()
{
  return sub_1B0FF0D68();
}

uint64_t sub_1B0FF0D68()
{
  uint64_t v0;

  return sub_1B0FEFCCC(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

unint64_t sub_1B0FF0D98()
{
  unint64_t result;

  result = qword_1EEEE0850;
  if (!qword_1EEEE0850)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1044450, &type metadata for AnimationAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0850);
  }
  return result;
}

unint64_t sub_1B0FF0DDC()
{
  unint64_t result;

  result = qword_1EEEE0858;
  if (!qword_1EEEE0858)
  {
    result = MEMORY[0x1B5E15188]("=", &type metadata for SwiftUIAnimation);
    atomic_store(result, (unint64_t *)&qword_1EEEE0858);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AnimationAction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B0FF0E6C + 4 * byte_1B10442D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B0FF0EA0 + 4 * byte_1B10442D0[v4]))();
}

uint64_t sub_1B0FF0EA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B0FF0EA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B0FF0EB0);
  return result;
}

uint64_t sub_1B0FF0EBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B0FF0EC4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B0FF0EC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B0FF0ED0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AnimationAction.CodingKeys()
{
  return &type metadata for AnimationAction.CodingKeys;
}

unint64_t sub_1B0FF0EF0()
{
  unint64_t result;

  result = qword_1EEEE0860;
  if (!qword_1EEEE0860)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1044428, &type metadata for AnimationAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0860);
  }
  return result;
}

unint64_t sub_1B0FF0F38()
{
  unint64_t result;

  result = qword_1EEEE0868;
  if (!qword_1EEEE0868)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1044360, &type metadata for AnimationAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0868);
  }
  return result;
}

unint64_t sub_1B0FF0F80()
{
  unint64_t result;

  result = qword_1EEEE0870;
  if (!qword_1EEEE0870)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1044388, &type metadata for AnimationAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0870);
  }
  return result;
}

uint64_t sub_1B0FF0FC4()
{
  unint64_t v0;

  v0 = sub_1B103605C();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1B0FF100C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_1B0FF1038(a5, 0xFuLL, a1, a2, a3, a4);
}

uint64_t sub_1B0FF1038(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  void (*v62)(uint64_t *, _QWORD, uint64_t, uint64_t);
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  unint64_t v74;
  char *v75;
  void (*v76)(char *, uint64_t);
  uint64_t result;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  char v82;
  char *v83;
  char v84;
  uint64_t v85;
  void (*v86)(char *, uint64_t, uint64_t, _QWORD);
  uint64_t v87;
  char *v88;
  uint64_t v89;
  void (*v90)(char *, char *, uint64_t);
  char *v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int v97;
  unint64_t v98;
  unint64_t v99;
  void (*v100)(_QWORD, _QWORD, _QWORD);
  uint64_t v101;
  void (*v102)(_QWORD, _QWORD, _QWORD);
  unint64_t v103;
  unint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t (*v110)(char *, uint64_t);
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t *v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  unint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void (*v130)(_QWORD, _QWORD, _QWORD);
  char v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t (*v136)(char *, uint64_t);
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  uint64_t v141;
  char *v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t *v148;
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char v159;
  char *v160;
  uint64_t v161;
  void (*v162)(char *, char *, uint64_t);
  char *v163;
  uint64_t v164;
  char v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char v172;
  uint64_t *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  void (*v177)(char *, uint64_t);
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  unint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t *v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t *v195;
  void (*v196)(char *, uint64_t);
  uint64_t v197;
  char *v198;
  void (*v199)(char *, uint64_t);
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  void (*v204)(char *, char *, uint64_t);
  char *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  int v209;
  unint64_t v210;
  void (*v211)(char *, uint64_t);
  char *v212;
  uint64_t v213;
  uint64_t v214;
  unint64_t v215;
  unint64_t v216;
  char v217;
  char *v218;
  char v219;
  uint64_t v220;
  void (*v221)(char *, uint64_t, uint64_t, _QWORD);
  uint64_t v222;
  char *v223;
  uint64_t v224;
  void (*v225)(char *, char *, uint64_t);
  char *v226;
  uint64_t v227;
  char *v228;
  unint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t *v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  char *v248;
  char *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t *v252;
  char *v253;
  char *v254;
  char *v255;
  uint64_t v256;
  char *v257;
  char *v258;
  uint64_t *v259;
  uint64_t *v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  char *v264;
  char *v265;
  char *v266;
  uint64_t *v267;
  char *v268;
  char *v269;
  uint64_t *v270;
  char *v271;
  uint64_t *v272;
  uint64_t v273;
  char *v274;
  uint64_t (*v275)(char *, uint64_t, uint64_t);
  void (*v276)(uint64_t *, _QWORD, uint64_t, uint64_t);
  void (*v277)(_QWORD, _QWORD, _QWORD);
  uint64_t v278;
  char *v279;
  unint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  void (*v284)(_QWORD, _QWORD, _QWORD);
  char *v285;
  uint64_t v286;
  unint64_t v287;
  uint64_t v288;
  uint64_t v289;
  char v290;
  uint64_t v291;

  v262 = a1;
  v11 = sub_1B1035E64();
  v250 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x1E0C80A78](v11);
  v255 = (char *)&v246 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v248 = (char *)&v246 - v15;
  v256 = *(_QWORD *)(a5 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v249 = (char *)&v246 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v247 = (char *)&v246 - v18;
  v263 = a5;
  v20 = type metadata accessor for Referenceable(0, a5, a6, v19);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v246 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v22);
  v265 = (char *)&v246 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v253 = (char *)&v246 - v28;
  v29 = MEMORY[0x1E0C80A78](v27);
  v268 = (char *)&v246 - v30;
  v31 = MEMORY[0x1E0C80A78](v29);
  v261 = (char *)&v246 - v32;
  MEMORY[0x1E0C80A78](v31);
  v271 = (char *)&v246 - v33;
  v281 = sub_1B1035E64();
  v286 = *(_QWORD *)(v281 - 8);
  v34 = MEMORY[0x1E0C80A78](v281);
  v264 = (char *)&v246 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = MEMORY[0x1E0C80A78](v34);
  v259 = (uint64_t *)((char *)&v246 - v37);
  v38 = MEMORY[0x1E0C80A78](v36);
  v279 = (char *)&v246 - v39;
  v40 = MEMORY[0x1E0C80A78](v38);
  v254 = (char *)&v246 - v41;
  v42 = MEMORY[0x1E0C80A78](v40);
  v252 = (uint64_t *)((char *)&v246 - v43);
  v44 = MEMORY[0x1E0C80A78](v42);
  v257 = (char *)&v246 - v45;
  v46 = MEMORY[0x1E0C80A78](v44);
  v267 = (uint64_t *)((char *)&v246 - v47);
  v48 = MEMORY[0x1E0C80A78](v46);
  v269 = (char *)&v246 - v49;
  v50 = MEMORY[0x1E0C80A78](v48);
  v260 = (uint64_t *)((char *)&v246 - v51);
  v52 = MEMORY[0x1E0C80A78](v50);
  v266 = (char *)&v246 - v53;
  v54 = MEMORY[0x1E0C80A78](v52);
  v272 = (uint64_t *)((char *)&v246 - v55);
  v56 = MEMORY[0x1E0C80A78](v54);
  v270 = (uint64_t *)((char *)&v246 - v57);
  v58 = MEMORY[0x1E0C80A78](v56);
  v274 = (char *)&v246 - v59;
  MEMORY[0x1E0C80A78](v58);
  v61 = (char *)&v246 - v60;
  v282 = v21;
  v62 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v21 + 56);
  v278 = v20;
  v276 = v62;
  v62((uint64_t *)((char *)&v246 - v60), 1, 1, v20);
  if ((a4 & 0x2000000000000000) != 0)
    v63 = HIBYTE(a4) & 0xF;
  else
    v63 = a3 & 0xFFFFFFFFFFFFLL;
  v64 = 4 * v63;
  v65 = a2 >> 14;
  v285 = v61;
  v280 = a4;
  v258 = v24;
  v291 = a3;
  v251 = v11;
  if (a2 >> 14 == 4 * v63)
  {
    v66 = 7;
    if (((a4 >> 60) & ((a3 & 0x800000000000000) == 0)) != 0)
      v66 = 11;
    v277 = (void (*)(_QWORD, _QWORD, _QWORD))(v66 | (v63 << 16));
    v67 = a2;
    v68 = v279;
    goto LABEL_8;
  }
  v246 = v63;
  LOBYTE(v97) = 0;
  v98 = a2;
  v275 = (uint64_t (*)(char *, uint64_t, uint64_t))(4 * v63);
  v99 = a4;
  do
  {
    if ((v97 & 1) != 0)
      v98 = a2;
    v101 = sub_1B1035C6C();
    v102 = v100;
    if (v101 == 46 && v100 == (void (*)(_QWORD, _QWORD, _QWORD))0xE100000000000000
      || (sub_1B1036128() & 1) != 0)
    {
      v284 = (void (*)(_QWORD, _QWORD, _QWORD))v101;
      v103 = v98 >> 14;
      if (v98 >> 14 != v65)
      {
        v277 = v102;
        v104 = a2;
        v105 = v286;
        v106 = v274;
        v107 = v281;
        (*(void (**)(char *, char *, uint64_t))(v286 + 16))(v274, v285, v281);
        v108 = v282;
        v109 = v278;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v282 + 48))(v106, 1, v278) == 1)
        {
          v110 = *(uint64_t (**)(char *, uint64_t))(v105 + 8);
          result = v110(v106, v107);
          if (v65 < v103)
          {
            __break(1u);
LABEL_101:
            __break(1u);
LABEL_102:
            __break(1u);
LABEL_103:
            __break(1u);
            goto LABEL_104;
          }
          v111 = v104;
          v112 = sub_1B1035C84();
          v113 = MEMORY[0x1B5E14648](v112);
          v115 = v114;
          swift_bridgeObjectRelease();
          v116 = v285;
          v110(v285, v107);
          a2 = v111;
          v117 = v272;
          *v272 = v113;
          v117[1] = v115;
          v117[2] = 0xF000000000000007;
          swift_storeEnumTagMultiPayload();
          v118 = v286;
        }
        else
        {
          v122 = v271;
          (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v271, v106, v109);
          result = swift_allocObject();
          if (v65 < v103)
            goto LABEL_101;
          v123 = result;
          v124 = v104;
          v125 = sub_1B1035C84();
          v126 = MEMORY[0x1B5E14648](v125);
          v128 = v127;
          swift_bridgeObjectRelease();
          *(_QWORD *)(v123 + 16) = v126;
          *(_QWORD *)(v123 + 24) = v128;
          *(_QWORD *)(v123 + 32) = 0;
          *(_BYTE *)(v123 + 40) = 0;
          *(_QWORD *)(v123 + 48) = 0xF000000000000007;
          v287 = v123;
          v117 = v270;
          v129 = v283;
          Referenceable.addingSubReference(subReference:)((uint64_t)&v287, v109, v270);
          v283 = v129;
          if (v129)
          {
            swift_release();
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v282 + 8))(v122, v109);
            return (*(uint64_t (**)(char *, uint64_t))(v286 + 8))(v285, v281);
          }
          swift_release();
          (*(void (**)(char *, uint64_t))(v282 + 8))(v122, v109);
          v116 = v285;
          v118 = v286;
          v107 = v281;
          (*(void (**)(char *, uint64_t))(v286 + 8))(v285, v281);
          a2 = v124;
        }
        v276(v117, 0, 1, v109);
        (*(void (**)(char *, uint64_t *, uint64_t))(v118 + 32))(v116, v117, v107);
        v99 = v280;
        v64 = (unint64_t)v275;
        v102 = v277;
      }
      v130 = v284;
      if (v284 == (void (*)(_QWORD, _QWORD, _QWORD))91
        && v102 == (void (*)(_QWORD, _QWORD, _QWORD))0xE100000000000000)
      {
        v98 = 0;
        v97 = 1;
      }
      else
      {
        sub_1B1036128();
        v98 = 0;
        v97 = 1;
        if (v130 == (void (*)(_QWORD, _QWORD, _QWORD))93
          && v102 == (void (*)(_QWORD, _QWORD, _QWORD))0xE100000000000000)
        {
LABEL_57:
          swift_bridgeObjectRelease();
          v98 = 0;
          goto LABEL_58;
        }
      }
      goto LABEL_36;
    }
    if ((v101 != 91 || v102 != (void (*)(_QWORD, _QWORD, _QWORD))0xE100000000000000)
      && (sub_1B1036128() & 1) == 0)
    {
      v97 = 0;
      if (v101 != 93 || v102 != (void (*)(_QWORD, _QWORD, _QWORD))0xE100000000000000)
        goto LABEL_36;
      swift_bridgeObjectRelease();
LABEL_81:
      v203 = v286;
      v204 = *(void (**)(char *, char *, uint64_t))(v286 + 16);
      v205 = v257;
      v206 = v281;
      v204(v257, v285, v281);
      v207 = v282;
      v208 = v278;
      v275 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v282 + 48);
      v209 = v275(v205, 1, v278);
      v279 = (char *)(a2 >> 14);
      v210 = v98 >> 14;
      v277 = (void (*)(_QWORD, _QWORD, _QWORD))v204;
      if (v209 != 1)
      {
        v228 = v253;
        (*(void (**)(char *, char *, uint64_t))(v207 + 32))(v253, v205, v208);
        result = swift_allocObject();
        if ((unint64_t)v279 < v210)
          goto LABEL_107;
        v229 = result;
        v230 = sub_1B1035C84();
        v231 = MEMORY[0x1B5E14648](v230);
        v233 = v232;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v229 + 16) = v231;
        *(_QWORD *)(v229 + 24) = v233;
        *(_QWORD *)(v229 + 32) = 0;
        *(_BYTE *)(v229 + 40) = 0;
        *(_QWORD *)(v229 + 48) = 0xF000000000000007;
        v287 = v229;
        v234 = v252;
        v235 = v283;
        Referenceable.addingSubReference(subReference:)((uint64_t)&v287, v208, v252);
        v223 = v285;
        if (v235)
        {
          swift_release();
          (*(void (**)(char *, uint64_t))(v282 + 8))(v228, v208);
          return (*(uint64_t (**)(char *, uint64_t))(v286 + 8))(v223, v281);
        }
        v284 = (void (*)(_QWORD, _QWORD, _QWORD))a2;
        swift_release();
        v236 = v282;
        (*(void (**)(char *, uint64_t))(v282 + 8))(v228, v208);
        v227 = v208;
        v237 = v234;
        v238 = v286;
        v211 = *(void (**)(char *, uint64_t))(v286 + 8);
        v224 = v281;
        v211(v223, v281);
        v276(v237, 0, 1, v227);
        (*(void (**)(char *, uint64_t *, uint64_t))(v238 + 32))(v223, v237, v224);
        goto LABEL_94;
      }
      v284 = (void (*)(_QWORD, _QWORD, _QWORD))a2;
      v211 = *(void (**)(char *, uint64_t))(v203 + 8);
      result = ((uint64_t (*)(char *, uint64_t))v211)(v205, v206);
      v212 = v279;
      if (v263 == MEMORY[0x1E0DEB418])
      {
        if ((unint64_t)v279 < v210)
          goto LABEL_109;
        v213 = sub_1B1035C84();
        v214 = MEMORY[0x1B5E14648](v213);
        v216 = v215;
        swift_bridgeObjectRelease();
        v287 = sub_1B0FDCD9C(v214, v216);
        LOBYTE(v288) = v217 & 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0530);
        v218 = v248;
        v219 = swift_dynamicCast();
        v220 = v256;
        v221 = *(void (**)(char *, uint64_t, uint64_t, _QWORD))(v256 + 56);
        if ((v219 & 1) != 0)
        {
          v222 = MEMORY[0x1E0DEB418];
          v221(v218, 0, 1, MEMORY[0x1E0DEB418]);
          v223 = v285;
          v224 = v281;
          v211(v285, v281);
          v225 = *(void (**)(char *, char *, uint64_t))(v220 + 32);
          v226 = v247;
          v225(v247, v218, v222);
          v225(v223, v226, v222);
          v227 = v278;
          swift_storeEnumTagMultiPayload();
          v276((uint64_t *)v223, 0, 1, v227);
LABEL_93:
          v236 = v282;
LABEL_94:
          v244 = v254;
          v277(v254, v223, v224);
          if (v275(v244, 1, v227) == 1)
          {
            v211(v244, v224);
            sub_1B0FA58DC();
            swift_allocError();
            *(_QWORD *)v245 = 2;
            *(_QWORD *)(v245 + 8) = 0;
            *(_QWORD *)(v245 + 16) = 0;
            *(_QWORD *)(v245 + 24) = 0;
            *(_BYTE *)(v245 + 32) = 5;
            swift_willThrow();
            return ((uint64_t (*)(char *, uint64_t))v211)(v223, v224);
          }
          else
          {
            v211(v223, v224);
            (*(void (**)(uint64_t, char *, uint64_t))(v236 + 32))(v262, v244, v227);
            return (uint64_t)v284;
          }
        }
        v221(v218, 1, 1, MEMORY[0x1E0DEB418]);
        result = (*(uint64_t (**)(char *, uint64_t))(v250 + 8))(v218, v251);
      }
      if ((unint64_t)v212 < v210)
        goto LABEL_108;
      v239 = sub_1B1035C84();
      v240 = MEMORY[0x1B5E14648](v239);
      v242 = v241;
      swift_bridgeObjectRelease();
      v223 = v285;
      v224 = v281;
      v211(v285, v281);
      v243 = v272;
      *v272 = v240;
      v243[1] = v242;
      v243[2] = 0xF000000000000007;
      v227 = v278;
      swift_storeEnumTagMultiPayload();
      v276(v243, 0, 1, v227);
      (*(void (**)(char *, uint64_t *, uint64_t))(v286 + 32))(v223, v243, v224);
      goto LABEL_93;
    }
    v277 = v102;
    v273 = v98;
    v119 = v98 >> 14;
    if (v98 >> 14 == v65)
    {
      v120 = v281;
      v121 = v285;
    }
    else
    {
      v284 = (void (*)(_QWORD, _QWORD, _QWORD))a2;
      v132 = v286;
      v133 = v266;
      v120 = v281;
      (*(void (**)(char *, char *, uint64_t))(v286 + 16))(v266, v285, v281);
      v134 = v282;
      v135 = v278;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v282 + 48))(v133, 1, v278) == 1)
      {
        v136 = *(uint64_t (**)(char *, uint64_t))(v132 + 8);
        result = v136(v133, v120);
        if (v65 < v119)
          goto LABEL_102;
        v99 = v280;
        v137 = sub_1B1035C84();
        v273 = MEMORY[0x1B5E14648](v137);
        v139 = v138;
        swift_bridgeObjectRelease();
        v121 = v285;
        v136(v285, v120);
        v140 = v272;
        *v272 = v273;
        v140[1] = v139;
        v140[2] = 0xF000000000000007;
        swift_storeEnumTagMultiPayload();
        v141 = v286;
      }
      else
      {
        v142 = v261;
        (*(void (**)(char *, char *, uint64_t))(v134 + 32))(v261, v133, v135);
        result = swift_allocObject();
        if (v65 < v119)
          goto LABEL_103;
        v143 = result;
        v144 = sub_1B1035C84();
        v145 = MEMORY[0x1B5E14648](v144);
        v147 = v146;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v143 + 16) = v145;
        *(_QWORD *)(v143 + 24) = v147;
        *(_QWORD *)(v143 + 32) = 0;
        *(_BYTE *)(v143 + 40) = 0;
        *(_QWORD *)(v143 + 48) = 0xF000000000000007;
        v287 = v143;
        v148 = v260;
        v149 = v283;
        Referenceable.addingSubReference(subReference:)((uint64_t)&v287, v135, v260);
        v283 = v149;
        if (v149)
        {
          swift_release();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v282 + 8))(v142, v135);
          return (*(uint64_t (**)(char *, uint64_t))(v286 + 8))(v285, v281);
        }
        swift_release();
        (*(void (**)(char *, uint64_t))(v282 + 8))(v142, v135);
        v121 = v285;
        v141 = v286;
        v120 = v281;
        (*(void (**)(char *, uint64_t))(v286 + 8))(v285, v281);
        v140 = v148;
      }
      v276(v140, 0, 1, v135);
      (*(void (**)(char *, uint64_t *, uint64_t))(v141 + 32))(v121, v140, v120);
    }
    v150 = v291;
    v151 = sub_1B1035C0C();
    v152 = v283;
    v153 = sub_1B0FDB2F4((unint64_t)&v287, v151, v150, v99);
    if (v152)
    {
      (*(void (**)(char *, uint64_t))(v286 + 8))(v121, v120);
      return swift_bridgeObjectRelease();
    }
    v283 = 0;
    v284 = (void (*)(_QWORD, _QWORD, _QWORD))v153;
    v154 = v278;
    v156 = v287;
    v155 = v288;
    v157 = v120;
    v158 = v289;
    v159 = v290;
    v160 = v269;
    (*(void (**)(char *, char *, uint64_t))(v286 + 16))(v269, v121, v157);
    v161 = v282;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v282 + 48))(v160, 1, v154) == 1)
    {
      swift_bridgeObjectRelease();
      v199 = *(void (**)(char *, uint64_t))(v286 + 8);
      v200 = v160;
      v201 = v281;
      v199(v200, v281);
      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v202 = 2;
      *(_QWORD *)(v202 + 8) = 0;
      *(_QWORD *)(v202 + 16) = 0;
      *(_QWORD *)(v202 + 24) = 0;
      *(_BYTE *)(v202 + 32) = 5;
      swift_willThrow();
      sub_1B0F5E6A0(v156, v155, v158, v159);
      return ((uint64_t (*)(char *, uint64_t))v199)(v285, v201);
    }
    v162 = *(void (**)(char *, char *, uint64_t))(v161 + 32);
    v163 = v268;
    v162(v268, v160, v154);
    v164 = swift_allocObject();
    *(_QWORD *)(v164 + 16) = v156;
    *(_QWORD *)(v164 + 24) = v155;
    *(_QWORD *)(v164 + 32) = v158;
    *(_BYTE *)(v164 + 40) = v159;
    *(_QWORD *)(v164 + 48) = 0xF000000000000007;
    v287 = v164 | 0x8000000000000000;
    v165 = v159;
    v166 = v156;
    v167 = v156;
    v168 = v158;
    v169 = v155;
    v170 = v155;
    v171 = v168;
    v172 = v165;
    sub_1B0F5E604(v167, v170, v168, v165);
    v173 = v267;
    v174 = v154;
    v176 = v282;
    v175 = v283;
    Referenceable.addingSubReference(subReference:)((uint64_t)&v287, v174, v267);
    v283 = v175;
    if (v175)
    {
      swift_bridgeObjectRelease();
      sub_1B0F5E6A0(v166, v169, v171, v172);
      swift_release();
      (*(void (**)(char *, uint64_t))(v176 + 8))(v163, v278);
      return (*(uint64_t (**)(char *, uint64_t))(v286 + 8))(v285, v281);
    }
    sub_1B0F5E6A0(v166, v169, v171, v172);
    swift_release();
    v177 = *(void (**)(char *, uint64_t))(v176 + 8);
    v178 = v278;
    v177(v163, v278);
    v180 = v285;
    v179 = v286;
    v181 = v281;
    (*(void (**)(char *, uint64_t))(v286 + 8))(v285, v281);
    v97 = 1;
    v276(v173, 0, 1, v178);
    (*(void (**)(char *, uint64_t *, uint64_t))(v179 + 32))(v180, v173, v181);
    v98 = 0;
    if (v101 == 93)
    {
      a2 = (unint64_t)v284;
      v99 = v280;
      v64 = (unint64_t)v275;
      if (v277 == (void (*)(_QWORD, _QWORD, _QWORD))0xE100000000000000)
        goto LABEL_57;
    }
    else
    {
      a2 = (unint64_t)v284;
      v99 = v280;
      v64 = (unint64_t)v275;
    }
LABEL_36:
    v131 = sub_1B1036128();
    swift_bridgeObjectRelease();
    if ((v97 & 1) == 0 && (v131 & 1) != 0)
      goto LABEL_81;
LABEL_58:
    v65 = a2 >> 14;
    if (a2 >> 14 != v64)
    {
      a2 = sub_1B1035C0C();
      v65 = a2 >> 14;
    }
    v68 = v279;
  }
  while (v65 != v64);
  v189 = 7;
  if (((v99 >> 60) & ((v291 & 0x800000000000000) == 0)) != 0)
    v189 = 11;
  v277 = (void (*)(_QWORD, _QWORD, _QWORD))(v189 | (v246 << 16));
  if (v97)
  {
    v93 = v285;
    v96 = v286;
    v89 = v281;
    v95 = v282;
    v190 = v264;
    v94 = v278;
    (*(void (**)(char *, char *, uint64_t))(v286 + 16))(v264, v285, v281);
    goto LABEL_74;
  }
  v67 = v98;
LABEL_8:
  v69 = v286;
  v70 = v281;
  v284 = *(void (**)(_QWORD, _QWORD, _QWORD))(v286 + 16);
  v284(v68, v285, v281);
  v71 = v282;
  v72 = v278;
  v73 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v282 + 48))(v68, 1, v278);
  v273 = v67;
  v74 = v67 >> 14;
  v75 = v265;
  if (v73 == 1)
  {
    v76 = *(void (**)(char *, uint64_t))(v69 + 8);
    v76(v68, v70);
    if (v263 != MEMORY[0x1E0DEB418])
      goto LABEL_71;
    result = v273;
    if (v64 >= v74)
    {
      v78 = sub_1B1035C84();
      v79 = MEMORY[0x1B5E14648](v78);
      v81 = v80;
      swift_bridgeObjectRelease();
      v287 = sub_1B0FDCD9C(v79, v81);
      LOBYTE(v288) = v82 & 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0530);
      v83 = v255;
      v84 = swift_dynamicCast();
      v85 = v256;
      v86 = *(void (**)(char *, uint64_t, uint64_t, _QWORD))(v256 + 56);
      if ((v84 & 1) != 0)
      {
        v87 = MEMORY[0x1E0DEB418];
        v86(v83, 0, 1, MEMORY[0x1E0DEB418]);
        v88 = v285;
        v89 = v281;
        v76(v285, v281);
        v90 = *(void (**)(char *, char *, uint64_t))(v85 + 32);
        v91 = v249;
        v92 = v83;
        v93 = v88;
        v90(v249, v92, v87);
        v90(v88, v91, v87);
        v94 = v278;
        swift_storeEnumTagMultiPayload();
        v276((uint64_t *)v88, 0, 1, v94);
        v95 = v282;
        v96 = v286;
LABEL_73:
        v190 = v264;
        v284(v264, v93, v89);
LABEL_74:
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48))(v190, 1, v94) == 1)
        {
          v196 = *(void (**)(char *, uint64_t))(v96 + 8);
          v196(v190, v89);
          sub_1B0FA58DC();
          swift_allocError();
          *(_QWORD *)v197 = 5;
          *(_QWORD *)(v197 + 8) = 0;
          *(_QWORD *)(v197 + 16) = 0;
          *(_QWORD *)(v197 + 24) = 0;
          *(_BYTE *)(v197 + 32) = 5;
          swift_willThrow();
          return ((uint64_t (*)(char *, uint64_t))v196)(v93, v89);
        }
        else
        {
          v198 = v258;
          (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v258, v190, v94);
          (*(void (**)(uint64_t, char *, uint64_t))(v95 + 16))(v262, v198, v94);
          (*(void (**)(char *, uint64_t))(v95 + 8))(v198, v94);
          (*(void (**)(char *, uint64_t))(v96 + 8))(v93, v89);
          return (uint64_t)v277;
        }
      }
      v86(v83, 1, 1, MEMORY[0x1E0DEB418]);
      (*(void (**)(char *, uint64_t))(v250 + 8))(v83, v251);
LABEL_71:
      result = v273;
      if (v64 >= v74)
      {
        v191 = sub_1B1035C84();
        v192 = MEMORY[0x1B5E14648](v191);
        v194 = v193;
        swift_bridgeObjectRelease();
        v93 = v285;
        v89 = v281;
        v76(v285, v281);
        v195 = v272;
        *v272 = v192;
        v195[1] = v194;
        v195[2] = 0xF000000000000007;
        v94 = v278;
        swift_storeEnumTagMultiPayload();
        v276(v195, 0, 1, v94);
        v96 = v286;
        (*(void (**)(char *, uint64_t *, uint64_t))(v286 + 32))(v93, v195, v89);
        v95 = v282;
        goto LABEL_73;
      }
LABEL_105:
      __break(1u);
    }
    __break(1u);
LABEL_107:
    __break(1u);
LABEL_108:
    __break(1u);
LABEL_109:
    __break(1u);
    return result;
  }
  (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v265, v68, v72);
  result = swift_allocObject();
  if (v64 < v74)
  {
LABEL_104:
    __break(1u);
    goto LABEL_105;
  }
  v182 = result;
  v183 = sub_1B1035C84();
  v184 = MEMORY[0x1B5E14648](v183);
  v186 = v185;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v182 + 16) = v184;
  *(_QWORD *)(v182 + 24) = v186;
  *(_QWORD *)(v182 + 32) = 0;
  *(_BYTE *)(v182 + 40) = 0;
  *(_QWORD *)(v182 + 48) = 0xF000000000000007;
  v287 = v182;
  v187 = v259;
  v188 = v283;
  Referenceable.addingSubReference(subReference:)((uint64_t)&v287, v72, v259);
  if (!v188)
  {
    swift_release();
    v95 = v282;
    (*(void (**)(char *, uint64_t))(v282 + 8))(v75, v72);
    v96 = v286;
    v94 = v72;
    v93 = v285;
    v89 = v281;
    (*(void (**)(char *, uint64_t))(v286 + 8))(v285, v281);
    v276(v187, 0, 1, v94);
    (*(void (**)(char *, uint64_t *, uint64_t))(v96 + 32))(v93, v187, v89);
    goto LABEL_73;
  }
  swift_release();
  (*(void (**)(char *, uint64_t))(v282 + 8))(v75, v72);
  return (*(uint64_t (**)(char *, uint64_t))(v286 + 8))(v285, v281);
}

uint64_t sub_1B0FF2700()
{
  return objectdestroyTm_3((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1B0F56ADC);
}

uint64_t sub_1B0FF270C()
{
  return objectdestroyTm_3((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1B0F6C7D4);
}

uint64_t sub_1B0FF2718()
{
  uint64_t v0;

  v0 = sub_1B103467C();
  __swift_allocate_value_buffer(v0, qword_1EEF0BA00);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EEF0BA00);
  return sub_1B1034670();
}

uint64_t destroy for PaddingModifier(uint64_t result)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(result + 32);
  if (v1 <= 0xFD)
    return sub_1B0F6C7D4(*(_QWORD *)(result + 8), *(_QWORD *)(result + 16), *(_QWORD *)(result + 24), v1);
  return result;
}

uint64_t initializeWithCopy for PaddingModifier(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(unsigned __int8 *)(a2 + 32);
  if (v3 <= 0xFD)
  {
    v4 = *(_QWORD *)(a2 + 8);
    v5 = *(_QWORD *)(a2 + 16);
    v6 = *(_QWORD *)(a2 + 24);
    sub_1B0F6C708(v4, v5, v6, v3);
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 24) = v6;
    *(_BYTE *)(a1 + 32) = v3;
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 17) = *(_OWORD *)(a2 + 17);
  }
  return a1;
}

uint64_t assignWithCopy for PaddingModifier(uint64_t a1, uint64_t a2)
{
  _OWORD *v3;
  _OWORD *v4;
  unsigned int v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = (_OWORD *)(a1 + 8);
  v4 = (_OWORD *)(a2 + 8);
  v5 = *(unsigned __int8 *)(a2 + 32);
  if (*(unsigned __int8 *)(a1 + 32) <= 0xFDu)
  {
    if (v5 <= 0xFD)
    {
      v11 = *(_QWORD *)(a2 + 8);
      v12 = *(_QWORD *)(a2 + 16);
      v13 = *(_QWORD *)(a2 + 24);
      sub_1B0F6C708(v11, v12, v13, v5);
      v14 = *(_QWORD *)(a1 + 8);
      v15 = *(_QWORD *)(a1 + 16);
      v16 = *(_QWORD *)(a1 + 24);
      *(_QWORD *)(a1 + 8) = v11;
      *(_QWORD *)(a1 + 16) = v12;
      *(_QWORD *)(a1 + 24) = v13;
      v17 = *(_BYTE *)(a1 + 32);
      *(_BYTE *)(a1 + 32) = v5;
      sub_1B0F6C7D4(v14, v15, v16, v17);
    }
    else
    {
      sub_1B0F7A924(a1 + 8);
      v7 = *(_OWORD *)((char *)v4 + 9);
      *v3 = *v4;
      *(_OWORD *)((char *)v3 + 9) = v7;
    }
  }
  else if (v5 <= 0xFD)
  {
    v8 = *(_QWORD *)(a2 + 8);
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_QWORD *)(a2 + 24);
    sub_1B0F6C708(v8, v9, v10, v5);
    *(_QWORD *)(a1 + 8) = v8;
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = v10;
    *(_BYTE *)(a1 + 32) = v5;
  }
  else
  {
    v6 = *v4;
    *(_OWORD *)(a1 + 17) = *(_OWORD *)(a2 + 17);
    *v3 = v6;
  }
  return a1;
}

uint64_t assignWithTake for PaddingModifier(uint64_t a1, uint64_t a2)
{
  _OWORD *v3;
  _OWORD *v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = (_OWORD *)(a1 + 8);
  v4 = (_OWORD *)(a2 + 8);
  v5 = *(unsigned __int8 *)(a1 + 32);
  if (v5 <= 0xFD)
  {
    v6 = *(unsigned __int8 *)(a2 + 32);
    if (v6 <= 0xFD)
    {
      v7 = *(_QWORD *)(a2 + 24);
      v8 = *(_QWORD *)(a1 + 8);
      v9 = *(_QWORD *)(a1 + 16);
      v10 = *(_QWORD *)(a1 + 24);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 24) = v7;
      *(_BYTE *)(a1 + 32) = v6;
      sub_1B0F6C7D4(v8, v9, v10, v5);
      return a1;
    }
    sub_1B0F7A924(a1 + 8);
  }
  *v3 = *v4;
  *(_OWORD *)((char *)v3 + 9) = *(_OWORD *)((char *)v4 + 9);
  return a1;
}

uint64_t getEnumTagSinglePayload for PaddingModifier(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 126);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if ((v3 & 0x7E) != 0)
    v4 = 126 - (v3 & 0x7E | (v3 >> 7));
  else
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PaddingModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 126;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
    {
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_QWORD *)(result + 24) = 0;
      *(_BYTE *)(result + 32) = (a2 ^ 0x7F) & 0xFE | ((a2 ^ 0x7F) << 7);
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PaddingModifier()
{
  return &type metadata for PaddingModifier;
}

uint64_t sub_1B0FF2A70(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6874676E656CLL;
  else
    return 0x7365676465;
}

uint64_t sub_1B0FF2AA0(char *a1, char *a2)
{
  return sub_1B100DE7C(*a1, *a2);
}

uint64_t sub_1B0FF2AAC()
{
  return sub_1B1010E64();
}

uint64_t sub_1B0FF2AB4()
{
  return sub_1B1012B3C();
}

uint64_t sub_1B0FF2ABC()
{
  return sub_1B10144DC();
}

uint64_t sub_1B0FF2AC4@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1B103605C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1B0FF2B20@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B0FF2A70(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B0FF2B48()
{
  char *v0;

  return sub_1B0FF2A70(*v0);
}

uint64_t sub_1B0FF2B50@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1B103605C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1B0FF2BB0()
{
  sub_1B0FF3024();
  return sub_1B10362B4();
}

uint64_t sub_1B0FF2BD8()
{
  sub_1B0FF3024();
  return sub_1B10362C0();
}

uint64_t sub_1B0FF2C00(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0880);
  MEMORY[0x1E0C80A78](v3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B0FF3024();
  sub_1B1036278();
  if (!v1)
  {
    sub_1B0FF3068();
    sub_1B10360A4();
    __asm { BR              X10 }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B0FF2DE0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unsigned __int8 *v3;
  unsigned int v6;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v21[2];
  int v22;

  v6 = v3[32];
  if (v6 > 0xFD)
    goto LABEL_4;
  v22 = *v3;
  v9 = *((_QWORD *)v3 + 2);
  v8 = *((_QWORD *)v3 + 3);
  v17 = *((_QWORD *)v3 + 1);
  v18 = v9;
  v19 = v8;
  v20 = v6;
  sub_1B0F6C708(v17, v9, v8, v6);
  sub_1B0FA70A4(a2);
  LOBYTE(a2) = v10;
  sub_1B0F6C7C0(v17, v9, v8, v6);
  if ((a2 & 1) != 0)
  {
LABEL_4:
    v13 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v14 = sub_1B103497C();
    a3[3] = v14;
    v21[0] = v13;
    v21[1] = MEMORY[0x1E0CD9758];
    a3[4] = MEMORY[0x1B5E15188](MEMORY[0x1E0CD9C20], v14, v21);
    __swift_allocate_boxed_opaque_existential_1(a3);
  }
  else
  {
    v11 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v12 = sub_1B103497C();
    a3[3] = v12;
    v16[0] = v11;
    v16[1] = MEMORY[0x1E0CD9758];
    a3[4] = MEMORY[0x1B5E15188](MEMORY[0x1E0CD9C20], v12, v16);
    __swift_allocate_boxed_opaque_existential_1(a3);
  }
  return sub_1B10355F4();
}

uint64_t sub_1B0FF2F94@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B0FF2DE0(a1, a2, a3);
}

uint64_t sub_1B0FF2FA8(_QWORD *a1)
{
  return sub_1B0FF2C00(a1);
}

unint64_t sub_1B0FF2FBC(uint64_t a1)
{
  unint64_t result;

  result = sub_1B0FF2FE0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B0FF2FE0()
{
  unint64_t result;

  result = qword_1EEEE0878;
  if (!qword_1EEEE0878)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10444FC, &type metadata for PaddingModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0878);
  }
  return result;
}

unint64_t sub_1B0FF3024()
{
  unint64_t result;

  result = qword_1EEEE0888;
  if (!qword_1EEEE0888)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104463C, &type metadata for PaddingModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0888);
  }
  return result;
}

unint64_t sub_1B0FF3068()
{
  unint64_t result;

  result = qword_1EEEE0890;
  if (!qword_1EEEE0890)
  {
    result = MEMORY[0x1B5E15188](&unk_1B103C6AC, &type metadata for EdgeSetString);
    atomic_store(result, (unint64_t *)&qword_1EEEE0890);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PaddingModifier.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B0FF30F8 + 4 * byte_1B10444DD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B0FF312C + 4 * byte_1B10444D8[v4]))();
}

uint64_t sub_1B0FF312C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B0FF3134(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B0FF313CLL);
  return result;
}

uint64_t sub_1B0FF3148(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B0FF3150);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B0FF3154(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B0FF315C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PaddingModifier.CodingKeys()
{
  return &type metadata for PaddingModifier.CodingKeys;
}

unint64_t sub_1B0FF317C()
{
  unint64_t result;

  result = qword_1EEEE0898;
  if (!qword_1EEEE0898)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1044614, &type metadata for PaddingModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0898);
  }
  return result;
}

unint64_t sub_1B0FF31C4()
{
  unint64_t result;

  result = qword_1EEEE08A0;
  if (!qword_1EEEE08A0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104454C, &type metadata for PaddingModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE08A0);
  }
  return result;
}

unint64_t sub_1B0FF320C()
{
  unint64_t result;

  result = qword_1EEEE08A8;
  if (!qword_1EEEE08A8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1044574, &type metadata for PaddingModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE08A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessibilityRemoveTraitsModifier()
{
  return &type metadata for AccessibilityRemoveTraitsModifier;
}

ValueMetadata *type metadata accessor for AccessibilityAddTraitsModifier()
{
  return &type metadata for AccessibilityAddTraitsModifier;
}

unint64_t sub_1B0FF3270(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *(_QWORD *)(a2 + 8);
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_BYTE *)(a2 + 24);
    sub_1B0F5E604(*(_QWORD *)a2, v8, v9, v10);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_QWORD *)(a1 + 16) = v9;
    *(_BYTE *)(a1 + 24) = v10;
    v11 = *(int *)(a3 + 20);
    v12 = (char *)(a1 + v11);
    v13 = (char *)(a2 + v11);
    v14 = sub_1B103509C();
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE08B0);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v18 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE08B8);
    v12[v18[9]] = v13[v18[9]];
    *(_QWORD *)&v12[v18[10]] = *(_QWORD *)&v13[v18[10]];
    v12[v18[11]] = v13[v18[11]];
  }
  swift_retain();
  return a1;
}

uint64_t sub_1B0FF33C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1B0F5E6A0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1B103509C();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE08B8);
  return swift_release();
}

uint64_t sub_1B0FF344C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_BYTE *)(a2 + 24);
  sub_1B0F5E604(*(_QWORD *)a2, v7, v8, v9);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 24) = v9;
  v10 = *(int *)(a3 + 20);
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  v13 = sub_1B103509C();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE08B0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v16 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE08B8);
  v11[v16[9]] = v12[v16[9]];
  *(_QWORD *)&v11[v16[10]] = *(_QWORD *)&v12[v16[10]];
  v11[v16[11]] = v12[v16[11]];
  swift_retain();
  return a1;
}

uint64_t sub_1B0FF3574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  int v20;
  uint64_t v21;
  int *v22;

  v6 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_BYTE *)(a2 + 24);
  sub_1B0F5E604(*(_QWORD *)a2, v7, v8, v9);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v8;
  *(_BYTE *)(a1 + 24) = v9;
  sub_1B0F5E6A0(v10, v11, v12, v13);
  v14 = *(int *)(a3 + 20);
  v15 = (char *)(a1 + v14);
  v16 = (char *)(a2 + v14);
  v17 = sub_1B103509C();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  LODWORD(v7) = v19(v15, 1, v17);
  v20 = v19(v16, 1, v17);
  if (!(_DWORD)v7)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 24))(v15, v16, v17);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v17);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE08B0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
LABEL_7:
  v22 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE08B8);
  v15[v22[9]] = v16[v22[9]];
  *(_QWORD *)&v15[v22[10]] = *(_QWORD *)&v16[v22[10]];
  swift_retain();
  swift_release();
  v15[v22[11]] = v16[v22[11]];
  return a1;
}

_OWORD *sub_1B0FF36FC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;

  *a1 = *a2;
  *(_OWORD *)((char *)a1 + 9) = *(_OWORD *)((char *)a2 + 9);
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1B103509C();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE08B0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  v10 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE08B8);
  v5[v10[9]] = v6[v10[9]];
  *(_QWORD *)&v5[v10[10]] = *(_QWORD *)&v6[v10[10]];
  v5[v10[11]] = v6[v10[11]];
  return a1;
}

uint64_t sub_1B0FF37F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  int *v21;

  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  sub_1B0F5E6A0(v8, v9, v10, v11);
  v12 = *(int *)(a3 + 20);
  v13 = (char *)(a1 + v12);
  v14 = (char *)(a2 + v12);
  v15 = sub_1B103509C();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE08B0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_7:
  v21 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE08B8);
  v13[v21[9]] = v14[v21[9]];
  *(_QWORD *)&v13[v21[10]] = *(_QWORD *)&v14[v21[10]];
  swift_release();
  v13[v21[11]] = v14[v21[11]];
  return a1;
}

uint64_t sub_1B0FF395C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B0FF3968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 24);
    if (v4 > 1)
      return (v4 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE08B8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1B0FF39E0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B0FF39EC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 24) = -(char)a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE08B8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for AccessibilityFocusedModifier()
{
  uint64_t result;

  result = qword_1EEEE08C0;
  if (!qword_1EEEE08C0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1B0FF3A9C()
{
  unint64_t v0;

  sub_1B0FF3B10();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1B0FF3B10()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEEE08D0)
  {
    v0 = sub_1B1035078();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEEE08D0);
  }
}

ValueMetadata *type metadata accessor for AccessibilityHeadingModifier()
{
  return &type metadata for AccessibilityHeadingModifier;
}

ValueMetadata *type metadata accessor for AccessibilityChildrenModifier()
{
  return &type metadata for AccessibilityChildrenModifier;
}

ValueMetadata *type metadata accessor for AccessibilityElementModifier()
{
  return &type metadata for AccessibilityElementModifier;
}

uint64_t destroy for AccessibilityActionModifier(uint64_t a1)
{
  uint64_t result;
  unsigned int v3;

  result = swift_bridgeObjectRelease();
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 0xFD)
    return sub_1B0F56ADC(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v3);
  return result;
}

uint64_t initializeWithCopy for AccessibilityActionModifier(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = (_OWORD *)(a1 + 8);
  v5 = *(unsigned __int8 *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v5 <= 0xFD)
  {
    v6 = *(_QWORD *)(a2 + 8);
    v7 = *(_QWORD *)(a2 + 16);
    v8 = *(_QWORD *)(a2 + 24);
    sub_1B0F56B9C(v6, v7, v8, v5);
    *(_QWORD *)(a1 + 8) = v6;
    *(_QWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 24) = v8;
    *(_BYTE *)(a1 + 32) = v5;
  }
  else
  {
    *v4 = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 17) = *(_OWORD *)(a2 + 17);
  }
  return a1;
}

uint64_t assignWithCopy for AccessibilityActionModifier(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  unsigned int v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 8);
  v5 = (_OWORD *)(a2 + 8);
  v6 = *(unsigned __int8 *)(a2 + 32);
  if (*(unsigned __int8 *)(a1 + 32) <= 0xFDu)
  {
    if (v6 <= 0xFD)
    {
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(_QWORD *)(a2 + 16);
      v14 = *(_QWORD *)(a2 + 24);
      sub_1B0F56B9C(v12, v13, v14, v6);
      v15 = *(_QWORD *)(a1 + 8);
      v16 = *(_QWORD *)(a1 + 16);
      v17 = *(_QWORD *)(a1 + 24);
      *(_QWORD *)(a1 + 8) = v12;
      *(_QWORD *)(a1 + 16) = v13;
      *(_QWORD *)(a1 + 24) = v14;
      v18 = *(_BYTE *)(a1 + 32);
      *(_BYTE *)(a1 + 32) = v6;
      sub_1B0F56ADC(v15, v16, v17, v18);
    }
    else
    {
      sub_1B0F5EA14(a1 + 8);
      v8 = *(_OWORD *)(a2 + 17);
      *v4 = *v5;
      *(_OWORD *)(a1 + 17) = v8;
    }
  }
  else if (v6 <= 0xFD)
  {
    v9 = *(_QWORD *)(a2 + 8);
    v10 = *(_QWORD *)(a2 + 16);
    v11 = *(_QWORD *)(a2 + 24);
    sub_1B0F56B9C(v9, v10, v11, v6);
    *(_QWORD *)(a1 + 8) = v9;
    *(_QWORD *)(a1 + 16) = v10;
    *(_QWORD *)(a1 + 24) = v11;
    *(_BYTE *)(a1 + 32) = v6;
  }
  else
  {
    v7 = *v5;
    *(_OWORD *)(a1 + 17) = *(_OWORD *)(a2 + 17);
    *v4 = v7;
  }
  return a1;
}

uint64_t assignWithTake for AccessibilityActionModifier(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(unsigned __int8 *)(a1 + 32);
  if (v4 <= 0xFD)
  {
    v5 = *(unsigned __int8 *)(a2 + 32);
    if (v5 <= 0xFD)
    {
      v6 = *(_QWORD *)(a2 + 24);
      v7 = *(_QWORD *)(a1 + 8);
      v8 = *(_QWORD *)(a1 + 16);
      v9 = *(_QWORD *)(a1 + 24);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 24) = v6;
      *(_BYTE *)(a1 + 32) = v5;
      sub_1B0F56ADC(v7, v8, v9, v4);
      return a1;
    }
    sub_1B0F5EA14(a1 + 8);
  }
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 17) = *(_OWORD *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccessibilityActionModifier(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AccessibilityActionModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessibilityActionModifier()
{
  return &type metadata for AccessibilityActionModifier;
}

ValueMetadata *type metadata accessor for AccessibilityHintModifier()
{
  return &type metadata for AccessibilityHintModifier;
}

ValueMetadata *type metadata accessor for AccessibilityValueModifier()
{
  return &type metadata for AccessibilityValueModifier;
}

ValueMetadata *type metadata accessor for AccessibilityHiddenModifier()
{
  return &type metadata for AccessibilityHiddenModifier;
}

ValueMetadata *type metadata accessor for AccessibilityIdentifierModifier()
{
  return &type metadata for AccessibilityIdentifierModifier;
}

ValueMetadata *type metadata accessor for AccessibilityLabelModifier()
{
  return &type metadata for AccessibilityLabelModifier;
}

uint64_t sub_1B0FF3F1C@<X0>(BOOL *a1@<X8>)
{
  return sub_1B0F89810(a1);
}

uint64_t sub_1B0FF3F28@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1B0FF8674();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B0FF3F50@<X0>(BOOL *a1@<X8>)
{
  return sub_1B0F89868(a1);
}

uint64_t sub_1B0FF3F5C()
{
  sub_1B0FF7CE8();
  return sub_1B10362B4();
}

uint64_t sub_1B0FF3F84()
{
  sub_1B0FF7CE8();
  return sub_1B10362C0();
}

uint64_t sub_1B0FF3FAC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B0FF5048(a1, &qword_1EEEE09D8, (void (*)(void))sub_1B0FF7CE8, (void (*)(__int128 *__return_ptr))MEMORY[0x1E0DECFF0], a2);
}

uint64_t sub_1B0FF3FE0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B0FF440C(a1, a2, MEMORY[0x1E0CDE788], a3);
}

uint64_t sub_1B0FF4008@<X0>(BOOL *a1@<X8>)
{
  return sub_1B0F89810(a1);
}

uint64_t sub_1B0FF4014@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1B0FF86B4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B0FF403C@<X0>(BOOL *a1@<X8>)
{
  return sub_1B0F89868(a1);
}

uint64_t sub_1B0FF4048()
{
  sub_1B0FF7CA4();
  return sub_1B10362B4();
}

uint64_t sub_1B0FF4070()
{
  sub_1B0FF7CA4();
  return sub_1B10362C0();
}

uint64_t sub_1B0FF4098@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B0FF5048(a1, &qword_1EEEE09C8, (void (*)(void))sub_1B0FF7CA4, (void (*)(__int128 *__return_ptr))MEMORY[0x1E0DECFF0], a2);
}

uint64_t sub_1B0FF40CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  unint64_t v11;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16[3];
  unsigned __int8 v17;
  unint64_t v18;

  v8 = *(_QWORD *)(v3 + 8);
  v9 = *(_QWORD *)(v3 + 16);
  v10 = *(_BYTE *)(v3 + 24);
  v16[0] = *(_QWORD *)v3;
  v16[1] = v8;
  v16[2] = v9;
  v17 = v10;
  sub_1B0F56B9C(v16[0], v8, v9, v10);
  v11 = StringResolvable.resolved(with:)(a2);
  if (v4)
    return sub_1B0F56ADC(v16[0], v8, v9, v10);
  v18 = v11;
  sub_1B0F56ADC(v16[0], v8, v9, v10);
  v13 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  MEMORY[0x1E0C80A78](v13);
  (*(void (**)(char *))(v15 + 16))((char *)v16 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16[0] = sub_1B1035840();
  a3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0938);
  a3[4] = sub_1B0FF6F44();
  __swift_allocate_boxed_opaque_existential_1(a3);
  sub_1B1035504();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B0FF425C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B0FF40CC(a1, a2, a3);
}

uint64_t sub_1B0FF4270@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t result;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[2];

  v8 = *(_QWORD *)v3;
  v9 = *(_QWORD *)(v3 + 8);
  v10 = *(_QWORD *)(v3 + 16);
  v11 = *(_BYTE *)(v3 + 24);
  sub_1B0F5E604(v8, v9, v10, v11);
  sub_1B0FD7528(a2, v8, v9, v10, v11);
  result = sub_1B0F5E6A0(v8, v9, v10, v11);
  if (!v4)
  {
    v13 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    MEMORY[0x1E0C80A78](v13);
    (*(void (**)(char *))(v15 + 16))((char *)v16 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    v16[1] = sub_1B1035840();
    a3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0938);
    a3[4] = sub_1B0FF6F44();
    __swift_allocate_boxed_opaque_existential_1(a3);
    sub_1B103548C();
    return swift_release();
  }
  return result;
}

uint64_t sub_1B0FF43D4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B0FF440C(a1, a2, MEMORY[0x1E0CDE698], a3);
}

uint64_t sub_1B0FF43F0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B0FF440C(a1, a2, MEMORY[0x1E0CDE7A0], a3);
}

uint64_t sub_1B0FF440C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t *, _QWORD, _QWORD, _QWORD, unint64_t)@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t *, _QWORD, _QWORD, _QWORD, unint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;

  v9 = *(_QWORD *)v4;
  v10 = *(_QWORD *)(v4 + 8);
  v11 = *(_QWORD *)(v4 + 16);
  v12 = *(_BYTE *)(v4 + 24);
  v23 = a3;
  v24 = v9;
  v25 = v10;
  v26 = v11;
  v27 = v12;
  sub_1B0F56B9C(v9, v10, v11, v12);
  v13 = StringResolvable.resolved(with:)(a2);
  if (v5)
    return sub_1B0F56ADC(v9, v10, v11, v12);
  v16 = v13;
  v17 = v14;
  sub_1B0F56ADC(v9, v10, v11, v12);
  v18 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  MEMORY[0x1E0C80A78](v18);
  (*(void (**)(char *))(v20 + 16))((char *)&v22 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28 = sub_1B1035840();
  v24 = v16;
  v25 = v17;
  a4[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0938);
  a4[4] = sub_1B0FF6F44();
  __swift_allocate_boxed_opaque_existential_1(a4);
  v21 = sub_1B0F8B804();
  v23(&v24, MEMORY[0x1E0CDFD18], MEMORY[0x1E0DEA968], MEMORY[0x1E0CDFD08], v21);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1B0FF45B4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  __int128 v13;
  uint64_t v14;
  char v15;
  _QWORD v16[4];
  uint64_t v17;

  v5 = type metadata accessor for AccessibilityFocusedModifier();
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t)&v8[*(int *)(v6 + 20)];
  sub_1B103506C();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B1036260();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_1B0F5A3AC(v9, &qword_1EEEE08B8);
  }
  else
  {
    v17 = a2;
    __swift_project_boxed_opaque_existential_1(v16, v16[3]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE7E8);
    sub_1B0F5A7E4((unint64_t *)&qword_1EEEDE7F0, &qword_1EEEDE7E8, (uint64_t)&protocol conformance descriptor for Referenceable<A>);
    sub_1B1036164();
    v10 = v14;
    v11 = v15;
    *(_OWORD *)v8 = v13;
    *((_QWORD *)v8 + 2) = v10;
    v8[24] = v11;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    sub_1B0FF74D0((uint64_t)v8, v17);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return sub_1B0FF7B9C((uint64_t)v8);
  }
}

uint64_t sub_1B0FF4744@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  _QWORD v40[2];
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59[2];
  uint64_t v60;
  uint64_t OpaqueTypeConformance2;
  int v62;
  char v63;
  uint64_t v64;

  v5 = v3;
  v48 = a3;
  v8 = type metadata accessor for AccessibilityFocusedModifier();
  v46 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v47 = v9;
  v49 = (uint64_t)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)v5;
  v11 = *(_QWORD *)(v5 + 8);
  v12 = *(_QWORD *)(v5 + 16);
  v13 = *(_BYTE *)(v5 + 24);
  sub_1B0F5E604(*(_QWORD *)v5, v11, v12, v13);
  v14 = sub_1B102A208(a2, v10, v11, v12, v13);
  if (v4)
    return sub_1B0F5E6A0(v10, v11, v12, v13);
  v42 = v14;
  v45 = v15;
  LODWORD(v43) = v16;
  sub_1B0F5E6A0(v10, v11, v12, v13);
  v18 = a1[3];
  v19 = a1[4];
  v41 = __swift_project_boxed_opaque_existential_1(a1, v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE08B8);
  sub_1B1035060();
  v44 = 0;
  v59[0] = v18;
  v59[1] = v19;
  v60 = MEMORY[0x1B5E15134](0, v59, MEMORY[0x1E0CDEAA8], 0);
  v54 = v18;
  v55 = v19;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  __swift_allocate_boxed_opaque_existential_1(v59);
  sub_1B10354BC();
  swift_release();
  swift_release();
  v20 = v60;
  v21 = OpaqueTypeConformance2;
  v40[1] = __swift_project_boxed_opaque_existential_1(v59, v60);
  sub_1B1035048();
  LOBYTE(v64) = v54;
  v22 = v49;
  sub_1B0FF74D0(v5, v49);
  v23 = *(unsigned __int8 *)(v46 + 80);
  v47 += (v23 + 33) & ~v23;
  v24 = (v23 + 33) & ~v23;
  v41 = (_QWORD *)v24;
  v46 = v23 | 7;
  v25 = swift_allocObject();
  v26 = v42;
  v27 = v45;
  *(_QWORD *)(v25 + 16) = v42;
  *(_QWORD *)(v25 + 24) = v27;
  v62 = v43 & 1;
  *(_BYTE *)(v25 + 32) = v43 & 1;
  sub_1B0FF7518(v22, v25 + v24);
  v54 = v20;
  v55 = MEMORY[0x1E0DEAFA0];
  v28 = MEMORY[0x1E0DEAFA0];
  v29 = MEMORY[0x1E0DEAFB8];
  v56 = v21;
  v57 = MEMORY[0x1E0DEAFB8];
  v57 = MEMORY[0x1B5E15134](0, &v54, MEMORY[0x1E0CDF160], 0);
  v50 = v20;
  v51 = v28;
  v52 = v21;
  v53 = v29;
  v58 = swift_getOpaqueTypeConformance2();
  __swift_allocate_boxed_opaque_existential_1(&v54);
  swift_retain();
  swift_retain();
  v30 = v28;
  sub_1B1035624();
  swift_release();
  v32 = v57;
  v31 = v58;
  v43 = __swift_project_boxed_opaque_existential_1(&v54, v57);
  v50 = v26;
  v51 = v27;
  LOBYTE(v29) = v62;
  LOBYTE(v52) = v62;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0958);
  MEMORY[0x1B5E142AC](&v64, v33);
  v63 = v64;
  v34 = v49;
  sub_1B0FF74D0(v5, v49);
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = v26;
  *(_QWORD *)(v35 + 24) = v27;
  *(_BYTE *)(v35 + 32) = v29;
  sub_1B0FF7518(v34, (uint64_t)v41 + v35);
  v50 = v32;
  v51 = v30;
  v36 = v30;
  v52 = v31;
  v37 = MEMORY[0x1E0DEAFB8];
  v53 = MEMORY[0x1E0DEAFB8];
  v38 = MEMORY[0x1B5E15134](0, &v50, MEMORY[0x1E0CDF160], 0);
  v39 = v48;
  v48[3] = v38;
  v50 = v32;
  v51 = v36;
  v52 = v31;
  v53 = v37;
  v39[4] = swift_getOpaqueTypeConformance2();
  __swift_allocate_boxed_opaque_existential_1(v39);
  swift_retain();
  swift_retain();
  sub_1B1035624();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v54);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
}

uint64_t sub_1B0FF4BD8(unsigned __int8 a1)
{
  int v1;
  uint64_t result;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0958);
  MEMORY[0x1B5E142AC](&v4);
  v1 = v4;
  type metadata accessor for AccessibilityFocusedModifier();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE08B8);
  result = sub_1B1035048();
  if (v1 != a1)
  {
    sub_1B1035048();
    LOBYTE(v4) = a1;
    return sub_1B1035858();
  }
  return result;
}

uint64_t sub_1B0FF4CAC(unsigned __int8 a1)
{
  uint64_t v1;
  int v2;
  uint64_t result;
  uint64_t v5;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0958);
  MEMORY[0x1B5E142AC](&v5);
  v2 = v5;
  type metadata accessor for AccessibilityFocusedModifier();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE08B8);
  result = sub_1B1035048();
  if (v2 != a1)
  {
    MEMORY[0x1B5E142AC](&v5, v1);
    return sub_1B1035054();
  }
  return result;
}

uint64_t sub_1B0FF4D88@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B0FF4744(a1, a2, a3);
}

uint64_t sub_1B0FF4D9C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B0FF45B4(a1, a2);
}

uint64_t sub_1B0FF4DB0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15[3];
  unsigned __int8 v16;

  v8 = *(_QWORD *)(v3 + 8);
  v9 = *(_QWORD *)(v3 + 16);
  v10 = *(_BYTE *)(v3 + 24);
  v15[0] = *(_QWORD *)v3;
  v15[1] = v8;
  v15[2] = v9;
  v16 = v10;
  sub_1B0F56B9C(v15[0], v8, v9, v10);
  StringResolvable.resolved(with:)(a2);
  if (v4)
    return sub_1B0F56ADC(v15[0], v8, v9, v10);
  sub_1B0F56ADC(v15[0], v8, v9, v10);
  if (sub_1B0FF7488() == 5)
    return sub_1B0F5FD84((uint64_t)a1, (uint64_t)a3);
  v12 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  MEMORY[0x1E0C80A78](v12);
  (*(void (**)(char *))(v14 + 16))((char *)v15 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15[0] = sub_1B1035840();
  a3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0938);
  a3[4] = sub_1B0FF6F44();
  __swift_allocate_boxed_opaque_existential_1(a3);
  sub_1B10354C8();
  return swift_release();
}

uint64_t sub_1B0FF4F64@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B0FF4DB0(a1, a2, a3);
}

uint64_t sub_1B0FF4F84@<X0>(BOOL *a1@<X8>)
{
  return sub_1B0F89810(a1);
}

uint64_t sub_1B0FF4F90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1B0FF8688();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B0FF4FB8@<X0>(BOOL *a1@<X8>)
{
  return sub_1B0F89868(a1);
}

uint64_t sub_1B0FF4FC4()
{
  sub_1B0FF7C1C();
  return sub_1B10362B4();
}

uint64_t sub_1B0FF4FEC()
{
  sub_1B0FF7C1C();
  return sub_1B10362C0();
}

uint64_t sub_1B0FF5014@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B0FF5048(a1, &qword_1EEEE09A8, (void (*)(void))sub_1B0FF7C1C, (void (*)(__int128 *__return_ptr))MEMORY[0x1E0DECF88], a2);
}

uint64_t sub_1B0FF5048@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, void (*a4)(__int128 *__return_ptr)@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  char v19;
  void (*v20)(__int128 *__return_ptr);

  v20 = a4;
  v15 = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v16 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1B1036278();
  if (!v5)
  {
    v11 = v15;
    sub_1B0F56A98();
    v20(&v17);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v10, v8);
    v12 = v18;
    v13 = v19;
    *(_OWORD *)v11 = v17;
    *(_QWORD *)(v11 + 16) = v12;
    *(_BYTE *)(v11 + 24) = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B0FF518C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  void *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  char *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  __int128 v24;
  char *v25;
  uint64_t *v26;
  uint64_t v27;
  void *v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  uint64_t v32;

  v26 = a3;
  v32 = sub_1B10350E4();
  v27 = *(_QWORD *)(v32 - 8);
  v7 = MEMORY[0x1E0C80A78](v32);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = *(unsigned __int8 *)(v3 + 24);
  if (v11 <= 0xFD)
  {
    v25 = (char *)&v24 - v10;
    v12 = *(_QWORD *)(v3 + 8);
    v14 = *(_QWORD *)(v3 + 16);
    *(_QWORD *)&v29 = *(_QWORD *)v3;
    v13 = v29;
    *((_QWORD *)&v29 + 1) = v12;
    v30 = v14;
    v31 = v11;
    sub_1B0F56B9C(v29, v12, v14, v11);
    StringResolvable.resolved(with:)(a2);
    if (!v4)
    {
      v28 = 0;
      sub_1B0F56B88(v13, v12, v14, v11);
      v21 = sub_1B103605C();
      swift_bridgeObjectRelease();
      if (v21 == 2)
      {
        v24 = *(_OWORD *)(a1 + 3);
        __swift_project_boxed_opaque_existential_1(a1, v24);
        v19 = v25;
        sub_1B10350D8();
      }
      else
      {
        v19 = v25;
        if (v21 == 1)
        {
          v24 = *(_OWORD *)(a1 + 3);
          __swift_project_boxed_opaque_existential_1(a1, v24);
          sub_1B10350CC();
        }
        else
        {
          if (v21)
            goto LABEL_5;
          v24 = *(_OWORD *)(a1 + 3);
          __swift_project_boxed_opaque_existential_1(a1, v24);
          sub_1B10350C0();
        }
      }
      v29 = v24;
      v22 = MEMORY[0x1B5E15134](0, &v29, MEMORY[0x1E0CDEA98], 0);
      v23 = v26;
      v26[3] = v22;
      v29 = v24;
      v23[4] = swift_getOpaqueTypeConformance2();
      __swift_allocate_boxed_opaque_existential_1(v23);
      sub_1B10354B0();
      return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v19, v32);
    }

    sub_1B0F56B88(v13, v12, v14, v11);
    v28 = 0;
  }
  else
  {
    v28 = v4;
  }
LABEL_5:
  v15 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_1B10350C0();
  *(_QWORD *)&v29 = v15;
  *((_QWORD *)&v29 + 1) = v16;
  v17 = MEMORY[0x1B5E15134](0, &v29, MEMORY[0x1E0CDEA98], 0);
  v18 = v26;
  v26[3] = v17;
  *(_QWORD *)&v29 = v15;
  *((_QWORD *)&v29 + 1) = v16;
  v18[4] = swift_getOpaqueTypeConformance2();
  __swift_allocate_boxed_opaque_existential_1(v18);
  sub_1B10354B0();
  v19 = v9;
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v19, v32);
}

uint64_t sub_1B0FF5470@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B0FF518C(a1, a2, a3);
}

uint64_t sub_1B0FF5484@<X0>(BOOL *a1@<X8>)
{
  return sub_1B0F89810(a1);
}

uint64_t sub_1B0FF5490@<X0>(BOOL *a1@<X8>)
{
  return sub_1B0F89868(a1);
}

uint64_t sub_1B0FF549C()
{
  sub_1B0FF7BD8();
  return sub_1B10362B4();
}

uint64_t sub_1B0FF54C4()
{
  sub_1B0FF7BD8();
  return sub_1B10362C0();
}

uint64_t sub_1B0FF54EC()
{
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDEBF8);
  sub_1B0F5A7E4(&qword_1EEEDEC00, &qword_1EEEDEBF8, MEMORY[0x1E0DEAF48]);
  sub_1B0F64174();
  return sub_1B10358AC();
}

uint64_t sub_1B0FF55A4(char a1)
{
  if ((a1 & 1) != 0)
    return 0x694B6E6F69746361;
  else
    return 0x6E6F69746361;
}

uint64_t sub_1B0FF55DC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a1[3];
  v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEDEBE0);
  v6 = sub_1B0F78F60(&qword_1EEEDEBF0, &qword_1EEEDEBE0, (uint64_t (*)(void))sub_1B0F64174, MEMORY[0x1E0CDFEE8]);
  v8 = v4;
  v9 = v5;
  v10 = v3;
  v11 = v6;
  a2[3] = MEMORY[0x1B5E15134](0, &v8, MEMORY[0x1E0CDEB20], 0);
  v8 = v4;
  v9 = v5;
  v10 = v3;
  v11 = v6;
  a2[4] = swift_getOpaqueTypeConformance2();
  __swift_allocate_boxed_opaque_existential_1(a2);
  return sub_1B10354D4();
}

_QWORD *sub_1B0FF56E8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1B0FF7868(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1B0FF5710(char *a1, char *a2)
{
  return sub_1B100C57C(*a1, *a2);
}

uint64_t sub_1B0FF571C()
{
  return sub_1B1010EDC();
}

uint64_t sub_1B0FF5724()
{
  return sub_1B1011ECC();
}

uint64_t sub_1B0FF572C()
{
  return sub_1B101565C();
}

uint64_t sub_1B0FF5734@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1B103605C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1B0FF5790@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B0FF55A4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B0FF57B8()
{
  char *v0;

  return sub_1B0FF55A4(*v0);
}

uint64_t sub_1B0FF57C0@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1B103605C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1B0FF5820()
{
  sub_1B0FF7C60();
  return sub_1B10362B4();
}

uint64_t sub_1B0FF5848()
{
  sub_1B0FF7C60();
  return sub_1B10362C0();
}

uint64_t sub_1B0FF5870@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  unsigned __int8 v19;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[40];
  __int128 v25;
  uint64_t v26;
  unsigned __int8 v27;
  uint64_t v28;
  uint64_t v29;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE09B8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B0FF7C60();
  sub_1B1036278();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF610);
  LOBYTE(v25) = 0;
  sub_1B0F78F60((unint64_t *)&qword_1EEEDF618, &qword_1EEEDF610, (uint64_t (*)(void))sub_1B0F97330, MEMORY[0x1E0DEAF40]);
  sub_1B10360BC();
  v22 = v6;
  v23 = v5;
  v10 = v29;
  v11 = *(_QWORD *)(v29 + 16);
  if (v11)
  {
    v21 = a2;
    v28 = MEMORY[0x1E0DEE9D8];
    sub_1B0FDD904(0, v11, 0);
    v20[1] = v10;
    v12 = v10 + 32;
    v13 = v28;
    do
    {
      sub_1B0F97374(v12, (uint64_t)v24);
      sub_1B0F5FD84((uint64_t)v24, (uint64_t)&v25);
      sub_1B0F973B0((uint64_t)v24);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B0FDD904(0, *(_QWORD *)(v13 + 16) + 1, 1);
        v13 = v28;
      }
      v15 = *(_QWORD *)(v13 + 16);
      v14 = *(_QWORD *)(v13 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1B0FDD904(v14 > 1, v15 + 1, 1);
        v13 = v28;
      }
      *(_QWORD *)(v13 + 16) = v15 + 1;
      sub_1B0F5A0E4(&v25, v13 + 40 * v15 + 32);
      v12 += 40;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    a2 = v21;
  }
  else
  {
    swift_bridgeObjectRelease();
    v13 = MEMORY[0x1E0DEE9D8];
  }
  v24[0] = 1;
  sub_1B0F56A98();
  swift_bridgeObjectRetain();
  v16 = v23;
  sub_1B10360A4();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v16);
  v17 = v25;
  v18 = v26;
  v19 = v27;
  swift_bridgeObjectRetain();
  sub_1B0F56C04(v17, *((uint64_t *)&v17 + 1), v18, v19);
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v13;
  *(_OWORD *)(a2 + 8) = v17;
  *(_QWORD *)(a2 + 24) = v18;
  *(_BYTE *)(a2 + 32) = v19;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return sub_1B0F56B88(v17, *((uint64_t *)&v17 + 1), v18, v19);
}

uint64_t sub_1B0FF5BB4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  __int128 *v4;
  void *v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  unsigned __int8 v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t *v34;
  char *v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  char *v47;
  uint64_t v48;
  uint64_t *v49;
  _QWORD v50[2];
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  __int128 v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  unsigned __int8 v63;
  uint64_t v64;

  v56 = a3;
  v57 = a4;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0950);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1B103503C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v54 = (char *)v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = v4[1];
  v61 = *v4;
  v62 = v16;
  v63 = *((_BYTE *)v4 + 32);
  v17 = v63;
  v55 = a2;
  if (v63 <= 0xFDu)
  {
    v51 = (char *)v50 - v15;
    v52 = v10;
    v53 = v11;
    v19 = *((_QWORD *)&v61 + 1);
    v20 = v62;
    v58 = *((_QWORD *)&v61 + 1);
    v59 = v62;
    LOBYTE(v60) = v63;
    sub_1B0F56B9C(*((uint64_t *)&v61 + 1), v62, *((uint64_t *)&v62 + 1), v63);
    StringResolvable.resolved(with:)(a2);
    if (v5)
    {

      sub_1B0F56B88(v19, v20, *((uint64_t *)&v20 + 1), v17);
      v11 = v53;
      v18 = v12;
      goto LABEL_15;
    }
    v50[1] = 0;
    sub_1B0F56B88(v19, v20, *((uint64_t *)&v20 + 1), v17);
    v21 = sub_1B103605C();
    swift_bridgeObjectRelease();
    if (v21 == 2)
    {
      v22 = (uint64_t)v52;
      sub_1B1035030();
      v11 = v53;
      v18 = v12;
    }
    else
    {
      v11 = v53;
      v18 = v12;
      if (v21 == 1)
      {
        v22 = (uint64_t)v52;
        sub_1B1035018();
      }
      else
      {
        if (v21)
        {
          v22 = (uint64_t)v52;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v52, 1, 1, v53);
LABEL_14:
          sub_1B0F5A3AC(v22, &qword_1EEEE0950);
          goto LABEL_15;
        }
        v22 = (uint64_t)v52;
        sub_1B1035024();
      }
    }
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(v22, 0, 1, v11);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v22, 1, v11) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v18 + 32))(v51, v22, v11);
      v23 = a1[3];
      v24 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v23);
      v25 = sub_1B0F5B4C8(v61);
      v27 = v55;
      v26 = v56;
      sub_1B0F69B0C(v25, v55, v56, v23, v24, &v58);
      swift_bridgeObjectRelease();
      v28 = __swift_project_boxed_opaque_existential_1(&v58, v60);
      MEMORY[0x1E0C80A78](v28);
      (*(void (**)(char *))(v30 + 16))((char *)v50 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
      v64 = sub_1B1035840();
      v31 = swift_allocObject();
      v32 = v62;
      *(_OWORD *)(v31 + 16) = v61;
      *(_OWORD *)(v31 + 32) = v32;
      *(_BYTE *)(v31 + 48) = v63;
      *(_QWORD *)(v31 + 56) = v27;
      *(_QWORD *)(v31 + 64) = v26;
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0938);
      v34 = v57;
      v57[3] = v33;
      v34[4] = sub_1B0FF6F44();
      __swift_allocate_boxed_opaque_existential_1(v34);
      sub_1B0FF73A4((uint64_t)&v61);
      swift_retain();
      swift_retain();
      v35 = v51;
      sub_1B1035480();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v35, v11);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v58);
    }
    goto LABEL_14;
  }
  v18 = v12;
LABEL_15:
  v37 = a1[3];
  v38 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v37);
  v39 = sub_1B0F5B4C8(v61);
  v40 = v55;
  v41 = v56;
  sub_1B0F69B0C(v39, v55, v56, v37, v38, &v58);
  swift_bridgeObjectRelease();
  v42 = __swift_project_boxed_opaque_existential_1(&v58, v60);
  MEMORY[0x1E0C80A78](v42);
  (*(void (**)(char *))(v44 + 16))((char *)v50 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  v64 = sub_1B1035840();
  v45 = swift_allocObject();
  v46 = v62;
  *(_OWORD *)(v45 + 16) = v61;
  *(_OWORD *)(v45 + 32) = v46;
  *(_BYTE *)(v45 + 48) = v63;
  *(_QWORD *)(v45 + 56) = v40;
  *(_QWORD *)(v45 + 64) = v41;
  sub_1B0FF73A4((uint64_t)&v61);
  swift_retain();
  swift_retain();
  v47 = v54;
  sub_1B1035024();
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0938);
  v49 = v57;
  v57[3] = v48;
  v49[4] = sub_1B0FF6F44();
  __swift_allocate_boxed_opaque_existential_1(v49);
  sub_1B1035480();
  swift_release();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v47, v11);
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v58);
}

uint64_t sub_1B0FF613C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE910);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v13 = sub_1B1035D80();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v11, 1, 1, v13);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = 0;
  v14[3] = 0;
  v14[4] = v12;
  v14[5] = a2;
  v14[6] = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1B0F706F4((uint64_t)v11, a5, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_1B0FF6228@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1B0FF5BB4(a1, a2, a3, a4);
}

uint64_t sub_1B0FF623C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B0FF5870(a1, a2);
}

uint64_t sub_1B0FF6254@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B0FF86D0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B0FF627C()
{
  sub_1B0FF7B58();
  return sub_1B10362B4();
}

uint64_t sub_1B0FF62A4()
{
  sub_1B0FF7B58();
  return sub_1B10362C0();
}

uint64_t sub_1B0FF62CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B0FF63B4(a1, a2, MEMORY[0x1E0CDEBA8], a3);
}

uint64_t sub_1B0FF62E8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B0FF63B4(a1, a2, MEMORY[0x1E0CDEBA8], a3);
}

_QWORD *sub_1B0FF6308@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1B0FF79B4(a1, &qword_1EEEE0988, (void (*)(void))sub_1B0FF7B58);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1B0FF6348()
{
  sub_1B0FF7B14();
  return sub_1B10362B4();
}

uint64_t sub_1B0FF6370()
{
  sub_1B0FF7B14();
  return sub_1B10362C0();
}

uint64_t sub_1B0FF6398@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B0FF63B4(a1, a2, MEMORY[0x1E0CDECD8], a3);
}

uint64_t sub_1B0FF63B4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, void (*a3)(char *, _QWORD, _QWORD)@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  char v25;
  char v26;
  unint64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  char *v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  char *v44;
  char *v45;
  void (*v46)(char *, uint64_t);
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  _QWORD *v57;
  uint64_t *v58;
  void (*v59)(char *, _QWORD, _QWORD);
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  void (*v64)(char *, char *, uint64_t);
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;

  v58 = a4;
  v59 = a3;
  v57 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0960);
  MEMORY[0x1E0C80A78](v6);
  v65 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = sub_1B1034D84();
  v8 = *(_QWORD *)(v67 - 8);
  v9 = MEMORY[0x1E0C80A78](v67);
  v63 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v62 = (char *)&v54 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v14 = MEMORY[0x1E0C80A78](v13);
  v66 = (char *)&v54 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v60 = (char *)&v54 - v17;
  MEMORY[0x1E0C80A78](v16);
  v56 = (char *)&v54 - v18;
  swift_retain();
  v19 = swift_bridgeObjectRetain();
  v20 = sub_1B0FF76E4(v19, a2);
  v55 = v4;
  swift_bridgeObjectRelease();
  swift_release();
  v21 = v20[2];
  v22 = MEMORY[0x1E0DEE9D8];
  if (v21)
  {
    swift_bridgeObjectRetain();
    v23 = v20 + 5;
    v24 = (char *)MEMORY[0x1E0DEE9D8];
    do
    {
      swift_bridgeObjectRetain();
      v25 = sub_1B0FF769C();
      if (v25 != 16)
      {
        v26 = v25;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v24 = sub_1B0FDD214(0, *((_QWORD *)v24 + 2) + 1, 1, v24);
        v28 = *((_QWORD *)v24 + 2);
        v27 = *((_QWORD *)v24 + 3);
        if (v28 >= v27 >> 1)
          v24 = sub_1B0FDD214((char *)(v27 > 1), v28 + 1, 1, v24);
        *((_QWORD *)v24 + 2) = v28 + 1;
        v24[v28 + 32] = v26;
      }
      v23 += 2;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease();
    v22 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v24 = (char *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  v29 = *((_QWORD *)v24 + 2);
  if (v29)
  {
    v68 = v22;
    sub_1B0FDD8BC(0, v29, 0);
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  v30 = MEMORY[0x1E0DEE9D8];
  v31 = v65;
  v32 = v67;
  v33 = v60;
  sub_1B1034D78();
  v64 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v64(v66, v33, v32);
  v34 = *(_QWORD *)(v30 + 16);
  v54 = v30;
  if (v34)
  {
    v35 = (char *)(v30 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)));
    v61 = *(_QWORD *)(v8 + 72);
    swift_bridgeObjectRetain();
    v36 = v63;
    while (1)
    {
      v64(v31, v35, v32);
      v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
      v37(v31, 0, 1, v32);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v31, 1, v32) == 1)
        break;
      v38 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v39 = v8;
      v40 = v62;
      v38(v62, v31, v32);
      v41 = v66;
      sub_1B1034D24();
      v42 = *(void (**)(char *, uint64_t))(v39 + 8);
      v43 = v40;
      v8 = v39;
      v42(v43, v67);
      v42(v41, v67);
      v31 = v65;
      v44 = v41;
      v32 = v67;
      v38(v44, v36, v67);
      v35 += v61;
      if (!--v34)
        goto LABEL_20;
    }
  }
  else
  {
    v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    swift_bridgeObjectRetain();
LABEL_20:
    v37(v31, 1, 1, v32);
  }
  swift_bridgeObjectRelease();
  v45 = v56;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v56, v66, v32);
  v46 = *(void (**)(char *, uint64_t))(v8 + 8);
  v46(v60, v32);
  swift_bridgeObjectRelease();
  v47 = v32;
  v48 = __swift_project_boxed_opaque_existential_1(v57, v57[3]);
  MEMORY[0x1E0C80A78](v48);
  (*(void (**)(char *))(v50 + 16))((char *)&v54 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0));
  v68 = sub_1B1035840();
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0938);
  v52 = v58;
  v58[3] = v51;
  v52[4] = sub_1B0FF6F44();
  __swift_allocate_boxed_opaque_existential_1(v52);
  v59(v45, MEMORY[0x1E0CDFD18], MEMORY[0x1E0CDFD08]);
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v46)(v45, v47);
}

uint64_t sub_1B0FF6A30@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B0FF63B4(a1, a2, MEMORY[0x1E0CDECD8], a3);
}

_QWORD *sub_1B0FF6A50@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1B0FF79B4(a1, &qword_1EEEE0968, (void (*)(void))sub_1B0FF7B14);
  if (!v2)
    *a2 = result;
  return result;
}

unint64_t sub_1B0FF6A90(uint64_t a1)
{
  unint64_t result;

  result = sub_1B0FF6AB4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B0FF6AB4()
{
  unint64_t result;

  result = qword_1EEEE08D8;
  if (!qword_1EEEE08D8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1044A44, &type metadata for AccessibilityRemoveTraitsModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE08D8);
  }
  return result;
}

unint64_t sub_1B0FF6AF8(uint64_t a1)
{
  unint64_t result;

  result = sub_1B0FF6B1C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B0FF6B1C()
{
  unint64_t result;

  result = qword_1EEEE08E0;
  if (!qword_1EEEE08E0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1044A1C, &type metadata for AccessibilityAddTraitsModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE08E0);
  }
  return result;
}

uint64_t sub_1B0FF6B60(uint64_t a1)
{
  uint64_t result;

  result = sub_1B0F524FC(&qword_1EEEE08E8, (uint64_t (*)(uint64_t))type metadata accessor for AccessibilityFocusedModifier, (uint64_t)&unk_1B10449F4);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B0FF6B9C(uint64_t a1)
{
  unint64_t result;

  result = sub_1B0FF6BC0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B0FF6BC0()
{
  unint64_t result;

  result = qword_1EEEE08F0;
  if (!qword_1EEEE08F0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10449CC, &type metadata for AccessibilityHeadingModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE08F0);
  }
  return result;
}

unint64_t sub_1B0FF6C04(uint64_t a1)
{
  unint64_t result;

  result = sub_1B0FF6C28();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B0FF6C28()
{
  unint64_t result;

  result = qword_1EEEE08F8;
  if (!qword_1EEEE08F8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10449A4, &type metadata for AccessibilityChildrenModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE08F8);
  }
  return result;
}

unint64_t sub_1B0FF6C6C(uint64_t a1)
{
  unint64_t result;

  result = sub_1B0FF6C90();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B0FF6C90()
{
  unint64_t result;

  result = qword_1EEEE0900;
  if (!qword_1EEEE0900)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104497C, &type metadata for AccessibilityElementModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0900);
  }
  return result;
}

unint64_t sub_1B0FF6CD4(uint64_t a1)
{
  unint64_t result;

  result = sub_1B0FF6CF8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B0FF6CF8()
{
  unint64_t result;

  result = qword_1EEEE0908;
  if (!qword_1EEEE0908)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1044954, &type metadata for AccessibilityActionModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0908);
  }
  return result;
}

unint64_t sub_1B0FF6D3C(uint64_t a1)
{
  unint64_t result;

  result = sub_1B0FF6D60();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B0FF6D60()
{
  unint64_t result;

  result = qword_1EEEE0910;
  if (!qword_1EEEE0910)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104492C, &type metadata for AccessibilityHintModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0910);
  }
  return result;
}

unint64_t sub_1B0FF6DA4(uint64_t a1)
{
  unint64_t result;

  result = sub_1B0FF6DC8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B0FF6DC8()
{
  unint64_t result;

  result = qword_1EEEE0918;
  if (!qword_1EEEE0918)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1044904, &type metadata for AccessibilityValueModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0918);
  }
  return result;
}

unint64_t sub_1B0FF6E0C(uint64_t a1)
{
  unint64_t result;

  result = sub_1B0FF6E30();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B0FF6E30()
{
  unint64_t result;

  result = qword_1EEEE0920;
  if (!qword_1EEEE0920)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10448DC, &type metadata for AccessibilityHiddenModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0920);
  }
  return result;
}

unint64_t sub_1B0FF6E74(uint64_t a1)
{
  unint64_t result;

  result = sub_1B0FF6E98();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B0FF6E98()
{
  unint64_t result;

  result = qword_1EEEE0928;
  if (!qword_1EEEE0928)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10448B4, &type metadata for AccessibilityIdentifierModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0928);
  }
  return result;
}

unint64_t sub_1B0FF6EDC(uint64_t a1)
{
  unint64_t result;

  result = sub_1B0FF6F00();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B0FF6F00()
{
  unint64_t result;

  result = qword_1EEEE0930;
  if (!qword_1EEEE0930)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104488C, &type metadata for AccessibilityLabelModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0930);
  }
  return result;
}

unint64_t sub_1B0FF6F44()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1EEEE0940;
  if (!qword_1EEEE0940)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEE0938);
    v2 = sub_1B0F524FC(&qword_1EEEE0948, MEMORY[0x1E0CDCFD0], MEMORY[0x1E0CDCFB8]);
    v3[0] = MEMORY[0x1E0CDFD08];
    v3[1] = v2;
    result = MEMORY[0x1B5E15188](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EEEE0940);
  }
  return result;
}

uint64_t sub_1B0FF6FC8(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1B0FF7004 + 4 * byte_1B10446A0[a1]))(0xD000000000000017, 0x80000001B104BD30);
}

uint64_t sub_1B0FF7004()
{
  return 0x6E6F747475427369;
}

uint64_t sub_1B0FF701C()
{
  return 0x6567616D497369;
}

uint64_t sub_1B0FF7034()
{
  return 0x6B6E694C7369;
}

uint64_t sub_1B0FF7048()
{
  return 0x7463656C65537369;
}

uint64_t sub_1B0FF7064()
{
  return 0x6150736573756163;
}

uint64_t sub_1B0FF7088()
{
  return 0x7265646165487369;
}

uint64_t sub_1B0FF70A0()
{
  return 0x616F6279654B7369;
}

uint64_t sub_1B0FF70C4()
{
  return 0x6C61646F4D7369;
}

uint64_t sub_1B0FF70DC()
{
  return 0x6863726165537369;
}

uint64_t sub_1B0FF7100()
{
  return 0x6369746174537369;
}

unint64_t sub_1B0FF7120()
{
  return 0xD000000000000010;
}

uint64_t sub_1B0FF713C()
{
  return 0x656C67676F547369;
}

uint64_t sub_1B0FF7154()
{
  return 0x756F537379616C70;
}

uint64_t sub_1B0FF7174()
{
  uint64_t v0;

  return v0 + 2;
}

uint64_t sub_1B0FF719C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1B0FF6FC8(*a1);
  v5 = v4;
  if (v3 == sub_1B0FF6FC8(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B0FF7224()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1B103620C();
  sub_1B0FF6FC8(v1);
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B0FF7284()
{
  unsigned __int8 *v0;

  sub_1B0FF6FC8(*v0);
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B0FF72C4()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1B103620C();
  sub_1B0FF6FC8(v1);
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B0FF7320@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B0FF769C();
  *a1 = result;
  return result;
}

uint64_t sub_1B0FF734C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B0FF6FC8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B0FF7378()
{
  uint64_t *v0;

  return sub_1B0FF613C(v0 + 2, v0[7], v0[8], (uint64_t)&unk_1E62A09E0, (uint64_t)&unk_1EEEDF5B8);
}

uint64_t sub_1B0FF73A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_BYTE *)(a1 + 32);
  swift_bridgeObjectRetain();
  sub_1B0F56C04(v2, v3, v4, v5);
  return a1;
}

uint64_t objectdestroyTm_5()
{
  uint64_t v0;
  unsigned int v1;

  swift_bridgeObjectRelease();
  v1 = *(unsigned __int8 *)(v0 + 48);
  if (v1 <= 0xFD)
    sub_1B0F56ADC(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), v1);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B0FF744C()
{
  uint64_t *v0;

  return sub_1B0FF613C(v0 + 2, v0[7], v0[8], (uint64_t)&unk_1E62A09B8, (uint64_t)&unk_1EEEDE930);
}

uint64_t sub_1B0FF7480()
{
  return sub_1B0FF54EC();
}

uint64_t sub_1B0FF7488()
{
  unint64_t v0;

  v0 = sub_1B103605C();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_1B0FF74D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AccessibilityFocusedModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B0FF7518(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AccessibilityFocusedModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B0FF755C()
{
  return sub_1B0FF7658((uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t))sub_1B0FF4BD8);
}

uint64_t objectdestroy_14Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for AccessibilityFocusedModifier();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 33) & ~v2;
  swift_release();
  swift_release();
  sub_1B0F5E6A0(*(_QWORD *)(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_QWORD *)(v0 + v3 + 16), *(_BYTE *)(v0 + v3 + 24));
  v4 = v0 + v3 + *(int *)(v1 + 20);
  v5 = sub_1B103509C();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE08B8);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B0FF764C()
{
  return sub_1B0FF7658((uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t))sub_1B0FF4CAC);
}

uint64_t sub_1B0FF7658(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, uint64_t))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AccessibilityFocusedModifier() - 8) + 80);
  return a1(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), v1 + ((v2 + 33) & ~v2));
}

uint64_t sub_1B0FF769C()
{
  unint64_t v0;

  v0 = sub_1B103605C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x10)
    return 16;
  else
    return v0;
}

_QWORD *sub_1B0FF76E4(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v4;
  unsigned __int8 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  _QWORD *v20;

  v3 = v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v5 = (unsigned __int8 *)(swift_bridgeObjectRetain() + 56);
  v20 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v6 = *((_QWORD *)v5 - 3);
    v7 = *((_QWORD *)v5 - 2);
    v8 = *((_QWORD *)v5 - 1);
    v9 = *v5;
    sub_1B0F56B9C(v6, v7, v8, *v5);
    v10 = StringResolvable.resolved(with:)(a2);
    if (v3)
    {

      sub_1B0F56ADC(v6, v7, v8, v9);
      v3 = 0;
    }
    else
    {
      v12 = v10;
      v13 = v11;
      sub_1B0F56ADC(v6, v7, v8, v9);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v14 = v20;
      else
        v14 = sub_1B0FDD30C(0, v20[2] + 1, 1, v20);
      v16 = v14[2];
      v15 = v14[3];
      if (v16 >= v15 >> 1)
        v14 = sub_1B0FDD30C((_QWORD *)(v15 > 1), v16 + 1, 1, v14);
      v14[2] = v16 + 1;
      v20 = v14;
      v17 = &v14[2 * v16];
      v17[4] = v12;
      v17[5] = v13;
    }
    v5 += 32;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease();
  return v20;
}

_QWORD *sub_1B0FF7868(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0998);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B0FF7BD8();
  sub_1B1036278();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDEBF8);
    sub_1B0F78F60(&qword_1EEEDEC18, &qword_1EEEDEBF8, (uint64_t (*)(void))sub_1B0F64238, MEMORY[0x1E0DEAF40]);
    sub_1B10360BC();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v7 = (_QWORD *)v9[1];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v7;
}

_QWORD *sub_1B0FF79B4(_QWORD *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v13 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  v10 = v9;
  sub_1B1036278();
  if (v3)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0978);
    sub_1B0F78F60(&qword_1EEEE0980, &qword_1EEEE0978, (uint64_t (*)(void))sub_1B0F56A98, MEMORY[0x1E0DEAF40]);
    sub_1B10360BC();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v6);
    v10 = v14;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v10;
}

unint64_t sub_1B0FF7B14()
{
  unint64_t result;

  result = qword_1EEEE0970;
  if (!qword_1EEEE0970)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10454AC, &type metadata for AccessibilityRemoveTraitsModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0970);
  }
  return result;
}

unint64_t sub_1B0FF7B58()
{
  unint64_t result;

  result = qword_1EEEE0990;
  if (!qword_1EEEE0990)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104545C, &type metadata for AccessibilityAddTraitsModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0990);
  }
  return result;
}

uint64_t sub_1B0FF7B9C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AccessibilityFocusedModifier();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1B0FF7BD8()
{
  unint64_t result;

  result = qword_1EEEE09A0;
  if (!qword_1EEEE09A0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104540C, &type metadata for AccessibilityChildrenModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE09A0);
  }
  return result;
}

unint64_t sub_1B0FF7C1C()
{
  unint64_t result;

  result = qword_1EEEE09B0;
  if (!qword_1EEEE09B0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10453BC, &type metadata for AccessibilityElementModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE09B0);
  }
  return result;
}

unint64_t sub_1B0FF7C60()
{
  unint64_t result;

  result = qword_1EEEE09C0;
  if (!qword_1EEEE09C0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104536C, &type metadata for AccessibilityActionModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE09C0);
  }
  return result;
}

unint64_t sub_1B0FF7CA4()
{
  unint64_t result;

  result = qword_1EEEE09D0;
  if (!qword_1EEEE09D0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104531C, &type metadata for AccessibilityIdentifierModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE09D0);
  }
  return result;
}

unint64_t sub_1B0FF7CE8()
{
  unint64_t result;

  result = qword_1EEEE09E0;
  if (!qword_1EEEE09E0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10452CC, &type metadata for AccessibilityLabelModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE09E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessibilityLabelModifier.CodingKeys()
{
  return &type metadata for AccessibilityLabelModifier.CodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilityIdentifierModifier.CodingKeys()
{
  return &type metadata for AccessibilityIdentifierModifier.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for AccessibilityActionModifier.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B0FF7D9C + 4 * byte_1B10446B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B0FF7DD0 + 4 * byte_1B10446B0[v4]))();
}

uint64_t sub_1B0FF7DD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B0FF7DD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B0FF7DE0);
  return result;
}

uint64_t sub_1B0FF7DEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B0FF7DF4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B0FF7DF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B0FF7E00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccessibilityActionModifier.CodingKeys()
{
  return &type metadata for AccessibilityActionModifier.CodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilityElementModifier.CodingKeys()
{
  return &type metadata for AccessibilityElementModifier.CodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilityChildrenModifier.CodingKeys()
{
  return &type metadata for AccessibilityChildrenModifier.CodingKeys;
}

ValueMetadata *type metadata accessor for AccessibilityAddTraitsModifier.CodingKeys()
{
  return &type metadata for AccessibilityAddTraitsModifier.CodingKeys;
}

uint64_t _s6LiftUI26AccessibilityLabelModifierV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B0FF7E8C + 4 * byte_1B10446BA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B0FF7EAC + 4 * byte_1B10446BF[v4]))();
}

_BYTE *sub_1B0FF7E8C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B0FF7EAC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B0FF7EB4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B0FF7EBC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B0FF7EC4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B0FF7ECC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AccessibilityRemoveTraitsModifier.CodingKeys()
{
  return &type metadata for AccessibilityRemoveTraitsModifier.CodingKeys;
}

uint64_t getEnumTagSinglePayload for AccessibilityTraitString(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF1)
    goto LABEL_17;
  if (a2 + 15 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 15) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 15;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 15;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 15;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x10;
  v8 = v6 - 16;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AccessibilityTraitString(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_1B0FF7FC4 + 4 * byte_1B10446C9[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_1B0FF7FF8 + 4 * byte_1B10446C4[v4]))();
}

uint64_t sub_1B0FF7FF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B0FF8000(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B0FF8008);
  return result;
}

uint64_t sub_1B0FF8014(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B0FF801CLL);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_1B0FF8020(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B0FF8028(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AccessibilityTraitString()
{
  return &type metadata for AccessibilityTraitString;
}

unint64_t sub_1B0FF8048()
{
  unint64_t result;

  result = qword_1EEEE09E8;
  if (!qword_1EEEE09E8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1044C84, &type metadata for AccessibilityTraitString);
    atomic_store(result, (unint64_t *)&qword_1EEEE09E8);
  }
  return result;
}

unint64_t sub_1B0FF8090()
{
  unint64_t result;

  result = qword_1EEEE09F0;
  if (!qword_1EEEE09F0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1044D3C, &type metadata for AccessibilityRemoveTraitsModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE09F0);
  }
  return result;
}

unint64_t sub_1B0FF80D8()
{
  unint64_t result;

  result = qword_1EEEE09F8;
  if (!qword_1EEEE09F8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1044DF4, &type metadata for AccessibilityAddTraitsModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE09F8);
  }
  return result;
}

unint64_t sub_1B0FF8120()
{
  unint64_t result;

  result = qword_1EEEE0A00;
  if (!qword_1EEEE0A00)
  {
    result = MEMORY[0x1B5E15188]("Ż%5", &type metadata for AccessibilityChildrenModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0A00);
  }
  return result;
}

unint64_t sub_1B0FF8168()
{
  unint64_t result;

  result = qword_1EEEE0A08;
  if (!qword_1EEEE0A08)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1044FD4, &type metadata for AccessibilityElementModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0A08);
  }
  return result;
}

unint64_t sub_1B0FF81B0()
{
  unint64_t result;

  result = qword_1EEEE0A10;
  if (!qword_1EEEE0A10)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10450C4, &type metadata for AccessibilityActionModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0A10);
  }
  return result;
}

unint64_t sub_1B0FF81F8()
{
  unint64_t result;

  result = qword_1EEEE0A18;
  if (!qword_1EEEE0A18)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10451B4, &type metadata for AccessibilityIdentifierModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0A18);
  }
  return result;
}

unint64_t sub_1B0FF8240()
{
  unint64_t result;

  result = qword_1EEEE0A20;
  if (!qword_1EEEE0A20)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10452A4, &type metadata for AccessibilityLabelModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0A20);
  }
  return result;
}

unint64_t sub_1B0FF8288()
{
  unint64_t result;

  result = qword_1EEEE0A28;
  if (!qword_1EEEE0A28)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10451DC, &type metadata for AccessibilityLabelModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0A28);
  }
  return result;
}

unint64_t sub_1B0FF82D0()
{
  unint64_t result;

  result = qword_1EEEE0A30;
  if (!qword_1EEEE0A30)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1045204, &type metadata for AccessibilityLabelModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0A30);
  }
  return result;
}

unint64_t sub_1B0FF8318()
{
  unint64_t result;

  result = qword_1EEEE0A38;
  if (!qword_1EEEE0A38)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10450EC, &type metadata for AccessibilityIdentifierModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0A38);
  }
  return result;
}

unint64_t sub_1B0FF8360()
{
  unint64_t result;

  result = qword_1EEEE0A40;
  if (!qword_1EEEE0A40)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1045114, &type metadata for AccessibilityIdentifierModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0A40);
  }
  return result;
}

unint64_t sub_1B0FF83A8()
{
  unint64_t result;

  result = qword_1EEEE0A48;
  if (!qword_1EEEE0A48)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1044FFC, &type metadata for AccessibilityActionModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0A48);
  }
  return result;
}

unint64_t sub_1B0FF83F0()
{
  unint64_t result;

  result = qword_1EEEE0A50;
  if (!qword_1EEEE0A50)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1045024, &type metadata for AccessibilityActionModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0A50);
  }
  return result;
}

unint64_t sub_1B0FF8438()
{
  unint64_t result;

  result = qword_1EEEE0A58;
  if (!qword_1EEEE0A58)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1044F0C, &type metadata for AccessibilityElementModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0A58);
  }
  return result;
}

unint64_t sub_1B0FF8480()
{
  unint64_t result;

  result = qword_1EEEE0A60;
  if (!qword_1EEEE0A60)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1044F34, &type metadata for AccessibilityElementModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0A60);
  }
  return result;
}

unint64_t sub_1B0FF84C8()
{
  unint64_t result;

  result = qword_1EEEE0A68;
  if (!qword_1EEEE0A68)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1044E1C, &type metadata for AccessibilityChildrenModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0A68);
  }
  return result;
}

unint64_t sub_1B0FF8510()
{
  unint64_t result;

  result = qword_1EEEE0A70;
  if (!qword_1EEEE0A70)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1044E44, &type metadata for AccessibilityChildrenModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0A70);
  }
  return result;
}

unint64_t sub_1B0FF8558()
{
  unint64_t result;

  result = qword_1EEEE0A78;
  if (!qword_1EEEE0A78)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1044D64, &type metadata for AccessibilityAddTraitsModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0A78);
  }
  return result;
}

unint64_t sub_1B0FF85A0()
{
  unint64_t result;

  result = qword_1EEEE0A80;
  if (!qword_1EEEE0A80)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1044D8C, &type metadata for AccessibilityAddTraitsModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0A80);
  }
  return result;
}

unint64_t sub_1B0FF85E8()
{
  unint64_t result;

  result = qword_1EEEE0A88;
  if (!qword_1EEEE0A88)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1044CAC, &type metadata for AccessibilityRemoveTraitsModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0A88);
  }
  return result;
}

unint64_t sub_1B0FF8630()
{
  unint64_t result;

  result = qword_1EEEE0A90;
  if (!qword_1EEEE0A90)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1044CD4, &type metadata for AccessibilityRemoveTraitsModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0A90);
  }
  return result;
}

uint64_t sub_1B0FF8674()
{
  return 0x6C6562616CLL;
}

uint64_t sub_1B0FF8688()
{
  return 0x6E6572646C696863;
}

uint64_t sub_1B0FF86A0()
{
  return 0x737469617274;
}

uint64_t sub_1B0FF86B4()
{
  return 0x696669746E656469;
}

uint64_t sub_1B0FF86D0(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x737469617274 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1B1036128();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t destroy for ConfirmationDialogModifier(uint64_t a1)
{
  unsigned int v2;
  uint64_t result;

  sub_1B0F56ADC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  v2 = *(unsigned __int8 *)(a1 + 56);
  if (v2 <= 0xFD)
    sub_1B0F56ADC(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), v2);
  sub_1B0F5E6A0(*(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88));
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 112);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(a1 + 144);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for ConfirmationDialogModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_1B0F56B9C(*(_QWORD *)a2, v5, v6, v7);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  v8 = *(unsigned __int8 *)(a2 + 56);
  if (v8 <= 0xFD)
  {
    v9 = *(_QWORD *)(a2 + 32);
    v10 = *(_QWORD *)(a2 + 40);
    v11 = *(_QWORD *)(a2 + 48);
    sub_1B0F56B9C(v9, v10, v11, *(_BYTE *)(a2 + 56));
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v10;
    *(_QWORD *)(a1 + 48) = v11;
    *(_BYTE *)(a1 + 56) = v8;
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  }
  v12 = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_BYTE *)(a2 + 88);
  sub_1B0F5E604(v12, v13, v14, v15);
  *(_QWORD *)(a1 + 64) = v12;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_BYTE *)(a1 + 88) = v15;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  v16 = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  if (v16)
  {
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = v16;
    v17 = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = v17;
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    v18 = *(_BYTE *)(a2 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 168) = v19;
    (**(void (***)(uint64_t, uint64_t))(v19 - 8))(a1 + 144, a2 + 144);
    *(_BYTE *)(a1 + 184) = v18;
    v20 = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 200) = v20;
    v21 = *(_QWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 216) = v21;
    swift_retain();
    swift_retain();
  }
  else
  {
    v22 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = v22;
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    v23 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v23;
    v24 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v24;
  }
  return a1;
}

uint64_t assignWithCopy for ConfirmationDialogModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  _OWORD *v12;
  _OWORD *v13;
  unsigned int v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  _OWORD *v35;
  __int128 *v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_1B0F56B9C(*(_QWORD *)a2, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  v11 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v7;
  sub_1B0F56ADC(v8, v9, v10, v11);
  v12 = (_OWORD *)(a1 + 32);
  v13 = (_OWORD *)(a2 + 32);
  v14 = *(unsigned __int8 *)(a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) <= 0xFDu)
  {
    if (v14 <= 0xFD)
    {
      v20 = *(_QWORD *)(a2 + 32);
      v21 = *(_QWORD *)(a2 + 40);
      v22 = *(_QWORD *)(a2 + 48);
      sub_1B0F56B9C(v20, v21, v22, *(_BYTE *)(a2 + 56));
      v23 = *(_QWORD *)(a1 + 32);
      v24 = *(_QWORD *)(a1 + 40);
      v25 = *(_QWORD *)(a1 + 48);
      *(_QWORD *)(a1 + 32) = v20;
      *(_QWORD *)(a1 + 40) = v21;
      *(_QWORD *)(a1 + 48) = v22;
      v26 = *(_BYTE *)(a1 + 56);
      *(_BYTE *)(a1 + 56) = v14;
      sub_1B0F56ADC(v23, v24, v25, v26);
    }
    else
    {
      sub_1B0F5EA14(a1 + 32);
      v16 = *(_OWORD *)(a2 + 41);
      *v12 = *v13;
      *(_OWORD *)(a1 + 41) = v16;
    }
  }
  else if (v14 <= 0xFD)
  {
    v17 = *(_QWORD *)(a2 + 32);
    v18 = *(_QWORD *)(a2 + 40);
    v19 = *(_QWORD *)(a2 + 48);
    sub_1B0F56B9C(v17, v18, v19, *(_BYTE *)(a2 + 56));
    *(_QWORD *)(a1 + 32) = v17;
    *(_QWORD *)(a1 + 40) = v18;
    *(_QWORD *)(a1 + 48) = v19;
    *(_BYTE *)(a1 + 56) = v14;
  }
  else
  {
    v15 = *v13;
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
    *v12 = v15;
  }
  v27 = *(_QWORD *)(a2 + 64);
  v28 = *(_QWORD *)(a2 + 72);
  v29 = *(_QWORD *)(a2 + 80);
  v30 = *(_BYTE *)(a2 + 88);
  sub_1B0F5E604(v27, v28, v29, v30);
  v31 = *(_QWORD *)(a1 + 64);
  v32 = *(_QWORD *)(a1 + 72);
  v33 = *(_QWORD *)(a1 + 80);
  v34 = *(_BYTE *)(a1 + 88);
  *(_QWORD *)(a1 + 64) = v27;
  *(_QWORD *)(a1 + 72) = v28;
  *(_QWORD *)(a1 + 80) = v29;
  *(_BYTE *)(a1 + 88) = v30;
  sub_1B0F5E6A0(v31, v32, v33, v34);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v35 = (_OWORD *)(a1 + 104);
  v36 = (__int128 *)(a2 + 104);
  v37 = *(_QWORD *)(a2 + 112);
  if (*(_QWORD *)(a1 + 112))
  {
    if (v37)
    {
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (a1 != a2)
      {
        sub_1B0F62D10(a1 + 144);
        v38 = *(_BYTE *)(a2 + 184);
        v39 = *(_QWORD *)(a2 + 168);
        *(_QWORD *)(a1 + 168) = v39;
        *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
        (**(void (***)(uint64_t, uint64_t))(v39 - 8))(a1 + 144, a2 + 144);
        *(_BYTE *)(a1 + 184) = v38;
      }
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    }
    else
    {
      sub_1B0F6427C(a1 + 104);
      v42 = *(_OWORD *)(a2 + 152);
      v44 = *v36;
      v43 = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 152) = v42;
      *v35 = v44;
      *(_OWORD *)(a1 + 120) = v43;
      v46 = *(_OWORD *)(a2 + 184);
      v45 = *(_OWORD *)(a2 + 200);
      v47 = *(_OWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      *(_OWORD *)(a1 + 184) = v46;
      *(_OWORD *)(a1 + 200) = v45;
      *(_OWORD *)(a1 + 168) = v47;
    }
  }
  else if (v37)
  {
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    v40 = *(_BYTE *)(a2 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v41 = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 168) = v41;
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    (**(void (***)(uint64_t, uint64_t))(v41 - 8))(a1 + 144, a2 + 144);
    *(_BYTE *)(a1 + 184) = v40;
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    swift_retain();
    swift_retain();
  }
  else
  {
    v48 = *v36;
    v49 = *(_OWORD *)(a2 + 120);
    v50 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v50;
    *v35 = v48;
    *(_OWORD *)(a1 + 120) = v49;
    v51 = *(_OWORD *)(a2 + 168);
    v52 = *(_OWORD *)(a2 + 184);
    v53 = *(_OWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 184) = v52;
    *(_OWORD *)(a1 + 200) = v53;
    *(_OWORD *)(a1 + 168) = v51;
  }
  return a1;
}

__n128 __swift_memcpy224_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __n128 result;
  __int128 v10;
  __int128 v11;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  result = *(__n128 *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  v11 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v11;
  *(__n128 *)(a1 + 160) = result;
  *(_OWORD *)(a1 + 176) = v10;
  return result;
}

uint64_t assignWithTake for ConfirmationDialogModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  v9 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v5;
  sub_1B0F56ADC(v6, v7, v8, v9);
  v10 = *(unsigned __int8 *)(a1 + 56);
  if (v10 > 0xFD)
    goto LABEL_4;
  v11 = *(unsigned __int8 *)(a2 + 56);
  if (v11 > 0xFD)
  {
    sub_1B0F5EA14(a1 + 32);
LABEL_4:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(a2 + 48);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 40);
  v15 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = v12;
  *(_BYTE *)(a1 + 56) = v11;
  sub_1B0F56ADC(v13, v14, v15, v10);
LABEL_6:
  v16 = *(_QWORD *)(a2 + 80);
  v17 = *(_BYTE *)(a2 + 88);
  v18 = *(_QWORD *)(a1 + 64);
  v19 = *(_QWORD *)(a1 + 72);
  v20 = *(_QWORD *)(a1 + 80);
  v21 = *(_BYTE *)(a1 + 88);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = v16;
  *(_BYTE *)(a1 + 88) = v17;
  sub_1B0F5E6A0(v18, v19, v20, v21);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 112))
  {
LABEL_12:
    v26 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = v26;
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    v27 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v27;
    v28 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v28;
    return a1;
  }
  v22 = *(_QWORD *)(a2 + 112);
  if (!v22)
  {
    sub_1B0F6427C(a1 + 104);
    goto LABEL_12;
  }
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v22;
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v23;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    sub_1B0F62D10(a1 + 144);
    v24 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v24;
    *(_OWORD *)(a1 + 169) = *(_OWORD *)(a2 + 169);
  }
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_release();
  v25 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v25;
  swift_release();
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  return a1;
}

uint64_t getEnumTagSinglePayload for ConfirmationDialogModifier(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 224))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 96);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ConfirmationDialogModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 216) = 0;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 224) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 224) = 0;
    if (a2)
      *(_QWORD *)(result + 96) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ConfirmationDialogModifier()
{
  return &type metadata for ConfirmationDialogModifier;
}

uint64_t sub_1B0FF8FF0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  _QWORD v40[4];
  _QWORD v41[4];
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t *v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  _QWORD *v62;
  _QWORD *v63;

  v5 = v3;
  v51 = a3;
  v7 = a1[3];
  v52 = a1[4];
  v63 = __swift_project_boxed_opaque_existential_1(a1, v7);
  v8 = *(_QWORD *)(v3 + 8);
  v9 = *(_QWORD *)(v3 + 16);
  v10 = *(_BYTE *)(v3 + 24);
  v53 = *(_QWORD *)v3;
  v54 = v8;
  v55 = v9;
  LOBYTE(v56) = v10;
  sub_1B0F56B9C(v53, v8, v9, v10);
  v11 = StringResolvable.resolved(with:)(a2);
  if (v4)
    return sub_1B0F56ADC(v53, v8, v9, v10);
  v14 = v11;
  v50 = v7;
  v15 = v12;
  sub_1B0F56ADC(v53, v8, v9, v10);
  v61 = v14;
  v62 = v15;
  v16 = *(_QWORD *)(v5 + 64);
  v17 = *(_QWORD *)(v5 + 72);
  v18 = *(_QWORD *)(v5 + 80);
  v19 = *(_BYTE *)(v5 + 88);
  sub_1B0F5E604(v16, v17, v18, v19);
  v20 = sub_1B102A208(a2, v16, v17, v18, v19);
  v22 = v21;
  v49 = v20;
  v47 = v15;
  v48 = v23;
  sub_1B0F5E6A0(v16, v17, v18, v19);
  v24 = *(unsigned __int8 *)(v5 + 56);
  if (v24 <= 0xFD)
  {
    v25 = *(_QWORD *)(v5 + 40);
    v26 = *(_QWORD *)(v5 + 48);
    v53 = *(_QWORD *)(v5 + 32);
    v54 = v25;
    v55 = v26;
    LOBYTE(v56) = v24;
    v46 = v25;
    sub_1B0F56B9C(v53, v25, v26, v24);
    StringResolvable.resolved(with:)(a2);
    v43 = v22;
    sub_1B0F56B88(v53, v46, v26, v24);
  }
  else
  {
    v43 = v22;
  }
  v27 = sub_1B103605C();
  v28 = swift_bridgeObjectRelease();
  v47 = &v42;
  v29 = 0x10200u >> (8 * v27);
  if (v27 >= 3)
    v29 = 0;
  LODWORD(v46) = v29;
  v30 = MEMORY[0x1E0C80A78](v28);
  v45 = v41;
  v41[2] = v5;
  MEMORY[0x1E0C80A78](v30);
  v44 = v40;
  v40[2] = v5;
  v31 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEDEBE0);
  v32 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEDEBD8);
  v33 = sub_1B0F8B804();
  v34 = sub_1B0F78F60(&qword_1EEEDEBF0, &qword_1EEEDEBE0, (uint64_t (*)(void))sub_1B0F64174, MEMORY[0x1E0CDFEE8]);
  v35 = sub_1B0F78F60((unint64_t *)&qword_1EEEDEBE8, &qword_1EEEDEBD8, (uint64_t (*)(void))sub_1B0F64174, MEMORY[0x1E0CE0798]);
  v36 = v50;
  v53 = v50;
  v54 = MEMORY[0x1E0DEA968];
  v55 = v31;
  v56 = v32;
  v37 = v52;
  v57 = v52;
  v58 = v33;
  v59 = v34;
  v60 = v35;
  v38 = MEMORY[0x1B5E15134](0, &v53, MEMORY[0x1E0CDE7F0], 0);
  v39 = v51;
  v51[3] = v38;
  v53 = v36;
  v54 = MEMORY[0x1E0DEA968];
  v55 = v31;
  v56 = v32;
  v57 = v37;
  v58 = v33;
  v59 = v34;
  v60 = v35;
  v39[4] = swift_getOpaqueTypeConformance2();
  __swift_allocate_boxed_opaque_existential_1(v39);
  sub_1B1035468();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B0FF9414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDEBE0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 96);
  v9 = MEMORY[0x1E0DEE9D8];
  if (v8)
    v9 = v8;
  v11[1] = v9;
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDEBF8);
  sub_1B0F5A7E4(&qword_1EEEDEC00, &qword_1EEEDEBF8, MEMORY[0x1E0DEAF48]);
  sub_1B0F64174();
  sub_1B10358AC();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, v4);
}

uint64_t sub_1B0FF9544(char a1)
{
  return *(_QWORD *)&aTitle_5[8 * a1];
}

uint64_t sub_1B0FF9564(char *a1, char *a2)
{
  return sub_1B100C61C(*a1, *a2);
}

uint64_t sub_1B0FF9570()
{
  return sub_1B1010F5C();
}

uint64_t sub_1B0FF9578()
{
  return sub_1B1011F24();
}

uint64_t sub_1B0FF9580()
{
  return sub_1B10155F8();
}

uint64_t sub_1B0FF9588@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B0FF9D9C();
  *a1 = result;
  return result;
}

uint64_t sub_1B0FF95B4@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B0FF9544(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B0FF95DC()
{
  char *v0;

  return sub_1B0FF9544(*v0);
}

uint64_t sub_1B0FF95E4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B0FF9D9C();
  *a1 = result;
  return result;
}

uint64_t sub_1B0FF9608()
{
  sub_1B0FF9B54();
  return sub_1B10362B4();
}

uint64_t sub_1B0FF9630()
{
  sub_1B0FF9B54();
  return sub_1B10362C0();
}

uint64_t sub_1B0FF9658@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  _QWORD v29[3];
  unsigned __int8 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  uint64_t v39;
  _DWORD v40[35];
  char v41;

  v23 = a2;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0AA0);
  v4 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B0FF9B54();
  sub_1B1036278();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v22 = a1;
  v7 = v4;
  v41 = 0;
  sub_1B0F56A98();
  v8 = v24;
  sub_1B10360BC();
  v9 = v28;
  v19 = v26;
  v20 = v25;
  v29[0] = v25;
  v29[1] = v26;
  v21 = v27;
  v29[2] = v27;
  v30 = v28;
  v41 = 2;
  sub_1B10360A4();
  v40[34] = v9;
  v17 = v25;
  v18 = v26;
  v31 = v25;
  v32 = v26;
  v16 = v27;
  v33 = v27;
  v34 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE7E8);
  v41 = 1;
  sub_1B0F5A7E4((unint64_t *)&qword_1EEEDE7F0, &qword_1EEEDE7E8, (uint64_t)&protocol conformance descriptor for Referenceable<A>);
  sub_1B10360BC();
  v13 = v25;
  v14 = v26;
  v35 = v25;
  v36 = v26;
  v15 = v27;
  v37 = v27;
  v12 = v28;
  v38 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDEBF8);
  v41 = 3;
  sub_1B0F78F60(&qword_1EEEDEC18, &qword_1EEEDEBF8, (uint64_t (*)(void))sub_1B0F64238, MEMORY[0x1E0DEAF40]);
  sub_1B10360A4();
  v11 = v25;
  v39 = v25;
  v41 = 4;
  sub_1B0F64238();
  sub_1B10360A4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v6, v8);
  sub_1B0F79004((uint64_t)&v25, (uint64_t)v40);
  sub_1B0FF9B98((uint64_t)v29, v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return sub_1B0FF9BCC((uint64_t)v29);
}

uint64_t sub_1B0FF9A64@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B0FF8FF0(a1, a2, a3);
}

uint64_t sub_1B0FF9A78@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B0FF9658(a1, a2);
}

unint64_t sub_1B0FF9A8C(uint64_t a1)
{
  unint64_t result;

  result = sub_1B0FF9AB0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B0FF9AB0()
{
  unint64_t result;

  result = qword_1EEEE0A98;
  if (!qword_1EEEE0A98)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104553C, &type metadata for ConfirmationDialogModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0A98);
  }
  return result;
}

uint64_t sub_1B0FF9AF4()
{
  unint64_t v0;

  v0 = sub_1B103605C();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1B0FF9B3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1B0FF9414(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1B0FF9B44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1B0F78ED4(*(_QWORD *)(v1 + 16) + 104, a1);
}

unint64_t sub_1B0FF9B54()
{
  unint64_t result;

  result = qword_1EEEE0AA8;
  if (!qword_1EEEE0AA8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1045698, &type metadata for ConfirmationDialogModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0AA8);
  }
  return result;
}

uint64_t sub_1B0FF9B98(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ConfirmationDialogModifier(a2, a1);
  return a2;
}

uint64_t sub_1B0FF9BCC(uint64_t a1)
{
  destroy for ConfirmationDialogModifier(a1);
  return a1;
}

uint64_t storeEnumTagSinglePayload for ConfirmationDialogModifier.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1B0FF9C44 + 4 * byte_1B1045505[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1B0FF9C78 + 4 * byte_1B1045500[v4]))();
}

uint64_t sub_1B0FF9C78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B0FF9C80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B0FF9C88);
  return result;
}

uint64_t sub_1B0FF9C94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B0FF9C9CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1B0FF9CA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B0FF9CA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ConfirmationDialogModifier.CodingKeys()
{
  return &type metadata for ConfirmationDialogModifier.CodingKeys;
}

unint64_t sub_1B0FF9CC8()
{
  unint64_t result;

  result = qword_1EEEE0AB0;
  if (!qword_1EEEE0AB0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1045670, &type metadata for ConfirmationDialogModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0AB0);
  }
  return result;
}

unint64_t sub_1B0FF9D10()
{
  unint64_t result;

  result = qword_1EEEE0AB8;
  if (!qword_1EEEE0AB8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10455A8, &type metadata for ConfirmationDialogModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0AB8);
  }
  return result;
}

unint64_t sub_1B0FF9D58()
{
  unint64_t result;

  result = qword_1EEEE0AC0;
  if (!qword_1EEEE0AC0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10455D0, &type metadata for ConfirmationDialogModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0AC0);
  }
  return result;
}

uint64_t sub_1B0FF9D9C()
{
  unint64_t v0;

  v0 = sub_1B103605C();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

ValueMetadata *type metadata accessor for PickerStyleModifier()
{
  return &type metadata for PickerStyleModifier;
}

uint64_t destroy for TagModifier(uint64_t a1)
{
  return sub_1B0F74EA4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for TagModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1B0F5A84C(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for TagModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1B0F5A84C(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  sub_1B0F74EA4(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for TagModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  sub_1B0F74EA4(v5, v7, v6, v8);
  return a1;
}

ValueMetadata *type metadata accessor for TagModifier()
{
  return &type metadata for TagModifier;
}

uint64_t sub_1B0FF9F2C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *boxed_opaque_existential_1;
  unint64_t v24;
  _QWORD v25[2];
  _QWORD v26[2];
  uint64_t v27;

  v9 = *(_QWORD *)v3;
  v8 = *(_QWORD *)(v3 + 8);
  v10 = *(_QWORD *)(v3 + 16);
  v11 = *(_BYTE *)(v3 + 24);
  sub_1B0F5A84C(*(_QWORD *)v3, v8, v10, v11);
  sub_1B0FD6EFC(a2, v9, v8, v10, v11, &v27);
  if (v4)
  {

    sub_1B0F74EA4(v9, v8, v10, v11);
    if (qword_1EEEDE0B0 != -1)
      swift_once();
    v12 = sub_1B103467C();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EEF0BA00);
    v13 = sub_1B1034664();
    v14 = sub_1B1035E34();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_1B0F50000, v13, v14, "TagModifier Unable to resolve tag value", v15, 2u);
      MEMORY[0x1B5E15248](v15, -1, -1);
    }

    return sub_1B0F5FD84((uint64_t)a1, (uint64_t)a3);
  }
  else
  {
    sub_1B0F74EA4(v9, v8, v10, v11);
    v17 = v27;
    v18 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v27 = v17;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEE0AD8);
    v19 = sub_1B103497C();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEE0AE0);
    v20 = sub_1B103497C();
    a3[3] = v20;
    v21 = MEMORY[0x1E0CDBEF0];
    v26[0] = v18;
    v26[1] = sub_1B0F5A7E4(&qword_1EEEE0AE8, &qword_1EEEE0AD8, MEMORY[0x1E0CDBEF0]);
    v22 = MEMORY[0x1E0CD9C20];
    v25[0] = MEMORY[0x1B5E15188](MEMORY[0x1E0CD9C20], v19, v26);
    v25[1] = sub_1B0F5A7E4(&qword_1EEEE0AF0, &qword_1EEEE0AE0, v21);
    a3[4] = MEMORY[0x1B5E15188](v22, v20, v25);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a3);
    v24 = sub_1B0F8AF44();
    sub_1B0FFA1D0((uint64_t)&v27, 1, (uint64_t)&type metadata for DecodableState, v18, v24, (uint64_t)boxed_opaque_existential_1);
    return swift_release();
  }
}

uint64_t sub_1B0FFA1D0@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  void (*v20)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[2];
  uint64_t v41;

  v30 = a4;
  v31 = a2;
  v38 = a6;
  v39 = a1;
  v8 = sub_1B1035E64();
  v41 = a5;
  v33 = MEMORY[0x1B5E15188](MEMORY[0x1E0DEE990], v8, &v41);
  v34 = v8;
  v9 = sub_1B1034A30();
  v36 = *(_QWORD *)(v9 - 8);
  v37 = v9;
  MEMORY[0x1E0C80A78](v9);
  v35 = (char *)&v28 - v10;
  v28 = sub_1B1034A30();
  v11 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v13 = (char *)&v28 - v12;
  v14 = sub_1B1034A3C();
  MEMORY[0x1B5E15188](MEMORY[0x1E0CDA138], v14);
  v29 = sub_1B103500C();
  v15 = sub_1B103497C();
  v32 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v28 - v16;
  v18 = *(_QWORD *)(a3 - 8);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v19(v13, v39, a3);
  v20 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56);
  v20(v13, 0, 1, a3);
  v21 = v30;
  sub_1B10355A0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v28);
  if ((v31 & 1) != 0)
  {
    v22 = v35;
    v19(v35, v39, a3);
    v20(v22, 0, 1, a3);
    v23 = swift_checkMetadataState();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 0, 1, v23);
  }
  else
  {
    v24 = swift_checkMetadataState();
    v22 = v35;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v35, 1, 1, v24);
  }
  v25 = sub_1B1034A3C();
  v26 = MEMORY[0x1B5E15188](MEMORY[0x1E0CDBEF0], v29);
  v40[0] = v21;
  v40[1] = v26;
  MEMORY[0x1B5E15188](MEMORY[0x1E0CD9C20], v15, v40);
  MEMORY[0x1B5E15188](MEMORY[0x1E0CDA138], v25);
  sub_1B10355A0();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v22, v37);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v17, v15);
}

uint64_t sub_1B0FFA4D8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v6;
  uint64_t v7;
  char v8;
  _QWORD v9[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B1036260();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDEA40);
    sub_1B0F5A7E4((unint64_t *)&qword_1EEEDEB48, &qword_1EEEDEA40, (uint64_t)&protocol conformance descriptor for Referenceable<A>);
    sub_1B1036164();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    *(_OWORD *)a2 = v6;
    *(_QWORD *)(a2 + 16) = v7;
    *(_BYTE *)(a2 + 24) = v8;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B0FFA5F0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B0FF9F2C(a1, a2, a3);
}

uint64_t sub_1B0FFA604@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B0FFA4D8(a1, a2);
}

void sub_1B0FFA618(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1B0FFA644()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_1B1034C04();
  v2 = MEMORY[0x1E0CDAEC8];
  v0[3] = v1;
  v0[4] = v2;
  __swift_allocate_boxed_opaque_existential_1(v0);
  return sub_1B1034BF8();
}

uint64_t sub_1B0FFA764@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  void *v4;
  unsigned int v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21[3];
  uint64_t v22;
  uint64_t v23;

  v7 = *(unsigned __int8 *)(v3 + 24);
  if (v7 <= 0xFD)
  {
    v10 = *(_QWORD *)v3;
    v9 = *(_QWORD *)(v3 + 8);
    v11 = *(_QWORD *)(v3 + 16);
    v21[0] = v10;
    v21[1] = v9;
    v21[2] = v11;
    LOBYTE(v22) = v7;
    sub_1B0F56B9C(v10, v9, v11, v7);
    StringResolvable.resolved(with:)(a2);
    if (v4)

    sub_1B0F56B88(v10, v9, v11, v7);
  }
  v12 = sub_1B0FFAB58();
  if (v12 == 7)
  {
    v22 = sub_1B1034C04();
    v23 = MEMORY[0x1E0CDAEC8];
    __swift_allocate_boxed_opaque_existential_1(v21);
    sub_1B1034BF8();
  }
  else
  {
    sub_1B0FFA618(v12);
    sub_1B0F5A0E4(&v18, (uint64_t)v21);
  }
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = v22;
  v16 = v23;
  __swift_project_boxed_opaque_existential_1(v21, v22);
  *(_QWORD *)&v18 = v13;
  *((_QWORD *)&v18 + 1) = v15;
  v19 = v14;
  v20 = v16;
  a3[3] = MEMORY[0x1B5E15134](0, &v18, MEMORY[0x1E0CDE100], 0);
  *(_QWORD *)&v18 = v13;
  *((_QWORD *)&v18 + 1) = v15;
  v19 = v14;
  v20 = v16;
  a3[4] = swift_getOpaqueTypeConformance2();
  __swift_allocate_boxed_opaque_existential_1(a3);
  sub_1B1035384();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

uint64_t sub_1B0FFA950@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v10[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B1036260();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_project_boxed_opaque_existential_1(v10, v10[3]);
  sub_1B0F56A98();
  sub_1B1036164();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 8) = v7;
  *(_QWORD *)(a2 + 16) = v8;
  *(_BYTE *)(a2 + 24) = v9;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B0FFAA60@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B0FFA764(a1, a2, a3);
}

uint64_t sub_1B0FFAA74@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B0FFA950(a1, a2);
}

unint64_t sub_1B0FFAA88(uint64_t a1)
{
  unint64_t result;

  result = sub_1B0FFAAAC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B0FFAAAC()
{
  unint64_t result;

  result = qword_1EEEE0AC8;
  if (!qword_1EEEE0AC8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1045798, &type metadata for PickerStyleModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0AC8);
  }
  return result;
}

unint64_t sub_1B0FFAAF0(uint64_t a1)
{
  unint64_t result;

  result = sub_1B0FFAB14();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B0FFAB14()
{
  unint64_t result;

  result = qword_1EEEE0AD0;
  if (!qword_1EEEE0AD0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1045770, &type metadata for TagModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0AD0);
  }
  return result;
}

uint64_t sub_1B0FFAB58()
{
  unint64_t v0;

  v0 = sub_1B103605C();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

uint64_t initializeWithCopy for LayoutPriorityModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1B0F6C708(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for LayoutPriorityModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1B0F6C708(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_1B0F6C7D4(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for LayoutPriorityModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_1B0F6C7D4(v5, v7, v6, v8);
  return a1;
}

ValueMetadata *type metadata accessor for LayoutPriorityModifier()
{
  return &type metadata for LayoutPriorityModifier;
}

ValueMetadata *type metadata accessor for MultiLineTextAlignmentModifier()
{
  return &type metadata for MultiLineTextAlignmentModifier;
}

uint64_t sub_1B0FFACD8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  __int128 v12;
  uint64_t v13;
  char v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0B28);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B0FFB2FC();
  sub_1B1036278();
  if (!v2)
  {
    sub_1B0F7E5F8();
    sub_1B10360BC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v9 = v13;
    v10 = v14;
    *(_OWORD *)a2 = v12;
    *(_QWORD *)(a2 + 16) = v9;
    *(_BYTE *)(a2 + 24) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B0FFAE0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B0FFB6FC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B0FFAE34()
{
  sub_1B0FFB2FC();
  return sub_1B10362B4();
}

uint64_t sub_1B0FFAE5C()
{
  sub_1B0FFB2FC();
  return sub_1B10362C0();
}

uint64_t sub_1B0FFAE84@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v7 = *(_QWORD *)(v3 + 8);
  v8 = *(_QWORD *)(v3 + 16);
  v9 = *(_BYTE *)(v3 + 24);
  v15 = *(_QWORD *)v3;
  v16 = v7;
  v17 = v8;
  v18 = v9;
  sub_1B0F6C708(v15, v7, v8, v9);
  sub_1B0FA70A4(a2);
  LOBYTE(a2) = v10;
  sub_1B0F6C7D4(v15, v7, v8, v9);
  if ((a2 & 1) != 0)
    return sub_1B0F5FD84((uint64_t)a1, (uint64_t)a3);
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEE0B18);
  v12 = sub_1B103497C();
  a3[3] = v12;
  v14[0] = v11;
  v14[1] = sub_1B0F5A7E4(&qword_1EEEE0B20, &qword_1EEEE0B18, MEMORY[0x1E0CDBEF0]);
  a3[4] = MEMORY[0x1B5E15188](MEMORY[0x1E0CD9C20], v12, v14);
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1B10353FC();
}

uint64_t sub_1B0FFAFDC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B0FFACD8(a1, a2);
}

uint64_t sub_1B0FFAFF0(char a1)
{
  return *(_QWORD *)&aLeading_5[8 * a1];
}

uint64_t sub_1B0FFB010(char *a1, char *a2)
{
  return sub_1B100C6A0(*a1, *a2);
}

uint64_t sub_1B0FFB01C()
{
  return sub_1B1010FC4();
}

uint64_t sub_1B0FFB024()
{
  return sub_1B1011F64();
}

uint64_t sub_1B0FFB02C()
{
  return sub_1B1014AE8();
}

uint64_t sub_1B0FFB034@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B0FFB7C4();
  *a1 = result;
  return result;
}

uint64_t sub_1B0FFB060@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B0FFAFF0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B0FFB088()
{
  sub_1B0FFB780();
  return sub_1B1035CB4();
}

uint64_t sub_1B0FFB0E4()
{
  sub_1B0FFB780();
  return sub_1B1035CA8();
}

uint64_t sub_1B0FFB130@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[2];

  v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEE0B08);
  v4 = sub_1B103497C();
  a2[3] = v4;
  v6[0] = v3;
  v6[1] = sub_1B0F5A7E4(&qword_1EEEE0B10, &qword_1EEEE0B08, MEMORY[0x1E0CDCF80]);
  a2[4] = MEMORY[0x1B5E15188](MEMORY[0x1E0CD9C20], v4, v6);
  __swift_allocate_boxed_opaque_existential_1(a2);
  return sub_1B10354F8();
}

unint64_t sub_1B0FFB204@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  unint64_t result;

  result = sub_1B0FFB340(a1);
  if (!v2)
    *a2 = result;
  return result;
}

unint64_t sub_1B0FFB22C(uint64_t a1)
{
  unint64_t result;

  result = sub_1B0FFB250();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B0FFB250()
{
  unint64_t result;

  result = qword_1EEEE0AF8;
  if (!qword_1EEEE0AF8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1045888, &type metadata for LayoutPriorityModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0AF8);
  }
  return result;
}

unint64_t sub_1B0FFB294(uint64_t a1)
{
  unint64_t result;

  result = sub_1B0FFB2B8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B0FFB2B8()
{
  unint64_t result;

  result = qword_1EEEE0B00;
  if (!qword_1EEEE0B00)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1045860, &type metadata for MultiLineTextAlignmentModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0B00);
  }
  return result;
}

unint64_t sub_1B0FFB2FC()
{
  unint64_t result;

  result = qword_1EEEE0B30;
  if (!qword_1EEEE0B30)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1045AB8, &type metadata for LayoutPriorityModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0B30);
  }
  return result;
}

unint64_t sub_1B0FFB340(_QWORD *a1)
{
  uint64_t v1;
  unint64_t v3;
  _QWORD v5[4];
  unsigned __int8 v6;

  v3 = (unint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B1036260();
  if (!v1)
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    sub_1B0FFB418();
    sub_1B1036164();
    v3 = v6;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

unint64_t sub_1B0FFB418()
{
  unint64_t result;

  result = qword_1EEEE0B38;
  if (!qword_1EEEE0B38)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1045A90, &type metadata for TextAlignmentName);
    atomic_store(result, (unint64_t *)&qword_1EEEE0B38);
  }
  return result;
}

uint64_t _s6LiftUI30MultiLineTextAlignmentModifierVwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B0FFB4A8 + 4 * byte_1B1045805[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B0FFB4DC + 4 * byte_1B1045800[v4]))();
}

uint64_t sub_1B0FFB4DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B0FFB4E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B0FFB4ECLL);
  return result;
}

uint64_t sub_1B0FFB4F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B0FFB500);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B0FFB504(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B0FFB50C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TextAlignmentName()
{
  return &type metadata for TextAlignmentName;
}

uint64_t storeEnumTagSinglePayload for LayoutPriorityModifier.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B0FFB568 + 4 * byte_1B104580A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B0FFB588 + 4 * byte_1B104580F[v4]))();
}

_BYTE *sub_1B0FFB568(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B0FFB588(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B0FFB590(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B0FFB598(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B0FFB5A0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B0FFB5A8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LayoutPriorityModifier.CodingKeys()
{
  return &type metadata for LayoutPriorityModifier.CodingKeys;
}

unint64_t sub_1B0FFB5C8()
{
  unint64_t result;

  result = qword_1EEEE0B40;
  if (!qword_1EEEE0B40)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10459A0, &type metadata for LayoutPriorityModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0B40);
  }
  return result;
}

unint64_t sub_1B0FFB610()
{
  unint64_t result;

  result = qword_1EEEE0B48;
  if (!qword_1EEEE0B48)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1045A68, &type metadata for TextAlignmentName);
    atomic_store(result, (unint64_t *)&qword_1EEEE0B48);
  }
  return result;
}

unint64_t sub_1B0FFB658()
{
  unint64_t result;

  result = qword_1EEEE0B50;
  if (!qword_1EEEE0B50)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1045910, &type metadata for LayoutPriorityModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0B50);
  }
  return result;
}

unint64_t sub_1B0FFB6A0()
{
  unint64_t result;

  result = qword_1EEEE0B58;
  if (!qword_1EEEE0B58)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1045938, &type metadata for LayoutPriorityModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0B58);
  }
  return result;
}

uint64_t sub_1B0FFB6E4()
{
  return 0x797469726F697270;
}

uint64_t sub_1B0FFB6FC(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x797469726F697270 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1B1036128();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

unint64_t sub_1B0FFB780()
{
  unint64_t result;

  result = qword_1EEEE0B60;
  if (!qword_1EEEE0B60)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10459F0, &type metadata for TextAlignmentName);
    atomic_store(result, (unint64_t *)&qword_1EEEE0B60);
  }
  return result;
}

uint64_t sub_1B0FFB7C4()
{
  unint64_t v0;

  v0 = sub_1B103605C();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

id ContentRegistry.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t sub_1B0FFB830()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0420);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1B1036008();
  __swift_allocate_value_buffer(v3, qword_1EEF0BA18);
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1EEF0BA18);
  sub_1B1035FFC();
  v5 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  __break(1u);
  return result;
}

void *sub_1B0FFB918()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  void *result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0EE8);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B1045B40;
  *(_QWORD *)(v0 + 32) = 1954047316;
  *(_QWORD *)(v0 + 40) = 0xE400000000000000;
  v1 = sub_1B0F8A65C();
  *(_QWORD *)(v0 + 48) = &type metadata for TextView;
  *(_QWORD *)(v0 + 56) = v1;
  *(_QWORD *)(v0 + 64) = 0x6B6361745356;
  *(_QWORD *)(v0 + 72) = 0xE600000000000000;
  v2 = sub_1B0FB0804();
  *(_QWORD *)(v0 + 80) = &type metadata for VStackView;
  *(_QWORD *)(v0 + 88) = v2;
  *(_QWORD *)(v0 + 96) = 0x6B6361745348;
  *(_QWORD *)(v0 + 104) = 0xE600000000000000;
  v3 = sub_1B0FB06CC();
  *(_QWORD *)(v0 + 112) = &type metadata for HStackView;
  *(_QWORD *)(v0 + 120) = v3;
  *(_QWORD *)(v0 + 128) = 0x6B636174535ALL;
  *(_QWORD *)(v0 + 136) = 0xE600000000000000;
  v4 = sub_1B0FB0594();
  *(_QWORD *)(v0 + 144) = &type metadata for ZStackView;
  *(_QWORD *)(v0 + 152) = v4;
  *(_QWORD *)(v0 + 160) = 0x61745356797A614CLL;
  *(_QWORD *)(v0 + 168) = 0xEA00000000006B63;
  v5 = sub_1B0FB045C();
  *(_QWORD *)(v0 + 176) = &type metadata for LazyVStackView;
  *(_QWORD *)(v0 + 184) = v5;
  *(_QWORD *)(v0 + 192) = 0x61745348797A614CLL;
  *(_QWORD *)(v0 + 200) = 0xEA00000000006B63;
  v6 = sub_1B0FB0324();
  *(_QWORD *)(v0 + 208) = &type metadata for LazyHStackView;
  *(_QWORD *)(v0 + 216) = v6;
  *(_QWORD *)(v0 + 224) = 1953720652;
  *(_QWORD *)(v0 + 232) = 0xE400000000000000;
  v7 = sub_1B0F78B2C();
  *(_QWORD *)(v0 + 240) = &type metadata for ListView;
  *(_QWORD *)(v0 + 248) = v7;
  *(_QWORD *)(v0 + 256) = 0x6E6F6974636553;
  *(_QWORD *)(v0 + 264) = 0xE700000000000000;
  v8 = sub_1B0F789B4();
  *(_QWORD *)(v0 + 272) = &type metadata for SectionView;
  *(_QWORD *)(v0 + 280) = v8;
  *(_QWORD *)(v0 + 288) = 0x72656469766944;
  *(_QWORD *)(v0 + 296) = 0xE700000000000000;
  v9 = sub_1B0F7887C();
  *(_QWORD *)(v0 + 304) = &type metadata for DividerView;
  *(_QWORD *)(v0 + 312) = v9;
  *(_QWORD *)(v0 + 320) = 0x6567616D49;
  *(_QWORD *)(v0 + 328) = 0xE500000000000000;
  v10 = sub_1B1000B08();
  *(_QWORD *)(v0 + 336) = &type metadata for SymbolView;
  *(_QWORD *)(v0 + 344) = v10;
  *(_QWORD *)(v0 + 352) = 0x616D49636E797341;
  *(_QWORD *)(v0 + 360) = 0xEA00000000006567;
  v11 = sub_1B1000B4C();
  *(_QWORD *)(v0 + 368) = &type metadata for AsyncImageView;
  *(_QWORD *)(v0 + 376) = v11;
  strcpy((char *)(v0 + 384), "ProgressView");
  *(_BYTE *)(v0 + 397) = 0;
  *(_WORD *)(v0 + 398) = -5120;
  v12 = sub_1B0F8A524();
  *(_QWORD *)(v0 + 400) = &type metadata for ProgressView;
  *(_QWORD *)(v0 + 408) = v12;
  *(_QWORD *)(v0 + 416) = 0x726563617053;
  *(_QWORD *)(v0 + 424) = 0xE600000000000000;
  v13 = sub_1B0F8A3EC();
  *(_QWORD *)(v0 + 432) = &type metadata for SpacerView;
  *(_QWORD *)(v0 + 440) = v13;
  *(_QWORD *)(v0 + 448) = 0x6E6F74747542;
  *(_QWORD *)(v0 + 456) = 0xE600000000000000;
  v14 = sub_1B0FBC110();
  *(_QWORD *)(v0 + 464) = &type metadata for ButtonView;
  *(_QWORD *)(v0 + 472) = v14;
  *(_QWORD *)(v0 + 480) = 1802398028;
  *(_QWORD *)(v0 + 488) = 0xE400000000000000;
  v15 = type metadata accessor for LinkView();
  v16 = sub_1B0FBA080(&qword_1EEEDEF48, 255, (uint64_t (*)(uint64_t))type metadata accessor for LinkView, (uint64_t)&unk_1B103AF94);
  *(_QWORD *)(v0 + 496) = v15;
  *(_QWORD *)(v0 + 504) = v16;
  *(_QWORD *)(v0 + 512) = 0x726F6C6F43;
  *(_QWORD *)(v0 + 520) = 0xE500000000000000;
  v17 = sub_1B0F8A1E4();
  *(_QWORD *)(v0 + 528) = &type metadata for ColorView;
  *(_QWORD *)(v0 + 536) = v17;
  strcpy((char *)(v0 + 544), "RemoteContent");
  *(_WORD *)(v0 + 558) = -4864;
  v18 = type metadata accessor for RemoteContentView(0);
  v19 = sub_1B0FBA080(&qword_1EEEDE180, 255, type metadata accessor for RemoteContentView, (uint64_t)&protocol conformance descriptor for RemoteContentView);
  *(_QWORD *)(v0 + 560) = v18;
  *(_QWORD *)(v0 + 568) = v19;
  *(_QWORD *)(v0 + 576) = 0x697461676976614ELL;
  *(_QWORD *)(v0 + 584) = 0xEF6B636174536E6FLL;
  v20 = sub_1B0FB3A94();
  *(_QWORD *)(v0 + 592) = &type metadata for NavigationStackView;
  *(_QWORD *)(v0 + 600) = v20;
  strcpy((char *)(v0 + 608), "NavigationView");
  *(_BYTE *)(v0 + 623) = -18;
  v21 = sub_1B0FB395C();
  *(_QWORD *)(v0 + 624) = &type metadata for NavigatingView;
  *(_QWORD *)(v0 + 632) = v21;
  strcpy((char *)(v0 + 640), "NavigationLink");
  *(_BYTE *)(v0 + 655) = -18;
  v22 = sub_1B0FB3824();
  *(_QWORD *)(v0 + 656) = &type metadata for NavigationLinkView;
  *(_QWORD *)(v0 + 664) = v22;
  *(_QWORD *)(v0 + 672) = 0x656C67676F54;
  *(_QWORD *)(v0 + 680) = 0xE600000000000000;
  v23 = sub_1B0F8A0AC();
  *(_QWORD *)(v0 + 688) = &type metadata for ToggleView;
  *(_QWORD *)(v0 + 696) = v23;
  *(_QWORD *)(v0 + 704) = 0x6C6562614CLL;
  *(_QWORD *)(v0 + 712) = 0xE500000000000000;
  v24 = sub_1B0F89F74();
  *(_QWORD *)(v0 + 720) = &type metadata for LabelView;
  *(_QWORD *)(v0 + 728) = v24;
  *(_QWORD *)(v0 + 736) = 0x69566C6C6F726353;
  *(_QWORD *)(v0 + 744) = 0xEA00000000007765;
  v25 = sub_1B0F89E3C();
  *(_QWORD *)(v0 + 752) = &type metadata for ScrollingView;
  *(_QWORD *)(v0 + 760) = v25;
  *(_QWORD *)(v0 + 768) = 0x70756F7247;
  *(_QWORD *)(v0 + 776) = 0xE500000000000000;
  v26 = sub_1B0F89D04();
  *(_QWORD *)(v0 + 784) = &type metadata for GroupView;
  *(_QWORD *)(v0 + 792) = v26;
  *(_QWORD *)(v0 + 800) = 26185;
  *(_QWORD *)(v0 + 808) = 0xE200000000000000;
  v27 = sub_1B0F8DC9C();
  *(_QWORD *)(v0 + 816) = &type metadata for IfView;
  *(_QWORD *)(v0 + 824) = v27;
  *(_QWORD *)(v0 + 832) = 0x68636145726F46;
  *(_QWORD *)(v0 + 840) = 0xE700000000000000;
  v28 = sub_1B0F89C10();
  *(_QWORD *)(v0 + 848) = &type metadata for ForEachView;
  *(_QWORD *)(v0 + 856) = v28;
  *(_QWORD *)(v0 + 864) = 1836216134;
  *(_QWORD *)(v0 + 872) = 0xE400000000000000;
  v29 = sub_1B0F89AD8();
  *(_QWORD *)(v0 + 880) = &type metadata for FormView;
  *(_QWORD *)(v0 + 888) = v29;
  *(_QWORD *)(v0 + 896) = 0x686353726F6C6F43;
  *(_QWORD *)(v0 + 904) = 0xEB00000000656D65;
  v30 = type metadata accessor for ColorSchemeReader();
  v31 = sub_1B0FBA080(&qword_1EEEE0F00, 255, (uint64_t (*)(uint64_t))type metadata accessor for ColorSchemeReader, (uint64_t)&unk_1B104B1F0);
  *(_QWORD *)(v0 + 912) = v30;
  *(_QWORD *)(v0 + 920) = v31;
  strcpy((char *)(v0 + 928), "GeometryReader");
  *(_BYTE *)(v0 + 943) = -18;
  v32 = sub_1B1000B90();
  *(_QWORD *)(v0 + 944) = &type metadata for GeometryReaderView;
  *(_QWORD *)(v0 + 952) = v32;
  *(_QWORD *)(v0 + 960) = 0xD000000000000010;
  *(_QWORD *)(v0 + 968) = 0x80000001B104D770;
  v33 = sub_1B1000BD4();
  *(_QWORD *)(v0 + 976) = &type metadata for ScrollViewReaderView;
  *(_QWORD *)(v0 + 984) = v33;
  *(_QWORD *)(v0 + 992) = 0x6569567974706D45;
  *(_QWORD *)(v0 + 1000) = 0xE900000000000077;
  v34 = sub_1B0F899A0();
  *(_QWORD *)(v0 + 1008) = &type metadata for EmptyViewView;
  *(_QWORD *)(v0 + 1016) = v34;
  *(_QWORD *)(v0 + 1024) = 0x72656B636950;
  *(_QWORD *)(v0 + 1032) = 0xE600000000000000;
  v35 = sub_1B0FB75F8();
  *(_QWORD *)(v0 + 1040) = &type metadata for PickerView;
  *(_QWORD *)(v0 + 1048) = v35;
  *(_QWORD *)(v0 + 1056) = 0x7474754274696445;
  *(_QWORD *)(v0 + 1064) = 0xEA00000000006E6FLL;
  v36 = sub_1B0FBBFD8();
  *(_QWORD *)(v0 + 1072) = &type metadata for EditButtonView;
  *(_QWORD *)(v0 + 1080) = v36;
  result = (void *)sub_1B0F55634(v0);
  off_1EEEE0B68 = result;
  return result;
}

void *sub_1B0FFBF34()
{
  uint64_t inited;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  void *result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0F18);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B1045B50;
  *(_QWORD *)(inited + 32) = 0x656C63726943;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  v1 = sub_1B0F5F4A0();
  *(_QWORD *)(inited + 48) = &type metadata for CircleView;
  *(_QWORD *)(inited + 56) = v1;
  *(_QWORD *)(inited + 64) = 0x657370696C6C45;
  *(_QWORD *)(inited + 72) = 0xE700000000000000;
  v2 = sub_1B0F5F638();
  *(_QWORD *)(inited + 80) = &type metadata for EllipseView;
  *(_QWORD *)(inited + 88) = v2;
  *(_QWORD *)(inited + 96) = 0x656C7573706143;
  *(_QWORD *)(inited + 104) = 0xE700000000000000;
  v3 = sub_1B0F5F7D0();
  *(_QWORD *)(inited + 112) = &type metadata for CapsuleView;
  *(_QWORD *)(inited + 120) = v3;
  *(_QWORD *)(inited + 128) = 0x6C676E6174636552;
  *(_QWORD *)(inited + 136) = 0xE900000000000065;
  v4 = sub_1B0F5F968();
  *(_QWORD *)(inited + 144) = &type metadata for RectangleView;
  *(_QWORD *)(inited + 152) = v4;
  *(_QWORD *)(inited + 160) = 0xD000000000000010;
  *(_QWORD *)(inited + 168) = 0x80000001B104D7B0;
  v5 = sub_1B0F5FB84();
  *(_QWORD *)(inited + 176) = &type metadata for RoundedRectangleView;
  *(_QWORD *)(inited + 184) = v5;
  result = (void *)sub_1B0F55628(inited);
  off_1EEEE0B70 = result;
  return result;
}

void *sub_1B0FFC050()
{
  uint64_t inited;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  void *result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0F28);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B1045B50;
  *(_QWORD *)(inited + 32) = 0x726F6C6F43;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  v1 = sub_1B1000DD0();
  *(_QWORD *)(inited + 48) = &type metadata for ColorShapeStyle;
  *(_QWORD *)(inited + 56) = v1;
  *(_QWORD *)(inited + 64) = 0x6C6169726574614DLL;
  *(_QWORD *)(inited + 72) = 0xE800000000000000;
  v2 = sub_1B1000E14();
  *(_QWORD *)(inited + 80) = &type metadata for MaterialShapeStyle;
  *(_QWORD *)(inited + 88) = v2;
  strcpy((char *)(inited + 96), "LinearGradient");
  *(_BYTE *)(inited + 111) = -18;
  v3 = sub_1B1000E58();
  *(_QWORD *)(inited + 112) = &type metadata for LinearGradientShapeStyle;
  *(_QWORD *)(inited + 120) = v3;
  *(_QWORD *)(inited + 128) = 0x4772616C75676E41;
  *(_QWORD *)(inited + 136) = 0xEF746E6569646172;
  v4 = sub_1B1000E9C();
  *(_QWORD *)(inited + 144) = &type metadata for AngularGradientShapeStyle;
  *(_QWORD *)(inited + 152) = v4;
  strcpy((char *)(inited + 160), "RadialGradient");
  *(_BYTE *)(inited + 175) = -18;
  v5 = sub_1B1000EE0();
  *(_QWORD *)(inited + 176) = &type metadata for RadialGradientShapeStyle;
  *(_QWORD *)(inited + 184) = v5;
  result = (void *)sub_1B0F55790(inited);
  off_1EEEE0B78 = result;
  return result;
}

void *sub_1B0FFC17C()
{
  void *result;

  result = (void *)sub_1B0F5579C(MEMORY[0x1E0DEE9D8]);
  off_1EEEE0B80 = result;
  return result;
}

void *sub_1B0FFC1A0()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  void *result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0C08);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1B1045B60;
  *(_QWORD *)(v0 + 32) = 0x676E6964646170;
  *(_QWORD *)(v0 + 40) = 0xE700000000000000;
  v1 = sub_1B0FFF474();
  *(_QWORD *)(v0 + 48) = &type metadata for PaddingModifier;
  *(_QWORD *)(v0 + 56) = v1;
  *(_QWORD *)(v0 + 64) = 0x726564726F62;
  *(_QWORD *)(v0 + 72) = 0xE600000000000000;
  v2 = sub_1B0FFF4B8();
  *(_QWORD *)(v0 + 80) = &type metadata for BorderModifier;
  *(_QWORD *)(v0 + 88) = v2;
  strcpy((char *)(v0 + 96), "roundedBorder");
  *(_WORD *)(v0 + 110) = -4864;
  v3 = sub_1B0FFF4FC();
  *(_QWORD *)(v0 + 112) = &type metadata for RoundedBorderModifier;
  *(_QWORD *)(v0 + 120) = v3;
  *(_QWORD *)(v0 + 128) = 0x756F72676B636162;
  *(_QWORD *)(v0 + 136) = 0xEF726F6C6F43646ELL;
  v4 = sub_1B0FFF540();
  *(_QWORD *)(v0 + 144) = &type metadata for BackgroundColorModifier;
  *(_QWORD *)(v0 + 152) = v4;
  *(_QWORD *)(v0 + 160) = 0x756F726765726F66;
  *(_QWORD *)(v0 + 168) = 0xEF726F6C6F43646ELL;
  v5 = sub_1B0FFF584();
  *(_QWORD *)(v0 + 176) = &type metadata for ForegroundColorModifier;
  *(_QWORD *)(v0 + 184) = v5;
  *(_QWORD *)(v0 + 192) = 0x756F726765726F66;
  *(_QWORD *)(v0 + 200) = 0xEF656C797453646ELL;
  v6 = sub_1B0FFF5C8();
  *(_QWORD *)(v0 + 208) = &type metadata for ForegroundStyleModifier;
  *(_QWORD *)(v0 + 216) = v6;
  *(_QWORD *)(v0 + 224) = 0x6F43746E65636361;
  *(_QWORD *)(v0 + 232) = 0xEB00000000726F6CLL;
  v7 = sub_1B0FFF60C();
  *(_QWORD *)(v0 + 240) = &type metadata for AccentColorModifier;
  *(_QWORD *)(v0 + 248) = v7;
  *(_QWORD *)(v0 + 256) = 1953393012;
  *(_QWORD *)(v0 + 264) = 0xE400000000000000;
  v8 = sub_1B0FFF650();
  *(_QWORD *)(v0 + 272) = &type metadata for TintColorModifier;
  *(_QWORD *)(v0 + 280) = v8;
  *(_QWORD *)(v0 + 288) = 0x656D617266;
  *(_QWORD *)(v0 + 296) = 0xE500000000000000;
  v9 = sub_1B0FFF694();
  *(_QWORD *)(v0 + 304) = &type metadata for FrameModifier;
  *(_QWORD *)(v0 + 312) = v9;
  *(_QWORD *)(v0 + 320) = 0x696D694C656E696CLL;
  *(_QWORD *)(v0 + 328) = 0xE900000000000074;
  v10 = sub_1B0FFF6D8();
  *(_QWORD *)(v0 + 336) = &type metadata for LineLimitModifier;
  *(_QWORD *)(v0 + 344) = v10;
  *(_QWORD *)(v0 + 352) = 0xD000000000000016;
  *(_QWORD *)(v0 + 360) = 0x80000001B104D430;
  v11 = sub_1B0FFF71C();
  *(_QWORD *)(v0 + 368) = &type metadata for MultiLineTextAlignmentModifier;
  *(_QWORD *)(v0 + 376) = v11;
  strcpy((char *)(v0 + 384), "cornerRadius");
  *(_BYTE *)(v0 + 397) = 0;
  *(_WORD *)(v0 + 398) = -5120;
  v12 = sub_1B0FFF760();
  *(_QWORD *)(v0 + 400) = &type metadata for CornerRadiusModifier;
  *(_QWORD *)(v0 + 408) = v12;
  *(_QWORD *)(v0 + 416) = 0x536C6F72746E6F63;
  *(_QWORD *)(v0 + 424) = 0xEB00000000657A69;
  v13 = type metadata accessor for ControlSizeModifier();
  v14 = sub_1B0FBA080(&qword_1EEEE0C70, 255, (uint64_t (*)(uint64_t))type metadata accessor for ControlSizeModifier, (uint64_t)&unk_1B103843C);
  *(_QWORD *)(v0 + 432) = v13;
  *(_QWORD *)(v0 + 440) = v14;
  *(_QWORD *)(v0 + 448) = 0x74536E6F74747562;
  *(_QWORD *)(v0 + 456) = 0xEB00000000656C79;
  v15 = sub_1B0FFF7A4();
  *(_QWORD *)(v0 + 464) = &type metadata for ButtonStyleModifier;
  *(_QWORD *)(v0 + 472) = v15;
  strcpy((char *)(v0 + 480), "layoutPriority");
  *(_BYTE *)(v0 + 495) = -18;
  v16 = sub_1B0FFF7E8();
  *(_QWORD *)(v0 + 496) = &type metadata for LayoutPriorityModifier;
  *(_QWORD *)(v0 + 504) = v16;
  *(_QWORD *)(v0 + 512) = 1953394534;
  *(_QWORD *)(v0 + 520) = 0xE400000000000000;
  v17 = sub_1B0FFF82C();
  *(_QWORD *)(v0 + 528) = &type metadata for FontModifier;
  *(_QWORD *)(v0 + 536) = v17;
  *(_QWORD *)(v0 + 544) = 0x7472656C61;
  *(_QWORD *)(v0 + 552) = 0xE500000000000000;
  v18 = sub_1B0FFF870();
  *(_QWORD *)(v0 + 560) = &type metadata for AlertModifier;
  *(_QWORD *)(v0 + 568) = v18;
  *(_QWORD *)(v0 + 576) = 0xD000000000000012;
  *(_QWORD *)(v0 + 584) = 0x80000001B104D450;
  v19 = sub_1B0FFF8B4();
  *(_QWORD *)(v0 + 592) = &type metadata for ConfirmationDialogModifier;
  *(_QWORD *)(v0 + 600) = v19;
  *(_QWORD *)(v0 + 608) = 26217;
  *(_QWORD *)(v0 + 616) = 0xE200000000000000;
  v20 = sub_1B0FFF8F8();
  *(_QWORD *)(v0 + 624) = &type metadata for IfModifier;
  *(_QWORD *)(v0 + 632) = v20;
  *(_QWORD *)(v0 + 640) = 0x776F64616873;
  *(_QWORD *)(v0 + 648) = 0xE600000000000000;
  v21 = sub_1B0FFF93C();
  *(_QWORD *)(v0 + 656) = &type metadata for ShadowModifier;
  *(_QWORD *)(v0 + 664) = v21;
  *(_QWORD *)(v0 + 672) = 0x697461676976616ELL;
  *(_QWORD *)(v0 + 680) = 0xEF656C7469546E6FLL;
  v22 = sub_1B0FFF980();
  *(_QWORD *)(v0 + 688) = &type metadata for NavigationTitleModifier;
  *(_QWORD *)(v0 + 696) = v22;
  *(_QWORD *)(v0 + 704) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 712) = 0x80000001B104D470;
  v23 = sub_1B0FFF9C4();
  *(_QWORD *)(v0 + 720) = &type metadata for NavigationBarTitleDisplayModeModifier;
  *(_QWORD *)(v0 + 728) = v23;
  *(_QWORD *)(v0 + 736) = 0x656B6F727473;
  *(_QWORD *)(v0 + 744) = 0xE600000000000000;
  v24 = sub_1B0FBA66C();
  *(_QWORD *)(v0 + 752) = &type metadata for StrokeModifier;
  *(_QWORD *)(v0 + 760) = v24;
  *(_QWORD *)(v0 + 768) = 0x7A69536465786966;
  *(_QWORD *)(v0 + 776) = 0xE900000000000065;
  v25 = sub_1B0FFFA08();
  *(_QWORD *)(v0 + 784) = &type metadata for FixedSizeModifier;
  *(_QWORD *)(v0 + 792) = v25;
  *(_QWORD *)(v0 + 800) = 0x7061685370696C63;
  *(_QWORD *)(v0 + 808) = 0xE900000000000065;
  v26 = sub_1B0FFFA4C();
  *(_QWORD *)(v0 + 816) = &type metadata for ClipShapeModifier;
  *(_QWORD *)(v0 + 824) = v26;
  *(_QWORD *)(v0 + 832) = 0x7465656873;
  *(_QWORD *)(v0 + 840) = 0xE500000000000000;
  v27 = sub_1B0FFFA90();
  *(_QWORD *)(v0 + 848) = &type metadata for SheetModifier;
  *(_QWORD *)(v0 + 856) = v27;
  *(_QWORD *)(v0 + 864) = 0x7261657070416E6FLL;
  *(_QWORD *)(v0 + 872) = 0xE800000000000000;
  v28 = sub_1B0FFFAD4();
  *(_QWORD *)(v0 + 880) = &type metadata for OnAppearModifier;
  *(_QWORD *)(v0 + 888) = v28;
  strcpy((char *)(v0 + 896), "onTapGesture");
  *(_BYTE *)(v0 + 909) = 0;
  *(_WORD *)(v0 + 910) = -5120;
  v29 = sub_1B0FFFB18();
  *(_QWORD *)(v0 + 912) = &type metadata for OnTapModifier;
  *(_QWORD *)(v0 + 920) = v29;
  *(_QWORD *)(v0 + 928) = 0x756F72676B636162;
  *(_QWORD *)(v0 + 936) = 0xEA0000000000646ELL;
  v30 = sub_1B0FFFB5C();
  *(_QWORD *)(v0 + 944) = &type metadata for BackgroundModifier;
  *(_QWORD *)(v0 + 952) = v30;
  *(_QWORD *)(v0 + 960) = 0x79616C7265766FLL;
  *(_QWORD *)(v0 + 968) = 0xE700000000000000;
  v31 = sub_1B0FFFBA0();
  *(_QWORD *)(v0 + 976) = &type metadata for OverlayModifier;
  *(_QWORD *)(v0 + 984) = v31;
  *(_QWORD *)(v0 + 992) = 0x6F6974616D696E61;
  *(_QWORD *)(v0 + 1000) = 0xE90000000000006ELL;
  v32 = sub_1B0FFFBE4();
  *(_QWORD *)(v0 + 1008) = &type metadata for AnimationModifier;
  *(_QWORD *)(v0 + 1016) = v32;
  *(_QWORD *)(v0 + 1024) = 1684828002;
  *(_QWORD *)(v0 + 1032) = 0xE400000000000000;
  v33 = sub_1B0FFFC28();
  *(_QWORD *)(v0 + 1040) = &type metadata for BoldModifier;
  *(_QWORD *)(v0 + 1048) = v33;
  *(_QWORD *)(v0 + 1056) = 0x63696C617469;
  *(_QWORD *)(v0 + 1064) = 0xE600000000000000;
  v34 = sub_1B0FFFC6C();
  *(_QWORD *)(v0 + 1072) = &type metadata for ItalicModifier;
  *(_QWORD *)(v0 + 1080) = v34;
  *(_QWORD *)(v0 + 1088) = 0x636170736F6E6F6DLL;
  *(_QWORD *)(v0 + 1096) = 0xEA00000000006465;
  v35 = sub_1B0FFFCB0();
  *(_QWORD *)(v0 + 1104) = &type metadata for MonospacedModifier;
  *(_QWORD *)(v0 + 1112) = v35;
  *(_QWORD *)(v0 + 1120) = 0x636170736F6E6F6DLL;
  *(_QWORD *)(v0 + 1128) = 0xEF74696769446465;
  v36 = sub_1B0FFFCF4();
  *(_QWORD *)(v0 + 1136) = &type metadata for MonospacedDigitModifier;
  *(_QWORD *)(v0 + 1144) = v36;
  *(_QWORD *)(v0 + 1152) = 0x676E696E72656BLL;
  *(_QWORD *)(v0 + 1160) = 0xE700000000000000;
  v37 = sub_1B0FFFD38();
  *(_QWORD *)(v0 + 1168) = &type metadata for KerningModifier;
  *(_QWORD *)(v0 + 1176) = v37;
  *(_QWORD *)(v0 + 1184) = 0x676E696B63617274;
  *(_QWORD *)(v0 + 1192) = 0xE800000000000000;
  v38 = sub_1B0FFFD7C();
  *(_QWORD *)(v0 + 1200) = &type metadata for TrackingModifier;
  *(_QWORD *)(v0 + 1208) = v38;
  strcpy((char *)(v0 + 1216), "baselineOffset");
  *(_BYTE *)(v0 + 1231) = -18;
  v39 = sub_1B0FFFDC0();
  *(_QWORD *)(v0 + 1232) = &type metadata for BaselineOffsetModifier;
  *(_QWORD *)(v0 + 1240) = v39;
  *(_QWORD *)(v0 + 1248) = 0x6C7974536D726F66;
  *(_QWORD *)(v0 + 1256) = 0xE900000000000065;
  v40 = sub_1B0FFFE04();
  *(_QWORD *)(v0 + 1264) = &type metadata for FormStyleModifier;
  *(_QWORD *)(v0 + 1272) = v40;
  *(_QWORD *)(v0 + 1280) = 0x666645656C616373;
  *(_QWORD *)(v0 + 1288) = 0xEB00000000746365;
  v41 = sub_1B0FFFE48();
  *(_QWORD *)(v0 + 1296) = &type metadata for ScaleEffectModifier;
  *(_QWORD *)(v0 + 1304) = v41;
  *(_QWORD *)(v0 + 1312) = 0x6152746365707361;
  *(_QWORD *)(v0 + 1320) = 0xEB000000006F6974;
  v42 = sub_1B0FFFE8C();
  *(_QWORD *)(v0 + 1328) = &type metadata for AspectRatioModifier;
  *(_QWORD *)(v0 + 1336) = v42;
  *(_QWORD *)(v0 + 1344) = 0xD000000000000012;
  *(_QWORD *)(v0 + 1352) = 0x80000001B104D490;
  v43 = sub_1B0FFFED0();
  *(_QWORD *)(v0 + 1360) = &type metadata for AccessibilityLabelModifier;
  *(_QWORD *)(v0 + 1368) = v43;
  *(_QWORD *)(v0 + 1376) = 0xD000000000000017;
  *(_QWORD *)(v0 + 1384) = 0x80000001B104D4B0;
  v44 = sub_1B0FFFF14();
  *(_QWORD *)(v0 + 1392) = &type metadata for AccessibilityIdentifierModifier;
  *(_QWORD *)(v0 + 1400) = v44;
  *(_QWORD *)(v0 + 1408) = 0xD000000000000013;
  *(_QWORD *)(v0 + 1416) = 0x80000001B104D4D0;
  v45 = sub_1B0FFFF58();
  *(_QWORD *)(v0 + 1424) = &type metadata for AccessibilityHiddenModifier;
  *(_QWORD *)(v0 + 1432) = v45;
  *(_QWORD *)(v0 + 1440) = 0xD000000000000013;
  *(_QWORD *)(v0 + 1448) = 0x80000001B104D4F0;
  v46 = sub_1B0FFFF9C();
  *(_QWORD *)(v0 + 1456) = &type metadata for SymbolRenderingModeModifier;
  *(_QWORD *)(v0 + 1464) = v46;
  *(_QWORD *)(v0 + 1472) = 0x6163536567616D69;
  *(_QWORD *)(v0 + 1480) = 0xEA0000000000656CLL;
  v47 = sub_1B0FFFFE0();
  *(_QWORD *)(v0 + 1488) = &type metadata for ImageScaleModifier;
  *(_QWORD *)(v0 + 1496) = v47;
  *(_QWORD *)(v0 + 1504) = 0x7261626C6F6F74;
  *(_QWORD *)(v0 + 1512) = 0xE700000000000000;
  v48 = sub_1B1000024();
  *(_QWORD *)(v0 + 1520) = &type metadata for ToolbarModifier;
  *(_QWORD *)(v0 + 1528) = v48;
  strcpy((char *)(v0 + 1536), "contentShape");
  *(_BYTE *)(v0 + 1549) = 0;
  *(_WORD *)(v0 + 1550) = -5120;
  v49 = sub_1B1000068();
  *(_QWORD *)(v0 + 1552) = &type metadata for ContentShapeModifier;
  *(_QWORD *)(v0 + 1560) = v49;
  *(_QWORD *)(v0 + 1568) = 0x7453656C67676F74;
  *(_QWORD *)(v0 + 1576) = 0xEB00000000656C79;
  v50 = sub_1B10000AC();
  *(_QWORD *)(v0 + 1584) = &type metadata for ToggleStyleModifier;
  *(_QWORD *)(v0 + 1592) = v50;
  *(_QWORD *)(v0 + 1600) = 0x64656C6261736964;
  *(_QWORD *)(v0 + 1608) = 0xE800000000000000;
  v51 = sub_1B10000F0();
  *(_QWORD *)(v0 + 1616) = &type metadata for DisabledModifier;
  *(_QWORD *)(v0 + 1624) = v51;
  *(_QWORD *)(v0 + 1632) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 1640) = 0x80000001B104D510;
  v52 = sub_1B1000134();
  *(_QWORD *)(v0 + 1648) = &type metadata for NavigationBarBackButtonHiddenModifier;
  *(_QWORD *)(v0 + 1656) = v52;
  *(_QWORD *)(v0 + 1664) = 0x74657366666FLL;
  *(_QWORD *)(v0 + 1672) = 0xE600000000000000;
  v53 = sub_1B1000178();
  *(_QWORD *)(v0 + 1680) = &type metadata for OffsetModifier;
  *(_QWORD *)(v0 + 1688) = v53;
  strcpy((char *)(v0 + 1696), "listRowInsets");
  *(_WORD *)(v0 + 1710) = -4864;
  v54 = sub_1B10001BC();
  *(_QWORD *)(v0 + 1712) = &type metadata for ListRowInsetsModifier;
  *(_QWORD *)(v0 + 1720) = v54;
  *(_QWORD *)(v0 + 1728) = 0xD000000000000010;
  *(_QWORD *)(v0 + 1736) = 0x80000001B104D530;
  v55 = sub_1B1000200();
  *(_QWORD *)(v0 + 1744) = &type metadata for ListRowSeparatorModifier;
  *(_QWORD *)(v0 + 1752) = v55;
  *(_QWORD *)(v0 + 1760) = 0x6C7974537473696CLL;
  *(_QWORD *)(v0 + 1768) = 0xE900000000000065;
  v56 = sub_1B1000244();
  *(_QWORD *)(v0 + 1776) = &type metadata for ListStyleModifier;
  *(_QWORD *)(v0 + 1784) = v56;
  *(_QWORD *)(v0 + 1792) = 0xD000000000000011;
  *(_QWORD *)(v0 + 1800) = 0x80000001B104D550;
  v57 = sub_1B1000288();
  *(_QWORD *)(v0 + 1808) = &type metadata for ListRowBackgroundModifier;
  *(_QWORD *)(v0 + 1816) = v57;
  *(_QWORD *)(v0 + 1824) = 0x7070617369446E6FLL;
  *(_QWORD *)(v0 + 1832) = 0xEB00000000726165;
  v58 = sub_1B10002CC();
  *(_QWORD *)(v0 + 1840) = &type metadata for OnDisappearModifier;
  *(_QWORD *)(v0 + 1848) = v58;
  *(_QWORD *)(v0 + 1856) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 1864) = 0x80000001B104D570;
  v59 = sub_1B1000310();
  *(_QWORD *)(v0 + 1872) = &type metadata for InteractiveDismissDisabledModifier;
  *(_QWORD *)(v0 + 1880) = v59;
  *(_QWORD *)(v0 + 1888) = 0x64657070696C63;
  *(_QWORD *)(v0 + 1896) = 0xE700000000000000;
  v60 = sub_1B1000354();
  *(_QWORD *)(v0 + 1904) = &type metadata for ClippedModifier;
  *(_QWORD *)(v0 + 1912) = v60;
  *(_QWORD *)(v0 + 1920) = 0xD000000000000011;
  *(_QWORD *)(v0 + 1928) = 0x80000001B104D590;
  v61 = sub_1B1000398();
  *(_QWORD *)(v0 + 1936) = &type metadata for ButtonBorderShapeModifier;
  *(_QWORD *)(v0 + 1944) = v61;
  *(_QWORD *)(v0 + 1952) = 25705;
  *(_QWORD *)(v0 + 1960) = 0xE200000000000000;
  v62 = sub_1B10003DC();
  *(_QWORD *)(v0 + 1968) = &type metadata for IdentifierModifier;
  *(_QWORD *)(v0 + 1976) = v62;
  *(_QWORD *)(v0 + 1984) = 0x65676E6168436E6FLL;
  *(_QWORD *)(v0 + 1992) = 0xE800000000000000;
  v63 = sub_1B1000420();
  *(_QWORD *)(v0 + 2000) = &type metadata for OnChangeModifier;
  *(_QWORD *)(v0 + 2008) = v63;
  *(_QWORD *)(v0 + 2016) = 0xD000000000000015;
  *(_QWORD *)(v0 + 2024) = 0x80000001B104D5B0;
  v64 = sub_1B1000464();
  *(_QWORD *)(v0 + 2032) = &type metadata for NavigationDestinationModifier;
  *(_QWORD *)(v0 + 2040) = v64;
  strcpy((char *)(v0 + 2048), "alignmentGuide");
  *(_BYTE *)(v0 + 2063) = -18;
  v65 = sub_1B10004A8();
  *(_QWORD *)(v0 + 2064) = &type metadata for AlignmentGuideModifier;
  *(_QWORD *)(v0 + 2072) = v65;
  *(_QWORD *)(v0 + 2080) = 1802723693;
  *(_QWORD *)(v0 + 2088) = 0xE400000000000000;
  v66 = sub_1B10004EC();
  *(_QWORD *)(v0 + 2096) = &type metadata for MaskModifier;
  *(_QWORD *)(v0 + 2104) = v66;
  *(_QWORD *)(v0 + 2112) = 0xD000000000000012;
  *(_QWORD *)(v0 + 2120) = 0x80000001B104D5D0;
  v67 = sub_1B1000530();
  *(_QWORD *)(v0 + 2128) = &type metadata for ListSectionSpacingModifier;
  *(_QWORD *)(v0 + 2136) = v67;
  *(_QWORD *)(v0 + 2144) = 0xD000000000000012;
  *(_QWORD *)(v0 + 2152) = 0x80000001B104D5F0;
  v68 = sub_1B1000574();
  *(_QWORD *)(v0 + 2160) = &type metadata for AccessibilityValueModifier;
  *(_QWORD *)(v0 + 2168) = v68;
  *(_QWORD *)(v0 + 2176) = 0xD000000000000011;
  *(_QWORD *)(v0 + 2184) = 0x80000001B104D610;
  v69 = sub_1B10005B8();
  *(_QWORD *)(v0 + 2192) = &type metadata for AccessibilityHintModifier;
  *(_QWORD *)(v0 + 2200) = v69;
  *(_QWORD *)(v0 + 2208) = 0xD000000000000013;
  *(_QWORD *)(v0 + 2216) = 0x80000001B104D630;
  v70 = sub_1B10005FC();
  *(_QWORD *)(v0 + 2224) = &type metadata for AccessibilityActionModifier;
  *(_QWORD *)(v0 + 2232) = v70;
  *(_QWORD *)(v0 + 2240) = 0xD000000000000014;
  *(_QWORD *)(v0 + 2248) = 0x80000001B104D650;
  v71 = sub_1B1000640();
  *(_QWORD *)(v0 + 2256) = &type metadata for AccessibilityElementModifier;
  *(_QWORD *)(v0 + 2264) = v71;
  *(_QWORD *)(v0 + 2272) = 0xD000000000000015;
  *(_QWORD *)(v0 + 2280) = 0x80000001B104D670;
  v72 = sub_1B1000684();
  *(_QWORD *)(v0 + 2288) = &type metadata for AccessibilityChildrenModifier;
  *(_QWORD *)(v0 + 2296) = v72;
  *(_QWORD *)(v0 + 2304) = 0xD000000000000014;
  *(_QWORD *)(v0 + 2312) = 0x80000001B104D690;
  v73 = sub_1B10006C8();
  *(_QWORD *)(v0 + 2320) = &type metadata for AccessibilityHeadingModifier;
  *(_QWORD *)(v0 + 2328) = v73;
  *(_QWORD *)(v0 + 2336) = 0xD000000000000014;
  *(_QWORD *)(v0 + 2344) = 0x80000001B104D6B0;
  v74 = type metadata accessor for AccessibilityFocusedModifier();
  v75 = sub_1B0FBA080(&qword_1EEEE0E48, 255, (uint64_t (*)(uint64_t))type metadata accessor for AccessibilityFocusedModifier, (uint64_t)&unk_1B1044AA4);
  *(_QWORD *)(v0 + 2352) = v74;
  *(_QWORD *)(v0 + 2360) = v75;
  *(_QWORD *)(v0 + 2368) = 0xD000000000000016;
  *(_QWORD *)(v0 + 2376) = 0x80000001B104D6D0;
  v76 = sub_1B100070C();
  *(_QWORD *)(v0 + 2384) = &type metadata for AccessibilityAddTraitsModifier;
  *(_QWORD *)(v0 + 2392) = v76;
  *(_QWORD *)(v0 + 2400) = 0xD000000000000019;
  *(_QWORD *)(v0 + 2408) = 0x80000001B104D6F0;
  v77 = sub_1B1000750();
  *(_QWORD *)(v0 + 2416) = &type metadata for AccessibilityRemoveTraitsModifier;
  *(_QWORD *)(v0 + 2424) = v77;
  *(_QWORD *)(v0 + 2432) = 6775156;
  *(_QWORD *)(v0 + 2440) = 0xE300000000000000;
  v78 = sub_1B1000794();
  *(_QWORD *)(v0 + 2448) = &type metadata for TagModifier;
  *(_QWORD *)(v0 + 2456) = v78;
  *(_QWORD *)(v0 + 2464) = 0x745372656B636970;
  *(_QWORD *)(v0 + 2472) = 0xEB00000000656C79;
  v79 = sub_1B10007D8();
  *(_QWORD *)(v0 + 2480) = &type metadata for PickerStyleModifier;
  *(_QWORD *)(v0 + 2488) = v79;
  *(_QWORD *)(v0 + 2496) = 0x65766F4D6E6FLL;
  *(_QWORD *)(v0 + 2504) = 0xE600000000000000;
  v80 = sub_1B100081C();
  *(_QWORD *)(v0 + 2512) = &type metadata for OnMoveModifier;
  *(_QWORD *)(v0 + 2520) = v80;
  *(_QWORD *)(v0 + 2528) = 0x6574656C65446E6FLL;
  *(_QWORD *)(v0 + 2536) = 0xE800000000000000;
  v81 = sub_1B1000860();
  *(_QWORD *)(v0 + 2544) = &type metadata for OnDeleteModifier;
  *(_QWORD *)(v0 + 2552) = v81;
  *(_QWORD *)(v0 + 2560) = 0xD000000000000017;
  *(_QWORD *)(v0 + 2568) = 0x80000001B104D710;
  v82 = sub_1B10008A4();
  *(_QWORD *)(v0 + 2576) = &type metadata for ScrollContentBackgroundModifier;
  *(_QWORD *)(v0 + 2584) = v82;
  result = (void *)sub_1B0F5576C(v0);
  off_1EEEE0B88 = result;
  return result;
}

void *sub_1B0FFD0BC()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  void *result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0E88);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B1045B70;
  *(_QWORD *)(inited + 32) = 0x7373696D736964;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  v1 = type metadata accessor for DismissAction(0);
  v2 = sub_1B0FBA080(&qword_1EEEE0E90, 255, type metadata accessor for DismissAction, (uint64_t)&unk_1B1038D14);
  *(_QWORD *)(inited + 48) = v1;
  *(_QWORD *)(inited + 56) = v2;
  *(_QWORD *)(inited + 64) = 7628147;
  *(_QWORD *)(inited + 72) = 0xE300000000000000;
  v3 = sub_1B10008E8();
  *(_QWORD *)(inited + 80) = &type metadata for SetAction;
  *(_QWORD *)(inited + 88) = v3;
  *(_QWORD *)(inited + 96) = 0x7571655270747468;
  *(_QWORD *)(inited + 104) = 0xEB00000000747365;
  v4 = sub_1B100092C();
  *(_QWORD *)(inited + 112) = &type metadata for HTTPRequestAction;
  *(_QWORD *)(inited + 120) = v4;
  *(_QWORD *)(inited + 128) = 0x4C52556E65706FLL;
  *(_QWORD *)(inited + 136) = 0xE700000000000000;
  v5 = type metadata accessor for OpenURLAction(0);
  v6 = sub_1B0FBA080(&qword_1EEEE0EA8, 255, type metadata accessor for OpenURLAction, (uint64_t)&unk_1B1038CB4);
  *(_QWORD *)(inited + 144) = v5;
  *(_QWORD *)(inited + 152) = v6;
  *(_QWORD *)(inited + 160) = 0x64616F6C6572;
  *(_QWORD *)(inited + 168) = 0xE600000000000000;
  v7 = sub_1B1000970();
  *(_QWORD *)(inited + 176) = &type metadata for ReloadAction;
  *(_QWORD *)(inited + 184) = v7;
  *(_QWORD *)(inited + 192) = 26217;
  *(_QWORD *)(inited + 200) = 0xE200000000000000;
  v8 = sub_1B10009B4();
  *(_QWORD *)(inited + 208) = &type metadata for IfAction;
  *(_QWORD *)(inited + 216) = v8;
  strcpy((char *)(inited + 224), "withAnimation");
  *(_WORD *)(inited + 238) = -4864;
  v9 = sub_1B10009F8();
  *(_QWORD *)(inited + 240) = &type metadata for AnimationAction;
  *(_QWORD *)(inited + 248) = v9;
  *(_QWORD *)(inited + 256) = 0x6F546C6C6F726373;
  *(_QWORD *)(inited + 264) = 0xE800000000000000;
  v10 = type metadata accessor for ScrollAction();
  v11 = sub_1B0FBA080(&qword_1EEEE0EC8, 255, (uint64_t (*)(uint64_t))type metadata accessor for ScrollAction, (uint64_t)&unk_1B1040C98);
  *(_QWORD *)(inited + 272) = v10;
  *(_QWORD *)(inited + 280) = v11;
  *(_QWORD *)(inited + 288) = 0x766F4D7961727261;
  *(_QWORD *)(inited + 296) = 0xE900000000000065;
  v12 = sub_1B1000A3C();
  *(_QWORD *)(inited + 304) = &type metadata for MoveAction;
  *(_QWORD *)(inited + 312) = v12;
  *(_QWORD *)(inited + 320) = 0x6C65447961727261;
  *(_QWORD *)(inited + 328) = 0xEB00000000657465;
  v13 = sub_1B1000A80();
  *(_QWORD *)(inited + 336) = &type metadata for DeleteAction;
  *(_QWORD *)(inited + 344) = v13;
  *(_QWORD *)(inited + 352) = 0x656C654474636964;
  *(_QWORD *)(inited + 360) = 0xEA00000000006574;
  v14 = sub_1B1000AC4();
  *(_QWORD *)(inited + 368) = &type metadata for DictDeleteAction;
  *(_QWORD *)(inited + 376) = v14;
  result = (void *)sub_1B0F55778(inited);
  off_1EEEE0B90 = result;
  return result;
}

void *sub_1B0FFD338()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  void *result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0BF8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1B1036F70;
  *(_QWORD *)(inited + 32) = 0x6C62617A69736572;
  *(_QWORD *)(inited + 40) = 0xE900000000000065;
  v1 = type metadata accessor for ResizableImageModifier();
  v2 = sub_1B0FBA080(&qword_1EEEE0C00, 255, (uint64_t (*)(uint64_t))type metadata accessor for ResizableImageModifier, (uint64_t)&unk_1B10402B8);
  *(_QWORD *)(inited + 48) = v1;
  *(_QWORD *)(inited + 56) = v2;
  result = (void *)sub_1B0F55784(inited);
  off_1EEEE0B98 = result;
  return result;
}

id ContentRegistry.init()()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_super v9;

  v1 = OBJC_IVAR____TtC6LiftUI15ContentRegistry_contentRegistry;
  v2 = v0;
  v3 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v0[v1] = sub_1B0F55634(MEMORY[0x1E0DEE9D8]);
  v4 = OBJC_IVAR____TtC6LiftUI15ContentRegistry_shapeRegistry;
  *(_QWORD *)&v2[v4] = sub_1B0F55628(v3);
  v5 = OBJC_IVAR____TtC6LiftUI15ContentRegistry_modifierRegistry;
  *(_QWORD *)&v2[v5] = sub_1B0F5576C(v3);
  v6 = OBJC_IVAR____TtC6LiftUI15ContentRegistry_imageModifierRegistry;
  *(_QWORD *)&v2[v6] = sub_1B0F55784(v3);
  v7 = OBJC_IVAR____TtC6LiftUI15ContentRegistry_actionRegistry;
  *(_QWORD *)&v2[v7] = sub_1B0F55778(v3);

  v9.receiver = v2;
  v9.super_class = (Class)type metadata accessor for ContentRegistry();
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t sub_1B0FFD4B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B0FFD514(a1, a2, a3, a4, &OBJC_IVAR____TtC6LiftUI15ContentRegistry_contentRegistry, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B0F9D64C);
}

uint64_t sub_1B0FFD4C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B0FFD514(a1, a2, a3, a4, &OBJC_IVAR____TtC6LiftUI15ContentRegistry_shapeRegistry, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B0F9D658);
}

uint64_t sub_1B0FFD4D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B0FFD514(a1, a2, a3, a4, &OBJC_IVAR____TtC6LiftUI15ContentRegistry_modifierRegistry, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B0F9D7DC);
}

uint64_t sub_1B0FFD4EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B0FFD514(a1, a2, a3, a4, &OBJC_IVAR____TtC6LiftUI15ContentRegistry_imageModifierRegistry, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B0F9D7E8);
}

uint64_t sub_1B0FFD500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B0FFD514(a1, a2, a3, a4, &OBJC_IVAR____TtC6LiftUI15ContentRegistry_actionRegistry, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1B0F9D7F4);
}

uint64_t sub_1B0FFD514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t *v12;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v15;

  v12 = (uint64_t *)(v6 + *a5);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v15 = *v12;
  *v12 = 0x8000000000000000;
  a6(a1, a2, a3, a4, isUniquelyReferenced_nonNull_native);
  *v12 = v15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_1B0FFD5DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;
  uint64_t v10;
  char v11;
  uint64_t *v13;
  uint64_t *v14;
  __int128 v15;

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC6LiftUI15ContentRegistry_contentRegistry);
  swift_beginAccess();
  v6 = *v5;
  if (*(_QWORD *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = sub_1B0F56A3C(a1, a2);
    if ((v8 & 1) != 0)
    {
      v15 = *(_OWORD *)(*(_QWORD *)(v6 + 56) + 16 * v7);
      swift_bridgeObjectRelease();
LABEL_10:
      swift_bridgeObjectRelease();
      return v15;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (qword_1EEEDE0C0 != -1)
    swift_once();
  v9 = off_1EEEE0B68;
  if (*((_QWORD *)off_1EEEE0B68 + 2))
  {
    swift_bridgeObjectRetain();
    v10 = sub_1B0F56A3C(a1, a2);
    if ((v11 & 1) != 0)
    {
      v15 = *(_OWORD *)(v9[7] + 16 * v10);
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
  }
  type metadata accessor for ContentRegistryError();
  sub_1B0FBA080(&qword_1EEEDE488, 255, (uint64_t (*)(uint64_t))type metadata accessor for ContentRegistryError, (uint64_t)&unk_1B1045C40);
  swift_allocError();
  v14 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0BE0);
  *v14 = a1;
  v14[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B1035F18();
  swift_bridgeObjectRelease();
  sub_1B1035C18();
  sub_1B1035F30();
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_1B0FFD800(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;
  uint64_t v10;
  char v11;
  uint64_t *v13;
  uint64_t *v14;
  __int128 v15;

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC6LiftUI15ContentRegistry_shapeRegistry);
  swift_beginAccess();
  v6 = *v5;
  if (*(_QWORD *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = sub_1B0F56A3C(a1, a2);
    if ((v8 & 1) != 0)
    {
      v15 = *(_OWORD *)(*(_QWORD *)(v6 + 56) + 16 * v7);
      swift_bridgeObjectRelease();
LABEL_10:
      swift_bridgeObjectRelease();
      return v15;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (qword_1EEEDE0C8 != -1)
    swift_once();
  v9 = off_1EEEE0B70;
  if (*((_QWORD *)off_1EEEE0B70 + 2))
  {
    swift_bridgeObjectRetain();
    v10 = sub_1B0F56A3C(a1, a2);
    if ((v11 & 1) != 0)
    {
      v15 = *(_OWORD *)(v9[7] + 16 * v10);
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
  }
  type metadata accessor for ContentRegistryError();
  sub_1B0FBA080(&qword_1EEEDE488, 255, (uint64_t (*)(uint64_t))type metadata accessor for ContentRegistryError, (uint64_t)&unk_1B1045C40);
  swift_allocError();
  v14 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0BE0);
  *v14 = a1;
  v14[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B1035F18();
  swift_bridgeObjectRelease();
  sub_1B1035C18();
  sub_1B1035F30();
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_1B0FFDA24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;
  uint64_t v10;
  char v11;
  uint64_t *v13;
  uint64_t *v14;
  __int128 v15;

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC6LiftUI15ContentRegistry_modifierRegistry);
  swift_beginAccess();
  v6 = *v5;
  if (*(_QWORD *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = sub_1B0F56A3C(a1, a2);
    if ((v8 & 1) != 0)
    {
      v15 = *(_OWORD *)(*(_QWORD *)(v6 + 56) + 16 * v7);
      swift_bridgeObjectRelease();
LABEL_10:
      swift_bridgeObjectRelease();
      return v15;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (qword_1EEEDE0E0 != -1)
    swift_once();
  v9 = off_1EEEE0B88;
  if (*((_QWORD *)off_1EEEE0B88 + 2))
  {
    swift_bridgeObjectRetain();
    v10 = sub_1B0F56A3C(a1, a2);
    if ((v11 & 1) != 0)
    {
      v15 = *(_OWORD *)(v9[7] + 16 * v10);
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
  }
  type metadata accessor for ContentRegistryError();
  sub_1B0FBA080(&qword_1EEEDE488, 255, (uint64_t (*)(uint64_t))type metadata accessor for ContentRegistryError, (uint64_t)&unk_1B1045C40);
  swift_allocError();
  v14 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0BE0);
  *v14 = a1;
  v14[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B1035F18();
  swift_bridgeObjectRelease();
  sub_1B1035C18();
  sub_1B1035F30();
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_1B0FFDC48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;
  uint64_t v10;
  char v11;
  uint64_t *v13;
  uint64_t *v14;
  __int128 v15;

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC6LiftUI15ContentRegistry_imageModifierRegistry);
  swift_beginAccess();
  v6 = *v5;
  if (*(_QWORD *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = sub_1B0F56A3C(a1, a2);
    if ((v8 & 1) != 0)
    {
      v15 = *(_OWORD *)(*(_QWORD *)(v6 + 56) + 16 * v7);
      swift_bridgeObjectRelease();
LABEL_10:
      swift_bridgeObjectRelease();
      return v15;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (qword_1EEEDE0F0 != -1)
    swift_once();
  v9 = off_1EEEE0B98;
  if (*((_QWORD *)off_1EEEE0B98 + 2))
  {
    swift_bridgeObjectRetain();
    v10 = sub_1B0F56A3C(a1, a2);
    if ((v11 & 1) != 0)
    {
      v15 = *(_OWORD *)(v9[7] + 16 * v10);
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
  }
  type metadata accessor for ContentRegistryError();
  sub_1B0FBA080(&qword_1EEEDE488, 255, (uint64_t (*)(uint64_t))type metadata accessor for ContentRegistryError, (uint64_t)&unk_1B1045C40);
  swift_allocError();
  v14 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0BE0);
  *v14 = a1;
  v14[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B1035F18();
  swift_bridgeObjectRelease();
  sub_1B1035C18();
  sub_1B1035F30();
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_1B0FFDE6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;
  uint64_t v10;
  char v11;
  uint64_t *v13;
  uint64_t *v14;
  __int128 v15;

  v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC6LiftUI15ContentRegistry_actionRegistry);
  swift_beginAccess();
  v6 = *v5;
  if (*(_QWORD *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = sub_1B0F56A3C(a1, a2);
    if ((v8 & 1) != 0)
    {
      v15 = *(_OWORD *)(*(_QWORD *)(v6 + 56) + 16 * v7);
      swift_bridgeObjectRelease();
LABEL_10:
      swift_bridgeObjectRelease();
      return v15;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (qword_1EEEDE0E8 != -1)
    swift_once();
  v9 = off_1EEEE0B90;
  if (*((_QWORD *)off_1EEEE0B90 + 2))
  {
    swift_bridgeObjectRetain();
    v10 = sub_1B0F56A3C(a1, a2);
    if ((v11 & 1) != 0)
    {
      v15 = *(_OWORD *)(v9[7] + 16 * v10);
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
  }
  type metadata accessor for ContentRegistryError();
  sub_1B0FBA080(&qword_1EEEDE488, 255, (uint64_t (*)(uint64_t))type metadata accessor for ContentRegistryError, (uint64_t)&unk_1B1045C40);
  swift_allocError();
  v14 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0BE0);
  *v14 = a1;
  v14[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1B1035F18();
  swift_bridgeObjectRelease();
  sub_1B1035C18();
  sub_1B1035F30();
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

id ContentRegistry.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ContentRegistry();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t _s7SwiftUI4ViewP04LiftB0E21liftUIContentRegistryyQrAD07ContentG0CF_0()
{
  swift_getKeyPath();
  sub_1B1035378();
  return swift_release();
}

uint64_t sub_1B0FFE19C()
{
  uint64_t v1;

  sub_1B0F5A898();
  sub_1B1034B38();
  return v1;
}

uint64_t type metadata accessor for ContentRegistry()
{
  return objc_opt_self();
}

id sub_1B0FFE1FC()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ContentRegistry()), sel_init);
  qword_1EEEE0BA0 = (uint64_t)result;
  return result;
}

id sub_1B0FFE228@<X0>(_QWORD *a1@<X8>)
{
  void *v2;

  if (qword_1EEEDE0F8 != -1)
    swift_once();
  v2 = (void *)qword_1EEEE0BA0;
  *a1 = qword_1EEEE0BA0;
  return v2;
}

uint64_t sub_1B0FFE278(uint64_t a1, uint64_t a2)
{
  sub_1B0FBA080(&qword_1EEEE0F20, a2, (uint64_t (*)(uint64_t))type metadata accessor for ContentRegistry, MEMORY[0x1E0DEFD00]);
  return sub_1B103488C();
}

uint64_t method lookup function for ContentRegistry()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ContentRegistry.addViewType(_:id:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of ContentRegistry.addShapeType(_:id:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of ContentRegistry.addModifierType(_:id:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of ContentRegistry.addImageModifierType(_:id:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of ContentRegistry.addActionType(_:id:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t sub_1B0FFE378(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEE0BD0);
  v2 = sub_1B103497C();
  v4[0] = v1;
  v4[1] = sub_1B0FFE3D8();
  return MEMORY[0x1B5E15188](MEMORY[0x1E0CD9C20], v2, v4);
}

unint64_t sub_1B0FFE3D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEEE0BD8;
  if (!qword_1EEEE0BD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEE0BD0);
    result = MEMORY[0x1B5E15188](MEMORY[0x1E0CDCF80], v1);
    atomic_store(result, (unint64_t *)&qword_1EEEE0BD8);
  }
  return result;
}

uint64_t *sub_1B0FFE424(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
        v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        swift_bridgeObjectRetain();
        v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0BE0) + 48);
        v9 = (char *)a1 + v8;
        v10 = (char *)a2 + v8;
        v11 = sub_1B1035F54();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1B0FFE728(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      swift_bridgeObjectRelease();
      v3 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0BE0) + 48);
      v4 = sub_1B1035F54();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *sub_1B0FFE7AC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRetain();
      v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0BE0) + 48);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_1B1035F54();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *sub_1B0FFEA70(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_1B0FFED7C((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0BE0) + 48);
        v7 = (char *)a1 + v6;
        v8 = (char *)a2 + v6;
        v9 = sub_1B1035F54();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1B0FFED7C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ContentRegistryError();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for ContentRegistryError()
{
  uint64_t result;

  result = qword_1EEEE0BE8;
  if (!qword_1EEEE0BE8)
    return swift_getSingletonMetadata();
  return result;
}

_OWORD *sub_1B0FFEDF4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
      *a1 = *a2;
      v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0BE0) + 48);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_1B1035F54();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *sub_1B0FFF09C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_1B0FFED7C((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
        *a1 = *a2;
        v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0BE0) + 48);
        v7 = (char *)a1 + v6;
        v8 = (char *)a2 + v6;
        v9 = sub_1B1035F54();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1B0FFF354()
{
  uint64_t result;
  unint64_t v1;
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  char v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;

  result = sub_1B1035F54();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v9 = &v8;
    swift_getTupleTypeLayout2();
    v10 = &v7;
    swift_getTupleTypeLayout2();
    v11 = &v6;
    swift_getTupleTypeLayout2();
    v12 = &v5;
    swift_getTupleTypeLayout2();
    v13 = &v4;
    swift_getTupleTypeLayout2();
    v14 = &v3;
    swift_getTupleTypeLayout2();
    v15 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unint64_t sub_1B0FFF474()
{
  unint64_t result;

  result = qword_1EEEE0C10;
  if (!qword_1EEEE0C10)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1044524, &type metadata for PaddingModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0C10);
  }
  return result;
}

unint64_t sub_1B0FFF4B8()
{
  unint64_t result;

  result = qword_1EEEE0C18;
  if (!qword_1EEEE0C18)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1049208, &type metadata for BorderModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0C18);
  }
  return result;
}

unint64_t sub_1B0FFF4FC()
{
  unint64_t result;

  result = qword_1EEEE0C20;
  if (!qword_1EEEE0C20)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10491EC, &type metadata for RoundedBorderModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0C20);
  }
  return result;
}

unint64_t sub_1B0FFF540()
{
  unint64_t result;

  result = qword_1EEEE0C28;
  if (!qword_1EEEE0C28)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10491D0, &type metadata for BackgroundColorModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0C28);
  }
  return result;
}

unint64_t sub_1B0FFF584()
{
  unint64_t result;

  result = qword_1EEEE0C30;
  if (!qword_1EEEE0C30)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10491B4, &type metadata for ForegroundColorModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0C30);
  }
  return result;
}

unint64_t sub_1B0FFF5C8()
{
  unint64_t result;

  result = qword_1EEEE0C38;
  if (!qword_1EEEE0C38)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1049198, &type metadata for ForegroundStyleModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0C38);
  }
  return result;
}

unint64_t sub_1B0FFF60C()
{
  unint64_t result;

  result = qword_1EEEE0C40;
  if (!qword_1EEEE0C40)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104917C, &type metadata for AccentColorModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0C40);
  }
  return result;
}

unint64_t sub_1B0FFF650()
{
  unint64_t result;

  result = qword_1EEEE0C48;
  if (!qword_1EEEE0C48)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1049160, &type metadata for TintColorModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0C48);
  }
  return result;
}

unint64_t sub_1B0FFF694()
{
  unint64_t result;

  result = qword_1EEEE0C50;
  if (!qword_1EEEE0C50)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104B720, &type metadata for FrameModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0C50);
  }
  return result;
}

unint64_t sub_1B0FFF6D8()
{
  unint64_t result;

  result = qword_1EEEE0C58;
  if (!qword_1EEEE0C58)
  {
    result = MEMORY[0x1B5E15188](&unk_1B103DE4C, &type metadata for LineLimitModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0C58);
  }
  return result;
}

unint64_t sub_1B0FFF71C()
{
  unint64_t result;

  result = qword_1EEEE0C60;
  if (!qword_1EEEE0C60)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10458CC, &type metadata for MultiLineTextAlignmentModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0C60);
  }
  return result;
}

unint64_t sub_1B0FFF760()
{
  unint64_t result;

  result = qword_1EEEE0C68;
  if (!qword_1EEEE0C68)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1048420, &type metadata for CornerRadiusModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0C68);
  }
  return result;
}

unint64_t sub_1B0FFF7A4()
{
  unint64_t result;

  result = qword_1EEEE0C78;
  if (!qword_1EEEE0C78)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1037AFC, &type metadata for ButtonStyleModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0C78);
  }
  return result;
}

unint64_t sub_1B0FFF7E8()
{
  unint64_t result;

  result = qword_1EEEE0C80;
  if (!qword_1EEEE0C80)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10458B0, &type metadata for LayoutPriorityModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0C80);
  }
  return result;
}

unint64_t sub_1B0FFF82C()
{
  unint64_t result;

  result = qword_1EEEE0C88;
  if (!qword_1EEEE0C88)
  {
    result = MEMORY[0x1B5E15188](&unk_1B103CAE0, &type metadata for FontModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0C88);
  }
  return result;
}

unint64_t sub_1B0FFF870()
{
  unint64_t result;

  result = qword_1EEEE0C90;
  if (!qword_1EEEE0C90)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104AB70, &type metadata for AlertModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0C90);
  }
  return result;
}

unint64_t sub_1B0FFF8B4()
{
  unint64_t result;

  result = qword_1EEEE0C98;
  if (!qword_1EEEE0C98)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1045564, &type metadata for ConfirmationDialogModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0C98);
  }
  return result;
}

unint64_t sub_1B0FFF8F8()
{
  unint64_t result;

  result = qword_1EEEE0CA0;
  if (!qword_1EEEE0CA0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1042D9C, &type metadata for IfModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0CA0);
  }
  return result;
}

unint64_t sub_1B0FFF93C()
{
  unint64_t result;

  result = qword_1EEEE0CA8;
  if (!qword_1EEEE0CA8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10423B8, &type metadata for ShadowModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0CA8);
  }
  return result;
}

unint64_t sub_1B0FFF980()
{
  unint64_t result;

  result = qword_1EEEE0CB0;
  if (!qword_1EEEE0CB0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1042B70, &type metadata for NavigationTitleModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0CB0);
  }
  return result;
}

unint64_t sub_1B0FFF9C4()
{
  unint64_t result;

  result = qword_1EEEE0CB8;
  if (!qword_1EEEE0CB8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1037E54, &type metadata for NavigationBarTitleDisplayModeModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0CB8);
  }
  return result;
}

unint64_t sub_1B0FFFA08()
{
  unint64_t result;

  result = qword_1EEEE0CC0;
  if (!qword_1EEEE0CC0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B103826C, &type metadata for FixedSizeModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0CC0);
  }
  return result;
}

unint64_t sub_1B0FFFA4C()
{
  unint64_t result;

  result = qword_1EEEE0CC8;
  if (!qword_1EEEE0CC8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104A160, &type metadata for ClipShapeModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0CC8);
  }
  return result;
}

unint64_t sub_1B0FFFA90()
{
  unint64_t result;

  result = qword_1EEEE0CD0;
  if (!qword_1EEEE0CD0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1046A98, &type metadata for SheetModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0CD0);
  }
  return result;
}

unint64_t sub_1B0FFFAD4()
{
  unint64_t result;

  result = qword_1EEEE0CD8;
  if (!qword_1EEEE0CD8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1046318, &type metadata for OnAppearModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0CD8);
  }
  return result;
}

unint64_t sub_1B0FFFB18()
{
  unint64_t result;

  result = qword_1EEEE0CE0;
  if (!qword_1EEEE0CE0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10462FC, &type metadata for OnTapModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0CE0);
  }
  return result;
}

unint64_t sub_1B0FFFB5C()
{
  unint64_t result;

  result = qword_1EEEE0CE8;
  if (!qword_1EEEE0CE8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1042238, &type metadata for BackgroundModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0CE8);
  }
  return result;
}

unint64_t sub_1B0FFFBA0()
{
  unint64_t result;

  result = qword_1EEEE0CF0;
  if (!qword_1EEEE0CF0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104AD84, &type metadata for OverlayModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0CF0);
  }
  return result;
}

unint64_t sub_1B0FFFBE4()
{
  unint64_t result;

  result = qword_1EEEE0CF8;
  if (!qword_1EEEE0CF8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10487CC, &type metadata for AnimationModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0CF8);
  }
  return result;
}

unint64_t sub_1B0FFFC28()
{
  unint64_t result;

  result = qword_1EEEE0D00;
  if (!qword_1EEEE0D00)
  {
    result = MEMORY[0x1B5E15188](&unk_1B103CAC4, &type metadata for BoldModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0D00);
  }
  return result;
}

unint64_t sub_1B0FFFC6C()
{
  unint64_t result;

  result = qword_1EEEE0D08;
  if (!qword_1EEEE0D08)
  {
    result = MEMORY[0x1B5E15188](&unk_1B103CAA8, &type metadata for ItalicModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0D08);
  }
  return result;
}

unint64_t sub_1B0FFFCB0()
{
  unint64_t result;

  result = qword_1EEEE0D10;
  if (!qword_1EEEE0D10)
  {
    result = MEMORY[0x1B5E15188](&unk_1B103CA8C, &type metadata for MonospacedModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0D10);
  }
  return result;
}

unint64_t sub_1B0FFFCF4()
{
  unint64_t result;

  result = qword_1EEEE0D18;
  if (!qword_1EEEE0D18)
  {
    result = MEMORY[0x1B5E15188](&unk_1B103CA70, &type metadata for MonospacedDigitModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0D18);
  }
  return result;
}

unint64_t sub_1B0FFFD38()
{
  unint64_t result;

  result = qword_1EEEE0D20;
  if (!qword_1EEEE0D20)
  {
    result = MEMORY[0x1B5E15188](&unk_1B103CA54, &type metadata for KerningModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0D20);
  }
  return result;
}

unint64_t sub_1B0FFFD7C()
{
  unint64_t result;

  result = qword_1EEEE0D28;
  if (!qword_1EEEE0D28)
  {
    result = MEMORY[0x1B5E15188](&unk_1B103CA38, &type metadata for TrackingModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0D28);
  }
  return result;
}

unint64_t sub_1B0FFFDC0()
{
  unint64_t result;

  result = qword_1EEEE0D30;
  if (!qword_1EEEE0D30)
  {
    result = MEMORY[0x1B5E15188](&unk_1B103CA1C, &type metadata for BaselineOffsetModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0D30);
  }
  return result;
}

unint64_t sub_1B0FFFE04()
{
  unint64_t result;

  result = qword_1EEEE0D38;
  if (!qword_1EEEE0D38)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104895C, &type metadata for FormStyleModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0D38);
  }
  return result;
}

unint64_t sub_1B0FFFE48()
{
  unint64_t result;

  result = qword_1EEEE0D40;
  if (!qword_1EEEE0D40)
  {
    result = MEMORY[0x1B5E15188](&unk_1B103E1C0, &type metadata for ScaleEffectModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0D40);
  }
  return result;
}

unint64_t sub_1B0FFFE8C()
{
  unint64_t result;

  result = qword_1EEEE0D48;
  if (!qword_1EEEE0D48)
  {
    result = MEMORY[0x1B5E15188](&unk_1B103ED1C, &type metadata for AspectRatioModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0D48);
  }
  return result;
}

unint64_t sub_1B0FFFED0()
{
  unint64_t result;

  result = qword_1EEEE0D50;
  if (!qword_1EEEE0D50)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1044BA0, &type metadata for AccessibilityLabelModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0D50);
  }
  return result;
}

unint64_t sub_1B0FFFF14()
{
  unint64_t result;

  result = qword_1EEEE0D58;
  if (!qword_1EEEE0D58)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1044B84, &type metadata for AccessibilityIdentifierModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0D58);
  }
  return result;
}

unint64_t sub_1B0FFFF58()
{
  unint64_t result;

  result = qword_1EEEE0D60;
  if (!qword_1EEEE0D60)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1044B68, &type metadata for AccessibilityHiddenModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0D60);
  }
  return result;
}

unint64_t sub_1B0FFFF9C()
{
  unint64_t result;

  result = qword_1EEEE0D68;
  if (!qword_1EEEE0D68)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1043C44, &type metadata for SymbolRenderingModeModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0D68);
  }
  return result;
}

unint64_t sub_1B0FFFFE0()
{
  unint64_t result;

  result = qword_1EEEE0D70;
  if (!qword_1EEEE0D70)
  {
    result = MEMORY[0x1B5E15188](&unk_1B103E1A4, &type metadata for ImageScaleModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0D70);
  }
  return result;
}

unint64_t sub_1B1000024()
{
  unint64_t result;

  result = qword_1EEEE0D78;
  if (!qword_1EEEE0D78)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1037E38, &type metadata for ToolbarModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0D78);
  }
  return result;
}

unint64_t sub_1B1000068()
{
  unint64_t result;

  result = qword_1EEEE0D80;
  if (!qword_1EEEE0D80)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104A144, &type metadata for ContentShapeModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0D80);
  }
  return result;
}

unint64_t sub_1B10000AC()
{
  unint64_t result;

  result = qword_1EEEE0D88;
  if (!qword_1EEEE0D88)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104096C, &type metadata for ToggleStyleModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0D88);
  }
  return result;
}

unint64_t sub_1B10000F0()
{
  unint64_t result;

  result = qword_1EEEE0D90;
  if (!qword_1EEEE0D90)
  {
    result = MEMORY[0x1B5E15188](&unk_1B103DACC, &type metadata for DisabledModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0D90);
  }
  return result;
}

unint64_t sub_1B1000134()
{
  unint64_t result;

  result = qword_1EEEE0D98;
  if (!qword_1EEEE0D98)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1039790, &type metadata for NavigationBarBackButtonHiddenModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0D98);
  }
  return result;
}

unint64_t sub_1B1000178()
{
  unint64_t result;

  result = qword_1EEEE0DA0;
  if (!qword_1EEEE0DA0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B103F090, &type metadata for OffsetModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0DA0);
  }
  return result;
}

unint64_t sub_1B10001BC()
{
  unint64_t result;

  result = qword_1EEEE0DA8;
  if (!qword_1EEEE0DA8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10419F4, &type metadata for ListRowInsetsModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0DA8);
  }
  return result;
}

unint64_t sub_1B1000200()
{
  unint64_t result;

  result = qword_1EEEE0DB0;
  if (!qword_1EEEE0DB0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10419D8, &type metadata for ListRowSeparatorModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0DB0);
  }
  return result;
}

unint64_t sub_1B1000244()
{
  unint64_t result;

  result = qword_1EEEE0DB8;
  if (!qword_1EEEE0DB8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10419BC, &type metadata for ListStyleModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0DB8);
  }
  return result;
}

unint64_t sub_1B1000288()
{
  unint64_t result;

  result = qword_1EEEE0DC0;
  if (!qword_1EEEE0DC0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10419A0, &type metadata for ListRowBackgroundModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0DC0);
  }
  return result;
}

unint64_t sub_1B10002CC()
{
  unint64_t result;

  result = qword_1EEEE0DC8;
  if (!qword_1EEEE0DC8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10462E0, &type metadata for OnDisappearModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0DC8);
  }
  return result;
}

unint64_t sub_1B1000310()
{
  unint64_t result;

  result = qword_1EEEE0DD0;
  if (!qword_1EEEE0DD0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1042D3C, &type metadata for InteractiveDismissDisabledModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0DD0);
  }
  return result;
}

unint64_t sub_1B1000354()
{
  unint64_t result;

  result = qword_1EEEE0DD8;
  if (!qword_1EEEE0DD8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104B704, &type metadata for ClippedModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0DD8);
  }
  return result;
}

unint64_t sub_1B1000398()
{
  unint64_t result;

  result = qword_1EEEE0DE0;
  if (!qword_1EEEE0DE0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1041514, &type metadata for ButtonBorderShapeModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0DE0);
  }
  return result;
}

unint64_t sub_1B10003DC()
{
  unint64_t result;

  result = qword_1EEEE0DE8;
  if (!qword_1EEEE0DE8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1042AEC, &type metadata for IdentifierModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0DE8);
  }
  return result;
}

unint64_t sub_1B1000420()
{
  unint64_t result;

  result = qword_1EEEE0DF0;
  if (!qword_1EEEE0DF0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10462C4, &type metadata for OnChangeModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0DF0);
  }
  return result;
}

unint64_t sub_1B1000464()
{
  unint64_t result;

  result = qword_1EEEE0DF8;
  if (!qword_1EEEE0DF8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1042668, &type metadata for NavigationDestinationModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0DF8);
  }
  return result;
}

unint64_t sub_1B10004A8()
{
  unint64_t result;

  result = qword_1EEEE0E00;
  if (!qword_1EEEE0E00)
  {
    result = MEMORY[0x1B5E15188](&unk_1B103EB40, &type metadata for AlignmentGuideModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0E00);
  }
  return result;
}

unint64_t sub_1B10004EC()
{
  unint64_t result;

  result = qword_1EEEE0E08;
  if (!qword_1EEEE0E08)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1038A30, &type metadata for MaskModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0E08);
  }
  return result;
}

unint64_t sub_1B1000530()
{
  unint64_t result;

  result = qword_1EEEE0E10;
  if (!qword_1EEEE0E10)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1041984, &type metadata for ListSectionSpacingModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0E10);
  }
  return result;
}

unint64_t sub_1B1000574()
{
  unint64_t result;

  result = qword_1EEEE0E18;
  if (!qword_1EEEE0E18)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1044B4C, &type metadata for AccessibilityValueModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0E18);
  }
  return result;
}

unint64_t sub_1B10005B8()
{
  unint64_t result;

  result = qword_1EEEE0E20;
  if (!qword_1EEEE0E20)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1044B30, &type metadata for AccessibilityHintModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0E20);
  }
  return result;
}

unint64_t sub_1B10005FC()
{
  unint64_t result;

  result = qword_1EEEE0E28;
  if (!qword_1EEEE0E28)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1044B14, &type metadata for AccessibilityActionModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0E28);
  }
  return result;
}

unint64_t sub_1B1000640()
{
  unint64_t result;

  result = qword_1EEEE0E30;
  if (!qword_1EEEE0E30)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1044AF8, &type metadata for AccessibilityElementModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0E30);
  }
  return result;
}

unint64_t sub_1B1000684()
{
  unint64_t result;

  result = qword_1EEEE0E38;
  if (!qword_1EEEE0E38)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1044ADC, &type metadata for AccessibilityChildrenModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0E38);
  }
  return result;
}

unint64_t sub_1B10006C8()
{
  unint64_t result;

  result = qword_1EEEE0E40;
  if (!qword_1EEEE0E40)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1044AC0, &type metadata for AccessibilityHeadingModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0E40);
  }
  return result;
}

unint64_t sub_1B100070C()
{
  unint64_t result;

  result = qword_1EEEE0E50;
  if (!qword_1EEEE0E50)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1044A88, &type metadata for AccessibilityAddTraitsModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0E50);
  }
  return result;
}

unint64_t sub_1B1000750()
{
  unint64_t result;

  result = qword_1EEEE0E58;
  if (!qword_1EEEE0E58)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1044A6C, &type metadata for AccessibilityRemoveTraitsModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0E58);
  }
  return result;
}

unint64_t sub_1B1000794()
{
  unint64_t result;

  result = qword_1EEEE0E60;
  if (!qword_1EEEE0E60)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10457DC, &type metadata for TagModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0E60);
  }
  return result;
}

unint64_t sub_1B10007D8()
{
  unint64_t result;

  result = qword_1EEEE0E68;
  if (!qword_1EEEE0E68)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10457C0, &type metadata for PickerStyleModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0E68);
  }
  return result;
}

unint64_t sub_1B100081C()
{
  unint64_t result;

  result = qword_1EEEE0E70;
  if (!qword_1EEEE0E70)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104375C, &type metadata for OnMoveModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0E70);
  }
  return result;
}

unint64_t sub_1B1000860()
{
  unint64_t result;

  result = qword_1EEEE0E78;
  if (!qword_1EEEE0E78)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1043740, &type metadata for OnDeleteModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0E78);
  }
  return result;
}

unint64_t sub_1B10008A4()
{
  unint64_t result;

  result = qword_1EEEE0E80;
  if (!qword_1EEEE0E80)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1041968, &type metadata for ScrollContentBackgroundModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0E80);
  }
  return result;
}

unint64_t sub_1B10008E8()
{
  unint64_t result;

  result = qword_1EEEE0E98;
  if (!qword_1EEEE0E98)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1038EA4, &type metadata for SetAction);
    atomic_store(result, (unint64_t *)&qword_1EEEE0E98);
  }
  return result;
}

unint64_t sub_1B100092C()
{
  unint64_t result;

  result = qword_1EEEE0EA0;
  if (!qword_1EEEE0EA0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B103D6B8, &type metadata for HTTPRequestAction);
    atomic_store(result, (unint64_t *)&qword_1EEEE0EA0);
  }
  return result;
}

unint64_t sub_1B1000970()
{
  unint64_t result;

  result = qword_1EEEE0EB0;
  if (!qword_1EEEE0EB0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10485EC, &type metadata for ReloadAction);
    atomic_store(result, (unint64_t *)&qword_1EEEE0EB0);
  }
  return result;
}

unint64_t sub_1B10009B4()
{
  unint64_t result;

  result = qword_1EEEE0EB8;
  if (!qword_1EEEE0EB8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104A5E0, &type metadata for IfAction);
    atomic_store(result, (unint64_t *)&qword_1EEEE0EB8);
  }
  return result;
}

unint64_t sub_1B10009F8()
{
  unint64_t result;

  result = qword_1EEEE0EC0;
  if (!qword_1EEEE0EC0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1044338, &type metadata for AnimationAction);
    atomic_store(result, (unint64_t *)&qword_1EEEE0EC0);
  }
  return result;
}

unint64_t sub_1B1000A3C()
{
  unint64_t result;

  result = qword_1EEEE0ED0;
  if (!qword_1EEEE0ED0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104A850, &type metadata for MoveAction);
    atomic_store(result, (unint64_t *)&qword_1EEEE0ED0);
  }
  return result;
}

unint64_t sub_1B1000A80()
{
  unint64_t result;

  result = qword_1EEEE0ED8;
  if (!qword_1EEEE0ED8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104A834, &type metadata for DeleteAction);
    atomic_store(result, (unint64_t *)&qword_1EEEE0ED8);
  }
  return result;
}

unint64_t sub_1B1000AC4()
{
  unint64_t result;

  result = qword_1EEEE0EE0;
  if (!qword_1EEEE0EE0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104A418, &type metadata for DictDeleteAction);
    atomic_store(result, (unint64_t *)&qword_1EEEE0EE0);
  }
  return result;
}

unint64_t sub_1B1000B08()
{
  unint64_t result;

  result = qword_1EEEE0EF0;
  if (!qword_1EEEE0EF0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1046DE4, &type metadata for SymbolView);
    atomic_store(result, (unint64_t *)&qword_1EEEE0EF0);
  }
  return result;
}

unint64_t sub_1B1000B4C()
{
  unint64_t result;

  result = qword_1EEEE0EF8;
  if (!qword_1EEEE0EF8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1046DC8, &type metadata for AsyncImageView);
    atomic_store(result, (unint64_t *)&qword_1EEEE0EF8);
  }
  return result;
}

unint64_t sub_1B1000B90()
{
  unint64_t result;

  result = qword_1EEEE0F08;
  if (!qword_1EEEE0F08)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104B1D4, &type metadata for GeometryReaderView);
    atomic_store(result, (unint64_t *)&qword_1EEEE0F08);
  }
  return result;
}

unint64_t sub_1B1000BD4()
{
  unint64_t result;

  result = qword_1EEEE0F10;
  if (!qword_1EEEE0F10)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104B1B8, &type metadata for ScrollViewReaderView);
    atomic_store(result, (unint64_t *)&qword_1EEEE0F10);
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentRegistryKey()
{
  return &type metadata for ContentRegistryKey;
}

_QWORD *sub_1B1000C28(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  char v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t *v9;
  _QWORD v11[2];

  if (qword_1EEEDE0D0 != -1)
    swift_once();
  v4 = off_1EEEE0B78;
  if (!*((_QWORD *)off_1EEEE0B78 + 2))
    goto LABEL_7;
  swift_bridgeObjectRetain();
  v5 = sub_1B0F56A3C(a1, a2);
  if ((v6 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    type metadata accessor for ContentRegistryError();
    sub_1B0FBA080(&qword_1EEEDE488, 255, (uint64_t (*)(uint64_t))type metadata accessor for ContentRegistryError, (uint64_t)&unk_1B1045C40);
    swift_allocError();
    v9 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0BE0);
    *v9 = a1;
    v9[1] = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B1035F18();
    swift_bridgeObjectRelease();
    v11[0] = 0xD000000000000019;
    v11[1] = 0x80000001B104D7D0;
    v7 = v11;
    sub_1B1035C18();
    sub_1B1035F30();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return v7;
  }
  v7 = *(_QWORD **)(v4[7] + 16 * v5);
  swift_bridgeObjectRelease();
  return v7;
}

unint64_t sub_1B1000DD0()
{
  unint64_t result;

  result = qword_1EEEE0F30;
  if (!qword_1EEEE0F30)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10400D4, &type metadata for ColorShapeStyle);
    atomic_store(result, (unint64_t *)&qword_1EEEE0F30);
  }
  return result;
}

unint64_t sub_1B1000E14()
{
  unint64_t result;

  result = qword_1EEEE0F38;
  if (!qword_1EEEE0F38)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104206C, &type metadata for MaterialShapeStyle);
    atomic_store(result, (unint64_t *)&qword_1EEEE0F38);
  }
  return result;
}

unint64_t sub_1B1000E58()
{
  unint64_t result;

  result = qword_1EEEE0F40;
  if (!qword_1EEEE0F40)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1039CAC, &type metadata for LinearGradientShapeStyle);
    atomic_store(result, (unint64_t *)&qword_1EEEE0F40);
  }
  return result;
}

unint64_t sub_1B1000E9C()
{
  unint64_t result;

  result = qword_1EEEE0F48;
  if (!qword_1EEEE0F48)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1039C90, &type metadata for AngularGradientShapeStyle);
    atomic_store(result, (unint64_t *)&qword_1EEEE0F48);
  }
  return result;
}

unint64_t sub_1B1000EE0()
{
  unint64_t result;

  result = qword_1EEEE0F50;
  if (!qword_1EEEE0F50)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1039C74, &type metadata for RadialGradientShapeStyle);
    atomic_store(result, &qword_1EEEE0F50);
  }
  return result;
}

_QWORD *sub_1B1000F24(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  char v6;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t *v9;
  _QWORD v11[2];

  if (qword_1EEEDE0D8 != -1)
    swift_once();
  v4 = off_1EEEE0B80;
  if (!*((_QWORD *)off_1EEEE0B80 + 2))
    goto LABEL_7;
  swift_bridgeObjectRetain();
  v5 = sub_1B0F56A3C(a1, a2);
  if ((v6 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    type metadata accessor for ContentRegistryError();
    sub_1B0FBA080(&qword_1EEEDE488, 255, (uint64_t (*)(uint64_t))type metadata accessor for ContentRegistryError, (uint64_t)&unk_1B1045C40);
    swift_allocError();
    v9 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0BE0);
    *v9 = a1;
    v9[1] = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1B1035F18();
    swift_bridgeObjectRelease();
    v11[0] = 0xD000000000000022;
    v11[1] = 0x80000001B104D7F0;
    v7 = v11;
    sub_1B1035C18();
    sub_1B1035F30();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return v7;
  }
  v7 = *(_QWORD **)(v4[7] + 16 * v5);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1B10010CC()
{
  uint64_t v0;

  sub_1B0FD3CD0(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AnyWeakDelegate()
{
  return objc_opt_self();
}

uint64_t sub_1B1001110(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;

  result = MEMORY[0x1B5E152E4](v1 + 16);
  if (result)
  {
    v4 = *(_QWORD *)(v1 + 24);
    ObjectType = swift_getObjectType();
    v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, ObjectType, v4);
    swift_unknownObjectRelease();
    return v6;
  }
  return result;
}

uint64_t sub_1B1001174()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v4;

  result = MEMORY[0x1B5E152E4](v0 + 16);
  if (result)
  {
    v2 = *(_QWORD *)(v0 + 24);
    ObjectType = swift_getObjectType();
    v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(ObjectType, v2);
    swift_unknownObjectRelease();
    return v4;
  }
  return result;
}

uint64_t sub_1B10011CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;
  uint64_t ObjectType;

  result = MEMORY[0x1B5E152E4](v2 + 16);
  if (result)
  {
    v6 = *(_QWORD *)(v2 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 24))(a1, a2, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B1001248(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;
  uint64_t ObjectType;

  result = MEMORY[0x1B5E152E4](v3 + 16);
  if (result)
  {
    v8 = *(_QWORD *)(v3 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 32))(a1, a2, a3, ObjectType, v8);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1B10012CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_1B10012E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t ObjectType;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD, uint64_t, uint64_t);

  v1 = MEMORY[0x1B5E152E4](*(_QWORD *)(v0 + 24) + 16);
  *(_QWORD *)(v0 + 32) = v1;
  if (v1)
  {
    v2 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + 24);
    ObjectType = swift_getObjectType();
    v10 = (uint64_t (*)(_QWORD, uint64_t, uint64_t))(**(int **)(v2 + 16) + *(_QWORD *)(v2 + 16));
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 40) = v4;
    *v4 = v0;
    v4[1] = sub_1B1001404;
    return v10(*(_QWORD *)(v0 + 16), ObjectType, v2);
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 16);
    type metadata accessor for RemoteLoaderError(0);
    sub_1B0FD4920();
    swift_allocError();
    v8 = v7;
    v9 = sub_1B10344C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v8, v6, v9);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1B1001404(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 48) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(_QWORD *)(v6 + 56) = a2;
    *(_QWORD *)(v6 + 64) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1B100147C()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 56));
}

uint64_t sub_1B10014B4()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for AnyWeakDataSource()
{
  return objc_opt_self();
}

uint64_t sub_1B1001508(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (MEMORY[0x1B5E152E4](v1 + 16))
  {
    v3 = *(_QWORD *)(v1 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 8))(a1, ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  else
  {
    type metadata accessor for RemoteLoaderError(0);
    sub_1B0FD4920();
    swift_allocError();
    v7 = v6;
    v8 = sub_1B10345E0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v7, a1, v8);
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
}

uint64_t sub_1B10015E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1B0FD4F28;
  v4[2] = a1;
  v4[3] = v1;
  return swift_task_switch();
}

uint64_t sub_1B1001648()
{
  swift_weakDestroy();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AnyWeakRemoteLoader()
{
  return objc_opt_self();
}

uint64_t sub_1B1001690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t sub_1B10016A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1B10016C8(a1, a2, *(_QWORD *)v3, *(_QWORD *)(v3 + 8), *(_QWORD *)(v3 + 16), *(_BYTE *)(v3 + 24), a3);
}

uint64_t sub_1B10016C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, char a6@<W6>, uint64_t *a7@<X8>)
{
  void *v7;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *boxed_opaque_existential_1;
  __int128 v24[2];
  uint64_t v25;
  uint64_t v26[3];
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[4];

  sub_1B0F5FD84(a1, (uint64_t)v26);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE5C8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE5D0);
  if (swift_dynamicCast())
  {
    sub_1B0F5A0E4(v24, (uint64_t)v29);
    __swift_project_boxed_opaque_existential_1(v29, v29[3]);
    sub_1B0F5E604(a3, a4, a5, a6 & 1);
    sub_1B0FD72F8(a2, a3, a4, a5, a6 & 1);
    if (v7)

    sub_1B0F5E6A0(a3, a4, a5, a6 & 1);
    v27 = sub_1B1034868();
    v28 = MEMORY[0x1B5E15188](MEMORY[0x1E0CD9140], v27);
    __swift_allocate_boxed_opaque_existential_1(v26);
    sub_1B10357E0();
    v20 = v27;
    v21 = v28;
    v22 = __swift_project_boxed_opaque_existential_1(v26, v27);
    a7[3] = v20;
    a7[4] = *(_QWORD *)(v21 + 16);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a7);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(boxed_opaque_existential_1, v22, v20);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  }
  else
  {
    v25 = 0;
    memset(v24, 0, sizeof(v24));
    sub_1B1001960((uint64_t)v24);
    if (qword_1EEEDE0B0 != -1)
      swift_once();
    v15 = sub_1B103467C();
    __swift_project_value_buffer(v15, (uint64_t)qword_1EEF0BA00);
    v16 = sub_1B1034664();
    v17 = sub_1B1035E1C();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_1B0F50000, v16, v17, "Shape modifier applied to non-shape view", v18, 2u);
      MEMORY[0x1B5E15248](v18, -1, -1);
    }

    return sub_1B0F5FD84(a1, (uint64_t)a7);
  }
}

uint64_t sub_1B1001960(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE5C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1B10019A0(char a1)
{
  return *(_QWORD *)&aCenter_3[8 * a1];
}

uint64_t sub_1B10019C0(char a1)
{
  return *(_QWORD *)&aLeading_6[8 * a1];
}

uint64_t sub_1B10019E0(char a1)
{
  return qword_1B1046170[a1];
}

uint64_t sub_1B1001A00(char *a1, char *a2)
{
  return sub_1B100E984(*a1, *a2);
}

uint64_t sub_1B1001A0C()
{
  sub_1B103620C();
  sub_1B1013094();
  return sub_1B103623C();
}

uint64_t sub_1B1001A50()
{
  return sub_1B1013094();
}

uint64_t sub_1B1001A58()
{
  sub_1B103620C();
  sub_1B1013094();
  return sub_1B103623C();
}

uint64_t sub_1B1001A98@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1001DC8();
  *a1 = result;
  return result;
}

uint64_t sub_1B1001AC4@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B10019A0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B1001AEC()
{
  sub_1B100213C();
  return sub_1B1035CB4();
}

uint64_t sub_1B1001B48()
{
  sub_1B100213C();
  return sub_1B1035CA8();
}

uint64_t sub_1B1001B94()
{
  return sub_1B1015594();
}

uint64_t sub_1B1001B9C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B0F60A74();
  *a1 = result;
  return result;
}

uint64_t sub_1B1001BD0@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B10019C0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B1001BF8()
{
  sub_1B10021C4();
  return sub_1B1035CB4();
}

uint64_t sub_1B1001C54()
{
  sub_1B10021C4();
  return sub_1B1035CA8();
}

uint64_t sub_1B1001CA0(char *a1, char *a2)
{
  return sub_1B100C948(*a1, *a2);
}

uint64_t sub_1B1001CAC()
{
  return sub_1B101102C();
}

uint64_t sub_1B1001CB4()
{
  return sub_1B10120B4();
}

uint64_t sub_1B1001CBC()
{
  return sub_1B1015390();
}

uint64_t sub_1B1001CC4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B0F60A74();
  *a1 = result;
  return result;
}

uint64_t sub_1B1001CF8@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B10019E0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B1001D20()
{
  sub_1B1002180();
  return sub_1B1035CB4();
}

uint64_t sub_1B1001D7C()
{
  sub_1B1002180();
  return sub_1B1035CA8();
}

uint64_t sub_1B1001DC8()
{
  unint64_t v0;

  v0 = sub_1B103605C();
  swift_bridgeObjectRelease();
  if (v0 >= 9)
    return 9;
  else
    return v0;
}

uint64_t sub_1B1001E10()
{
  return sub_1B0F60A74();
}

uint64_t sub_1B1001E1C()
{
  return sub_1B0F60A74();
}

uint64_t getEnumTagSinglePayload for AlignmentType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for AlignmentType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1B1001F04 + 4 * byte_1B1045D75[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1B1001F38 + 4 * asc_1B1045D70[v4]))();
}

uint64_t sub_1B1001F38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1001F40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1001F48);
  return result;
}

uint64_t sub_1B1001F54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1001F5CLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1B1001F60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1001F68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AlignmentType()
{
  return &type metadata for AlignmentType;
}

ValueMetadata *type metadata accessor for VerticalAlignmentString()
{
  return &type metadata for VerticalAlignmentString;
}

uint64_t _s6LiftUI23VerticalAlignmentStringOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B1001FE4 + 4 * byte_1B1045D7F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B1002018 + 4 * byte_1B1045D7A[v4]))();
}

uint64_t sub_1B1002018(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1002020(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1002028);
  return result;
}

uint64_t sub_1B1002034(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B100203CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B1002040(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1002048(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HorizontalAlignmentString()
{
  return &type metadata for HorizontalAlignmentString;
}

unint64_t sub_1B1002068()
{
  unint64_t result;

  result = qword_1EEEE0F68;
  if (!qword_1EEEE0F68)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1045EA4, &type metadata for HorizontalAlignmentString);
    atomic_store(result, (unint64_t *)&qword_1EEEE0F68);
  }
  return result;
}

unint64_t sub_1B10020B0()
{
  unint64_t result;

  result = qword_1EEEE0F70;
  if (!qword_1EEEE0F70)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1045F94, &type metadata for VerticalAlignmentString);
    atomic_store(result, (unint64_t *)&qword_1EEEE0F70);
  }
  return result;
}

unint64_t sub_1B10020F8()
{
  unint64_t result;

  result = qword_1EEEE0F78;
  if (!qword_1EEEE0F78)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104605C, &type metadata for AlignmentType);
    atomic_store(result, (unint64_t *)&qword_1EEEE0F78);
  }
  return result;
}

unint64_t sub_1B100213C()
{
  unint64_t result;

  result = qword_1EEEE0F80;
  if (!qword_1EEEE0F80)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1045FE4, &type metadata for AlignmentType);
    atomic_store(result, (unint64_t *)&qword_1EEEE0F80);
  }
  return result;
}

unint64_t sub_1B1002180()
{
  unint64_t result;

  result = qword_1EEEE0F88;
  if (!qword_1EEEE0F88)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1045F1C, &type metadata for VerticalAlignmentString);
    atomic_store(result, (unint64_t *)&qword_1EEEE0F88);
  }
  return result;
}

unint64_t sub_1B10021C4()
{
  unint64_t result;

  result = qword_1EEEE0F90;
  if (!qword_1EEEE0F90)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1045E2C, &type metadata for HorizontalAlignmentString);
    atomic_store(result, (unint64_t *)&qword_1EEEE0F90);
  }
  return result;
}

uint64_t destroy for OnChangeModifier(uint64_t a1)
{
  uint64_t result;
  int v3;
  int v4;
  int v5;

  swift_bridgeObjectRelease();
  result = sub_1B0F74EA4(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 != 255)
    result = sub_1B0F5E6A0(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), v3 & 1);
  v4 = *(unsigned __int8 *)(a1 + 96);
  if (v4 != 255)
    result = sub_1B0F74EA4(*(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), v4 & 1);
  v5 = *(unsigned __int8 *)(a1 + 128);
  if (v5 != 255)
    return sub_1B0F74EA4(*(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), v5 & 1);
  return result;
}

uint64_t initializeWithCopy for OnChangeModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  int v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  sub_1B0F5A84C(v4, v5, v6, v7);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  v8 = *(unsigned __int8 *)(a2 + 64);
  if (v8 == 255)
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
  }
  else
  {
    v9 = v8 & 1;
    v10 = *(_QWORD *)(a2 + 40);
    v11 = *(_QWORD *)(a2 + 48);
    v12 = *(_QWORD *)(a2 + 56);
    sub_1B0F5E604(v10, v11, v12, v8 & 1);
    *(_QWORD *)(a1 + 40) = v10;
    *(_QWORD *)(a1 + 48) = v11;
    *(_QWORD *)(a1 + 56) = v12;
    *(_BYTE *)(a1 + 64) = v9;
  }
  v13 = *(unsigned __int8 *)(a2 + 96);
  if (v13 == 255)
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 81) = *(_OWORD *)(a2 + 81);
  }
  else
  {
    v14 = v13 & 1;
    v15 = *(_QWORD *)(a2 + 72);
    v16 = *(_QWORD *)(a2 + 80);
    v17 = *(_QWORD *)(a2 + 88);
    sub_1B0F5A84C(v15, v16, v17, v13 & 1);
    *(_QWORD *)(a1 + 72) = v15;
    *(_QWORD *)(a1 + 80) = v16;
    *(_QWORD *)(a1 + 88) = v17;
    *(_BYTE *)(a1 + 96) = v14;
  }
  v18 = *(unsigned __int8 *)(a2 + 128);
  if (v18 == 255)
  {
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 113) = *(_OWORD *)(a2 + 113);
  }
  else
  {
    v19 = v18 & 1;
    v20 = *(_QWORD *)(a2 + 104);
    v21 = *(_QWORD *)(a2 + 112);
    v22 = *(_QWORD *)(a2 + 120);
    sub_1B0F5A84C(v20, v21, v22, v18 & 1);
    *(_QWORD *)(a1 + 104) = v20;
    *(_QWORD *)(a1 + 112) = v21;
    *(_QWORD *)(a1 + 120) = v22;
    *(_BYTE *)(a1 + 128) = v19;
  }
  return a1;
}

uint64_t assignWithCopy for OnChangeModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  __int128 *v12;
  __int128 *v13;
  int v14;
  __int128 v15;
  __int128 v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 *v29;
  __int128 *v30;
  int v31;
  __int128 v32;
  __int128 v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 *v46;
  __int128 *v47;
  int v48;
  __int128 v49;
  __int128 v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1B0F5A84C(v4, v5, v6, v7);
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  sub_1B0F74EA4(v8, v9, v10, v11);
  v12 = (__int128 *)(a1 + 40);
  v13 = (__int128 *)(a2 + 40);
  v14 = *(unsigned __int8 *)(a2 + 64);
  if (*(unsigned __int8 *)(a1 + 64) == 255)
  {
    if (v14 == 255)
    {
      v16 = *v13;
      *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
      *v12 = v16;
    }
    else
    {
      v25 = v14 & 1;
      v26 = *(_QWORD *)(a2 + 40);
      v27 = *(_QWORD *)(a2 + 48);
      v28 = *(_QWORD *)(a2 + 56);
      sub_1B0F5E604(v26, v27, v28, v14 & 1);
      *(_QWORD *)(a1 + 40) = v26;
      *(_QWORD *)(a1 + 48) = v27;
      *(_QWORD *)(a1 + 56) = v28;
      *(_BYTE *)(a1 + 64) = v25;
    }
  }
  else if (v14 == 255)
  {
    sub_1B0F5A3AC(a1 + 40, &qword_1EEEDE7E8);
    v15 = *(_OWORD *)(a2 + 49);
    *v12 = *v13;
    *(_OWORD *)(a1 + 49) = v15;
  }
  else
  {
    v17 = v14 & 1;
    v18 = *(_QWORD *)(a2 + 40);
    v19 = *(_QWORD *)(a2 + 48);
    v20 = *(_QWORD *)(a2 + 56);
    sub_1B0F5E604(v18, v19, v20, v14 & 1);
    v21 = *(_QWORD *)(a1 + 40);
    v22 = *(_QWORD *)(a1 + 48);
    v23 = *(_QWORD *)(a1 + 56);
    v24 = *(_BYTE *)(a1 + 64);
    *(_QWORD *)(a1 + 40) = v18;
    *(_QWORD *)(a1 + 48) = v19;
    *(_QWORD *)(a1 + 56) = v20;
    *(_BYTE *)(a1 + 64) = v17;
    sub_1B0F5E6A0(v21, v22, v23, v24);
  }
  v29 = (__int128 *)(a1 + 72);
  v30 = (__int128 *)(a2 + 72);
  v31 = *(unsigned __int8 *)(a2 + 96);
  if (*(unsigned __int8 *)(a1 + 96) == 255)
  {
    if (v31 == 255)
    {
      v33 = *v30;
      *(_OWORD *)(a1 + 81) = *(_OWORD *)(a2 + 81);
      *v29 = v33;
    }
    else
    {
      v42 = v31 & 1;
      v43 = *(_QWORD *)(a2 + 72);
      v44 = *(_QWORD *)(a2 + 80);
      v45 = *(_QWORD *)(a2 + 88);
      sub_1B0F5A84C(v43, v44, v45, v31 & 1);
      *(_QWORD *)(a1 + 72) = v43;
      *(_QWORD *)(a1 + 80) = v44;
      *(_QWORD *)(a1 + 88) = v45;
      *(_BYTE *)(a1 + 96) = v42;
    }
  }
  else if (v31 == 255)
  {
    sub_1B0F5A3AC(a1 + 72, &qword_1EEEDEA40);
    v32 = *(_OWORD *)(a2 + 81);
    *v29 = *v30;
    *(_OWORD *)(a1 + 81) = v32;
  }
  else
  {
    v34 = v31 & 1;
    v35 = *(_QWORD *)(a2 + 72);
    v36 = *(_QWORD *)(a2 + 80);
    v37 = *(_QWORD *)(a2 + 88);
    sub_1B0F5A84C(v35, v36, v37, v31 & 1);
    v38 = *(_QWORD *)(a1 + 72);
    v39 = *(_QWORD *)(a1 + 80);
    v40 = *(_QWORD *)(a1 + 88);
    v41 = *(_BYTE *)(a1 + 96);
    *(_QWORD *)(a1 + 72) = v35;
    *(_QWORD *)(a1 + 80) = v36;
    *(_QWORD *)(a1 + 88) = v37;
    *(_BYTE *)(a1 + 96) = v34;
    sub_1B0F74EA4(v38, v39, v40, v41);
  }
  v46 = (__int128 *)(a1 + 104);
  v47 = (__int128 *)(a2 + 104);
  v48 = *(unsigned __int8 *)(a2 + 128);
  if (*(unsigned __int8 *)(a1 + 128) == 255)
  {
    if (v48 == 255)
    {
      v50 = *v47;
      *(_OWORD *)(a1 + 113) = *(_OWORD *)(a2 + 113);
      *v46 = v50;
    }
    else
    {
      v59 = v48 & 1;
      v60 = *(_QWORD *)(a2 + 104);
      v61 = *(_QWORD *)(a2 + 112);
      v62 = *(_QWORD *)(a2 + 120);
      sub_1B0F5A84C(v60, v61, v62, v48 & 1);
      *(_QWORD *)(a1 + 104) = v60;
      *(_QWORD *)(a1 + 112) = v61;
      *(_QWORD *)(a1 + 120) = v62;
      *(_BYTE *)(a1 + 128) = v59;
    }
  }
  else if (v48 == 255)
  {
    sub_1B0F5A3AC(a1 + 104, &qword_1EEEDEA40);
    v49 = *(_OWORD *)(a2 + 113);
    *v46 = *v47;
    *(_OWORD *)(a1 + 113) = v49;
  }
  else
  {
    v51 = v48 & 1;
    v52 = *(_QWORD *)(a2 + 104);
    v53 = *(_QWORD *)(a2 + 112);
    v54 = *(_QWORD *)(a2 + 120);
    sub_1B0F5A84C(v52, v53, v54, v48 & 1);
    v55 = *(_QWORD *)(a1 + 104);
    v56 = *(_QWORD *)(a1 + 112);
    v57 = *(_QWORD *)(a1 + 120);
    v58 = *(_BYTE *)(a1 + 128);
    *(_QWORD *)(a1 + 104) = v52;
    *(_QWORD *)(a1 + 112) = v53;
    *(_QWORD *)(a1 + 120) = v54;
    *(_BYTE *)(a1 + 128) = v51;
    sub_1B0F74EA4(v55, v56, v57, v58);
  }
  return a1;
}

uint64_t assignWithTake for OnChangeModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_BYTE *)(a1 + 32);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = v5;
  sub_1B0F74EA4(v6, v7, v8, v9);
  v10 = *(unsigned __int8 *)(a1 + 64);
  if (v10 == 255)
    goto LABEL_4;
  v11 = *(unsigned __int8 *)(a2 + 64);
  if (v11 == 255)
  {
    sub_1B0F5A3AC(a1 + 40, &qword_1EEEDE7E8);
LABEL_4:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
    goto LABEL_6;
  }
  v12 = v10 & 1;
  v13 = *(_QWORD *)(a2 + 56);
  v14 = *(_QWORD *)(a1 + 40);
  v15 = *(_QWORD *)(a1 + 48);
  v16 = *(_QWORD *)(a1 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = v13;
  *(_BYTE *)(a1 + 64) = v11 & 1;
  sub_1B0F5E6A0(v14, v15, v16, v12);
LABEL_6:
  v17 = *(unsigned __int8 *)(a1 + 96);
  if (v17 == 255)
  {
LABEL_9:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 81) = *(_OWORD *)(a2 + 81);
    goto LABEL_11;
  }
  v18 = *(unsigned __int8 *)(a2 + 96);
  if (v18 == 255)
  {
    sub_1B0F5A3AC(a1 + 72, &qword_1EEEDEA40);
    goto LABEL_9;
  }
  v19 = v17 & 1;
  v20 = *(_QWORD *)(a2 + 88);
  v21 = *(_QWORD *)(a1 + 72);
  v22 = *(_QWORD *)(a1 + 80);
  v23 = *(_QWORD *)(a1 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = v20;
  *(_BYTE *)(a1 + 96) = v18 & 1;
  sub_1B0F74EA4(v21, v22, v23, v19);
LABEL_11:
  v24 = *(unsigned __int8 *)(a1 + 128);
  if (v24 != 255)
  {
    v25 = *(unsigned __int8 *)(a2 + 128);
    if (v25 != 255)
    {
      v26 = v24 & 1;
      v27 = *(_QWORD *)(a2 + 120);
      v28 = *(_QWORD *)(a1 + 104);
      v29 = *(_QWORD *)(a1 + 112);
      v30 = *(_QWORD *)(a1 + 120);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 120) = v27;
      *(_BYTE *)(a1 + 128) = v25 & 1;
      sub_1B0F74EA4(v28, v29, v30, v26);
      return a1;
    }
    sub_1B0F5A3AC(a1 + 104, &qword_1EEEDEA40);
  }
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 113) = *(_OWORD *)(a2 + 113);
  return a1;
}

uint64_t getEnumTagSinglePayload for OnChangeModifier(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 129))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OnChangeModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 128) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 129) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 129) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for OnChangeModifier()
{
  return &type metadata for OnChangeModifier;
}

ValueMetadata *type metadata accessor for OnDisappearModifier()
{
  return &type metadata for OnDisappearModifier;
}

ValueMetadata *type metadata accessor for OnTapModifier()
{
  return &type metadata for OnTapModifier;
}

ValueMetadata *type metadata accessor for OnAppearModifier()
{
  return &type metadata for OnAppearModifier;
}

uint64_t sub_1B1002988@<X0>(BOOL *a1@<X8>)
{
  return sub_1B0F89810(a1);
}

uint64_t sub_1B1002998@<X0>(BOOL *a1@<X8>)
{
  return sub_1B0F89868(a1);
}

uint64_t sub_1B10029A4()
{
  sub_1B1004914();
  return sub_1B10362B4();
}

uint64_t sub_1B10029CC()
{
  sub_1B1004914();
  return sub_1B10362C0();
}

uint64_t sub_1B10029F4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1B1002BDC(a1, a2, a3, (uint64_t)sub_1B100428C, MEMORY[0x1E0CDF130], a4);
}

_QWORD *sub_1B1002A20@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1B100462C(a1, &qword_1EEEE0FF0, (void (*)(void))sub_1B1004914);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1B1002A60@<X0>(BOOL *a1@<X8>)
{
  return sub_1B0F89810(a1);
}

uint64_t sub_1B1002A6C@<X0>(BOOL *a1@<X8>)
{
  return sub_1B0F89868(a1);
}

uint64_t sub_1B1002A78()
{
  sub_1B100488C();
  return sub_1B10362B4();
}

uint64_t sub_1B1002AA0()
{
  sub_1B100488C();
  return sub_1B10362C0();
}

uint64_t sub_1B1002AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE910);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1B1035D80();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = a1;
  v13[5] = a2;
  v13[6] = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1B0F706F4((uint64_t)v11, a5, (uint64_t)v13);
  return swift_release();
}

uint64_t sub_1B1002BB0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1B1002BDC(a1, a2, a3, (uint64_t)sub_1B1004308, MEMORY[0x1E0CDE0F0], a4);
}

uint64_t sub_1B1002BDC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X6>, void (*a5)(uint64_t, _QWORD *, uint64_t, uint64_t)@<X7>, uint64_t *a6@<X8>)
{
  uint64_t *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v20[2];
  uint64_t v21[5];

  v9 = *v6;
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = v9;
  v12[3] = a2;
  v12[4] = a3;
  v13 = sub_1B103497C();
  v21[3] = v13;
  v20[0] = v11;
  v20[1] = MEMORY[0x1E0CDC8B0];
  v14 = MEMORY[0x1B5E15188](MEMORY[0x1E0CD9C20], v13, v20);
  v21[4] = v14;
  __swift_allocate_boxed_opaque_existential_1(v21);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  a5(a4, v12, v10, v11);
  swift_release();
  v15 = sub_1B0F5B4C8(v9);
  sub_1B0F69B0C(v15, a2, a3, v13, v14, a6);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
}

_QWORD *sub_1B1002D2C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1B100462C(a1, &qword_1EEEE0FD0, (void (*)(void))sub_1B100488C);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1B1002D6C@<X0>(BOOL *a1@<X8>)
{
  return sub_1B0F89810(a1);
}

uint64_t sub_1B1002D78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1B1004E44();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B1002D9C@<X0>(BOOL *a1@<X8>)
{
  return sub_1B0F89868(a1);
}

uint64_t sub_1B1002DA8()
{
  sub_1B10048D0();
  return sub_1B10362B4();
}

uint64_t sub_1B1002DD0()
{
  sub_1B10048D0();
  return sub_1B10362C0();
}

uint64_t sub_1B1002DF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE910);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EEEDE0B0 != -1)
    swift_once();
  v9 = sub_1B103467C();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EEF0BA00);
  v10 = sub_1B1034664();
  v11 = sub_1B1035E34();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_1B0F50000, v10, v11, "onTapGesture!", v12, 2u);
    MEMORY[0x1B5E15248](v12, -1, -1);
  }

  v13 = sub_1B1035D80();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 1, 1, v13);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = 0;
  v14[3] = 0;
  v14[4] = a1;
  v14[5] = a2;
  v14[6] = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1B0F706F4((uint64_t)v8, (uint64_t)&unk_1EEEDF5B8, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_1B1002F94(char a1)
{
  return *(_QWORD *)&aActions_8[8 * a1];
}

uint64_t sub_1B1002FB4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t OpaqueTypeConformance2;
  uint64_t v13;
  uint64_t v16[5];

  v7 = *v4;
  v8 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = v7;
  v10[3] = a2;
  v10[4] = a3;
  v16[0] = v8;
  v16[1] = v9;
  v11 = MEMORY[0x1B5E15134](0, v16, MEMORY[0x1E0CDE248], 0);
  v16[3] = v11;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v16[4] = OpaqueTypeConformance2;
  __swift_allocate_boxed_opaque_existential_1(v16);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1B10353C0();
  swift_release();
  v13 = sub_1B0F5B4C8(v7);
  sub_1B0F69B0C(v13, a2, a3, v11, OpaqueTypeConformance2, a4);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
}

_QWORD *sub_1B1003108@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1B100462C(a1, &qword_1EEEE0FE0, (void (*)(void))sub_1B10048D0);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1B1003148(char *a1, char *a2)
{
  return sub_1B100DC34(*a1, *a2);
}

uint64_t sub_1B1003154()
{
  return sub_1B1011094();
}

uint64_t sub_1B100315C()
{
  return sub_1B1012A0C();
}

uint64_t sub_1B1003164()
{
  return sub_1B1014648();
}

uint64_t sub_1B100316C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1004E5C();
  *a1 = result;
  return result;
}

uint64_t sub_1B1003198@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B1002F94(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B10031C0()
{
  char *v0;

  return sub_1B1002F94(*v0);
}

uint64_t sub_1B10031C8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1004E5C();
  *a1 = result;
  return result;
}

uint64_t sub_1B10031EC()
{
  sub_1B10044C4();
  return sub_1B10362B4();
}

uint64_t sub_1B1003214()
{
  sub_1B10044C4();
  return sub_1B10362C0();
}

uint64_t sub_1B100323C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  unsigned __int8 v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  _BYTE v66[7];
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  _BYTE v71[7];
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  _BYTE v76[7];
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  __int128 v82;
  unsigned __int8 v83;
  uint64_t v84;
  _BYTE v85[7];
  _BYTE v86[7];
  _BYTE v87[7];
  char v88;
  uint64_t v89;

  v3 = v2;
  v89 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0FC0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B10044C4();
  sub_1B1036278();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v52 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF610);
  LOBYTE(v62) = 0;
  sub_1B0F972CC();
  sub_1B10360BC();
  v50 = a1;
  v51 = v5;
  v10 = v81;
  v11 = *(_QWORD *)(v81 + 16);
  if (v11)
  {
    v49 = 0;
    v84 = MEMORY[0x1E0DEE9D8];
    sub_1B0FDD904(0, v11, 0);
    v48 = v10;
    v12 = v10 + 32;
    v13 = v84;
    do
    {
      sub_1B0F97374(v12, (uint64_t)&v53);
      sub_1B0F5FD84((uint64_t)&v53, (uint64_t)&v62);
      sub_1B0F973B0((uint64_t)&v53);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1B0FDD904(0, *(_QWORD *)(v13 + 16) + 1, 1);
        v13 = v84;
      }
      v15 = *(_QWORD *)(v13 + 16);
      v14 = *(_QWORD *)(v13 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1B0FDD904(v14 > 1, v15 + 1, 1);
        v13 = v84;
      }
      *(_QWORD *)(v13 + 16) = v15 + 1;
      sub_1B0F5A0E4(&v62, v13 + 40 * v15 + 32);
      v12 += 40;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    v3 = v49;
  }
  else
  {
    swift_bridgeObjectRelease();
    v13 = MEMORY[0x1E0DEE9D8];
  }
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDEA40);
  LOBYTE(v53) = 1;
  v17 = sub_1B1004508((unint64_t *)&qword_1EEEDEB48, &qword_1EEEDEA40);
  swift_bridgeObjectRetain();
  v18 = v51;
  sub_1B10360BC();
  if (v3)
  {
    (*(void (**)(char *, uint64_t))(v52 + 8))(v8, v18);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
    swift_bridgeObjectRelease();
    return v89;
  }
  else
  {
    v40 = v16;
    v42 = v17;
    v19 = v62;
    v20 = v63;
    v21 = v64;
    v88 = v64;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE7E8);
    LOBYTE(v53) = 2;
    v47 = v19;
    v48 = v20;
    v22 = v51;
    sub_1B0F5A84C(v19, *((uint64_t *)&v19 + 1), v20, v21);
    sub_1B1004508((unint64_t *)&qword_1EEEDE7F0, &qword_1EEEDE7E8);
    v44 = 0;
    sub_1B10360A4();
    v45 = *((_QWORD *)&v19 + 1);
    v37 = v21;
    v23 = v62;
    LOBYTE(v53) = 3;
    v39 = v63;
    v38 = v64;
    sub_1B0F5FD10(v62, *((uint64_t *)&v62 + 1), v63, v64);
    sub_1B10360A4();
    v43 = *((_QWORD *)&v23 + 1);
    v49 = v23;
    v24 = v62;
    v25 = v63;
    LOBYTE(v84) = 4;
    v46 = *((_QWORD *)&v62 + 1);
    HIDWORD(v36) = v64;
    sub_1B0F75C64(v62, *((uint64_t *)&v62 + 1), v63, v64);
    sub_1B10360A4();
    v41 = v25;
    (*(void (**)(char *, uint64_t))(v52 + 8))(v8, v22);
    v51 = v82;
    v52 = v81;
    v44 = *((_QWORD *)&v82 + 1);
    LODWORD(v42) = v83;
    v26 = v46;
    *(_QWORD *)&v53 = v13;
    *((_QWORD *)&v53 + 1) = v47;
    v27 = v25;
    *(_QWORD *)&v54 = v45;
    *((_QWORD *)&v54 + 1) = v48;
    LOBYTE(v20) = v37;
    LOBYTE(v22) = v38;
    LOBYTE(v55) = v37;
    *((_QWORD *)&v55 + 1) = v49;
    *(_QWORD *)&v56 = v43;
    *((_QWORD *)&v56 + 1) = v39;
    LOBYTE(v57) = v38;
    *((_QWORD *)&v57 + 1) = v24;
    *(_QWORD *)&v58 = v46;
    *((_QWORD *)&v58 + 1) = v25;
    LOBYTE(v25) = BYTE4(v36);
    LOBYTE(v59) = BYTE4(v36);
    *((_QWORD *)&v59 + 1) = v81;
    v60 = v82;
    v61 = v83;
    sub_1B10043DC((uint64_t)&v53);
    sub_1B0F75CB4(v24, v26, v27, v25);
    sub_1B0F5FD28(v49, v43, v39, v22);
    v29 = v47;
    v28 = v48;
    v30 = v45;
    sub_1B0F74EA4(v47, v45, v48, v20);
    swift_bridgeObjectRelease();
    v31 = v60;
    v32 = v89;
    *(_OWORD *)(v89 + 96) = v59;
    *(_OWORD *)(v32 + 112) = v31;
    *(_BYTE *)(v32 + 128) = v61;
    v33 = v56;
    *(_OWORD *)(v32 + 32) = v55;
    *(_OWORD *)(v32 + 48) = v33;
    v34 = v58;
    *(_OWORD *)(v32 + 64) = v57;
    *(_OWORD *)(v32 + 80) = v34;
    v35 = v54;
    *(_OWORD *)v32 = v53;
    *(_OWORD *)(v32 + 16) = v35;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
    *(_QWORD *)&v62 = v13;
    *((_QWORD *)&v62 + 1) = v29;
    v63 = v30;
    v64 = v28;
    v65 = v88;
    *(_DWORD *)v66 = *(_DWORD *)v87;
    *(_DWORD *)&v66[3] = *(_DWORD *)&v87[3];
    v67 = v49;
    v68 = v43;
    v69 = v39;
    v70 = v22;
    *(_DWORD *)v71 = *(_DWORD *)v86;
    *(_DWORD *)&v71[3] = *(_DWORD *)&v86[3];
    v72 = v24;
    v73 = v46;
    v74 = v41;
    v75 = BYTE4(v36);
    *(_DWORD *)v76 = *(_DWORD *)v85;
    *(_DWORD *)&v76[3] = *(_DWORD *)&v85[3];
    v77 = v52;
    v78 = v51;
    v79 = v44;
    v80 = v42;
    return sub_1B1004548((uint64_t)&v62);
  }
}

uint64_t sub_1B1003964(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[3];
  char v13;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *a2;
  if (*(_BYTE *)(a1 + 24) == 1)
  {
    v12[0] = *(_QWORD *)a1;
    v12[1] = v2;
    v12[2] = v4;
    v13 = 1;
    v11 = v5;
    return RemoteStateStore.set(reference:value:)((uint64_t)v12, &v11);
  }
  else
  {
    swift_retain();
    sub_1B0F9877C();
    v8 = v7;
    v10 = v9;
    swift_retain();
    sub_1B0FEBD74(v5, v8, v10);
    return sub_1B0F74EA4(v3, v2, v4, 0);
  }
}

uint64_t sub_1B1003C18@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  __int128 *v4;
  uint64_t v5;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  char v15;
  uint64_t result;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  unint64_t v28;
  uint64_t OpaqueTypeConformance2;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v34[3];
  unint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  char v45;
  uint64_t v46;

  v9 = v4[7];
  v43 = v4[6];
  v44 = v9;
  v45 = *((_BYTE *)v4 + 128);
  v10 = v4[3];
  v39 = v4[2];
  v40 = v10;
  v11 = v4[5];
  v41 = v4[4];
  v42 = v11;
  v12 = v4[1];
  v37 = *v4;
  v38 = v12;
  v13 = *((_QWORD *)&v37 + 1);
  v14 = v12;
  v15 = v39;
  sub_1B0F5A84C(*((uint64_t *)&v37 + 1), v12, *((uint64_t *)&v12 + 1), v39);
  sub_1B0FD6EFC(a2, *((uint64_t *)&v37 + 1), v14, *((uint64_t *)&v14 + 1), v39, v34);
  result = sub_1B0F74EA4(v13, v14, *((uint64_t *)&v14 + 1), v15);
  if (!v5)
  {
    v32 = a4;
    v17 = v34[0];
    v18 = v41;
    if (v41 != 255)
    {
      v19 = *((_QWORD *)&v39 + 1);
      v20 = v40;
      sub_1B0F5E604(*((uint64_t *)&v39 + 1), v40, *((uint64_t *)&v40 + 1), v41 & 1);
      sub_1B0FD7528(a2, v19, v20, *((uint64_t *)&v20 + 1), v18 & 1);
      sub_1B0F5FD28(v19, v20, *((uint64_t *)&v20 + 1), v18);
    }
    v22 = a1[3];
    v21 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v22);
    v46 = v17;
    v23 = swift_allocObject();
    v24 = v44;
    *(_OWORD *)(v23 + 112) = v43;
    *(_OWORD *)(v23 + 128) = v24;
    *(_BYTE *)(v23 + 144) = v45;
    v25 = v40;
    *(_OWORD *)(v23 + 48) = v39;
    *(_OWORD *)(v23 + 64) = v25;
    v26 = v42;
    *(_OWORD *)(v23 + 80) = v41;
    *(_OWORD *)(v23 + 96) = v26;
    v27 = v38;
    *(_OWORD *)(v23 + 16) = v37;
    *(_OWORD *)(v23 + 32) = v27;
    *(_QWORD *)(v23 + 152) = a2;
    *(_QWORD *)(v23 + 160) = a3;
    v28 = sub_1B0FA1B48();
    v34[0] = v22;
    v34[1] = (uint64_t)&type metadata for DecodableState;
    v34[2] = v21;
    v35 = v28;
    v31 = MEMORY[0x1B5E15134](0, v34, MEMORY[0x1E0CDF150], 0);
    v35 = v31;
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v36 = OpaqueTypeConformance2;
    __swift_allocate_boxed_opaque_existential_1(v34);
    sub_1B10043DC((uint64_t)&v37);
    swift_retain();
    swift_retain();
    sub_1B1035618();
    swift_release();
    v30 = sub_1B0F5B4C8(v37);
    sub_1B0F69B0C(v30, a2, a3, v31, OpaqueTypeConformance2, v32);
    swift_bridgeObjectRelease();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  }
  return result;
}

uint64_t sub_1B1003EE8(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE910);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a2;
  v14 = *((unsigned __int8 *)a3 + 96);
  if (v14 != 255)
  {
    v16 = a3[10];
    v15 = a3[11];
    v17 = a3[9];
    v18 = *a1;
    v29 = v17;
    v30 = v16;
    v31 = v15;
    v32 = v14 & 1;
    v28 = v18;
    sub_1B0F5A84C(v17, v16, v15, v14 & 1);
    sub_1B1003964((uint64_t)&v29, &v28);
    sub_1B0F75CB4(v17, v16, v15, v14);
  }
  v19 = *((unsigned __int8 *)a3 + 128);
  if (v19 != 255)
  {
    v21 = a3[14];
    v20 = a3[15];
    v22 = a3[13];
    v29 = v22;
    v30 = v21;
    v31 = v20;
    v32 = v19 & 1;
    v28 = v13;
    sub_1B0F5A84C(v22, v21, v20, v19 & 1);
    sub_1B1003964((uint64_t)&v29, &v28);
    sub_1B0F75CB4(v22, v21, v20, v19);
  }
  v23 = *a3;
  v24 = sub_1B1035D80();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v12, 1, 1, v24);
  v25 = (_QWORD *)swift_allocObject();
  v25[2] = 0;
  v25[3] = 0;
  v25[4] = v23;
  v25[5] = a4;
  v25[6] = a5;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1B0F706F4((uint64_t)v12, (uint64_t)&unk_1EEEDF5D8, (uint64_t)v25);
  return swift_release();
}

uint64_t sub_1B10040C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1B1003C18(a1, a2, a3, a4);
}

uint64_t sub_1B10040D4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B100323C(a1, a2);
}

unint64_t sub_1B10040E8(uint64_t a1)
{
  unint64_t result;

  result = sub_1B100410C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B100410C()
{
  unint64_t result;

  result = qword_1EEEE0F98;
  if (!qword_1EEEE0F98)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104629C, &type metadata for OnChangeModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0F98);
  }
  return result;
}

unint64_t sub_1B1004150(uint64_t a1)
{
  unint64_t result;

  result = sub_1B1004174();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B1004174()
{
  unint64_t result;

  result = qword_1EEEE0FA0;
  if (!qword_1EEEE0FA0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1046274, &type metadata for OnDisappearModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0FA0);
  }
  return result;
}

unint64_t sub_1B10041B8(uint64_t a1)
{
  unint64_t result;

  result = sub_1B10041DC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B10041DC()
{
  unint64_t result;

  result = qword_1EEEE0FA8;
  if (!qword_1EEEE0FA8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104624C, &type metadata for OnTapModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0FA8);
  }
  return result;
}

unint64_t sub_1B1004220(uint64_t a1)
{
  unint64_t result;

  result = sub_1B1004244();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B1004244()
{
  unint64_t result;

  result = qword_1EEEE0FB0;
  if (!qword_1EEEE0FB0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1046224, &type metadata for OnAppearModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE0FB0);
  }
  return result;
}

uint64_t sub_1B100428C()
{
  uint64_t *v0;

  return sub_1B1002AC8(v0[2], v0[3], v0[4], (uint64_t)&unk_1E62A0DE8, (uint64_t)&unk_1EEEDE930);
}

uint64_t sub_1B10042C0()
{
  uint64_t *v0;

  return sub_1B1002DF8(v0[2], v0[3], v0[4]);
}

uint64_t objectdestroyTm_6()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B1004308()
{
  uint64_t *v0;

  return sub_1B1002AC8(v0[2], v0[3], v0[4], (uint64_t)&unk_1E62A0E88, (uint64_t)&unk_1EEEE0FB8);
}

uint64_t sub_1B1004338()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  swift_bridgeObjectRelease();
  sub_1B0F74EA4(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  v1 = *(unsigned __int8 *)(v0 + 80);
  if (v1 != 255)
    sub_1B0F5E6A0(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), v1 & 1);
  v2 = *(unsigned __int8 *)(v0 + 112);
  if (v2 != 255)
    sub_1B0F74EA4(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), v2 & 1);
  v3 = *(unsigned __int8 *)(v0 + 144);
  if (v3 != 255)
    sub_1B0F74EA4(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), v3 & 1);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B10043D0(uint64_t *a1, uint64_t *a2)
{
  uint64_t *v2;

  return sub_1B1003EE8(a1, a2, v2 + 2, v2[19], v2[20]);
}

uint64_t sub_1B10043DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_BYTE *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  v8 = *(_QWORD *)(a1 + 56);
  v13 = *(_QWORD *)(a1 + 80);
  v14 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 88);
  v17 = *(_QWORD *)(a1 + 112);
  v18 = *(_QWORD *)(a1 + 104);
  v16 = *(_QWORD *)(a1 + 120);
  v9 = *(_BYTE *)(a1 + 64);
  v10 = *(_BYTE *)(a1 + 96);
  v15 = *(_BYTE *)(a1 + 128);
  swift_bridgeObjectRetain();
  sub_1B0F5A84C(v2, v3, v4, v5);
  sub_1B0F5FD10(v6, v7, v8, v9);
  sub_1B0F75C64(v14, v13, v12, v10);
  sub_1B0F75C64(v18, v17, v16, v15);
  return a1;
}

unint64_t sub_1B10044C4()
{
  unint64_t result;

  result = qword_1EEEE0FC8;
  if (!qword_1EEEE0FC8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10467F0, &type metadata for OnChangeModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0FC8);
  }
  return result;
}

uint64_t sub_1B1004508(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1B5E15188](&protocol conformance descriptor for Referenceable<A>, v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B1004548(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_BYTE *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  v8 = *(_QWORD *)(a1 + 56);
  v13 = *(_QWORD *)(a1 + 80);
  v14 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 88);
  v17 = *(_QWORD *)(a1 + 112);
  v18 = *(_QWORD *)(a1 + 104);
  v16 = *(_QWORD *)(a1 + 120);
  v9 = *(_BYTE *)(a1 + 64);
  v10 = *(_BYTE *)(a1 + 96);
  v15 = *(_BYTE *)(a1 + 128);
  swift_bridgeObjectRelease();
  sub_1B0F74EA4(v2, v3, v4, v5);
  sub_1B0F5FD28(v6, v7, v8, v9);
  sub_1B0F75CB4(v14, v13, v12, v10);
  sub_1B0F75CB4(v18, v17, v16, v15);
  return a1;
}

_QWORD *sub_1B100462C(_QWORD *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];
  uint64_t v22;
  _BYTE v23[40];
  __int128 v24[2];
  _QWORD *v25;
  uint64_t v26;

  v22 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v6 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  v10 = v9;
  sub_1B1036278();
  if (v3)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v11 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF610);
    sub_1B0F972CC();
    v12 = v22;
    sub_1B10360BC();
    v14 = v26;
    v15 = *(_QWORD *)(v26 + 16);
    if (v15)
    {
      v21[0] = v8;
      v21[1] = 0;
      v25 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      sub_1B0FDD904(0, v15, 0);
      v16 = v14 + 32;
      v10 = v25;
      do
      {
        sub_1B0F97374(v16, (uint64_t)v23);
        sub_1B0F5FD84((uint64_t)v23, (uint64_t)v24);
        sub_1B0F973B0((uint64_t)v23);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B0FDD904(0, v10[2] + 1, 1);
          v10 = v25;
        }
        v18 = v10[2];
        v17 = v10[3];
        if (v18 >= v17 >> 1)
        {
          sub_1B0FDD904(v17 > 1, v18 + 1, 1);
          v10 = v25;
        }
        v10[2] = v18 + 1;
        sub_1B0F5A0E4(v24, (uint64_t)&v10[5 * v18 + 4]);
        v16 += 40;
        --v15;
      }
      while (v15);
      v19 = v6;
      v20 = (uint64_t)v11;
      swift_bridgeObjectRelease();
      v12 = v22;
      v8 = (char *)v21[0];
    }
    else
    {
      v19 = v6;
      swift_bridgeObjectRelease();
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v20 = (uint64_t)v11;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v12);
    __swift_destroy_boxed_opaque_existential_1(v20);
  }
  return v10;
}

unint64_t sub_1B100488C()
{
  unint64_t result;

  result = qword_1EEEE0FD8;
  if (!qword_1EEEE0FD8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10467A0, &type metadata for OnDisappearModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0FD8);
  }
  return result;
}

unint64_t sub_1B10048D0()
{
  unint64_t result;

  result = qword_1EEEE0FE8;
  if (!qword_1EEEE0FE8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1046750, &type metadata for OnTapModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0FE8);
  }
  return result;
}

unint64_t sub_1B1004914()
{
  unint64_t result;

  result = qword_1EEEE0FF8;
  if (!qword_1EEEE0FF8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1046700, &type metadata for OnAppearModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE0FF8);
  }
  return result;
}

ValueMetadata *type metadata accessor for OnAppearModifier.CodingKeys()
{
  return &type metadata for OnAppearModifier.CodingKeys;
}

ValueMetadata *type metadata accessor for OnTapModifier.CodingKeys()
{
  return &type metadata for OnTapModifier.CodingKeys;
}

uint64_t _s6LiftUI16OnAppearModifierV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B10049BC + 4 * byte_1B10461A0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B10049DC + 4 * byte_1B10461A5[v4]))();
}

_BYTE *sub_1B10049BC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B10049DC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B10049E4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B10049EC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B10049F4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B10049FC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for OnDisappearModifier.CodingKeys()
{
  return &type metadata for OnDisappearModifier.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for OnChangeModifier.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1B1004A64 + 4 * byte_1B10461AF[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1B1004A98 + 4 * byte_1B10461AA[v4]))();
}

uint64_t sub_1B1004A98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1004AA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1004AA8);
  return result;
}

uint64_t sub_1B1004AB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1004ABCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1B1004AC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1004AC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OnChangeModifier.CodingKeys()
{
  return &type metadata for OnChangeModifier.CodingKeys;
}

unint64_t sub_1B1004AE8()
{
  unint64_t result;

  result = qword_1EEEE1000;
  if (!qword_1EEEE1000)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1046408, &type metadata for OnChangeModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1000);
  }
  return result;
}

unint64_t sub_1B1004B30()
{
  unint64_t result;

  result = qword_1EEEE1008;
  if (!qword_1EEEE1008)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10464F8, &type metadata for OnDisappearModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1008);
  }
  return result;
}

unint64_t sub_1B1004B78()
{
  unint64_t result;

  result = qword_1EEEE1010;
  if (!qword_1EEEE1010)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10465E8, &type metadata for OnTapModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1010);
  }
  return result;
}

unint64_t sub_1B1004BC0()
{
  unint64_t result;

  result = qword_1EEEE1018;
  if (!qword_1EEEE1018)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10466D8, &type metadata for OnAppearModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1018);
  }
  return result;
}

unint64_t sub_1B1004C08()
{
  unint64_t result;

  result = qword_1EEEE1020;
  if (!qword_1EEEE1020)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1046610, &type metadata for OnAppearModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1020);
  }
  return result;
}

unint64_t sub_1B1004C50()
{
  unint64_t result;

  result = qword_1EEEE1028;
  if (!qword_1EEEE1028)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1046638, &type metadata for OnAppearModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1028);
  }
  return result;
}

unint64_t sub_1B1004C98()
{
  unint64_t result;

  result = qword_1EEEE1030;
  if (!qword_1EEEE1030)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1046520, &type metadata for OnTapModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1030);
  }
  return result;
}

unint64_t sub_1B1004CE0()
{
  unint64_t result;

  result = qword_1EEEE1038;
  if (!qword_1EEEE1038)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1046548, &type metadata for OnTapModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1038);
  }
  return result;
}

unint64_t sub_1B1004D28()
{
  unint64_t result;

  result = qword_1EEEE1040;
  if (!qword_1EEEE1040)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1046430, &type metadata for OnDisappearModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1040);
  }
  return result;
}

unint64_t sub_1B1004D70()
{
  unint64_t result;

  result = qword_1EEEE1048;
  if (!qword_1EEEE1048)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1046458, &type metadata for OnDisappearModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1048);
  }
  return result;
}

unint64_t sub_1B1004DB8()
{
  unint64_t result;

  result = qword_1EEEE1050;
  if (!qword_1EEEE1050)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1046340, &type metadata for OnChangeModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1050);
  }
  return result;
}

unint64_t sub_1B1004E00()
{
  unint64_t result;

  result = qword_1EEEE1058[0];
  if (!qword_1EEEE1058[0])
  {
    result = MEMORY[0x1B5E15188](&unk_1B1046368, &type metadata for OnChangeModifier.CodingKeys);
    atomic_store(result, qword_1EEEE1058);
  }
  return result;
}

uint64_t sub_1B1004E44()
{
  return 0x736E6F69746361;
}

uint64_t sub_1B1004E5C()
{
  unint64_t v0;

  v0 = sub_1B103605C();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

_QWORD *sub_1B1004EA8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = *a1;
  v7 = *v3;
  if (*v3 < 0)
  {
    v16 = *(_QWORD *)(v7 + 16);
    v17 = *(_QWORD *)(v7 + 24);
    v18 = *(_QWORD *)(v7 + 32);
    v19 = *(_BYTE *)(v7 + 40);
    v20 = *(_QWORD *)(v7 + 48);
    v21 = swift_allocObject();
    v22 = v21;
    *(_QWORD *)(v21 + 16) = v16;
    *(_QWORD *)(v21 + 24) = v17;
    *(_QWORD *)(v21 + 32) = v18;
    *(_BYTE *)(v21 + 40) = v19;
    if ((~v20 & 0xF000000000000007) != 0)
    {
      v23 = v6;
      v24 = v20;
      sub_1B0F6C708(v16, v17, v18, v19);
      result = sub_1B1004EA8(&v25, &v23, a2);
      *(_QWORD *)(v22 + 48) = v25;
      *a3 = v22 | 0x8000000000000000;
    }
    else
    {
      *(_QWORD *)(v21 + 48) = v6;
      *a3 = v21 | 0x8000000000000000;
      sub_1B0F5A880(v6);
      return (_QWORD *)sub_1B0F6C708(v16, v17, v18, v19);
    }
  }
  else
  {
    v8 = *(_QWORD *)(v7 + 16);
    v9 = *(_QWORD *)(v7 + 24);
    v10 = *(_QWORD *)(v7 + 32);
    v11 = *(_BYTE *)(v7 + 40);
    v12 = *(_QWORD *)(v7 + 48);
    v13 = swift_allocObject();
    v14 = v13;
    *(_QWORD *)(v13 + 16) = v8;
    *(_QWORD *)(v13 + 24) = v9;
    *(_QWORD *)(v13 + 32) = v10;
    *(_BYTE *)(v13 + 40) = v11;
    if ((~v12 & 0xF000000000000007) != 0)
    {
      v23 = v6;
      v24 = v12;
      sub_1B0F56B9C(v8, v9, v10, v11);
      result = sub_1B1004EA8(&v25, &v23, a2);
      *(_QWORD *)(v14 + 48) = v25;
      *a3 = v14;
    }
    else
    {
      *(_QWORD *)(v13 + 48) = v6;
      *a3 = v13;
      sub_1B0F56B9C(v8, v9, v10, v11);
      return (_QWORD *)sub_1B0F5A880(v6);
    }
  }
  return result;
}

uint64_t sub_1B1005078(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  char v40;
  uint8_t *v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned __int8 v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;

  v8 = *a1;
  v9 = a1[1];
  v10 = a1[2];
  v11 = *v4;
  v71 = a3;
  if (v11 < 0)
  {
    v20 = *(_QWORD *)(v11 + 24);
    v21 = *(_QWORD *)(v11 + 32);
    v22 = *(_BYTE *)(v11 + 40);
    v23 = *(_QWORD *)(v11 + 48);
    v67 = *(_QWORD *)(v11 + 16);
    v68 = v20;
    v69 = v21;
    v70 = v22;
    v62 = v67;
    v66 = v20;
    sub_1B0F6C708(v67, v20, v21, v22);
    sub_1B0F5A880(v23);
    sub_1B0FA7470(a2);
    if ((v25 & 1) != 0)
    {
      if (qword_1EEEDE0B0 != -1)
        swift_once();
      v37 = sub_1B103467C();
      __swift_project_value_buffer(v37, (uint64_t)qword_1EEF0BA00);
      v38 = sub_1B1034664();
      v39 = sub_1B1035E1C();
      if (os_log_type_enabled(v38, v39))
      {
        v40 = v22;
        v41 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v41 = 0;
        _os_log_impl(&dword_1B0F50000, v38, v39, "SubReference to find binding, unable to resolve index", v41, 2u);
        v42 = v41;
        v22 = v40;
        MEMORY[0x1B5E15248](v42, -1, -1);
      }

      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v43 = 2;
      *(_QWORD *)(v43 + 8) = 0;
      *(_QWORD *)(v43 + 16) = 0;
      *(_QWORD *)(v43 + 24) = 0;
      *(_BYTE *)(v43 + 32) = 5;
      swift_willThrow();
      sub_1B0F571D8(v23);
      v44 = v62;
      v45 = v66;
      v46 = v21;
      v47 = v22;
    }
    else
    {
      v26 = v24;
      v60 = v22;
      if ((~v23 & 0xF000000000000007) == 0)
      {
        v27 = (_QWORD *)swift_allocObject();
        v27[2] = 0;
        v27[3] = 0;
        v29 = *(_QWORD *)(v71 + 16);
        v28 = *(_QWORD *)(v71 + 24);
        v71 = v21;
        v27[4] = v29;
        v27[5] = a4;
        v27[6] = v28;
        v27[7] = v8;
        v27[8] = v9;
        v27[9] = v10;
        v27[10] = v26;
        v30 = (_QWORD *)swift_allocObject();
        v30[2] = 0;
        v30[3] = 0;
        v30[4] = v29;
        v30[5] = a4;
        v30[6] = v28;
        v30[7] = v8;
        v30[8] = v9;
        v30[9] = v10;
        v30[10] = v26;
        sub_1B1035E64();
        swift_retain_n();
        swift_retain_n();
        swift_retain_n();
        sub_1B1035864();
        return sub_1B0F6C7D4(v62, v66, v71, v60);
      }
      v52 = (_QWORD *)swift_allocObject();
      v52[2] = 0;
      v52[3] = 0;
      v52[4] = v8;
      v52[5] = v9;
      v52[6] = v10;
      v52[7] = v26;
      v53 = (_QWORD *)swift_allocObject();
      v53[2] = 0;
      v53[3] = 0;
      v53[4] = v8;
      v53[5] = v9;
      v53[6] = v10;
      v53[7] = v26;
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      sub_1B0F5A880(v23);
      __swift_instantiateConcreteTypeFromMangledName(qword_1EEEE0288);
      sub_1B1035864();
      sub_1B1035888();
      v54 = v68;
      if (v68)
      {
        v55 = v67;
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1B1005078(&v67, a2, v71, a4);
        sub_1B0F571D8(v23);
        sub_1B0FCB67C(v55, v54);
        sub_1B0F6C7D4(v62, v66, v21, v60);
        sub_1B0FCB67C(v55, v54);
        return sub_1B0F571D8(v23);
      }
      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v57 = 1;
      *(_QWORD *)(v57 + 8) = 0;
      *(_QWORD *)(v57 + 16) = 0;
      *(_QWORD *)(v57 + 24) = 0;
      *(_BYTE *)(v57 + 32) = 5;
      swift_willThrow();
      sub_1B0F571D8(v23);
      sub_1B0F571D8(v23);
      v44 = v62;
      v45 = v66;
      v46 = v21;
      v47 = v60;
    }
    return sub_1B0F6C7D4(v44, v45, v46, v47);
  }
  v59 = v10;
  v61 = v8;
  v65 = v9;
  v12 = *(_QWORD *)(v11 + 16);
  v13 = *(_QWORD *)(v11 + 24);
  v14 = *(_QWORD *)(v11 + 32);
  v15 = *(_BYTE *)(v11 + 40);
  v16 = *(_QWORD *)(v11 + 48);
  v67 = v12;
  v68 = v13;
  v69 = v14;
  v70 = v15;
  sub_1B0F56B9C(v12, v13, v14, v15);
  sub_1B0F5A880(v16);
  v17 = StringResolvable.resolved(with:)(a2);
  if (v5)
  {
    sub_1B0F571D8(v16);
    return sub_1B0F56ADC(v12, v13, v14, v15);
  }
  else
  {
    v31 = v17;
    v32 = v18;
    v58 = v15;
    v64 = a4;
    if ((~v16 & 0xF000000000000007) != 0)
    {
      v48 = (_QWORD *)swift_allocObject();
      v48[2] = 0;
      v48[3] = 0;
      v48[4] = v61;
      v48[5] = v65;
      v48[6] = v59;
      v48[7] = v31;
      v48[8] = v32;
      v49 = (_QWORD *)swift_allocObject();
      v49[2] = 0;
      v49[3] = 0;
      v49[4] = v61;
      v49[5] = v65;
      v49[6] = v59;
      v49[7] = v31;
      v49[8] = v32;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1B0F5A880(v16);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(qword_1EEEE0288);
      sub_1B1035864();
      sub_1B1035888();
      v50 = v68;
      if (v68)
      {
        v51 = v67;
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1B1005078(&v67, a2, v71, v64);
        sub_1B0F571D8(v16);
        sub_1B0FCB67C(v51, v50);
        sub_1B0F56ADC(v12, v13, v14, v15);
        sub_1B0FCB67C(v51, v50);
        return sub_1B0F571D8(v16);
      }
      else
      {
        sub_1B0FA58DC();
        swift_allocError();
        *(_QWORD *)v56 = 1;
        *(_QWORD *)(v56 + 8) = 0;
        *(_QWORD *)(v56 + 16) = 0;
        *(_QWORD *)(v56 + 24) = 0;
        *(_BYTE *)(v56 + 32) = 5;
        swift_willThrow();
        sub_1B0F571D8(v16);
        sub_1B0F571D8(v16);
        return sub_1B0F56ADC(v12, v13, v14, v15);
      }
    }
    else
    {
      v33 = (_QWORD *)swift_allocObject();
      v33[2] = 0;
      v33[3] = 0;
      v34 = *(_QWORD *)(v71 + 16);
      v35 = *(_QWORD *)(v71 + 24);
      v33[4] = v34;
      v33[5] = v64;
      v33[6] = v35;
      v33[7] = v61;
      v33[8] = v65;
      v33[9] = v59;
      v33[10] = v31;
      v33[11] = v32;
      v36 = (_QWORD *)swift_allocObject();
      v36[2] = 0;
      v36[3] = 0;
      v36[4] = v34;
      v36[5] = v64;
      v36[6] = v35;
      v36[7] = v61;
      v36[8] = v65;
      v36[9] = v59;
      v36[10] = v31;
      v36[11] = v32;
      sub_1B1035E64();
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1B1035864();
      return sub_1B0F56ADC(v12, v13, v14, v58);
    }
  }
}

uint64_t sub_1B100588C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v46;

  v7 = *a1;
  v8 = *v4;
  if ((*v4 & 0x8000000000000000) == 0)
  {
    v10 = *(_QWORD *)(v8 + 16);
    v9 = *(_QWORD *)(v8 + 24);
    v11 = *(_QWORD *)(v8 + 32);
    v12 = *(_BYTE *)(v8 + 40);
    v13 = *(_QWORD *)(v8 + 48);
    sub_1B0F56B9C(v10, v9, v11, v12);
    sub_1B0F5A880(v13);
    v14 = StringResolvable.resolved(with:)(a2);
    if (v5)
    {
LABEL_3:
      sub_1B0F571D8(v13);
      return sub_1B0F56ADC(v10, v9, v11, v12);
    }
    v43 = v15;
    if (v7 >> 61 == 5)
    {
      v27 = v14;
      v28 = sub_1B0FCB3E0(*(_QWORD *)(v7 + 16));
      if (!*(_QWORD *)(v28 + 16) || (v41 = v28, v29 = sub_1B0F56A3C(v27, v43), (v30 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        swift_release();
        sub_1B0FA58DC();
        swift_allocError();
        *(_QWORD *)v40 = v7;
        *(_BYTE *)(v40 + 32) = 1;
        swift_retain();
        swift_willThrow();
        goto LABEL_3;
      }
      v31 = *(_QWORD *)(*(_QWORD *)(v41 + 56) + 8 * v29);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_release();
      if ((~v13 & 0xF000000000000007) == 0)
      {
        sub_1B0F99570(*(_QWORD *)(a3 + 16), a4);
        sub_1B0F56ADC(v10, v9, v11, v12);
        return swift_release();
      }
      v46 = v31;
      swift_retain();
      sub_1B100588C(&v46, a2, a3, a4);
      sub_1B0F571D8(v13);
      sub_1B0F56ADC(v10, v9, v11, v12);
      swift_release();
      return sub_1B0F571D8(v13);
    }
    else
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF5E0);
      sub_1B0F970C4();
      swift_allocError();
      *v38 = v7;
      v38[1] = v37;
      swift_retain();
      swift_willThrow();
      sub_1B0F571D8(v13);
      sub_1B0F56ADC(v10, v9, v11, v12);
      return swift_bridgeObjectRelease();
    }
  }
  v18 = *(_QWORD *)(v8 + 16);
  v17 = *(_QWORD *)(v8 + 24);
  v19 = *(_QWORD *)(v8 + 32);
  v20 = *(_BYTE *)(v8 + 40);
  v21 = *(_QWORD *)(v8 + 48);
  sub_1B0F6C708(v18, v17, v19, v20);
  v42 = v21;
  sub_1B0F5A880(v21);
  sub_1B0FA7470(a2);
  if ((v23 & 1) != 0)
  {
    if (qword_1EEEDE0B0 != -1)
      swift_once();
    v32 = sub_1B103467C();
    __swift_project_value_buffer(v32, (uint64_t)qword_1EEF0BA00);
    v33 = sub_1B1034664();
    v34 = sub_1B1035E1C();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v35 = 0;
      _os_log_impl(&dword_1B0F50000, v33, v34, "SubReference to find value, unable to resolve index", v35, 2u);
      MEMORY[0x1B5E15248](v35, -1, -1);
    }

    sub_1B0FA58DC();
    swift_allocError();
    *(_QWORD *)v36 = 2;
    *(_QWORD *)(v36 + 8) = 0;
    *(_QWORD *)(v36 + 16) = 0;
    *(_QWORD *)(v36 + 24) = 0;
    *(_BYTE *)(v36 + 32) = 5;
    goto LABEL_23;
  }
  v24 = v22;
  v25 = sub_1B0FD7DB0(v7);
  if (v5)
  {
LABEL_24:
    sub_1B0F571D8(v42);
    return sub_1B0F6C7D4(v18, v17, v19, v20);
  }
  if (v24 < 0 || v24 >= *(_QWORD *)(v25 + 16))
  {
    swift_bridgeObjectRelease();
    sub_1B0FA58DC();
    swift_allocError();
    *(_QWORD *)v39 = v7;
    *(_BYTE *)(v39 + 32) = 1;
    swift_retain();
LABEL_23:
    swift_willThrow();
    goto LABEL_24;
  }
  v26 = *(_QWORD *)(v25 + 8 * v24 + 32);
  swift_retain();
  swift_bridgeObjectRelease();
  if ((~v21 & 0xF000000000000007) == 0)
  {
    sub_1B0F99570(*(_QWORD *)(a3 + 16), a4);
    sub_1B0F6C7D4(v18, v17, v19, v20);
    return swift_release();
  }
  v46 = v26;
  swift_retain();
  sub_1B100588C(&v46, a2, a3, a4);
  sub_1B0F571D8(v21);
  sub_1B0F6C7D4(v18, v17, v19, v20);
  swift_release();
  return sub_1B0F571D8(v21);
}

_QWORD *sub_1B1005DD4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;

  v4 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v22 = *(_BYTE *)(a1 + 24);
  v6 = *v2;
  if (*v2 < 0)
  {
    v15 = *(_QWORD *)(v6 + 16);
    v16 = *(_QWORD *)(v6 + 24);
    v17 = *(_QWORD *)(v6 + 32);
    v18 = *(_BYTE *)(v6 + 40);
    v19 = *(_QWORD *)(v6 + 48);
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = v15;
    *(_QWORD *)(v20 + 24) = v16;
    *(_QWORD *)(v20 + 32) = v17;
    *(_BYTE *)(v20 + 40) = v18;
    if ((~v19 & 0xF000000000000007) != 0)
    {
      v28 = v19;
      v24 = v4;
      v25 = v3;
      v26 = v5;
      v27 = v22;
      sub_1B0F6C708(v15, v16, v17, v18);
      result = sub_1B1005DD4(&v29, &v24);
      *(_QWORD *)(v20 + 48) = v29;
      *a2 = v20 | 0x8000000000000000;
    }
    else
    {
      v21 = swift_allocObject();
      *(_QWORD *)(v21 + 16) = v4;
      *(_QWORD *)(v21 + 24) = v3;
      *(_QWORD *)(v21 + 32) = v5;
      *(_BYTE *)(v21 + 40) = v22;
      *(_QWORD *)(v21 + 48) = 0xF000000000000007;
      *(_QWORD *)(v20 + 48) = v21 | 0x8000000000000000;
      *a2 = v20 | 0x8000000000000000;
      sub_1B0F6C708(v4, v3, v5, v22);
      return (_QWORD *)sub_1B0F6C708(v15, v16, v17, v18);
    }
  }
  else
  {
    v7 = *(_QWORD *)(v6 + 16);
    v8 = *(_QWORD *)(v6 + 24);
    v9 = *(_QWORD *)(v6 + 32);
    v10 = *(_BYTE *)(v6 + 40);
    v11 = *(_QWORD *)(v6 + 48);
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = v7;
    *(_QWORD *)(v12 + 24) = v8;
    *(_QWORD *)(v12 + 32) = v9;
    *(_BYTE *)(v12 + 40) = v10;
    if ((~v11 & 0xF000000000000007) != 0)
    {
      v28 = v11;
      v24 = v4;
      v25 = v3;
      v26 = v5;
      v27 = v22;
      sub_1B0F56B9C(v7, v8, v9, v10);
      result = sub_1B1005DD4(&v29, &v24);
      *(_QWORD *)(v12 + 48) = v29;
      *a2 = v12;
    }
    else
    {
      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = v4;
      *(_QWORD *)(v13 + 24) = v3;
      *(_QWORD *)(v13 + 32) = v5;
      *(_BYTE *)(v13 + 40) = v22;
      *(_QWORD *)(v13 + 48) = 0xF000000000000007;
      *(_QWORD *)(v12 + 48) = v13 | 0x8000000000000000;
      *a2 = v12;
      sub_1B0F56B9C(v7, v8, v9, v10);
      return (_QWORD *)sub_1B0F6C708(v4, v3, v5, v22);
    }
  }
  return result;
}

BOOL sub_1B100602C(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_1B100603C()
{
  return sub_1B1036218();
}

uint64_t sub_1B1006060(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 7955819 && a2 == 0xE300000000000000;
  if (v3 || (sub_1B1036128() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7865646E69 && a2 == 0xE500000000000000 || (sub_1B1036128() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1954047342 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1B1036128();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1B100617C()
{
  sub_1B103620C();
  sub_1B1036218();
  return sub_1B103623C();
}

uint64_t sub_1B10061C0(char a1)
{
  return qword_1B1046A20[a1];
}

BOOL sub_1B10061E0(char *a1, char *a2)
{
  return sub_1B100602C(*a1, *a2);
}

uint64_t sub_1B10061F4()
{
  return sub_1B100617C();
}

uint64_t sub_1B1006200()
{
  return sub_1B100603C();
}

uint64_t sub_1B100620C()
{
  sub_1B103620C();
  sub_1B100603C();
  return sub_1B103623C();
}

uint64_t sub_1B1006250()
{
  char *v0;

  return sub_1B10061C0(*v0);
}

uint64_t sub_1B100625C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B1006060(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B1006288@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1007350();
  *a1 = result;
  return result;
}

uint64_t sub_1B10062B0(uint64_t a1)
{
  MEMORY[0x1B5E15188](&unk_1B10469D0, a1);
  return sub_1B10362B4();
}

uint64_t sub_1B10062E4(uint64_t a1)
{
  MEMORY[0x1B5E15188](&unk_1B10469D0, a1);
  return sub_1B10362C0();
}

uint64_t SubReference.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  unsigned __int8 v30;
  char v31;

  v25 = a5;
  v26 = a2;
  *(_QWORD *)&v27 = a3;
  v7 = type metadata accessor for SubReference.CodingKeys(255, a2, a3, a4);
  MEMORY[0x1B5E15188](&unk_1B10469D0, v7);
  v8 = sub_1B10360E0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v25 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B1036278();
  if (!v5)
  {
    v13 = v9;
    v14 = v25;
    v15 = type metadata accessor for SubReference(0, v26, v27, v12);
    v31 = 2;
    MEMORY[0x1B5E15188](&protocol conformance descriptor for SubReference<A>, v15);
    sub_1B10360A4();
    v16 = v28;
    v31 = 0;
    sub_1B0F56A98();
    sub_1B10360A4();
    v17 = v30;
    if (v30 < 0xFEu)
    {
      v20 = v29;
      v27 = v28;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v8);
      v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = v27;
      *(_QWORD *)(v21 + 32) = v20;
      *(_BYTE *)(v21 + 40) = v17;
      *(_QWORD *)(v21 + 48) = v16;
    }
    else
    {
      v31 = 1;
      sub_1B0FA26C0();
      sub_1B10360A4();
      v18 = v30;
      if (v30 >= 0xFEu)
      {
        sub_1B0FA58DC();
        swift_allocError();
        *(_QWORD *)v19 = 2;
        *(_QWORD *)(v19 + 8) = 0;
        *(_QWORD *)(v19 + 16) = 0;
        *(_QWORD *)(v19 + 24) = 0;
        *(_BYTE *)(v19 + 32) = 5;
        swift_willThrow();
        sub_1B0F571D8(v16);
        (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v8);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      }
      v23 = v29;
      v27 = v28;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v8);
      v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = v27;
      *(_QWORD *)(v24 + 32) = v23;
      *(_BYTE *)(v24 + 40) = v18;
      *(_QWORD *)(v24 + 48) = v16;
      v21 = v24 | 0x8000000000000000;
    }
    *v14 = v21;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t type metadata accessor for SubReference.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SubReference.CodingKeys);
}

uint64_t type metadata accessor for SubReference(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SubReference);
}

uint64_t sub_1B1006620()
{
  return objectdestroyTm_3((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1B0F6C7D4);
}

uint64_t sub_1B100662C()
{
  return objectdestroyTm_3((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1B0F56ADC);
}

uint64_t sub_1B1006638@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, unint64_t *a4@<X8>)
{
  return SubReference.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3, a4);
}

uint64_t sub_1B1006654()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1B100665C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B10066A8 + 4 * byte_1B104689D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B10066DC + 4 * byte_1B1046898[v4]))();
}

uint64_t sub_1B10066DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B10066E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B10066ECLL);
  return result;
}

uint64_t sub_1B10066F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1006700);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B1006704(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B100670C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1B1006718()
{
  JUMPOUT(0x1B5E15188);
}

void sub_1B1006728()
{
  JUMPOUT(0x1B5E15188);
}

void sub_1B1006738()
{
  JUMPOUT(0x1B5E15188);
}

uint64_t sub_1B1006748@<X0>(uint64_t a1@<X5>, uint64_t a2@<X6>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1160);
  MEMORY[0x1B5E142AC](&v9, v6);
  if (v9 >> 61 == 5)
  {
    v7 = *(_QWORD *)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
    swift_bridgeObjectRetain();
    swift_release();
    swift_bridgeObjectRetain();
    sub_1B0FD6328(a1, a2, v7, a3);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_release();
    *a3 = 0xF000000000000007;
  }
  return result;
}

uint64_t sub_1B100680C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v13 = *a1;
  v18 = a4;
  v19 = a5;
  v20 = a6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1160);
  MEMORY[0x1B5E142AC](&v21);
  if (v21 >> 61 == 5)
  {
    v14 = *(_QWORD *)((v21 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
    swift_bridgeObjectRetain();
    swift_release();
    v21 = v14;
    swift_bridgeObjectRetain();
    if ((~v13 & 0xF000000000000007) != 0)
    {
      sub_1B0FCC934(v13);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v18 = v14;
      sub_1B0F9D4A8(v13, a7, a8, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B0F9BCB4(a7, a8, &v18);
      swift_bridgeObjectRelease();
      sub_1B0FC9D10(v18);
      v14 = v21;
    }
    v18 = a4;
    v19 = a5;
    v20 = a6;
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = sub_1B0FCB3E0(v14);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1B1035858();
    swift_release();
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1B10069C8@<X0>(uint64_t a1@<X5>, uint64_t a2@<X6>, uint64_t a3@<X7>, uint64_t a4@<X8>, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v13;
  unint64_t v14;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1160);
  MEMORY[0x1B5E142AC](&v14, v9);
  if (v14 >> 61 != 5)
  {
    swift_release();
LABEL_8:
    v13 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a4, v13, 1, a3);
  }
  v10 = *(_QWORD *)((v14 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  swift_bridgeObjectRetain();
  swift_release();
  if (!*(_QWORD *)(v10 + 16))
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  sub_1B0F56A3C(a1, a2);
  if ((v11 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1B0F99570(a3, a5);
  swift_release();
  v13 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(a4, v13, 1, a3);
}

uint64_t sub_1B1006B1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;

  v34 = a1;
  v35 = a8;
  v14 = sub_1B1035E64();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v31 - v16;
  v37 = a4;
  v38 = a5;
  v39 = a6;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1160);
  MEMORY[0x1B5E142AC](&v40);
  if (v40 >> 61 == 5)
  {
    v32 = a6;
    v33 = a7;
    v31[1] = v18;
    v19 = *(_QWORD *)((v40 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
    swift_bridgeObjectRetain();
    swift_release();
    v40 = v19;
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v34, v14);
    v20 = *(_QWORD *)(a9 - 8);
    v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, a9);
    v22 = a4;
    v23 = a5;
    v24 = v35;
    if (v21 == 1)
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      swift_bridgeObjectRetain();
      sub_1B0F9BCB4(v33, v24, &v37);
      swift_bridgeObjectRelease();
      sub_1B0FC9D10(v37);
      v25 = v40;
    }
    else
    {
      (*(void (**)(uint64_t *__return_ptr, uint64_t))(a10 + 8))(&v37, a9);
      v26 = v37;
      (*(void (**)(char *, uint64_t))(v20 + 8))(v17, a9);
      swift_bridgeObjectRetain();
      v27 = v40;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v37 = v27;
      sub_1B0F9D4A8(v26, v33, v24, isUniquelyReferenced_nonNull_native);
      v25 = v37;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v37 = v22;
    v38 = v23;
    v39 = v32;
    v29 = swift_allocObject();
    *(_QWORD *)(v29 + 16) = sub_1B0FCB3E0(v25);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    v36 = v29 | 0xA000000000000000;
    sub_1B1035858();
    swift_release();
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1B1006D8C@<X0>(unint64_t a1@<X5>, unint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v7;
  unint64_t v8;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1160);
  MEMORY[0x1B5E142AC](&v8, v4);
  if (v8 >> 61 != 4)
  {
    result = swift_release();
    v7 = 0xF000000000000007;
    goto LABEL_6;
  }
  v5 = *(_QWORD *)((v8 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  swift_bridgeObjectRetain();
  result = swift_release();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(v5 + 16) > a1)
  {
    v7 = *(_QWORD *)(v5 + 8 * a1 + 32);
    swift_retain();
    result = swift_bridgeObjectRelease();
LABEL_6:
    *a2 = v7;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1B1006E48(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t result;
  unint64_t v11;

  v8 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1160);
  MEMORY[0x1B5E142AC](&v11);
  if (v11 >> 61 != 4)
    return swift_release();
  v9 = *(_QWORD **)((v11 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  swift_bridgeObjectRetain();
  swift_release();
  if ((~v8 & 0xF000000000000007) == 0)
    return swift_bridgeObjectRelease();
  swift_retain_n();
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) != 0)
  {
    if ((a7 & 0x8000000000000000) == 0)
      goto LABEL_7;
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  result = (uint64_t)sub_1B0FEEA88(v9);
  v9 = (_QWORD *)result;
  if ((a7 & 0x8000000000000000) != 0)
    goto LABEL_12;
LABEL_7:
  if (v9[2] <= a7)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  v9[a7 + 4] = v8;
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1B0FC97BC((uint64_t)v9, &v11);
  swift_bridgeObjectRelease();
  sub_1B1035858();
  sub_1B0FC9D10(v8);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1B1006FC4@<X0>(uint64_t a1@<X5>, uint64_t a2@<X6>, uint64_t a3@<X7>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  unint64_t v12;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1160);
  MEMORY[0x1B5E142AC](&v12, v8);
  if (v12 >> 61 != 4)
  {
    swift_release();
LABEL_7:
    v11 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(a4, v11, 1, a2);
  }
  v9 = *(_QWORD *)((v12 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  swift_bridgeObjectRetain();
  swift_release();
  if (a1 < 0 || *(_QWORD *)(v9 + 16) <= a1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  swift_retain();
  swift_bridgeObjectRelease();
  sub_1B0F99570(a2, a3);
  swift_release();
  v11 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(a4, v11, 1, a2);
}

uint64_t sub_1B10070E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  uint64_t result;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;

  v30 = a7;
  v14 = sub_1B1035E64();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v26 - v17;
  v19 = *(_QWORD *)(a8 - 8);
  MEMORY[0x1E0C80A78](v16);
  v21 = (char *)&v26 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = a4;
  v33 = a5;
  v29 = a5;
  v34 = a6;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1160);
  MEMORY[0x1B5E142AC](&v35);
  if (v35 >> 61 != 4)
    return swift_release();
  v27 = a4;
  v22 = *(_QWORD **)((v35 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  swift_bridgeObjectRetain();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, a1, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, a8) == 1)
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v18, a8);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a9 + 8))(&v32, a8, a9);
  v24 = v32;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) != 0)
  {
    v25 = v30;
    if ((v30 & 0x8000000000000000) == 0)
      goto LABEL_7;
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  result = (uint64_t)sub_1B0FEEA88(v22);
  v22 = (_QWORD *)result;
  v25 = v30;
  if ((v30 & 0x8000000000000000) != 0)
    goto LABEL_11;
LABEL_7:
  if (v22[2] <= v25)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  v22[v25 + 4] = v24;
  swift_release();
  v32 = v27;
  v33 = v29;
  v34 = a6;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1B0FC97BC((uint64_t)v22, &v35);
  swift_bridgeObjectRelease();
  v31 = v35;
  sub_1B1035858();
  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, a8);
}

uint64_t sub_1B1007350()
{
  return 3;
}

uint64_t sub_1B100735C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1B1006FC4(v1[10], v1[4], v1[5], a1);
}

uint64_t objectdestroy_10Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B10073D4(uint64_t a1)
{
  uint64_t v1;

  return sub_1B10070E8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1B100740C@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1B1006D8C(*(_QWORD *)(v1 + 56), a1);
}

uint64_t objectdestroy_16Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B1007460(uint64_t *a1)
{
  uint64_t v1;

  return sub_1B1006E48(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_1B1007474@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1B10069C8(v1[10], v1[11], v1[4], a1, v1[5]);
}

uint64_t objectdestroy_22Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B10074F4(uint64_t a1)
{
  uint64_t *v1;

  return sub_1B1006B1C(a1, v1[2], v1[3], v1[7], v1[8], v1[9], v1[10], v1[11], v1[4], v1[5]);
}

uint64_t sub_1B1007530@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1B1006748(*(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), a1);
}

uint64_t objectdestroy_28Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B1007590(uint64_t *a1)
{
  uint64_t *v1;

  return sub_1B100680C(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8]);
}

uint64_t sub_1B10075A4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B10075C8()
{
  return objectdestroyTm_3((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1B0F6C7D4);
}

uint64_t sub_1B10075D4()
{
  return objectdestroyTm_3((void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1B0F56ADC);
}

uint64_t destroy for SheetModifier(uint64_t a1)
{
  sub_1B0F5E6A0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 72);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SheetModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_1B0F5E604(*(_QWORD *)a2, v5, v6, v7);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v10 = *(_BYTE *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 96) = v11;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 72, a2 + 72);
  *(_BYTE *)(a1 + 112) = v10;
  v12 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v12;
  v13 = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = v13;
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SheetModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_1B0F5E604(*(_QWORD *)a2, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  sub_1B0F5E6A0(v8, v9, v10, v11);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    sub_1B0F62D10(a1 + 72);
    v12 = *(_BYTE *)(a2 + 112);
    v13 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 96) = v13;
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    (**(void (***)(uint64_t, uint64_t))(v13 - 8))(a1 + 72, a2 + 72);
    *(_BYTE *)(a1 + 112) = v12;
  }
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SheetModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  sub_1B0F5E6A0(v6, v7, v8, v9);
  v10 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v11;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    sub_1B0F62D10(a1 + 72);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 97) = *(_OWORD *)(a2 + 97);
  }
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_release();
  v12 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v12;
  swift_release();
  v13 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SheetModifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 160))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SheetModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 160) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 160) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SheetModifier()
{
  return &type metadata for SheetModifier;
}

uint64_t sub_1B1007A28(char a1)
{
  return *(_QWORD *)&aIspresenconten[8 * a1];
}

uint64_t sub_1B1007A48(char *a1, char *a2)
{
  return sub_1B100E710(*a1, *a2);
}

uint64_t sub_1B1007A54()
{
  return sub_1B10110FC();
}

uint64_t sub_1B1007A5C()
{
  return sub_1B1012F68();
}

uint64_t sub_1B1007A64()
{
  return sub_1B1013F54();
}

uint64_t sub_1B1007A6C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B100867C();
  *a1 = result;
  return result;
}

uint64_t sub_1B1007A98@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B1007A28(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B1007AC0()
{
  char *v0;

  return sub_1B1007A28(*v0);
}

uint64_t sub_1B1007AC8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B100867C();
  *a1 = result;
  return result;
}

uint64_t sub_1B1007AEC()
{
  sub_1B1008468();
  return sub_1B10362B4();
}

uint64_t sub_1B1007B14()
{
  sub_1B1008468();
  return sub_1B10362C0();
}

uint64_t sub_1B1007B3C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[40];
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  char v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1170);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v46 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1B1008468();
  sub_1B1036278();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
  v22 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE7E8);
  v23[0] = 0;
  sub_1B0F65238();
  sub_1B10360BC();
  v34 = v26;
  v35 = v27;
  v36 = BYTE8(v27);
  v23[0] = 1;
  sub_1B0F64238();
  sub_1B10360BC();
  v41 = v30;
  v42 = v31;
  v43 = v32;
  v44 = v33;
  v37 = v26;
  v38 = v27;
  v39 = v28;
  v40 = v29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF610);
  LOBYTE(v26) = 2;
  sub_1B0F972CC();
  sub_1B10360A4();
  v11 = v25;
  v12 = v22;
  if (v25)
  {
    v19 = v8;
    v20 = a2;
    v21 = v5;
    v13 = *(_QWORD *)(v25 + 16);
    if (v13)
    {
      v24 = MEMORY[0x1E0DEE9D8];
      sub_1B0FDD904(0, v13, 0);
      v14 = v11 + 32;
      v15 = v24;
      do
      {
        sub_1B0F97374(v14, (uint64_t)v23);
        sub_1B0F5FD84((uint64_t)v23, (uint64_t)&v26);
        sub_1B0F973B0((uint64_t)v23);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B0FDD904(0, *(_QWORD *)(v15 + 16) + 1, 1);
          v15 = v24;
        }
        v17 = *(_QWORD *)(v15 + 16);
        v16 = *(_QWORD *)(v15 + 24);
        if (v17 >= v16 >> 1)
        {
          sub_1B0FDD904(v16 > 1, v17 + 1, 1);
          v15 = v24;
        }
        *(_QWORD *)(v15 + 16) = v17 + 1;
        sub_1B0F5A0E4(&v26, v15 + 40 * v17 + 32);
        v14 += 40;
        --v13;
      }
      while (v13);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v15 = MEMORY[0x1E0DEE9D8];
    }
    a2 = v20;
    v5 = v21;
    v12 = v22;
    v8 = v19;
  }
  else
  {
    v15 = 0;
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v5);
  v45 = v15;
  sub_1B1008308((uint64_t)&v34, a2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
  return sub_1B10084AC((uint64_t)&v34);
}

uint64_t sub_1B1007EE4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _OWORD *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  unint64_t v26;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _OWORD v39[10];
  _QWORD *v40;

  v8 = a1[3];
  v28 = a1[4];
  v40 = __swift_project_boxed_opaque_existential_1(a1, v8);
  v9 = *(_QWORD *)v4;
  v10 = *(_QWORD *)(v4 + 8);
  v11 = *(_QWORD *)(v4 + 16);
  v12 = *(_BYTE *)(v4 + 24);
  sub_1B0F5E604(*(_QWORD *)v4, v10, v11, v12);
  sub_1B102A208(a2, v9, v10, v11, v12);
  if (v5)
    return sub_1B0F5E6A0(v9, v10, v11, v12);
  sub_1B0F5E6A0(v9, v10, v11, v12);
  sub_1B1008308(v4, (uint64_t)v39);
  v14 = swift_allocObject();
  v15 = v39[7];
  *(_OWORD *)(v14 + 112) = v39[6];
  *(_OWORD *)(v14 + 128) = v15;
  v16 = v39[9];
  *(_OWORD *)(v14 + 144) = v39[8];
  *(_OWORD *)(v14 + 160) = v16;
  v17 = v39[3];
  *(_OWORD *)(v14 + 48) = v39[2];
  *(_OWORD *)(v14 + 64) = v17;
  v18 = v39[5];
  *(_OWORD *)(v14 + 80) = v39[4];
  *(_OWORD *)(v14 + 96) = v18;
  v19 = v39[1];
  *(_OWORD *)(v14 + 16) = v39[0];
  *(_OWORD *)(v14 + 32) = v19;
  *(_QWORD *)(v14 + 176) = a2;
  *(_QWORD *)(v14 + 184) = a3;
  sub_1B1008308(v4, (uint64_t)&v29);
  v20 = (_OWORD *)swift_allocObject();
  v21 = v36;
  v20[7] = v35;
  v20[8] = v21;
  v22 = v38;
  v20[9] = v37;
  v20[10] = v22;
  v23 = v32;
  v20[3] = v31;
  v20[4] = v23;
  v24 = v34;
  v20[5] = v33;
  v20[6] = v24;
  v25 = v30;
  v20[1] = v29;
  v20[2] = v25;
  v26 = sub_1B0F64174();
  *(_QWORD *)&v29 = v8;
  *((_QWORD *)&v29 + 1) = &type metadata for ViewContent;
  *(_QWORD *)&v30 = v28;
  *((_QWORD *)&v30 + 1) = v26;
  a4[3] = MEMORY[0x1B5E15134](0, &v29, MEMORY[0x1E0CDEF60], 0);
  *(_QWORD *)&v29 = v8;
  *((_QWORD *)&v29 + 1) = &type metadata for ViewContent;
  *(_QWORD *)&v30 = v28;
  *((_QWORD *)&v30 + 1) = v26;
  a4[4] = swift_getOpaqueTypeConformance2();
  __swift_allocate_boxed_opaque_existential_1(a4);
  swift_retain();
  swift_retain();
  sub_1B1035594();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1B1008188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE910);
  result = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 152);
  if (v10)
  {
    v11 = sub_1B1035D80();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 1, 1, v11);
    v12 = (_QWORD *)swift_allocObject();
    v12[2] = 0;
    v12[3] = 0;
    v12[4] = v10;
    v12[5] = a2;
    v12[6] = a3;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_1B0F706F4((uint64_t)v9, (uint64_t)&unk_1EEEDE930, (uint64_t)v12);
    return swift_release();
  }
  return result;
}

uint64_t sub_1B1008278@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1B1007EE4(a1, a2, a3, a4);
}

uint64_t sub_1B100828C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B1007B3C(a1, a2);
}

unint64_t sub_1B10082A0(uint64_t a1)
{
  unint64_t result;

  result = sub_1B10082C4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B10082C4()
{
  unint64_t result;

  result = qword_1EEEE1168;
  if (!qword_1EEEE1168)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1046A70, &type metadata for SheetModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE1168);
  }
  return result;
}

uint64_t sub_1B1008308(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for SheetModifier(a2, a1);
  return a2;
}

uint64_t sub_1B100833C()
{
  uint64_t v0;

  sub_1B0F5E6A0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B10083B0()
{
  uint64_t v0;

  return sub_1B1008188(v0 + 16, *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184));
}

uint64_t sub_1B10083BC()
{
  uint64_t v0;

  sub_1B0F5E6A0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B1008420@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1B0F641B8(v1 + 48, a1);
}

uint64_t sub_1B100842C()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1B1008468()
{
  unint64_t result;

  result = qword_1EEEE1178;
  if (!qword_1EEEE1178)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1046BB0, &type metadata for SheetModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1178);
  }
  return result;
}

uint64_t sub_1B10084AC(uint64_t a1)
{
  destroy for SheetModifier(a1);
  return a1;
}

uint64_t storeEnumTagSinglePayload for SheetModifier.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B1008524 + 4 * byte_1B1046A55[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B1008558 + 4 * byte_1B1046A50[v4]))();
}

uint64_t sub_1B1008558(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1008560(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1008568);
  return result;
}

uint64_t sub_1B1008574(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B100857CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B1008580(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1008588(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SheetModifier.CodingKeys()
{
  return &type metadata for SheetModifier.CodingKeys;
}

unint64_t sub_1B10085A8()
{
  unint64_t result;

  result = qword_1EEEE1180;
  if (!qword_1EEEE1180)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1046B88, &type metadata for SheetModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1180);
  }
  return result;
}

unint64_t sub_1B10085F0()
{
  unint64_t result;

  result = qword_1EEEE1188;
  if (!qword_1EEEE1188)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1046AC0, &type metadata for SheetModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1188);
  }
  return result;
}

unint64_t sub_1B1008638()
{
  unint64_t result;

  result = qword_1EEEE1190;
  if (!qword_1EEEE1190)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1046AE8, &type metadata for SheetModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1190);
  }
  return result;
}

uint64_t sub_1B100867C()
{
  unint64_t v0;

  v0 = sub_1B103605C();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t destroy for AsyncImageView(uint64_t a1)
{
  unsigned int v2;

  swift_bridgeObjectRelease();
  v2 = *(unsigned __int8 *)(a1 + 40);
  if (v2 <= 0xFD)
    sub_1B0F56ADC(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), v2);
  sub_1B0F6C7D4(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_BYTE *)(a1 + 72));
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 96))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(a1 + 128);
    swift_release();
    swift_release();
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for AsyncImageView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(unsigned __int8 *)(a2 + 40);
  swift_bridgeObjectRetain();
  if (v5 <= 0xFD)
  {
    v6 = *(_QWORD *)(a2 + 16);
    v7 = *(_QWORD *)(a2 + 24);
    v8 = *(_QWORD *)(a2 + 32);
    sub_1B0F56B9C(v6, v7, v8, v5);
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = v7;
    *(_QWORD *)(a1 + 32) = v8;
    *(_BYTE *)(a1 + 40) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v12 = *(_BYTE *)(a2 + 72);
  sub_1B0F6C708(v9, v10, v11, v12);
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_BYTE *)(a1 + 72) = v12;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v13 = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  if (v13)
  {
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = v13;
    v14 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = v14;
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    v15 = *(_BYTE *)(a2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 152) = v16;
    (**(void (***)(uint64_t, uint64_t))(v16 - 8))(a1 + 128, a2 + 128);
    *(_BYTE *)(a1 + 168) = v15;
    v17 = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = v17;
    v18 = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 200) = v18;
    swift_retain();
    swift_retain();
  }
  else
  {
    v19 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = v19;
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    v20 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v20;
    v21 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v21;
  }
  v22 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v22;
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AsyncImageView(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  unsigned int v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _OWORD *v27;
  __int128 *v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 16);
  v5 = (_OWORD *)(a2 + 16);
  v6 = *(unsigned __int8 *)(a2 + 40);
  if (*(unsigned __int8 *)(a1 + 40) <= 0xFDu)
  {
    if (v6 <= 0xFD)
    {
      v12 = *(_QWORD *)(a2 + 16);
      v13 = *(_QWORD *)(a2 + 24);
      v14 = *(_QWORD *)(a2 + 32);
      sub_1B0F56B9C(v12, v13, v14, *(_BYTE *)(a2 + 40));
      v15 = *(_QWORD *)(a1 + 16);
      v16 = *(_QWORD *)(a1 + 24);
      v17 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(a1 + 16) = v12;
      *(_QWORD *)(a1 + 24) = v13;
      *(_QWORD *)(a1 + 32) = v14;
      v18 = *(_BYTE *)(a1 + 40);
      *(_BYTE *)(a1 + 40) = v6;
      sub_1B0F56ADC(v15, v16, v17, v18);
    }
    else
    {
      sub_1B0F5EA14(a1 + 16);
      v8 = *(_OWORD *)(a2 + 25);
      *v4 = *v5;
      *(_OWORD *)(a1 + 25) = v8;
    }
  }
  else if (v6 <= 0xFD)
  {
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_QWORD *)(a2 + 24);
    v11 = *(_QWORD *)(a2 + 32);
    sub_1B0F56B9C(v9, v10, v11, *(_BYTE *)(a2 + 40));
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = v10;
    *(_QWORD *)(a1 + 32) = v11;
    *(_BYTE *)(a1 + 40) = v6;
  }
  else
  {
    v7 = *v5;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
    *v4 = v7;
  }
  v19 = *(_QWORD *)(a2 + 48);
  v20 = *(_QWORD *)(a2 + 56);
  v21 = *(_QWORD *)(a2 + 64);
  v22 = *(_BYTE *)(a2 + 72);
  sub_1B0F6C708(v19, v20, v21, v22);
  v23 = *(_QWORD *)(a1 + 48);
  v24 = *(_QWORD *)(a1 + 56);
  v25 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 48) = v19;
  *(_QWORD *)(a1 + 56) = v20;
  *(_QWORD *)(a1 + 64) = v21;
  v26 = *(_BYTE *)(a1 + 72);
  *(_BYTE *)(a1 + 72) = v22;
  sub_1B0F6C7D4(v23, v24, v25, v26);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27 = (_OWORD *)(a1 + 88);
  v28 = (__int128 *)(a2 + 88);
  v29 = *(_QWORD *)(a2 + 96);
  if (*(_QWORD *)(a1 + 96))
  {
    if (v29)
    {
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (a1 != a2)
      {
        sub_1B0F62D10(a1 + 128);
        v30 = *(_BYTE *)(a2 + 168);
        v31 = *(_QWORD *)(a2 + 152);
        *(_QWORD *)(a1 + 152) = v31;
        *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
        (**(void (***)(uint64_t, uint64_t))(v31 - 8))(a1 + 128, a2 + 128);
        *(_BYTE *)(a1 + 168) = v30;
      }
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    }
    else
    {
      sub_1B0F6427C(a1 + 88);
      v34 = *(_OWORD *)(a2 + 136);
      v36 = *v28;
      v35 = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 136) = v34;
      *v27 = v36;
      *(_OWORD *)(a1 + 104) = v35;
      v38 = *(_OWORD *)(a2 + 168);
      v37 = *(_OWORD *)(a2 + 184);
      v39 = *(_OWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      *(_OWORD *)(a1 + 168) = v38;
      *(_OWORD *)(a1 + 184) = v37;
      *(_OWORD *)(a1 + 152) = v39;
    }
  }
  else if (v29)
  {
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    v32 = *(_BYTE *)(a2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v33 = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 152) = v33;
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    (**(void (***)(uint64_t, uint64_t))(v33 - 8))(a1 + 128, a2 + 128);
    *(_BYTE *)(a1 + 168) = v32;
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    swift_retain();
    swift_retain();
  }
  else
  {
    v40 = *v28;
    v41 = *(_OWORD *)(a2 + 104);
    v42 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v42;
    *v27 = v40;
    *(_OWORD *)(a1 + 104) = v41;
    v43 = *(_OWORD *)(a2 + 152);
    v44 = *(_OWORD *)(a2 + 168);
    v45 = *(_OWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 168) = v44;
    *(_OWORD *)(a1 + 184) = v45;
    *(_OWORD *)(a1 + 152) = v43;
  }
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  return a1;
}

uint64_t assignWithTake for AsyncImageView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(unsigned __int8 *)(a1 + 40);
  if (v5 > 0xFD)
    goto LABEL_4;
  v6 = *(unsigned __int8 *)(a2 + 40);
  if (v6 > 0xFD)
  {
    sub_1B0F5EA14(a1 + 16);
LABEL_4:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
    goto LABEL_6;
  }
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v6;
  sub_1B0F56ADC(v8, v9, v10, v5);
LABEL_6:
  v11 = *(_QWORD *)(a2 + 64);
  v12 = *(_BYTE *)(a2 + 72);
  v13 = *(_QWORD *)(a1 + 48);
  v14 = *(_QWORD *)(a1 + 56);
  v15 = *(_QWORD *)(a1 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = v11;
  v16 = *(_BYTE *)(a1 + 72);
  *(_BYTE *)(a1 + 72) = v12;
  sub_1B0F6C7D4(v13, v14, v15, v16);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 96))
  {
LABEL_12:
    v21 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = v21;
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    v22 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v22;
    v23 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v23;
    goto LABEL_13;
  }
  v17 = *(_QWORD *)(a2 + 96);
  if (!v17)
  {
    sub_1B0F6427C(a1 + 88);
    goto LABEL_12;
  }
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v17;
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v18;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    sub_1B0F62D10(a1 + 128);
    v19 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v19;
    *(_OWORD *)(a1 + 153) = *(_OWORD *)(a2 + 153);
  }
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_release();
  v20 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v20;
  swift_release();
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
LABEL_13:
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  swift_release();
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  return a1;
}

ValueMetadata *type metadata accessor for AsyncImageView()
{
  return &type metadata for AsyncImageView;
}

uint64_t destroy for SymbolView(uint64_t a1)
{
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;

  swift_bridgeObjectRelease();
  v2 = *(unsigned __int8 *)(a1 + 40);
  if (v2 <= 0xFD)
    sub_1B0F56ADC(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), v2);
  v3 = *(unsigned __int8 *)(a1 + 72);
  if (v3 <= 0xFD)
    sub_1B0F56ADC(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), v3);
  v4 = *(unsigned __int8 *)(a1 + 104);
  if (v4 <= 0xFD)
    sub_1B0F56ADC(*(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for SymbolView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(unsigned __int8 *)(a2 + 40);
  swift_bridgeObjectRetain();
  if (v5 <= 0xFD)
  {
    v6 = *(_QWORD *)(a2 + 16);
    v7 = *(_QWORD *)(a2 + 24);
    v8 = *(_QWORD *)(a2 + 32);
    sub_1B0F56B9C(v6, v7, v8, v5);
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = v7;
    *(_QWORD *)(a1 + 32) = v8;
    *(_BYTE *)(a1 + 40) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  v9 = *(unsigned __int8 *)(a2 + 72);
  if (v9 <= 0xFD)
  {
    v10 = *(_QWORD *)(a2 + 48);
    v11 = *(_QWORD *)(a2 + 56);
    v12 = *(_QWORD *)(a2 + 64);
    sub_1B0F56B9C(v10, v11, v12, *(_BYTE *)(a2 + 72));
    *(_QWORD *)(a1 + 48) = v10;
    *(_QWORD *)(a1 + 56) = v11;
    *(_QWORD *)(a1 + 64) = v12;
    *(_BYTE *)(a1 + 72) = v9;
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  }
  v13 = *(unsigned __int8 *)(a2 + 104);
  if (v13 <= 0xFD)
  {
    v14 = *(_QWORD *)(a2 + 80);
    v15 = *(_QWORD *)(a2 + 88);
    v16 = *(_QWORD *)(a2 + 96);
    sub_1B0F56B9C(v14, v15, v16, *(_BYTE *)(a2 + 104));
    *(_QWORD *)(a1 + 80) = v14;
    *(_QWORD *)(a1 + 88) = v15;
    *(_QWORD *)(a1 + 96) = v16;
    *(_BYTE *)(a1 + 104) = v13;
  }
  else
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 89) = *(_OWORD *)(a2 + 89);
  }
  v17 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v17;
  v18 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SymbolView(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  unsigned int v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  _OWORD *v19;
  _OWORD *v20;
  unsigned int v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 v33;
  _OWORD *v34;
  _OWORD *v35;
  unsigned int v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned __int8 v48;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 16);
  v5 = (_OWORD *)(a2 + 16);
  v6 = *(unsigned __int8 *)(a2 + 40);
  if (*(unsigned __int8 *)(a1 + 40) <= 0xFDu)
  {
    if (v6 <= 0xFD)
    {
      v12 = *(_QWORD *)(a2 + 16);
      v13 = *(_QWORD *)(a2 + 24);
      v14 = *(_QWORD *)(a2 + 32);
      sub_1B0F56B9C(v12, v13, v14, *(_BYTE *)(a2 + 40));
      v15 = *(_QWORD *)(a1 + 16);
      v16 = *(_QWORD *)(a1 + 24);
      v17 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(a1 + 16) = v12;
      *(_QWORD *)(a1 + 24) = v13;
      *(_QWORD *)(a1 + 32) = v14;
      v18 = *(_BYTE *)(a1 + 40);
      *(_BYTE *)(a1 + 40) = v6;
      sub_1B0F56ADC(v15, v16, v17, v18);
    }
    else
    {
      sub_1B0F5EA14(a1 + 16);
      v8 = *(_OWORD *)(a2 + 25);
      *v4 = *v5;
      *(_OWORD *)(a1 + 25) = v8;
    }
  }
  else if (v6 <= 0xFD)
  {
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_QWORD *)(a2 + 24);
    v11 = *(_QWORD *)(a2 + 32);
    sub_1B0F56B9C(v9, v10, v11, *(_BYTE *)(a2 + 40));
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = v10;
    *(_QWORD *)(a1 + 32) = v11;
    *(_BYTE *)(a1 + 40) = v6;
  }
  else
  {
    v7 = *v5;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
    *v4 = v7;
  }
  v19 = (_OWORD *)(a1 + 48);
  v20 = (_OWORD *)(a2 + 48);
  v21 = *(unsigned __int8 *)(a2 + 72);
  if (*(unsigned __int8 *)(a1 + 72) <= 0xFDu)
  {
    if (v21 <= 0xFD)
    {
      v27 = *(_QWORD *)(a2 + 48);
      v28 = *(_QWORD *)(a2 + 56);
      v29 = *(_QWORD *)(a2 + 64);
      sub_1B0F56B9C(v27, v28, v29, *(_BYTE *)(a2 + 72));
      v30 = *(_QWORD *)(a1 + 48);
      v31 = *(_QWORD *)(a1 + 56);
      v32 = *(_QWORD *)(a1 + 64);
      *(_QWORD *)(a1 + 48) = v27;
      *(_QWORD *)(a1 + 56) = v28;
      *(_QWORD *)(a1 + 64) = v29;
      v33 = *(_BYTE *)(a1 + 72);
      *(_BYTE *)(a1 + 72) = v21;
      sub_1B0F56ADC(v30, v31, v32, v33);
    }
    else
    {
      sub_1B0F5EA14(a1 + 48);
      v23 = *(_OWORD *)(a2 + 57);
      *v19 = *v20;
      *(_OWORD *)(a1 + 57) = v23;
    }
  }
  else if (v21 <= 0xFD)
  {
    v24 = *(_QWORD *)(a2 + 48);
    v25 = *(_QWORD *)(a2 + 56);
    v26 = *(_QWORD *)(a2 + 64);
    sub_1B0F56B9C(v24, v25, v26, *(_BYTE *)(a2 + 72));
    *(_QWORD *)(a1 + 48) = v24;
    *(_QWORD *)(a1 + 56) = v25;
    *(_QWORD *)(a1 + 64) = v26;
    *(_BYTE *)(a1 + 72) = v21;
  }
  else
  {
    v22 = *v20;
    *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
    *v19 = v22;
  }
  v34 = (_OWORD *)(a1 + 80);
  v35 = (_OWORD *)(a2 + 80);
  v36 = *(unsigned __int8 *)(a2 + 104);
  if (*(unsigned __int8 *)(a1 + 104) <= 0xFDu)
  {
    if (v36 <= 0xFD)
    {
      v42 = *(_QWORD *)(a2 + 80);
      v43 = *(_QWORD *)(a2 + 88);
      v44 = *(_QWORD *)(a2 + 96);
      sub_1B0F56B9C(v42, v43, v44, *(_BYTE *)(a2 + 104));
      v45 = *(_QWORD *)(a1 + 80);
      v46 = *(_QWORD *)(a1 + 88);
      v47 = *(_QWORD *)(a1 + 96);
      *(_QWORD *)(a1 + 80) = v42;
      *(_QWORD *)(a1 + 88) = v43;
      *(_QWORD *)(a1 + 96) = v44;
      v48 = *(_BYTE *)(a1 + 104);
      *(_BYTE *)(a1 + 104) = v36;
      sub_1B0F56ADC(v45, v46, v47, v48);
    }
    else
    {
      sub_1B0F5EA14(a1 + 80);
      v38 = *(_OWORD *)(a2 + 89);
      *v34 = *v35;
      *(_OWORD *)(a1 + 89) = v38;
    }
  }
  else if (v36 <= 0xFD)
  {
    v39 = *(_QWORD *)(a2 + 80);
    v40 = *(_QWORD *)(a2 + 88);
    v41 = *(_QWORD *)(a2 + 96);
    sub_1B0F56B9C(v39, v40, v41, *(_BYTE *)(a2 + 104));
    *(_QWORD *)(a1 + 80) = v39;
    *(_QWORD *)(a1 + 88) = v40;
    *(_QWORD *)(a1 + 96) = v41;
    *(_BYTE *)(a1 + 104) = v36;
  }
  else
  {
    v37 = *v35;
    *(_OWORD *)(a1 + 89) = *(_OWORD *)(a2 + 89);
    *v34 = v37;
  }
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  return a1;
}

__n128 __swift_memcpy144_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t assignWithTake for SymbolView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(unsigned __int8 *)(a1 + 40);
  if (v5 > 0xFD)
    goto LABEL_4;
  v6 = *(unsigned __int8 *)(a2 + 40);
  if (v6 > 0xFD)
  {
    sub_1B0F5EA14(a1 + 16);
LABEL_4:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
    goto LABEL_6;
  }
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v6;
  sub_1B0F56ADC(v8, v9, v10, v5);
LABEL_6:
  v11 = *(unsigned __int8 *)(a1 + 72);
  if (v11 > 0xFD)
  {
LABEL_9:
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
    goto LABEL_11;
  }
  v12 = *(unsigned __int8 *)(a2 + 72);
  if (v12 > 0xFD)
  {
    sub_1B0F5EA14(a1 + 48);
    goto LABEL_9;
  }
  v13 = *(_QWORD *)(a2 + 64);
  v14 = *(_QWORD *)(a1 + 48);
  v15 = *(_QWORD *)(a1 + 56);
  v16 = *(_QWORD *)(a1 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = v13;
  *(_BYTE *)(a1 + 72) = v12;
  sub_1B0F56ADC(v14, v15, v16, v11);
LABEL_11:
  v17 = *(unsigned __int8 *)(a1 + 104);
  if (v17 <= 0xFD)
  {
    v18 = *(unsigned __int8 *)(a2 + 104);
    if (v18 <= 0xFD)
    {
      v19 = *(_QWORD *)(a2 + 96);
      v20 = *(_QWORD *)(a1 + 80);
      v21 = *(_QWORD *)(a1 + 88);
      v22 = *(_QWORD *)(a1 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 96) = v19;
      *(_BYTE *)(a1 + 104) = v18;
      sub_1B0F56ADC(v20, v21, v22, v17);
      goto LABEL_16;
    }
    sub_1B0F5EA14(a1 + 80);
  }
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 89) = *(_OWORD *)(a2 + 89);
LABEL_16:
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_release();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  return a1;
}

uint64_t getEnumTagSinglePayload for SymbolView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 144))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SymbolView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 144) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 144) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolView()
{
  return &type metadata for SymbolView;
}

uint64_t sub_1B1009578@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  unsigned __int8 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t result;
  void *v21;
  id v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;

  v3 = v1[6];
  v4 = v1[7];
  v5 = v1[4];
  v35 = v1[5];
  v36 = v3;
  v6 = v1[8];
  v37 = v4;
  v38 = v6;
  v7 = v1[3];
  v32 = v1[2];
  v33 = v7;
  v34 = v5;
  v8 = v1[1];
  v30 = *v1;
  v31 = v8;
  if (BYTE8(v36) > 0xFDu)
  {
    v10 = BYTE8(v32);
    if (BYTE8(v32) <= 0xFDu)
    {
      v11 = v31;
      v29 = v31;
      v12 = v32;
      if (!(_QWORD)v38)
      {
        sub_1B0F6CCA0((uint64_t)&v30);
        sub_1B0F56C04(v11, *((uint64_t *)&v11 + 1), v12, v10);
        goto LABEL_24;
      }
      sub_1B0F56C04(v31, *((uint64_t *)&v31 + 1), v32, BYTE8(v32));
      v13 = swift_retain();
      StringResolvable.resolved(with:)(v13);
      sub_1B0F56B88(v31, *((uint64_t *)&v31 + 1), v32, BYTE8(v32));
      swift_release();
      if (BYTE8(v34) <= 0xFDu)
      {
        v29 = v33;
        swift_retain();
        sub_1B0F56C04(v33, *((uint64_t *)&v33 + 1), v34, BYTE8(v34));
        StringResolvable.resolved(with:)(v38);
        sub_1B0F56B88(v33, *((uint64_t *)&v33 + 1), v34, BYTE8(v34));
        swift_release();
        v21 = (void *)sub_1B1035B88();
        swift_bridgeObjectRelease();
        v22 = objc_msgSend((id)objc_opt_self(), sel_bundleWithIdentifier_, v21);

        sub_1B10357BC();
        v23 = *(_QWORD *)(v37 + 16);
        if (v23)
        {
          v24 = (_QWORD *)(v37 + 32);
          swift_retain();
          swift_bridgeObjectRetain();
          do
          {
            v25 = v24[3];
            v26 = v24[4];
            __swift_project_boxed_opaque_existential_1(v24, v25);
            v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16);
            v28 = swift_retain();
            v27(v28, v25, v26);
            swift_release_n();
            v24 += 5;
            --v23;
          }
          while (v23);
          swift_release();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    sub_1B1034EC8();
LABEL_14:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1228);
    sub_1B100B940();
    result = sub_1B1034EC8();
    *(_QWORD *)a1 = v29;
    *(_BYTE *)(a1 + 8) = BYTE8(v29);
    *(_BYTE *)(a1 + 9) = BYTE9(v29);
    return result;
  }
  *(_QWORD *)&v29 = v35;
  WORD4(v29) = WORD4(v35);
  if ((_QWORD)v38)
  {
    sub_1B0F56C04(v35, *((uint64_t *)&v35 + 1), v36, BYTE8(v36));
    v9 = swift_retain();
    StringResolvable.resolved(with:)(v9);
    sub_1B0F56B88(v35, *((uint64_t *)&v35 + 1), v36, BYTE8(v36));
    swift_release();
    sub_1B103578C();
    v14 = *(_QWORD *)(v37 + 16);
    if (v14)
    {
      v15 = (_QWORD *)(v37 + 32);
      swift_retain();
      swift_bridgeObjectRetain();
      do
      {
        v16 = v15[3];
        v17 = v15[4];
        __swift_project_boxed_opaque_existential_1(v15, v16);
        v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
        v19 = swift_retain();
        v18(v19, v16, v17);
        swift_release_n();
        v15 += 5;
        --v14;
      }
      while (v14);
      swift_release();
      swift_bridgeObjectRelease();
    }
    goto LABEL_14;
  }
  sub_1B0F56C04(v35, *((uint64_t *)&v35 + 1), v36, BYTE8(v36));
  sub_1B0F6CCA0((uint64_t)&v30);
LABEL_24:
  type metadata accessor for RemoteStateStore(0);
  sub_1B0FB773C();
  result = sub_1B1034ACC();
  __break(1u);
  return result;
}

uint64_t sub_1B1009A60(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1B1009A98 + 4 * byte_1B1046C30[a1]))(0xD000000000000010, 0x80000001B104C530);
}

uint64_t sub_1B1009A98()
{
  return 25705;
}

uint64_t sub_1B1009AA4()
{
  return 0x614E6D6574737973;
}

uint64_t sub_1B1009AC0()
{
  return 0x646F4D6567616D69;
}

uint64_t sub_1B1009AE4()
{
  return 1701667182;
}

uint64_t sub_1B1009AF4(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1B1009B2C + 4 * byte_1B1046C35[a1]))(0xD000000000000010, 0x80000001B104C530);
}

uint64_t sub_1B1009B2C()
{
  return 25705;
}

uint64_t sub_1B1009B38()
{
  return 0x614E6D6574737973;
}

uint64_t sub_1B1009B54()
{
  return 0x646F4D6567616D69;
}

uint64_t sub_1B1009B78()
{
  return 1701667182;
}

void sub_1B1009B88(char *a1)
{
  sub_1B100EF78(*a1);
}

void sub_1B1009B94()
{
  char *v0;

  sub_1B1011164(*v0);
}

void sub_1B1009B9C(uint64_t a1)
{
  char *v1;

  sub_1B101338C(a1, *v1);
}

void sub_1B1009BA4(uint64_t a1)
{
  char *v1;

  sub_1B10138DC(a1, *v1);
}

uint64_t sub_1B1009BAC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B100BDA0();
  *a1 = result;
  return result;
}

uint64_t sub_1B1009BE0@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B1009A60(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B1009C08()
{
  unsigned __int8 *v0;

  return sub_1B1009AF4(*v0);
}

uint64_t sub_1B1009C10@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B100BDA0();
  *a1 = result;
  return result;
}

uint64_t sub_1B1009C3C()
{
  sub_1B100B9A4();
  return sub_1B10362B4();
}

uint64_t sub_1B1009C64()
{
  sub_1B100B9A4();
  return sub_1B10362C0();
}

uint64_t sub_1B1009C8C@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int v25;
  __int128 v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  unsigned __int8 v47;
  __int128 v48;
  uint64_t v49;
  char v50;
  __int128 v51;
  _OWORD *v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  char *v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _OWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  _QWORD *v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  char v88;
  _BYTE v89[7];
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  _BYTE v94[7];
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  _BYTE v99[7];
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _BYTE v105[7];
  _BYTE v106[7];
  _DWORD v107[3];
  uint64_t v108;

  v69 = a2;
  v3 = sub_1B103461C();
  v71 = *(_QWORD *)(v3 - 8);
  v72 = v3;
  MEMORY[0x1E0C80A78](v3);
  v73 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1238);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for RemoteStateStore(0);
  sub_1B0FB773C();
  v9 = sub_1B1034AD8();
  v70 = v10;
  v11 = a1[3];
  v74 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  sub_1B100B9A4();
  swift_retain();
  v12 = v108;
  sub_1B1036278();
  if (v12)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  v13 = v73;
  v108 = v6;
  v68 = v9;
  LOBYTE(v85) = 0;
  v14 = sub_1B103608C();
  v17 = v15;
  if (v15)
  {
    v18 = v14;
  }
  else
  {
    sub_1B1034610();
    v18 = sub_1B1034604();
    v17 = v19;
    (*(void (**)(char *, uint64_t))(v71 + 8))(v13, v72);
  }
  LOBYTE(v76) = 1;
  sub_1B0F56A98();
  swift_bridgeObjectRetain();
  sub_1B10360A4();
  v73 = 0;
  v65 = v17;
  v60 = v18;
  v20 = (char *)v5;
  v22 = *((_QWORD *)&v85 + 1);
  v21 = v85;
  v23 = v86;
  v24 = v8;
  v25 = BYTE8(v86);
  LOBYTE(v76) = 3;
  sub_1B0F56C04(v85, *((uint64_t *)&v85 + 1), v86, BYTE8(v86));
  sub_1B10360A4();
  v66 = v23;
  v67 = v22;
  v72 = v21;
  LODWORD(v71) = v25;
  v26 = v85;
  v27 = v86;
  v28 = BYTE8(v86);
  LOBYTE(v76) = 4;
  sub_1B0F56C04(v85, *((uint64_t *)&v85 + 1), v86, BYTE8(v86));
  sub_1B10360A4();
  v64 = v28;
  v63 = v27;
  v62 = v26;
  v30 = *((_QWORD *)&v85 + 1);
  v29 = v85;
  v31 = v86;
  LODWORD(v23) = BYTE8(v86);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1210);
  LOBYTE(v85) = 2;
  v59 = v31;
  sub_1B0F56C04(v29, v30, v31, v23);
  sub_1B100B828();
  sub_1B10360A4();
  v32 = v67;
  v33 = v24;
  v61 = v29;
  v57 = v30;
  v58 = v23;
  v73 = v20;
  v34 = v72;
  v35 = v108;
  v36 = v64;
  if (v104)
  {
    v37 = *(_QWORD *)(v104 + 16);
    if (v37)
    {
      v56 = v24;
      v75 = MEMORY[0x1E0DEE9D8];
      v38 = v104;
      sub_1B0FDD930(0, v37, 0);
      v39 = v38 + 32;
      v40 = v75;
      v41 = v65;
      do
      {
        sub_1B100B8D0(v39, (uint64_t)&v76);
        sub_1B0F5FD84((uint64_t)&v76, (uint64_t)&v85);
        sub_1B100B90C((uint64_t)&v76);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1B0FDD930(0, *(_QWORD *)(v40 + 16) + 1, 1);
          v40 = v75;
        }
        v43 = *(_QWORD *)(v40 + 16);
        v42 = *(_QWORD *)(v40 + 24);
        if (v43 >= v42 >> 1)
        {
          sub_1B0FDD930(v42 > 1, v43 + 1, 1);
          v40 = v75;
        }
        *(_QWORD *)(v40 + 16) = v43 + 1;
        sub_1B0F5A0E4(&v85, v40 + 40 * v43 + 32);
        v39 += 40;
        --v37;
      }
      while (v37);
      v44 = v41;
      swift_bridgeObjectRelease();
      v32 = v67;
      v34 = v72;
      v45 = v64;
      v33 = v56;
      v35 = v108;
      v29 = v61;
      goto LABEL_19;
    }
    swift_bridgeObjectRelease();
    v45 = v36;
    v40 = MEMORY[0x1E0DEE9D8];
    v34 = v72;
    v35 = v108;
  }
  else
  {
    v45 = v64;
    v40 = MEMORY[0x1E0DEE9D8];
  }
  v44 = v65;
LABEL_19:
  (*(void (**)(char *, char *))(v35 + 8))(v33, v73);
  *(_QWORD *)&v76 = v60;
  *((_QWORD *)&v76 + 1) = v44;
  v77 = v62;
  *(_QWORD *)&v78 = v63;
  BYTE8(v78) = v45;
  *(_QWORD *)&v79 = v29;
  *((_QWORD *)&v79 + 1) = v57;
  *(_QWORD *)&v80 = v59;
  BYTE8(v80) = v58;
  *(_QWORD *)&v81 = v34;
  *((_QWORD *)&v81 + 1) = v32;
  v46 = v66;
  *(_QWORD *)&v82 = v66;
  v47 = v71;
  BYTE8(v82) = v71;
  *(_QWORD *)&v83 = v40;
  *((_QWORD *)&v83 + 1) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v84 = v68;
  *((_QWORD *)&v84 + 1) = v70;
  sub_1B0F6CCA0((uint64_t)&v76);
  swift_release();
  sub_1B0F56B88(v72, v32, v46, v47);
  sub_1B0F56B88(v61, v57, v59, v58);
  v48 = v62;
  v49 = v63;
  v50 = v64;
  sub_1B0F56B88(v62, *((uint64_t *)&v62 + 1), v63, v64);
  swift_bridgeObjectRelease();
  v51 = v83;
  v52 = v69;
  v69[6] = v82;
  v52[7] = v51;
  v52[8] = v84;
  v53 = v79;
  v52[2] = v78;
  v52[3] = v53;
  v54 = v81;
  v52[4] = v80;
  v52[5] = v54;
  v55 = v77;
  *v52 = v76;
  v52[1] = v55;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v74);
  *(_QWORD *)&v85 = v60;
  *((_QWORD *)&v85 + 1) = v44;
  v86 = v48;
  v87 = v49;
  v88 = v50;
  *(_DWORD *)v89 = v107[0];
  *(_DWORD *)&v89[3] = *(_DWORD *)((char *)v107 + 3);
  v90 = v61;
  v91 = v57;
  v92 = v59;
  v93 = v58;
  *(_DWORD *)v94 = *(_DWORD *)v106;
  *(_DWORD *)&v94[3] = *(_DWORD *)&v106[3];
  v95 = v72;
  v96 = v67;
  v97 = v66;
  v98 = v71;
  *(_DWORD *)v99 = *(_DWORD *)v105;
  *(_DWORD *)&v99[3] = *(_DWORD *)&v105[3];
  v100 = v40;
  v101 = MEMORY[0x1E0DEE9D8];
  v102 = v68;
  v103 = v70;
  return sub_1B0F6CD84((uint64_t)&v85);
}

uint64_t sub_1B100A4DC@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1B1009C8C(a1, a2);
}

uint64_t sub_1B100A4F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B100A500@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t result;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  _OWORD v85[7];
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE11C8);
  v70 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v68 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v69 = (char *)&v61 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE11D0);
  MEMORY[0x1E0C80A78](v8);
  v73 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE11D8);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v64 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v61 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDEA00);
  v17 = MEMORY[0x1E0C80A78](v16);
  v18 = MEMORY[0x1E0C80A78](v17);
  v19 = MEMORY[0x1E0C80A78](v18);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v61 - v20;
  v22 = *(unsigned __int8 *)(v2 + 40);
  v74 = v10;
  v75 = a1;
  v76 = (char *)&v61 - v20;
  v72 = v8;
  v65 = v15;
  v66 = v11;
  v62 = v24;
  v63 = v23;
  v67 = v25;
  if (v22 > 0xFD)
  {
LABEL_4:
    sub_1B10345D4();
    swift_bridgeObjectRelease();
    v87 = *(_QWORD *)(v2 + 80);
    v30 = v87;
    sub_1B0F5A974(v2 + 88, (uint64_t)&v88, &qword_1EEEDEBD8);
    if (v30)
    {
      if (*((_QWORD *)&v88 + 1))
      {
        v71 = v4;
        v85[4] = v92;
        v85[5] = v93;
        v85[6] = v94;
        v86 = v95;
        v85[0] = v88;
        v85[1] = v89;
        v85[2] = v90;
        v85[3] = v91;
        v31 = v63;
        sub_1B0F5A974((uint64_t)v21, v63, &qword_1EEEDEA00);
        v32 = *(_QWORD *)(v2 + 48);
        v33 = *(_QWORD *)(v2 + 56);
        v34 = *(_QWORD *)(v2 + 64);
        v35 = *(_BYTE *)(v2 + 72);
        *(_QWORD *)&v77 = v32;
        *((_QWORD *)&v77 + 1) = v33;
        *(_QWORD *)&v78 = v34;
        BYTE8(v78) = v35;
        v36 = *(_QWORD *)(v2 + 216);
        if (v36)
        {
          swift_bridgeObjectRetain_n();
          swift_retain();
          sub_1B0F6C708(v32, v33, v34, v35);
          sub_1B0FA70A4(v36);
          swift_release();
          sub_1B0F6C7D4(v32, v33, v34, v35);
          v37 = swift_allocObject();
          *(_QWORD *)(v37 + 16) = v30;
          sub_1B0F641B8((uint64_t)v85, (uint64_t)&v77);
          v38 = swift_allocObject();
          v39 = v82;
          *(_OWORD *)(v38 + 80) = v81;
          *(_OWORD *)(v38 + 96) = v39;
          *(_OWORD *)(v38 + 112) = v83;
          *(_QWORD *)(v38 + 128) = v84;
          v40 = v78;
          *(_OWORD *)(v38 + 16) = v77;
          *(_OWORD *)(v38 + 32) = v40;
          v41 = v80;
          *(_OWORD *)(v38 + 48) = v79;
          *(_OWORD *)(v38 + 64) = v41;
          sub_1B0F5A974(v31, v62, &qword_1EEEDEA00);
          v42 = (_QWORD *)swift_allocObject();
          v42[2] = sub_1B100B630;
          v42[3] = v37;
          v42[4] = sub_1B100B684;
          v42[5] = v38;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE11F0);
          sub_1B100BB84(&qword_1EEEE11F8, &qword_1EEEE11F0, (uint64_t (*)(void))sub_1B0F64174);
          v43 = v64;
          sub_1B1034724();
          sub_1B0F5A3AC(v31, &qword_1EEEDEA00);
          v45 = v65;
          v44 = v66;
          v46 = v74;
          (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v65, v43, v74);
          (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v73, v45, v46);
          swift_storeEnumTagMultiPayload();
          sub_1B100B5CC(&qword_1EEEE11E0, &qword_1EEEE11D8);
          sub_1B100B5CC(&qword_1EEEE11E8, &qword_1EEEE11C8);
          sub_1B1034EC8();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v46);
          sub_1B0F6427C((uint64_t)v85);
          v47 = (uint64_t)v76;
          return sub_1B0F5A3AC(v47, &qword_1EEEDEA00);
        }
        swift_bridgeObjectRetain_n();
        v57 = v32;
        v58 = v33;
        v59 = v34;
        v60 = v35;
LABEL_15:
        sub_1B0F6C708(v57, v58, v59, v60);
        goto LABEL_16;
      }
    }
    else
    {
      sub_1B0F5A3AC((uint64_t)&v88, &qword_1EEEDEBD8);
    }
    sub_1B0F5A974((uint64_t)v21, v67, &qword_1EEEDEA00);
    v48 = *(_QWORD *)(v2 + 48);
    v49 = *(_QWORD *)(v2 + 56);
    v50 = *(_QWORD *)(v2 + 64);
    v51 = *(_BYTE *)(v2 + 72);
    v87 = v48;
    *(_QWORD *)&v88 = v49;
    *((_QWORD *)&v88 + 1) = v50;
    LOBYTE(v89) = v51;
    v52 = *(_QWORD *)(v2 + 216);
    if (v52)
    {
      swift_retain();
      sub_1B0F6C708(v48, v49, v50, v51);
      sub_1B0FA70A4(v52);
      swift_release();
      sub_1B0F6C7D4(v48, v49, v50, v51);
      v53 = v68;
      sub_1B1034730();
      v55 = v69;
      v54 = v70;
      (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v69, v53, v4);
      (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v73, v55, v4);
      swift_storeEnumTagMultiPayload();
      sub_1B100B5CC(&qword_1EEEE11E0, &qword_1EEEE11D8);
      sub_1B100B5CC(&qword_1EEEE11E8, &qword_1EEEE11C8);
      sub_1B1034EC8();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v4);
      v47 = (uint64_t)v76;
      return sub_1B0F5A3AC(v47, &qword_1EEEDEA00);
    }
    v57 = v48;
    v58 = v49;
    v59 = v50;
    v60 = v51;
    goto LABEL_15;
  }
  v71 = v4;
  v26 = *(_QWORD *)(v2 + 16);
  v27 = *(_QWORD *)(v2 + 24);
  v28 = *(_QWORD *)(v2 + 32);
  v87 = v26;
  *(_QWORD *)&v88 = v27;
  *((_QWORD *)&v88 + 1) = v28;
  LOBYTE(v89) = v22;
  if (*(_QWORD *)(v2 + 216))
  {
    sub_1B0F56C04(v26, v27, v28, v22);
    v29 = swift_retain();
    StringResolvable.resolved(with:)(v29);
    sub_1B0F56B88(v26, v27, v28, v22);
    swift_release();
    v4 = v71;
    v21 = v76;
    goto LABEL_4;
  }
  sub_1B0F56B9C(v26, v27, v28, v22);
LABEL_16:
  type metadata accessor for RemoteStateStore(0);
  sub_1B0FB773C();
  result = sub_1B1034ACC();
  __break(1u);
  return result;
}

uint64_t sub_1B100AC80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t result;

  v5 = *(_QWORD *)(a2 + 16);
  if (v5)
  {
    v6 = (_QWORD *)(a2 + 32);
    swift_retain();
    swift_bridgeObjectRetain();
    do
    {
      v7 = v6[3];
      v8 = v6[4];
      __swift_project_boxed_opaque_existential_1(v6, v7);
      v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
      v10 = swift_retain();
      a1 = v9(v10, v7, v8);
      swift_release_n();
      v6 += 5;
      --v5;
    }
    while (v5);
    result = swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_retain();
  }
  *a3 = a1;
  return result;
}

uint64_t sub_1B100AD44(char a1)
{
  return qword_1B10470A8[a1];
}

uint64_t sub_1B100AD64(char *a1, char *a2)
{
  return sub_1B100E68C(*a1, *a2);
}

uint64_t sub_1B100AD70()
{
  return sub_1B101123C();
}

uint64_t sub_1B100AD78()
{
  return sub_1B1012F28();
}

uint64_t sub_1B100AD80()
{
  return sub_1B1013FB8();
}

uint64_t sub_1B100AD88@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B100BDA0();
  *a1 = result;
  return result;
}

uint64_t sub_1B100ADBC@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B100AD44(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B100ADE4()
{
  char *v0;

  return sub_1B100AD44(*v0);
}

uint64_t sub_1B100ADEC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B100BDA0();
  *a1 = result;
  return result;
}

uint64_t sub_1B100AE18()
{
  sub_1B100B7E4();
  return sub_1B10362B4();
}

uint64_t sub_1B100AE40()
{
  sub_1B100B7E4();
  return sub_1B10362C0();
}

uint64_t sub_1B100AE68@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint32x4_t v20;
  uint64_t v21;
  uint32x4_t v22;
  unsigned __int8 v23;
  int8x16_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE v39[40];
  uint64_t v40;
  int8x16_t v41;
  uint64_t v42;
  unsigned __int8 v43;
  _QWORD v44[2];
  int8x16_t v45;
  uint64_t v46;
  unsigned __int8 v47;
  int8x16_t v48;
  uint64_t v49;
  unsigned __int8 v50;
  uint64_t v51;
  _QWORD v52[19];
  uint64_t v53;

  v35 = a2;
  v3 = sub_1B103461C();
  v36 = *(_QWORD *)(v3 - 8);
  v37 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1200);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52[15] = MEMORY[0x1E0DEE9D8];
  type metadata accessor for RemoteStateStore(0);
  sub_1B0FB773C();
  v52[16] = sub_1B1034AD8();
  v52[17] = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B100B7E4();
  v11 = v38;
  sub_1B1036278();
  if (v11)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    v38 = v7;
    v41.i8[0] = 0;
    v12 = sub_1B103608C();
    v15 = v13;
    v33 = v6;
    v34 = v9;
    if (v13)
    {
      v16 = v12;
    }
    else
    {
      sub_1B1034610();
      v16 = sub_1B1034604();
      v15 = v17;
      (*(void (**)(char *, uint64_t))(v36 + 8))(v5, v37);
    }
    v18 = (uint64_t)a1;
    v44[0] = v16;
    v44[1] = v15;
    v39[0] = 2;
    sub_1B0F7E5F8();
    v19 = v33;
    sub_1B10360A4();
    v21 = v42;
    v22.i32[0] = 253;
    if (v43 <= 0xFDu)
      v23 = v43;
    else
      v23 = 0;
    v20.i32[0] = v43;
    v24 = vbslq_s8((int8x16_t)vdupq_lane_s32((int32x2_t)*(_OWORD *)&vcgtq_u32(v20, v22), 0), (int8x16_t)xmmword_1B1047100, v41);
    if (v43 > 0xFDu)
      v21 = 0;
    v48 = v24;
    v49 = v21;
    v50 = v23;
    v39[0] = 1;
    sub_1B0F56A98();
    sub_1B10360BC();
    v45 = v41;
    v46 = v42;
    v47 = v43;
    v39[0] = 3;
    sub_1B0F64238();
    sub_1B10360A4();
    sub_1B0F79004((uint64_t)&v41, (uint64_t)v52);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1210);
    v41.i8[0] = 4;
    sub_1B100B828();
    sub_1B10360A4();
    v25 = v53;
    v26 = v38;
    if (v53)
    {
      v27 = *(_QWORD *)(v53 + 16);
      v28 = v35;
      if (v27)
      {
        v40 = MEMORY[0x1E0DEE9D8];
        sub_1B0FDD930(0, v27, 0);
        v29 = v25 + 32;
        v30 = v40;
        do
        {
          sub_1B100B8D0(v29, (uint64_t)v39);
          sub_1B0F5FD84((uint64_t)v39, (uint64_t)&v41);
          sub_1B100B90C((uint64_t)v39);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B0FDD930(0, *(_QWORD *)(v30 + 16) + 1, 1);
            v30 = v40;
          }
          v32 = *(_QWORD *)(v30 + 16);
          v31 = *(_QWORD *)(v30 + 24);
          if (v32 >= v31 >> 1)
          {
            sub_1B0FDD930(v31 > 1, v32 + 1, 1);
            v30 = v40;
          }
          *(_QWORD *)(v30 + 16) = v32 + 1;
          sub_1B0F5A0E4((__int128 *)v41.i8, v30 + 40 * v32 + 32);
          v29 += 40;
          --v27;
          v28 = v35;
        }
        while (v27);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        v30 = MEMORY[0x1E0DEE9D8];
      }
      v18 = (uint64_t)a1;
      v19 = v33;
      v26 = v38;
    }
    else
    {
      v30 = 0;
      v28 = v35;
    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(v34, v19);
    v51 = v30;
    sub_1B0F6CE68((uint64_t)v44, v28);
    __swift_destroy_boxed_opaque_existential_1(v18);
    return sub_1B0F6CEA4((uint64_t)v44);
  }
}

uint64_t sub_1B100B3C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B100AE68(a1, a2);
}

uint64_t sub_1B100B3D4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B100B3E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B0F78AEC(a1, a2, a3, (void (*)(void))sub_1B1000B4C);
}

uint64_t sub_1B100B3F0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B0F5FA20(a1, a2, a3, (uint64_t (*)(void))sub_1B100B40C, (uint64_t (*)(void))sub_1B100B450, (uint64_t (*)(void))sub_1B100B494);
}

unint64_t sub_1B100B40C()
{
  unint64_t result;

  result = qword_1EEEE1198;
  if (!qword_1EEEE1198)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1046D50, &type metadata for AsyncImageView);
    atomic_store(result, (unint64_t *)&qword_1EEEE1198);
  }
  return result;
}

unint64_t sub_1B100B450()
{
  unint64_t result;

  result = qword_1EEEE11A0;
  if (!qword_1EEEE11A0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1046D18, &type metadata for AsyncImageView);
    atomic_store(result, (unint64_t *)&qword_1EEEE11A0);
  }
  return result;
}

unint64_t sub_1B100B494()
{
  unint64_t result;

  result = qword_1EEEE11A8;
  if (!qword_1EEEE11A8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1046D78, &type metadata for AsyncImageView);
    atomic_store(result, (unint64_t *)&qword_1EEEE11A8);
  }
  return result;
}

uint64_t sub_1B100B4D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B0F78AEC(a1, a2, a3, (void (*)(void))sub_1B1000B08);
}

uint64_t sub_1B100B4E4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B0F5FA20(a1, a2, a3, (uint64_t (*)(void))sub_1B100B500, (uint64_t (*)(void))sub_1B100B544, (uint64_t (*)(void))sub_1B100B588);
}

unint64_t sub_1B100B500()
{
  unint64_t result;

  result = qword_1EEEE11B0;
  if (!qword_1EEEE11B0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1046CA0, &type metadata for SymbolView);
    atomic_store(result, (unint64_t *)&qword_1EEEE11B0);
  }
  return result;
}

unint64_t sub_1B100B544()
{
  unint64_t result;

  result = qword_1EEEE11B8;
  if (!qword_1EEEE11B8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1046C68, &type metadata for SymbolView);
    atomic_store(result, (unint64_t *)&qword_1EEEE11B8);
  }
  return result;
}

unint64_t sub_1B100B588()
{
  unint64_t result;

  result = qword_1EEEE11C0;
  if (!qword_1EEEE11C0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1046CC8, &type metadata for SymbolView);
    atomic_store(result, (unint64_t *)&qword_1EEEE11C0);
  }
  return result;
}

uint64_t sub_1B100B5CC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1B5E15188](MEMORY[0x1E0CD8308], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B100B60C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B100B630@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1B100AC80(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1B100B638()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B100B684@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1B0F641B8(v1 + 16, a1);
}

uint64_t sub_1B100B690(uint64_t a1, void (*a2)(_QWORD *__return_ptr), uint64_t a3, void (*a4)(_QWORD *__return_ptr))
{
  _QWORD v7[15];
  char v8;
  _QWORD v9[15];

  if (sub_1B1034958())
  {
    a2(v7);
    v8 = 0;
    sub_1B0F64174();
    swift_retain_n();
    sub_1B1034EC8();
    swift_release_n();
    return swift_release();
  }
  else
  {
    a4(v9);
    sub_1B0F641B8((uint64_t)v9, (uint64_t)v7);
    v8 = 1;
    sub_1B0F64174();
    sub_1B1034EC8();
    return sub_1B0F6427C((uint64_t)v9);
  }
}

uint64_t sub_1B100B7AC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B100B7D8(uint64_t a1)
{
  uint64_t v1;

  return sub_1B100B690(a1, *(void (**)(_QWORD *__return_ptr))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(_QWORD *__return_ptr))(v1 + 32));
}

unint64_t sub_1B100B7E4()
{
  unint64_t result;

  result = qword_1EEEE1208;
  if (!qword_1EEEE1208)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1047050, &type metadata for AsyncImageView.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1208);
  }
  return result;
}

unint64_t sub_1B100B828()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EEEE1218;
  if (!qword_1EEEE1218)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEE1210);
    v2 = sub_1B100B88C();
    result = MEMORY[0x1B5E15188](MEMORY[0x1E0DEAF40], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EEEE1218);
  }
  return result;
}

unint64_t sub_1B100B88C()
{
  unint64_t result;

  result = qword_1EEEE1220;
  if (!qword_1EEEE1220)
  {
    result = MEMORY[0x1B5E15188](&protocol conformance descriptor for AnyImageModifierBox, &type metadata for AnyImageModifierBox);
    atomic_store(result, (unint64_t *)&qword_1EEEE1220);
  }
  return result;
}

uint64_t sub_1B100B8D0(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AnyImageModifierBox(a2, a1);
  return a2;
}

uint64_t sub_1B100B90C(uint64_t a1)
{
  destroy for AnyViewModifier();
  return a1;
}

unint64_t sub_1B100B940()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EEEE1230;
  if (!qword_1EEEE1230)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEE1228);
    v2[0] = MEMORY[0x1E0CDF820];
    v2[1] = MEMORY[0x1E0CE0400];
    result = MEMORY[0x1B5E15188](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EEEE1230);
  }
  return result;
}

unint64_t sub_1B100B9A4()
{
  unint64_t result;

  result = qword_1EEEE1240;
  if (!qword_1EEEE1240)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1047000, &type metadata for SymbolView.SymbolViewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1240);
  }
  return result;
}

ValueMetadata *type metadata accessor for SymbolView.SymbolViewCodingKeys()
{
  return &type metadata for SymbolView.SymbolViewCodingKeys;
}

uint64_t _s6LiftUI10SymbolViewV20SymbolViewCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1B100BA48 + 4 * byte_1B1046C3F[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1B100BA7C + 4 * byte_1B1046C3A[v4]))();
}

uint64_t sub_1B100BA7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B100BA84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B100BA8CLL);
  return result;
}

uint64_t sub_1B100BA98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B100BAA0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1B100BAA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B100BAAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AsyncImageView.CodingKeys()
{
  return &type metadata for AsyncImageView.CodingKeys;
}

unint64_t sub_1B100BACC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EEEE1248;
  if (!qword_1EEEE1248)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEE1250);
    v2[0] = sub_1B100B5CC(&qword_1EEEE11E0, &qword_1EEEE11D8);
    v2[1] = sub_1B100B5CC(&qword_1EEEE11E8, &qword_1EEEE11C8);
    result = MEMORY[0x1B5E15188](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EEEE1248);
  }
  return result;
}

uint64_t sub_1B100BB58()
{
  return sub_1B100BB84(&qword_1EEEE1258, &qword_1EEEE1260, (uint64_t (*)(void))sub_1B100B940);
}

uint64_t sub_1B100BB84(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = a3();
    v8[0] = MEMORY[0x1E0CDF820];
    v8[1] = v7;
    result = MEMORY[0x1B5E15188](MEMORY[0x1E0CDB8A0], v6, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1B100BBF4()
{
  unint64_t result;

  result = qword_1EEEE1268;
  if (!qword_1EEEE1268)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1046EE8, &type metadata for AsyncImageView.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1268);
  }
  return result;
}

unint64_t sub_1B100BC3C()
{
  unint64_t result;

  result = qword_1EEEE1270;
  if (!qword_1EEEE1270)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1046FD8, &type metadata for SymbolView.SymbolViewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1270);
  }
  return result;
}

unint64_t sub_1B100BC84()
{
  unint64_t result;

  result = qword_1EEEE1278;
  if (!qword_1EEEE1278)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1046F10, &type metadata for SymbolView.SymbolViewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1278);
  }
  return result;
}

unint64_t sub_1B100BCCC()
{
  unint64_t result;

  result = qword_1EEEE1280;
  if (!qword_1EEEE1280)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1046F38, &type metadata for SymbolView.SymbolViewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1280);
  }
  return result;
}

unint64_t sub_1B100BD14()
{
  unint64_t result;

  result = qword_1EEEE1288;
  if (!qword_1EEEE1288)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1046E20, &type metadata for AsyncImageView.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1288);
  }
  return result;
}

unint64_t sub_1B100BD5C()
{
  unint64_t result;

  result = qword_1EEEE1290;
  if (!qword_1EEEE1290)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1046E48, &type metadata for AsyncImageView.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1290);
  }
  return result;
}

uint64_t sub_1B100BDA0()
{
  unint64_t v0;

  v0 = sub_1B103605C();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_1B100BDE4(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x636E657265666572;
  else
    v3 = 0x65756C6176;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xE900000000000065;
  if ((a2 & 1) != 0)
    v5 = 0x636E657265666572;
  else
    v5 = 0x65756C6176;
  if ((a2 & 1) != 0)
    v6 = 0xE900000000000065;
  else
    v6 = 0xE500000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1B100BE84(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1B100BEBC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1B100BF04 + 4 * byte_1B1047114[a2]))(103);
}

uint64_t sub_1B100BF04(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 103 && v1 == v2)
    v3 = 1;
  else
    v3 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100BF8C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x7974696361706FLL;
  else
    v3 = 0x6574696877;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xE700000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x7974696361706FLL;
  else
    v5 = 0x6574696877;
  if ((a2 & 1) != 0)
    v6 = 0xE700000000000000;
  else
    v6 = 0xE500000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B100C028(char a1, char a2)
{
  char v3;

  if (qword_1B10482F0[a1] == qword_1B10482F0[a2] && qword_1B1048308[a1] == qword_1B1048308[a2])
    v3 = 1;
  else
    v3 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100C0B0(char a1, char a2)
{
  char v3;

  if (qword_1B1048360[a1] == qword_1B1048360[a2] && qword_1B1048390[a1] == qword_1B1048390[a2])
    v3 = 1;
  else
    v3 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100C138(char a1, char a2)
{
  char v3;

  if (qword_1B10482C0[a1] == qword_1B10482C0[a2] && qword_1B10482D8[a1] == qword_1B10482D8[a2])
    v3 = 1;
  else
    v3 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100C1BC(char a1, char a2)
{
  char v3;

  if (qword_1B1048280[a1] == qword_1B1048280[a2] && qword_1B10482A0[a1] == qword_1B10482A0[a2])
    v3 = 1;
  else
    v3 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100C240(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aConditiothen_0[8 * a1] == *(_QWORD *)&aConditiothen_0[8 * a2]
    && *(_QWORD *)&aN_0[8 * a1] == *(_QWORD *)&aN_0[8 * a2])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_1B1036128();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100C2C4(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aHorizontvertic_0[8 * a1] == *(_QWORD *)&aHorizontvertic_0[8 * a2]
    && *(_QWORD *)&aAl_0[8 * a1] == *(_QWORD *)&aAl_0[8 * a2])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_1B1036128();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100C348(char a1, char a2)
{
  char v3;

  if (qword_1B10481E0[a1] == qword_1B10481E0[a2] && qword_1B1048200[a1] == qword_1B1048200[a2])
    v3 = 1;
  else
    v3 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100C3CC(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  unint64_t v3;
  unint64_t v4;
  int v5;
  unint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0xD000000000000016;
    else
      v3 = 0x74616E6974736564;
    if (v2 == 1)
      v4 = 0x80000001B104C440;
    else
      v4 = 0xEB000000006E6F69;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0xD000000000000016;
      else
        v6 = 0x74616E6974736564;
      if (v5 == 1)
        v7 = 0x80000001B104C440;
      else
        v7 = 0xEB000000006E6F69;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xEB00000000646574;
    v3 = 0x6E65736572507369;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xEB00000000646574;
  if (v3 != 0x6E65736572507369)
  {
LABEL_21:
    v8 = sub_1B1036128();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B100C4F4(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x65746F6F466E6970;
  else
    v2 = 0x65646165486E6970;
  if ((a2 & 1) != 0)
    v3 = 0x65746F6F466E6970;
  else
    v3 = 0x65646165486E6970;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_1B1036128();
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1B100C57C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x694B6E6F69746361;
  else
    v3 = 0x6E6F69746361;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xEA0000000000646ELL;
  if ((a2 & 1) != 0)
    v5 = 0x694B6E6F69746361;
  else
    v5 = 0x6E6F69746361;
  if ((a2 & 1) != 0)
    v6 = 0xEA0000000000646ELL;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B100C61C(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aTitle_6[8 * a1] == *(_QWORD *)&aTitle_6[8 * a2] && qword_1B10481B8[a1] == qword_1B10481B8[a2])
    v3 = 1;
  else
    v3 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100C6A0(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aLeading_7[8 * a1] == *(_QWORD *)&aLeading_7[8 * a2]
    && *(_QWORD *)&aTrailing_7[8 * a1 + 8] == *(_QWORD *)&aTrailing_7[8 * a2 + 8])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_1B1036128();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100C724(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x737569646172;
  else
    v3 = 0x6570616873;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x737569646172;
  else
    v5 = 0x6570616873;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE500000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B100C7BC(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aGradientcenter_1[8 * a1] == *(_QWORD *)&aGradientcenter_1[8 * a2]
    && *(_QWORD *)&aStartangendang_0[8 * a1 + 16] == *(_QWORD *)&aStartangendang_0[8 * a2 + 16])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_1B1036128();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100C840(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aGradientcenter_2[8 * a1] == *(_QWORD *)&aGradientcenter_2[8 * a2]
    && *(_QWORD *)&aStartradendrad_0[8 * a1 + 16] == *(_QWORD *)&aStartradendrad_0[8 * a2 + 16])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_1B1036128();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100C8C4(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aGradientstartp_0[8 * a1] == *(_QWORD *)&aGradientstartp_0[8 * a2]
    && *(_QWORD *)&aGradientstartp_0[8 * a1 + 24] == *(_QWORD *)&aGradientstartp_0[8 * a2 + 24])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_1B1036128();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100C948(char a1, char a2)
{
  char v3;

  if (qword_1B1048070[a1] == qword_1B1048070[a2] && qword_1B1048088[a1] == qword_1B1048088[a2])
    v3 = 1;
  else
    v3 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100C9CC(char a1, char a2)
{
  char v3;

  if (qword_1B1048020[a1] == qword_1B1048020[a2] && qword_1B1048048[a1] == qword_1B1048048[a2])
    v3 = 1;
  else
    v3 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100CA50(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aPrimary_1[8 * a1] == *(_QWORD *)&aPrimary_1[8 * a2]
    && *(_QWORD *)&aSecondartertia[8 * a1 + 16] == *(_QWORD *)&aSecondartertia[8 * a2 + 16])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_1B1036128();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100CAD4(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x7465736E49706163;
  else
    v3 = 0x676E697A69736572;
  if (v2)
    v4 = 0xEC00000065646F4DLL;
  else
    v4 = 0xE900000000000073;
  if ((a2 & 1) != 0)
    v5 = 0x7465736E49706163;
  else
    v5 = 0x676E697A69736572;
  if ((a2 & 1) != 0)
    v6 = 0xE900000000000073;
  else
    v6 = 0xEC00000065646F4DLL;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B100CB80(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6E6F697461636F6CLL;
  else
    v3 = 0x726F6C6F63;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6E6F697461636F6CLL;
  else
    v5 = 0x726F6C6F63;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE500000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B100CC1C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 103;
    else
      v3 = 0x6F69736E656D6964;
    if (v2 == 1)
      v4 = 0xE100000000000000;
    else
      v4 = 0xED000079654B736ELL;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 103;
      else
        v6 = 0x6F69736E656D6964;
      if (v5 == 1)
        v7 = 0xE100000000000000;
      else
        v7 = 0xED000079654B736ELL;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v3 = 0x56657475706D6F63;
    v4 = 0xEC00000065756C61;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xEC00000065756C61;
  if (v3 != 0x56657475706D6F63)
  {
LABEL_21:
    v8 = sub_1B1036128();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B100CD44(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aRadius_4[8 * a1] == *(_QWORD *)&aRadius_4[8 * a2]
    && *(_QWORD *)&aLinewidt[8 * a1 + 8] == *(_QWORD *)&aLinewidt[8 * a2 + 8])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_1B1036128();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_1B100CDC8(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1B100CE14(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1B100CE98 + 4 * byte_1B104711D[a2]))(0x6974616D6F747561);
}

uint64_t sub_1B100CE98(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6974616D6F747561 && v1 == 0xE900000000000063)
    v2 = 1;
  else
    v2 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1B100CF60(char a1, char a2)
{
  char v3;

  if (qword_1B1047F90[a1] == qword_1B1047F90[a2] && qword_1B1047FA8[a1] == qword_1B1047FA8[a2])
    v3 = 1;
  else
    v3 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100CFE4(char a1, char a2)
{
  char v3;

  if (qword_1B1047F50[a1] == qword_1B1047F50[a2] && qword_1B1047F70[a1] == qword_1B1047F70[a2])
    v3 = 1;
  else
    v3 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100D068(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x61696C6169746E61;
  else
    v3 = 0x737569646172;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xEB00000000646573;
  if ((a2 & 1) != 0)
    v5 = 0x61696C6169746E61;
  else
    v5 = 0x737569646172;
  if ((a2 & 1) != 0)
    v6 = 0xEB00000000646573;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B100D10C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 121;
    else
      v3 = 1701667182;
    if (v2 == 1)
      v4 = 0xE100000000000000;
    else
      v4 = 0xE400000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 121;
      else
        v6 = 1701667182;
      if (v5 == 1)
        v7 = 0xE100000000000000;
      else
        v7 = 0xE400000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE100000000000000;
    v3 = 120;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE100000000000000;
  if (v3 != 120)
  {
LABEL_21:
    v8 = sub_1B1036128();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B100D1E4(char a1, char a2)
{
  char v3;

  if (qword_1B1047F10[a1] == qword_1B1047F10[a2] && qword_1B1047F30[a1] == qword_1B1047F30[a2])
    v3 = 1;
  else
    v3 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100D268(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aReferencsubref_0[8 * a1] == *(_QWORD *)&aReferencsubref_0[8 * a2]
    && *(_QWORD *)&aReferencsubref_0[8 * a1 + 24] == *(_QWORD *)&aReferencsubref_0[8 * a2 + 24])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_1B1036128();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100D2EC(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x7377656976;
  else
    v3 = 25705;
  if (v2)
    v4 = 0xE200000000000000;
  else
    v4 = 0xE500000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x7377656976;
  else
    v5 = 25705;
  if ((a2 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xE200000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B100D37C(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aEqualto_1[8 * a1] == *(_QWORD *)&aEqualto_1[8 * a2]
    && *(_QWORD *)&aNotequalgreate[8 * a1 + 24] == *(_QWORD *)&aNotequalgreate[8 * a2 + 24])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_1B1036128();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100D400(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aWidth_4[8 * a1] == *(_QWORD *)&aWidth_4[8 * a2]
    && *(_QWORD *)&aContentm_0[8 * a1 + 8] == *(_QWORD *)&aContentm_0[8 * a2 + 8])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_1B1036128();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100D484(char a1, char a2)
{
  char v3;

  if (qword_1B1047E60[a1] == qword_1B1047E60[a2] && qword_1B1047E80[a1] == qword_1B1047E80[a2])
    v3 = 1;
  else
    v3 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100D508(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x73726F6C6F63;
  else
    v3 = 0x73706F7473;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x73726F6C6F63;
  else
    v5 = 0x73706F7473;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE500000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B100D5A0(char a1, char a2)
{
  char v3;

  if (qword_1B1047E30[a1] == qword_1B1047E30[a2] && qword_1B1047E48[a1] == qword_1B1047E48[a2])
    v3 = 1;
  else
    v3 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100D624(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aAutomatibutton_0[8 * a1] == *(_QWORD *)&aAutomatibutton_0[8 * a2]
    && *(_QWORD *)&aC_1[8 * a1] == *(_QWORD *)&aC_1[8 * a2])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_1B1036128();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100D6A8(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aSize_3[8 * a1] == *(_QWORD *)&aSize_3[8 * a2] && qword_1B1047DE8[a1] == qword_1B1047DE8[a2])
    v3 = 1;
  else
    v3 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100D72C(char a1, char a2)
{
  char v3;

  if (qword_1B1047D90[a1] == qword_1B1047D90[a2] && qword_1B1047DB0[a1] == qword_1B1047DB0[a2])
    v3 = 1;
  else
    v3 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100D7B0(char a1, char a2)
{
  char v3;

  if (qword_1B1047D60[a1] == qword_1B1047D60[a2] && qword_1B1047D78[a1] == qword_1B1047D78[a2])
    v3 = 1;
  else
    v3 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100D834(char a1, char a2)
{
  char v3;

  if (qword_1B1047CE0[a1] == qword_1B1047CE0[a2] && qword_1B1047D20[a1] == qword_1B1047D20[a2])
    v3 = 1;
  else
    v3 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100D8B8(char a1, char a2)
{
  char v3;

  if (qword_1B1047C60[a1] == qword_1B1047C60[a2] && qword_1B1047CA0[a1] == qword_1B1047CA0[a2])
    v3 = 1;
  else
    v3 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100D93C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6C61636974726576;
  else
    v3 = 0x746E6F7A69726F68;
  if (v2)
    v4 = 0xEA00000000006C61;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6C61636974726576;
  else
    v5 = 0x746E6F7A69726F68;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xEA00000000006C61;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B100D9E0(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aMini_2[8 * a1] == *(_QWORD *)&aMini_2[8 * a2]
    && *(_QWORD *)&aExtralar_0[8 * a1 + 8] == *(_QWORD *)&aExtralar_0[8 * a2 + 8])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_1B1036128();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100DA64(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 7629158;
  else
    v3 = 1819044198;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE300000000000000;
  if ((a2 & 1) != 0)
    v5 = 7629158;
  else
    v5 = 1819044198;
  if ((a2 & 1) != 0)
    v6 = 0xE300000000000000;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B100DAF4(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x68637465727473;
  else
    v3 = 1701603700;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE700000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x68637465727473;
  else
    v5 = 1701603700;
  if ((a2 & 1) != 0)
    v6 = 0xE700000000000000;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B100DB8C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x7465537865646E69;
  else
    v3 = 0x736E6F69746361;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xEB0000000079654BLL;
  if ((a2 & 1) != 0)
    v5 = 0x7465537865646E69;
  else
    v5 = 0x736E6F69746361;
  if ((a2 & 1) != 0)
    v6 = 0xEB0000000079654BLL;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B100DC34(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aActions_9[8 * a1] == *(_QWORD *)&aActions_9[8 * a2]
    && *(_QWORD *)&aOldvaluenewval_0[8 * a1 + 16] == *(_QWORD *)&aOldvaluenewval_0[8 * a2 + 16])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_1B1036128();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100DCB8(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x616E6F6974636964;
  else
    v3 = 7955819;
  if (v2)
    v4 = 0xE300000000000000;
  else
    v4 = 0xEA00000000007972;
  if ((a2 & 1) != 0)
    v5 = 0x616E6F6974636964;
  else
    v5 = 7955819;
  if ((a2 & 1) != 0)
    v6 = 0xEA00000000007972;
  else
    v6 = 0xE300000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B100DD54(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6E656D6563616C70;
  else
    v3 = 0x746E65746E6F63;
  if (v2)
    v4 = 0xE700000000000000;
  else
    v4 = 0xE900000000000074;
  if ((a2 & 1) != 0)
    v5 = 0x6E656D6563616C70;
  else
    v5 = 0x746E65746E6F63;
  if ((a2 & 1) != 0)
    v6 = 0xE900000000000074;
  else
    v6 = 0xE700000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B100DDF8(char a1, char a2)
{
  char v3;

  if (qword_1B1047B90[a1] == qword_1B1047B90[a2] && qword_1B1047BA8[a1] == qword_1B1047BA8[a2])
    v3 = 1;
  else
    v3 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100DE7C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6874676E656CLL;
  else
    v3 = 0x7365676465;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6874676E656CLL;
  else
    v5 = 0x7365676465;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE500000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B100DF14(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6F697469646E6F63;
  else
    v3 = 0x726F74617265706FLL;
  if (v2)
    v4 = 0xE800000000000000;
  else
    v4 = 0xE90000000000006ELL;
  if ((a2 & 1) != 0)
    v5 = 0x6F697469646E6F63;
  else
    v5 = 0x726F74617265706FLL;
  if ((a2 & 1) != 0)
    v6 = 0xE90000000000006ELL;
  else
    v6 = 0xE800000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B100DFB8(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aAutomaticolumn[8 * a1] == *(_QWORD *)&aAutomaticolumn[8 * a2]
    && *(_QWORD *)&aC_0[8 * a1] == *(_QWORD *)&aC_0[8 * a2])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_1B1036128();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100E03C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x726F6C6F63;
  else
    v3 = 25705;
  if (v2)
    v4 = 0xE200000000000000;
  else
    v4 = 0xE500000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x726F6C6F63;
  else
    v5 = 25705;
  if ((a2 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xE200000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1B100E0CC(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1B100E118(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1B100E198 + 4 * byte_1B1047127[a2]))(0x6465726564726F62);
}

uint64_t sub_1B100E198(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6465726564726F62 && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1B100E25C(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aBody_4[8 * a1] == *(_QWORD *)&aBody_4[8 * a2] && qword_1B1047B48[a1] == qword_1B1047B48[a2])
    v3 = 1;
  else
    v3 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_1B100E2E0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1B100E318(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1B100E368 + 4 * byte_1B1047130[a2]))(0x726F6C6F63);
}

uint64_t sub_1B100E368(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x726F6C6F63 && v1 == 0xE500000000000000)
    v2 = 1;
  else
    v2 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1B100E3F8(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aActions_10[8 * a1] == *(_QWORD *)&aActions_10[8 * a2]
    && *(_QWORD *)&aIndexsetoffset_2[8 * a1 + 16] == *(_QWORD *)&aIndexsetoffset_2[8 * a2 + 16])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_1B1036128();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100E47C(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 2003134838;
  else
    v3 = 25705;
  if (v2)
    v4 = 0xE200000000000000;
  else
    v4 = 0xE400000000000000;
  if ((a2 & 1) != 0)
    v5 = 2003134838;
  else
    v5 = 25705;
  if ((a2 & 1) != 0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE200000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B100E508(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 29295;
  else
    v3 = 6581857;
  if (v2)
    v4 = 0xE300000000000000;
  else
    v4 = 0xE200000000000000;
  if ((a2 & 1) != 0)
    v5 = 29295;
  else
    v5 = 6581857;
  if ((a2 & 1) != 0)
    v6 = 0xE200000000000000;
  else
    v6 = 0xE300000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B100E594(char a1, char a2)
{
  char v3;

  if (qword_1B1047F50[a1] == qword_1B1047F50[a2] && qword_1B1047F70[a1] == qword_1B1047F70[a2])
    v3 = 1;
  else
    v3 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100E618(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x6874646977;
  else
    v2 = 0x726F6C6F63;
  if ((a2 & 1) != 0)
    v3 = 0x6874646977;
  else
    v3 = 0x726F6C6F63;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_1B1036128();
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1B100E68C(char a1, char a2)
{
  char v3;

  if (qword_1B1047AB0[a1] == qword_1B1047AB0[a2] && qword_1B1047AD8[a1] == qword_1B1047AD8[a2])
    v3 = 1;
  else
    v3 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100E710(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aIspresenconten_0[8 * a1] == *(_QWORD *)&aIspresenconten_0[8 * a2]
    && *(_QWORD *)&aOndismisted_0[8 * a1 + 8] == *(_QWORD *)&aOndismisted_0[8 * a2 + 8])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_1B1036128();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100E794(char a1, char a2)
{
  char v3;

  if (qword_1B1047A40[a1] == qword_1B1047A40[a2] && qword_1B1047A60[a1] == qword_1B1047A60[a2])
    v3 = 1;
  else
    v3 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100E818(char a1, char a2)
{
  char v2;

  if (qword_1B1047A18[a1] == qword_1B1047A18[a2])
    v2 = 1;
  else
    v2 = sub_1B1036128();
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_1B100E87C(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aWidth_5[8 * a1] == *(_QWORD *)&aWidth_5[8 * a2]
    && *(_QWORD *)&aAlignmenminwid[8 * a1 + 56] == *(_QWORD *)&aAlignmenminwid[8 * a2 + 56])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_1B1036128();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100E900(char a1, char a2)
{
  char v3;

  if (qword_1B10479A8[a1] == qword_1B10479A8[a2] && qword_1B10479E0[a1] == qword_1B10479E0[a2])
    v3 = 1;
  else
    v3 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100E984(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aCenter_4[8 * a1] == *(_QWORD *)&aCenter_4[8 * a2]
    && *(_QWORD *)&aTopleaditoptra_0[8 * a1 + 32] == *(_QWORD *)&aTopleaditoptra_0[8 * a2 + 32])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_1B1036128();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100EA08(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aTitle_7[8 * a1] == *(_QWORD *)&aTitle_7[8 * a2] && qword_1B1047988[a1] == qword_1B1047988[a2])
    v3 = 1;
  else
    v3 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100EA8C(char a1, char a2)
{
  char v3;

  if (qword_1B1047938[a1] == qword_1B1047938[a2] && qword_1B1047950[a1] == qword_1B1047950[a2])
    v3 = 1;
  else
    v3 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100EB10(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6D6574737973;
  else
    v3 = 0x656C797473;
  if (v2)
    v4 = 0xE500000000000000;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x6D6574737973;
  else
    v5 = 0x656C797473;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE500000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B100EBA8(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x7961727261;
  else
    v3 = 0x7465537865646E69;
  if (v2)
    v4 = 0xE800000000000000;
  else
    v4 = 0xE500000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x7961727261;
  else
    v5 = 0x7465537865646E69;
  if ((a2 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xE800000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B100EC44(char a1, char a2)
{
  char v3;

  if (qword_1B1047B90[a1] == qword_1B1047B90[a2] && qword_1B1047BA8[a1] == qword_1B1047BA8[a2])
    v3 = 1;
  else
    v3 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100ECC8(char a1, char a2)
{
  char v3;

  if (qword_1B10478F8[a1] == qword_1B10478F8[a2] && qword_1B1047918[a1] == qword_1B1047918[a2])
    v3 = 1;
  else
    v3 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100ED4C(char a1, char a2)
{
  char v3;

  if (qword_1B10478B8[a1] == qword_1B10478B8[a2] && qword_1B10478D8[a1] == qword_1B10478D8[a2])
    v3 = 1;
  else
    v3 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100EDD0(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x656C797473;
  else
    v3 = 25705;
  if (v2)
    v4 = 0xE200000000000000;
  else
    v4 = 0xE500000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x656C797473;
  else
    v5 = 25705;
  if ((a2 & 1) != 0)
    v6 = 0xE500000000000000;
  else
    v6 = 0xE200000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B100EE60(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x656C646E7562;
  else
    v3 = 1701667182;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x656C646E7562;
  else
    v5 = 1701667182;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B100EEF4(char a1, char a2)
{
  char v3;

  if (qword_1B10478A0[a1] == qword_1B10478A0[a2] && qword_1B1048308[a1] == qword_1B1048308[a2])
    v3 = 1;
  else
    v3 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_1B100EF78(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1B100EFC4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1B100F03C + 4 * byte_1B1047139[a2]))(25705);
}

uint64_t sub_1B100F03C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 25705 && v1 == 0xE200000000000000)
    v2 = 1;
  else
    v2 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1B100F0FC(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x74676E654C6E696DLL;
  else
    v3 = 25705;
  if (v2)
    v4 = 0xE200000000000000;
  else
    v4 = 0xE900000000000068;
  if ((a2 & 1) != 0)
    v5 = 0x74676E654C6E696DLL;
  else
    v5 = 25705;
  if ((a2 & 1) != 0)
    v6 = 0xE900000000000068;
  else
    v6 = 0xE200000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1B100F194(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aData_5[8 * a1] == *(_QWORD *)&aData_5[8 * a2]
    && *(_QWORD *)&aViewandd_1[8 * a1 + 8] == *(_QWORD *)&aViewandd_1[8 * a2 + 8])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_1B1036128();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100F218(char a1, char a2)
{
  char v3;

  if (qword_1B1047820[a1] == qword_1B1047820[a2] && qword_1B1047848[a1] == qword_1B1047848[a2])
    v3 = 1;
  else
    v3 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100F29C(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aIndexsetoffset[8 * a1] == *(_QWORD *)&aIndexsetoffset[8 * a2]
    && qword_1B1047808[a1] == qword_1B1047808[a2])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_1B1036128();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100F320(char a1, char a2)
{
  char v3;

  if (*(_QWORD *)&aConditiothen_0[8 * a1] == *(_QWORD *)&aConditiothen_0[8 * a2]
    && *(_QWORD *)&aN_0[8 * a1] == *(_QWORD *)&aN_0[8 * a2])
  {
    v3 = 1;
  }
  else
  {
    v3 = sub_1B1036128();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100F3A4(char a1, char a2)
{
  char v3;

  if (qword_1B10477B0[a1] == qword_1B10477B0[a2] && qword_1B10477D0[a1] == qword_1B10477D0[a2])
    v3 = 1;
  else
    v3 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100F428(char a1, char a2)
{
  char v3;

  if (qword_1B1047780[a1] == qword_1B1047780[a2] && qword_1B1047798[a1] == qword_1B1047798[a2])
    v3 = 1;
  else
    v3 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1B100F4AC()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B100F514()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B100F57C()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B100F5EC()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

void sub_1B100F654(char a1)
{
  sub_1B103620C();
  __asm { BR              X10 }
}

uint64_t sub_1B100F6A8()
{
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B100F734()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B100F7B8()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B100F83C()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B100F8A4()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B100F928()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B100F990()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B100FA10()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B100FA8C()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B100FB04()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B100FB6C()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B100FBD4()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B100FC3C()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B100FCA4()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B100FD1C()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B100FD88()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B100FDF0()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B100FE58()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B100FEC0()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B100FF28()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B100FF90()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B100FFF8()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1010074()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10100DC()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1010154()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10101B0()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1010218()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10102C0()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1010330()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1010398()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1010400()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1010468()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10104D8()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1010544()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10105AC()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B101061C()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1010694()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10106FC()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1010788()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10107F0()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1010858()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10108C0()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

void sub_1B1010928(char a1)
{
  sub_1B103620C();
  __asm { BR              X10 }
}

uint64_t sub_1B101097C()
{
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1010A0C()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

void sub_1B1010A84(char a1)
{
  sub_1B103620C();
  __asm { BR              X10 }
}

uint64_t sub_1B1010AC8()
{
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1010B20()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1010BD4()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1010C3C()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1010CA4()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1010D0C()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1010D74()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1010DFC()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1010E64()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1010EDC()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1010F5C()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1010FC4()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B101102C()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1011094()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10110FC()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

void sub_1B1011164(char a1)
{
  sub_1B103620C();
  __asm { BR              X10 }
}

uint64_t sub_1B10111B8()
{
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B101123C()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10112A4()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B101130C()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1011378()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10113FC()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1011464()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10114E8()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1011550()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

void sub_1B10115CC(char a1)
{
  sub_1B103620C();
  __asm { BR              X10 }
}

uint64_t sub_1B1011610()
{
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1011660()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10116D4()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1011740()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10117A8()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1011810()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B101188C()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10118F4()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B101195C()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10119D8()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1011A40()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1011AA8()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1011B10()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

void sub_1B1011B68(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1B1011B9C()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1011BD8()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1011C2C()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1011C70()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1011CB4()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1011CF4()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1011D34()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1011D74()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1011DB4()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1011DF4()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1011E80()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1011ECC()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1011F24()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1011F64()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1011FA4()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1011FF4()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1012034()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1012074()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B10120B4()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B10120F4()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1012134()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1012174()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B10121D8()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B101222C()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B10122AC()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

void sub_1B10122EC(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1B1012330()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B10123AC()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B10123EC()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B101242C()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1012488()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B10124E0()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1012520()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1012560()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B10125A8()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B10125E8()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1012628()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1012668()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B10126B8()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B10126F8()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1012738()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1012778()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B10127B8()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B10127F8()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1012838()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1012878()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B10128D4()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1012914()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B101295C()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B10129AC()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1012A0C()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1012A4C()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1012AA0()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1012AFC()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1012B3C()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1012B8C()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1012BE8()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1012C28()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

void sub_1B1012C70(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1B1012CB4()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1012D2C()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

void sub_1B1012D6C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1B1012DA0()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1012DE4()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1012E24()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1012E68()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1012EAC()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1012EEC()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1012F28()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1012F68()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1012FA8()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1012FE8()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1013014()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1013054()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1013094()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B10130D4()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1013114()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1013154()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B10131A4()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B10131F8()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1013238()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1013278()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B10132B8()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1013300()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B101334C()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

void sub_1B101338C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1B10133D0()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1013440()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1013490()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B10134D0()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1013510()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1013550()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1013590()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B10135D0()
{
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B1013610()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1013674()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10136D8()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B101373C()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10137A0()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1013804()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1013868()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

void sub_1B10138DC(uint64_t a1, char a2)
{
  sub_1B103620C();
  __asm { BR              X10 }
}

uint64_t sub_1B101392C()
{
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10139B0()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1013A14()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1013A84()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1013AF0()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1013B54()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1013BB8()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1013C1C()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1013C94()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1013D08()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1013D6C()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1013DD0()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1013E34()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1013E98()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1013EF0()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1013F54()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1013FB8()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B101401C()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1014084()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10140E8()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1014150()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10141B8()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

void sub_1B101421C(uint64_t a1, char a2)
{
  sub_1B103620C();
  __asm { BR              X10 }
}

uint64_t sub_1B101425C()
{
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10142B4()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

void sub_1B1014318(uint64_t a1, char a2)
{
  sub_1B103620C();
  __asm { BR              X10 }
}

uint64_t sub_1B1014368()
{
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10143F8()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B101445C()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10144DC()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1014550()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10145D0()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1014648()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10146AC()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1014730()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10147A4()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1014808()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1014874()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10148D8()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1014958()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10149BC()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1014A20()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1014A84()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1014AE8()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1014B4C()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1014BB0()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1014C24()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1014C88()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1014CEC()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1014D54()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1014DB8()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1014E1C()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1014E98()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1014F18()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1014F7C()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

void sub_1B1014FE0(uint64_t a1, char a2)
{
  sub_1B103620C();
  __asm { BR              X10 }
}

uint64_t sub_1B1015030()
{
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10150C0()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1015124()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10151C8()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1015240()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10152C8()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B101532C()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1015390()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10153F4()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1015458()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10154BC()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1015520()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1015594()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10155F8()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B101565C()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10156D8()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1015750()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1015800()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1015864()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10158C8()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B101592C()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1015990()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B10159F4()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1015A60()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1015AC4()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1015B30()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1015B94()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

void sub_1B1015C0C(uint64_t a1, char a2)
{
  sub_1B103620C();
  __asm { BR              X10 }
}

uint64_t sub_1B1015C4C()
{
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B1015C9C()
{
  sub_1B103620C();
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

void sub_1B1015D18(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t sub_1B1015D50()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v5;

  if ((~v1 & 0xF000000000000007) != 0)
  {
    v5 = v1;
    if ((~v0 & 0xF000000000000007) != 0)
    {
      sub_1B0FCC934(v1);
      sub_1B0FCC934(v1);
      _s6LiftUI14DecodableStateO2eeoiySbAC_ACtFZ_0((uint64_t)&v5);
      v2 = v3;
      swift_release();
      sub_1B0FC9D10(v1);
      return v2 & 1;
    }
    swift_retain();
    goto LABEL_6;
  }
  if ((~v0 & 0xF000000000000007) != 0)
  {
LABEL_6:
    sub_1B0FCC934(v0);
    sub_1B0FC9D10(v1);
    sub_1B0FC9D10(v0);
    v2 = 0;
    return v2 & 1;
  }
  v2 = 1;
  return v2 & 1;
}

uint64_t sub_1B101608C(char a1)
{
  return *(_QWORD *)&aEqualto_1[8 * a1];
}

uint64_t sub_1B10160AC(char a1)
{
  if ((a1 & 1) != 0)
    return 29295;
  else
    return 6581857;
}

uint64_t sub_1B10160D0(char *a1, char *a2)
{
  return sub_1B100D37C(*a1, *a2);
}

uint64_t sub_1B10160DC()
{
  return sub_1B10112A4();
}

uint64_t sub_1B10160E4()
{
  return sub_1B10125A8();
}

uint64_t sub_1B10160EC()
{
  return sub_1B1014CEC();
}

uint64_t sub_1B10160F4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1017688();
  *a1 = result;
  return result;
}

uint64_t sub_1B1016120@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B101608C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B1016148(char *a1, char *a2)
{
  return sub_1B100E508(*a1, *a2);
}

uint64_t sub_1B1016154()
{
  return sub_1B101130C();
}

uint64_t sub_1B101615C()
{
  return sub_1B1012E68();
}

uint64_t sub_1B1016164()
{
  return sub_1B10140E8();
}

uint64_t sub_1B101616C@<X0>(char *a1@<X8>)
{
  return sub_1B0F7BF1C(a1);
}

uint64_t sub_1B1016178@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B10160AC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B10161A0()
{
  sub_1B1017ABC();
  return sub_1B1035CB4();
}

uint64_t sub_1B10161FC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6F697469646E6F63;
  else
    return 0x726F74617265706FLL;
}

uint64_t sub_1B1016238(char *a1, char *a2)
{
  return sub_1B100DF14(*a1, *a2);
}

uint64_t sub_1B1016244()
{
  return sub_1B1011378();
}

uint64_t sub_1B101624C()
{
  return sub_1B1012B8C();
}

uint64_t sub_1B1016254()
{
  return sub_1B101445C();
}

uint64_t sub_1B101625C@<X0>(char *a1@<X8>)
{
  return sub_1B0F7BF1C(a1);
}

uint64_t sub_1B1016268@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B10161FC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B1016290()
{
  char *v0;

  return sub_1B10161FC(*v0);
}

uint64_t sub_1B1016298@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1B103605C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1B10162F8()
{
  sub_1B1017600();
  return sub_1B10362B4();
}

uint64_t sub_1B1016320()
{
  sub_1B1017600();
  return sub_1B10362C0();
}

uint64_t sub_1B1016348@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_1B101747C(a1);
  if (!v2)
  {
    *(_BYTE *)a2 = result & 1;
    *(_QWORD *)(a2 + 8) = v5;
  }
  return result;
}

uint64_t sub_1B1016378(char a1)
{
  return qword_1B1048360[a1];
}

uint64_t sub_1B1016398(char *a1, char *a2)
{
  return sub_1B100C0B0(*a1, *a2);
}

uint64_t sub_1B10163A4()
{
  return sub_1B10113FC();
}

uint64_t sub_1B10163AC()
{
  return sub_1B1011C70();
}

uint64_t sub_1B10163B4()
{
  return sub_1B1015A60();
}

uint64_t sub_1B10163BC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1017A74();
  *a1 = result;
  return result;
}

uint64_t sub_1B10163E8@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B1016378(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B1016410()
{
  char *v0;

  return sub_1B1016378(*v0);
}

uint64_t sub_1B1016418@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1017A74();
  *a1 = result;
  return result;
}

uint64_t sub_1B101643C()
{
  sub_1B1016DD4();
  return sub_1B10362B4();
}

uint64_t sub_1B1016464()
{
  sub_1B1016DD4();
  return sub_1B10362C0();
}

uint64_t sub_1B101648C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  __int128 v22;
  char v23;
  uint64_t v24;
  _QWORD v25[2];
  _QWORD *v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  unsigned __int8 v30;
  char v31;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE12A0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + 80) = 0;
  *(_QWORD *)(v1 + 88) = 0;
  v26 = a1;
  v27 = v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v8 = sub_1B1016DD4();
  sub_1B1036278();
  if (v2)
  {
    v9 = v26;
    v10 = v27;
LABEL_4:
    swift_release();
    type metadata accessor for Condition();
    swift_deallocPartialClassInstance();
    goto LABEL_5;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDEA40);
  v31 = 0;
  sub_1B1016E18();
  sub_1B10360BC();
  v12 = v29;
  v13 = v30;
  v14 = v27;
  *(_OWORD *)(v27 + 16) = v28;
  *(_QWORD *)(v14 + 32) = v12;
  *(_BYTE *)(v14 + 40) = v13;
  v31 = 1;
  sub_1B10360A4();
  v15 = v30;
  if (v30 == 255)
  {
    v31 = 2;
    sub_1B10360A4();
    v15 = v30;
    if (v30 == 255)
    {
      v31 = 3;
      sub_1B10360A4();
      v15 = v30;
      if (v30 == 255)
      {
        v31 = 4;
        sub_1B10360A4();
        v15 = v30;
        if (v30 == 255)
        {
          v16 = sub_1B1035F60();
          swift_allocError();
          v18 = v17;
          v25[1] = v17 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF980) + 48);
          *(_QWORD *)(v18 + 24) = &type metadata for Condition.CodingKeys;
          *(_QWORD *)(v18 + 32) = v8;
          *(_BYTE *)v18 = 1;
          v9 = v26;
          v19 = v26[3];
          v25[0] = v26[4];
          __swift_project_boxed_opaque_existential_1(v26, v19);
          v10 = v27;
          sub_1B1036248();
          sub_1B1035F30();
          (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v16 - 8) + 104))(v18, *MEMORY[0x1E0DEC448], v16);
          swift_willThrow();
          (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
          sub_1B0F74EA4(*(_QWORD *)(v10 + 16), *(_QWORD *)(v10 + 24), *(_QWORD *)(v10 + 32), *(_BYTE *)(v10 + 40));
          goto LABEL_4;
        }
        v21 = v29;
        v22 = v28;
        v20 = 3;
      }
      else
      {
        v21 = v29;
        v22 = v28;
        v20 = 2;
      }
    }
    else
    {
      v21 = v29;
      v22 = v28;
      v20 = 1;
    }
  }
  else
  {
    v20 = 0;
    v21 = v29;
    v22 = v28;
  }
  *(_BYTE *)(v14 + 41) = v20;
  *(_OWORD *)(v14 + 48) = v22;
  *(_QWORD *)(v14 + 64) = v21;
  *(_BYTE *)(v14 + 72) = v15 & 1;
  LOBYTE(v28) = 5;
  v23 = sub_1B10360D4();
  v9 = v26;
  if ((v23 & 1) != 0)
  {
    v31 = 5;
    sub_1B1016E64();
    sub_1B10360BC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v24 = *((_QWORD *)&v28 + 1);
    v10 = v27;
    *(_QWORD *)(v27 + 80) = v28;
    *(_QWORD *)(v10 + 88) = v24;
    swift_release();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v10 = v27;
  }
LABEL_5:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  return v10;
}

uint64_t sub_1B10168FC(uint64_t a1)
{
  uint64_t v1;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  char v17;
  uint64_t v18[2];
  uint64_t v19;

  v3 = *(_BYTE *)(v1 + 41);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 40);
  sub_1B0F5A84C(v4, v5, v6, v7);
  sub_1B0FD6EFC(a1, v4, v5, v6, v7, &v19);
  sub_1B0F74EA4(v4, v5, v6, v7);
  v8 = v19;
  v9 = *(_QWORD *)(v1 + 48);
  v10 = *(_QWORD *)(v1 + 56);
  v11 = *(_QWORD *)(v1 + 64);
  v12 = *(_BYTE *)(v1 + 72);
  sub_1B0F5A84C(v9, v10, v11, v12);
  sub_1B0FD6EFC(a1, v9, v10, v11, v12, v18);
  sub_1B0F74EA4(v9, v10, v11, v12);
  v13 = v18[0];
  sub_1B1015D18((uint64_t)&v19, (uint64_t)v18, v3);
  v15 = v14;
  sub_1B0FC9D10(v13);
  sub_1B0FC9D10(v8);
  if (!*(_QWORD *)(v1 + 88))
    return v15 & 1;
  if ((*(_BYTE *)(v1 + 80) & 1) != 0)
  {
    if ((v15 & 1) != 0)
    {
      v15 = 1;
      return v15 & 1;
    }
  }
  else if ((v15 & 1) == 0)
  {
    v15 = 0;
    return v15 & 1;
  }
  swift_retain();
  v17 = sub_1B10168FC(a1);
  swift_release();
  return v17 & 1;
}

uint64_t sub_1B1016AC0()
{
  uint64_t v0;

  sub_1B0F74EA4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  sub_1B0F74EA4(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_BYTE *)(v0 + 72));
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Condition()
{
  return objc_opt_self();
}

uint64_t initializeBufferWithCopyOfBuffer for LogicalOperator(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t destroy for LogicalOperator()
{
  return swift_release();
}

uint64_t assignWithCopy for LogicalOperator(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for LogicalOperator(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LogicalOperator(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LogicalOperator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LogicalOperator()
{
  return &type metadata for LogicalOperator;
}

uint64_t storeEnumTagSinglePayload for ComparisonOperation(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1B1016CB8 + 4 * byte_1B104718C[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1B1016CEC + 4 * byte_1B1047187[v4]))();
}

uint64_t sub_1B1016CEC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1016CF4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1016CFCLL);
  return result;
}

uint64_t sub_1B1016D08(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1016D10);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1B1016D14(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1016D1C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ComparisonOperation()
{
  return &type metadata for ComparisonOperation;
}

unint64_t sub_1B1016D3C()
{
  unint64_t result;

  result = qword_1EEEE1298;
  if (!qword_1EEEE1298)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104727C, &type metadata for ComparisonOperation);
    atomic_store(result, (unint64_t *)&qword_1EEEE1298);
  }
  return result;
}

uint64_t sub_1B1016D80@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  type metadata accessor for Condition();
  v5 = swift_allocObject();
  result = sub_1B101648C(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

unint64_t sub_1B1016DD4()
{
  unint64_t result;

  result = qword_1EEEE12A8;
  if (!qword_1EEEE12A8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1047608, &type metadata for Condition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE12A8);
  }
  return result;
}

unint64_t sub_1B1016E18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEEDEB48;
  if (!qword_1EEEDEB48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEDEA40);
    result = MEMORY[0x1B5E15188](&protocol conformance descriptor for Referenceable<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EEEDEB48);
  }
  return result;
}

unint64_t sub_1B1016E64()
{
  unint64_t result;

  result = qword_1EEEE12B0;
  if (!qword_1EEEE12B0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10472A4, &type metadata for LogicalOperator);
    atomic_store(result, (unint64_t *)&qword_1EEEE12B0);
  }
  return result;
}

uint64_t sub_1B1016EA8()
{
  return sub_1B1017068();
}

uint64_t sub_1B1016EB4()
{
  return sub_1B1017068();
}

uint64_t sub_1B1016ECC()
{
  return sub_1B1017068();
}

uint64_t sub_1B1016EE4()
{
  return sub_1B1017068();
}

uint64_t sub_1B1016F00()
{
  return sub_1B1017068();
}

uint64_t sub_1B1016F20()
{
  return sub_1B1017068();
}

uint64_t sub_1B1016F38()
{
  return sub_1B1017068();
}

uint64_t sub_1B1016F50()
{
  return sub_1B1017068();
}

uint64_t sub_1B1016F64()
{
  return sub_1B1017068();
}

uint64_t sub_1B1016F80()
{
  return sub_1B1017068();
}

uint64_t sub_1B1016F94()
{
  return sub_1B1017068();
}

uint64_t sub_1B1016FA4()
{
  return sub_1B1017068();
}

uint64_t sub_1B1016FC8()
{
  return sub_1B1017068();
}

uint64_t sub_1B1016FDC()
{
  return sub_1B1017068();
}

uint64_t sub_1B1016FF0()
{
  return sub_1B1017068();
}

uint64_t sub_1B1017014()
{
  return sub_1B1017068();
}

uint64_t sub_1B101702C()
{
  return sub_1B1017068();
}

uint64_t sub_1B1017048()
{
  return sub_1B1017068();
}

uint64_t sub_1B1017068()
{
  sub_1B103620C();
  sub_1B1035C00();
  return sub_1B103623C();
}

uint64_t sub_1B10170B0()
{
  return sub_1B1035C00();
}

uint64_t sub_1B10170BC()
{
  return sub_1B1035C00();
}

uint64_t sub_1B10170D4()
{
  return sub_1B1035C00();
}

uint64_t sub_1B10170EC()
{
  return sub_1B1035C00();
}

uint64_t sub_1B1017108()
{
  return sub_1B1035C00();
}

uint64_t sub_1B1017128()
{
  return sub_1B1035C00();
}

uint64_t sub_1B1017140()
{
  return sub_1B1035C00();
}

uint64_t sub_1B1017158()
{
  return sub_1B1035C00();
}

uint64_t sub_1B101716C()
{
  return sub_1B1035C00();
}

uint64_t sub_1B1017188()
{
  return sub_1B1035C00();
}

uint64_t sub_1B101719C()
{
  return sub_1B1035C00();
}

uint64_t sub_1B10171AC()
{
  return sub_1B1035C00();
}

uint64_t sub_1B10171D0()
{
  return sub_1B1035C00();
}

uint64_t sub_1B10171E4()
{
  return sub_1B1035C00();
}

uint64_t sub_1B10171F8()
{
  return sub_1B1035C00();
}

uint64_t sub_1B101721C()
{
  return sub_1B1035C00();
}

uint64_t sub_1B1017234()
{
  return sub_1B1035C00();
}

uint64_t sub_1B1017250()
{
  return sub_1B1035C00();
}

uint64_t sub_1B1017270()
{
  return sub_1B1017430();
}

uint64_t sub_1B101727C()
{
  return sub_1B1017430();
}

uint64_t sub_1B1017290()
{
  return sub_1B1017430();
}

uint64_t sub_1B10172B0()
{
  return sub_1B1017430();
}

uint64_t sub_1B10172C0()
{
  return sub_1B1017430();
}

uint64_t sub_1B10172D8()
{
  return sub_1B1017430();
}

uint64_t sub_1B10172F0()
{
  return sub_1B1017430();
}

uint64_t sub_1B1017308()
{
  return sub_1B1017430();
}

uint64_t sub_1B101732C()
{
  return sub_1B1017430();
}

uint64_t sub_1B1017340()
{
  return sub_1B1017430();
}

uint64_t sub_1B101735C()
{
  return sub_1B1017430();
}

uint64_t sub_1B1017370()
{
  return sub_1B1017430();
}

uint64_t sub_1B1017394()
{
  return sub_1B1017430();
}

uint64_t sub_1B10173A8()
{
  return sub_1B1017430();
}

uint64_t sub_1B10173C4()
{
  return sub_1B1017430();
}

uint64_t sub_1B10173DC()
{
  return sub_1B1017430();
}

uint64_t sub_1B10173F4()
{
  return sub_1B1017430();
}

uint64_t sub_1B1017410()
{
  return sub_1B1017430();
}

uint64_t sub_1B1017430()
{
  sub_1B103620C();
  sub_1B1035C00();
  return sub_1B103623C();
}

uint64_t sub_1B101747C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE v8[32];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE12B8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B1017600();
  sub_1B1036278();
  v8[30] = 0;
  sub_1B1017644();
  sub_1B10360BC();
  v6 = v8[31];
  type metadata accessor for Condition();
  v8[15] = 1;
  sub_1B0FCDB98();
  sub_1B10360BC();
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v6;
}

unint64_t sub_1B1017600()
{
  unint64_t result;

  result = qword_1EEEE12C0;
  if (!qword_1EEEE12C0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10475B8, &type metadata for LogicalOperator.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE12C0);
  }
  return result;
}

unint64_t sub_1B1017644()
{
  unint64_t result;

  result = qword_1EEEE12C8;
  if (!qword_1EEEE12C8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1047590, &type metadata for LogicOperation);
    atomic_store(result, (unint64_t *)&qword_1EEEE12C8);
  }
  return result;
}

uint64_t sub_1B1017688()
{
  unint64_t v0;

  v0 = sub_1B103605C();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

ValueMetadata *type metadata accessor for LogicalOperator.CodingKeys()
{
  return &type metadata for LogicalOperator.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for Condition.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1B1017730 + 4 * byte_1B1047196[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1B1017764 + 4 * byte_1B1047191[v4]))();
}

uint64_t sub_1B1017764(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B101776C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1017774);
  return result;
}

uint64_t sub_1B1017780(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1017788);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1B101778C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1017794(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Condition.CodingKeys()
{
  return &type metadata for Condition.CodingKeys;
}

uint64_t _s6LiftUI14LogicOperationOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B10177FC + 4 * byte_1B10471A0[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B1017830 + 4 * byte_1B104719B[v4]))();
}

uint64_t sub_1B1017830(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1017838(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1017840);
  return result;
}

uint64_t sub_1B101784C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1017854);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B1017858(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1017860(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LogicOperation()
{
  return &type metadata for LogicOperation;
}

unint64_t sub_1B1017880()
{
  unint64_t result;

  result = qword_1EEEE12D0;
  if (!qword_1EEEE12D0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1047388, &type metadata for LogicOperation);
    atomic_store(result, (unint64_t *)&qword_1EEEE12D0);
  }
  return result;
}

unint64_t sub_1B10178C8()
{
  unint64_t result;

  result = qword_1EEEE12D8;
  if (!qword_1EEEE12D8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1047478, &type metadata for Condition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE12D8);
  }
  return result;
}

unint64_t sub_1B1017910()
{
  unint64_t result;

  result = qword_1EEEE12E0;
  if (!qword_1EEEE12E0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1047568, &type metadata for LogicalOperator.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE12E0);
  }
  return result;
}

unint64_t sub_1B1017958()
{
  unint64_t result;

  result = qword_1EEEE12E8;
  if (!qword_1EEEE12E8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10474A0, &type metadata for LogicalOperator.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE12E8);
  }
  return result;
}

unint64_t sub_1B10179A0()
{
  unint64_t result;

  result = qword_1EEEE12F0;
  if (!qword_1EEEE12F0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10474C8, &type metadata for LogicalOperator.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE12F0);
  }
  return result;
}

unint64_t sub_1B10179E8()
{
  unint64_t result;

  result = qword_1EEEE12F8;
  if (!qword_1EEEE12F8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10473B0, &type metadata for Condition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE12F8);
  }
  return result;
}

unint64_t sub_1B1017A30()
{
  unint64_t result;

  result = qword_1EEEE1300;
  if (!qword_1EEEE1300)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10473D8, &type metadata for Condition.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1300);
  }
  return result;
}

uint64_t sub_1B1017A74()
{
  unint64_t v0;

  v0 = sub_1B103605C();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

unint64_t sub_1B1017ABC()
{
  unint64_t result;

  result = qword_1EEEE1308;
  if (!qword_1EEEE1308)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1047310, &type metadata for LogicOperation);
    atomic_store(result, (unint64_t *)&qword_1EEEE1308);
  }
  return result;
}

uint64_t initializeWithCopy for CornerRadiusModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_1B0F6C708(*(_QWORD *)a2, v5, v6, v7);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  return a1;
}

uint64_t assignWithCopy for CornerRadiusModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_1B0F6C708(*(_QWORD *)a2, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  v11 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v7;
  sub_1B0F6C7D4(v8, v9, v10, v11);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  return a1;
}

__n128 __swift_memcpy26_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 10) = *(_OWORD *)(a2 + 10);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for CornerRadiusModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  v9 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v5;
  sub_1B0F6C7D4(v6, v7, v8, v9);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  return a1;
}

uint64_t getEnumTagSinglePayload for CornerRadiusModifier(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 26))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 25);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CornerRadiusModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 26) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 26) = 0;
    if (a2)
      *(_BYTE *)(result + 25) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for CornerRadiusModifier()
{
  return &type metadata for CornerRadiusModifier;
}

uint64_t sub_1B1017CF8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;
  int v22;
  char v23;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1328);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B10182A4();
  sub_1B1036278();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v23 = 0;
  sub_1B0F7E5F8();
  sub_1B10360BC();
  v9 = v18;
  v10 = v19;
  LOBYTE(v18) = 1;
  v17 = v20;
  v22 = v21;
  sub_1B0F6C708(v9, v19, v20, v21);
  v11 = sub_1B1036098();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v10;
  v12 = (v11 == 2) | v11 & 1;
  v13 = v17;
  *(_QWORD *)(a2 + 16) = v17;
  v14 = v22;
  *(_BYTE *)(a2 + 24) = v22;
  *(_BYTE *)(a2 + 25) = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1B0F6C7D4(v9, v10, v13, v14);
}

uint64_t sub_1B1017EF4(char a1)
{
  if ((a1 & 1) != 0)
    return 0x61696C6169746E61;
  else
    return 0x737569646172;
}

uint64_t sub_1B1017F30(char *a1, char *a2)
{
  return sub_1B100D068(*a1, *a2);
}

uint64_t sub_1B1017F3C()
{
  return sub_1B1011464();
}

uint64_t sub_1B1017F44()
{
  return sub_1B101242C();
}

uint64_t sub_1B1017F4C()
{
  return sub_1B1014E98();
}

uint64_t sub_1B1017F54@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1B103605C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1B1017FB0@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B1017EF4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B1017FD8()
{
  char *v0;

  return sub_1B1017EF4(*v0);
}

uint64_t sub_1B1017FE0@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1B103605C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1B1018040()
{
  sub_1B10182A4();
  return sub_1B10362B4();
}

uint64_t sub_1B1018068()
{
  sub_1B10182A4();
  return sub_1B10362C0();
}

uint64_t sub_1B1018090@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[2];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v7 = *(_QWORD *)(v3 + 8);
  v8 = *(_QWORD *)(v3 + 16);
  v9 = *(_BYTE *)(v3 + 24);
  v15 = *(_QWORD *)v3;
  v16 = v7;
  v17 = v8;
  v18 = v9;
  sub_1B0F6C708(v15, v7, v8, v9);
  sub_1B0FA70A4(a2);
  LOBYTE(a2) = v10;
  sub_1B0F6C7D4(v15, v7, v8, v9);
  if ((a2 & 1) != 0)
    return sub_1B0F5FD84((uint64_t)a1, (uint64_t)a3);
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEE1318);
  v12 = sub_1B103497C();
  a3[3] = v12;
  v14[0] = v11;
  v14[1] = sub_1B1018258();
  a3[4] = MEMORY[0x1B5E15188](MEMORY[0x1E0CD9C20], v12, v14);
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1B10353B4();
}

uint64_t sub_1B10181DC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B1017CF8(a1, a2);
}

unint64_t sub_1B10181F0(uint64_t a1)
{
  unint64_t result;

  result = sub_1B1018214();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B1018214()
{
  unint64_t result;

  result = qword_1EEEE1310;
  if (!qword_1EEEE1310)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10483F8, &type metadata for CornerRadiusModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE1310);
  }
  return result;
}

unint64_t sub_1B1018258()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEEE1320;
  if (!qword_1EEEE1320)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEE1318);
    result = MEMORY[0x1B5E15188](MEMORY[0x1E0CD89F0], v1);
    atomic_store(result, (unint64_t *)&qword_1EEEE1320);
  }
  return result;
}

unint64_t sub_1B10182A4()
{
  unint64_t result;

  result = qword_1EEEE1330;
  if (!qword_1EEEE1330)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1048538, &type metadata for CornerRadiusModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1330);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CornerRadiusModifier.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B1018334 + 4 * byte_1B10483C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B1018368 + 4 * byte_1B10483C0[v4]))();
}

uint64_t sub_1B1018368(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1018370(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1018378);
  return result;
}

uint64_t sub_1B1018384(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B101838CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B1018390(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1018398(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CornerRadiusModifier.CodingKeys()
{
  return &type metadata for CornerRadiusModifier.CodingKeys;
}

unint64_t sub_1B10183B8()
{
  unint64_t result;

  result = qword_1EEEE1338;
  if (!qword_1EEEE1338)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1048510, &type metadata for CornerRadiusModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1338);
  }
  return result;
}

unint64_t sub_1B1018400()
{
  unint64_t result;

  result = qword_1EEEE1340;
  if (!qword_1EEEE1340)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1048448, &type metadata for CornerRadiusModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1340);
  }
  return result;
}

unint64_t sub_1B1018448()
{
  unint64_t result;

  result = qword_1EEEE1348;
  if (!qword_1EEEE1348)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1048470, &type metadata for CornerRadiusModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1348);
  }
  return result;
}

uint64_t destroy for ReloadAction(uint64_t a1)
{
  unsigned int v2;
  int v3;

  swift_release();
  sub_1B0F56ADC(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
  v2 = *(unsigned __int8 *)(a1 + 64);
  if (v2 <= 0xFD)
    sub_1B0F56ADC(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), v2);
  v3 = *(unsigned __int8 *)(a1 + 96);
  if (v3 != 255)
    sub_1B0F571A8(*(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), v3 & 1);
  sub_1B0F5E6A0(*(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_BYTE *)(a1 + 128));
  return sub_1B0F56ADC(*(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), *(_BYTE *)(a1 + 160));
}

uint64_t initializeWithCopy for ReloadAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  swift_retain();
  sub_1B0F56B9C(v4, v5, v6, v7);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  v8 = *(unsigned __int8 *)(a2 + 64);
  if (v8 <= 0xFD)
  {
    v9 = *(_QWORD *)(a2 + 40);
    v10 = *(_QWORD *)(a2 + 48);
    v11 = *(_QWORD *)(a2 + 56);
    sub_1B0F56B9C(v9, v10, v11, *(_BYTE *)(a2 + 64));
    *(_QWORD *)(a1 + 40) = v9;
    *(_QWORD *)(a1 + 48) = v10;
    *(_QWORD *)(a1 + 56) = v11;
    *(_BYTE *)(a1 + 64) = v8;
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
  }
  v12 = *(unsigned __int8 *)(a2 + 96);
  if (v12 == 255)
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 81) = *(_OWORD *)(a2 + 81);
  }
  else
  {
    v13 = v12 & 1;
    v14 = *(_QWORD *)(a2 + 72);
    v15 = *(_QWORD *)(a2 + 80);
    v16 = *(_QWORD *)(a2 + 88);
    sub_1B0F56C30(v14, v15, v16, v12 & 1);
    *(_QWORD *)(a1 + 72) = v14;
    *(_QWORD *)(a1 + 80) = v15;
    *(_QWORD *)(a1 + 88) = v16;
    *(_BYTE *)(a1 + 96) = v13;
  }
  v17 = *(_QWORD *)(a2 + 104);
  v18 = *(_QWORD *)(a2 + 112);
  v19 = *(_QWORD *)(a2 + 120);
  v20 = *(_BYTE *)(a2 + 128);
  sub_1B0F5E604(v17, v18, v19, v20);
  *(_QWORD *)(a1 + 104) = v17;
  *(_QWORD *)(a1 + 112) = v18;
  *(_QWORD *)(a1 + 120) = v19;
  *(_BYTE *)(a1 + 128) = v20;
  v21 = *(_QWORD *)(a2 + 136);
  v22 = *(_QWORD *)(a2 + 144);
  v23 = *(_QWORD *)(a2 + 152);
  v24 = *(_BYTE *)(a2 + 160);
  sub_1B0F56B9C(v21, v22, v23, v24);
  *(_QWORD *)(a1 + 136) = v21;
  *(_QWORD *)(a1 + 144) = v22;
  *(_QWORD *)(a1 + 152) = v23;
  *(_BYTE *)(a1 + 160) = v24;
  return a1;
}

uint64_t assignWithCopy for ReloadAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  _OWORD *v12;
  _OWORD *v13;
  unsigned int v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  __int128 *v27;
  __int128 *v28;
  int v29;
  __int128 v30;
  __int128 v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned __int8 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned __int8 v59;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1B0F56B9C(v4, v5, v6, v7);
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v11 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_1B0F56ADC(v8, v9, v10, v11);
  v12 = (_OWORD *)(a1 + 40);
  v13 = (_OWORD *)(a2 + 40);
  v14 = *(unsigned __int8 *)(a2 + 64);
  if (*(unsigned __int8 *)(a1 + 64) <= 0xFDu)
  {
    if (v14 <= 0xFD)
    {
      v20 = *(_QWORD *)(a2 + 40);
      v21 = *(_QWORD *)(a2 + 48);
      v22 = *(_QWORD *)(a2 + 56);
      sub_1B0F56B9C(v20, v21, v22, *(_BYTE *)(a2 + 64));
      v23 = *(_QWORD *)(a1 + 40);
      v24 = *(_QWORD *)(a1 + 48);
      v25 = *(_QWORD *)(a1 + 56);
      *(_QWORD *)(a1 + 40) = v20;
      *(_QWORD *)(a1 + 48) = v21;
      *(_QWORD *)(a1 + 56) = v22;
      v26 = *(_BYTE *)(a1 + 64);
      *(_BYTE *)(a1 + 64) = v14;
      sub_1B0F56ADC(v23, v24, v25, v26);
    }
    else
    {
      sub_1B0F5EA14(a1 + 40);
      v16 = *(_OWORD *)(a2 + 49);
      *v12 = *v13;
      *(_OWORD *)(a1 + 49) = v16;
    }
  }
  else if (v14 <= 0xFD)
  {
    v17 = *(_QWORD *)(a2 + 40);
    v18 = *(_QWORD *)(a2 + 48);
    v19 = *(_QWORD *)(a2 + 56);
    sub_1B0F56B9C(v17, v18, v19, *(_BYTE *)(a2 + 64));
    *(_QWORD *)(a1 + 40) = v17;
    *(_QWORD *)(a1 + 48) = v18;
    *(_QWORD *)(a1 + 56) = v19;
    *(_BYTE *)(a1 + 64) = v14;
  }
  else
  {
    v15 = *v13;
    *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
    *v12 = v15;
  }
  v27 = (__int128 *)(a1 + 72);
  v28 = (__int128 *)(a2 + 72);
  v29 = *(unsigned __int8 *)(a2 + 96);
  if (*(unsigned __int8 *)(a1 + 96) == 255)
  {
    if (v29 == 255)
    {
      v31 = *v28;
      *(_OWORD *)(a1 + 81) = *(_OWORD *)(a2 + 81);
      *v27 = v31;
    }
    else
    {
      v40 = v29 & 1;
      v41 = *(_QWORD *)(a2 + 72);
      v42 = *(_QWORD *)(a2 + 80);
      v43 = *(_QWORD *)(a2 + 88);
      sub_1B0F56C30(v41, v42, v43, v29 & 1);
      *(_QWORD *)(a1 + 72) = v41;
      *(_QWORD *)(a1 + 80) = v42;
      *(_QWORD *)(a1 + 88) = v43;
      *(_BYTE *)(a1 + 96) = v40;
    }
  }
  else if (v29 == 255)
  {
    sub_1B0F5A3AC(a1 + 72, &qword_1EEEDE170);
    v30 = *(_OWORD *)(a2 + 81);
    *v27 = *v28;
    *(_OWORD *)(a1 + 81) = v30;
  }
  else
  {
    v32 = v29 & 1;
    v33 = *(_QWORD *)(a2 + 72);
    v34 = *(_QWORD *)(a2 + 80);
    v35 = *(_QWORD *)(a2 + 88);
    sub_1B0F56C30(v33, v34, v35, v29 & 1);
    v36 = *(_QWORD *)(a1 + 72);
    v37 = *(_QWORD *)(a1 + 80);
    v38 = *(_QWORD *)(a1 + 88);
    v39 = *(_BYTE *)(a1 + 96);
    *(_QWORD *)(a1 + 72) = v33;
    *(_QWORD *)(a1 + 80) = v34;
    *(_QWORD *)(a1 + 88) = v35;
    *(_BYTE *)(a1 + 96) = v32;
    sub_1B0F571A8(v36, v37, v38, v39);
  }
  v44 = *(_QWORD *)(a2 + 104);
  v45 = *(_QWORD *)(a2 + 112);
  v46 = *(_QWORD *)(a2 + 120);
  v47 = *(_BYTE *)(a2 + 128);
  sub_1B0F5E604(v44, v45, v46, v47);
  v48 = *(_QWORD *)(a1 + 104);
  v49 = *(_QWORD *)(a1 + 112);
  v50 = *(_QWORD *)(a1 + 120);
  v51 = *(_BYTE *)(a1 + 128);
  *(_QWORD *)(a1 + 104) = v44;
  *(_QWORD *)(a1 + 112) = v45;
  *(_QWORD *)(a1 + 120) = v46;
  *(_BYTE *)(a1 + 128) = v47;
  sub_1B0F5E6A0(v48, v49, v50, v51);
  v52 = *(_QWORD *)(a2 + 136);
  v53 = *(_QWORD *)(a2 + 144);
  v54 = *(_QWORD *)(a2 + 152);
  v55 = *(_BYTE *)(a2 + 160);
  sub_1B0F56B9C(v52, v53, v54, v55);
  v56 = *(_QWORD *)(a1 + 136);
  v57 = *(_QWORD *)(a1 + 144);
  v58 = *(_QWORD *)(a1 + 152);
  *(_QWORD *)(a1 + 136) = v52;
  *(_QWORD *)(a1 + 144) = v53;
  *(_QWORD *)(a1 + 152) = v54;
  v59 = *(_BYTE *)(a1 + 160);
  *(_BYTE *)(a1 + 160) = v55;
  sub_1B0F56ADC(v56, v57, v58, v59);
  return a1;
}

__n128 __swift_memcpy161_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_BYTE *)(a1 + 160) = *((_BYTE *)a2 + 160);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for ReloadAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 v34;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = v4;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v5;
  sub_1B0F56ADC(v6, v7, v8, v9);
  v10 = *(unsigned __int8 *)(a1 + 64);
  if (v10 > 0xFD)
    goto LABEL_4;
  v11 = *(unsigned __int8 *)(a2 + 64);
  if (v11 > 0xFD)
  {
    sub_1B0F5EA14(a1 + 40);
LABEL_4:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
    goto LABEL_6;
  }
  v12 = *(_QWORD *)(a2 + 56);
  v13 = *(_QWORD *)(a1 + 40);
  v14 = *(_QWORD *)(a1 + 48);
  v15 = *(_QWORD *)(a1 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = v12;
  *(_BYTE *)(a1 + 64) = v11;
  sub_1B0F56ADC(v13, v14, v15, v10);
LABEL_6:
  v16 = *(unsigned __int8 *)(a1 + 96);
  if (v16 != 255)
  {
    v17 = *(unsigned __int8 *)(a2 + 96);
    if (v17 != 255)
    {
      v18 = v16 & 1;
      v19 = *(_QWORD *)(a2 + 88);
      v20 = *(_QWORD *)(a1 + 72);
      v21 = *(_QWORD *)(a1 + 80);
      v22 = *(_QWORD *)(a1 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 88) = v19;
      *(_BYTE *)(a1 + 96) = v17 & 1;
      sub_1B0F571A8(v20, v21, v22, v18);
      goto LABEL_11;
    }
    sub_1B0F5A3AC(a1 + 72, &qword_1EEEDE170);
  }
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 81) = *(_OWORD *)(a2 + 81);
LABEL_11:
  v23 = *(_QWORD *)(a2 + 120);
  v24 = *(_BYTE *)(a2 + 128);
  v25 = *(_QWORD *)(a1 + 104);
  v26 = *(_QWORD *)(a1 + 112);
  v27 = *(_QWORD *)(a1 + 120);
  v28 = *(_BYTE *)(a1 + 128);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = v23;
  *(_BYTE *)(a1 + 128) = v24;
  sub_1B0F5E6A0(v25, v26, v27, v28);
  v29 = *(_QWORD *)(a2 + 152);
  v30 = *(_BYTE *)(a2 + 160);
  v31 = *(_QWORD *)(a1 + 136);
  v32 = *(_QWORD *)(a1 + 144);
  v33 = *(_QWORD *)(a1 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = v29;
  v34 = *(_BYTE *)(a1 + 160);
  *(_BYTE *)(a1 + 160) = v30;
  sub_1B0F56ADC(v31, v32, v33, v34);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReloadAction(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 161))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReloadAction(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 160) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 161) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 161) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReloadAction()
{
  return &type metadata for ReloadAction;
}

uint64_t sub_1B1018B78(unsigned __int8 a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, unint64_t a7)
{
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  char v35;
  unint64_t v37;
  uint64_t v38;
  int v39;
  char v40;
  char v41[9];

  v37 = a7;
  v38 = a4;
  v39 = a5;
  v11 = a1;
  v12 = type metadata accessor for RemoteContent(0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v37 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE130);
  v19 = *(int *)(v18 + 48);
  v20 = *(int *)(v18 + 64);
  v21 = sub_1B10345E0();
  v22 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
  if (v11 > 1)
  {
    v27 = (uint64_t *)&v15[v20];
    v22(v15, a3, v21);
    v15[v19] = a1;
    v28 = v37;
    *v27 = a6;
    v27[1] = v28;
    swift_storeEnumTagMultiPayload();
    v29 = *(_QWORD *)(a2 + 104);
    v30 = *(_QWORD *)(a2 + 112);
    v31 = *(_QWORD *)(a2 + 120);
    v32 = *(_BYTE *)(a2 + 128);
    sub_1B101A6E4(a6, v28);
    sub_1B0F5E604(v29, v30, v31, v32);
    v35 = sub_1B0FD7528(v38, v29, v30, v31, v32);
    sub_1B0F5E6A0(v29, v30, v31, v32);
    v41[0] = v39;
    RemoteLoader.reload(content:showLoading:reloadtype:)((uint64_t)v15, v35 & 1, v41);
    v34 = (uint64_t)v15;
  }
  else
  {
    v22(v17, a3, v21);
    v17[v19] = a1;
    *(_OWORD *)&v17[v20] = xmmword_1B10369A0;
    swift_storeEnumTagMultiPayload();
    v23 = *(_QWORD *)(a2 + 104);
    v24 = *(_QWORD *)(a2 + 112);
    v25 = *(_QWORD *)(a2 + 120);
    v26 = *(_BYTE *)(a2 + 128);
    sub_1B0F5E604(v23, v24, v25, v26);
    v33 = sub_1B0FD7528(v38, v23, v24, v25, v26);
    sub_1B0F5E6A0(v23, v24, v25, v26);
    v40 = v39;
    RemoteLoader.reload(content:showLoading:reloadtype:)((uint64_t)v17, v33 & 1, &v40);
    v34 = (uint64_t)v17;
  }
  return sub_1B101A6F8(v34);
}

uint64_t sub_1B1018DD4(char a1)
{
  return qword_1B1048720[a1];
}

uint64_t sub_1B1018DF4()
{
  char *v0;

  return sub_1B1018DD4(*v0);
}

uint64_t sub_1B1018DFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B101AA28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B1018E20()
{
  sub_1B101A734();
  return sub_1B10362B4();
}

uint64_t sub_1B1018E48()
{
  sub_1B101A734();
  return sub_1B10362C0();
}

uint64_t sub_1B1018E70@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t Strong;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  int v43;
  unint64_t v44;
  int v45;
  unint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE v63[32];
  __int128 v64;
  __int128 v65;
  _BYTE v66[32];
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  char v71;
  _OWORD v72[2];
  char v73;
  _BYTE v74[7];
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  _BYTE v79[7];
  __int128 v80;
  uint64_t v81;
  char v82;
  _BYTE v83[7];
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  _BYTE v88[7];
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  char v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unsigned __int8 v96;
  _BYTE v97[7];
  char v98;
  _BYTE v99[7];
  _BYTE v100[7];
  _DWORD v101[5];
  char *v102;

  v60 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1370);
  v61 = *(_QWORD *)(v4 - 8);
  v62 = v4;
  MEMORY[0x1E0C80A78](v4);
  v102 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1B1036008();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1B103626C();
  if (qword_1EEEDE098 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v6, (uint64_t)qword_1EEF0B9C8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v11, v6);
  if (*(_QWORD *)(v10 + 16) && (v12 = sub_1B0F56A48((uint64_t)v9), (v13 & 1) != 0))
    sub_1B0F57208(*(_QWORD *)(v10 + 56) + 32 * v12, (uint64_t)v72);
  else
    memset(v72, 0, sizeof(v72));
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (!*((_QWORD *)&v72[1] + 1))
  {
    sub_1B0F5A3AC((uint64_t)v72, &qword_1EEEDE158);
    goto LABEL_15;
  }
  type metadata accessor for AnyWeakRemoteLoader();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_15:
    type metadata accessor for RemoteLoaderError(0);
    sub_1B0F524FC((unint64_t *)&qword_1EEEDE160, type metadata accessor for RemoteLoaderError, (uint64_t)&unk_1B10431CC);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    swift_release();
    goto LABEL_15;
  }
  v15 = Strong;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B101A734();
  swift_retain();
  sub_1B1036278();
  if (v2)
  {
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_release();
    return v59;
  }
  else
  {
    v63[0] = 0;
    v16 = sub_1B0F56A98();
    sub_1B10360BC();
    v18 = *(_QWORD *)&v72[1];
    v63[0] = 1;
    v57 = v72[0];
    v47 = BYTE8(v72[1]);
    sub_1B0F56B9C(*(uint64_t *)&v72[0], *((uint64_t *)&v72[0] + 1), *(uint64_t *)&v72[1], BYTE8(v72[1]));
    v46 = v16;
    sub_1B10360A4();
    v56 = v18;
    v54 = *((_QWORD *)&v72[0] + 1);
    v19 = *(_QWORD *)&v72[0];
    v20 = *(_QWORD *)&v72[1];
    v55 = BYTE8(v72[1]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE170);
    v63[0] = 2;
    v59 = v19;
    v53 = v20;
    sub_1B0F56C04(v19, v54, v20, v55);
    sub_1B0F5A7E4((unint64_t *)&qword_1EEEDE178, &qword_1EEEDE170, (uint64_t)&protocol conformance descriptor for Referenceable<A>);
    sub_1B10360A4();
    v21 = v72[0];
    v51 = *(_QWORD *)&v72[1];
    v52 = BYTE8(v72[1]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE7E8);
    v63[0] = 3;
    v58 = v21;
    sub_1B0F56C18(v21, *((uint64_t *)&v21 + 1), v51, v52);
    sub_1B0F5A7E4((unint64_t *)&qword_1EEEDE7F0, &qword_1EEEDE7E8, (uint64_t)&protocol conformance descriptor for Referenceable<A>);
    sub_1B10360A4();
    if (BYTE8(v72[1]) == 255)
    {
      v22 = 0;
      v23 = 0;
      v24 = 0;
      v25 = 0;
    }
    else
    {
      v23 = *((_QWORD *)&v72[0] + 1);
      v24 = *(_QWORD *)&v72[1];
      v25 = BYTE8(v72[1]) & 1;
      v22 = *(_QWORD *)&v72[0];
    }
    v98 = v25;
    LOBYTE(v72[0]) = 4;
    v50 = v23;
    v45 = v25;
    sub_1B0F5E604(v22, v23, v24, v25);
    sub_1B10360A4();
    v48 = v24;
    v49 = v22;
    v26 = v56;
    if (v96 <= 0xFDu)
    {
      v46 = v95;
      v44 = v94;
      v42 = v93;
      v27 = v102;
      v43 = v96;
    }
    else
    {
      v46 = 0;
      v43 = 0;
      v44 = 0xEB00000000617461;
      v42 = 0x44646E4177656976;
      v27 = v102;
    }
    swift_release();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v27, v62);
    *(_QWORD *)v63 = v15;
    *(_OWORD *)&v63[8] = v57;
    *(_QWORD *)&v63[24] = v26;
    LOBYTE(v64) = v47;
    *((_QWORD *)&v64 + 1) = v59;
    *(_QWORD *)&v65 = v54;
    *((_QWORD *)&v65 + 1) = v53;
    v66[0] = v55;
    *(_OWORD *)&v66[8] = v58;
    v28 = v50;
    v29 = v51;
    *(_QWORD *)&v66[24] = v51;
    LOBYTE(v67) = v52;
    v31 = v48;
    v30 = v49;
    *((_QWORD *)&v67 + 1) = v49;
    *(_QWORD *)&v68 = v50;
    *((_QWORD *)&v68 + 1) = v48;
    v32 = v45;
    LOBYTE(v69) = v45;
    *((_QWORD *)&v69 + 1) = v42;
    *(_QWORD *)&v70 = v44;
    *((_QWORD *)&v70 + 1) = v46;
    v71 = v43;
    sub_1B0F761FC((uint64_t)v63);
    sub_1B0F5E6A0(v30, v28, v31, v32);
    sub_1B0F57190(v58, *((uint64_t *)&v58 + 1), v29, v52);
    v33 = v59;
    sub_1B0F56B88(v59, v54, v53, v55);
    v34 = v57;
    v35 = v56;
    LOBYTE(v29) = v47;
    sub_1B0F56ADC(v57, *((uint64_t *)&v57 + 1), v56, v47);
    swift_release();
    v36 = v70;
    v37 = v60;
    *(_OWORD *)(v60 + 128) = v69;
    *(_OWORD *)(v37 + 144) = v36;
    *(_BYTE *)(v37 + 160) = v71;
    v38 = *(_OWORD *)&v66[16];
    *(_OWORD *)(v37 + 64) = *(_OWORD *)v66;
    *(_OWORD *)(v37 + 80) = v38;
    v39 = v68;
    *(_OWORD *)(v37 + 96) = v67;
    *(_OWORD *)(v37 + 112) = v39;
    v40 = *(_OWORD *)&v63[16];
    *(_OWORD *)v37 = *(_OWORD *)v63;
    *(_OWORD *)(v37 + 16) = v40;
    v41 = v65;
    *(_OWORD *)(v37 + 32) = v64;
    *(_OWORD *)(v37 + 48) = v41;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    *(_QWORD *)&v72[0] = v15;
    *(_OWORD *)((char *)v72 + 8) = v34;
    *((_QWORD *)&v72[1] + 1) = v35;
    v73 = v29;
    *(_DWORD *)v74 = v101[0];
    *(_DWORD *)&v74[3] = *(_DWORD *)((char *)v101 + 3);
    v75 = v33;
    v76 = v54;
    v77 = v53;
    v78 = v55;
    *(_DWORD *)v79 = *(_DWORD *)v100;
    *(_DWORD *)&v79[3] = *(_DWORD *)&v100[3];
    v80 = v58;
    v81 = v51;
    v82 = v52;
    *(_DWORD *)v83 = *(_DWORD *)v99;
    *(_DWORD *)&v83[3] = *(_DWORD *)&v99[3];
    v84 = v49;
    v85 = v50;
    v86 = v48;
    v87 = v98;
    *(_DWORD *)v88 = *(_DWORD *)v97;
    *(_DWORD *)&v88[3] = *(_DWORD *)&v97[3];
    v89 = v42;
    v90 = v44;
    v91 = v46;
    v92 = v43;
    return sub_1B101A778((uint64_t)v72);
  }
}

uint64_t sub_1B1019828(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EEEE1368 + dword_1EEEE1368);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1B0F737CC;
  return v5(a1);
}

uint64_t sub_1B101988C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B1018E70(a1, a2);
}

unint64_t sub_1B10198A0(uint64_t a1)
{
  unint64_t result;

  result = sub_1B10198C4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B10198C4()
{
  unint64_t result;

  result = qword_1EEEE1350;
  if (!qword_1EEEE1350)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10485A8, &type metadata for ReloadAction);
    atomic_store(result, (unint64_t *)&qword_1EEEE1350);
  }
  return result;
}

unint64_t sub_1B1019908(uint64_t a1)
{
  unint64_t result;

  result = sub_1B101992C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B101992C()
{
  unint64_t result;

  result = qword_1EEEE1360;
  if (!qword_1EEEE1360)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10485D0, &type metadata for ReloadAction);
    atomic_store(result, (unint64_t *)&qword_1EEEE1360);
  }
  return result;
}

uint64_t sub_1B1019970(void (*a1)(void))
{
  a1();
  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_1B1019990(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  *(_QWORD *)(v2 + 392) = a1;
  v3 = sub_1B1035AB0();
  *(_QWORD *)(v2 + 400) = v3;
  *(_QWORD *)(v2 + 408) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 416) = swift_task_alloc();
  v4 = sub_1B1035AC8();
  *(_QWORD *)(v2 + 424) = v4;
  *(_QWORD *)(v2 + 432) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v2 + 440) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDEA00);
  *(_QWORD *)(v2 + 448) = swift_task_alloc();
  v5 = sub_1B10345E0();
  *(_QWORD *)(v2 + 456) = v5;
  v6 = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v2 + 464) = v6;
  *(_QWORD *)(v2 + 472) = *(_QWORD *)(v6 + 64);
  *(_QWORD *)(v2 + 480) = swift_task_alloc();
  *(_QWORD *)(v2 + 488) = swift_task_alloc();
  *(_QWORD *)(v2 + 496) = swift_task_alloc();
  v7 = *(_OWORD *)(v1 + 144);
  *(_OWORD *)(v2 + 144) = *(_OWORD *)(v1 + 128);
  *(_OWORD *)(v2 + 160) = v7;
  *(_BYTE *)(v2 + 176) = *(_BYTE *)(v1 + 160);
  v8 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v2 + 80) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v2 + 96) = v8;
  v9 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(v2 + 112) = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(v2 + 128) = v9;
  v10 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v2 + 32) = v10;
  v11 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v2 + 64) = v11;
  return swift_task_switch();
}

uint64_t sub_1B1019AB4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  Swift::String v6;
  uint64_t (*v7)(void);
  unsigned int v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  Swift::String v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  _BOOL4 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint8_t *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  unint64_t v61;
  uint64_t *v62;
  void *v63;
  char v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t, uint64_t);
  uint64_t v73;
  void (*v74)(unint64_t, uint64_t, uint64_t);
  unint64_t v75;
  void (*v76)(uint64_t, uint64_t);
  int v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81[3];
  char v82;

  v1 = *(_QWORD *)(v0 + 392);
  sub_1B0F96EA4(v0 + 152, v0 + 328);
  sub_1B0F96EA4(v0 + 328, v0 + 264);
  sub_1B0F96EE0(v0 + 328);
  v2 = StringResolvable.resolved(with:)(v1);
  v4 = v3;
  v5 = *(_QWORD *)(v0 + 392);
  sub_1B0F96F10(v0 + 328);
  v6._countAndFlagsBits = v2;
  v6._object = v4;
  ReloadType.init(rawValue:)(v6);
  sub_1B0F96EA4(v0 + 24, v0 + 232);
  sub_1B0F96EA4(v0 + 232, v0 + 296);
  sub_1B0F96EE0(v0 + 232);
  StringResolvable.resolved(with:)(v5);
  sub_1B0F96F10(v0 + 232);
  v77 = LOBYTE(v81[0]);
  v9 = *(unsigned __int8 *)(v0 + 80);
  if (v9 <= 0xFD)
  {
    v12 = *(_QWORD *)(v0 + 64);
    v13 = *(_QWORD *)(v0 + 72);
    v14 = *(_QWORD *)(v0 + 392);
    v81[0] = *(_QWORD *)(v0 + 56);
    v81[1] = v12;
    v81[2] = v13;
    v82 = v9;
    sub_1B0F56B9C(v81[0], v12, v13, v9);
    v10 = StringResolvable.resolved(with:)(v14);
    v11 = v15;
    sub_1B0F56B88(v81[0], v12, v13, v9);
  }
  else
  {
    v10 = 0;
    v11 = (void *)0xE000000000000000;
  }
  v16._countAndFlagsBits = v10;
  v16._object = v11;
  HTTPRequestMethod.init(rawValue:)(v16);
  v17 = *(unsigned __int8 *)(v0 + 112);
  if (v17 == 255)
  {
    v23 = 0;
    v25 = 0xF000000000000000;
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 96);
    v18 = *(_QWORD *)(v0 + 104);
    v20 = *(_QWORD *)(v0 + 88);
    v21 = *(_QWORD *)(v0 + 392);
    sub_1B0F56C30(v20, v19, v18, v17 & 1);
    v22 = sub_1B0FD7904(v21, v20, v19, v18, v17 & 1);
    sub_1B0F57190(v20, v19, v18, v17);
    sub_1B103452C();
    swift_allocObject();
    sub_1B1034520();
    *(_QWORD *)(v0 + 384) = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF5E0);
    sub_1B0F97014();
    v23 = sub_1B1034514();
    v25 = v24;
    swift_release();
    swift_bridgeObjectRelease();
  }
  v26 = *(_QWORD *)(v0 + 456);
  v27 = *(_QWORD *)(v0 + 464);
  v28 = *(_QWORD *)(v0 + 448);
  sub_1B10345D4();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v28, 1, v26) == 1)
  {
    sub_1B0F5A3AC(*(_QWORD *)(v0 + 448), &qword_1EEEDEA00);
    if (qword_1EEEDE0B0 != -1)
      swift_once();
    v29 = sub_1B103467C();
    __swift_project_value_buffer(v29, (uint64_t)qword_1EEF0BA00);
    v30 = sub_1B1034664();
    v31 = sub_1B1035E1C();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v32 = 0;
      _os_log_impl(&dword_1B0F50000, v30, v31, "Failed to resolve url on ReloadAction.", v32, 2u);
      MEMORY[0x1B5E15248](v32, -1, -1);
    }

    type metadata accessor for RemoteLoaderError(0);
    sub_1B0F524FC((unint64_t *)&qword_1EEEDE160, type metadata accessor for RemoteLoaderError, (uint64_t)&unk_1B10431CC);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_1B0FD490C(v23, v25);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v7 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    v75 = v25;
    v79 = v23;
    v74 = *(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 464) + 32);
    v74(*(_QWORD *)(v0 + 496), *(_QWORD *)(v0 + 448), *(_QWORD *)(v0 + 456));
    if (qword_1EEEDE0B0 != -1)
      swift_once();
    v33 = *(_QWORD *)(v0 + 488);
    v34 = *(_QWORD *)(v0 + 496);
    v35 = *(_QWORD *)(v0 + 456);
    v36 = *(_QWORD *)(v0 + 464);
    v37 = sub_1B103467C();
    __swift_project_value_buffer(v37, (uint64_t)qword_1EEF0BA00);
    v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16);
    v72(v33, v34, v35);
    v38 = sub_1B1034664();
    v39 = sub_1B1035E34();
    v40 = os_log_type_enabled(v38, v39);
    v41 = *(_QWORD *)(v0 + 488);
    v42 = *(_QWORD *)(v0 + 456);
    v43 = *(_QWORD *)(v0 + 464);
    if (v40)
    {
      v44 = (uint8_t *)swift_slowAlloc();
      v73 = swift_slowAlloc();
      v81[0] = v73;
      *(_DWORD *)v44 = 136315138;
      sub_1B0F524FC(&qword_1EEEDF5C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      v45 = sub_1B10360F8();
      *(_QWORD *)(v0 + 368) = sub_1B0F6B618(v45, v46, v81);
      sub_1B1035E7C();
      swift_bridgeObjectRelease();
      v76 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
      v76(v41, v42);
      _os_log_impl(&dword_1B0F50000, v38, v39, "Reload Action: %s", v44, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1B5E15248](v73, -1, -1);
      MEMORY[0x1B5E15248](v44, -1, -1);
    }
    else
    {
      v76 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
      v76(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 456));
    }

    v47 = *(_QWORD *)(v0 + 496);
    v68 = v47;
    v48 = *(_QWORD *)(v0 + 480);
    v50 = *(_QWORD *)(v0 + 464);
    v49 = *(_QWORD *)(v0 + 472);
    v51 = *(_QWORD *)(v0 + 456);
    v65 = *(_QWORD *)(v0 + 440);
    v70 = *(_QWORD *)(v0 + 432);
    v71 = *(_QWORD *)(v0 + 424);
    v67 = *(_QWORD *)(v0 + 416);
    v69 = *(_QWORD *)(v0 + 408);
    if (v77 == 3)
      v52 = 2;
    else
      v52 = v77;
    v64 = v52;
    v53 = *(_QWORD *)(v0 + 392);
    v78 = *(_QWORD *)(v0 + 400);
    sub_1B0FB9F24();
    v66 = (void *)sub_1B1035E40();
    v72(v48, v47, v51);
    v54 = (*(unsigned __int8 *)(v50 + 80) + 185) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
    v55 = swift_allocObject();
    v56 = *(_OWORD *)(v0 + 112);
    *(_OWORD *)(v55 + 136) = *(_OWORD *)(v0 + 128);
    v57 = *(_OWORD *)(v0 + 160);
    *(_OWORD *)(v55 + 152) = *(_OWORD *)(v0 + 144);
    *(_OWORD *)(v55 + 168) = v57;
    v58 = *(_OWORD *)(v0 + 48);
    *(_OWORD *)(v55 + 72) = *(_OWORD *)(v0 + 64);
    v59 = *(_OWORD *)(v0 + 96);
    *(_OWORD *)(v55 + 88) = *(_OWORD *)(v0 + 80);
    *(_OWORD *)(v55 + 104) = v59;
    *(_OWORD *)(v55 + 120) = v56;
    v60 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)(v55 + 24) = *(_OWORD *)(v0 + 16);
    *(_OWORD *)(v55 + 40) = v60;
    *(_BYTE *)(v55 + 16) = v80;
    *(_BYTE *)(v55 + 184) = *(_BYTE *)(v0 + 176);
    *(_OWORD *)(v55 + 56) = v58;
    v74(v55 + v54, v48, v51);
    v61 = v55 + ((v54 + v49 + 7) & 0xFFFFFFFFFFFFFFF8);
    *(_QWORD *)v61 = v53;
    *(_BYTE *)(v61 + 8) = v64;
    v62 = (uint64_t *)(v55 + ((v54 + v49 + 23) & 0xFFFFFFFFFFFFFFF8));
    *v62 = v79;
    v62[1] = v75;
    *(_QWORD *)(v0 + 216) = sub_1B101A66C;
    *(_QWORD *)(v0 + 224) = v55;
    *(_QWORD *)(v0 + 184) = MEMORY[0x1E0C809B0];
    *(_QWORD *)(v0 + 192) = 1107296256;
    *(_QWORD *)(v0 + 200) = sub_1B0F71014;
    *(_QWORD *)(v0 + 208) = &block_descriptor_3;
    v63 = _Block_copy((const void *)(v0 + 184));
    sub_1B0F761FC(v0 + 16);
    swift_retain();
    sub_1B101A6E4(v79, v75);
    sub_1B1035ABC();
    *(_QWORD *)(v0 + 360) = MEMORY[0x1E0DEE9D8];
    sub_1B0F524FC((unint64_t *)&qword_1EEEDE9C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE9D0);
    sub_1B0F5A7E4((unint64_t *)&qword_1EEEDE9D8, &qword_1EEEDE9D0, MEMORY[0x1E0DEAF38]);
    sub_1B1035ED0();
    MEMORY[0x1B5E148AC](0, v65, v67, v63);
    _Block_release(v63);

    sub_1B0FD490C(v79, v75);
    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v67, v78);
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v65, v71);
    v76(v68, v51);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v7 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v7();
}

uint64_t sub_1B101A55C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unsigned int v5;
  unint64_t v6;
  int v7;
  unint64_t v8;

  v1 = sub_1B10345E0();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 185) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64) + 23;
  swift_release();
  sub_1B0F56ADC(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
  v5 = *(unsigned __int8 *)(v0 + 88);
  if (v5 <= 0xFD)
    sub_1B0F56ADC(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), v5);
  v6 = v4 & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(v0 + 120);
  if (v7 != 255)
    sub_1B0F571A8(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), v7 & 1);
  sub_1B0F5E6A0(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_BYTE *)(v0 + 152));
  sub_1B0F56ADC(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_BYTE *)(v0 + 184));
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  v8 = *(_QWORD *)(v0 + v6 + 8);
  if (v8 >> 60 != 15)
    sub_1B0F576D8(*(_QWORD *)(v0 + v6), v8);
  return swift_deallocObject();
}

uint64_t sub_1B101A66C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(sub_1B10345E0() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 185) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = v2 + *(_QWORD *)(v1 + 64);
  return sub_1B1018B78(*(_BYTE *)(v0 + 16), v0 + 24, v0 + v2, *(_QWORD *)(v0 + ((v3 + 7) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v0 + ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_1B101A6E4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1B0F57594(a1, a2);
  return a1;
}

uint64_t sub_1B101A6F8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RemoteContent(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1B101A734()
{
  unint64_t result;

  result = qword_1EEEE1378;
  if (!qword_1EEEE1378)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10486CC, &type metadata for ReloadAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1378);
  }
  return result;
}

uint64_t sub_1B101A778(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v13 = *(_QWORD *)(a1 + 80);
  v14 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 88);
  v18 = *(_QWORD *)(a1 + 112);
  v19 = *(_QWORD *)(a1 + 104);
  v17 = *(_QWORD *)(a1 + 120);
  v21 = *(_QWORD *)(a1 + 144);
  v22 = *(_QWORD *)(a1 + 136);
  v20 = *(_QWORD *)(a1 + 152);
  v8 = *(_BYTE *)(a1 + 32);
  v9 = *(_BYTE *)(a1 + 64);
  v10 = *(_BYTE *)(a1 + 96);
  v15 = *(_BYTE *)(a1 + 160);
  v16 = *(_BYTE *)(a1 + 128);
  swift_release();
  sub_1B0F56ADC(v2, v3, v4, v8);
  sub_1B0F56B88(v5, v6, v7, v9);
  sub_1B0F57190(v14, v13, v12, v10);
  sub_1B0F5E6A0(v19, v18, v17, v16);
  sub_1B0F56ADC(v22, v21, v20, v15);
  return a1;
}

uint64_t storeEnumTagSinglePayload for ReloadAction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1B101A8D0 + 4 * byte_1B104858D[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1B101A904 + 4 * byte_1B1048588[v4]))();
}

uint64_t sub_1B101A904(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B101A90C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B101A914);
  return result;
}

uint64_t sub_1B101A920(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B101A928);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1B101A92C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B101A934(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReloadAction.CodingKeys()
{
  return &type metadata for ReloadAction.CodingKeys;
}

unint64_t sub_1B101A954()
{
  unint64_t result;

  result = qword_1EEEE1380;
  if (!qword_1EEEE1380)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10486A4, &type metadata for ReloadAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1380);
  }
  return result;
}

unint64_t sub_1B101A99C()
{
  unint64_t result;

  result = qword_1EEEE1388;
  if (!qword_1EEEE1388)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1048614, &type metadata for ReloadAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1388);
  }
  return result;
}

unint64_t sub_1B101A9E4()
{
  unint64_t result;

  result = qword_1EEEE1390;
  if (!qword_1EEEE1390)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104863C, &type metadata for ReloadAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1390);
  }
  return result;
}

uint64_t sub_1B101AA28(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 7107189 && a2 == 0xE300000000000000;
  if (v3 || (sub_1B1036128() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6874654D70747468 && a2 == 0xEA0000000000646FLL || (sub_1B1036128() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 2036625250 && a2 == 0xE400000000000000 || (sub_1B1036128() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x64616F4C776F6873 && a2 == 0xEB00000000676E69 || (sub_1B1036128() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1B1036128();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t destroy for AnimationModifier(uint64_t a1)
{
  int v2;

  v2 = *(unsigned __int8 *)(a1 + 56);
  if (v2 != 254)
  {
    sub_1B0F56ADC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
    if (v2 != 255)
      sub_1B0F5E6A0(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), v2 & 1);
  }
  return sub_1B0F56ADC(*(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88));
}

uint64_t initializeWithCopy for AnimationModifier(uint64_t a1, uint64_t *a2)
{
  int v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;

  v4 = *((unsigned __int8 *)a2 + 56);
  if (v4 == 254)
  {
    v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)((char *)a2 + 41);
  }
  else
  {
    v6 = *a2;
    v7 = a2[1];
    v8 = a2[2];
    v9 = *((_BYTE *)a2 + 24);
    sub_1B0F56B9C(*a2, v7, v8, v9);
    *(_QWORD *)a1 = v6;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = v8;
    *(_BYTE *)(a1 + 24) = v9;
    if (v4 == 255)
    {
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 41) = *(_OWORD *)((char *)a2 + 41);
    }
    else
    {
      v10 = a2[4];
      v11 = a2[5];
      v12 = a2[6];
      sub_1B0F5E604(v10, v11, v12, v4 & 1);
      *(_QWORD *)(a1 + 32) = v10;
      *(_QWORD *)(a1 + 40) = v11;
      *(_QWORD *)(a1 + 48) = v12;
      *(_BYTE *)(a1 + 56) = v4 & 1;
    }
  }
  v13 = a2[8];
  v14 = a2[9];
  v15 = a2[10];
  v16 = *((_BYTE *)a2 + 88);
  sub_1B0F56B9C(v13, v14, v15, v16);
  *(_QWORD *)(a1 + 64) = v13;
  *(_QWORD *)(a1 + 72) = v14;
  *(_QWORD *)(a1 + 80) = v15;
  *(_BYTE *)(a1 + 88) = v16;
  return a1;
}

uint64_t assignWithCopy for AnimationModifier(uint64_t a1, __int128 *a2)
{
  int v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  int v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  __int128 *v25;
  __int128 *v26;
  __int128 v27;
  __int128 v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned __int8 v48;

  v4 = *((unsigned __int8 *)a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) == 254)
  {
    if (v4 == 254)
    {
      v5 = *a2;
      v6 = a2[1];
      v7 = a2[2];
      *(_OWORD *)(a1 + 41) = *(__int128 *)((char *)a2 + 41);
      *(_OWORD *)(a1 + 16) = v6;
      *(_OWORD *)(a1 + 32) = v7;
      *(_OWORD *)a1 = v5;
      goto LABEL_15;
    }
    v11 = *(_QWORD *)a2;
    v12 = *((_QWORD *)a2 + 1);
    v13 = *((_QWORD *)a2 + 2);
    v14 = *((_BYTE *)a2 + 24);
    sub_1B0F56B9C(*(_QWORD *)a2, v12, v13, v14);
    *(_QWORD *)a1 = v11;
    *(_QWORD *)(a1 + 8) = v12;
    *(_QWORD *)(a1 + 16) = v13;
    *(_BYTE *)(a1 + 24) = v14;
    v15 = *((unsigned __int8 *)a2 + 56);
    if (v15 == 255)
    {
      v16 = a2[2];
      *(_OWORD *)(a1 + 41) = *(__int128 *)((char *)a2 + 41);
      *(_OWORD *)(a1 + 32) = v16;
      goto LABEL_15;
    }
LABEL_13:
    v29 = v15 & 1;
    v30 = *((_QWORD *)a2 + 4);
    v31 = *((_QWORD *)a2 + 5);
    v32 = *((_QWORD *)a2 + 6);
    sub_1B0F5E604(v30, v31, v32, v15 & 1);
    *(_QWORD *)(a1 + 32) = v30;
    *(_QWORD *)(a1 + 40) = v31;
    *(_QWORD *)(a1 + 48) = v32;
    *(_BYTE *)(a1 + 56) = v29;
    goto LABEL_15;
  }
  if (v4 == 254)
  {
    sub_1B0FEF670(a1);
    v9 = a2[1];
    v8 = a2[2];
    v10 = *a2;
    *(_OWORD *)(a1 + 41) = *(__int128 *)((char *)a2 + 41);
    *(_OWORD *)(a1 + 16) = v9;
    *(_OWORD *)(a1 + 32) = v8;
    *(_OWORD *)a1 = v10;
    goto LABEL_15;
  }
  v17 = *(_QWORD *)a2;
  v18 = *((_QWORD *)a2 + 1);
  v19 = *((_QWORD *)a2 + 2);
  v20 = *((_BYTE *)a2 + 24);
  sub_1B0F56B9C(*(_QWORD *)a2, v18, v19, v20);
  v21 = *(_QWORD *)a1;
  v22 = *(_QWORD *)(a1 + 8);
  v23 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v17;
  *(_QWORD *)(a1 + 8) = v18;
  *(_QWORD *)(a1 + 16) = v19;
  v24 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v20;
  sub_1B0F56ADC(v21, v22, v23, v24);
  v25 = (__int128 *)(a1 + 32);
  v26 = a2 + 2;
  v15 = *((unsigned __int8 *)a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) == 255)
  {
    if (v15 == 255)
    {
      v28 = *v26;
      *(_OWORD *)(a1 + 41) = *(__int128 *)((char *)a2 + 41);
      *v25 = v28;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v15 == 255)
  {
    sub_1B0F7F584(a1 + 32);
    v27 = *(__int128 *)((char *)a2 + 41);
    *v25 = *v26;
    *(_OWORD *)(a1 + 41) = v27;
  }
  else
  {
    v33 = v15 & 1;
    v34 = *((_QWORD *)a2 + 4);
    v35 = *((_QWORD *)a2 + 5);
    v36 = *((_QWORD *)a2 + 6);
    sub_1B0F5E604(v34, v35, v36, v15 & 1);
    v37 = *(_QWORD *)(a1 + 32);
    v38 = *(_QWORD *)(a1 + 40);
    v39 = *(_QWORD *)(a1 + 48);
    v40 = *(_BYTE *)(a1 + 56);
    *(_QWORD *)(a1 + 32) = v34;
    *(_QWORD *)(a1 + 40) = v35;
    *(_QWORD *)(a1 + 48) = v36;
    *(_BYTE *)(a1 + 56) = v33;
    sub_1B0F5E6A0(v37, v38, v39, v40);
  }
LABEL_15:
  v41 = *((_QWORD *)a2 + 8);
  v42 = *((_QWORD *)a2 + 9);
  v43 = *((_QWORD *)a2 + 10);
  v44 = *((_BYTE *)a2 + 88);
  sub_1B0F56B9C(v41, v42, v43, v44);
  v45 = *(_QWORD *)(a1 + 64);
  v46 = *(_QWORD *)(a1 + 72);
  v47 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 64) = v41;
  *(_QWORD *)(a1 + 72) = v42;
  *(_QWORD *)(a1 + 80) = v43;
  v48 = *(_BYTE *)(a1 + 88);
  *(_BYTE *)(a1 + 88) = v44;
  sub_1B0F56ADC(v45, v46, v47, v48);
  return a1;
}

uint64_t assignWithTake for AnimationModifier(uint64_t a1, uint64_t a2)
{
  int v4;
  __int128 v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  int v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;

  if (*(unsigned __int8 *)(a1 + 56) == 254)
    goto LABEL_4;
  v4 = *(unsigned __int8 *)(a2 + 56);
  if (v4 == 254)
  {
    sub_1B0FEF670(a1);
LABEL_4:
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
    goto LABEL_10;
  }
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v6;
  v11 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v7;
  sub_1B0F56ADC(v8, v9, v10, v11);
  v12 = *(unsigned __int8 *)(a1 + 56);
  if (v12 != 255)
  {
    if (v4 != 255)
    {
      v13 = v12 & 1;
      v14 = *(_QWORD *)(a2 + 48);
      v15 = *(_QWORD *)(a1 + 32);
      v16 = *(_QWORD *)(a1 + 40);
      v17 = *(_QWORD *)(a1 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 48) = v14;
      *(_BYTE *)(a1 + 56) = v4 & 1;
      sub_1B0F5E6A0(v15, v16, v17, v13);
      goto LABEL_10;
    }
    sub_1B0F7F584(a1 + 32);
  }
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
LABEL_10:
  v18 = *(_QWORD *)(a2 + 80);
  v19 = *(_BYTE *)(a2 + 88);
  v20 = *(_QWORD *)(a1 + 64);
  v21 = *(_QWORD *)(a1 + 72);
  v22 = *(_QWORD *)(a1 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = v18;
  v23 = *(_BYTE *)(a1 + 88);
  *(_BYTE *)(a1 + 88) = v19;
  sub_1B0F56ADC(v20, v21, v22, v23);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnimationModifier(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;
  int v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 89))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 56);
  v4 = v3 ^ 0xFF;
  if ((int)(v3 ^ 0xFF) <= 1)
    v4 = 1;
  v5 = v4 - 2;
  if (v3 <= 1)
    v6 = -1;
  else
    v6 = v5;
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for AnimationModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 88) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 89) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 89) = 0;
    if (a2)
      *(_BYTE *)(result + 56) = -2 - a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnimationModifier()
{
  return &type metadata for AnimationModifier;
}

uint64_t sub_1B101B17C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  _QWORD v35[5];

  v23 = *(_QWORD *)v3;
  v24 = *(_QWORD *)(v3 + 8);
  v25 = *(_QWORD *)(v3 + 16);
  v26 = *(_QWORD *)(v3 + 24);
  v6 = *(_QWORD *)(v3 + 48);
  v18 = *(_QWORD *)(v3 + 40);
  v19 = *(_QWORD *)(v3 + 32);
  v22 = *(unsigned __int8 *)(v3 + 56);
  v7 = *(_QWORD *)(v3 + 72);
  v8 = *(_QWORD *)(v3 + 80);
  v9 = *(_BYTE *)(v3 + 88);
  v27 = *(_QWORD *)(v3 + 64);
  v28 = v7;
  v29 = v8;
  v30 = v9;
  sub_1B0F56B9C(v27, v7, v8, v9);
  v10 = StringResolvable.resolved(with:)(a2);
  v12 = v11;
  result = sub_1B0F56ADC(v27, v7, v8, v9);
  if (!v4)
  {
    if (v22 != 254)
    {
      v27 = v23;
      v28 = v24;
      v29 = v25;
      v30 = v26;
      v31 = v19;
      v32 = v18;
      v33 = v6;
      v34 = v22;
      sub_1B0F56B9C(v23, v24, v25, v26);
      sub_1B0F5FD10(v19, v18, v6, v22);
      sub_1B0FA52E0(a2);
      sub_1B0FF0CE8(v23, v24, v25, v26, v19, v18, v6, v22, (void (*)(void))sub_1B0F56ADC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B0F5FD28);
    }
    v14 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    RemoteStateStore.subscript.getter(v10, v12, &v27);
    swift_bridgeObjectRelease();
    v15 = v27;
    v35[4] = v27;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEE13A0);
    v16 = sub_1B103497C();
    a3[3] = v16;
    v17 = sub_1B101B908();
    v35[0] = v14;
    v35[1] = v17;
    a3[4] = MEMORY[0x1B5E15188](MEMORY[0x1E0CD9C20], v16, v35);
    __swift_allocate_boxed_opaque_existential_1(a3);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EEEE0288);
    sub_1B101B954();
    sub_1B1035630();
    swift_release();
    return sub_1B0FC9D10(v15);
  }
  return result;
}

uint64_t sub_1B101B430(char a1)
{
  if ((a1 & 1) != 0)
    return 0x65756C6176;
  else
    return 0x6F6974616D696E61;
}

uint64_t sub_1B101B468()
{
  char *v0;

  return sub_1B101B430(*v0);
}

uint64_t sub_1B101B470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B101BBA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1B101B494()
{
  sub_1B101B9B8();
  return sub_1B10362B4();
}

uint64_t sub_1B101B4BC()
{
  sub_1B101B9B8();
  return sub_1B10362C0();
}

uint64_t sub_1B101B4E4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned __int8 v46;
  unsigned int v47;
  char v48;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE13B8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B101B9B8();
  sub_1B1036278();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v48 = 0;
  sub_1B0FF0DDC();
  sub_1B10360A4();
  v9 = v42;
  v48 = 1;
  v37 = v40;
  v38 = v39;
  v10 = v41;
  v35 = v44;
  v36 = v43;
  v34 = v45;
  v47 = v46;
  sub_1B0FF0CE8(v39, v40, v41, v42, v43, v44, v45, v46, (void (*)(void))sub_1B0F56B9C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B0F5FD10);
  sub_1B0F56A98();
  sub_1B10360BC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v33 = v9;
  v11 = v40;
  v32 = v39;
  v30 = v40;
  v12 = v41;
  v13 = v42;
  v29 = v42;
  v28 = v10;
  v14 = v9;
  v15 = v35;
  v16 = v47;
  sub_1B0FF0CE8(v38, v37, v10, v14, v36, v35, v34, v47, (void (*)(void))sub_1B0F56B9C, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B0F5FD10);
  v31 = v12;
  sub_1B0F56B9C(v32, v11, v12, v13);
  v18 = v37;
  v17 = v38;
  v19 = v10;
  v20 = v33;
  v21 = v36;
  v22 = v15;
  v23 = v34;
  sub_1B0FF0CE8(v38, v37, v19, v33, v36, v22, v34, v16, (void (*)(void))sub_1B0F56ADC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B0F5FD28);
  *(_QWORD *)a2 = v17;
  *(_QWORD *)(a2 + 8) = v18;
  v24 = v28;
  *(_QWORD *)(a2 + 16) = v28;
  *(_QWORD *)(a2 + 24) = v20;
  v25 = v35;
  *(_QWORD *)(a2 + 32) = v21;
  *(_QWORD *)(a2 + 40) = v25;
  *(_QWORD *)(a2 + 48) = v23;
  *(_BYTE *)(a2 + 56) = v16;
  v26 = v30;
  *(_QWORD *)(a2 + 64) = v32;
  *(_QWORD *)(a2 + 72) = v26;
  *(_QWORD *)(a2 + 80) = v31;
  LOBYTE(v17) = v29;
  *(_BYTE *)(a2 + 88) = v29;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_1B0FF0CE8(v38, v37, v24, v33, v36, v25, v23, v16, (void (*)(void))sub_1B0F56ADC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B0F5FD28);
  return sub_1B0F56ADC(v32, v26, v31, v17);
}

uint64_t sub_1B101B878@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B101B17C(a1, a2, a3);
}

uint64_t sub_1B101B88C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B101B4E4(a1, a2);
}

unint64_t sub_1B101B8A0(uint64_t a1)
{
  unint64_t result;

  result = sub_1B101B8C4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B101B8C4()
{
  unint64_t result;

  result = qword_1EEEE1398;
  if (!qword_1EEEE1398)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10487A4, &type metadata for AnimationModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE1398);
  }
  return result;
}

unint64_t sub_1B101B908()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEEE13A8;
  if (!qword_1EEEE13A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEE13A0);
    result = MEMORY[0x1B5E15188](MEMORY[0x1E0CDB148], v1);
    atomic_store(result, (unint64_t *)&qword_1EEEE13A8);
  }
  return result;
}

unint64_t sub_1B101B954()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_1EEEE13B0;
  if (!qword_1EEEE13B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EEEE0288);
    v2 = sub_1B0FA1B48();
    result = MEMORY[0x1B5E15188](MEMORY[0x1E0DEE998], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1EEEE13B0);
  }
  return result;
}

unint64_t sub_1B101B9B8()
{
  unint64_t result;

  result = qword_1EEEE13C0;
  if (!qword_1EEEE13C0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10488AC, &type metadata for AnimationModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE13C0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AnimationModifier.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B101BA48 + 4 * byte_1B1048775[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B101BA7C + 4 * byte_1B1048770[v4]))();
}

uint64_t sub_1B101BA7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B101BA84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B101BA8CLL);
  return result;
}

uint64_t sub_1B101BA98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B101BAA0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B101BAA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B101BAAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AnimationModifier.CodingKeys()
{
  return &type metadata for AnimationModifier.CodingKeys;
}

unint64_t sub_1B101BACC()
{
  unint64_t result;

  result = qword_1EEEE13C8;
  if (!qword_1EEEE13C8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1048884, &type metadata for AnimationModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE13C8);
  }
  return result;
}

unint64_t sub_1B101BB14()
{
  unint64_t result;

  result = qword_1EEEE13D0;
  if (!qword_1EEEE13D0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10487F4, &type metadata for AnimationModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE13D0);
  }
  return result;
}

unint64_t sub_1B101BB5C()
{
  unint64_t result;

  result = qword_1EEEE13D8;
  if (!qword_1EEEE13D8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104881C, &type metadata for AnimationModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE13D8);
  }
  return result;
}

uint64_t sub_1B101BBA0(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x6F6974616D696E61 && a2 == 0xE90000000000006ELL;
  if (v3 || (sub_1B1036128() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1B1036128();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

ValueMetadata *type metadata accessor for FormStyleModifier()
{
  return &type metadata for FormStyleModifier;
}

uint64_t sub_1B101BC98(char a1)
{
  return *(_QWORD *)&aAutomaticolumn_0[8 * a1];
}

uint64_t sub_1B101BCB8(char *a1, char *a2)
{
  return sub_1B100DFB8(*a1, *a2);
}

uint64_t sub_1B101BCC4()
{
  return sub_1B10114E8();
}

uint64_t sub_1B101BCCC()
{
  return sub_1B1012BE8();
}

uint64_t sub_1B101BCD4()
{
  return sub_1B10143F8();
}

uint64_t sub_1B101BCDC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B101C590();
  *a1 = result;
  return result;
}

uint64_t sub_1B101BD08@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B101BC98(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B101BD30()
{
  sub_1B101C54C();
  return sub_1B1035CB4();
}

uint64_t sub_1B101BD8C()
{
  sub_1B101C54C();
  return sub_1B1035CA8();
}

uint64_t sub_1B101BDD8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B103605C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B101BE28@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B103605C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B101BE7C()
{
  sub_1B101C23C();
  return sub_1B10362B4();
}

uint64_t sub_1B101BEA4()
{
  sub_1B101C23C();
  return sub_1B10362C0();
}

uint64_t sub_1B101BECC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD v14[2];
  uint64_t v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE13E8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B101C23C();
  sub_1B1036278();
  if (!v2)
  {
    sub_1B101C280();
    sub_1B10360BC();
    if (v16)
    {
      if (v16 == 1)
      {
        v12 = sub_1B10349AC();
        v13 = sub_1B0F524FC(&qword_1EEEE1408, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9E28], MEMORY[0x1E0CD9E20]);
        __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v11);
        sub_1B1035A20();
      }
      else
      {
        v12 = sub_1B10349D0();
        v13 = sub_1B0F524FC(&qword_1EEEE1400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9E78], MEMORY[0x1E0CD9E68]);
        __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v11);
        sub_1B1035A2C();
      }
    }
    else
    {
      v12 = sub_1B1034BD4();
      v13 = sub_1B0F524FC(&qword_1EEEE1410, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDAE90], MEMORY[0x1E0CDAE80]);
      __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v11);
      sub_1B1034BC8();
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1B0F5A0E4(&v11, (uint64_t)v14);
    v9 = v14[1];
    *(_OWORD *)a2 = v14[0];
    *(_OWORD *)(a2 + 16) = v9;
    *(_QWORD *)(a2 + 32) = v15;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B101C0E4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a1[3];
  v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  v6 = v2[3];
  v7 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v6);
  v9 = v4;
  v10 = v6;
  v11 = v5;
  v12 = v7;
  a2[3] = MEMORY[0x1B5E15134](0, &v9, MEMORY[0x1E0CDF270], 0);
  v9 = v4;
  v10 = v6;
  v11 = v5;
  v12 = v7;
  a2[4] = swift_getOpaqueTypeConformance2();
  __swift_allocate_boxed_opaque_existential_1(a2);
  return sub_1B1035654();
}

uint64_t sub_1B101C1C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B101BECC(a1, a2);
}

unint64_t sub_1B101C1D4(uint64_t a1)
{
  unint64_t result;

  result = sub_1B101C1F8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B101C1F8()
{
  unint64_t result;

  result = qword_1EEEE13E0;
  if (!qword_1EEEE13E0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1048934, &type metadata for FormStyleModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE13E0);
  }
  return result;
}

unint64_t sub_1B101C23C()
{
  unint64_t result;

  result = qword_1EEEE13F0;
  if (!qword_1EEEE13F0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1048B74, &type metadata for FormStyleModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE13F0);
  }
  return result;
}

unint64_t sub_1B101C280()
{
  unint64_t result;

  result = qword_1EEEE13F8;
  if (!qword_1EEEE13F8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1048B4C, &type metadata for FormStyleString);
    atomic_store(result, (unint64_t *)&qword_1EEEE13F8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FormStyleString(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B101C310 + 4 * byte_1B1048905[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B101C344 + 4 * byte_1B1048900[v4]))();
}

uint64_t sub_1B101C344(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B101C34C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B101C354);
  return result;
}

uint64_t sub_1B101C360(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B101C368);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B101C36C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B101C374(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormStyleString()
{
  return &type metadata for FormStyleString;
}

uint64_t storeEnumTagSinglePayload for FormStyleModifier.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B101C3D0 + 4 * byte_1B104890A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B101C3F0 + 4 * byte_1B104890F[v4]))();
}

_BYTE *sub_1B101C3D0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B101C3F0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B101C3F8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B101C400(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B101C408(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B101C410(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FormStyleModifier.CodingKeys()
{
  return &type metadata for FormStyleModifier.CodingKeys;
}

unint64_t sub_1B101C430()
{
  unint64_t result;

  result = qword_1EEEE1418;
  if (!qword_1EEEE1418)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1048A5C, &type metadata for FormStyleModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1418);
  }
  return result;
}

unint64_t sub_1B101C478()
{
  unint64_t result;

  result = qword_1EEEE1420;
  if (!qword_1EEEE1420)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1048B24, &type metadata for FormStyleString);
    atomic_store(result, (unint64_t *)&qword_1EEEE1420);
  }
  return result;
}

unint64_t sub_1B101C4C0()
{
  unint64_t result;

  result = qword_1EEEE1428;
  if (!qword_1EEEE1428)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1048994, &type metadata for FormStyleModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1428);
  }
  return result;
}

unint64_t sub_1B101C508()
{
  unint64_t result;

  result = qword_1EEEE1430;
  if (!qword_1EEEE1430)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10489BC, &type metadata for FormStyleModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1430);
  }
  return result;
}

unint64_t sub_1B101C54C()
{
  unint64_t result;

  result = qword_1EEEE1438;
  if (!qword_1EEEE1438)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1048AAC, &type metadata for FormStyleString);
    atomic_store(result, (unint64_t *)&qword_1EEEE1438);
  }
  return result;
}

uint64_t sub_1B101C590()
{
  unint64_t v0;

  v0 = sub_1B103605C();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t destroy for LiftUIViewResponse(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for LiftUIViewResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    v5 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v5;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    v6 = *(_BYTE *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 64) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, a2 + 40);
    *(_BYTE *)(a1 + 80) = v6;
    v8 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = v8;
    v9 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = v9;
    swift_retain();
    swift_retain();
  }
  else
  {
    v10 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v10;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    v11 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v11;
    v12 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v12;
  }
  return a1;
}

uint64_t assignWithCopy for LiftUIViewResponse(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v4 = *((_QWORD *)a2 + 1);
  if (*(_QWORD *)(a1 + 8))
  {
    if (v4)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
      *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if ((__int128 *)a1 != a2)
      {
        sub_1B0F62D10(a1 + 40);
        v5 = *((_BYTE *)a2 + 80);
        v6 = *((_QWORD *)a2 + 8);
        *(_QWORD *)(a1 + 64) = v6;
        *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
        (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 40, (uint64_t)a2 + 40);
        *(_BYTE *)(a1 + 80) = v5;
      }
      *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
      *(_QWORD *)(a1 + 104) = *((_QWORD *)a2 + 13);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
    }
    else
    {
      sub_1B0F6427C(a1);
      v9 = a2[3];
      v11 = *a2;
      v10 = a2[1];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v9;
      *(_OWORD *)a1 = v11;
      *(_OWORD *)(a1 + 16) = v10;
      v13 = a2[5];
      v12 = a2[6];
      v14 = a2[4];
      *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
      *(_OWORD *)(a1 + 80) = v13;
      *(_OWORD *)(a1 + 96) = v12;
      *(_OWORD *)(a1 + 64) = v14;
    }
  }
  else if (v4)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
    *(_QWORD *)(a1 + 16) = *((_QWORD *)a2 + 2);
    *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    v7 = *((_BYTE *)a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8 = *((_QWORD *)a2 + 8);
    *(_QWORD *)(a1 + 64) = v8;
    *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 40, (uint64_t)a2 + 40);
    *(_BYTE *)(a1 + 80) = v7;
    *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
    *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
    *(_QWORD *)(a1 + 104) = *((_QWORD *)a2 + 13);
    *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
    swift_retain();
    swift_retain();
  }
  else
  {
    v15 = *a2;
    v16 = a2[1];
    v17 = a2[3];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v17;
    *(_OWORD *)a1 = v15;
    *(_OWORD *)(a1 + 16) = v16;
    v18 = a2[4];
    v19 = a2[5];
    v20 = a2[6];
    *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
    *(_OWORD *)(a1 + 80) = v19;
    *(_OWORD *)(a1 + 96) = v20;
    *(_OWORD *)(a1 + 64) = v18;
  }
  return a1;
}

uint64_t assignWithTake for LiftUIViewResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  if (!*(_QWORD *)(a1 + 8))
    goto LABEL_7;
  v4 = *(_QWORD *)(a2 + 8);
  if (!v4)
  {
    sub_1B0F6427C(a1);
LABEL_7:
    v7 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v7;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    sub_1B0F62D10(a1 + 40);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 65) = *(_OWORD *)(a2 + 65);
  }
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_release();
  v6 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v6;
  swift_release();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for LiftUIViewResponse(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 120))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LiftUIViewResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 120) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for LiftUIViewResponse()
{
  return &type metadata for LiftUIViewResponse;
}

_QWORD *initializeBufferWithCopyOfBuffer for LiftUIDataResponse(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for LiftUIDataResponse()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for LiftUIDataResponse(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for LiftUIDataResponse(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LiftUIDataResponse(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LiftUIDataResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for LiftUIDataResponse()
{
  return &type metadata for LiftUIDataResponse;
}

uint64_t sub_1B101CC58@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v16[120];
  _OWORD v17[7];
  uint64_t v18;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1458);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B101D0B8();
  sub_1B1036278();
  if (!v2)
  {
    sub_1B0F64238();
    sub_1B10360A4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1B0F79004((uint64_t)v16, (uint64_t)v17);
    v9 = v17[5];
    v10 = v17[6];
    v11 = v17[3];
    *(_OWORD *)(a2 + 64) = v17[4];
    *(_OWORD *)(a2 + 80) = v9;
    *(_OWORD *)(a2 + 96) = v10;
    v12 = v17[1];
    v13 = v17[2];
    *(_OWORD *)a2 = v17[0];
    *(_OWORD *)(a2 + 16) = v12;
    *(_QWORD *)(a2 + 112) = v18;
    *(_OWORD *)(a2 + 32) = v13;
    *(_OWORD *)(a2 + 48) = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B101CDAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B101D37C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B101CDD4()
{
  sub_1B101D008();
  return sub_1B10362B4();
}

uint64_t sub_1B101CDFC()
{
  sub_1B101D008();
  return sub_1B10362C0();
}

_QWORD *sub_1B101CE24@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1B101CEDC(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1B101CE50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B101D3F0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B101CE78()
{
  sub_1B101D0B8();
  return sub_1B10362B4();
}

uint64_t sub_1B101CEA0()
{
  sub_1B101D0B8();
  return sub_1B10362C0();
}

uint64_t sub_1B101CEC8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B101CC58(a1, a2);
}

_QWORD *sub_1B101CEDC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1440);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B101D008();
  sub_1B1036278();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF5E0);
    sub_1B101D04C();
    sub_1B10360A4();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v7 = (_QWORD *)v9[1];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_1B101D008()
{
  unint64_t result;

  result = qword_1EEEE1448;
  if (!qword_1EEEE1448)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1048E70, &type metadata for LiftUIDataResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1448);
  }
  return result;
}

unint64_t sub_1B101D04C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_1EEEE1450;
  if (!qword_1EEEE1450)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEDF5E0);
    v2 = sub_1B0F9D608();
    v3[0] = MEMORY[0x1E0DEA9A0];
    v3[1] = v2;
    result = MEMORY[0x1B5E15188](MEMORY[0x1E0DEA0D8], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EEEE1450);
  }
  return result;
}

unint64_t sub_1B101D0B8()
{
  unint64_t result;

  result = qword_1EEEE1460;
  if (!qword_1EEEE1460)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1048E20, &type metadata for LiftUIViewResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1460);
  }
  return result;
}

ValueMetadata *type metadata accessor for LiftUIViewResponse.CodingKeys()
{
  return &type metadata for LiftUIViewResponse.CodingKeys;
}

uint64_t _s6LiftUI18LiftUIViewResponseV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B101D150 + 4 * byte_1B1048C00[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B101D170 + 4 * byte_1B1048C05[v4]))();
}

_BYTE *sub_1B101D150(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B101D170(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B101D178(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B101D180(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B101D188(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B101D190(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LiftUIDataResponse.CodingKeys()
{
  return &type metadata for LiftUIDataResponse.CodingKeys;
}

unint64_t sub_1B101D1B0()
{
  unint64_t result;

  result = qword_1EEEE1468;
  if (!qword_1EEEE1468)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1048D40, &type metadata for LiftUIDataResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1468);
  }
  return result;
}

unint64_t sub_1B101D1F8()
{
  unint64_t result;

  result = qword_1EEEE1470;
  if (!qword_1EEEE1470)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1048DF8, &type metadata for LiftUIViewResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1470);
  }
  return result;
}

unint64_t sub_1B101D240()
{
  unint64_t result;

  result = qword_1EEEE1478;
  if (!qword_1EEEE1478)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1048D68, &type metadata for LiftUIViewResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1478);
  }
  return result;
}

unint64_t sub_1B101D288()
{
  unint64_t result;

  result = qword_1EEEE1480;
  if (!qword_1EEEE1480)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1048D90, &type metadata for LiftUIViewResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1480);
  }
  return result;
}

unint64_t sub_1B101D2D0()
{
  unint64_t result;

  result = qword_1EEEE1488;
  if (!qword_1EEEE1488)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1048CB0, &type metadata for LiftUIDataResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1488);
  }
  return result;
}

unint64_t sub_1B101D318()
{
  unint64_t result;

  result = qword_1EEEE1490;
  if (!qword_1EEEE1490)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1048CD8, &type metadata for LiftUIDataResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1490);
  }
  return result;
}

uint64_t sub_1B101D35C()
{
  return 1635017060;
}

uint64_t sub_1B101D36C()
{
  return 2003134838;
}

uint64_t sub_1B101D37C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1B1036128();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B101D3F0(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 2003134838 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1B1036128();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1B101D468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1B101D470(char a1)
{
  return *(_QWORD *)&aBlue_1[8 * a1];
}

uint64_t sub_1B101D490(char *a1, char *a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1B101D470(*a1);
  v5 = v4;
  if (v3 == sub_1B101D470(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1B1036128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1B101D518()
{
  char *v0;
  char v1;

  v1 = *v0;
  sub_1B103620C();
  sub_1B101D470(v1);
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B101D578()
{
  char *v0;

  sub_1B101D470(*v0);
  sub_1B1035C00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1B101D5B8()
{
  char *v0;
  char v1;

  v1 = *v0;
  sub_1B103620C();
  sub_1B101D470(v1);
  sub_1B1035C00();
  swift_bridgeObjectRelease();
  return sub_1B103623C();
}

uint64_t sub_1B101D614@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1023BAC();
  *a1 = result;
  return result;
}

uint64_t sub_1B101D640@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B101D470(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B101D668()
{
  sub_1B1024EBC();
  return sub_1B1035CB4();
}

uint64_t sub_1B101D6C4()
{
  sub_1B1024EBC();
  return sub_1B1035CA8();
}

void sub_1B101D710(char a1)
{
  uint64_t v2;

  v2 = sub_1B1035690();
  MEMORY[0x1E0C80A78](v2);
  __asm { BR              X10 }
}

uint64_t sub_1B101D774()
{
  return sub_1B10356C0();
}

uint64_t sub_1B101D784()
{
  return sub_1B10356A8();
}

uint64_t sub_1B101D794()
{
  return sub_1B10356FC();
}

uint64_t sub_1B101D7A4()
{
  return sub_1B1035708();
}

uint64_t sub_1B101D7B4()
{
  return sub_1B1035720();
}

uint64_t sub_1B101D7C4()
{
  return sub_1B103572C();
}

uint64_t sub_1B101D7D4()
{
  return sub_1B10356D8();
}

uint64_t sub_1B101D7E4()
{
  return sub_1B1035738();
}

uint64_t sub_1B101D7F4()
{
  return sub_1B103569C();
}

uint64_t sub_1B101D804()
{
  return sub_1B10356E4();
}

uint64_t sub_1B101D814()
{
  return sub_1B10356CC();
}

uint64_t sub_1B101D824()
{
  return sub_1B1035744();
}

uint64_t sub_1B101D834()
{
  return sub_1B10356F0();
}

uint64_t sub_1B101D844()
{
  return sub_1B10356B4();
}

uint64_t sub_1B101D854()
{
  uint64_t v0;
  uint64_t v1;

  (*(void (**)(uint64_t, _QWORD))(v0 + 104))(v1, *MEMORY[0x1E0CDF3E0]);
  return sub_1B1035774();
}

void sub_1B101D8B4()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_magentaColor);
  JUMPOUT(0x1B5E140D8);
}

uint64_t sub_1B101D8E4()
{
  return sub_1B1035714();
}

uint64_t sub_1B101D8F4()
{
  return sub_1B103575C();
}

uint64_t sub_1B101D904()
{
  return sub_1B1035750();
}

void sub_1B101D978()
{
  char *v0;

  sub_1B101D710(*v0);
}

void sub_1B101D980(char a1)
{
  __asm { BR              X10 }
}

void sub_1B101D9A4()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_systemBlueColor);
  JUMPOUT(0x1B5E140D8);
}

uint64_t sub_1B101DC54()
{
  return sub_1B1035714();
}

uint64_t sub_1B101DC5C()
{
  return sub_1B103575C();
}

void sub_1B101DCD0()
{
  char *v0;

  sub_1B101D980(*v0);
}

unint64_t sub_1B101DCD8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  unint64_t result;

  result = sub_1B1023AB8(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1B101DD00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  v3 = sub_1B1035690();
  v17 = *(_QWORD *)(v3 - 8);
  v18 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)v1;
  v7 = *(_QWORD *)(v1 + 8);
  v8 = *(_QWORD *)(v1 + 16);
  v9 = *(_QWORD *)(v1 + 40);
  v15 = *(_QWORD *)(v1 + 32);
  v10 = *(_QWORD *)(v1 + 48);
  v11 = *(unsigned __int8 *)(v1 + 56);
  v12 = *(_BYTE *)(v1 + 24);
  v19 = v6;
  v20 = v7;
  v21 = v8;
  v22 = v12;
  sub_1B0F6C708(v6, v7, v8, v12);
  v16 = a1;
  sub_1B0FA70A4(a1);
  sub_1B0F6C7D4(v6, v7, v8, v12);
  if (v11 <= 0xFD)
  {
    v13 = v15;
    v19 = v15;
    v20 = v9;
    v21 = v10;
    v22 = v11;
    sub_1B0F6C708(v15, v9, v10, v11);
    sub_1B0FA70A4(v16);
    sub_1B0F6C7C0(v13, v9, v10, v11);
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v5, *MEMORY[0x1E0CDF3E0], v18);
  return sub_1B1035774();
}

uint64_t sub_1B101DE98(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7974696361706FLL;
  else
    return 0x6574696877;
}

uint64_t sub_1B101DECC(char *a1, char *a2)
{
  return sub_1B100BF8C(*a1, *a2);
}

uint64_t sub_1B101DED8()
{
  return sub_1B1011550();
}

uint64_t sub_1B101DEE0()
{
  return sub_1B1011BD8();
}

uint64_t sub_1B101DEE8()
{
  return sub_1B1015B94();
}

uint64_t sub_1B101DEF0@<X0>(char *a1@<X8>)
{
  return sub_1B0F7BF1C(a1);
}

uint64_t sub_1B101DEFC@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B101DE98(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B101DF24()
{
  char *v0;

  return sub_1B101DE98(*v0);
}

uint64_t sub_1B101DF2C@<X0>(char *a1@<X8>)
{
  return sub_1B0F7BFB0(a1);
}

uint64_t sub_1B101DF38()
{
  sub_1B10238D8();
  return sub_1B10362B4();
}

uint64_t sub_1B101DF60()
{
  sub_1B10238D8();
  return sub_1B10362C0();
}

uint64_t sub_1B101DF88@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  int v30;
  char v31;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1660);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B10238D8();
  sub_1B1036278();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v31 = 0;
  sub_1B0F7E5F8();
  sub_1B10360BC();
  v9 = v27;
  v31 = 1;
  v24 = v28;
  v25 = v26;
  v30 = v29;
  sub_1B0F6C708(v26, v27, v28, v29);
  sub_1B10360A4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v10 = v26;
  v22 = v27;
  v23 = v26;
  v11 = v28;
  v21 = v28;
  HIDWORD(v20) = v29;
  v12 = v24;
  v13 = v25;
  v14 = v30;
  sub_1B0F6C708(v25, v9, v24, v30);
  v15 = v10;
  v16 = v22;
  v17 = v11;
  LOBYTE(v11) = BYTE4(v20);
  sub_1B0F6C6F4(v15, v22, v17, SBYTE4(v20));
  sub_1B0F6C7D4(v13, v9, v12, v14);
  *(_QWORD *)a2 = v13;
  *(_QWORD *)(a2 + 8) = v9;
  *(_QWORD *)(a2 + 16) = v12;
  *(_BYTE *)(a2 + 24) = v14;
  *(_QWORD *)(a2 + 32) = v23;
  *(_QWORD *)(a2 + 40) = v16;
  v18 = v21;
  *(_QWORD *)(a2 + 48) = v21;
  *(_BYTE *)(a2 + 56) = v11;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_1B0F6C7D4(v13, v9, v12, v14);
  return sub_1B0F6C7C0(v23, v22, v18, v11);
}

uint64_t sub_1B101E204@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B101DF88(a1, a2);
}

uint64_t sub_1B101E218(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  char v26;
  double v27;
  double v28;
  double v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  char v35;
  char v36;
  char *v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;

  v3 = sub_1B1035690();
  v46 = *(_QWORD *)(v3 - 8);
  v47 = v3;
  MEMORY[0x1E0C80A78](v3);
  v45 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)v1;
  v6 = *(_QWORD *)(v1 + 8);
  v7 = *(_QWORD *)(v1 + 16);
  v9 = *(_QWORD *)(v1 + 32);
  v8 = *(_QWORD *)(v1 + 40);
  v10 = *(_QWORD *)(v1 + 48);
  v11 = *(_BYTE *)(v1 + 56);
  v12 = *(_QWORD *)(v1 + 64);
  v50 = *(_QWORD *)(v1 + 72);
  v51 = v12;
  v49 = *(_QWORD *)(v1 + 80);
  v48 = *(unsigned __int8 *)(v1 + 88);
  v13 = *(_QWORD *)(v1 + 96);
  v41 = *(_QWORD *)(v1 + 104);
  v42 = v13;
  v40 = *(_QWORD *)(v1 + 112);
  v44 = *(unsigned __int8 *)(v1 + 120);
  v14 = *(_BYTE *)(v1 + 24);
  v52 = v5;
  v53 = v6;
  v54 = v7;
  v55 = v14;
  sub_1B0F6C708(v5, v6, v7, v14);
  v43 = sub_1B0FA70A4(a1);
  v16 = v15;
  sub_1B0F6C7D4(v5, v6, v7, v14);
  if ((v16 & 1) != 0)
    return sub_1B1035714();
  v52 = v9;
  v53 = v8;
  v54 = v10;
  v55 = v11;
  sub_1B0F6C708(v9, v8, v10, v11);
  v17 = sub_1B0FA70A4(a1);
  v19 = v18;
  sub_1B0F6C7D4(v9, v8, v10, v11);
  if ((v19 & 1) != 0)
    return sub_1B1035714();
  v21 = v50;
  v20 = v51;
  v52 = v51;
  v53 = v50;
  v22 = v49;
  v54 = v49;
  v23 = v48;
  v55 = v48;
  sub_1B0F6C708(v51, v50, v49, v48);
  v24 = sub_1B0FA70A4(a1);
  v26 = v25;
  sub_1B0F6C7D4(v20, v21, v22, v23);
  if ((v26 & 1) != 0)
    return sub_1B1035714();
  v27 = *(double *)&v43;
  v28 = *(double *)&v24;
  v29 = 1.0;
  v30 = v44;
  if (v44 <= 0xFD)
  {
    v32 = v41;
    v31 = v42;
    v52 = v42;
    v53 = v41;
    v33 = v40;
    v54 = v40;
    v55 = v44;
    sub_1B0F6C708(v42, v41, v40, v44);
    v34 = COERCE_DOUBLE(sub_1B0FA70A4(a1));
    v36 = v35;
    sub_1B0F6C7C0(v31, v32, v33, v30);
    if ((v36 & 1) != 0)
      v29 = 1.0;
    else
      v29 = v34;
  }
  v37 = v45;
  (*(void (**)(char *, _QWORD, uint64_t))(v46 + 104))(v45, *MEMORY[0x1E0CDF3E0], v47);
  return MEMORY[0x1B5E141C8](v37, v27, *(double *)&v17, v28, v29);
}

uint64_t sub_1B101E4C4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B101E4EC + 4 * byte_1B1048ED0[a1]))(114, 0xE100000000000000);
}

uint64_t sub_1B101E4EC()
{
  return 103;
}

uint64_t sub_1B101E4F4()
{
  return 98;
}

uint64_t sub_1B101E4FC()
{
  return 0x7974696361706FLL;
}

uint64_t sub_1B101E514(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1B101E53C + 4 * byte_1B1048ED4[a1]))(114, 0xE100000000000000);
}

uint64_t sub_1B101E53C()
{
  return 103;
}

uint64_t sub_1B101E544()
{
  return 98;
}

uint64_t sub_1B101E54C()
{
  return 0x7974696361706FLL;
}

void sub_1B101E564(char *a1)
{
  sub_1B100BE84(*a1);
}

void sub_1B101E570()
{
  char *v0;

  sub_1B10115CC(*v0);
}

void sub_1B101E578(uint64_t a1)
{
  char *v1;

  sub_1B1011B68(a1, *v1);
}

void sub_1B101E580(uint64_t a1)
{
  char *v1;

  sub_1B1015C0C(a1, *v1);
}

uint64_t sub_1B101E588@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1023BFC();
  *a1 = result;
  return result;
}

uint64_t sub_1B101E5B4@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B101E4C4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B101E5DC()
{
  unsigned __int8 *v0;

  return sub_1B101E514(*v0);
}

uint64_t sub_1B101E5E4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1023BFC();
  *a1 = result;
  return result;
}

uint64_t sub_1B101E608()
{
  sub_1B102391C();
  return sub_1B10362B4();
}

uint64_t sub_1B101E630()
{
  sub_1B102391C();
  return sub_1B10362C0();
}

uint64_t sub_1B101E658@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  _OWORD *v26;
  __int128 v27;
  __int128 v28;
  uint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  _OWORD v53[2];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  __int128 v70;
  uint64_t v71;
  unsigned __int8 v72;
  int v73;
  char v74;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1670);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v46 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1B102391C();
  sub_1B1036278();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
  v44 = a2;
  v45 = v6;
  LOBYTE(v47) = 0;
  sub_1B0F7E5F8();
  sub_1B10360BC();
  v10 = v54;
  v11 = v57;
  LOBYTE(v47) = 1;
  v43 = v55;
  v12 = v56;
  sub_1B0F6C708(v54, v55, v56, v57);
  sub_1B10360BC();
  v36 = v11;
  v37 = v12;
  v35 = v10;
  v13 = v54;
  v14 = v56;
  LODWORD(v10) = v57;
  LOBYTE(v47) = 2;
  v41 = v55;
  sub_1B0F6C708(v54, v55, v56, v57);
  v34 = 0;
  sub_1B10360BC();
  v38 = v14;
  v39 = v13;
  v33 = v10;
  v16 = v54;
  v15 = v55;
  v74 = 3;
  v42 = v56;
  v73 = v57;
  sub_1B0F6C708(v54, v55, v56, v57);
  sub_1B10360A4();
  v40 = v16;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v8, v5);
  v34 = *((_QWORD *)&v70 + 1);
  v45 = v70;
  v32 = v71;
  v31 = v72;
  v17 = v35;
  v18 = v16;
  v19 = v42;
  *(_QWORD *)&v47 = v35;
  *((_QWORD *)&v47 + 1) = v43;
  v20 = v38;
  *(_QWORD *)&v48 = v37;
  BYTE8(v48) = v36;
  *(_QWORD *)&v49 = v39;
  *((_QWORD *)&v49 + 1) = v41;
  *(_QWORD *)&v50 = v38;
  v21 = v33;
  BYTE8(v50) = v33;
  *(_QWORD *)&v51 = v16;
  *((_QWORD *)&v51 + 1) = v15;
  *(_QWORD *)&v52 = v42;
  LOBYTE(v16) = v73;
  BYTE8(v52) = v73;
  v53[0] = v70;
  *(_QWORD *)&v53[1] = v71;
  BYTE8(v53[1]) = v72;
  sub_1B1023960((uint64_t)&v47, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B0F6C708, (void (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1B0F6C6F4);
  sub_1B0F6C7D4(v18, v15, v19, v16);
  sub_1B0F6C7D4(v39, v41, v20, v21);
  v22 = v17;
  v23 = v43;
  v24 = v37;
  LOBYTE(v18) = v36;
  sub_1B0F6C7D4(v17, v43, v37, v36);
  v25 = v52;
  v26 = v44;
  v44[4] = v51;
  v26[5] = v25;
  v26[6] = v53[0];
  *(_OWORD *)((char *)v26 + 105) = *(_OWORD *)((char *)v53 + 9);
  v27 = v48;
  *v26 = v47;
  v26[1] = v27;
  v28 = v50;
  v26[2] = v49;
  v26[3] = v28;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
  v54 = v22;
  v55 = v23;
  v56 = v24;
  v57 = v18;
  v58 = v39;
  v59 = v41;
  v60 = v20;
  v61 = v33;
  v62 = v40;
  v63 = v15;
  v64 = v42;
  v65 = v73;
  v66 = v45;
  v67 = v34;
  v68 = v32;
  v69 = v31;
  return sub_1B1023960((uint64_t)&v54, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B0F6C7D4, (void (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1B0F6C7C0);
}

uint64_t sub_1B101EBA0@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1B101E658(a1, a2);
}

uint64_t sub_1B101EBB4(char a1)
{
  if ((a1 & 1) != 0)
    return 0x656C646E7562;
  else
    return 1701667182;
}

uint64_t sub_1B101EBE0(char *a1, char *a2)
{
  return sub_1B100EE60(*a1, *a2);
}

uint64_t sub_1B101EBEC()
{
  return sub_1B1011660();
}

uint64_t sub_1B101EBF4()
{
  return sub_1B1013300();
}

uint64_t sub_1B101EBFC()
{
  return sub_1B1013A14();
}

uint64_t sub_1B101EC04@<X0>(char *a1@<X8>)
{
  return sub_1B0F7BF1C(a1);
}

uint64_t sub_1B101EC10@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B101EBB4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B101EC38()
{
  char *v0;

  return sub_1B101EBB4(*v0);
}

uint64_t sub_1B101EC40@<X0>(char *a1@<X8>)
{
  return sub_1B0F7BFB0(a1);
}

uint64_t sub_1B101EC4C()
{
  sub_1B1023A30();
  return sub_1B10362B4();
}

uint64_t sub_1B101EC74()
{
  sub_1B1023A30();
  return sub_1B10362C0();
}

uint64_t sub_1B101EC9C()
{
  uint64_t v0;
  void *v1;
  id v2;

  if (*(_QWORD *)(v0 + 24))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v1 = (void *)sub_1B1035B88();
    swift_bridgeObjectRelease();
    v2 = objc_msgSend((id)objc_opt_self(), sel_bundleWithIdentifier_, v1);

  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return sub_1B1035780();
}

uint64_t sub_1B101ED38@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_1B1023308(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

void sub_1B101ED64()
{
  char *v0;

  sub_1B0F7A468(*v0);
  JUMPOUT(0x1B5E140D8);
}

unint64_t sub_1B101ED7C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  unint64_t result;

  result = sub_1B10234B4(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1B101EDA4@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  BOOL v16;
  BOOL v17;
  char *v18;
  BOOL v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  __int128 v24;
  char v25;
  BOOL v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  BOOL v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t inited;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  _QWORD *v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[3];
  uint64_t v53;
  __int128 v54;
  ValueMetadata *v55;
  unint64_t v56;
  _OWORD v57[2];
  uint64_t v58;
  uint64_t v59;

  v45 = a2;
  v59 = *MEMORY[0x1E0C80C00];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE480);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[3];
  v46 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v8);
  v9 = sub_1B0F5DCE4();
  sub_1B1036278();
  if (!v2)
  {
    v44 = v5;
    v10 = sub_1B10360C8();
    v11 = v4;
    v12 = v7;
    if (*(_QWORD *)(v10 + 16))
    {
      v14 = *(_QWORD *)(v10 + 32);
      v13 = *(_QWORD *)(v10 + 40);
      v43 = *(_QWORD *)(v10 + 48);
      v15 = *(_BYTE *)(v10 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v16 = v14 == 1701667182 && v13 == 0xE400000000000000;
      if (v16 || (sub_1B1036128() & 1) != 0)
      {
        v48 = v14;
        v49 = v13;
        v50 = v43;
        LOBYTE(v51) = v15;
        sub_1B1036080();
        swift_bridgeObjectRelease();
        __swift_project_boxed_opaque_existential_1(v52, v53);
        sub_1B1036260();
        __swift_project_boxed_opaque_existential_1(&v48, v51);
        sub_1B102380C();
        sub_1B1036164();
        v22 = v47;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
        v55 = &type metadata for NamedStandardColor;
        v23 = sub_1B1023894();
LABEL_25:
        v56 = v23;
        LOBYTE(v54) = v22;
LABEL_26:
        v21 = v44;
        goto LABEL_27;
      }
      v17 = v14 == 0x6D6574737973 && v13 == 0xE600000000000000;
      if (v17 || (sub_1B1036128() & 1) != 0)
      {
        v48 = v14;
        v49 = v13;
        v50 = v43;
        LOBYTE(v51) = v15;
        sub_1B1036080();
        v18 = v45;
        swift_bridgeObjectRelease();
        __swift_project_boxed_opaque_existential_1(v52, v53);
        sub_1B1036260();
        __swift_project_boxed_opaque_existential_1(&v48, v51);
        sub_1B102380C();
        sub_1B1036164();
        v25 = v47;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
        v55 = &type metadata for NamedSystemColor;
        v56 = sub_1B1023850();
        LOBYTE(v54) = v25;
        (*(void (**)(char *, uint64_t))(v44 + 8))(v12, v11);
        sub_1B0F5A0E4(&v54, (uint64_t)v57);
LABEL_28:
        v24 = v57[1];
        *(_OWORD *)v18 = v57[0];
        *((_OWORD *)v18 + 1) = v24;
        *((_QWORD *)v18 + 4) = v58;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
      }
      v20 = v14 == 1869508461 && v13 == 0xE400000000000000;
      if (v20 || (sub_1B1036128() & 1) != 0)
      {
        v48 = v14;
        v49 = v13;
        v50 = v43;
        LOBYTE(v51) = v15;
        sub_1B1036080();
        swift_bridgeObjectRelease();
        v55 = &type metadata for MonoColor;
        v56 = sub_1B0FC653C();
        *(_QWORD *)&v54 = swift_allocObject();
        sub_1B101DF88(v52, v54 + 16);
LABEL_24:
        v21 = v44;
LABEL_27:
        (*(void (**)(char *, uint64_t))(v21 + 8))(v12, v11);
        sub_1B0F5A0E4(&v54, (uint64_t)v57);
        v18 = v45;
        goto LABEL_28;
      }
      v26 = v14 == 6449010 && v13 == 0xE300000000000000;
      if (v26 || (sub_1B1036128() & 1) != 0)
      {
        v48 = v14;
        v49 = v13;
        v50 = v43;
        LOBYTE(v51) = v15;
        sub_1B1036080();
        swift_bridgeObjectRelease();
        v55 = &type metadata for RGBAColor;
        v56 = sub_1B1023720();
        *(_QWORD *)&v54 = swift_allocObject();
        sub_1B101E658(v52, (_OWORD *)(v54 + 16));
        goto LABEL_24;
      }
      v27 = v14 == 0x656C646E7562 && v13 == 0xE600000000000000;
      if (v27 || (sub_1B1036128() & 1) != 0)
      {
        v48 = v14;
        v49 = v13;
        v50 = v43;
        LOBYTE(v51) = v15;
        sub_1B1036080();
        swift_bridgeObjectRelease();
        v28 = sub_1B1023308(v52);
        v30 = v29;
        v32 = v31;
        v34 = v33;
        v55 = &type metadata for BundleColor;
        v56 = sub_1B10236B0();
        v35 = (_QWORD *)swift_allocObject();
        *(_QWORD *)&v54 = v35;
        v35[2] = v28;
        v35[3] = v30;
        v35[4] = v32;
        v35[5] = v34;
        goto LABEL_26;
      }
      v36 = v14 == 0x746E656D656C65 && v13 == 0xE700000000000000;
      if (v36 || (sub_1B1036128() & 1) != 0)
      {
        v48 = v14;
        v49 = v13;
        v50 = v43;
        LOBYTE(v51) = v15;
        sub_1B1036080();
        swift_bridgeObjectRelease();
        v22 = sub_1B10234B4(v52);
        v55 = &type metadata for ElementColor;
        v23 = sub_1B102366C();
        goto LABEL_25;
      }
      type metadata accessor for ColorDecodingError();
      sub_1B0F524FC(&qword_1EEEE1628, (uint64_t (*)(uint64_t))type metadata accessor for ColorDecodingError, (uint64_t)&unk_1B1049E64);
      swift_allocError();
      v38 = v37;
      v45 = (char *)v37 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0BE0) + 48);
      *v38 = v14;
      v38[1] = v13;
      swift_bridgeObjectRetain();
      v39 = sub_1B1036074();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE498);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1B1036F70;
      *(_QWORD *)(inited + 56) = &type metadata for DynamicKey;
      *(_QWORD *)(inited + 64) = v9;
      v41 = inited;
      v42 = swift_allocObject();
      *(_QWORD *)(v41 + 32) = v42;
      *(_QWORD *)(v42 + 16) = v14;
      *(_QWORD *)(v42 + 24) = v13;
      *(_QWORD *)(v42 + 32) = v43;
      *(_BYTE *)(v42 + 40) = v15;
      *(_QWORD *)&v54 = v39;
      swift_bridgeObjectRetain();
      sub_1B0F5DD60(v41);
      *(_QWORD *)&v54 = 0;
      *((_QWORD *)&v54 + 1) = 0xE000000000000000;
      sub_1B1035F18();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v54 = 0xD000000000000013;
      *((_QWORD *)&v54 + 1) = 0x80000001B104D990;
      sub_1B1035C18();
      swift_bridgeObjectRelease();
      sub_1B1035F30();
    }
    else
    {
      swift_bridgeObjectRelease();
      type metadata accessor for DynamicKeyError();
      sub_1B0F524FC(&qword_1EEEDE4C0, (uint64_t (*)(uint64_t))type metadata accessor for DynamicKeyError, (uint64_t)&unk_1B103D9EC);
      swift_allocError();
      sub_1B1036074();
      sub_1B1035F30();
      swift_storeEnumTagMultiPayload();
    }
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v12, v11);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
}

uint64_t sub_1B101F7C0(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6874646977;
  else
    return 0x726F6C6F63;
}

uint64_t sub_1B101F7E8@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  return sub_1B101EDA4(a1, a2);
}

uint64_t sub_1B101F7FC(char *a1, char *a2)
{
  return sub_1B100E618(*a1, *a2);
}

uint64_t sub_1B101F808()
{
  return sub_1B10116D4();
}

uint64_t sub_1B101F810()
{
  return sub_1B1012EEC();
}

uint64_t sub_1B101F818()
{
  return sub_1B101401C();
}

uint64_t sub_1B101F820@<X0>(char *a1@<X8>)
{
  return sub_1B0F7BF1C(a1);
}

uint64_t sub_1B101F82C@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B101F7C0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B101F854()
{
  char *v0;

  return sub_1B101F7C0(*v0);
}

uint64_t sub_1B101F85C@<X0>(char *a1@<X8>)
{
  return sub_1B0F7BFB0(a1);
}

uint64_t sub_1B101F868()
{
  sub_1B1022810();
  return sub_1B10362B4();
}

uint64_t sub_1B101F890()
{
  sub_1B1022810();
  return sub_1B10362C0();
}

uint64_t sub_1B101F8B8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v10;
  uint64_t v11;
  char v12;
  _BYTE v13[40];
  __int128 v14;
  uint64_t v15;
  char v16;
  char v17;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE15A0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B1022810();
  sub_1B1036278();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v17 = 0;
  sub_1B0F81F08();
  sub_1B10360BC();
  sub_1B0F5A0E4(&v10, (uint64_t)v13);
  v17 = 1;
  sub_1B0F7E5F8();
  sub_1B10360A4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v14 = v10;
  v15 = v11;
  v16 = v12;
  sub_1B1022854((uint64_t)v13, a2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1B1022888((uint64_t)v13);
}

uint64_t sub_1B101FA78@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  _QWORD *v4;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD v27[2];

  v4 = (_QWORD *)v3;
  v8 = *(unsigned __int8 *)(v3 + 64);
  if (v8 > 0xFD)
    goto LABEL_4;
  v10 = *(_QWORD *)(v3 + 48);
  v9 = *(_QWORD *)(v3 + 56);
  v23 = *(_QWORD *)(v3 + 40);
  v24 = v10;
  v25 = v9;
  v26 = v8;
  sub_1B0F6C708(v23, v10, v9, v8);
  sub_1B0FA70A4(a2);
  v12 = v11;
  sub_1B0F6C7C0(v23, v10, v9, v8);
  if ((v12 & 1) != 0)
  {
LABEL_4:
    v17 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v18 = v4[3];
    v19 = v4[4];
    __swift_project_boxed_opaque_existential_1(v4, v18);
    v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(a2, v18, v19);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEE14D8);
    v20 = sub_1B103497C();
    a3[3] = v20;
    v27[0] = v17;
    v27[1] = sub_1B0F5A7E4(&qword_1EEEE14E0, &qword_1EEEE14D8, MEMORY[0x1E0CDA280]);
    a3[4] = MEMORY[0x1B5E15188](MEMORY[0x1E0CD9C20], v20, v27);
    __swift_allocate_boxed_opaque_existential_1(a3);
    sub_1B10355AC();
  }
  else
  {
    v13 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v14 = v4[3];
    v15 = v4[4];
    __swift_project_boxed_opaque_existential_1(v4, v14);
    v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(a2, v14, v15);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEE14D8);
    v16 = sub_1B103497C();
    a3[3] = v16;
    v22[0] = v13;
    v22[1] = sub_1B0F5A7E4(&qword_1EEEE14E0, &qword_1EEEE14D8, MEMORY[0x1E0CDA280]);
    a3[4] = MEMORY[0x1B5E15188](MEMORY[0x1E0CD9C20], v16, v22);
    __swift_allocate_boxed_opaque_existential_1(a3);
    sub_1B10355AC();
  }
  return swift_release();
}

uint64_t sub_1B101FCF4(char a1)
{
  return *(_QWORD *)&aRadius_5[8 * a1];
}

uint64_t sub_1B101FD14@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B101FA78(a1, a2, a3);
}

uint64_t sub_1B101FD28@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B101F8B8(a1, a2);
}

uint64_t sub_1B101FD3C(char *a1, char *a2)
{
  return sub_1B100CD44(*a1, *a2);
}

uint64_t sub_1B101FD48()
{
  return sub_1B1011740();
}

uint64_t sub_1B101FD50()
{
  return sub_1B10122AC();
}

uint64_t sub_1B101FD58()
{
  return sub_1B10150C0();
}

uint64_t sub_1B101FD60@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B0F60A74();
  *a1 = result;
  return result;
}

uint64_t sub_1B101FD94@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B101FCF4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B101FDBC()
{
  char *v0;

  return sub_1B101FCF4(*v0);
}

uint64_t sub_1B101FDC4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B0F60A74();
  *a1 = result;
  return result;
}

uint64_t sub_1B101FDF0()
{
  sub_1B102276C();
  return sub_1B10362B4();
}

uint64_t sub_1B101FE18()
{
  sub_1B102276C();
  return sub_1B10362C0();
}

uint64_t sub_1B101FE40@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  uint64_t v14;
  char v15;
  _BYTE v16[56];
  uint64_t v17;
  char v18;
  char v19;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1590);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B102276C();
  sub_1B1036278();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v19 = 0;
  sub_1B0F7E5F8();
  sub_1B10360BC();
  v13 = v10;
  v14 = v11;
  v15 = v12;
  v19 = 1;
  sub_1B0F81F08();
  sub_1B10360BC();
  sub_1B0F5A0E4(&v10, (uint64_t)v16);
  v19 = 2;
  sub_1B10360A4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(_OWORD *)&v16[40] = v10;
  v17 = v11;
  v18 = v12;
  sub_1B10227B0((uint64_t)&v13, a2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1B10227E4((uint64_t)&v13);
}

uint64_t sub_1B1020088@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  char v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t *v49;
  _QWORD *v50;
  _QWORD v51[2];
  __int128 v52;
  __int128 v53;
  uint64_t v54;

  v50 = a1;
  v4 = v3;
  v49 = (uint64_t *)a3;
  v47 = sub_1B1034A0C();
  MEMORY[0x1E0C80A78](v47);
  v48 = (uint64_t *)((char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE14E8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v3 + 8);
  v12 = *(_QWORD *)(v3 + 16);
  v13 = *(_BYTE *)(v3 + 24);
  *(_QWORD *)&v52 = *(_QWORD *)v3;
  v10 = v52;
  *((_QWORD *)&v52 + 1) = v11;
  *(_QWORD *)&v53 = v12;
  BYTE8(v53) = v13;
  sub_1B0F6C708(v52, v11, v12, v13);
  v46 = a2;
  v14 = sub_1B0FA70A4(a2);
  v16 = v15;
  sub_1B0F6C7D4(v10, v11, v12, v13);
  if ((v16 & 1) != 0)
    return sub_1B0F5FD84((uint64_t)v50, (uint64_t)v49);
  v44 = v9;
  v45 = v7;
  v17 = *(unsigned __int8 *)(v4 + 96);
  v18 = v46;
  if (v17 <= 0xFD)
  {
    v20 = *(_QWORD *)(v4 + 80);
    v19 = *(_QWORD *)(v4 + 88);
    v21 = *(_QWORD *)(v4 + 72);
    *(_QWORD *)&v52 = v21;
    *((_QWORD *)&v52 + 1) = v20;
    *(_QWORD *)&v53 = v19;
    BYTE8(v53) = v17;
    sub_1B0F6C708(v21, v20, v19, v17);
    sub_1B0FA70A4(v18);
    sub_1B0F6C7C0(v21, v20, v19, v17);
  }
  v22 = v50[4];
  __swift_project_boxed_opaque_existential_1(v50, v50[3]);
  v23 = v48;
  v24 = (char *)v48 + *(int *)(v47 + 20);
  v25 = *MEMORY[0x1E0CDB0C0];
  v26 = sub_1B1034CA0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v24, v25, v26);
  *v23 = v14;
  v23[1] = v14;
  v27 = (_QWORD *)(v4 + 32);
  v29 = *(_QWORD *)(v4 + 56);
  v28 = *(_QWORD *)(v4 + 64);
  __swift_project_boxed_opaque_existential_1(v27, v29);
  v30 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v18, v29, v28);
  sub_1B10347CC();
  v31 = (uint64_t)v44;
  sub_1B0F5FD40((uint64_t)v23, (uint64_t)v44);
  v32 = v31 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE14F0) + 36);
  v33 = v53;
  *(_OWORD *)v32 = v52;
  *(_OWORD *)(v32 + 16) = v33;
  *(_QWORD *)(v32 + 32) = v54;
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE14F8);
  *(_QWORD *)(v31 + *(int *)(v34 + 52)) = v30;
  *(_WORD *)(v31 + *(int *)(v34 + 56)) = 256;
  v35 = sub_1B1035990();
  v37 = v36;
  v38 = (uint64_t *)(v31 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1500) + 36));
  *v38 = v35;
  v38[1] = v37;
  sub_1B0F5FDC8((uint64_t)v23);
  sub_1B1035990();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEE1508);
  v39 = sub_1B103497C();
  v40 = v49;
  v49[3] = v39;
  v41 = sub_1B0F5A7E4(&qword_1EEEE1510, &qword_1EEEE1508, MEMORY[0x1E0CDA280]);
  v51[0] = v22;
  v51[1] = v41;
  v40[4] = MEMORY[0x1B5E15188](MEMORY[0x1E0CD9C20], v39, v51);
  __swift_allocate_boxed_opaque_existential_1(v40);
  sub_1B0F5A7E4(&qword_1EEEE1518, &qword_1EEEE14E8, MEMORY[0x1E0CD9D18]);
  sub_1B10355E8();
  return sub_1B0F5A3AC(v31, &qword_1EEEE14E8);
}

uint64_t sub_1B102042C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1B1020088(a1, a2, a3);
}

uint64_t sub_1B1020440@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B101FE40(a1, a2);
}

uint64_t sub_1B1020454@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B1021B94(a1, a2);
}

uint64_t sub_1B1020468@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[4];

  v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v7 = v3[3];
  v8 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v7);
  v11[3] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a2, v7, v8);
  sub_1B1035144();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEE1520);
  v9 = sub_1B103497C();
  a3[3] = v9;
  v11[0] = v6;
  v11[1] = sub_1B0F5A7E4(&qword_1EEEE1528, &qword_1EEEE1520, MEMORY[0x1E0CDC6D0]);
  a3[4] = MEMORY[0x1B5E15188](MEMORY[0x1E0CD9C20], v9, v11);
  __swift_allocate_boxed_opaque_existential_1(a3);
  sub_1B1035324();
  return swift_release();
}

uint64_t sub_1B1020598@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B1021C9C(a1, a2, MEMORY[0x1E0CDE4D0], a3);
}

unint64_t sub_1B10205B4()
{
  uint64_t v0;
  _QWORD v2[5];
  unint64_t v3;
  unint64_t v4;

  v2[0] = 0;
  v2[1] = 0xE000000000000000;
  sub_1B1035F18();
  swift_bridgeObjectRelease();
  v3 = 0xD00000000000001ALL;
  v4 = 0x80000001B104D950;
  sub_1B0F5FD84(v0, (uint64_t)v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE05B0);
  sub_1B1035BD0();
  sub_1B1035C18();
  swift_bridgeObjectRelease();
  sub_1B1035C18();
  return v3;
}

uint64_t sub_1B1020658(char a1)
{
  return *(_QWORD *)&aPrimary_2[8 * a1];
}

uint64_t sub_1B102067C(char *a1, char *a2)
{
  return sub_1B100CA50(*a1, *a2);
}

uint64_t sub_1B1020688()
{
  return sub_1B10117A8();
}

uint64_t sub_1B1020690()
{
  return sub_1B1012134();
}

uint64_t sub_1B1020698()
{
  return sub_1B10152C8();
}

uint64_t sub_1B10206A0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B0F60A74();
  *a1 = result;
  return result;
}

uint64_t sub_1B10206D4@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B1020658(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B10206FC()
{
  char *v0;

  return sub_1B1020658(*v0);
}

uint64_t sub_1B1020704@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B0F60A74();
  *a1 = result;
  return result;
}

uint64_t sub_1B1020730()
{
  sub_1B10228B4();
  return sub_1B10362B4();
}

uint64_t sub_1B1020758()
{
  sub_1B10228B4();
  return sub_1B10362C0();
}

uint64_t sub_1B1020780@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v11[24];
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  _BYTE v16[40];
  uint64_t v17;
  uint64_t v18;
  char v19;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE15B0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B10228B4();
  sub_1B1036278();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v11[0] = 0;
  sub_1B0F81F08();
  sub_1B10360BC();
  sub_1B0F5A0E4(&v13, (uint64_t)v16);
  v19 = 1;
  sub_1B10360A4();
  if (v12)
  {
    sub_1B0F5FD84((uint64_t)v11, (uint64_t)&v13);
    sub_1B0F81F88((uint64_t)v11);
  }
  else
  {
    sub_1B0F5A3AC((uint64_t)v11, &qword_1EEEE0220);
    v13 = 0u;
    v14 = 0u;
    v15 = 0;
  }
  sub_1B10228F8((uint64_t)&v13, (uint64_t)&v17);
  v19 = 2;
  sub_1B10360A4();
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  if (v12)
  {
    sub_1B0F5FD84((uint64_t)v11, (uint64_t)&v13);
    sub_1B0F81F88((uint64_t)v11);
  }
  else
  {
    sub_1B0F5A3AC((uint64_t)v11, &qword_1EEEE0220);
    v13 = 0u;
    v14 = 0u;
    v15 = 0;
  }
  sub_1B10228F8((uint64_t)&v13, (uint64_t)&v18);
  sub_1B1022940((uint64_t)v16, a2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1B1022974((uint64_t)v16);
}

uint64_t sub_1B1020A38@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[3];
  _QWORD v28[2];
  __int128 v29;
  uint64_t v30;
  _QWORD v31[2];
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[3];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_1B1020FC4((uint64_t)(v3 + 5), (uint64_t)&v32);
  if (v33)
  {
    sub_1B0F5A0E4(&v32, (uint64_t)v35);
    sub_1B1020FC4((uint64_t)(v3 + 10), (uint64_t)&v29);
    if (v30)
    {
      sub_1B0F5A0E4(&v29, (uint64_t)&v32);
      v7 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      v8 = v3[3];
      v9 = v3[4];
      __swift_project_boxed_opaque_existential_1(v3, v8);
      *(_QWORD *)&v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a2, v8, v9);
      v11 = v36;
      v10 = v37;
      __swift_project_boxed_opaque_existential_1(v35, v36);
      v38 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(a2, v11, v10);
      v12 = v33;
      v13 = v34;
      __swift_project_boxed_opaque_existential_1(&v32, v33);
      v27[2] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(a2, v12, v13);
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEE1560);
      v14 = sub_1B103497C();
      a3[3] = v14;
      v27[0] = v7;
      v27[1] = sub_1B0F5A7E4(&qword_1EEEE1568, &qword_1EEEE1560, MEMORY[0x1E0CDC920]);
      a3[4] = MEMORY[0x1B5E15188](MEMORY[0x1E0CD9C20], v14, v27);
      __swift_allocate_boxed_opaque_existential_1(a3);
      sub_1B1035414();
      swift_release();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v32);
    }
    else
    {
      sub_1B0F5A3AC((uint64_t)&v29, &qword_1EEEE1498);
      v21 = a1[3];
      v20 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v21);
      v22 = v3[3];
      v23 = v3[4];
      __swift_project_boxed_opaque_existential_1(v3, v22);
      *(_QWORD *)&v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(a2, v22, v23);
      v24 = v36;
      v25 = v37;
      __swift_project_boxed_opaque_existential_1(v35, v36);
      *(_QWORD *)&v29 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(a2, v24, v25);
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEE1550);
      v26 = sub_1B103497C();
      a3[3] = v26;
      v28[0] = v20;
      v28[1] = sub_1B0F5A7E4(&qword_1EEEE1558, &qword_1EEEE1550, MEMORY[0x1E0CDC908]);
      a3[4] = MEMORY[0x1B5E15188](MEMORY[0x1E0CD9C20], v26, v28);
      __swift_allocate_boxed_opaque_existential_1(a3);
      MEMORY[0x1B5E13E80](&v32, &v29, v21, MEMORY[0x1E0CDF5D0], MEMORY[0x1E0CDF5D0], v20, MEMORY[0x1E0CDF598], MEMORY[0x1E0CDF598]);
      swift_release();
      swift_release();
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  }
  else
  {
    sub_1B0F5A3AC((uint64_t)&v32, &qword_1EEEE1498);
    v15 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v16 = v3[3];
    v17 = v3[4];
    __swift_project_boxed_opaque_existential_1(v3, v16);
    v35[0] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(a2, v16, v17);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEE1540);
    v18 = sub_1B103497C();
    a3[3] = v18;
    v31[0] = v15;
    v31[1] = sub_1B0F5A7E4(&qword_1EEEE1548, &qword_1EEEE1540, MEMORY[0x1E0CDC718]);
    a3[4] = MEMORY[0x1B5E15188](MEMORY[0x1E0CD9C20], v18, v31);
    __swift_allocate_boxed_opaque_existential_1(a3);
    sub_1B1035408();
    return swift_release();
  }
}

uint64_t sub_1B1020E60@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B1020A38(a1, a2, a3);
}

uint64_t sub_1B1020E74@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B1020780(a1, a2);
}

unint64_t sub_1B1020E88()
{
  uint64_t v0;
  _QWORD v2[5];
  unint64_t v3;
  unint64_t v4;

  v2[0] = 0;
  v2[1] = 0xE000000000000000;
  sub_1B1035F18();
  swift_bridgeObjectRelease();
  v3 = 0xD00000000000001ALL;
  v4 = 0x80000001B104D970;
  sub_1B0F5FD84(v0, (uint64_t)v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE05B0);
  sub_1B1035BD0();
  sub_1B1035C18();
  swift_bridgeObjectRelease();
  sub_1B1035C18();
  sub_1B1020FC4(v0 + 40, (uint64_t)v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1498);
  sub_1B1035BD0();
  sub_1B1035C18();
  swift_bridgeObjectRelease();
  sub_1B1035C18();
  sub_1B1020FC4(v0 + 80, (uint64_t)v2);
  sub_1B1035BD0();
  sub_1B1035C18();
  swift_bridgeObjectRelease();
  sub_1B1035C18();
  return v3;
}

uint64_t sub_1B1020FC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1498);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t initializeWithCopy for TintColorModifier(uint64_t a1, uint64_t a2)
{
  char v3;
  __int128 v4;

  v3 = *(_BYTE *)(a2 + 40);
  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_BYTE *)(a1 + 40) = v3;
  return a1;
}

uint64_t assignWithCopy for TintColorModifier(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;

  if (a1 != a2)
  {
    sub_1B0F5E0B0(a1);
    v4 = *(_BYTE *)(a2 + 40);
    v5 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 24) = v5;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
    *(_BYTE *)(a1 + 40) = v4;
  }
  return a1;
}

_OWORD *assignWithTake for TintColorModifier(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;

  if (a1 != a2)
  {
    sub_1B0F5E0B0((uint64_t)a1);
    v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)a2 + 25);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for TintColorModifier(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TintColorModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TintColorModifier()
{
  return &type metadata for TintColorModifier;
}

ValueMetadata *type metadata accessor for TintColorModifier.TintType()
{
  return &type metadata for TintColorModifier.TintType;
}

ValueMetadata *type metadata accessor for AccentColorModifier()
{
  return &type metadata for AccentColorModifier;
}

ValueMetadata *type metadata accessor for BackgroundColorModifier()
{
  return &type metadata for BackgroundColorModifier;
}

uint64_t destroy for RoundedBorderModifier(uint64_t a1)
{
  uint64_t result;
  unsigned int v3;

  sub_1B0F6C7D4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  result = __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  v3 = *(unsigned __int8 *)(a1 + 96);
  if (v3 <= 0xFD)
    return sub_1B0F6C7D4(*(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), v3);
  return result;
}

uint64_t initializeWithCopy for RoundedBorderModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  __int128 v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_1B0F6C708(*(_QWORD *)a2, v5, v6, v7);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  v8 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 56) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1 + 32, a2 + 32);
  v9 = *(unsigned __int8 *)(a2 + 96);
  if (v9 <= 0xFD)
  {
    v10 = *(_QWORD *)(a2 + 72);
    v11 = *(_QWORD *)(a2 + 80);
    v12 = *(_QWORD *)(a2 + 88);
    sub_1B0F6C708(v10, v11, v12, v9);
    *(_QWORD *)(a1 + 72) = v10;
    *(_QWORD *)(a1 + 80) = v11;
    *(_QWORD *)(a1 + 88) = v12;
    *(_BYTE *)(a1 + 96) = v9;
  }
  else
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 81) = *(_OWORD *)(a2 + 81);
  }
  return a1;
}

uint64_t assignWithCopy for RoundedBorderModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _OWORD *v12;
  _OWORD *v13;
  unsigned int v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_1B0F6C708(*(_QWORD *)a2, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  v11 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v7;
  sub_1B0F6C7D4(v8, v9, v10, v11);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
  v12 = (_OWORD *)(a1 + 72);
  v13 = (_OWORD *)(a2 + 72);
  v14 = *(unsigned __int8 *)(a2 + 96);
  if (*(unsigned __int8 *)(a1 + 96) <= 0xFDu)
  {
    if (v14 <= 0xFD)
    {
      v20 = *(_QWORD *)(a2 + 72);
      v21 = *(_QWORD *)(a2 + 80);
      v22 = *(_QWORD *)(a2 + 88);
      sub_1B0F6C708(v20, v21, v22, v14);
      v23 = *(_QWORD *)(a1 + 72);
      v24 = *(_QWORD *)(a1 + 80);
      v25 = *(_QWORD *)(a1 + 88);
      *(_QWORD *)(a1 + 72) = v20;
      *(_QWORD *)(a1 + 80) = v21;
      *(_QWORD *)(a1 + 88) = v22;
      v26 = *(_BYTE *)(a1 + 96);
      *(_BYTE *)(a1 + 96) = v14;
      sub_1B0F6C7D4(v23, v24, v25, v26);
    }
    else
    {
      sub_1B0F7A924(a1 + 72);
      v16 = *(_OWORD *)(a2 + 81);
      *v12 = *v13;
      *(_OWORD *)(a1 + 81) = v16;
    }
  }
  else if (v14 <= 0xFD)
  {
    v17 = *(_QWORD *)(a2 + 72);
    v18 = *(_QWORD *)(a2 + 80);
    v19 = *(_QWORD *)(a2 + 88);
    sub_1B0F6C708(v17, v18, v19, v14);
    *(_QWORD *)(a1 + 72) = v17;
    *(_QWORD *)(a1 + 80) = v18;
    *(_QWORD *)(a1 + 88) = v19;
    *(_BYTE *)(a1 + 96) = v14;
  }
  else
  {
    v15 = *v13;
    *(_OWORD *)(a1 + 81) = *(_OWORD *)(a2 + 81);
    *v12 = v15;
  }
  return a1;
}

__n128 __swift_memcpy97_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for RoundedBorderModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __int128 v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  v9 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v5;
  sub_1B0F6C7D4(v6, v7, v8, v9);
  __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  v10 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v11 = *(unsigned __int8 *)(a1 + 96);
  if (v11 <= 0xFD)
  {
    v12 = *(unsigned __int8 *)(a2 + 96);
    if (v12 <= 0xFD)
    {
      v13 = *(_QWORD *)(a2 + 88);
      v14 = *(_QWORD *)(a1 + 72);
      v15 = *(_QWORD *)(a1 + 80);
      v16 = *(_QWORD *)(a1 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 88) = v13;
      *(_BYTE *)(a1 + 96) = v12;
      sub_1B0F6C7D4(v14, v15, v16, v11);
      return a1;
    }
    sub_1B0F7A924(a1 + 72);
  }
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 81) = *(_OWORD *)(a2 + 81);
  return a1;
}

uint64_t getEnumTagSinglePayload for RoundedBorderModifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 97))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RoundedBorderModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 96) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 97) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 97) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RoundedBorderModifier()
{
  return &type metadata for RoundedBorderModifier;
}

uint64_t destroy for BorderModifier(uint64_t a1)
{
  uint64_t result;
  unsigned int v3;

  result = __swift_destroy_boxed_opaque_existential_1(a1);
  v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 <= 0xFD)
    return sub_1B0F6C7D4(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), v3);
  return result;
}

uint64_t initializeWithCopy for BorderModifier(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = *(unsigned __int8 *)(a2 + 64);
  if (v5 <= 0xFD)
  {
    v6 = *(_QWORD *)(a2 + 40);
    v7 = *(_QWORD *)(a2 + 48);
    v8 = *(_QWORD *)(a2 + 56);
    sub_1B0F6C708(v6, v7, v8, v5);
    *(_QWORD *)(a1 + 40) = v6;
    *(_QWORD *)(a1 + 48) = v7;
    *(_QWORD *)(a1 + 56) = v8;
    *(_BYTE *)(a1 + 64) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
  }
  return a1;
}

uint64_t assignWithCopy for BorderModifier(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  unsigned int v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  v4 = (_OWORD *)(a1 + 40);
  v5 = (_OWORD *)(a2 + 40);
  v6 = *(unsigned __int8 *)(a2 + 64);
  if (*(unsigned __int8 *)(a1 + 64) <= 0xFDu)
  {
    if (v6 <= 0xFD)
    {
      v12 = *(_QWORD *)(a2 + 40);
      v13 = *(_QWORD *)(a2 + 48);
      v14 = *(_QWORD *)(a2 + 56);
      sub_1B0F6C708(v12, v13, v14, v6);
      v15 = *(_QWORD *)(a1 + 40);
      v16 = *(_QWORD *)(a1 + 48);
      v17 = *(_QWORD *)(a1 + 56);
      *(_QWORD *)(a1 + 40) = v12;
      *(_QWORD *)(a1 + 48) = v13;
      *(_QWORD *)(a1 + 56) = v14;
      v18 = *(_BYTE *)(a1 + 64);
      *(_BYTE *)(a1 + 64) = v6;
      sub_1B0F6C7D4(v15, v16, v17, v18);
    }
    else
    {
      sub_1B0F7A924(a1 + 40);
      v8 = *(_OWORD *)(a2 + 49);
      *v4 = *v5;
      *(_OWORD *)(a1 + 49) = v8;
    }
  }
  else if (v6 <= 0xFD)
  {
    v9 = *(_QWORD *)(a2 + 40);
    v10 = *(_QWORD *)(a2 + 48);
    v11 = *(_QWORD *)(a2 + 56);
    sub_1B0F6C708(v9, v10, v11, v6);
    *(_QWORD *)(a1 + 40) = v9;
    *(_QWORD *)(a1 + 48) = v10;
    *(_QWORD *)(a1 + 56) = v11;
    *(_BYTE *)(a1 + 64) = v6;
  }
  else
  {
    v7 = *v5;
    *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
    *v4 = v7;
  }
  return a1;
}

uint64_t assignWithTake for BorderModifier(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(unsigned __int8 *)(a1 + 64);
  if (v5 <= 0xFD)
  {
    v6 = *(unsigned __int8 *)(a2 + 64);
    if (v6 <= 0xFD)
    {
      v7 = *(_QWORD *)(a2 + 56);
      v8 = *(_QWORD *)(a1 + 40);
      v9 = *(_QWORD *)(a1 + 48);
      v10 = *(_QWORD *)(a1 + 56);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 56) = v7;
      *(_BYTE *)(a1 + 64) = v6;
      sub_1B0F6C7D4(v8, v9, v10, v5);
      return a1;
    }
    sub_1B0F7A924(a1 + 40);
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
  return a1;
}

ValueMetadata *type metadata accessor for BorderModifier()
{
  return &type metadata for BorderModifier;
}

ValueMetadata *type metadata accessor for ForegroundColorModifier()
{
  return &type metadata for ForegroundColorModifier;
}

uint64_t destroy for ForegroundStyleModifier(uint64_t a1)
{
  uint64_t result;

  result = __swift_destroy_boxed_opaque_existential_1(a1);
  if (*(_QWORD *)(a1 + 64))
    result = __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  if (*(_QWORD *)(a1 + 104))
    return __swift_destroy_boxed_opaque_existential_1(a1 + 80);
  return result;
}

uint64_t initializeWithCopy for ForegroundStyleModifier(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  _OWORD *v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = (_OWORD *)(a1 + 40);
  v6 = (_OWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 64);
  if (v7)
  {
    v8 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v7;
    *(_QWORD *)(a1 + 72) = v8;
    (**(void (***)(_OWORD *, _OWORD *))(v7 - 8))(v5, v6);
  }
  else
  {
    v9 = *(_OWORD *)(a2 + 56);
    *v5 = *v6;
    *(_OWORD *)(a1 + 56) = v9;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  }
  v10 = (_OWORD *)(a1 + 80);
  v11 = (_OWORD *)(a2 + 80);
  v12 = *(_QWORD *)(a2 + 104);
  if (v12)
  {
    v13 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 104) = v12;
    *(_QWORD *)(a1 + 112) = v13;
    (**(void (***)(_OWORD *, _OWORD *))(v12 - 8))(v10, v11);
  }
  else
  {
    v14 = *(_OWORD *)(a2 + 96);
    *v10 = *v11;
    *(_OWORD *)(a1 + 96) = v14;
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  }
  return a1;
}

uint64_t assignWithCopy for ForegroundStyleModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  v4 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64))
  {
    if (v4)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  }
  else if (v4)
  {
    *(_QWORD *)(a1 + 64) = v4;
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 40, a2 + 40);
    goto LABEL_8;
  }
  v5 = *(_OWORD *)(a2 + 40);
  v6 = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 40) = v5;
  *(_OWORD *)(a1 + 56) = v6;
LABEL_8:
  v7 = *(_QWORD *)(a2 + 104);
  if (!*(_QWORD *)(a1 + 104))
  {
    if (v7)
    {
      *(_QWORD *)(a1 + 104) = v7;
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 80, a2 + 80);
      return a1;
    }
LABEL_14:
    v8 = *(_OWORD *)(a2 + 80);
    v9 = *(_OWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 80) = v8;
    *(_OWORD *)(a1 + 96) = v9;
    return a1;
  }
  if (!v7)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 80);
    goto LABEL_14;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 80), (uint64_t *)(a2 + 80));
  return a1;
}

uint64_t assignWithTake for ForegroundStyleModifier(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 64))
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  v5 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  if (*(_QWORD *)(a1 + 104))
    __swift_destroy_boxed_opaque_existential_1(a1 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for ForegroundStyleModifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ForegroundStyleModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ForegroundStyleModifier()
{
  return &type metadata for ForegroundStyleModifier;
}

uint64_t sub_1B1021B94@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v5;
  __int128 v7;
  _QWORD v8[4];
  _OWORD v9[2];
  uint64_t v10;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B1036260();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    sub_1B0F81F08();
    sub_1B1036164();
    sub_1B0F5A0E4(&v7, (uint64_t)v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    v5 = v9[1];
    *(_OWORD *)a2 = v9[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B1021C80@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B1021C9C(a1, a2, MEMORY[0x1E0CDDFA8], a3);
}

uint64_t sub_1B1021C9C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t, uint64_t, uint64_t)@<X5>, uint64_t *a4@<X8>)
{
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];

  v8 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  v11 = v4[3];
  v10 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v11);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(a2, v11, v10);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEE1530);
  v13 = sub_1B103497C();
  a4[3] = v13;
  v15[0] = v9;
  v15[1] = sub_1B0F5A7E4(&qword_1EEEE1538, &qword_1EEEE1530, MEMORY[0x1E0CDCF80]);
  a4[4] = MEMORY[0x1B5E15188](MEMORY[0x1E0CD9C20], v13, v15);
  __swift_allocate_boxed_opaque_existential_1(a4);
  a3(v12, v8, v9);
  return swift_release();
}

uint64_t sub_1B1021DB4@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B103605C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B1021E04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1B1023B90();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B1021E2C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B103605C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B1021E80()
{
  sub_1B1022728();
  return sub_1B10362B4();
}

uint64_t sub_1B1021EA8()
{
  sub_1B1022728();
  return sub_1B10362C0();
}

uint64_t sub_1B1021ED0@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v10;
  __int128 v11[2];
  __int128 v12[2];
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  _BYTE v16[25];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1580);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B1022728();
  sub_1B1036278();
  if (!v2)
  {
    if ((sub_1B10360D4() & 1) != 0)
    {
      sub_1B0FC5178();
      sub_1B10360BC();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      sub_1B0F5A0E4(v12, (uint64_t)&v13);
      sub_1B0F5A0E4(&v13, (uint64_t)&v15);
      v16[24] = 0;
    }
    else
    {
      __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      sub_1B1036260();
      __swift_project_boxed_opaque_existential_1(&v13, v14);
      sub_1B0F81F08();
      sub_1B1036164();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      sub_1B0F5A0E4(v11, (uint64_t)v12);
      sub_1B0F5A0E4(v12, (uint64_t)&v15);
      v16[24] = 1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v13);
    }
    v10 = *(_OWORD *)v16;
    *a2 = v15;
    a2[1] = v10;
    *(_OWORD *)((char *)a2 + 25) = *(_OWORD *)&v16[9];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B1022100@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD v29[2];
  _QWORD v30[2];
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;
  __int128 v37[2];
  char v38;
  uint64_t v39;

  v5 = v3;
  sub_1B10226F4(v5, (uint64_t)v37);
  if (v38 == 1)
  {
    sub_1B0F5A0E4(v37, (uint64_t)v34);
    v9 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v10 = v35;
    v11 = v36;
    __swift_project_boxed_opaque_existential_1(v34, v35);
    v31[0] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(a2, v10, v11);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEE1570);
    v12 = sub_1B103497C();
    a3[3] = v12;
    v29[0] = v9;
    v29[1] = sub_1B0F5A7E4(&qword_1EEEE1578, &qword_1EEEE1570, MEMORY[0x1E0CDCF80]);
    a3[4] = MEMORY[0x1B5E15188](MEMORY[0x1E0CD9C20], v12, v29);
    __swift_allocate_boxed_opaque_existential_1(a3);
    sub_1B1035564();
    swift_release();
  }
  else
  {
    sub_1B0F5A0E4(v37, (uint64_t)v34);
    v13 = a1[4];
    v14 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    v15 = v35;
    v16 = v36;
    __swift_project_boxed_opaque_existential_1(v34, v35);
    sub_1B0FE4B60(a2, v15, v16, (uint64_t)v31);
    if (!v4)
    {
      v17 = v32;
      v39 = v33;
      v18 = __swift_project_boxed_opaque_existential_1(v31, v32);
      v27 = sub_1B1035E64();
      v28 = &v26;
      v19 = *(_QWORD *)(v27 - 8);
      MEMORY[0x1E0C80A78](v27);
      v21 = (char *)&v26 - v20;
      v26 = v14;
      v22 = *(_QWORD *)(v17 - 8);
      (*(void (**)(char *, _QWORD *, uint64_t))(v22 + 16))((char *)&v26 - v20, v18, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v21, 0, 1, v17);
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEE1570);
      v23 = sub_1B103497C();
      a3[3] = v23;
      v24 = sub_1B0F5A7E4(&qword_1EEEE1578, &qword_1EEEE1570, MEMORY[0x1E0CDCF80]);
      v30[0] = v13;
      v30[1] = v24;
      a3[4] = MEMORY[0x1B5E15188](MEMORY[0x1E0CD9C20], v23, v30);
      __swift_allocate_boxed_opaque_existential_1(a3);
      sub_1B1035564();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v27);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
}

uint64_t sub_1B10223F4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B1022100(a1, a2, a3);
}

uint64_t sub_1B1022408@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1B1021ED0(a1, a2);
}

unint64_t sub_1B102241C(uint64_t a1)
{
  unint64_t result;

  result = sub_1B1022440();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B1022440()
{
  unint64_t result;

  result = qword_1EEEE14A0;
  if (!qword_1EEEE14A0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1049138, &type metadata for TintColorModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE14A0);
  }
  return result;
}

unint64_t sub_1B1022484(uint64_t a1)
{
  unint64_t result;

  result = sub_1B10224A8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B10224A8()
{
  unint64_t result;

  result = qword_1EEEE14A8;
  if (!qword_1EEEE14A8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1049110, &type metadata for AccentColorModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE14A8);
  }
  return result;
}

unint64_t sub_1B10224EC(uint64_t a1)
{
  unint64_t result;

  result = sub_1B1022510();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B1022510()
{
  unint64_t result;

  result = qword_1EEEE14B0;
  if (!qword_1EEEE14B0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1049048, &type metadata for ForegroundStyleModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE14B0);
  }
  return result;
}

unint64_t sub_1B1022554(uint64_t a1)
{
  unint64_t result;

  result = sub_1B1022578();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B1022578()
{
  unint64_t result;

  result = qword_1EEEE14B8;
  if (!qword_1EEEE14B8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1049070, &type metadata for ForegroundColorModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE14B8);
  }
  return result;
}

unint64_t sub_1B10225BC(uint64_t a1)
{
  unint64_t result;

  result = sub_1B10225E0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B10225E0()
{
  unint64_t result;

  result = qword_1EEEE14C0;
  if (!qword_1EEEE14C0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10490E8, &type metadata for BackgroundColorModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE14C0);
  }
  return result;
}

unint64_t sub_1B1022624(uint64_t a1)
{
  unint64_t result;

  result = sub_1B1022648();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B1022648()
{
  unint64_t result;

  result = qword_1EEEE14C8;
  if (!qword_1EEEE14C8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10490C0, &type metadata for RoundedBorderModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE14C8);
  }
  return result;
}

unint64_t sub_1B102268C(uint64_t a1)
{
  unint64_t result;

  result = sub_1B10226B0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B10226B0()
{
  unint64_t result;

  result = qword_1EEEE14D0;
  if (!qword_1EEEE14D0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1049098, &type metadata for BorderModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE14D0);
  }
  return result;
}

uint64_t sub_1B10226F4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ViewContentType(a2, a1);
  return a2;
}

unint64_t sub_1B1022728()
{
  unint64_t result;

  result = qword_1EEEE1588;
  if (!qword_1EEEE1588)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1049724, &type metadata for TintColorModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1588);
  }
  return result;
}

unint64_t sub_1B102276C()
{
  unint64_t result;

  result = qword_1EEEE1598;
  if (!qword_1EEEE1598)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10496D4, &type metadata for RoundedBorderModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1598);
  }
  return result;
}

uint64_t sub_1B10227B0(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for RoundedBorderModifier(a2, a1);
  return a2;
}

uint64_t sub_1B10227E4(uint64_t a1)
{
  destroy for RoundedBorderModifier(a1);
  return a1;
}

unint64_t sub_1B1022810()
{
  unint64_t result;

  result = qword_1EEEE15A8;
  if (!qword_1EEEE15A8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1049684, &type metadata for BorderModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE15A8);
  }
  return result;
}

uint64_t sub_1B1022854(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for BorderModifier(a2, a1);
  return a2;
}

uint64_t sub_1B1022888(uint64_t a1)
{
  destroy for BorderModifier(a1);
  return a1;
}

unint64_t sub_1B10228B4()
{
  unint64_t result;

  result = qword_1EEEE15B8;
  if (!qword_1EEEE15B8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1049634, &type metadata for ForegroundStyleModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE15B8);
  }
  return result;
}

uint64_t sub_1B10228F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1498);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B1022940(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ForegroundStyleModifier(a2, a1);
  return a2;
}

uint64_t sub_1B1022974(uint64_t a1)
{
  destroy for ForegroundStyleModifier(a1);
  return a1;
}

ValueMetadata *type metadata accessor for ForegroundStyleModifier.CodingKeys()
{
  return &type metadata for ForegroundStyleModifier.CodingKeys;
}

ValueMetadata *type metadata accessor for BorderModifier.CodingKeys()
{
  return &type metadata for BorderModifier.CodingKeys;
}

uint64_t _s6LiftUI23ForegroundStyleModifierV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B1022A14 + 4 * byte_1B1048EDD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B1022A48 + 4 * byte_1B1048ED8[v4]))();
}

uint64_t sub_1B1022A48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1022A50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1022A58);
  return result;
}

uint64_t sub_1B1022A64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1022A6CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B1022A70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1022A78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RoundedBorderModifier.CodingKeys()
{
  return &type metadata for RoundedBorderModifier.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for TintColorModifier.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B1022AD4 + 4 * byte_1B1048EE2[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B1022AF4 + 4 * byte_1B1048EE7[v4]))();
}

_BYTE *sub_1B1022AD4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B1022AF4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B1022AFC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B1022B04(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B1022B0C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B1022B14(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TintColorModifier.CodingKeys()
{
  return &type metadata for TintColorModifier.CodingKeys;
}

uint64_t destroy for MonoColor(uint64_t a1)
{
  uint64_t result;
  unsigned int v3;

  result = sub_1B0F6C7D4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 <= 0xFD)
    return sub_1B0F6C7D4(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), v3);
  return result;
}

uint64_t initializeWithCopy for MonoColor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_1B0F6C708(*(_QWORD *)a2, v5, v6, v7);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  v8 = *(unsigned __int8 *)(a2 + 56);
  if (v8 <= 0xFD)
  {
    v9 = *(_QWORD *)(a2 + 32);
    v10 = *(_QWORD *)(a2 + 40);
    v11 = *(_QWORD *)(a2 + 48);
    sub_1B0F6C708(v9, v10, v11, v8);
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v10;
    *(_QWORD *)(a1 + 48) = v11;
    *(_BYTE *)(a1 + 56) = v8;
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  }
  return a1;
}

uint64_t assignWithCopy for MonoColor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _OWORD *v12;
  _OWORD *v13;
  unsigned int v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_1B0F6C708(*(_QWORD *)a2, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  v11 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v7;
  sub_1B0F6C7D4(v8, v9, v10, v11);
  v12 = (_OWORD *)(a1 + 32);
  v13 = (_OWORD *)(a2 + 32);
  v14 = *(unsigned __int8 *)(a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) <= 0xFDu)
  {
    if (v14 <= 0xFD)
    {
      v20 = *(_QWORD *)(a2 + 32);
      v21 = *(_QWORD *)(a2 + 40);
      v22 = *(_QWORD *)(a2 + 48);
      sub_1B0F6C708(v20, v21, v22, v14);
      v23 = *(_QWORD *)(a1 + 32);
      v24 = *(_QWORD *)(a1 + 40);
      v25 = *(_QWORD *)(a1 + 48);
      *(_QWORD *)(a1 + 32) = v20;
      *(_QWORD *)(a1 + 40) = v21;
      *(_QWORD *)(a1 + 48) = v22;
      v26 = *(_BYTE *)(a1 + 56);
      *(_BYTE *)(a1 + 56) = v14;
      sub_1B0F6C7D4(v23, v24, v25, v26);
    }
    else
    {
      sub_1B0F7A924(a1 + 32);
      v16 = *(_OWORD *)(a2 + 41);
      *v12 = *v13;
      *(_OWORD *)(a1 + 41) = v16;
    }
  }
  else if (v14 <= 0xFD)
  {
    v17 = *(_QWORD *)(a2 + 32);
    v18 = *(_QWORD *)(a2 + 40);
    v19 = *(_QWORD *)(a2 + 48);
    sub_1B0F6C708(v17, v18, v19, v14);
    *(_QWORD *)(a1 + 32) = v17;
    *(_QWORD *)(a1 + 40) = v18;
    *(_QWORD *)(a1 + 48) = v19;
    *(_BYTE *)(a1 + 56) = v14;
  }
  else
  {
    v15 = *v13;
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
    *v12 = v15;
  }
  return a1;
}

uint64_t assignWithTake for MonoColor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  v9 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v5;
  sub_1B0F6C7D4(v6, v7, v8, v9);
  v10 = *(unsigned __int8 *)(a1 + 56);
  if (v10 <= 0xFD)
  {
    v11 = *(unsigned __int8 *)(a2 + 56);
    if (v11 <= 0xFD)
    {
      v12 = *(_QWORD *)(a2 + 48);
      v13 = *(_QWORD *)(a1 + 32);
      v14 = *(_QWORD *)(a1 + 40);
      v15 = *(_QWORD *)(a1 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 48) = v12;
      *(_BYTE *)(a1 + 56) = v11;
      sub_1B0F6C7D4(v13, v14, v15, v10);
      return a1;
    }
    sub_1B0F7A924(a1 + 32);
  }
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  return a1;
}

uint64_t getEnumTagSinglePayload for MonoColor(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 57))
    return (*(_DWORD *)a1 + 127);
  v3 = (*(_BYTE *)(a1 + 24) & 0x7E | (*(unsigned __int8 *)(a1 + 24) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for MonoColor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 - 127;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 57) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_BYTE *)(result + 24) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MonoColor()
{
  return &type metadata for MonoColor;
}

ValueMetadata *type metadata accessor for AnyCodableColor()
{
  return &type metadata for AnyCodableColor;
}

unint64_t sub_1B1022EE4()
{
  unint64_t result;

  result = qword_1EEEE15C0;
  if (!qword_1EEEE15C0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104933C, &type metadata for TintColorModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE15C0);
  }
  return result;
}

unint64_t sub_1B1022F2C()
{
  unint64_t result;

  result = qword_1EEEE15C8;
  if (!qword_1EEEE15C8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104942C, &type metadata for RoundedBorderModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE15C8);
  }
  return result;
}

unint64_t sub_1B1022F74()
{
  unint64_t result;

  result = qword_1EEEE15D0;
  if (!qword_1EEEE15D0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104951C, &type metadata for BorderModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE15D0);
  }
  return result;
}

unint64_t sub_1B1022FBC()
{
  unint64_t result;

  result = qword_1EEEE15D8;
  if (!qword_1EEEE15D8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104960C, &type metadata for ForegroundStyleModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE15D8);
  }
  return result;
}

unint64_t sub_1B1023004()
{
  unint64_t result;

  result = qword_1EEEE15E0;
  if (!qword_1EEEE15E0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1049544, &type metadata for ForegroundStyleModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE15E0);
  }
  return result;
}

unint64_t sub_1B102304C()
{
  unint64_t result;

  result = qword_1EEEE15E8;
  if (!qword_1EEEE15E8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104956C, &type metadata for ForegroundStyleModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE15E8);
  }
  return result;
}

unint64_t sub_1B1023094()
{
  unint64_t result;

  result = qword_1EEEE15F0;
  if (!qword_1EEEE15F0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1049454, &type metadata for BorderModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE15F0);
  }
  return result;
}

unint64_t sub_1B10230DC()
{
  unint64_t result;

  result = qword_1EEEE15F8;
  if (!qword_1EEEE15F8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104947C, &type metadata for BorderModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE15F8);
  }
  return result;
}

unint64_t sub_1B1023124()
{
  unint64_t result;

  result = qword_1EEEE1600;
  if (!qword_1EEEE1600)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1049364, &type metadata for RoundedBorderModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1600);
  }
  return result;
}

unint64_t sub_1B102316C()
{
  unint64_t result;

  result = qword_1EEEE1608;
  if (!qword_1EEEE1608)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104938C, &type metadata for RoundedBorderModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1608);
  }
  return result;
}

unint64_t sub_1B10231B4()
{
  unint64_t result;

  result = qword_1EEEE1610;
  if (!qword_1EEEE1610)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1049274, &type metadata for TintColorModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1610);
  }
  return result;
}

unint64_t sub_1B10231FC()
{
  unint64_t result;

  result = qword_1EEEE1618;
  if (!qword_1EEEE1618)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104929C, &type metadata for TintColorModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1618);
  }
  return result;
}

unint64_t sub_1B1023240(uint64_t a1)
{
  unint64_t result;

  result = sub_1B1023264();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B1023264()
{
  unint64_t result;

  result = qword_1EEEE1620;
  if (!qword_1EEEE1620)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104924C, &type metadata for MonoColor);
    atomic_store(result, (unint64_t *)&qword_1EEEE1620);
  }
  return result;
}

uint64_t type metadata accessor for ColorDecodingError()
{
  uint64_t result;

  result = qword_1EEEE1698;
  if (!qword_1EEEE1698)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1B10232E4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B1023308(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  char v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1680);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B1023A30();
  sub_1B1036278();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v11 = 0;
    v7 = sub_1B10360B0();
    v10 = 1;
    swift_bridgeObjectRetain();
    sub_1B103608C();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_1B10234B4(_QWORD *a1)
{
  uint64_t v1;
  unint64_t v3;
  unsigned __int8 v5;
  _QWORD v6[4];

  v3 = (unint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B1036260();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v6, v6[3]);
    sub_1B1023A74();
    sub_1B1036164();
    v3 = v5;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v3;
}

unint64_t sub_1B102366C()
{
  unint64_t result;

  result = qword_1EEEE1630;
  if (!qword_1EEEE1630)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1049E48, &type metadata for ElementColor);
    atomic_store(result, (unint64_t *)&qword_1EEEE1630);
  }
  return result;
}

unint64_t sub_1B10236B0()
{
  unint64_t result;

  result = qword_1EEEE1638;
  if (!qword_1EEEE1638)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1049E2C, &type metadata for BundleColor);
    atomic_store(result, (unint64_t *)&qword_1EEEE1638);
  }
  return result;
}

uint64_t sub_1B10236F4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1B1023720()
{
  unint64_t result;

  result = qword_1EEEE1640;
  if (!qword_1EEEE1640)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1049E10, &type metadata for RGBAColor);
    atomic_store(result, (unint64_t *)&qword_1EEEE1640);
  }
  return result;
}

uint64_t sub_1B1023764()
{
  uint64_t v0;
  unsigned int v1;

  sub_1B0F6C7D4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  sub_1B0F6C7D4(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_BYTE *)(v0 + 72));
  sub_1B0F6C7D4(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_BYTE *)(v0 + 104));
  v1 = *(unsigned __int8 *)(v0 + 136);
  if (v1 <= 0xFD)
    sub_1B0F6C7D4(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), v1);
  return swift_deallocObject();
}

uint64_t sub_1B10237C8()
{
  uint64_t v0;
  unsigned int v1;

  sub_1B0F6C7D4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
  v1 = *(unsigned __int8 *)(v0 + 72);
  if (v1 <= 0xFD)
    sub_1B0F6C7D4(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), v1);
  return swift_deallocObject();
}

unint64_t sub_1B102380C()
{
  unint64_t result;

  result = qword_1EEEE1648;
  if (!qword_1EEEE1648)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1049DE8, &type metadata for ColorName);
    atomic_store(result, (unint64_t *)&qword_1EEEE1648);
  }
  return result;
}

unint64_t sub_1B1023850()
{
  unint64_t result;

  result = qword_1EEEE1650;
  if (!qword_1EEEE1650)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1049DCC, &type metadata for NamedSystemColor);
    atomic_store(result, (unint64_t *)&qword_1EEEE1650);
  }
  return result;
}

unint64_t sub_1B1023894()
{
  unint64_t result;

  result = qword_1EEEE1658;
  if (!qword_1EEEE1658)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1049DB0, &type metadata for NamedStandardColor);
    atomic_store(result, (unint64_t *)&qword_1EEEE1658);
  }
  return result;
}

unint64_t sub_1B10238D8()
{
  unint64_t result;

  result = qword_1EEEE1668;
  if (!qword_1EEEE1668)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1049D60, &type metadata for MonoColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1668);
  }
  return result;
}

unint64_t sub_1B102391C()
{
  unint64_t result;

  result = qword_1EEEE1678;
  if (!qword_1EEEE1678)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1049D10, &type metadata for RGBAColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1678);
  }
  return result;
}

uint64_t sub_1B1023960(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t), void (*a3)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  v8 = *(_QWORD *)(a1 + 64);
  v9 = *(_QWORD *)(a1 + 72);
  v10 = *(_QWORD *)(a1 + 80);
  v16 = *(_QWORD *)(a1 + 104);
  v17 = *(_QWORD *)(a1 + 96);
  v15 = *(_QWORD *)(a1 + 112);
  v11 = *(unsigned __int8 *)(a1 + 56);
  v12 = *(unsigned __int8 *)(a1 + 88);
  v14 = *(unsigned __int8 *)(a1 + 120);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24));
  a2(v5, v6, v7, v11);
  a2(v8, v9, v10, v12);
  a3(v17, v16, v15, v14);
  return a1;
}

unint64_t sub_1B1023A30()
{
  unint64_t result;

  result = qword_1EEEE1688;
  if (!qword_1EEEE1688)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1049CC0, &type metadata for BundleColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1688);
  }
  return result;
}

unint64_t sub_1B1023A74()
{
  unint64_t result;

  result = qword_1EEEE1690;
  if (!qword_1EEEE1690)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10398BC, &type metadata for ElementColorName);
    atomic_store(result, (unint64_t *)&qword_1EEEE1690);
  }
  return result;
}

unint64_t sub_1B1023AB8(_QWORD *a1)
{
  uint64_t v1;
  unint64_t v3;
  _QWORD v5[4];
  unsigned __int8 v6;

  v3 = (unint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B1036260();
  if (!v1)
  {
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    sub_1B102380C();
    sub_1B1036164();
    v3 = v6;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

uint64_t sub_1B1023B90()
{
  return 0x7974536570616873;
}

uint64_t sub_1B1023BAC()
{
  unint64_t v0;

  v0 = sub_1B10361AC();
  swift_bridgeObjectRelease();
  if (v0 >= 0x19)
    return 25;
  else
    return v0;
}

uint64_t sub_1B1023BFC()
{
  unint64_t v0;

  v0 = sub_1B103605C();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

ValueMetadata *type metadata accessor for BundleColor.CodingKeys()
{
  return &type metadata for BundleColor.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for RGBAColor.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1B1023CA0 + 4 * byte_1B1048EF1[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1B1023CD4 + 4 * byte_1B1048EEC[v4]))();
}

uint64_t sub_1B1023CD4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1023CDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1023CE4);
  return result;
}

uint64_t sub_1B1023CF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1023CF8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1B1023CFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1023D04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RGBAColor.CodingKeys()
{
  return &type metadata for RGBAColor.CodingKeys;
}

uint64_t _s6LiftUI14BorderModifierV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B1023D6C + 4 * byte_1B1048EFB[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B1023DA0 + 4 * byte_1B1048EF6[v4]))();
}

uint64_t sub_1B1023DA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1023DA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1023DB0);
  return result;
}

uint64_t sub_1B1023DBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1023DC4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B1023DC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1023DD0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MonoColor.CodingKeys()
{
  return &type metadata for MonoColor.CodingKeys;
}

ValueMetadata *type metadata accessor for NamedStandardColor()
{
  return &type metadata for NamedStandardColor;
}

ValueMetadata *type metadata accessor for NamedSystemColor()
{
  return &type metadata for NamedSystemColor;
}

uint64_t _s6LiftUI9ColorNameOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE8)
    goto LABEL_17;
  if (a2 + 24 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 24) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 24;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 24;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 24;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x19;
  v8 = v6 - 25;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s6LiftUI9ColorNameOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 24 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 24) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE7)
    return ((uint64_t (*)(void))((char *)&loc_1B1023EF0 + 4 * byte_1B1048F05[v4]))();
  *a1 = a2 + 24;
  return ((uint64_t (*)(void))((char *)sub_1B1023F24 + 4 * byte_1B1048F00[v4]))();
}

uint64_t sub_1B1023F24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1023F2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1023F34);
  return result;
}

uint64_t sub_1B1023F40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1023F48);
  *(_BYTE *)result = a2 + 24;
  return result;
}

uint64_t sub_1B1023F4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1023F54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ColorName()
{
  return &type metadata for ColorName;
}

uint64_t destroy for RGBAColor(uint64_t a1)
{
  uint64_t result;
  unsigned int v3;

  sub_1B0F6C7D4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  sub_1B0F6C7D4(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
  result = sub_1B0F6C7D4(*(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88));
  v3 = *(unsigned __int8 *)(a1 + 120);
  if (v3 <= 0xFD)
    return sub_1B0F6C7D4(*(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), v3);
  return result;
}

uint64_t initializeWithCopy for RGBAColor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_1B0F6C708(*(_QWORD *)a2, v5, v6, v7);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_BYTE *)(a2 + 56);
  sub_1B0F6C708(v8, v9, v10, v11);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_BYTE *)(a1 + 56) = v11;
  v12 = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_BYTE *)(a2 + 88);
  sub_1B0F6C708(v12, v13, v14, v15);
  *(_QWORD *)(a1 + 64) = v12;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_BYTE *)(a1 + 88) = v15;
  v16 = *(unsigned __int8 *)(a2 + 120);
  if (v16 <= 0xFD)
  {
    v17 = *(_QWORD *)(a2 + 96);
    v18 = *(_QWORD *)(a2 + 104);
    v19 = *(_QWORD *)(a2 + 112);
    sub_1B0F6C708(v17, v18, v19, v16);
    *(_QWORD *)(a1 + 96) = v17;
    *(_QWORD *)(a1 + 104) = v18;
    *(_QWORD *)(a1 + 112) = v19;
    *(_BYTE *)(a1 + 120) = v16;
  }
  else
  {
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
  }
  return a1;
}

uint64_t assignWithCopy for RGBAColor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  _OWORD *v28;
  _OWORD *v29;
  unsigned int v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_1B0F6C708(*(_QWORD *)a2, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  v11 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v7;
  sub_1B0F6C7D4(v8, v9, v10, v11);
  v12 = *(_QWORD *)(a2 + 32);
  v13 = *(_QWORD *)(a2 + 40);
  v14 = *(_QWORD *)(a2 + 48);
  v15 = *(_BYTE *)(a2 + 56);
  sub_1B0F6C708(v12, v13, v14, v15);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 32) = v12;
  *(_QWORD *)(a1 + 40) = v13;
  *(_QWORD *)(a1 + 48) = v14;
  v19 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a1 + 56) = v15;
  sub_1B0F6C7D4(v16, v17, v18, v19);
  v20 = *(_QWORD *)(a2 + 64);
  v21 = *(_QWORD *)(a2 + 72);
  v22 = *(_QWORD *)(a2 + 80);
  v23 = *(_BYTE *)(a2 + 88);
  sub_1B0F6C708(v20, v21, v22, v23);
  v24 = *(_QWORD *)(a1 + 64);
  v25 = *(_QWORD *)(a1 + 72);
  v26 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 64) = v20;
  *(_QWORD *)(a1 + 72) = v21;
  *(_QWORD *)(a1 + 80) = v22;
  v27 = *(_BYTE *)(a1 + 88);
  *(_BYTE *)(a1 + 88) = v23;
  sub_1B0F6C7D4(v24, v25, v26, v27);
  v28 = (_OWORD *)(a1 + 96);
  v29 = (_OWORD *)(a2 + 96);
  v30 = *(unsigned __int8 *)(a2 + 120);
  if (*(unsigned __int8 *)(a1 + 120) <= 0xFDu)
  {
    if (v30 <= 0xFD)
    {
      v36 = *(_QWORD *)(a2 + 96);
      v37 = *(_QWORD *)(a2 + 104);
      v38 = *(_QWORD *)(a2 + 112);
      sub_1B0F6C708(v36, v37, v38, v30);
      v39 = *(_QWORD *)(a1 + 96);
      v40 = *(_QWORD *)(a1 + 104);
      v41 = *(_QWORD *)(a1 + 112);
      *(_QWORD *)(a1 + 96) = v36;
      *(_QWORD *)(a1 + 104) = v37;
      *(_QWORD *)(a1 + 112) = v38;
      v42 = *(_BYTE *)(a1 + 120);
      *(_BYTE *)(a1 + 120) = v30;
      sub_1B0F6C7D4(v39, v40, v41, v42);
    }
    else
    {
      sub_1B0F7A924(a1 + 96);
      v32 = *(_OWORD *)(a2 + 105);
      *v28 = *v29;
      *(_OWORD *)(a1 + 105) = v32;
    }
  }
  else if (v30 <= 0xFD)
  {
    v33 = *(_QWORD *)(a2 + 96);
    v34 = *(_QWORD *)(a2 + 104);
    v35 = *(_QWORD *)(a2 + 112);
    sub_1B0F6C708(v33, v34, v35, v30);
    *(_QWORD *)(a1 + 96) = v33;
    *(_QWORD *)(a1 + 104) = v34;
    *(_QWORD *)(a1 + 112) = v35;
    *(_BYTE *)(a1 + 120) = v30;
  }
  else
  {
    v31 = *v29;
    *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
    *v28 = v31;
  }
  return a1;
}

uint64_t assignWithTake for RGBAColor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  v9 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v5;
  sub_1B0F6C7D4(v6, v7, v8, v9);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_BYTE *)(a2 + 56);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = *(_QWORD *)(a1 + 40);
  v14 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = v10;
  v15 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a1 + 56) = v11;
  sub_1B0F6C7D4(v12, v13, v14, v15);
  v16 = *(_QWORD *)(a2 + 80);
  v17 = *(_BYTE *)(a2 + 88);
  v18 = *(_QWORD *)(a1 + 64);
  v19 = *(_QWORD *)(a1 + 72);
  v20 = *(_QWORD *)(a1 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = v16;
  v21 = *(_BYTE *)(a1 + 88);
  *(_BYTE *)(a1 + 88) = v17;
  sub_1B0F6C7D4(v18, v19, v20, v21);
  v22 = *(unsigned __int8 *)(a1 + 120);
  if (v22 <= 0xFD)
  {
    v23 = *(unsigned __int8 *)(a2 + 120);
    if (v23 <= 0xFD)
    {
      v24 = *(_QWORD *)(a2 + 112);
      v25 = *(_QWORD *)(a1 + 96);
      v26 = *(_QWORD *)(a1 + 104);
      v27 = *(_QWORD *)(a1 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 112) = v24;
      *(_BYTE *)(a1 + 120) = v23;
      sub_1B0F6C7D4(v25, v26, v27, v22);
      return a1;
    }
    sub_1B0F7A924(a1 + 96);
  }
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
  return a1;
}

ValueMetadata *type metadata accessor for RGBAColor()
{
  return &type metadata for RGBAColor;
}

uint64_t destroy for BundleColor()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for BundleColor(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for BundleColor(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_QWORD *assignWithTake for BundleColor(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BundleColor(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BundleColor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BundleColor()
{
  return &type metadata for BundleColor;
}

uint64_t storeEnumTagSinglePayload for ElementColor(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 19 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 19) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xED)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEC)
    return ((uint64_t (*)(void))((char *)&loc_1B102459C + 4 * byte_1B1048F0F[v4]))();
  *a1 = a2 + 19;
  return ((uint64_t (*)(void))((char *)sub_1B10245D0 + 4 * byte_1B1048F0A[v4]))();
}

uint64_t sub_1B10245D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B10245D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B10245E0);
  return result;
}

uint64_t sub_1B10245EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B10245F4);
  *(_BYTE *)result = a2 + 19;
  return result;
}

uint64_t sub_1B10245F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1024600(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ElementColor()
{
  return &type metadata for ElementColor;
}

uint64_t *sub_1B102461C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    swift_bridgeObjectRetain();
    v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0BE0) + 48);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1B1035F54();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  return a1;
}

uint64_t sub_1B10246B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0BE0) + 48);
  v3 = sub_1B1035F54();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *sub_1B1024708(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRetain();
  v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0BE0) + 48);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1B1035F54();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  return a1;
}

_QWORD *sub_1B1024778(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0BE0) + 48);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1B1035F54();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *sub_1B10247FC(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0BE0) + 48);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1B1035F54();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_1B1024868(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0BE0) + 48);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1B1035F54();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 40))(v6, v7, v8);
  return a1;
}

uint64_t sub_1B10248DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0BE0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1B102491C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE0BE0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, a2, a3, v6);
}

uint64_t sub_1B102496C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  int v4;

  result = sub_1B1035F54();
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSingleCase();
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = v4;
  }
  return result;
}

unint64_t sub_1B10249E8()
{
  unint64_t result;

  result = qword_1EEEE16A8;
  if (!qword_1EEEE16A8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1049978, &type metadata for ColorName);
    atomic_store(result, (unint64_t *)&qword_1EEEE16A8);
  }
  return result;
}

unint64_t sub_1B1024A30()
{
  unint64_t result;

  result = qword_1EEEE16B0;
  if (!qword_1EEEE16B0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1049AB8, &type metadata for MonoColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE16B0);
  }
  return result;
}

unint64_t sub_1B1024A78()
{
  unint64_t result;

  result = qword_1EEEE16B8;
  if (!qword_1EEEE16B8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1049BA8, &type metadata for RGBAColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE16B8);
  }
  return result;
}

unint64_t sub_1B1024AC0()
{
  unint64_t result;

  result = qword_1EEEE16C0;
  if (!qword_1EEEE16C0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1049C98, &type metadata for BundleColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE16C0);
  }
  return result;
}

unint64_t sub_1B1024B08()
{
  unint64_t result;

  result = qword_1EEEE16C8;
  if (!qword_1EEEE16C8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1049BD0, &type metadata for BundleColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE16C8);
  }
  return result;
}

unint64_t sub_1B1024B50()
{
  unint64_t result;

  result = qword_1EEEE16D0;
  if (!qword_1EEEE16D0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1049BF8, &type metadata for BundleColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE16D0);
  }
  return result;
}

unint64_t sub_1B1024B98()
{
  unint64_t result;

  result = qword_1EEEE16D8;
  if (!qword_1EEEE16D8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1049AE0, &type metadata for RGBAColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE16D8);
  }
  return result;
}

unint64_t sub_1B1024BE0()
{
  unint64_t result;

  result = qword_1EEEE16E0;
  if (!qword_1EEEE16E0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1049B08, &type metadata for RGBAColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE16E0);
  }
  return result;
}

unint64_t sub_1B1024C28()
{
  unint64_t result;

  result = qword_1EEEE16E8;
  if (!qword_1EEEE16E8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10499F0, &type metadata for MonoColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE16E8);
  }
  return result;
}

unint64_t sub_1B1024C70()
{
  unint64_t result;

  result = qword_1EEEE16F0;
  if (!qword_1EEEE16F0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1049A18, &type metadata for MonoColor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE16F0);
  }
  return result;
}

unint64_t sub_1B1024CB4(uint64_t a1)
{
  unint64_t result;

  result = sub_1B1024CD8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B1024CD8()
{
  unint64_t result;

  result = qword_1EEEE16F8;
  if (!qword_1EEEE16F8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10499C8, &type metadata for NamedStandardColor);
    atomic_store(result, (unint64_t *)&qword_1EEEE16F8);
  }
  return result;
}

unint64_t sub_1B1024D1C(uint64_t a1)
{
  unint64_t result;

  result = sub_1B1024D40();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B1024D40()
{
  unint64_t result;

  result = qword_1EEEE1700;
  if (!qword_1EEEE1700)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10499A0, &type metadata for NamedSystemColor);
    atomic_store(result, (unint64_t *)&qword_1EEEE1700);
  }
  return result;
}

unint64_t sub_1B1024D84(uint64_t a1)
{
  unint64_t result;

  result = sub_1B1024DA8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B1024DA8()
{
  unint64_t result;

  result = qword_1EEEE1708;
  if (!qword_1EEEE1708)
  {
    result = MEMORY[0x1B5E15188](&unk_1B10498B0, &type metadata for RGBAColor);
    atomic_store(result, (unint64_t *)&qword_1EEEE1708);
  }
  return result;
}

unint64_t sub_1B1024DEC(uint64_t a1)
{
  unint64_t result;

  result = sub_1B1024E10();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B1024E10()
{
  unint64_t result;

  result = qword_1EEEE1710;
  if (!qword_1EEEE1710)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1049888, &type metadata for BundleColor);
    atomic_store(result, (unint64_t *)&qword_1EEEE1710);
  }
  return result;
}

unint64_t sub_1B1024E54(uint64_t a1)
{
  unint64_t result;

  result = sub_1B1024E78();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B1024E78()
{
  unint64_t result;

  result = qword_1EEEE1718;
  if (!qword_1EEEE1718)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1049860, &type metadata for ElementColor);
    atomic_store(result, (unint64_t *)&qword_1EEEE1718);
  }
  return result;
}

unint64_t sub_1B1024EBC()
{
  unint64_t result;

  result = qword_1EEEE1720;
  if (!qword_1EEEE1720)
  {
    result = MEMORY[0x1B5E15188](&unk_1B1049900, &type metadata for ColorName);
    atomic_store(result, (unint64_t *)&qword_1EEEE1720);
  }
  return result;
}

unint64_t sub_1B1024F00@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1B101DCD8(a1, a2);
}

ValueMetadata *type metadata accessor for ContentShapeModifier()
{
  return &type metadata for ContentShapeModifier;
}

ValueMetadata *type metadata accessor for ClipShapeModifier()
{
  return &type metadata for ClipShapeModifier;
}

uint64_t sub_1B1024F34@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v20;
  _QWORD v21[2];
  uint64_t v22[4];
  uint64_t v23[5];

  v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v6 = v4[3];
  v7 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v6);
  v8 = *(void (**)(uint64_t, uint64_t))(v7 + 32);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v23[3] = AssociatedTypeWitness;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v23[4] = AssociatedConformanceWitness;
  __swift_allocate_boxed_opaque_existential_1(v23);
  v8(v6, v7);
  v11 = v4[3];
  v12 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v11);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 40))(v11, v12);
  v14 = sub_1B0F5B664(v13);
  swift_bridgeObjectRelease();
  sub_1B0F5B780(v14, a2, a3, AssociatedTypeWitness, AssociatedConformanceWitness, v22);
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(v22, v22[3]);
  v15 = sub_1B10347E4();
  v16 = sub_1B103497C();
  a4[3] = v16;
  v21[0] = v20;
  v21[1] = MEMORY[0x1B5E15188](MEMORY[0x1E0CD89F0], v15);
  a4[4] = MEMORY[0x1B5E15188](MEMORY[0x1E0CD9C20], v16, v21);
  __swift_allocate_boxed_opaque_existential_1(a4);
  sub_1B103563C();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
}

uint64_t sub_1B102512C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1B1025978(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1B1025154()
{
  sub_1B10256C0();
  return sub_1B10362B4();
}

uint64_t sub_1B102517C()
{
  sub_1B10256C0();
  return sub_1B10362C0();
}

uint64_t sub_1B10251A4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B1025454(a1, &qword_1EEEE1748, (void (*)(void))sub_1B10256C0, a2);
}

uint64_t sub_1B10251D0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1B1024F34(a1, a2, a3, a4);
}

uint64_t sub_1B10251E4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v20;
  _QWORD v21[2];
  uint64_t v22[4];
  uint64_t v23[5];

  v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v6 = v4[3];
  v7 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v6);
  v8 = *(void (**)(uint64_t, uint64_t))(v7 + 32);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v23[3] = AssociatedTypeWitness;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v23[4] = AssociatedConformanceWitness;
  __swift_allocate_boxed_opaque_existential_1(v23);
  v8(v6, v7);
  v11 = v4[3];
  v12 = v4[4];
  __swift_project_boxed_opaque_existential_1(v4, v11);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 40))(v11, v12);
  v14 = sub_1B0F5B664(v13);
  swift_bridgeObjectRelease();
  sub_1B0F5B780(v14, a2, a3, AssociatedTypeWitness, AssociatedConformanceWitness, v22);
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(v22, v22[3]);
  v15 = sub_1B1035000();
  v16 = sub_1B103497C();
  a4[3] = v16;
  v21[0] = v20;
  v21[1] = MEMORY[0x1B5E15188](MEMORY[0x1E0CDBE48], v15);
  a4[4] = MEMORY[0x1B5E15188](MEMORY[0x1E0CD9C20], v16, v21);
  __swift_allocate_boxed_opaque_existential_1(a4);
  sub_1B10353A8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
}

uint64_t sub_1B10253D8()
{
  sub_1B102567C();
  return sub_1B10362B4();
}

uint64_t sub_1B1025400()
{
  sub_1B102567C();
  return sub_1B10362C0();
}

uint64_t sub_1B1025428@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B1025454(a1, &qword_1EEEE1738, (void (*)(void))sub_1B102567C, a2);
}

uint64_t sub_1B1025454@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  _OWORD v16[2];
  uint64_t v17;
  uint64_t v18;

  v14 = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v18 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_1B1036278();
  if (!v4)
  {
    v10 = v14;
    sub_1B0FC51F0();
    sub_1B10360BC();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v7);
    sub_1B0F5A0E4(&v15, (uint64_t)v16);
    v11 = v16[1];
    *(_OWORD *)v10 = v16[0];
    *(_OWORD *)(v10 + 16) = v11;
    *(_QWORD *)(v10 + 32) = v17;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B1025598@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  return sub_1B10251E4(a1, a2, a3, a4);
}

unint64_t sub_1B10255AC(uint64_t a1)
{
  unint64_t result;

  result = sub_1B10255D0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B10255D0()
{
  unint64_t result;

  result = qword_1EEEE1728;
  if (!qword_1EEEE1728)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104A11C, &type metadata for ContentShapeModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE1728);
  }
  return result;
}

unint64_t sub_1B1025614(uint64_t a1)
{
  unint64_t result;

  result = sub_1B1025638();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B1025638()
{
  unint64_t result;

  result = qword_1EEEE1730;
  if (!qword_1EEEE1730)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104A0F4, &type metadata for ClipShapeModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE1730);
  }
  return result;
}

unint64_t sub_1B102567C()
{
  unint64_t result;

  result = qword_1EEEE1740;
  if (!qword_1EEEE1740)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104A348, &type metadata for ContentShapeModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1740);
  }
  return result;
}

unint64_t sub_1B10256C0()
{
  unint64_t result;

  result = qword_1EEEE1750;
  if (!qword_1EEEE1750)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104A2F8, &type metadata for ClipShapeModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1750);
  }
  return result;
}

ValueMetadata *type metadata accessor for ClipShapeModifier.CodingKeys()
{
  return &type metadata for ClipShapeModifier.CodingKeys;
}

uint64_t _s6LiftUI17ClipShapeModifierV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B1025758 + 4 * byte_1B104A0A0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B1025778 + 4 * byte_1B104A0A5[v4]))();
}

_BYTE *sub_1B1025758(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B1025778(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B1025780(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B1025788(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B1025790(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B1025798(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ContentShapeModifier.CodingKeys()
{
  return &type metadata for ContentShapeModifier.CodingKeys;
}

unint64_t sub_1B10257B8()
{
  unint64_t result;

  result = qword_1EEEE1758;
  if (!qword_1EEEE1758)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104A218, &type metadata for ContentShapeModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1758);
  }
  return result;
}

unint64_t sub_1B1025800()
{
  unint64_t result;

  result = qword_1EEEE1760;
  if (!qword_1EEEE1760)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104A2D0, &type metadata for ClipShapeModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1760);
  }
  return result;
}

unint64_t sub_1B1025848()
{
  unint64_t result;

  result = qword_1EEEE1768;
  if (!qword_1EEEE1768)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104A240, &type metadata for ClipShapeModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1768);
  }
  return result;
}

unint64_t sub_1B1025890()
{
  unint64_t result;

  result = qword_1EEEE1770;
  if (!qword_1EEEE1770)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104A268, &type metadata for ClipShapeModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1770);
  }
  return result;
}

unint64_t sub_1B10258D8()
{
  unint64_t result;

  result = qword_1EEEE1778;
  if (!qword_1EEEE1778)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104A188, &type metadata for ContentShapeModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1778);
  }
  return result;
}

unint64_t sub_1B1025920()
{
  unint64_t result;

  result = qword_1EEEE1780;
  if (!qword_1EEEE1780)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104A1B0, &type metadata for ContentShapeModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1780);
  }
  return result;
}

uint64_t sub_1B1025964()
{
  return 0x6570616873;
}

uint64_t sub_1B1025978(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6570616873 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1B1036128();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t destroy for DictDeleteAction(uint64_t a1)
{
  sub_1B0F56B08(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  return sub_1B0F571A8(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
}

uint64_t initializeWithCopy for DictDeleteAction(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a2;
  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_1B0F56BC8(*(_QWORD *)a2, v5, v6, v7);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(v2 + 32);
  v9 = *(_QWORD *)(v2 + 40);
  v10 = *(_QWORD *)(v2 + 48);
  LOBYTE(v2) = *(_BYTE *)(v2 + 56);
  sub_1B0F56C30(v8, v9, v10, v2);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_BYTE *)(a1 + 56) = v2;
  return a1;
}

uint64_t assignWithCopy for DictDeleteAction(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v2 = a2;
  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_1B0F56BC8(*(_QWORD *)a2, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  sub_1B0F56B08(v8, v9, v10, v11);
  v12 = *(_QWORD *)(v2 + 32);
  v13 = *(_QWORD *)(v2 + 40);
  v14 = *(_QWORD *)(v2 + 48);
  LOBYTE(v2) = *(_BYTE *)(v2 + 56);
  sub_1B0F56C30(v12, v13, v14, v2);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = *(_QWORD *)(a1 + 40);
  v17 = *(_QWORD *)(a1 + 48);
  v18 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)(a1 + 32) = v12;
  *(_QWORD *)(a1 + 40) = v13;
  *(_QWORD *)(a1 + 48) = v14;
  *(_BYTE *)(a1 + 56) = v2;
  sub_1B0F571A8(v15, v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for DictDeleteAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  sub_1B0F56B08(v6, v7, v8, v9);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_BYTE *)(a2 + 56);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = *(_QWORD *)(a1 + 40);
  v14 = *(_QWORD *)(a1 + 48);
  v15 = *(_BYTE *)(a1 + 56);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = v10;
  *(_BYTE *)(a1 + 56) = v11;
  sub_1B0F571A8(v12, v13, v14, v15);
  return a1;
}

ValueMetadata *type metadata accessor for DictDeleteAction()
{
  return &type metadata for DictDeleteAction;
}

uint64_t sub_1B1025BEC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x616E6F6974636964;
  else
    return 7955819;
}

uint64_t sub_1B1025C20(char *a1, char *a2)
{
  return sub_1B100DCB8(*a1, *a2);
}

uint64_t sub_1B1025C2C()
{
  return sub_1B1011810();
}

uint64_t sub_1B1025C34()
{
  return sub_1B1012A4C();
}

uint64_t sub_1B1025C3C()
{
  return sub_1B10145D0();
}

uint64_t sub_1B1025C44@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1B103605C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1B1025CA0@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B1025BEC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B1025CC8()
{
  char *v0;

  return sub_1B1025BEC(*v0);
}

uint64_t sub_1B1025CD0@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1B103605C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1B1025D30()
{
  sub_1B1026608();
  return sub_1B10362B4();
}

uint64_t sub_1B1025D58()
{
  sub_1B1026608();
  return sub_1B10362C0();
}

uint64_t sub_1B1025D80@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 v36;
  int v37;
  char v38;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE17B0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B1026608();
  sub_1B1036278();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF3C8);
  v38 = 0;
  sub_1B1004508(&qword_1EEEDF4B8, &qword_1EEEDF3C8);
  sub_1B10360BC();
  v9 = v33;
  v29 = a2;
  v30 = v34;
  v10 = v35;
  v11 = v36;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE170);
  v38 = 1;
  v31 = v9;
  v32 = v10;
  v12 = v9;
  v13 = v30;
  v14 = v10;
  LOBYTE(v10) = v11;
  sub_1B0F56BC8(v12, v30, v14, v11);
  sub_1B1004508((unint64_t *)&qword_1EEEDE178, &qword_1EEEDE170);
  sub_1B10360BC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v15 = v33;
  v27 = v33;
  v28 = v34;
  v16 = v35;
  v17 = v36;
  v37 = v36;
  v18 = v13;
  v19 = v31;
  v20 = v10;
  v21 = v32;
  sub_1B0F56BC8(v31, v18, v32, v20);
  v22 = v15;
  v23 = v28;
  sub_1B0F56C30(v22, v28, v16, v17);
  sub_1B0F56B08(v19, v18, v21, v20);
  v24 = v29;
  *v29 = v19;
  v24[1] = v18;
  v24[2] = v21;
  *((_BYTE *)v24 + 24) = v20;
  v25 = v27;
  v24[4] = v27;
  v24[5] = v23;
  v24[6] = v16;
  LOBYTE(v23) = v37;
  *((_BYTE *)v24 + 56) = v37;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_1B0F56B08(v19, v18, v21, v20);
  return sub_1B0F571A8(v25, v28, v16, v23);
}

uint64_t sub_1B1026048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[4] = a6;
  v7[5] = a7;
  v7[2] = a4;
  v7[3] = a5;
  sub_1B1035D68();
  v7[6] = sub_1B1035D5C();
  sub_1B1035D50();
  return swift_task_switch();
}

uint64_t sub_1B10260B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  swift_release();
  v3 = *(_QWORD *)(v2 + 32);
  v4 = *(_QWORD *)(v2 + 40);
  v5 = *(_QWORD *)(v2 + 48);
  v6 = *(_BYTE *)(v2 + 56);
  sub_1B0F56C30(v3, v4, v5, v6);
  v7 = sub_1B0FD7904(v1, v3, v4, v5, v6);
  sub_1B0F571A8(v3, v4, v5, v6);
  v8 = *(_QWORD *)(v0 + 24);
  sub_1B0F9BCB4(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), &v10);
  sub_1B0FC9D10(v10);
  sub_1B0F56C30(v3, v4, v5, v6);
  sub_1B0FE7CA4(v8, v7, v3, v4, v5, v6);
  swift_bridgeObjectRelease();
  sub_1B0F571A8(v3, v4, v5, v6);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B10261E0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EEEE17A8 + dword_1EEEE17A8);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1B0F737CC;
  return v5(a1);
}

uint64_t sub_1B1026244@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B1025D80(a1, a2);
}

unint64_t sub_1B1026258(uint64_t a1)
{
  unint64_t result;

  result = sub_1B102627C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B102627C()
{
  unint64_t result;

  result = qword_1EEEE1788;
  if (!qword_1EEEE1788)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104A3D4, &type metadata for DictDeleteAction);
    atomic_store(result, (unint64_t *)&qword_1EEEE1788);
  }
  return result;
}

unint64_t sub_1B10262C0(uint64_t a1)
{
  unint64_t result;

  result = sub_1B10262E4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B10262E4()
{
  unint64_t result;

  result = qword_1EEEE1798;
  if (!qword_1EEEE1798)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104A3FC, &type metadata for DictDeleteAction);
    atomic_store(result, &qword_1EEEE1798);
  }
  return result;
}

uint64_t sub_1B1026328(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  __int128 v3;

  *(_QWORD *)(v2 + 80) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE910);
  *(_QWORD *)(v2 + 88) = swift_task_alloc();
  v3 = v1[1];
  *(_OWORD *)(v2 + 16) = *v1;
  *(_OWORD *)(v2 + 32) = v3;
  *(_OWORD *)(v2 + 48) = v1[2];
  *(_OWORD *)(v2 + 57) = *(_OWORD *)((char *)v1 + 41);
  return swift_task_switch();
}

uint64_t sub_1B102639C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = *(_BYTE *)(v0 + 40);
  sub_1B0F56BC8(v1, v3, v4, v5);
  v6 = sub_1B0FD70A8(v2, v1, v3, v4, v5);
  v7 = *(_QWORD *)(v0 + 88);
  v8 = v6;
  v10 = v9;
  v11 = *(_QWORD *)(v0 + 80);
  sub_1B0F56B08(v1, v3, v4, v5);
  v12 = sub_1B1035D80();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v7, 1, 1, v12);
  sub_1B1035D68();
  sub_1B0F76B9C(v0 + 16);
  swift_retain();
  v13 = sub_1B1035D5C();
  v14 = swift_allocObject();
  v15 = MEMORY[0x1E0DF06E8];
  *(_QWORD *)(v14 + 16) = v13;
  *(_QWORD *)(v14 + 24) = v15;
  v16 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v14 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v14 + 48) = v16;
  *(_OWORD *)(v14 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v14 + 73) = *(_OWORD *)(v0 + 57);
  *(_QWORD *)(v14 + 96) = v11;
  *(_QWORD *)(v14 + 104) = v8;
  *(_QWORD *)(v14 + 112) = v10;
  sub_1B0F70150(v7, (uint64_t)&unk_1EEEDEB28, v14);
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B1026524()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  sub_1B0F56B08(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56));
  sub_1B0F571A8(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_BYTE *)(v0 + 88));
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B1026578(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (uint64_t)(v1 + 4);
  v7 = v1[12];
  v8 = v1[13];
  v9 = v1[14];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1B0F737CC;
  return sub_1B1026048(a1, v4, v5, v6, v7, v8, v9);
}

unint64_t sub_1B1026608()
{
  unint64_t result;

  result = qword_1EEEE17B8;
  if (!qword_1EEEE17B8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104A530, &type metadata for DictDeleteAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE17B8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DictDeleteAction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B1026698 + 4 * byte_1B104A3A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B10266CC + 4 * byte_1B104A3A0[v4]))();
}

uint64_t sub_1B10266CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B10266D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B10266DCLL);
  return result;
}

uint64_t sub_1B10266E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B10266F0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B10266F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B10266FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DictDeleteAction.CodingKeys()
{
  return &type metadata for DictDeleteAction.CodingKeys;
}

unint64_t sub_1B102671C()
{
  unint64_t result;

  result = qword_1EEEE17C0;
  if (!qword_1EEEE17C0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104A508, &type metadata for DictDeleteAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE17C0);
  }
  return result;
}

unint64_t sub_1B1026764()
{
  unint64_t result;

  result = qword_1EEEE17C8;
  if (!qword_1EEEE17C8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104A440, &type metadata for DictDeleteAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE17C8);
  }
  return result;
}

unint64_t sub_1B10267AC()
{
  unint64_t result;

  result = qword_1EEEE17D0;
  if (!qword_1EEEE17D0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104A468, &type metadata for DictDeleteAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE17D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for IfAction()
{
  return &type metadata for IfAction;
}

uint64_t sub_1B1026800@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20[3];
  uint64_t v21;
  uint64_t v22;

  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  if (a4)
    v12 = a4;
  else
    v12 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v13 = sub_1B0F5B4C8(v12);
  swift_bridgeObjectRelease();
  sub_1B0F69B0C(v13, a2, a3, v10, v11, v20);
  swift_bridgeObjectRelease();
  v14 = v21;
  v15 = v22;
  __swift_project_boxed_opaque_existential_1(v20, v21);
  if (a5)
    v16 = a5;
  else
    v16 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v17 = sub_1B0F5B4C8(v16);
  swift_bridgeObjectRelease();
  sub_1B0F69B0C(v17, a2, a3, v14, v15, a6);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
}

uint64_t sub_1B1026928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE910);
  v5[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1B102698C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if ((sub_1B10168FC(*(_QWORD *)(v0 + 16)) & 1) != 0)
  {
    if (qword_1EEEDE0B0 != -1)
      swift_once();
    v1 = sub_1B103467C();
    __swift_project_value_buffer(v1, (uint64_t)qword_1EEF0BA00);
    v2 = sub_1B1034664();
    v3 = sub_1B1035E34();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_1B0F50000, v2, v3, "If Action: condition satisfied", v4, 2u);
      MEMORY[0x1B5E15248](v4, -1, -1);
    }
    v5 = *(_QWORD *)(v0 + 40);

    if (v5)
    {
      v6 = *(_QWORD *)(v0 + 56);
      v7 = *(_QWORD *)(v0 + 40);
      v9 = *(_QWORD *)(v0 + 16);
      v8 = *(_QWORD *)(v0 + 24);
      v10 = sub_1B1035D80();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 1, 1, v10);
      v11 = (_QWORD *)swift_allocObject();
      v11[2] = 0;
      v11[3] = 0;
      v11[4] = v7;
      v11[5] = v9;
      v11[6] = v8;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      v12 = &unk_1EEEDF5B0;
LABEL_14:
      sub_1B0F706F4(*(_QWORD *)(v0 + 56), (uint64_t)v12, (uint64_t)v11);
      swift_release();
    }
  }
  else
  {
    if (qword_1EEEDE0B0 != -1)
      swift_once();
    v13 = sub_1B103467C();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EEF0BA00);
    v14 = sub_1B1034664();
    v15 = sub_1B1035E34();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_1B0F50000, v14, v15, "If Action: condition NOT satisfied", v16, 2u);
      MEMORY[0x1B5E15248](v16, -1, -1);
    }
    v17 = *(_QWORD *)(v0 + 48);

    if (v17)
    {
      v18 = *(_QWORD *)(v0 + 48);
      v19 = *(_QWORD *)(v0 + 56);
      v21 = *(_QWORD *)(v0 + 16);
      v20 = *(_QWORD *)(v0 + 24);
      v22 = sub_1B1035D80();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v19, 1, 1, v22);
      v11 = (_QWORD *)swift_allocObject();
      v11[2] = 0;
      v11[3] = 0;
      v11[4] = v18;
      v11[5] = v21;
      v11[6] = v20;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      v12 = &unk_1EEEDE930;
      goto LABEL_14;
    }
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B1026C2C(char a1)
{
  return *(_QWORD *)&aConditiothen_1[8 * a1];
}

uint64_t sub_1B1026C4C(char *a1, char *a2)
{
  return sub_1B100C240(*a1, *a2);
}

uint64_t sub_1B1026C58()
{
  return sub_1B101188C();
}

uint64_t sub_1B1026C60()
{
  return sub_1B1011D34();
}

uint64_t sub_1B1026C68()
{
  return sub_1B10158C8();
}

uint64_t sub_1B1026C70@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1027554();
  *a1 = result;
  return result;
}

uint64_t sub_1B1026C9C@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B1026C2C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B1026CC4()
{
  char *v0;

  return sub_1B1026C2C(*v0);
}

uint64_t sub_1B1026CCC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1027554();
  *a1 = result;
  return result;
}

uint64_t sub_1B1026CF0()
{
  sub_1B102736C();
  return sub_1B10362B4();
}

uint64_t sub_1B1026D18()
{
  sub_1B102736C();
  return sub_1B10362C0();
}

uint64_t sub_1B1026D40(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v6 = *v2;
  v7 = v2[1];
  v8 = v2[2];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v9;
  *v9 = v3;
  v9[1] = sub_1B0F737CC;
  return sub_1B1026928(a1, a2, v6, v7, v8);
}

uint64_t sub_1B1026DB8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1B1026800(a1, a2, a3, *(_QWORD *)(v4 + 8), *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_1B1026DD0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  result = sub_1B1026ED4(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
  }
  return result;
}

unint64_t sub_1B1026DFC(uint64_t a1)
{
  unint64_t result;

  result = sub_1B1026E20();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B1026E20()
{
  unint64_t result;

  result = qword_1EEEE17D8;
  if (!qword_1EEEE17D8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104A59C, &type metadata for IfAction);
    atomic_store(result, (unint64_t *)&qword_1EEEE17D8);
  }
  return result;
}

unint64_t sub_1B1026E64(uint64_t a1)
{
  unint64_t result;

  result = sub_1B1026E88();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B1026E88()
{
  unint64_t result;

  result = qword_1EEEE17E8;
  if (!qword_1EEEE17E8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104A5C4, &type metadata for IfAction);
    atomic_store(result, &qword_1EEEE17E8);
  }
  return result;
}

uint64_t sub_1B1026ED4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  _BYTE v32[40];
  __int128 v33[2];
  uint64_t v34;
  unint64_t v35;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE17F8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B102736C();
  sub_1B1036278();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    type metadata accessor for Condition();
    v32[0] = 0;
    sub_1B0FCDB98();
    sub_1B10360BC();
    v2 = *(_QWORD *)&v33[0];
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF610);
    LOBYTE(v33[0]) = 1;
    v10 = sub_1B0F972CC();
    swift_retain();
    sub_1B10360A4();
    v30 = 0;
    v31 = v10;
    v29 = v9;
    if (v35)
    {
      v11 = *(_QWORD *)(v35 + 16);
      if (v11)
      {
        v26 = v5;
        v27 = v2;
        v28 = v4;
        v34 = MEMORY[0x1E0DEE9D8];
        v12 = v35;
        sub_1B0FDD904(0, v11, 0);
        v13 = v12 + 32;
        v14 = v34;
        do
        {
          sub_1B0F97374(v13, (uint64_t)v32);
          sub_1B0F5FD84((uint64_t)v32, (uint64_t)v33);
          sub_1B0F973B0((uint64_t)v32);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1B0FDD904(0, *(_QWORD *)(v14 + 16) + 1, 1);
            v14 = v34;
          }
          v16 = *(_QWORD *)(v14 + 16);
          v15 = *(_QWORD *)(v14 + 24);
          if (v16 >= v15 >> 1)
          {
            sub_1B0FDD904(v15 > 1, v16 + 1, 1);
            v14 = v34;
          }
          *(_QWORD *)(v14 + 16) = v16 + 1;
          sub_1B0F5A0E4(v33, v14 + 40 * v16 + 32);
          v13 += 40;
          --v11;
        }
        while (v11);
        swift_bridgeObjectRelease();
        v2 = v27;
        v4 = v28;
        v5 = v26;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    LOBYTE(v33[0]) = 2;
    swift_bridgeObjectRetain();
    v17 = v30;
    sub_1B10360A4();
    if (v17)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      swift_release();
      swift_bridgeObjectRelease();
      v18 = v30;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      swift_release();
      if (!v18)
        swift_bridgeObjectRelease();
    }
    else
    {
      if (v35)
      {
        v19 = *(_QWORD *)(v35 + 16);
        if (v19)
        {
          v26 = v5;
          v27 = v2;
          v28 = v4;
          v34 = MEMORY[0x1E0DEE9D8];
          v20 = v35;
          sub_1B0FDD904(0, v19, 0);
          v31 = v20;
          v21 = v20 + 32;
          v22 = v34;
          do
          {
            sub_1B0F97374(v21, (uint64_t)v32);
            sub_1B0F5FD84((uint64_t)v32, (uint64_t)v33);
            sub_1B0F973B0((uint64_t)v32);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1B0FDD904(0, *(_QWORD *)(v22 + 16) + 1, 1);
              v22 = v34;
            }
            v24 = *(_QWORD *)(v22 + 16);
            v23 = *(_QWORD *)(v22 + 24);
            if (v24 >= v23 >> 1)
            {
              sub_1B0FDD904(v23 > 1, v24 + 1, 1);
              v22 = v34;
            }
            *(_QWORD *)(v22 + 16) = v24 + 1;
            sub_1B0F5A0E4(v33, v22 + 40 * v24 + 32);
            v21 += 40;
            --v19;
          }
          while (v19);
          swift_bridgeObjectRelease();
          v2 = v27;
          v4 = v28;
          v5 = v26;
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      swift_bridgeObjectRetain();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  return v2;
}

unint64_t sub_1B102736C()
{
  unint64_t result;

  result = qword_1EEEE1800;
  if (!qword_1EEEE1800)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104A6F8, &type metadata for IfAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1800);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for IfAction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B10273FC + 4 * byte_1B104A585[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B1027430 + 4 * byte_1B104A580[v4]))();
}

uint64_t sub_1B1027430(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1027438(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1027440);
  return result;
}

uint64_t sub_1B102744C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1027454);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B1027458(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1027460(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IfAction.CodingKeys()
{
  return &type metadata for IfAction.CodingKeys;
}

unint64_t sub_1B1027480()
{
  unint64_t result;

  result = qword_1EEEE1808;
  if (!qword_1EEEE1808)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104A6D0, &type metadata for IfAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1808);
  }
  return result;
}

unint64_t sub_1B10274C8()
{
  unint64_t result;

  result = qword_1EEEE1810;
  if (!qword_1EEEE1810)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104A608, &type metadata for IfAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1810);
  }
  return result;
}

unint64_t sub_1B1027510()
{
  unint64_t result;

  result = qword_1EEEE1818;
  if (!qword_1EEEE1818)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104A630, &type metadata for IfAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1818);
  }
  return result;
}

uint64_t sub_1B1027554()
{
  unint64_t v0;

  v0 = sub_1B103605C();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t destroy for DeleteAction(uint64_t a1)
{
  sub_1B0F76648(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24), sub_1B0F76F18);
  return sub_1B0F76648(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56), sub_1B0F76F18);
}

uint64_t initializeWithCopy for DeleteAction(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a2;
  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_1B0F767BC(*(_QWORD *)a2, v5, v6, v7, sub_1B0F76F14);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(v2 + 32);
  v9 = *(_QWORD *)(v2 + 40);
  v10 = *(_QWORD *)(v2 + 48);
  LOBYTE(v2) = *(_BYTE *)(v2 + 56);
  sub_1B0F767BC(v8, v9, v10, v2, sub_1B0F76F14);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_BYTE *)(a1 + 56) = v2;
  return a1;
}

uint64_t assignWithCopy for DeleteAction(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v2 = a2;
  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_1B0F767BC(*(_QWORD *)a2, v5, v6, v7, sub_1B0F76F14);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  sub_1B0F76648(v8, v9, v10, v11, sub_1B0F76F18);
  v12 = *(_QWORD *)(v2 + 32);
  v13 = *(_QWORD *)(v2 + 40);
  v14 = *(_QWORD *)(v2 + 48);
  LOBYTE(v2) = *(_BYTE *)(v2 + 56);
  sub_1B0F767BC(v12, v13, v14, v2, sub_1B0F76F14);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = *(_QWORD *)(a1 + 40);
  v17 = *(_QWORD *)(a1 + 48);
  v18 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)(a1 + 32) = v12;
  *(_QWORD *)(a1 + 40) = v13;
  *(_QWORD *)(a1 + 48) = v14;
  *(_BYTE *)(a1 + 56) = v2;
  sub_1B0F76648(v15, v16, v17, v18, sub_1B0F76F18);
  return a1;
}

uint64_t assignWithTake for DeleteAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  sub_1B0F76648(v6, v7, v8, v9, sub_1B0F76F18);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_BYTE *)(a2 + 56);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = *(_QWORD *)(a1 + 40);
  v14 = *(_QWORD *)(a1 + 48);
  v15 = *(_BYTE *)(a1 + 56);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = v10;
  *(_BYTE *)(a1 + 56) = v11;
  sub_1B0F76648(v12, v13, v14, v15, sub_1B0F76F18);
  return a1;
}

ValueMetadata *type metadata accessor for DeleteAction()
{
  return &type metadata for DeleteAction;
}

uint64_t destroy for MoveAction(uint64_t a1)
{
  sub_1B0F76648(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24), sub_1B0F76F18);
  sub_1B0F6C7D4(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
  return sub_1B0F76648(*(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_BYTE *)(a1 + 88), sub_1B0F76F18);
}

uint64_t initializeWithCopy for MoveAction(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = a2;
  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_1B0F767BC(*(_QWORD *)a2, v5, v6, v7, sub_1B0F76F14);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(v2 + 32);
  v9 = *(_QWORD *)(v2 + 40);
  v10 = *(_QWORD *)(v2 + 48);
  v11 = *(_BYTE *)(v2 + 56);
  sub_1B0F6C708(v8, v9, v10, v11);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_BYTE *)(a1 + 56) = v11;
  v12 = *(_QWORD *)(v2 + 64);
  v13 = *(_QWORD *)(v2 + 72);
  v14 = *(_QWORD *)(v2 + 80);
  LOBYTE(v2) = *(_BYTE *)(v2 + 88);
  sub_1B0F767BC(v12, v13, v14, v2, sub_1B0F76F14);
  *(_QWORD *)(a1 + 64) = v12;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_BYTE *)(a1 + 88) = v2;
  return a1;
}

uint64_t assignWithCopy for MoveAction(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  v2 = a2;
  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_1B0F767BC(*(_QWORD *)a2, v5, v6, v7, sub_1B0F76F14);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  sub_1B0F76648(v8, v9, v10, v11, sub_1B0F76F18);
  v12 = *(_QWORD *)(v2 + 32);
  v13 = *(_QWORD *)(v2 + 40);
  v14 = *(_QWORD *)(v2 + 48);
  v15 = *(_BYTE *)(v2 + 56);
  sub_1B0F6C708(v12, v13, v14, v15);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 32) = v12;
  *(_QWORD *)(a1 + 40) = v13;
  *(_QWORD *)(a1 + 48) = v14;
  v19 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a1 + 56) = v15;
  sub_1B0F6C7D4(v16, v17, v18, v19);
  v20 = *(_QWORD *)(v2 + 64);
  v21 = *(_QWORD *)(v2 + 72);
  v22 = *(_QWORD *)(v2 + 80);
  LOBYTE(v2) = *(_BYTE *)(v2 + 88);
  sub_1B0F767BC(v20, v21, v22, v2, sub_1B0F76F14);
  v23 = *(_QWORD *)(a1 + 64);
  v24 = *(_QWORD *)(a1 + 72);
  v25 = *(_QWORD *)(a1 + 80);
  v26 = *(_BYTE *)(a1 + 88);
  *(_QWORD *)(a1 + 64) = v20;
  *(_QWORD *)(a1 + 72) = v21;
  *(_QWORD *)(a1 + 80) = v22;
  *(_BYTE *)(a1 + 88) = v2;
  sub_1B0F76648(v23, v24, v25, v26, sub_1B0F76F18);
  return a1;
}

uint64_t assignWithTake for MoveAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  sub_1B0F76648(v6, v7, v8, v9, sub_1B0F76F18);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_BYTE *)(a2 + 56);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = *(_QWORD *)(a1 + 40);
  v14 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = v10;
  v15 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a1 + 56) = v11;
  sub_1B0F6C7D4(v12, v13, v14, v15);
  v16 = *(_QWORD *)(a2 + 80);
  v17 = *(_BYTE *)(a2 + 88);
  v18 = *(_QWORD *)(a1 + 64);
  v19 = *(_QWORD *)(a1 + 72);
  v20 = *(_QWORD *)(a1 + 80);
  v21 = *(_BYTE *)(a1 + 88);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = v16;
  *(_BYTE *)(a1 + 88) = v17;
  sub_1B0F76648(v18, v19, v20, v21, sub_1B0F76F18);
  return a1;
}

uint64_t getEnumTagSinglePayload for MoveAction(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 89))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MoveAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 88) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 89) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 89) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MoveAction()
{
  return &type metadata for MoveAction;
}

uint64_t sub_1B1027B70(char a1)
{
  return *(_QWORD *)&aIndexsetoffset_0[8 * a1];
}

uint64_t sub_1B1027B90(char *a1, char *a2)
{
  return sub_1B100F29C(*a1, *a2);
}

uint64_t sub_1B1027B9C()
{
  return sub_1B10118F4();
}

uint64_t sub_1B1027BA4()
{
  return sub_1B1013510();
}

uint64_t sub_1B1027BAC()
{
  return sub_1B101373C();
}

uint64_t sub_1B1027BB4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1029AEC();
  *a1 = result;
  return result;
}

uint64_t sub_1B1027BE0@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B1027B70(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B1027C08()
{
  char *v0;

  return sub_1B1027B70(*v0);
}

uint64_t sub_1B1027C10@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1029AEC();
  *a1 = result;
  return result;
}

uint64_t sub_1B1027C34()
{
  sub_1B1029760();
  return sub_1B10362B4();
}

uint64_t sub_1B1027C5C()
{
  sub_1B1029760();
  return sub_1B10362C0();
}

uint64_t sub_1B1027C84@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned __int8 v53;
  int v54;
  char v55;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1898);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B1029760();
  sub_1B1036278();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1888);
  v55 = 0;
  sub_1B0F5A7E4(&qword_1EEEE1890, &qword_1EEEE1888, (uint64_t)&protocol conformance descriptor for Referenceable<A>);
  sub_1B10360A4();
  v48 = a2;
  if (v53 == 255)
  {
    v10 = 0xF000000000000007;
    v11 = 0xE800000000000000;
    v12 = 0x7465537865646E69;
    v13 = 1;
  }
  else
  {
    v11 = v51;
    v10 = v52;
    v13 = v53 & 1;
    v12 = v50;
  }
  v54 = v13;
  v55 = 1;
  sub_1B0F767BC(v12, v11, v10, v13, sub_1B0F76F14);
  sub_1B0FA26C0();
  sub_1B10360A4();
  v46 = v10;
  v47 = v12;
  v45 = v11;
  if (v53 >= 0xFEu)
    v14 = 0x74657366666FLL;
  else
    v14 = v50;
  if (v53 >= 0xFEu)
    v15 = 0xE600000000000000;
  else
    v15 = v51;
  if (v53 >= 0xFEu)
    v16 = 0xF000000000000007;
  else
    v16 = v52;
  if (v53 >= 0xFEu)
    v17 = 1;
  else
    v17 = v53;
  v49 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF070);
  v55 = 2;
  v43 = v14;
  v44 = v15;
  v42 = v16;
  v18 = v16;
  v19 = v49;
  sub_1B0F6C708(v14, v15, v18, v49);
  sub_1B0F5A7E4(&qword_1EEEDF078, &qword_1EEEDF070, (uint64_t)&protocol conformance descriptor for Referenceable<A>);
  sub_1B10360BC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v20 = v50;
  v21 = v51;
  v40 = v51;
  v38 = v52;
  v41 = v53;
  v22 = v45;
  sub_1B0F767BC(v47, v45, v46, v54, sub_1B0F76F14);
  v24 = v43;
  v23 = v44;
  v25 = v42;
  sub_1B0F6C708(v43, v44, v42, v19);
  v39 = v20;
  v26 = v21;
  v27 = v38;
  sub_1B0F767BC(v20, v26, v38, v41, sub_1B0F76F14);
  v28 = v24;
  v29 = v25;
  sub_1B0F6C7D4(v28, v23, v25, v19);
  v30 = v46;
  v31 = v47;
  v32 = v54;
  sub_1B0F76648(v47, v22, v46, v54, sub_1B0F76F18);
  v33 = v48;
  *v48 = v31;
  v33[1] = v22;
  v33[2] = v30;
  *((_BYTE *)v33 + 24) = v32;
  v35 = v43;
  v34 = v44;
  v33[4] = v43;
  v33[5] = v34;
  v33[6] = v29;
  LOBYTE(v30) = v49;
  *((_BYTE *)v33 + 56) = v49;
  v33[8] = v20;
  v36 = v40;
  v33[9] = v40;
  v33[10] = v27;
  v37 = v41;
  *((_BYTE *)v33 + 88) = v41;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_1B0F76648(v47, v45, v46, v54, sub_1B0F76F18);
  sub_1B0F6C7D4(v35, v34, v29, v30);
  return sub_1B0F76648(v39, v36, v27, v37, sub_1B0F76F18);
}

uint64_t sub_1B1028128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  sub_1B1035D68();
  v7[7] = sub_1B1035D5C();
  sub_1B1035D50();
  return swift_task_switch();
}

uint64_t sub_1B1028198()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = *(_QWORD *)(v0 + 24);
  v1 = *(NSObject **)(v0 + 32);
  swift_release();
  v3 = *(_QWORD *)(v2 + 64);
  v4 = *(_QWORD *)(v2 + 72);
  v5 = *(_QWORD *)(v2 + 80);
  v6 = *(_BYTE *)(v2 + 88);
  sub_1B0F767BC(v3, v4, v5, v6, sub_1B0F76F14);
  v7 = sub_1B0FD7B38(v1, v3, v4, v5, v6);
  v10 = *(_QWORD *)(v0 + 32);
  sub_1B0F76648(v3, v4, v5, v6, sub_1B0F76F18);
  *(_QWORD *)(v0 + 16) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE410);
  sub_1B0F5A7E4(&qword_1EEEDFC40, &qword_1EEEDE410, MEMORY[0x1E0DEAF28]);
  sub_1B1035B70();
  v8 = *(_QWORD *)(v0 + 16);
  sub_1B0F767BC(v3, v4, v5, v6, sub_1B0F76F14);
  sub_1B0FE7F94(v10, v8, v3, v4, v5, v6);
  swift_bridgeObjectRelease();
  sub_1B0F76648(v3, v4, v5, v6, sub_1B0F76F18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B1028340(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7961727261;
  else
    return 0x7465537865646E69;
}

uint64_t sub_1B1028374(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EEEE1850 + dword_1EEEE1850);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1B0F737CC;
  return v5(a1);
}

uint64_t sub_1B10283D8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1B1027C84(a1, a2);
}

unint64_t sub_1B10283EC(uint64_t a1)
{
  unint64_t result;

  result = sub_1B1028410();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B1028410()
{
  unint64_t result;

  result = qword_1EEEE1820;
  if (!qword_1EEEE1820)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104A7AC, &type metadata for MoveAction);
    atomic_store(result, (unint64_t *)&qword_1EEEE1820);
  }
  return result;
}

uint64_t sub_1B1028454(char *a1, char *a2)
{
  return sub_1B100EBA8(*a1, *a2);
}

uint64_t sub_1B1028460()
{
  return sub_1B101195C();
}

uint64_t sub_1B1028468()
{
  return sub_1B10131A4();
}

uint64_t sub_1B1028470()
{
  return sub_1B1013C1C();
}

uint64_t sub_1B1028478@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1B103605C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1B10284D4@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B1028340(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B10284FC()
{
  char *v0;

  return sub_1B1028340(*v0);
}

uint64_t sub_1B1028504@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1B103605C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1B1028564()
{
  sub_1B102971C();
  return sub_1B10362B4();
}

uint64_t sub_1B102858C()
{
  sub_1B102971C();
  return sub_1B10362C0();
}

uint64_t sub_1B10285B4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  int v30;
  char v31;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1878);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B102971C();
  sub_1B1036278();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1888);
  v31 = 0;
  sub_1B0F5A7E4(&qword_1EEEE1890, &qword_1EEEE1888, (uint64_t)&protocol conformance descriptor for Referenceable<A>);
  sub_1B10360A4();
  if (v29 == 255)
  {
    v24 = 0xE800000000000000;
    v25 = 0xF000000000000007;
    v10 = 0x7465537865646E69;
    v30 = 1;
  }
  else
  {
    v30 = v29 & 1;
    v10 = v26;
    v24 = v27;
    v25 = v28;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF070);
  v31 = 1;
  sub_1B0F767BC(v10, v24, v25, v30, sub_1B0F76F14);
  sub_1B0F5A7E4(&qword_1EEEDF078, &qword_1EEEDF070, (uint64_t)&protocol conformance descriptor for Referenceable<A>);
  sub_1B10360BC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v11 = v26;
  v22 = v27;
  v23 = v26;
  v12 = v28;
  v21 = v28;
  HIDWORD(v20) = v29;
  v13 = v24;
  v14 = v25;
  v15 = v30;
  sub_1B0F767BC(v10, v24, v25, v30, sub_1B0F76F14);
  v16 = v11;
  v17 = v22;
  v18 = v12;
  LOBYTE(v12) = BYTE4(v20);
  sub_1B0F767BC(v16, v22, v18, SBYTE4(v20), sub_1B0F76F14);
  sub_1B0F76648(v10, v13, v14, v15, sub_1B0F76F18);
  *(_QWORD *)a2 = v10;
  *(_QWORD *)(a2 + 8) = v13;
  *(_QWORD *)(a2 + 16) = v14;
  *(_BYTE *)(a2 + 24) = v15;
  *(_QWORD *)(a2 + 32) = v23;
  *(_QWORD *)(a2 + 40) = v17;
  v19 = v21;
  *(_QWORD *)(a2 + 48) = v21;
  *(_BYTE *)(a2 + 56) = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_1B0F76648(v10, v13, v14, v15, sub_1B0F76F18);
  return sub_1B0F76648(v23, v22, v19, v12, sub_1B0F76F18);
}

uint64_t sub_1B10288EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[3] = a4;
  sub_1B1035D68();
  v6[6] = sub_1B1035D5C();
  sub_1B1035D50();
  return swift_task_switch();
}

uint64_t sub_1B102895C()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = *(_QWORD *)(v0 + 24);
  v1 = *(NSObject **)(v0 + 32);
  swift_release();
  v3 = *(_QWORD *)(v2 + 32);
  v4 = *(_QWORD *)(v2 + 40);
  v5 = *(_QWORD *)(v2 + 48);
  v6 = *(_BYTE *)(v2 + 56);
  sub_1B0F767BC(v3, v4, v5, v6, sub_1B0F76F14);
  v7 = sub_1B0FD7B38(v1, v3, v4, v5, v6);
  v10 = *(_QWORD *)(v0 + 32);
  sub_1B0F76648(v3, v4, v5, v6, sub_1B0F76F18);
  *(_QWORD *)(v0 + 16) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE410);
  sub_1B0F5A7E4(&qword_1EEEDFC40, &qword_1EEEDE410, MEMORY[0x1E0DEAF28]);
  sub_1B0F5A7E4(&qword_1EEEDFC50, &qword_1EEEDE410, MEMORY[0x1E0DEAF58]);
  sub_1B1035DEC();
  v8 = *(_QWORD *)(v0 + 16);
  sub_1B0F767BC(v3, v4, v5, v6, sub_1B0F76F14);
  sub_1B0FE7F94(v10, v8, v3, v4, v5, v6);
  swift_bridgeObjectRelease();
  sub_1B0F76648(v3, v4, v5, v6, sub_1B0F76F18);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B1028B1C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  v5 = (uint64_t (*)(uint64_t))((char *)&dword_1EEEE1870 + dword_1EEEE1870);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1B0F76EDC;
  return v5(a1);
}

uint64_t sub_1B1028B80@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B10285B4(a1, a2);
}

unint64_t sub_1B1028B94(uint64_t a1)
{
  unint64_t result;

  result = sub_1B1028BB8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B1028BB8()
{
  unint64_t result;

  result = qword_1EEEE1828;
  if (!qword_1EEEE1828)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104A7F0, &type metadata for DeleteAction);
    atomic_store(result, (unint64_t *)&qword_1EEEE1828);
  }
  return result;
}

unint64_t sub_1B1028BFC(uint64_t a1)
{
  unint64_t result;

  result = sub_1B1028C20();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B1028C20()
{
  unint64_t result;

  result = qword_1EEEE1838;
  if (!qword_1EEEE1838)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104A818, &type metadata for DeleteAction);
    atomic_store(result, (unint64_t *)&qword_1EEEE1838);
  }
  return result;
}

unint64_t sub_1B1028C64(uint64_t a1)
{
  unint64_t result;

  result = sub_1B1028C88();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B1028C88()
{
  unint64_t result;

  result = qword_1EEEE1848;
  if (!qword_1EEEE1848)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104A7D4, &type metadata for MoveAction);
    atomic_store(result, (unint64_t *)&qword_1EEEE1848);
  }
  return result;
}

uint64_t sub_1B1028CCC(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  *(_QWORD *)(v2 + 192) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE910);
  *(_QWORD *)(v2 + 200) = swift_task_alloc();
  v3 = sub_1B1034634();
  *(_QWORD *)(v2 + 208) = v3;
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 216) = v4;
  *(_QWORD *)(v2 + 224) = *(_QWORD *)(v4 + 64);
  *(_QWORD *)(v2 + 232) = swift_task_alloc();
  *(_QWORD *)(v2 + 240) = swift_task_alloc();
  *(_QWORD *)(v2 + 248) = swift_task_alloc();
  v5 = v1[3];
  *(_OWORD *)(v2 + 48) = v1[2];
  *(_OWORD *)(v2 + 64) = v5;
  *(_OWORD *)(v2 + 80) = v1[4];
  *(_OWORD *)(v2 + 89) = *(_OWORD *)((char *)v1 + 73);
  v6 = v1[1];
  *(_OWORD *)(v2 + 16) = *v1;
  *(_OWORD *)(v2 + 32) = v6;
  return swift_task_switch();
}

uint64_t sub_1B1028D90()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(void);

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(NSObject **)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = *(_BYTE *)(v0 + 40);
  sub_1B0F767BC(v1, v3, v4, v5, sub_1B0F76F14);
  v6 = sub_1B0FD7724(v2, v1, v3, v4, v5);
  sub_1B0F76648(v1, v3, v4, v5, sub_1B0F76F18);
  sub_1B102908C();
  sub_1B1035EC4();
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v8 = (uint64_t *)(v6 + 32);
    do
    {
      v9 = *v8++;
      *(_QWORD *)(v0 + 184) = v9;
      sub_1B1035EAC();
      --v7;
    }
    while (v7);
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(v0 + 232);
  v28 = *(_QWORD *)(v0 + 248);
  v30 = *(_QWORD *)(v0 + 224);
  v12 = *(_QWORD *)(v0 + 208);
  v11 = *(_QWORD *)(v0 + 216);
  v14 = *(_QWORD *)(v0 + 192);
  v13 = *(_QWORD *)(v0 + 200);
  v31 = *(void (**)(void))(v11 + 32);
  v31();
  sub_1B10290D4(v0 + 48, v0 + 112);
  sub_1B10290D4(v0 + 112, v0 + 144);
  sub_1B0FAA444(v0 + 112);
  sub_1B0FA7470(v14);
  v16 = v15;
  v18 = v17;
  sub_1B0FAA474(v0 + 112);
  if ((v18 & 1) != 0)
    v19 = 0;
  else
    v19 = v16;
  v29 = v19;
  v20 = sub_1B1035D80();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v13, 1, 1, v20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v10, v28, v12);
  sub_1B1035D68();
  sub_1B0F7671C(v0 + 16);
  swift_retain();
  v21 = sub_1B1035D5C();
  v22 = (*(unsigned __int8 *)(v11 + 80) + 136) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v23 = swift_allocObject();
  v24 = MEMORY[0x1E0DF06E8];
  *(_QWORD *)(v23 + 16) = v21;
  *(_QWORD *)(v23 + 24) = v24;
  v25 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v23 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v23 + 80) = v25;
  *(_OWORD *)(v23 + 96) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v23 + 105) = *(_OWORD *)(v0 + 89);
  v26 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v23 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v23 + 48) = v26;
  *(_QWORD *)(v23 + 128) = v14;
  ((void (*)(unint64_t, uint64_t, uint64_t))v31)(v23 + v22, v10, v12);
  *(_QWORD *)(v23 + ((v30 + v22 + 7) & 0xFFFFFFFFFFFFFFF8)) = v29;
  sub_1B0F70150(v13, (uint64_t)&unk_1EEEE1860, v23);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v28, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1B102908C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEEDEB08;
  if (!qword_1EEEDEB08)
  {
    v1 = sub_1B1034634();
    result = MEMORY[0x1B5E15188](MEMORY[0x1E0CB13E8], v1);
    atomic_store(result, (unint64_t *)&qword_1EEEDEB08);
  }
  return result;
}

uint64_t sub_1B10290D4(uint64_t a1, uint64_t a2)
{
  __swift_memcpy25_8(a2, a1);
  return a2;
}

uint64_t sub_1B1029110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1B1034634();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 136) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  sub_1B0F76648(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56), sub_1B0F76F18);
  sub_1B0F6C7D4(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_BYTE *)(v0 + 88));
  sub_1B0F76648(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_BYTE *)(v0 + 120), sub_1B0F76F18);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1B10291D8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = *(_QWORD *)(sub_1B1034634() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 136) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = v1[2];
  v7 = v1[3];
  v8 = (uint64_t)(v1 + 4);
  v9 = v1[16];
  v10 = (uint64_t)v1 + v5;
  v11 = *(_QWORD *)((char *)v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v12;
  *v12 = v2;
  v12[1] = sub_1B0F737CC;
  return sub_1B1028128(a1, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_1B1029294(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  *(_QWORD *)(v2 + 96) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE910);
  *(_QWORD *)(v2 + 104) = swift_task_alloc();
  v3 = sub_1B1034634();
  *(_QWORD *)(v2 + 112) = v3;
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 120) = v4;
  *(_QWORD *)(v2 + 128) = *(_QWORD *)(v4 + 64);
  *(_QWORD *)(v2 + 136) = swift_task_alloc();
  *(_QWORD *)(v2 + 144) = swift_task_alloc();
  *(_QWORD *)(v2 + 152) = swift_task_alloc();
  v5 = v1[1];
  *(_OWORD *)(v2 + 16) = *v1;
  *(_OWORD *)(v2 + 32) = v5;
  *(_OWORD *)(v2 + 48) = v1[2];
  *(_OWORD *)(v2 + 57) = *(_OWORD *)((char *)v1 + 41);
  return swift_task_switch();
}

uint64_t sub_1B1029350()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v23;
  void (*v24)(uint64_t);

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(NSObject **)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = *(_BYTE *)(v0 + 40);
  sub_1B0F767BC(v1, v3, v4, v5, sub_1B0F76F14);
  v6 = sub_1B0FD7724(v2, v1, v3, v4, v5);
  sub_1B0F76648(v1, v3, v4, v5, sub_1B0F76F18);
  sub_1B102908C();
  sub_1B1035EC4();
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v8 = (uint64_t *)(v6 + 32);
    do
    {
      v9 = *v8++;
      *(_QWORD *)(v0 + 88) = v9;
      sub_1B1035EAC();
      --v7;
    }
    while (v7);
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(v0 + 152);
  v11 = *(_QWORD *)(v0 + 136);
  v23 = v11;
  v13 = *(_QWORD *)(v0 + 112);
  v12 = *(_QWORD *)(v0 + 120);
  v15 = *(_QWORD *)(v0 + 96);
  v14 = *(_QWORD *)(v0 + 104);
  v24 = *(void (**)(uint64_t))(v12 + 32);
  v24(v10);
  v16 = sub_1B1035D80();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v14, 1, 1, v16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v11, v10, v13);
  sub_1B1035D68();
  sub_1B0F768F4(v0 + 16);
  swift_retain();
  v17 = sub_1B1035D5C();
  v18 = (*(unsigned __int8 *)(v12 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v19 = swift_allocObject();
  v20 = MEMORY[0x1E0DF06E8];
  *(_QWORD *)(v19 + 16) = v17;
  *(_QWORD *)(v19 + 24) = v20;
  v21 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v19 + 32) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v19 + 48) = v21;
  *(_OWORD *)(v19 + 64) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v19 + 73) = *(_OWORD *)(v0 + 57);
  *(_QWORD *)(v19 + 96) = v15;
  ((void (*)(unint64_t, uint64_t, uint64_t))v24)(v19 + v18, v23, v13);
  sub_1B0F70150(v14, (uint64_t)&unk_1EEEDEB10, v19);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1B10295D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1B1034634();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  sub_1B0F76648(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_BYTE *)(v0 + 56), sub_1B0F76F18);
  sub_1B0F76648(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_BYTE *)(v0 + 88), sub_1B0F76F18);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1B1029680(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_1B1034634() - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = (uint64_t)(v1 + 4);
  v8 = v1[12];
  v9 = (uint64_t)v1 + ((v4 + 104) & ~v4);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1B0F76EDC;
  return sub_1B10288EC(a1, v5, v6, v7, v8, v9);
}

unint64_t sub_1B102971C()
{
  unint64_t result;

  result = qword_1EEEE1880;
  if (!qword_1EEEE1880)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104AAA8, &type metadata for DeleteAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1880);
  }
  return result;
}

unint64_t sub_1B1029760()
{
  unint64_t result;

  result = qword_1EEEE18A0;
  if (!qword_1EEEE18A0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104AA58, &type metadata for MoveAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE18A0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for MoveAction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B10297F0 + 4 * byte_1B104A77D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B1029824 + 4 * byte_1B104A778[v4]))();
}

uint64_t sub_1B1029824(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B102982C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1029834);
  return result;
}

uint64_t sub_1B1029840(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1029848);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B102984C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1029854(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MoveAction.CodingKeys()
{
  return &type metadata for MoveAction.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for DeleteAction.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1B10298BC + 4 * byte_1B104A787[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1B10298F0 + 4 * byte_1B104A782[v4]))();
}

uint64_t sub_1B10298F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B10298F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1029900);
  return result;
}

uint64_t sub_1B102990C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1029914);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1B1029918(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1029920(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DeleteAction.CodingKeys()
{
  return &type metadata for DeleteAction.CodingKeys;
}

unint64_t sub_1B1029940()
{
  unint64_t result;

  result = qword_1EEEE18A8;
  if (!qword_1EEEE18A8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104A940, &type metadata for DeleteAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE18A8);
  }
  return result;
}

unint64_t sub_1B1029988()
{
  unint64_t result;

  result = qword_1EEEE18B0;
  if (!qword_1EEEE18B0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104AA30, &type metadata for MoveAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE18B0);
  }
  return result;
}

unint64_t sub_1B10299D0()
{
  unint64_t result;

  result = qword_1EEEE18B8;
  if (!qword_1EEEE18B8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104A968, &type metadata for MoveAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE18B8);
  }
  return result;
}

unint64_t sub_1B1029A18()
{
  unint64_t result;

  result = qword_1EEEE18C0;
  if (!qword_1EEEE18C0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104A990, &type metadata for MoveAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE18C0);
  }
  return result;
}

unint64_t sub_1B1029A60()
{
  unint64_t result;

  result = qword_1EEEE18C8;
  if (!qword_1EEEE18C8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104A878, &type metadata for DeleteAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE18C8);
  }
  return result;
}

unint64_t sub_1B1029AA8()
{
  unint64_t result;

  result = qword_1EEEE18D0;
  if (!qword_1EEEE18D0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104A8A0, &type metadata for DeleteAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE18D0);
  }
  return result;
}

uint64_t sub_1B1029AEC()
{
  unint64_t v0;

  v0 = sub_1B103605C();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t destroy for AlertModifier(uint64_t a1)
{
  uint64_t result;

  sub_1B0F56ADC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  sub_1B0F5E6A0(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_BYTE *)(a1 + 56));
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 80);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(a1 + 112);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for AlertModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_1B0F56B9C(*(_QWORD *)a2, v5, v6, v7);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_BYTE *)(a2 + 56);
  sub_1B0F5E604(v8, v9, v10, v11);
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_BYTE *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v12 = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  if (v12)
  {
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = v12;
    v13 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = v13;
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    v14 = *(_BYTE *)(a2 + 152);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 136) = v15;
    (**(void (***)(uint64_t, uint64_t))(v15 - 8))(a1 + 112, a2 + 112);
    *(_BYTE *)(a1 + 152) = v14;
    v16 = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = v16;
    v17 = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = v17;
    swift_retain();
    swift_retain();
  }
  else
  {
    v18 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v18;
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    v19 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v19;
    v20 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v20;
  }
  return a1;
}

uint64_t assignWithCopy for AlertModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _OWORD *v20;
  __int128 *v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_1B0F56B9C(*(_QWORD *)a2, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  v11 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v7;
  sub_1B0F56ADC(v8, v9, v10, v11);
  v12 = *(_QWORD *)(a2 + 32);
  v13 = *(_QWORD *)(a2 + 40);
  v14 = *(_QWORD *)(a2 + 48);
  v15 = *(_BYTE *)(a2 + 56);
  sub_1B0F5E604(v12, v13, v14, v15);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)(a1 + 32) = v12;
  *(_QWORD *)(a1 + 40) = v13;
  *(_QWORD *)(a1 + 48) = v14;
  *(_BYTE *)(a1 + 56) = v15;
  sub_1B0F5E6A0(v16, v17, v18, v19);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = (_OWORD *)(a1 + 72);
  v21 = (__int128 *)(a2 + 72);
  v22 = *(_QWORD *)(a2 + 80);
  if (*(_QWORD *)(a1 + 80))
  {
    if (v22)
    {
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (a1 != a2)
      {
        sub_1B0F62D10(a1 + 112);
        v23 = *(_BYTE *)(a2 + 152);
        v24 = *(_QWORD *)(a2 + 136);
        *(_QWORD *)(a1 + 136) = v24;
        *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
        (**(void (***)(uint64_t, uint64_t))(v24 - 8))(a1 + 112, a2 + 112);
        *(_BYTE *)(a1 + 152) = v23;
      }
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    }
    else
    {
      sub_1B0F6427C(a1 + 72);
      v27 = *(_OWORD *)(a2 + 120);
      v29 = *v21;
      v28 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 120) = v27;
      *v20 = v29;
      *(_OWORD *)(a1 + 88) = v28;
      v31 = *(_OWORD *)(a2 + 152);
      v30 = *(_OWORD *)(a2 + 168);
      v32 = *(_OWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_OWORD *)(a1 + 152) = v31;
      *(_OWORD *)(a1 + 168) = v30;
      *(_OWORD *)(a1 + 136) = v32;
    }
  }
  else if (v22)
  {
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    v25 = *(_BYTE *)(a2 + 152);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 136) = v26;
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    (**(void (***)(uint64_t, uint64_t))(v26 - 8))(a1 + 112, a2 + 112);
    *(_BYTE *)(a1 + 152) = v25;
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    swift_retain();
    swift_retain();
  }
  else
  {
    v33 = *v21;
    v34 = *(_OWORD *)(a2 + 88);
    v35 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v35;
    *v20 = v33;
    *(_OWORD *)(a1 + 88) = v34;
    v36 = *(_OWORD *)(a2 + 136);
    v37 = *(_OWORD *)(a2 + 152);
    v38 = *(_OWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 152) = v37;
    *(_OWORD *)(a1 + 168) = v38;
    *(_OWORD *)(a1 + 136) = v36;
  }
  return a1;
}

uint64_t assignWithTake for AlertModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_BYTE *)(a2 + 24);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  v9 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v5;
  sub_1B0F56ADC(v6, v7, v8, v9);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_BYTE *)(a2 + 56);
  v12 = *(_QWORD *)(a1 + 32);
  v13 = *(_QWORD *)(a1 + 40);
  v14 = *(_QWORD *)(a1 + 48);
  v15 = *(_BYTE *)(a1 + 56);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = v10;
  *(_BYTE *)(a1 + 56) = v11;
  sub_1B0F5E6A0(v12, v13, v14, v15);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 80))
    goto LABEL_7;
  v16 = *(_QWORD *)(a2 + 80);
  if (!v16)
  {
    sub_1B0F6427C(a1 + 72);
LABEL_7:
    v20 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = v20;
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    v21 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v21;
    v22 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v22;
    return a1;
  }
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v16;
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v17;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    sub_1B0F62D10(a1 + 112);
    v18 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v18;
    *(_OWORD *)(a1 + 137) = *(_OWORD *)(a2 + 137);
  }
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_release();
  v19 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v19;
  swift_release();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  return a1;
}

uint64_t getEnumTagSinglePayload for AlertModifier(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 192))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 64);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AlertModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 192) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 192) = 0;
    if (a2)
      *(_QWORD *)(result + 64) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AlertModifier()
{
  return &type metadata for AlertModifier;
}

uint64_t sub_1B102A208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if ((a5 & 1) != 0)
  {
    if ((~a4 & 0xF000000000000007) != 0)
    {
      v14 = (_QWORD *)swift_allocObject();
      v14[2] = 0;
      v14[3] = 0;
      v14[4] = a1;
      v14[5] = a2;
      v14[6] = a3;
      v15 = (_QWORD *)swift_allocObject();
      v15[2] = 0;
      v15[3] = 0;
      v15[4] = a1;
      v15[5] = a2;
      v15[6] = a3;
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      sub_1B0F5E604(a2, a3, a4, 1);
      sub_1B0F5A880(a4);
      __swift_instantiateConcreteTypeFromMangledName(qword_1EEEE0288);
      sub_1B1035864();
      sub_1B1035888();
      if (v20)
      {
        swift_bridgeObjectRelease();
        sub_1B102A98C(v19, v20, v21, a1, a4);
        if (!v5)
        {
          sub_1B1035888();
          v6 = v19;
          sub_1B0F571D8(a4);
          sub_1B0FCB67C(v19, v20);
          sub_1B0F571D8(a4);
          return v6;
        }
        sub_1B0F571D8(a4);
        sub_1B0FCB67C(v19, v20);
      }
      else
      {
        sub_1B0FA58DC();
        swift_allocError();
        *(_QWORD *)v17 = a2;
        *(_QWORD *)(v17 + 8) = a3;
        *(_QWORD *)(v17 + 16) = MEMORY[0x1E0DEAFA0];
        *(_BYTE *)(v17 + 32) = 0;
        swift_willThrow();
        sub_1B0F571D8(a4);
      }
      sub_1B0F571D8(a4);
      return v6;
    }
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = 0;
    v11[3] = 0;
    v11[4] = a1;
    v11[5] = a2;
    v11[6] = a3;
    v12 = (_QWORD *)swift_allocObject();
    v12[2] = 0;
    v12[3] = 0;
    v12[4] = a1;
    v12[5] = a2;
    v12[6] = a3;
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    sub_1B0F5E604(a2, a3, a4, 1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE18E0);
    sub_1B1035864();
    v13 = MEMORY[0x1E0DEAFA0];
    sub_1B1035888();
    if (v20)
    {
      v6 = v19;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v16 = a2;
      *(_QWORD *)(v16 + 8) = a3;
      *(_QWORD *)(v16 + 16) = v13;
      *(_BYTE *)(v16 + 32) = 0;
      swift_willThrow();
    }
  }
  else
  {
    sub_1B1035870();
    return v22;
  }
  return v6;
}

uint64_t sub_1B102A5D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t *a6@<X8>)
{
  uint64_t v6;
  uint64_t result;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if ((a5 & 1) == 0)
    return sub_1B1035870();
  if ((~a4 & 0xF000000000000007) != 0)
  {
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = 0;
    v15[3] = 0;
    v15[4] = a1;
    v15[5] = a2;
    v15[6] = a3;
    v16 = (_QWORD *)swift_allocObject();
    v16[2] = 0;
    v16[3] = 0;
    v16[4] = a1;
    v16[5] = a2;
    v16[6] = a3;
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    sub_1B0F5A84C(a2, a3, a4, 1);
    sub_1B0F5A880(a4);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EEEE0288);
    sub_1B1035864();
    sub_1B1035888();
    if (v20)
    {
      swift_bridgeObjectRelease();
      sub_1B102B1E4(v19, v20, v21, a1, a4);
      if (!v6)
      {
        sub_1B1035888();
        sub_1B0F571D8(a4);
        sub_1B0FCB67C(v19, v20);
        result = sub_1B0F571D8(a4);
        *a6 = v19;
        a6[1] = v20;
        a6[2] = v21;
        return result;
      }
      sub_1B0F571D8(a4);
      sub_1B0FCB67C(v19, v20);
    }
    else
    {
      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v18 = a2;
      *(_QWORD *)(v18 + 8) = a3;
      *(_QWORD *)(v18 + 16) = &type metadata for DecodableState;
      *(_BYTE *)(v18 + 32) = 0;
      swift_willThrow();
      sub_1B0F571D8(a4);
    }
    return sub_1B0F571D8(a4);
  }
  else
  {
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = 0;
    v13[3] = 0;
    v13[4] = a1;
    v13[5] = a2;
    v13[6] = a3;
    v14 = (_QWORD *)swift_allocObject();
    v14[2] = 0;
    v14[3] = 0;
    v14[4] = a1;
    v14[5] = a2;
    v14[6] = a3;
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    sub_1B0F5A84C(a2, a3, a4, 1);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EEEE0288);
    sub_1B1035864();
    sub_1B1035888();
    if (v20)
    {
      result = swift_bridgeObjectRelease();
      *a6 = v19;
      a6[1] = v20;
      a6[2] = v21;
    }
    else
    {
      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v17 = a2;
      *(_QWORD *)(v17 + 8) = a3;
      *(_QWORD *)(v17 + 16) = &type metadata for DecodableState;
      *(_BYTE *)(v17 + 32) = 0;
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_1B102A98C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint8_t *v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  _QWORD *v42;
  _QWORD *v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51;
  char v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  if (a5 < 0)
  {
    v18 = *(_QWORD *)(a5 + 32);
    v19 = *(_BYTE *)(a5 + 40);
    v20 = *(_QWORD *)(a5 + 48);
    v55 = *(_QWORD *)(a5 + 16);
    v56 = *(_QWORD *)(a5 + 24);
    sub_1B0F6C708(v55, v56, v18, v19);
    sub_1B0F5A880(v20);
    sub_1B0FA7470(a4);
    if ((v22 & 1) != 0)
    {
      if (qword_1EEEDE0B0 != -1)
        swift_once();
      v31 = sub_1B103467C();
      __swift_project_value_buffer(v31, (uint64_t)qword_1EEF0BA00);
      v32 = sub_1B1034664();
      v33 = sub_1B1035E1C();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = v18;
        v35 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v35 = 0;
        _os_log_impl(&dword_1B0F50000, v32, v33, "SubReference to find binding, unable to resolve index", v35, 2u);
        v36 = v35;
        v18 = v34;
        MEMORY[0x1B5E15248](v36, -1, -1);
      }

      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v37 = 2;
      *(_QWORD *)(v37 + 8) = 0;
      *(_QWORD *)(v37 + 16) = 0;
      *(_QWORD *)(v37 + 24) = 0;
      *(_BYTE *)(v37 + 32) = 5;
      swift_willThrow();
      sub_1B0F571D8(v20);
      v38 = v55;
      v39 = v56;
      v40 = v18;
      v41 = v19;
    }
    else
    {
      v23 = v21;
      if ((~v20 & 0xF000000000000007) == 0)
      {
        v24 = (_QWORD *)swift_allocObject();
        v24[2] = 0;
        v24[3] = 0;
        v24[4] = a1;
        v24[5] = a2;
        v24[6] = a3;
        v24[7] = v23;
        v25 = (_QWORD *)swift_allocObject();
        v25[2] = 0;
        v25[3] = 0;
        v25[4] = a1;
        v25[5] = a2;
        v25[6] = a3;
        v25[7] = v23;
        swift_retain_n();
        swift_retain_n();
        swift_retain_n();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE18E0);
        sub_1B1035864();
        sub_1B0F6C7D4(v55, v56, v18, v19);
        return v57;
      }
      v52 = v19;
      v44 = (_QWORD *)swift_allocObject();
      v44[2] = 0;
      v44[3] = 0;
      v44[4] = a1;
      v44[5] = a2;
      v44[6] = a3;
      v44[7] = v23;
      v45 = (_QWORD *)swift_allocObject();
      v45[2] = 0;
      v45[3] = 0;
      v45[4] = a1;
      v45[5] = a2;
      v45[6] = a3;
      v45[7] = v23;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1B0F5A880(v20);
      swift_retain();
      swift_retain();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(qword_1EEEE0288);
      sub_1B1035864();
      sub_1B1035888();
      if (v56)
      {
        swift_retain();
        swift_retain();
        swift_retain();
        v46 = sub_1B102A98C(v55, v56, v18, a4, v20);
        if (!v5)
        {
          v50 = v46;
          sub_1B0F571D8(v20);
          sub_1B0FCB67C(v55, v56);
          sub_1B0F6C7D4(v55, v56, v18, v52);
          sub_1B0FCB67C(v55, v56);
          sub_1B0F571D8(v20);
          return v50;
        }
        sub_1B0F571D8(v20);
        sub_1B0FCB67C(v55, v56);
        sub_1B0F6C7D4(v55, v56, v18, v19);
        sub_1B0FCB67C(v55, v56);
        return sub_1B0F571D8(v20);
      }
      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v48 = 1;
      *(_QWORD *)(v48 + 8) = 0;
      *(_QWORD *)(v48 + 16) = 0;
      *(_QWORD *)(v48 + 24) = 0;
      *(_BYTE *)(v48 + 32) = 5;
      swift_willThrow();
      sub_1B0F571D8(v20);
      sub_1B0F571D8(v20);
      v38 = v55;
      v39 = 0;
      v40 = v18;
      v41 = v19;
    }
    return sub_1B0F6C7D4(v38, v39, v40, v41);
  }
  v10 = *(_QWORD *)(a5 + 16);
  v11 = *(_QWORD *)(a5 + 24);
  v12 = *(_QWORD *)(a5 + 32);
  v13 = *(_BYTE *)(a5 + 40);
  v14 = *(_QWORD *)(a5 + 48);
  sub_1B0F56B9C(v10, v11, v12, v13);
  v58 = v14;
  sub_1B0F5A880(v14);
  v15 = StringResolvable.resolved(with:)(a4);
  if (v5)
  {
    sub_1B0F571D8(v14);
    return sub_1B0F56ADC(v10, v11, v12, v13);
  }
  v26 = a4;
  v27 = v15;
  v28 = v16;
  v53 = v26;
  v51 = v13;
  if ((~v58 & 0xF000000000000007) == 0)
  {
    v29 = (_QWORD *)swift_allocObject();
    v29[2] = 0;
    v29[3] = 0;
    v29[4] = a1;
    v29[5] = a2;
    v29[6] = a3;
    v29[7] = v27;
    v29[8] = v28;
    v30 = (_QWORD *)swift_allocObject();
    v30[2] = 0;
    v30[3] = 0;
    v30[4] = a1;
    v30[5] = a2;
    v30[6] = a3;
    v30[7] = v27;
    v30[8] = v28;
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE18E0);
    sub_1B1035864();
    sub_1B0F56ADC(v10, v11, v12, v13);
    return v57;
  }
  v42 = (_QWORD *)swift_allocObject();
  v42[2] = 0;
  v42[3] = 0;
  v42[4] = a1;
  v42[5] = a2;
  v42[6] = a3;
  v42[7] = v27;
  v42[8] = v28;
  v43 = (_QWORD *)swift_allocObject();
  v43[2] = 0;
  v43[3] = 0;
  v43[4] = a1;
  v43[5] = a2;
  v43[6] = a3;
  v43[7] = v27;
  v43[8] = v28;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1B0F5A880(v58);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(qword_1EEEE0288);
  sub_1B1035864();
  sub_1B1035888();
  if (v11)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    v49 = sub_1B102A98C(v10, v11, v12, v53, v58);
    sub_1B0F571D8(v58);
    sub_1B0FCB67C(v10, v11);
    sub_1B0F56ADC(v10, v11, v12, v51);
    sub_1B0FCB67C(v10, v11);
    sub_1B0F571D8(v58);
    return v49;
  }
  sub_1B0FA58DC();
  swift_allocError();
  *(_QWORD *)v47 = 1;
  *(_QWORD *)(v47 + 8) = 0;
  *(_QWORD *)(v47 + 16) = 0;
  *(_QWORD *)(v47 + 24) = 0;
  *(_BYTE *)(v47 + 32) = 5;
  swift_willThrow();
  sub_1B0F571D8(v58);
  sub_1B0F571D8(v58);
  return sub_1B0F56ADC(v10, 0, v12, v13);
}

uint64_t sub_1B102B1E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v48;
  uint64_t v49;

  if (a5 < 0)
  {
    v18 = *(_QWORD *)(a5 + 16);
    v19 = *(_BYTE *)(a5 + 40);
    v20 = *(_QWORD *)(a5 + 48);
    v48 = *(_QWORD *)(a5 + 24);
    v49 = *(_QWORD *)(a5 + 32);
    sub_1B0F6C708(v18, v48, v49, v19);
    sub_1B0F5A880(v20);
    sub_1B0FA7470(a4);
    if ((v22 & 1) != 0)
    {
      if (qword_1EEEDE0B0 != -1)
        swift_once();
      v30 = sub_1B103467C();
      __swift_project_value_buffer(v30, (uint64_t)qword_1EEF0BA00);
      v31 = sub_1B1034664();
      v32 = sub_1B1035E1C();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v33 = 0;
        _os_log_impl(&dword_1B0F50000, v31, v32, "SubReference to find binding, unable to resolve index", v33, 2u);
        MEMORY[0x1B5E15248](v33, -1, -1);
      }

      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v34 = 2;
      *(_QWORD *)(v34 + 8) = 0;
      *(_QWORD *)(v34 + 16) = 0;
      *(_QWORD *)(v34 + 24) = 0;
      *(_BYTE *)(v34 + 32) = 5;
      swift_willThrow();
      sub_1B0F571D8(v20);
      v35 = v18;
      v36 = v48;
      v37 = v49;
      v38 = v19;
    }
    else
    {
      v23 = v21;
      if ((~v20 & 0xF000000000000007) == 0)
      {
        v24 = (_QWORD *)swift_allocObject();
        v24[2] = 0;
        v24[3] = 0;
        v24[4] = a1;
        v24[5] = a2;
        v24[6] = a3;
        v24[7] = v23;
        v25 = (_QWORD *)swift_allocObject();
        v25[2] = 0;
        v25[3] = 0;
        v25[4] = a1;
        v25[5] = a2;
        v25[6] = a3;
        v25[7] = v23;
        swift_retain_n();
        swift_retain_n();
        swift_retain_n();
        __swift_instantiateConcreteTypeFromMangledName(qword_1EEEE0288);
        sub_1B1035864();
        return sub_1B0F6C7D4(v18, v48, v49, v19);
      }
      v42 = (_QWORD *)swift_allocObject();
      v42[2] = 0;
      v42[3] = 0;
      v42[4] = a1;
      v42[5] = a2;
      v42[6] = a3;
      v42[7] = v23;
      v43 = (_QWORD *)swift_allocObject();
      v43[2] = 0;
      v43[3] = 0;
      v43[4] = a1;
      v43[5] = a2;
      v43[6] = a3;
      v43[7] = v23;
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1B0F5A880(v20);
      swift_retain();
      swift_retain();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(qword_1EEEE0288);
      sub_1B1035864();
      sub_1B1035888();
      if (v48)
      {
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1B102B1E4(v18, v48, v49, a4, v20);
        sub_1B0F571D8(v20);
        sub_1B0FCB67C(v18, v48);
        sub_1B0F6C7D4(v18, v48, v49, v19);
        sub_1B0FCB67C(v18, v48);
        v41 = v20;
        return sub_1B0F571D8(v41);
      }
      sub_1B0FA58DC();
      swift_allocError();
      *(_QWORD *)v45 = 1;
      *(_QWORD *)(v45 + 8) = 0;
      *(_QWORD *)(v45 + 16) = 0;
      *(_QWORD *)(v45 + 24) = 0;
      *(_BYTE *)(v45 + 32) = 5;
      swift_willThrow();
      sub_1B0F571D8(v20);
      sub_1B0F571D8(v20);
      v35 = v18;
      v36 = 0;
      v37 = v49;
      v38 = v19;
    }
    return sub_1B0F6C7D4(v35, v36, v37, v38);
  }
  v11 = *(_QWORD *)(a5 + 16);
  v10 = *(_QWORD *)(a5 + 24);
  v12 = *(_QWORD *)(a5 + 32);
  v13 = *(_BYTE *)(a5 + 40);
  v14 = *(_QWORD *)(a5 + 48);
  sub_1B0F56B9C(v11, v10, v12, v13);
  sub_1B0F5A880(v14);
  v15 = StringResolvable.resolved(with:)(a4);
  if (v5)
  {
    sub_1B0F571D8(v14);
    return sub_1B0F56ADC(v11, v10, v12, v13);
  }
  v26 = v15;
  v27 = v16;
  if ((~v14 & 0xF000000000000007) == 0)
  {
    v28 = (_QWORD *)swift_allocObject();
    v28[2] = 0;
    v28[3] = 0;
    v28[4] = a1;
    v28[5] = a2;
    v28[6] = a3;
    v28[7] = v26;
    v28[8] = v27;
    v29 = (_QWORD *)swift_allocObject();
    v29[2] = 0;
    v29[3] = 0;
    v29[4] = a1;
    v29[5] = a2;
    v29[6] = a3;
    v29[7] = v26;
    v29[8] = v27;
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(qword_1EEEE0288);
    sub_1B1035864();
    return sub_1B0F56ADC(v11, v10, v12, v13);
  }
  v39 = (_QWORD *)swift_allocObject();
  v39[2] = 0;
  v39[3] = 0;
  v39[4] = a1;
  v39[5] = a2;
  v39[6] = a3;
  v39[7] = v26;
  v39[8] = v27;
  v40 = (_QWORD *)swift_allocObject();
  v40[2] = 0;
  v40[3] = 0;
  v40[4] = a1;
  v40[5] = a2;
  v40[6] = a3;
  v40[7] = v26;
  v40[8] = v27;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1B0F5A880(v14);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(qword_1EEEE0288);
  sub_1B1035864();
  sub_1B1035888();
  if (v10)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1B102B1E4(v11, v10, v12, a4, v14);
    sub_1B0F571D8(v14);
    sub_1B0FCB67C(v11, v10);
    sub_1B0F56ADC(v11, v10, v12, v13);
    sub_1B0FCB67C(v11, v10);
    v41 = v14;
    return sub_1B0F571D8(v41);
  }
  sub_1B0FA58DC();
  swift_allocError();
  *(_QWORD *)v44 = 1;
  *(_QWORD *)(v44 + 8) = 0;
  *(_QWORD *)(v44 + 16) = 0;
  *(_QWORD *)(v44 + 24) = 0;
  *(_BYTE *)(v44 + 32) = 5;
  swift_willThrow();
  sub_1B0F571D8(v14);
  sub_1B0F571D8(v14);
  return sub_1B0F56ADC(v11, 0, v12, v13);
}

uint64_t sub_1B102B988@<X0>(uint64_t a1@<X5>, uint64_t a2@<X6>, unint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t result;
  unint64_t v12;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1160);
  MEMORY[0x1B5E142AC](&v12, v6);
  if (v12 >> 61 != 5)
  {
    result = swift_release();
LABEL_8:
    v10 = 0xF000000000000007;
    goto LABEL_9;
  }
  v7 = *(_QWORD *)((v12 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  swift_bridgeObjectRetain();
  swift_release();
  if (!*(_QWORD *)(v7 + 16))
  {
LABEL_7:
    result = swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  v8 = sub_1B0F56A3C(a1, a2);
  if ((v9 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v8);
  swift_retain();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
LABEL_9:
  *a3 = v10;
  return result;
}

uint64_t sub_1B102BA74@<X0>(uint64_t a1@<X5>, unint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  unint64_t v8;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1160);
  MEMORY[0x1B5E142AC](&v8, v4);
  if (v8 >> 61 != 4)
  {
    result = swift_release();
LABEL_7:
    v6 = 0xF000000000000007;
    goto LABEL_8;
  }
  v5 = *(_QWORD *)((v8 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  swift_bridgeObjectRetain();
  swift_release();
  if (a1 < 0 || *(_QWORD *)(v5 + 16) <= a1)
  {
    result = swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v6 = *(_QWORD *)(v5 + 8 * a1 + 32);
  swift_retain();
  result = swift_bridgeObjectRelease();
LABEL_8:
  *a2 = v6;
  return result;
}

uint64_t sub_1B102BB34@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  _QWORD v36[4];
  _QWORD v37[4];
  _QWORD v38[2];
  uint64_t *v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v5 = v3;
  v9 = *(_QWORD *)(v5 + 32);
  v10 = *(_QWORD *)(v5 + 40);
  v11 = *(_QWORD *)(v5 + 48);
  v12 = *(_BYTE *)(v5 + 56);
  sub_1B0F5E604(v9, v10, v11, v12);
  v13 = sub_1B102A208(a2, v9, v10, v11, v12);
  if (v4)
  {

    sub_1B0F5E6A0(v9, v10, v11, v12);
    return sub_1B0F5FD84((uint64_t)a1, a3);
  }
  else
  {
    v46 = v15;
    v47 = v14;
    v58 = v13;
    sub_1B0F5E6A0(v9, v10, v11, v12);
    v17 = a1[3];
    v43 = a1[4];
    v45 = v17;
    v44 = __swift_project_boxed_opaque_existential_1(a1, v17);
    v18 = *(_QWORD *)(v5 + 8);
    v19 = *(_QWORD *)(v5 + 16);
    v20 = *(_BYTE *)(v5 + 24);
    v48 = *(_QWORD *)v5;
    v49 = v18;
    v50 = v19;
    LOBYTE(v51) = v20;
    sub_1B0F56B9C(v48, v18, v19, v20);
    v39 = (uint64_t *)a3;
    v21 = StringResolvable.resolved(with:)(a2);
    v23 = v22;
    v38[1] = 0;
    v24 = sub_1B0F56ADC(v48, v18, v19, v20);
    v42 = v38;
    v56 = v21;
    v57 = v23;
    v25 = MEMORY[0x1E0C80A78](v24);
    v41 = v37;
    v37[2] = v5;
    MEMORY[0x1E0C80A78](v25);
    v40 = v36;
    v36[2] = v5;
    v26 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEDEBE0);
    v27 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEDEBD8);
    v28 = sub_1B0F8B804();
    v29 = sub_1B0F78F60(&qword_1EEEDEBF0, &qword_1EEEDEBE0, (uint64_t (*)(void))sub_1B0F64174, MEMORY[0x1E0CDFEE8]);
    v30 = sub_1B0F78F60((unint64_t *)&qword_1EEEDEBE8, &qword_1EEEDEBD8, (uint64_t (*)(void))sub_1B0F64174, MEMORY[0x1E0CE0798]);
    v31 = MEMORY[0x1E0DEA968];
    v32 = v45;
    v48 = v45;
    v49 = MEMORY[0x1E0DEA968];
    v50 = v26;
    v51 = v27;
    v33 = v43;
    v52 = v43;
    v53 = v28;
    v54 = v29;
    v55 = v30;
    v34 = MEMORY[0x1B5E15134](0, &v48, MEMORY[0x1E0CDEF18], 0);
    v35 = v39;
    v39[3] = v34;
    v48 = v32;
    v49 = v31;
    v50 = v26;
    v51 = v27;
    v52 = v33;
    v53 = v28;
    v54 = v29;
    v55 = v30;
    v35[4] = swift_getOpaqueTypeConformance2();
    __swift_allocate_boxed_opaque_existential_1(v35);
    sub_1B1035570();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1B102BE78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDEBE0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 64);
  v9 = MEMORY[0x1E0DEE9D8];
  if (v8)
    v9 = v8;
  v11[1] = v9;
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDEBF8);
  sub_1B0F5A7E4(&qword_1EEEDEC00, &qword_1EEEDEBF8, MEMORY[0x1E0DEAF48]);
  sub_1B0F64174();
  sub_1B10358AC();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, v4);
}

uint64_t sub_1B102BFA8(char a1)
{
  return *(_QWORD *)&aTitle_8[8 * a1];
}

uint64_t sub_1B102BFC8(char *a1, char *a2)
{
  return sub_1B100EA08(*a1, *a2);
}

uint64_t sub_1B102BFD4()
{
  return sub_1B10119D8();
}

uint64_t sub_1B102BFDC()
{
  return sub_1B10130D4();
}

uint64_t sub_1B102BFE4()
{
  return sub_1B1013D6C();
}

uint64_t sub_1B102BFEC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B102D260();
  *a1 = result;
  return result;
}

uint64_t sub_1B102C018@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B102BFA8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B102C040()
{
  char *v0;

  return sub_1B102BFA8(*v0);
}

uint64_t sub_1B102C048@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B102D260();
  *a1 = result;
  return result;
}

uint64_t sub_1B102C06C()
{
  sub_1B102D018();
  return sub_1B10362B4();
}

uint64_t sub_1B102C094()
{
  sub_1B102D018();
  return sub_1B10362C0();
}

uint64_t sub_1B102C0BC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[3];
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  _QWORD v23[3];
  unsigned __int8 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  _DWORD v30[35];
  char v31;

  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE18E8);
  v5 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B102D018();
  sub_1B1036278();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v17 = a1;
  v8 = v5;
  v31 = 0;
  sub_1B0F56A98();
  v9 = v18;
  sub_1B10360BC();
  v23[0] = v19;
  v23[1] = v20;
  v15 = v21;
  v16 = v20;
  v23[2] = v21;
  v30[34] = v22;
  v24 = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE7E8);
  v31 = 1;
  sub_1B0F5A7E4((unint64_t *)&qword_1EEEDE7F0, &qword_1EEEDE7E8, (uint64_t)&protocol conformance descriptor for Referenceable<A>);
  sub_1B10360BC();
  v13 = v19;
  v14 = v20;
  v25 = v19;
  v26 = v20;
  v11[2] = v21;
  v27 = v21;
  v12 = v22;
  v28 = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDEBF8);
  v31 = 2;
  sub_1B0F78F60(&qword_1EEEDEC18, &qword_1EEEDEBF8, (uint64_t (*)(void))sub_1B0F64238, MEMORY[0x1E0DEAF40]);
  sub_1B10360A4();
  v11[1] = v19;
  v29 = v19;
  v31 = 3;
  sub_1B0F64238();
  sub_1B10360A4();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v9);
  sub_1B0F79004((uint64_t)&v19, (uint64_t)v30);
  sub_1B102D05C((uint64_t)v23, a2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return sub_1B102D090((uint64_t)v23);
}

uint64_t sub_1B102C428@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1B102BB34(a1, a2, a3);
}

uint64_t sub_1B102C43C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B102C0BC(a1, a2);
}

unint64_t sub_1B102C450(uint64_t a1)
{
  unint64_t result;

  result = sub_1B102C474();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B102C474()
{
  unint64_t result;

  result = qword_1EEEE18D8;
  if (!qword_1EEEE18D8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104AB48, &type metadata for AlertModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE18D8);
  }
  return result;
}

uint64_t sub_1B102C4B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1B102BE78(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1B102C4C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1B0F78ED4(*(_QWORD *)(v1 + 16) + 72, a1);
}

uint64_t sub_1B102C4D0@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, char *a3@<X8>)
{
  uint64_t result;
  char v5;
  unint64_t v6;

  RemoteStateStore.subscript.getter(a1, a2, &v6);
  result = v6;
  if ((~v6 & 0xF000000000000007) == 0)
    goto LABEL_5;
  if (v6 >> 61 != 3)
  {
    result = sub_1B0FC9D10(v6);
LABEL_5:
    v5 = 2;
    goto LABEL_6;
  }
  v5 = *(_BYTE *)(v6 + 16);
  result = sub_1B0FC9D10(v6);
LABEL_6:
  *a3 = v5;
  return result;
}

uint64_t sub_1B102C540@<X0>(char *a1@<X8>)
{
  uint64_t v1;

  return sub_1B102C4D0(*(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), a1);
}

uint64_t sub_1B102C550(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v8;
  unint64_t v9;
  char v10;
  uint64_t v11;

  v8 = *a1;
  if (v8 == 2)
  {
    v9 = 0xF000000000000007;
  }
  else
  {
    v10 = v8 & 1;
    v11 = swift_allocObject();
    *(_BYTE *)(v11 + 16) = v10;
    v9 = v11 | 0x6000000000000000;
  }
  swift_bridgeObjectRetain();
  return sub_1B0FEBD74(v9, a5, a6);
}

uint64_t sub_1B102C5CC(unsigned __int8 *a1)
{
  uint64_t *v1;

  return sub_1B102C550(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1B102C5F0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t *v1;
  uint64_t result;

  result = sub_1B102CB7C(v1[4], v1[5], v1[6], v1[7]);
  *a1 = result;
  return result;
}

uint64_t sub_1B102C620(char *a1)
{
  uint64_t v1;

  return sub_1B102CC54(*a1, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_1B102C634()
{
  return sub_1B102CE38((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1006D8C);
}

uint64_t sub_1B102C64C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t *v1;
  uint64_t result;

  result = sub_1B102C6AC(v1[4], v1[5], v1[6], v1[7], v1[8]);
  *a1 = result;
  return result;
}

uint64_t sub_1B102C680(char *a1)
{
  uint64_t *v1;

  return sub_1B102C7B0(*a1, v1[4], v1[5], v1[6], v1[7], v1[8]);
}

uint64_t sub_1B102C698()
{
  return sub_1B102CE7C((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B1006748);
}

uint64_t sub_1B102C6AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1160);
  MEMORY[0x1B5E142AC](&v14, v7);
  if (v14 >> 61 != 5)
    goto LABEL_6;
  v8 = *(_QWORD *)((v14 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  swift_bridgeObjectRetain();
  swift_release();
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_8:
    swift_bridgeObjectRelease();
    return 2;
  }
  swift_bridgeObjectRetain();
  v9 = sub_1B0F56A3C(a4, a5);
  if ((v10 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v11 >> 61 != 3)
  {
LABEL_6:
    swift_release();
    return 2;
  }
  v12 = *(unsigned __int8 *)((v11 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  swift_release();
  return v12;
}

uint64_t sub_1B102C7B0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  v18 = a2;
  v19 = a3;
  v20 = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1160);
  MEMORY[0x1B5E142AC](&v21);
  if (v21 >> 61 == 5)
  {
    v12 = *(_QWORD *)((v21 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
    swift_bridgeObjectRetain();
    swift_release();
    v21 = v12;
    if (a1 == 2)
    {
      swift_bridgeObjectRetain();
      sub_1B0F9BCB4(a5, a6, &v18);
      swift_bridgeObjectRelease();
      sub_1B0FC9D10(v18);
      v12 = v21;
    }
    else
    {
      v13 = swift_allocObject();
      *(_BYTE *)(v13 + 16) = a1 & 1;
      v14 = v13 | 0x6000000000000000;
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v18 = v12;
      sub_1B0F9D4A8(v14, a5, a6, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v18 = a2;
    v19 = a3;
    v20 = a4;
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = sub_1B0FCB3E0(v12);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1B1035858();
    swift_release();
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1B102C988()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B102C9AC()
{
  return swift_deallocObject();
}

uint64_t sub_1B102C9BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;

  v16 = a2;
  v17 = a3;
  v18 = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1160);
  MEMORY[0x1B5E142AC](&v19);
  if (v19 >> 61 == 5)
  {
    v12 = *(_QWORD *)((v19 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
    swift_bridgeObjectRetain();
    swift_release();
    v19 = v12;
    if ((~a1 & 0xF000000000000007) != 0)
    {
      sub_1B0FCC934(a1);
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v16 = v12;
      sub_1B0F9D4A8(a1, a5, a6, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1B0F9BCB4(a5, a6, &v16);
      swift_bridgeObjectRelease();
      sub_1B0FC9D10(v16);
      v12 = v19;
    }
    v16 = a2;
    v17 = a3;
    v18 = a4;
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = sub_1B0FCB3E0(v12);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1B1035858();
    swift_release();
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1B102CB7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v10;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1160);
  MEMORY[0x1B5E142AC](&v10, v5);
  if (v10 >> 61 != 4)
    goto LABEL_6;
  v6 = *(_QWORD *)((v10 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  swift_bridgeObjectRetain();
  swift_release();
  if (a4 < 0 || *(_QWORD *)(v6 + 16) <= a4)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  v7 = *(_QWORD *)(v6 + 8 * a4 + 32);
  swift_retain();
  swift_bridgeObjectRelease();
  if (v7 >> 61 != 3)
  {
LABEL_6:
    swift_release();
    return 2;
  }
  v8 = *(unsigned __int8 *)((v7 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  swift_release();
  return v8;
}

uint64_t sub_1B102CC54(char a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  _QWORD *v7;
  uint64_t result;
  char v9;
  uint64_t v10;
  unint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1160);
  MEMORY[0x1B5E142AC](&v11);
  if (v11 >> 61 != 4)
    return swift_release();
  v7 = *(_QWORD **)((v11 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  swift_bridgeObjectRetain();
  swift_release();
  if (a1 == 2)
    return swift_bridgeObjectRelease();
  v9 = a1 & 1;
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v9;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) != 0)
  {
    if ((a5 & 0x8000000000000000) == 0)
      goto LABEL_7;
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  result = (uint64_t)sub_1B0FEEA88(v7);
  v7 = (_QWORD *)result;
  if ((a5 & 0x8000000000000000) != 0)
    goto LABEL_12;
LABEL_7:
  if (v7[2] <= a5)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  v7[a5 + 4] = v10 | 0x6000000000000000;
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1B0FC97BC((uint64_t)v7, &v11);
  swift_bridgeObjectRelease();
  sub_1B1035858();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1B102CDEC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1B0FCB2A0(*(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), a1);
}

uint64_t sub_1B102CE00(uint64_t *a1)
{
  uint64_t *v1;

  return sub_1B0FCB5A0(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1B102CE14()
{
  return sub_1B102CE38((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B102BA74);
}

uint64_t sub_1B102CE24(uint64_t *a1)
{
  uint64_t v1;

  return sub_1B102CE98(*a1, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_1B102CE38(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t sub_1B102CE54()
{
  return sub_1B102CE7C((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1B102B988);
}

uint64_t sub_1B102CE64(uint64_t *a1)
{
  uint64_t *v1;

  return sub_1B102C9BC(*a1, v1[4], v1[5], v1[6], v1[7], v1[8]);
}

uint64_t sub_1B102CE7C(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8]);
}

uint64_t sub_1B102CE98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  _QWORD *v7;
  uint64_t result;
  unint64_t v9;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1160);
  MEMORY[0x1B5E142AC](&v9);
  if (v9 >> 61 != 4)
    return swift_release();
  v7 = *(_QWORD **)((v9 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  swift_bridgeObjectRetain();
  swift_release();
  if ((~a1 & 0xF000000000000007) == 0)
    return swift_bridgeObjectRelease();
  swift_retain_n();
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) != 0)
  {
    if ((a5 & 0x8000000000000000) == 0)
      goto LABEL_7;
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  result = (uint64_t)sub_1B0FEEA88(v7);
  v7 = (_QWORD *)result;
  if ((a5 & 0x8000000000000000) != 0)
    goto LABEL_11;
LABEL_7:
  if (v7[2] <= a5)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  v7[a5 + 4] = a1;
  swift_release();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1B0FC97BC((uint64_t)v7, &v9);
  swift_bridgeObjectRelease();
  sub_1B1035858();
  swift_release();
  swift_release();
  swift_release();
  return sub_1B0FC9D10(a1);
}

unint64_t sub_1B102D018()
{
  unint64_t result;

  result = qword_1EEEE18F0;
  if (!qword_1EEEE18F0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104ACA8, &type metadata for AlertModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE18F0);
  }
  return result;
}

uint64_t sub_1B102D05C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for AlertModifier(a2, a1);
  return a2;
}

uint64_t sub_1B102D090(uint64_t a1)
{
  destroy for AlertModifier(a1);
  return a1;
}

uint64_t storeEnumTagSinglePayload for AlertModifier.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1B102D108 + 4 * byte_1B104AB2D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1B102D13C + 4 * byte_1B104AB28[v4]))();
}

uint64_t sub_1B102D13C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B102D144(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B102D14CLL);
  return result;
}

uint64_t sub_1B102D158(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B102D160);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1B102D164(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B102D16C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AlertModifier.CodingKeys()
{
  return &type metadata for AlertModifier.CodingKeys;
}

unint64_t sub_1B102D18C()
{
  unint64_t result;

  result = qword_1EEEE18F8;
  if (!qword_1EEEE18F8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104AC80, &type metadata for AlertModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE18F8);
  }
  return result;
}

unint64_t sub_1B102D1D4()
{
  unint64_t result;

  result = qword_1EEEE1900;
  if (!qword_1EEEE1900)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104ABB8, &type metadata for AlertModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1900);
  }
  return result;
}

unint64_t sub_1B102D21C()
{
  unint64_t result;

  result = qword_1EEEE1908;
  if (!qword_1EEEE1908)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104ABE0, &type metadata for AlertModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1908);
  }
  return result;
}

uint64_t sub_1B102D260()
{
  unint64_t v0;

  v0 = sub_1B103605C();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

ValueMetadata *type metadata accessor for OverlayModifier()
{
  return &type metadata for OverlayModifier;
}

uint64_t sub_1B102D2B8()
{
  sub_1B102D608();
  return sub_1B10362B4();
}

uint64_t sub_1B102D2E0()
{
  sub_1B102D608();
  return sub_1B10362C0();
}

uint64_t sub_1B102D308@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v13[24];
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1928);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B102D608();
  sub_1B1036278();
  if (!v2)
  {
    sub_1B0F64238();
    sub_1B10360BC();
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    v9 = v18;
    *(_OWORD *)(a2 + 64) = v17;
    *(_OWORD *)(a2 + 80) = v9;
    *(_OWORD *)(a2 + 96) = v19;
    *(_QWORD *)(a2 + 112) = v20;
    v10 = v14;
    *(_OWORD *)a2 = *(_OWORD *)&v13[8];
    *(_OWORD *)(a2 + 16) = v10;
    v11 = v16;
    *(_OWORD *)(a2 + 32) = v15;
    *(_OWORD *)(a2 + 48) = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B102D454@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[2];

  v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B1035990();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEE1918);
  v4 = sub_1B103497C();
  a2[3] = v4;
  v6[0] = v3;
  v6[1] = sub_1B102D5BC();
  a2[4] = MEMORY[0x1B5E15188](MEMORY[0x1E0CD9C20], v4, v6);
  __swift_allocate_boxed_opaque_existential_1(a2);
  sub_1B0F64174();
  return sub_1B10355DC();
}

uint64_t sub_1B102D540@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B102D308(a1, a2);
}

unint64_t sub_1B102D554(uint64_t a1)
{
  unint64_t result;

  result = sub_1B102D578();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B102D578()
{
  unint64_t result;

  result = qword_1EEEE1910;
  if (!qword_1EEEE1910)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104AD5C, &type metadata for OverlayModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE1910);
  }
  return result;
}

unint64_t sub_1B102D5BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EEEE1920;
  if (!qword_1EEEE1920)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEE1918);
    result = MEMORY[0x1B5E15188](MEMORY[0x1E0CDA280], v1);
    atomic_store(result, (unint64_t *)&qword_1EEEE1920);
  }
  return result;
}

unint64_t sub_1B102D608()
{
  unint64_t result;

  result = qword_1EEEE1930;
  if (!qword_1EEEE1930)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104AE64, &type metadata for OverlayModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1930);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for OverlayModifier.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B102D68C + 4 * byte_1B104AD38[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B102D6AC + 4 * byte_1B104AD3D[v4]))();
}

_BYTE *sub_1B102D68C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B102D6AC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B102D6B4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B102D6BC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B102D6C4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B102D6CC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for OverlayModifier.CodingKeys()
{
  return &type metadata for OverlayModifier.CodingKeys;
}

unint64_t sub_1B102D6EC()
{
  unint64_t result;

  result = qword_1EEEE1938;
  if (!qword_1EEEE1938)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104AE3C, &type metadata for OverlayModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1938);
  }
  return result;
}

unint64_t sub_1B102D734()
{
  unint64_t result;

  result = qword_1EEEE1940;
  if (!qword_1EEEE1940)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104ADAC, &type metadata for OverlayModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1940);
  }
  return result;
}

unint64_t sub_1B102D77C()
{
  unint64_t result;

  result = qword_1EEEE1948;
  if (!qword_1EEEE1948)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104ADD4, &type metadata for OverlayModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1948);
  }
  return result;
}

uint64_t destroy for ScrollViewReaderView(uint64_t a1)
{
  unsigned int v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 56);
  swift_release();
  swift_release();
  v2 = *(unsigned __int8 *)(a1 + 160);
  if (v2 <= 0xFD)
    sub_1B0F56ADC(*(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), v2);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for ScrollViewReaderView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v7 = a2 + 56;
  v8 = *(_BYTE *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 56, v7);
  *(_BYTE *)(a1 + 96) = v8;
  v10 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v10;
  v11 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v11;
  v12 = *(unsigned __int8 *)(a2 + 160);
  swift_retain();
  swift_retain();
  if (v12 <= 0xFD)
  {
    v13 = *(_QWORD *)(a2 + 136);
    v14 = *(_QWORD *)(a2 + 144);
    v15 = *(_QWORD *)(a2 + 152);
    sub_1B0F56B9C(v13, v14, v15, v12);
    *(_QWORD *)(a1 + 136) = v13;
    *(_QWORD *)(a1 + 144) = v14;
    *(_QWORD *)(a1 + 152) = v15;
    *(_BYTE *)(a1 + 160) = v12;
  }
  else
  {
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 145) = *(_OWORD *)(a2 + 145);
  }
  v16 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v16;
  v17 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v17;
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ScrollViewReaderView(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  _OWORD *v6;
  _OWORD *v7;
  unsigned int v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    sub_1B0F62D10(a1 + 56);
    v4 = *(_BYTE *)(a2 + 96);
    v5 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 80) = v5;
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 56, a2 + 56);
    *(_BYTE *)(a1 + 96) = v4;
  }
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v6 = (_OWORD *)(a1 + 136);
  v7 = (_OWORD *)(a2 + 136);
  v8 = *(unsigned __int8 *)(a2 + 160);
  if (*(unsigned __int8 *)(a1 + 160) <= 0xFDu)
  {
    if (v8 <= 0xFD)
    {
      v14 = *(_QWORD *)(a2 + 136);
      v15 = *(_QWORD *)(a2 + 144);
      v16 = *(_QWORD *)(a2 + 152);
      sub_1B0F56B9C(v14, v15, v16, *(_BYTE *)(a2 + 160));
      v17 = *(_QWORD *)(a1 + 136);
      v18 = *(_QWORD *)(a1 + 144);
      v19 = *(_QWORD *)(a1 + 152);
      *(_QWORD *)(a1 + 136) = v14;
      *(_QWORD *)(a1 + 144) = v15;
      *(_QWORD *)(a1 + 152) = v16;
      v20 = *(_BYTE *)(a1 + 160);
      *(_BYTE *)(a1 + 160) = v8;
      sub_1B0F56ADC(v17, v18, v19, v20);
    }
    else
    {
      sub_1B0F5EA14(a1 + 136);
      v10 = *(_OWORD *)(a2 + 145);
      *v6 = *v7;
      *(_OWORD *)(a1 + 145) = v10;
    }
  }
  else if (v8 <= 0xFD)
  {
    v11 = *(_QWORD *)(a2 + 136);
    v12 = *(_QWORD *)(a2 + 144);
    v13 = *(_QWORD *)(a2 + 152);
    sub_1B0F56B9C(v11, v12, v13, *(_BYTE *)(a2 + 160));
    *(_QWORD *)(a1 + 136) = v11;
    *(_QWORD *)(a1 + 144) = v12;
    *(_QWORD *)(a1 + 152) = v13;
    *(_BYTE *)(a1 + 160) = v8;
  }
  else
  {
    v9 = *v7;
    *(_OWORD *)(a1 + 145) = *(_OWORD *)(a2 + 145);
    *v6 = v9;
  }
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  return a1;
}

uint64_t assignWithTake for ScrollViewReaderView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    sub_1B0F62D10(a1 + 56);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 81) = *(_OWORD *)(a2 + 81);
  }
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_release();
  v7 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v7;
  swift_release();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v8 = *(unsigned __int8 *)(a1 + 160);
  if (v8 <= 0xFD)
  {
    v9 = *(unsigned __int8 *)(a2 + 160);
    if (v9 <= 0xFD)
    {
      v10 = *(_QWORD *)(a2 + 152);
      v11 = *(_QWORD *)(a1 + 136);
      v12 = *(_QWORD *)(a1 + 144);
      v13 = *(_QWORD *)(a1 + 152);
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 152) = v10;
      *(_BYTE *)(a1 + 160) = v9;
      sub_1B0F56ADC(v11, v12, v13, v8);
      goto LABEL_8;
    }
    sub_1B0F5EA14(a1 + 136);
  }
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 145) = *(_OWORD *)(a2 + 145);
LABEL_8:
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_release();
  v14 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v14;
  swift_release();
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  return a1;
}

ValueMetadata *type metadata accessor for ScrollViewReaderView()
{
  return &type metadata for ScrollViewReaderView;
}

uint64_t destroy for GeometryReaderView(uint64_t a1)
{
  unsigned int v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 56);
  swift_release();
  swift_release();
  v2 = *(unsigned __int8 *)(a1 + 160);
  if (v2 <= 0xFD)
    sub_1B0F56ADC(*(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), v2);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for GeometryReaderView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v7 = a2 + 56;
  v8 = *(_BYTE *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 56, v7);
  *(_BYTE *)(a1 + 96) = v8;
  v10 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v10;
  v11 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v11;
  v12 = *(unsigned __int8 *)(a2 + 160);
  swift_retain();
  swift_retain();
  if (v12 <= 0xFD)
  {
    v13 = *(_QWORD *)(a2 + 136);
    v14 = *(_QWORD *)(a2 + 144);
    v15 = *(_QWORD *)(a2 + 152);
    sub_1B0F56B9C(v13, v14, v15, v12);
    *(_QWORD *)(a1 + 136) = v13;
    *(_QWORD *)(a1 + 144) = v14;
    *(_QWORD *)(a1 + 152) = v15;
    *(_BYTE *)(a1 + 160) = v12;
  }
  else
  {
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 145) = *(_OWORD *)(a2 + 145);
  }
  v16 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v16;
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for GeometryReaderView(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  _OWORD *v6;
  _OWORD *v7;
  unsigned int v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    sub_1B0F62D10(a1 + 56);
    v4 = *(_BYTE *)(a2 + 96);
    v5 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 80) = v5;
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 56, a2 + 56);
    *(_BYTE *)(a1 + 96) = v4;
  }
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v6 = (_OWORD *)(a1 + 136);
  v7 = (_OWORD *)(a2 + 136);
  v8 = *(unsigned __int8 *)(a2 + 160);
  if (*(unsigned __int8 *)(a1 + 160) <= 0xFDu)
  {
    if (v8 <= 0xFD)
    {
      v14 = *(_QWORD *)(a2 + 136);
      v15 = *(_QWORD *)(a2 + 144);
      v16 = *(_QWORD *)(a2 + 152);
      sub_1B0F56B9C(v14, v15, v16, *(_BYTE *)(a2 + 160));
      v17 = *(_QWORD *)(a1 + 136);
      v18 = *(_QWORD *)(a1 + 144);
      v19 = *(_QWORD *)(a1 + 152);
      *(_QWORD *)(a1 + 136) = v14;
      *(_QWORD *)(a1 + 144) = v15;
      *(_QWORD *)(a1 + 152) = v16;
      v20 = *(_BYTE *)(a1 + 160);
      *(_BYTE *)(a1 + 160) = v8;
      sub_1B0F56ADC(v17, v18, v19, v20);
    }
    else
    {
      sub_1B0F5EA14(a1 + 136);
      v10 = *(_OWORD *)(a2 + 145);
      *v6 = *v7;
      *(_OWORD *)(a1 + 145) = v10;
    }
  }
  else if (v8 <= 0xFD)
  {
    v11 = *(_QWORD *)(a2 + 136);
    v12 = *(_QWORD *)(a2 + 144);
    v13 = *(_QWORD *)(a2 + 152);
    sub_1B0F56B9C(v11, v12, v13, *(_BYTE *)(a2 + 160));
    *(_QWORD *)(a1 + 136) = v11;
    *(_QWORD *)(a1 + 144) = v12;
    *(_QWORD *)(a1 + 152) = v13;
    *(_BYTE *)(a1 + 160) = v8;
  }
  else
  {
    v9 = *v7;
    *(_OWORD *)(a1 + 145) = *(_OWORD *)(a2 + 145);
    *v6 = v9;
  }
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  return a1;
}

uint64_t assignWithTake for GeometryReaderView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    sub_1B0F62D10(a1 + 56);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 81) = *(_OWORD *)(a2 + 81);
  }
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_release();
  v7 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v7;
  swift_release();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v8 = *(unsigned __int8 *)(a1 + 160);
  if (v8 <= 0xFD)
  {
    v9 = *(unsigned __int8 *)(a2 + 160);
    if (v9 <= 0xFD)
    {
      v10 = *(_QWORD *)(a2 + 152);
      v11 = *(_QWORD *)(a1 + 136);
      v12 = *(_QWORD *)(a1 + 144);
      v13 = *(_QWORD *)(a1 + 152);
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 152) = v10;
      *(_BYTE *)(a1 + 160) = v9;
      sub_1B0F56ADC(v11, v12, v13, v8);
      goto LABEL_8;
    }
    sub_1B0F5EA14(a1 + 136);
  }
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 145) = *(_OWORD *)(a2 + 145);
LABEL_8:
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_release();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  return a1;
}

ValueMetadata *type metadata accessor for GeometryReaderView()
{
  return &type metadata for GeometryReaderView;
}

uint64_t sub_1B102E240(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v9;
    *(_QWORD *)(a1 + 48) = a2[6];
    v10 = *((_BYTE *)a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 80) = v11;
    (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 56, (uint64_t)(a2 + 7));
    *(_BYTE *)(a1 + 96) = v10;
    v12 = a2[14];
    *(_QWORD *)(a1 + 104) = a2[13];
    *(_QWORD *)(a1 + 112) = v12;
    v13 = a2[16];
    *(_QWORD *)(a1 + 120) = a2[15];
    *(_QWORD *)(a1 + 128) = v13;
    v14 = *((unsigned __int8 *)a2 + 160);
    swift_retain();
    swift_retain();
    if (v14 <= 0xFD)
    {
      v16 = a2[17];
      v17 = a2[18];
      v18 = a2[19];
      sub_1B0F56B9C(v16, v17, v18, v14);
      *(_QWORD *)(a1 + 136) = v16;
      *(_QWORD *)(a1 + 144) = v17;
      *(_QWORD *)(a1 + 152) = v18;
      *(_BYTE *)(a1 + 160) = v14;
    }
    else
    {
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 17);
      *(_OWORD *)(a1 + 145) = *(_OWORD *)((char *)a2 + 145);
    }
    v19 = a2[22];
    *(_QWORD *)(a1 + 168) = a2[21];
    *(_QWORD *)(a1 + 176) = v19;
    *(_QWORD *)(a1 + 184) = a2[23];
    v20 = *(int *)(a3 + 36);
    v21 = (_QWORD *)(a1 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    swift_bridgeObjectRetain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE460);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v23 = sub_1B103479C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
    }
    else
    {
      *v21 = *v22;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1B102E424(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(a1 + 56);
  swift_release();
  swift_release();
  v4 = *(unsigned __int8 *)(a1 + 160);
  if (v4 <= 0xFD)
    sub_1B0F56ADC(*(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), v4);
  swift_bridgeObjectRelease();
  swift_release();
  v5 = a1 + *(int *)(a2 + 36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE460);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v6 = sub_1B103479C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_1B102E4F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v9 = a2 + 56;
  v10 = *(_BYTE *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v11;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 56, v9);
  *(_BYTE *)(a1 + 96) = v10;
  v12 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v12;
  v13 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v13;
  v14 = *(unsigned __int8 *)(a2 + 160);
  swift_retain();
  swift_retain();
  if (v14 <= 0xFD)
  {
    v15 = *(_QWORD *)(a2 + 136);
    v16 = *(_QWORD *)(a2 + 144);
    v17 = *(_QWORD *)(a2 + 152);
    sub_1B0F56B9C(v15, v16, v17, v14);
    *(_QWORD *)(a1 + 136) = v15;
    *(_QWORD *)(a1 + 144) = v16;
    *(_QWORD *)(a1 + 152) = v17;
    *(_BYTE *)(a1 + 160) = v14;
  }
  else
  {
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 145) = *(_OWORD *)(a2 + 145);
  }
  v18 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v18;
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  v19 = *(int *)(a3 + 36);
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  swift_bridgeObjectRetain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE460);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v22 = sub_1B103479C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  }
  else
  {
    *v20 = *v21;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1B102E6A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  unsigned int v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    sub_1B0F62D10(a1 + 56);
    v6 = *(_BYTE *)(a2 + 96);
    v7 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 80) = v7;
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 56, a2 + 56);
    *(_BYTE *)(a1 + 96) = v6;
  }
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v8 = (_OWORD *)(a1 + 136);
  v9 = (_OWORD *)(a2 + 136);
  v10 = *(unsigned __int8 *)(a2 + 160);
  if (*(unsigned __int8 *)(a1 + 160) <= 0xFDu)
  {
    if (v10 <= 0xFD)
    {
      v16 = *(_QWORD *)(a2 + 136);
      v17 = *(_QWORD *)(a2 + 144);
      v18 = *(_QWORD *)(a2 + 152);
      sub_1B0F56B9C(v16, v17, v18, *(_BYTE *)(a2 + 160));
      v19 = *(_QWORD *)(a1 + 136);
      v20 = *(_QWORD *)(a1 + 144);
      v21 = *(_QWORD *)(a1 + 152);
      *(_QWORD *)(a1 + 136) = v16;
      *(_QWORD *)(a1 + 144) = v17;
      *(_QWORD *)(a1 + 152) = v18;
      v22 = *(_BYTE *)(a1 + 160);
      *(_BYTE *)(a1 + 160) = v10;
      sub_1B0F56ADC(v19, v20, v21, v22);
    }
    else
    {
      sub_1B0F5EA14(a1 + 136);
      v12 = *(_OWORD *)(a2 + 145);
      *v8 = *v9;
      *(_OWORD *)(a1 + 145) = v12;
    }
  }
  else if (v10 <= 0xFD)
  {
    v13 = *(_QWORD *)(a2 + 136);
    v14 = *(_QWORD *)(a2 + 144);
    v15 = *(_QWORD *)(a2 + 152);
    sub_1B0F56B9C(v13, v14, v15, *(_BYTE *)(a2 + 160));
    *(_QWORD *)(a1 + 136) = v13;
    *(_QWORD *)(a1 + 144) = v14;
    *(_QWORD *)(a1 + 152) = v15;
    *(_BYTE *)(a1 + 160) = v10;
  }
  else
  {
    v11 = *v9;
    *(_OWORD *)(a1 + 145) = *(_OWORD *)(a2 + 145);
    *v8 = v11;
  }
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  if (a1 != a2)
  {
    v23 = *(int *)(a3 + 36);
    v24 = (_QWORD *)(a1 + v23);
    v25 = (_QWORD *)(a2 + v23);
    sub_1B0F5A3AC(a1 + v23, &qword_1EEEDE460);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE460);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v26 = sub_1B103479C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
    }
    else
    {
      *v24 = *v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1B102E960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v4;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  *(_OWORD *)(a1 + 145) = *(_OWORD *)(a2 + 145);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  v8 = *(int *)(a3 + 36);
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE460);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = sub_1B103479C();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1B102EA48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    sub_1B0F62D10(a1 + 56);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 81) = *(_OWORD *)(a2 + 81);
  }
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_release();
  v9 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v9;
  swift_release();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  v10 = *(unsigned __int8 *)(a1 + 160);
  if (v10 > 0xFD)
    goto LABEL_6;
  v11 = *(unsigned __int8 *)(a2 + 160);
  if (v11 > 0xFD)
  {
    sub_1B0F5EA14(a1 + 136);
LABEL_6:
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 145) = *(_OWORD *)(a2 + 145);
    goto LABEL_8;
  }
  v12 = *(_QWORD *)(a2 + 152);
  v13 = *(_QWORD *)(a1 + 136);
  v14 = *(_QWORD *)(a1 + 144);
  v15 = *(_QWORD *)(a1 + 152);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 152) = v12;
  *(_BYTE *)(a1 + 160) = v11;
  sub_1B0F56ADC(v13, v14, v15, v10);
LABEL_8:
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_release();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  if (a1 != a2)
  {
    v16 = *(int *)(a3 + 36);
    v17 = (void *)(a1 + v16);
    v18 = (const void *)(a2 + v16);
    sub_1B0F5A3AC(a1 + v16, &qword_1EEEDE460);
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE460);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v20 = sub_1B103479C();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1B102EC24()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B102EC30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1950);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t sub_1B102ECB0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1B102ECBC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1950);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ColorSchemeReader()
{
  uint64_t result;

  result = qword_1EEEE1958;
  if (!qword_1EEEE1958)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1B102ED70()
{
  unint64_t v0;

  sub_1B102EE10();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1B102EE10()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EEEE1968)
  {
    sub_1B103479C();
    v0 = sub_1B10347B4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EEEE1968);
  }
}

uint64_t sub_1B102EE64()
{
  uint64_t v0;
  unint64_t v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;

  v1 = 0xD000000000000016;
  v2 = *(unsigned __int8 *)(v0 + 160);
  if (v2 > 0xFD)
    return v1;
  v4 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 152);
  if (*(_QWORD *)(v0 + 176))
  {
    sub_1B0F56C04(v4, v3, v5, v2);
    v6 = swift_retain();
    v7 = StringResolvable.resolved(with:)(v6);
    sub_1B0F56B88(v4, v3, v5, v2);
    swift_release();
    return v7;
  }
  sub_1B0F56B9C(v4, v3, v5, v2);
  type metadata accessor for RemoteStateStore(0);
  sub_1B0F524FC((unint64_t *)&qword_1EEEDE120, type metadata accessor for RemoteStateStore, (uint64_t)&protocol conformance descriptor for StateDict<A, B>);
  result = sub_1B1034ACC();
  __break(1u);
  return result;
}

uint64_t sub_1B102EFC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  char v13;
  void (*v14)(_BYTE *, uint64_t);
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  uint64_t v26;
  uint64_t result;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _BYTE v32[88];
  _BYTE v33[120];
  _OWORD v34[7];
  __int128 v35;
  uint64_t v36;

  v3 = sub_1B103479C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = &v32[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v9 = &v32[-v8];
  sub_1B0F641B8(v1 + 16, (uint64_t)v33);
  v10 = *(_QWORD *)(v1 + 176);
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF048);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B1036F70;
    swift_retain();
    *(_QWORD *)(inited + 32) = sub_1B102EE64();
    *(_QWORD *)(inited + 40) = v12;
    type metadata accessor for ColorSchemeReader();
    sub_1B0F56710((uint64_t)v9);
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v4 + 104))(v7, *MEMORY[0x1E0CD86E0], v3);
    v13 = sub_1B1034790();
    v14 = *(void (**)(_BYTE *, uint64_t))(v4 + 8);
    v14(v7, v3);
    v14(v9, v3);
    v15 = (v13 & 1) == 0;
    if ((v13 & 1) != 0)
      v16 = 0x746867696CLL;
    else
      v16 = 1802658148;
    if (v15)
      v17 = 0xE400000000000000;
    else
      v17 = 0xE500000000000000;
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = v16;
    *(_QWORD *)(v18 + 24) = v17;
    *(_QWORD *)(inited + 48) = v18;
    v19 = sub_1B0F554CC(inited);
    v20 = MEMORY[0x1E0DEE9D8];
    v21 = sub_1B0F553A4(MEMORY[0x1E0DEE9D8]);
    type metadata accessor for RemoteStateStore(0);
    v22 = swift_allocObject();
    v23 = qword_1EEEE0760;
    swift_retain();
    *(_QWORD *)(v22 + v23) = sub_1B0F553A4(v20);
    *(_QWORD *)(v22 + qword_1EEEE0768) = v10;
    swift_retain_n();
    swift_release();
    v24 = sub_1B0F55C84(v10);
    swift_retain();
    sub_1B0F56FC4(v19, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B0F56C60);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    v25 = (unint64_t *)(v24 + qword_1EEEE0760);
    swift_beginAccess();
    *v25 = v21;
    swift_bridgeObjectRelease();
    sub_1B0F524FC((unint64_t *)&qword_1EEEDE120, type metadata accessor for RemoteStateStore, (uint64_t)&protocol conformance descriptor for StateDict<A, B>);
    v26 = sub_1B1034694();
    sub_1B0F641B8((uint64_t)v33, (uint64_t)v34);
    *((_QWORD *)&v35 + 1) = v26;
    v36 = v24;
    result = sub_1B0F6427C((uint64_t)v33);
    v28 = v35;
    *(_OWORD *)(a1 + 96) = v34[6];
    *(_OWORD *)(a1 + 112) = v28;
    *(_QWORD *)(a1 + 128) = v36;
    v29 = v34[3];
    *(_OWORD *)(a1 + 32) = v34[2];
    *(_OWORD *)(a1 + 48) = v29;
    v30 = v34[5];
    *(_OWORD *)(a1 + 64) = v34[4];
    *(_OWORD *)(a1 + 80) = v30;
    v31 = v34[1];
    *(_OWORD *)a1 = v34[0];
    *(_OWORD *)(a1 + 16) = v31;
  }
  else
  {
    type metadata accessor for RemoteStateStore(0);
    sub_1B0F524FC((unint64_t *)&qword_1EEEDE120, type metadata accessor for RemoteStateStore, (uint64_t)&protocol conformance descriptor for StateDict<A, B>);
    result = sub_1B1034ACC();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B102F2E4(char a1)
{
  return qword_1B104B610[a1];
}

uint64_t sub_1B102F304(char *a1, char *a2)
{
  return sub_1B100D5A0(*a1, *a2);
}

uint64_t sub_1B102F310()
{
  return sub_1B1011A40();
}

uint64_t sub_1B102F318()
{
  return sub_1B10126B8();
}

uint64_t sub_1B102F320()
{
  return sub_1B10147A4();
}

uint64_t sub_1B102F328@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B0F60A74();
  *a1 = result;
  return result;
}

uint64_t sub_1B102F35C@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B102F2E4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B102F384()
{
  char *v0;

  return sub_1B102F2E4(*v0);
}

uint64_t sub_1B102F38C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B0F60A74();
  *a1 = result;
  return result;
}

uint64_t sub_1B102F3B8()
{
  sub_1B1031060();
  return sub_1B10362B4();
}

uint64_t sub_1B102F3E0()
{
  sub_1B1031060();
  return sub_1B10362C0();
}

uint64_t sub_1B102F408@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  char v45;

  v34 = a2;
  v3 = sub_1B103461C();
  v31 = *(_QWORD *)(v3 - 8);
  v32 = v3;
  MEMORY[0x1E0C80A78](v3);
  v33 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE19E0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ColorSchemeReader();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)v11 + 21) = MEMORY[0x1E0DEE9D8];
  type metadata accessor for RemoteStateStore(0);
  sub_1B0F524FC((unint64_t *)&qword_1EEEDE120, type metadata accessor for RemoteStateStore, (uint64_t)&protocol conformance descriptor for StateDict<A, B>);
  *((_QWORD *)v11 + 22) = sub_1B1034AD8();
  *((_QWORD *)v11 + 23) = v12;
  v13 = (uint64_t *)&v11[*(int *)(v9 + 36)];
  *v13 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE460);
  swift_storeEnumTagMultiPayload();
  v14 = a1[3];
  v35 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_1B1031060();
  v15 = v36;
  sub_1B1036278();
  if (v15)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    swift_bridgeObjectRelease();
    swift_release();
    return sub_1B0F5A3AC((uint64_t)v13, &qword_1EEEE1950);
  }
  else
  {
    v17 = v33;
    v16 = v34;
    v36 = v6;
    LOBYTE(v37) = 0;
    v18 = sub_1B103608C();
    v20 = v5;
    v22 = v19;
    if (!v19)
    {
      v23 = v17;
      sub_1B1034610();
      v24 = sub_1B1034604();
      v22 = v25;
      (*(void (**)(char *, uint64_t))(v31 + 8))(v23, v32);
      v18 = v24;
    }
    *(_QWORD *)v11 = v18;
    *((_QWORD *)v11 + 1) = v22;
    v45 = 1;
    sub_1B0F64238();
    sub_1B10360BC();
    v26 = v42;
    *((_OWORD *)v11 + 5) = v41;
    *((_OWORD *)v11 + 6) = v26;
    *((_OWORD *)v11 + 7) = v43;
    *((_QWORD *)v11 + 16) = v44;
    v27 = v38;
    *((_OWORD *)v11 + 1) = v37;
    *((_OWORD *)v11 + 2) = v27;
    v28 = v40;
    *((_OWORD *)v11 + 3) = v39;
    *((_OWORD *)v11 + 4) = v28;
    v45 = 2;
    sub_1B0F56A98();
    sub_1B10360A4();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v8, v20);
    v29 = v38;
    v30 = BYTE8(v38);
    *(_OWORD *)(v11 + 136) = v37;
    *((_QWORD *)v11 + 19) = v29;
    v11[160] = v30;
    sub_1B10310A4((uint64_t)v11, v16);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    return sub_1B10310E8((uint64_t)v11);
  }
}

uint64_t sub_1B102F798@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B102F408(a1, a2);
}

uint64_t sub_1B102F7AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B102F7BC()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;

  v1 = 0x797274656D6F6567;
  v2 = *(unsigned __int8 *)(v0 + 160);
  if (v2 > 0xFD)
    return v1;
  v4 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 152);
  if (*(_QWORD *)(v0 + 176))
  {
    sub_1B0F56C04(v4, v3, v5, v2);
    v6 = swift_retain();
    v7 = StringResolvable.resolved(with:)(v6);
    sub_1B0F56B88(v4, v3, v5, v2);
    swift_release();
    return v7;
  }
  sub_1B0F56B9C(v4, v3, v5, v2);
  type metadata accessor for RemoteStateStore(0);
  sub_1B0F524FC((unint64_t *)&qword_1EEEDE120, type metadata accessor for RemoteStateStore, (uint64_t)&protocol conformance descriptor for StateDict<A, B>);
  result = sub_1B1034ACC();
  __break(1u);
  return result;
}

uint64_t sub_1B102F91C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t *v31;
  uint64_t v32;
  uint64_t result;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD v40[7];
  __int128 v41;

  v3 = *(_QWORD *)(a1 + 176);
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDF048);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B1036F70;
    swift_retain();
    v39 = v3;
    *(_QWORD *)(inited + 32) = sub_1B102F7BC();
    *(_QWORD *)(inited + 40) = v6;
    v7 = swift_initStackObject();
    *(_OWORD *)(v7 + 16) = xmmword_1B10436A0;
    *(_QWORD *)(v7 + 32) = 1702521203;
    *(_QWORD *)(v7 + 40) = 0xE400000000000000;
    v8 = swift_initStackObject();
    *(_OWORD *)(v8 + 16) = xmmword_1B10436A0;
    *(_QWORD *)(v8 + 32) = 0x6874646977;
    *(_QWORD *)(v8 + 40) = 0xE500000000000000;
    v9 = swift_allocObject();
    sub_1B1034844();
    *(_QWORD *)(v9 + 16) = v10;
    *(_QWORD *)(v8 + 48) = v9 | 0x4000000000000000;
    v11 = swift_allocObject();
    *(_QWORD *)(v8 + 56) = 0x746867696568;
    *(_QWORD *)(v8 + 64) = 0xE600000000000000;
    v38 = a1;
    v12 = swift_allocObject();
    sub_1B1034844();
    *(_QWORD *)(v12 + 16) = v13;
    *(_QWORD *)(v8 + 72) = v12 | 0x4000000000000000;
    *(_QWORD *)(v11 + 16) = sub_1B0F554CC(v8);
    *(_QWORD *)(v7 + 48) = v11 | 0xA000000000000000;
    strcpy((char *)(v7 + 56), "safeAreaInsets");
    *(_BYTE *)(v7 + 71) = -18;
    v14 = swift_initStackObject();
    *(_OWORD *)(v14 + 16) = xmmword_1B104AEC0;
    *(_QWORD *)(v14 + 32) = 7368564;
    *(_QWORD *)(v14 + 40) = 0xE300000000000000;
    v15 = swift_allocObject();
    sub_1B1034838();
    *(_QWORD *)(v15 + 16) = v16;
    *(_QWORD *)(v14 + 48) = v15 | 0x4000000000000000;
    *(_QWORD *)(v14 + 56) = 0x676E696C69617274;
    *(_QWORD *)(v14 + 64) = 0xE800000000000000;
    v17 = swift_allocObject();
    sub_1B1034838();
    *(_QWORD *)(v17 + 16) = v18;
    *(_QWORD *)(v14 + 72) = v17 | 0x4000000000000000;
    *(_QWORD *)(v14 + 80) = 0x6D6F74746F62;
    *(_QWORD *)(v14 + 88) = 0xE600000000000000;
    v19 = swift_allocObject();
    sub_1B1034838();
    *(_QWORD *)(v19 + 16) = v20;
    *(_QWORD *)(v14 + 96) = v19 | 0x4000000000000000;
    v21 = swift_allocObject();
    v22 = swift_allocObject();
    *(_QWORD *)(v14 + 104) = 0x676E696461656CLL;
    *(_QWORD *)(v14 + 112) = 0xE700000000000000;
    v23 = swift_allocObject();
    sub_1B1034838();
    *(_QWORD *)(v23 + 16) = v24;
    *(_QWORD *)(v14 + 120) = v23 | 0x4000000000000000;
    *(_QWORD *)(v22 + 16) = sub_1B0F554CC(v14);
    *(_QWORD *)(v7 + 72) = v22 | 0xA000000000000000;
    *(_QWORD *)(v21 + 16) = sub_1B0F554CC(v7);
    *(_QWORD *)(inited + 48) = v21 | 0xA000000000000000;
    v25 = sub_1B0F554CC(inited);
    v26 = MEMORY[0x1E0DEE9D8];
    v27 = sub_1B0F553A4(MEMORY[0x1E0DEE9D8]);
    type metadata accessor for RemoteStateStore(0);
    v28 = swift_allocObject();
    v29 = qword_1EEEE0760;
    swift_retain();
    *(_QWORD *)(v28 + v29) = sub_1B0F553A4(v26);
    *(_QWORD *)(v28 + qword_1EEEE0768) = v39;
    swift_retain_n();
    swift_release();
    v30 = sub_1B0F55C84(v39);
    swift_retain();
    sub_1B0F56FC4(v25, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1B0F56C60);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    v31 = (unint64_t *)(v30 + qword_1EEEE0760);
    swift_beginAccess();
    *v31 = v27;
    swift_bridgeObjectRelease();
    sub_1B0F524FC((unint64_t *)&qword_1EEEDE120, type metadata accessor for RemoteStateStore, (uint64_t)&protocol conformance descriptor for StateDict<A, B>);
    v32 = sub_1B1034694();
    result = sub_1B0F641B8(v38 + 16, (uint64_t)v40);
    *((_QWORD *)&v41 + 1) = v32;
    *(_QWORD *)(a2 + 128) = v30;
    v34 = v40[3];
    *(_OWORD *)(a2 + 32) = v40[2];
    *(_OWORD *)(a2 + 48) = v34;
    v35 = v40[5];
    *(_OWORD *)(a2 + 64) = v40[4];
    *(_OWORD *)(a2 + 80) = v35;
    v36 = v40[1];
    *(_OWORD *)a2 = v40[0];
    *(_OWORD *)(a2 + 16) = v36;
    v37 = v41;
    *(_OWORD *)(a2 + 96) = v40[6];
    *(_OWORD *)(a2 + 112) = v37;
  }
  else
  {
    type metadata accessor for RemoteStateStore(0);
    sub_1B0F524FC((unint64_t *)&qword_1EEEDE120, type metadata accessor for RemoteStateStore, (uint64_t)&protocol conformance descriptor for StateDict<A, B>);
    result = sub_1B1034ACC();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B102FDC8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B0F60A74();
  *a1 = result;
  return result;
}

uint64_t sub_1B102FDFC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B0F60A74();
  *a1 = result;
  return result;
}

uint64_t sub_1B102FE28()
{
  sub_1B1030FD4();
  return sub_1B10362B4();
}

uint64_t sub_1B102FE50()
{
  sub_1B1030FD4();
  return sub_1B10362C0();
}

uint64_t sub_1B102FE78@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  _QWORD v34[2];
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v22 = a2;
  v21 = sub_1B103461C();
  v23 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE19D0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = MEMORY[0x1E0DEE9D8];
  type metadata accessor for RemoteStateStore(0);
  sub_1B0F524FC((unint64_t *)&qword_1EEEDE120, type metadata accessor for RemoteStateStore, (uint64_t)&protocol conformance descriptor for StateDict<A, B>);
  v47 = sub_1B1034AD8();
  v48 = v9;
  v10 = a1[3];
  v24 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1B1030FD4();
  v11 = v49;
  sub_1B1036278();
  if (v11)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    v12 = v23;
    v49 = v6;
    LOBYTE(v26) = 0;
    v13 = sub_1B103608C();
    v16 = v14;
    if (v14)
    {
      v17 = v13;
    }
    else
    {
      sub_1B1034610();
      v17 = sub_1B1034604();
      v16 = v18;
      (*(void (**)(char *, uint64_t))(v12 + 8))(v4, v21);
    }
    v19 = v22;
    v34[0] = v17;
    v34[1] = v16;
    v25 = 1;
    sub_1B0F64238();
    sub_1B10360BC();
    v39 = v30;
    v40 = v31;
    v41 = v32;
    v42 = v33;
    v35 = v26;
    v36 = v27;
    v37 = v28;
    v38 = v29;
    v25 = 2;
    sub_1B0F56A98();
    sub_1B10360A4();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v8, v5);
    v43 = v26;
    v44 = v27;
    v45 = BYTE8(v27);
    sub_1B0F6D448((uint64_t)v34, v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    return sub_1B0F6D484((uint64_t)v34);
  }
}

double sub_1B10301A4@<D0>(uint64_t (**a1)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v1;
  uint64_t (*v3)@<X0>(uint64_t@<X8>);
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  double result;
  __int128 v10;
  _OWORD v11[2];
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;

  sub_1B0F6D448(v1, (uint64_t)v11);
  v3 = (uint64_t (*)@<X0>(uint64_t@<X8>))swift_allocObject();
  v4 = v19;
  *((_OWORD *)v3 + 9) = v18;
  *((_OWORD *)v3 + 10) = v4;
  v5 = v21;
  *((_OWORD *)v3 + 11) = v20;
  *((_OWORD *)v3 + 12) = v5;
  v6 = v15;
  *((_OWORD *)v3 + 5) = v14;
  *((_OWORD *)v3 + 6) = v6;
  v7 = v17;
  *((_OWORD *)v3 + 7) = v16;
  *((_OWORD *)v3 + 8) = v7;
  v8 = v11[1];
  *((_OWORD *)v3 + 1) = v11[0];
  *((_OWORD *)v3 + 2) = v8;
  result = *(double *)&v12;
  v10 = v13;
  *((_OWORD *)v3 + 3) = v12;
  *((_OWORD *)v3 + 4) = v10;
  *a1 = sub_1B1030F98;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B1030224@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B102FE78(a1, a2);
}

uint64_t sub_1B1030238()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B1030248()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;

  v1 = 0x69566C6C6F726373;
  v2 = *(unsigned __int8 *)(v0 + 160);
  if (v2 > 0xFD)
    return v1;
  v4 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 152);
  if (*(_QWORD *)(v0 + 176))
  {
    sub_1B0F56C04(v4, v3, v5, v2);
    v6 = swift_retain();
    v7 = StringResolvable.resolved(with:)(v6);
    sub_1B0F56B88(v4, v3, v5, v2);
    swift_release();
    return v7;
  }
  sub_1B0F56B9C(v4, v3, v5, v2);
  type metadata accessor for RemoteStateStore(0);
  sub_1B0F524FC((unint64_t *)&qword_1EEEDE120, type metadata accessor for RemoteStateStore, (uint64_t)&protocol conformance descriptor for StateDict<A, B>);
  result = sub_1B1034ACC();
  __break(1u);
  return result;
}

uint64_t sub_1B10303B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  uint64_t *boxed_opaque_existential_1;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  _OWORD v25[7];
  __int128 v26;

  v3 = *(_QWORD *)(a2 + 192);
  if (v3)
  {
    v24 = a2 + 16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE19B8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1B1036F70;
    swift_retain();
    *(_QWORD *)(inited + 32) = sub_1B1030248();
    *(_QWORD *)(inited + 40) = v7;
    v8 = sub_1B10349A0();
    *(_QWORD *)(inited + 72) = v8;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(inited + 48));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(boxed_opaque_existential_1, a1, v8);
    v10 = sub_1B0F559EC(inited);
    v11 = MEMORY[0x1E0DEE9D8];
    v12 = sub_1B0F553A4(MEMORY[0x1E0DEE9D8]);
    type metadata accessor for LocalStateStore(0);
    v13 = swift_allocObject();
    v14 = qword_1EEEE0770;
    swift_retain();
    *(_QWORD *)(v13 + v14) = sub_1B0F553A4(v11);
    *(_QWORD *)(v13 + qword_1EEEE0778) = v3;
    swift_retain_n();
    swift_release();
    v15 = sub_1B0F55E48(v3);
    swift_retain();
    sub_1B0FEEC2C(v10, (void (*)(uint64_t, uint64_t, _BYTE *))sub_1B1030E54);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    *(_QWORD *)(v15 + qword_1EEEE0770) = v12;
    swift_bridgeObjectRelease();
    sub_1B0F524FC(&qword_1EEEDE128, type metadata accessor for LocalStateStore, (uint64_t)&protocol conformance descriptor for StateDict<A, B>);
    v16 = sub_1B1034694();
    result = sub_1B0F641B8(v24, (uint64_t)v25);
    *((_QWORD *)&v26 + 1) = v16;
    *(_QWORD *)(a3 + 128) = v15;
    v18 = v25[3];
    v19 = v25[4];
    *(_OWORD *)(a3 + 32) = v25[2];
    *(_OWORD *)(a3 + 48) = v18;
    v20 = v25[5];
    v21 = v25[6];
    *(_OWORD *)(a3 + 64) = v19;
    *(_OWORD *)(a3 + 80) = v20;
    v22 = v25[1];
    *(_OWORD *)a3 = v25[0];
    *(_OWORD *)(a3 + 16) = v22;
    v23 = v26;
    *(_OWORD *)(a3 + 96) = v21;
    *(_OWORD *)(a3 + 112) = v23;
  }
  else
  {
    type metadata accessor for LocalStateStore(0);
    sub_1B0F524FC(&qword_1EEEDE128, type metadata accessor for LocalStateStore, (uint64_t)&protocol conformance descriptor for StateDict<A, B>);
    result = sub_1B1034ACC();
    __break(1u);
  }
  return result;
}

uint64_t sub_1B10305E8(char a1)
{
  return qword_1B104B640[a1];
}

uint64_t sub_1B1030608(char *a1, char *a2)
{
  return sub_1B100F428(*a1, *a2);
}

uint64_t sub_1B1030614()
{
  return sub_1B1011AA8();
}

uint64_t sub_1B103061C()
{
  return sub_1B10135D0();
}

uint64_t sub_1B1030624()
{
  return sub_1B1013610();
}

uint64_t sub_1B103062C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B0F60A74();
  *a1 = result;
  return result;
}

uint64_t sub_1B1030660@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B10305E8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B1030688()
{
  char *v0;

  return sub_1B10305E8(*v0);
}

uint64_t sub_1B1030690@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B0F60A74();
  *a1 = result;
  return result;
}

uint64_t sub_1B10306BC()
{
  sub_1B1030ED8();
  return sub_1B10362B4();
}

uint64_t sub_1B10306E4()
{
  sub_1B1030ED8();
  return sub_1B10362C0();
}

uint64_t sub_1B103070C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  _QWORD v35[2];
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v24 = a2;
  v3 = sub_1B103461C();
  v22 = *(_QWORD *)(v3 - 8);
  v23 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE19C0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = MEMORY[0x1E0DEE9D8];
  type metadata accessor for RemoteStateStore(0);
  sub_1B0F524FC((unint64_t *)&qword_1EEEDE120, type metadata accessor for RemoteStateStore, (uint64_t)&protocol conformance descriptor for StateDict<A, B>);
  v48 = sub_1B1034AD8();
  v49 = v10;
  type metadata accessor for LocalStateStore(0);
  sub_1B0F524FC(&qword_1EEEDE128, type metadata accessor for LocalStateStore, (uint64_t)&protocol conformance descriptor for StateDict<A, B>);
  v50 = sub_1B1034AD8();
  v51 = v11;
  v12 = a1[3];
  v25 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1B1030ED8();
  v13 = v52;
  sub_1B1036278();
  if (v13)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  else
  {
    v52 = v7;
    v14 = v24;
    LOBYTE(v27) = 0;
    v15 = sub_1B103608C();
    v18 = v16;
    if (v16)
    {
      v19 = v15;
    }
    else
    {
      sub_1B1034610();
      v19 = sub_1B1034604();
      v18 = v20;
      (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v23);
    }
    v35[0] = v19;
    v35[1] = v18;
    v26 = 1;
    sub_1B0F64238();
    sub_1B10360BC();
    v40 = v31;
    v41 = v32;
    v42 = v33;
    v43 = v34;
    v36 = v27;
    v37 = v28;
    v38 = v29;
    v39 = v30;
    v26 = 2;
    sub_1B0F56A98();
    sub_1B10360A4();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v9, v6);
    v44 = v27;
    v45 = v28;
    v46 = BYTE8(v28);
    sub_1B0F6D4B8((uint64_t)v35, v14);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    return sub_1B0F6D4F4((uint64_t)v35);
  }
}

__n128 sub_1B1030A64@<Q0>(uint64_t (**a1)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __n128 result;
  _OWORD v10[13];

  sub_1B0F6D4B8(v1, (uint64_t)v10);
  v3 = swift_allocObject();
  v4 = v10[11];
  *(_OWORD *)(v3 + 176) = v10[10];
  *(_OWORD *)(v3 + 192) = v4;
  *(_OWORD *)(v3 + 208) = v10[12];
  v5 = v10[7];
  *(_OWORD *)(v3 + 112) = v10[6];
  *(_OWORD *)(v3 + 128) = v5;
  v6 = v10[9];
  *(_OWORD *)(v3 + 144) = v10[8];
  *(_OWORD *)(v3 + 160) = v6;
  v7 = v10[3];
  *(_OWORD *)(v3 + 48) = v10[2];
  *(_OWORD *)(v3 + 64) = v7;
  v8 = v10[5];
  *(_OWORD *)(v3 + 80) = v10[4];
  *(_OWORD *)(v3 + 96) = v8;
  result = (__n128)v10[1];
  *(_OWORD *)(v3 + 16) = v10[0];
  *(__n128 *)(v3 + 32) = result;
  *a1 = sub_1B1030E4C;
  a1[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v3;
  return result;
}

uint64_t sub_1B1030AEC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B103070C(a1, a2);
}

uint64_t sub_1B1030B00()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B1030B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B0F78AEC(a1, a2, a3, (void (*)(void))sub_1B1000BD4);
}

uint64_t sub_1B1030B1C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B0F5FA20(a1, a2, a3, (uint64_t (*)(void))sub_1B1030B38, (uint64_t (*)(void))sub_1B1030B7C, (uint64_t (*)(void))sub_1B1030BC0);
}

unint64_t sub_1B1030B38()
{
  unint64_t result;

  result = qword_1EEEE1970;
  if (!qword_1EEEE1970)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104B140, &type metadata for ScrollViewReaderView);
    atomic_store(result, (unint64_t *)&qword_1EEEE1970);
  }
  return result;
}

unint64_t sub_1B1030B7C()
{
  unint64_t result;

  result = qword_1EEEE1978;
  if (!qword_1EEEE1978)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104B108, &type metadata for ScrollViewReaderView);
    atomic_store(result, (unint64_t *)&qword_1EEEE1978);
  }
  return result;
}

unint64_t sub_1B1030BC0()
{
  unint64_t result;

  result = qword_1EEEE1980;
  if (!qword_1EEEE1980)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104B168, &type metadata for ScrollViewReaderView);
    atomic_store(result, (unint64_t *)&qword_1EEEE1980);
  }
  return result;
}

uint64_t sub_1B1030C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B0F78AEC(a1, a2, a3, (void (*)(void))sub_1B1000B90);
}

uint64_t sub_1B1030C10(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1B0F5FA20(a1, a2, a3, (uint64_t (*)(void))sub_1B1030C2C, (uint64_t (*)(void))sub_1B1030C70, (uint64_t (*)(void))sub_1B1030CB4);
}

unint64_t sub_1B1030C2C()
{
  unint64_t result;

  result = qword_1EEEE1988;
  if (!qword_1EEEE1988)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104B090, &type metadata for GeometryReaderView);
    atomic_store(result, (unint64_t *)&qword_1EEEE1988);
  }
  return result;
}

unint64_t sub_1B1030C70()
{
  unint64_t result;

  result = qword_1EEEE1990;
  if (!qword_1EEEE1990)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104B058, &type metadata for GeometryReaderView);
    atomic_store(result, (unint64_t *)&qword_1EEEE1990);
  }
  return result;
}

unint64_t sub_1B1030CB4()
{
  unint64_t result;

  result = qword_1EEEE1998;
  if (!qword_1EEEE1998)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104B0B8, &type metadata for GeometryReaderView);
    atomic_store(result, (unint64_t *)&qword_1EEEE1998);
  }
  return result;
}

uint64_t sub_1B1030CF8()
{
  sub_1B0F524FC(&qword_1EEEE0F00, (uint64_t (*)(uint64_t))type metadata accessor for ColorSchemeReader, (uint64_t)&unk_1B104B1F0);
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1B1030D50(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1B0F524FC(&qword_1EEEE19A0, (uint64_t (*)(uint64_t))type metadata accessor for ColorSchemeReader, (uint64_t)&unk_1B104AFE0);
  a1[2] = sub_1B0F524FC(&qword_1EEEE19A8, (uint64_t (*)(uint64_t))type metadata accessor for ColorSchemeReader, (uint64_t)&unk_1B104AFA8);
  result = sub_1B0F524FC(&qword_1EEEE19B0, (uint64_t (*)(uint64_t))type metadata accessor for ColorSchemeReader, (uint64_t)&unk_1B104B008);
  a1[3] = result;
  return result;
}

uint64_t sub_1B1030DC8()
{
  uint64_t v0;
  unsigned int v1;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  swift_release();
  swift_release();
  v1 = *(unsigned __int8 *)(v0 + 176);
  if (v1 <= 0xFD)
    sub_1B0F56ADC(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), v1);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B1030E4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1B10303B0(a1, v2 + 16, a2);
}

uint64_t sub_1B1030E54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B0FEE468(a1, a2, a3);
}

uint64_t sub_1B1030E5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_1B103479C();
  MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_1B1034AF0();
}

unint64_t sub_1B1030ED8()
{
  unint64_t result;

  result = qword_1EEEE19C8;
  if (!qword_1EEEE19C8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104B5BC, &type metadata for ScrollViewReaderView.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE19C8);
  }
  return result;
}

uint64_t sub_1B1030F1C()
{
  uint64_t v0;
  unsigned int v1;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  swift_release();
  swift_release();
  v1 = *(unsigned __int8 *)(v0 + 176);
  if (v1 <= 0xFD)
    sub_1B0F56ADC(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), v1);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1B1030F98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1B102F91C(v1 + 16, a1);
}

uint64_t sub_1B1030FA0()
{
  return swift_deallocObject();
}

uint64_t sub_1B1030FB0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_1B1030FD4()
{
  unint64_t result;

  result = qword_1EEEE19D8;
  if (!qword_1EEEE19D8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104B56C, &type metadata for GeometryReaderView.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE19D8);
  }
  return result;
}

uint64_t sub_1B1031018()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1B103103C()
{
  return sub_1B1034AE4();
}

unint64_t sub_1B1031060()
{
  unint64_t result;

  result = qword_1EEEE19E8;
  if (!qword_1EEEE19E8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104B51C, &type metadata for ColorSchemeReader.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE19E8);
  }
  return result;
}

uint64_t sub_1B10310A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ColorSchemeReader();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1B10310E8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ColorSchemeReader();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for ColorSchemeReader.CodingKeys()
{
  return &type metadata for ColorSchemeReader.CodingKeys;
}

ValueMetadata *type metadata accessor for GeometryReaderView.CodingKeys()
{
  return &type metadata for GeometryReaderView.CodingKeys;
}

uint64_t _s6LiftUI17ColorSchemeReaderV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1B1031194 + 4 * byte_1B104AED5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1B10311C8 + 4 * byte_1B104AED0[v4]))();
}

uint64_t sub_1B10311C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B10311D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B10311D8);
  return result;
}

uint64_t sub_1B10311E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B10311ECLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1B10311F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B10311F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ScrollViewReaderView.CodingKeys()
{
  return &type metadata for ScrollViewReaderView.CodingKeys;
}

uint64_t sub_1B1031214()
{
  return sub_1B0F5A7E4(&qword_1EEEE19F0, &qword_1EEEE19F8, MEMORY[0x1E0CDA0C8]);
}

uint64_t sub_1B1031240()
{
  return sub_1B0F5A7E4(&qword_1EEEE1A00, &qword_1EEEE1A08, MEMORY[0x1E0CD9318]);
}

unint64_t sub_1B1031274()
{
  unint64_t result;

  result = qword_1EEEE1A10;
  if (!qword_1EEEE1A10)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104B314, &type metadata for ScrollViewReaderView.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1A10);
  }
  return result;
}

unint64_t sub_1B10312BC()
{
  unint64_t result;

  result = qword_1EEEE1A18;
  if (!qword_1EEEE1A18)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104B404, &type metadata for GeometryReaderView.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1A18);
  }
  return result;
}

unint64_t sub_1B1031304()
{
  unint64_t result;

  result = qword_1EEEE1A20;
  if (!qword_1EEEE1A20)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104B4F4, &type metadata for ColorSchemeReader.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1A20);
  }
  return result;
}

unint64_t sub_1B103134C()
{
  unint64_t result;

  result = qword_1EEEE1A28;
  if (!qword_1EEEE1A28)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104B42C, &type metadata for ColorSchemeReader.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1A28);
  }
  return result;
}

unint64_t sub_1B1031394()
{
  unint64_t result;

  result = qword_1EEEE1A30;
  if (!qword_1EEEE1A30)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104B454, &type metadata for ColorSchemeReader.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1A30);
  }
  return result;
}

unint64_t sub_1B10313DC()
{
  unint64_t result;

  result = qword_1EEEE1A38;
  if (!qword_1EEEE1A38)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104B33C, &type metadata for GeometryReaderView.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1A38);
  }
  return result;
}

unint64_t sub_1B1031424()
{
  unint64_t result;

  result = qword_1EEEE1A40;
  if (!qword_1EEEE1A40)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104B364, &type metadata for GeometryReaderView.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1A40);
  }
  return result;
}

unint64_t sub_1B103146C()
{
  unint64_t result;

  result = qword_1EEEE1A48;
  if (!qword_1EEEE1A48)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104B24C, &type metadata for ScrollViewReaderView.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1A48);
  }
  return result;
}

unint64_t sub_1B10314B4()
{
  unint64_t result;

  result = qword_1EEEE1A50;
  if (!qword_1EEEE1A50)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104B274, &type metadata for ScrollViewReaderView.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1A50);
  }
  return result;
}

uint64_t assignWithCopy for ClippedModifier(uint64_t a1, __int128 *a2)
{
  int v4;
  __int128 v5;
  __int128 v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *((unsigned __int8 *)a2 + 24);
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    if (v4 == 255)
    {
      v6 = *a2;
      *(_OWORD *)(a1 + 9) = *(__int128 *)((char *)a2 + 9);
      *(_OWORD *)a1 = v6;
    }
    else
    {
      v15 = v4 & 1;
      v16 = *(_QWORD *)a2;
      v17 = *((_QWORD *)a2 + 1);
      v18 = *((_QWORD *)a2 + 2);
      sub_1B0F5E604(*(_QWORD *)a2, v17, v18, v4 & 1);
      *(_QWORD *)a1 = v16;
      *(_QWORD *)(a1 + 8) = v17;
      *(_QWORD *)(a1 + 16) = v18;
      *(_BYTE *)(a1 + 24) = v15;
    }
  }
  else if (v4 == 255)
  {
    sub_1B0F8E3C0(a1);
    v5 = *(__int128 *)((char *)a2 + 9);
    *(_OWORD *)a1 = *a2;
    *(_OWORD *)(a1 + 9) = v5;
  }
  else
  {
    v7 = v4 & 1;
    v8 = *(_QWORD *)a2;
    v9 = *((_QWORD *)a2 + 1);
    v10 = *((_QWORD *)a2 + 2);
    sub_1B0F5E604(*(_QWORD *)a2, v9, v10, v4 & 1);
    v11 = *(_QWORD *)a1;
    v12 = *(_QWORD *)(a1 + 8);
    v13 = *(_QWORD *)(a1 + 16);
    v14 = *(_BYTE *)(a1 + 24);
    *(_QWORD *)a1 = v8;
    *(_QWORD *)(a1 + 8) = v9;
    *(_QWORD *)(a1 + 16) = v10;
    *(_BYTE *)(a1 + 24) = v7;
    sub_1B0F5E6A0(v11, v12, v13, v14);
  }
  return a1;
}

uint64_t assignWithTake for ClippedModifier(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(unsigned __int8 *)(a1 + 24);
  if (v4 != 255)
  {
    v5 = *(unsigned __int8 *)(a2 + 24);
    if (v5 != 255)
    {
      v6 = v4 & 1;
      v7 = *(_QWORD *)(a2 + 16);
      v8 = *(_QWORD *)a1;
      v9 = *(_QWORD *)(a1 + 8);
      v10 = *(_QWORD *)(a1 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_QWORD *)(a1 + 16) = v7;
      *(_BYTE *)(a1 + 24) = v5 & 1;
      sub_1B0F5E6A0(v8, v9, v10, v6);
      return a1;
    }
    sub_1B0F8E3C0(a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  return a1;
}

ValueMetadata *type metadata accessor for ClippedModifier()
{
  return &type metadata for ClippedModifier;
}

uint64_t destroy for FrameModifier(uint64_t result)
{
  uint64_t v1;
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;

  v1 = result;
  v2 = *(unsigned __int8 *)(result + 24);
  if (v2 <= 0xFD)
    result = sub_1B0F6C7D4(*(_QWORD *)result, *(_QWORD *)(result + 8), *(_QWORD *)(result + 16), v2);
  v3 = *(unsigned __int8 *)(v1 + 56);
  if (v3 <= 0xFD)
    result = sub_1B0F6C7D4(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), v3);
  v4 = *(unsigned __int8 *)(v1 + 88);
  if (v4 <= 0xFD)
    result = sub_1B0F6C7D4(*(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), v4);
  v5 = *(unsigned __int8 *)(v1 + 120);
  if (v5 <= 0xFD)
    result = sub_1B0F6C7D4(*(_QWORD *)(v1 + 96), *(_QWORD *)(v1 + 104), *(_QWORD *)(v1 + 112), v5);
  v6 = *(unsigned __int8 *)(v1 + 152);
  if (v6 <= 0xFD)
    result = sub_1B0F6C7D4(*(_QWORD *)(v1 + 128), *(_QWORD *)(v1 + 136), *(_QWORD *)(v1 + 144), v6);
  v7 = *(unsigned __int8 *)(v1 + 184);
  if (v7 <= 0xFD)
    result = sub_1B0F6C7D4(*(_QWORD *)(v1 + 160), *(_QWORD *)(v1 + 168), *(_QWORD *)(v1 + 176), v7);
  v8 = *(unsigned __int8 *)(v1 + 216);
  if (v8 <= 0xFD)
    result = sub_1B0F6C7D4(*(_QWORD *)(v1 + 192), *(_QWORD *)(v1 + 200), *(_QWORD *)(v1 + 208), v8);
  v9 = *(unsigned __int8 *)(v1 + 248);
  if (v9 <= 0xFD)
    return sub_1B0F6C7D4(*(_QWORD *)(v1 + 224), *(_QWORD *)(v1 + 232), *(_QWORD *)(v1 + 240), v9);
  return result;
}

uint64_t initializeWithCopy for FrameModifier(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v4 = *(unsigned __int8 *)(a2 + 24);
  if (v4 <= 0xFD)
  {
    v5 = *(_QWORD *)a2;
    v6 = *(_QWORD *)(a2 + 8);
    v7 = *(_QWORD *)(a2 + 16);
    sub_1B0F6C708(*(_QWORD *)a2, v6, v7, v4);
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v6;
    *(_QWORD *)(a1 + 16) = v7;
    *(_BYTE *)(a1 + 24) = v4;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  }
  v8 = *(unsigned __int8 *)(a2 + 56);
  if (v8 <= 0xFD)
  {
    v9 = *(_QWORD *)(a2 + 32);
    v10 = *(_QWORD *)(a2 + 40);
    v11 = *(_QWORD *)(a2 + 48);
    sub_1B0F6C708(v9, v10, v11, *(_BYTE *)(a2 + 56));
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v10;
    *(_QWORD *)(a1 + 48) = v11;
    *(_BYTE *)(a1 + 56) = v8;
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  }
  v12 = *(unsigned __int8 *)(a2 + 88);
  if (v12 <= 0xFD)
  {
    v13 = *(_QWORD *)(a2 + 64);
    v14 = *(_QWORD *)(a2 + 72);
    v15 = *(_QWORD *)(a2 + 80);
    sub_1B0F6C708(v13, v14, v15, *(_BYTE *)(a2 + 88));
    *(_QWORD *)(a1 + 64) = v13;
    *(_QWORD *)(a1 + 72) = v14;
    *(_QWORD *)(a1 + 80) = v15;
    *(_BYTE *)(a1 + 88) = v12;
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  }
  v16 = *(unsigned __int8 *)(a2 + 120);
  if (v16 <= 0xFD)
  {
    v17 = *(_QWORD *)(a2 + 96);
    v18 = *(_QWORD *)(a2 + 104);
    v19 = *(_QWORD *)(a2 + 112);
    sub_1B0F6C708(v17, v18, v19, *(_BYTE *)(a2 + 120));
    *(_QWORD *)(a1 + 96) = v17;
    *(_QWORD *)(a1 + 104) = v18;
    *(_QWORD *)(a1 + 112) = v19;
    *(_BYTE *)(a1 + 120) = v16;
  }
  else
  {
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
  }
  v20 = *(unsigned __int8 *)(a2 + 152);
  if (v20 <= 0xFD)
  {
    v21 = *(_QWORD *)(a2 + 128);
    v22 = *(_QWORD *)(a2 + 136);
    v23 = *(_QWORD *)(a2 + 144);
    sub_1B0F6C708(v21, v22, v23, *(_BYTE *)(a2 + 152));
    *(_QWORD *)(a1 + 128) = v21;
    *(_QWORD *)(a1 + 136) = v22;
    *(_QWORD *)(a1 + 144) = v23;
    *(_BYTE *)(a1 + 152) = v20;
  }
  else
  {
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 137) = *(_OWORD *)(a2 + 137);
  }
  v24 = *(unsigned __int8 *)(a2 + 184);
  if (v24 <= 0xFD)
  {
    v25 = *(_QWORD *)(a2 + 160);
    v26 = *(_QWORD *)(a2 + 168);
    v27 = *(_QWORD *)(a2 + 176);
    sub_1B0F6C708(v25, v26, v27, *(_BYTE *)(a2 + 184));
    *(_QWORD *)(a1 + 160) = v25;
    *(_QWORD *)(a1 + 168) = v26;
    *(_QWORD *)(a1 + 176) = v27;
    *(_BYTE *)(a1 + 184) = v24;
  }
  else
  {
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 169) = *(_OWORD *)(a2 + 169);
  }
  v28 = *(unsigned __int8 *)(a2 + 216);
  if (v28 <= 0xFD)
  {
    v29 = *(_QWORD *)(a2 + 192);
    v30 = *(_QWORD *)(a2 + 200);
    v31 = *(_QWORD *)(a2 + 208);
    sub_1B0F6C708(v29, v30, v31, *(_BYTE *)(a2 + 216));
    *(_QWORD *)(a1 + 192) = v29;
    *(_QWORD *)(a1 + 200) = v30;
    *(_QWORD *)(a1 + 208) = v31;
    *(_BYTE *)(a1 + 216) = v28;
  }
  else
  {
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 201) = *(_OWORD *)(a2 + 201);
  }
  v32 = *(unsigned __int8 *)(a2 + 248);
  if (v32 <= 0xFD)
  {
    v33 = *(_QWORD *)(a2 + 224);
    v34 = *(_QWORD *)(a2 + 232);
    v35 = *(_QWORD *)(a2 + 240);
    sub_1B0F6C708(v33, v34, v35, *(_BYTE *)(a2 + 248));
    *(_QWORD *)(a1 + 224) = v33;
    *(_QWORD *)(a1 + 232) = v34;
    *(_QWORD *)(a1 + 240) = v35;
    *(_BYTE *)(a1 + 248) = v32;
  }
  else
  {
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 233) = *(_OWORD *)(a2 + 233);
  }
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  return a1;
}

uint64_t assignWithCopy for FrameModifier(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _OWORD *v17;
  _OWORD *v18;
  unsigned int v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  _OWORD *v32;
  _OWORD *v33;
  unsigned int v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  _OWORD *v47;
  _OWORD *v48;
  unsigned int v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  _OWORD *v62;
  _OWORD *v63;
  unsigned int v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  _OWORD *v77;
  _OWORD *v78;
  unsigned int v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  _OWORD *v92;
  _OWORD *v93;
  unsigned int v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  _OWORD *v107;
  _OWORD *v108;
  unsigned int v109;
  __int128 v110;
  __int128 v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;

  v4 = *((unsigned __int8 *)a2 + 24);
  if (*(unsigned __int8 *)(a1 + 24) <= 0xFDu)
  {
    if (v4 <= 0xFD)
    {
      v10 = *(_QWORD *)a2;
      v11 = *((_QWORD *)a2 + 1);
      v12 = *((_QWORD *)a2 + 2);
      sub_1B0F6C708(*(_QWORD *)a2, v11, v12, v4);
      v13 = *(_QWORD *)a1;
      v14 = *(_QWORD *)(a1 + 8);
      v15 = *(_QWORD *)(a1 + 16);
      *(_QWORD *)a1 = v10;
      *(_QWORD *)(a1 + 8) = v11;
      *(_QWORD *)(a1 + 16) = v12;
      v16 = *(_BYTE *)(a1 + 24);
      *(_BYTE *)(a1 + 24) = v4;
      sub_1B0F6C7D4(v13, v14, v15, v16);
    }
    else
    {
      sub_1B0F7A924(a1);
      v6 = *(__int128 *)((char *)a2 + 9);
      *(_OWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 9) = v6;
    }
  }
  else if (v4 <= 0xFD)
  {
    v7 = *(_QWORD *)a2;
    v8 = *((_QWORD *)a2 + 1);
    v9 = *((_QWORD *)a2 + 2);
    sub_1B0F6C708(*(_QWORD *)a2, v8, v9, v4);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_QWORD *)(a1 + 16) = v9;
    *(_BYTE *)(a1 + 24) = v4;
  }
  else
  {
    v5 = *a2;
    *(_OWORD *)(a1 + 9) = *(__int128 *)((char *)a2 + 9);
    *(_OWORD *)a1 = v5;
  }
  v17 = (_OWORD *)(a1 + 32);
  v18 = a2 + 2;
  v19 = *((unsigned __int8 *)a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) <= 0xFDu)
  {
    if (v19 <= 0xFD)
    {
      v25 = *((_QWORD *)a2 + 4);
      v26 = *((_QWORD *)a2 + 5);
      v27 = *((_QWORD *)a2 + 6);
      sub_1B0F6C708(v25, v26, v27, *((_BYTE *)a2 + 56));
      v28 = *(_QWORD *)(a1 + 32);
      v29 = *(_QWORD *)(a1 + 40);
      v30 = *(_QWORD *)(a1 + 48);
      *(_QWORD *)(a1 + 32) = v25;
      *(_QWORD *)(a1 + 40) = v26;
      *(_QWORD *)(a1 + 48) = v27;
      v31 = *(_BYTE *)(a1 + 56);
      *(_BYTE *)(a1 + 56) = v19;
      sub_1B0F6C7D4(v28, v29, v30, v31);
    }
    else
    {
      sub_1B0F7A924(a1 + 32);
      v21 = *(__int128 *)((char *)a2 + 41);
      *v17 = *v18;
      *(_OWORD *)(a1 + 41) = v21;
    }
  }
  else if (v19 <= 0xFD)
  {
    v22 = *((_QWORD *)a2 + 4);
    v23 = *((_QWORD *)a2 + 5);
    v24 = *((_QWORD *)a2 + 6);
    sub_1B0F6C708(v22, v23, v24, *((_BYTE *)a2 + 56));
    *(_QWORD *)(a1 + 32) = v22;
    *(_QWORD *)(a1 + 40) = v23;
    *(_QWORD *)(a1 + 48) = v24;
    *(_BYTE *)(a1 + 56) = v19;
  }
  else
  {
    v20 = *v18;
    *(_OWORD *)(a1 + 41) = *(__int128 *)((char *)a2 + 41);
    *v17 = v20;
  }
  v32 = (_OWORD *)(a1 + 64);
  v33 = a2 + 4;
  v34 = *((unsigned __int8 *)a2 + 88);
  if (*(unsigned __int8 *)(a1 + 88) <= 0xFDu)
  {
    if (v34 <= 0xFD)
    {
      v40 = *((_QWORD *)a2 + 8);
      v41 = *((_QWORD *)a2 + 9);
      v42 = *((_QWORD *)a2 + 10);
      sub_1B0F6C708(v40, v41, v42, *((_BYTE *)a2 + 88));
      v43 = *(_QWORD *)(a1 + 64);
      v44 = *(_QWORD *)(a1 + 72);
      v45 = *(_QWORD *)(a1 + 80);
      *(_QWORD *)(a1 + 64) = v40;
      *(_QWORD *)(a1 + 72) = v41;
      *(_QWORD *)(a1 + 80) = v42;
      v46 = *(_BYTE *)(a1 + 88);
      *(_BYTE *)(a1 + 88) = v34;
      sub_1B0F6C7D4(v43, v44, v45, v46);
    }
    else
    {
      sub_1B0F7A924(a1 + 64);
      v36 = *(__int128 *)((char *)a2 + 73);
      *v32 = *v33;
      *(_OWORD *)(a1 + 73) = v36;
    }
  }
  else if (v34 <= 0xFD)
  {
    v37 = *((_QWORD *)a2 + 8);
    v38 = *((_QWORD *)a2 + 9);
    v39 = *((_QWORD *)a2 + 10);
    sub_1B0F6C708(v37, v38, v39, *((_BYTE *)a2 + 88));
    *(_QWORD *)(a1 + 64) = v37;
    *(_QWORD *)(a1 + 72) = v38;
    *(_QWORD *)(a1 + 80) = v39;
    *(_BYTE *)(a1 + 88) = v34;
  }
  else
  {
    v35 = *v33;
    *(_OWORD *)(a1 + 73) = *(__int128 *)((char *)a2 + 73);
    *v32 = v35;
  }
  v47 = (_OWORD *)(a1 + 96);
  v48 = a2 + 6;
  v49 = *((unsigned __int8 *)a2 + 120);
  if (*(unsigned __int8 *)(a1 + 120) <= 0xFDu)
  {
    if (v49 <= 0xFD)
    {
      v55 = *((_QWORD *)a2 + 12);
      v56 = *((_QWORD *)a2 + 13);
      v57 = *((_QWORD *)a2 + 14);
      sub_1B0F6C708(v55, v56, v57, *((_BYTE *)a2 + 120));
      v58 = *(_QWORD *)(a1 + 96);
      v59 = *(_QWORD *)(a1 + 104);
      v60 = *(_QWORD *)(a1 + 112);
      *(_QWORD *)(a1 + 96) = v55;
      *(_QWORD *)(a1 + 104) = v56;
      *(_QWORD *)(a1 + 112) = v57;
      v61 = *(_BYTE *)(a1 + 120);
      *(_BYTE *)(a1 + 120) = v49;
      sub_1B0F6C7D4(v58, v59, v60, v61);
    }
    else
    {
      sub_1B0F7A924(a1 + 96);
      v51 = *(__int128 *)((char *)a2 + 105);
      *v47 = *v48;
      *(_OWORD *)(a1 + 105) = v51;
    }
  }
  else if (v49 <= 0xFD)
  {
    v52 = *((_QWORD *)a2 + 12);
    v53 = *((_QWORD *)a2 + 13);
    v54 = *((_QWORD *)a2 + 14);
    sub_1B0F6C708(v52, v53, v54, *((_BYTE *)a2 + 120));
    *(_QWORD *)(a1 + 96) = v52;
    *(_QWORD *)(a1 + 104) = v53;
    *(_QWORD *)(a1 + 112) = v54;
    *(_BYTE *)(a1 + 120) = v49;
  }
  else
  {
    v50 = *v48;
    *(_OWORD *)(a1 + 105) = *(__int128 *)((char *)a2 + 105);
    *v47 = v50;
  }
  v62 = (_OWORD *)(a1 + 128);
  v63 = a2 + 8;
  v64 = *((unsigned __int8 *)a2 + 152);
  if (*(unsigned __int8 *)(a1 + 152) <= 0xFDu)
  {
    if (v64 <= 0xFD)
    {
      v70 = *((_QWORD *)a2 + 16);
      v71 = *((_QWORD *)a2 + 17);
      v72 = *((_QWORD *)a2 + 18);
      sub_1B0F6C708(v70, v71, v72, *((_BYTE *)a2 + 152));
      v73 = *(_QWORD *)(a1 + 128);
      v74 = *(_QWORD *)(a1 + 136);
      v75 = *(_QWORD *)(a1 + 144);
      *(_QWORD *)(a1 + 128) = v70;
      *(_QWORD *)(a1 + 136) = v71;
      *(_QWORD *)(a1 + 144) = v72;
      v76 = *(_BYTE *)(a1 + 152);
      *(_BYTE *)(a1 + 152) = v64;
      sub_1B0F6C7D4(v73, v74, v75, v76);
    }
    else
    {
      sub_1B0F7A924(a1 + 128);
      v66 = *(__int128 *)((char *)a2 + 137);
      *v62 = *v63;
      *(_OWORD *)(a1 + 137) = v66;
    }
  }
  else if (v64 <= 0xFD)
  {
    v67 = *((_QWORD *)a2 + 16);
    v68 = *((_QWORD *)a2 + 17);
    v69 = *((_QWORD *)a2 + 18);
    sub_1B0F6C708(v67, v68, v69, *((_BYTE *)a2 + 152));
    *(_QWORD *)(a1 + 128) = v67;
    *(_QWORD *)(a1 + 136) = v68;
    *(_QWORD *)(a1 + 144) = v69;
    *(_BYTE *)(a1 + 152) = v64;
  }
  else
  {
    v65 = *v63;
    *(_OWORD *)(a1 + 137) = *(__int128 *)((char *)a2 + 137);
    *v62 = v65;
  }
  v77 = (_OWORD *)(a1 + 160);
  v78 = a2 + 10;
  v79 = *((unsigned __int8 *)a2 + 184);
  if (*(unsigned __int8 *)(a1 + 184) <= 0xFDu)
  {
    if (v79 <= 0xFD)
    {
      v85 = *((_QWORD *)a2 + 20);
      v86 = *((_QWORD *)a2 + 21);
      v87 = *((_QWORD *)a2 + 22);
      sub_1B0F6C708(v85, v86, v87, *((_BYTE *)a2 + 184));
      v88 = *(_QWORD *)(a1 + 160);
      v89 = *(_QWORD *)(a1 + 168);
      v90 = *(_QWORD *)(a1 + 176);
      *(_QWORD *)(a1 + 160) = v85;
      *(_QWORD *)(a1 + 168) = v86;
      *(_QWORD *)(a1 + 176) = v87;
      v91 = *(_BYTE *)(a1 + 184);
      *(_BYTE *)(a1 + 184) = v79;
      sub_1B0F6C7D4(v88, v89, v90, v91);
    }
    else
    {
      sub_1B0F7A924(a1 + 160);
      v81 = *(__int128 *)((char *)a2 + 169);
      *v77 = *v78;
      *(_OWORD *)(a1 + 169) = v81;
    }
  }
  else if (v79 <= 0xFD)
  {
    v82 = *((_QWORD *)a2 + 20);
    v83 = *((_QWORD *)a2 + 21);
    v84 = *((_QWORD *)a2 + 22);
    sub_1B0F6C708(v82, v83, v84, *((_BYTE *)a2 + 184));
    *(_QWORD *)(a1 + 160) = v82;
    *(_QWORD *)(a1 + 168) = v83;
    *(_QWORD *)(a1 + 176) = v84;
    *(_BYTE *)(a1 + 184) = v79;
  }
  else
  {
    v80 = *v78;
    *(_OWORD *)(a1 + 169) = *(__int128 *)((char *)a2 + 169);
    *v77 = v80;
  }
  v92 = (_OWORD *)(a1 + 192);
  v93 = a2 + 12;
  v94 = *((unsigned __int8 *)a2 + 216);
  if (*(unsigned __int8 *)(a1 + 216) <= 0xFDu)
  {
    if (v94 <= 0xFD)
    {
      v100 = *((_QWORD *)a2 + 24);
      v101 = *((_QWORD *)a2 + 25);
      v102 = *((_QWORD *)a2 + 26);
      sub_1B0F6C708(v100, v101, v102, *((_BYTE *)a2 + 216));
      v103 = *(_QWORD *)(a1 + 192);
      v104 = *(_QWORD *)(a1 + 200);
      v105 = *(_QWORD *)(a1 + 208);
      *(_QWORD *)(a1 + 192) = v100;
      *(_QWORD *)(a1 + 200) = v101;
      *(_QWORD *)(a1 + 208) = v102;
      v106 = *(_BYTE *)(a1 + 216);
      *(_BYTE *)(a1 + 216) = v94;
      sub_1B0F6C7D4(v103, v104, v105, v106);
    }
    else
    {
      sub_1B0F7A924(a1 + 192);
      v96 = *(__int128 *)((char *)a2 + 201);
      *v92 = *v93;
      *(_OWORD *)(a1 + 201) = v96;
    }
  }
  else if (v94 <= 0xFD)
  {
    v97 = *((_QWORD *)a2 + 24);
    v98 = *((_QWORD *)a2 + 25);
    v99 = *((_QWORD *)a2 + 26);
    sub_1B0F6C708(v97, v98, v99, *((_BYTE *)a2 + 216));
    *(_QWORD *)(a1 + 192) = v97;
    *(_QWORD *)(a1 + 200) = v98;
    *(_QWORD *)(a1 + 208) = v99;
    *(_BYTE *)(a1 + 216) = v94;
  }
  else
  {
    v95 = *v93;
    *(_OWORD *)(a1 + 201) = *(__int128 *)((char *)a2 + 201);
    *v92 = v95;
  }
  v107 = (_OWORD *)(a1 + 224);
  v108 = a2 + 14;
  v109 = *((unsigned __int8 *)a2 + 248);
  if (*(unsigned __int8 *)(a1 + 248) <= 0xFDu)
  {
    if (v109 <= 0xFD)
    {
      v115 = *((_QWORD *)a2 + 28);
      v116 = *((_QWORD *)a2 + 29);
      v117 = *((_QWORD *)a2 + 30);
      sub_1B0F6C708(v115, v116, v117, *((_BYTE *)a2 + 248));
      v118 = *(_QWORD *)(a1 + 224);
      v119 = *(_QWORD *)(a1 + 232);
      v120 = *(_QWORD *)(a1 + 240);
      *(_QWORD *)(a1 + 224) = v115;
      *(_QWORD *)(a1 + 232) = v116;
      *(_QWORD *)(a1 + 240) = v117;
      v121 = *(_BYTE *)(a1 + 248);
      *(_BYTE *)(a1 + 248) = v109;
      sub_1B0F6C7D4(v118, v119, v120, v121);
    }
    else
    {
      sub_1B0F7A924(a1 + 224);
      v111 = *(__int128 *)((char *)a2 + 233);
      *v107 = *v108;
      *(_OWORD *)(a1 + 233) = v111;
    }
  }
  else if (v109 <= 0xFD)
  {
    v112 = *((_QWORD *)a2 + 28);
    v113 = *((_QWORD *)a2 + 29);
    v114 = *((_QWORD *)a2 + 30);
    sub_1B0F6C708(v112, v113, v114, *((_BYTE *)a2 + 248));
    *(_QWORD *)(a1 + 224) = v112;
    *(_QWORD *)(a1 + 232) = v113;
    *(_QWORD *)(a1 + 240) = v114;
    *(_BYTE *)(a1 + 248) = v109;
  }
  else
  {
    v110 = *v108;
    *(_OWORD *)(a1 + 233) = *(__int128 *)((char *)a2 + 233);
    *v107 = v110;
  }
  *(_QWORD *)(a1 + 256) = *((_QWORD *)a2 + 32);
  *(_QWORD *)(a1 + 264) = *((_QWORD *)a2 + 33);
  return a1;
}

void *__swift_memcpy272_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x110uLL);
}

uint64_t assignWithTake for FrameModifier(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int v46;
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v4 = *(unsigned __int8 *)(a1 + 24);
  if (v4 > 0xFD)
    goto LABEL_4;
  v5 = *(unsigned __int8 *)(a2 + 24);
  if (v5 > 0xFD)
  {
    sub_1B0F7A924(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
    goto LABEL_6;
  }
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v5;
  sub_1B0F6C7D4(v7, v8, v9, v4);
LABEL_6:
  v10 = *(unsigned __int8 *)(a1 + 56);
  if (v10 > 0xFD)
  {
LABEL_9:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
    goto LABEL_11;
  }
  v11 = *(unsigned __int8 *)(a2 + 56);
  if (v11 > 0xFD)
  {
    sub_1B0F7A924(a1 + 32);
    goto LABEL_9;
  }
  v12 = *(_QWORD *)(a2 + 48);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 40);
  v15 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = v12;
  *(_BYTE *)(a1 + 56) = v11;
  sub_1B0F6C7D4(v13, v14, v15, v10);
LABEL_11:
  v16 = *(unsigned __int8 *)(a1 + 88);
  if (v16 > 0xFD)
  {
LABEL_14:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
    goto LABEL_16;
  }
  v17 = *(unsigned __int8 *)(a2 + 88);
  if (v17 > 0xFD)
  {
    sub_1B0F7A924(a1 + 64);
    goto LABEL_14;
  }
  v18 = *(_QWORD *)(a2 + 80);
  v19 = *(_QWORD *)(a1 + 64);
  v20 = *(_QWORD *)(a1 + 72);
  v21 = *(_QWORD *)(a1 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = v18;
  *(_BYTE *)(a1 + 88) = v17;
  sub_1B0F6C7D4(v19, v20, v21, v16);
LABEL_16:
  v22 = *(unsigned __int8 *)(a1 + 120);
  if (v22 > 0xFD)
  {
LABEL_19:
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
    goto LABEL_21;
  }
  v23 = *(unsigned __int8 *)(a2 + 120);
  if (v23 > 0xFD)
  {
    sub_1B0F7A924(a1 + 96);
    goto LABEL_19;
  }
  v24 = *(_QWORD *)(a2 + 112);
  v25 = *(_QWORD *)(a1 + 96);
  v26 = *(_QWORD *)(a1 + 104);
  v27 = *(_QWORD *)(a1 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 112) = v24;
  *(_BYTE *)(a1 + 120) = v23;
  sub_1B0F6C7D4(v25, v26, v27, v22);
LABEL_21:
  v28 = *(unsigned __int8 *)(a1 + 152);
  if (v28 > 0xFD)
  {
LABEL_24:
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 137) = *(_OWORD *)(a2 + 137);
    goto LABEL_26;
  }
  v29 = *(unsigned __int8 *)(a2 + 152);
  if (v29 > 0xFD)
  {
    sub_1B0F7A924(a1 + 128);
    goto LABEL_24;
  }
  v30 = *(_QWORD *)(a2 + 144);
  v31 = *(_QWORD *)(a1 + 128);
  v32 = *(_QWORD *)(a1 + 136);
  v33 = *(_QWORD *)(a1 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 144) = v30;
  *(_BYTE *)(a1 + 152) = v29;
  sub_1B0F6C7D4(v31, v32, v33, v28);
LABEL_26:
  v34 = *(unsigned __int8 *)(a1 + 184);
  if (v34 > 0xFD)
  {
LABEL_29:
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 169) = *(_OWORD *)(a2 + 169);
    goto LABEL_31;
  }
  v35 = *(unsigned __int8 *)(a2 + 184);
  if (v35 > 0xFD)
  {
    sub_1B0F7A924(a1 + 160);
    goto LABEL_29;
  }
  v36 = *(_QWORD *)(a2 + 176);
  v37 = *(_QWORD *)(a1 + 160);
  v38 = *(_QWORD *)(a1 + 168);
  v39 = *(_QWORD *)(a1 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 176) = v36;
  *(_BYTE *)(a1 + 184) = v35;
  sub_1B0F6C7D4(v37, v38, v39, v34);
LABEL_31:
  v40 = *(unsigned __int8 *)(a1 + 216);
  if (v40 > 0xFD)
  {
LABEL_34:
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 201) = *(_OWORD *)(a2 + 201);
    goto LABEL_36;
  }
  v41 = *(unsigned __int8 *)(a2 + 216);
  if (v41 > 0xFD)
  {
    sub_1B0F7A924(a1 + 192);
    goto LABEL_34;
  }
  v42 = *(_QWORD *)(a2 + 208);
  v43 = *(_QWORD *)(a1 + 192);
  v44 = *(_QWORD *)(a1 + 200);
  v45 = *(_QWORD *)(a1 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 208) = v42;
  *(_BYTE *)(a1 + 216) = v41;
  sub_1B0F6C7D4(v43, v44, v45, v40);
LABEL_36:
  v46 = *(unsigned __int8 *)(a1 + 248);
  if (v46 <= 0xFD)
  {
    v47 = *(unsigned __int8 *)(a2 + 248);
    if (v47 <= 0xFD)
    {
      v48 = *(_QWORD *)(a2 + 240);
      v49 = *(_QWORD *)(a1 + 224);
      v50 = *(_QWORD *)(a1 + 232);
      v51 = *(_QWORD *)(a1 + 240);
      *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 240) = v48;
      *(_BYTE *)(a1 + 248) = v47;
      sub_1B0F6C7D4(v49, v50, v51, v46);
      goto LABEL_41;
    }
    sub_1B0F7A924(a1 + 224);
  }
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 233) = *(_OWORD *)(a2 + 233);
LABEL_41:
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  return a1;
}

uint64_t getEnumTagSinglePayload for FrameModifier(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 272))
    return (*(_DWORD *)a1 + 126);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if ((v3 & 0x7E) != 0)
    v4 = 126 - (v3 & 0x7E | (v3 >> 7));
  else
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FrameModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(_QWORD *)(result + 264) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 272) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 272) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_BYTE *)(result + 24) = (a2 ^ 0x7F) & 0xFE | ((a2 ^ 0x7F) << 7);
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FrameModifier()
{
  return &type metadata for FrameModifier;
}

uint64_t sub_1B103243C(char a1)
{
  return *(_QWORD *)&aWidth_6[8 * a1];
}

uint64_t sub_1B103245C(char *a1, char *a2)
{
  return sub_1B100E87C(*a1, *a2);
}

uint64_t sub_1B1032468()
{
  sub_1B103620C();
  sub_1B1013014();
  return sub_1B103623C();
}

uint64_t sub_1B10324AC()
{
  return sub_1B1013014();
}

uint64_t sub_1B10324B4()
{
  sub_1B103620C();
  sub_1B1013014();
  return sub_1B103623C();
}

uint64_t sub_1B10324F4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1034418();
  *a1 = result;
  return result;
}

uint64_t sub_1B1032520@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1B103243C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1B1032548()
{
  char *v0;

  return sub_1B103243C(*v0);
}

uint64_t sub_1B1032550@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1B1034418();
  *a1 = result;
  return result;
}

void sub_1B1032574(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_1B1032580()
{
  sub_1B1033F2C();
  return sub_1B10362B4();
}

uint64_t sub_1B10325A8()
{
  sub_1B1033F2C();
  return sub_1B10362C0();
}

uint64_t sub_1B10325D0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[3];
  int v37;
  int v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unsigned __int8 v77;
  uint64_t v78;

  v78 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1A88);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B1033F2C();
  sub_1B1036278();
  if (!v2)
  {
    v72 = v5;
    v73 = 0;
    v8 = sub_1B0F7E5F8();
    sub_1B10360A4();
    v9 = v7;
    v71 = a1;
    v11 = v74;
    v12 = v75;
    v13 = v76;
    v14 = v9;
    v15 = v8;
    LODWORD(v8) = v77;
    v73 = 1;
    sub_1B0F6C6F4(v74, v75, v76, v77);
    v70 = v15;
    sub_1B10360A4();
    v64 = v11;
    v65 = v12;
    v66 = v13;
    v67 = v8;
    v16 = v74;
    v17 = v75;
    v18 = v76;
    v73 = 3;
    LODWORD(v15) = v77;
    sub_1B0F6C6F4(v74, v75, v76, v77);
    v63 = v14;
    sub_1B10360A4();
    v68 = v16;
    v69 = v17;
    v60 = v18;
    v61 = v15;
    v19 = v74;
    v20 = v76;
    LODWORD(v16) = v77;
    v73 = 4;
    v62 = v75;
    sub_1B0F6C6F4(v74, v75, v76, v77);
    sub_1B10360A4();
    v59 = v19;
    v40 = v16;
    v41 = v20;
    v21 = v74;
    v22 = v75;
    v23 = v76;
    LODWORD(v19) = v77;
    v73 = 5;
    sub_1B0F6C6F4(v74, v75, v76, v77);
    v39 = 0;
    sub_1B10360A4();
    v43 = v19;
    v42 = v23;
    v44 = v21;
    v45 = v22;
    v24 = v74;
    v25 = v75;
    v26 = v76;
    LODWORD(v19) = v77;
    v73 = 6;
    sub_1B0F6C6F4(v74, v75, v76, v77);
    sub_1B10360A4();
    v58 = v19;
    v56 = v25;
    v57 = v26;
    v55 = v24;
    v27 = v74;
    v28 = v75;
    v29 = v76;
    LODWORD(v19) = v77;
    v73 = 7;
    sub_1B0F6C6F4(v74, v75, v76, v77);
    sub_1B10360A4();
    v54 = v19;
    v52 = v28;
    v53 = v29;
    v51 = v27;
    v30 = v74;
    v31 = v75;
    v32 = v76;
    LODWORD(v28) = v77;
    v73 = 8;
    sub_1B0F6C6F4(v74, v75, v76, v77);
    sub_1B10360A4();
    v38 = v28;
    v49 = v31;
    v50 = v32;
    v48 = v30;
    v33 = v76;
    LODWORD(v30) = v77;
    v73 = 2;
    v34 = v74;
    v35 = v75;
    sub_1B0F6C6F4(v74, v75, v76, v77);
    sub_1B0FB0E9C();
    sub_1B10360A4();
    v70 = 0;
    v37 = v30;
    v36[2] = v33;
    v46 = v34;
    v47 = v35;
    __asm { BR              X10 }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1B1033040()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;

  *(_QWORD *)(v0 + 32) = sub_1B1035990();
  *(_QWORD *)(v0 + 8) = v4;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 296) + 8))(v2, v1);
  v5 = *(_QWORD *)(v0 + 240);
  *(_QWORD *)(v0 + 304) = *(_QWORD *)(v0 + 232);
  *(_QWORD *)(v0 + 312) = v5;
  *(_QWORD *)(v0 + 320) = *(_QWORD *)(v0 + 248);
  *(_BYTE *)(v0 + 328) = *(_DWORD *)(v0 + 260);
  v6 = *(_QWORD *)(v0 + 272);
  *(_QWORD *)(v0 + 336) = *(_QWORD *)(v0 + 264);
  *(_QWORD *)(v0 + 344) = v6;
  *(_QWORD *)(v0 + 352) = *(_QWORD *)(v0 + 200);
  *(_BYTE *)(v0 + 360) = *(_DWORD *)(v0 + 212);
  v7 = *(_QWORD *)(v0 + 216);
  *(_QWORD *)(v0 + 368) = *(_QWORD *)(v0 + 192);
  *(_QWORD *)(v0 + 376) = v7;
  *(_QWORD *)(v0 + 384) = *(_QWORD *)(v0 + 48);
  *(_BYTE *)(v0 + 392) = *(_DWORD *)(v0 + 44);
  v8 = *(_QWORD *)(v0 + 80);
  *(_QWORD *)(v0 + 400) = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 408) = v8;
  *(_QWORD *)(v0 + 416) = *(_QWORD *)(v0 + 56);
  *(_BYTE *)(v0 + 424) = *(_DWORD *)(v0 + 68);
  v9 = *(_QWORD *)(v0 + 168);
  *(_QWORD *)(v0 + 432) = *(_QWORD *)(v0 + 160);
  *(_QWORD *)(v0 + 440) = v9;
  *(_QWORD *)(v0 + 448) = *(_QWORD *)(v0 + 176);
  *(_BYTE *)(v0 + 456) = *(_DWORD *)(v0 + 188);
  v10 = *(_QWORD *)(v0 + 120);
  v11 = *(_QWORD *)(v0 + 136);
  *(_QWORD *)(v0 + 464) = *(_QWORD *)(v0 + 128);
  *(_QWORD *)(v0 + 472) = v11;
  *(_QWORD *)(v0 + 480) = *(_QWORD *)(v0 + 144);
  *(_BYTE *)(v0 + 488) = *(_DWORD *)(v0 + 156);
  v13 = *(_QWORD *)(v0 + 104);
  v12 = *(_QWORD *)(v0 + 112);
  *(_QWORD *)(v0 + 496) = v13;
  *(_QWORD *)(v0 + 504) = v12;
  *(_QWORD *)(v0 + 512) = v10;
  v14 = *(_DWORD *)(v0 + 24);
  v15 = *(_DWORD *)(v0 + 28);
  *(_BYTE *)(v0 + 520) = v15;
  v17 = *(_QWORD *)(v0 + 88);
  v16 = *(_QWORD *)(v0 + 96);
  *(_QWORD *)(v0 + 528) = v17;
  *(_QWORD *)(v0 + 536) = v16;
  v18 = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 544) = v18;
  *(_BYTE *)(v0 + 552) = v14;
  *(_QWORD *)(v0 + 560) = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v0 + 568) = *(_QWORD *)(v0 + 8);
  sub_1B1033F70(v0 + 304, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B0F6C6F4);
  sub_1B0F6C7C0(v17, v16, v18, v14);
  sub_1B0F6C7C0(v13, v12, v10, v15);
  sub_1B0F6C7C0(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_DWORD *)(v0 + 156));
  sub_1B0F6C7C0(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_DWORD *)(v0 + 188));
  sub_1B0F6C7C0(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 56), *(_DWORD *)(v0 + 68));
  sub_1B0F6C7C0(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 48), *(_DWORD *)(v0 + 44));
  v19 = *(_QWORD *)(v0 + 264);
  v20 = *(_QWORD *)(v0 + 272);
  v21 = *(_QWORD *)(v0 + 200);
  v22 = *(_DWORD *)(v0 + 212);
  sub_1B0F6C7C0(v19, v20, v21, v22);
  v24 = *(_QWORD *)(v0 + 232);
  v23 = *(_QWORD *)(v0 + 240);
  v25 = *(_QWORD *)(v0 + 248);
  LODWORD(v18) = *(_DWORD *)(v0 + 260);
  sub_1B0F6C7C0(v24, v23, v25, v18);
  memcpy(*(void **)(v3 - 72), (const void *)(v0 + 304), 0x110uLL);
  __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v0 + 288));
  *(_QWORD *)(v0 + 576) = v24;
  *(_QWORD *)(v0 + 584) = v23;
  *(_QWORD *)(v0 + 592) = v25;
  *(_BYTE *)(v0 + 600) = v18;
  *(_QWORD *)(v0 + 608) = v19;
  *(_QWORD *)(v0 + 616) = v20;
  *(_DWORD *)(v0 + 601) = *(_DWORD *)(v3 - 95);
  *(_DWORD *)(v0 + 604) = *(_DWORD *)(v3 - 92);
  *(_QWORD *)(v0 + 624) = v21;
  *(_BYTE *)(v0 + 632) = v22;
  *(_DWORD *)(v0 + 633) = *(_DWORD *)(v3 - 102);
  *(_DWORD *)(v0 + 636) = *(_DWORD *)(v3 - 99);
  *(_QWORD *)(v0 + 640) = *(_QWORD *)(v0 + 192);
  *(_QWORD *)(v0 + 648) = *(_QWORD *)(v0 + 216);
  *(_QWORD *)(v0 + 656) = *(_QWORD *)(v0 + 48);
  *(_BYTE *)(v0 + 664) = *(_DWORD *)(v0 + 44);
  *(_DWORD *)(v0 + 665) = *(_DWORD *)(v3 - 109);
  *(_DWORD *)(v0 + 668) = *(_DWORD *)(v3 - 106);
  *(_QWORD *)(v0 + 672) = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 680) = *(_QWORD *)(v0 + 80);
  *(_QWORD *)(v0 + 688) = *(_QWORD *)(v0 + 56);
  *(_BYTE *)(v0 + 696) = *(_DWORD *)(v0 + 68);
  *(_DWORD *)(v0 + 697) = *(_DWORD *)(v3 - 116);
  *(_DWORD *)(v0 + 700) = *(_DWORD *)(v3 - 113);
  *(_QWORD *)(v0 + 704) = *(_QWORD *)(v0 + 160);
  *(_QWORD *)(v0 + 712) = *(_QWORD *)(v0 + 168);
  *(_QWORD *)(v0 + 720) = *(_QWORD *)(v0 + 176);
  *(_BYTE *)(v0 + 728) = *(_DWORD *)(v0 + 188);
  v26 = *(_DWORD *)(v3 - 123);
  *(_DWORD *)(v0 + 732) = *(_DWORD *)(v3 - 120);
  *(_DWORD *)(v0 + 729) = v26;
  *(_QWORD *)(v0 + 736) = *(_QWORD *)(v0 + 128);
  *(_QWORD *)(v0 + 744) = *(_QWORD *)(v0 + 136);
  *(_QWORD *)(v0 + 752) = *(_QWORD *)(v0 + 144);
  *(_BYTE *)(v0 + 760) = *(_DWORD *)(v0 + 156);
  *(_DWORD *)(v0 + 764) = *(_DWORD *)(v3 - 127);
  *(_DWORD *)(v0 + 761) = *(_DWORD *)(v3 - 130);
  *(_QWORD *)(v0 + 768) = *(_QWORD *)(v0 + 104);
  *(_QWORD *)(v0 + 776) = *(_QWORD *)(v0 + 112);
  *(_QWORD *)(v0 + 784) = *(_QWORD *)(v0 + 120);
  *(_BYTE *)(v0 + 792) = *(_DWORD *)(v0 + 28);
  *(_DWORD *)(v0 + 796) = *(_DWORD *)(v3 - 134);
  *(_DWORD *)(v0 + 793) = *(_DWORD *)(v3 - 137);
  *(_QWORD *)(v0 + 800) = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(v0 + 808) = *(_QWORD *)(v0 + 96);
  *(_QWORD *)(v0 + 816) = *(_QWORD *)(v0 + 16);
  *(_BYTE *)(v0 + 824) = *(_DWORD *)(v0 + 24);
  v27 = *(_DWORD *)(v3 - 144);
  *(_DWORD *)(v0 + 828) = *(_DWORD *)(v3 - 141);
  *(_DWORD *)(v0 + 825) = v27;
  *(_QWORD *)(v0 + 832) = *(_QWORD *)(v0 + 32);
  *(_QWORD *)(v0 + 840) = *(_QWORD *)(v0 + 8);
  sub_1B1033F70(v0 + 576, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1B0F6C7C0);
  JUMPOUT(0x1B10326E0);
}

uint64_t sub_1B10333E8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  _QWORD *v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  uint64_t v46;
  _QWORD v50[2];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  _QWORD v55[3];

  v5 = a1;
  v6 = *(unsigned __int8 *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v7 = *(_QWORD *)(v3 + 40);
  v9 = *(_QWORD *)(v3 + 48);
  v10 = *(unsigned __int8 *)(v3 + 56);
  if (v6 < 0xFE)
  {
    v46 = *(_QWORD *)(v3 + 32);
    v17 = *(_QWORD *)(v3 + 8);
    v18 = *(_QWORD *)(v3 + 16);
    v51 = *(_QWORD *)v3;
    v52 = v17;
    v53 = v18;
    v54 = v6;
    sub_1B0F6C708(v51, v17, v18, v6);
    sub_1B0FA70A4(a2);
    sub_1B0F6C7C0(v51, v17, v18, v6);
    if (v10 > 0xFD)
    {
      v5 = a1;
LABEL_12:
      v19 = v5[4];
      __swift_project_boxed_opaque_existential_1(v5, v5[3]);
      v20 = sub_1B103497C();
      a3[3] = v20;
      v50[0] = v19;
      v50[1] = MEMORY[0x1E0CD8D70];
      a3[4] = MEMORY[0x1B5E15188](MEMORY[0x1E0CD9C20], v20, v50);
      __swift_allocate_boxed_opaque_existential_1(a3);
      return sub_1B103557C();
    }
    v8 = v46;
    v5 = a1;
LABEL_11:
    v51 = v8;
    v52 = v7;
    v53 = v9;
    v54 = v10;
    sub_1B0F6C708(v8, v7, v9, v10);
    sub_1B0FA70A4(a2);
    sub_1B0F6C7C0(v8, v7, v9, v10);
    goto LABEL_12;
  }
  if (v10 <= 0xFD)
    goto LABEL_11;
  v11 = *(unsigned __int8 *)(v3 + 88);
  v12 = *(_QWORD *)(v3 + 96);
  v13 = *(_QWORD *)(v3 + 104);
  v14 = *(unsigned __int8 *)(v3 + 120);
  v15 = *(_QWORD *)(v3 + 128);
  v42 = *(_QWORD *)(v3 + 136);
  v40 = *(_QWORD *)(v3 + 112);
  v41 = *(_QWORD *)(v3 + 144);
  v16 = *(unsigned __int8 *)(v3 + 152);
  v33 = *(_QWORD *)(v3 + 168);
  v34 = *(_QWORD *)(v3 + 160);
  v32 = *(_QWORD *)(v3 + 176);
  v45 = *(unsigned __int8 *)(v3 + 184);
  v30 = *(_QWORD *)(v3 + 200);
  v31 = *(_QWORD *)(v3 + 192);
  v37 = *(_QWORD *)(v3 + 232);
  v38 = *(_QWORD *)(v3 + 224);
  v35 = *(_QWORD *)(v3 + 208);
  v36 = *(_QWORD *)(v3 + 240);
  v43 = *(unsigned __int8 *)(v3 + 216);
  v44 = *(unsigned __int8 *)(v3 + 248);
  if (v11 > 0xFD)
  {
    if (v14 <= 0xFD)
      goto LABEL_5;
LABEL_14:
    if (v16 > 0xFD)
      goto LABEL_15;
    goto LABEL_6;
  }
  v29 = *(_QWORD *)(v3 + 104);
  v22 = *(_QWORD *)(v3 + 72);
  v39 = *(_QWORD *)(v3 + 96);
  v23 = *(unsigned __int8 *)(v3 + 152);
  v24 = *(_QWORD *)(v3 + 80);
  v51 = *(_QWORD *)(v3 + 64);
  v52 = v22;
  v53 = v24;
  v54 = v11;
  sub_1B0F6C708(v51, v22, v24, v11);
  sub_1B0FA70A4(a2);
  v25 = v22;
  v13 = v29;
  v26 = v24;
  v16 = v23;
  v12 = v39;
  sub_1B0F6C7C0(v51, v25, v26, v11);
  if (v14 > 0xFD)
    goto LABEL_14;
LABEL_5:
  v51 = v12;
  v52 = v13;
  v53 = v40;
  v54 = v14;
  sub_1B0F6C708(v12, v13, v40, v14);
  sub_1B0FA70A4(a2);
  sub_1B0F6C7C0(v12, v13, v40, v14);
  if (v16 <= 0xFD)
  {
LABEL_6:
    v51 = v15;
    v52 = v42;
    v53 = v41;
    v54 = v16;
    sub_1B0F6C708(v15, v42, v41, v16);
    sub_1B0FA70A4(a2);
    sub_1B0F6C7C0(v15, v42, v41, v16);
  }
LABEL_15:
  if (v45 <= 0xFD)
  {
    v51 = v34;
    v52 = v33;
    v53 = v32;
    v54 = v45;
    sub_1B0F6C708(v34, v33, v32, v45);
    sub_1B0FA70A4(a2);
    sub_1B0F6C7C0(v34, v33, v32, v45);
  }
  if (v43 <= 0xFD)
  {
    v51 = v31;
    v52 = v30;
    v53 = v35;
    v54 = v43;
    sub_1B0F6C708(v31, v30, v35, v43);
    sub_1B0FA70A4(a2);
    sub_1B0F6C7C0(v31, v30, v35, v43);
  }
  if (v44 <= 0xFD)
  {
    v51 = v38;
    v52 = v37;
    v53 = v36;
    v54 = v44;
    sub_1B0F6C708(v38, v37, v36, v44);
    sub_1B0FA70A4(a2);
    sub_1B0F6C7C0(v38, v37, v36, v44);
  }
  v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v28 = sub_1B103497C();
  a3[3] = v28;
  v55[0] = v27;
  v55[1] = MEMORY[0x1E0CDA228];
  a3[4] = MEMORY[0x1B5E15188](MEMORY[0x1E0CD9C20], v28, v55);
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1B1035588();
}

uint64_t sub_1B10339F4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1B10333E8(a1, a2, a3);
}

uint64_t sub_1B1033A08@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B10325D0(a1, a2);
}

uint64_t sub_1B1033A28@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B103605C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B1033A78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1B10343F8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1B1033AA0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1B103605C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1B1033AF4()
{
  sub_1B1033EE8();
  return sub_1B10362B4();
}

uint64_t sub_1B1033B1C()
{
  sub_1B1033EE8();
  return sub_1B10362C0();
}

uint64_t sub_1B1033B44@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  __int128 v12;
  uint64_t v13;
  char v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEE1A78);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1B1033EE8();
  sub_1B1036278();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EEEDE7E8);
    sub_1B0F5A7E4((unint64_t *)&qword_1EEEDE7F0, &qword_1EEEDE7E8, (uint64_t)&protocol conformance descriptor for Referenceable<A>);
    sub_1B10360A4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v9 = v13;
    v10 = v14;
    *(_OWORD *)a2 = v12;
    *(_QWORD *)(a2 + 16) = v9;
    *(_BYTE *)(a2 + 24) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1B1033C98@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  void *v4;
  int v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];

  v7 = *(unsigned __int8 *)(v3 + 24);
  if (v7 != 255)
  {
    v9 = *(_QWORD *)v3;
    v10 = *(_QWORD *)(v3 + 8);
    v11 = *(_QWORD *)(v3 + 16);
    sub_1B0F5E604(*(_QWORD *)v3, v10, v11, v7 & 1);
    sub_1B0FD7528(a2, v9, v10, v11, v7 & 1);
    if (v4)

    sub_1B0F5FD28(v9, v10, v11, v7);
  }
  v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EEEE1A68);
  v13 = sub_1B103497C();
  a3[3] = v13;
  v15[0] = v12;
  v15[1] = sub_1B0F5A7E4(&qword_1EEEE1A70, &qword_1EEEE1A68, MEMORY[0x1E0CD89F0]);
  a3[4] = MEMORY[0x1B5E15188](MEMORY[0x1E0CD9C20], v13, v15);
  __swift_allocate_boxed_opaque_existential_1(a3);
  return sub_1B10355D0();
}

uint64_t sub_1B1033E04@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1B1033B44(a1, a2);
}

unint64_t sub_1B1033E18(uint64_t a1)
{
  unint64_t result;

  result = sub_1B1033E3C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B1033E3C()
{
  unint64_t result;

  result = qword_1EEEE1A58;
  if (!qword_1EEEE1A58)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104B6DC, &type metadata for ClippedModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE1A58);
  }
  return result;
}

unint64_t sub_1B1033E80(uint64_t a1)
{
  unint64_t result;

  result = sub_1B1033EA4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1B1033EA4()
{
  unint64_t result;

  result = qword_1EEEE1A60;
  if (!qword_1EEEE1A60)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104B6B4, &type metadata for FrameModifier);
    atomic_store(result, (unint64_t *)&qword_1EEEE1A60);
  }
  return result;
}

unint64_t sub_1B1033EE8()
{
  unint64_t result;

  result = qword_1EEEE1A80;
  if (!qword_1EEEE1A80)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104B978, &type metadata for ClippedModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1A80);
  }
  return result;
}

unint64_t sub_1B1033F2C()
{
  unint64_t result;

  result = qword_1EEEE1A90;
  if (!qword_1EEEE1A90)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104B928, &type metadata for FrameModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1A90);
  }
  return result;
}

uint64_t sub_1B1033F70(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 72);
  v13 = *(_QWORD *)(a1 + 80);
  v14 = *(_QWORD *)(a1 + 64);
  v17 = *(_QWORD *)(a1 + 104);
  v18 = *(_QWORD *)(a1 + 96);
  v16 = *(_QWORD *)(a1 + 112);
  v21 = *(_QWORD *)(a1 + 136);
  v22 = *(_QWORD *)(a1 + 128);
  v20 = *(_QWORD *)(a1 + 144);
  v24 = *(_QWORD *)(a1 + 168);
  v25 = *(_QWORD *)(a1 + 160);
  v23 = *(_QWORD *)(a1 + 176);
  v29 = *(_QWORD *)(a1 + 192);
  v27 = *(_QWORD *)(a1 + 208);
  v28 = *(_QWORD *)(a1 + 200);
  v31 = *(_QWORD *)(a1 + 232);
  v32 = *(_QWORD *)(a1 + 224);
  v30 = *(_QWORD *)(a1 + 240);
  v8 = *(unsigned __int8 *)(a1 + 56);
  v9 = *(unsigned __int8 *)(a1 + 88);
  v10 = *(unsigned __int8 *)(a1 + 120);
  v11 = *(unsigned __int8 *)(a1 + 152);
  v15 = *(unsigned __int8 *)(a1 + 184);
  v19 = *(unsigned __int8 *)(a1 + 216);
  v26 = *(unsigned __int8 *)(a1 + 248);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24));
  a2(v4, v5, v6, v8);
  a2(v14, v7, v13, v9);
  a2(v18, v17, v16, v10);
  a2(v22, v21, v20, v11);
  a2(v25, v24, v23, v15);
  a2(v29, v28, v27, v19);
  a2(v32, v31, v30, v26);
  return a1;
}

uint64_t storeEnumTagSinglePayload for FrameModifier.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1B103412C + 4 * byte_1B104B67F[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1B1034160 + 4 * byte_1B104B67A[v4]))();
}

uint64_t sub_1B1034160(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1034168(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1B1034170);
  return result;
}

uint64_t sub_1B103417C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1B1034184);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1B1034188(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1B1034190(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FrameModifier.CodingKeys()
{
  return &type metadata for FrameModifier.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ClippedModifier.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1B10341EC + 4 * byte_1B104B684[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1B103420C + 4 * byte_1B104B689[v4]))();
}

_BYTE *sub_1B10341EC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1B103420C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B1034214(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B103421C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1B1034224(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1B103422C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ClippedModifier.CodingKeys()
{
  return &type metadata for ClippedModifier.CodingKeys;
}

unint64_t sub_1B103424C()
{
  unint64_t result;

  result = qword_1EEEE1A98;
  if (!qword_1EEEE1A98)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104B810, &type metadata for ClippedModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1A98);
  }
  return result;
}

unint64_t sub_1B1034294()
{
  unint64_t result;

  result = qword_1EEEE1AA0;
  if (!qword_1EEEE1AA0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104B900, &type metadata for FrameModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1AA0);
  }
  return result;
}

unint64_t sub_1B10342DC()
{
  unint64_t result;

  result = qword_1EEEE1AA8;
  if (!qword_1EEEE1AA8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104B838, &type metadata for FrameModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1AA8);
  }
  return result;
}

unint64_t sub_1B1034324()
{
  unint64_t result;

  result = qword_1EEEE1AB0;
  if (!qword_1EEEE1AB0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104B860, &type metadata for FrameModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1AB0);
  }
  return result;
}

unint64_t sub_1B103436C()
{
  unint64_t result;

  result = qword_1EEEE1AB8;
  if (!qword_1EEEE1AB8)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104B748, &type metadata for ClippedModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1AB8);
  }
  return result;
}

unint64_t sub_1B10343B4()
{
  unint64_t result;

  result = qword_1EEEE1AC0;
  if (!qword_1EEEE1AC0)
  {
    result = MEMORY[0x1B5E15188](&unk_1B104B770, &type metadata for ClippedModifier.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EEEE1AC0);
  }
  return result;
}

uint64_t sub_1B10343F8()
{
  return 0x61696C6169746E61;
}

uint64_t sub_1B1034418()
{
  unint64_t v0;

  v0 = sub_1B103605C();
  swift_bridgeObjectRelease();
  if (v0 >= 9)
    return 9;
  else
    return v0;
}

uint64_t sub_1B1034460()
{
  return MEMORY[0x1E0CADEB0]();
}

uint64_t sub_1B103446C()
{
  return MEMORY[0x1E0CADEE8]();
}

uint64_t sub_1B1034478()
{
  return MEMORY[0x1E0CADF08]();
}

uint64_t sub_1B1034484()
{
  return MEMORY[0x1E0CADF10]();
}

uint64_t sub_1B1034490()
{
  return MEMORY[0x1E0CADF18]();
}

uint64_t sub_1B103449C()
{
  return MEMORY[0x1E0CADF30]();
}

uint64_t sub_1B10344A8()
{
  return MEMORY[0x1E0CADF40]();
}

uint64_t sub_1B10344B4()
{
  return MEMORY[0x1E0CADF48]();
}

uint64_t sub_1B10344C0()
{
  return MEMORY[0x1E0CADF50]();
}

uint64_t sub_1B10344CC()
{
  return MEMORY[0x1E0CAE070]();
}

uint64_t sub_1B10344D8()
{
  return MEMORY[0x1E0CAE080]();
}

uint64_t sub_1B10344E4()
{
  return MEMORY[0x1E0CAE088]();
}

uint64_t sub_1B10344F0()
{
  return MEMORY[0x1E0CAE090]();
}

uint64_t sub_1B10344FC()
{
  return MEMORY[0x1E0CAE0A8]();
}

uint64_t sub_1B1034508()
{
  return MEMORY[0x1E0CAE0B8]();
}

uint64_t sub_1B1034514()
{
  return MEMORY[0x1E0CAE1A0]();
}

uint64_t sub_1B1034520()
{
  return MEMORY[0x1E0CAE1D8]();
}

uint64_t sub_1B103452C()
{
  return MEMORY[0x1E0CAE1E8]();
}

uint64_t sub_1B1034538()
{
  return MEMORY[0x1E0CAEB40]();
}

uint64_t sub_1B1034544()
{
  return MEMORY[0x1E0CAF030]();
}

uint64_t sub_1B1034550()
{
  return MEMORY[0x1E0CAF060]();
}

uint64_t sub_1B103455C()
{
  return MEMORY[0x1E0CAF070]();
}

uint64_t sub_1B1034568()
{
  return MEMORY[0x1E0CAF078]();
}

uint64_t sub_1B1034574()
{
  return MEMORY[0x1E0CAF1F0]();
}

uint64_t sub_1B1034580()
{
  return MEMORY[0x1E0CAF240]();
}

uint64_t sub_1B103458C()
{
  return MEMORY[0x1E0CAF980]();
}

uint64_t sub_1B1034598()
{
  return MEMORY[0x1E0CAF990]();
}

uint64_t sub_1B10345A4()
{
  return MEMORY[0x1E0CAFB58]();
}

uint64_t sub_1B10345B0()
{
  return MEMORY[0x1E0CAFD30]();
}

uint64_t sub_1B10345BC()
{
  return MEMORY[0x1E0CAFE38]();
}

uint64_t sub_1B10345C8()
{
  return MEMORY[0x1E0CAFF00]();
}

uint64_t sub_1B10345D4()
{
  return MEMORY[0x1E0CAFF90]();
}

uint64_t sub_1B10345E0()
{
  return MEMORY[0x1E0CAFFF8]();
}

uint64_t sub_1B10345EC()
{
  return MEMORY[0x1E0CB00A0]();
}

uint64_t sub_1B10345F8()
{
  return MEMORY[0x1E0CB0228]();
}

uint64_t sub_1B1034604()
{
  return MEMORY[0x1E0CB0910]();
}

uint64_t sub_1B1034610()
{
  return MEMORY[0x1E0CB0988]();
}

uint64_t sub_1B103461C()
{
  return MEMORY[0x1E0CB0998]();
}

uint64_t sub_1B1034628()
{
  return MEMORY[0x1E0CB1248]();
}

uint64_t sub_1B1034634()
{
  return MEMORY[0x1E0CB13A0]();
}

uint64_t sub_1B1034640()
{
  return MEMORY[0x1E0DF1EB8]();
}

uint64_t sub_1B103464C()
{
  return MEMORY[0x1E0DF1F18]();
}

uint64_t sub_1B1034658()
{
  return MEMORY[0x1E0DF1F20]();
}

uint64_t sub_1B1034664()
{
  return MEMORY[0x1E0DF2240]();
}

uint64_t sub_1B1034670()
{
  return MEMORY[0x1E0DF2248]();
}

uint64_t sub_1B103467C()
{
  return MEMORY[0x1E0DF2258]();
}

uint64_t sub_1B1034688()
{
  return MEMORY[0x1E0C95EA0]();
}

uint64_t sub_1B1034694()
{
  return MEMORY[0x1E0CD8238]();
}

uint64_t sub_1B10346A0()
{
  return MEMORY[0x1E0C95ED8]();
}

uint64_t sub_1B10346AC()
{
  return MEMORY[0x1E0C96018]();
}

uint64_t sub_1B10346B8()
{
  return MEMORY[0x1E0C96030]();
}

uint64_t sub_1B10346C4()
{
  return MEMORY[0x1E0C96150]();
}

uint64_t sub_1B10346D0()
{
  return MEMORY[0x1E0C96158]();
}

uint64_t sub_1B10346DC()
{
  return MEMORY[0x1E0C96160]();
}

uint64_t sub_1B10346E8()
{
  return MEMORY[0x1E0C96168]();
}

uint64_t sub_1B10346F4()
{
  return MEMORY[0x1E0C96170]();
}

uint64_t sub_1B1034700()
{
  return MEMORY[0x1E0C96178]();
}

uint64_t sub_1B103470C()
{
  return MEMORY[0x1E0C96198]();
}

uint64_t sub_1B1034718()
{
  return MEMORY[0x1E0C96410]();
}

uint64_t sub_1B1034724()
{
  return MEMORY[0x1E0CD82E8]();
}

uint64_t sub_1B1034730()
{
  return MEMORY[0x1E0CD82F0]();
}

uint64_t sub_1B103473C()
{
  return MEMORY[0x1E0CD8318]();
}

uint64_t sub_1B1034748()
{
  return MEMORY[0x1E0CD8328]();
}

uint64_t sub_1B1034754()
{
  return MEMORY[0x1E0CD8338]();
}

uint64_t sub_1B1034760()
{
  return MEMORY[0x1E0CD83F8]();
}

uint64_t sub_1B103476C()
{
  return MEMORY[0x1E0CD84B0]();
}

uint64_t sub_1B1034778()
{
  return MEMORY[0x1E0CD84D0]();
}

uint64_t sub_1B1034784()
{
  return MEMORY[0x1E0CD8550]();
}

uint64_t sub_1B1034790()
{
  return MEMORY[0x1E0CD86C0]();
}

uint64_t sub_1B103479C()
{
  return MEMORY[0x1E0CD86F8]();
}

uint64_t sub_1B10347A8()
{
  return MEMORY[0x1E0CD8760]();
}

uint64_t sub_1B10347B4()
{
  return MEMORY[0x1E0CD87D0]();
}

uint64_t sub_1B10347C0()
{
  return MEMORY[0x1E0CD88A0]();
}

uint64_t sub_1B10347CC()
{
  return MEMORY[0x1E0CD88C0]();
}

uint64_t sub_1B10347D8()
{
  return MEMORY[0x1E0CD88F0]();
}

uint64_t sub_1B10347E4()
{
  return MEMORY[0x1E0CD89D8]();
}

uint64_t sub_1B10347F0()
{
  return MEMORY[0x1E0CD8B48]();
}

uint64_t sub_1B10347FC()
{
  return MEMORY[0x1E0CD8C38]();
}

uint64_t sub_1B1034808()
{
  return MEMORY[0x1E0CD8C48]();
}

uint64_t sub_1B1034814()
{
  return MEMORY[0x1E0CD8C50]();
}

uint64_t sub_1B1034820()
{
  return MEMORY[0x1E0CD8E78]();
}

uint64_t sub_1B103482C()
{
  return MEMORY[0x1E0CD8E80]();
}

uint64_t sub_1B1034838()
{
  return MEMORY[0x1E0CD8ED8]();
}

uint64_t sub_1B1034844()
{
  return MEMORY[0x1E0CD8EF0]();
}

uint64_t sub_1B1034850()
{
  return MEMORY[0x1E0CD9000]();
}

uint64_t sub_1B103485C()
{
  return MEMORY[0x1E0CD9030]();
}

uint64_t sub_1B1034868()
{
  return MEMORY[0x1E0CD9128]();
}

uint64_t sub_1B1034874()
{
  return MEMORY[0x1E0CD9210]();
}

uint64_t sub_1B1034880()
{
  return MEMORY[0x1E0CD9230]();
}

uint64_t sub_1B103488C()
{
  return MEMORY[0x1E0CD9240]();
}

uint64_t sub_1B1034898()
{
  return MEMORY[0x1E0CD9330]();
}

uint64_t sub_1B10348A4()
{
  return MEMORY[0x1E0CD9338]();
}

uint64_t sub_1B10348B0()
{
  return MEMORY[0x1E0CD93A0]();
}

uint64_t sub_1B10348BC()
{
  return MEMORY[0x1E0CD9428]();
}

uint64_t sub_1B10348C8()
{
  return MEMORY[0x1E0CD9440]();
}

uint64_t sub_1B10348D4()
{
  return MEMORY[0x1E0CD94A8]();
}

uint64_t sub_1B10348E0()
{
  return MEMORY[0x1E0CD94E8]();
}

uint64_t sub_1B10348EC()
{
  return MEMORY[0x1E0CD9558]();
}

uint64_t sub_1B10348F8()
{
  return MEMORY[0x1E0CD9560]();
}

uint64_t sub_1B1034904()
{
  return MEMORY[0x1E0CD9588]();
}

uint64_t sub_1B1034910()
{
  return MEMORY[0x1E0CD96B8]();
}

uint64_t sub_1B103491C()
{
  return MEMORY[0x1E0CD96C0]();
}

uint64_t sub_1B1034928()
{
  return MEMORY[0x1E0CD96D0]();
}

uint64_t sub_1B1034934()
{
  return MEMORY[0x1E0CD96D8]();
}

uint64_t sub_1B1034940()
{
  return MEMORY[0x1E0CD97D8]();
}

uint64_t sub_1B103494C()
{
  return MEMORY[0x1E0CD97E0]();
}

uint64_t sub_1B1034958()
{
  return MEMORY[0x1E0CD9810]();
}

uint64_t sub_1B1034964()
{
  return MEMORY[0x1E0CD9B00]();
}

uint64_t sub_1B1034970()
{
  return MEMORY[0x1E0CD9B08]();
}

uint64_t sub_1B103497C()
{
  return MEMORY[0x1E0CD9BF0]();
}

uint64_t sub_1B1034988()
{
  return MEMORY[0x1E0CD9C38]();
}

uint64_t sub_1B1034994()
{
  return MEMORY[0x1E0CD9CC0]();
}

uint64_t sub_1B10349A0()
{
  return MEMORY[0x1E0CD9CC8]();
}

uint64_t sub_1B10349AC()
{
  return MEMORY[0x1E0CD9E28]();
}

uint64_t sub_1B10349B8()
{
  return MEMORY[0x1E0CD9E38]();
}

uint64_t sub_1B10349C4()
{
  return MEMORY[0x1E0CD9E40]();
}

uint64_t sub_1B10349D0()
{
  return MEMORY[0x1E0CD9E78]();
}

uint64_t sub_1B10349DC()
{
  return MEMORY[0x1E0CD9EA0]();
}

uint64_t sub_1B10349E8()
{
  return MEMORY[0x1E0CD9EA8]();
}

uint64_t sub_1B10349F4()
{
  return MEMORY[0x1E0CD9F70]();
}

uint64_t sub_1B1034A00()
{
  return MEMORY[0x1E0CD9F78]();
}

uint64_t sub_1B1034A0C()
{
  return MEMORY[0x1E0CDA088]();
}

uint64_t sub_1B1034A18()
{
  return MEMORY[0x1E0CDA0D8]();
}

uint64_t sub_1B1034A24()
{
  return MEMORY[0x1E0CDA0E0]();
}

uint64_t sub_1B1034A30()
{
  return MEMORY[0x1E0CDA118]();
}

uint64_t sub_1B1034A3C()
{
  return MEMORY[0x1E0CDA120]();
}

uint64_t sub_1B1034A48()
{
  return MEMORY[0x1E0CDA188]();
}

uint64_t sub_1B1034A54()
{
  return MEMORY[0x1E0CDA190]();
}

uint64_t sub_1B1034A60()
{
  return MEMORY[0x1E0CDA2C8]();
}

uint64_t sub_1B1034A6C()
{
  return MEMORY[0x1E0CDA2D0]();
}

uint64_t sub_1B1034A78()
{
  return MEMORY[0x1E0CDA2D8]();
}

uint64_t sub_1B1034A84()
{
  return MEMORY[0x1E0CDA2E0]();
}

uint64_t sub_1B1034A90()
{
  return MEMORY[0x1E0CDA2E8]();
}

uint64_t sub_1B1034A9C()
{
  return MEMORY[0x1E0CDA2F0]();
}

uint64_t sub_1B1034AA8()
{
  return MEMORY[0x1E0CDA308]();
}

uint64_t sub_1B1034AB4()
{
  return MEMORY[0x1E0CDA310]();
}

uint64_t sub_1B1034AC0()
{
  return MEMORY[0x1E0CDA450]();
}

uint64_t sub_1B1034ACC()
{
  return MEMORY[0x1E0CDA458]();
}

uint64_t sub_1B1034AD8()
{
  return MEMORY[0x1E0CDA478]();
}

uint64_t sub_1B1034AE4()
{
  return MEMORY[0x1E0CDA4E0]();
}

uint64_t sub_1B1034AF0()
{
  return MEMORY[0x1E0CDA4E8]();
}

uint64_t sub_1B1034AFC()
{
  return MEMORY[0x1E0CDA938]();
}

uint64_t sub_1B1034B08()
{
  return MEMORY[0x1E0CDA940]();
}

uint64_t sub_1B1034B14()
{
  return MEMORY[0x1E0CDA948]();
}

uint64_t sub_1B1034B20()
{
  return MEMORY[0x1E0CDAA20]();
}

uint64_t sub_1B1034B2C()
{
  return MEMORY[0x1E0CDAA30]();
}

uint64_t sub_1B1034B38()
{
  return MEMORY[0x1E0CDAA68]();
}

uint64_t sub_1B1034B44()
{
  return MEMORY[0x1E0CDAA78]();
}

uint64_t sub_1B1034B50()
{
  return MEMORY[0x1E0CDAAA0]();
}

uint64_t sub_1B1034B5C()
{
  return MEMORY[0x1E0CDAAA8]();
}

uint64_t sub_1B1034B68()
{
  return MEMORY[0x1E0CDABA0]();
}

uint64_t sub_1B1034B74()
{
  return MEMORY[0x1E0CDAC40]();
}

uint64_t sub_1B1034B80()
{
  return MEMORY[0x1E0CDAC48]();
}

uint64_t sub_1B1034B8C()
{
  return MEMORY[0x1E0CDAC88]();
}

uint64_t sub_1B1034B98()
{
  return MEMORY[0x1E0CDAC98]();
}

uint64_t sub_1B1034BA4()
{
  return MEMORY[0x1E0CDACB8]();
}

uint64_t sub_1B1034BB0()
{
  return MEMORY[0x1E0CDACC0]();
}

uint64_t sub_1B1034BBC()
{
  return MEMORY[0x1E0CDACC8]();
}

uint64_t sub_1B1034BC8()
{
  return MEMORY[0x1E0CDAE88]();
}

uint64_t sub_1B1034BD4()
{
  return MEMORY[0x1E0CDAE90]();
}

uint64_t sub_1B1034BE0()
{
  return MEMORY[0x1E0CDAEB0]();
}

uint64_t sub_1B1034BEC()
{
  return MEMORY[0x1E0CDAEB8]();
}

uint64_t sub_1B1034BF8()
{
  return MEMORY[0x1E0CDAED0]();
}

uint64_t sub_1B1034C04()
{
  return MEMORY[0x1E0CDAED8]();
}

uint64_t sub_1B1034C10()
{
  return MEMORY[0x1E0CDAEE8]();
}

uint64_t sub_1B1034C1C()
{
  return MEMORY[0x1E0CDAEF0]();
}

uint64_t sub_1B1034C28()
{
  return MEMORY[0x1E0CDAF00]();
}

uint64_t sub_1B1034C34()
{
  return MEMORY[0x1E0CDAF08]();
}

uint64_t sub_1B1034C40()
{
  return MEMORY[0x1E0CDAFB8]();
}

uint64_t sub_1B1034C4C()
{
  return MEMORY[0x1E0CDAFC8]();
}

uint64_t sub_1B1034C58()
{
  return MEMORY[0x1E0CDAFD0]();
}

uint64_t sub_1B1034C64()
{
  return MEMORY[0x1E0CDAFE0]();
}

uint64_t sub_1B1034C70()
{
  return MEMORY[0x1E0CDAFF8]();
}

uint64_t sub_1B1034C7C()
{
  return MEMORY[0x1E0CDB000]();
}

uint64_t sub_1B1034C88()
{
  return MEMORY[0x1E0CDB060]();
}

uint64_t sub_1B1034C94()
{
  return MEMORY[0x1E0CDB068]();
}

uint64_t sub_1B1034CA0()
{
  return MEMORY[0x1E0CDB0E8]();
}

uint64_t sub_1B1034CAC()
{
  return MEMORY[0x1E0CDB1F0]();
}

uint64_t sub_1B1034CB8()
{
  return MEMORY[0x1E0CDB1F8]();
}

uint64_t sub_1B1034CC4()
{
  return MEMORY[0x1E0CDB200]();
}

uint64_t sub_1B1034CD0()
{
  return MEMORY[0x1E0CDB208]();
}

uint64_t sub_1B1034CDC()
{
  return MEMORY[0x1E0CDB210]();
}

uint64_t sub_1B1034CE8()
{
  return MEMORY[0x1E0CDB218]();
}

uint64_t sub_1B1034CF4()
{
  return MEMORY[0x1E0CDB220]();
}

uint64_t sub_1B1034D00()
{
  return MEMORY[0x1E0CDB228]();
}

uint64_t sub_1B1034D0C()
{
  return MEMORY[0x1E0CDB230]();
}

uint64_t sub_1B1034D18()
{
  return MEMORY[0x1E0CDB238]();
}

uint64_t sub_1B1034D24()
{
  return MEMORY[0x1E0CDB240]();
}

uint64_t sub_1B1034D30()
{
  return MEMORY[0x1E0CDB248]();
}

uint64_t sub_1B1034D3C()
{
  return MEMORY[0x1E0CDB258]();
}

uint64_t sub_1B1034D48()
{
  return MEMORY[0x1E0CDB260]();
}

uint64_t sub_1B1034D54()
{
  return MEMORY[0x1E0CDB268]();
}

uint64_t sub_1B1034D60()
{
  return MEMORY[0x1E0CDB270]();
}

uint64_t sub_1B1034D6C()
{
  return MEMORY[0x1E0CDB278]();
}

uint64_t sub_1B1034D78()
{
  return MEMORY[0x1E0CDB280]();
}

uint64_t sub_1B1034D84()
{
  return MEMORY[0x1E0CDB288]();
}

uint64_t sub_1B1034D90()
{
  return MEMORY[0x1E0CDB2B0]();
}

uint64_t sub_1B1034D9C()
{
  return MEMORY[0x1E0CDB2B8]();
}

uint64_t sub_1B1034DA8()
{
  return MEMORY[0x1E0CDB400]();
}

uint64_t sub_1B1034DB4()
{
  return MEMORY[0x1E0CDB408]();
}

uint64_t sub_1B1034DC0()
{
  return MEMORY[0x1E0CDB420]();
}

uint64_t sub_1B1034DCC()
{
  return MEMORY[0x1E0CDB430]();
}

uint64_t sub_1B1034DD8()
{
  return MEMORY[0x1E0CDB438]();
}

uint64_t sub_1B1034DE4()
{
  return MEMORY[0x1E0CDB530]();
}

uint64_t sub_1B1034DF0()
{
  return MEMORY[0x1E0CDB538]();
}

uint64_t sub_1B1034DFC()
{
  return MEMORY[0x1E0CDB540]();
}

uint64_t sub_1B1034E08()
{
  return MEMORY[0x1E0CDB550]();
}

uint64_t sub_1B1034E14()
{
  return MEMORY[0x1E0CDB558]();
}

uint64_t sub_1B1034E20()
{
  return MEMORY[0x1E0CDB608]();
}

uint64_t sub_1B1034E2C()
{
  return MEMORY[0x1E0CDB658]();
}

uint64_t sub_1B1034E38()
{
  return MEMORY[0x1E0CDB668]();
}

uint64_t sub_1B1034E44()
{
  return MEMORY[0x1E0CDB678]();
}

uint64_t sub_1B1034E50()
{
  return MEMORY[0x1E0CDB688]();
}

uint64_t sub_1B1034E5C()
{
  return MEMORY[0x1E0CDB698]();
}

uint64_t sub_1B1034E68()
{
  return MEMORY[0x1E0CDB6A8]();
}

uint64_t sub_1B1034E74()
{
  return MEMORY[0x1E0CDB6B8]();
}

uint64_t sub_1B1034E80()
{
  return MEMORY[0x1E0CDB6D0]();
}

uint64_t sub_1B1034E8C()
{
  return MEMORY[0x1E0CDB6E0]();
}

uint64_t sub_1B1034E98()
{
  return MEMORY[0x1E0CDB6F0]();
}

uint64_t sub_1B1034EA4()
{
  return MEMORY[0x1E0CDB6F8]();
}

uint64_t sub_1B1034EB0()
{
  return MEMORY[0x1E0CDB708]();
}

uint64_t sub_1B1034EBC()
{
  return MEMORY[0x1E0CDB848]();
}

uint64_t sub_1B1034EC8()
{
  return MEMORY[0x1E0CDB870]();
}

uint64_t sub_1B1034ED4()
{
  return MEMORY[0x1E0CDB880]();
}

uint64_t sub_1B1034EE0()
{
  return MEMORY[0x1E0CDBA60]();
}

uint64_t sub_1B1034EEC()
{
  return MEMORY[0x1E0CDBA68]();
}

uint64_t sub_1B1034EF8()
{
  return MEMORY[0x1E0CDBA78]();
}

uint64_t sub_1B1034F04()
{
  return MEMORY[0x1E0CDBA80]();
}

uint64_t sub_1B1034F10()
{
  return MEMORY[0x1E0CDBA98]();
}

uint64_t sub_1B1034F1C()
{
  return MEMORY[0x1E0CDBAA0]();
}

uint64_t sub_1B1034F28()
{
  return MEMORY[0x1E0CDBAB0]();
}

uint64_t sub_1B1034F34()
{
  return MEMORY[0x1E0CDBAC0]();
}

uint64_t sub_1B1034F40()
{
  return MEMORY[0x1E0CDBAD0]();
}

uint64_t sub_1B1034F4C()
{
  return MEMORY[0x1E0CDBAD8]();
}

uint64_t sub_1B1034F58()
{
  return MEMORY[0x1E0CDBAE8]();
}

uint64_t sub_1B1034F64()
{
  return MEMORY[0x1E0CDBAF0]();
}

uint64_t sub_1B1034F70()
{
  return MEMORY[0x1E0CDBAF8]();
}

uint64_t sub_1B1034F7C()
{
  return MEMORY[0x1E0CDBB00]();
}

uint64_t sub_1B1034F88()
{
  return MEMORY[0x1E0CDBB08]();
}

uint64_t sub_1B1034F94()
{
  return MEMORY[0x1E0CDBB10]();
}

uint64_t sub_1B1034FA0()
{
  return MEMORY[0x1E0CDBC88]();
}

uint64_t sub_1B1034FAC()
{
  return MEMORY[0x1E0CDBC90]();
}

uint64_t sub_1B1034FB8()
{
  return MEMORY[0x1E0CDBD58]();
}

uint64_t sub_1B1034FC4()
{
  return MEMORY[0x1E0CDBD70]();
}

uint64_t sub_1B1034FD0()
{
  return MEMORY[0x1E0CDBDA8]();
}

uint64_t sub_1B1034FDC()
{
  return MEMORY[0x1E0CDBDB0]();
}

uint64_t sub_1B1034FE8()
{
  return MEMORY[0x1E0CDBDB8]();
}

uint64_t sub_1B1034FF4()
{
  return MEMORY[0x1E0CDBE08]();
}

uint64_t sub_1B1035000()
{
  return MEMORY[0x1E0CDBE38]();
}

uint64_t sub_1B103500C()
{
  return MEMORY[0x1E0CDBED0]();
}

uint64_t sub_1B1035018()
{
  return MEMORY[0x1E0CDC2B0]();
}

uint64_t sub_1B1035024()
{
  return MEMORY[0x1E0CDC2B8]();
}

uint64_t sub_1B1035030()
{
  return MEMORY[0x1E0CDC2C0]();
}

uint64_t sub_1B103503C()
{
  return MEMORY[0x1E0CDC2C8]();
}

uint64_t sub_1B1035048()
{
  return MEMORY[0x1E0CDC2D8]();
}

uint64_t sub_1B1035054()
{
  return MEMORY[0x1E0CDC2E0]();
}

uint64_t sub_1B1035060()
{
  return MEMORY[0x1E0CDC2E8]();
}

uint64_t sub_1B103506C()
{
  return MEMORY[0x1E0CDC2F0]();
}

uint64_t sub_1B1035078()
{
  return MEMORY[0x1E0CDC2F8]();
}

uint64_t sub_1B1035084()
{
  return MEMORY[0x1E0CDC698]();
}

uint64_t sub_1B1035090()
{
  return MEMORY[0x1E0CDC6B0]();
}

uint64_t sub_1B103509C()
{
  return MEMORY[0x1E0CDC748]();
}

uint64_t sub_1B10350A8()
{
  return MEMORY[0x1E0CDC838]();
}

uint64_t sub_1B10350B4()
{
  return MEMORY[0x1E0CDC840]();
}

uint64_t sub_1B10350C0()
{
  return MEMORY[0x1E0CDC968]();
}

uint64_t sub_1B10350CC()
{
  return MEMORY[0x1E0CDC978]();
}

uint64_t sub_1B10350D8()
{
  return MEMORY[0x1E0CDC988]();
}

uint64_t sub_1B10350E4()
{
  return MEMORY[0x1E0CDC990]();
}

uint64_t sub_1B10350F0()
{
  return MEMORY[0x1E0CDCDB0]();
}

uint64_t sub_1B10350FC()
{
  return MEMORY[0x1E0CDCDC0]();
}

uint64_t sub_1B1035108()
{
  return MEMORY[0x1E0CDD2D8]();
}

uint64_t sub_1B1035114()
{
  return MEMORY[0x1E0CDD300]();
}

uint64_t sub_1B1035120()
{
  return MEMORY[0x1E0CDD310]();
}

uint64_t sub_1B103512C()
{
  return MEMORY[0x1E0CDD320]();
}

uint64_t sub_1B1035138()
{
  return MEMORY[0x1E0CDD348]();
}

uint64_t sub_1B1035144()
{
  return MEMORY[0x1E0CDD358]();
}

uint64_t sub_1B1035150()
{
  return MEMORY[0x1E0CDD368]();
}

uint64_t sub_1B103515C()
{
  return MEMORY[0x1E0CDD380]();
}

uint64_t sub_1B1035168()
{
  return MEMORY[0x1E0CDD390]();
}

uint64_t sub_1B1035174()
{
  return MEMORY[0x1E0CDD3B0]();
}

uint64_t sub_1B1035180()
{
  return MEMORY[0x1E0CDD3C0]();
}

uint64_t sub_1B103518C()
{
  return MEMORY[0x1E0CDD418]();
}

uint64_t sub_1B1035198()
{
  return MEMORY[0x1E0CDD438]();
}

uint64_t sub_1B10351A4()
{
  return MEMORY[0x1E0CDD4D8]();
}

uint64_t sub_1B10351B0()
{
  return MEMORY[0x1E0CDD520]();
}

uint64_t sub_1B10351BC()
{
  return MEMORY[0x1E0CDD560]();
}

uint64_t sub_1B10351C8()
{
  return MEMORY[0x1E0CDD578]();
}

uint64_t sub_1B10351D4()
{
  return MEMORY[0x1E0CDD590]();
}

uint64_t sub_1B10351E0()
{
  return MEMORY[0x1E0CDD5A0]();
}

uint64_t sub_1B10351EC()
{
  return MEMORY[0x1E0CDD5A8]();
}

uint64_t sub_1B10351F8()
{
  return MEMORY[0x1E0CDD5B0]();
}

uint64_t sub_1B1035204()
{
  return MEMORY[0x1E0CDD5C0]();
}

uint64_t sub_1B1035210()
{
  return MEMORY[0x1E0CDD5E0]();
}

uint64_t sub_1B103521C()
{
  return MEMORY[0x1E0CDD5E8]();
}

uint64_t sub_1B1035228()
{
  return MEMORY[0x1E0CDD5F8]();
}

uint64_t sub_1B1035234()
{
  return MEMORY[0x1E0CDD638]();
}

uint64_t sub_1B1035240()
{
  return MEMORY[0x1E0CDD668]();
}

uint64_t sub_1B103524C()
{
  return MEMORY[0x1E0CDD678]();
}

uint64_t sub_1B1035258()
{
  return MEMORY[0x1E0CDD718]();
}

uint64_t sub_1B1035264()
{
  return MEMORY[0x1E0CDD728]();
}

uint64_t sub_1B1035270()
{
  return MEMORY[0x1E0CDD750]();
}

uint64_t sub_1B103527C()
{
  return MEMORY[0x1E0CDD770]();
}

uint64_t sub_1B1035288()
{
  return MEMORY[0x1E0CDD780]();
}

uint64_t sub_1B1035294()
{
  return MEMORY[0x1E0CDD878]();
}

uint64_t sub_1B10352A0()
{
  return MEMORY[0x1E0CDD8D8]();
}

uint64_t sub_1B10352AC()
{
  return MEMORY[0x1E0CDD928]();
}

uint64_t sub_1B10352B8()
{
  return MEMORY[0x1E0CDDB88]();
}

uint64_t sub_1B10352C4()
{
  return MEMORY[0x1E0CDDDA0]();
}

uint64_t sub_1B10352D0()
{
  return MEMORY[0x1E0CDDDC0]();
}

uint64_t sub_1B10352DC()
{
  return MEMORY[0x1E0CDDDD0]();
}

uint64_t sub_1B10352E8()
{
  return MEMORY[0x1E0CDDE48]();
}

uint64_t sub_1B10352F4()
{
  return MEMORY[0x1E0CDDE58]();
}

uint64_t sub_1B1035300()
{
  return MEMORY[0x1E0CDDE88]();
}

uint64_t sub_1B103530C()
{
  return MEMORY[0x1E0CDDE90]();
}

uint64_t sub_1B1035318()
{
  return MEMORY[0x1E0CDDE98]();
}

uint64_t sub_1B1035324()
{
  return MEMORY[0x1E0CDDEA0]();
}

uint64_t sub_1B1035330()
{
  return MEMORY[0x1E0CDDEA8]();
}

uint64_t sub_1B103533C()
{
  return MEMORY[0x1E0CDDF00]();
}

uint64_t sub_1B1035348()
{
  return MEMORY[0x1E0CDDFC0]();
}

uint64_t sub_1B1035354()
{
  return MEMORY[0x1E0CDDFC8]();
}

uint64_t sub_1B1035360()
{
  return MEMORY[0x1E0CDDFD0]();
}

uint64_t sub_1B103536C()
{
  return MEMORY[0x1E0CDE028]();
}

uint64_t sub_1B1035378()
{
  return MEMORY[0x1E0CDE050]();
}

uint64_t sub_1B1035384()
{
  return MEMORY[0x1E0CDE0F8]();
}

uint64_t sub_1B1035390()
{
  return MEMORY[0x1E0CDE118]();
}

uint64_t sub_1B103539C()
{
  return MEMORY[0x1E0CDE140]();
}

uint64_t sub_1B10353A8()
{
  return MEMORY[0x1E0CDE1C8]();
}

uint64_t sub_1B10353B4()
{
  return MEMORY[0x1E0CDE1D8]();
}

uint64_t sub_1B10353C0()
{
  return MEMORY[0x1E0CDE230]();
}

uint64_t sub_1B10353CC()
{
  return MEMORY[0x1E0CDE338]();
}

uint64_t sub_1B10353D8()
{
  return MEMORY[0x1E0CDE380]();
}

uint64_t sub_1B10353E4()
{
  return MEMORY[0x1E0CDE388]();
}

uint64_t sub_1B10353F0()
{
  return MEMORY[0x1E0CDE390]();
}

uint64_t sub_1B10353FC()
{
  return MEMORY[0x1E0CDE3B8]();
}

uint64_t sub_1B1035408()
{
  return MEMORY[0x1E0CDE4E8]();
}

uint64_t sub_1B1035414()
{
  return MEMORY[0x1E0CDE4F8]();
}

uint64_t sub_1B1035420()
{
  return MEMORY[0x1E0CDE500]();
}

uint64_t sub_1B103542C()
{
  return MEMORY[0x1E0CDE540]();
}

uint64_t sub_1B1035438()
{
  return MEMORY[0x1E0CDE590]();
}

uint64_t sub_1B1035444()
{
  return MEMORY[0x1E0CDE600]();
}

uint64_t sub_1B1035450()
{
  return MEMORY[0x1E0CDE6B0]();
}

uint64_t sub_1B103545C()
{
  return MEMORY[0x1E0CDE700]();
}

uint64_t sub_1B1035468()
{
  return MEMORY[0x1E0CDE7E8]();
}

uint64_t sub_1B1035474()
{
  return MEMORY[0x1E0CDE828]();
}

uint64_t sub_1B1035480()
{
  return MEMORY[0x1E0CDE950]();
}

uint64_t sub_1B103548C()
{
  return MEMORY[0x1E0CDE960]();
}

uint64_t sub_1B1035498()
{
  return MEMORY[0x1E0CDEA58]();
}

uint64_t sub_1B10354A4()
{
  return MEMORY[0x1E0CDEA60]();
}

uint64_t sub_1B10354B0()
{
  return MEMORY[0x1E0CDEA88]();
}

uint64_t sub_1B10354BC()
{
  return MEMORY[0x1E0CDEAA0]();
}

uint64_t sub_1B10354C8()
{
  return MEMORY[0x1E0CDEAB0]();
}

uint64_t sub_1B10354D4()
{
  return MEMORY[0x1E0CDEB18]();
}

uint64_t sub_1B10354E0()
{
  return MEMORY[0x1E0CDEB40]();
}

uint64_t sub_1B10354EC()
{
  return MEMORY[0x1E0CDEB50]();
}

uint64_t sub_1B10354F8()
{
  return MEMORY[0x1E0CDEBF8]();
}

uint64_t sub_1B1035504()
{
  return MEMORY[0x1E0CDEC40]();
}

uint64_t sub_1B1035510()
{
  return MEMORY[0x1E0CDEC48]();
}

uint64_t sub_1B103551C()
{
  return MEMORY[0x1E0CDED10]();
}

uint64_t sub_1B1035528()
{
  return MEMORY[0x1E0CDED78]();
}

uint64_t sub_1B1035534()
{
  return MEMORY[0x1E0CDED90]();
}

uint64_t sub_1B1035540()
{
  return MEMORY[0x1E0CDEDB0]();
}

uint64_t sub_1B103554C()
{
  return MEMORY[0x1E0CDEE48]();
}

uint64_t sub_1B1035558()
{
  return MEMORY[0x1E0CDEE78]();
}

uint64_t sub_1B1035564()
{
  return MEMORY[0x1E0CDEE98]();
}

uint64_t sub_1B1035570()
{
  return MEMORY[0x1E0CDEF10]();
}

uint64_t sub_1B103557C()
{
  return MEMORY[0x1E0CDEF40]();
}

uint64_t sub_1B1035588()
{
  return MEMORY[0x1E0CDEF48]();
}

uint64_t sub_1B1035594()
{
  return MEMORY[0x1E0CDEF58]();
}

uint64_t sub_1B10355A0()
{
  return MEMORY[0x1E0CDEF90]();
}

uint64_t sub_1B10355AC()
{
  return MEMORY[0x1E0CDEF98]();
}

uint64_t sub_1B10355B8()
{
  return MEMORY[0x1E0CDEFB8]();
}

uint64_t sub_1B10355C4()
{
  return MEMORY[0x1E0CDEFE8]();
}

uint64_t sub_1B10355D0()
{
  return MEMORY[0x1E0CDEFF8]();
}

uint64_t sub_1B10355DC()
{
  return MEMORY[0x1E0CDF058]();
}

uint64_t sub_1B10355E8()
{
  return MEMORY[0x1E0CDF068]();
}

uint64_t sub_1B10355F4()
{
  return MEMORY[0x1E0CDF088]();
}

uint64_t sub_1B1035600()
{
  return MEMORY[0x1E0CDF0D8]();
}

uint64_t sub_1B103560C()
{
  return MEMORY[0x1E0CDF110]();
}

uint64_t sub_1B1035618()
{
  return MEMORY[0x1E0CDF138]();
}

uint64_t sub_1B1035624()
{
  return MEMORY[0x1E0CDF158]();
}

uint64_t sub_1B1035630()
{
  return MEMORY[0x1E0CDF1E8]();
}

uint64_t sub_1B103563C()
{
  return MEMORY[0x1E0CDF208]();
}

uint64_t sub_1B1035648()
{
  return MEMORY[0x1E0CDF210]();
}

uint64_t sub_1B1035654()
{
  return MEMORY[0x1E0CDF260]();
}

uint64_t sub_1B1035660()
{
  return MEMORY[0x1E0CDF2A8]();
}

uint64_t sub_1B103566C()
{
  return MEMORY[0x1E0CDF2B0]();
}

uint64_t sub_1B1035678()
{
  return MEMORY[0x1E0CDF3B0]();
}

uint64_t sub_1B1035684()
{
  return MEMORY[0x1E0CDF3C8]();
}

uint64_t sub_1B1035690()
{
  return MEMORY[0x1E0CDF3F0]();
}

uint64_t sub_1B103569C()
{
  return MEMORY[0x1E0CDF438]();
}

uint64_t sub_1B10356A8()
{
  return MEMORY[0x1E0CDF440]();
}

uint64_t sub_1B10356B4()
{
  return MEMORY[0x1E0CDF450]();
}

uint64_t sub_1B10356C0()
{
  return MEMORY[0x1E0CDF458]();
}

uint64_t sub_1B10356CC()
{
  return MEMORY[0x1E0CDF478]();
}

uint64_t sub_1B10356D8()
{
  return MEMORY[0x1E0CDF480]();
}

uint64_t sub_1B10356E4()
{
  return MEMORY[0x1E0CDF488]();
}

uint64_t sub_1B10356F0()
{
  return MEMORY[0x1E0CDF490]();
}

uint64_t sub_1B10356FC()
{
  return MEMORY[0x1E0CDF4A0]();
}

uint64_t sub_1B1035708()
{
  return MEMORY[0x1E0CDF4B8]();
}

uint64_t sub_1B1035714()
{
  return MEMORY[0x1E0CDF4D0]();
}

uint64_t sub_1B1035720()
{
  return MEMORY[0x1E0CDF4E0]();
}

uint64_t sub_1B103572C()
{
  return MEMORY[0x1E0CDF4E8]();
}

uint64_t sub_1B1035738()
{
  return MEMORY[0x1E0CDF4F8]();
}

uint64_t sub_1B1035744()
{
  return MEMORY[0x1E0CDF508]();
}

uint64_t sub_1B1035750()
{
  return MEMORY[0x1E0CDF530]();
}

uint64_t sub_1B103575C()
{
  return MEMORY[0x1E0CDF588]();
}

uint64_t sub_1B1035768()
{
  return MEMORY[0x1E0CDF5F8]();
}

uint64_t sub_1B1035774()
{
  return MEMORY[0x1E0CDF608]();
}

uint64_t sub_1B1035780()
{
  return MEMORY[0x1E0CDF610]();
}

uint64_t sub_1B103578C()
{
  return MEMORY[0x1E0CDF6D8]();
}

uint64_t sub_1B1035798()
{
  return MEMORY[0x1E0CDF700]();
}

uint64_t sub_1B10357A4()
{
  return MEMORY[0x1E0CDF7E8]();
}

uint64_t sub_1B10357B0()
{
  return MEMORY[0x1E0CDF810]();
}

uint64_t sub_1B10357BC()
{
  return MEMORY[0x1E0CDF858]();
}

uint64_t sub_1B10357C8()
{
  return MEMORY[0x1E0CDF878]();
}

uint64_t sub_1B10357D4()
{
  return MEMORY[0x1E0CDF8E8]();
}

uint64_t sub_1B10357E0()
{
  return MEMORY[0x1E0CDF948]();
}

uint64_t sub_1B10357EC()
{
  return MEMORY[0x1E0CDF968]();
}

uint64_t sub_1B10357F8()
{
  return MEMORY[0x1E0CDF990]();
}

uint64_t sub_1B1035804()
{
  return MEMORY[0x1E0CDF9E8]();
}

uint64_t sub_1B1035810()
{
  return MEMORY[0x1E0CDFB18]();
}

uint64_t sub_1B103581C()
{
  return MEMORY[0x1E0CDFB78]();
}

uint64_t sub_1B1035828()
{
  return MEMORY[0x1E0CDFB90]();
}

uint64_t sub_1B1035834()
{
  return MEMORY[0x1E0CDFC40]();
}

uint64_t sub_1B1035840()
{
  return MEMORY[0x1E0CDFD20]();
}

uint64_t sub_1B103584C()
{
  return MEMORY[0x1E0CDFD38]();
}

uint64_t sub_1B1035858()
{
  return MEMORY[0x1E0CDFD48]();
}

uint64_t sub_1B1035864()
{
  return MEMORY[0x1E0CDFD80]();
}

uint64_t sub_1B1035870()
{
  return MEMORY[0x1E0CDFD88]();
}

uint64_t sub_1B103587C()
{
  return MEMORY[0x1E0CDFDB8]();
}

uint64_t sub_1B1035888()
{
  return MEMORY[0x1E0CDFDD8]();
}

uint64_t sub_1B1035894()
{
  return MEMORY[0x1E0CDFE18]();
}

uint64_t sub_1B10358A0()
{
  return MEMORY[0x1E0CDFE48]();
}

uint64_t sub_1B10358AC()
{
  return MEMORY[0x1E0CDFE98]();
}

uint64_t sub_1B10358B8()
{
  return MEMORY[0x1E0CDFF58]();
}

uint64_t sub_1B10358C4()
{
  return MEMORY[0x1E0CDFFF8]();
}

uint64_t sub_1B10358D0()
{
  return MEMORY[0x1E0CE00C0]();
}

uint64_t sub_1B10358DC()
{
  return MEMORY[0x1E0CE00D8]();
}

uint64_t sub_1B10358E8()
{
  return MEMORY[0x1E0CE00E0]();
}

uint64_t sub_1B10358F4()
{
  return MEMORY[0x1E0CE0168]();
}

uint64_t sub_1B1035900()
{
  return MEMORY[0x1E0CE0170]();
}

uint64_t sub_1B103590C()
{
  return MEMORY[0x1E0CE0178]();
}

uint64_t sub_1B1035918()
{
  return MEMORY[0x1E0CE0180]();
}

uint64_t sub_1B1035924()
{
  return MEMORY[0x1E0CE0190]();
}

uint64_t sub_1B1035930()
{
  return MEMORY[0x1E0CE0198]();
}

uint64_t sub_1B103593C()
{
  return MEMORY[0x1E0CE01B0]();
}

uint64_t sub_1B1035948()
{
  return MEMORY[0x1E0CE01D8]();
}

uint64_t sub_1B1035954()
{
  return MEMORY[0x1E0CE01E0]();
}

uint64_t sub_1B1035960()
{
  return MEMORY[0x1E0CE01E8]();
}

uint64_t sub_1B103596C()
{
  return MEMORY[0x1E0CE01F0]();
}

uint64_t sub_1B1035978()
{
  return MEMORY[0x1E0CE0200]();
}

uint64_t sub_1B1035984()
{
  return MEMORY[0x1E0CE0208]();
}

uint64_t sub_1B1035990()
{
  return MEMORY[0x1E0CE0220]();
}

uint64_t sub_1B103599C()
{
  return MEMORY[0x1E0CE0228]();
}

uint64_t sub_1B10359A8()
{
  return MEMORY[0x1E0CE0238]();
}

uint64_t sub_1B10359B4()
{
  return MEMORY[0x1E0CE02A0]();
}

uint64_t sub_1B10359C0()
{
  return MEMORY[0x1E0CE02A8]();
}

uint64_t sub_1B10359CC()
{
  return MEMORY[0x1E0CE02B0]();
}

uint64_t sub_1B10359D8()
{
  return MEMORY[0x1E0CE02C0]();
}

uint64_t sub_1B10359E4()
{
  return MEMORY[0x1E0CE02D8]();
}

uint64_t sub_1B10359F0()
{
  return MEMORY[0x1E0CE02E0]();
}

uint64_t sub_1B10359FC()
{
  return MEMORY[0x1E0CE02E8]();
}

uint64_t sub_1B1035A08()
{
  return MEMORY[0x1E0CE02F0]();
}

uint64_t sub_1B1035A14()
{
  return MEMORY[0x1E0CE02F8]();
}

uint64_t sub_1B1035A20()
{
  return MEMORY[0x1E0CE0448]();
}

uint64_t sub_1B1035A2C()
{
  return MEMORY[0x1E0CE0458]();
}

uint64_t sub_1B1035A38()
{
  return MEMORY[0x1E0CE0698]();
}

uint64_t sub_1B1035A44()
{
  return MEMORY[0x1E0CE06A0]();
}

uint64_t sub_1B1035A50()
{
  return MEMORY[0x1E0CE06A8]();
}

uint64_t sub_1B1035A5C()
{
  return MEMORY[0x1E0CE06B0]();
}

uint64_t sub_1B1035A68()
{
  return MEMORY[0x1E0CE06B8]();
}

uint64_t sub_1B1035A74()
{
  return MEMORY[0x1E0CE06C0]();
}

uint64_t sub_1B1035A80()
{
  return MEMORY[0x1E0CE06C8]();
}

uint64_t sub_1B1035A8C()
{
  return MEMORY[0x1E0CE06D0]();
}

uint64_t sub_1B1035A98()
{
  return MEMORY[0x1E0CE06E0]();
}

uint64_t sub_1B1035AA4()
{
  return MEMORY[0x1E0CE06E8]();
}

uint64_t sub_1B1035AB0()
{
  return MEMORY[0x1E0DEF4F8]();
}

uint64_t sub_1B1035ABC()
{
  return MEMORY[0x1E0DEF578]();
}

uint64_t sub_1B1035AC8()
{
  return MEMORY[0x1E0DEF5B0]();
}

uint64_t sub_1B1035AD4()
{
  return MEMORY[0x1E0DEF748]();
}

uint64_t sub_1B1035AE0()
{
  return MEMORY[0x1E0DEF778]();
}

uint64_t sub_1B1035AEC()
{
  return MEMORY[0x1E0CB17D8]();
}

uint64_t sub_1B1035AF8()
{
  return MEMORY[0x1E0DE9E38]();
}

uint64_t sub_1B1035B04()
{
  return MEMORY[0x1E0DE9E78]();
}

uint64_t sub_1B1035B10()
{
  return MEMORY[0x1E0DE9EC0]();
}

uint64_t sub_1B1035B1C()
{
  return MEMORY[0x1E0DEA038]();
}

uint64_t sub_1B1035B28()
{
  return MEMORY[0x1E0DEA048]();
}

uint64_t sub_1B1035B34()
{
  return MEMORY[0x1E0DEA0A0]();
}

uint64_t sub_1B1035B40()
{
  return MEMORY[0x1E0DEA0A8]();
}

uint64_t sub_1B1035B4C()
{
  return MEMORY[0x1E0DEA1B8]();
}

uint64_t sub_1B1035B58()
{
  return MEMORY[0x1E0DF1FA8]();
}

uint64_t sub_1B1035B64()
{
  return MEMORY[0x1E0DEA3B0]();
}

uint64_t sub_1B1035B70()
{
  return MEMORY[0x1E0CE06F8]();
}

uint64_t sub_1B1035B7C()
{
  return MEMORY[0x1E0DEA568]();
}

uint64_t sub_1B1035B88()
{
  return MEMORY[0x1E0CB1940]();
}

uint64_t sub_1B1035B94()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t sub_1B1035BA0()
{
  return MEMORY[0x1E0CB1988]();
}

uint64_t sub_1B1035BAC()
{
  return MEMORY[0x1E0CB1990]();
}

uint64_t sub_1B1035BB8()
{
  return MEMORY[0x1E0CB19E8]();
}

uint64_t sub_1B1035BC4()
{
  return MEMORY[0x1E0CB1A18]();
}

uint64_t sub_1B1035BD0()
{
  return MEMORY[0x1E0DEA5F8]();
}

uint64_t sub_1B1035BDC()
{
  return MEMORY[0x1E0DEA618]();
}

uint64_t sub_1B1035BE8()
{
  return MEMORY[0x1E0DEA658]();
}

uint64_t sub_1B1035BF4()
{
  return MEMORY[0x1E0DEA6F8]();
}

uint64_t sub_1B1035C00()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_1B1035C0C()
{
  return MEMORY[0x1E0DEA7C0]();
}

uint64_t sub_1B1035C18()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_1B1035C24()
{
  return MEMORY[0x1E0DEA850]();
}

uint64_t sub_1B1035C30()
{
  return MEMORY[0x1E0DEA858]();
}

uint64_t sub_1B1035C3C()
{
  return MEMORY[0x1E0DEA870]();
}

uint64_t sub_1B1035C48()
{
  return MEMORY[0x1E0DEA878]();
}

uint64_t sub_1B1035C54()
{
  return MEMORY[0x1E0DEA880]();
}

uint64_t sub_1B1035C60()
{
  return MEMORY[0x1E0DEA908]();
}

uint64_t sub_1B1035C6C()
{
  return MEMORY[0x1E0DEAA08]();
}

uint64_t sub_1B1035C78()
{
  return MEMORY[0x1E0DEAA40]();
}

uint64_t sub_1B1035C84()
{
  return MEMORY[0x1E0DEAA50]();
}

uint64_t sub_1B1035C90()
{
  return MEMORY[0x1E0DEAAB8]();
}

uint64_t sub_1B1035C9C()
{
  return MEMORY[0x1E0DEAAD8]();
}

uint64_t sub_1B1035CA8()
{
  return MEMORY[0x1E0DEACA0]();
}

uint64_t sub_1B1035CB4()
{
  return MEMORY[0x1E0DEAD18]();
}

uint64_t sub_1B1035CC0()
{
  return MEMORY[0x1E0CB1AC0]();
}

uint64_t sub_1B1035CCC()
{
  return MEMORY[0x1E0DEADB0]();
}

uint64_t sub_1B1035CD8()
{
  return MEMORY[0x1E0DEADF8]();
}

uint64_t sub_1B1035CE4()
{
  return MEMORY[0x1E0DEAE08]();
}

uint64_t sub_1B1035CF0()
{
  return MEMORY[0x1E0DEAE10]();
}

uint64_t sub_1B1035CFC()
{
  return MEMORY[0x1E0DEAE28]();
}

uint64_t sub_1B1035D08()
{
  return MEMORY[0x1E0DEAE60]();
}

uint64_t sub_1B1035D14()
{
  return MEMORY[0x1E0DEAE80]();
}

uint64_t sub_1B1035D20()
{
  return MEMORY[0x1E0DEAEC8]();
}

uint64_t sub_1B1035D2C()
{
  return MEMORY[0x1E0DEAEF8]();
}

uint64_t sub_1B1035D38()
{
  return MEMORY[0x1E0DEAF00]();
}

uint64_t sub_1B1035D44()
{
  return MEMORY[0x1E0DEAF78]();
}

uint64_t sub_1B1035D50()
{
  return MEMORY[0x1E0DF05B8]();
}

uint64_t sub_1B1035D5C()
{
  return MEMORY[0x1E0DF06D8]();
}

uint64_t sub_1B1035D68()
{
  return MEMORY[0x1E0DF06E0]();
}

uint64_t sub_1B1035D74()
{
  return MEMORY[0x1E0DF0748]();
}

uint64_t sub_1B1035D80()
{
  return MEMORY[0x1E0DF0750]();
}

uint64_t sub_1B1035D8C()
{
  return MEMORY[0x1E0DF0870]();
}

uint64_t sub_1B1035D98()
{
  return MEMORY[0x1E0DF08B8]();
}

uint64_t sub_1B1035DA4()
{
  return MEMORY[0x1E0DEB030]();
}

uint64_t sub_1B1035DB0()
{
  return MEMORY[0x1E0DEB120]();
}

uint64_t sub_1B1035DBC()
{
  return MEMORY[0x1E0DEB528]();
}

uint64_t sub_1B1035DC8()
{
  return MEMORY[0x1E0DEB560]();
}

uint64_t sub_1B1035DD4()
{
  return MEMORY[0x1E0DEB5B0]();
}

uint64_t sub_1B1035DE0()
{
  return MEMORY[0x1E0DEB6D0]();
}

uint64_t sub_1B1035DEC()
{
  return MEMORY[0x1E0CE0728]();
}

uint64_t sub_1B1035DF8()
{
  return MEMORY[0x1E0CB1CA8]();
}

uint64_t sub_1B1035E04()
{
  return MEMORY[0x1E0CB1CB8]();
}

uint64_t sub_1B1035E10()
{
  return MEMORY[0x1E0CB1D70]();
}

uint64_t sub_1B1035E1C()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t sub_1B1035E28()
{
  return MEMORY[0x1E0DF2288]();
}

uint64_t sub_1B1035E34()
{
  return MEMORY[0x1E0DF2290]();
}

uint64_t sub_1B1035E40()
{
  return MEMORY[0x1E0DEF8E8]();
}

uint64_t sub_1B1035E4C()
{
  return MEMORY[0x1E0DEF900]();
}

uint64_t sub_1B1035E58()
{
  return MEMORY[0x1E0CB1FF0]();
}

uint64_t sub_1B1035E64()
{
  return MEMORY[0x1E0DEB940]();
}

uint64_t sub_1B1035E70()
{
  return MEMORY[0x1E0DEBB68]();
}

uint64_t sub_1B1035E7C()
{
  return MEMORY[0x1E0DEBC20]();
}

uint64_t sub_1B1035E88()
{
  return MEMORY[0x1E0DEBC90]();
}

uint64_t sub_1B1035E94()
{
  return MEMORY[0x1E0DEBE50]();
}

uint64_t sub_1B1035EA0()
{
  return MEMORY[0x1E0DEBFC8]();
}

uint64_t sub_1B1035EAC()
{
  return MEMORY[0x1E0DEBFE8]();
}

uint64_t sub_1B1035EB8()
{
  return MEMORY[0x1E0DEC010]();
}

uint64_t sub_1B1035EC4()
{
  return MEMORY[0x1E0DEC058]();
}

uint64_t sub_1B1035ED0()
{
  return MEMORY[0x1E0DEC060]();
}

uint64_t sub_1B1035EDC()
{
  return MEMORY[0x1E0DEC068]();
}

uint64_t sub_1B1035EE8()
{
  return MEMORY[0x1E0DEC1B8]();
}

uint64_t sub_1B1035EF4()
{
  return MEMORY[0x1E0DEC1D8]();
}

uint64_t sub_1B1035F00()
{
  return MEMORY[0x1E0DEC1F0]();
}

uint64_t sub_1B1035F0C()
{
  return MEMORY[0x1E0DEC200]();
}

uint64_t sub_1B1035F18()
{
  return MEMORY[0x1E0DEC2A8]();
}

uint64_t sub_1B1035F24()
{
  return MEMORY[0x1E0DEC2B0]();
}

uint64_t sub_1B1035F30()
{
  return MEMORY[0x1E0DEC470]();
}

uint64_t sub_1B1035F3C()
{
  return MEMORY[0x1E0DEC478]();
}

uint64_t sub_1B1035F48()
{
  return MEMORY[0x1E0DEC480]();
}

uint64_t sub_1B1035F54()
{
  return MEMORY[0x1E0DEC488]();
}

uint64_t sub_1B1035F60()
{
  return MEMORY[0x1E0DEC498]();
}

uint64_t sub_1B1035F6C()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t sub_1B1035F78()
{
  return MEMORY[0x1E0DEC660]();
}

uint64_t sub_1B1035F84()
{
  return MEMORY[0x1E0DEC670]();
}

uint64_t sub_1B1035F90()
{
  return MEMORY[0x1E0DEC680]();
}

uint64_t sub_1B1035F9C()
{
  return MEMORY[0x1E0DEC688]();
}

uint64_t sub_1B1035FA8()
{
  return MEMORY[0x1E0DEC6C0]();
}

uint64_t sub_1B1035FB4()
{
  return MEMORY[0x1E0DEC6C8]();
}

uint64_t sub_1B1035FC0()
{
  return MEMORY[0x1E0DEC6E0]();
}

uint64_t sub_1B1035FCC()
{
  return MEMORY[0x1E0DEC700]();
}

uint64_t sub_1B1035FD8()
{
  return MEMORY[0x1E0DEC708]();
}

uint64_t sub_1B1035FE4()
{
  return MEMORY[0x1E0DEC888]();
}

uint64_t sub_1B1035FF0()
{
  return MEMORY[0x1E0DEC8E0]();
}

uint64_t sub_1B1035FFC()
{
  return MEMORY[0x1E0DEC980]();
}

uint64_t sub_1B1036008()
{
  return MEMORY[0x1E0DEC990]();
}

uint64_t sub_1B1036014()
{
  return MEMORY[0x1E0DECBE0]();
}

uint64_t sub_1B1036020()
{
  return MEMORY[0x1E0DECBE8]();
}

uint64_t sub_1B103602C()
{
  return MEMORY[0x1E0DECD38]();
}

uint64_t sub_1B1036038()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t sub_1B1036044()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_1B1036050()
{
  return MEMORY[0x1E0DECD70]();
}

uint64_t sub_1B103605C()
{
  return MEMORY[0x1E0DECF28]();
}

uint64_t sub_1B1036068()
{
  return MEMORY[0x1E0DECF38]();
}

uint64_t sub_1B1036074()
{
  return MEMORY[0x1E0DECF40]();
}

uint64_t sub_1B1036080()
{
  return MEMORY[0x1E0DECF48]();
}

uint64_t sub_1B103608C()
{
  return MEMORY[0x1E0DECF58]();
}

uint64_t sub_1B1036098()
{
  return MEMORY[0x1E0DECF60]();
}

uint64_t sub_1B10360A4()
{
  return MEMORY[0x1E0DECF88]();
}

uint64_t sub_1B10360B0()
{
  return MEMORY[0x1E0DECFC0]();
}

uint64_t sub_1B10360BC()
{
  return MEMORY[0x1E0DECFF0]();
}

uint64_t sub_1B10360C8()
{
  return MEMORY[0x1E0DED038]();
}

uint64_t sub_1B10360D4()
{
  return MEMORY[0x1E0DED040]();
}

uint64_t sub_1B10360E0()
{
  return MEMORY[0x1E0DED048]();
}

uint64_t sub_1B10360EC()
{
  return MEMORY[0x1E0DED120]();
}

uint64_t sub_1B10360F8()
{
  return MEMORY[0x1E0DED1D0]();
}

uint64_t sub_1B1036104()
{
  return MEMORY[0x1E0DED290]();
}

uint64_t sub_1B1036110()
{
  return MEMORY[0x1E0DED2B8]();
}

uint64_t sub_1B103611C()
{
  return MEMORY[0x1E0DED388]();
}

uint64_t sub_1B1036128()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_1B1036134()
{
  return MEMORY[0x1E0DED628]();
}

uint64_t sub_1B1036140()
{
  return MEMORY[0x1E0DED630]();
}

uint64_t sub_1B103614C()
{
  return MEMORY[0x1E0DED638]();
}

uint64_t sub_1B1036158()
{
  return MEMORY[0x1E0DED648]();
}

uint64_t sub_1B1036164()
{
  return MEMORY[0x1E0DED658]();
}

uint64_t sub_1B1036170()
{
  return MEMORY[0x1E0DED6C8]();
}

uint64_t sub_1B103617C()
{
  return MEMORY[0x1E0DED6D0]();
}

uint64_t sub_1B1036188()
{
  return MEMORY[0x1E0DED6D8]();
}

uint64_t sub_1B1036194()
{
  return MEMORY[0x1E0DED6E8]();
}

uint64_t sub_1B10361A0()
{
  return MEMORY[0x1E0DED980]();
}

uint64_t sub_1B10361AC()
{
  return MEMORY[0x1E0DED998]();
}

uint64_t sub_1B10361B8()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_1B10361C4()
{
  return MEMORY[0x1E0CB2650]();
}

uint64_t sub_1B10361D0()
{
  return MEMORY[0x1E0DEDB10]();
}

uint64_t sub_1B10361DC()
{
  return MEMORY[0x1E0DEDB18]();
}

uint64_t sub_1B10361E8()
{
  return MEMORY[0x1E0DEDB20]();
}

uint64_t sub_1B10361F4()
{
  return MEMORY[0x1E0DEDB28]();
}

uint64_t sub_1B1036200()
{
  return MEMORY[0x1E0DEDED8]();
}

uint64_t sub_1B103620C()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_1B1036218()
{
  return MEMORY[0x1E0DEDF10]();
}

uint64_t sub_1B1036224()
{
  return MEMORY[0x1E0DEDF18]();
}

uint64_t sub_1B1036230()
{
  return MEMORY[0x1E0DEDF30]();
}

uint64_t sub_1B103623C()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t sub_1B1036248()
{
  return MEMORY[0x1E0DEE220]();
}

uint64_t sub_1B1036254()
{
  return MEMORY[0x1E0DEE228]();
}

uint64_t sub_1B1036260()
{
  return MEMORY[0x1E0DEE230]();
}

uint64_t sub_1B103626C()
{
  return MEMORY[0x1E0DEE238]();
}

uint64_t sub_1B1036278()
{
  return MEMORY[0x1E0DEE240]();
}

uint64_t sub_1B1036284()
{
  return MEMORY[0x1E0DEE258]();
}

uint64_t sub_1B1036290()
{
  return MEMORY[0x1E0DEE260]();
}

uint64_t sub_1B103629C()
{
  return MEMORY[0x1E0DEE270]();
}

uint64_t sub_1B10362A8()
{
  return MEMORY[0x1E0DEE8B8]();
}

uint64_t sub_1B10362B4()
{
  return MEMORY[0x1E0DEE8E0]();
}

uint64_t sub_1B10362C0()
{
  return MEMORY[0x1E0DEE8E8]();
}

uint64_t sub_1B10362CC()
{
  return MEMORY[0x1E0DEE8F8]();
}

uint64_t sub_1B10362D8()
{
  return MEMORY[0x1E0DEE978]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_isClassOrObjCExistentialType()
{
  return MEMORY[0x1E0DEE9F8]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1E0DEEA28]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1E0DEEA40]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

long double fmod(long double __x, long double __y)
{
  long double result;

  MEMORY[0x1E0C83440](__x, __y);
  return result;
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1E0C83E68](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

uint64_t os_variant_has_internal_content()
{
  return MEMORY[0x1E0C849F0]();
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1E0DEEA98]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1E0DEEAB8]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x1E0DEEAC0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1E0DEEAD8]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1E0DEEAE8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1E0DEEAF0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1E0DEEB28]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x1E0DF0F88]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1E0DF0F90]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x1E0DF0FA0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x1E0DF0FA8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1E0DEEB68]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1E0DEEBA8]();
}

uint64_t swift_dynamicCastUnknownClass()
{
  return MEMORY[0x1E0DEEBD0]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1E0DEEBF8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1E0DEEC00]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1E0DEEC08]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x1E0DEEC18]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x1E0DEEC38]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1E0DEEC40]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEC48]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1E0DEEC50]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1E0DEECB0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1E0DEECB8]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x1E0DEECC0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1E0DEECC8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1E0DEECE0]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x1E0DEECE8]();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return MEMORY[0x1E0DEECF0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1E0DEECF8]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x1E0DEED08]();
}

uint64_t swift_getTupleTypeLayout3()
{
  return MEMORY[0x1E0DEED10]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1E0DEED20]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1E0DEED38]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1E0DEED40]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1E0DEED58]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x1E0DEED60]();
}

uint64_t swift_initEnumMetadataSingleCase()
{
  return MEMORY[0x1E0DEED68]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1E0DEED78]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1E0DEED88]();
}

uint64_t swift_isUniquelyReferenced_native()
{
  return MEMORY[0x1E0DEEDB8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1E0DEEDE8]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1E0DEEE38]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1E0DEEE50]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1E0DEEE80]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1E0DEEE98]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEEA0]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1E0DF1000]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1E0DF1008]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1E0DF1010]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x1E0DF1050]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1E0DEEED8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1E0DEEF20]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1E0DEEF38]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1E0DEEF40]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1E0DEEF48]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1E0DEEF78]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x1E0DEEF80]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1E0DEEF98]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1E0DEEFA0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1E0DEEFA8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1E0DEEFC0]();
}

